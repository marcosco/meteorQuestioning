{ "items" : [ { "answer_count" : 3,
        "answers" : [ { "body" : "<p>Is there any reason you need to use a regex? Why not just a simple string search? It does exactly the same thing, buts easier to understand.</p>\n\n<pre><code>myString.search(\"fred=f\");\n</code></pre>\n\n<p>Tyler.</p>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<p>EDIT: Changed the expression. Previous version was limited to <strong>99</strong> characters.</p>\n\n<p>EDIT2: Improved the expression, now matches more cases.</p>\n\n<p>I have made something like this</p>\n\n<pre><code>(domain.com/directory/.*fred=(?!f$)(?!f&).*)|(domain.com/directory/$)|(domain.com/directory/\\?(?!.*fred=f).*)\n</code></pre>\n\n<p>and tested it on the following strings</p>\n\n<ol>\n<li><strong>domain.com/directory/?foo=f&bar=f</strong></li>\n<li><strong>domain.com/directory/?foo=bar</strong></li>\n<li><strong>domain.com/directory/?aaa=bar</strong></li>\n<li><strong>domain.com/directory/</strong></li>\n<li><strong>domain.com/directory/?fred=a</strong></li>\n<li><strong>domain.com/directory/?fred=foo</strong></li>\n<li><strong>domain.com/directory/?foo=bar&fred=foo</strong></li>\n<li>domain.com/directory/?fred=f&aaaw=bbb</li>\n<li>domain.com/directory/?fred=f</li>\n<li>domain.com/directory/?foo=bar&fred=f</li>\n</ol>\n\n<p>My regexp matched the ones in bold. \nI have tested it at <a href=\"http://www.regextester.com/\" rel=\"nofollow\">www.RegexTester.com</a></p>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>One of my colleagues provided the basis for this answer:</p>\n\n<pre><code>http://www.domain.com/directory/(?!.*(\\?|&)fred=f($|&|#))(\\?|#|$)\n</code></pre>\n\n<p>This regex matches:</p>\n\n<ul>\n<li><code>http://www.domain.com/directory/</code></li>\n<li><code>http://www.domain.com/directory/?fred=a</code></li>\n<li><code>http://www.domain.com/directory/?fred=foo</code></li>\n<li><code>http://www.domain.com/directory/?foo=bar</code></li>\n</ul>\n\n<p>but not:</p>\n\n<ul>\n<li><code>http://www.domain.com/directory/?fred=f</code></li>\n<li><code>http://www.domain.com/directory/?fred=f&a=b</code></li>\n<li><code>http://www.domain.com/directory/?a=b&fred=f</code></li>\n</ul>\n",
              "is_accepted" : true,
              "score" : 0
            }
          ],
        "body" : "<p>I need to write a regex which will match URLs that do <strong>not</strong> have a specific query string name/value pair <strong>anywhere</strong> in its URL.  All other query string names, and all other query string values with the same name should be matched.  Other pages in the same directory (or sub-directories) should not be matched.  </p>\n\n<p>For example, suppose the base URL that I need to match is:</p>\n\n<pre>http://www.domain.com/directory/</pre>\n\n<p>The query string name and value that I need to exclude from matches is:</p>\n\n<pre>fred=f</pre>\n\n<p>So far, I’ve got:</p>\n\n<pre>http://www\\.domain\\.com/directory/(?!(\\?|&)fred=f$)</pre>\n\n<p>Which matches:</p>\n\n<ul>\n<li><a href=\"http://www.domain.com/directory/\" rel=\"nofollow\">http://www.domain.com/directory/</a> </li>\n<li><a href=\"http://www.domain.com/directory/?fred=a\" rel=\"nofollow\">http://www.domain.com/directory/?fred=a</a></li>\n<li><a href=\"http://www.domain.com/directory/?fred=foo\" rel=\"nofollow\">http://www.domain.com/directory/?fred=foo</a></li>\n</ul>\n\n<p>But not:</p>\n\n<ul>\n<li><a href=\"http://www.domain.com/directory/?fred=f\" rel=\"nofollow\">http://www.domain.com/directory/?fred=f</a></li>\n</ul>\n\n<p>The problem is that this regex also matches:</p>\n\n<ul>\n<li><a href=\"http://www.domain.com/directory/?foo=bar&fred=f\" rel=\"nofollow\">http://www.domain.com/directory/?foo=bar&fred=f</a></li>\n</ul>\n\n<p>If I use this regex instead:</p>\n\n<pre><code>(?i)http://www\\.domain\\.com/directory/[a-z]*(?!(\\?|&)fred=f$)\n</code></pre>\n\n<p>Then this URL is matched:</p>\n\n<ul>\n<li><a href=\"http://www.domain.com/directory/foobar?fred=f\" rel=\"nofollow\">http://www.domain.com/directory/foobar?fred=f</a></li>\n</ul>\n\n<p>(It seems that the [a-z] is stronger than the disallow group.)  </p>\n\n<p>How can I prevent matches when the string exists anywhere in the pattern?</p>\n\n<p>(This will be used in an ActionScript3/ECMAScript3 regex engine.)  </p>\n",
        "creation_date" : 1301953515,
        "last_activity_date" : 1422237113,
        "question_id" : 5544718,
        "score" : 0,
        "tags" : [ "javascript",
            "regex",
            "actionscript-3",
            "url",
            "query-string"
          ],
        "title" : "How can I exclude a string anyhwere in the pattern from matches?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>Here's a compatibility table for you.</p>\n\n<p><a href=\"http://kangax.github.com/es5-compat-table/\">http://kangax.github.com/es5-compat-table/</a></p>\n\n<p>See the <code>Getter in property initializer</code> and <code>Setter in property initializer</code> rows.</p>\n\n<p>According to the table:</p>\n\n<ul>\n<li>Firefox 4</li>\n<li>Safari 5</li>\n<li>Chrome 7-11</li>\n</ul>\n\n<p>Other browsers (including IE9) are not given a <code>Yes</code> or <code>No</code>, so perhaps they're untested. I'm pretty sure IE9 supports it.</p>\n",
              "is_accepted" : true,
              "score" : 7
            } ],
        "body" : "<p>Which browsers do not support the get and set methods for object prototypes? I believe this is a feature of ES5, an I know it works in Chrome, but I am wondering if it is safe to use for ajax apps. Here's an example:</p>\n\n<pre><code>var foo = function () {};\nfoo.prototype = {\n    get name () {\n        return this._name;\n    },\n    set name (n) {\n        this._name = n || \"bar\";\n    }\n};\n</code></pre>\n",
        "creation_date" : 1305516150,
        "last_activity_date" : 1422237107,
        "question_id" : 6012897,
        "score" : 6,
        "tags" : [ "javascript",
            "cross-browser",
            "ecmascript-5"
          ],
        "title" : "Javascript get and set availability in browsers"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p>ECMAScript 5 was actually designed in such way so that implementations <strong>don't need to be \"updated to run\" on it</strong>. </p>\n\n<p>There are few changes in existing behavior but mainly ES5 adds new native objects (e.g. <code>Object.create</code>, <code>Array.prototype.map</code>, <code>String.prototype.trim</code>, etc.) and standardizes some of the existing de-facto features (from ubiquitous \"line terminators in string literals\", \"property access on strings\", and \"indirect eval behavior\" to less popular \"accessors\" and array/string extensions).</p>\n\n<p>The biggest change in behavior — strict mode — was made opt-in for the very same reason; to make transition from ES3 to ES5 less painful.</p>\n\n<p>Having said that, <strong>V8 does implement</strong> a noticeable chunk of ES5 features, including strict mode (one of the recent additions).</p>\n\n<p>If you look at my <a href=\"http://kangax.github.com/es5-compat-table/\">ES5 compat. table</a> you can see ES5 features implemented in Chrome — which should closely (and I would think — completely) correlate to V8.</p>\n\n<p>You can also see that support for strict mode is <a href=\"http://kangax.github.com/es5-compat-table/strict-mode/\">largely implemented in Chrome</a> which means that it should be in V8 as well. To double check, I just ran this code in console (v8 v3.2.3.1) and got SyntaxError as expected:</p>\n\n<pre><code>> (function(){\"use strict\"; with({x:1}) return x})()\n(shell):1: SyntaxError: Strict mode code may not include a with statement\n(function(){\"use strict\"; with({x:1}) return x})()\n                          ^^^^\n</code></pre>\n\n<p>So there you have it. V8 definitely implements <strong>majority of ES5 features</strong>, including strict mode ;)</p>\n",
              "is_accepted" : false,
              "score" : 25
            },
            { "body" : "<p>ES5 and ES6 also include the ability to import objects and/or methods, like in Java... Pretty overdue feature, I would think.</p>\n",
              "is_accepted" : false,
              "score" : -1
            }
          ],
        "body" : "<p>I noticed that <a href=\"http://code.google.com/p/v8/\">v8</a> is rather mute on the issue of ECMAScript 5th edition.</p>\n\n<blockquote>\n  <p>V8 implements ECMAScript as specified in ECMA-262, 3rd edition, and runs on Windows XP and Vista, Mac OS X 10.5 (Leopard), and Linux systems that use IA-32 or ARM processors.</p>\n</blockquote>\n\n<p>Even the bug tracker seems quiet...</p>\n\n<ul>\n<li><a href=\"http://code.google.com/p/v8/issues/list?can=1&q=ECMA+5&colspec=ID+Type+Status+Priority+Owner+Summary+HW+OS+Area+Stars&x=priority&y=owner&cells=tiles\">ECMA 5</a></li>\n<li><a href=\"http://code.google.com/p/v8/issues/list?can=1&q=Javascript+1.8&colspec=ID+Type+Status+Priority+Owner+Summary+HW+OS+Area+Stars&x=priority&y=owner&cells=tiles\">Javascript 1.8</a></li>\n</ul>\n\n<p>On <a href=\"http://code.google.com/p/v8/issues/detail?id=890&can=1&q=Javascript%201.8&colspec=ID%20Type%20Status%20Priority%20Owner%20Summary%20HW%20OS%20Area%20Stars\">one bug</a> you can find <a href=\"http://code.google.com/u/@VhFRRlBWBBdCWAZ0/\">a commiter</a> writing this:</p>\n\n<blockquote>\n  <p>V8 is an implementation of ECMAScript, not JavaScript. The latter is a non-standardized extension of ECMAScript made by Mozilla. V8 is intended to be plug-in compatible with JSC, the ECMAScript implementation in WebKit/Safari. As such it implements a number of non-standard extensions of ECMAScript that are also in JSC, and most of these are also in Mozilla's JavaScript languages. There is no plan to add non-standard features that are not in JSC to V8.</p>\n</blockquote>\n\n<p>Interestingly enough he wrote that on Oct 8, 2010, when ECMAScript 5 was published on December 2009, and two months earlier Javascript 1.8.5 -- a superset of ECMAScript 5 -- was released.</p>\n\n<p>So the question remains when will Google update v8 to run on ECMAScript 5th edition? Is there even a plan to upgrade to the latest standardization of ECMAScript?</p>\n",
        "creation_date" : 1306363131,
        "last_activity_date" : 1422237104,
        "question_id" : 6131803,
        "score" : 14,
        "tags" : [ "javascript",
            "google-chrome",
            "v8",
            "ecmascript-5",
            "ecma262"
          ],
        "title" : "When will v8 implement ECMAScript 5?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>Because the syntax doesn't work with an implicit semicolon at the end of the line.</p>\n\n<p>If you add the semicolon:</p>\n\n<pre><code>function bar () {\n  var a = \"BAR\";\n  return a;\n    .toLowerCase()\n  ;\n}\n</code></pre>\n\n<p>you would get a syntax error on the next line.</p>\n",
              "is_accepted" : true,
              "score" : 2
            } ],
        "body" : "<p>I've seen, very often in fact, this cited as why to use K&R style when writing ECMAScript.</p>\n\n<pre><code>function foo () {\n  return\n    {\n      foo: 1\n    }\n  ;\n}\n</code></pre>\n\n<p>That doesn't work in ECMAScript or Javascript: implicit-semicolon addition results in the function returning <code>undefined</code>. However I see this all the time too </p>\n\n<pre><code>function bar () {\n  var a = \"BAR\";\n  return a\n    .toLowerCase()\n  ;\n}\n</code></pre>\n\n<p>And, I'm wondering why implicit semicolons doesn't result in that returning <code>\"BAR\"</code>, why does <code>bar</code> get returned there?</p>\n",
        "creation_date" : 1306876766,
        "last_activity_date" : 1422237102,
        "question_id" : 6193692,
        "score" : 3,
        "tags" : [ "javascript",
            "coding-style",
            "whitespace",
            "ecmascript-5"
          ],
        "title" : "Understanding ECMAScript implicit semicolons and whitespace parsing"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>Rhino in the shipped JDK (from Sun) is version 1.6R2. It's ancient.  Supposedly it's going to be updated in the 1.7 release.</p>\n\n<p>You can always download Rhino from Mozilla and use their integration facility. I've used the Sun one, and while it's dirt simple it leaves a lot to be desired.</p>\n\n<p><em>edit</em> — as to which ECMAScript standard it is, well, it's a Mozilla release so they've got their own modifications. However 1.6R2 is so old that it doesn't even have things like \".forEach()\". </p>\n",
              "is_accepted" : true,
              "score" : 1
            } ],
        "body" : "<p>Which version of the ECMAScript standard does Java's JavaScript engine Rhino support, how much work is going into fixing bugs and keeping the implementation in sync with the latest standardized version?</p>\n",
        "creation_date" : 1310689580,
        "last_activity_date" : 1422237099,
        "question_id" : 6701489,
        "score" : 1,
        "tags" : [ "java",
            "javascript",
            "programming-languages",
            "rhino"
          ],
        "title" : "Which JavaScript (ECMAScript) version does Java's Rhino implementation implement (and what's the update policy?)"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>Use <code>get_webs()</code> function:</p>\n\n<pre><code>var clientContext = new SP.ClientContext.get_current();\nthis.webs = clientContext.get_web().get_webs();\n</code></pre>\n\n<p>There is a similar question on <a href=\"http://sharepoint.stackexchange.com/questions/18776/fetch-list-of-sites-in-site-collection-into-jquery\">sharepoint.stackexchange.com</a></p>\n",
              "is_accepted" : false,
              "score" : 4
            } ],
        "body" : "<p>I'm trying to use ECMA script in Sharepoint to data on sites.\nIt's working well for the top root site when I'm using the SP.ClientContext.get_current() method, but I can't seem to get the subsites of this site.\nDoes anyone know what method I should use to achive that?</p>\n\n<p>Thanks in advance\nAvi</p>\n",
        "creation_date" : 1314020553,
        "last_activity_date" : 1422237086,
        "question_id" : 7148395,
        "score" : 2,
        "tags" : [ "javascript",
            "sharepoint"
          ],
        "title" : "Get subsites in Sharepoint ECMAScript"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>First of all, you use the variable name <code>board</code> in your array declaration declaration, but both the variable names <code>grid</code> and <code>board</code> in your code.  I will assume that you meant for those two to be the same name <code>grid</code>.</p>\n\n<p>In your example, <code>grid[x][y]</code> would be the contents of the inner array which is a number 0.  A number is not an object and doesn't take arbitrary properties like you're trying to assign it in the for loop with <code>grid[x][y].f = 0</code> which is essentially trying to say <code>0.f = 0;</code>.</p>\n\n<p>To get help on how this should work, please desribe what you're actually trying to accomplish because you data structure doesn't match your code and we can't know which you need to change until we know what you're actually trying to do.</p>\n",
              "is_accepted" : false,
              "score" : 2
            } ],
        "body" : "<p>I believe that I have a simple problem on my hands, yet I cant figure out what is worng with this code. I want to give a property to a javascript array, yet for some reason:</p>\n\n<pre><code>board = [[0], [0], [0]];\n    for(var x = 0; x < board.length; x++) {\n        for(var y = 0; y < board[x].length; y++) {\n            grid[x][y].f = 0;\n        }   \n    }\n\ndocument.write(board[0][0].f);\n</code></pre>\n\n<p>I get undefined as a result of this.</p>\n",
        "creation_date" : 1315372954,
        "last_activity_date" : 1422237084,
        "question_id" : 7329195,
        "score" : 0,
        "tags" : [ "javascript",
            "arrays",
            "oop",
            "properties"
          ],
        "title" : "Problem with giving properties to the index of an array"
      },
      { "answer_count" : 3,
        "answers" : [ { "body" : "<p>A popular source many folks use is: <a href=\"http://kangax.github.com/es5-compat-table/\" rel=\"nofollow\">http://kangax.github.com/es5-compat-table/</a></p>\n\n<p>For <strong>Mozilla</strong>: <a href=\"https://developer.mozilla.org/En/JavaScript/ECMAScript_5_support_in_Mozilla\" rel=\"nofollow\">https://developer.mozilla.org/En/JavaScript/ECMAScript_5_support_in_Mozilla</a></p>\n\n<p>For <strong>Webkit</strong>: <a href=\"http://labs.trolltech.com/blogs/2010/01/15/ecmascript-5-and-webkitjavascriptcore/\" rel=\"nofollow\">http://labs.trolltech.com/blogs/2010/01/15/ecmascript-5-and-webkitjavascriptcore/</a></p>\n\n<p>For <strong>IE</strong>: <a href=\"http://www.microsoft.com/download/en/details.aspx?id=14170\" rel=\"nofollow\">http://www.microsoft.com/download/en/details.aspx?id=14170</a></p>\n",
              "is_accepted" : false,
              "score" : 3
            },
            { "body" : "<p>Some commonly referenced sources are</p>\n\n<ul>\n<li>Great compatibility tables at <a href=\"http://quirksmode.org/compatibility.html\" rel=\"nofollow\">QuirksMode</a>. Some of them are being updated recently.</li>\n<li><a href=\"http://kangax.github.com/es5-compat-table/\" rel=\"nofollow\">Kangax</a> sums up ES5 support very well.</li>\n<li>Microsoft released <a href=\"http://www.microsoft.com/download/en/details.aspx?id=14170\" rel=\"nofollow\">reports of IE standards support</a>.</li>\n<li><a href=\"http://caniuse.com/#cats=JS_API\" rel=\"nofollow\">Can I Use</a> also includes some information about support of a few Javascript APIs.</li>\n</ul>\n",
              "is_accepted" : true,
              "score" : 4
            },
            { "body" : "<p>You might find Thomas Lahn's <a href=\"http://pointedears.de/scripts/test/es-matrix/\" rel=\"nofollow\">ECMAScript support matrix</a> useful. </p>\n\n<p>I doubt very much that there is a definitive list of all the bugs, non-conformities or inconsistencies of browsers, even if restricted to some (undefined) set of \"major browsers\". The usual strategy is to program for standards and use feature detection and documented alternatives to work around known inconsistencies. Then test as widely as reasonable to discover the unknowns.</p>\n\n<p>While browsers frequently introduce new features, they rarely remove old ones without a very long period of deprecation. So well written code should continue to work in new browsers even if if contains feature tests to work around inconsistencies in browsers that are no longer in use.</p>\n",
              "is_accepted" : false,
              "score" : 1
            }
          ],
        "body" : "<p>Is anyone aware of a definitive list of areas of missing support for ECMAScript/JavaScript in the major browsers (I'm talking IE7+, Firefox, Chrome, Safari and Opera).</p>\n\n<p>Obviously we do feature detection in our code, but I'd like a list of features that we need to perform detection on ideally.</p>\n",
        "creation_date" : 1321093192,
        "last_activity_date" : 1422237080,
        "question_id" : 8103833,
        "score" : 2,
        "tags" : [ "javascript",
            "browser",
            "cross-browser",
            "ecmascript-5"
          ],
        "title" : "List of areas missing support for ECMAScript/JavaScript in major browsers?"
      },
      { "answer_count" : 3,
        "answers" : [ { "body" : "<p>Yes, technically its totally valid and you can safely use it. An object key needs to be a \"string\", which does not exclude an empty string.</p>\n\n<p>If that is convinient and useful is another story.</p>\n\n<p>See <a href=\"http://stackoverflow.com/questions/8343938/should-i-use-an-empty-property-key\">Should I use an empty property key?</a></p>\n\n<hr>\n\n<p>Since the 'empty string' is one of the <code>falsy values</code> in ecmascript, consider the following example:</p>\n\n<pre><code>var foo = {\n    ':-)': 'face',\n    'answer': 42,\n    '': 'empty'\n};\n\nObject.keys( foo ).forEach(function( key ) {\n    if( key ) {\n        console.log(key);\n    }\n});\n</code></pre>\n\n<p>That snippet would only log <code>:-)</code> and <code>answer</code>. So that is one pitfall for doing this.</p>\n",
              "is_accepted" : true,
              "score" : 11
            },
            { "body" : "<p><a href=\"http://es5.github.com/#x11.1.5\" rel=\"nofollow\">Seems fine</a> (the <code>(*)</code> apply to your case):</p>\n\n<pre><code>PropertyAssignment :\n    (*) PropertyName : AssignmentExpression\n    get PropertyName ( ) { FunctionBody } \n    set PropertyName ( PropertySetParameterList ) { FunctionBody }\n\nPropertyName :\n    IdentifierName\n    (*) StringLiteral\n    NumericLiteral\n\nStringLiteral ::\n    \" DoubleStringCharacters opt \"\n    (*) ' SingleStringCharacters opt '\n</code></pre>\n\n<p>Since the characters are optional, an empty string is valid.</p>\n\n<p>Just note that <code>IdentifierName</code> (i.e. without <code>'</code> or <code>\"</code>) does not allow an empty string:</p>\n\n<pre><code>IdentifierName ::\n    IdentifierStart\n    IdentifierName IdentifierPart\n\nIdentifierStart ::\n    UnicodeLetter\n    $\n    _ \n    \\ UnicodeEscapeSequence\n</code></pre>\n\n<p>So, <code>{'': 123}</code> is valid whereas <code>{: 123}</code> is not.</p>\n",
              "is_accepted" : false,
              "score" : 2
            },
            { "body" : "<p>Today I faced with trouble in Chrome 33.0.1750.146.</p>\n\n<pre><code>obj = {\n    ...\n    \"\": \"some text\",\n    ...\n};\n...\nvar a = \"\";\nif (typeof obj[a] == 'undefined') {\n   ...\n}\n</code></pre>\n\n<p>When I'm debugging or executing this script the condition is always \"True\". But if I'm trying to check value of <strong>(typeof obj[a] == 'undefined')</strong> in console I'm getting \"False\" always.\nIt was very hard to find the trouble. And I think you have not to use empty keys (and me too).</p>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>I've been tinkering with objects and seemingly you can have '' (an empty string) as a property name, like so:</p>\n\n<pre><code>o = {\n    '':    'hello',\n    1:     'world',\n    'abc': ':-)',\n};\nconsole.log(o['']);\n</code></pre>\n\n<p>Seems to work just fine, however I'm curious to know, <strong>is this really valid?</strong> I've poked at the ECMA specs and asked our ever-knowledgeable friend Google variations of the question and my conclusion is that <em>I don't know</em>.</p>\n\n<p><strong>My sources</strong></p>\n\n<p><a href=\"http://asenbozhilov.com/articles/identifiers-en.html\">http://asenbozhilov.com/articles/identifiers-en.html</a><br>\n<a href=\"http://www.jibbering.com/faq/faq_notes/square_brackets.html\">http://www.jibbering.com/faq/faq_notes/square_brackets.html</a></p>\n",
        "creation_date" : 1325849504,
        "last_activity_date" : 1422237077,
        "question_id" : 8757177,
        "score" : 14,
        "tags" : [ "javascript" ],
        "title" : "Can I use an empty string as an object identifier?"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p>Ok, according to <a href=\"https://www.molyb.org/confluence/display/molyb/storeExtractedText-action-moly\" rel=\"nofollow\">this page</a> in the molybdenum api docs, the results will be all of the groups concatenated together. Given that you just want the char between the two <code>&nbsp;</code>'s then it's not good enough to match the whole thing and then pull out the group. Instead you'll need to do something like this:</p>\n\n<pre><code>(?<=Vahvistustunnus&nbsp;)[a-zA-Z](?=&nbsp;)\n</code></pre>\n\n<p><strong>Warning</strong>\nThis might not work for you because <a href=\"http://www.regular-expressions.info/lookaround.html#lookbehind\" rel=\"nofollow\">lookbehinds</a> <code>(?<=pattern)</code> are not available in all regex flavors. Specifically, i think that because molybdenum is a firefox extension, then it's likely using ECMA (javascript) regex flavor. And ECMA doesn't support lookbehinds. </p>\n\n<p>If that's the case, then i'm gonna have to ask someone else to answer your question as my regex ninja (amateur) skills don't go much further than that. If you were using the regex in javascript code, then there are ways around this limitation, but based on your description, it sounds like you have to solve this problem with nothing but a raw regex?</p>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<p>Looks like it uses JavaScript and if so</p>\n\n<pre><code>var str = \"Vahvistustunnus&nbsp;M&nbsp;:\";\nvar patt = \"Vahvistustunnus&nbsp;([A-Z])&nbsp;:\";\nvar result = str.match(patt)[1];\n</code></pre>\n\n<p>should work.</p>\n",
              "is_accepted" : false,
              "score" : 1
            }
          ],
        "body" : "<p>Hi need to extract ONE letter from a string.</p>\n\n<p>The string i have is a big block of html, but the part where i need to search in is this text:</p>\n\n<pre><code>Vahvistustunnus&nbsp;M&nbsp;:\n</code></pre>\n\n<p>And I need to get the M inside the nbsp's</p>\n\n<p>So, who is the quickest regex-guru out there? :)</p>\n",
        "creation_date" : 1334584699,
        "last_activity_date" : 1422237070,
        "question_id" : 10175558,
        "score" : 0,
        "tags" : [ "javascript",
            "regex",
            "molybdenum"
          ],
        "title" : "Regex extraction of one letter inside html chunk"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>There are two things that you need to understand here:</p>\n\n<ol>\n<li><code>fetch</code> is asynchronous.</li>\n<li>Some <code>console.log</code>s are asynchronous.</li>\n</ol>\n\n<p>So this is what's happening:</p>\n\n<ol>\n<li>You call <code>@user.fetch()</code> and it launches an AJAX call.</li>\n<li>You call <code>console.log(@user)</code> and that does another bit of asynchronous work but (and this is a big but!), it takes a reference to <code>@user</code> along with it, the reference will be dereferenced when the <code>console.log</code> call does its logging.</li>\n<li>You call <code>console.log(@user.get('email'))</code>, this takes along what <code>@user.get('email')</code> <em>returns</em>, the <code>get</code> call will be executed immediately.</li>\n<li>The AJAX call from <strong>(1)</strong> returns some stuff for <code>@user</code>.</li>\n<li>The <code>console.log</code> calls get around to logging things in the console.</li>\n</ol>\n\n<p>The <code>console.log</code> from <strong>(2)</strong> carries a reference to the <code>@user</code> that <code>fetch</code> populates in <strong>(4)</strong>; by the time <strong>(4)</strong> executes, <code>@user</code> has been populated so you see a full user in the console. When you call <code>@user.get('email')</code> in <strong>(3)</strong>, the <code>fetch</code> hasn't populated <code>@user</code> yet so <code>@user.get('email')</code> is <code>undefined</code> and you're actually saying</p>\n\n<pre><code>console.log(undefined)\n</code></pre>\n\n<p>The arguments for the <code>console.log</code> calls will be evaluated (but the final results that are passed to <code>console.log</code> will not dereferenced!) when you call the function rather than when it finishes executing and puts things in the console.</p>\n\n<p>So you have various asynchronous things mixing together and therein lies the confusion.</p>\n\n<p>If you change your code to this:</p>\n\n<pre><code>@user = new models.User\n@user.fetch(success: =>\n    console.log(@user) \n    console.log(@user.get('email'))   \n)\n</code></pre>\n\n<p>you'll get the results that you're expecting.</p>\n",
              "is_accepted" : true,
              "score" : 3
            } ],
        "body" : "<p>I'm writing an app using coffeescript with coffee toaster (an awesome NPM module for stitching) that builds my app.js file.  </p>\n\n<p>Lots of my application classes and templates require info about the current user so I have an instance of class User (extends Backbone.Model) stored as a property of my main Application class (extends Backbone.Router).  </p>\n\n<p>As part of the initialization routine I grab the user from the server (which takes care of authentication, roles, account switching etc.). Here's that coffeescript:</p>\n\n<pre><code>@user = new models.User\n@user.fetch()\nconsole.log(@user) \nconsole.log(@user.get('email'))   \n</code></pre>\n\n<p>The first logging statement outputs the correct Backbone.Model attributes object in the console just as it should: </p>\n\n<pre><code>User\n_changing: false\n_escapedAttributes: Object\n_pending: Object\n_previousAttributes: Object\n_silent: Object\nattributes: Object\n  account: Object \n  created_on: \"1983-12-13 00:00:00\"\n  email: \"ben@accomplicecreative.com\"\n  icon: \"0\"\n  id: \"1\"\n  last_login: \"2012-06-07 02:31:38\"\n  name: \"Ben Ipsen\"\n  roles: Object\n__proto__: Object\nchanged: Object\ncid: \"c0\"\nid: \"1\"\n__proto__: ctor\napp.js:228\n</code></pre>\n\n<p>However, the second returns <em>undefined</em> despite the model attributes clearly being there in the console when logged. </p>\n\n<p>And just to make things even more interesting, typing \"window.app.user.get('email')\" into the console manually returns the expected value of \"ben@accomplicecreative.com\"... ?</p>\n\n<p>Just for reference, here's how the initialize method compiles into my app.js file:</p>\n\n<pre><code>Application.prototype.initialize = function() {\n  var isMobile;\n  isMobile = navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry)/);\n  this.helpers = new views.DOMHelpers().initialize().setup_viewport(isMobile);\n  this.user = new models.User();\n  this.user.fetch();\n  console.log(this.user);\n  console.log(this.user.get('email'));\n  return this;\n};\n</code></pre>\n\n<p>I initialize the Application controller in my static HTML like so: </p>\n\n<pre><code>jQuery(document).ready(function(){\n   window.app = new controllers.Application();\n});\n</code></pre>\n\n<p>Suggestions please and thank you!</p>\n",
        "creation_date" : 1339137167,
        "last_activity_date" : 1422237050,
        "question_id" : 10944049,
        "score" : 4,
        "tags" : [ "javascript",
            "backbone.js",
            "coffeescript",
            "scoping"
          ],
        "title" : "backbone.js Model.get() returns undefined, scope using coffeescript + coffee toaster?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>It looks like that you took code above from <a href=\"http://www.learningsharepoint.com/2011/05/28/sharepoint-2010-ecmascript-copymove-files-to-another-document-library-part-2/\" rel=\"nofollow\">here</a>.</p>\n\n<p>Try to be attentively. This code copies selected files (not list items!) to another document library! </p>\n\n<p>For your needs better try to code your own solution. See <a href=\"http://msdn.microsoft.com/en-us/library/ee538253\" rel=\"nofollow\">SharePoint JavaScript Class Library</a> for details. You can have two possible architectures:</p>\n\n<ol>\n<li>Make all work from JavaScript.  And the first your step will be <a href=\"http://msdn.microsoft.com/en-us/library/ee658490\" rel=\"nofollow\">addItem method of SP.List</a>.</li>\n<li>Make processing of selection on client in JavaScript and call your custom server-side component (may be an application page) for items copying (creating copies in new list of already existed items from initial list.). See <a href=\"http://www.codeproject.com/Articles/400720/SharePoint-2010-Export-Selected-Items-to-Excel\" rel=\"nofollow\">this</a> for example.</li>\n</ol>\n\n<p>Also be careful with context.load. It's recommended to write all next code in context.executeQueryAsync. Use Firebug in FF and developer tools in Chrome for debugging your code and to find what is wrong.</p>\n",
              "is_accepted" : false,
              "score" : 1
            } ],
        "body" : "<p>i need a script that copies all my selected list items to an other (custom) list. I found nice solution for documents: </p>\n\n<pre><code>var context = SP.ClientContext.get_current();\nvar web = context.get_web();\ncontext.load(web);\n\nvar _destinationlib = web.get_lists().getByTitle('DestinationLibrary');\ncontext.load(_destinationlib);\nvar notifyId;\nvar currentlibid = SP.ListOperation.Selection.getSelectedList();\n\nvar currentLib = web.get_lists().getById(currentlibid);\n\nvar selectedItems = SP.ListOperation.Selection.getSelectedItems(context);\nvar count = CountDictionary(selectedItems);\n\nfor(var i in selectedItems)\n{\n alert('Now copying ' + i);\n var currentItem =    currentLib.getItemById(selectedItems[i].id);\n context.load(currentItem);\n\nvar File = currentItem.get_file();\ncontext.load(File);\n\n//Excecuting executeQueryAsync to get the loaded values\ncontext.executeQueryAsync\n(\nfunction (sender, args) {\nif(File != null) {\n\nvar _destinationlibUrl =  web.get_serverRelativeUrl() + _destinationlib.get_title() + '/' +  File.get_name();\n\nFile.copyTo(_destinationlibUrl, true);\nnotifyId = SP.UI.Notify.addNotification('Moving file…' + File.get_serverRelativeUrl() + 'to' + _destinationlibUrl, true);\n\n//Excecuting executeQueryAsync to copy the file\ncontext.executeQueryAsync(\nfunction (sender, args) {\nSP.UI.Notify.removeNotification(notifyId);\n\nSP.UI.Notify.addNotification('File copied successfully', false);\n},\nfunction (sender, args) {\nSP.UI.Notify.addNotification('Error copying file', false);\nSP.UI.Notify.removeNotification(notifyId);\nshowError(args.get_message());\n});\n}\n},\nfunction (sender, args) {\nalert('Error occured' + args.get_message());\n}\n);\n}\n</code></pre>\n\n<p>I dont know what i have to change to get it working for normal list items.  I tried to exchange </p>\n\n<pre><code>var File = currentItem.get_file();\n\ncontext.load(File);\n</code></pre>\n\n<p>with </p>\n\n<pre><code>var title = currentItem.get_Title();\ncontext.load(title);\n\nvar number = currentItem.get_item('number');\ncontext.load(number);\n</code></pre>\n\n<p>but it dosnt work. It would be great if somebody can give me a hint what i have to do.</p>\n\n<p>many thx</p>\n\n<p>Fabulus</p>\n",
        "creation_date" : 1340707557,
        "last_activity_date" : 1422237047,
        "question_id" : 11205658,
        "score" : 0,
        "tags" : [ "javascript",
            "sharepoint",
            "sharepoint-2010"
          ],
        "title" : "Copy selected List-Items to an other list with ECMA Script"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>There aren't really strict correspondences between the version numbers Mozilla uses and the ECMAScript standard's version numbers. There's a <a href=\"http://en.wikipedia.org/wiki/ECMAScript#Version_correspondence\" rel=\"nofollow\">table on Wikipedia</a> that might be what you're looking for -- you'll see that JavaScript 1.6 corresponds to ECMAScript 3 and then some additional extensions. <code>[].map</code> specifically was standardized in ECMAScript 5, but to my understanding, the feature was first introduced by Firefox before the ECMAScript 5 standard was even published. (Firefox 1.5 which included JavaScript 1.6 was released on November 29, 2005, and the standard appears to have been published in September 2009.)</p>\n",
              "is_accepted" : true,
              "score" : 2
            } ],
        "body" : "<p>For example, <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/map\">[].map</a> was \"implemented in JavaScript 1.6.\" Is that an ES5 method? How does the 1.6 correlate to an <a href=\"http://en.wikipedia.org/wiki/ECMAScript\">ECMAScript</a> version?</p>\n",
        "creation_date" : 1342128265,
        "last_activity_date" : 1422237035,
        "question_id" : 11460913,
        "score" : 5,
        "tags" : [ "javascript",
            "version",
            "mozilla",
            "ecmascript-5"
          ],
        "title" : "How do JavaScript versions correlate to ECMAScript versions?"
      },
      { "answer_count" : 6,
        "answers" : [ { "body" : "<ol>\n<li>Wikipedia please.</li>\n<li>Javascript is a language, this is probably what you want to learn rather than a spec.</li>\n<li>Welcome in hell, all. <a href=\"http://modernizr.com\" rel=\"nofollow\">Modernizr</a> and <a href=\"http://jquery.com\" rel=\"nofollow\">jQuery</a> exists for a reason. Unless you are doing Javascript on the server side with Node.js for example, in this case you can focus on only one JS Engine (V8 for Node).</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/JavaScript\" rel=\"nofollow\">MDN</a></li>\n<li>Test, Test, Test and re Test. Try never to use too recent features and use libraries.</li>\n<li>MDN tells you which browser supports what.</li>\n</ol>\n",
              "is_accepted" : false,
              "score" : 2
            },
            { "body" : "<ol>\n<li><p>ECMAScript is the scripting language standardized by Ecma International in the ECMA-262 specification and ISO/IEC 16262. The language is widely used for client-side scripting on the web, in the form of several well-known dialects such as JavaScript, JScript, and ActionScript.</p></li>\n<li><p>Depends on you, but I think most commonly used for web dev is JavaScript </p></li>\n<li><p>JavaScript was formalized in the ECMAScript language standard and is primarily used in the form of client-side JavaScript</p></li>\n<li><p>I would recommend <a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\" rel=\"nofollow\">this</a> book </p></li>\n<li><p>By learning more and more about the language itself and writing tests</p></li>\n<li><p>Look <a href=\"http://www.w3schools.com/js/default.asp\" rel=\"nofollow\">here</a></p></li>\n</ol>\n",
              "is_accepted" : false,
              "score" : 2
            },
            { "body" : "<ol>\n<li>They're one and the same - for an history on JavaScript watch the Douglas Crockford webcasts on YouTube. </li>\n</ol>\n\n<p><a href=\"http://youtu.be/_DKkVvOt6dk\" rel=\"nofollow\">http://youtu.be/_DKkVvOt6dk</a>\nhttp://youtu.be/hQVTIJBZook</p>\n\n<p>2,3,4. Start with this <a href=\"http://eloquentjavascript.net/\" rel=\"nofollow\">http://eloquentjavascript.net/</a></p>\n\n<ol>\n<li><p>Libraries like jQuery do a good job in normalising behaviour across browsers.</p></li>\n<li><p>I <em>think</em> this is what you are looking for <a href=\"http://dochub.io/#javascript/\" rel=\"nofollow\">http://dochub.io/#javascript/</a></p></li>\n</ol>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<p>Javascript is the original name when the language was developed by Netscape.</p>\n\n<p>JScript is Microsoft's name of their own implementation.</p>\n\n<p>ECMAScript is the name of the language standard developed by ECMA, from the original Javascript implementation.</p>\n\n<p>So, it's just one language, with different implementations.</p>\n\n<p>The implementations of Javascript and JScript differ somewhat in what they support, but each version supports what's in the corresponding version of the ECMAScript standard. Generally you just use what's supported a few versions back, so that it works in all the browsers that are still in use.</p>\n\n<p>One reference is the <a href=\"https://developer.mozilla.org/en-US/\">Mozilla Developer Network</a>, as Mozilla is the current developer of Javascript. For each method and property you can find which version it is supported in.</p>\n\n<p>JScript is documented at the <a href=\"http://msdn.microsoft.com/en-gb/\">Microsoft Developer Network</a>, and has similar information about support. (Note that all Microsoft documentation is there, not only JScript, so for example you would need to search for \"jscript array\" rather than just \"array\".)</p>\n\n<p>Using a library like jQuery is useful to avoid dealing with some of the compatibility problems between browsers.</p>\n",
              "is_accepted" : true,
              "score" : 8
            },
            { "body" : "<p>It is important to understand, that ECMAScript is a standard, defined in the last century. :D Whereas Javascript is derived from ECMAScript. Derived in a sense, that it implements the standard.</p>\n\n<p>The big difference is, that Javascript actually only exists within the Browser, saying, it is by no means a standard in itself. Every browser can (and a lot do) implement it's own methods.</p>\n\n<p>So, if you seriously want to learn it and write clean code, then IMHO you have to first get familiar with the ECMAScript standard.</p>\n\n<p>To 3: Since Javascript is implemented by the browser, this really depends on what browsers you want to develop code for. Older browser may have to be dealt with trought some seperate handling in your code.</p>\n\n<p>To 5: Again, javascript can check what browser (or what client software in general) requestet the page it is loaded in. Meaning: If bad comes to worse, you can deal with each browser seperately in your code. But most of the time they are pretty compliant (at least the later versions)</p>\n\n<p>On 4 and 6 I'd have to check first for myself.</p>\n\n<p>Hope I could help you out a bit.</p>\n\n<p>Regards</p>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<ol>\n<li><p>ECMAScript is the language, JavaScript and JScript are <em>dialects</em></p></li>\n<li><p>I would, personally, look at and learn JavaScript.</p></li>\n<li><p>It depends on what browsers you want to support, easily googled.</p></li>\n<li><p><a href=\"https://developer.mozilla.org/en-US/docs/JavaScript\" rel=\"nofollow\">MDN</a> is a pretty good web source. <a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\" rel=\"nofollow\">JavaScript: The Good Parts</a> and <a href=\"http://rads.stackoverflow.com/amzn/click/0596000480\" rel=\"nofollow\">JavaScript: The Definitive Guide</a> are both very good books, the first short and concise the latter very detailed.</p></li>\n<li><p>JavaScript libraries like jQuery is very good for this reason. It all comes down to learning all the quirks of the browsers. Google is your friend.</p></li>\n<li><p><a href=\"https://developer.mozilla.org/en-US/docs/JavaScript\" rel=\"nofollow\">MDN</a>.</p></li>\n</ol>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>OK, so I'm trying to learn JavaScript properly so that I can write good, clean client-side code, but whenever I think I'm making progress, something stops me dead in my tracks!</p>\n\n<p>I want to know:</p>\n\n<ol>\n<li><p>What is the different between JavaScript, ECMAScript and JScript?</p></li>\n<li><p>Which should I focus on learning?</p></li>\n<li><p>If these are versioned, which version should I be supporting?</p></li>\n<li><p>Are there any really good references (web / books etc) that are a must have/read?</p></li>\n<li><p>How do I ensure that what I write will be compliant with all major browsers (IE, FF, Safari, Chrome, Opera etc.) ?</p></li>\n<li><p>MOST IMPORTANTLY...Is there a reference of the core objects (Array, Number etc) so I know what is implemented already and what I need to do myself?</p></li>\n</ol>\n\n<p>Thanks.</p>\n",
        "creation_date" : 1345538123,
        "last_activity_date" : 1422237027,
        "question_id" : 12051002,
        "score" : 5,
        "tags" : [ "javascript",
            "jscript"
          ],
        "title" : "What's the difference between  JavaScript, JScript & ECMAScript?"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p>1) Nope. Certainly it won’t restrict to just valid ECMAScript.</p>\n\n<p>2) <a href=\"http://kangax.github.com/es5-compat-table/\" rel=\"nofollow\">http://kangax.github.com/es5-compat-table/</a> is always useful.</p>\n\n<p>3) You can just check to see if it’s defined. E.g.</p>\n\n<pre><code>typeof(Array.isArray) === 'function'; // true in newer browsers, false in IE8\n</code></pre>\n\n<p>4) Your best bet is to read the spec! Using <code>\"use strict\";</code> in your code will also catch some classes of errors and it good practise. More explanation on strict mode at <a href=\"http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/\" rel=\"nofollow\">http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/</a></p>\n\n<p>5) Certainly I wouldn’t replace the original objects. If you’re going to extend properties I’d first double-check that a compliant implementation doesn’t already exist. E.g. PrototypeJS added (before browsers implemented it) a <code>document.getElementsByClassName</code>. When browsers started implementing it natively they found out that sites using Prototype were still using the slow JS-based version. The fix was just to wrap Prototype’s definition in a <code>if (document.getElementsByClassName == undefined) { }</code></p>\n",
              "is_accepted" : true,
              "score" : 1
            },
            { "body" : "<p>2) I find the Overview you provided pretty good. What else do you want?</p>\n\n<p>3) A good library to even out the differences between the browser is <a href=\"https://github.com/kriskowal/es5-shim\" rel=\"nofollow\">ES5-shim</a>. It autodetects the features and provides shims for the browsers who lack support.</p>\n\n<p>4) Always use <code>\"use strict\";</code> and a have good editor of your choice which has some kind of code-highlighting and perhaps code-completion. I use the browser consoles or firefox scratchpad (silly name for a good tool) for quick hacking sessions and put it all together in notepad++ (= the IDE of your choice).</p>\n\n<p>5) Augmenting the native javascript objects has been debated a lot and has pros and cons. Prototype and MooTools go this way. jQuery takes the other way and provides a separate object for that. I personally prefer to leave the native (and especially host) objects alone and have your own namespace with the functions you need. </p>\n",
              "is_accepted" : false,
              "score" : 1
            }
          ],
        "body" : "<p>I want to build a library in JavaScript/JScript/ECMAScript...whatever you want to call it, which will target modern standards (HTML5, CSS3, ESv5) with that in mind, any browser that supports the standard! Now I know there are already plenty of useful libraries out there, i.e. jQuery and MooTools. Of course they're great and I already use those where necessary, but I should not be forced to jump on the same bandwagon as every other developer just because it's popular!</p>\n\n<p>So for the sake of the following questions, let us not concern ourselves with 3rd party libraries such as jQuery and MooTools. Lets get down to nitty-gritty JavaScript/JScript/ECMAScript.</p>\n\n<p>Firstly, I asked a question prior to this (<a href=\"http://stackoverflow.com/questions/12051002/whats-the-difference-between-javascript-jscript-ecmascript\">What's the difference between  JavaScript, JScript & ECMAScript?</a>), as I did not know what the difference was. </p>\n\n<p>Thankfully I concluded the following:</p>\n\n<p>ECMAScript is the language specification. JavaScript and JScript are dialects of ECMAScript.</p>\n\n<p>JavaScript is Mozilla's implementation of ECMAScript.</p>\n\n<p>JScript is Microsoft's implementation of ECMAScript.</p>\n\n<p>OK, that was a nice simple answer wasn't it? But here's some questions which stem from that:</p>\n\n<ol>\n<li>is \"JavaScript\" supported in non-mozilla browsers, and to what extent?</li>\n<li>is \"JScript\" supported in non-microsoft browsers, and to what extent?</li>\n</ol>\n\n<p>Based on those two questions, I did a little digging and ran a simple test on IE9, FF14 and GC19.</p>\n\n<p>Here is the test code:</p>\n\n<pre><code><!DOCTYPE html>\n<html>\n    <head>\n        <title>HTML 5 Template</title>\n        <script language=\"JavaScript1.3\">\n            jsver = \"1.3\";\n        </script>\n        <script language=\"JavaScript1.4\">\n            jsver = \"1.4\";\n        </script>\n        <script language=\"JavaScript1.5\">\n            jsver = \"1.5\";\n        </script>\n        <script language=\"JavaScript1.6\">\n            jsver = \"1.6\";\n        </script>\n        <script language=\"JavaScript1.7\">\n            jsver = \"1.7\";\n        </script>\n        <script language=\"JavaScript1.8\">\n            jsver = \"1.8\";\n        </script>\n        <script type=\"text/javascript\">\n            document.write(\"<B>Your browser supports JavaScript version \" + jsver + \".</B>\")\n        </script>\n    </head>\n    <body>\n    </body>\n</html>\n</code></pre>\n\n<p>The results were: IE9 = JSv1.3, FF14 = JSv1.8, GC19 = JSv1.7</p>\n\n<p>OK, then I ran this test, which tests for ECMAScript version 5 support:\n<a href=\"http://kangax.github.com/es5-compat-table/#showold\" rel=\"nofollow\">http://kangax.github.com/es5-compat-table/#showold</a></p>\n\n<p>Again using the same browsers (IE9, FF14, GC19), ESv5 seems to be fairly well supported!</p>\n\n<p>Now comes the tricky bit! I come from a Microsoft background, and write software using languages like C#, ASP.NET etc, so naturally, my IDE of choice is Visual Studio (currently 2010). When I look through the JavaScript intellisense I see things like ActiveXObject, Array, Object, etc.</p>\n\n<ol>\n<li>Should I trust VS2010's intellisense?</li>\n<li>Where can I find a reference of ESv5 supported objects and features?</li>\n<li>How do I detect if a browser supports a particular object or feature?</li>\n<li>Is there anything better than VS2010 out there that will help me write compliant ESv5 code?</li>\n<li>Is it safe to override implementations of existing objects like Object, Number, Boolean etc, or should I just extend the existing implementation?</li>\n</ol>\n\n<p>Finally, concerning myself with jQuery. Let's say I can't be bothered to write the core compliancy & functionality myself, can I just write my library to sit on top of jQuery...or is this just a copout?</p>\n",
        "creation_date" : 1345548517,
        "last_activity_date" : 1422237024,
        "question_id" : 12053831,
        "score" : 2,
        "tags" : [ "javascript",
            "jquery",
            "jscript",
            "ecmascript-5"
          ],
        "title" : "Writing ECMAScript5 compliant code"
      },
      { "answer_count" : 3,
        "answers" : [ { "body" : "<blockquote>\n  <p>Given the example above, what is the difference between an object and a function?</p>\n</blockquote>\n\n<p>In Chrome, all these items are functions. In general however, a function is an object with the addition that it holds code and that you can call it. So, you can also just add properties to functions (like jQuery does: <code>$(\"selector\")</code> or <code>$.ajax</code>).</p>\n\n<blockquote>\n  <p>Do I write functions or objects in ES/JS?</p>\n</blockquote>\n\n<p>Well, obviously that depends on what you code. <code>function() {}</code> gives you a function; <code>{}</code> gives you an object. (Again, functions <em>are</em> objects in the end.)</p>\n\n<blockquote>\n  <p>Why is Object a function and not an object?</p>\n</blockquote>\n\n<p><code>Object</code> is a function because you can call it, either as a constructor or not:</p>\n\n<pre><code>Object();      // returns an empty object\nnew Object();  // same\n</code></pre>\n\n<p>Also, given that almost everything is an instance of <code>Object</code>, it follows that <code>Object</code> is a constructor and thus a function. (Note again that functions are also objects.)</p>\n\n<blockquote>\n  <p>Is there any hierarchical structure to built in objects / functions?</p>\n</blockquote>\n\n<p>As for the ECMAScript built-in objects, there is in a sense. There are constructor functions (<code>String</code>) on the global object, functions for instances (<code>Array.prototype.forEach</code>), and \"static\" functions (<code>Object.defineProperty</code> which is meant to be used on objects, <code>Array.isArray</code> for arrays).</p>\n\n<blockquote>\n  <p>Can built in objects / functions be redefined as something entirely different?</p>\n</blockquote>\n\n<p>Sure, you can do <code>Object = null</code>. But any code relying on <code>Object</code> will start throwing exceptions, so it's not recommended at all.</p>\n\n<blockquote>\n  <p>Can built in objects / functions be undefined?</p>\n</blockquote>\n\n<p>No, an object is not undefined by definition. <code>undefined</code> is not an object and vice-versa. This holds for any object.</p>\n\n<blockquote>\n  <p>Can built in objects / functions be assigned new features if they do not already support them natively?</p>\n</blockquote>\n\n<p>Yes, if e.g. <code>Array.prototype.forEach</code> does not exist, you could set it yourself. But it should be noted that such functions turn up in <code>for(var key in arr)</code> loops which again can cause code to behave differently. This can be solved using <code>Object.defineProperty</code> by using <code>{enumerable: false}</code>. But there is another caveat: the function is shared across the whole environment (e.g. the current page). If other code is also setting them you're experiencing collisions.</p>\n\n<blockquote>\n  <p>If an object is defined in one browser and not another, how can I compensate for this?</p>\n</blockquote>\n\n<p>You can \"shim\" such functions. For e.g. ES5 functions such as <code>Array.prototype.forEach</code> there are shims available which make them available on older browsers as well. Underscore.js may be a good example.</p>\n",
              "is_accepted" : true,
              "score" : 2
            },
            { "body" : "<blockquote>\n  <p>Given the example above, what is the difference between an object and a function?</p>\n</blockquote>\n\n<p>A <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-4.3.24\" rel=\"nofollow\">function</a> is just an <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-13.2\" rel=\"nofollow\">object which is callable</a>. However, I guess you ask for the types of <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-4.3.8\" rel=\"nofollow\">host objects</a> (<code>Node</code>, <code>HTMLCollection</code> etc): Their behaviour is implementation-dependent (\"not ecmascript-native\") - you can't rely on anything. </p>\n\n<blockquote>\n  <p>Do I write functions or objects in ES/JS?</p>\n</blockquote>\n\n<p>Huh? You write <em>code</em>, which can be interpreted.</p>\n\n<blockquote>\n  <p>Why is Object a function and not an object?</p>\n</blockquote>\n\n<p><a href=\"http://ecma-international.org/ecma-262/5.1/#sec-15.2\" rel=\"nofollow\"><code>Object</code></a> is the native <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-15.2.2\" rel=\"nofollow\">object constructor</a>, and therefore a function (and also an Object).</p>\n\n<blockquote>\n  <p>Is there any hierarchical structure to built in objects / functions?</p>\n</blockquote>\n\n<p>Do you ask for \"<em>Everything is an <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-4.2.1\" rel=\"nofollow\">Object</a></em>\"? If you ask for the structure of DOM interfaces: They are implementation-dependent host objects again, but most implementors have a inheritance system based on the <a href=\"http://www.w3.org/TR/dom/\" rel=\"nofollow\">DOM specification</a>.</p>\n\n<blockquote>\n  <p>Can built in objects / functions be redefined as something entirely different? Can built in objects / functions be undefined?</p>\n</blockquote>\n\n<p>No. You can overwrite the global variables pointing to them (the properties of the global object), but every instance will nevertheless be constructed from the native (then [<a href=\"http://stackoverflow.com/a/11527758/1048572\">nearly</a>] unaccessible) constructors.</p>\n\n<blockquote>\n  <p>Can built in objects / functions be assigned new features if they do not already support them natively? If an object is defined in one browser and not another, how can I compensate for this?</p>\n</blockquote>\n\n<p>Yes, you can extend the native objects and their prototypes. But watch out for host objects, they <a href=\"http://perfectionkills.com/whats-wrong-with-extending-the-dom/\" rel=\"nofollow\">might not like it</a>. If an object is defined only in certain environments, you can easily test for its existance and possibly <a href=\"http://remysharp.com/2010/10/08/what-is-a-polyfill/\" rel=\"nofollow\">shim</a> it (<a href=\"https://github.com/kriskowal/es5-shim\" rel=\"nofollow\">es5</a>, <a href=\"https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills\" rel=\"nofollow\">html5</a>).</p>\n",
              "is_accepted" : false,
              "score" : 2
            },
            { "body" : "<p>As part of my research into ECMAScript / JavaScript, I have found the following resource which provides a lot of information regarding the JS DOM.</p>\n\n<p><a href=\"http://krook.org/jsdom/index-all.html\" rel=\"nofollow\">http://krook.org/jsdom/index-all.html</a></p>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>I am currently learning advanced JavaScript, with an aim to build a standards compliant (HTML5, CSS3, ESv5) library. Along my way I have already asked a couple of related questions to try and figure out where to start, what to do, what not to do, what to avoid etc. I have already begun reading the ECMA-262 (ECMAScript version 5) documentation, and have been running a few tests before I get started on development work.</p>\n\n<p>Previous questions:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/12053831/writing-ecmascript5-compliant-code\">Writing ECMAScript5 compliant code</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/12051002/whats-the-difference-between-javascript-jscript-ecmascript\">What's the difference between  JavaScript, JScript & ECMAScript?</a></p>\n\n<p>In my research I found out that different browsers implement the standard differently, and in that respect, they implement different objects. For example, IE implements an object called ActiveXObject, but this is not the case in FireFox. So I wrote a little test facility which determines if something is defined within the browser.</p>\n\n<p>Consider the following which tests a few known objects (including jQuery since this is not built in).</p>\n\n<p><img src=\"http://i.stack.imgur.com/2AxLC.png\" alt=\"Browser Feature Test Facility\"></p>\n\n<p>Again, I have reached a point where I am in need of help:</p>\n\n<p>Questions:</p>\n\n<ol>\n<li><p>Given the example above, what is the difference between an object and a function?</p></li>\n<li><p>Do I write functions or objects in ES/JS?</p></li>\n<li><p>Why is Object a function and not an object?</p></li>\n<li><p>Is there any hierarchical structure to built in objects / functions?</p></li>\n<li><p>Can built in objects / functions be redefined as something entirely different?</p></li>\n<li><p>Can built in objects / functions be undefined?</p></li>\n<li><p>Can built in objects / functions be assigned new features if they do not already support them natively?</p></li>\n<li><p>If an object is defined in one browser and not another, how can I compensate for this?</p></li>\n</ol>\n\n<p>P.S. I do not want answers relating to specific implementations (JavaScript/JScript), rather answers relating to the standard (ECMAScript v5). Thanks in advance!</p>\n",
        "creation_date" : 1345664217,
        "last_activity_date" : 1422237023,
        "question_id" : 12080213,
        "score" : 1,
        "tags" : [ "javascript",
            "jscript",
            "ecmascript-5",
            "ecma262"
          ],
        "title" : "Writing ECMAScript5 compliant code (Part 2)"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p>Interesting question. Regex baddass Steven Levithan has written a nifty <a href=\"http://stevenlevithan.com/regex/colorizer/\" rel=\"nofollow\">regex highlighter/colorizer</a> which parses <em>Javascript</em> regular expressions and does a partial (if not complete) validation in the process. It highlights any syntax errors it finds. But regarding the PCRE regex flavor...</p>\n\n<p>I have a Javascript (GitHub) project that may be of some help. Its called: <a href=\"http://jmrware.com/articles/2010/dynregexhl/DynamicRegexHighlighter.html\" rel=\"nofollow\">Dynamic Regex Highlighter</a>. It will validate PCRE syntax with regard to bracket matching for groups and character classes. However, It does not check for any other syntax requirements. If you are into regex, its probably worth a look-see anyhow. I find the tester page it to be incredibly useful when inspecting long, complex regexes (poorly) written in non-free-spacing mode. When you mouse over a bracket, the matching bracket is highlighted, and if it is a capture group, the group number is provided in a pop up tool-tip.</p>\n\n<p>See: <a href=\"http://jmrware.com/articles/2010/dynregexhl/DynamicRegexHighlighterTester.html\" rel=\"nofollow\">Dynamic Regex Highlighter Tester</a></p>\n",
              "is_accepted" : false,
              "score" : 2
            },
            { "body" : "<p>Quick & Dirty AJAX code to check against PHP:</p>\n\n<p>Javascript:</p>\n\n<pre><code>function regexValidator(value) {\n    var req = new XMLHttpRequest();\n    req.onreadystatechange = function() {\n        if (req.status == 200 && req.responseText.length() > 0) {\n            alert(req.responseText);\n        }\n    };\n    req.open('GET', 'http://example.com/validator.php?r=' + escape(value), true);\n    req.send();\n}\n</code></pre>\n\n<p>PHP:</p>\n\n<pre><code><?php\nif (isset($_GET['r'])) {\n    if (preg_match(urldecode($_GET['r']), '') === FALSE) {\n        echo \"NOT VALID\";\n    } else {\n        echo \"VALID\";\n    }\n}\n</code></pre>\n",
              "is_accepted" : true,
              "score" : 2
            }
          ],
        "body" : "<p>Is there an existing function (or perhaps someone wrote some existing code) to validate in a JS function that the text passed is valid PCRE? I've been Googling like crazy but the closest thing I've been able to find is just \"PCRE_JAVASCRIPT_COMPAT\" (which is a PCRE compatibility flag) or discussions about validating input in both PHP and Javascript.</p>\n\n<p>The closest thing I've seen to Javascript REGEX validation is:</p>\n\n<pre><code>try {\n    \"\".match(regex);\n    return true;\n} catch (e) {\n    return false;\n}\n</code></pre>\n\n<p>This does not take into account differences between JS (ECMA) regular expressions and PHP (PCRE) regular expressions - that's obviously an issue, but I've not found a clear discussion of the differences between the two.</p>\n\n<p>Any help please?</p>\n",
        "creation_date" : 1346075989,
        "last_activity_date" : 1422237021,
        "question_id" : 12143494,
        "score" : 4,
        "tags" : [ "javascript",
            "php",
            "regex",
            "pcre"
          ],
        "title" : "PHP (PCRE) Validation in a Javascript Function"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>You can probably make life difficult for hackers:</p>\n\n<ul>\n<li>use encryption on client and server side (eg AMF)</li>\n<li>validate each client request on server</li>\n<li>build a robust logical message exchange</li>\n</ul>\n\n<p>and so on...</p>\n",
              "is_accepted" : false,
              "score" : 0
            } ],
        "body" : "<p>After searching profusely and vigorously, I have nothing on how to prevent security issues that arise when I use sockets for some multiplayer features in a Flash game. The amazing ECMAScript compliant/like languages have their source easily accessible which allows every passively aggresive nerd in his mom's basement to find crucial information to acquiring an attack vector. </p>\n\n<p>They find the IP of the server, the port which the server's listening on and in a few seconds - they're telneting and sending strings of data. And since JSON is so open and easily interpreted by humans, it is stringified on the client and parsed on the server-side, I have no idea how to prevent such a message from coming through (after they find the hitpoints the server is looking for, easily found in the swf):</p>\n\n<p>example:</p>\n\n<pre><code>{ \"request_type\" : \"WRITE_HS\", \"name\" : \"GloriousNerd\", \"highscore\" : 9999999 }\n</code></pre>\n\n<p>And their request is figured out as genuine, the score is written and the glorious nerd is victorious. The same can be done to create an endless stream of load highscore requests which return a number of items, clogging up bandwidth and the system for genuine requests.</p>\n\n<p>I keep a few standard approaches, scanning \"impossibru results\" and blacklisting IPs and the like, but nothing prevents it. It's a sufix operation, always. Everyone I've talked to says it is a losing battle. Kobayashi Maru? </p>\n\n<p>Is there a way to prevent access and encode some information the game and the server can uniquely share? Public keys, private keys, encryption of any sort is easily found and replicated. And JSON is just sitting there, naked. Some way to ensure it is coming through the SWF and the SWF only?</p>\n\n<p>Without resorting to authentification, I want people to play as soon as possible. It seems to me that the only way to prevent cheating is to generate an account and add value to it through achievements. But still, some men just want to watch the world burn.</p>\n\n<p>Can you write some words of wisdom to my socket? I'm all port.</p>\n",
        "creation_date" : 1348396407,
        "last_activity_date" : 1422237018,
        "question_id" : 12551592,
        "score" : 0,
        "tags" : [ "javascript",
            "json",
            "sockets",
            "security",
            "actionscript"
          ],
        "title" : "TCP Sockets, JSON and security"
      },
      { "answer_count" : 0,
        "body" : "<p>I have an html page where I have to load many many svg (more than 1000). I load each svg with this line:</p>\n\n<pre><code><object type=\"image/svg+xml\" data=\"89887295.svg\">89887295 svg file missing</object>\n</code></pre>\n\n<p>My svg are contain an ecmacscript like that for instance:</p>\n\n<pre><code><?xml version=\"1.0\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \n\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg xmlns=\"http://www.w3.org/2000/svg\"\nwidth=\"1203\" height=\"50\" onload=\"init(evt)\">\n\n  <style>\n    .caption{\n    font-size: 20px;\n    font-family: Georgia, serif;\n    }\n    .tooltip{\n    font-size: 15px;\n    }\n    .tooltip_bg{\n    fill: white;\n    stroke: black;\n    stroke-width: 1.2;\n    opacity: 0.85;\n    }\n  </style>\n\n  <script type=\"text/ecmascript\">\n    <![CDATA[\n\n    function init(evt)\n    {\n        if ( window.svgDocument == null )\n        {\n        svgDocument = evt.target.ownerDocument;\n        }\n\n        tooltip = svgDocument.getElementById('tooltip');\n        tooltip_bg = svgDocument.getElementById('tooltip_bg');\n\n    }\n\n    function ShowTooltip(evt, mouseovertext)\n    {\n        tooltip.setAttributeNS(null,\"x\",evt.pageX+11);\n        tooltip.setAttributeNS(null,\"y\",evt.pageY+27);\n        tooltip.firstChild.data = mouseovertext;\n        tooltip.setAttributeNS(null,\"visibility\",\"visible\");\n\n        length = tooltip.getComputedTextLength();\n        tooltip_bg.setAttributeNS(null,\"width\",length+8);\n        tooltip_bg.setAttributeNS(null,\"x\",evt.pageX+8);\n        tooltip_bg.setAttributeNS(null,\"y\",evt.pageY+14);\n        tooltip_bg.setAttributeNS(null,\"visibility\",\"visibile\");\n    }\n\n    function HideTooltip(evt)\n    {\n        tooltip.setAttributeNS(null,\"visibility\",\"hidden\");\n        tooltip_bg.setAttributeNS(null,\"visibility\",\"hidden\");\n    }\n\n    ]]>\n  </script>\n\n\n\n<rect x=\"0\" y=\"20\"   width=\"1203\" height=\"5\"/>\n\n<text x=\"50\" y=\"10\" style=\"font-size:7px;\">50</text>\n<text x=\"100\" y=\"10\" style=\"font-size:7px;\">100</text>\n<text x=\"150\" y=\"10\" style=\"font-size:7px;\">150</text>\n<text x=\"200\" y=\"10\" style=\"font-size:7px;\">200</text>\n<text x=\"250\" y=\"10\" style=\"font-size:7px;\">250</text>\n<text x=\"300\" y=\"10\" style=\"font-size:7px;\">300</text>\n<text x=\"350\" y=\"10\" style=\"font-size:7px;\">350</text>\n<text x=\"400\" y=\"10\" style=\"font-size:7px;\">400</text>\n<text x=\"450\" y=\"10\" style=\"font-size:7px;\">450</text>\n<text x=\"500\" y=\"10\" style=\"font-size:7px;\">500</text>\n<text x=\"550\" y=\"10\" style=\"font-size:7px;\">550</text>\n<text x=\"600\" y=\"10\" style=\"font-size:7px;\">600</text>\n<text x=\"650\" y=\"10\" style=\"font-size:7px;\">650</text>\n<text x=\"700\" y=\"10\" style=\"font-size:7px;\">700</text>\n<text x=\"750\" y=\"10\" style=\"font-size:7px;\">750</text>\n<text x=\"800\" y=\"10\" style=\"font-size:7px;\">800</text>\n<text x=\"850\" y=\"10\" style=\"font-size:7px;\">850</text>\n<text x=\"900\" y=\"10\" style=\"font-size:7px;\">900</text>\n<text x=\"950\" y=\"10\" style=\"font-size:7px;\">950</text>\n<text x=\"1000\" y=\"10\" style=\"font-size:7px;\">1000</text>\n<text x=\"1050\" y=\"10\" style=\"font-size:7px;\">1050</text>\n<text x=\"1100\" y=\"10\" style=\"font-size:7px;\">1100</text>\n<text x=\"1150\" y=\"10\" style=\"font-size:7px;\">1150</text>\n<text x=\"1200\" y=\"10\" style=\"font-size:7px;\">1200</text>\n<rect id=\"111-272\" x=\"111\" y=\"17\" width=\"161\" height=\"10\" onmousemove=\"ShowTooltip(evt, 'YYYYYYYYYYYname')\" onmouseout=\"HideTooltip(evt)\" style=\"fill:Brown;\" />\n<rect id=\"545-731\" x=\"545\" y=\"17\" width=\"186\" height=\"10\" onmousemove=\"ShowTooltip(evt, 'XXXXXXXXXXXname')\" onmouseout=\"HideTooltip(evt)\" style=\"fill:LawnGreen;\" />\n<line x1=\"1029\" y1=\"10\" x2=\"1141\" y2=\"10\" onmousemove=\"ShowTooltip(evt, '1029-1141 1e-16')\" onmouseout=\"HideTooltip(evt)\" style=\"fill:red;stroke:red;stroke-width:3;stroke-linecap:round;\" /><line x1=\"884\" y1=\"12\" x2=\"981\" y2=\"12\" onmousemove=\"ShowTooltip(evt, '884-981 5e-16')\" onmouseout=\"HideTooltip(evt)\" style=\"fill:red;stroke:red;stroke-width:3;stroke-linecap:round;\" /><rect class=\"tooltip_bg\" id=\"tooltip_bg\"\n          x=\"0\" y=\"0\" rx=\"4\" ry=\"4\"\n          width=\"55\" height=\"17\" visibility=\"hidden\"/>\n      <text class=\"tooltip\" id=\"tooltip\"\n          x=\"0\" y=\"0\" visibility=\"hidden\">Tooltip</text>\n\n</svg>\n</code></pre>\n\n<p>When I run my page html page with firefox or chrome I obtain the same problem. The first 200 svg (sometime less than 200 sometimes more...) are properly loaded and ecmascript works. But the other till the end are not loaded at all, I obtain the alt message... And the svg files are all present in the current directory.</p>\n\n<p>I think the issue is about the buffer of firefox which can't load everything, but how can I manage to load every svg?\nI tried to simplified my svg to be less larger, but when I export ecma script and call it in extern in the html page, svg in the object tag does not load it...</p>\n\n<p>Here are my 2 issues...\nI really need to load in the same page more than 1000 svg files I do not want to split in 2 or 3 pages...</p>\n",
        "creation_date" : 1349786283,
        "last_activity_date" : 1422237014,
        "question_id" : 12800232,
        "score" : 0,
        "tags" : [ "javascript",
            "html",
            "svg",
            "ecmascript-5"
          ],
        "title" : "Why svg imported by object tag are not all load in a HTML page?"
      },
      { "answer_count" : 3,
        "answers" : [ { "body" : "<p>The second approach is more common; it's used by such popular shim JS libraries as jQuery and Underscore.js. </p>\n\n<p>Said that, extending <strong>native objects</strong> is far less dangerous then extending <strong>host objects</strong> (with latter, it's typical 'catch 22': you extend them to provide additional functionality in browsers that don't handle extending of the host objects well enough). <a href=\"http://perfectionkills.com/extending-built-in-native-objects-evil-or-not/\" rel=\"nofollow\">This article</a> sums it up:</p>\n\n<blockquote>\n  <p>Don’t forget that writing proper, compliant shims is hard. When in\n  doubt, use standalone object. When the method you’re shimming is part\n  of the unfinished spec, use standalone object. Only when you’re\n  certain about method compliance and method is part of the finished,\n  future-proof specification, is it safe to shim native object directly.</p>\n</blockquote>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<p>Personally, I use the first approach (adding <code>Array.prototype.filter</code>) most of the time, but there are times when I don't.  I don't use the first approach when writing large-scale frameworks for old browsers, which need to play nice with any other scripts on the internet, including bad ones.</p>\n\n<p>Here are the things to consider.  Let's say you shim in <code>Array.prototype.filter</code> using the method you described, and then you add a 3rd party script to your website that does something like this:</p>\n\n<pre><code>var someArray = [ 'a', 'b', 'c' ];\nconsole.log('The first three letters of the alphabet are: ');\nfor (var i in someArray)\n    console.log(someArray[i]);\n</code></pre>\n\n<p>The result?</p>\n\n<pre><code>The first three letters of the alphabet are: \na\nb\nc\nfunction () { ... }\n</code></pre>\n\n<p>Your filter function gets printed out! Now, on a technical level, no one should iterate arrays with a <code>for...in</code> loop, but you can't control what 3rd party scripts might do. This is the main drawback, and when you're writing a large-scale library to be used all over the internet, it's worth considering.</p>\n\n<p>This prevents you from adding anything to <code>Object.prototype</code>, period (with a simple Object.prototype.method = function() { ... }<code>assignment), because</code>for...in<code>is good to use on other types of objects, and this kind of shimming breaks</code>for...in`.</p>\n\n<p>But, if you're just writing code to be used on your own website, and you know the scripts you'll be including are high quality and don't make blunders like this, it's a fine technique.</p>\n\n<p>In addition, if your code is only intended for ECMAScript 5 compliant browsers, you can define your shims as non-enumerable, which will prevent them from showing up in <code>for...in</code> loops. I am currently working on a project to shim in ECMAScript 6 methods to ES5 browsers, and since it's only intended to run in ES5 browsers, I can get away with:</p>\n\n<pre><code>Object.defineProperty(Array.prototype, 'contains', {\n    value: function(value) {\n        // Implementation\n    },\n    enumerable: false,\n    writable: true,\n    configurable: true\n});\n</code></pre>\n\n<p>Defining the shim in this way prevents it from showing up in a <code>for...in</code> loop, so it's even safe to use on <code>Object.prototype</code>, <strong>provided your implementation accurately follows the spec/draft</strong>.</p>\n\n<p>Which brings up a secondary point. If you are not confident you can accurately implement the method as per the spec, you may also be better off not to shim it in. This could break libraries which check for the built-in and use it if available, but fall back to something else if it's not. Better to leave them without anything than with a broken implementation.</p>\n\n<p>It's for this reason that I never try to partially implement a shim.  For instance, <code>Object.create</code> cannot be completely implemented in ES3 browsers, so I don't shim this one in ever. I just use my own <code>myLibrary.create</code> function, which may function similarly, but at least any code which may check for the existence of <code>Object.create</code> isn't being misled to believe it has a full, working version.</p>\n\n<p>Moral of the story: If you're going to shim, check out some of the really awesome, spec-compliant shims on MDN, and learn to write code like it: <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/filter#Compatibility\" rel=\"nofollow\">Array.prototype.filter</a></p>\n\n<hr>\n\n<p>A final note: The reason many libraries don't shim in methods on <code>Array.prototype</code> may be in part to some of these considerations, but there's also a historical reason in many of these cases. Libraries like jQuery were being developed <em>before</em> <code>filter</code> was a standard built-in method. Prototype.js took the approach of <em>adding</em> non-standard methods, which has more drawbacks than those discussed above. jQuery decided not to add non-standard methods to the built-in prototypes, and that's why they have <code>$.filter</code>.</p>\n",
              "is_accepted" : false,
              "score" : 2
            },
            { "body" : "<p>For new standard js function and class best practice is <a href=\"https://github.com/kriskowal/es5-shim\" rel=\"nofollow\">shiming</a>, extending classes if the function is not found on old browsers. </p>\n\n<p>But if the function does not become standard best practice is creating new function and do not change standard class, because if you use a function name that may be used in future with different behavior it will break your app.</p>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>If somebody wants to implement a function (e.g. <code>Array.prototype.filter</code>) for an old browser which method is better? Why? What is pros and cons of each one?</p>\n\n<pre><code>if (!Array.prototype.filter) {\n  Array.prototype.filter = function() {\n    //implementation\n  }\n}\n</code></pre>\n\n<p>or</p>\n\n<pre><code>function myFilter(e,i,f) {\n    if (!Array.prototype.filter) {\n        //implementation\n    } else {\n        return Array.prototype.filter(e,i,f);\n    }\n}\n</code></pre>\n",
        "creation_date" : 1352308186,
        "last_activity_date" : 1422237005,
        "question_id" : 13274654,
        "score" : 0,
        "tags" : [ "javascript",
            "cross-browser",
            "ecmascript-5"
          ],
        "title" : "Extending a class or Creating a new function, Which is better?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>A very dirty way to do this would be to insert your snippet after every opening brace, closing brace, and semicolon. Like this:</p>\n\n<pre><code> code.replace(/\\;/g, '; checkPause(); ').replace(/\\{/g, '{ checkPause(); ').replace(/\\}/g, '} checkPause(); ')\n</code></pre>\n\n<p>A proper way would be to use a parser.</p>\n",
              "is_accepted" : false,
              "score" : 1
            } ],
        "body" : "<p>I would like to process/parse and alter some Javascript code, preferably in a regular expression if that's possible (open to suggestions). The purpose would be to insert a new code snippet after each statement in the JS.</p>\n\n<p><strong>For example:</strong></p>\n\n<p><em>The original Javascript:</em></p>\n\n<pre><code>while(true){\n\n    Utils.log(\"hello world\");\n    Utils.sleep(1000);\n\n}\n</code></pre>\n\n<p><em>Code snippet that I would like to insert:</em></p>\n\n<pre><code>checkPause();\n</code></pre>\n\n<p><em>So the new code would look like this:</em></p>\n\n<pre><code>while(true){\n\n    checkPause();\n    Utils.log(\"hello world\");\n    checkPause();\n    Utils.sleep(1000);\n    checkPause();\n\n}\ncheckPause();\n</code></pre>\n\n<p>The example above is quite simple, but the real JS code could be more complex and could even be minified. The code could also miss out some semicolons <code>;</code></p>\n",
        "creation_date" : 1354808808,
        "last_activity_date" : 1422236980,
        "question_id" : 13747281,
        "score" : 2,
        "tags" : [ "javascript",
            "regex"
          ],
        "title" : "Match end of Javascript code statement"
      },
      { "answer_count" : 3,
        "answers" : [ { "body" : "<p>This SO-question gives some frameworks for i18n-support in javascript. <a href=\"http://stackoverflow.com/questions/9640630/javascript-i18n-internationalization-frameworks-libraries-for-client-side-use\">JavaScript I18n (internationalization) frameworks/libraries for client-side use?</a></p>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<p>I assume you know that \"Google Chrome version 24, currently in beta, implements the API with Collator, NumberFormat, and DateTimeFormat objects as described above.\" (see <a href=\"http://norbertlindenberg.com/2012/12/ecmascript-internationalization-api/index.html\" rel=\"nofollow\">here</a>). Any shim would either be huge and/or incomplete in terms of locale coverage--do you really want to implement Kannada numbers (that's the language they speak here in Bangalore)? </p>\n\n<p>My suggestion would be to roll your own slimmed-down shim with the parts you need, picking and choosing from other libraries that do similar things as needed. For instance, you might want date/time formatting, but not sorting (which is complicated).</p>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<p>Yes, there's a polyfill for ECMA-402 (aka ECMA Internationalization API Specification) available at <a href=\"https://github.com/andyearnshaw/Intl.js\" rel=\"nofollow\">https://github.com/andyearnshaw/Intl.js</a>.</p>\n\n<p>For use in Node.js applications, you can install with NPM:</p>\n\n<pre><code>npm install intl\n</code></pre>\n\n<p>It's also available as a Bower component for the front-end:</p>\n\n<pre><code>bower install intl\n</code></pre>\n\n<p>There's support for <code>NumberFormat</code> and <code>DateTimeFormat</code>, but no support for <code>Collator</code>.  Currently, for client-side browser environments, you need to add the locale data using a separate function.  See the README.md file for details.</p>\n\n<p><strong>Disclaimer:</strong> @AndyE is the author of <code>Intl.js</code>.</p>\n",
              "is_accepted" : false,
              "score" : 6
            }
          ],
        "body" : "<p>I am looking for a shim for the <a href=\"http://www.ecma-international.org/ecma-402/1.0/\">ECMAScript Internationalization API</a>. Does anyone know of such a project? (Even if it's still currently a work-in-progress.)</p>\n",
        "creation_date" : 1360253023,
        "last_activity_date" : 1422236959,
        "question_id" : 14755521,
        "score" : 12,
        "tags" : [ "javascript",
            "internationalization",
            "ecmascript-5",
            "ecma262"
          ],
        "title" : "Is there an i18n (Intl) shim for JavaScript?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>As it is so often with these things, shortly after desperately asking, the answer comes to you while eating a sandwich. TL;DR: Solved like this:</p>\n\n<pre><code>expMemberExpression.Production = \n            (\n            expPrimaryExpression\n            |stFunctionExpression\n            | (@NewKeyword + expMemberExpression + expArguments)\n            ) + expMemberExpressionHelper.ZeroOrMore();\n\nexpMemberExpressionHelper.Production = (symLiteralOpenSquare + expExpression + symLiteralCloseSquare)\n            | ( @punctuator + symIdentifier );\n</code></pre>\n",
              "is_accepted" : true,
              "score" : 1
            } ],
        "body" : "<p>First off: Using the LL(*) parser from the Actipro SyntaxEditor. This could apply to any LL(k) parser though.</p>\n\n<p>I am currently trying to write a valid LL(k) grammar for Javascript (using the ECMA-262 reference), figuring out left recursion is okay sometimes, but I have been running against a wall in figuring out a solution for this problem. ( And may have lost focus since I have been working on this for three days non-stop now )</p>\n\n<p>Okay, solution example:</p>\n\n<p>Take this rule:</p>\n\n<pre><code>BitwiseORExpression :\n    BitwiseXORExpression\n    BitwiseORExpression | BitwiseXORExpression\n</code></pre>\n\n<p>which would literally become:</p>\n\n<pre><code>expBitwiseOR.Production = expBitwiseXOR | expBitwiseOR + @bitwiseOrSign + expBitwiseXOR;\n</code></pre>\n\n<p>and to avoid left recursion:</p>\n\n<pre><code>expBitwiseOR.Production = expBitwiseXOR + ( @bitwiseOrSign + expBitwiseXOR ).ZeroOrMore();\n</code></pre>\n\n<p>Simple enough. I am however stuck with more complex rules such as:</p>\n\n<pre><code>MemberExpression :\n    PrimaryExpression\n    FunctionExpression\n    MemberExpression [ Expression ]\n    MemberExpression . IdentifierName\n    new MemberExpression Arguments\n</code></pre>\n\n<p>I have tried several things, some of which sort of work (i.e. they \"work\" but not as they should) and most of which don't (i.e. Left Recursive). I am honestly not hoping for a full answer or a complete solution, but maybe someone will have an idea on how to avoid this problem with a complex rule as that or something else.</p>\n\n<p>No need to put this into a proper syntax for the Actipro Parser either, any mock-up code would still help!</p>\n",
        "creation_date" : 1360666350,
        "last_activity_date" : 1422236955,
        "question_id" : 14830825,
        "score" : 2,
        "tags" : [ "javascript",
            "c",
            "grammar",
            "23"
          ],
        "title" : "JavaScript (ECMA) Grammar - Left Recursion Problems"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p>As far as I understand, those are just different names used to refer to the same type of entity (Lexical Environment). They have different names due to different purposes.</p>\n\n<p><code>LexicalEnvironment</code> is used to resolve identifiers while <code>VariableEnvironment</code> is used to declare variables and functions.</p>\n\n<p>Both of them reference Lexical Environment (= Environment Record + optional outer Lexical Environment; aka scope chain) that's created for each execution context.</p>\n\n<blockquote>\n  <p>The LexicalEnvironment and VariableEnvironment components of an\n  execution context are always Lexical Environments. When an execution\n  context is created its LexicalEnvironment and VariableEnvironment\n  components initially have the same value. The value of the\n  VariableEnvironment component never changes while the value of the\n  LexicalEnvironment component may change during execution of code\n  within an execution context</p>\n</blockquote>\n\n<p>Example in pseudo code:</p>\n\n<pre><code>// VariableEnvironment (global) = { __outer__: null }\n// LexicalEnvironment = VariableEnvironment (global)\n\n(function foo() {\n\n  // VariableEnvironment (A) = { x: undefined, __outer__: global }\n  // LexicalEnvironment = VariableEnvironment (A)\n\n  var x;\n\n  (function bar(){\n\n    // VariableEnvironment (B) = { y: undefined, __outer__: A }\n    // LexicalEnvironment = VariableEnvironment (B)\n\n    var y;\n\n    x = 2;\n\n    // VariableEnvironment (A) = { x: 2, __outer__: global }\n    // LexicalEnvironment is still the same as VariableEnvironment (B)\n\n  })();\n\n})();\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 2
            },
            { "body" : "<p>Both are components (of the same type) of Execution Contexts, but they serve distinct purposes (<a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-10.3\" rel=\"nofollow\">from the spec</a>):</p>\n\n<p><strong>LexicalEnvironment</strong></p>\n\n<blockquote>\n  <p>Identifies the <code>Lexical Environment</code> used to resolve identifier references made by code within this execution context.</p>\n</blockquote>\n\n<p><strong>VariableEnvironment</strong></p>\n\n<blockquote>\n  <p>Identifies the <code>Lexical Environment</code> whose environment record holds bindings created by VariableStatements and FunctionDeclarations within this execution context.</p>\n</blockquote>\n\n<p>The next paragraph explains why they need to be different:</p>\n\n<blockquote>\n  <p>When an execution context is created its LexicalEnvironment and VariableEnvironment components <em>initially have the same value</em>. The value of the VariableEnvironment component <em>never changes</em> while the value of the LexicalEnvironment component <strong>may change</strong> during execution of code within an execution context.</p>\n</blockquote>\n\n<p>That does not happen often and usually both refer to the same <code>Lexical Environment</code>. A good example for a changing LexicalEnvironment is given in the question <a href=\"http://stackoverflow.com/q/15034864/1048572\">Why do catch clauses have their own lexical environment?</a> - see <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-12.14\" rel=\"nofollow\">§12.14</a>. The other place I could find in the spec where this happens are <code>With Statements</code> (<a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-12.10\" rel=\"nofollow\">§12.10</a>) where an <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-10.2.1.2\" rel=\"nofollow\"><code>Object Environment Record</code></a> is dynamically used for the identifier resolution - yet variable/function declarations are static.</p>\n",
              "is_accepted" : true,
              "score" : 4
            }
          ],
        "body" : "<p>Could someone clarify what the difference is between these two, as they exist in the Execution context?  It's hard for me to read the <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-10.3\" rel=\"nofollow\">ECMA 262 v 5</a> specification and clearly see the difference.</p>\n\n<p>Thank You,</p>\n",
        "creation_date" : 1361560778,
        "last_activity_date" : 1422236942,
        "question_id" : 15031667,
        "score" : 4,
        "tags" : [ "javascript",
            "ecmascript-5",
            "ecma262"
          ],
        "title" : "Clarity on the difference between "LexicalEnvironment" and "VariableEnvironment" in ECMAScript/JavaScript"
      },
      { "answer_count" : 3,
        "answers" : [ { "body" : "<p>An instantiated function has a scope.  It doesn't matter whether it was instantiated as part of a function declaration statement or a function instantiation expression.</p>\n\n<p>(It's probably more correct to say that an instantiated function has a scope <em>when it is called</em>, and that every call produces a <em>distinct</em> scope.)</p>\n",
              "is_accepted" : false,
              "score" : 2
            },
            { "body" : "<p>Yes, <em>every</em> function gets (<a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-10.4.3\" rel=\"nofollow\">§10.4.3</a>) its own <code>ExecutionContext</code> when it is called (<a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-13.2.1\" rel=\"nofollow\">§13.2.1</a>). That new context is initialised with a new <code>LexicalEnvironment</code> (created by <code>NewDeclarativeEnvironment</code>, <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-10.2.2.2\" rel=\"nofollow\">§10.2.2.2</a>), deriving from the <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.3.5\" rel=\"nofollow\"><code>[[Scope]]</code></a>  of the function - i.e. the <code>LexicalEnvironment</code> it was declared/\"expressed\" in (<a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-13\" rel=\"nofollow\">§13</a>).</p>\n\n<p>As @Pointy pointed out, the sentence you stumpled upon does not exhaustively list them: \"<em>…some [structure] such as…</em>\".</p>\n",
              "is_accepted" : true,
              "score" : 2
            },
            { "body" : "<p>If a name is included in a <em>FunctionExpression</em>, that name becomes a read-only binding that shadows any outer declarations of the same name.  But that binding may itself be shadowed by a formal parameter or local  declaration within the function. Such a binding for the function name is only created for named <em>FunctionExpressions</em> and not for anonymous <em>FunctionExpressions</em> or  <em>FunctionDeclarations</em>. The name binding for a <em>FunctionDeclaration</em> is created in the surrounding VariableEnvironment. </p>\n\n<p>Here is a more detailed explantion referencing the ES5.1 spec:</p>\n\n<p>There is more than one environment record associated with a function object.  Whenever a function is called a new DeclarativeEnvironmentRecord  is created to contain the local bindings of that particular function invocation. That record becomes both the VariableEnvironment and the initial LexicalEnvironment of the ExecutionContext that is created for that invocation. This is specified in section 10.4.3.</p>\n\n<p>When this environment record is created its \"outer environment\" is set to the value of the [[Scope]] internal property of the function object that is being called. (line 5, 10.4.3) The outer environment provide the bindings for all non-local declarations.  The [[Scope]] is set when a function object is created (see the semantics in section 13 and also 13.2). So, each distinct invocation of a specific function object has a different local environment but all invocations of that function share the same outer [[Scope]].</p>\n\n<p>For most functions, the captured [[Scope]] is simply the LexicalEnvironment of the ExecutionContext that was active when the function is created. However <em>FunctionExpressions</em> that include an <em>Identifier</em> as the function name have an extra DeclarativeEnvironmentRecord insert at the head of its [[Scope]] chain. (see steps 1-3 of the third algorithm in section 13).</p>\n\n<p>This extra environment record is used to capture the binding for the function name given in the <em>FunctionExpression</em>.</p>\n",
              "is_accepted" : false,
              "score" : 1
            }
          ],
        "body" : "<p>I'm reading the Execution Context / Lexical Environment section of the <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-10.2\" rel=\"nofollow\">ECMA 262 5 specification</a>.  It states the following:  (emphasis added)</p>\n\n<blockquote>\n  <p>A Lexical Environment is a specification type used to define the association of Identifiers to specific variables and functions based upon the lexical nesting structure of ECMAScript code. A Lexical Environment consists of an Environment Record and a possibly null reference to an outer Lexical Environment. Usually a Lexical Environment is associated with some specific syntactic structure of ECMAScript code such as a <strong>FunctionDeclaration</strong>, a WithStatement, or a Catch clause of a TryStatement and a new Lexical Environment is created each time such code is evaluated.</p>\n</blockquote>\n\n<p>I noticed that it says nothing about creating a lexical environment for Function Expressions.  Is a lexical environment created for function expressions, or is one created only for function declarations?  Am I missing something?</p>\n\n<p><strong>Edit</strong>:  I notice that function code will have <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-10.3\" rel=\"nofollow\">its own execution context</a>, which is why I'm also confused why function expression is not mentioned in the lexical environment section.</p>\n",
        "creation_date" : 1361572677,
        "last_activity_date" : 1422236938,
        "question_id" : 15034389,
        "score" : 4,
        "tags" : [ "javascript",
            "scope",
            "ecmascript-5",
            "ecma262"
          ],
        "title" : "Does a function expression have its own scope/lexical environment"
      },
      { "answer_count" : 3,
        "answers" : [ { "body" : "<p>The <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Arithmetic_Operators#-_.28Unary_Negation.29\" rel=\"nofollow\">unary plus operator</a> invokes the internal <code>ToNumber</code> algorithm on the string. <code>+'' === 0</code></p>\n\n<pre><code>typeof + ''\n// The `typeof` operator has the same operator precedence than the unary plus operator,\n// but these are evaluated from right to left so your expression is interpreted as:\ntypeof (+ '')\n// which evaluates to:\ntypeof 0\n\"number\"\n</code></pre>\n\n<p>Differently from <code>parseInt</code>, the internal <code>ToNumber</code> algorithm invoked by the <code>+</code> operator evaluates empty strings (as well as white-space only strings) to Number <code>0</code>. Scrolling down a bit from the <a href=\"http://es5.github.com/#x9.3.1\" rel=\"nofollow\"><code>ToNumber</code> spec</a>:</p>\n\n<blockquote>\n  <p>A <em>StringNumericLiteral</em> that is empty or contains only white space is converted to <code>+0</code>.</p>\n</blockquote>\n\n<p>Here's a quick check on the console:</p>\n\n<pre><code>>>> +''\n<<< 0\n>>> +' '\n<<< 0\n>>> +'\\t\\r\\n'\n<<< 0\n//parseInt with any of the strings above will return NaN\n</code></pre>\n\n<h3><em>For reference:</em></h3>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/q/5450076/1331430\">Whats the significant use of Unary Plus and Minus operators?</a> (SO)</li>\n<li><a href=\"http://es5.github.com/#x9.3.1\" rel=\"nofollow\">ES5 #9.3.1 ToNumber Applied to the String Type</a> (ES5 Spec)</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Operator_Precedence\" rel=\"nofollow\">Operator Precedence</a> (MDN)</li>\n</ul>\n",
              "is_accepted" : false,
              "score" : 5
            },
            { "body" : "<p>That evaluates to <code>typeof(+'')</code>, not <code>(typeof) + ('')</code></p>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<p>Javascript interprets the following <code>+ ''</code> as <code>0</code> so :</p>\n\n<p><code>typeof + ''</code> will echo `number'</p>\n\n<p>To answer your second question, <code>typeof</code> takes an argument so if you call it by itself it will throw an error same thing if you call <code>if</code> by itself.</p>\n",
              "is_accepted" : false,
              "score" : 1
            }
          ],
        "body" : "<p>Let's try to type code below in console:</p>\n\n<pre><code>typeof + ''\n</code></pre>\n\n<p>This returns 'number', while typeof itself without argument throws an error. Why?</p>\n",
        "creation_date" : 1361575427,
        "last_activity_date" : 1422236934,
        "question_id" : 15034910,
        "score" : 3,
        "tags" : [ "javascript" ],
        "title" : "Why "typeof + ''" returns 'number'?"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p><a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.3.2.1\" rel=\"nofollow\">section 15.3.2.1</a> of the ECMA Script specification speaks about the new Function(...) expression, and the new Function(...) expression itself refers to the same logic as specified in section 13.2.</p>\n\n<p>Bullet number 11 about the new Function(...) expression specifies...</p>\n\n<blockquote>\n  <p>Return a new Function object created as specified in 13.2 passing P as the FormalParameterListopt and body as the FunctionBody. Pass in the Global Environment as the Scope parameter and strict as the Strict flag.</p>\n</blockquote>\n\n<p>Section 13.2 is the single source of function creation logic, whether creating a function expression, function declaration, or invoking the Function constructor.</p>\n\n<p>So to answer the question, no.  Creating a function declaration/expression doesn't call new Function(...).</p>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<blockquote>\n  <p>Due to the wording of \"creating a new Funciton object\", I was wondering if behind the scenes, function declarations/expressions were created by calling new Function(....)?</p>\n</blockquote>\n\n<p>No. It does exactly what is says, creating a new object and making it a function. What would you expect to happen behind the scenes of <code>new Function</code> else? Instead, <code>new Function</code> does call that function instantiation in 13.2 as well.</p>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>I'm reading the portion of ECMA 262 v5 script that speaks of <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-13\" rel=\"nofollow\">Function definitions</a>.  For both function declarations and function expressions, the following is mentioned:</p>\n\n<blockquote>\n  <p>Return the result of creating a new Function object as specified in\n  <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-13.2\" rel=\"nofollow\">13.2</a></p>\n</blockquote>\n\n<p>The first step of what is mentioned in section 13.2 is to \"create a new native ECMAScript object...\" and then \"Set the [[Class]] internal property of F to \"Function\".</p>\n\n<p>Due to the wording of \"creating a new Funciton object\", I was wondering if behind the scenes, function declarations/expressions were created by calling new Function(....)?</p>\n",
        "creation_date" : 1361907321,
        "last_activity_date" : 1422236924,
        "question_id" : 15097727,
        "score" : 2,
        "tags" : [ "javascript",
            "ecmascript-5",
            "function-declaration",
            "ecma262"
          ],
        "title" : "Are all function declarations & expressions created by called new Function() behind the scenes?"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p>I think you misinterpreted that sentence (from <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-10.4.3\" rel=\"nofollow\">§10.4.3, <em>Entering Function Code</em></a>):</p>\n\n<blockquote>\n  <p>The following steps are performed when control enters the execution context for function code contained in function object <code>F</code>, a caller provided <code>thisArg</code>, and a caller provided <code>argumentsList</code> […]</p>\n</blockquote>\n\n<p>It does not mean that the function which is entered must be contained in <code>F</code>, but that the <em>code that is entered</em> is contained in <em>the function <code>F</code></em> (which you are invoking).</p>\n\n<p>The <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-13.2.1\" rel=\"nofollow\"><code>[[Call]]</code> method</a> which is used when <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-11.2.3\" rel=\"nofollow\">calling a function</a> does not distinguish between global/local declared or invoked functions.</p>\n",
              "is_accepted" : true,
              "score" : 3
            },
            { "body" : "<p>Functions declaraed in global code are instantiated during Declaration Binding Instantiation of the global code in step 2 of 10.4.1.  </p>\n\n<p>This is done via step 5.c of 10.5 which actually creates each such function object via the first algorithm in section 13. Note that this sets the [[Scope]] of the function to the VariableEnvironment of the current execution context. The current execution context was set by step 1 of 10.4.1 (via 10.4.1.1) to the Global Environment.</p>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>The ECMAScript specification goes into detail about what happens when control enters the execution context of a <strong><a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-10.4.3\" rel=\"nofollow\">function within a function</a></strong>.</p>\n\n<pre><code>function foo() {\n  function bar() {\n\n  }\n  bar(); // Control will be given to the bar function.  Details specified by spec\n}\n</code></pre>\n\n<p>There also is an explanation of what happens when control <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-10.4.1\" rel=\"nofollow\">enters global code</a>.</p>\n\n<pre><code><script>\n  // Entering global code!  Details specified by spec\n</script>\n</code></pre>\n\n<p>However, there is nothing specifying what happens when entering control for a <strong>function defined in the global code</strong>.</p>\n\n<pre><code><script>\n  function foo() {\n  }\n  foo(); // Calling a function defined in the global environment...not specified by spec\n</script>\n</code></pre>\n\n<p><strong>Edit</strong>:  The reason this is important to me is because I'm curious what the internal [[Scope]] property of the function called by the global code will be.  I assume it will be the lexical environment of the global execution context, but there's nothing that specifies this in the specification.</p>\n",
        "creation_date" : 1362003581,
        "last_activity_date" : 1422236916,
        "question_id" : 15123595,
        "score" : 2,
        "tags" : [ "javascript",
            "ecmascript-5",
            "ecma262"
          ],
        "title" : "Details about what happens when entering a function declared in the global scope is missing from ECMAScript Specification v5?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>Javascript always passes arguments by value, so this won't work:</p>\n\n<pre><code> function foo(x) {\n    x = 100;\n }\n\n y = 5\n foo(y)\n y == 100 // nope\n</code></pre>\n\n<p>However this does work:</p>\n\n<pre><code> function foo(x) {\n    x.bar = 100;\n }\n\n y = {}\n foo(y)\n y.bar == 100 // yes\n</code></pre>\n\n<p>In the second snippet x is still passed by value, but this very value is a reference (pointer) to an object. So it's possible in a function to dereference it and access what's \"inside\" the object.</p>\n",
              "is_accepted" : false,
              "score" : 1
            } ],
        "body" : "<p>I have recently encountered a nasty issue in JS.</p>\n\n<p>Let say we pass a map, an array of objects to a function f.</p>\n\n<pre><code>var o=[{a:0}];\nfunction f(a){\n    for(var i in a){\n        if (a.hasOwnProperty(i)){\n            a[i]=null;\n        }\n    }\n    return a;\n};\nvar outp=f(o);\n\nalert(outp[0]+\" === \"+o[0]+\" : \"+(outp[0]===o[0]));\n\n// here we expect loose equality, and equality in type, \n//furthermore it should identically equal as well, and we got right!\n</code></pre>\n\n<p>But, we can not pass total responsibility of an object to a function as argument, same like in functional paradigm <code>o=(function(o){return o})()</code>, because any kind of modification to o is not referenced!</p>\n\n<pre><code>var o=[];\nfunction ff(a){\n    return (a=undefined);\n};\nvar outp=ff(o);\nalert(outp+\" === \"+o.constructor+\" : \"+(outp===o));\n// here we expect true, but we got false!\n</code></pre>\n\n<p>Why is the above described reference loss and \npresumably different referencce handling in the second use case, \nthough in both case, functions got the array argument in the 0. position?</p>\n",
        "creation_date" : 1365431279,
        "last_activity_date" : 1422236911,
        "question_id" : 15881736,
        "score" : 0,
        "tags" : [ "javascript",
            "arrays",
            "ecmascript-5",
            "ecma262"
          ],
        "title" : "argumental reference inconsistency in javascript"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>There are at least a couple of issues wrong with your example. First, the results of the expression used in the value tag should not return a break element, only the items you want the text-to-speech engine to voice back. You would need to do something like this to insert a break in between two values.</p>\n\n<pre><code><form id=\"F1\"> \n  <var name=\"Color1\" expr=\"'red'\"/> \n  <var name=\"Color2\" expr=\"'blue'\"/> \n  <block> \n    <prompt> \n       My favorite colors are  \n       <value expr=\"Color1\"/>\n       <break time=\"2000ms\"/>\n       <value expr=\"Color2\"/>\n    </prompt> \n  </block> \n</form>\n</code></pre>\n\n<p>And you cannot generate tags with ECMA script in VoiceXML. To dynamically generate tags you have to use your favorite web technology, such as ASP.NET, JSP, or PHP as examples. </p>\n\n<p>If you are new to VoiceXML and are familiar with ASP.NET MVC then there is an open source project you can use called <a href=\"https://voicemodel.codeplex.com/\" rel=\"nofollow\">VoiceModel</a> that generates dynamic VoiceXML without having to understand the VoiceXML syntax.</p>\n",
              "is_accepted" : true,
              "score" : 1
            } ],
        "body" : "<p>I am having issues with the following scenario: \nmy vxml has the following snippet: </p>\n\n<pre><code><block> \n<script src=\"myscript.es\"/> \n<audio> <value expr=\"temp()\"/> </audio> \n<exit/> \n</block> \n</code></pre>\n\n<p><strong>myscript.es:</strong> </p>\n\n<pre><code>function temp(){ \nvar delay = new String(\"abc <break time='2000ms'/> pqr\"); \nreturn delay; \n} \n</code></pre>\n\n<p>The evaluated expression is not being treated as a  tag  rather as follows:\naddd <break time='2000ms'/> bbb</p>\n\n<p>Is there a way to generate a  tag dynamically from ecmascript expression?</p>\n",
        "creation_date" : 1366795392,
        "last_activity_date" : 1422236900,
        "question_id" : 16188243,
        "score" : 0,
        "tags" : [ "javascript",
            "ecmascript-5",
            "ecma262",
            "vxml"
          ],
        "title" : "how to generate a vxml tag through adynamic ecma/javascript expression"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>Using the ! operator before the function causes it to be treated as an expression, so we can call it:</p>\n\n<pre><code>!function() {}()\n</code></pre>\n\n<p><a href=\"http://jasonlau.biz/home/faq/what-is-the-exclamation-mark-used-for-in-code\" rel=\"nofollow\">http://jasonlau.biz/home/faq/what-is-the-exclamation-mark-used-for-in-code</a></p>\n",
              "is_accepted" : false,
              "score" : 1
            } ],
        "body" : "<p>In jQuery javascript code I see</p>\n\n<pre><code>(function(window, undefined) {\n})(window);\n</code></pre>\n\n<p>And in Twitter</p>\n\n<pre><code>!function(window, undefined) {\n}(window);\n</code></pre>\n\n<p>Can someone tell what the difference between these two approaches is?</p>\n",
        "creation_date" : 1367503222,
        "last_activity_date" : 1422236885,
        "question_id" : 16340063,
        "score" : 2,
        "tags" : [ "javascript",
            "design-patterns",
            "plugins"
          ],
        "title" : "(function(){})() vs. !function(){}()"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>COM, ECMA and Server Side Object model does not provide this functionality I saw, but if anyone could give a better solution that would be great. The script I useed to get the ListName is as follows, </p>\n\n<pre><code>function getListTitle() {\n\nclientContext = new SP.ClientContext.get_current()\noWeb = clientContext.get_web();\noListColl = oWeb.get_lists();\noList = oListColl.getById(SP.ListOperation.Selection.getSelectedList());\nclientContext.load(oList);\nclientContext.executeQueryAsync(Function.createDelegate(this, this.onQuerySucceeded), Function.createDelegate(this, this.onQueryFailed));\n}\n\nfunction onQuerySucceeded() {\n\nvar s = window.location.toString().substring(0, window.location.toString().lastIndexOf('/'));\nif (s.endsWith('Forms')) {\n    s = s.substring(0, s.length - 6);\n}\n}\n\nfunction onQueryFailed(sender, args) {\nalert('Request failed. ' + args.get_message() + '\\n' + args.get_stackTrace());\n}\n</code></pre>\n\n<p>I assume by list you mean the URL of the list as Name would be easy, oList.get_title</p>\n\n<p>Regards\nPieter</p>\n",
              "is_accepted" : true,
              "score" : 1
            } ],
        "body" : "<p>In a Content Editor web part, how do I get the current List Name via ECMA?\nThe Content Editor Web Part in located on the AllItems view of the list.</p>\n\n<p>Trying to avoid server side code...</p>\n",
        "creation_date" : 1372146514,
        "last_activity_date" : 1422236878,
        "question_id" : 17291887,
        "score" : 0,
        "tags" : [ "javascript",
            "sharepoint",
            "sharepoint-2010"
          ],
        "title" : "SharePoint 2010 ECMA : get name of current list"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>I have note found any CQ documentation, but luckily I have found <a href=\"https://issues.apache.org/jira/browse/SLING-428\" rel=\"nofollow\">Apache SLING-428</a>, simply:</p>\n\n<pre><code>load(\"underscore.js\");\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 1
            } ],
        "body" : "<p>I'm trying to run some server-side ECMAScript in my CQ component.</p>\n\n<p>Is there any way to include/import/require some other file (Underscore.js in fact) in my <code>/components/myComp/script.ecma</code>?</p>\n",
        "creation_date" : 1372250433,
        "last_activity_date" : 1422236876,
        "question_id" : 17320278,
        "score" : 1,
        "tags" : [ "javascript",
            "cq5",
            "sling"
          ],
        "title" : "How to include one ecma into another in CQ component?"
      },
      { "answer_count" : 3,
        "answers" : [ { "body" : "<p>I think it's down to this:</p>\n\n<pre><code>function SubColors() {\n    //inherit properties\n    SuperColors.call(this);\n}\n</code></pre>\n\n<p>What you are doing here is executing <code>SuperColors</code> but making <code>this</code> refer to the <code>SubColors</code> instance you're creating.  Inside <code>SuperColors</code> the <code>SubColors</code> instance then gets given its own <code>colors</code> property - <em>this hides the <code>colors</code> attribute on prototype</em>.</p>\n\n<p>So, when something tries to look up <code>colors</code> on your <code>SubColours</code> instance it finds something <em>on that instance</em> and doesn't look up the prototype chain any further.  When you delete <code>colors</code> on <code>instance1</code> subsequent lookups of <code>instance1.colors</code> now have to look up the prototype chain to find the <code>SuperColors</code> version, but when you create <code>instance2</code>, you are again creating <code>colors</code> on the <code>SubColors</code> instance which hides the version on <code>SuperColors</code>.  </p>\n\n<p>If you <code>delete instance2.colors</code> you will see that <code>instance2.colors</code> now resolves to the version of <code>colors</code> with teh whole rainbow.</p>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<blockquote>\n<pre><code>// this should manipulate SuperColor's constructor of colors\ndelete instance1.colors;\ninstance1.colors.push(\"green\", \"blue\", \"purple\");\n</code></pre>\n</blockquote>\n\n<p>Not exactly. It doesn't manipulate the <code>SuperColor</code> constructor, but the <code>SubColor.prototype</code> (a <code>SuperColor</code> instance), from which the <code>instance1</code> inherits its <code>.colors</code> property (now that it has no own one any more).</p>\n\n<blockquote>\n<pre><code>// instantiate a new SubColor object that should inherit SuperColor's entire rainbow\nvar instance2 = new SubColors();\n</code></pre>\n</blockquote>\n\n<p>No, nothing changed in the inheritance process. <code>instance2</code> still inherits from <code>SubColor.prototype</code> just as <code>instance1</code> does. And the <code>SuperColor</code> constructor is still called on the new instance…</p>\n\n<blockquote>\n<pre><code>alert(instance2.colors); // WHY ISN'T THIS THE ENTIRE RAINBOW?\n</code></pre>\n</blockquote>\n\n<p>…where it creates a brand new array which is assigned to a new, <strong>own</strong> <code>.colors</code> property of the new instance! That new array is the one you're accessing, and it was never modified by anything.</p>\n\n<p>If you would</p>\n\n<pre><code>delete instance2.colors;\n</code></pre>\n\n<p>then you could see the <code>SubColor.prototype.colors</code> as well when doing</p>\n\n<pre><code>alert(instance2.colors);\n</code></pre>\n",
              "is_accepted" : true,
              "score" : 2
            },
            { "body" : "<p>Delete <code>instance2.colors</code>. Then you'll get the entire rainbow:</p>\n\n<pre><code>delete instance2.colors;\nalert(instance2.colors);\n</code></pre>\n\n<p>See the demo: <a href=\"http://jsfiddle.net/ZKAZf/1/\" rel=\"nofollow\">http://jsfiddle.net/ZKAZf/1/</a></p>\n\n<p>You should read the following posts on inheritance in JavaScript:</p>\n\n<ol>\n<li><a href=\"http://aaditmshah.github.io/why-prototypal-inheritance-matters/\" rel=\"nofollow\">Aadit M Shah | Why Prototypal Inheritance Matters</a></li>\n<li><a href=\"http://stackoverflow.com/questions/8093057/javascript-inheritance-and-the-constructor-property/8096017#8096017\">JavaScript inheritance and the constructor property</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2800964/benefits-of-prototypal-inheritance-over-classical/16872315#16872315\">Benefits of prototypal inheritance over classical?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/17008086/no-ways-to-have-class-based-objects-in-javascript/17008403#17008403\">No ways to have class-based objects in javascript?</a></li>\n</ol>\n",
              "is_accepted" : false,
              "score" : 1
            }
          ],
        "body" : "<p>So I've read up and down on the topic of combination inheritance in JavaScript. I get that the intent is to use prototype chaining for to inherit properties and methods-- and use constructor stealing to inherit instance properties.</p>\n\n<p>I've provided an example that is boggling me and preventing me from fully understanding this concept.</p>\n\n<p>In a nutshell, I create a SuperColors parent function that passes along its properties to SubColors by a call() execution in the SubColors constructor method. As I understand it, this should allow the instance (instance1) to have its own color properties as I've demonstrated.</p>\n\n<p><strong>Here's the quirky part.</strong> I delete the instance1's property of colors. This should mean that when I push new colors they should manipulate SuperColors color property to the full rainbow. Then when I create a new instance (instance2) of SubColors they should inherit the rainbow.</p>\n\n<p>They don't though. If we look at the instance2 in console.log() the colors were instantiated with \"Red,Orange,Yellow\", <strong>even though</strong> we can clearly see that SuperColor's color property has the entire rainbow.</p>\n\n<p>This doesn't make sense to me-- am I understanding prototype inheritance incorrectly or is this a weird quirk of the language that is unexpected?</p>\n\n<pre><code>function SuperColors() {\n    this.colors = [\"red\", \"orange\", \"yellow\"];\n}\n\nSuperColors.prototype.sayColors = function () {\n    alert(\"SuperColors \" + this.colors);\n};\n\nfunction SubColors() {\n    //inherit properties\n    SuperColors.call(this);\n}\n\n// inherit methods\nSubColors.prototype = new SuperColors();\n\nSubColors.prototype.sayRainbow = function () {\n    alert(this.colors + \"a whole rainbow!\");\n};\n\n// create an instance of SubColors\nvar instance1 = new SubColors();\n\n// push colors to colors property on instance\ninstance1.colors.push(\"green\", \"blue\", \"purple\");\nalert(instance1.colors); // \"red, orange, yellow, green, blue, purple\"\ninstance1.sayColors(); // \"SuperColors red,orange,yellow,green,blue,purple\";\n\n// delete instance of colors\ndelete(instance1.colors);\nconsole.log(instance1);\n\n// this should manipulate SuperColor's constructor of colors\ninstance1.colors.push(\"green\", \"blue\", \"purple\");\n\n// instantiate a new SubColor object that should inherit SuperColor's entire rainbow\nvar instance2 = new SubColors();\n\nalert(instance1.colors);\nalert(instance2.colors); // WHY ISN'T THIS THE ENTIRE RAINBOW? It should have been instantiated with SuperColor's modified colors.\n\nconsole.log(instance2); // Shows that SuperColors.colors has the rainbow, but the instance has only 3 colors?\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/ZKAZf/\" rel=\"nofollow\">http://jsfiddle.net/ZKAZf/</a></p>\n",
        "creation_date" : 1373975416,
        "last_activity_date" : 1422236869,
        "question_id" : 17675785,
        "score" : 0,
        "tags" : [ "javascript" ],
        "title" : "Javascript Combination Inheritance - Unexpected Result"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>have you tried tailing your error.log? i tried your script and it didn't work--this particular version of it does, though:</p>\n\n<pre><code>var workflowData = workItem.getWorkflowData();\nif (workflowData.getPayloadType() == \"JCR_PATH\") {\n    var path = workflowData.getPayload().toString();\n    var jcrsession = workflowSession.getSession();\n    var node = jcrsession.getNode(path);\n    if (!node.hasProperty(\"foo\")){\n    var cal = Packages.java.util.Calendar.getInstance();\n            node.setProperty(\"foo\", cal);\n            node.save();\n         }\nif (!node.hasProperty(\"foo2\")){\n            node.setProperty(\"foo2\", \"2020-08-26T22:30:00.000+05:30\");\n            node.save();\n        }\n}\n</code></pre>\n\n<p>note that instead of granite*, it's just workItem and workSession. also note that WorkflowSession doesn't have an adaptTo() method (unless i'm using an older cq version than you). it already has a getSession() method as part of the interface.</p>\n\n<p>even when that's all said and done, this failed because of the content i was sending through the workflow--make sure the node you're trying to write to accepts those property names. cq:Page is very restrictive, but cq:PageContent is not (so retrieve the jcr:content subnode, assuming you're launching workflows against cq:Page or dam:Asset nodes):</p>\n\n<pre><code>    var node = jcrsession.getNode(path).getNode(\"jcr:content\");\n</code></pre>\n",
              "is_accepted" : true,
              "score" : 1
            } ],
        "body" : "<p>I need to add a property to a page on page activation. I have decided to set up a workflow process that does the same before an activation step. My custom workflow step (the one before the activation step) makes use of an ECMA script to achieve this. Here's what I have so far.</p>\n\n<pre><code>var workflowData = graniteWorkItem.getWorkflowData();\nif (workflowData.getPayloadType() == \"JCR_PATH\") {\n    var path = workflowData.getPayload().toString();\n    var jcrsession = graniteWorkflowSession.adaptTo(Packages.javax.jcr.Session);\n    var node = jcrsession.getNode(path);\n    if (!node.hasProperty(\"foo\")){\n    var cal = Packages.java.util.Calendar.getInstance();\n            node.setProperty(\"foo\", cal);\n            node.save();\n         }\nif (!node.hasProperty(\"foo2\")){\n            node.setProperty(\"foo2\", \"2020-08-26T22:30:00.000+05:30\");\n            node.save();\n        }\n}\n</code></pre>\n\n<p>However, when I run the workflow on a page, the properties that I need to get created (foo and foo2 in this instance) do not get created.</p>\n\n<p>What am I doing wrong?</p>\n",
        "creation_date" : 1377847533,
        "last_activity_date" : 1422236862,
        "question_id" : 18527241,
        "score" : 1,
        "tags" : [ "javascript",
            "cq5",
            "jcr"
          ],
        "title" : "add a new property to a node(page) using ECMA script"
      },
      { "answer_count" : 3,
        "answers" : [ { "body" : "<p><em>Others will explain this better than I, so fellow SO users, feel free to critique my answer. I'll delete if it is terribly egregious.</em></p>\n\n<hr>\n\n<p>Think of it like inheritance. If an object that was created from the constructor doesn't have its own <code>num</code> property, it looks to its prototype (or parent or super or whatever) for the value. </p>\n\n<p>So whatever that value is, is the value you'll get. Update it, and any object that looks to it will find that updated value.</p>\n\n<p>I believe the prototyped properties are not copied for each instance, but rather are \"looked up\" by the instance. As such, the values of the prototyped properties don't really add to the size of the object, since the all share the same set.</p>\n\n<hr>\n\n<p><strong>EDIT:</strong> This may help too. Sections 4.3.4 and 4.3.5 under Definitions in the spec, 5th edition.</p>\n\n<blockquote>\n  <p><strong>4.3.4</strong></p>\n  \n  <p><strong>constructor</strong></p>\n  \n  <p>Function object that creates and initialises objects.\n  NOTE    The value of a constructor’s “prototype” property is a prototype object that is used to implement inheritance and shared properties.</p>\n  \n  <p><strong>4.3.5</strong> </p>\n  \n  <p><strong>prototype</strong></p>\n  \n  <p>object that provides shared properties for other objects.</p>\n  \n  <p>NOTE   When a constructor creates an object, that object implicitly references the constructor’s “prototype” property for the purpose of resolving property references. The constructor’s “prototype” property can be referenced by the program expression constructor.prototype, and properties added to an object’s prototype are shared, through inheritance, by all objects sharing the prototype. Alternatively, a new object may be created with an explicitly specified prototype by using the Object.create built-in function.</p>\n</blockquote>\n",
              "is_accepted" : false,
              "score" : 2
            },
            { "body" : "<p>The way this works is that properties are looked up on the object first, then if they're not found, by looking them up in the prototype.</p>\n\n<blockquote>\n  <p>If I attempt to reason it out, it\n  seems like the initially the instance\n  does not have its own num property and\n  a lookup happens where it's discovered\n  on the prototype, but once you\n  actually set the property (internally\n  with this.num or externally with\n  instanceName.num) you create a\n  property on the instance.property on the instance.</p>\n</blockquote>\n\n<p>This is exactly how it works. If you want to remove the property that's set on an object, you can use delete:</p>\n\n<pre><code>delete myOtherObj.num;\n</code></pre>\n\n<p>this will remove myOtherObj's num property and allow the prototype version to show through. </p>\n\n<p>The portion of the spec that you quoted is attempting to explain how the internal [[Prototype]] property is set for newly-created instances. Other than its role in property lookup, [[Prototype]] is like any other Javascript object reference. </p>\n\n<p>So, when the \"prototype\" property of the constructor is \"copied\" into [[Prototype]] for a newly-created object, it actually gets a reference to the original prototype property on the constructor, which can be modified later.</p>\n\n<hr>\n\n<p>As another example:</p>\n\n<pre><code>function Obj() {};\nObj.prototype.num=1;\n\nvar myObj = new Obj();\nconsole.log(myObj.num); // logs 1\n\nObj.prototype = {num:3}; // replaces Obj.prototype\nconsole.log(myObj.num); // logs 1\n\nvar myOtherObj = new Obj(); \nconsole.log(myOtherObj.num); // logs 3\nconsole.log(myObj.num); // still logs 1\n</code></pre>\n\n<p>Note that once the object has been constructed, it keeps a reference to whatever object was set as the constructor's prototype <em>at the time the constructor was called</em>. Changing a property on that object will still affect any other references to the same prototype.</p>\n",
              "is_accepted" : true,
              "score" : 4
            },
            { "body" : "<p>This is completely normal, not weird. ;)</p>\n\n<p>When you try to access a property of an object, that's not set in that object, the JS engine gets up the prototype chain and tries to read it there. This is true as long as the property is not explicitly set in that object.</p>\n\n<p>When you change a prototype of a class the object has inherited, the property on the object itself doesn't change, it is just still not set and the property of the class is still read.</p>\n\n<p>Only when you set a certain property of an object, the property is defined within that object. This is also why a certain property of an already declared object changes, when you change an object's prototype.</p>\n\n<p>To clarify:</p>\n\n<pre><code>Obj.prototype.num = 3;\nconsole.log(myObj.num); //logs 3\nconsole.log(myOtherObj.num); //logs 3\n</code></pre>\n\n<p>Here you actually still read <code>Obj.prototype.num</code>.</p>\n\n<pre><code>myObj.num += 2;\n</code></pre>\n\n<p>Here you actually <em>read</em> <code>Obj.prototype.num</code> and <em>write</em> to <code>myObj.num</code>.</p>\n\n<pre><code>Obj.prototype.num = 4;\nconsole.log(myObj.num); //logs 5 not updated\nconsole.log(myOtherObj.num); //logs 4 updated\n</code></pre>\n\n<p>Now you read <code>myObj.num</code> and <code>Obj.prototype.num</code>, respectively.</p>\n",
              "is_accepted" : false,
              "score" : 3
            }
          ],
        "body" : "<p>Why are properties of an instance that store primitive values, not references, updated when the prototype is updated if the property has not been set by the instance itself?</p>\n\n<p>Let me give an example:</p>\n\n<pre><code>var Obj = function () {};\nObj.prototype.num = 1;\n\nvar myObj = new Obj();\nvar myOtherObj = new Obj();\nconsole.log(myObj.num); //logs 1\nconsole.log(myOtherObj.num); //logs 1\n\n//After instances are created they still share the value (which is strange):\nObj.prototype.num = 3;\nconsole.log(myObj.num); //logs 3\nconsole.log(myOtherObj.num); //logs 3\n\n//Update one of the instances property\nmyObj.num += 2;\nconsole.log(myObj.num); //logs 5\nconsole.log(myOtherObj.num); //logs 3\n\n//Here it gets weird:\nObj.prototype.num = 4;\nconsole.log(myObj.num); //logs 5 not updated\nconsole.log(myOtherObj.num); //logs 4 updated\n</code></pre>\n\n<p>Couple of weird things here:</p>\n\n<p>After an instance is created, updating the class definition updates the instance value if and only if it's never been updated by the instance itself.</p>\n\n<p>If I attempt to reason it out, it seems like the initially the instance does not have its own <code>num</code> property and a lookup happens where it's discovered on the prototype, but once you actually set the property (internally with <code>this.num</code> or externally with <code>instanceName.num</code>) you create a property on the instance.</p>\n\n<p>That doesn't seem to jive with what the ECMA5 specification says:</p>\n\n<blockquote>\n  <p>The value of the prototype property is used to initialise the [[Prototype]] internal property of a newly created object before the Function object is invoked as a constructor for that newly created object.</p>\n</blockquote>\n\n<p>Sounds like it's supposed to populate the instances internal [[Prototype]], but yet it's still able to be modified by updating the constructor's prototype property. I get that if I set the class definition's property to an object like an array that the reference is actually getting passed to the instance and updating the array anywhere will modify the property for everyone, but these are primitive values and it doesn't seem to make much sense.</p>\n",
        "creation_date" : 1289422424,
        "last_activity_date" : 1422236813,
        "question_id" : 4148981,
        "score" : 3,
        "tags" : [ "javascript",
            "prototype"
          ],
        "title" : "Why are properties of an instance updated when the prototype is updated if the property has not been set by the instance itself?"
      },
      { "answer_count" : 4,
        "answers" : [ { "body" : "<p>This is destructuring assignment, available in Javascript 1.7 (mozilla) and some newer browsers: <a href=\"http://www.robertnyman.com/javascript/javascript-1.7.html#destructuring-assignment\">http://www.robertnyman.com/javascript/javascript-1.7.html#destructuring-assignment</a></p>\n",
              "is_accepted" : false,
              "score" : 5
            },
            { "body" : "<p>JavaScript currently available in all browsers does not support anything but <code>variable=</code>, and <code>object.property=</code> on the left-hand side of expressions.</p>\n\n<p>Its spec is so horrible I won't link to it.</p>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<p>This is a feature called <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/New_in_JavaScript/1.7#Destructuring_assignment_%28Merge_into_own_page.2Fsection%29\" rel=\"nofollow\">destructuring assignment</a>, which was added in JavaScript 1.7. It is not a part of ECMAScript 5: <a href=\"http://stackoverflow.com/questions/1330498/what-is-cross-browser-support-for-javascript-1-7s-new-features-specifically-arr\">What is cross browser support for JavaScript 1.7's new features? Specifically array comprehensions and the "let" statement</a></p>\n",
              "is_accepted" : true,
              "score" : 7
            },
            { "body" : "<p>Opera's older \"futhark\" JavaScript engine had support for this, but it was dropped in the new engine \"carakan\", because it was non-standard, not required on the web, and would complicate the new and very fast implementation.</p>\n",
              "is_accepted" : false,
              "score" : 3
            }
          ],
        "body" : "<p>For a project a developer sent us a .js file with code similar to this:</p>\n\n<pre><code>var myList = [1,2,3];\nvar a,b,c;\n\n[a,b,c] = myList;\n</code></pre>\n\n<p>It works in Opera 10.30, Firefox 3.6.x but it's not ok for Opera 10.60 and Chrome.</p>\n\n<p>It's just curiosity, do you have any reference or link that says this code is compliant to JS/ECMA standard or not? </p>\n\n<p>What do you think?</p>\n",
        "creation_date" : 1287655916,
        "last_activity_date" : 1422236809,
        "question_id" : 3986348,
        "score" : 11,
        "tags" : [ "javascript",
            "google-chrome",
            "standards",
            "opera"
          ],
        "title" : "Multiple assignment in javascript?"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p>ECMAScript is a standard. JavaScript is an implementation of that standard (edition 3 of that standard to be more exact). </p>\n\n<p>Other implementations of ECMAScript are ActionScript and JScript.</p>\n\n<p>Also note that there isn't <em>one JavaScript</em>. Each JavaScript engine may implement its own version of the language as long as it meets the ECMAScript requirements. This means that browsers (JS engines) <strong>may</strong> have additional functionality, but they all <strong>must</strong> have the base ECMAScript functionality.</p>\n\n<p>And now, to answer your question, according to <a href=\"http://www.rfc-editor.org/rfc/rfc4329.txt\" rel=\"nofollow\">RFC 4329</a>, if the media type is set to <code>application/ecmascript</code>, rather than <code>application/javascript</code>, it must adhere to a stricter standard.</p>\n\n<blockquote>\n  <p>This document defines equivalent\n  processing requirements for the types\n  text/javascript, text/ecmascript, and\n  application/javascript. Use of and\n  support for the media type\n  application/ecmascript is considerably\n  less widespread than for other media\n  types defined in this document.  Using\n  that to its advantage, this document\n  defines stricter processing rules for\n  this type to foster more interoperable\n  processing.</p>\n</blockquote>\n",
              "is_accepted" : true,
              "score" : 15
            },
            { "body" : "<p>ECMAscript is a programming language standard, like lisp. javascript is an implementation of such, along with non-ecmascript features like the DOM. Actionscript(for Flash) is another one. Just like writing in \"lisp\" means writing in some dialect like Common Lisp or Scheme, actually writing straight-up ECMAscript might not only be pointless, but unusuable in the dialects(although I think Actionscript 3 and recent javascript apply the whole ecmascript standard).</p>\n",
              "is_accepted" : false,
              "score" : 2
            }
          ],
        "body" : "<p>What would happen if I start to define my script tags as emca will it execute to a different standard?</p>\n\n<p>Does anyone actually use ecma script instead of straight up javascipt...?</p>\n",
        "creation_date" : 1290633822,
        "last_activity_date" : 1422236777,
        "question_id" : 4271676,
        "score" : 5,
        "tags" : [ "javascript" ],
        "title" : "What is the difference between javascript and ecma script?"
      },
      { "answer_count" : 6,
        "answers" : [ { "body" : "<p>This is how the value of <code>this</code> is determined.</p>\n\n<pre><code>// function case\nfoo(); // this inside foo will refer to the global object\n\n// method case\ntest.foo(); // this inside foo will refer to test\n\n// constructor case\nnew foo(); // this inside foo will refer to the newly created object\n</code></pre>\n\n<p>So unless you deal with a method or a constructor <code>this</code> is rather useless.</p>\n",
              "is_accepted" : true,
              "score" : 6
            },
            { "body" : "<pre><code>outF.inner\n</code></pre>\n\n<p>points to a variable that is not accessible in that scope from where line of code is.</p>\n\n<p><code>inner</code> is declared in <code>outterF</code> and it's only accessible in there.</p>\n\n<p>If you used</p>\n\n<pre><code>this.inner = innerF();\n</code></pre>\n\n<p>it may be accessible (can't test right now)</p>\n",
              "is_accepted" : false,
              "score" : 2
            },
            { "body" : "<p>outF is [object Window] and doesn't have a \"inner\" variable, as such if inF = outF.inner, it's undefined</p>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>Note that <code>outF</code> (in the line <code>outF.inner</code>) doesn't refer to <code>outF</code>'s <em>scope</em>, but rather the <em>value</em> assigned to <code>outF</code>.</p>\n\n<pre><code>function MyCtor() {\n    this.someVal = function() {\n        document.write(\"someVal's this? \" + this);\n    };\n}\n\nvar myobj = new MyCtor();\nmyobj.someVal();\n</code></pre>\n\n<p>Gives <code>someVal's this? [object Object]</code> (or whatever), which is what you want.</p>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>Ok so apparently I was invoking the functions incorrectly... (thanks to Ivo Wetzel for pointing out).\nChanging the code to this looks better:</p>\n\n<pre><code><h3>Object</h3>\n        <div style=\"padding-left: 10px;\">\n            <script type=\"text/javascript\">\n                var outF = function outterF()\n                {\n                    var that = this;\n                    function getThat() {return that;}\n\n                    document.writeln(\"outterF.this = \" + this + \"<br>\");\n\n                    var inner = function innerF() \n                    {\n                        document.writeln(\"innerF.this = \" + this + \"<br>\");\n                        return this;\n                    };\n\n\n                    document.writeln(\"inner is \" + typeof inner + \"<br>\");\n\n                    return this;\n                }\n\n                document.writeln(\"<b>From Inside:</b><br>\");\n                var inF = outF.inner;\n\n                document.writeln(\"<br>\");\n                document.writeln(\"<b>From Outside:</b><br>\");\n                document.writeln(\"outterF.this = \" + typeof outF + \"<br>\");\n                document.writeln(\"innerF.this = \" + typeof inF + \"<br>\");\n            </script>\n        </div>\n</code></pre>\n\n<p>Result:</p>\n\n<pre><code>Object\nFrom Inside:\n\nFrom Outside:\noutterF.this = function\ninnerF.this = undefined\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>'this' is a keyword not a property so you need to reference it as a standalone semantic:</p>\n\n<pre><code>//correct syntax...that gets value of this keyword\nvar that = this \n\n//unusual syntax...that is undefined, unless you explicitly set foo.this earlier\nvat that = foo.this; \n</code></pre>\n\n<p>Specifically a 'this' value is assigned for every runtime function context (and the global context). It is immutable within a give context. The rules are somewhat complex but the important cases are...</p>\n\n<p>In global context 'this' will always be the global object (e.g. window)</p>\n\n<pre><code>var that = this; //window\n</code></pre>\n\n<p>When invoked from a method call 'this' will be the receiver of the method call</p>\n\n<pre><code>obj.foo = function() {\n    return this;\n}\n\nobj.foo(); //obj\n</code></pre>\n\n<p>When invoked from a function call 'this' will be the global object</p>\n\n<pre><code>var obj = {};\nobj.foo = function() {\n    return this;\n}\n\nvar myFn = obj.foo;\nmyFn(); //window\n</code></pre>\n\n<p>You can also use call/apply to set a custom 'this' value within a function context. If you're interested in learning more read this: (no pun :-) ) <a href=\"http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/\" rel=\"nofollow\">http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/</a>  </p>\n",
              "is_accepted" : false,
              "score" : 1
            }
          ],
        "body" : "<p>I am currently reading the book \"Javascript: The Good Parts\" and was playing with Functions.\nI produced a test script to test some properties and I am somewhat confused by the results.\nHere is the code:</p>\n\n<pre><code><h3>Object</h3>\n        <div style=\"padding-left: 10px;\">\n            <script type=\"text/javascript\">\n                function outterF()\n                {\n                    document.writeln(\"outterF.this = \" + this + \"<br>\");\n\n                    function innerF() \n                    {\n                        document.writeln(\"innerF.this = \" + this + \"<br>\");\n                        return this;\n                    };\n\n                    var inner = innerF();\n                    return this;\n                }\n\n                document.writeln(\"<b>From Inside:</b><br>\");\n                var outF = outterF();\n                var inF = outF.inner;\n\n                document.writeln(\"<br>\");\n                document.writeln(\"<b>From Outside:</b><br>\");\n                document.writeln(\"outterF.this = \" + outF + \"<br>\");\n                document.writeln(\"innerF.this = \" + inF + \"<br>\");\n            </script>\n        </div>\n</code></pre>\n\n<p>Result is:</p>\n\n<pre><code>Object\nFrom Inside:\noutterF.this = [object Window]\ninnerF.this = [object Window]\n\nFrom Outside:\noutterF.this = [object Window]\ninnerF.this = undefined\n</code></pre>\n\n<p>Notice that outF.inner returns \"undefined\", is that some kind of a language bug?<br>\nObviously, outF.inner points to Window object that has nothing to do with my object but shouldn't it be at least pointing to a Function object instead?<br><br></p>\n\n<p>Thanks<br>\n-Assaf</p>\n",
        "creation_date" : 1293311746,
        "last_activity_date" : 1422236757,
        "question_id" : 4531713,
        "score" : 0,
        "tags" : [ "javascript",
            "jquery",
            "function",
            "object"
          ],
        "title" : "Javascript "this" variable confusion"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>The only way to affect the normal scrollbars are using Microsoft IE specific proerties.</p>\n\n<p>You can see more here <a href=\"http://www.webdevelopersnotes.com/tips/html/coloring_scrollbars_using_styles_css_properties.php3\" rel=\"nofollow\">http://www.webdevelopersnotes.com/tips/html/coloring_scrollbars_using_styles_css_properties.php3</a></p>\n\n<p>But that probabrlu do not work in all browsers.</p>\n\n<p>The alternative is to use a scrollbar component that uses overflow:hidden + javascript to create your own scrollbar.</p>\n\n<p>And I do not know of any of those for SVG.  </p>\n\n<p>The examples for jQuery you ha uses this later tecnique, it's not the normal browser scrollbars but rather div layers and images.</p>\n\n<p>In your case you might be able to use them if you place the ifram inside a div that uses the jQuery solution to scroll.  Then make the iframe as large as the SVG, that way you scroll the whole iframe window within the div layer.</p>\n",
              "is_accepted" : false,
              "score" : 1
            } ],
        "body" : "<p>All,</p>\n\n<p>In our web application, we have an iFrame that loads SVG. The browser automatically add the scroller bar when the user zooms into the SVG using the controls in our web application. Now we want to theme this 'dynamic' scrollbar so that it's look is in line with the rest of the interface.</p>\n\n<p>I have looked at a few options in jquery such as the '<a href=\"http://jscrollpane.kelvinluck.com/#support\" rel=\"nofollow\">jscrollpane</a>' & '<a href=\"http://manos.malihu.gr/tuts/jquery_custom_scrollbar.html\" rel=\"nofollow\">jquery custom scrollbar</a>', however, our problem is that we are using ECMA script with our SVG, whereas jquery is javascript based, needless to say, we are unable to theme the scrollbar using the jquery based solutions. Has anyone any suggestions of alternatives that could theme the iFrame scrollbar?</p>\n\n<p>many thanks,</p>\n",
        "creation_date" : 1295930274,
        "last_activity_date" : 1422236754,
        "question_id" : 4790037,
        "score" : 0,
        "tags" : [ "javascript",
            "iframe",
            "svg",
            "scrollbar"
          ],
        "title" : "Theming the iframe scroller bar"
      },
      { "answer_count" : 4,
        "answers" : [ { "body" : "<p>I did a bit more testing and here's a solution I've found. I haven't found a case where this breaks yet, but if someone sees something wrong with it please let me know:</p>\n\n<pre><code>(1)?(\\d{3})(\\d{3})(\\d{4})(?:x(\\d+))?\n</code></pre>\n\n<p>Update:\nI've revised the regex above to handle some more edge cases. This new version will fail completely if something unexpected is present.</p>\n\n<pre><code>(^1|^)(\\d{3})(\\d{3})(\\d{4})($|(?:x(\\d+))$)\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>If I were you, I would not go with a regular expression for this — it would cause more headaches than it solved. I would:</p>\n\n<ol>\n<li>Split the phone number on the \"x\", store the last part in the extension.</li>\n<li>See how long the initial part is, 9 or 10 digits\n<ul>\n<li>If it's 10 digits, check that the first is a 1, slice it off, and then continue with the 9-digit process:</li>\n<li>If it's 9 digits, split it up into 3-3-4 and split them into area code, exchange, number.</li>\n</ul></li>\n<li>Validate the area code and exchange code according to the rules of the <a href=\"http://en.wikipedia.org/wiki/North_American_Numbering_Plan\" rel=\"nofollow\">NANP</a>.</li>\n</ol>\n\n<p>This will validate your phone number and be much, much easier and will make it possible for you to enforce rules like \"no X11 area codes\" or \"no X11 exchange codes\" more-easily — you'd have to do this anyway, and it's probably easier to just use plain string manipulation to split it into substrings.</p>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<p>Regex option seems perfectly fine to me.</p>\n\n<pre><code>var subject = '2223334444';\nresult = subject.replace(/^1?(\\d{3})(\\d{3})(\\d{4})(x\\d+)?$/mg, \"1$1$2$3$4\");\nalert(result);\nif(!result.match(/^\\d{11}(?:x\\d+)?/))\n    alert('The phone number came out invalid. Perhaps it was entered incorrectly');\n</code></pre>\n\n<p>This will say <code>12223334444</code> when there is no extension</p>\n\n<p>I expect you want to tweak this out some, let me know how it should be.</p>\n",
              "is_accepted" : true,
              "score" : 1
            },
            { "body" : "<p>My regex is:</p>\n\n<pre><code>/\\+?[0-9\\-\\ \\(\\)]{10,22}/g\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>I need a regex for Javascript that will match a phone number stripped of all characters except numbers and 'x' (for extension). Here are some example formats:</p>\n\n<pre><code>12223334444\n2223334444\n2223334444x5555\n</code></pre>\n\n<p>You are guaranteed to always have a minimum of 10 numerical digits, as the leading '1' and extension are optional. There is also no limit on the number of numerical digits that may appear after the 'x'. I want the numbers to be split into the following backreferences:</p>\n\n<pre><code>(1)(222)(333)(4444)x(5555)\n</code></pre>\n\n<p>The parenthesis above demonstrate how I want the number to be split up into backreferences. The first set of parenthesis would be assigned to backreference $1, for example.</p>\n\n<p>So far, here is what I've come up with for a regex. Keep in mind that I'm not really that great with regex, and regexlib.com hasn't really helped me out in this department.</p>\n\n<pre><code>(\\d{3})(\\d{3})(\\d{4})\n</code></pre>\n\n<p>The above regex handles the 2nd case in my list of example test cases in my first code snippet above. However, this regex needs to be modified to handle both the optional '1' and extension. Any help on this? Thanks!</p>\n",
        "creation_date" : 1297267332,
        "last_activity_date" : 1422236738,
        "question_id" : 4947324,
        "score" : 1,
        "tags" : [ "javascript",
            "regex"
          ],
        "title" : "Need regex to match unformatted phone number syntax"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>How do you want to change the browser rendering engine with code executed server side ?</p>\n\n<p><a href=\"http://www.lunascape.tv/\" rel=\"nofollow\">Lunascape Browser</a> permits you to choose between 3 rendering engines with a dropdown menu. It won't be pro grammatically and it needs to run on Windows with Internet Explorer installed, but this will save you some time.</p>\n\n<p>Supported engines :</p>\n\n<ol>\n<li>Gecko (Firefox, Mozilla)</li>\n<li>Trident (Internet explorer)</li>\n<li>Webkit (Chrome, Safari)</li>\n</ol>\n\n<p>However, if you want to be thorough, you'll still need to test in each browser individually, since there's since each browser as specificity besides the rendering engine.</p>\n",
              "is_accepted" : false,
              "score" : 2
            } ],
        "body" : "<p>I'm working on a project to develop a cross-browser testing web app.  Simply put, I'm tired of having to maintain multiple browsers on the same system and IE in VMware solely for the purpose of testing.  Does anyone know if there is any way to change the render kit programmatically?  For example, if I insert a URL, I would be able to load the URL and switch the browser render within a frame of some assortment.  I am experienced with PHP, JS, and RoR if there is a solution using any of those.</p>\n\n<p>Thank you!</p>\n\n<p>John</p>\n",
        "creation_date" : 1299251830,
        "last_activity_date" : 1422236733,
        "question_id" : 5195571,
        "score" : 2,
        "tags" : [ "javascript",
            "php",
            "ruby-on-rails",
            "cross-browser"
          ],
        "title" : "Changing Render Kits in Browser"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>You can try adding both the SPServices calls inside one  $(document).ready instead of having two  $(document).ready blocks. There can be multiple  $(document).ready in a page but your issue sounds like only one SPService call is triggered on page load.</p>\n",
              "is_accepted" : false,
              "score" : 0
            } ],
        "body" : "<p>My approach is not working here.  I am on a Welcome Page of a SharePoint 2010 document set and have placed my script in a Content Editor Web Part CEWP. I've got a block of jquery/javascript using the following  code.  I can get one or the other set of values from two different blocks of code but not both.  So it seems like my duplicating some of the lines of code in the tow queries causes things to clash but I am not sure what i can change to make both sets unique or what is clashing between the two.  Any guidance greatly appreciated.  I'm just going in circles right now.  thanks  -dave</p>\n\n<p>I am using two blocks that look like this but differ at listName. Maybe the page can only support one of these?</p>\n\n<pre><code>         $(document).ready(function () {\n        $().SPServices({\n            operation: \"GetListItems\",\n            async: false,\n            CAMLRowLimit: 2000,                \n            listName: \"Personnel Management\",\n            completefunc: fnCallBack\n        });\n    });\n\n\n    function fnCallBack(xData, Status) {\n        var index = 0;\n        $documentListtable = $(\"#documentListtable\");\n        //Navigate through the XML\n        $(xData.responseXML).find(\"z\\\\:row, row\").each(function () {\n\n\n    //Get the values to a local variable\n            var _url = $(this).attr(\"ows_FileRef\").split(\";#\")[1];\n            var _name = $(this).attr(\"ows_LinkFilename\");\n       ;\n            var _author = $(this).attr(\"ows_Editor\").split(\";#\")[1];\n            var modifiedOn = $(this).attr(\"ows_Modified\");\n            var _TrainingStatus = $(this).attr(\"ows_Training_x0020_Certificates\");\n\n\n\n\n            //Create clone of the table row\n            var $row = $(\"#templates\").find(\".row-template\").clone();\n\n            //Add values to the column based on the css class\n\n            $row.find(\".DocumentName\").html(_pdfLink);\n            $row.find(\".Author\").html(_author);\n            $row.find(\".LastModifiedOn\").html(modifiedOn);\n            $row.find(\".TrainingStatus\").html(_TrainingStatus);\n\n\n            //Change the style for even rows\n            if (index % 2 == 0) {\n                $row.addClass(\"jtable-row-even\")\n            }\n\n\n     if (_TrainingStatus.indexOf(\"1001\") !=-1)\n      {\n       index = index + 1;\n            //add the row to table\n            $documentListtable.append($row);\n\n           }\n\n                    - \n</code></pre>\n",
        "creation_date" : 1378242275,
        "last_activity_date" : 1422236720,
        "question_id" : 18601474,
        "score" : 0,
        "tags" : [ "javascript",
            "sharepoint"
          ],
        "title" : "trouble querying 2 different lists from a SharePoint welcome page using ECMA"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>off the top of my head, this can be accomplished with an object and a bit of code.</p>\n\n<p>an object is a <code>hash</code> and thus gives you 80% of the functionality you want. the problem with js objects is that their keys are always strings. This is where you write a bit of code.</p>\n\n<p>I would create 2 objects:</p>\n\n<p>one where your keys are strings and one where your keys start out as numbers but become strings. if thing thing you are inserting is number, check in the numbers object, if string, check in the other object.</p>\n\n<p>psudocode:</p>\n\n<pre><code>numObj = {}\nstrObj = {}\n\nadd = (val) ->\n  if _.isNumber(val)\n    numObj[val] = true\n  else\n    strObj[val] = true\n\ncontains = (val) ->\n  if _.isNumber(val)\n    return !!numObj[val]\n  else\n    return !!strObj[val]\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 1
            } ],
        "body" : "<p>I've written some code that uses ECMAScript 6 <code>Set</code>s in various recursive functions, to keep track of objects that have already been encountered (thereby avoiding infinite recursion); e.g.</p>\n\n<pre><code>function traverse(start, callback, next) {\n    var seen = new Set();\n    function _traverse(obj) {\n        if (seen.has(obj)) { return }\n        seen.add(obj);\n        callback(obj);\n        _traverse(next(obj));\n    }\n    return _traverse(start);\n}\n</code></pre>\n\n<p>I prefer to use these <code>Set</code>s for this purpose over plain <code>Object</code>s, because the former distinguish between, e.g., between the integer <code>0</code> and the string <code>\"0\"</code>.</p>\n\n<p>It is my understanding, however, that browser support for such <code>Set</code>s may not yet be widespread enough for production code.  Therefore, I'm looking for a more portable replacement with equal functionality (such as, e.g., distinguishing <code>0</code> and <code>\"0\"</code>, as described above).</p>\n",
        "creation_date" : 1378329476,
        "last_activity_date" : 1422236719,
        "question_id" : 18623963,
        "score" : 0,
        "tags" : [ "javascript" ],
        "title" : "Portable replacement for ECMAScript 6 Set?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>You can use <a href=\"http://esprima.org/\" rel=\"nofollow\">Esprima</a> for this.</p>\n\n<p><em>\"ECMAScript parsing infrastructure for multipurpose analysis\"</em></p>\n\n<p>If you feed your last chunk to Esprima's validator, it says that \"Code is syntatically valid.\"</p>\n\n<p>Esprima follows ES5, so technically it could pass ES5-related syntax which ES3-only-compliant parser will not understand.</p>\n\n<p>But in this case I don't see anything related to ES5, so it must be a bug in JSDT.</p>\n",
              "is_accepted" : true,
              "score" : 2
            } ],
        "body" : "<p>I am currently trying to figure out why JSDT posts errors like '<a href=\"https://bugs.eclipse.org/bugs/show_bug.cgi?id=404832\" rel=\"nofollow\" title=\"JavaScript error on valid regex\">JavaScript error on valid regex</a>'. </p>\n\n<p>While I was testing I realized that it works fine for simple files like this:</p>\n\n<pre><code>var a = {\n    urlParseRE: /^\\s*(((([^:\\/#\\?]+:)?(?:(\\/\\/)((?:(([^:@\\/#\\?]+)(?:\\:([^:@\\/#\\?]+))?)@)?(([^:\\/#\\?\\]\\[]+|\\[[^\\/\\]@#?]+\\])(?:\\:([0-9]+))?))?)?)?((\\/?(?:[^\\/\\?#]+\\/+)*)([^\\?#]*)))?(\\?[^#]+)?)(#.*)?/,\n    test: b.replace(/^\\/|(\\/[^\\/]*|[^\\/]+)$/g, \"\")\n};\n</code></pre>\n\n<p>and reports errors on complex files like jQuery.mobile-1.3.1.min.js. </p>\n\n<p>I used online tool to format mimified jQuery script and then deleted almost all content out of it to make a simple example which would help to replicate the problem. When size of file was reduced from around 3000 to 300 lines some new validation errors were posted before original one above. I ended up my experiment with completely different problem. Validation error was posted on ',' in example below:</p>\n\n<pre><code>!function(){\n    window.alert(\"passed 1\");\n}(),\nfunction(){\n    window.alert(\"passed 2\");\n}();\nwindow.alert(\"passed 3\");\n</code></pre>\n\n<p>I understand that JSDT project was dormant for a while and supports only <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf\" rel=\"nofollow\" title=\"ECMAScript Specification\">ECMAScript v3</a> so before I create new issue I'd like to be sure this last simple js example is correct for ECMAScript Language Specification 3rd edition. Is there any online or offline tool to verify that?</p>\n",
        "creation_date" : 1379375151,
        "last_activity_date" : 1422236714,
        "question_id" : 18839149,
        "score" : 2,
        "tags" : [ "javascript",
            "eclipse",
            "validation",
            "ecma262"
          ],
        "title" : "Is there a tool to validate ECMAScript and confirm it is compatible with ECMAScript Language Specification 3rd edition?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<pre><code>clientContext.executeQueryAsync(Function.createDelegate(this, function(){_returnParam = onQuerySucceeded();}), Function.createDelegate(this, this.onQueryFailed)); \n\nalert(_returnParam);\n</code></pre>\n\n<p>It's normal. <code>executeQueryAsync</code> is asynchrone, so <code>executeQueryAsync</code> is called (= an AJAX request is done), and immediately after, without waiting for the AJAX to be completed, you call <code>alert(_returnParam)</code> with _returnParam that is still void.</p>\n\n<p>You need to call another function at the end of <code>onQuerySucceeded</code> if you want another action to be done.</p>\n\n<p>By the way, I always thought that the Microsoft way is really difficult to use. I've created a library to deal with Sharepoint, if you are interested (it's called <a href=\"http://aymkdn.github.io/SharepointPlus/\" rel=\"nofollow\">SharepointPlus</a>). For what you want to achieve, the code would be something like that (I've also review your code with the array):</p>\n\n<pre><code>$SP().list(\"ISATestdata\", \"/sites/SIandT%20Project%20Intelligence\").get({fields:\"Name2,Type1,Plan,Analyse,Design,Build,Test,Run,SupportMaintenance,Link1,Link2\",where:\"Name2 = 'Something'\"}, function(data) {\n  var listItemInfo = [];\n  for (var i=0, len=data.length; i<len; i++) {\n    listItemInfo[i] = [];\n    listItemInfo[i].push(data[i].getAttribute(\"Name2\"));\n    listItemInfo[i].push(data[i].getAttribute(\"Type1\"));\n    listItemInfo[i].push(data[i].getAttribute(\"Plan\"));\n    listItemInfo[i].push(data[i].getAttribute(\"Analyse\"));\n    listItemInfo[i].push(data[i].getAttribute(\"Design\"));\n    listItemInfo[i].push(data[i].getAttribute(\"Build\"));\n    listItemInfo[i].push(data[i].getAttribute(\"Test\"));\n    listItemInfo[i].push(data[i].getAttribute(\"Run\"));\n    listItemInfo[i].push(data[i].getAttribute(\"SupportMaintenance\"));\n    listItemInfo[i].push(data[i].getAttribute(\"Link1\"));\n    listItemInfo[i].push(data[i].getAttribute(\"Link2\"));\n  }\n\n  alert(listItemInfo[0][0] + \" \" + listItemInfo[0][1] + \" \" +listItemInfo[0][2] + \" \" + listItemInfo[0][3] + \" \" +listItemInfo[0][4] + \" \" );\n})\n</code></pre>\n",
              "is_accepted" : true,
              "score" : 2
            } ],
        "body" : "<p>I'm trying to retrieve a parameter from a success method that is called within and executeQueryAsync using Javascript ECMA scripting. </p>\n\n<p>I get tried follwing the suggestion here</p>\n\n<p><a href=\"http://www.learningsharepoint.com/2013/08/07/passing-parameters-to-success-method-in-executequeryasync-sharepoint/\" rel=\"nofollow\">http://www.learningsharepoint.com/2013/08/07/passing-parameters-to-success-method-in-executequeryasync-sharepoint/</a></p>\n\n<p>but I get the following error in the MicrosfotAjax.js file:</p>\n\n<p>\"The Collection has not been initialized. It has not been requested or the request has not been executed. It may need to be explicitly requested.\" in the alert(_returnParam); command, I get an undefined value when instead it should say \"hello\". I want to demonstrate a simple variable return before I get the success function to return listItemInfo array.</p>\n\n<p>Thank you for your consideration</p>\n\n<pre><code>function Tblsrch(camlstr){\nvar siteUrl = '/sites/SIandT%20Project%20Intelligence';\nvar hello;\nvar clientContext = new SP.ClientContext(siteUrl);\nvar oWebsite = clientContext.get_web();\nvar oList = oWebsite.get_lists().getByTitle('ISATestdata');\nvar camlQuery = new SP.CamlQuery();\n\ncamlQuery.set_viewXml(camlstr);\n\n    this.collListItem = oList.getItems(camlQuery);\n    var _returnParam;\n\nclientContext.executeQueryAsync(Function.createDelegate(this, function(){_returnParam = onQuerySucceeded();}), Function.createDelegate(this, this.onQueryFailed)); \n\nalert(_returnParam);\n\n}\n\n    function onQuerySucceeded(sender, args){\n       var listItemInfo = new Array();\n       var rowInd = 0;\n        var hello;\n                    var listItemEnumerator = collListItem.getEnumerator();\n\n            while (listItemEnumerator.moveNext()) {\n            var oListItem = listItemEnumerator.get_current();\n           // listItemInfo += '\\nType:' + oListItem.get_item('Name2') + ' | ' + oListItem.get_item('Plan') + ' | ' + oListItem.get_item('Type1');\n\n            listItemInfo[rowInd] = new Array(10);\n            listItemInfo[rowInd][0] =oListItem.get_item('Name2');\n            listItemInfo[rowInd][1] =oListItem.get_item('Type1');\n            listItemInfo[rowInd][2] = oListItem.get_item('Plan');\n            listItemInfo[rowInd][3] = oListItem.get_item('Analyse');\n            listItemInfo[rowInd][4] = oListItem.get_item('Design');\n            listItemInfo[rowInd][5] = oListItem.get_item('Build');\n            listItemInfo[rowInd][6] = oListItem.get_item('Test');\n            listItemInfo[rowInd][7] = oListItem.get_item('Run');\n            listItemInfo[rowInd][8] = oListItem.get_item('SupportMaintenance');\n            listItemInfo[rowInd][9] = oListItem.get_item('Link1');\n            listItemInfo[rowInd][10] = oListItem.get_item('Link2');\n\n            rowInd++;\n        }\n        alert(listItemInfo[0][0] + \" \" + listItemInfo[0][1] + \" \" +listItemInfo[0][2] + \" \" + listItemInfo[0][3] + \" \" +listItemInfo[0][4] + \" \" );\n    var _returnParam = \"hello\";\nreturn _returnParam;\n    }\n\nfunction onQueryFailed(sender, args){\n    alert('Request failed. ' + args.get_message() + '\\n' + args.get_stackTrace());\n}\n</code></pre>\n",
        "creation_date" : 1379792955,
        "last_activity_date" : 1422236709,
        "question_id" : 18936908,
        "score" : 0,
        "tags" : [ "javascript",
            "sharepoint",
            "executequery"
          ],
        "title" : "retrieve parameter from executeQueryAsync, javascript"
      },
      { "answer_count" : 0,
        "body" : "<p>Why two ECMAScript dialects , ActionScript-3 and JavaScript are executing Regular Expressions in a different ways? This RegEx:</p>\n\n<pre><code>var a = 10000;\nfunction numberWithCommas(i) {\n    return i.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n</code></pre>\n\n<p>in AS3 , while tracing <code>numberWithCommas(a)</code> the result is:</p>\n\n<p><img src=\"http://i.stack.imgur.com/PqDwd.jpg\" alt=\"enter image description here\"></p>\n\n<p>But in Javascript it gives as desired: <code>10,000</code> , <a href=\"http://jsfiddle.net/cpcya/\" rel=\"nofollow\">http://jsfiddle.net/cpcya/</a>.</p>\n",
        "creation_date" : 1380287719,
        "last_activity_date" : 1422236703,
        "question_id" : 19051749,
        "score" : 0,
        "tags" : [ "javascript",
            "regex",
            "actionscript-3"
          ],
        "title" : "RegEx in ActionScript-3 and JavaScript behaves different"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>Now I found it out on my own. Maybe others know a better solution but I can achieve the desired effect by passing the Jasmine TestRunner the parameters <code>package</code> and <code>spec</code> with package pointing to my root package and spec pointing to a non existing spec. This makes the test runner skip all packages. Then I can checkmark \"skipped\" and immediately get a list of all skipped tests which is of course a link list for all tests.</p>\n\n<p>This almost solves my issue. Except that I would still need a way to tell it to check the checkbox for me.</p>\n",
              "is_accepted" : true,
              "score" : 0
            } ],
        "body" : "<p>I am using Jasmine for unit testing. By now the tests are running rather long. Of course I can specify suitable URL parameters to pick the desired tests. However I would find it way more convenient if I could tell Jasmine to only list all tests and then execute whatever I explicitly pick. Has anyone an idea how to perform this?</p>\n",
        "creation_date" : 1381211263,
        "last_activity_date" : 1422236698,
        "question_id" : 19240005,
        "score" : 0,
        "tags" : [ "javascript",
            "jasmine"
          ],
        "title" : "Making Jasmine list all tests instead of executing them"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p><em>Probably</em>. It's <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.7.4.2\">defined in the 5th edition specification, §15.7.4.2</a>:</p>\n\n<blockquote>\n  <p>If ToInteger(<em>radix</em>) is not an integer between 2 and 36 inclusive throw a <strong>RangeError</strong> exception. If ToInteger(<em>radix</em>) is an integer from 2 to 36, but not 10, the result is a String representation of this Number value using the specified radix. <strong>Letters a-z are used for digits with values 10 through 35.</strong> The precise algorithm is implementation-dependent if the radix is not 10, however the algorithm should be a generalisation of that specified in 9.8.1.</p>\n</blockquote>\n\n<p><em>(my emphasis)</em></p>\n\n<p><strong>But</strong>, the 3rd edition spec (from 1999) did not say that, it just said:</p>\n\n<blockquote>\n  <p>If radix is an integer from 2 to 36, but not 10, the result is a string, the choice of which is implementation-dependent.</p>\n</blockquote>\n\n<p>...so it's possible you may find engines in the wild that use upper case (or something else entirely). I'd say that's fairly unlikely, they didn't usually add things like that to the spec if there were <em>significant</em> known implementations that didn't have that behavior. <a href=\"http://jsbin.com/adahArE/1\">I get lower case</a> on current versions of Chrome, Firefox, and Opera, and on IE8 and even IE6. So I'd say it's probably fairly consistent.</p>\n",
              "is_accepted" : true,
              "score" : 16
            },
            { "body" : "<p>(12648430).toString(16) will always return: \"c0ffee\". Not \"C0FFEE\", after checking it with somes browsers, I found a confirmation:</p>\n\n<blockquote>\n  <p>The Number object overrides the toString() method of the Object object; it does not<br>\n  inherit Object.prototype.toString(). For Number objects, the toString() method returns a \n  string representation of the object in the specified radix.</p>\n  \n  <p>The toString() method parses its first argument, and attempts to return a string<br>\n  representation in the specified radix (base). For radixes above 10, the letters of the \n  alphabet indicate numerals greater than 9. For example, for hexadecimal numbers (base 16), \n  a through f are used.</p>\n</blockquote>\n\n<h3>\"for hexadecimal numbers (base 16), a through f are used\".</h3>\n\n<p>See reference: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toString</a> .</p>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>When converting a decimal number to a base above 10 using <code>.toString(base)</code>, it seems that I always get a lower case string. <strong>Can I rely on this</strong>? An upper case string would be correct, although would need converting for my application.</p>\n\n<p>Extra credit for referencing the part of the spec that defines this (I looked and couldn't find it) and for any counter-examples (browsers that return uppercase).</p>\n\n<p>Example:</p>\n\n<pre><code>(12648430).toString(16) // returns: \"c0ffee\". Not \"C0FFEE\"\n</code></pre>\n",
        "creation_date" : 1383473986,
        "last_activity_date" : 1422236686,
        "question_id" : 19751886,
        "score" : 14,
        "tags" : [ "javascript",
            "tostring"
          ],
        "title" : "Does .toString(16) always return lowercase?"
      },
      { "answer_count" : 0,
        "body" : "<p>I've seen the question \"How does one determine selected option value in a HTML SELECT control\" asked more times than I care to count - <a href=\"http://stackoverflow.com/questions/1085801/how-to-get-the-selected-value-of-dropdownlist-using-javascript\">this</a> and <a href=\"http://stackoverflow.com/questions/11828485/get-the-option-value-in-select-in-javascript\">this</a> and <a href=\"http://stackoverflow.com/questions/11828125/how-to-get-the-value-of-a-selected-text-in-javascript\">this</a> for instance.</p>\n\n<p>These questions all have something in common, they usually suggest one of the following methods:</p>\n\n<pre><code>//Method 1\ndocument.getElementById(\"SelectControlsID\").value;\n</code></pre>\n\n<p>OR</p>\n\n<pre><code>//Method 2\ndocument.getElementById(\"SelectControlsID\").options[document.getElementById(\"SelectControlsID\").selectedIndex].value;\n</code></pre>\n\n<p><strong>Question 1:</strong> I presume Method 2 is a relic from the past needed for some archaic browser that doesn't support calling <code>.value</code> directly? If so, which browsers still require the <code>options[]</code> method? Is this an ECMAScript spec issue?</p>\n\n<p><strong>Question 2:</strong> When writing new code, is it safe to just use Method 1 or is Method 2 still advisable (JQuery aside)?</p>\n",
        "creation_date" : 1383738599,
        "last_activity_date" : 1422236684,
        "question_id" : 19811386,
        "score" : 2,
        "tags" : [ "javascript",
            "html",
            "html-select"
          ],
        "title" : "Getting option value from select control: .value vs .options[selectedIndex].value?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>You can't (not even for <code>href</code> attributes: <code>javascript:foo()</code> returns the document to be rendered not the URL to fetch that document from). </p>\n\n<p>Either generate the entire element from JavaScript, or modify it through the DOM afterwards.</p>\n",
              "is_accepted" : false,
              "score" : 0
            } ],
        "body" : "<p>How to embedded a small piece of code into an HTML element (such as height= align= width= or role=) (not html tags)?<br>\nThis is for doing something very simple like the multiplication of a dom element by a fixed number.<br>\nI've seen <code>href=\"javascript:script_code\"</code> but this seems to be valid only for <code>href</code>, since it don't work with other elements.</p>\n",
        "creation_date" : 1385208776,
        "last_activity_date" : 1422236669,
        "question_id" : 20162148,
        "score" : 0,
        "tags" : [ "javascript",
            "html"
          ],
        "title" : "embedding script in an html element"
      },
      { "answer_count" : 0,
        "body" : "<p>According to <a href=\"http://docs.oracle.com/cd/B40099_02/books/eScript/eScript_JSLOverview2.html\" rel=\"nofollow\">Siebel 8.0 documentation</a> eScript is compliant with ECMAScript Edition 4 standard. But as far as I have learned there is no such standard published. Edition 4 was in draft state for a long time, but was never released. <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262-arch.htm\" rel=\"nofollow\">ECMA's website</a> states Edition 4 as \"NOT EXISTING\". I've found <a href=\"http://stackoverflow.com/questions/2329602/why-was-ecmascript-4th-edition-completely-scrapped\">a question</a> where some light shed to details. Furthermore in <a href=\"http://docs.oracle.com/cd/E14004_01/books/eScript/Overview_eScript2.html\" rel=\"nofollow\">Siebel 8.1/8.2 documentation</a> Oracle totally removed references to ECMA standards and now we have evasive \"Siebel eScript is a programming language that is syntactically and semantically compatible with JavaScript\". So my question is: what specific standard Siebel eScript actually based on? What should anyone expect regarding support of syntax/features? Should it be trial and error method or there is some point to start with?</p>\n\n<p>Disclaimer: Yes, I know there is \"Siebel eScript Language Reference\" in Bookshelf. I just want to know if there are any additional ECMAScript or Javascript specs/references that are applicable to\neScript too.</p>\n",
        "creation_date" : 1385920099,
        "last_activity_date" : 1422236665,
        "question_id" : 20315246,
        "score" : 0,
        "tags" : [ "javascript",
            "oracle",
            "siebel",
            "escript"
          ],
        "title" : "What standard Siebel eScript actually based on?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>It took me a little bit of reading to work out exactly how this might be used, so whilst @RGraham has pointed to a good bit of documentation (<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/get\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/get</a>), I thought I'd provide a usage example.</p>\n\n<p>Basically, <strong>the \"get\" and \"set\" operators allow you to override the behaviour that you would get when accessing the member variables directly.</strong></p>\n\n<p>This means you can, for example:</p>\n\n<ul>\n<li>Present a member variable with one name publicly, and then store it with another name privately.</li>\n<li>Perform an operation on the value before storing it.</li>\n<li>Present something that appears to be member variable whilst it is, in fact, a function.</li>\n</ul>\n\n<p>All the above can (of course) be done by defining functions on the object, with the difference being that the functions would have to be called as such.</p>\n\n<p>With this notation, the functions are called even though the notation appears to be referencing a member variable.</p>\n\n<p>I personally don't like it - I imagine it can lead to some very confusing code, particularly when debugging.  But it's there to be used if you want to...</p>\n\n<p>Example</p>\n\n<pre><code>var Field = {\n    get value(){\n        return this._value;\n    },\n    set value(val){\n        this._value = val + 1;\n    }\n};\n\nField.value = 100\n\nconsole.log( Field.value );\n</code></pre>\n\n<p>Will output:</p>\n\n<pre><code>101\n</code></pre>\n\n<p>Fiddle here: <a href=\"http://jsfiddle.net/zV8Kf/1/\" rel=\"nofollow\">http://jsfiddle.net/zV8Kf/1/</a></p>\n\n<p>On to the particular \"Why is <code>{ get foo(){} }</code> valid?\" question:</p>\n\n<p>I read this as:</p>\n\n<ul>\n<li>Create an object</li>\n<li>Define a function that does nothing</li>\n<li>Assign the function so that this is the getter for 'foo'</li>\n</ul>\n\n<p>This means that references to foo against this object will return <code>undefined</code></p>\n\n<p>You can see the behaviour here:</p>\n\n<p><a href=\"http://jsfiddle.net/VHAhA/\" rel=\"nofollow\">http://jsfiddle.net/VHAhA/</a></p>\n\n<p>If you think of <code>get</code> as being approximate to <code>foo: function</code> (I know it's not quite, but it does state \"I am going to define a function - assign it to this\", then it is syntactically similar to:</p>\n\n<pre><code>{ foo: function foo() {} }\n</code></pre>\n\n<p>It can't be compared to <code>{ foo(){} }</code>, as in this example you don't tell JavaScript that you are about to define something, nor where to put it once you do.</p>\n",
              "is_accepted" : true,
              "score" : 4
            } ],
        "body" : "<p>Reading <a href=\"http://ejohn.org/blog/javascript-getters-and-setters/\" rel=\"nofollow\">John Resig's article about Javascript getters and setters</a> I see a structure I'm unfamiliar with in Javascript:</p>\n\n<pre><code>Field.prototype = {\n    get value(){\n        return this._value;\n    },\n    set value(val){\n        this._value = val;\n    }\n};\n</code></pre>\n\n<p>Prototype is an object like many others but the get and set portions here seem unfamiliar. By what name are they referred? They don't look like typical properties of an object (following the <code>\"key\":\"value\"</code> syntax) and they don't quite look like standard functions either.</p>\n\n<p>Is this simply syntactic sugar that the JS engine converts into something more recognisable?</p>\n\n<p><strong>Update:</strong></p>\n\n<p>The real crux of my question is: Since <code>{ foo(){} }</code> isn't valid syntax, what makes it valid given a <code>get</code> or <code>set</code> operator? <code>{ get foo(){} }</code></p>\n",
        "creation_date" : 1386762335,
        "last_activity_date" : 1422236660,
        "question_id" : 20518278,
        "score" : 4,
        "tags" : [ "javascript" ],
        "title" : "What type of object/property is a prototype getter and setter?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>VBScript cannot be ECMA compliant as it is a different language altogether. That does not mean that they both cannot achieve the same end result, given the right environment.</p>\n\n<p>Reference:  </p>\n\n<p>Page 265 - VBScript Programmer's Reference\n By Adrian Kingsley-Hughes, Kathie Kingsley-Hughes, Daniel Read</p>\n\n<hr>\n\n<p>My thoughts - I guess it would be like asking:</p>\n\n<ol>\n<li><p>Is a rotary engine the same as a piston engine?</p>\n\n<p>No. A 2 rotor engine has two moving parts, while a normal piston engine has typically over 40 moving parts. It is generally easier to find parts for a piston engine and most main stream stores stock parts suitable for piston engines. It is also generally harder to find rotary specialists. Both propel a vehicle but in very different ways. Is one better than the other? I would be insulting experts if I were to wager my thoughts here.</p></li>\n<li><p>Is the VHS format Betamax compliant?</p>\n\n<p>No. They use different technology to achieve what may seem like similar results. Typically Betamax standards would allow for 60 minutes of recording whilst VHS would generally allow for around 180 minutes. Is one format better than the other? Again, I would be insulting experts if I were to comment here.</p></li>\n</ol>\n",
              "is_accepted" : true,
              "score" : 1
            } ],
        "body" : "<p>I tried to Google this but did not get a definitive answer.</p>\n\n<p>Just wanted to know if vbscript supports the ECMA standard supported by JavaScript. </p>\n\n<p>Is <strong>vbscript</strong> ECMA-compliant?</p>\n",
        "creation_date" : 1388746793,
        "last_activity_date" : 1422236613,
        "question_id" : 20902069,
        "score" : 1,
        "tags" : [ "javascript",
            "vbscript"
          ],
        "title" : "Is vbscript ECMA-compliant?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>Try:</p>\n\n<pre><code>var g = f();\n// this question is over this value.\ng.next(); // returns: { value: 1, done: false }\ng.next(123); // returns: { value: 2, done: false }\ng.next(456); // returns: { value: [123, 456], done: true }\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 2
            } ],
        "body" : "<p>If you have an generator like,</p>\n\n<pre><code>function* f () {\n  // Before stuff.\n  let a = yield 1;\n  let b = yield 2;\n  return [a,b];\n}\n</code></pre>\n\n<p>And, then run </p>\n\n<pre><code>var g = f();\n// this question is over this value.\ng.next(123); // returns: { value: 1, done: false }\ng.next(456); // returns: { value: 2, done: false }\ng.next(); // returns: { value: [ 456, undefined ], done: true }\n</code></pre>\n\n<p>The first call to <code>.next()</code> to set <code>a</code> to <code>123</code> and the second call to set <code>b</code> to <code>456</code>, however at the last call to <code>.next()</code> this is return,</p>\n\n<pre><code>{ value: [ 456, undefined ], done: true }\n</code></pre>\n\n<p>Does the argument in the first call to <code>g.next</code> get lost? What happens to them? Using the above example, how do I set <code>a</code>?</p>\n",
        "creation_date" : 1390346920,
        "last_activity_date" : 1422236604,
        "question_id" : 21271216,
        "score" : 1,
        "tags" : [ "javascript",
            "generator",
            "v8",
            "ecmascript-harmony"
          ],
        "title" : "In ES6, what happens to the arguments in the first call to an iterator's `next` method?"
      },
      { "answer_count" : 3,
        "answers" : [ { "body" : "<p>Items get pushed to the <em>temp</em> array in the order they are retrieved from the <em>stat</em> object, but you don't get to decide what order is that. </p>\n\n<p>You can't sort key value pairs of js Objects at your will.</p>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<p>Clearly not a rule:</p>\n\n<pre><code>var input = [\"c\", \"b\", \"a\"],\n    stat = {},\n    temp = [];\n\ninput.forEach(function(v) {\n   stat[v] = 1;\n});\n\nfor (v in stat) {\n   temp.push(v);\n}\n\nconsole.log(temp); //[\"c\", \"b\", \"a\"]\n</code></pre>\n\n<p>I'm guessing the sorting only happens for integer keys so that iterating over an object is consistent with iterating over an array. (Or that it's because objects and arrays are internally the same.)</p>\n",
              "is_accepted" : false,
              "score" : 2
            },
            { "body" : "<p>The \"sorting\" occurs in <code>for(v in stat)</code>. As per ECMA script standard, the order in which the keys are fetched is up to the vendor, and some browser vendors obviously chose to fetch all keys in sorted order. You shouldn't rely on this kind of \"sorting\" being \"implemented in all browsers\".</p>\n",
              "is_accepted" : true,
              "score" : 3
            }
          ],
        "body" : "<pre><code>var input = [1,1,2,3,10,5,3,4],\n    stat = {},\n    temp = [];\n\ninput.forEach(function(v) {\n   stat[v] = 1;\n});\n\nfor (v in stat) {\n   temp.push(v);\n}\n\nconsole.log(temp); //[\"1\", \"2\", \"3\", \"4\", \"5\", \"10\"]\n</code></pre>\n\n<p>How does the \"sorting\" occur?</p>\n\n<p><strong>Edit:</strong><br>\nMade cross-browser screenshots (see comment) and a <a href=\"http://jsperf.com/sortvsmyfind\" rel=\"nofollow\">jsPerf</a>.</p>\n",
        "creation_date" : 1390912239,
        "last_activity_date" : 1422236582,
        "question_id" : 21405567,
        "score" : 0,
        "tags" : [ "javascript",
            "cross-browser"
          ],
        "title" : "Find unique and sort, does the latter only happen or is it by ECMA?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<blockquote>\n  <p>Is there a definitive non ambiguous reference somewhere ?</p>\n</blockquote>\n\n<p>It's sort of spread all over the spec.</p>\n\n<p>The short answer:</p>\n\n<p>It depends on the context where the construct appears (which is why it's all over the spec). Probably the most specific place it's addressed is <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-12.4\" rel=\"nofollow\">§12.4</a>, where it says that an <em>ExpressionStatement</em> (an expression used where a statement is expected) can't start with a <code>{</code>.</p>\n\n<p>The long answer:</p>\n\n<p>The key is what the parser is expecting when it encounters the <code>{</code>: If it's expecting a statement, then it knows the <code>{</code> begins a block. But if it's expecting an expression, then it knows the <code>{</code> begins an object initializer. Let's look at an assignment:</p>\n\n<pre><code>doThis();   // This line is just for context\nx = {a: 3};\n</code></pre>\n\n<p>At the beginning of the second line above, the parser is expecting a statement. But then it sees the <code>x =</code> and knows it's handling an assignment; at that point, after seeing the <code>=</code>, the parser is expecting an <em>expression</em>. A <em>statement</em> is invalid there. So it knows the <code>{</code> starts an object initializer, not a block.</p>\n\n<p>In contrast:</p>\n\n<pre><code>doThis();   // This line is just for context\n{a: 3};\n</code></pre>\n\n<p>The second line above is a block containing a labelled statement. (A very odd-looking one; we'll come back to that.) The parser knows that because at the beginning of that line, the parser is expecting a statement, not an expression.</p>\n\n<p>There are lots of other places where the parser expects to see expressions, not statements. For instance, after the <code>:</code> in a property initializer:</p>\n\n<pre><code>obj = {\n    prop: {a: 3}\n};\n</code></pre>\n\n<p>...or within the arguments when doing a function call:</p>\n\n<pre><code>foo({a: 3});\n</code></pre>\n\n<p>...or after a unary operator, or just after an opening <code>(</code>, etc. In the spec, you can tell what the parser will be expecting by what it says in the grammar for what the parser is parsing, e.g. this syntax diagram from <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-12.5\" rel=\"nofollow\">§12.5</a> defining the <code>if</code> statement:</p>\n\n<pre> <em>IfStatement</em> :\n<br>    if ( <em>Expression</em> ) <em>Statement</em> else <em>Statement</em>\n<br>    if ( <em>Expression</em> ) <em>Statement</em></pre>\n\n<p>That tells us that when handling an <code>if</code> statement, within the <code>()</code> the parser expects an expression, but after the <code>if ()</code> bit, it expects a statement.</p>\n\n<p>So far so good, but JavaScript allows (almost) any expression wherever a statement is allowed. This is valid, for instance:</p>\n\n<pre><code>doThis();   // This line is just for context\nflag && doThat();\n</code></pre>\n\n<p>The second line above is a binary logical operator expression, but freestanding. The parser was expecting a statement when it encountered it. So the <code>&&</code> expression is what the spec calls an <em>ExpressionStatement</em>. <em>ExpressionStatement</em> is defined by <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-12.4\" rel=\"nofollow\">§12.4</a>.</p>\n\n<p>So that leaves us with some ambiguity: If the parser is expecting a statement, and sees a <code>{</code>, how does it know that's not the beginning of an object initializer expression acting as an <em>ExpressionStatement</em>?</p>\n\n<p>The answer is: By fiat. :-) §12.4 says this when defining <em>ExpressionStatement</em>:</p>\n\n<blockquote>\n  <p>NOTE An <em>ExpressionStatement</em> cannot start with an opening curly brace because that might make it ambiguous with a <em>Block</em>.</p>\n</blockquote>\n\n<p>So there's no ambiguity, not because of some subtle syntax trick, but just because the spec says so. :-)</p>\n\n<p>(If you had a reason for really, really wanting to use an object initializer expression as a statement, you can do it; just put it within <code>()</code>.)</p>\n",
              "is_accepted" : true,
              "score" : 7
            } ],
        "body" : "<p>This is more a theoretical question than a practical one. It's about the parsing of some code delimited by curly braces.</p>\n\n<p>Here are two examples of <a href=\"http://es5.github.io/#x11.1.5\" rel=\"nofollow\">object initializers</a> :</p>\n\n<pre><code>f({});\n({a:3})\n</code></pre>\n\n<p>Here are two examples of <a href=\"http://es5.github.io/#x12.1\" rel=\"nofollow\">blocks</a> :</p>\n\n<pre><code>;{}\n{a:3;}\n</code></pre>\n\n<p>In practice, it seems that <code>{...}</code> makes a block apart if the precedent code requires an expression.</p>\n\n<p>But I've never seen such a rule explicit or made obvious in the ECMAScript specification and I'm not even sure it's true. </p>\n\n<p>Is there a definitive non ambiguous reference somewhere ? A correct rule if this one isn't ?</p>\n",
        "creation_date" : 1391415069,
        "last_activity_date" : 1422236576,
        "question_id" : 21522426,
        "score" : 6,
        "tags" : [ "javascript",
            "syntax",
            "grammar",
            "ecmascript-5"
          ],
        "title" : "Differentiate a block from an object initializer"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p>Why are you saying it's an object? Running typeof on an Array will always return 'object'.</p>\n\n<pre><code>var arr = [1,2,3];\ntypeof arr --> \"object\"\n</code></pre>\n\n<p>Try instead </p>\n\n<pre><code>Array.isArray(arr) --> true\n</code></pre>\n\n<p>Here's the test you wanted.</p>\n\n<pre><code>var stdin = {123:1,423:1};\nArray.isArray(stdin) --> false\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<p>Arrays are objects.</p>\n\n<p>Try typing <code>typeof([1,2,3])</code> into your console - you'll also get <code>object</code> as the result. </p>\n\n<p>Now, if you type <code>Object.prototype.toString.call( [1,2,3] )</code>, you'll get <code>[object Array]</code>, which is somewhat useful (and you'll get the same result for the return value of <code>Object.keys</code>).  </p>\n\n<p>If you want a boolean result, just use <code>Array.isArray</code> (see <a href=\"http://stackoverflow.com/a/4775737/836214\">this related answer</a>)</p>\n",
              "is_accepted" : true,
              "score" : 1
            }
          ],
        "body" : "<p>I have come across this:</p>\n\n<pre><code>var stdin = {123:1,423:1};\n\nvar stdout = Object.keys(stdin);\n\nconsole.log(stdout);             //[\"123\", \"423\"] \nconsole.log(typeof(stdout));     //object\nconsole.log(stdout[0])           //123\n</code></pre>\n\n<p><a href=\"http://ecma-international.org/ecma-262/5.1/#sec-15.2.3.14\" rel=\"nofollow\">ECMAScript® Language Specification</a> says:</p>\n\n<blockquote>\n  <p>15.2.3.14 Object.keys ( O )  </p>\n  \n  <p>When the keys function is called with argument O, the following steps are taken:</p>\n  \n  <p>... 6. Return <em>array</em>.</p>\n</blockquote>\n\n<h1>JSFIDDLE: <a href=\"http://jsfiddle.net/wpVvv/1/\" rel=\"nofollow\">http://jsfiddle.net/wpVvv/1/</a></h1>\n\n<p>Tested on Chrome and Firefox on Windows 7.</p>\n\n<p>What is going on? Should be array, looks like array to me, <em>is</em> Object?</p>\n\n<p><strong>Edit:</strong><br>\n<a href=\"http://ecma-international.org/ecma-262/5.1/#sec-11.4.3\" rel=\"nofollow\">typeof()</a>. Arrgh.</p>\n",
        "creation_date" : 1391840240,
        "last_activity_date" : 1422236573,
        "question_id" : 21642712,
        "score" : 0,
        "tags" : [ "javascript" ],
        "title" : "Why returns Object.keys() an object (looks like array)?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p><a href=\"http://requirejs.org/\" rel=\"nofollow\">Require.js</a> is a JavaScript modulisation tool that does exactly what you want. You define modules in their own file like so:</p>\n\n<pre><code>define('moduleName', [ dependencies ], function () {\n  // module code\n});\n</code></pre>\n\n<p>And load them asynchronously:</p>\n\n<pre><code>require('moduleName');\n</code></pre>\n\n<p>Or as dependencies to other modules:</p>\n\n<pre><code>define([ 'moduleName' ], function (myModule) {\n   // other module\n});\n</code></pre>\n\n<p>It also has an <a href=\"http://requirejs.org/docs/optimization.html\" rel=\"nofollow\">optimisation tool</a> which is used to compile your modules into one JavaScript file ready for production.</p>\n",
              "is_accepted" : true,
              "score" : 0
            } ],
        "body" : "<p>We get used to include separately some javascript files with using standard <code><script src=\"file.js\"></script></code>, but... I really don't like such a way of including.</p>\n\n<p>As for the developer with the C#/C++ background, many features for me are representing as a mess.</p>\n\n<p>I really don't like the way including the js files, but I understand, that it's the most regular practice.</p>\n\n<p>With such kind of thoughts, I suppose to try different possible ways.</p>\n\n<p>As I thought, there are two possible ways, which are able to implement the including process:</p>\n\n<p>1). Create dynamically  tag in imaginary function - <code>include()</code>, which I can define in my prototype ( class imitation in js ).</p>\n\n<p>But... It's nearly the same way as the standard including, but just with some dynamic logic stored in prototypes, which may dynamically load some needed modules of web application.</p>\n\n<p>And that's why I dislike it, but it's an option and I must add this to the list.</p>\n\n<p>2). Dynamic load of js file via <code>AJAX/WebSockets/SPDY</code>, that you have wanted or even hanlding the parts of the loaded files with the partion function execution (needed some logic or implementing some design patters) with the following execution via <code>eval()</code> function and preparing it in the new defined function <code>include( args );</code> to make the js scenario looks like:</p>\n\n<pre><code>include( \"models.js\" );\ninclude( \"dbController.js\" );\n...\n</code></pre>\n\n<p>Yes... I know, that <code>eval()</code> is an evil in JavaScript world, but I don't know the name of the different function, which allows me the same functionallity.</p>\n\n<p>Also... It may be too slow compared to original way of including and I repeat even vulnerable.</p>\n\n<p>These are the two ways I can imagine, maybe you will suggest a better solution or persuade me from some bad thoughts.</p>\n",
        "creation_date" : 1392104047,
        "last_activity_date" : 1422236566,
        "question_id" : 21695749,
        "score" : 0,
        "tags" : [ "javascript",
            "design-patterns",
            "architecture",
            "include"
          ],
        "title" : "Are there any other ways to include JavaScript file?"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p>All keywards have to be separated from the other text by either space or parenthesis:\nTo get those keywords:</p>\n\n<pre><code>http://msdn.microsoft.com/en-us/library/ttyab5c8.aspx\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Reserved_Words\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>From the <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\" rel=\"nofollow\">ECMAScript 5 reference</a></p>\n\n<blockquote>\n  <p>White space characters are used to improve source text readability and\n  to separate tokens (indivisible lexical units) from each other, but\n  are otherwise insignificant. White space characters may occur between\n  any two tokens and at the start or end of input. White space\n  characters may also occur within a StringLiteral or a\n  RegularExpressionLiteral (where they are considered significant\n  characters forming part of the literal value) orwithin a Comment, but\n  cannot appear within any other kind of token.</p>\n</blockquote>\n\n<p>So, <code>var someVariable;</code> requires whitespace to separate the tokens (<code>varsomeVariable;</code> is different), but <code>for(i=0;i<10;i++){document.write(\"Stuff\");}</code> does not.</p>\n\n<p>Whitespace is not confined to spaces, so you could use one of the other characters:</p>\n\n<p><strong>WhiteSpace ::</strong></p>\n\n<pre><code><TAB>\n<VT>\n<FF>\n<SP>\n<NBSP>\n<BOM>\n<USP>\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>In Javascript, before/after what characters and keywords are spaces absolutely required?</p>\n\n<p>Alternatively, it may be easier to answer the reverse: before/after what characters and keywords are spaces <em>not</em> absolutely required?</p>\n",
        "creation_date" : 1392233301,
        "last_activity_date" : 1422236546,
        "question_id" : 21737706,
        "score" : 0,
        "tags" : [ "javascript" ],
        "title" : "Javascript -- Where are spaces required?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>No, it's working correctly. <code>getElementsByTagName</code> returns a nodelist - an array-LIKE object but not an actual array, so jQuery is right to return false.</p>\n\n<p>Your function is returning true because it is testing for the type being an object (a nodelist is an object) and it having a length (a nodelist has a length).</p>\n\n<p>If you truly want to test for an array use <code>foo instanceof Array</code>.</p>\n",
              "is_accepted" : true,
              "score" : 1
            } ],
        "body" : "<p>jQuery and Array isArray not working correctly</p>\n\n<p>if I do:</p>\n\n<pre><code>var tags = document.getElementsByTagName('div');\n\njQuery.isArray(tags) // returns false\nArray.isArray(tags)  // returns false\n\nfunction isArray(object){\n  return typeof object === \"object\" && object.length > -1;\n}\n\nisArray(tags) // return true\n</code></pre>\n\n<p>This issue causes an actual bug on my website:</p>\n\n<p>On my website I have a form tag with inputs name \"plan\".</p>\n\n<p>If I only have one input name \"plan\", it will return an none array.</p>\n\n<p>But if I have two inputs and both have name \"plan\", it will return an array.</p>\n\n<p>I used jQuery.isArray to check if it's an array or not but was forced to abandon using jqery isArray.</p>\n\n<p>People commented that it's nodelist but the usage of nodelist is exactly like an array. So under what circumstances you would actually want to avoid it to use like an array?</p>\n",
        "creation_date" : 1394145216,
        "last_activity_date" : 1422236542,
        "question_id" : 22237597,
        "score" : 1,
        "tags" : [ "javascript",
            "jquery"
          ],
        "title" : "jQuery and Array isArray not working correctly?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<h2>How to set Required property for field via CSOM</h2>\n\n<pre><code>var context = new SP.ClientContext(siteUrl);\nvar list = context.get_web().get_lists().getByTitle(listTitle); \nvar field = list.get_fields().getByInternalNameOrTitle(fieldName);\n\nfield.set_required(false);\nfield.update();\n\ncontext.executeQueryAsync(\n      function() {    \n         console.log('Field has been set as optional');\n      },\n      function (sender, args) {\n         console.log(args.get_message());\n      }\n);\n</code></pre>\n\n<h2>How to delete field from List via CSOM</h2>\n\n<pre><code>var context = new SP.ClientContext(siteUrl);\nvar list = context.get_web().get_lists().getByTitle(listTitle); \nvar field = list.get_fields().getByInternalNameOrTitle(fieldName);\n\nfield.deleteObject();\ncontext.executeQueryAsync(\n      function() {    \n         console.log('Field has been deleted from a List');\n      },\n      function (sender, args) {\n         console.log(args.get_message());\n      }\n);\n</code></pre>\n",
              "is_accepted" : true,
              "score" : 1
            } ],
        "body" : "<p>I'm trying to retrieve the 'Description' field of a list. This is a default field created by SharePoint that I cannot delete or make it not-required.\nThe connection works fine.</p>\n\n<p>My Code:</p>\n\n<pre><code> function getCoursesToDelete() \n{\n    var clientContext = new SP.ClientContext(siteUrl);\n    var oList = clientContext.get_web().get_lists().getByTitle('CoursesToDelete'); \n    var camlQuery = new SP.CamlQuery();\n camlQuery.set_viewXml('<GetListItems><Query /><ViewFields><FieldRef Name=\"Description\" />  </ViewFields><QueryOptions /></GetListItems>');\n this.collListItem = oList.getItems(camlQuery);\n clientContext.load(collListItem);\n clientContext.executeQueryAsync(Function.createDelegate(this, this.onQuerySucceeded), Function.createDelegate(this, this.onQueryFailed));\n}\n</code></pre>\n\n<p>and then:</p>\n\n<pre><code>function onQuerySucceeded(sender,args)\n{\nvar listItemEnumerator = collListItem.getEnumerator();\n\n while (listItemEnumerator.moveNext()) \n {\n   var oListItem = listItemEnumerator.get_current(); \n   alert(oListItem.get_item('Description'));\n }\n}\n</code></pre>\n",
        "creation_date" : 1394532766,
        "last_activity_date" : 1422236537,
        "question_id" : 22322581,
        "score" : 0,
        "tags" : [ "javascript",
            "sharepoint"
          ],
        "title" : "SharePoint 2010 error on ECMA get_item"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p><a href=\"https://code.google.com/p/jsdoc-toolkit/issues/detail?id=276\" rel=\"nofollow\">It looks like JSDoc supports overloading of functions</a> with the <code>@name fun @name fun^2</code> I think the following communicates your intent clearly</p>\n\n<pre><code>/**\n    @name example\n    @function\n    @param {string} required\n    @param {Function} callback\n */\n /**\n    @name example^2\n    @function\n    @param {string} required\n    @param {string} [optional='DEFAULT VALUE']\n    @param {Function} callback\n */\nfunction example() {\n    if(typeof optional === 'function' && typeof callback === 'undefined') {\n       callback = optional;\n       optional = 'DEFAULT VALUE';\n    }\n\n    // do work here\n}\n</code></pre>\n\n<p>However, in your case, I think it would be easiest if you just switched your optional parameter to the end, then you won't need overloading</p>\n\n<pre><code>/**\n * @param required\n * @param {Function} callback\n * @param {String} [optional='DEFAULT VALUE'] \n */\nfunction example(required, callback, optional) {\n   if (typeof optional === 'undefined') {\n       optional = 'DEFAULT VALUE';\n   }   \n   // do work here\n}\n</code></pre>\n",
              "is_accepted" : true,
              "score" : 2
            } ],
        "body" : "<p>The more \"magic\" your JavaScript library is, the less likely it is that you're able to use a documentation generator.</p>\n\n<p>Is anyone aware of a documentation generator that allows documentation of functions with parameter shifting/parametric polymorphism?</p>\n\n<pre><code>function example(required, optional, callback) {\n   if(typeof optional === 'function' && typeof callback === 'undefined') {\n       callback = optional;\n       optional = 'DEFAULT VALUE';\n   }\n\n   // do work here\n}\n</code></pre>\n\n<p>Which can be called as follows:</p>\n\n<pre><code>example(required, optional, function() {\n  // do work\n});\n\nexample(required, function() {\n  // do work\n});\n</code></pre>\n\n<p>Any suggestions are appreciated, with the exception of \"use a generic comment/documentation block\".</p>\n\n<p>This is related, but not a duplicate of:\n<a href=\"http://stackoverflow.com/questions/16017627/document-generic-type-parameters-in-jsdoc\">Document generic type parameters in JSDOC</a></p>\n",
        "creation_date" : 1394670085,
        "last_activity_date" : 1422236529,
        "question_id" : 22366675,
        "score" : 1,
        "tags" : [ "javascript",
            "node.js",
            "ecmascript-5"
          ],
        "title" : "Is there a JavaScript documentation generator that supports parameter shifting and "polymorphism"?"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p>The official documentation says that</p>\n\n<blockquote>\n  <p>The promise api allows for composition that is very hard\n  to do with the traditional callback (CPS ) approach. For more on this\n  please see the Q documentation  especially the section on serial or\n  parallel joining of promises.</p>\n</blockquote>\n\n<p><a href=\"http://docs.angularjs.org/api/ng/service/%24q\" rel=\"nofollow\">http://docs.angularjs.org/api/ng/service/$q</a></p>\n\n<p>I think the easiest explanation could be that it's a much better and cleaner way to do a serial or very complex callbacks than the traditional way.</p>\n\n<p>This is the link you can read more about the benefit of using promise:</p>\n\n<p><a href=\"https://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md\" rel=\"nofollow\">promises specification</a></p>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>promises implementation basically provides an interface which define at least one method 'when' that return therefore, a \"Promise\", thus a result from an async operation.</p>\n\n<p>Advantages are better code readability (and production as well), better reuse of the results without incurring on the scaring \"callbacks hell\", chainabilty, etc...</p>\n\n<p>A simple scenario with jQuery:</p>\n\n<blockquote>\n  <p>without promises</p>\n</blockquote>\n\n<pre><code>$.ajax({\n    url: someurl,\n    success: function(data)\n    {\n        //do something with data\n    }\n});\n</code></pre>\n\n<blockquote>\n  <p>with promises</p>\n</blockquote>\n\n<pre><code>var p = $.ajax({ url: someurl });\n\n$.when(p).then(function(data)\n{\n    //do something with data    \n});\n</code></pre>\n\n<p>However, a better explanation: <a href=\"http://wiki.commonjs.org/wiki/Promises/A\" rel=\"nofollow\">http://wiki.commonjs.org/wiki/Promises/A</a></p>\n",
              "is_accepted" : true,
              "score" : 1
            }
          ],
        "body" : "<p>I am currently attempting to learn the AngularJS framework and I keep hearing about something called \"promise\". I have researched a little about it, although I cannot seem to find a thorough explanation to how and when to use \"promises\".</p>\n\n<p>Can anyone please explain and provide a solution between using a promise, and not using a promise. What is the advantage of using a promise over not using one?</p>\n\n<p>All answer are appreciated.</p>\n\n<p>Thanks.</p>\n",
        "creation_date" : 1396086468,
        "last_activity_date" : 1422236526,
        "question_id" : 22729455,
        "score" : 1,
        "tags" : [ "javascript",
            "json",
            "angularjs"
          ],
        "title" : "Using AngularJS Promise"
      },
      { "answer_count" : 4,
        "answers" : [ { "body" : "<p>While the Node.js source uses them both, <code>util.isArray</code> uses <code>Array.isArray</code> internally (<a href=\"https://github.com/joyent/node/blob/8874a317484b8865c5fbad74d3af6155994df583/lib/util.js#L508\" rel=\"nofollow\">source</a>)</p>\n\n<p>In <code>util.js</code>:</p>\n\n<pre><code>function isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 2
            },
            { "body" : "<p>It's for consistency reasons.</p>\n\n<p>node.js has util.isFunction(), util.isObject(), util.isArray() and a number of similar functions. This way type checks will look similar to each other, instead of using differently looking code each time.</p>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<p><a href=\"http://stackoverflow.com/users/1216976/somekittens-ux2666\">@SomeKittens</a> was right, but that's a week ago. <a href=\"https://github.com/joyent/node/commit/95dbb6b\" rel=\"nofollow\">I patched node.js core and the docs</a>. Now they're both the same thing, or will be in due time.</p>\n\n<pre><code>> Array.isArray === util.isArray;\ntrue\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>To actually answer <em>why</em> <code>util.isArray</code> exists, we need a bit of a history lesson.</p>\n\n<p>When it was <a href=\"https://github.com/joyent/node/blob/3c7873bd/lib/sys.js#L194-198\">first added to node</a>, it did a bit more than call <code>Array.isArray</code>.</p>\n\n<pre><code>function isArray (ar) {\n  return ar instanceof Array\n      || Array.isArray(ar)\n      || (ar && ar !== Object.prototype && isArray(ar.__proto__));\n}\n</code></pre>\n\n<p>This was a local function in utils and actually wasn't <a href=\"https://github.com/joyent/node/commit/b8f3e18a5d3b9542e452274adb5422dfc0784e15\">exported</a> until v0.6.0.</p>\n\n<p>In this form, <code>util.isArray</code> handled a case that <code>Array.isArray</code> doesn't:</p>\n\n<pre><code>> x = [1,2,3]\n[ 1, 2, 3 ]\n> y = Object.create(x)\n[ , ,  ]\n> Array.isArray(y)\nfalse\n> Array.isArray(Object.getPrototypeOf(y))\ntrue\n</code></pre>\n\n<p><a href=\"https://groups.google.com/forum/#!topic/nodejs-dev/sIlwFm5GcM8\">There's some discussion here</a> about this behavior of <code>util.isArray</code>, and consensus was that this behavior is actually bad because <code>y</code> is not really an <code>Array</code>.</p>\n\n<p>Thus, the prototype-checking functionality was <a href=\"https://github.com/joyent/node/commit/2dbb470\">soon removed and replaced</a> with a check that used both <code>Array.isArray</code> and a check of the argument's <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-8.6.2\"><em>[[Class]]</em></a>.</p>\n\n<pre><code>function isArray(ar) {\n  return Array.isArray(ar) ||\n         (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n}\n</code></pre>\n\n<p>However, checking the <em>[[Class]]</em> is actually duplicate effort because <code>Array.isArray</code> <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.3.2\">also checks</a> the <em>[[Class]]</em>, so it too was eventually <a href=\"https://github.com/joyent/node/commit/5fcd6e403\">removed</a> – leaving only a call to <code>Array.isArray</code>.</p>\n\n<p>Today, <code>util.isArray</code> is just an <a href=\"https://github.com/joyent/node/commit/95dbb6b\">alias</a> of <code>Array.isArray</code>.</p>\n\n<p>So in other words, the existence of <code>util.isArray</code> is mostly a legacy thing and can be safely ignored.</p>\n",
              "is_accepted" : true,
              "score" : 14
            }
          ],
        "body" : "<p>I just noticed the API docs for <a href=\"http://nodejs.org/api/util.html#util_util_isarray_object\">Node.js v0.10.26</a> provide for <code>util.isArray</code>,</p>\n\n<blockquote>\n  <p>util.isArray(object)# Returns true if the given \"object\" is an Array.</p>\n  \n  <p>false otherwise.</p>\n</blockquote>\n\n<pre><code>var util = require('util');\nutil.isArray([])\n  // true\nutil.isArray(new Array)\n  // true\nutil.isArray({})\n  // false\n</code></pre>\n\n<p>But, how is that different ecmascripts normal, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\">Array.isArray</a>?</p>\n\n<pre><code>> Array.isArray([]);\ntrue\n> Array.isArray(new Array);\ntrue\n> Array.isArray({});\nfalse\n</code></pre>\n",
        "creation_date" : 1396394874,
        "last_activity_date" : 1422236515,
        "question_id" : 22798826,
        "score" : 7,
        "tags" : [ "javascript",
            "arrays",
            "node.js"
          ],
        "title" : "In node.js, why is there a util.isArray and an Array.isArray?"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "\n\n<p>Our team recently migrated all its code (a mid-sized AngularJS app) from CoffeeScript to JavaScript compiled using <a href=\"https://github.com/google/traceur-compiler\">Traceur</a>. I'm now using the following rule of thumb for Harmony functions:</p>\n\n<ul>\n<li>Use <code>function</code> in the global scope and for <code>Object.prototype</code> properties.</li>\n<li>Use <code>class</code> for object constructors.</li>\n<li>Use <code>=></code> everywhere else.</li>\n</ul>\n\n<p>Why use arrow functions almost everywhere?</p>\n\n<ol>\n<li>Scope safety: When arrow functions are used consistently, everything is guaranteed to use the same <code>thisObject</code> as the root. If even a single standard function callback is mixed in with a bunch of arrow functions there's a chance the scope will become messed up.</li>\n<li>Compactness: Arrow functions are easier to read and write. (This may seem opinionated so I will give a few examples further on).</li>\n<li>Clarity: When almost everything is an arrow function, any regular <code>function</code> immediately sticks out for defining the scope. A developer can always look up the next-higher <code>function</code> statement to see what the <code>thisObject</code> is.</li>\n</ol>\n\n<p>Why always use regular functions on the global scope or module scope?</p>\n\n<ol>\n<li>To indicate a function that should not access the <code>thisObject</code>.</li>\n<li>The <code>window</code> object (global scope) is best addressed explicitly.</li>\n<li>Many <code>Object.prototype</code> definitions live in the global scope (think <code>String.prototype.truncate</code> etc.) and those generally have to be of type <code>function</code> anyway. Consistently using <code>function</code> on the global scope helps avoid errors.</li>\n<li>Many functions in the global scope are object constructors for old-style class definitions.</li>\n<li>Functions can be named<sup>1</sup>. This has two benefits: (1) It is less awkward to write<code>function foo(){}</code> than <code>const foo = () => {}</code> — in particular outside other function calls. (2) The function name shows in stack traces. While it would be tedious to name every internal callback, naming all the public functions is probably a good idea.</li>\n</ol>\n\n<p><br>\n<strong>Object constructors</strong></p>\n\n<p>Attempting to instantiate an arrow function throws an exception:</p>\n\n<pre><code>var x = () => {};\nnew x(); // TypeError: x is not a constructor\n</code></pre>\n\n<p>One key advantage of functions over arrow functions is therefore that functions double as object constructors:</p>\n\n<pre><code>function Person(name) {\n    this.name = name;\n}\n</code></pre>\n\n<p>The functionally identical<sup>2</sup> ES Harmony <a href=\"http://wiki.ecmascript.org/doku.php?id=strawman:maximally_minimal_classes\">draft class definition</a> is almost as compact:</p>\n\n<pre><code>class Person {\n    constructor(name) {\n        this.name = name;\n    }\n}\n</code></pre>\n\n<p>I expect the former notation will eventually be frowned upon. The object constructor notation may still be used by some for simple anonymous object factories where objects are programmatically generated, but not for much else.</p>\n\n<p>Where an object constructor is needed one should consider converting the function to a <code>class</code> as shown above. The syntax works with anonymous functions/classes as well.</p>\n\n<p><br>\n<strong>Readability of arrow functions</strong></p>\n\n<p>The probably best argument for sticking to regular functions - scope safety be damned - would be that arrow functions are less readable than regular functions. If your code is not functional in the first place, then arrow functions may not seem necessary, and when arrow functions are not used consistently they look ugly.</p>\n\n<p>ECMAScript has changed quite a bit since ECMAScript 5.1 gave us the functional <code>Array.forEach</code>, <code>Array.map</code> and all of these functional programming features that have us use functions where for-loops would have been used before. Asynchronous JavaScript has taken off quite a bit. ES6 will also ship a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> object, which means even more anonymous functions. There is no going back for functional programming. In functional JavaScript, arrow functions are preferable over regular functions.</p>\n\n<p>Take for instance this (particularly confusing) piece of code<sup>3</sup>:</p>\n\n<pre><code>function CommentCtrl($scope, articles) {\n    $scope.comments = [];\n\n    articles.getList()\n        .then((articles) => Promise.all(articles.map((article) => article.comments.getList())))\n        .then((commentLists) => {\n            $scope.comments = commentLists.reduce((a, b) => a.concat(b));\n        });\n}\n</code></pre>\n\n<p>The same piece of code with regular functions:</p>\n\n<pre><code>function CommentCtrl($scope, articles) {\n    $scope.comments = [];\n\n    articles.getList()\n        .then(function (articles) {\n            return Promise.all(articles.map(function (article) { \n                return article.comments.getList();\n            }));\n        })\n        .then(function (commentLists) {\n            $scope.comments = commentLists.reduce(function (a, b) {\n                return a.concat(b); \n            });\n        });\n}\n</code></pre>\n\n<p>While any one of the arrow functions can be replaced by a standard function, there would be very little to gain from doing so. Which version is more readable? I would say the first one. </p>\n\n<p>I think the question whether to use arrow functions or regular functions will become less relevant over time. Most <em>functions</em> will either become class methods, which make away with the <code>function</code> keyword, or they will become classes. Functions will remain in use for patching classes through the <code>Object.prototype</code>. In the mean time I suggest reserving the <code>function</code> keyword for anything that should really be a class method or a class.</p>\n\n<hr>\n\n<p><strong>Notes</strong></p>\n\n<ol>\n<li>Named arrow functions have been <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony:arrow_function_syntax#deferred\">deferred in the ES6 spec</a>. They might still be added a future version.</li>\n<li>According to the draft specification <em>\"Class declarations/expressions create a constructor function/prototype pair exactly as for function declarations\"</em> as long as a class does not use the <code>extend</code> keyword.</li>\n<li>Note on blocks in single statement arrow functions: I like to use a block wherever an arrow function is called for the side effect alone (e.g. assignment). That way it is clear that the return value can be discarded.</li>\n</ol>\n",
              "is_accepted" : false,
              "score" : 25
            },
            { "body" : "<p><a href=\"http://youtu.be/bo36MrBfTk4?t=28m47s\" rel=\"nofollow\">You don't need classes.</a> (Watch until 38 minutes.)</p>\n\n<p>JavaScript's design was inspired by Scheme, a LISP dialect. In LISP, lambda expressions are sufficient for <a href=\"http://youtu.be/SsBxcpkyMMw?t=53m40s\" rel=\"nofollow\">creating objects</a>. The most basic object, a <code>cons</code> cell (a pair, which can construct lists), can be built from lambda alone:</p>\n\n<pre><code>;; Axioms of `cons':\n;;\n;; ∀xy  (car (cons x y)) = x\n;;      (cdr (cons x y)) = y\n\n(define (cons x y)\n  (lambda (m) (m x y)))\n\n(define (car x)\n  (x (lambda (a d) a)))\n\n(define (cdr x)\n  (x (lambda (a d) d)))\n\n(cons 1 (cons 2 (cons 3 nil)))\n;; The above is trivially equivalent to: `(list 1 2 3)'\n</code></pre>\n\n<p>You can make more complicated objects with lists, as demonstrated in other sections of the \"Structure and Interpretation of Computer Programs\" course.</p>\n\n<p>Because JavaScript also has lambda expressions, you can construct objects in the same manner as LISP:</p>\n\n<pre><code>function cons(x, y) {\n    return function (m) {\n        return m(x, y);\n    };\n}\n\nfunction car(x) {\n    return x(function (a, d) {\n        return a;\n    });\n}\n\nfunction cdr(x) {\n    return x(function (a, d) {\n        return d;\n    });\n}\n\nfunction forEach(list, iterator) {\n    if (list === null) {\n        return;\n    }\n    iterator(car(list));\n    return forEach(cdr(list), iterator);\n}\n\nvar list = cons(1, cons(2, cons(3, null)));\nforEach(list, console.log);\n</code></pre>\n\n<p>Crockford has his own pattern for creating objects:</p>\n\n<pre><code>function constructor(spec) {\n    var that = other_constructor(spec),\n        member,\n        method = function () {\n            // spec, member, method\n        };\n    that.method = method;\n    return that;\n}\n</code></pre>\n\n<p>He has privacy thanks to <code>var</code>, and inheritance via the \"parasitism\" technique whereby he passes <code>spec</code> to the \"parent\" constructor.</p>\n\n<p>I wanted something a little more secure, so I designed a constructor maker that would inject private, protected and public members into my constructors:</p>\n\n<pre><code>const makeConstructorMaker = (function () {\n    const assign = function (target, ...rest) {\n        rest.forEach(function (source) {\n            Object.keys(source).forEach(function (key) {\n                target[key] = source[key];\n            });\n        });\n        return target;\n    };\n    return function () {\n        const check = {};\n        return function (parent, constructor) {\n            return function (inheriting, ...rest) {\n                const isInheriting = inheriting === check;\n                const that = parent ?\n                          assign({\n                              private: {}\n                          }, isInheriting ?\n                              parent(...arguments) :\n                              parent(check, ...arguments)\n                          ) :\n                      {\n                          private: {},\n                          protected: {},\n                          public: {},\n                      };\n                if (isInheriting) {\n                    constructor(that, ...rest);\n                    return {\n                        protected: that.protected,\n                        public: that.public,\n                    };\n                }\n                constructor(that, ...arguments);\n                return that.public;\n            };\n        };\n    };\n}());\n</code></pre>\n\n<p>Example usage:</p>\n\n<pre><code>const [makePerson, makeHero] = (function () {\n    const makeConstructor = makeConstructorMaker();\n\n    const makePerson = makeConstructor(null, function (self, options) {\n        self.private.identity = options.name;\n        self.protected.name = options.name;\n        self.public.hello = function () {\n            console.log('Hi, my name is ' + self.protected.name + '!');\n        };\n        self.public.info = function () {\n            console.log('My identity is ' + self.private.identity + '.');\n        };\n    });\n\n    const makeHero = makeConstructor(makePerson, function (self) {\n        self.protected.name = self.protected.name + ' the Great';\n        self.public.info = function () {\n            console.log('My identity is ' + self.private.identity + '... I think...');\n        };\n    });\n\n    return [makePerson, makeHero];\n}());\n\nconst person = makePerson({\n    name: 'Ben'\n});\nperson.hello(); // Hi, my name is Ben!\nperson.info();  // My identity is Ben.\n\nconst hero = makeHero({\n    name: 'Danny'\n});\nhero.hello();   // Hi, my name is Danny the Great!\nhero.info();    // My identity is undefined... I think...\n</code></pre>\n\n<p>Here's <a href=\"http://jsfiddle.net/7223c60t/\" rel=\"nofollow\">a demo</a>.</p>\n\n<p>The lambda patterns are more powerful than classes. I recommend using lambdas instead.</p>\n\n<p>ES6 may provide syntax that makes it more convenient to type classes, but these classes are just as limited as the old \"prototypal\" \"classes.\" There is no encapsulation mechanism, save variables and \"priviledged\" methods in the constructor with access to said variables. A constructor function containing and managing all the details of your object would seem to contradict the enclosing \"class\" structure. Commonly-employed workarounds are \"_pinkyPromise\" and \"$$doNotTouchMe\" properties; you warn people that they shouldn't mess with or rely on them. It's a real shame when they ignore your advice and use those properties anyway, inevitably, because it is convenient at the time. With real private and protected variables, you can protect yourself and your team from yourselves.</p>\n\n<p>Codifying classes doesn't have much benefit. A common interface for inheritance would be nice, but the prototypal flavor is not a very good inheritance--in fact, it's actually rather bad, considering it prompts fallacious design practices. So it probably shouldn't be used.</p>\n\n<p>Since you aren't using classes, by extension, you do not need <code>this</code> either. You instead manipulate function arguments.</p>\n\n<p>Since you aren't using <code>this</code>, arrow functions are less useful. They seem to be about as useful as <code>function</code>. Except that you can't name them, so you can't use them for recursion without exposing the name to the outer scope.</p>\n\n<p>Also, arrow functions go to dangerous lengths to provide the trickiest one-liner solutions. You can:</p>\n\n<ul>\n<li>Omit the parentheses if there is exactly one argument.</li>\n<li>The block can be omitted, permitting <a href=\"https://www.imperialviolet.org/2014/02/22/applebug.html\" rel=\"nofollow\">\"C programmer temporarily lapses into writing Python\" bugs</a>.</li>\n<li>Implicit return, but only if there is no block.\n<ul>\n<li>This will result in errors when a one-liner expands to multiple lines and the programmer forgets to add a <code>return</code>.</li>\n</ul></li>\n</ul>\n\n<p>One could choose to always include parentheses and blocks, but the temptation to write tricky code is simply too great. Having multiple ways of doing things creates unnecessary vectors for arguments and dissension in the workplace and the language community. It would be better if the language grammar did not allow us to make poor choices.</p>\n\n<p>With <code>function</code>, there is only one way to write the form, and it happens to be the most-generalized way, which is best for maintenance.</p>\n\n<p>So you don't need arrow functions either. With <code>this</code> out of the picture, <code>function</code> is better, so always use it.</p>\n\n<p>The syntactic problems with arrows aside, just using one form for procedures has the benefit of solving your original problem, which was figuring out when to use one notation or the other. It's simple: Just use <code>function</code>.</p>\n\n<h2>Guideline for Function Notation in ES6</h2>\n\n<p>Create procedures in the following manner:</p>\n\n<pre><code>const procedureName = function () {\n    // Procedure body.\n};\n\n[].forEach(function () {\n    // Iterator body.\n});\n</code></pre>\n\n<p>Do not use the <code>class</code> or <code>this</code> keywords. Do not use <code>() => {}</code>.</p>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>The question is directed at people who have thought about code style in the context of the upcoming ECMAScript 6 (Harmony) and who have already worked with the language.</p>\n\n<p>With <code>() => {}</code> and <code>function () {}</code> we are getting two very similar ways to write functions in ES6. In other languages lambda functions often distinguish themselves by being anonymous, but in ECMAScript any function can be anonymous. Each of the two types have unique usage domains (namely when <code>this</code> needs to either be bound explicitly or explicitly not be bound). Between those domains there is a vast number of cases where either notation will do.</p>\n\n<p>Arrow functions in ES6 have at least two limitations:</p>\n\n<ul>\n<li>Don't work with <code>new</code></li>\n<li>Fixed <code>this</code> bound to scope at initialisation</li>\n</ul>\n\n<p>These two limitations aside, arrow functions could theoretically replace regular functions almost anywhere. What is the right approach using them in practice? Should arrow functions be used e.g.:</p>\n\n<ul>\n<li>\"everywhere they work\", i.e. everywhere a function does not have to be agnostic about the <code>this</code> variable and we are not creating an object.</li>\n<li>only \"everywhere they are needed\", i.e. event listeners, timeouts, that need to be bound to a certain scope</li>\n<li>with 'short' functions but not with 'long' functions</li>\n<li>only with functions that do not contain another arrow function</li>\n</ul>\n\n<p>What I am looking for is a guideline to selecting the appropriate function notation in the future version of ECMAScript. The guideline will need to be clear, so that it can be taught to developers in a team, and to be consistent so that it does not require constant refactoring back and forth from one function notation to another.</p>\n",
        "creation_date" : 1396965054,
        "last_activity_date" : 1422236484,
        "question_id" : 22939130,
        "score" : 29,
        "tags" : [ "javascript",
            "lambda-functions",
            "ecmascript-6",
            "ecmascript-harmony"
          ],
        "title" : "When should I use Arrow functions in ECMAScript 6?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>You cannot do that. A number is not an object in JavaScript. When you write:</p>\n\n<pre><code>a.b = true;\n</code></pre>\n\n<p>what happens is that the runtime instantiates a Number instance automatically. That's an object. You set the \"b\" property on that object to <code>true</code>, and then it's forgotten.</p>\n\n<p>Now, you can do this:</p>\n\n<pre><code>var a = new Number(5);\na.b = true;\nalert(a.b);\n</code></pre>\n\n<p>and it'll work just fine.</p>\n",
              "is_accepted" : false,
              "score" : 2
            } ],
        "body" : "<p>Consider this excerpt from a node.js REPL session:</p>\n\n<pre><code>> var a = 5;\nundefined\n> a.b = true;\ntrue\n> a.b;\nundefined\n</code></pre>\n\n<p>The intention is to store extra properties in <code>a</code>, which if successful would make the final line be <code>true</code> instead of <code>undefined</code>. How can I do this?</p>\n",
        "creation_date" : 1399608748,
        "last_activity_date" : 1422236449,
        "question_id" : 23556478,
        "score" : 1,
        "tags" : [ "javascript",
            "javascript-objects"
          ],
        "title" : "Store extra properties in a javascript integer"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p>I don't believe this would be something Google would really support; therefore, it would be subject to change with an update without warning, etc. I would recommend looking at enforcing this as a policy rather than changing the settings on the machines like this. </p>\n\n<p><a href=\"http://www.chromium.org/administrators\" rel=\"nofollow\">Documentation for Administrators</a> - gives a good overview on how to set Machine-level policies which will be in place for Chrome regardless of users signing into Chrome.</p>\n\n<p>If you're using Google Apps, you can also look into enforcing policies via the Admin console as per <a href=\"https://support.google.com/chrome/a/answer/2657289\" rel=\"nofollow\">this</a>. Note, this will only apply to browser sessions where the user has logged into Chrome.</p>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>Search expression:</p>\n\n<pre><code>\"startup_urls\": \\[([^\\]]*)\\]\n</code></pre>\n\n<p>Replace expression:</p>\n\n<pre><code>\"startup_urls\": [\"http://intranet\", $1]\n</code></pre>\n\n<p>I hope my employer doesn't do this!  Seriously annoying, my chrome instance reopens whatever was open when it closed (my point is it does what I want, not what my employer wants).</p>\n",
              "is_accepted" : true,
              "score" : 1
            }
          ],
        "body" : "<p>Our company is changing to Chrome as a default internet browser. Unfortunately part of our corporate policy is to have the homepage set to our intranet URL. I have found that the settings for Chrome's homepage is in <code>Local Application Data\\Google\\Chrome\\User Data\\default\\Preferences</code> and the line that contains the homepage is:</p>\n\n<p><code>\"startup_urls\": [ \"http://www.fave1.com\", \"http://www.fave2.com\"],</code></p>\n\n<p>However as many of our users have already set their own homepages, I cannot do a simple search and replace of <code>\"startup_urls\": [ \"http://www.google.com\"],</code> with our own URL.</p>\n\n<p>My regex skills are seriously rusty, can someone spare the time to show me how to match this entire line regardless of the URL, so that I can then replace it with our own URL?</p>\n",
        "creation_date" : 1400764836,
        "last_activity_date" : 1422236369,
        "question_id" : 23808068,
        "score" : 0,
        "tags" : [ "javascript",
            "regex",
            "google-chrome"
          ],
        "title" : "ecmascript regexp to find/replace Chrome homepage"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>Solved.\nThe correct way is</p>\n\n<pre><code> s.eval(\"manager.test(); manager.class.static.test2();\");\n</code></pre>\n",
              "is_accepted" : true,
              "score" : 0
            } ],
        "body" : "<p>I'd like to put native Java objects into the ScriptEngine bindings for easier access.<br>\nI mean to avoid lots of Java.type(...).<br>\nI tried in that way.</p>\n\n<pre><code>jsEngine.getContext().getBindings(ScriptContext.ENGINE_SCOPE).put(\"manager\", Manager.getInstance());\n</code></pre>\n\n<p>But that's failed with error <em>\"Manager has no such function \"funcName\" in eval...\".</em></p>\n\n<p>Is it possible at all?</p>\n\n<p><strong>UPD:</strong><br>\nExample code<br></p>\n\n<pre><code>public class ManagerClass {\n\n    public void test()\n    {\n        System.out.println(\"Hello\");\n    }\n\n    public static void test2()\n    {\n        System.out.println(\"Hello Static\");\n    }\n}\n\npublic class NewClass {\n    public static void main(String[] args) throws ScriptException {\n        final ScriptEngine s = new ScriptEngineManager().getEngineByExtension(\"js\");\n        s.getBindings(ScriptContext.ENGINE_SCOPE).put(\"manager\", new ManagerClass());\n        s.eval(\"manager.test(); manager.test2();\");\n    }\n}\n</code></pre>\n",
        "creation_date" : 1401448530,
        "last_activity_date" : 1422236358,
        "question_id" : 23953272,
        "score" : 0,
        "tags" : [ "java",
            "javascript",
            "java-8",
            "nashorn"
          ],
        "title" : "Nashorn. Binding native Java objects?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>I tried this and I got that both are being called.</p>\n\n<pre><code>var obj = {name:'MD'};\nvar myFirstFunction = function (changes) {\n    console.log(\"First \" ,Object.keys(changes[0]))\n}\nvar mySecondFunction = function (changes) {\n    console.log(\"Second \",Object.keys(changes[0]))\n}\n\nObject.observe(obj, myFirstFunction);\nObject.observe(obj, mySecondFunction);\n\nobj.name = \"Mritunjay\"\n</code></pre>\n",
              "is_accepted" : true,
              "score" : 1
            } ],
        "body" : "<p>Can someone tell me if <code>Object.observe()</code> will (once implemented) allow to register multiple observers via multiple calls ? Or only the last one will stay ? I can't find anything about that on Google...</p>\n\n<p>For example if I do :</p>\n\n<pre><code>Object.observe(obj, myFirstFunction);\nObject.observe(obj, mySecondFunction);\n</code></pre>\n\n<p>Will both functions get called when my object is updated or only <code>mySecondFunction</code> ?</p>\n",
        "creation_date" : 1405603269,
        "last_activity_date" : 1422236353,
        "question_id" : 24804758,
        "score" : 0,
        "tags" : [ "javascript",
            "ecmascript-harmony"
          ],
        "title" : "Object.observe - Mutiple observers support?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>In JS you would simply send the object as is:\nf({'foo' : 'bar'}, [can, haz]);</p>\n",
              "is_accepted" : false,
              "score" : 0
            } ],
        "body" : "<p>I want to call a function with arguments from a list or object. Here's how I'd do it in Python:\n</p>\n\n<pre><code>d = {'foo': 'bar'}\na = ['can', 'haz']\n\nf(*a, **d)\n</code></pre>\n\n<p>In JavaScript there is probably some trick using the internal <code>arguments</code> list, but I'm not sure of \"the secret\"!</p>\n",
        "creation_date" : 1405671930,
        "last_activity_date" : 1422236350,
        "question_id" : 24820460,
        "score" : 0,
        "tags" : [ "javascript",
            "arguments",
            "argument-passing",
            "ecmascript-5"
          ],
        "title" : "Unroll lists and objects into function arguments?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>In SharePoint 2013 was introduced new permission level <code>Remote Interfaces Permission</code> that in particular prevents anonymous users from accessing CSOM libraries.  </p>\n\n<h2>How to enable CSOM for Anonymous Users</h2>\n\n<ul>\n<li>Go to Central Administration</li>\n<li>Go to Manage Web Application</li>\n<li>Select your Web App</li>\n<li>Click on Authentication Providers in the ribbon</li>\n<li>Click zone \"Default\".</li>\n<li>Uncheck \"Require Use Remote Interfaces Permission\"</li>\n</ul>\n\n<p>That check box decouples use of CSOM from the Use Remote Interfaces permission.  When checked, it simply means that the user must possess the Use Remote Interfaces permission which allows access to SOAP, Web DAV, the Client Object Model. </p>\n\n<h2>References</h2>\n\n<ul>\n<li><a href=\"http://social.msdn.microsoft.com/Forums/sharepoint/en-US/e752b077-48d8-4d66-a5d8-60f34e9b285d/enable-anonymous-access-for-javascript-client-object-model?forum=sharepointdevelopment\" rel=\"nofollow\">Enable anonymous access for Javascript Client Object Model</a></li>\n<li><a href=\"http://blogs.msdn.com/b/kaevans/archive/2013/10/24/what-every-developer-needs-to-know-about-sharepoint-apps-csom-and-anonymous-publishing-sites.aspx\" rel=\"nofollow\">What Every Developer Needs to Know About SharePoint Apps, CSOM, and\nAnonymous Publishing Sites</a></li>\n</ul>\n",
              "is_accepted" : true,
              "score" : 3
            } ],
        "body" : "<p>I have a code like below to get current web in my SharePoint 2013 portal project</p>\n\n<pre><code>var clientContext;\nvar website;\nSP.SOD.executeFunc('sp.js', 'SP.ClientContext', sharePointReady);\nfunction sharePointReady() {\nclientContext = SP.ClientContext.get_current();\nwebsite = clientContext.get_web();\n\nclientContext.load(website);\nclientContext.executeQueryAsync(onRequestSucceeded, onRequestFailed);\n}\nfunction onRequestSucceeded() {\n    alert('URL of the website: ' + website.get_url());\n}\nfunction onRequestFailed(sender, args) {\n    alert('Error: ' + args.get_message());\n}\n</code></pre>\n\n<p>When I log in to site everything works perfect. But when I open site with anonymous user web url not is not avaliable. Am I missing something?</p>\n\n<p>Thanks</p>\n",
        "creation_date" : 1406111807,
        "last_activity_date" : 1422236346,
        "question_id" : 24908183,
        "score" : 1,
        "tags" : [ "javascript",
            "sharepoint"
          ],
        "title" : "ECMAScript not working for anonymous user"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p>You're using <code>require</code> to get the underscore dependency, which <em>could</em> give you a number of advantages (supposing you use it right), like:</p>\n\n<ol>\n<li>freedom to load the dependency asynchronously, on-demand, and</li>\n<li>the ability to use different versions of the dependency in different parts of your code</li>\n</ol>\n\n<p>If you're going to start using underscores on objects, you lose these advantages, the same way you would if you just used underscore as a global variable. And, to what end? So you can replace</p>\n\n<pre><code>_([1, 2, 3]).contains(3)\n</code></pre>\n\n<p>with </p>\n\n<pre><code>[1, 2, 3]._.contains(3)\n</code></pre>\n\n<p>?</p>\n\n<p>It may not be a Bad Idea™, but it doesn't seem like a particularly good one, either.</p>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<blockquote>\n  <p>Can you see how this will come back to bite us in developing our application, assuming there is never a native <code>_</code> property introduced in Object?</p>\n</blockquote>\n\n<p>Yes. While you have <a href=\"http://stackoverflow.com/q/13296340/1048572\">avoided that the property shows up in <code>for in</code> loops</a>, you did forget to provide a setter. And this will definitely hunt you:</p>\n\n<pre><code>// let's start with this\nObject.defineProperty( Object.prototype, '_', {\n    get: function() {\n        return \"sorry\";\n    }\n});\n// now what do you expect the following statements to do?\n\n> var x = {}; \"_\" in x;\ntrue // meh, obvious\n> var x = {_:\"works\"}; x._\n\"works\" // this is hijackable in older browsers!\n> var x = {}; x._ = \"works\"; x._\n\"sorry\" // well…\n(function(){\"use strict\"; var x={}; x._ = \"works\"; return x._; }())\nunhandled TypeError: \"Invalid assignment in strict mode\" // ooops!\n> _\n\"sorry\" // ah, window._ inherits from Object.prototype as well\n> _ = \"works\"; _\n\"sorry\" // and prevents even simple global variable assignments\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 1
            }
          ],
        "body" : "<p>The common wisdom is the just because you <strong>can</strong> augment native types, doesn't mean you <strong>should</strong>.</p>\n\n<p>That augmenting a native types prototype is a bad idea <strong>always</strong>, with the only exception being to polyfill behavior that is within the ECMAScript Spec.</p>\n\n<p>In our project we're using underscore quite a bit and I was wondering, why not use the OOP style it provides directly on our objects?</p>\n\n<pre><code>var _ = require('underscore');\nObject.defineProperty( Object.prototype, '_', {\n    get: function() {\n        return _(this);\n    }\n});\n</code></pre>\n\n<p>Which enables us to use underscore methods directly like so, without having to make the decision to require the library everywhere we want to use it, but to simply know it's there and standardize on using underscore functionality when appropriate.</p>\n\n<pre><code>[1, 2, 3]._.contains(3); // true\n\nvar funcOnce = function() {\n   console.log(\"hello\");\n}._.once();\n\nfuncOnce(); // \"hello\"\nfuncOnce(); // \n\n{one: 1, two: 2, three: 3}._.keys(); // ['one', 'two', 'three']\n</code></pre>\n\n<p>I believe I've limited the scope of the damage by only modifying a single (probably useless <code>_</code>?) property on the native Object.</p>\n\n<p>Can you see how this will come back to bite us in developing our application, assuming there is never a native <code>_</code> property introduced in <code>Object</code>?</p>\n",
        "creation_date" : 1406154126,
        "last_activity_date" : 1422236343,
        "question_id" : 24922049,
        "score" : 2,
        "tags" : [ "javascript",
            "underscore.js",
            "ecmascript-5"
          ],
        "title" : "Attaching underscore to Object prototype, bad idea?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>So I figured out my error in thinking, and wrote a simple example below explaining my confusion:  hope this helps others!</p>\n\n<pre><code>function Class () {\n    // this: an object with a prototype of Class, if 'new'ed, window otherwise\n    var that = this;\n    function privateMethod () {\n        // this: a reference to window.  privateMethod still belongs to Class' closure\n        var dat = this;\n\n        // that: an object with a prototype of Class, if 'new'ed, window otherwise\n        var dis = that;\n    }\n}\n</code></pre>\n\n<p>I replaced my reference to <strong><code>this</code></strong> with my afore-defined <strong><code>var Drawing = this;</code></strong> (A lot of people use the form <strong><code>var that = this</code></strong>) and the reference is there, despite it not being available to the inline console command line.</p>\n\n<p>Appreciate the thought provoking convo that lead to the answer!</p>\n\n<p>I believe again.</p>\n",
              "is_accepted" : true,
              "score" : 2
            } ],
        "body" : "<h1>Why is 'this' not what I expect it to be?</h1>\n\n<p>Always thought I understood js closure pretty well and was too smart and sexy to run into a problem like this, but I'm ready to become an functional atheist...</p>\n\n<h2>Observe the example code js Ninjas:</h2>\n\n<pre><code>function Drawing (id, element) {\n    /*\n     * Section A: value of 'this' object of type 'Drawing' (expected);\n     *  Variables I ought to have access to from any point in Drawing's invocation\n     */\n    { // Preconstruction\n        var Drawing = this;\n        var SVG = document.createElementNS('http://www.w3.org/2000/svg', \"SVG\");\n        support.dom.Associative.call(Drawing, id, element);\n        element = Drawing.$(); // In case element was null\n        element.className = \"Drawing\";\n        // Things in or about the drawing\n        var shapes = [];\n\n    }\n\n\n    function add (shape) {\n        /*\n         * Section B: value of 'this' Window object\n         * What gives in this function?\n         *  Variables I have access to from section A:\n         *    element: yes, id: no, Drawing: no, SVG: yes\n         *  ?$@#$%^$#!!!!! Help me!\n         */\n        if (shape instanceof Shape) {\n            shapes.push(shape);\n            if(!this.render) SVG.appendChild(shape.toSVG());\n            return shape;\n        }\n    }\n\n\n    this.modify = function (options) {\n        if (options.create) {\n            return add(create[options.create](options));\n        }\n    };\n}\n</code></pre>\n\n<h2>What don't I get?</h2>\n\n<p><strong><code>function add</code></strong> is defined in <strong><code>function Drawing</code></strong>, and in my wild application there is no other function named or defined add <strong>`add'</strong>.</p>\n\n<p>The function I expect is in fact invoking, and I break inside it and see that I have access to <em>some</em> of the closure defined vars from Drawing's invocation, but not <em>all</em> or at least it seems this way.</p>\n\n<p>Edumucate me please maybe I'm making a silly mistake and another pair of eyes will help... I'm ready to give up on science everything I know is wrong :)</p>\n\n<p>Below is a cap of the spiritually offending output:\n<img src=\"http://i.stack.imgur.com/VgjBS.png\" alt=\"Offensive Output, Parental Guidance Advised\"></p>\n",
        "creation_date" : 1406832940,
        "last_activity_date" : 1422236338,
        "question_id" : 25066815,
        "score" : 1,
        "tags" : [ "javascript",
            "object",
            "this"
          ],
        "title" : "Why is 'this' not what I expect it to be?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>For PCRE implementations a closing square bracket on its own does not need to be escaped since it is the first meta character inside of the character class. In Javascript, <code>[^]</code> represents a valid character class. </p>\n\n<p>As quoted from the PCRE <a href=\"http://www.pcre.org/pcre.txt\" rel=\"nofollow\">documentation</a>:</p>\n\n<blockquote>\n  <p>A closing square bracket on its own is not special by default.  However, if the <strong>PCRE_JAVASCRIPT_COMPAT</strong> option is set,\n         a lone closing square bracket causes a compile-time error. If a closing\n         square bracket is required as a member of the class, it should  be  the\n         first  data  character  in  the  class (after an initial circumflex, if\n         present) or escaped with a backslash.</p>\n</blockquote>\n\n<p>Therefore, you need to escape this character.</p>\n\n<pre><code>/(\\d+)\\.\\s+\\[[^\\]]+\\]\\s*`([^`]*)`\\s*/g\n               ^^\n</code></pre>\n\n<p><a href=\"https://eval.in/196171\" rel=\"nofollow\">Working Demo</a></p>\n",
              "is_accepted" : true,
              "score" : 4
            } ],
        "body" : "<p>I want to build a javascript function that transforms text into another format, from this:</p>\n\n<pre><code>MATCH 1 \n1.  [4-17]  `public direct` \n2.  [18-29] `routing.key` \nMATCH 2 \n1.  [35-41] `direct` \n2.  [42-52] `routingkey` \n</code></pre>\n\n<p>To this:</p>\n\n<pre><code>MATCH 1: [Group 1: public direct] [Group 2: routing.key]\nMATCH 2: [Group 1: direct] [Group 2: routingkey]\n</code></pre>\n\n<p>I've been messing with this code in my Chrome browser console using regex replacements, however it will not replace anything. Here is one of the approaches I've tried, <code>a</code> is the test object, the problem is on the second replacement:</p>\n\n<pre><code>a = \"MATCH 1 \\n\\\n1.  [4-17]  `public direct` \\n\\\n2.  [18-29] `routing.key` \\n\\\nMATCH 2 \\n\\\n1.  [35-41] `direct` \\n\\\n2.  [42-52] `routingkey`\"\n\nvar repl = a.replace(/^(MATCH\\s\\d+)\\s*/gm, \"$1: \")\n            .replace(/(\\d+)\\.\\s+\\[[^]]+\\]\\s*`([^`]*)`\\s*/g, \"[Group $1: $2]\")\n            .replace(/(?=MATCH\\s\\d+: )/g, \"\\n\")\n\nconsole.log(repl)\n</code></pre>\n\n<p>Studying regex101 demos, the pattern <code>/(\\d+)\\.\\s+\\[[^]]+\\]\\s*`([^`]*)`\\s*/g</code> will <a href=\"http://regex101.com/r/gB3uR8/1#pcre\" rel=\"nofollow\">replace properly in PHP (PCRE)</a> <a href=\"http://regex101.com/r/gB3uR8/1#python\" rel=\"nofollow\">and Python</a>, but <a href=\"http://regex101.com/r/gB3uR8/1#javascript\" rel=\"nofollow\">not on JavaScript</a>.</p>\n\n<p>Why?</p>\n",
        "creation_date" : 1411226842,
        "last_activity_date" : 1422236291,
        "question_id" : 25950324,
        "score" : 4,
        "tags" : [ "javascript",
            "regex"
          ],
        "title" : "Why does this regex replacement not work for JavaScript, but instead only work for other engines?"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p>Officially: Because there's <a href=\"http://www.w3.org/TR/html5/scripting-1.html#restrictions-for-contents-of-script-elements\" rel=\"nofollow\">specific handling for it</a> in the HTML spec. E.g., it's a \"by fait\" thing. It's not a JavaScript thing, you won't find it in the JavaScript grammar.</p>\n\n<p>Unofficially, it would appear that at least some JavaScript engines handle it intrinsically, sometimes in ways that make what I believe is valid JavaScript invalid. For instance, on V8 in a browser, this fails:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>eval(\"var a = 1; var n = 3; console.log(a<!--n);\")</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>...with <code>Unexpected end of input</code>. I'm pretty sure it <strong>shouldn't</strong>, but I'm not a parsing lawyer. I'd expect it to log <code>false</code> to the console, like this does:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>eval(\"var a = 1; var n = 3; console.log(a<! --n);\")\r\n// Note the space -------------------------^</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Side note: Meteor's <a href=\"http://jsparse.meteor.com/\" rel=\"nofollow\">jsparser</a> agrees with me, copy and paste just the bit inside the double quotes into it.</p>\n\n<p>Note that the characters <code><!</code> do not appear in <a href=\"http://www.ecma-international.org/ecma-262/5.1\" rel=\"nofollow\">the specification</a>, nor does there appear to be anything near any of the 70 occurrences of the word \"comment\" in there, nor is it anywhere in the <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-7.4\" rel=\"nofollow\">comment grammar</a>, so it wouldn't seem to be an explicit in-spec exception. It's just something at least some JavaScript engines do to avoid getting messed up by people doing silly things. No great surprise. :-)</p>\n",
              "is_accepted" : true,
              "score" : 5
            },
            { "body" : "<p>It is defined by the <a href=\"http://www.w3.org/TR/html4/interact/scripts.html#idx-user_agent\" rel=\"nofollow\"><strong>W3's docs</strong></a> for the user agents:</p>\n\n<blockquote>\n  <p>The JavaScript engine allows the string <code>\"<!--\"</code> to occur at the start of a SCRIPT element, and ignores further characters until the end of the line.</p>\n</blockquote>\n\n<p>So browsers follow these standards</p>\n",
              "is_accepted" : false,
              "score" : 1
            }
          ],
        "body" : "<p>I noticed in some legacy code the following pattern:</p>\n\n<pre><code><script>\n    <!--\n    // code\n    // -->\n</script>\n</code></pre>\n\n<p>After some research, this appears to be a <em>very</em> old technique for hiding the contents of script elements from the DOM when the browser did not support the <code><script></code> element. More information can be found <a href=\"http://stackoverflow.com/questions/808816/are-html-comments-inside-script-tags-a-best-practice\">here</a>. </p>\n\n<p>My concern is this: <strong>why does <code><!--</code> not throw a Syntax Error?</strong> I've found on <a href=\"https://javascript.spec.whatwg.org/#comment-syntax\">whatwg.org's website</a> that <code><!--</code> should be functionally equivalent to <code>//</code>, and it links off to a snippet from the <a href=\"https://people.mozilla.org/~jorendorff/es6-draft.html#sec-comments\">ECMAScript grammar about comments</a>. The problem is, <code><!--</code> isn't defined by that grammar at all.</p>\n\n<p>So this seems like undefined behavior that happens to be implemented by all major browsers. Is there a specification that allows for this, or is this a backwards-compatibility hack that people are bringing forward?</p>\n",
        "creation_date" : 1413407588,
        "last_activity_date" : 1422236264,
        "question_id" : 26392218,
        "score" : 9,
        "tags" : [ "javascript",
            "syntax",
            "standards",
            "grammar"
          ],
        "title" : "Why does <!-- Not Throw a Syntax Error?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>GatewayScript doesn't support any XML Dom in the ECMA (Node.js) implemented.\nI have however used the modules XPATH and DOM with great success.\nDownload XMLDom (<a href=\"https://github.com/jindw/xmldom\" rel=\"nofollow\">https://github.com/jindw/xmldom</a>) and Xpath (<a href=\"https://github.com/goto100/xpath\" rel=\"nofollow\">https://github.com/goto100/xpath</a>) Node.js modules and add the following scripts to your DP directory:</p>\n\n<ul>\n<li>dom-parser.js</li>\n<li>dom.js</li>\n<li>sax.js</li>\n<li>xpath.js</li>\n</ul>\n\n<p>To use it in DataPower GWS you first need to get the XML data from INPUT:</p>\n\n<pre><code>// This is where we start, grab the INPUT as a buffer\nsession.input.readAsBuffers(function(readAsBuffersError, data) {\n\n\n    if (readAsBuffersError) {\n        console.error('Error on readAsBuffers: ' + readAsBuffersError);\n        session.reject('Error on readAsBuffers: ' + readAsBuffersError);\n    } else {\n\n        if (data.slice(0,5).toString() === '<?xml') {\n\n            console.log('It is XML!');\n            parseXML(data);\n\n        }\n    } //end read as buffers error\n}); //end read as buffer function\n\nfunction parseXML(xml) {\n    // Load XML Dom and XPath modules\n    var select = require('local:///xpath.js');\n    var dom = require('local:///dom-parser.js');\n\n    var doc = new dom.DOMParser().parseFromString(xml.toString(), 'text/xml');\n    // Get attribute\n    var nodes = select(doc, \"//root/element1/@protocol\");\n    try {\n        var val = nodes[0].value.toString();\n        console.log('found xml attribute as ['+val+']');\n    } catch(e) {\n        // throw error here\n    }\n\n    // Get an element\n    nodes = select(doc, \"//root/element1/child1\");\n    try {\n        var val = nodes[0].firstChild.data;\n        console.log('elemnt found as ['+val+']');\n    } catch(e) {\n        //throw error here\n    }\n\n}\n</code></pre>\n\n<p>That should be a working sample... You need to change the path for the modules if you move them.\nI have a directory in store:/// where I add my GWS modules.</p>\n\n<p>Hope you'll get it to fly!</p>\n",
              "is_accepted" : false,
              "score" : 0
            } ],
        "body" : "<p>anybody know how to access XML data using xpath expression in ECMA Script(datapower)?</p>\n\n<p>IBM infocenter doesn't have this information on how to access XML data</p>\n\n<p>Please provide if you have any sample script for accessing XML data</p>\n\n<p>Thanks</p>\n",
        "creation_date" : 1414390518,
        "last_activity_date" : 1422236259,
        "question_id" : 26582051,
        "score" : 0,
        "tags" : [ "javascript",
            "ibm-datapower"
          ],
        "title" : "ECMA in Datapower"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>I'm not sure how that works in CQ workflow ECMA scripts but in plain Sling server-side Javascript the <code>sling.getService(Packages.com.example.MyServiceInterface)</code> syntax is correct.</p>\n\n<p>Make sure the OSGi console at <code>/system/console/services</code> shows an active service with the <code>MyServiceInterface</code>.</p>\n",
              "is_accepted" : true,
              "score" : 1
            } ],
        "body" : "<p>I've got a service running on my CQ5 istance and I want to invoke its method from a workflow. \nMy question is, how can I get the reference of a service from a ECMA script?</p>\n\n<p>I've already tried:</p>\n\n<pre><code>var myService= sling.getService(Packages.com.my.package.MyService.class);\n</code></pre>\n\n<p>but I get a \"missing name after . operator\" and </p>\n\n<pre><code>var myService= sling.getService(Packages.com.my.package.MyService);\n</code></pre>\n\n<p>but I get null reference.</p>\n\n<p>Any idea?</p>\n",
        "creation_date" : 1415027349,
        "last_activity_date" : 1422236248,
        "question_id" : 26717044,
        "score" : 1,
        "tags" : [ "javascript",
            "cq5",
            "aem"
          ],
        "title" : "CQ5 ECMA script get reference to service"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>Because there is no clear path.</p>\n\n<p>Consider the following:</p>\n\n<pre><code>var movall = {moo: \"bar\", val: 5};\nvar ob     = {a: mooval};\nvar ob2    = {b: movall};\n</code></pre>\n\n<p>Now let's say I observe <code>movall</code>. Then I update <code>moo</code>. What is the path? Is it <code>movall.moo</code>, or <code>ob.a.movall.moo</code>, or <code>ob2.b.movall.moo</code>? If I observe <code>ob</code>, there is no change reported, since there is no change to any of its properties (the change was <em>internal</em> to one of its properties, which doesn't count).</p>\n\n<p>Objects are independent of their existence nested within other objects. They can be nested within multiple other objects. There is no unique \"path\" that describes how to get from potentially multiple starting points down to a specific property which may have changed.</p>\n\n<p>Nor does JS know the path by which you reached the property being changed. So in <code>ob.foo[0].val = 1;</code>, JS simply evaluates the chain, arrives at the <code>foo[0]</code> object, changes its <code>val</code> property, and at that point has no idea how it happened to arrive at <code>foo[0]</code>. All it knows is that <code>foo[0]</code> has changed. It changed within <code>ob</code>, but it might also have changed within some other object that happens to have <code>foo[0]</code> as a property.</p>\n\n<p>However, you can possibly achieve what you seem to be trying to by building some machinery on top of the low-level observe/notify mechanism. We shall define a function on an object which sets up observers on its property objects, and so on recursively, and propagates change records back up with properly constructed paths:</p>\n\n<pre><code>function notifySubobjectChanges(object) {\n  var notifier = Object.getNotifier(object);        // get notifier for this object\n  for (var k in object) {                           // loop over its properties\n    var prop = object[k];                           // get property value\n    if (!prop || typeof prop !== 'object') break;   // skip over non-objects\n    Object.observe(prop, function(changes) {        // observe the property value\n      changes.forEach(function(change) {            // and for each change\n        notifier.notify({                           // notify parent object\n          object: change.object,                    // with a modified changerec\n          name: change.name,                        // which is basically the same\n          type: change.type, \n          oldValue: change.oldValue, \n          path: k + \n            (change.path ? '.' + change.path : '')  // but has an addt'l path property\n        });\n      });\n    });\n    notifySubobjectChanges(prop);                   // repeat for sub-subproperties\n  }\n}\n</code></pre>\n\n<p>(Note: the <code>change</code> object is frozen and we cannot add anything to it, so we have to copy it.)</p>\n\n<p>Now</p>\n\n<pre><code>a = { a: { b: {c: 1 } } };                     // nested objects\nnotifySubobjectChanges(a);                     // set up recursive observers\nObject.observe(a, console.log.bind(console));  // log changes to console\na.a.b.c = 99;\n\n>> 0: Object\n  name: \"c\"\n  object: Object\n  oldValue: 1\n  path: \"a.b\"                                  // <=== here is your path!\n  type: \"update\"\n</code></pre>\n\n<p>The above code is not production-quality, use at your own risk.</p>\n",
              "is_accepted" : true,
              "score" : 2
            } ],
        "body" : "<p>The changes array of an <code>Object.observe()</code> callback contains objects with the following four properties:</p>\n\n<ul>\n<li>name</li>\n<li>object</li>\n<li>type</li>\n<li>oldValue</li>\n</ul>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe#Parameters\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe#Parameters</a></p>\n\n<p>Why isn't there a <code>path</code> provided natively? Example:</p>\n\n<pre><code>var ob = {\n    foo: [\n        {moo: \"bar\", val: 5},\n        {val: 8}\n    ]\n}\n\nob.foo[0].val = 1;\n// callback should provide path \"foo.0.val\" or \"foo[0].val\"\n</code></pre>\n\n<p>There's a Node.js module that extends <code>Object.observe()</code> to also include the path: <a href=\"https://github.com/aheckmann/observed\" rel=\"nofollow\">observed.js</a>,<br>\nbut I worry the performance gain of a native <code>observe()</code> will be lost (if no, could you please explain how it is implemented then?). It might be possible to <a href=\"http://browserify.org/\" rel=\"nofollow\">browserify</a> the module, but can't imagine it will perform well in a synchronous environment and I still wonder why nobody seems to have thought about an additional <code>path</code> property.</p>\n",
        "creation_date" : 1415288872,
        "last_activity_date" : 1422236197,
        "question_id" : 26783571,
        "score" : 0,
        "tags" : [ "javascript",
            "ecmascript-6",
            "observers",
            "ecmascript-harmony"
          ],
        "title" : "Why does Object.observe() not provide the data path of change to a callback?"
      },
      { "answer_count" : 3,
        "answers" : [ { "body" : "<p>Before you start reading you should get familiar with Meteor collections because this is the best way to do your example, and how \"this\" works inside of #each loop</p>\n\n<p>You can create one template and pass data to this</p>\n\n<pre><code><template name=\"zelle\">                      \n  <td class=\"box\">                          \n    <p class=\"textinbox\">{{name}}</p>  \n  </td>                                     \n</template> \n</code></pre>\n\n<p>And main template can look something like this</p>\n\n<pre><code><table>\n  {{#each zellen}}\n   <tr>\n   {{#each zellen}}\n     {{>zelle}}\n   {{/each}}\n   </tr>\n   {{/each}}\n</table>\n</code></pre>\n\n<p>This first <code>#each</code> can have any other helper, but if you want to have square you need same count of loops through <code><td></code> and <code><tr></code></p>\n\n<p>I would rather make a collection to hold your data</p>\n\n<p>On client side you can make something like this:</p>\n\n<pre><code>yourCollection= new Meteor.Collection('yourCollection');\n\nMeteor.startup(function(){\n   If(yourCollection.find().count()==0){\n   yourCollection.insert({name:1});\n   yourCollection.insert({name:2});\n   etc...\n}\n});\n</code></pre>\n\n<p>And event can look like this:</p>\n\n<pre><code>\"click td\": function() {\n  yourCollection.update({_id:this._id},{$inc:{name:1}});\n}\n</code></pre>\n\n<p>Since you now have a collection zellen helper should look like</p>\n\n<pre><code>zellen: function(){\n  return yourCollection.find();\n}\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>The answer Sindis gave looks correct, assuming you want to use a collection to manage the reactivity. In most cases you do, but not always. I'll propose an alternative solution which uses <a href=\"https://dweldon.silvrback.com/scoped-reactivity\" rel=\"nofollow\">scoped reactivity</a> where each template keeps track of it's own state without the need for global session variables. Warning - this is a somewhat advanced topic. Here's a working solution:</p>\n\n<h2>app.html</h2>\n\n<pre><code><body>\n  <table>\n    {{#each zellen}}\n      {{#if newrow}}\n        <tr></tr>\n      {{/if}}\n      {{> zelle}}\n    {{/each}}\n  </table>\n</body>\n\n<template name=\"zelle\">\n  <td class=\"box\">\n    <p class=\"textinbox\">{{counter}}</p>\n  </td>\n</template>\n</code></pre>\n\n<h2>app.js</h2>\n\n<pre><code>if (Meteor.isClient) {\n  Template.body.helpers({\n    zellen: function() {\n      var rows = 3;\n      var columns = 4;\n\n      // dynamically build the zellen\n      var zellen = _.times(rows * columns, function(i) {\n        var newrow = false;\n        if ((i % columns) === 0)\n          newrow = true;\n\n        return {count: i + 1, newrow: newrow}\n      });\n\n      return zellen;\n    }\n  });\n\n  Template.zelle.created = function() {\n    this.counter = new ReactiveVar;\n    this.counter.set(this.data.count);\n  };\n\n  Template.zelle.helpers({\n    counter: function () {\n      return Template.instance().counter.get();\n    }\n  });\n\n  Template.zelle.events({\n    click: function(e, template) {\n      var count = template.counter.get();\n      template.counter.set(count + 1);\n    }\n  });\n}\n</code></pre>\n\n<p>Note you will need to run <code>meteor add reactive-var</code> for this to work.</p>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>Let's propose a third way to approach the problem :)\nYou can always use something like the following to get multiple Session variables filled:</p>\n\n<pre><code>var fieldSize = 9;\nfor (i = 1; i <= fieldSize; i++) { \n    Session.set(\"counter\" + i, i); // sets 9 Session variables\n}\n</code></pre>\n\n<p>Or perhaps use an array inside the <code>Session</code>. It can even be an array of objects:</p>\n\n<pre><code>var fieldSize = 9;\nvar fields = [];\nfor (i = 1; i <= fieldSize; i++) {\n    fields.push({name: i, count: i});\n}\nSession.set(\"fields\", fields); \n</code></pre>\n\n<p>This is basically the same approach as using <code>ReactiveVar</code>, only that you are using a global variable (<code>Session</code>) instead of a scoped one. You entire application will be able to access the things you store within <code>Session</code>.</p>\n\n<p>Also, you should perhaps not use a template bound to each field, but iterate using <code>{{#each}}</code></p>\n\n<pre><code><template name=\"fields\">                      \n  {{#each withIndex fields}}\n     {{> zelle}}\n  {{/each}}                                    \n</template>  \n</code></pre>\n\n<p>The trouble here is that you have no control over which cell you are rendering currently, so you need to add an index to each of the <code>{{#each}}</code> runs. This is why I suggest a new global helper <code>withIndex</code>:</p>\n\n<pre><code>Template.registerHelper('withIndex', function (list) {\nvar withIndex = _.map(list, function (v, i) {\n    v.index = i;\n    return v;\n});\nreturn withIndex;\n});\n</code></pre>\n\n<p>You can use the new <code>index</code> just like any other field from the array. You will need it to determine which number was clicked and where to increase the counter. I've used the <code>td</code>'s <code>id</code> value to store the index of which cell was clicked.</p>\n\n<pre><code><template name=\"zelle\">                      \n  <td class=\"box\" id=\"zelle-{{index}}\">                          \n    <p class=\"textinbox\">{{name}} with a count of {{count}}</p>  \n  </td>                                     \n</template>  \n\nTemplate.fields.helpers({\n    fields: function () {\n        return Session.get(\"fields\");\n    }\n});\n</code></pre>\n",
              "is_accepted" : true,
              "score" : 0
            }
          ],
        "body" : "<p>So, im really new to both JavaScript and Meteor, so I only know a handful of things.</p>\n\n<p>Learning both, JavaScript and Meteor I set myself the challenge to make a 3 by 3 field of  with individual counters in them, that count, if you click the cell.</p>\n\n<p>I reached my first goal: <a href=\"http://9fields.meteor.com/\" rel=\"nofollow\">http://9fields.meteor.com/</a></p>\n\n<p>The second goal I set for myself was to try to make it easily expandable. Say, i want to make the same field but 7x7.</p>\n\n<p>Every cell has its own template.</p>\n\n<pre><code><template name=\"zelle1\">                      \n  <td class=\"box\">                          \n    <p class=\"textinbox\">{{counter}}</p>  \n  </td>                                     \n</template>                                   \n</code></pre>\n\n<p>Every cell has its own counter and every cell has one event handler and one helper to register a click</p>\n\n<pre><code>Template.zelle1.helpers({\ncounter: function () {\n  return Session.get(\"counter1\");\n}\n\n});\n\nTemplate.zelle1.events({\n\"click td\": function() {\n  return Session.set(\"counter1\", Session.get(\"counter1\")+1);\n}\n});\n</code></pre>\n\n<p>I then pasted the code 8 more times and replaced the numbers.</p>\n\n<p>The only thing that i feel reaches my criteria for the second goal is the way i create the table.</p>\n\n<pre><code><table>                                         \n    {{#each zellen}}                            \n        {{#if this.newrow}}                     \n            <tr></tr>                           \n            {{> UI.dynamic template=this.name}} \n        {{else}}                                \n            {{> UI.dynamic template=this.name}} \n        {{/if}}                                 \n    {{/each}}                                   \n</table>                                        \n</code></pre>\n\n<p>in combination with this Array (array is the right word?)</p>\n\n<pre><code>Template.body.zellen = [\n{name: \"zelle1\", newrow: false},\n{name: \"zelle2\", newrow: false},\n{name: \"zelle3\", newrow: false},\n{name: \"zelle4\", newrow: true},\n{name: \"zelle5\", newrow: false},\n{name: \"zelle6\", newrow: false},\n{name: \"zelle7\", newrow: true},\n{name: \"zelle8\", newrow: false},\n{name: \"zelle9\", newrow: false},\n];\n</code></pre>\n\n<p>My question: Do i have to make 9 Templates and 9 helpers and 9 events for those 9 fields? Meaning that if i want to make a 7x7 field i need to paste the code 49 times? Or is there a more efficient way to do this?</p>\n\n<p>Already Thank you for reading through this!</p>\n",
        "creation_date" : 1416401375,
        "last_activity_date" : 1422236189,
        "question_id" : 27017270,
        "score" : 1,
        "tags" : [ "javascript",
            "meteor",
            "expandable"
          ],
        "title" : "Meteor Dynamically Create Objects and refer to them? // Is there a simple way to do this"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p><code>null</code> and <code>undefined</code> don't enter into this anywhere.</p>\n\n<p>All this does is set <code>x</code> to the value <code>{}</code> if <code>x</code> is a \"falsy\" value. <code>{}</code> is an empty object literal.</p>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<p>You probably know <code>||</code> and <code>&&</code> as OR and AND in conditions. They work by \"short circuit evaluation\", meaning <code>||</code> will stop evaluating and return the last expression as soon as any of the expressions (starting from the very left) evaluates to <code>true</code>. (In other words: Since only one expression is required to be true for the whole compound to evaluate to true, we may stop as soon as any of them is true.) On the other hand <code>&&</code> stops evaluating as soon as any of the expression is evaluating to <code>false</code> (so the whole compound can't be true as soon as any of its parts is false). In other words, <code>&&</code> will continue evaluating the terms as long as they are <code>true</code> and <code>||</code> as long as the terms are <code>false</code>.</p>\n\n<p>Now, we may not only use these operators in conditions, but anywhere in the code. For example <code>a && b();</code> is equivalent to the if-clause <code>if (a) b();</code>. Similarly, <code>||</code> may be used for \"is not\": <code>a || b();</code> is equivalent to <code>if (!a) b();</code>.</p>\n\n<p>Since <code>||</code> returns the value of the first term from the left that evaluates to <code>true</code>, we may use this on the righthand-side in order to assign a default value (in case that the previous term(s) would evaluate to <code>false</code>):</p>\n\n<pre><code>a = b || c;\n</code></pre>\n\n<p>is equivalent to</p>\n\n<pre><code>if (b) {\n    a = b;\n}\nelse {\n    a = c;\n}\n</code></pre>\n\n<p>We may do this with any number of terms:</p>\n\n<pre><code>var api = window.webAPI || window.webkitWebAPI || window.mozWebAPI;\n</code></pre>\n\n<p>(This would evaluate to the hypothetical \"window.webAPI\", or, if undefined, look for the \"webkitWebAPI\" and then for the \"mozWebAPI\".)</p>\n\n<p>In the case of <code>var x = x || {};</code> the construct just makes sure that <code>x</code> is something (apparently something object-like), and if not, makes it an empty object (<code>{}</code>).\nIt is equivalent to the if-clause</p>\n\n<pre><code>var x;\nif (!x) x = {};\n</code></pre>\n\n<p>So, why would we use this? Obviously, when first encountered, it initializes variable <code>x</code> to an empty object. But it does this conditionally: If <code>x</code> would have been set before, it preserves the value of <code>x</code>. Also, since we declare <code>x</code> as a variable in the same clause, we make sure that we do not hit an undeclared identifier (saving an extra declaration on another line).</p>\n",
              "is_accepted" : true,
              "score" : 0
            }
          ],
        "body" : "<p>I don't get operation process of the below statement.</p>\n\n<pre><code> var x = x || {}; \n</code></pre>\n\n<p>I think that what it does is </p>\n\n<p>IF x exists, assign it to var x, if not assign null. \"undefined || null?\"</p>\n\n<p>why do we need the later \" || null \" part?</p>\n\n<p>A link to lessons or little help would be grrreat! </p>\n",
        "creation_date" : 1416971123,
        "last_activity_date" : 1422236171,
        "question_id" : 27140625,
        "score" : 0,
        "tags" : [ "javascript" ],
        "title" : "How to infer "config.headers = config.headers || {};""
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p>It's obvious that if not ES6, it would be implemented in ES5, or the current iteration of jaavacript. Also instead of waiting for it, you could write your own</p>\n\n<pre><code>String.prototype.endsWith = String.prototype.endsWith || function(str){\n   return new RegExp(str + \"$\").test(str);\n}\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 4
            },
            { "body" : "<p><a href=\"http://kangax.github.io/compat-table/es6/\" rel=\"nofollow\">http://kangax.github.io/compat-table/es6/</a> here you can find the compatibility chart for <code>ecma-script-6</code>.</p>\n\n<p>and read this answer <a href=\"http://stackoverflow.com/a/13352093/3556874\">http://stackoverflow.com/a/13352093/3556874</a>.\nYou can activate the node harmony flag node this way <code>--harmony app.js</code>, to make node compatible with strings <code>endsWith</code></p>\n",
              "is_accepted" : true,
              "score" : 2
            }
          ],
        "body" : "<p>When i tried to check for a string pattern using endsWith in node server versioned v0.10.25, it threw an error,</p>\n\n<pre><code>Object ''''''' has no method 'endsWith'\n</code></pre>\n\n<p>Then i found out from this link, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith</a>, that String.prototype.endsWith will come only from ECMA6.\nSo, what ecma version node v0.10.25 has implemented? which future release of nodejs, i can expect to be ECMA6 compliant?</p>\n",
        "creation_date" : 1419239131,
        "last_activity_date" : 1422235176,
        "question_id" : 27599537,
        "score" : 1,
        "tags" : [ "javascript",
            "node.js"
          ],
        "title" : "String prototype in node v0.10.25 does not have 'endsWith'"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p><strong>Update</strong>: See the answer to <a href=\"http://stackoverflow.com/questions/19792552/d3-put-arc-labels-in-a-pie-chart-if-there-is-enough-space/19801529#19801529\">D3 put arc labels in a Pie Chart if there is enough space</a> for a more comprehensive solution.</p>\n\n<hr>\n\n<p>I do not know any generic method of laying text elements such that they do not overlap. </p>\n\n<p>However, there is a workaround for your problem by rotating the labels and scaling the graph such that they do not overlap: <a href=\"http://jsfiddle.net/2uT7F/\" rel=\"nofollow\">http://jsfiddle.net/2uT7F/</a></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// Get the angle on the arc and then rotate by -90 degrees\nvar getAngle = function (d) {\n    return (180 / Math.PI * (d.startAngle + d.endAngle) / 2 - 90);\n};\n\ng.append(\"text\")\n    .attr(\"transform\", function(d) { \n            return \"translate(\" + pos.centroid(d) + \") \" +\n                    \"rotate(\" + getAngle(d) + \")\"; }) \n    .attr(\"dy\", 5) \n    .style(\"text-anchor\", \"start\")\n    .text(function(d) { return d.data.label; });\n</code></pre>\n",
              "is_accepted" : true,
              "score" : 7
            },
            { "body" : "<p>One more solution would be to change the order of the data with the USA being first. You might find the angle of the pie layout to be more readable.</p>\n\n<pre><code>var data_values = [48, 1, 1, 1, 1, 1, 1, 4];\nvar titles = [\"USA\",\"Pakistan\", \"Israel\", \"Netherlands\", \"Italy\", \"Uruguay\",       \"United Kingdom\", \"Austria\", \"China\"]\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/rocky1616/oLzsrd4o/\" rel=\"nofollow\">http://jsfiddle.net/rocky1616/oLzsrd4o/</a></p>\n\n<p>Musically_ut's solution would work nicely here as well. You can even take the angle down a bit if that worked in your design.</p>\n\n<pre><code>  var getAngle = function (d) {\n      return (180 / Math.PI * (d.startAngle + d.endAngle) / 2 + 45);\n  };\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/2uT7F/26/\" rel=\"nofollow\">http://jsfiddle.net/2uT7F/26/</a></p>\n\n<p>You would need to create a if else block to take care of the USA item but this is a start if it helps. </p>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>I've been googling around, but I can't seem to grasp this.</p>\n\n<p>My situation is that the countries overlap when presented on the pie chart: </p>\n\n<p>This is an example of what is happening:</p>\n\n<p><a href=\"http://jsfiddle.net/tqnqz/3/\" rel=\"nofollow\">jsfiddle</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/eWONw.png\" alt=\"enter image description here\"></p>\n\n<p>I am a total beginner to <code>D3</code> and am trying to prevent text overlap. Is there like a text margin attribute that I can add such that my labels don't overlap each other?</p>\n",
        "creation_date" : 1359176315,
        "last_activity_date" : 1422234686,
        "question_id" : 14534024,
        "score" : 5,
        "tags" : [ "javascript",
            "d3.js",
            "label",
            "pie-chart",
            "overlap"
          ],
        "title" : "Preventing overlap of text in D3 pie chart"
      },
      { "answer_count" : 17,
        "answers" : [ { "body" : "<p>The <a href=\"http://en.wikipedia.org/wiki/V8_%28JavaScript_engine%29\">V8</a> debugger released as part of the Google <a href=\"http://code.google.com/p/chromedevtools/\">Chrome Developer Tools</a> can be used to debug Node.js scripts. A detailed explanation of how this works can be found in the <a href=\"https://github.com/joyent/node/wiki/Using-Eclipse-as-Node-Applications-Debugger\">Node.js GitHub wiki</a>.</p>\n\n<p><strike>There is also <a href=\"http://github.com/smtlaissezfaire/ndb\">ndb</a>, a command line debugger written in Node.js itself.</strike></p>\n",
              "is_accepted" : true,
              "score" : 129
            },
            { "body" : "<p><a href=\"http://github.com/dannycoates/node-inspector\">node-inspector</a> could save the day! Use it from any browser supporting websockets. Breakpoints, profiler, livecoding etc... It is really awesome.</p>\n\n<p>Install it with</p>\n\n<pre><code>npm install -g node-inspector\n</code></pre>\n\n<p>then run</p>\n\n<pre><code>node-debug app.js\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 574
            },
            { "body" : "<p>Node.js version 0.3.4+ has built-in debugging support.</p>\n\n<p><code>node debug script.js</code></p>\n\n<p>Manual: <a href=\"http://nodejs.org/api/debugger.html\">http://nodejs.org/api/debugger.html</a></p>\n",
              "is_accepted" : false,
              "score" : 41
            },
            { "body" : "<p>There is built-in command line <a href=\"http://vimeo.com/19465332\" rel=\"nofollow\">debugger client</a> within Node.js. Cloud 9 IDE have also pretty nice (visual) <a href=\"http://vimeo.com/16472530\" rel=\"nofollow\">debugger</a>.</p>\n",
              "is_accepted" : false,
              "score" : 4
            },
            { "body" : "<p>If you need a powerful logging library for Node.js, <a href=\"https://github.com/baryon/tracer\" rel=\"nofollow\">Tracer https://github.com/baryon/tracer</a> is a better choice.</p>\n\n<p>It outputs log messages with a timestamp, file name, method name, line number, path or call stack, support color console, and support database, file, stream transport easily. I am the author.</p>\n",
              "is_accepted" : false,
              "score" : 3
            },
            { "body" : "<p>I personally use <a href=\"http://www.jetbrains.com/webstorm/\" rel=\"nofollow\">JetBrains WebStorm</a> as it's the only JavaScript IDE that I've found which is great for both frontend and backend JavaScript.</p>\n\n<p>It works on multiple OS's and has Node.js debugging built-in (as well as a ton of other stuff](<a href=\"http://www.jetbrains.com/webstorm/features/index.html\" rel=\"nofollow\">http://www.jetbrains.com/webstorm/features/index.html</a>).</p>\n\n<p>My only 'issues'/wishlist items <del>are</del> <strong>were</strong>:</p>\n\n<ol>\n<li><del>It seems to be more resource hungry on Mac than Windows</del> It no longer seems an issue in version 6.</li>\n<li><del>It would be nice if it had Snippet support (like those of <a href=\"http://vimeo.com/41216114\" rel=\"nofollow\">Sublime Text 2</a> - i.e. type 'fun' and tap 'tab' to put in a function.</del> See @WickyNilliams comment below - With Live Templates you also have snippet support.</li>\n</ol>\n",
              "is_accepted" : false,
              "score" : 27
            },
            { "body" : "<p>Assuming you have node-inspector installed on your computer (if not, just type 'npm install -g node-inspector') you just have to run:</p>\n\n<pre><code>node-inspector & node --debug-brk scriptFileName.js\n</code></pre>\n\n<p>And paste the URI from the command line into a WebKit (Chrome / Safari) browser.</p>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>There are a few tools and ways out there:</p>\n\n<h3><a href=\"http://www.joyent.com/developers/node/debug\">Joyent's Guide</a></h3>\n\n<ul>\n<li>Joyent now maintains their <a href=\"http://www.joyent.com/developers/node/debug\">own debugging guide</a>. It's worth a look.</li>\n</ul>\n\n<h3>Interactive Stack Traces with <a href=\"https://github.com/traceglMPL/tracegl\">traceGL</a></h3>\n\n<ul>\n<li><a href=\"https://github.com/traceglMPL/tracegl\">Guide here</a></li>\n</ul>\n\n<h3>Profiling with <a href=\"https://github.com/bnoordhuis/node-profiler\">Profiler</a></h3>\n\n<ol>\n<li>Install globally <code>npm install -g profiler</code></li>\n<li>Start your process with <code>node --prof</code> this will create a <code>v8.log</code> file</li>\n<li>Build <code>nprof</code> by running <code>~/.nvm/v0.8.22/lib/node_modules/profiler/tools/build-nprof</code></li>\n<li>Run <code>~/.nvm/v0.8.22/lib/node_modules/profiler/nprof</code> this will read the v8.log profile and give you nice ouput.</li>\n</ol>\n\n<h3>CPU and Memory Profiling with <a href=\"https://nodetime.com/\">NodeTime</a></h3>\n\n<ol>\n<li>Install to your application, <code>npm install nodetime</code></li>\n<li>Include in your application, <code>require('nodetime').profile()</code></li>\n<li>Follow the instructions it will output to console</li>\n</ol>\n\n<p>Alternatively, you may want to use <a href=\"https://github.com/baryshev/look\">look</a>, which is based on <code>nodetime</code>, but it doesn't send data to nodetime.com.</p>\n\n<h3>Blink (formerly WebKit) Developer Tools Debugging with <a href=\"https://github.com/node-inspector/node-inspector\">Node Inspector</a></h3>\n\n<ol>\n<li>Install it globally: <code>npm install -g node-inspector</code></li>\n<li>Run your application in debug mode: <code>node-debug your/node/program.js</code> (or attach to a running process: <code>kill -s USR1 <your node process id></code>)</li>\n<li>In another terminal window run node-inspector: <code>node-inspector</code></li>\n<li>Open <code>http://127.0.0.1:8080/debug?port=5858</code> (or debug remotely by replacing 127.0.0.1 with your host; make sure port 8080 is open).</li>\n</ol>\n\n<h3>Webkit Developer Tools Profiling with <a href=\"https://github.com/c4milo/node-webkit-agent\">Node Webkit Agent</a></h3>\n\n<ol>\n<li>Install to your application, <code>npm install webkit-devtools-agent</code></li>\n<li>Include in your application, <code>agent = require('webkit-devtools-agent')</code></li>\n<li>Activate the agent: <code>kill -SIGUSR2 <your node process id></code></li>\n<li>Access the agent via the <a href=\"https://github.com/c4milo/node-webkit-agent\">appropriate link</a></li>\n</ol>\n\n<h3>Interactive Cloud9 Debugging</h3>\n\n<ul>\n<li><a href=\"https://docs.c9.io/running_and_debugging_code.html\">Guide here</a></li>\n</ul>\n\n<h3>Heapdumps to WebKit Developer Tools</h3>\n\n<ul>\n<li><a href=\"https://github.com/bnoordhuis/node-heapdump\">Tool and guide here</a></li>\n</ul>\n\n<h3>Logging Libraries that output Debugging Information</h3>\n\n<ul>\n<li><a href=\"https://github.com/bevry/caterpillar\">Caterpillar</a></li>\n<li><a href=\"https://github.com/baryon/tracer\">Tracer</a></li>\n</ul>\n\n<h3>Libraries that enhance stack trace information</h3>\n\n<ul>\n<li><a href=\"https://github.com/mattinsler/longjohn\">Longjohn</a></li>\n</ul>\n\n<h3>Flamegraphs with <a href=\"http://dtrace.org/\">Dtrace</a> and <a href=\"https://github.com/davepacheco/node-stackvis\">StackVis</a></h3>\n\n<ul>\n<li><a href=\"http://blog.nodejs.org/2012/04/25/profiling-node-js/\">Only supported on SmartOS</a></li>\n</ul>\n\n<h3>Flamegraphs with Chrome Developer Tools</h3>\n\n<ul>\n<li><a href=\"https://gist.github.com/balupton/3944017/#comment-829204\">Coming soon</a></li>\n</ul>\n\n<h3>Benchmark</h3>\n\n<ul>\n<li>With <a href=\"http://httpd.apache.org/docs/2.2/programs/ab.html\">Apache Bench</a>: <code>ab -n 100000 -c 1 http://127.0.0.1:9778/</code></li>\n<li>With <a href=\"https://github.com/wg/wrk\">wrk</a></li>\n</ul>\n",
              "is_accepted" : false,
              "score" : 293
            },
            { "body" : "<p><a href=\"https://github.com/adobe-research/theseus\">Theseus</a> is a project by Adobe research which lets you debug your Node.js code in their Open Source editor <a href=\"https://github.com/adobe/brackets\">Brackets</a>. It has some interesting features like real-time code coverage, retroactive inspection, asynchronous call tree.</p>\n\n<p><img src=\"http://i.stack.imgur.com/ZXwGD.png\" alt=\"screenshot\"></p>\n",
              "is_accepted" : false,
              "score" : 22
            },
            { "body" : "<p>I put together a short <a href=\"http://www.habdas.org/node-js-debugging-primer/\" rel=\"nofollow\">Node.js debugging primer</a> on using the <a href=\"https://github.com/node-inspector/node-inspector\" rel=\"nofollow\">node-inspector</a> for those who aren't sure where to get started.</p>\n",
              "is_accepted" : false,
              "score" : 4
            },
            { "body" : "<p>There is new open-source Nodeclipse project <a href=\"http://www.nodeclipse.org/\" rel=\"nofollow\">http://www.nodeclipse.org/</a> ( as Eclipse plugin or Enide Studio <a href=\"http://sourceforge.net/projects/nodeclipse/files/\" rel=\"nofollow\">http://sourceforge.net/projects/nodeclipse/files/</a>)</p>\n\n<p><img src=\"http://www.nodeclipse.org/img/Nodeclipse-1-debugging.png\" alt=\"\"></p>\n\n<p>Nodeclipse became #1 in <a href=\"http://www.eclipse.org/community/eclipse_newsletter/2013/december/article2.php\" rel=\"nofollow\">Eclipse Top 10 NEW Plugins for 2013</a></p>\n\n<p>It uses modified V8 debugger (from Google Chrome Developer Tools for Java).</p>\n\n<p>Nodeclipse is free open-source software released at the start of every month <a href=\"http://www.nodeclipse.org/history\" rel=\"nofollow\">http://www.nodeclipse.org/history</a>. </p>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<p>Just for completeness:</p>\n\n<p>PyCharm 3.0 + Node.js Plugin offers awesome dev+run+debug experience.</p>\n\n<p><a href=\"http://www.jetbrains.com/pycharm/webhelp/running-and-debugging-node-js.html#d91029e423\" rel=\"nofollow\">http://www.jetbrains.com/pycharm/webhelp/running-and-debugging-node-js.html#d91029e423</a></p>\n",
              "is_accepted" : false,
              "score" : 2
            },
            { "body" : "<p>I would use: <a href=\"https://github.com/spumko/good\" rel=\"nofollow\">GOOD</a> by Walmart labs it will do the job and its very flexible:</p>\n\n<pre><code>var hapi = require('hapi');\nvar good = require('good');\nvar server = hapi.createServer('localhost', 5000,{});\nserver.route({SOME ROUTE HERE});\nserver.start();\n\nvar options = {\nsubscribers: {\n    'console':               ['ops', 'request', 'log', 'error'],\n    'http://localhost/logs': ['log']\n    }\n};\nserver.pack.require('good', options, function (err) {\n\n    if (!err) {\n        console.log('Plugin loaded successfully');\n    }\n});\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<p><a href=\"https://nodejstools.codeplex.com/\">Node.js Tools for Visual Studio</a> 2012 or 2013 includes a debugger.  The overview <a href=\"http://www.hanselman.com/blog/IntroducingNodejsToolsForVisualStudio.aspx\">here</a> states \"Node.js Tools for Visual Studio includes complete support for debugging node apps.\". Being new to Node.js, but having a background in .NET, I've found this add in to be a great way to debug Node.js applications. </p>\n",
              "is_accepted" : false,
              "score" : 7
            },
            { "body" : "<pre><code>node-debug -p 8888 scriptFileName.js\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>Here in this blog I explain how to use the Node.js console built-in debugger in different scenarios: <a href=\"http://nicosommi.com/?p=284\" rel=\"nofollow\">http://nicosommi.com/?p=284</a> (English and Spanish).</p>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<p>I created a neat little tool called <a href=\"https://github.com/blainesch/pry.js\" rel=\"nofollow\">pry.js</a> that can help you out.</p>\n\n<p>Put a simple statement somewhere in your code, run your script normally and node will halt the current thread giving you access to all your variables and functions. View/edit/delete them at will!</p>\n\n<pre><code>pry = require('pryjs')\n\nclass FizzBuzz\n\n  run: ->\n    for i in [1..100]\n      output = ''\n      eval(pry.it) # magic\n      output += \"Fizz\" if i % 3 is 0\n      output += \"Buzz\" if i % 5 is 0\n      console.log output || i\n\n  bar: ->\n    10\n\nfizz = new FizzBuzz()\nfizz.run()\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>How do I debug a Node.js server application? Right now I'm mostly using <em>alert debugging</em> with print statements like this:</p>\n\n<pre><code>sys.puts(sys.inspect(someVariable));\n</code></pre>\n\n<p>There must be a better way to debug. I know that <a href=\"http://en.wikipedia.org/wiki/Google_Chrome\">Google Chrome</a> has a command-line debugger. Is this debugger available for Node.js as well?</p>\n",
        "creation_date" : 1260917407,
        "last_activity_date" : 1422233472,
        "question_id" : 1911015,
        "score" : 576,
        "tags" : [ "javascript",
            "node.js",
            "debugging",
            "google-chrome-devtools"
          ],
        "title" : "How to debug Node.js applications"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p>Bit hacky but I found it does the job - just pause the widget and wait for it to update to the new position - once it has do what you want with the new position, continue playing the track and clear the checking interval.</p>\n\n<pre><code>var oldpos = e.currentPosition;\nwidget.pause();\n\nvar waiter = setInterval(function(){\n    widget.getPosition(function(pos){\n        if (pos != oldpos){\n            // pos is the position that was skipped to.  \n            widget.play();\n            clearInterval(waiter);\n        }\n    });\n}, 100);\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>What's wrong with using the SEEK event listener?</p>\n\n<pre><code>widget.bind(SC.Widget.Events.SEEK, function(e) {\n  alert('New seek position: '+e.currentPosition);\n});\n</code></pre>\n\n<p>This works for me.</p>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>I am using the Soundcloud player widget and want to tap into the SEEK Event.  The problem I have is that the event parameter for e.currentPosition is display the previous current position - not the current position that I have seeked to.    </p>\n\n<pre><code> widget.bind(SC.Widget.Events.PLAY, function (e) {\n\n                      var test;\n                });\n</code></pre>\n\n<p>If you put a break point on the test for a song you can see what I mean.  Is it possible to get the location that has been seeked to rather than where it started?</p>\n",
        "creation_date" : 1396537535,
        "last_activity_date" : 1422232538,
        "question_id" : 22841644,
        "score" : 0,
        "tags" : [ "javascript",
            "soundcloud"
          ],
        "title" : "Soundcloud Widget & Events.SEEK"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>The most substantive difference between the <code>for</code> loop and the <code>forEach</code> method is that, with the former, you may <code>break</code> out of the loop. You can simulate <code>continue</code> by simply returning from the function passed to <code>forEach</code>, but there is no way to stop looping altogether.</p>\n\n<p>Aside from that, the two accomplish effectively the same functionality. Another minor difference involves the scope of the index (and all containing variables) in the for loop, due to variable hoisting.</p>\n\n<pre><code>// 'i' is scoped to the containing function\nfor (var i = 0; i < arr.length; i++) { ... }\n\n// 'i' is scoped to the internal function\narr.forEach(function (el, i) { ... });\n</code></pre>\n\n<p>However, I find that <code>forEach</code> is much more expressive—it represents your intent to iterate through each element of an array, and it provides you with a reference to the element, not just the index. Overall, it mostly comes down to personal taste, but if you can use <code>forEach</code>, I would recommend using it.</p>\n\n<hr>\n\n<p>There are a few more substantial differences between the two versions, specifically regarding performance. In fact, the simple for loop performs considerably better than the <code>forEach</code> method, as demonstrated by <a href=\"http://jsperf.com/for-vs-foreach/66\">this jsperf test</a>.</p>\n\n<p>Whether or not such performance is necessary for you is up to you to decide, and in most cases, I would favor expressiveness over speed. This speed difference is likely due to the minor semantic differences between the basic loop and the method when operating on sparse arrays, as noted in <a href=\"http://stackoverflow.com/a/18884620/465378\">this answer</a>.</p>\n\n<p>If you don't need the behavior of <code>forEach</code> and/or you need to break out of the loop early, you can use Lo-Dash's <a href=\"http://lodash.com/docs#forEach\"><code>_.each</code></a> as an alternative, which will also work cross-browser. If you're using jQuery, it also provides a similar <a href=\"http://api.jquery.com/jquery.each/\"><code>$.each</code></a>, just note the differences in arguments passed to the callback function in each variation.</p>\n\n<p>(As for the <code>forEach</code> polyfill, it should work in older browsers without problems, if you choose to go that route.)</p>\n",
              "is_accepted" : true,
              "score" : 11
            } ],
        "body" : "<p>I've seen plenty of questions that suggest using:</p>\n\n<pre><code>for (var i = 0; i < myArray.length; i++){ /* ... */ }\n</code></pre>\n\n<p>instead of:</p>\n\n<pre><code>for (var i in myArray){ /* ... */ }\n</code></pre>\n\n<p>for arrays, due to inconsistent iteration (<a href=\"http://stackoverflow.com/questions/242841/javascript-for-in-vs-for\">see here</a>).</p>\n\n<hr>\n\n<p>However, I can't seem to find anything that seems to prefer the object oriented loop:</p>\n\n<pre><code>myArray.forEach(function(item, index){ /* ... */ });\n</code></pre>\n\n<p>Which seems way more intuitive to me.</p>\n\n<p>For my current project, IE8 compatibilty is important, and I'm considering using <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Polyfill\">Mozilla's polyfill</a>, however I'm not 100% sure how this will work.</p>\n\n<ul>\n<li>Are there any differences between the standard for loop (the first example above) and the Array.prototype.forEach implementation by modern browsers?</li>\n<li>Are there any difference between modern browser implementations and Mozilla's implementation linked to above (with special regard to IE8)?</li>\n<li>Performance is not as much of an issue, just consistency with which properties are iterated over.</li>\n</ul>\n",
        "creation_date" : 1399911543,
        "last_activity_date" : 1422232168,
        "question_id" : 23614054,
        "score" : 5,
        "tags" : [ "javascript",
            "arrays",
            "for-loop",
            "internet-explorer-8",
            "iterator"
          ],
        "title" : "JavaScript - Nuances of myArray.forEach vs for loop"
      },
      { "answer_count" : 3,
        "answers" : [ { "body" : "<blockquote>\n  <p>I am wondering whether it is possible to implement SRP using javascript without the use of Java,</p>\n</blockquote>\n\n<p>If you are looking for a standardized method, the answer in NO.</p>\n\n<p>The <a href=\"http://www.w3.org/2012/webcrypto/\" rel=\"nofollow\">WebCrypto Working Group</a> is standardizing things now for some crypto operations. However, the WG has already stated they will not provide access to the underlying BigInt primitives needed for the modular operations, so you won't have the primitives you need in the first release. You may get it in a subsequent release. See <a href=\"http://lists.w3.org/Archives/Public/public-webcrypto-comments/2013Sep/0007.html\" rel=\"nofollow\">Question on BigInteger operations</a> from their mailing list.</p>\n\n<p>You might be able to find it in a Javascript library, but I would expect it to be painfully slow.</p>\n",
              "is_accepted" : true,
              "score" : 1
            },
            { "body" : "<p><a href=\"https://bitbucket.org/simon_massey/thinbus-srp-js\" rel=\"nofollow\">Thinbus</a> has a pure javascript client library which performs SRP to a java server. If you are not using java in your web it should be fairly straight forward to port the server logic to your web application as it is only using standard SHA256 hashing and BigInteger math which will be available in languages such as PHP.</p>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>I use an SRP client in KeeFox. It's a Firefox add-on so has fewer issues with backwards compatibility, cross-browser support, etc. I imagine a slightly modified version would work in most modern browsers though.</p>\n\n<p>It is slow but still fast enough for the occasional use it gets (maximum of once per Firefox session).</p>\n\n<p>I took inspiration from <a href=\"http://code.google.com/p/srp-js/\" rel=\"nofollow\">http://code.google.com/p/srp-js/</a></p>\n\n<p>You can see the end result at <a href=\"https://github.com/luckyrat/KeeFox/blob/master/Firefox%20addon/KeeFox/modules/SRP.js\" rel=\"nofollow\">https://github.com/luckyrat/KeeFox/blob/master/Firefox%20addon/KeeFox/modules/SRP.js</a></p>\n\n<p>For my purposes I have optimised away a round-trip but you'll have to assess your own use case to determine whether my specific implementation would be secure.</p>\n\n<p>I had trouble with the first couple of BigInteger libraries I tried (most seem to be faulty for the operations required by SRP) but settled on <a href=\"https://github.com/luckyrat/KeeFox/blob/master/Firefox%20addon/KeeFox/modules/biginteger.js\" rel=\"nofollow\">https://github.com/luckyrat/KeeFox/blob/master/Firefox%20addon/KeeFox/modules/biginteger.js</a></p>\n\n<p>I've just had a fresh look into native BigInteger support and it still doesn't look like there are any options.</p>\n\n<p>From a firefox addon perspective, I am wondering whether js-ctypes could give access to some Firefox internals that would allow me to speed things up a bit but I've seen my only previous use of ctypes break compatibility with 2 out the 10 Firefox versions that have been released since implementation so I'm wary of using them unless it becomes essential.</p>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>I am considering implementing the Secure Remote Password protocol to conduct a zero-knowledge password proof between the browser and my web application. The SRP website provides an example, but it requires java to perform calculations. I am wondering whether it is possible to implement SRP using javascript without the use of Java, as I do not want to require my users to have Java installed, particularly as my audience will be a security conscious one which would potentially consider the risk of having the java plugin enabled a greater risk to their security than a zero-knowledge password proof. </p>\n\n<p>Here is the link to their demo: <a href=\"http://srp.stanford.edu/demo/\" rel=\"nofollow\">http://srp.stanford.edu/demo/</a></p>\n",
        "creation_date" : 1395455762,
        "last_activity_date" : 1422231837,
        "question_id" : 22572745,
        "score" : 1,
        "tags" : [ "javascript",
            "html",
            "cryptography",
            "srp-protocol"
          ],
        "title" : "Browser-Based SRP without Java"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>I mentioned <a href=\"http://stackoverflow.com/questions/22841225/angularjs-ngmodel-formatters-and-parsers\">this question</a> above but the tl;dr is:</p>\n\n<ul>\n<li><strong>$Formatters</strong> change how your <strong>$modelValue</strong> will appear as a <strong>$viewValue</strong>.</li>\n<li><strong>$Parsers</strong> validate your <strong>$viewValue</strong> to be saved as an <strong>$modelValue</strong>.</li>\n</ul>\n\n<p>Moreover, <strong>$formatters</strong> are invoked whenever the <strong>$modelValue</strong> changes, to transform the <strong>$modelValue</strong> into the <strong>$viewValue</strong>.</p>\n\n<p>So, essentially <strong>$formatters</strong> <em>format</em> view-bound values, whereas <strong>$parsers</strong> <em>validate</em> data-bound values. Both <strong>$formatters</strong> and <strong>$parsers</strong> are properties with an array of functions that are applied in the order they are push()'d or unshift()'d onto the stack.</p>\n\n<p>Hopefully this helps you understand the <strong>$formatters</strong> and <strong>$parsers</strong>.</p>\n",
              "is_accepted" : false,
              "score" : 0
            } ],
        "body" : "<p>I really don't fully understand how these things work. The docs are clear enough to get the general idea, but I can't figure out how they are called. </p>\n\n<p>I have this issue where I have a Unix timestamp (in seconds) that needs to display as a readable date in the UI, but be saved to the server in it's original format. Previously I was using the jQuery UI datepicker, and made a custom directive with $formatters and $parsers that would take care of the transformations. Worked great. </p>\n\n<p>Then I decided to ditch the jQuery to lighten the payload of the app, and so have switched to using ngQuickDate ( <a href=\"https://github.com/adamalbrecht/ngQuickDate\" rel=\"nofollow\">https://github.com/adamalbrecht/ngQuickDate</a> ) which is great actually.</p>\n\n<p>BUT it has it's own pipeline of $formatters and $parsers, and relies on a js Date object residing in the model. :p</p>\n\n<p>I've been banging my head on this all day trying to figure out if my directive could play nice with this other one. It stands to reason that I should be able to put my directive there and have my parsing and formatting functions inject into the pipeline and work as expected, except that the date picker directive directly references $modelValue in several places and so actually bypasses the pipeline as far as I can tell. </p>\n\n<p>Is there a way to make reference the value as transformed by my formatter, rather than the direct modelValue? I tried viewValue but that didn't work. :p</p>\n\n<p>I don't really understand how the formatters and parsers get invoked I guess. That's my main question. </p>\n",
        "creation_date" : 1417706140,
        "last_activity_date" : 1422229277,
        "question_id" : 27297478,
        "score" : 0,
        "tags" : [ "javascript",
            "angularjs",
            "angularjs-directive"
          ],
        "title" : "Angular $formatters and $parsers voodoo joojoo"
      },
      { "answer_count" : 21,
        "answers" : [ { "body" : "<p>Use a sequential <code>for</code> loop:</p>\n\n<pre><code>var myStringArray = [\"Hello\",\"World\"];\nvar arrayLength = myStringArray.length;\nfor (var i = 0; i < arrayLength; i++) {\n    alert(myStringArray[i]);\n    //Do something\n}\n</code></pre>\n\n<p>@zipcodeman suggests the use of the <code>for...in</code> statement, but for iterating arrays <code>for-in</code> should be avoided, that statement is meant to <strong>enumerate</strong> object properties.</p>\n\n<p>It shouldn't be used for array-like objects because:</p>\n\n<ul>\n<li>The order of iteration is not guaranteed, the array indexes may not be visited in numeric order.</li>\n<li>Inherited properties are also enumerated.</li>\n</ul>\n\n<p>The second point is that it can give you a lot of problems, for example, if you extend the <code>Array.prototype</code> object to include a method there, that property will be also enumerated.</p>\n\n<p>For example:</p>\n\n<pre><code>Array.prototype.foo = \"foo!\";\nvar array = ['a', 'b', 'c'];\n\nfor (var i in array) {\n  alert(array[i]);\n}\n</code></pre>\n\n<p>The above code will alert, \"a\", \"b\", \"c\" and \"foo!\".</p>\n\n<p>That be particularly a problem if you use some library that relies heavily on native prototypes augmention (such as MooTools for example).</p>\n\n<p>The <code>for-in</code> statement as I said before is there to <em>enumerate</em> object properties, for example:</p>\n\n<pre><code>var obj = {\n  \"a\": 1,\n  \"b\": 2,\n  \"c\": 3\n};\n\nfor (var prop in obj) {\n  if (obj.hasOwnProperty(prop)) { \n  // or if (Object.prototype.hasOwnProperty.call(obj,prop)) for safety...\n    alert(\"prop: \" + prop + \" value: \" + obj[prop])\n  }\n}\n</code></pre>\n\n<p>In the above example the <code>hasOwnProperty</code> method allows you to enumerate only <em>own properties</em>, that's it, only the properties that the object physically has, no inherited properties.</p>\n\n<p>I would recommend you to read the following article:</p>\n\n<ul>\n<li><a href=\"http://web.archive.org/web/20101213150231/http://dhtmlkitchen.com/?category=/JavaScript/&date=2007/10/21/&entry=Iteration-Enumeration-Primitives-and-Objects\">Enumeration VS Iteration</a></li>\n</ul>\n",
              "is_accepted" : false,
              "score" : 1373
            },
            { "body" : "<p>You can use <code>map</code> (also known as <code>apply</code> in other languages like python, and probably haskell too)</p>\n\n<pre><code>[1,2,3,4].map( function(item) {\n     alert(item);\n})\n</code></pre>\n\n<p>The general syntax is:</p>\n\n<pre><code>array.map(func)\n</code></pre>\n\n<p><code>func</code> should take one parameter.</p>\n\n<p>The return value of <code>array.map</code> is another array, so you can use it like this:</p>\n\n<pre><code>var x = [1,2,3,4].map( function(item) { return item * 10; } );\n</code></pre>\n\n<p>And now x is <code>[10,20,30,40]</code></p>\n\n<h3>EDIT:</h3>\n\n<p>I must clarify: this concept is from the functional paradigm.</p>\n\n<p>You don't have to write the function inline; one might do so as a first sketch, but you could then extract it into its own function.</p>\n\n<pre><code>var item_processor = function(item) {\n      // do something complicated to an item \n}\n\nnew_list = my_list.map(item_processor);\n</code></pre>\n\n<p>which would be sort-of equivalent to:</p>\n\n<pre><code> for(item in my_list) { item_processor(item); }\n</code></pre>\n\n<p>except you don't get the <code>new_list</code>.</p>\n",
              "is_accepted" : false,
              "score" : 184
            },
            { "body" : "<p>Opera, Safari, Firefox and Chrome now all share a set of enhanced Array methods for optimizing many common loops.</p>\n\n<p>You may not need all of them, but they can be very useful, or would be if every browser supported them.</p>\n\n<p>The mozilla labs published the algorithms they and webkit both use, so that you can add them\nyourself.</p>\n\n<p><strong>filter</strong> returns an array of items that satisfy some condition or test.</p>\n\n<p><strong>every</strong> returns true if every array member passes the test.</p>\n\n<p><strong>some</strong> returns true if any pass the test.</p>\n\n<p><strong>forEach</strong> runs a function on each array member and doesn't return anything.</p>\n\n<p><strong>map</strong> is like forEach, but it returns an array of the results of the operation for each element.</p>\n\n<p>These methods all take a function for their first argument, and have an optional second argument, which is an object whose scope you want to impose on the array members as they loop through the function. </p>\n\n<p>Ignore it until you need it.</p>\n\n<p><strong>indexOf</strong> and <strong>lastIndexOf</strong> find the appropriate position of the first or last element that matches its argument exactly. </p>\n\n<pre><code>(function(){\n    var p, ap= Array.prototype, p2={\n        filter: function(fun, scope){\n            var L= this.length, A= [], i= 0, val;\n            if(typeof fun== 'function'){\n                while(i< L){\n                    if(i in this){\n                        val= this[i];\n                        if(fun.call(scope, val, i, this)){\n                            A[A.length]= val;\n                        }\n                    }\n                    ++i;\n                }\n            }\n            return A;\n        },\n        every: function(fun, scope){\n            var L= this.length, i= 0;\n            if(typeof fun== 'function'){\n                while(i<L){\n                    if(i in this && !fun.call(scope, this[i], i, this)) return false;\n                    ++i;\n                }\n                return true;\n            }\n            return null;\n        },\n        forEach: function(fun, scope){\n            var L= this.length, i= 0;\n            if(typeof fun== 'function'){\n                while(i< L){\n                    if(i in this){\n                        fun.call(scope, this[i], i, this);\n                    }\n                    ++i;\n                }\n            }\n            return this;\n        },\n        indexOf: function(what, i){\n            i= i || 0;\n            var L= this.length;\n            while(i< L){\n                if(this[i]=== what) return i;\n                ++i;\n            }\n            return -1;\n        },\n        lastIndexOf: function(what, i){\n            var L= this.length;\n            i= i || L-1;\n            if(isNaN(i) || i>= L) i= L-1;\n            else if(i< 0) i += L;\n            while(i> -1){\n                if(this[i]=== what) return i;\n                --i;\n            }\n            return -1;\n        },\n        map: function(fun, scope){\n            var L= this.length, A= Array(this.length), i= 0, val;\n            if(typeof fun== 'function'){\n                while(i< L){\n                    if(i in this){\n                        A[i]= fun.call(scope, this[i], i, this);\n                    }\n                    ++i;\n                }\n                return A;\n            }\n        },\n        some: function(fun, scope){\n            var i= 0, L= this.length;\n            if(typeof fun== 'function'){\n                while(i<L){\n                    if(i in this && fun.call(scope, this[i], i, this)) return true;\n                    ++i;\n                }\n                return false;\n            }\n        }\n    }\n    for(p in p2){\n        if(!ap[p]) ap[p]= p2[p];\n    }\n    return true;\n})();\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 41
            },
            { "body" : "<p>In JavaScript it's not advisable to loop through an Array with a for-in loop, but it's better using a for loop such as:</p>\n\n<pre><code>for(var i=0, len=myArray.length; i < len; i++){}\n</code></pre>\n\n<p>It's optimized as well (\"caching\" the array length). If you'd like to learn more, <a href=\"http://blog.sebarmeli.com/2010/12/06/best-way-to-loop-through-an-array-in-javascript/\">read my post on the subject</a>.</p>\n",
              "is_accepted" : false,
              "score" : 49
            },
            { "body" : "<p>There is a way to do it where you have very little implicit scope in your loop and do away with extra variables.</p>\n\n<pre><code>var i = 0,\n     item;\n\n// note this is weak to sparse arrays or falsey values\nfor ( ; item = myStringArray[i++] ; ){ \n    item; // This is the string at the index.\n}\n</code></pre>\n\n<p>Or if you really want to get the id and have a really classical <code>for</code> loop:</p>\n\n<pre><code>var i = 0,\n    len = myStringArray.length; // cache the length\n\nfor ( ; i < len ; i++ ){\n    myStringArray[i]; // Don't use this if you plan on changing the length of the array\n}\n</code></pre>\n\n<p>Modern browsers all support iterator methods <code>forEach</code>, <code>map</code>, <code>reduce</code>, <code>filter</code> and a host of other methods on the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray\" rel=\"nofollow\">Array prototype</a>. </p>\n",
              "is_accepted" : false,
              "score" : 16
            },
            { "body" : "<p>Use the while loop...</p>\n\n<pre><code>var i=0, item, items = ['one','two','three'];\nwhile(item = items[i++]){\n    console.log(item);\n}\n</code></pre>\n\n<p>logs: 'one','two','three'</p>\n\n<p>And for the reverse order, an even more efficient loop</p>\n\n<pre><code>var items = ['one','two','three'], i = items.length;\nwhile(i--){\n    console.log(items[i]);\n}\n</code></pre>\n\n<p>logs: 'three','two','one'</p>\n\n<p>Or the classical <code>for</code> loop</p>\n\n<pre><code>var items = ['one','two','three']\nfor(var i=0, l = items.length; i < l; i++){\n    console.log(items[i]);\n}\n</code></pre>\n\n<p>logs: 'one','two','three'</p>\n\n<p>Reference:\n<a href=\"http://www.sitepoint.com/google-closure-how-not-to-write-javascript/\">http://www.sitepoint.com/google-closure-how-not-to-write-javascript/</a></p>\n",
              "is_accepted" : false,
              "score" : 43
            },
            { "body" : "<p>There's a method to iterate over only own object properties, not including prototype's ones:</p>\n\n<pre><code>for (var i in array) if (array.hasOwnProperty(i)) {\n    // do something with array[i]\n}\n</code></pre>\n\n<p>but it still will iterate over custom-defined properties.</p>\n\n<p>In javascript any custom property could be assigned to any object including array.</p>\n\n<p>If one wants to iterate over sparsed array, <code>for (var i = 0; i < array.length; i++) if (i in array)</code> or <code>array.forEach</code> with <code>es5shim</code> should be used.</p>\n",
              "is_accepted" : false,
              "score" : 7
            },
            { "body" : "<p>To directly answer the question: no, you can't.  JavaScript does not have a concise syntax for iterating over Arrays.  At least, not universally.</p>\n\n<p>If you want code that is both efficient and universal (that is, it runs in all browsers and other js interpreters), you need to use an explicit counting loop.  The safest version, which handles sparse arrays properly, is this:</p>\n\n<pre><code>var myStringArray = [ \"Hello\", \"World\" ]\nvar len = myStringArray.length\nfor (var i=0; i<len; ++i) {\n  if (i in myStringArray) {\n    var s = myStringArray[i];\n    ... do something with s ...\n  }\n}\n</code></pre>\n\n<p>Assigning the length value to the local variable (as opposed to including the full <code>myStringArray.length</code> expression in the loop condition) can make a significant difference in performance; using Rhino on my machine, the speedup is 43%.</p>\n\n<p>If you're willing to restrict yourself to a subset of available JavaScript engines, then you can use the enhanced looping method <code>forEach</code>, which takes a function that is called once per item in the array, and automatically handles sparse arrays properly:</p>\n\n<pre><code>var myStringArray = [ \"Hello\", \"World\" ]\nmyStringArray.forEach( function(s) { \n     ... do something with s ...\n} )\n</code></pre>\n\n<p>The performance of <code>forEach</code> actually beats the explicit counting loop with a local length var by a factor of 2 in SpiderMonkey (again, on my machine).  It's slower in Rhino, but only barely, while still being faster than the counting loop without the cache var.</p>\n\n<p>The <code>for</code>...<code>in</code> syntax mentioned by others is for looping over an object's properties; since an Array in JavaScript is just an object with numeric property names (and a magical \"length\" property), you can theoretically loop over an Array with it.  But the problem is that it doesn't restrict itself to the numeric property values, and in JavaScript, even methods are actually just properties whose value is a closure.  Therefore, the <code>for</code>...<code>in</code> syntax should <em>not</em> be used for looping through Arrays.  (It's not so great for generic Objects being used as maps/hashes/dictionaries, either, to be honest.)</p>\n\n<p>In the ECMAScript 6 proposed specification, there's a new version of the <code>for</code> loop called <code>for</code>...<code>of</code>, which iterates over the values instead of the keys; that can also be used:</p>\n\n<pre><code>for (var s of myStringArray) {\n  ... do something with s ...\n}\n</code></pre>\n\n<p>But ES6 is not widely implemented yet.</p>\n",
              "is_accepted" : false,
              "score" : 111
            },
            { "body" : "<p>I would thoroughly recommend making use of the <a href=\"http://documentcloud.github.com/underscore\">underscore.js</a> library. It provides you with various functions that you can use to iterate over arrays/collections.</p>\n\n<p>For instance:</p>\n\n<pre><code>_.each([1, 2, 3], function(num){ alert(num); });\n=> alerts each number in turn...\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 19
            },
            { "body" : "<p>It's not 100% identical, but similar:</p>\n\n<pre><code>var myStringArray = ['Hello', 'World']; // array uses [] not {}\nfor (var i in myStringArray) {\n    console.log(i + ' -> ' + myStringArray[i]); // i is the index/key, not the item\n}\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>If you want a terse way to write a fast loop <em>and</em> you can iterate in reverse:</p>\n\n<pre><code>for (var i=myArray.length;i--;){\n  var item=myArray[i];\n}\n</code></pre>\n\n<p>This has the benefit of caching the length (similar to <code>for (var i=0,len=myArray.length;i<len;++i)</code> and unlike <code>for (var i=0;i<myArray.length;++i)</code>) while being fewer characters to type.</p>\n\n<p>There are even some times when you ought to iterate in reverse, such as when iterating over a <a href=\"https://developer.mozilla.org/En/DOM/NodeList#A_.22live.22_collection\">live NodeList</a> where you plan on removing items from the DOM during iteration.</p>\n",
              "is_accepted" : false,
              "score" : 8
            },
            { "body" : "<p>If you're using the jQuery library, consider using \n<a href=\"http://api.jquery.com/jQuery.each/\">http://api.jquery.com/jQuery.each/</a></p>\n\n<p>From the documentation:</p>\n\n<p>jQuery.each( collection, callback(indexInArray, valueOfElement) ) </p>\n\n<p>Returns: Object</p>\n\n<p>Description: A generic iterator function, which can be used to seamlessly iterate over both objects and arrays. Arrays and array-like objects with a length property (such as a function's arguments object) are iterated by numeric index, from 0 to length-1. Other objects are iterated via their named properties.</p>\n\n<p>The $.each() function is not the same as $(selector).each(), which is used to iterate, exclusively, over a jQuery object. The $.each() function can be used to iterate over any collection, whether it is a map (JavaScript object) or an array. In the case of an array, the callback is passed an array index and a corresponding array value each time. (The value can also be accessed through the this keyword, but Javascript will always wrap the this value as an Object even if it is a simple string or number value.) The method returns its first argument, the object that was iterated.</p>\n",
              "is_accepted" : false,
              "score" : 10
            },
            { "body" : "<p>I did not yet see this variation, which I personally like the best:</p>\n\n<p>Given an array:</p>\n\n<pre><code>var someArray = [\"some\", \"example\", \"array\"];\n</code></pre>\n\n<p>You can loop over it without ever accessing the length property:</p>\n\n<pre><code>for (var i=0, item; item=someArray[i]; i++) {\n  // item is \"some\", then \"example\", then \"array\"\n  // i is the index of item in the array\n  alert(\"someArray[\" + i + \"]: \" + item);\n}\n</code></pre>\n\n<p>See this JsFiddle demonstrating that: <a href=\"http://jsfiddle.net/prvzk/\">http://jsfiddle.net/prvzk/</a></p>\n\n<p>This only works for arrays that are <em>not</em> sparse. Meaning that there actually is a value at each index in the array. However, I found that in practice I hardly ever use sparse arrays in Javascript... In such cases it's usually a lot easier to use an object as a map/hashtable. If you do have a sparse array, and want to loop over 0 .. length-1, you need the for (var i=0; i<someArray.length; ++i) construct, but you still need an if inside the loop to check whether the element at the current index is actually defined.</p>\n\n<p>Also, as CMS mentions in a comment below, you can only use this on arrays that don't contain any falsish values. The array of strings from the example works, but if you have empty strings, or numbers that are 0 or NaN, etc. the loop will break off prematurely. Again in practice this is hardly ever a problem for me, but it is something to keep in mind, which makes this a loop to think about before you use it... That may disqualify it for some people :)</p>\n\n<p>What I like about this loop is:</p>\n\n<ul>\n<li>It's short to write </li>\n<li>No need to access (let alone cache) the length property </li>\n<li>The item to access is automatically defined within the loop\nbody under the name you pick.</li>\n<li>Combines very naturally with array.push and array.splice to use arrays like lists/stacks</li>\n</ul>\n\n<p>The reason this works is that the array specification mandates that when you read an item from an index >= the array's length, it will return undefined. When you write to such a location it will actually update the length.</p>\n\n<p>For me, this construct most closely emulates the Java 5 syntax that I love:</p>\n\n<pre><code>for (String item : someArray) {\n}\n</code></pre>\n\n<p>... with the added benefit of also knowing about the current index inside the loop</p>\n",
              "is_accepted" : false,
              "score" : 9
            },
            { "body" : "<pre><code>v = [4, 5, 6]\nfor (i = 0, j = x[i]; i < x.length; j = x[++i]){\n    console.log(i,j);\n}\n</code></pre>\n\n<p>A lot cleaner...</p>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<h1>for (var s of myStringArray) {</h1>\n\n<p>(Directly answering your question: now you can!)</p>\n\n<p>Most other answers are right, but you should also know that <strong><em>ECMA Script 6</em></strong> is bringing a new mechanism for doing iteration, the <strong><code>for..of</code></strong> loop. </p>\n\n<p>This new syntax is the most elegant way to iterate an array in javascript (as long you don't need the iteration index), but it is not yet widely supported by the browsers. </p>\n\n<p>It currently works with Firefox 13+, Chrome 37+ and it does not work with other browsers (see browser compatibility below).</p>\n\n<p><strong>Iterating an array</strong></p>\n\n<pre><code>for (letter of [\"a\", \"b\", \"c\"]) {\n   console.log(letter); \n}\n</code></pre>\n\n<p><strong>Iterating an array of objects</strong></p>\n\n<pre><code>var band = [\n  {firstName : 'John', lastName: 'Lennon'}, \n  {firstName : 'Paul', lastName: 'McCartney'}\n];\n\nfor(member of band){\n  console.log(member.firstName + ' ' + member.lastName); \n}\n</code></pre>\n\n<p><strong>You could also iterate custom types, by defining an <code>iterator()</code> method:</strong></p>\n\n<pre><code>// Warning: this mode of iteration is not yet fully defined in the specification and highly subject to changes\nMyCollection.prototype.iterator = function() {\n  return {\n     elements: this.elements,\n     index: 0,\n      next: function() {\n         if (this.index >= this.elements.length)\n            throw StopIteration;\n         return this.elements[this.index++]\n      }\n  }\n}\n</code></pre>\n\n<hr>\n\n<p><em>Compatibility table:</em>\n<a href=\"http://kangax.github.io/es5-compat-table/es6/\" rel=\"nofollow\">http://kangax.github.io/es5-compat-table/es6/#For..of loops</a></p>\n\n<p><em>Spec:</em> <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony:iterators\" rel=\"nofollow\">http://wiki.ecmascript.org/doku.php?id=harmony:iterators</a></p>\n\n<h1>}</h1>\n",
              "is_accepted" : false,
              "score" : 16
            },
            { "body" : "<p>The optimized approach is to cache the length of array and using single var pattern initializing all variables with single var keyword.</p>\n\n<pre><code>var i, max, myStringArray = [\"Hello\",\"World\"];\nfor (i = 0, max = myStringArray.length; i < max; i++) {\n    alert(myStringArray[i]);\n   //Do something\n}\n</code></pre>\n\n<p>If order of iteration does not matter than you should try reversed loop, it is fastest as it reduce overhead condition testing and decrement is in one statement:</p>\n\n<pre><code>var i,myStringArray = [\"item1\",\"item2\"];\nfor (i =  myStringArray.length; i--) {\n    alert(myStringArray[i]);\n}\n</code></pre>\n\n<p>or better and cleaner to use while loop:</p>\n\n<pre><code>var myStringArray = [\"item1\",\"item2\"],i = myStringArray.length;\nwhile(i--) {\n   // do something with fruits[i]\n}\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 4
            },
            { "body" : "<pre><code> var myStringArray = ['Hello','World'];\n for(var i=0; i<myStringArray.length; i++)\n console.log(myStringArray[i]);\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 1
            },
            { "body" : "<h2>The most elegant and fast way</h2>\n\n<pre><code>var arr = [1, 2, 3, 1023, 1024];\nfor (var value; value = arr.pop();) {\n    value + 1\n}\n</code></pre>\n\n<p><a href=\"http://jsperf.com/native-loop-performance/8\" rel=\"nofollow\">http://jsperf.com/native-loop-performance/8</a></p>\n\n<hr>\n\n<h2>Edited (because I was wrong)</h2>\n\n<hr>\n\n<p>Comparing methods for looping through an array of 100000 items and do a minimal operation with the new value each time.</p>\n\n<ul>\n<li><a href=\"http://jsperf.com/native-loop-performance/16\" rel=\"nofollow\">http://jsperf.com/native-loop-performance/16</a> !</li>\n</ul>\n\n<p><strong>Preparation:</strong></p>\n\n<pre><code><script src=\"//code.jquery.com/jquery-2.1.0.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.6.0/underscore-min.js\"></script>\n<script>\n    Benchmark.prototype.setup = function() {\n        // Fake function with minimal action on the value\n        var tmp = 0;\n        var process = function(value) {\n            tmp = value; // Hold a reference to the variable (prevent engine optimisation?)\n        };\n\n        // Declare the test Array\n        var arr = [];\n        for (var i = 0; i < 100000; i++)\n            arr[i] = i;\n    };\n</script>\n</code></pre>\n\n<p><strong>Tests:</strong></p>\n\n<pre><code><a href=\"http://jsperf.com/native-loop-performance/16\" \n   title=\"http://jsperf.com/native-loop-performance/16\"\n><img src=\"http://i.imgur.com/YTrO68E.png\" title=\"Hosted by imgur.com\" /></a>\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 7
            },
            { "body" : "<p>Well, how about this:</p>\n\n<pre><code>for (var key in myStringArray) {\n    console.log(myStringArray[key]);\n}\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 4
            },
            { "body" : "<p>There are various way to loop through array in javascript.<br>\n<strong>Generic loop:</strong></p>\n\n<pre><code>var i;\nfor (i = 0; i < substr.length; ++i) {\n    // do something with `substr[i]`\n}\n</code></pre>\n\n<p><strong>ES5's forEach:</strong></p>\n\n<pre><code>substr.forEach(function(item) {\n    // do something with `item`\n});\n</code></pre>\n\n<p><strong>jQuery.each:</strong></p>\n\n<pre><code>jQuery.each(substr, function(index, item) {\n    // do something with `item` (or `this` is also `item` if you like)\n});\n</code></pre>\n\n<p>Have a look <a href=\"http://stackoverflow.com/questions/3943494/how-to-loop-through-array-in-jquery\">this</a> for detail information or\nyou can also Check <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in\">MDN</a> for looping through array in javascript & using jquery check <a href=\"http://api.jquery.com/jquery.each/\">Jquery for each</a>.</p>\n",
              "is_accepted" : false,
              "score" : 6
            },
            { "body" : "<p>For example, I used in a Firefox console:</p>\n\n<pre><code>[].forEach.call(document.getElementsByTagName('pre'), function(e){ \n   console.log(e);\n})\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 2
            }
          ],
        "body" : "<p>In Java you can use a <code>for()</code> loop to go through objects in an array like so:</p>\n\n<pre><code>String[] myStringArray = {\"Hello\",\"World\"};\nfor(String s : myStringArray)\n{\n    //Do something\n}\n</code></pre>\n\n<p>Can you do the same in JavaScript?</p>\n",
        "creation_date" : 1276128267,
        "last_activity_date" : 1422228509,
        "question_id" : 3010840,
        "score" : 806,
        "tags" : [ "javascript",
            "arrays",
            "for-loop"
          ],
        "title" : "Loop through array in JavaScript"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>Did you try it this way? </p>\n\n<pre><code>var template = _.template($('#client-list-template').html());\n$('.output-div').html(template({\n     clients : response\n});\n</code></pre>\n\n<p>Also how are you getting the response variable? </p>\n",
              "is_accepted" : false,
              "score" : 0
            } ],
        "body" : "<p>I am trying to use underscore.js in a HTML file hosted with node-express server. This file is being used to render the dynamic data on client side. Below are the codes:</p>\n\n<p>in app.js:</p>\n\n<pre><code>var cons = require('consolidate');\napp.engine('html', cons.underscore);\napp.set('view engine', 'html');\napp.locals._ = require(\"underscore\");\n</code></pre>\n\n<p>in HTML: </p>\n\n<pre><code>var template = _.template($('#client-list-template').html(), {clients: response});\n</code></pre>\n\n<p>here \"response\" is a JSON </p>\n\n<p>in same HTML under template script</p>\n\n<pre class=\"lang-html prettyprint-override\"><code><script id =\"client-list-template\", type='text/template'>\n        <table class=\"table striped\">\n            <thead>\n                <tr>\n                    <th>ID</th><th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <% _.each(clients, function(client) { %>\n                    <tr>\n                        <td><%= client.clientID %></td>\n                        <td><a class=\"btn\">Edit</a></td>\n                    </tr>\n                <% }); %>\n            </tbody>\n        </table>\n    </script>\n</code></pre>\n\n<p>running this code throws and error:</p>\n\n<blockquote>\n  <p><code>ReferenceError: clients is not defined</code></p>\n</blockquote>\n\n<p>Can someone please help me understanding what is the error and how to resolve it. Same HTML when hosted in Apache server works fine.</p>\n",
        "creation_date" : 1419033065,
        "last_activity_date" : 1422228402,
        "question_id" : 27575521,
        "score" : 2,
        "tags" : [ "javascript",
            "node.js",
            "express",
            "underscore.js"
          ],
        "title" : "underscore.js with node-express"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>I highly recommend you use a free tool called Fiddler:</p>\n\n<p><a href=\"http://www.telerik.com/fiddler\" rel=\"nofollow\">http://www.telerik.com/fiddler</a></p>\n\n<p>You can write rules to modify requests and responses.  You can also add break points to modify them when you need.  I use this tool every day.</p>\n\n<p>Thanks to @EricLaw for pointing out the custom rule documentation:\n<a href=\"http://docs.telerik.com/fiddler/knowledgebase/fiddlerscript/modifyrequestorresponse\" rel=\"nofollow\">http://docs.telerik.com/fiddler/knowledgebase/fiddlerscript/modifyrequestorresponse</a></p>\n\n<p>And within the Fiddler UI there are tabs for \"AutoResponder\" and \"Inspector\" which you can use. </p>\n",
              "is_accepted" : true,
              "score" : 2
            } ],
        "body" : "<p>I want Edit HTTP requests on the fly\nI tried Firefox \"Tamper Data\" add-on and it is exactly what I want\nbut the only problem is that it doesn't let me to edit post parameter <strong>name</strong> which I need to do ...  </p>\n\n<p>How can I edit POST parameter names in Tamper Data? (And if that's not possible, can it be done without Tamper Data? (for example by editing page source or something else via Firefox developer tools)</p>\n",
        "creation_date" : 1411744030,
        "last_activity_date" : 1422227446,
        "question_id" : 26062706,
        "score" : 2,
        "tags" : [ "javascript",
            "http",
            "debugging",
            "firefox",
            "web"
          ],
        "title" : "Edit HTTP requests on the fly"
      },
      { "answer_count" : 4,
        "answers" : [ { "body" : "<p>JavaScript sometimes gets a bad rap as being sub-par to those such as C++, C#, and Java, when in fact it's a very powerful functional programming language that also has object oriented capabilities (although it's not really classified as object oriented)</p>\n\n<p>Perhaps many developers look down on it because so many of them are used to seeing poor programming practices and consequently, buggy behavior in JavaScript.  For some unknown reason, it seems more acceptable to be sloppy on the client side.  This is something I would like to change.</p>\n\n<p>I believe these SOLID principles are solid.  (No pun intended).  If you follow these conventions, you will be less likely to accumulate technical debt created by sloppy code, shortcuts, and no architecture.  Your code will be more maintainable, more reusable, more modular, less tightly coupled, and scalable and extensible.  You'll also be contributing to demonstrating the full power of JavaScript when your product is engineered instead of just recklessly slapped together.</p>\n\n<p>This document describes the fundamentals of SOLID.  The same rules apply whether you're referring to C++, Java, JavaScript, or any other object-oriented language.</p>\n\n<p><a href=\"http://www.codeproject.com/Articles/60845/The-S-O-L-I-D-Object-Oriented-Programming-OOP-Prin.aspx\">http://www.codeproject.com/Articles/60845/The-S-O-L-I-D-Object-Oriented-Programming-OOP-Prin.aspx</a></p>\n\n<p>Here is some more information on JavaScript concepts:  <a href=\"http://www.colourcoding.net/blog/Tags/SOLID%20Principles/default.aspx\">http://www.colourcoding.net/blog/Tags/SOLID%20Principles/default.aspx</a></p>\n",
              "is_accepted" : false,
              "score" : 7
            },
            { "body" : "<p>SOLID is meant for object-oriented programming. JavaScript is a prototype-based language but allows programming in an OOP-manner (if you really try hard to do so). Many people believe that you shouldn't try to force paradigms of languages you learned (like C++/C#/Java) onto others (JavaScript). Here's an article on <a href=\"http://msdn.microsoft.com/en-us/magazine/cc163419.aspx\" rel=\"nofollow\">OOP in JS</a> which also comes to that conclusion.</p>\n\n<p>There are some approaches to OOP in Prototype.js, <a href=\"http://jashkenas.github.com/coffee-script/#classes\" rel=\"nofollow\">CoffeeScript</a>, and <a href=\"http://ejohn.org/blog/simple-javascript-inheritance/\" rel=\"nofollow\">John Resigs Simple JavaScript Inheritance</a> (each with its own traps).</p>\n\n<p>But the terminology (interfaces, abstraction) of SOLID is difficult to apply to vanilla JavaScript in a proper manner. You will be able to apply \"S\", and maybe the \"L\" (which are good concepts). But going further would require constructs like interfaces (which are hard to find in dynamic languages anyway, contracts might work) and the ability to restrict inheritance/modification.</p>\n",
              "is_accepted" : true,
              "score" : 5
            },
            { "body" : "<p>It looks like Derek Greer is attempting to take a stab at this with his article series on SOLID JavaScript at Fresh Brewed Code:</p>\n\n<ol>\n<li><a href=\"http://aspiringcraftsman.com/2011/12/08/solid-javascript-single-responsibility-principle/\" rel=\"nofollow\">The Single Responsibility Principle</a></li>\n<li><a href=\"http://aspiringcraftsman.com/2011/12/19/solid-javascript-the-openclosed-principle/\" rel=\"nofollow\">The Open/Closed Principle</a></li>\n<li><a href=\"http://aspiringcraftsman.com/2011/12/31/solid-javascript-the-liskov-substitution-principle/\" rel=\"nofollow\">The Liskov Substitution Principle</a></li>\n<li><a href=\"http://aspiringcraftsman.com/2012/01/08/solid-javascript-the-interface-segregation-principle/\" rel=\"nofollow\">The Interface Segregation Principle</a></li>\n<li><a href=\"http://aspiringcraftsman.com/2012/01/22/solid-javascript-the-dependency-inversion-principle/\" rel=\"nofollow\">The Dependency Inversion Principle</a></li>\n</ol>\n",
              "is_accepted" : false,
              "score" : 12
            },
            { "body" : "<p>This presentation: <a href=\"http://youtu.be/TAVn7s-kO9o\" rel=\"nofollow\">SOLID JavaScript In A Wobbly (World Wide Web)</a> by Derick Bailey demonstrates how to use SOLID programming principles while developing javascript.</p>\n\n<p>He explicitly addresses the issue of interfaces in javascript several times. In javascript, interfaces are more of a convention, so it's up to you how to define them. You can write an empty object definition (think of it like an abstract class or an interface). Or you can rely on <em>documentation</em> for your protocols/contracts.</p>\n\n<p>At a more conceptual level, an object's method signatures implicitly define it's interface, so in javascript you can often get by with \"duck-typing\" and still adhere to SOLID. (!) Here's an example of the \"interface segregation principle\" from the presentation that demonstrates this:</p>\n\n<pre><code>// Copyright 2014 Muted Solutions, LLC, and freely distributable and re-usable under the MIT License\n\n// JavaScript has no interface construct ...\n// sooooooo..... use inheritance instead? o_O\n\n// Rectangle\n// ---------\n\nfunction Rectangle(){}\n\nRectangle.prototype.area = function(){\n  return this.height * this.width;\n};\n\nRectangle.prototype.setHeight = function(height){\n  this.height = height;\n};\n\nRectangle.prototype.setWidth = function(width){\n  this.width = width;\n};\n\n// Square\n// ------\n\nfunction Square(){}\n\nSquare.prototype.area = function(){\n  return this.size * this.size;\n};\n\nSquare.prototype.setSize = function(size){\n  this.height = size;\n  this.width = size;\n};\n</code></pre>\n\n<p>This code and all of the rest of the example code from the talk is posted on GitHub: <a href=\"https://github.com/derickbailey/solid-javascript\" rel=\"nofollow\">https://github.com/derickbailey/solid-javascript</a></p>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>Have any one used the SOLID programming principle (or any of it's parts) while developing JavaScript?</p>\n\n<p>I've just started up on reading on it but can't seem to find anyone that used it for JS. The only part I find easy to implement/use is the \"Single responsibility principle\".</p>\n\n<p>What I'm looking for is articles or example where these principles are used. And are there any argument's why one shouldn't use some parts?</p>\n\n<p>For example the \"Interface segregation principle\" says that \"the notion that many client specific interfaces are better than one general purpose interface.\"</p>\n\n<p>But from my knowledge there's no such thing as interfaces in JS (nice if it would be).</p>\n",
        "creation_date" : 1295258052,
        "last_activity_date" : 1422226831,
        "question_id" : 4711851,
        "score" : 10,
        "tags" : [ "javascript",
            "solid-principles"
          ],
        "title" : "Writing JavaScript according to SOLID"
      },
      { "answer_count" : 2,
        "answers" : [ { "body" : "<p>It's not support as something you can include in <code>mocha.opts</code>. You much add in to the command line when you call <code>mocha</code>. See <a href=\"https://github.com/mochajs/mocha/issues/1109\" rel=\"nofollow\">this</a>.</p>\n",
              "is_accepted" : false,
              "score" : -1
            },
            { "body" : "<p>The asker asks:</p>\n\n<blockquote>\n  <p>When I run <code>mocha --harmony</code>, my tests execute just fine. [...]</p>\n  \n  <p>Does the <code>mocha.opts</code> file ignore the <code>--harmony</code> argument for some reason?</p>\n</blockquote>\n\n<p>Yes, <code>mocha.opts</code> ignores the <code>--harmony</code> argument. The <code>--harmony</code> option is not a Mocha option but a Node.js option. This is an option that must be passed to Node.js <em>before</em> it starts executing. However, <code>mocha.opts</code> is read after Node.js has started and so even if Mocha was able to understand the option, it would not be able to do anything about it.</p>\n\n<p>But why does it work on the command line? Shouldn't it be the case that when I run <code>mocha --harmony</code>, Mocha has to first start before parsing the <code>--harmony</code> option? No, because <code>mocha</code> is script that starts the \"real\" Mocha. The shell script detects <code>--harmony</code> and makes sure it is passed to Node.js when it starts the \"real\" Mocha.</p>\n",
              "is_accepted" : true,
              "score" : 1
            }
          ],
        "body" : "<p>In my test directory, I have a file <code>mocha.opts</code> containing the following:</p>\n\n<pre><code>--harmony\n--recursive\n--growl\n--reporter spec\n--require should\n</code></pre>\n\n<p>When I run <code>mocha</code>, I get the following error:</p>\n\n<pre><code>/project/server/utilities/encryption.js:3\nconst\n^^^^^\nSyntaxError: Use of const in strict mode.\n</code></pre>\n\n<p>This is, of course, because my use of <code>const</code> requires ES6 Harmony.  When I run <code>mocha --harmony</code>, my tests execute just fine.  And the other entries in my <code>mocha.opts</code> file work as expected.</p>\n\n<p>Does the <code>mocha.opts</code> file ignore the <code>--harmony</code> argument for some reason?  Or am I doing it wrong?  The Mocha docs don't elaborate and I haven't been able to find the answer here or anywhere else.</p>\n",
        "creation_date" : 1409498399,
        "last_activity_date" : 1422226721,
        "question_id" : 25593369,
        "score" : 3,
        "tags" : [ "javascript",
            "unit-testing",
            "mocha",
            "ecmascript-harmony"
          ],
        "title" : "Does Mocha ignore --harmony option in mocha.opts?"
      },
      { "answer_count" : 4,
        "answers" : [ { "body" : "<p>Conceptually you are only allowed to send out strings from the server that are valid JavaScript literals by escaping appropriately.</p>\n\n<p>If you want to fix this issue on the client you need an extra workaround step (only seems to work in Firefox):</p>\n\n<pre><code>var a = escape(\"Each of the levels requires logic, skill, and brute force to crush the enemy.\");\nalert(unescape(a));\n</code></pre>\n\n<p><strong>But the discussion is obsolete, because you must escape on the server.</strong></p>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>The only reliable way to fix this is server-side. Make sure your JSON generator emits those characters escaped, e.g. as <code>\\u2028</code>.</p>\n\n<p>In my experience, it's easiest to simply encode your JSON in plain ASCII which will always work. The downside is that it's less efficient as non-ASCII characters will take up more space, so depending on the frequency of those, you may not want that trade-off...</p>\n\n<p>The documentation for Perl's JSON::XS has a good explanation of the problem and advice for how to fix it in Perl:\n<a href=\"http://search.cpan.org/perldoc?JSON::XS#JSON_and_ECMAscript\" rel=\"nofollow\">http://search.cpan.org/perldoc?JSON::XS#JSON_and_ECMAscript</a></p>\n",
              "is_accepted" : true,
              "score" : 4
            },
            { "body" : "<p>Avoid using <code>eval</code> to parse JSON.</p>\n\n<p>Use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\" rel=\"nofollow\"><code>JSON.parse</code></a> or <a href=\"https://github.com/douglascrockford/JSON-js\" rel=\"nofollow\">https://github.com/douglascrockford/JSON-js</a>.</p>\n\n<pre><code>JSON.parse('{}');  // where {} is your JSON String\n</code></pre>\n",
              "is_accepted" : false,
              "score" : -2
            },
            { "body" : "<p>if you're using JQuery in you app then this one is ok:</p>\n\n<pre><code>var object = $.parseJSON( json_string );\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>I have a Sencha Touch app. One of the stores I have uses an ajax proxy and a json reader. Some of the strings in the JSON returned from my sinatra app occasionally contain this character:\n<a href=\"http://www.fileformat.info/info/unicode/char/2028/index.htm\">http://www.fileformat.info/info/unicode/char/2028/index.htm</a></p>\n\n<p>Although it's invisible, the character occurs twice in the second string here, between the period and the ending quote:</p>\n\n<pre><code>\"description\": \"Each of the levels requires logic, skill, and brute force to crush the enemy.  \"\n</code></pre>\n\n<p>Try copy and pasting \"Each of the levels requires logic, skill, and brute force to crush the enemy.  \" into your javascript console! It won't be parsed as a string, and fails with <code>SyntaxError: Unexpected token ILLEGAL</code>.</p>\n\n<p>This causes the JSON response to fail. I've been stuck on this for a long time! Any suggestions?</p>\n",
        "creation_date" : 1333578916,
        "last_activity_date" : 1422226638,
        "question_id" : 10020226,
        "score" : 13,
        "tags" : [ "javascript",
            "json",
            "unicode",
            "utf-8"
          ],
        "title" : "Illegal characters in JSON response"
      },
      { "answer_count" : 3,
        "answers" : [ { "body" : "<p>\"Erm, I want the page to feel.. zoomed out as if it was a normal none-responsive html website if that makes sense? Sorry if that is rather vague – Josh Boothe 7 mins ago\"</p>\n\n<p>If you want that just remove the <code><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"></code> and dont use media queries.</p>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>@karthikr gave you the correct answer. </p>\n\n<pre><code>body { min-width: 1000px; }\n</code></pre>\n\n<p>In the sites that I build that are responsive, I always make sure to include the following rule for IE8:</p>\n\n<pre><code>.ie8 body { min-width: 990px; }\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 0
            },
            { "body" : "<p>You could try something like this, that might give the effect you are looking for.</p>\n\n<p><code><meta name=\"viewport\" content=\"width=600px\"></code></p>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>I have developed a website which is designed for desktops and laptops however, when viewed on a mobile phone it tries to scale it (as I have a few media queries for different monitor sizes).</p>\n\n<p>Is it possible to force a mobile phone to have the same width as a browser, or trick the css to think that?</p>\n",
        "creation_date" : 1368453081,
        "last_activity_date" : 1422226205,
        "question_id" : 16523779,
        "score" : 0,
        "tags" : [ "javascript",
            "html",
            "css"
          ],
        "title" : "Force mobile phone to have a 1000px width"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>Well, the short answer is that jQuery does not provide this functionality due to compatibility issues in legacy browsers. To resolve the issues, jQuery simply lowers the bar to the lowest common denominator.</p>\n\n<p>The slightly longer answer is it can be monkey patched into it, using the <code>beforeSend</code> and <code>xhr</code> methods, but this is not trivial, especially when you factor in legacy and cross-browser compatibility. To ease the pain, <a href=\"https://github.com/AlexanderOMara/jquery-ajaxreadystate\" rel=\"nofollow\">I've create a jQuery plugin</a> that does just that.</p>\n",
              "is_accepted" : true,
              "score" : 0
            } ],
        "body" : "<p>Using the native <code>XMLHttpRequest</code> object, it's possible to add an event listener to the <code>onreadystatechange</code> event, and be notified when the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#readyState\" rel=\"nofollow\"><code>readyState</code></a> is <code>2</code>, or <code>HEADERS_RECEIVED</code>.\nThis is useful, as this enables the reading of the HTTP response headers before a long transfer is completed.</p>\n\n<p>However in jQuery's AJAX wrapper, there doesn't seem to be any way to do this. The <a href=\"https://api.jquery.com/jquery.ajax/\" rel=\"nofollow\">jQuery.ajax API documentation</a> actually says the following.</p>\n\n<blockquote>\n  <p>No <code>onreadystatechange</code> mechanism is provided, however, since <code>done</code>, <code>fail</code>, <code>always</code>, and <code>statusCode</code> cover all conceivable requirements.</p>\n</blockquote>\n\n<p>Unless I'm mistaken, all of the listed callbacks are fired after the entire request is received, which may be a long time after the headers are available and <code>readyState</code> is <code>2</code>.</p>\n\n<p>Is there a way to add a callback to <code>onreadystatechange</code> and/or <code>readyState</code> <code>2</code> when using jQuery's AJAX wrapper, without polling the <code>readyState</code> property?</p>\n\n<p>I suppose it would be possible to poll the <code>readyState</code> property of the AJAX object using <code>setInterval</code>, but I do not consider this to be a real solution for obvious reasons. I also do not consider modifying jQuery's core to be a real solution either.</p>\n\n<p><strong>Update:</strong></p>\n\n<p>Another SO user directed me to <a href=\"https://stackoverflow.com/questions/3309185/jquery-ajax-overwrite-onreadystatechange-handler\">this question</a>. Unfortunately, none of those answers seem to work. Modifying jQuery is not a real solution. Using jQuery to create a XHR object kind-of defeats the purpose. And the last answer doesn't work at all. In fact, the whole question looks to be for an outdated jQuery.</p>\n",
        "creation_date" : 1419800178,
        "last_activity_date" : 1422225865,
        "question_id" : 27680515,
        "score" : 0,
        "tags" : [ "javascript",
            "jquery",
            "ajax",
            "xmlhttprequest",
            "readystate"
          ],
        "title" : "readyState event for HEADERS_RECEIVED using jQuery.ajax"
      },
      { "answer_count" : 5,
        "answers" : [ { "body" : "<p>You need to return the validating function. Something like:</p>\n\n<pre><code>onsubmit=\"return validateForm();\"\n</code></pre>\n\n<p>Then the validating function should return false on errors. If everything is OK return true. Remember that the server has to validate as well.</p>\n",
              "is_accepted" : false,
              "score" : 2
            },
            { "body" : "<p>You have several errors there.\nfirst you have to return value from the function in the html markup: <code><form name=\"ff1\" method=\"post\" onsubmit=\"return validateForm();\"></code> </p>\n\n<p>second in jsfiddle your place the code inside onLoad which then the form won't recognize - and last you have to return true from the function if all validation success - \nI fixed some issues in the update:</p>\n\n<p><a href=\"http://jsfiddle.net/CrLsR/8/\">http://jsfiddle.net/CrLsR/8/</a></p>\n\n<pre><code>function validateURL(url) {\n    var reurl = /^(http[s]?:\\/\\/){0,1}(www\\.){0,1}[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,5}[\\.]{0,1}/;\n    return reurl.test(url);\n}\n\nfunction validateForm()\n{\n    // Validate URL\n    var url = $(\"#frurl\").val();\n    if (validateURL(url)) { } else {\n        alert(\"Please enter a valid URL, remember including http://\");\n    }\n\n    // Validate Title\n    var title = $(\"#frtitle\").val();\n    if (title==\"\" || title==null) { } else {\n        alert(\"Please enter only alphanumeric values for your advertisement title\");\n    }\n\n    // Validate Email\n    var email = $(\"#fremail\").val();\n    if ((/(.+)@(.+){2,}\\.(.+){2,}/.test(email)) || email==\"\" || email==null) { } else {\n        alert(\"Please enter a valid email\");\n    }\n  return false;\n}\n</code></pre>\n",
              "is_accepted" : true,
              "score" : 10
            },
            { "body" : "<p>The simplest validation is as follows:</p>\n\n<pre><code><form name=\"ff1\" method=\"post\">\n <input type=\"email\" name=\"email\" id=\"fremail\" placeholder=\"your@email.com\" />\n <input type=\"text\" pattern=\"[a-z0-9. -]+\" title=\"Please enter only alphanumeric characters.\" name=\"title\" id=\"frtitle\" placeholder=\"Title\" />\n <input type=\"url\" name=\"url\" id=\"frurl\" placeholder=\"http://yourwebsite.com/\" />\n <input type=\"submit\" name=\"Submit\" value=\"Continue\" />         \n</form>\n</code></pre>\n\n<p>Javascript: none.</p>\n",
              "is_accepted" : false,
              "score" : 5
            },
            { "body" : "<pre><code><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<title>Exercise3</title>\n<meta name=\"description\" content=\"\" />\n<meta name=\"keywords\" content=\"\" />\n<meta http-equiv='Pragma' content='no-cache' />\n<meta http-equiv='content-Control' content='no-cache' />\n<meta http-equiv='Cache-Control' content='no-cache' />\n<meta http-equiv='Expires' content='0' />\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<meta http-equiv=\"content-language\" content=\"en\" />\n<meta name=\"revisit-after\" content=\"15 days\" />\n<meta name=\"distribution\" content=\"global\" />\n<meta name=\"rating\" content=\"general\" />\n<meta name=\"robots\" content=\"index, follow\" />\n<link rel=\"stylesheet\" href=\"css/cpc.css\" type=\"text/css\" />\n<link rel=\"stylesheet\" href=\"css/calendar.css\" type=\"text/css\" />\n<script  type='text/javascript' src=\"js/cpc.js\"></script>\n<script type=\"text/javascript\" src=\"js/calendar_newpopup.js\"></script>\n<script type=\"text/javascript\" src=\"js/calendar-en.js\"></script>\n<script type=\"text/javascript\" src=\"js/calendar-setup.js\"></script>\n<script type=\"text/javascript\" src=\"js/setup_calendar.js\"></script>\n<script type=\"text/javascript\" src=\"validate.js\"></script>\n\n</head>\n<!--[if IE 6]>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/ie6.css\" />\n<![endif]-->\n<!--[if IE 8]>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/ie8.css\" />\n<![endif]-->\n<!--[if IE 9]>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/ie9.css\" />\n<![endif]-->\n\n<body onload=\"resetform()\">\n<form name=\"myform\" action=\"main.html\" method=\"post\"> \n<div id=\"citi-containerc\"> \n\n  <div id=\"dvContainerc\">\n    <div id=\"dv_workarea\">\n      <div class=\"workarea_top\"></div>\n      <div class=\"workarea_bg\">\n        <div class=\"workarea_frame\">\n          <p class=\"formbanner\"><img src=\"images/header-form.jpg\" alt=\"\" title=\"\" /></p>\n          <p class=\"txt13\">Simply fill in this form for us to contact you for a private appointment. You may also refer your friends or loved ones to Citigold Private Client. Please note that Citibank reserves the right to inform your friends or your loved ones of your referrals.</p>\n\n\n\n          <div class=\"titlebox\">\n            <p class=\"title_brd_top\"></p>\n            <div class=\"title_brd_bg\">\n              <p class=\"formtitle\"><img src=\"images/fom-title.gif\" alt=\"\" title=\"\" /></p>\n            </div>\n            <p class=\"title_brd_btm\"></p>\n          </div>\n\n          <div class=\"formbox\">\n            <p class=\"form_brd_top\"></p>\n            <div class=\"form_brd_bg\">\n              <table width=\"670\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\" margin:2px 0 2px 25px\">\n                <tr>\n                  <td width=\"263\" class=\"sub_hd\">Salutation*</td>\n                  <td><table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"txt12_dark\">                         <tr>                                \n                  <td width=\"51\"><input type=\"radio\" name=\"salutation\" id=\"s1\" value=\"Dr\" onkeypress=\"return enter_check(event);\"/> Dr</td>                             \n                  <td width=\"51\"><input type=\"radio\" name=\"salutation\" id=\"s2\"value=\"Mr\" onkeypress=\"return enter_check(event);\"/> Mr</td>                              \n                  <td width=\"51\"><input type=\"radio\" name=\"salutation\" id=\"s3\" value=\"Mrs\" onkeypress=\"return enter_check(event);\"/> Mrs</td>                               \n                  <td width=\"51\"><input type=\"radio\" name=\"salutation\"id=\"s4\" value=\"Mdm\" onkeypress=\"return enter_check(event);\"/>Mdm</td> \n                  <td width=\"56\"><input type=\"radio\" name=\"salutation\" id=\"s5\"value=\"Ms\" onkeypress=\"return enter_check(event);\"/>Ms</td>\n                  <div class=\"error redClr\" id=\"title_error\" style=\"color:red;font-size:13px;float:right;\"></div>\n                  </tr></table></td>\n                    </div>\n                </tr>\n              </table>\n            </div>\n            <p class=\"form_brd_btm\"></p>\n          </div>\n\n          <div class=\"formbox\">\n            <p class=\"form_brd_top\"></p>\n            <div class=\"form_brd_bg\">\n              <table width=\"670\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\" margin:2px 0 2px 25px\">\n                <tr>\n                  <td width=\"263\" class=\"sub_hd\">Name*</td>\n                  <td><div class=\"input_name\">\n        <input type=\"text\" class=\"input_namebox\" maxlength=\"50\" name=\"username\" id=\"name\" onfocus=\"slatution(1)\" onkeypress=\"return enter_check(event);\"/>\n      </div>\n      <div class=\"error redClr\" id=\"name_error\" style=\"color:red;font-size:13px;float:left;\"></div></td>\n                </tr>\n              </table>\n            </div>\n            <p class=\"form_brd_btm\"></p>\n          </div>\n\n          <div class=\"formbox\">\n            <p class=\"form_brd_top\"></p>\n            <div class=\"form_brd_bg\">\n            <table width=\"670\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\" margin:2px 0 2px 25px\">\n                <tr>\n                  <td width=\"263\" class=\"sub_hd\">NRIC*</td>\n                  <td><div class=\"input_name\">\n        <input type=\"text\" class=\"input_namebox\" maxlength=\"20\" id=\"nr\" name=\"usernric\" onfocus=\"nametext(1)\" onkeypress=\"return enter_check(event);\"/>\n      </div>\n      <div class=\"error redClr\" id=\"nric_error\" style=\"color:red;font-size:13px;float:left;\"></div></td>\n                </tr>\n              </table>\n\n            </div>\n            <p class=\"form_brd_btm\"></p>\n          </div>\n\n<div class=\"formbox\">\n            <p class=\"form_brd_top\"></p>\n            <div class=\"form_brd_bg\">\n             <table width=\"670\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\" margin:2px 0 2px 25px\">\n                <tr>\n                  <td width=\"263\" class=\"sub_hd\">Contact Tel*</td>\n                  <td><div class=\"input_name\">\n        <input type=\"text\" class=\"input_namebox\" id=\"cno\" maxlength=\"10\" name=\"user cno\" onfocus=\"nricno(1)\" onkeypress=\"return enter_check(event);\"/>\n      </div>\n      <div class=\"error redClr\" id=\"mob_error\" style=\"color:red;font-size:13px;float:left;\"></div></td>\n                </tr>\n              </table>\n            </div>\n            <p class=\"form_brd_btm\"></p>\n          </div>\n\n         <div class=\"formbox\">\n            <p class=\"form_brd_top\"></p>\n            <div class=\"form_brd_bg\">\n              <table width=\"670\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\" margin:2px 0 2px 25px\">\n                <tr>\n                  <td width=\"263\" class=\"sub_hd\">Address*</td>\n                  <td><div class=\"txtareabg\">\n        <textarea name=\"address1\" cols=\"\" rows=\"3\" class=\"txtareabgbox\" id=\"add\" onfocus=\"contactno(1)\" onBlur=\"limitlength(this,300);\" onKeyUp=\"limitlength(this,300);\" maxlength=\"300\"></textarea>\n      </div>\n      <div class=\"error redClr\" id=\"address_error\" style=\"color:red;font-size:13px;float:right;\"></div></td>\n                </tr>\n              </table>\n            </div>\n            <p class=\"form_brd_btm\"></p>\n          </div>          \n\n            <div class=\"formbox\" style=\"padding:0 0 12px !important;\">\n            <p class=\"form_brd_top\"></p>\n            <div class=\"form_brd_bg\">\n\n\n            <table width=\"670\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\" margin:2px 0 2px 25px\">\n                <tr>\n                  <td width=\"263\" class=\"sub_hd\">Preferred Date and Time<br />\nTo Be Contacted </td>\n                  <td><table width=\"326\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                    <tr>\n                      <td width=\"132\"><div class=\"input_small\">\n        <input type=\"text\" style=\"width:110px; background:none; border:0 none; padding:5px 0 0 7px !important;\" id=\"cr_date\" readonly=\"true\" name=\"cont_date\" onfocus=\"address(1)\"onkeypress=\"return enter_check(event);\"/>\n      </div>\n      <div class=\"error redClr\" id=\"cal_error\" style=\"color:red;font-size:13px;float:left;\"></div></td>\n                      <td width=\"194\" valign=\"bottom\"><img src=\"images/icon-calc.gif\" alt=\"\" id=\"trig_id\" style=\"cursor:pointer;\" /><script type='text/javascript'>setupCalendar('cr_date','trig_id');</script>\n                      </td>\n                    </tr>\n                  </table></td>\n                </tr>\n                <tr>\n                  <td colspan=\"2\" height=\"10\"></td>\n                </tr>\n                <tr>\n                  <td class=\"txt12_dark\">(Please allow 2 business days<br />\nfor a response)</td>\n                  <td><table width=\"400\" cellpadding=\"0\" cellspacing=\"0\" class=\"txt12_dark\"><tbody>\n                  <tr>\n                  <td width=\"102\"><input type=\"radio\" value=\"Dr\" id=\"d1\" name=\"bd\" onfocus=\"datetext(1)\" onkeypress=\"return enter_check(event);\"/> \n                  9am - 12pm    </td>\n                  <td width=\"112\"><input type=\"radio\" value=\"Mr\" id=\"d2\" name=\"bd\" onfocus=\"datetext(1)\" onkeypress=\"return enter_check(event);\"/>\n                  12pm - 3pm</td>\n                  <td width=\"186\"><input type=\"radio\" value=\"Mrs\" id=\"d3\" name=\"bd\" onfocus=\"datetext(1)\" onkeypress=\"return enter_check(event);\"/>3pm - 6pm</td>\n                  </tr> \n                  </tbody><div class=\"error redClr\" id=\"time_error\" style=\"color:red;font-size:13px;float:left;\"></div>\n                  </table></td>\n                </tr>\n              </table>            \n\n            <p class=\"form_brd_btm\"></p>\n          </div>\n          </div>\n\n<p class=\"txt13\" style=\"text-align:right;\"><a href=\"#\">+ Refer more</a></p>\n<p class=\"txt11\" style=\"text-align:right; padding:4px 0 5px !important\">* Compulsory fields</p>\n\n<div class=\"buttons\">\n<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" >\n<tbody>\n<tr>\n<td align=\"right\"><input type=\"image\" alt=\"Submit\" title=\"Submit\" src=\"images/btn_submit.gif\" onkeypress=\"return enter_check(event);\" name=\"image\" onclick=\"return validate(1)\"onfocus=\"dayradio(1)\"/></td>\n<td width=\"20\"></td>\n<td><img width=\"119\" height=\"41\"  alt=\"Reset\" title=\"Reset\" src=\"images/btn_reset.gif\" onclick=\"resetform()\"/></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n\n\n        <div class=\"tksbox\">\n            <p class=\"tks_brd_top\"></p>\n            <div class=\"tks_brd_bg\">\n              <p class=\"sub_hd\" style=\"text-align:center; margin:12px 0 12px 0;\">Thank you for your time, we look forward to ensuring you receive the attention you so richly deserve.</p>\n            </div>\n            <p class=\"tks_brd_btm\"></p>\n          </div>\n\n\n        </div>\n      </div>\n      <div class=\"workarea_btm\">\n\n\n      </div>\n    </div>\n  </div>\n  <div class=\"workarea_btm\"></div>\n  <div id=\"dvFooterc\"> \n\n  </div>\n\n</div>\n</form>\n</body>\n</html>\n</code></pre>\n",
              "is_accepted" : false,
              "score" : -1
            },
            { "body" : "<p>Disclosure: I wrote FieldVal.</p>\n\n<p>Here is a solution using <a href=\"http://fieldval.com\" rel=\"nofollow\">FieldVal</a>. By using FieldVal UI to build a form and then FieldVal to validate the input, you can pass the error straight back into the form. </p>\n\n<p>You can even run the validation code on the backend (if you're using Node) and show the error in the form without wiring all of the fields up manually.</p>\n\n<p>Live demo: <a href=\"http://codepen.io/MarcusLongmuir/pen/WbOydx\" rel=\"nofollow\">http://codepen.io/MarcusLongmuir/pen/WbOydx</a></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function validate_form(data) {\n    //This would work on the back end too (if you're using Node)\n\n    //Validate the provided data\n    var validator = new FieldVal(data);\n    validator.get(\"email\", BasicVal.email(true));\n    validator.get(\"title\", BasicVal.string(true));\n    validator.get(\"url\", BasicVal.url(true));\n    return validator.end();\n}\n\n\n$(document).ready(function(){\n\n    //Create a form and add some fields\n    var form = new FVForm()\n    .add_field(\"email\", new FVTextField(\"Email\"))\n    .add_field(\"title\", new FVTextField(\"Title\"))\n    .add_field(\"url\", new FVTextField(\"URL\"))\n    .on_submit(function(value){\n\n        //Clear the existing errors\n        form.clear_errors();\n\n        //Use the function above to validate the input\n        var error = validate_form(value);\n\n        if (error) {\n            //Pass the error into the form\n            form.error(error);\n        } else {\n            //Use the data here\n            alert(JSON.stringify(value));\n        }\n    })\n\n    form.element.append(\n        $(\"<button/>\").text(\"Submit\")\n    ).appendTo(\"body\");\n\n    //Pre-populate the form\n    form.val({\n        \"email\": \"user@example.com\",\n        \"title\": \"Your Title\",\n        \"url\": \"http://www.example.com\"\n    })\n});\n</code></pre>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>I'm trying to validate my form with the easiest way possible, but somehow is not working and when I click submit it just takes me to the next page without giving the alert message:</p>\n\n<p>HTML:</p>\n\n<pre><code><form name=\"ff1\" method=\"post\" onsubmit=\"validateForm();\">\n <input type=\"text\" name=\"email\" id=\"fremail\" placeholder=\"your@email.com\" />\n <input type=\"text\" name=\"title\" id=\"frtitle\" placeholder=\"Title\" />\n <input type=\"text\" name=\"url\" id=\"frurl\" placeholder=\"http://yourwebsite.com/\" />\n <input type=\"submit\" name=\"Submit\" value=\"Continue\" />         \n</form>\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code><script type=\"text/JavaScript\">\n\nfunction validateURL(url) {\n    var reurl = /^(http[s]?:\\/\\/){0,1}(www\\.){0,1}[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,5}[\\.]{0,1}/;\n    return re.test(url);\n}\n\nfunction validateForm()\n{\n    // Validate URL\n    var url = $(\"#frurl\").val();\n    if (validateURL(url)) { } else {\n        alert(\"Please enter a valid URL, remember including http://\");\n    }\n\n    // Validate Title\n    var title = $(\"#frtitle\").val();\n    if (title==\"\" || title==null) { } else {\n        alert(\"Please enter only alphanumeric values for your advertisement title\");\n    }\n\n    // Validate Email\n    var email = $(\"#fremail\").val();\n    if ((/(.+)@(.+){2,}\\.(.+){2,}/.test(email)) || email==\"\" || email==null) { } else {\n        alert(\"Please enter a valid email\");\n    }\n  return false;\n}\n</script>\n</code></pre>\n\n<p>Here is also in jsfiddle <a href=\"http://jsfiddle.net/CrLsR/\" rel=\"nofollow\">http://jsfiddle.net/CrLsR/</a></p>\n\n<p>Thanks in advance</p>\n",
        "creation_date" : 1366569206,
        "last_activity_date" : 1422223716,
        "question_id" : 16134733,
        "score" : 5,
        "tags" : [ "javascript",
            "html",
            "forms",
            "validation"
          ],
        "title" : "HTML/Javascript: Simple form validation on submit"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>Have you tried using <code>$scope.$apply()</code>? When you're calling some classic angular async function such as <code>$http.get()</code>, <code>$scope.$apply()</code> is called at the end automatically. I'm guessing that's the reason it works only in the second example of yours and not in the first. Try adding it after the assignment of <code>$scope.helloworld</code> in the callback. Read <a href=\"https://github.com/angular/angular.js/wiki/When-to-use-$scope.$apply%28%29\" rel=\"nofollow\">this</a> for more info.</p>\n",
              "is_accepted" : true,
              "score" : 2
            } ],
        "body" : "<p>I'm new to angular and nedb. I'm trying to use an array from a nedb for ng-repeat.\nI don't understand why my code don't work</p>\n\n<pre><code>   <div ng-repeat=\"hello in helloworld\"></div>\n\n...\n hellodb.find({}).sort({helloworld: 1}).exec(function (err, docs){\n      $scope.helloworld = docs;\n      console.log($scope.helloworld);\n });\n</code></pre>\n\n<p>If i do the same with a json file with the same content as the database</p>\n\n<pre><code>$http.get('helloworld.json').success(function(data) {\n      $scope.helloworld = data;\n      console.log($scope.helloworld);\n });\n</code></pre>\n\n<p>the output in the console is the same, and ng-repeat works</p>\n",
        "creation_date" : 1399490671,
        "last_activity_date" : 1422222922,
        "question_id" : 23526554,
        "score" : 0,
        "tags" : [ "javascript",
            "node.js",
            "angularjs",
            "mongodb",
            "node-webkit"
          ],
        "title" : "Using nedb array for ng-repeat"
      },
      { "answer_count" : 3,
        "answers" : [ { "body" : "<p>If you get <code>deltaX</code> and <code>deltaY</code> from your coordinates then <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/atan2\" rel=\"nofollow\"><code>Math.atan2</code></a> returns the arctangent of the quotient of its arguments. The return value is in radians.</p>\n\n<pre><code>var deltaX = x2 - x1;\nvar deltaY = y2 - y1;\nvar rad = Math.atan2(deltaX, deltaY); // In radians\n</code></pre>\n\n<p>Then you can convert it to degrees as easy as:</p>\n\n<pre><code>var deg *= rad * (180 / Math.PI)\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/iRVFa.png\" alt=\"enter image description here\"></p>\n",
              "is_accepted" : true,
              "score" : 3
            },
            { "body" : "<p>The currently accepted answer is incorrect. First of all, <code>Math.tan</code> is totally wrong -- I suspect Mohsen meant <code>Math.atan</code> and this is just a typo.</p>\n\n<p>However, as other responses to that answer state, you should really use <code>Math.atan2(y,x)</code> instead. The regular inverse tangent will only return values between -pi/2 and pi/2 (quadrants 1 and 4) because the input is ambiguous -- the inverse tangent has no way of knowing if the input value belongs in quadrant 1 vs 3, or 2 vs 4.</p>\n\n<p><code>Math.atan2</code>, on the other hand, can use the xy values given to figure out what quadrant you're in and return the appropriate angle for any coordinates in all 4 quadrants. Then, as others have noted, you can just multiply by <code>(180/Math.pi)</code> to convert radians to degrees, if you need to.</p>\n",
              "is_accepted" : false,
              "score" : 3
            },
            { "body" : "<p>Instead of using Math.tan function You should use Math.atan2:</p>\n\n<p>Here is an example of use:</p>\n\n<pre><code>deltaX = x2 - x1;\ndeltaY = y2 - y1;\ndeg = Math.atan2(deltaY, deltaX)*Math.PI/180.0;\n</code></pre>\n\n<p>and this will return a degree from <-180;180>.</p>\n",
              "is_accepted" : false,
              "score" : 0
            }
          ],
        "body" : "<p>Microsoft provide an excellent <a href=\"http://ie.microsoft.com/testdrive/graphics/svggradientbackgroundmaker/\" rel=\"nofollow\">SVG gradient maker</a> so IE9 can also have \"CSS3\" gradients (click Custom).</p>\n\n<p>I currently utilise their logic for my <a href=\"http://mattstow.com/css-professionalzr.html\" rel=\"nofollow\">Fireworks</a> and <a href=\"http://mattstow.com/easy-css3.html\" rel=\"nofollow\">Dreamweaver</a> extensions to convert gradients to SVG, but I only know how to do it for standard top, bottom, left, right directions. If you enter an angle, I don't do the conversion, because I'm not sure how I would convert x1, x2, y1, y2 to CSS3 angle degrees.</p>\n\n<p>The gradient generator provides values like this: x1=\"0%\" y1=\"0%\" x2=\"56.262833675564686%\" y2=\"68.29999651227678%\"</p>\n\n<p>I'm not great with mathematics or trigonometry, so could somebody help me out? I'd also like to use the same math in a Sass mixin to do a similar thing, if possible.</p>\n",
        "creation_date" : 1365897046,
        "last_activity_date" : 1422222830,
        "question_id" : 15994194,
        "score" : 5,
        "tags" : [ "javascript",
            "css3",
            "svg",
            "gradient",
            "trigonometry"
          ],
        "title" : "How to convert x,y coordinates to an angle?"
      },
      { "answer_count" : 1,
        "answers" : [ { "body" : "<p>Actually, you linked a pretty good answer in your question:\n<a href=\"http://stackoverflow.com/a/431554/2373138\">http://stackoverflow.com/a/431554/2373138</a></p>\n\n<pre><code><head>\n    <noscript><style>.jsonly { display: none; }</style></noscript>\n</head>\n<body>\n    <div class=\"jsonly\">javascript users only</div>\n</body>\n</code></pre>\n\n<p>Another common solution is to use javascript itself for that:</p>\n\n<pre><code><head>\n    <style>\n        .jsonly { display: none; }\n        .js .jsonly { display: block; }\n    </style>\n</head>\n<body>\n    <script>\n        document.body.className = \"js\";\n    </script>\n\n    <div class=\"jsonly\">javascript users only</div>\n</body>\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/kelunik/ryxgt4dL/embedded/result/\" rel=\"nofollow\"><strong>DEMO</strong></a></p>\n\n<p>However, this solution will fail for inline elements, because it will override the <code>display</code> property, but here's a fix, just replace the CSS before with the following:</p>\n\n<pre><code>body:not(.js) .jsonly { display: none; }\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/kelunik/ryxgt4dL/1/embedded/result/\" rel=\"nofollow\"><strong>DEMO</strong></a></p>\n",
              "is_accepted" : false,
              "score" : 2
            } ],
        "body" : "<p>From a widest compatibility with various browsers perspective, what is the best way to show content for only JavaScript enabled clients?  There have been similar questions, however, they are old and in conflict.</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/1431137/how-to-wrap-noscript-tag-to-hide-content-when-javascript-disable\">How to wrap <noscript> tag to hide content when javascript disable</a></li>\n<li><a href=\"http://stackoverflow.com/questions/30319/is-there-a-html-opposite-to-noscript\">Is there a html opposite to noscript</a></li>\n</ul>\n\n<p>I have seen other options, however, it seems like these two are the best?</p>\n\n<pre><code><!DOCTYPE html>\n<html>\n    <head>\n        <title>anti-noscript</title>\n        <noscript><style> .yes_script1 { display: none } </style></noscript>\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.js\" type=\"text/javascript\"></script>\n        <script type='text/javascript'>\n            $(function(){\n                $('.yes_script2').show();\n            });\n        </script>\n        <style>\n            .yes_script2{display:none;}\n        </style>\n    </head>\n    <body>\n        <p class=\"yes_script1\">Show to JavaScript clients only.</p>\n        <noscript>Show to non-JavaScript clients only.</noscript>\n        <p class=\"yes_script2\">Show to JavaScript clients only.</p>\n    </body>\n</html>\n</code></pre>\n",
        "creation_date" : 1390834355,
        "last_activity_date" : 1422221384,
        "question_id" : 21383919,
        "score" : 1,
        "tags" : [ "javascript",
            "jquery",
            "css"
          ],
        "title" : "Show for JavaScript enabled clients only (i.e. anti-NOSCRIPT)"
      }
    ],
  "page" : 3,
  "page_size" : 100,
  "total" : 703754
}