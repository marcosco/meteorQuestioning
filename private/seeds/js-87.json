{
    "items": [
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>try something like this </p>\n\n<pre><code>$('#scrollable').find('img:last').load(function() {\n        //load the content  \n});\n</code></pre>\n\n<p>OR find the <code>offset</code> location/position of the <strong>last</strong>  image and try loading your content when you reach the <strong>offset position</strong> on <code>scrolling</code></p>\n\n<p><strong>HTML</strong> :</p>\n\n<pre><code>&lt;div&gt;\n   &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;\n   &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;\n   &lt;span&gt;Hello !!&lt;/span&gt;\n   &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;\n   &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;\n&lt;/div&gt; \n</code></pre>\n\n<p>some  <strong>CSS</strong>  :</p>\n\n<pre><code>div {\n    width:200px;\n    height:200px;\n    overflow:scroll;\n}\n</code></pre>\n\n<p><strong>Javascript</strong> :</p>\n\n<pre><code>$(document).ready(function() {\n     $('div').scroll(function() {\n         var pos    = $('div').scrollTop();\n         var offset = $('span').offset().top;\n         if(pos &gt;= offset ) {\n           alert('you have reached your destiny');\n         }\n   });\n});    \n</code></pre>\n\n<p>here's a quick <strong>demo</strong> <a href=\"http://jsfiddle.net/8QbwU/\" rel=\"nofollow\"><strong>http://jsfiddle.net/8QbwU/</strong></a></p>\n\n<p>Though Demo doesn't met your full requirements, I believe It does give you <code>some light</code> to proceed further :) </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>That could be made the following way:</p>\n\n<pre><code>//When the DOM is ready...\n$(document).ready(function() {\n\n   //When the user scrolls...\n   $(window).scroll(function() {\n       var tolerance = 800,\n           scrollTop = $(window).scrollTop();\n\n       //If the the distance to the top is greater than the tolerance...\n       if(scrollTop &gt; tolerance) {\n\n           //Do something. Ajax Call, Animations, whatever.\n\n       }\n   }) ;\n});\n</code></pre>\n\n<p>That should do the trick.</p>\n\n<p><strong>EDIT:</strong> Because you're not using the native scroll, we've got to do a little fix to the code:</p>\n\n<pre><code>//When the DOM is ready...\n$(document).ready(function() {\n\n   //When the user scrolls...\n   $(\"div.scrollable\").find(\".next\").click(function() {\n       var tolerance = 800,\n           // The absolute value of the integer associated \n           // to the top css property\n           scrollTop = Math.abs(parseInt($(\"div.items\").css(\"top\")));\n\n       //If the the distance to the top is greater than the tolerance...\n       if(scrollTop &gt; tolerance) {\n\n           //Do something. Ajax Call, Animations, whatever.\n\n       }\n   }) ;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>First, you'll want to use jQuery for this</p>\n\n<p>Second, put a placeholder on your page to contain your data.</p>\n\n<pre><code>&lt;table id=\"dataTable\" class=\"someClass\" style=\"border-collapse: collapse;\"&gt;\n    &lt;colgroup&gt;\n        &lt;col width=\"12%\" /&gt;\n        &lt;col width=\"12%\" /&gt;\n        &lt;col width=\"12%\" /&gt;\n        &lt;!-- Define your column widths --&gt;\n    &lt;/colgroup&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>You'll need to code your own GetData method in a webservice, but this is the general idea (And call Refresh(); from your page load)</p>\n\n<pre><code>function Refresh() {\n    var getData = function(callback, context, startAt, batchSize) {\n        MyWebservice.GetData(\n            startAt,   //What record to start at (1 to start)\n            batchSize, //Results per page\n            3,         //Pages of data\n            function(result, context, method) {\n                callback(result, context, method);\n            },\n            null,\n            context\n        );\n    };\n\n    $('#dataTable').scrolltable(getData);\n}\n</code></pre>\n\n<p>The getData function variable is passed into the scrolltable plugin, it will be called as needed when the table is being scrolled.  The callback and context are passed in, and used by the plugin to manage the object you are operating on (context) and the asynchronous nature of the web (callback)</p>\n\n<p>The GetData (note the case) webmethod needs to return a JSON object that contains some critical information, how your server side code does this is up to you, but the object this plugin expects is the following.  The Prior and Post data are used to trigger when to load more data, basically, you can scroll through the middle/active page, but when you start seeing data in the prior or post page, we're going to need to fetch more data</p>\n\n<pre><code>    return new {\n        // TotalRows in the ENTIRE result set (if it weren't paged/scrolled)\n        TotalRows = tableElement.Element(\"ResultCount\").Value,\n        // The current position we are viewing at\n        Position = startAt,\n        // Number of items per \"page\"\n        PageSize = tableElement.Element(\"PageSize\").Value,\n        // Number of pages we are working with (3)\n        PageCount = tableElement.Element(\"PageCount\").Value,\n        // Data page prior to active results\n        PriorData = tbodyTop.Html(),\n        // Data to display as active results\n        CurrentData = tbodyCtr.Html(),\n        // Data to display after active results\n        PostData = tbodyBot.Html()\n    };\n</code></pre>\n\n<p>Next is the plugin itself</p>\n\n<pre><code>/// &lt;reference path=\"../../js/jquery-1.2.6.js\" /&gt;\n(function($) {\n    $.fn.scrolltable = function(getDataFunction) {\n        var setData = function(result, context) {\n            var timeoutId = context.data('timeoutId');\n            if (timeoutId) {\n                clearTimeout(timeoutId);\n                context.data('timeoutId', null);\n            }\n\n            var $table = context.find(\"table\");\n            var $topSpacer = $table.find('#topSpacer');\n            var $bottomSpacer = $table.find('#bottomSpacer');\n\n            var $newBodyT = $table.children('#bodyT');\n            var $newBodyC = $table.children('#bodyC');\n            var $newBodyB = $table.children('#bodyB');\n\n            var preScrollTop = context[0].scrollTop;\n\n            $newBodyT.html(result.PriorData);\n            $newBodyC.html(result.CurrentData);\n            $newBodyB.html(result.PostData);\n\n            var rowHeight = $newBodyC.children('tr').height() || 20;\n            var rowCountT = $newBodyT.children('tr').length;\n            var rowCountC = $newBodyC.children('tr').length;\n            var rowCountB = $newBodyB.children('tr').length;\n\n            result.Position = parseInt(result.Position);\n            $newBodyC.data('firstRow', result.Position);\n            $newBodyC.data('lastRow', (result.Position + rowCountC));\n            context.data('batchSize', result.PageSize);\n            context.data('totalRows', result.TotalRows);\n\n            var displayedRows = rowCountT + rowCountC + rowCountB;\n            var rowCountTopSpacer = Math.max(result.Position - rowCountT - 1, 0);\n            var rowCountBottomSpacer = result.TotalRows - displayedRows - rowCountTopSpacer;\n\n            if (rowCountTopSpacer == 0) {\n                $topSpacer.closest('tbody').hide();\n            } else {\n                $topSpacer.closest('tbody').show();\n                $topSpacer.height(Math.max(rowCountTopSpacer * rowHeight, 0));\n            }\n\n            if (rowCountBottomSpacer == 0) {\n                $bottomSpacer.closest('tbody').hide();\n            } else {\n                $bottomSpacer.closest('tbody').show();\n                $bottomSpacer.height(Math.max(rowCountBottomSpacer * rowHeight, 0));\n            }\n\n            context[0].scrollTop = preScrollTop;  //Maintain Scroll Position as it sometimes was off\n        };\n\n        var onScroll = function(ev) {\n            var $scrollContainer = $(ev.target);\n\n            var $dataTable = $scrollContainer.find('#dataTable');\n            var $bodyT = $dataTable.children('tbody#bodyT');\n            var $bodyC = $dataTable.children('tbody#bodyC');\n            var $bodyB = $dataTable.children('tbody#bodyB');\n\n            var rowHeight = $bodyC.children('tr').height();\n            var currentRow = Math.floor($scrollContainer.scrollTop() / rowHeight);\n            var displayedRows = Math.floor($scrollContainer.height() / rowHeight);\n\n            var batchSize = $scrollContainer.data('batchSize');\n            var totalRows = $scrollContainer.data('totalRows');\n\n            var prevRowCount = $bodyT.children('tr').length;\n            var currRowCount = $bodyC.children('tr').length;\n            var postRowCount = $bodyB.children('tr').length;\n\n            var doGetData = (\n                                (\n                                    (currentRow + displayedRows) &lt; $bodyC.data('firstRow')                      //Scrolling up\n                                    &amp;&amp; (($bodyC.data('firstRow') - prevRowCount) &gt; 1)                           // ...and data isn't already there\n                                )\n                            ||\n                                (\n                                    (currentRow &gt; $bodyC.data('lastRow'))                                       //Scrolling down\n                                    &amp;&amp; (($bodyC.data('firstRow') + currRowCount + postRowCount) &lt; totalRows)    // ...and data isn't already there\n                                )\n                            );\n\n            if (doGetData) {\n                var batchSize = $scrollContainer.data('batchSize');\n\n                var timeoutId = $scrollContainer.data('timeoutId');\n                if (timeoutId) {\n                    clearTimeout(timeoutId);\n                    $scrollContainer.data('timeoutId', null);\n                }\n\n                timeoutId = setTimeout(function() {\n                    getDataFunction(setData, $scrollContainer, currentRow, batchSize);\n                }, 50);\n\n                $scrollContainer.data('timeoutId', timeoutId);\n            }\n        };\n\n        return this.each(function() {\n            var $dataTable = $(this);\n\n            if (!getDataFunction) \n                alert('GetDataFunction is Required');\n\n            var batchSize = batchSize || 25;\n            var outerContainerCss = outerContainerCss || {};\n\n            var defaultContainerCss = {\n                overflow: 'auto',\n                width: '100%',\n                height: '200px',\n                position: 'relative'\n            };\n\n            var containerCss = $.extend({}, defaultContainerCss, outerContainerCss);\n\n            if (! $dataTable.parent().hasClass('_outerContainer')) {\n                $dataTable\n                    .wrap('&lt;div class=\"_outerContainer\" /&gt;')\n                    .append($('&lt;tbody class=\"spacer\"&gt;&lt;tr&gt;&lt;td&gt;&lt;div id=\"topSpacer\" /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;'))\n                    .append($('&lt;tbody id=\"bodyT\" /&gt;'))\n                    .append($('&lt;tbody id=\"bodyC\" /&gt;'))\n                    .append($('&lt;tbody id=\"bodyB\" /&gt;'))\n                    .append($('&lt;tbody class=\"spacer\"&gt;&lt;tr&gt;&lt;td&gt;&lt;div id=\"bottomSpacer\" /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;'));\n            }\n\n            var $scrollContainer = $dataTable.parent();\n\n            $scrollContainer\n                .css(containerCss)\n                .scroll(onScroll);\n\n            getDataFunction(setData, $scrollContainer, 1, batchSize);\n        });\n    };\n})(jQuery);\n</code></pre>\n\n<p>You'll likely need to tweak some things.  I just converted it to a jQuery plugin and it's probably still a little glitchy.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just had to use jQuery Tools' API, the <code>onSeek</code> parameter within the <code>scrollable()</code> method.</p>\n\n<p>It was something like that</p>\n\n<pre><code>$(\".scrollable\").scrollable({\n    vertical: true,\n    onSeek: function() {\n        row = this.getIndex();\n        // Check if it's worth to load more content\n        if(row%4 == 0 &amp;&amp; row != 0) {\n            var id = this.getItems().find('img').filter(':last').attr('id');\n            id = parseInt(id);\n            $.get('galeria.items.php?id='+id, null, function(html) {\n                $('.items').append(html);\n            });\n        }\n    }\n}); \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>I'm using jQuery Tools Plugin as image slider (<a href=\"http://rookery9.aviary.com.s3.amazonaws.com/4538500/4538792_6d01.png\" rel=\"nofollow\">image here</a>), but due to large amount of images I need to load them few at a time. Since it's javascript coded, I can't have the scroll position as far as I know. I want to load them as soon as the last image shows up or something like that. I have no idea where I put and event listener neither anything.</p>\n\n<p>Here is my code <a href=\"http://jsfiddle.net/PxGTJ/\" rel=\"nofollow\">http://jsfiddle.net/PxGTJ/</a></p>\n\n<p>Give me some light, please!</p>\n",
            "last_activity_date": 1281459664,
            "question_id": 3283669,
            "score": 1,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "scroll"
            ],
            "title": "Loading content with ajax while scrolling"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>There is a good tutorial at Ajaxian on how to parse XML with jQuery\n<a href=\"http://ajaxian.com/archives/ajaxian-featured-tutorial-parsing-xml-with-jquery\" rel=\"nofollow\">http://ajaxian.com/archives/ajaxian-featured-tutorial-parsing-xml-with-jquery</a>\nhope it helps</p>\n\n<p>edit: the tutorial actually is here: <a href=\"http://blog.reindel.com/2007/09/24/jquery-and-xml-revisited/\" rel=\"nofollow\">http://blog.reindel.com/2007/09/24/jquery-and-xml-revisited/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think I found a tutorial (its in german though) <a href=\"http://www.aboutwebdesign.de/awd/content/1124893836.shtml\" rel=\"nofollow\">http://www.aboutwebdesign.de/awd/content/1124893836.shtml</a></p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I've had some luck parsing XML in javascript with code like:</p>\n\n<pre><code>var xmlDoc = this.req.responseXML.documentElement;\nvar tStatus = xmlDoc.getElementsByTagName(\"status\")[0].firstChild.data;\nvar tOtherURL = xmlDoc.getElementsByTagName(\"otherurl\")[0].firstChild.data;\nvar tRows = xmlDoc.getElementsByTagName(\"rows\")[0].firstChild.data;\n</code></pre>\n\n<p>Keep in mind that I don't really know Javascript and I cargo-cult'ed this from somewhere else.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In <a href=\"https://developer.mozilla.org/en/Introduction_to_using_XPath_in_JavaScript\" rel=\"nofollow\">Firefox</a> and Opera the solution is very easy: They have builtin XPath support. So you just <a href=\"https://developer.mozilla.org/en/DOM/document.evaluate\" rel=\"nofollow\">evaluate</a> an XPath expression on the DOM of the XML response.</p>\n\n<p>With IE there's more work to do. Someone else asked basically the <a href=\"http://stackoverflow.com/questions/178016/problem-selecting-html-elements-with-xpath-in-internet-explorer\">same question</a> before and the reasonable answer is: You'll need to employ JavaScript library that will allow you to use XPath. Otherwise you end up writing your problem-specific parsing code yourself. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Unless you are working on a page hosted on google.de \u2014 you can't.</p>\n\n<p>The <a href=\"http://en.wikipedia.org/wiki/Same%5Forigin%5Fpolicy\" rel=\"nofollow\">same origin policy</a> prevents JS running in a webpage on your site from accessing a document on a remote site.</p>\n\n<p>You have to involve a server side process in order to either convert the XML into a format that you can handle remotely (such as JSON-P, which <a href=\"http://pipes.yahoo.com/\" rel=\"nofollow\">Yahoo! Pipes</a> will do for you) or relay the data through your own server with a server side process accessible in the same origin as the page.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I created a jQuery plugin that parses XML pretty easily. It works in all Yahoo A grade browsers and comes with filtering, limit and callback options.</p>\n\n<p>It might be a solution to consider: <a href=\"http://jparse.kylerush.net/\" rel=\"nofollow\">http://jparse.kylerush.net/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to parse this XML Document <a href=\"http://www.google.de/ig/api?weather=Braunschweig,%20Deutschland\" rel=\"nofollow\">http://www.google.de/ig/api?weather=Braunschweig,%20Deutschland</a> I want to be able to read out condition, temp_c and humidity. All this I want to do inside of JavaScript without using any server sided scripts such as PHP and I want it to work on modern browsers as well as IE7 and if without many problems IE6 \nEDIT: \nA solution without a framework would be ideal</p>\n",
            "last_activity_date": 1297289941,
            "question_id": 323982,
            "score": 1,
            "tags": [
                "javascript",
                "xml",
                "parsing",
                "weather"
            ],
            "title": "How to parse XML in JavaScript from Google"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You could either do it the way that your doing it, or you can submit the forms via ajax requests. If there is no need for it to be asynchronous, I would probably do it the way you plan on doing it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Hmmmm. This might sound drastic, but why not encapsulate all the <code>INPUT</code>s into just one <code>FORM</code> element? If not that, I think you'll have to rely on AJAX to do this for you.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This will submit all form elements via ajax when <code>'button'</code> is clicked</p>\n\n<pre><code>$('button').click(function() {\n    $('form').each(function() {\n        $.post(this.action, $form.serialize());\n    });\n});\n</code></pre>\n\n<p>Note that this will not refresh the page, as they are all submitted via ajax...</p>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I have multiple forms on the same page but I want to submit all forms together once instead of submitting one at a time. My approach is to clone all the data inside a another form and submit at once but its kind of overhead . So, is there a another approach to submit multiple form data once.</p>\n\n<p>Thanks in advance for any help.</p>\n",
            "last_activity_date": 1331354032,
            "question_id": 6681583,
            "score": 0,
            "tags": [
                "javascript",
                "jquery",
                "forms",
                "submit"
            ],
            "title": "how to submit multiple forms with single submit?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Using pure JavaScript, you could do something like this:</p>\n\n<pre><code>if ([38,33,40,34].indexOf(event.keyCode) &gt;= 0) { ... }\n</code></pre>\n\n<p>But keep in mind that this method was introduced with ECMAScript 5, and so isn't supported by some older browsers.</p>\n\n<p>You could also do something like this, which should work on older browsers as well:</p>\n\n<pre><code>if ({38:1,33:1,40:1,34:1}[event.keyCode]) { ... }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I actually recommend using a switch. The <a href=\"http://oreilly.com/server-administration/excerpts/even-faster-websites/writing-efficient-javascript.html#the_fastest_conditionals\">general rule of thumb</a> is</p>\n\n<ul>\n<li>1 or 2 values: use an if </li>\n<li>3 to 10 values: use a switch</li>\n<li>11 or more: use an array lookup</li>\n</ul>\n\n<p>But since you're using jQuery, you can simply do:</p>\n\n<pre><code>jQuery.inArray(event.keyCode, [38,33,40,34])\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>You could use an object lookup.</p>\n\n<pre><code>if ({33:true,34:true,38:true,40:true}[event.keyCode]) {\n    ...\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can use regular expressions, although I'm not sure if that's necessarily faster than a switch statement.</p>\n\n<pre><code>if (/^(38|33|40|34)$/.test(event.keyCode)) {\n // Some code here\n}\n</code></pre>\n\n<p>Though it's much more readable than doing an object property look-up. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code>if (event.keyCode === 38 || event.keyCode === 33 || event.keyCode === 40 || event.keyCode === 34) {\n}\n</code></pre>\n\n<p>How to shorthand this code? Remember that conditional <a href=\"http://stackoverflow.com/questions/6665997/switch-statement-for-greater-than-less-than\"><code>switch</code> statements are slow</a>.</p>\n\n<p>I want to do something like</p>\n\n<pre><code>if (event.keyCode === 38 || 33 || 40 || 34)\n</code></pre>\n",
            "last_activity_date": 1385763644,
            "question_id": 20251661,
            "score": -1,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Javascript shorthand if"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It doesn't appear so from the API, you can only set a position, with no option for \"none\". You could probably remove it with javascript though, if you can identify the containing element.</p>\n\n<p>Edit: it actually appears as though you can omit the chdl= parameter to get a scatter without a legend.</p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>You can disable the legend by using 'none' as the position:</p>\n\n<p><code>legend: {position: 'none'}</code></p>\n",
                    "is_accepted": true,
                    "score": 117
                },
                {
                    "body": "<p>A bit cleaner way is</p>\n\n<pre><code>legend: 'none'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 31
                }
            ],
            "body": "<p>I am using the Google charts API. Is there a way to hide the legend for a scatter plot?</p>\n",
            "last_activity_date": 1389636095,
            "question_id": 5202029,
            "score": 47,
            "tags": [
                "javascript",
                "google-visualization"
            ],
            "title": "Hiding the legend in Google Chart"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Math/pow\"><code>Math.pow()</code></a>:</p>\n\n<pre><code>js&gt; Math.pow(12, 2)\n144\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 81
                },
                {
                    "body": "<p><a href=\"http://msdn.microsoft.com/en-us/library/0xhwcwy6%28v=vs.94%29.aspx\"><code>Math.pow(base, exponent)</code></a>, for starters.</p>\n\n<p>Example:</p>\n\n<pre><code>Math.pow(12, 2)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>If you want to find the power of x of y then </p>\n\n<p>use <code>Math.pow</code></p>\n\n<p>example</p>\n\n<pre><code>document.write(Math.pow(7,2));\n</code></pre>\n\n<p>If you want exponent Use <code>Math.exp</code></p>\n\n<p>example</p>\n\n<pre><code>document.write(Math.exp(1));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p><code>Math.pow(x, y)</code> works fine for x^y and even evaluates the expression when y is not an integer. A piece of code not relying on <code>Math.pow</code> but that can only evaluate integer exponents is:</p>\n\n<pre><code>function exp(base, exponent) {\n  exponent = Math.round(exponent);\n  if (exponent == 0) {\n    return 1;\n  }\n  if (exponent &lt; 0) {\n    return 1 / exp(base, -exponent);\n  }\n  if (exponent &gt; 0) {\n    return base * exp(base, exponent - 1)\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How do you do exponents in JavaScript?</p>\n\n<p>Like how would you do 12^2?</p>\n",
            "last_activity_date": 1334500929,
            "question_id": 5907063,
            "score": 46,
            "tags": [
                "javascript",
                "math"
            ],
            "title": "JavaScript exponents"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<pre><code>var element = document.getElementById('element');<br>element.style.background = '#ff00aa';<br></code></pre>",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>In general, CSS properties are converted to JavaScript by making them camelCase without any dashes. So <code>background-color</code> becomes <code>backgroundColor</code>.</p>\n\n<pre><code>function setColor(element, color)\n{\n    element.style.backgroundColor = color;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 77
                },
                {
                    "body": "<p>Or, using a little jQuery:</p>\r\n\r\n<pre><code>$('#fieldID').css('background-color', '#FF6600');<br></code></pre>",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You might find your code is more maintainable if you keep all your styles, etc. in CSS and just set / unset class names in JavaScript.</p>\n\n<p>Your CSS would obviously be something like:</p>\n\n<pre><code>.highlight {\n    background:#ff00aa;\n}\n</code></pre>\n\n<p>Then in JavaScript:</p>\n\n<pre><code>element.className = element.className === 'highlight' ? '' : 'highlight';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Add this script element to your body element:</p>\n\n<pre><code>&lt;body&gt;\n  &lt;script type=\"text/javascript\"&gt;\n     document.body.style.backgroundColor = \"#AAAAAA\";\n  &lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>KISS Answer:</p>\n\n<pre><code>document.getElementById('element').style.background = '#DD00DD';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use:</p>\n\n<pre><code>  &lt;script type=\"text/javascript\"&gt;\n     Window.body.style.backgroundColor = \"#5a5a5a\";\n  &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can do it with jquery. <code>$(\".class\").css(\"background\",\"yellow\");</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>you can use </p>\n\n<pre><code>$('#elementID').css('background-color', '#C0C0C0');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I set the CSS background color of an HTML element via JavaScript?</p>\n",
            "last_activity_date": 1397181416,
            "question_id": 3319,
            "score": 43,
            "tags": [
                "javascript",
                "css"
            ],
            "title": "CSS background color in JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This is a new feature of JavaScript 1.7 called <a href=\"https://developer.mozilla.org/en/New_in_javascript_1.7#Destructuring_assignment_%28Merge_into_own_page.2Fsection%29\">Destructuring assignment</a>:</p>\n\n<blockquote>\n  <p>Destructuring assignment makes it possible to extract data from arrays or objects using a syntax that mirrors the construction of array and object literals.</p>\n  \n  <p>The object and array literal expressions provide an easy way to create ad-hoc packages of data. Once you've created these packages of data, you can use them any way you want to. You can even return them from functions.</p>\n  \n  <p>One particularly useful thing you can do with destructuring assignment is to read an entire structure in a single statement, although there are a number of interesting things you can do with them, as shown in the section full of examples that follows.</p>\n  \n  <p>You can use destructuring assignment, for example, to swap values:</p>\n\n<pre><code>var a = 1;\nvar b = 3;\n[a, b] = [b, a];\n</code></pre>\n  \n  <p>This capability is similar to features present in languages such as Perl and Python.</p>\n</blockquote>\n\n<p>Unfortunately, according to <a href=\"http://en.wikipedia.org/wiki/JavaScript#Versions\">this table of versions</a>, JavaScript 1.7 has not been implemented in Chrome. But it should be there in:</p>\n\n<ul>\n<li>FireFox 2.0+</li>\n<li>IE 9</li>\n<li>Opera 11.50. </li>\n</ul>\n\n<p>Try it for yourself in this jsfiddle: <a href=\"http://jsfiddle.net/uBReg/\">http://jsfiddle.net/uBReg/</a></p>\n\n<p>I tested this on Chrome (failed), IE 8 (failed), and FireFox 5 (which worked, per the wiki table).</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>It is possible only for Javascript 1.7 as already answered by @Justin. Here is a trial to simulate it in the widespread browsers:</p>\n\n<pre><code>function assign(arr, vars) {\n    var x = {};\n    var num = Math.min(arr.length, vars.length);\n    for (var i = 0; i &lt; num; ++i) {\n        x[vars[i]] = arr[i];\n    }\n    return x;\n}\nvar arr = [1, 2, 3];\nvar x = assign(arr, ['a', 'b', 'c']);\nvar z = x.a + x.b + x.c;  // z == 6\n</code></pre>\n\n<p>I don't know how useful it is.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<pre><code>var a,b,c;\nvar arr = [1,2,3];\n[a,b,c] = arr;\n</code></pre>\n\n<p>this code works perfectly in Firefox resulting a=1, b=2 and c=3,<br>\nbut it doesn't work in Chrome. Is it a Chrome bug or<br>\nit is not valid javascript code? (I failed to find it in javascript references)  </p>\n\n<p>How can I modify this code to make it suitable for Chrome, with minimum damage to it?<br>\n(I don't really like to write a = arr[0]; b = arr[1]... or the same with arr.shift() all the time)<br><br></p>\n\n<p>P.S. this is just an example code, in real code<br> \nI get the arr array from somewhere outside my code</p>\n",
            "last_activity_date": 1331736687,
            "question_id": 6983026,
            "score": 36,
            "tags": [
                "javascript",
                "arrays",
                "variable-assignment"
            ],
            "title": "Javascript. Assign array values to multiple variables?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Only the window object generates a \"resize\" event.  The only way I know of to do what you want to do is to run an interval timer that periodically checks the size.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You have to bind the <code>resize</code> event on the <code>window</code> object, not on a generic html element.</p>\n\n<p>You could then use this:</p>\n\n<pre><code>$(window).resize(function() {\n    ...\n});\n</code></pre>\n\n<p>and within the callback function you can check the new width of your <code>div</code> calling</p>\n\n<pre><code>$('.a-selector').width();\n</code></pre>\n\n<p>So, the answer to your question is <strong>no</strong>, you can't bind the <code>resize</code> event to a div.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Take a look at this <a href=\"http://benalman.com/code/projects/jquery-resize/examples/resize/\">http://benalman.com/code/projects/jquery-resize/examples/resize/</a></p>\n\n<p>It has various examples. Try resizing your window and see how elements inside container elements adjusted.</p>\n\n<p><strong>Example with js fiddle to explain how to get it work.</strong><br/>\nTake a look at this fiddle <a href=\"http://jsfiddle.net/sgsqJ/4/\">http://jsfiddle.net/sgsqJ/4/</a></p>\n\n<p>In that resize() event is bound to an elements having class \"test\" and also to the window object\nand in resize callback of window object $('.test').resize() is called.</p>\n\n<p>e.g.</p>\n\n<pre><code>$('#test_div').bind('resize', function(){\n            console.log('resized');\n});\n\n$(window).resize(function(){\n   $('#test_div').resize();\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>There is a very efficient method to determine if a element's size has been changed.</p>\n\n<p><a href=\"http://marcj.github.io/css-element-queries/\">http://marcj.github.io/css-element-queries/</a></p>\n\n<p>This library has a class ResizeSensor which can be used for resize detection. It uses a event-based approach, so it's damn fast and doesn't waste CPU time.</p>\n\n<p>Please do not use the jQuery onresize plugin as it uses setTimeout() loop to check for changes. THIS IS INCREDIBLY SLOW AND NOT ACCURATE.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Only <code>Window.onResize</code> exists in the specification, but you can always utilize <code>IFrame</code> to generate new <code>Window</code> object inside your DIV.</p>\n\n<p>Please check this <a href=\"http://stackoverflow.com/a/25761882/3346797\">answer</a>. There is a new little <a href=\"https://github.com/rbtbar/jquery-element-onresize\" rel=\"nofollow\">jquery plugin</a>, that is portable and easy to use. You can always check the source code to see how it's done.</p>\n\n<pre><code>&lt;!-- (1) include plugin script in a page --&gt;\n&lt;script src=\"/src/jquery-element-onresize.js\"&gt;&lt;/script&gt;\n\n// (2) use the detectResizing plugin to monitor changes to the element's size:\n$monitoredElement.detectResizing({ onResize: monitoredElement_onResize });\n\n// (3) write a function to react on changes:\nfunction monitoredElement_onResize() {    \n    // logic here...\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've the following sample html, there is a DIV which has 100% width. It contains some elements. While performing windows re-sizing, the inner elements may be re-positioned, and the dimension of the div may change. I'm asking if it is possible to hook the div's dimension change event? and How to do that? I currently bind the callback function to the jQuery resize event on the target DIV, however, no console log is outputted, see below:</p>\n\n<p><img src=\"http://i.stack.imgur.com/tswO6.png\" alt=\"Before Resize\">\n<img src=\"http://i.stack.imgur.com/dYrFM.png\" alt=\"enter image description here\"></p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;script type=\"text/javascript\" language=\"javascript\" src=\"http://code.jquery.com/jquery-1.6.1.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n            $('#test_div').bind('resize', function(){\n                console.log('resized');\n            });\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"test_div\" style=\"width: 100%; min-height: 30px; border: 1px dashed pink;\"&gt;\n        &lt;input type=\"button\" value=\"button 1\" /&gt;\n        &lt;input type=\"button\" value=\"button 2\" /&gt;\n        &lt;input type=\"button\" value=\"button 3\" /&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1410360729,
            "question_id": 6492683,
            "score": 34,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "How to detect DIV&#39;s dimension changed?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Ignore me. I'm sorry everyone. I'd mistyped the url of the script. Thanks to Simon Ainley for the prod in the right direction.</p>\n\n<p>Sorry again. Thanks.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>I had this problem, or one that looked superficially similar, yesterday.  It turned out that I wasn't being careful when mixing jQuery and prototype. I found several solutions at <a href=\"http://docs.jquery.com/Using_jQuery_with_Other_Libraries\">http://docs.jquery.com/Using_jQuery_with_Other_Libraries</a>. I opted for</p>\n\n<pre><code>var $j = jQuery.noConflict();\n</code></pre>\n\n<p>but there are other reasonable options described there.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>This problem can also arise if you include jQuery more than once.</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>For anyone else arriving at this question:</p>\n\n<p>I was performing the most simple jQuery, trying to hide an element:</p>\n\n<pre><code>('#fileselection').hide();\n</code></pre>\n\n<p>and I was getting the same type of error, \"<strong>Uncaught TypeError: Object #fileselection has no method 'hide'</strong> </p>\n\n<p>Of course, now it is obvious, but I just left off the jQuery indicator '$'.  The code should have been:</p>\n\n<pre><code>$('#fileselection').hide();\n</code></pre>\n\n<p>This fixes the no-brainer problem.  I hope this helps someone save a few minutes debugging!</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>This problem may also come up if you include different versions of jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This usually has to do with a selector not being used properly. Check and make sure that you are using the jQuery selectors like intended. For example I had this problem when creating a click method:</p>\n\n<pre><code>$(\"[editButton]\").click(function () {\n    this.css(\"color\", \"red\");\n});\n</code></pre>\n\n<p>Because I was not using the correct selector method $(this) for jQuery it gave me the same error.</p>\n\n<p>So simply enough, check your selectors!</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I've tried a veriety of jQuery plugins recently and I keep getting this error \u2026</p>\n\n<p><img src=\"http://shaunbellis.co.uk/stackoverflow/jserror.png\" alt=\"has no method\"></p>\n\n<p>\u2026 regardless of what plugin I try to use.</p>\n\n<p>I've checked the links to the JS files which are all there and working fine. I'm using Drupal if that makes any difference.</p>\n\n<p>I've run the plugins away from the main site to demonstrate that they are working and that I am doing things right with 100% success.</p>\n\n<p>Any ideas?</p>\n\n<p>Update:</p>\n\n<p>My jQuery file called in the footer:</p>\n\n<pre><code>$(document).ready(function() {          \n\n$('#footer_holder').hide();\n\n// Fancy Box\n$(\"a.fancybox\").fancybox({\n    'hideOnContentClick': true,\n    'titlePosition' : 'over',\n    'transitionIn'  :   'elastic',\n    'transitionOut' :   'elastic',\n    'speedIn'       :   600, \n    'speedOut'      :   200, \n    'overlayShow'   :   false,\n});\n\n$(\"#homepage_slider\").easySlider({\n    auto: true, \n    continuous: true,\n});\n</code></pre>\n\n<p>});</p>\n\n<p>*note - fancy box works fine (unless the easySlider code is above it). jQuery is sorted out by Drupal. I'm running version 1.4</p>\n",
            "last_activity_date": 1360539644,
            "question_id": 2988485,
            "score": 33,
            "tags": [
                "javascript",
                "jquery",
                "drupal",
                "slider"
            ],
            "title": "jQuery issue - #&lt;an Object&gt; has no method"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>All modern browsers but IE.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The <a href=\"http://en.wikipedia.org/wiki/JavaScript\">JavaScript</a> article of Wikipedia lists the JS versions by browser. forEach is <a href=\"http://developer.mozilla.org/en/New_in_JavaScript_1.6\">part of JavaScript 1.6</a>. So it is supported indeed by most browsers, except Opera 9.02 (which I just tested). Opera 9.5 (which I just installed!) supports it, along with indexOf for Array.</p>\n\n<p>Surprisingly, it is not official. I don't see its support in the page <a href=\"http://www.opera.com/docs/specs/opera95/js/ecma/\">ECMAScript support in Opera 9.5</a>. Perhaps it is an overlook or perhaps only a partial support they don't want to advertise.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>The Microsoft AJAX client library adds this to the Array prototype so if you have that client library in your site then you'll have it for sure.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since IE doesn't support it (not even v8), I use jQuery.each() -- <a href=\"http://docs.jquery.com/Utilities/jQuery.each\">http://docs.jquery.com/Utilities/jQuery.each</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>If you need all browsers to support this and other JavaScript 1.6 to 1.8 functions, I would suggest using the customizable <a href=\"http://jpaq.org/\" rel=\"nofollow\" title=\"jPaq\">jPaq</a> library.  The functions are implemented in the way that was suggested by Mozilla.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just checked this for another question: <a href=\"http://stackoverflow.com/questions/242841/javascript-foreach-vs-for/6442930#6442930\">JavaScript foreach Vs for</a>.</p>\n\n<p>On kangax's <a href=\"http://kangax.github.com/es5-compat-table/\">ECMAScript 5 compatibility table</a>, Array.forEach gets a 'yes' for all browsers except IE8. </p>\n\n<p>As of September 2011, IE browser share on desktop devices is <a href=\"http://en.wikipedia.org/wiki/Usage_share_of_web_browsers#Summary_table\">less than 40%</a>, and <a href=\"http://marketshare.hitslink.com/browser-market-share.aspx?qprid=2&amp;qpcustomd=0\">at least 8% of browsers are IE 9</a>. </p>\n\n<p>In other words, Array.forEach is now supported by around 70% of desktop browsers. Obviously, this figure varies considerably, depending on territory and other factors -- some regions or countries (such as Brasil) have a higher proportion of Chrome users, for example, and some (such as China) have far more users on IE6 and IE8.</p>\n\n<p>I haven't checked, but mobile support (on WebKit and Opera browsers) may be even higher.</p>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>Which browsers other than Firefox support Array.forEach()?  <a href=\"http://developer.mozilla.org/En/Core_JavaScript_1.5_Reference:Objects:Array:forEach#Compatibility\">Mozilla say it's an extension to the standard</a> and I realise it's trivial to add to the array prototype, I'm just wondering what other browsers support it?</p>\n",
            "last_activity_date": 1315913883,
            "question_id": 156696,
            "score": 29,
            "tags": [
                "javascript",
                "cross-browser"
            ],
            "title": "Which web browsers natively support Array.forEach()"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Your only option is to somehow clone the object.</p>\n\n<p>See <a href=\"http://stackoverflow.com/questions/122102/most-efficient-way-to-clone-an-object\">this stackoverflow question</a> on how you can achieve this.</p>\n\n<p>For simple JSON objects, the simplest way would be:</p>\n\n<pre><code>var newObject = JSON.parse(JSON.stringify(oldObject));\n</code></pre>\n\n<p>if you use jQuery, you can use: </p>\n\n<pre><code>// Shallow copy\nvar newObject = jQuery.extend({}, oldObject);\n\n// Deep copy\nvar newObject = jQuery.extend(true, {}, oldObject);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>I've found that the following works if you're not using jQuery:</p>\n\n<pre><code>JSON.parse(JSON.stringify(json_original));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 40
                }
            ],
            "body": "<p>I wrote a quick jsfiddle <a href=\"http://jsfiddle.net/4VPZJ/1/\">here</a>, where I pass a small json object to a new variable and modify the data from the original variable (not the new variable), but the new variable's data get's update aswell. This must mean that the json object was passed by reference?</p>\n\n<p>Here is my quick code:</p>\n\n<pre><code>var json_original = {one:'one', two:'two'}\n\nvar json_new = json_original;\n\nconsole.log(json_original); //one, two\nconsole.log(json_new); //one, two\n\njson_original.one = 'two';\njson_original.two = 'one';\n\nconsole.log(json_original); //two, one\nconsole.log(json_new); //two, one\n</code></pre>\n\n<p>Is there a way to make a hard copy of a json object so that modifying the original variable won't modify the new variable?</p>\n",
            "last_activity_date": 1389964889,
            "question_id": 18359093,
            "score": 26,
            "tags": [
                "javascript",
                "javascript-objects"
            ],
            "title": "How to copy JavaScript object to new variable NOT by reference?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>No, generally speaking email readers do not allow javascript.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>For most mail clients, no.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Javascript is not supported in emails.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It may be, but mail clients won't read it &amp; mail servers may reject it. So leave it out.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You aren't going to get executable JavaScript onto a server and into a mail client. But emails DO support links, you can always link to your content within an email.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"http://en.wikipedia.org/wiki/Comparison_of_e-mail_clients\">http://en.wikipedia.org/wiki/Comparison_of_e-mail_clients</a></p>\n\n<p>Louts notes, Mozilla Thunderbird, Outlook Express and Windows Live Mail all seem to support some sort of JavaScript execution.  Nothing else does.  It seems like a bad idea security-wise, so I would expect this to be a feature that won't always be there even in these clients.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>Is JavaScript supported in an email message?</p>\n",
            "last_activity_date": 1276700401,
            "question_id": 3054315,
            "score": 25,
            "tags": [
                "javascript",
                "email"
            ],
            "title": "Is JavaScript supported in an email message?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>OK. I found the problem by interpreting <a href=\"http://api.jquery.com/data/#data-html5\">jQuery docs</a>.</p>\n\n<p>When you write:</p>\n\n<pre><code>$embellishment.data(\"embellishmentId\");\n</code></pre>\n\n<p>it is handled by jQuery as compound attribute:</p>\n\n<pre><code>&lt;div data-embellishment-id=\"3\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>So, to solve the problem you can use lower case in the data key otherwise it just addresses the different attribute.</p>\n\n<pre><code>&lt;!-- HTML --&gt;\n&lt;div data-embellishmentid=\"3\"&gt;&lt;/div&gt;\n\n// JavaScript\n$embellishment.data(\"embellishmentid\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 42
                }
            ],
            "body": "<p>I have the following code:</p>\n\n<pre><code>alert($embellishment.data(\"embellishmentId\"));\nalert($embellishment.attr(\"data-embellishmentId\"));\n</code></pre>\n\n<p>The first alert returns <code>undefined</code>, whereas the second alert returns an integer, <code>3</code>.</p>\n\n<p><a href=\"http://jsfiddle.net/6Pdj6/\"><strong>-- SEE DEMO --</strong></a></p>\n\n<p>I'm using jQuery version 1.7.2 (<code>data</code> was added with version 1.4 I believe)</p>\n\n<p>Why is this? Should I be using <code>data()</code> at all if its not returning the right values?</p>\n",
            "last_activity_date": 1339491017,
            "question_id": 10992984,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "jquery-attributes"
            ],
            "title": "jQuery data() returns undefined, attr() returns integer"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Set them to <code>visibility:hidden</code> and <code>position:absolute</code> instead. The fields will not be sent to the server with <code>display:none</code>, but will be with <code>visibility:hidden</code>. By also toggling \"position\" to \"absolute\" you should get the same visual effect.</p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>Just to add something to the answer above. If you want to use <code>slideDown()</code> - just before it set the css of the element like this:</p>\n\n<pre><code>$('element')\n    .css({\n        display: 'none'\n        position: 'relative',\n        visibility: 'visible'\n    })\n    .slideDown();\n</code></pre>\n\n<p>And <code>slideDown()</code> will work just fine. You can use the same logic for <code>slideUp()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a long form that I've broken up into 6 steps. When the form is loaded, all of the steps are loaded, but only the first step is visible. The rest have CSS of <code>display:none</code> so they are hidden.  As a step is completed and validated with Javascript, the current step is set to <code>display:none</code> and the new step is set to <code>display:block</code>.  On the final step, the user submits the form.  However, as expected, only the fields in <code>display:block</code> element on the page are submitted. All the completed fields in the elements with <code>display:none</code> are ignored.</p>\n\n<p>Is there a way to submit the fields inside the <code>display:none</code> elements?</p>\n\n<p>If not, is there another way to achieve the same effect?</p>\n",
            "last_activity_date": 1418196792,
            "question_id": 8318428,
            "score": 22,
            "tags": [
                "javascript",
                "css",
                "forms"
            ],
            "title": "Submit form fields inside display:none element"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><a href=\"https://github.com/browserstate/history.js\" rel=\"nofollow\">History.js</a> </p>\n\n<p>Quote from the repo:</p>\n\n<blockquote>\n  <p>History.js gracefully supports the HTML5 History/State APIs (pushState, replaceState, onPopState) in all browsers. Including continued support for data, titles, replaceState. Supports jQuery, MooTools and Prototype. For HTML5 browsers this means that you can modify the URL directly, without needing to use hashes anymore. For HTML4 browsers it will revert back to using the old onhashchange functionality. </p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>As per Ember documentation about history api:\n<a href=\"http://emberjs.com/api/classes/Ember.Location.html\" rel=\"nofollow\">http://emberjs.com/api/classes/Ember.Location.html</a></p>\n\n<p>Browsers that support the history API will use HistoryLocation, those that do not, but still support the hashchange event will use HashLocation, and in the rare case neither is supported will use NoneLocation.</p>\n\n<pre><code>App.Router.map(function() {\n  this.resource('posts', function() {\n    this.route('new');\n  });\n});\n\nApp.Router.reopen({\n  location: 'auto'\n});\n</code></pre>\n\n<p>This will result in a posts.new url of /posts/new for modern browsers that support the history api or /#/posts/new for older ones, like Internet Explorer 9 and below.</p>\n\n<p>When a user visits a link to your application, they will be automatically upgraded or downgraded to the appropriate Location class, with the URL transformed accordingly, if needed.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Is there any way to use HTML5 History API (<code>pushState</code>) in IE9?\nIf there is a solution for all other browsers that would be great!</p>\n",
            "last_activity_date": 1405333393,
            "question_id": 5527617,
            "score": 22,
            "tags": [
                "javascript",
                "html5",
                "pushstate"
            ],
            "title": "Using HTML5 pushState() in IE9"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Simple answer is no. Thats the only way to do it that I know of.\nYou can probably wrap into a function that you can reuse many times.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Unfortunately there is no better way, but instead of reinventing the wheel, you could use a library to deal with parsing and formatting dates: <a href=\"http://www.datejs.com/\">Datejs</a></p>\n\n<p><code>&lt;plug class=\"shameless\"&gt;</code></p>\n\n<p>Or, if you find format specifiers ugly and hard to decipher, <a href=\"http://blog.magnetiq.com/post/497609110/javascript-date-formatting-an-unorthodox-way\">here's a concise formatting implementation</a> that allows you to use human-readable format specifiers (namely, <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date#Date_instances\">the Date instance getters</a> themselves):</p>\n\n<pre><code>date.format(\"{Month:2}-{Date:2}-{FullYear}\"); // mm-dd-yyyy\n</code></pre>\n\n<p><code>&lt;/plug&gt;</code></p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>There is nothing built in, but consider using this if you are already using jQuery (and if not, then you should consider that as well!)</p>\n\n<ul>\n<li><a href=\"http://plugins.jquery.com/project/jquery-dateFormat\" rel=\"nofollow\">http://plugins.jquery.com/project/jquery-dateFormat</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://www.datejs.com/\" rel=\"nofollow\">date.js</a> is what you need. For example, snippet below is to convert a date to string as Java style</p>\n\n<pre><code>new Date().toString('M/d/yyyy')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>function appendZeros(value,digits){\n    var c= 1;\n    initValue = value;\n    for(i=0;i&lt;digits-1;i++){\n        c = c*10;\n        if( initValue &lt; c ){\n            value = '0' + value;\n        }\n    }\n    return value;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>function dateNow(splinter){\n  var set = new Date(); \n  var getDate = set.getDate().toString();\n  if (getDate.length == 1){ //example if 1 change to 01\n   getDate = \"0\"+getDate;\n  }\n  var getMonth = (set.getMonth()+1).toString();\n  if (getMonth.length == 1){\n   getMonth = \"0\"+getMonth;\n  }\n  var getYear = set.getFullYear().toString();\n  var dateNow = getMonth +splinter+ getDate +splinter+ getYear; //today\n  return dateNow;\n}\n</code></pre>\n\n<p>format this function is mm dd yyyy\nand the dividing you can choice and replace if you want... for example\ndateNow(\"/\") you will get 12/12/2014</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to get today's date in the format of mm-dd-yyyy</p>\n\n<p>I am using <code>var currentDate = new Date();\ndocument.write(currentDate);\n</code></p>\n\n<p>I can't figure out how to format it. </p>\n\n<p>I saw the examples <code>var currentTime = new Date(YY, mm, dd);</code> and <code>currentTime.format(\"mm/dd/YY\");</code></p>\n\n<p>Both of which don't work</p>\n\n<p>I finally got a properly formatted date using </p>\n\n<pre><code>var today = new Date();\nvar dd = today.getDate();\nvar mm = today.getMonth()+1;//January is 0!`\n\nvar yyyy = today.getFullYear();\nif(dd&lt;10){dd='0'+dd}\nif(mm&lt;10){mm='0'+mm}\nvar today = mm+'/'+dd+'/'+yyyy;\ndocument.write(today);'`\n</code></pre>\n\n<p>This seems very complex for such a simple task.</p>\n\n<p>Is there a better way to get today's date in <code>dd/mm/yyyy</code>?</p>\n",
            "last_activity_date": 1418866253,
            "question_id": 4929258,
            "score": 21,
            "tags": [
                "javascript",
                "date"
            ],
            "title": "Javascript get date in format"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>To do it without using a JavaScript library such as jQuery, you'd do it like this:</p>\n\n<pre><code>var span = document.getElementById(\"myspan\"),\n    text = document.createTextNode(''+intValue);\nspan.innerHTML = ''; // clear existing\nspan.appendChild(text);\n</code></pre>\n\n<p>If you do want to use jQuery, it's just this:</p>\n\n<pre><code>$(\"#myspan\").text(''+intValue);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The Maximally Standards Compliant way to do it is to create a text node containing the text you want and append it to the span (removing any currently extant text nodes).</p>\n\n<p>The way I would actually do it is to use jQuery's <code>.text()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is standards compliant and cross-browser safe.</p>\n\n<p><strong>Example:</strong> <a href=\"http://jsfiddle.net/kv9pw/\">http://jsfiddle.net/kv9pw/</a></p>\n\n<pre><code>var span = document.getElementById('someID');\n\nwhile( span.firstChild ) {\n    span.removeChild( span.firstChild );\n}\nspan.appendChild( document.createTextNode(\"some new content\") );\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>With modern browsers, you can set the <code>textContent</code> property, see <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node.textContent\" rel=\"nofollow\">Node.textContent</a>:</p>\n\n<pre><code>var span = document.getElementById(\"myspan\");\nspan.textContent = \"some text\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>In a webpage I am calling a WebService that gives me an integer value.  I need to display this value in a block of text.  I am currently using an HTML <code>&lt;span&gt;</code>.</p>\n\n<p>So far, I've found two methods of putting my value in a span.  <code>innerText()</code> is an IE proprietary way of doing it and <code>innerHTML()</code> is a non-standards compliant way, although widely supported.</p>\n\n<p>What is the correct standards compliant way of setting the text between <code>&lt;span&gt;</code> and <code>&lt;/span&gt;</code> from Javascript?</p>\n",
            "last_activity_date": 1397052180,
            "question_id": 4784568,
            "score": 21,
            "tags": [
                "javascript",
                "dhtml",
                "html"
            ],
            "title": "Set content of HTML &lt;span&gt; with Javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>In almost any language, one can use max twice:</p>\n\n<pre><code>Math.max(num1, Math.max(num2, num3))\n</code></pre>\n\n<p>As @CMS points out, JavaScript specifically allows an arbitrary number of parameters to Math.max:</p>\n\n<pre><code>Math.max(num1, num2, num3);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>The <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Global%5FObjects/Math/max\">Math.max</a> function can accept any arbitrary number of arguments:</p>\n\n<p>Syntax:</p>\n\n<pre><code>Math.max([value1[,value2[, ...]]])\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var max = Math.max(num1, num2, num3);\n</code></pre>\n\n<p>For example:</p>\n\n<pre><code>alert(Math.max(1,2,3,4,5,6)); // alerts 6\n</code></pre>\n\n<p>You could even use it to get the maximum value of an array of numbers as <a href=\"http://stackoverflow.com/questions/1418569/javascript-max-function-for-3-numbers/1418586#1418586\">@Pascal MARTIN</a> suggest, with the help of <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Global%5FObjects/Function/apply\">apply</a>:</p>\n\n<pre><code>Array.prototype.max = function () {\n    return Math.max.apply(Math, this);\n};\n\n\nvar max = [1,2,3,4,5,6].max(); // 6\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 74
                },
                {
                    "body": "<p>Push your values into an array <code>arr</code> and use <code>Math.min.apply(null, arr)</code> or <code>Math.max.apply(null, arr)</code> for maximum and minimum values respectively:</p>\n\n<pre><code>var arr = [];\narr.push(value1);\narr.push(value2);\narr.push(value3);\n\nvar minValue = Math.min.apply(null, arr);\nvar maxValue = Math.max.apply(null, arr);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code> var numbers = [2,3,1];\n numbers.sort(function(a,b){return b-a});\n console.log(\"max number is\", numbers[0]); // max number is 3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to find the highest number from 3 different numbers. The only thing I've found is max() but you can only use 2 numbers.</p>\n\n<p>Whats the best way?</p>\n",
            "last_activity_date": 1386755478,
            "question_id": 1418569,
            "score": 21,
            "tags": [
                "javascript",
                "math",
                "max"
            ],
            "title": "Javascript max() function for 3 numbers"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Add the following to your web.config:</p>\n\n<pre><code>&lt;system.webServer&gt;\n  &lt;security&gt;\n    &lt;requestFiltering&gt;\n      &lt;requestLimits maxQueryString=\"nnn\"/&gt;\n    &lt;/requestFiltering&gt;\n  &lt;/security&gt;\n&lt;/system.webServer&gt;\n</code></pre>\n\n<p>See:</p>\n\n<p><a href=\"http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/requestLimits\">http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/requestLimits</a></p>\n\n<p><strong>Updated to reflect comments.</strong></p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/ms689462%28v=vs.90%29.aspx\">requestLimits Element for requestFiltering [IIS Settings Schema]</a></p>\n\n<p>You may have to add the following in your web.config as well</p>\n\n<pre><code> &lt;httpRuntime maxQueryStringLength=\"32768\" maxUrlLength=\"65536\"/&gt;\n</code></pre>\n\n<p>See: <a href=\"http://msdn.microsoft.com/en-us/library/e1f13641%28v=vs.100%29.aspx\">httpRuntime Element (ASP.NET Settings Schema)</a></p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>In my case ( Visual Studio 2012 / IIS Express / ASP.NET MVC 4 app / .Net Framework 4.5 ) what really worked after 30 minutes of trial and error was setting the <code>maxQueryStringLength</code> property in the <code>&lt;httpRuntime&gt;</code> tag:</p>\n\n<pre><code>&lt;httpRuntime targetFramework=\"4.5\" maxQueryStringLength=\"10240\" enable=\"true\" /&gt;\n</code></pre>\n\n<p><code>maxQueryStringLength</code> defaults to <code>2048</code>.</p>\n\n<p>More about it here:</p>\n\n<p><a href=\"http://www.asp.net/whitepapers/aspnet4#0.2__Toc253429244\">Expanding the Range of Allowable URLs</a></p>\n\n<hr>\n\n<p>I tried setting it in <code>&lt;system.webServer&gt;</code> as <a href=\"http://stackoverflow.com/a/11636484/114029\">@MattVarblow</a> suggests, but it didn't work... and this is because I'm using IIS Express (based on IIS 8) on my dev machine with Windows 8.</p>\n\n<p>When I deployed my app to the production environment (Windows Server 2008 R2 with IIS 7), IE 10 started returning 404 errors in AJAX requests with long query strings. Then I thought that the problem was related to the query string and tried @MattVarblow's answer. It just worked on IIS 7. :)</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>HTTP Error 404.15 - Not Found\nThe request filtering module is configured to deny a request where the query string is too long.</p>\n\n<p>To Resolve this problem first we should check In Source Code whether the Form Tag is having a property \"method\" is get/set state.</p>\n\n<p>we should remove that \"method\" property first.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am building a site in which i would like to create a file client side from the value of a textarea element.</p>\n\n<p>I have the code in place to do this, but i am getting this error</p>\n\n<pre><code>HTTP Error 404.15 - Not Found\nThe request filtering module is configured to deny a request where the query string is too long.\n</code></pre>\n\n<p>Is there a way to override this so that I am able to process requests of any size?</p>\n\n<p>If not, is there a way to generate files client side without using the filesystem/active x object?</p>\n\n<p>thanks</p>\n",
            "last_activity_date": 1400043172,
            "question_id": 11636386,
            "score": 20,
            "tags": [
                "c#",
                "javascript",
                "asp.net-mvc",
                "web-config",
                "query-string"
            ],
            "title": "How to configure the web.config to allow requests of any length"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Use either JavaScript or jQuery for this. </p>\n\n<p><strong>Using JavaScript</strong></p>\n\n<pre><code>&lt;script&gt;\nfunction val() {\nd = document.getElementById(\"select_id\").value;\nalert(d);\n}\n&lt;/script&gt;\n\n&lt;select onchange=\"val()\" id=\"select_id\"&gt;\n</code></pre>\n\n<p><strong>Using jQuery</strong> </p>\n\n<pre><code>$('#select_id').change(function(){\nalert($(this).val());\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>Use </p>\n\n<pre><code>document.getElementById(\"select_id\").selectedIndex\n</code></pre>\n\n<p>Or to get the Options value:</p>\n\n<p>d<code>ocument.getElementById(\"select_id\").value</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>&lt;script&gt;\nfunction test(a) {\nvar x = a.selectedIndex;\nalert(x);\n}\n&lt;/script&gt;\n&lt;select onchange=\"test(this)\" id=\"select_id\"&gt;\n            &lt;option value=\"0\"&gt;-Select-&lt;/option&gt;\n            &lt;option value=\"1\"&gt;Communication&lt;/option&gt;\n            &lt;option value=\"2\"&gt;Communication&lt;/option&gt;\n            &lt;option value=\"3\"&gt;Communication&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>in the alert you'll see the INT value of the selected index, treat the selection as an array and you'll get the value</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;script&gt;\nfunction test(a) {\nvar x = (a.value || a.options[a.selectedIndex].value);  //crossbrowser solution =)\nalert(x);\n}\n&lt;/script&gt;\n\n\n&lt;select onchange=\"test(this)\" id=\"select_id\"&gt;\n        &lt;option value=\"0\"&gt;-Select-&lt;/option&gt;\n        &lt;option value=\"1\"&gt;Communication&lt;/option&gt;\n        &lt;option value=\"2\"&gt;Communication&lt;/option&gt;\n        &lt;option value=\"3\"&gt;Communication&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>No need for an onchange function. You can grab the value in one line:</p>\n\n<pre><code>document.getElementById(\"select_id\").options[document.getElementById(\"select_id\").selectedIndex].value;\n</code></pre>\n\n<p>Or, split it up for better readability:</p>\n\n<pre><code>var select_id = document.getElementById(\"select_id\");\n\nselect_id.options[select_id.selectedIndex].value;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<pre><code>            &lt;select onchange=\"test()\" id=\"select_id\"&gt;\n            &lt;option value=\"0\"&gt;-Select-&lt;/option&gt;\n            &lt;option value=\"1\"&gt;Communication&lt;/option&gt;\n            &lt;/select&gt;\n</code></pre>\n\n<p>I need to get the value of the selected option in javascript: does anyone know how to get the selected value or text, please tell how to write a function for it. I have assigned onchange() function to select so what do i do after that?</p>\n",
            "last_activity_date": 1383134848,
            "question_id": 5416767,
            "score": 20,
            "tags": [
                "javascript"
            ],
            "title": "javascript selected value"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>var re = new RegExp(\"/\\b\"+test+\"\\b/\"); \n</code></pre>\n\n<p><code>\\b</code> in a string literal is a backspace character. When putting a regex in a string literal you need one more round of escaping:</p>\n\n<pre><code>var re = new RegExp(\"\\\\b\"+test+\"\\\\b\"); \n</code></pre>\n\n<p>(You also don't need the <code>//</code> in this context.)</p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>you can use</p>\n\n<pre><code>/(^|,)52(,|$)/.test('51,52,53')\n</code></pre>\n\n<p>but i suggest to use</p>\n\n<pre><code>var list = '51,52,53';\nfunction test2(list, test){\n    return !((\",\"+list+\",\").indexOf(\",\"+test+\",\") === -1)\n}\nalert( test2(list,52) )\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How to create regex pattern which is concatenate with variable, something like this:</p>\n\n<pre><code>var test =\"52\";\nvar re = new RegExp(\"/\\b\"+test+\"\\b/\"); \nalert('51,52,53'.match(re));\n</code></pre>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1272280372,
            "question_id": 2712878,
            "score": 19,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "javascript regex pattern concatenate with variable"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Firefox doesn't support backgroundPositionX, but it does support <a href=\"https://developer.mozilla.org/en/docs/CSS/background-position\">background position</a></p>\n\n<p>So we can do something like this:</p>\n\n<pre><code>psy.style.backgroundPosition = x+'px 0';\n</code></pre>\n\n<p>This sets the background position, X first, then Y.</p>\n\n<p>Working example <a href=\"http://jsfiddle.net/74RZb/2/\">here</a></p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>This worked for me. <code>NX</code> is number of pixels in axis X and <code>NY</code> in axis Y.</p>\n\n<pre><code>background-position: calc(NXpx) NYpx;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Background position-x can work in firefox you just have to specify a fixed background-y position.  Here is a function I wrote to move a ribbon from left to right.  At first it did not work when there was just a position-x specification, well it worked in IE but not FF.  This was my solution.  It is the actual code with comments from my site that works in both IE and FF:</p>\n\n<pre><code>   //starts ribbon motion at bottom of animation div \n    function startMotion() {\n        var ribbonMove = setInterval(function () { ribbonMotion() }, 50);\n        var x = 0;\n        var cycles = 0;\n\n        function ribbonMotion() {\n            //background position moves on the x plane and is fixed at 0 on the y plane (single plane specification does not work in FF)\n            document.getElementById(\"ribbon\").style.backgroundPosition = x + \"px\" + \" \" + 0 + \"px\";\n            x++;\n            if (x == 800 || x==1600 || x==2400 ||x==3200) {\n                cycles++;\n\n              //sets number of cycles before motion stops (max 4 cycles)  \n            }\n            if (cycles == 3) {\n                clearInterval(ribbonMove);\n            }\n        }\n    }  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can do something like this</p>\n\n<p>First install jquery migration</p>\n\n<p><a href=\"https://github.com/jquery/jquery-migrate/#readme\" rel=\"nofollow\">https://github.com/jquery/jquery-migrate/#readme</a></p>\n\n<p>Include these on your html</p>\n\n\n\n\n\n<p>The $.browser property allows you to target browsers you want to apply your style into</p>\n\n<p>In this case for background-position can be changed to property supported backgroundPosition</p>\n\n<p>Available flags are - webkit\n- safari - opera - msie (for IE) - mozilla</p>\n\n<p>Example for IE or Firefox</p>\n\n<pre><code>if ( $.browser.msie || $.browser.mozilla) {\n        $(\".element\").css('backgroundPosition', position + \"px 0\");                \n}\n</code></pre>\n\n<p>for chrome</p>\n\n<pre><code>if ( $.browser.webkit) {\n        $(\".element\").css('backgroundPosition', position + \"px 0\");                \n}\n</code></pre>\n\n<p>I got mine working and for all IE </p>\n\n<p>Cheers</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have play with youtube's sprite animation but there is a problem. It won't work under Firefox (but works on Chrome and IE8)...\nThis is the code : <a href=\"http://goo.gl/4IxkI\">http://goo.gl/4IxkI</a>  </p>\n\n<p>Extra info: the problem is that under firefox It doesn't change the background position (won't play the animation)... there are no errors, just doesn't change the background position.</p>\n\n<p>Will apreciate help - thanks</p>\n",
            "last_activity_date": 1418275832,
            "question_id": 13948617,
            "score": 18,
            "tags": [
                "javascript",
                "css",
                "firefox",
                "animation",
                "background-position"
            ],
            "title": "backgroundPositionX not working on Firefox"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Since you're using jQuery, stop binding event handlers in your HTML, and start writing unobtrusive JavaScript.</p>\n\n<pre><code>$(document).ready(function ()\n{\n    function myfunction(me)\n    {\n        $(me).fancybox({\n            'autoScale': true,\n            'transitionIn': 'elastic',\n            'transitionOut': 'elastic',\n            'speedIn': 500,\n            'speedOut': 300,\n            'autoDimensions': true,\n            'centerOnScroll': true // remove the trailing comma!!\n        }).click();\n        // fire the click event after initializing fancybox on this element\n        // this should open the fancybox\n    }\n\n    // use .one() so that the handler is executed at most once per element\n    $('a[href=#modalMine]').one('click', function ()\n    {\n        myfunction(this);\n        return false;\n    });\n});\n</code></pre>\n\n<p>However, I don't particularly see a reason for setting up the fancybox on click. You could just do this instead:</p>\n\n<pre><code>$(document).ready(function ()\n{\n    function myfunction()\n    {\n        // note the use of \"this\" rather than a function argument\n        $(this).fancybox({\n            'autoScale': true,\n            'transitionIn': 'elastic',\n            'transitionOut': 'elastic',\n            'speedIn': 500,\n            'speedOut': 300,\n            'autoDimensions': true,\n            'centerOnScroll': true\n        });\n    }\n\n    $('a[href=#modalMine]').each(myfunction);\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/mattball/pyL2X/\" rel=\"nofollow\">Basic demo (no images) &#x2192;</a></p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>You don't have to add you own <code>click</code> event handler at all. Just initialize the element with fancybox:</p>\n\n<pre><code>$(function() {\n    $('a[href=\"#modalMine\"]').fancybox({\n        'autoScale': true,\n        'transitionIn': 'elastic',\n        'transitionOut': 'elastic',\n        'speedIn': 500,\n        'speedOut': 300,\n        'autoDimensions': true,\n        'centerOnScroll': true  // as MattBall already said, remove the comma\n    });\n});\n</code></pre>\n\n<p>Done. Fancybox already binds a <code>click</code> handler that opens the box. <a href=\"http://fancybox.net/howto\">Have a look at the HowTo section.</a></p>\n\n<hr>\n\n<p>Later if you want to open the box programmatically, raise the <code>click</code> event on that element:</p>\n\n<pre><code>$('a[href=\"#modalMine\"]').click();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The answers seems a bit over complicated. I hope I didn't misunderstand the question. </p>\n\n<p>If you simply want to open a fancy box from a click to an \"A\" tag. Just set your html to</p>\n\n<pre><code>&lt;a id=\"my_fancybox\" href=\"#contentdiv\"&gt;click me&lt;/a&gt;\n</code></pre>\n\n<p>The contents of your box will be inside of a div with id \"contentdiv\" and in your javascript you can initialize fancybox like this:</p>\n\n<pre><code>$('#my_fancybox').fancybox({\n    'autoScale': true,\n    'transitionIn': 'elastic',\n    'transitionOut': 'elastic',\n    'speedIn': 500,\n    'speedOut': 300,\n    'autoDimensions': true,\n    'centerOnScroll': true,\n});\n</code></pre>\n\n<p>This will show a fancybox containing \"contentdiv\" when your anchor tag is clicked.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you'd like to simply open a fancybox when a javascript function is called. Perhaps in your code flow and not as a result of a click. Here's how you do it:</p>\n\n<pre><code>function openFancybox() {\n  $.fancybox({\n     'autoScale': true,\n     'transitionIn': 'elastic',\n     'transitionOut': 'elastic',\n     'speedIn': 500,\n     'speedOut': 300,\n     'autoDimensions': true,\n     'centerOnScroll': true,\n     'href' : '#contentdiv'\n  });\n}\n</code></pre>\n\n<p>This creates the box using \"contentdiv\" and opens it.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>What you need is:</p>\n\n<pre><code>$.fancybox.open({ .... });\n</code></pre>\n\n<p>See the \"API methods\" section at the bottom of here:</p>\n\n<p><a href=\"http://fancyapps.com/fancybox/\">http://fancyapps.com/fancybox/</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Make argument object extends from <code>&lt;a&gt;</code> , \nand use <code>open</code> function of fancybox in click event via delegate.</p>\n\n<pre><code>    var paramsFancy={\n         'autoScale': true,\n         'transitionIn': 'elastic',\n         'transitionOut': 'elastic',\n         'speedIn': 500,\n         'speedOut': 300,\n         'autoDimensions': true,\n         'centerOnScroll': true,\n         'href' : '#contentdiv'\n      };\n\n    $(document).delegate('a[href=#modalMine]','click',function(){\n               /*Now you can call your function ,\n   you can change fields of paramsFancy via this function */\n                 myfunction(this);\n\n                paramsFancy.href=$(this).attr('href');\n                $.fancybox.open(paramsFancy);\n\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is working code as per the author's <a href=\"http://fancybox.net/blog\" rel=\"nofollow\">Tips &amp; Tricks</a> blog post, put it in document ready:</p>\n\n<pre><code>  $(\"#mybutton\").click(function(){\n    $(\".fancybox\").trigger('click');  \n  })\n</code></pre>\n\n<p>This triggers the smaller version of the currently displayed image or content, as if you had clicked on it manually. It avoids initializing the Fancybox again, but instead keeps the parameters you initialized it with on document ready. If you need to do something different when opening the box with a separate button compared to clicking on the box, you will need the parameters, but for many, this will be what they were looking for.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You do not have to trigger a click event, you can do it with fancybox type as ajax.</p>\n\n<p>$.fancybox.open({\n      href: \"http://........\",\n      type: 'ajax'\n});</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to open a fancybox from a function I have - in short my HTML code looks like this;</p>\n\n<pre><code>&lt;a href=\"#modalMine\" onclick=\"myfunction(this); return false;\"&gt;\n  click\n&lt;/a&gt;\n</code></pre>\n\n<p>and a part of my function looks like this;</p>\n\n<pre><code>function myfunction(me) {\n    $(me).fancybox({\n        'autoScale': true,\n        'transitionIn': 'elastic',\n        'transitionOut': 'elastic',\n        'speedIn': 500,\n        'speedOut': 300,\n        'autoDimensions': true,\n        'centerOnScroll': true,\n    });\n}\n</code></pre>\n\n<p>The above works in IE but not in FireFox or Chrome - any idea how I can fix this? I know that one why is to trigger another link, but I hope another solution is possible.</p>\n",
            "last_activity_date": 1414391920,
            "question_id": 5094233,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "fancybox"
            ],
            "title": "Open fancybox from function"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>array1_matches_array2 = array1.join() === array2.join(); // true\narray1_matches_array3 = array1.join() === array3.join(); // false\n</code></pre>\n\n<p>updated: default arg for join is \",\"</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Sort the arrays and then compare them.</p>\n\n<pre><code>array1.sort() == array2.sort();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -7
                },
                {
                    "body": "<p>You could compare String representations so:</p>\n\n<pre><code>array1.toString() == array2.toString()\narray1.toString() !== array3.toString()\n</code></pre>\n\n<p>but that would also make</p>\n\n<pre><code>array4 = ['1',2,3,4,5]\n</code></pre>\n\n<p>equal to array1 if that matters to you</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>So, what's wrong with checking each element iteratively?</p>\n\n<pre><code>function arraysEqual(arr1, arr2) {\n    if(arr1.length !== arr2.length)\n        return false;\n    for(var i = arr1.length; i--;) {\n        if(arr1[i] !== arr2[i])\n            return false;\n    }\n\n    return true;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                }
            ],
            "body": "<p>I want to check if the two arrays are identical\n(not content wise, but in exact order).</p>\n\n<p>For example:</p>\n\n<pre><code> array1 = [1,2,3,4,5]\n array2 = [1,2,3,4,5]\n array3 = [3,5,1,2,4]\n</code></pre>\n\n<p>Array 1 and 2 are identical but 3 is not.</p>\n\n<p>Is there a good way to do this in JavaScript?</p>\n",
            "last_activity_date": 1360834901,
            "question_id": 4025893,
            "score": 18,
            "tags": [
                "javascript",
                "arrays",
                "comparison"
            ],
            "title": "How to check identical array in most efficient way?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>There's been a \"port\" of the Java <code>BigDecimal</code> class (I think it's here: <a href=\"http://freshmeat.net/projects/js_bigdecimal/\" rel=\"nofollow\">http://freshmeat.net/projects/js_bigdecimal/</a> ) for a long time. I looked at it a long time ago and it seemed kind-of cumbersome and huge, but (if that's the one I'm thinking of) it's been used as part of some cryptography tools so there's a decent chance that it works OK.</p>\n\n<p>Because cryptography is a likely area to generate a need for such things, that's a good way to snoop around for such packages.</p>\n\n<p><strong>edit:</strong> Thanks @Daniel (comment to question) for this older SO question: <a href=\"http://stackoverflow.com/questions/744099/javascript-bigdecimal-library\">http://stackoverflow.com/questions/744099/javascript-bigdecimal-library</a></p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>As their author, I recommend <a href=\"https://github.com/MikeMcl/bignumber.js/\">bignumber.js</a> or <a href=\"https://github.com/MikeMcl/big.js\">big.js</a>, 'a small, fast Javascript library for arbitrary-precision arithmetic with decimal numbers'.</p>\n\n<p>For a more mature library, the <a href=\"https://github.com/dtrebbien/BigDecimal.js\">ICU4J BigDecimal</a> translation is also recommended.</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>Is there a mature library for doing decimal-based math, possibly arbitrary-precision, in JavaScript?</p>\n\n<p><strong>Edit:</strong> I want this information for a reference page on floating-point-related problems and alternatives to use when binary floating-point is inappropriate: <a href=\"http://floating-point-gui.de/\">http://floating-point-gui.de/</a></p>\n",
            "last_activity_date": 1352454934,
            "question_id": 2622144,
            "score": 18,
            "tags": [
                "javascript",
                "decimal",
                "bigdecimal"
            ],
            "title": "Is there a decimal math library for JavaScript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>From the mailing list I got an answer:</p>\n\n<blockquote>\n  <p>Have you by any chance configured your $locationProvider to\n  html5Mode? If yes this would cause your problems. You could force it\n  to always go to the url by adding target=\"_self\" to your  tag. Give\n  it a shot.</p>\n</blockquote>\n\n<p>I had configured to use HTML5 so adding the <code>target=\"_self\"</code> to the tag fixed the problem. Still researching why this works.</p>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>AngularJS suffers from a sparse documentation, I hope their gaining momentum will improve it. I think AngularJS is primarily intended as a <a href=\"http://en.wikipedia.org/wiki/Single-page_application\" rel=\"nofollow\">SPA</a>, and maybe the idea behind deactivating by default all a tags allows one to easily incorporate angular into some already existing html. </p>\n\n<p>This allows for quick refactoring of the default \"routing\" behaviour of a \"traditional\" website (well, script pages linked between each other) into the angular routing system, which is more of an MVC approach, better suited for Web Apps.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an index of objects returned from search. The template has an ng-repeat where the item's URL is constructed from data in the model but in the final markup the \"a\" tag does not work. The ng-href and href are correct, the URL bar changes when the link is clicked but the page does not load. Doing a browser refresh after the click does get the page. So something in Angular is changing the URL bar but not triggering a load???</p>\n\n<p>Can't make this reproduce in a jsfiddle because the problem seems to be in loading the json into the template after a $resource.query() function, which I can't do from a jsfiddle. With a simulated query loading static data the jsfiddle works even though the final markup looks identical. </p>\n\n<p>The AngularJS template looks like this:</p>\n\n<pre><code>&lt;div ng-controller=\"VideoSearchResultsCtrl\" class=\"row-fluid\"&gt;\n  &lt;div class=\"span12\" &gt;\n    &lt;div class=\"video_thumb\" ng-repeat=\"video in videos\"&gt;\n      &lt;p&gt;\n        &lt;a ng-href=\"/guides/{{video._id}}\" data-method=\"get\"&gt;\n          &lt;img ng-src=\"{{video.poster.large_thumb.url}}\"&gt;\n        &lt;/a&gt;\n      &lt;/p&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>The results look fine and produce the following final markup:</p>\n\n<pre><code>&lt;div ng-controller=\"VideoSearchResultsCtrl\" class=\"row-fluid ng-scope\"&gt;\n  &lt;div class=\"span12\"&gt;\n    &lt;!-- ngRepeat: video in videos --&gt;&lt;div class=\"video_thumb ng-scope\" ng-repeat=\"video in videos\"&gt;\n      &lt;p&gt;\n        &lt;a ng-href=\"/guides/5226408ea0eef2d029673a80\" data-method=\"get\" href=\"/guides/5226408ea0eef2d029673a80\"&gt;\n          &lt;img ng-src=\"/uploads/video/poster/5226408ea0eef2d029673a80/large_thumb_2101146_det.jpg\" src=\"/uploads/video/poster/5226408ea0eef2d029673a80/large_thumb_2101146_det.jpg\"&gt;\n        &lt;/a&gt;\n      &lt;/p&gt;\n    &lt;/div&gt;&lt;!-- end ngRepeat: video in videos --&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>The controller code is:</p>\n\n<pre><code>GuideControllers.controller('VideoSearchResultsCtrl', ['$scope', '$location', 'VideoSearch',\n    function($scope, $location, VideoSearch) {\n        $scope.videos = VideoSearch.query({ namespace: \"api\", resource: \"videos\", action: 'search', q: $location.search().q });\n    }\n]);\n</code></pre>\n\n<p>Using AngularJS 1.2-rc.3. I've also tried using an ng-click and regular old onclick to get a page loaded even with static URL but the clicks never trigger the code. BTW static non-angular links on this page do work, so the Menu Bar and Sign Out work.</p>\n\n<p>What have I done wrong here or is this a bug in AngularJS?</p>\n",
            "last_activity_date": 1391104336,
            "question_id": 19773682,
            "score": 17,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "AngularJS &lt;a&gt; tag links not working"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Try changing the <code>reset</code> function to use <a href=\"http://docs.angularjs.org/api/angular.copy\"><code>angular.copy</code></a></p>\n\n<pre><code>$scope.reset = function () {\n    $scope.datas = angular.copy($scope.initial);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>This is really a question about JavaScript (so I added the \"javascript\" tag).  When a JavaScript object (such as array $scope.initial) is assigned to a variable, it is assigned by reference, not by copy.  So, this statement</p>\n\n<pre><code>$scope.datas= $scope.initial;\n</code></pre>\n\n<p>results in $scope.datas pointing to the $scope.initial object.  Any changes that are made to $scope.datas or $scope.initial both affect the same (single) object.  Since ng-model is used to data-bind object elements data1 and data2, any changes to the text inputs will change the data1 and data2 elements of the object that $scope.datas references -- i.e., $scope.initial.  To see this in action, add the following to your fiddle's HTML:</p>\n\n<pre><code>&lt;p&gt;{{initial}}&lt;/p&gt;\n</code></pre>\n\n<p>When you change the values in the text boxes, you'll see that $scope.initial is also changing.</p>\n\n<p>@Max provided a partial answer: use angular.copy() in the reset function.  However, you'll also have to use angular.copy() in the initial assignment too:</p>\n\n<pre><code> $scope.datas = angular.copy($scope.initial);\n</code></pre>\n\n<hr>\n\n<p>Update:</p>\n\n<p>As @EpokK shows in his answer, an alternate solution is</p>\n\n<pre><code>angular.copy($scope.initial, $scope.datas);\n</code></pre>\n\n<p>As @bekite mentions in his answer, @EpokK's solution does not create another object.</p>\n\n<p><kbd><a href=\"http://jsfiddle.net/wgR5c/1\" rel=\"nofollow\">fiddle</a></kbd></p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>Working syntax :</p>\n\n<pre><code>$scope.reset = function () {\n    angular.copy($scope.initial, $scope.datas);\n};\n</code></pre>\n\n<p><a href=\"http://docs.angularjs.org/api/angular.copy\" rel=\"nofollow\">API Reference</a> : <code>angular.copy(source[, destination]);</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>@Mark Rajcok:\nDon't get me wrong, but I think that</p>\n\n<pre><code>angular.copy($scope.initial, $scope.datas);\n</code></pre>\n\n<p>is not an alternate syntax for</p>\n\n<pre><code>$scope.datas = angular.copy($scope.initial);\n</code></pre>\n\n<p>The way i understand it:</p>\n\n<pre><code>$scope.datas = angular.copy($scope.initial);\n</code></pre>\n\n<p>Creates a copy of $scope.initial and assigns the reference to $scope.datas.</p>\n\n<pre><code>angular.copy($scope.initial, $scope.datas);\n</code></pre>\n\n<p>Updates $scope.datas values with $scope.initial values</p>\n\n<p>See the angularjs docs ( <a href=\"http://docs.angularjs.org/api/angular.copy\">http://docs.angularjs.org/api/angular.copy</a> ),and there the sektion on the Return statement</p>\n\n<blockquote>\n  <p>Returns The copy or updated destination, if destination was specified.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Consider the following buttons</p>\n\n<ul>\n<li>Edit</li>\n<li>Save</li>\n<li>Cancel</li>\n</ul>\n\n<p>When user clicks <strong>edit</strong> and changes data and then uses the <strong>cancel</strong> button to get the old data, here is how you could implement this.</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div&gt;\n    &lt;button data-ng-click=\"edit()\" data-ng-show=\"!editing\"&gt;Edit&lt;/button&gt;\n    &lt;button data-ng-click=\"save()\" data-ng-show=\"editing\"&gt;Save&lt;/button&gt;\n    &lt;button data-ng-click=\"cancel()\" data-ng-show=\"editing\"&gt;Cancel&lt;/button&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>AngularJs</strong></p>\n\n<pre><code>$scope.edit = function () {\n    $scope.editing = true;\n    $scope.copy = angular.copy($scope.data);\n};\n\n$scope.cancel = function () {\n    $scope.editing = false;\n    $scope.data = $scope.copy;\n};\n</code></pre>\n\n<p><strong>References</strong></p>\n\n<ul>\n<li><a href=\"https://docs.angularjs.org/api/ng/function/angular.copy\" rel=\"nofollow\">angular.copy</a></li>\n<li><a href=\"http://yassershaikh.com/cancel-undo-angularjs-revert-data/\" rel=\"nofollow\">Orignal Post</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm simply try to reset values like this :</p>\n\n<pre><code>$scope.initial = [\n    {\n        data1: 10,\n        data2: 20\n    }            \n];\n\n\n$scope.datas= $scope.initial;\n\n\n$scope.reset = function(){\n  $scope.datas = $scope.initial;  \n}\n</code></pre>\n\n<p>But it doesn't produce anything, any idea to fix it ? \nThere is a working example on <a href=\"http://jsfiddle.net/fmzzs/4/\">jsfiddle</a></p>\n",
            "last_activity_date": 1422476138,
            "question_id": 13085024,
            "score": 17,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Reset a model with angular.js"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Use the <code>keypress</code> handler:</p>\n\n<pre><code>[somelement].onkeypress = function(e){\n  e = e || event;\n  console.log(String.fromCharCode(e.keyCode));\n}\n</code></pre>\n\n<p>See also: <a href=\"http://www.w3.org/2002/09/tests/keys.html\">this W3C testdocument</a></p>\n\n<p>if you want to use the <code>keyup</code> or <code>keydown</code> handler, you can subtract 48 from <code>e.keyCode</code> to get the number (so <code>String.fromCharCode(e.keyCode-48)</code>)</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>There is a way to do this with keydown, if keypress is not workable due to event canceling needs, etc. Use an if() statement with this test:</p>\n\n<pre><code>parseInt(event.keyIdentifier.substring(2),16) &gt; 47 &amp;&amp; parseInt(event.keyIdentifier.substring(2),16) &lt; 58\n</code></pre>\n\n<p>OR, with jQuery events:</p>\n\n<pre><code>parseInt(event.originalEvent.keyIdentifier.substring(2),16) &gt; 47 &amp;&amp; parseInt(event.originalEvent.keyIdentifier.substring(2),16) &lt; 58\n</code></pre>\n\n<p>These examples assume \"event\" is the keydown event. keyIdentifier is a hexidecimal number that represents the unicode value for the related char. Using keyIdentifier, numbers from the numberpad / keypad AND the numbers above your QWERTY keyboard will all have the same values, 48 - 57 (U+0030 - U+0039), even with the keyDown event.</p>\n\n<p>Unicode values in the browsers will look like U+0030 or U+002F. Parse this string to only get the hexidecimal value, then use parseInt() with a radix of 16 to convert it to base-10.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>event.charCode at onKeyPress return the same code when press a number in keyboard and keypad.\nbut event.keyCode at onKeyDown (or up) return different code.\n=> get char: use event.charCode at onKeyPress event\n   event.preventDefault() (or event.returnValue=false on IE) for number use event.keyCode at onKeyDown event</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I get keycodes from <strong>96</strong> to <strong>105</strong> when pressing keys on the keypad <strong>[0..9]</strong> \nThese keycodes correspond with the characters: <strong>'a  b c d e f g h i'</strong>  instead of <strong>'0 1 2 3 4 5 6 7 8 9'</strong> when calling String.fromCharCode(event.keyCode). </p>\n\n<p><em><strong>Question:</em></strong>\n<br/>\nI have 3 input[type='text']\nwhen user press keys on first input</p>\n\n<pre><code> if(this key is numeric)\n  write it to second input\n else if (this key is alpha)\n  write it to third input\n</code></pre>\n\n<p>nut it gives 'a' when i push 1 from numpad.\nhow solve it?</p>\n\n<p><a href=\"http://jsfiddle.net/AEMLoviji/tABDr/\">here is my code</a></p>\n\n<p>EDIT: i have used keyup event for this reason a got previous char :-)</p>\n",
            "last_activity_date": 1416914466,
            "question_id": 5630918,
            "score": 17,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Get Correct keyCode for keypad(numpad) keys"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Have you tried using the onpropertychanged instead of onchange event? That's for IE only though and is the recommended fix on MSDN.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One solution I have been using occasionally is to check whether the value of the field/input/select differs from it's defaultValue. defaultValue would be the value that was originally in the markup, and value is the current value aka selected or entered value. This would probably differ even though the form was autopopulated. </p>\n\n<p>If you want to turn off autofill altogether, it might be wise to add autocomplete=\"off\" on fields that are directly connected to your logic.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Here's a pretty good solution that does something similar to what jishi described:</p>\n\n<p><a href=\"http://furrybrains.com/2009/01/02/capturing-autofill-as-a-change-event/\" rel=\"nofollow\">http://furrybrains.com/2009/01/02/capturing-autofill-as-a-change-event/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just in case someone is still looking for a solution (just as I was today), to listen to a browser autofill change, here's a custom jquery method that I've built, just to simplify the proccess when adding a change listener to an input:</p>\n\n<pre><code>    $.fn.allchange = function (callback) {\n        var me = this;\n        var last = \"\";\n        var infunc = function () {\n            var text = $(me).val();\n            if (text != last) {\n                last = text;\n                callback();\n            }\n            setTimeout(infunc, 100);\n        }\n        setTimeout(infunc, 100);\n    };\n</code></pre>\n\n<p>You can call it like this:</p>\n\n<pre><code>$(\"#myInput\").allchange(function () {\n    alert(\"change!\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>One of our users just brought up the fact that their browsers Autofill doesn't cause JS onChange events to fire; this causes a problem with user registration for us.</p>\n\n<p>Is this by design? Is there a way to work around it?</p>\n",
            "last_activity_date": 1408482948,
            "question_id": 4938242,
            "score": 17,
            "tags": [
                "javascript",
                "autofill"
            ],
            "title": "Browser Autofill and Javascript triggered events"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Why not use the following instead?</p>\n\n<pre><code>&lt;input type=\"hidden\" name=\"submitDocUpdate\" value=\"Save\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Yes, that is the correct behavior of <code>HTMLFormElement.submit()</code></p>\n\n<p>The reason your submit button value isn't sent is because HTML forms are designed so that they send the value of the submit button that was clicked (or otherwise activated).  This allows for multiple submit buttons per form, such as a scenario where you'd want both \"Preview\" and a \"Save\" action.</p>\n\n<p>Since you are programmatically submitting the form, there is no explicit user action on an individual submit button so nothing is sent.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>The submit button value is submitted when the user clicks the button. Calling form.submit() is not clicking the button. You may have multiple submit buttons, and the form.submit() function has no way of knowing which one you want to send to the server.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Using a version of jQuery 1.0 or greater:</p>\n\n<p><code> $('input[type=\"submit\"]').click(); </code></p>\n\n<p>I actually was working through the same problem when I stumbled upon this post. click() without any arguments fires a click event on whatever elements you select: <a href=\"http://api.jquery.com/click/\">http://api.jquery.com/click/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>Ok, this is less of a question than it is just for my information (because I can think of about 4 different work arounds that will make it work.  But I have a form (nothing too special) but the submit button has a specific value associated with it.</p>\n\n<pre><code>&lt;input type='submit' name='submitDocUpdate' value='Save'/&gt;\n</code></pre>\n\n<p>And when the form gets submitted I check for that name.</p>\n\n<pre><code>if(isset($_POST['submitDocUpdate'])){ //do stuff\n</code></pre>\n\n<p>However, there is one time when I'm trying to submit the form via Javascript, rather than the submit button.</p>\n\n<pre><code>document.getElementById(\"myForm\").submit();\n</code></pre>\n\n<p>Which is working fine, except 1 problem.  When I look at the $_POST values that are submitted via the javascript method, it is not including the submitDocUpdate.  I get all the other values of the form, but not the submit button value.  </p>\n\n<p>Like I said, I can think of a few ways to work around it (using a hidden variable, check isset on another form variable, etc) but I'm just wondering if this is the correct behavior of submit() because it seems less-intuitive to me.  Thanks in advance.</p>\n",
            "last_activity_date": 1363355998,
            "question_id": 1709301,
            "score": 17,
            "tags": [
                "javascript",
                "form-submit"
            ],
            "title": "Javascript Submit does not include Submit Button Value"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Possibly, I could provide two links each time, one firing the javascript and another being a real link that would allow for middle click.\nI presume, one of them would have to be an image to avoid overloading the index.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It would require some testing, but I believe that most browsers do not execute the click handler when you click them, meaning that only the link is utilized.</p>\n\n<p>Not however that your handler function needs to return false to ensure these links aren't used when normally clicking.</p>\n\n<p><strong>EDIT:</strong>\nFelt this could use an example:</p>\n\n<pre><code>&lt;a href=\"/Whatever/Wherever.htm\" onclick=\"handler(); return false;\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes. Instead of:</p>\n\n<pre><code>&lt;a href=\"javascript:code\"&gt;...&lt;/a&gt;\n</code></pre>\n\n<p>Do this:</p>\n\n<pre><code>&lt;a href=\"/non/ajax/display/page\" id=\"thisLink\"&gt;...&lt;/a&gt;\n</code></pre>\n\n<p>And then in your JS, hook the link via it's ID to do the AJAX call. Remember that you need to stop the click event from bubbling up. Most frameworks have an event killer built in that you can call (just look at its Event class).</p>\n\n<p>Here's the event handling and event-killer in jquery:</p>\n\n<pre><code>$(\"#thisLink\").click(function(ev, ob) {\n    alert(\"thisLink was clicked\");\n    ev.stopPropagation();\n});\n</code></pre>\n\n<p>Of course you can be a lot more clever, while juggling things like this but I think it's important to stress that this method is <em>so</em> much cleaner than using <code>onclick</code> attributes.</p>\n\n<h1>Keep your JS in the JS!</h1>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>The onclick event won't be fired for that type of click, so you need to add an <code>href</code> attribute which would actually work. One possible way to do this by adding a <code>#bookmark</code> to the URL to indicate to the target page what the required state is.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yes, You need to lookup progressive enhancement and unobtrusive Javascript, and code your site to work with out Javascript enabled first and then add the Javascripts functions after you have the basic site working.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>&lt;a href=\"/original/url\" onclick=\"return !doSomething();\"&gt;link text&lt;/a&gt;\n</code></pre>\n\n<p>For more info and detailed explanation view <a href=\"http://stackoverflow.com/questions/134845/href-for-javascript-links-or-javascriptvoid0#143410\">my answer in another post</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I liked Oli's approach, but it didn't discern from left and middle clicks. checking the \"which\" field on the eventArgs will let you know.</p>\n\n<pre><code>$(\".detailLink\").click(function (ev, ob) {\n    //ev.which == 1 == left\n    //ev.which == 2 == middle\n    if (ev.which == 1) {\n        //do ajaxy stuff\n\n        return false; //tells browser to stop processing the event\n    }\n    //else just let it go on its merry way and open the new tab.\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am in charge of a website at work and recently I have added ajaxy requests to make it faster and more responsive. But it has raised an issue.</p>\n\n<p>On my pages, there is an index table on the left, like a menu. Once you have clicked on it, it makes a request that fills the rest of the page. At anytime you can click on another item of the index to load a different page.</p>\n\n<p>Before adding javascript, it was possible to middle click (open new tabs) for each item of the index, which allowed to have other pages loading while I was dealing with one of them.\nBut since I have changed all the links to be ajax requests, they now execute some javascript instead of being real links. So they are only opening empty tabs when I middle click on them.</p>\n\n<p>Is there a way to combine both functionalities: links firing javascript when left clicked or new tabs when middle clicked?\nDoes it have to be some ugly javascript that catches every clicks and deal with them accordingly?</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1370870910,
            "question_id": 152262,
            "score": 17,
            "tags": [
                "javascript",
                "html",
                "ajax"
            ],
            "title": "middle click (new tabs) and javascript links"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This works in IE (and FF, I believe):</p>\n\n<pre><code>if(document.getElementById(\"uploadBox\").value != \"\") {\n   // you have a file\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<pre><code> &lt;input type=\"file\" name=\"photo\" required /&gt;\n</code></pre>\n\n<p>this works perfectly in IE, FF &amp; Chrome</p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>this piece of code works in my local environment, hope it will also works in live</p>\n\n<pre><code> var nme= document.getElementById(\"uploadFile\");\n    if(nme.value.length&lt;4){\n        alert('Must Select any of your photo for upload!');\n        nme.focus();\n        return false;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>If I have a </p>\n\n<pre><code>&lt;input id=\"uploadFile\" type=\"file\" /&gt;\n</code></pre>\n\n<p>tag, and a submit button, how do I determine, in IE6 (and above) if a file has been selected by the user.</p>\n\n<p>In FF, I just do:</p>\n\n<pre><code>var selected = document.getElementById(\"uploadBox\").files.length &gt; 0;\n</code></pre>\n\n<p>But that doesn't work in IE.</p>\n",
            "last_activity_date": 1393865502,
            "question_id": 46219,
            "score": 17,
            "tags": [
                "javascript",
                "html",
                "upload"
            ],
            "title": "How to determine if user selected a file for file upload?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It's because <code>iconv</code> is a native compiled UNIX utility behind the most i18n character map conversion functions. </p>\n\n<p>You won't find it in <code>javascript</code> unless you access some browser component.</p>\n\n<p>Encoding is a property of the document so most javascript implementation just simply dismiss it.</p>\n\n<p>You'll need a pure js library for unaccented strings. It would be the best to have one for the specific language you need. </p>\n\n<p>The simpliest way is via some translate tables or even regex replaces.</p>\n\n<p>like here : <a href=\"http://lehelk.com/2011/05/06/script-to-remove-diacritics/\" rel=\"nofollow\">http://lehelk.com/2011/05/06/script-to-remove-diacritics/</a></p>\n\n<p>check this thread too : <a href=\"http://stackoverflow.com/questions/863800/replacing-diacritics-in-javascript\">Replacing diacritics in Javascript</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The easiest way I've found:</p>\n\n<pre><code>var str = \"R\u00e5nades p\u00e5 Skyttis i \u00d6-vik\";\nvar combining = /[\\u0300-\\u036F]/g; \n\nconsole.log(str.normalize('NFKD').replace(combining, ''));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am looking for way in <code>JavaScript</code> to convert non-<code>ASCII</code> characters in a string to their closest equivalent, similarly to what the <code>PHP</code> <a href=\"http://nl3.php.net/manual/en/function.iconv.php\"><code>iconv</code></a> function does. For instance if the input string is <code>R\u00e5nades p\u00e5 Skyttis i \u00d6-vik</code>, it should be converted to <code>Ranades pa skyttis i o-vik</code>. I had a look at <a href=\"http://phpjs.org/\"><code>phpjs</code></a> but <code>iconv</code> isn't included.</p>\n\n<p><strong>Is it possible to perform such conversion in JavaScript, if so how?</strong></p>\n",
            "last_activity_date": 1399990805,
            "question_id": 11815883,
            "score": 16,
            "tags": [
                "javascript",
                "character-encoding",
                "ascii",
                "converter",
                "slug"
            ],
            "title": "Convert non-ASCII characters (umlauts, accents...) to their closest ASCII equivalent (slug creation)"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can disable the double-click behavior by removing the zoom behavior\u2019s dblclick event listener. Looking at your code, you\u2019ve assigned the zoom behavior to the SVG element. So you could say:</p>\n\n<pre><code>d3.select(\"svg\").on(\"dblclick.zoom\", null);\n</code></pre>\n\n<p>Or, together with where you register the zoom behavior:</p>\n\n<pre><code>.call(d3.behavior.zoom().on(\"zoom\", update)).on(\"dblclick.zoom\", null)\n</code></pre>\n\n<p>You might also want to move the zoom behavior down to a <a href=\"http://www.w3.org/TR/SVG/struct.html#Groups\">G element</a> rather than putting it on the root SVG element; I\u2019m not sure it will work correctly on the root SVG, since the SVG element doesn\u2019t support the <a href=\"http://www.w3.org/TR/SVG/coords.html#TransformAttribute\">transform attribute</a>.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>It's easy to set up a proxy function. Store the default (target) event, and then register a proxy event instead. The proxy will then enable / disable the target event using whatever logic you need:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>svg.call(zoom);\r\nvar dblclickTarget = svg.on(\"dblclick.zoom\");\r\nvar mouseScrollTarget = svg.on(\"mousewheel.zoom\");\r\n\r\nfunction eventProxy(fn){\r\n  return function(){\r\n    // Enable events if enableEvents=== true\r\n    if(enableEvents){\r\n      fn.apply(this, arguments)\r\n    }\r\n  }\r\n};\r\n\r\nsvg.on(\"wheel.zoom\", eventProxy(dblclickTarget))\r\n   .on(\"mousewheel.zoom\", eventProxy(mouseScrollTarget));</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>By applying the proxy pattern in this way, you can simply change the \"enableEvents\" variable to enable or disable the events.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I do not want <a href=\"https://github.com/mbostock/d3/wiki/Zoom-Behavior#wiki-zoom\">d3.behavior.zoom</a> to add the ability to double click zoom on my graph. How can I disable this behavior?</p>\n\n<p>Here is a <a href=\"http://jsfiddle.net/brantolsen/Ld6Uz/\">JSFiddle</a> with the unwanted behavior.</p>\n\n<p>I have tried the following without any luck.</p>\n\n<pre><code> d3.behavior.zoom.dblclick = function() {};\n</code></pre>\n",
            "last_activity_date": 1415012584,
            "question_id": 11786023,
            "score": 16,
            "tags": [
                "javascript",
                "d3.js"
            ],
            "title": "How to disable double click zoom for d3.behavior.zoom?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>you might want to take a look at <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice\" rel=\"nofollow\"><code>.splice();</code></a></p>\n\n<p>example:</p>\n\n<pre><code>var arr = [\"a1\", \"a2\", \"a3\", \"a4\", \"a5\", \"a6\", \"a7\", \"a8\", \"a9\", \"a10\", \"a11\", \"a12\", \"a13\"];\n\nvar new_arr = arr.splice(0, 4); //returns an array with arr[0], arr[1], arr[2] and arr[3]\n</code></pre>\n\n<p>with a simple loop you could achieve what you want</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For Underscore based solution try this:</p>\n\n<pre><code>var data = [\"a1\", \"a2\", \"a3\", \"a4\", \"a5\", \"a6\", \"a7\", \"a8\", \"a9\", \"a10\", \"a11\", \"a12\", \"a13\"];\nvar n = 3;\nvar lists = _.groupBy(data, function(element, index){\n  return Math.floor(index/n);\n});\nlists = _.toArray(lists); //Added this to convert the returned object to an array.\nconsole.log(lists);\n</code></pre>\n\n<p>Using the chain wrapper method you can combine the two statements as below:</p>\n\n<pre><code>var data = [\"a1\", \"a2\", \"a3\", \"a4\", \"a5\", \"a6\", \"a7\", \"a8\", \"a9\", \"a10\", \"a11\", \"a12\", \"a13\"];\nvar n = 3;\nvar lists = _.chain(data).groupBy(function(element, index){\n  return Math.floor(index/n);\n}).toArray()\n.value();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>try this one it is much more practical (for example, if you would want to split the array based on amount of items to be container in each sub array):</p>\n\n<pre><code>function chunk(arr, start, amount){\n    var result = [], \n        i, \n        start = start || 0, \n        amount = amount || 500, \n        len = arr.length;\n\n    do {\n        //console.log('appending ', start, '-', start + amount, 'of ', len, '.');\n        result.push(arr.slice(start, start+amount));\n        start += amount;\n\n    } while (start&lt; len);\n\n    return result;\n};\n</code></pre>\n\n<p>and the use in your case:</p>\n\n<pre><code>var arr = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],\n    chunked = chunk(arr, 0, Math.floor(arr.length/3)); //to get 4 nested arrays\n\nconsole.log(chunked);\n</code></pre>\n\n<p>and another case:</p>\n\n<pre><code>var arr = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],\n    chunked = chunk(arr, 0, 3); // to get 6 nested arrays each containing maximum of 3 items\n\nconsole.log(chunked);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to split a javascript array into <code>n</code> sized chunks.</p>\n\n<p>E.g.: Given this array</p>\n\n<pre><code>[\"a1\", \"a2\", \"a3\", \"a4\", \"a5\", \"a6\", \"a7\", \"a8\", \"a9\", \"a10\", \"a11\", \"a12\", \"a13\"]\n</code></pre>\n\n<p>and a <code>n</code> equals to 4, the output should be this:</p>\n\n<pre><code>[ [\"a1\", \"a2\", \"a3\", \"a4\"],\n  [\"a5\", \"a6\", \"a7\", \"a8\"],\n  [\"a9\", \"a10\", \"a11\", \"a12\"],\n  [\"a13\"]\n]\n</code></pre>\n\n<p>I aware of pure javascript <a href=\"http://stackoverflow.com/questions/8495687/split-array-into-chunks\">solutions</a> for this problem, but since I am already using <a href=\"http://documentcloud.github.com/underscore/\">underscore.js</a> I am wondering if underscore provides a better solution for this.</p>\n\n<h2>Edit:</h2>\n\n<p>I created a <a href=\"http://jsperf.com/array-splice-vs-underscore\">jsPerf test</a> to check how much slower the underscore solution is.</p>\n",
            "last_activity_date": 1423307373,
            "question_id": 8566667,
            "score": 16,
            "tags": [
                "javascript",
                "functional-programming",
                "underscore.js"
            ],
            "title": "Split javascript array in chunks using underscore.js"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Parse the string into an integer using <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\"><code>parseInt</code></a>:</p>\n\n<pre><code>javascript:alert(parseInt(\"2\", 10)&gt;parseInt(\"10\", 10))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>use parseInt and compare like below:</p>\n\n<p>javascript:alert(parseInt(\"2\")>parseInt(\"10\"))</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Checking that strings are integers is separate to comparing if one is greater or lesser than another. You should always compare number with number and string with string as the algorithm for dealing with mixed types not easy to remember.</p>\n\n<pre><code>'00100' &lt; '1' // true\n</code></pre>\n\n<p>as they are both strings so only the first zero of '00100' is compared to '1' and because it's charCode is lower, it evaluates as lower.</p>\n\n<p>However:</p>\n\n<pre><code>'00100' &lt; 1 // false\n</code></pre>\n\n<p>as the RHS is a number, the LHS is converted to number before the comparision.</p>\n\n<p>A simple integer check is:</p>\n\n<pre><code>function isInt(n) {\n  return /^[+-]?\\d+$/.test(n);\n}\n</code></pre>\n\n<p>It doesn't matter if n is a number or integer, it will be converted to a string before the test.</p>\n\n<p>If you really care about performance, then:</p>\n\n<pre><code>var isInt = (function() {\n  var re = /^[+-]?\\d+$/;\n\n  return function(n) {\n    return re.test(n);\n  }\n}());\n</code></pre>\n\n<p>Noting that numbers like 1.0 will return false. If you want to count such numbers as integers too, then:</p>\n\n<pre><code>var isInt = (function() {\n  var re = /^[+-]?\\d+$/;\n  var re2 = /\\.0+$/;\n\n  return function(n) {\n    return re.test((''+ n).replace(re2,''));\n  }\n}());\n</code></pre>\n\n<p>Once that test is passed, converting to number for comparison can use a number of methods. I don't like <em>parseInt()</em> because it will truncate floats to make them look like ints, so all the following will be \"equal\":</p>\n\n<pre><code>parseInt(2.9) == parseInt('002',10) == parseInt('2wewe')\n</code></pre>\n\n<p>and so on.</p>\n\n<p>Once numbers are tested as integers, you can use the unary + operator to convert them to numbers in the comparision:</p>\n\n<pre><code>if (isInt(a) &amp;&amp; isInt(b)) {\n  if (+a &lt; +b) {\n    // a and b are integers and a is less than b\n  }\n}\n</code></pre>\n\n<p>Other methods are:</p>\n\n<pre><code>Number(a); // liked by some because it's clear what is happening\na * 1      // Not really obvious but it works, I don't like it\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>The answer is simple. Just divide string by 1.\nExamples:</p>\n\n<pre><code>\"2\" &gt; \"10\"   - true\n</code></pre>\n\n<p>but</p>\n\n<pre><code>\"2\"/1 &gt; \"10\"/1 - false\n</code></pre>\n\n<p>Also you can check if string value really is number:</p>\n\n<pre><code>!isNaN(\"1\"/1) - true (number)\n!isNaN(\"1a\"/1) - false (string)\n!isNaN(\"01\"/1) - true (number)\n!isNaN(\" 1\"/1) - true (number)\n!isNaN(\" 1abc\"/1) - false (string)\n</code></pre>\n\n<p>But</p>\n\n<pre><code>!isNaN(\"\"/1) - true (but string)\n</code></pre>\n\n<p>Solution</p>\n\n<pre><code>number !== \"\" &amp;&amp; !isNaN(number/1)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I store some parameters client-side in HTML and then need to compare them as integers. Unfortunately I have come across a serious bug that I cannot explain. The bug seems to be that my JS reads parameters as strings rather than integers, causing my integer comparisons to fail.</p>\n\n<p>I have generated a small example of the error, which I also can't explain. The following returns 'true' when run: </p>\n\n<pre><code>javascript:alert(\"2\"&gt;\"10\")\n</code></pre>\n",
            "last_activity_date": 1381311466,
            "question_id": 5630123,
            "score": 16,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Javascript string/integer comparisons"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Based on your error message, I'm assuming this is coming from Internet Explorer.</p>\n\n<p>Surprise! Internet Explorer (including version 8) does not support indexOf for arrays.</p>\n\n<p>Here is <a href=\"https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Objects/Array/IndexOf\">Firefox's implementation</a> you can use:</p>\n\n<pre><code>if (!Array.prototype.indexOf)\n{\n  Array.prototype.indexOf = function(elt /*, from*/)\n  {\n    var len = this.length &gt;&gt;&gt; 0;\n\n    var from = Number(arguments[1]) || 0;\n    from = (from &lt; 0)\n         ? Math.ceil(from)\n         : Math.floor(from);\n    if (from &lt; 0)\n      from += len;\n\n    for (; from &lt; len; from++)\n    {\n      if (from in this &amp;&amp;\n          this[from] === elt)\n        return from;\n    }\n    return -1;\n  };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<pre><code>[].indexOf || (Array.prototype.indexOf = function(v,n){\n  n = (n==null)?0:n; var m = this.length;\n  for(var i = n; i &lt; m; i++)\n    if(this[i] == v)\n       return i;\n  return -1;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There's an jQuery method to overcome the lack of <code>indexOf()</code>, you can use <a href=\"http://api.jquery.com/jQuery.inArray/\"><code>.inArray()</code></a> instead:</p>\n\n<pre><code>var selected = $('#hiddenField').val().split(\",\");\nif ($.inArray(id, selected) &gt; -1) {\n   ... set value ...\n}\n</code></pre>\n\n<p><code>jQuery.inArray()</code> exists for just this reason...if you're including jQuery already, no need to write the function again.  Note: This actually returns a number, like <code>indexOf()</code> would.</p>\n",
                    "is_accepted": false,
                    "score": 22
                }
            ],
            "body": "<p>I have the following code:</p>\n\n<pre><code>var selected = $('#hiddenField').val().split(\",\");\n...\nif (selected.indexOf(id) &gt; 0) {\n   ... set value ...\n}\n</code></pre>\n\n<p>I'm dynamically creating a CheckBoxList, and trying to remember the state of the checkboxes by putting the selected IDs into the hidden field.</p>\n\n<p>I get an error stating that \"Object doesn't support this property or method\".  My assumption is that selected is an array, which should support indexOf.  Is that incorrect?  </p>\n",
            "last_activity_date": 1326249848,
            "question_id": 2608575,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "asp.net-mvc",
                "arrays",
                "split"
            ],
            "title": "jquery split() and indexOf results in &quot;Object doesn&#39;t support this property or method&quot;"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>You need to remove the <code>contextmenu</code> plugin. See <a href=\"http://cksource.com/forums/viewtopic.php?f=11&amp;t=17216\"><strong>here</strong></a> for 3.1.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>With CKEditor 3.6 I was able to disable context menu by removing the contextmenu plugin as suggested above.\nTo do this, you have to configure the editor with the removePlugins option.\nFor instance:</p>\n\n<pre><code>CKEDITOR.replace('my_editor', {\n    removePlugins : 'contextmenu'\n});\n</code></pre>\n\n<p>It can also be disabled globally from the config.js file:</p>\n\n<pre><code>CKEDITOR.editorConfig = function(config) {\n    /* Your config options */\n    ...\n    config.removePlugins = 'contextmenu';\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As of version 3.6.4, the other answers in this question don't work anymore. <a href=\"http://dev.ckeditor.com/ticket/9284\">See bug #9284</a></p>\n\n<p>The three plugins that need to be disabled (using the means discussed in this question), are <code>contextmenu</code>, <code>liststyle</code> and <code>tabletools</code>. So for example, using config files:</p>\n\n<pre><code>CKEDITOR.editorConfig = function(config) {\n    /* Your config options */\n    ...\n    config.removePlugins = 'contextmenu,liststyle,tabletools';\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>Unfortunately since CKEditor 3.6/4.0 this does not work anymore. </p>\n\n<p>See bug report: <a href=\"http://dev.ckeditor.com/ticket/9284\" rel=\"nofollow\">http://dev.ckeditor.com/ticket/9284</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For version 4.2, I put the following at the end of my config.js file</p>\n\n<pre><code>CKEDITOR.on('instanceReady', function(ev) {\n   ev.editor.editable().addClass('cke_enable_context_menu')\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In CKEditor 4.x, (I tested 4.2.2) you must do both:</p>\n\n<p><code>CKEDITOR.replace('my_editor', {\n    removePlugins : 'contextmenu'\n});</code></p>\n\n<p>And</p>\n\n<pre><code>CKEDITOR.editorConfig = function(config) {\n/* Your config options */\n...\nconfig.removePlugins = ''liststyle,tabletools,contextmenu'';\n};\n</code></pre>\n\n<p>All three of those will automatically require contextmenu if you don't disable them.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's possible to completely disable the context menu adding this line to your config file (tipically fckconfig.js):</p>\n\n<pre><code>FCKConfig.ContextMenu = [];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I needed to disable all of the following to get this to work.  </p>\n\n<pre><code>config.removePlugins = 'language,tableresize,liststyle,tabletools,scayt,menubutton,contextmenu';\n</code></pre>\n\n<p>Previously we did not need language or tableresize - but a newer version of ckeditor seems to require that.  </p>\n\n<p>I discovered this in looking at the output in F12 dev tools on chrome.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is still a practical solution, by overriding the prototype function that initializes <code>contextmenu</code> behavior:</p>\n\n<pre><code>CKEDITOR.dom.element.prototype.disableContextMenu = function () {\n    this.on( 'contextmenu', function( event ) {\n        // your contextmenu behavior\n    });\n};\n</code></pre>\n\n<p>NOTE: when CKEDITOR loads its JS resources dynamically you need to place it right before the <code>replace</code> call.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can find out which plugins require <code>contextmenu</code> in your particular build of CKEditor using the following snippet in an F12 console window in your site (assumes you have jQuery also for <code>$.each</code>):</p>\n\n<pre><code>$.each(CKEDITOR.plugins, function(k, v){ \n    v.requires &amp;&amp; console.log(\"Plugin '\" + k + \"' requires: \" + v.requires) \n})\n</code></pre>\n\n<p>For example:</p>\n\n<blockquote>\n  <p>Plugin 'tabletools' requires table,dialog,contextmenu</p>\n</blockquote>\n\n<p>Which you can then use to help you with your <code>config.removePlugins</code> - in my case:</p>\n\n<pre><code>config.removePlugins = 'tabletools,contextmenu'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Does anybody know how to disable CKEditor's context (right click) menu?  I would expect a configuration option, but I can't find one.  I am using v3.1.  Thanks.</p>\n",
            "last_activity_date": 1418819213,
            "question_id": 2246631,
            "score": 16,
            "tags": [
                "javascript",
                "ckeditor"
            ],
            "title": "How to disable CKEditor context menu?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Generally speaking, an object can be callable without being a function.  In a language where everything is an object (including functions), callable objects don't have to descend from a Function class.</p>\n\n<p>In JS, it looks like a Callable is anything that has the internal [[Call]] method (identified by a typeof of 'function', as opposed to 'object').  A Function (as used in the slide) is a descendant of the Function object.  I could be wrong, but within a script you can only create Functions while the ECMAScript implementation can define Callables that aren't Functions.</p>\n\n<p>If you try the code fragment from the slide with both anonymous functions/function expressions and with declared functions, the results are the same.</p>\n\n<pre><code>typeof function() {}; // == 'function'\n({}).toString.call(function() {}) // == '[object Function]'\nfunction foo() {}\ntypeof foo; // == 'function'\n({}).toString.call(foo) // == '[object Function]'\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>I recently saw the <a href=\"http://google-caja.googlecode.com/svn/trunk/doc/html/es5-talk/es5-talk.html\">presentation about the changes in ECMAScript 5</a>. And there was a <a href=\"http://google-caja.googlecode.com/svn/trunk/doc/html/es5-talk/img31.html\">slide</a> with this statement:</p>\n\n<blockquote>\n  <p><em>Function</em> vs <em>Callable</em></p>\n\n<pre><code>typeof f === 'function'                       // \u2192 f is Callable\n({}).toString.call(f) === '[object Function]' // \u2192 f is a Function\n</code></pre>\n</blockquote>\n\n<p>Can anyone explain to me what the difference between <em>Function</em> and <em>Callable</em> is?</p>\n",
            "last_activity_date": 1242987349,
            "question_id": 897103,
            "score": 16,
            "tags": [
                "javascript",
                "function",
                "callable"
            ],
            "title": "What is the difference between a function object and a callable object?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You edit an element's <code>value</code> by editing it's <code>.value</code> property.</p>\n\n<pre><code>document.getElementById('DATE').value = 'New Value';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I Hope it is what you want : </p>\n\n<pre><code>    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth()+1; //January is 0!\n\n    var yyyy = today.getFullYear();\n    if(dd&lt;10){\n        dd='0'+dd\n    } \n    if(mm&lt;10){\n        mm='0'+mm\n    } \n    var today = dd+'/'+mm+'/'+yyyy;\n    document.getElementById(\"DATE\").value = today;\n</code></pre>\n\n<p><a href=\"http://stackoverflow.com/questions/1531093/how-to-get-current-date-in-javascript\">How to get current date in JavaScript?</a></p>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p>Use the DOM's <code>getElementByid</code> method:</p>\n\n<p><code>document.getElementById(\"DATE\").value = \"your date\";</code></p>\n\n<p>A date can be made with the <code>Date</code> class:</p>\n\n<p><code>d = new Date();</code></p>\n\n<p>(Protip: install a javascript console such as in Chrome or Firefox' Firebug extension. It enables you to play with the DOM and Javascript)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>By using the value attribute:</p>\n\n<pre><code>var today = new Date();\ndocument.getElementById('DATE').value += today;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To get current date/time in javascript:</p>\n\n<pre><code>var date = new Date();\n</code></pre>\n\n<p>If you need milliseconds for easy server-side interpretation use</p>\n\n<pre><code>var value = date.getTime();\n</code></pre>\n\n<p>For formatting dates into a user readable string see <a href=\"http://stackoverflow.com/questions/1056728/formatting-a-date-in-javascript\">this</a></p>\n\n<p>Then just write to hidden field:</p>\n\n<pre><code>document.getElementById(\"DATE\").value = value;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>&lt;input type=\"hidden\" id=\"date\"/&gt;\n&lt;script&gt;document.getElementById(\"date\").value = new Date().toJSON().slice(0,10)&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I honestly suggest you <a href=\"http://momentjs.com\">moment.js</a>. Just download <code>moment.min.js</code> and then use this snippet to get your date in whatever format you want:</p>\n\n<pre><code>&lt;script&gt;\n$(document).ready(function() {\n\n     $(\"#date\").val( moment().format('MMM D, YYYY') );\n\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>Use following chart for date formats:</p>\n\n<p><img src=\"http://i.stack.imgur.com/xVscR.jpg\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 20
                }
            ],
            "body": "<p>I'm totally new to Javascript (actually I don't know much about it). What I would like to do is to add a current date to a hidden HTML tag so that it can be sent to the server:</p>\n\n<pre><code>&lt;input type=\"hidden\" id=\"DATE\" name=\"DATE\" value=\"WOULD_LIKE_TO_ADD_DATE_HERE\"&gt;\n</code></pre>\n\n<p>How can I add a formatted date to the VALUE attribute? Please help me.</p>\n",
            "last_activity_date": 1407613540,
            "question_id": 12409299,
            "score": 15,
            "tags": [
                "javascript",
                "html",
                "input",
                "tags",
                "hidden"
            ],
            "title": "How to get current formatted date dd/mm/yyyy in Javascript and append it to an input."
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It doesn't matter whether you use a bound function or not; you remove it the same way as any other event handler.  If your issue is that the bound version is it's own unique function, you can either keep track of the bound versions, or use the removeEventListener signature that doesn't take a specific handler (although of course that will remove other event handlers of the same type).</p>\n\n<p>(As a side note, addEventListener doesn't work in all browsers; you really should use a library like jQuery to do your event hook-ups in a cross-browser way for you.  Also, jQuery has the concept of namespaced events, which allow you to bind to \"click.foo\"; when you want to remove the event you can tell jQuery \"remove all foo events\" without having to know the specific handler or removing other handlers.)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you want to use 'onclick', as suggested above, you could try this:</p>\n\n<pre><code>(function(){\n    var singleton = {};\n\n    singleton = new function() {\n        this.myButton = document.getElementById(\"myButtonID\");\n\n        this.myButton.onclick = function() {\n            singleton.clickListener();\n        };\n    }\n\n    singleton.clickListener = function() {\n        console.log(this); // I also know who I am\n    };\n\n    // public function\n    singleton.disableButton = function() {\n        this.myButton.onclick = \"\";\n    };\n})();\n</code></pre>\n\n<p>I hope it helps.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This caused me trouble. Although what @machineghost said was true, that events are added and removed the same way, the missing part of the equation was this:</p>\n\n<blockquote>\n  <p>A new function reference is created after <code>.bind()</code> is called!</p>\n</blockquote>\n\n<p>See <a href=\"http://stackoverflow.com/questions/14417890/does-bind-change-the-function-reference-how-to-set-permanently?lq=1\">Does bind() change the function reference? | How to set permanently?</a></p>\n\n<p>So, to add or remove it, cache the first reference:</p>\n\n<pre><code>var x = this.myListener.bind(this);\nToolbox.addListener(window, 'scroll', x);\nToolbox.removeListener(window, 'scroll', x);\n</code></pre>\n\n<p>This works as expected for me.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>It's been awhile but MDN has a super explanation on this. That helped me more than the stuff here.</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.addEventListener#The_value_of_this_within_the_handler\" rel=\"nofollow\">MDN :: EventTarget.addEventListener - The value of \"this\" within the handler</a></p>\n\n<p>It gives a great alternative to the handleEvent function.</p>\n\n<p>This is an example with and without bind:</p>\n\n<pre><code>var Something = function(element) {\n  this.name = 'Something Good';\n  this.onclick1 = function(event) {\n    console.log(this.name); // undefined, as this is the element\n  };\n  this.onclick2 = function(event) {\n    console.log(this.name); // 'Something Good', as this is the binded Something object\n  };\n  element.addEventListener('click', this.onclick1, false);\n  element.addEventListener('click', this.onclick2.bind(this), false); // Trick\n}\n</code></pre>\n\n<p>A problem in the example above is that you cannot remove the listener with bind. Another solution is using a special function called handleEvent to catch any events:</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In JavaScript, what is the best way to remove a function added as an event listener using bind()?</p>\n\n<p>Example</p>\n\n<pre><code>(function(){\n\n    // constructor\n    MyClass = function() {\n        this.myButton = document.getElementById(\"myButtonID\");\n        this.myButton.addEventListener(\"click\", this.clickListener.bind(this));\n    };\n\n    MyClass.prototype.clickListener = function(event) {\n        console.log(this); // must be MyClass\n    };\n\n    // public method\n    MyClass.prototype.disableButton = function() {\n        this.myButton.removeEventListener(\"click\", ___________);\n    };\n\n})();\n</code></pre>\n\n<p>The only way I can think of is to keep track of every listener added with bind.</p>\n\n<p>Above example with this method:</p>\n\n<pre><code>(function(){\n\n    // constructor\n    MyClass = function() {\n        this.myButton = document.getElementById(\"myButtonID\");\n        this.clickListenerBind = this.clickListener.bind(this);\n        this.myButton.addEventListener(\"click\", this.clickListenerBind);\n    };\n\n    MyClass.prototype.clickListener = function(event) {\n        console.log(this); // must be MyClass\n    };\n\n    // public method\n    MyClass.prototype.disableButton = function() {\n        this.myButton.removeEventListener(\"click\", this.clickListenerBind);\n    };\n\n})();\n</code></pre>\n\n<p>Are there any better ways to do this?</p>\n",
            "last_activity_date": 1422565069,
            "question_id": 11565471,
            "score": 15,
            "tags": [
                "javascript",
                "events",
                "listener",
                "bind"
            ],
            "title": "Removing event listener which was added with bind"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Your module only \"leaks\" it's namespace holder so it's pretty acceptable.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>\"Leaking\" into global scope is when something used in a local scope is unintentionally made available to the global scope.  That means assigning to a variable not already defined in the current scope:</p>\n\n<pre><code>function myFunction() {\n    a=1;\n}\n\nmyFunction();\nalert(a);\n//-&gt; 1\n</code></pre>\n\n<p>It's bad because there could be naming collisions resulting in variables with different values/types than expected.  It can also lead to a bug in older Internet Explorers when you forget to use the <code>var</code> keyword for a variable used in a <code>for</code> statement.</p>\n\n<p>I wouldn't class intentionally making a variable global as \"leaking\", because it's more like you're \"pouring\" it into the global scope.  However, this is still often considered bad practice by some (although I think that's a little melodramatic) because there are still potential naming collisions with current properties of the <code>window</code> object, or variables set by other scripts and libraries.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>[[Short story]]</strong></p>\n\n<p>Don't make global variables ever and use an async module loader like <a href=\"http://requirejs.org/\" rel=\"nofollow\">requirejs</a> or <a href=\"https://github.com/unscriptable/curl\" rel=\"nofollow\">curl</a></p>\n\n<p><strong>[[Long story]]</strong></p>\n\n<p>That comment was poorly structured.</p>\n\n<p>There is nothing wrong with the module system. I was complaining about using global variables at all. (I still think the full generic module pattern is bloated).</p>\n\n<p>Whether you should avoid all global variables is a different question and I think a matter of style. You can either use an async loader to pass modules around or using <code>window</code> to pass modules around.</p>\n\n<ul>\n<li>What is meant by \u201cleaking\u201d into global-scope?</li>\n</ul>\n\n<p>What I meant was your creating global variables. Minimising the use of global variables is a pattern. In functional style programming it's possible to have zero global variables but this is a different pattern from using global modules.</p>\n\n<ul>\n<li>Why is that bad?</li>\n</ul>\n\n<p>Having any state globally can cause that state to be corrupted. </p>\n\n<ul>\n<li>How do you avoid it?</li>\n</ul>\n\n<p>You can't. You can minimize the amount of global variables though. To avoid having global state completely you can use asynchronous loaders. These define a few global variables for you that you can then use.</p>\n\n<ul>\n<li>When wanting to create persistent custom-objects, why is the Module Pattern (below) bad?</li>\n</ul>\n\n<p>There is nothing wrong with the module pattern. The problem is storing your module globally. The issue is having global namespaces.</p>\n\n<ul>\n<li>Design patterns let you encapsulate complex logic, is encapsulation suddenly bad simply because we\u2019re writing in JavaScript?</li>\n</ul>\n\n<p>Now that I've cleared up the intent of the comment this question isn't really relevant</p>\n\n<ul>\n<li>Or...is this commenter simply wrong?</li>\n</ul>\n\n<p>The comment was poorly phrased at best. I objected to global namespaces rather than modules, but did not state this properly.</p>\n\n<p>The alternative is using asynchronous loaders and defining modules. These can be narrowed down to two global variables. <code>define</code> and <code>require</code>.</p>\n\n<p><code>require = function(moduleName, callback)</code> </p>\n\n<p>This will get a module and then return it to you.</p>\n\n<p><code>define = function(obj)</code> </p>\n\n<p>this defines a module.</p>\n\n<p>The concept here is that you multi file code as follows:</p>\n\n<pre><code>// main.js\nrequire([\n  \"foo.js\",\n  \"bar.js\",\n  ...,\n], function(foo, bar, ...) {\n   // do stuff\n}); \n\n//foo.js\n\n(function() {\n    var namespace = modulePatternCode;\n    ...\n    define(namespace):\n})();\n\n//bar.js \n\n(function() {\n    var namespace = modulePatternCode;\n    ...\n    define(namespace):\n})();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Loader example using <a href=\"http://requirejs.org/\" rel=\"nofollow\">RequireJS</a>:</p>\n\n<p>Define a utilities module in utils.js:</p>\n\n<pre><code>define(function () {\n    return {\n        each: function (iterable, callback) {\n            // ...\n        },\n        map: function (iterable, mapper) {\n            // ...\n        }\n    };\n});\n</code></pre>\n\n<p>Use the above module in another module, say math.js:</p>\n\n<pre><code>define([ \"utils\" ], function (utils) {\n    return {\n        sum: function (numbers) {\n            var sum = 0;\n\n            utils.each(numbers, function (n) {\n                sum += n;\n            });\n\n            return sum;\n        },\n        average: function (numbers) {\n            return this.sum(numbers) / numbers.length;\n        }\n    };\n});\n</code></pre>\n\n<p>And you can use math.js in another file, say main.js:</p>\n\n<pre><code>console.log(\"About to add 1-3\");\n\nrequire([ \"math\" ], function (math) {\n    console.log(math.sum([ 1, 2, 3 ]));\n});\n</code></pre>\n\n<p>You can still have namespaces, and still keep them warm and cozy inside modules:</p>\n\n<p>namespace.js:</p>\n\n<pre><code>define([ \"foo\", \"bar\", \"moo\" ] function (foo, bar, moo) {\n    return {\n        foo: foo,\n        bar: bar,\n        moo: moo\n    };\n});\n</code></pre>\n\n<p>Then the rest of the modules can use this namespace during definition:</p>\n\n<pre><code>define([ \"namespace\" ], function (namespace) {\n    namespace.foo(42);\n});\n</code></pre>\n\n<p>Or at runtime, in some other module:</p>\n\n<pre><code>define(function () {\n    return {\n        initialize: function () {\n            require([ \"namespace\" ], function (namespace) {\n                namespace.foo(42);\n            });\n        }\n    };\n});\n</code></pre>\n\n<p>In the usages above, nothing but <code>define</code> and <code>require</code> are global. Of course, these are just illustrative examples, as there are many different flavors of defining/using modules in RequireJS.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>A while ago, I offered-up a JavaScript design pattern (the Module Pattern - see below) that I got from a John Resig example as <a href=\"http://stackoverflow.com/questions/5733968/jquery-ajax-and-object-field/5734383#comment-6560990\"><strong>part of a solution to someone\u2019s question</strong></a> and I received the following comment:</p>\n\n<blockquote>\n  <p>\u201c\u2026that pattern is a bit over\n  engineered and not that good. Still\n  leaking into global-scope. and your\n  not opening yourself to async loaders.\n  But it is better then just ad-hoc\n  coding !\u201d</p>\n</blockquote>\n\n<p><strong>So\u2026</strong><br/></p>\n\n<p>If \u201cleaking\u201d into global scope means \u201cyour object gets appended to the browsers window (object)\u201d\u2026then everything already gets appended (globally):</p>\n\n<p><strong>This \u201cleaks\u201d into global scope:</strong><br/></p>\n\n<pre><code>window.jQuery\n</code></pre>\n\n<p>\u2026just call:  <code>window.jQuery</code> and it resolves as a function();</p>\n\n<p><strong>This \u201cleaks\u201d into global scope:</strong><br/></p>\n\n<pre><code>function HelloWorld() { alert(\u2018Howdy\u2019); }\n</code></pre>\n\n<p>\u2026just call: <code>window.HelloWorld()</code> and you will get \u2018Howdy\u2019.</p>\n\n<p><strong>This \u201cleaks\u201d into global scope:</strong><br/></p>\n\n<pre><code>var myVariable = 10;\n</code></pre>\n\n<p>\u2026just call: <code>window.myVariable</code> and you will get 10</p>\n\n<p>If the commenter is correct, then all the above \u201cleak\u201d into global-scope.  So, personally, I don\u2019t see a way NOT to \u201cleak\u201d into global-scope as even your form controls exists there (as well).</p>\n\n<p><strong>As such, here are my questions\u2026</strong><br/></p>\n\n<ul>\n<li>What is meant by \u201cleaking\u201d into\nglobal-scope?</li>\n<li>Why is that bad?</li>\n<li>How do you avoid it?</li>\n<li>When wanting to create persistent\ncustom-objects, why is the Module\nPattern (below) bad?</li>\n<li>Design patterns let you encapsulate\ncomplex logic, <em>is encapsulation\nsuddenly bad simply because we\u2019re\nwriting in JavaScript</em>?</li>\n<li>Or...is this commenter simply wrong?</li>\n</ul>\n\n<p><strong>Here is the Module Pattern I Mentioned Above:</strong><br/></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var myNamespace = (function($) {\n        var publicInstances = {};\n\n        // ***********************\n        // myObject\n        publicInstances.myObject = myObject;\n        function myObject() {\n\n            /// &lt;summary&gt;A pointer to this&lt;/summary&gt;\n            var self = this;\n\n            this.someProperty = new String();\n\n            this.initialize = function() {\n                /// your code here\n            }\n            this.someMethod = function() {\n                /// your code here\n            }\n\n            self.initialize();\n        }\n\n        return publicInstances;\n    })(jQuery);\n\n\n    jQuery(document).ready(function() {\n        // Use would look like\n        var myInstance = new myNamespace.myObject();\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p><hr/>\n<strong>UPDATED</strong>:<br/>\nI\u2019m satisfied with the answers below and want to thank everyone for taking the time to comment.</p>\n\n<p><strong>TO RECAP THE ANSWERS BELOW:</strong><br/>\n\"Leaking\" into global-scope occurs when something used in local-scope is unintentionally made available to the global-scope (e.g. the window object).  This is bad because it opens the page to potential naming collisions which could result in variables resolving to unexpected values or types.</p>\n\n<p>Intentionally making a variable global is not considered a \"leak\".  However, properly namespacing the object is required to reduce potential for said naming collisions.</p>\n\n<p>You cannot avoid globally-scoped variables, but you can reduce the above risks by using asynchronous-loaders and defining-modules made available in plug-ins like <a href=\"http://requirejs.org/\" rel=\"nofollow\"><strong>RequireJS</strong></a> or <a href=\"https://github.com/unscriptable/curl\" rel=\"nofollow\"><strong>Curl</strong></a>.</p>\n",
            "last_activity_date": 1356103342,
            "question_id": 5951228,
            "score": 15,
            "tags": [
                "javascript",
                "jquery",
                "design-patterns",
                "globals"
            ],
            "title": "What is meant by \u201cleaking\u201d into global scope?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>just get element using</p>\n\n<pre><code>   function name()\n   {  \n   document.getElementById('elementid').value = \"\";\n   }\n</code></pre>\n\n<p>you can call this function on onfocus event of textbox and clear the value</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>&lt;input type=\"text\" value=\"A new value\" onfocus=\"this.value='';\"&gt;\n</code></pre>\n\n<p>However this will be very irrigating for users that focus the element a second time e.g. to correct something.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;input type=\"text\" value=\"A new value\" onfocus=\"javascript: if(this.value == 'A new value'){ this.value = ''; }\" onblur=\"javascript: if(this.value==''){this.value='A new value';}\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>If using <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a> is acceptable:</p>\n\n<pre><code>jQuery(\"#myTextBox\").focus( function(){ \n    $(this).val(\"\"); \n} );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It sounds like you're trying to use a \"watermark\" (a default value that clears itself when the user focuses on the box).  Make sure to check the value before clearing it, otherwise you might remove something they have typed in!  Try this:</p>\n\n<pre><code>&lt;input type=\"text\" value=\"A new value\" onfocus=\"if(this.value=='A new value') this.value='';\"&gt;\n</code></pre>\n\n<p>That will ensure it only clears when the value is \"A new value\".</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Use the onfocus and onblur events like this:</p>\n\n<pre><code>&lt;input type=\"text\" name=\"yourName\" value=\"A new value\" onfocus=\"if (this.value == 'A new value') this.value = '';\" onblur=\"if (this.value == '') this.value = 'A new value';\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Give this in input tag of textbox:</p>\n\n<pre><code>onClick=\"(this.value='')\" \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Simple one</p>\n\n<pre><code>onfocus=\"javascript:this.value=''\" onblur=\"javascript: if(this.value==''){this.value='Search...';}\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>&lt;input type=\"text\" name=\"yourName\" value=\"A new value\" onfocus=\"if (this.value == 'A new value') this.value =='';\" onblur=\"if (this.value=='') alert('Please enter a value');\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>use sth like</p>\n\n<p><code>&lt;input type=\"text\" name=\"yourName\" placeholder=\"A new value\" /&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>just set empty string</p>\n\n<pre><code>    &lt;input type=\"text\" id=\"textId\" value=\"A new value\"&gt;\n    document.getElementById('textId').value = '';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Onfous And onblur Text box with javascript</strong></p>\n\n<pre><code>   &lt;input type=\"text\" value=\"A new value\" onfocus=\"if(this.value=='A new value') this.value='';\" onblur=\"if(this.value=='') this.value='A new value';\"/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a </p>\n\n<pre><code>&lt;input type=\"text\" value=\"A new value\"&gt;\n</code></pre>\n\n<p>I need a javascript method to clear the value of the textbox when the focus is on the\ntextbox.</p>\n\n<p>How can this be achieved?</p>\n",
            "last_activity_date": 1392872476,
            "question_id": 4135818,
            "score": 15,
            "tags": [
                "javascript"
            ],
            "title": "How to clear a textbox using javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You'll want to make sure the date is parsed as UTC, because otherwise javascript will interpret it as a date in your local timezone.</p>\n\n<p>The date looks like this: <code>Tue Jul 13 23:18:36 +0000 2010</code></p>\n\n<p>You can parse it like this:</p>\n\n<pre><code>function parseDate(str) {\n  var v=str.split(' ');\n  return new Date(Date.parse(v[1]+\" \"+v[2]+\", \"+v[5]+\" \"+v[3]+\" UTC\"));\n} \n</code></pre>\n\n<p>Which will give the correct date/time in the local timezone, for example: <code>Tue Jul 13 2010 19:18:36 GMT-0400 (EDT)</code></p>\n\n<p>So that should leave your code looking something like this:</p>\n\n<pre><code>$(function(){\n  $.getJSON(\"http://twitter.com/statuses/user_timeline/google.json?count=1&amp;callback=?\", function(data){\n    $.each(data, function(){\n      var created = parseDate(this.created_at);\n      $(\"&lt;div&gt;&lt;/div&gt;\").append(\"&lt;ul&gt;&lt;li&gt;Unformatted: \" + this.created_at + \"&lt;/li&gt;&lt;li&gt;Formatted: \" + created + \"&lt;/li&gt;&lt;/ul&gt;\").appendTo(\"body\");\n    });\n  });\n  function parseDate(str) {\n    var v=str.split(' ');\n    return new Date(Date.parse(v[1]+\" \"+v[2]+\", \"+v[5]+\" \"+v[3]+\" UTC\"));\n  } \n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>I've found the <a href=\"http://docs.jquery.com/UI/Datepicker/parseDate\" rel=\"nofollow\">jQuery Globalization Plugin</a> date parsing to work best.  Other methods had cross-browser issues and stuff like date.js had not been updated in quite a while. </p>\n\n<p>You also don't need a datePicker on the page.  You can just call something similar to the example given in the docs:</p>\n\n<pre><code>$.parseDate('yy-mm-dd', '2007-01-26');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is what I made to correct this!</p>\n\n<pre><code>$tweetList.append('&lt;p&gt;&lt;span class=\"twitterdate\"&gt;' + parseTwitterDate(item.created_at) + location + '&lt;/span&gt;&lt;/p&gt;');\n\nvar month=new Array();\nmonth[0]=\"January\";\nmonth[1]=\"February\";\nmonth[2]=\"March\";\nmonth[3]=\"April\";\nmonth[4]=\"May\";\nmonth[5]=\"June\";\nmonth[6]=\"July\";\nmonth[7]=\"August\";\nmonth[8]=\"September\";\nmonth[9]=\"October\";\nmonth[10]=\"November\";\nmonth[11]=\"December\";\n\nfunction parseTwitterDate($stamp) {\n    var v=$stamp.split(' ');\n    var date = new Date(Date.parse(v[1]+\" \"+v[2]+\", \"+v[5]+\" \"+v[3]+\" UTC\"));\n    var hour = date.getHours();\n    var ampm = hour&lt;12 ? ' AM' : ' PM';\n    return date.getHours() +':'+ date.getMinutes() +' '+ ampm +' '+ date.getDate() +' '+ month[date.getMonth()] +' '+ date.getFullYear();\n}\n</code></pre>\n\n<p>And this give me \"19:38 PM 23 April 2012\" on Chrome, IE and Firefox.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a twitter feed and I create a new date obj so I can format the date to my liking. </p>\n\n<p><code>var created = new Date(this.created_at)</code> works in firefox and chrome but not in IE7. I seem to be having trouble passing the date through the <code>new Date()</code> function. It just returns undefined and NaN.</p>\n\n<p>Here is the code. If you try to test it out don't forget to include jquery. Thank you.</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n&lt;title&gt;Twitter Test&lt;/title&gt;\n&lt;script type=\"text/javascript\" src=\"jquery-1.4.2.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" &gt;\n\n$(function(){\n$.getJSON(\"http://twitter.com/statuses/user_timeline/google.json?count=1&amp;callback=?\", function(data){\n    $.each(data, function(){\n        var created = new Date(this.created_at)\n        $(\"&lt;div&gt;&lt;/div&gt;\").append(\"&lt;ul&gt;&lt;li&gt;Unformatted: \" + this.created_at + \"&lt;/li&gt;&lt;li&gt;Formatted: \" + created + \"&lt;/li&gt;&lt;/ul&gt;\").appendTo(\"body\")\n    });\n\n})  \n\n})\n\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1335297647,
            "question_id": 3243546,
            "score": 15,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "date",
                "twitter"
            ],
            "title": "Problem with Javascript Date function in IE 7, returns NaN"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>From <a href=\"http://en.wikipedia.org/wiki/Coordinated%5FUniversal%5FTime\">Coordinated Universal Time</a> on Wikipedia:</p>\n\n<blockquote>\n  <p>Coordinated Universal Time (UTC) is a time standard based on International Atomic Time (TAI) with leap seconds added at irregular intervals to compensate for the Earth's slowing rotation.</p>\n</blockquote>\n\n<p>From <a href=\"http://en.wikipedia.org/wiki/Greenwich%5FMean%5FTime\">Greenwich Mean Time</a> on Wikipedia:</p>\n\n<blockquote>\n  <p>UTC is an atomic time scale which only approximates GMT with a tolerance of 0.9 second</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>One is measured from the sun and another from an atomic clock.</p>\n\n<p>For your purposes, they are the same.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Are you accounting for connection times and lag?  If you're using AJAX, you need to make sure you use a time offset for the length of time it takes to connect and download the response:</p>\n\n<pre><code>var XHR = new XMLHttpRequest();\nvar Now = new Date().getTime();\nXHR.open(\"GET\", \"/datetime.php\", true);\nXHR.onreadystatechange = function()\n{\n    if (XHR.status == 200 &amp;&amp; XHR.readyState == 4)\n    {\n        // How long did it take to get here?\n        var TimeOffset = new Date().getTime() - Now;\n\n        // ... your code to get the date from the response goes here\n\n        // Now add the TimeOffset variable to the date\n        var SyncTime = new Date().setTime(PHPTime + TimeOffset);\n    }\n}\nXHR.send();\n</code></pre>\n\n<p>Of course, that code's just to give you a general idea and will probably need adjusting to account for timezone offsets etc.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a calendar build in JS that compares dates with PHP.  The JS date object is set using PHP but when I compare future dates they appear to be out of sync.</p>\n\n<p>PHP is set to GMT and JS is set to UTC, how do these standards differ and could this be causing the problem?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1256288905,
            "question_id": 1612148,
            "score": 15,
            "tags": [
                "php",
                "javascript",
                "date"
            ],
            "title": "GMT vs UTC dates"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Internet explorer is capable of distinguishing left and right shift with the shiftLeft property: </p>\n\n<p><a href=\"http://help.dottoro.com/ljgjxtkf.php\" rel=\"nofollow\">shiftLeft property (event)</a></p>\n\n<p>Otherwise, they are indistinguishable.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In newer browsers supporting <code>DOM3</code> you can use <code>event.location</code> to check the location.</p>\n\n<p>In <a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#idl-def-KeyboardEvent\">the DOM3 spec</a>, there are 4 constants defined for location, <code>DOM_KEY_LOCATION_STANDARD</code>, <code>DOM_KEY_LOCATION_LEFT</code>, <code>DOM_KEY_LOCATION_RIGHT</code>,  and<code>DOM_KEY_LOCATION_NUMPAD</code>.</p>\n\n<p>In this case, you can do:</p>\n\n<pre><code>if (event.location === KeyboardEvent.DOM_KEY_LOCATION_LEFT){\n\n} else if (event.location === KeyboardEvent.DOM_KEY_LOCATION_RIGHT){\n\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>Mostly this is a sanity check. The key code for both shift keys is 16. Does that mean it is actually impossible to distinguish a left and right shift events in a browser?                                      </p>\n",
            "last_activity_date": 1394627030,
            "question_id": 22029033,
            "score": 14,
            "tags": [
                "javascript",
                "keyboard",
                "keycode"
            ],
            "title": "Can javascript tell the difference between left and right shift key?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Any time you see <code>&lt;option value=\"?\" selected=\"selected\"&gt;&lt;/option&gt;</code> in the select, it means that your <code>ng-model</code> is set to a value that isn't in the <code>ng-options</code>. So, if you don't want the blank option, you need to make sure <code>item</code> is set to a value in your <code>itemlist</code>. This could be as easy as having the following in your controller:</p>\n\n<pre><code>$scope.item = $scope.itemlist[0];\n</code></pre>\n\n<p>This will give it an inital value, and then angular will update it for you thereafter.</p>\n",
                    "is_accepted": true,
                    "score": 34
                }
            ],
            "body": "<p>I have a listbox that I am creating with a select, using AngularJS ng-repeat.  The listbox is created correctly, and when I select one of the items and click my button, I get to the function and have the information I need.</p>\n\n<p>My html code is as follows:</p>\n\n<pre><code>&lt;select size=\"6\" ng-model=\"item\" ng-options=\"s.name for s in itemlist\"&gt;&lt;/select&gt;\n&lt;button class=\"btn tt-btn-blue\" ng-model=\"singleModel\" ng-click=\"onLoadClicked(item.id)\"&gt;Load&lt;/button&gt;\n</code></pre>\n\n<p>My problem is that when the listbox paints, it has one item at the top that is blank.  When I inspect the listbox during a run in Chrome, I get the following output in the console:</p>\n\n<pre><code>&lt;select size=\"6\" ng-model=\"item\" ng-options=\"s.name for s in itemlist\" class=\"ng-pristine ng-valid\"&gt;\n&lt;option value=\"?\" selected=\"selected\"&gt;&lt;/option&gt;\n&lt;option value=\"0\"&gt;Item 1&lt;/option&gt;\n&lt;option value=\"1\"&gt;Item 2&lt;/option&gt;\n&lt;option value=\"2\"&gt;Item 3&lt;/option&gt;\n&lt;option value=\"3\"&gt;Item 4&lt;/option&gt;\n&lt;option value=\"4\"&gt;Item 5&lt;/option&gt;\n&lt;option value=\"5\"&gt;Item 6&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>I am wondering how I can get rid of the first option inserted by the ng-repeat.  I don't want to see a blank space at the top of the listbox.  I realize one option would be to set the first actual option (value=\"0\") as the selected item, but I would rather have no selected items to start.</p>\n",
            "last_activity_date": 1363645942,
            "question_id": 15488181,
            "score": 14,
            "tags": [
                "javascript",
                "select",
                "angularjs"
            ],
            "title": "AngularJS - extra blank option added using ng-repeat in select tag"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Some JavaScript engines can parse that format directly, which makes the task pretty easy:</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>function convertDate(inputFormat) {\n  function pad(s) { return (s &lt; 10) ? '0' + s : s; }\n  var d = new Date(inputFormat);\n  return [pad(d.getDate()), pad(d.getMonth()+1), d.getFullYear()].join('/');\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>This will ensure you get a two-digit day and month.</p>\n\n<pre><code>function formattedDate(date) {\n    var d = new Date(date || Date.now()),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length &lt; 2) month = '0' + month;\n    if (day.length &lt; 2) day = '0' + day;\n\n    return [month, day, year].join('/');\n}\n\nalert(formattedDate());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/11591854/format-date-to-mm-dd-yyyy-in-javascript\">Format date to MM/dd/yyyy in javascript</a>  </p>\n</blockquote>\n\n\n\n<p>How can I convert the following date format below (Mon Nov 19 13:29:40 2012)</p>\n\n<p>into:</p>\n\n<p>dd/mm/yyyy</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n    &lt;script type=\"text/javascript\"&gt;\n      function test(){\n         var d = Date()\n         alert(d)\n      }\n    &lt;/script&gt;\n    &lt;/head&gt;\n\n&lt;body&gt;\n    &lt;input onclick=\"test()\" type=\"button\" value=\"test\" name=\"test\"&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1412874861,
            "question_id": 13459866,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "Javascript change date into format of (dd/mm/yyyy)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You need 1..toString or (1).toString to get the number literal</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It's just a language grammar limitation.</p>\n\n<p>Since <code>1.</code> is a legal literal number (and <code>1.t</code> is not) the tokeniser will split this into the following tokens:</p>\n\n<pre><code>1.\ntoString\n(\n)\n</code></pre>\n\n<p>And that's an illegal sequence of tokens.  It's <code>object method</code>, instead of <code>object . method</code>.</p>\n\n<p>In the working versions in @Joey's answer, the braces prevent the tokenizer from treating the dot as part of the number literal instead of as a separate token, as does writing:</p>\n\n<pre><code>1.0.toString()\n</code></pre>\n\n<p>or</p>\n\n<pre><code>1..toString()\n</code></pre>\n\n<p>since the tokenizer knows that the second dot <em>must</em> be a token on its own, and not part of the number literal.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>level is a variable (and thus an object).</p>\n\n<p>1 is a literal. They are not objects and the interpreter thinks about them completely differently.</p>\n\n<p><a href=\"http://www.cs.brown.edu/courses/bridge/1998/res/javascript/javascript-tutorial.html#4\" rel=\"nofollow\">http://www.cs.brown.edu/courses/bridge/1998/res/javascript/javascript-tutorial.html#4</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm reading through Douglas Crockford's <em><a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\" rel=\"nofollow\">JavaScript: The Good Parts</a></em>, and I'm at the point where he defines a <em>fade</em> function. Part of this code boils down to this:</p>\n\n<pre><code>var level = 1;\nvar hex = level.toString(16);\n</code></pre>\n\n<p>So I run this in my browser's console to see what I get....</p>\n\n<pre><code>var level = 1;\nlevel.toString(16);\n</code></pre>\n\n<p>Hey, it returns \"<code>1</code>\"... Fabuloso! Wunderbar!</p>\n\n<p>Then to be cheeky, I try this to see what I get...</p>\n\n<pre><code>1.toString(16);\n</code></pre>\n\n<p>And I get</p>\n\n<blockquote>\n  <p>SyntaxError: Unexpected token ILLEGAL</p>\n</blockquote>\n\n<p>What the what? If <code>level</code> is a variable equal to 1, and running this method on level works fine, then why doesn't running this method on the actual number 1 work? I tried a similar experiment with the <code>toPrecision()</code> method and that worked fine in both cases. What's the issue here? Is this another one of those inherent flaws in the JavaScript implementation, or am I missing something? I am testing in Google Chrome.</p>\n\n<p>Related: Stack Overflow question <em><a href=\"http://stackoverflow.com/questions/4046342\">Why don't number literals have access to Number methods?</a></em>.</p>\n",
            "last_activity_date": 1424397870,
            "question_id": 6853865,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "Usage of toString in JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>No, even the <a href=\"http://www.w3.org/TR/html5/timers.html#timers\" rel=\"nofollow\">HTML5 spec</a> (which is a rationalisation of the HTML 4.01 behaviour in current browsers, with additional features) doesn't specify a way to list the available callbacks.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>how about simply rewriting the setTimeout function to sort of inject custom logging functionality?</p>\n\n<p>like</p>\n\n<pre><code>var oldTimeout = setTimeout;\nwindow.setTimeout = function(callback, timeout) {\n  console.log(\"timeout started\");\n  return oldTimeout(function() {\n    console.log('timeout finished');\n    callback();\n  }, timeout);\n}\n</code></pre>\n\n<p>might work?</p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>So I was wondering, is there any feasible way in JavaScript to view information about scheduled timeouts and intervals that you don't explicitly know about (I know <code>setTimeout</code> and <code>setInterval</code> return a handle that can be used to refer to the scheduled instance, but say that this is unavailable for one reason or another)?  For instance, is there a way to use a tool like Chrome's JavaScript console to determine what timeouts are currently active on an arbitrary page, when they will fire, and what code will be executed when they fire?  More specifically, say a page has just executed the following JavaScript:</p>\n\n<pre><code>setTimeout(\"alert('test');\", 30000);\n</code></pre>\n\n<p>Is there some code I can execute at this point that will tell me that the browser will execute <code>alert('test');</code> 30 seconds from now?</p>\n\n<p>It seems like there theoretically should be some way to get this information since pretty much everything in JavaScript is exposed as a publicly accessible property if you know where to look, but I can't recall an instance of ever doing this myself or seeing it done by someone else.</p>\n",
            "last_activity_date": 1379074673,
            "question_id": 5817526,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript - Is it possible to view all currently scheduled timeouts?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The answers to this questions suggest that it's not possible: <a href=\"http://stackoverflow.com/questions/723592\">Why doesn't @contenteditable work on the iPhone?</a></p>\n\n<p>A colleague of mine who was working on a similar project ended up using a textarea for the iPad version of his editor, and contenteditable divs/spans for browsers that support contenteditable. Perhaps something similar would work for you.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have found that calling <code>prompt(\"Enter some value\")</code> does trigger the keyboard on my iPad 2. Not sure if this is helpful in your situation or not.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If your code is executed via something that was initiated via a user action then it will work.</p>\n\n<p>E.g;</p>\n\n<p>this works (pops keyboard):</p>\n\n<pre><code>&lt;input type='text' id='foo'&gt;&lt;div onclick='$(\"#foo\").focus();'&gt;click&lt;/div&gt;\n</code></pre>\n\n<p>this doesn't work (input gets a border but no keyboard pop):</p>\n\n<pre><code>&lt;input type='text' id='foo'&gt;\n&lt;script&gt;\n  window.onload = function() {\n    $(\"#foo\").focus();\n  }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Here's a solution for you:</p>\n\n<pre><code>&lt;input id=\"my-input\" type=\"text\" /&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    var textbox = document.getElementById('my-input');\n    textbox.select();\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Place a transparent textarea over the contentEditable div. The keyboard will open, as soon as the user focus the textarea. </p>\n\n<p>Register an <code>event listener</code> on the textarea for the <code>focus</code> event and set the <code>visibility</code>of the textarea to <code>hidden</code>. This prevents the blinking cursor.</p>\n\n<p>Set the <code>visibility</code> of the textarea back to <code>visible</code> after the <code>blur</code> event occurred.</p>\n\n<p>Register additional event listeners for <code>keydown</code>, <code>keyup</code>, <code>keypress</code>events and process theses events the same way, as you process them in the contentEditable div.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am developing an HTML code editor using simple DIV's and capturing events.  When I use this on the iPad the keyboard never pops up since i'm not technically in an editable field. </p>\n\n<p>Is there a way to programatically tell the iPad that I need a keybaord?</p>\n",
            "last_activity_date": 1361550405,
            "question_id": 4609765,
            "score": 14,
            "tags": [
                "javascript",
                "iphone",
                "html",
                "ipad",
                "keyboard"
            ],
            "title": "Manually triggering the iPhone/iPad/iPod keyboard from JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>For example, if you want to do this:</p>\n\n<pre><code>{name:\"bla\",address:\"address\"}\n</code></pre>\n\n<p>the new Object() way would be:</p>\n\n<pre><code>var o = new Object();\no.name=\"bla\";\no.address=\"address\";\n</code></pre>\n\n<p>The first one is much shorter. And I think that it would be faster in many browsers, too (<a href=\"http://jsperf.com/object-performance\" rel=\"nofollow\">jsperf testcase</a>).</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I think it's mostly about succinctness.</p>\n\n<p>Why write <code>new Array()</code> when you can write <code>[]</code>, or <code>new Object()</code> when you can write <code>{}</code>?</p>\n\n<p>Also <code>new Boolean()</code> is entirely redundant. A boolean is always going to need to be either true or false, so you should definitely use the built in constants for that.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Aside from being minutely faster and significantly more readable (think JSON), the only thing else I can think of is the fact that every time you call <code>new</code>, you call a constructor that builds an object containing your values, whereas literals (<code>[]</code>, <code>1</code>, <code>true</code>, etc) just give you the stuff you need directly without having to create object versions of them.</p>\n\n<p>(Of course, that's with the exception of <code>{}</code> which produces an empty object just like <code>new Object()</code>.)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In most cases an <a href=\"http://stackoverflow.com/questions/2500130/javascript-object-literals\">object literal</a> or array literal is sufficient and easier to use. You can even call or apply prototype methods (e.g. [].prototype.slice.call(someObj)) It's mostly <a href=\"http://jsperf.com/literal-vs-constructor-array\" rel=\"nofollow\">faster</a> too. \nYou'll may want to notice that {} and []\u2018s constructor cannot be overwritten and that \n<code>Object</code> and <code>Array</code> are constructors where {} and [] are instances.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The advantages of object and array literals over using the respective constructors are:</p>\n\n<ul>\n<li>Shorter and more readable</li>\n<li>Safer: literals will still work when the <code>Array</code> or <code>Object</code> constructors have been overridden</li>\n<li>Possibly faster, though it's unlikely to be a major consideration (any bottlenecks will almost certainly originate elsewhere in code)</li>\n</ul>\n\n<p>In the case of arrays, there's an additional advantage of a literal: it's impossible to create an array with a single member using the <code>Array</code> constructor alone. For example, <code>[3]</code> will create an array with one element which is the number 3, while <code>new Array(3)</code> creates an array of length 3.</p>\n\n<p><strong>Update: the following paragraph is no longer relevant now the question has been edited.</strong></p>\n\n<p>Regarding Booleans, you seem to have a misconception: <code>new Boolean(false)</code> is not the same as <code>false</code>. The <code>Boolean()</code> constructor creates a Boolean object whereas <code>false</code> and <code>true</code> are Boolean primitives. In fact, <code>new Boolean(false)</code> evaluates to <code>true</code> when coerced into a Boolean in, for example, an <code>if</code> statement. In short, there's very rarely a reason to use the <code>Boolean()</code> constructor. Use <code>true</code> and <code>false</code> instead. Similarly, other primitives such as strings and numbers have corresponding <code>String()</code> and <code>Number()</code> constructors that produce <code>String</code> and <code>Number</code> objects that are different to primitive strings and numbers and should generally be avoided.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>Many people say that you should avoid new Object, new Array()and instead use {}. [], and true/false.</p>\n\n<p>What are the benefits of using the literal constructs to get a  new instance of an Object or Array rather than using new?   I konw that Crockford doesn't like new but is that the main argument?</p>\n",
            "last_activity_date": 1290902854,
            "question_id": 4292048,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "Why use {} instead of new Object() and use [] instead of new Array() and true/false instead of new Boolean()?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Nope. Remove the comma.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<pre><code>parseFloat( theString.replace(/,/g,'') );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>You can use the string replace method, but not in a one liner as a regexp allows.</p>\n\n<pre><code>while(str.indexOf(',')!=-1)str= str.replace(',','');\nparseFloat(str);\n</code></pre>\n\n<p>Or to make a single expression without a regexp=</p>\n\n<pre><code>return parseFloat(str.split(',').join(''));\n</code></pre>\n\n<p>I'd use the regexp.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Building on the idea from @kennebec, if you want to make sure that the commas are correct, and you don't want to replace commas, you could try something like this:</p>\n\n<pre><code>function myParse(num) {\n  var n2 = num.split(\",\")\n  out = 0\n  for(var i = 0; i &lt; n2.length; i++) {\n    out *= 1000;\n    out += parseFloat(n2[i])\n  }\n  return out\n}\nalert(myParse(\"1,432,85\"));\n// Returns 1432085, as the comma is misplaced.\n</code></pre>\n\n<p>It may not be as fast, but you wanted alternatives :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How would it be a nice way of handling this?</p>\n\n<p>I already thought on removing the comma and then parsing to float. </p>\n\n<p>Do you know a better/cleaner way?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1417357763,
            "question_id": 3205730,
            "score": 14,
            "tags": [
                "javascript",
                "parsefloat"
            ],
            "title": "javascript parseFloat &#39;500,000&#39; returns 500 when I need 500000"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>as far I know, dragged element must be positioned over other elements under mouse pointer. If it will moving with the mouse pointer, it prevent any selections on the page.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In W3C browsers, you can call the <code>preventDefault</code> method on the <code>event</code> object. The IE equivalent is to set the <code>returnValue</code> to <code>false</code>.</p>\n\n<pre><code>function stopDefault(e) {\n    if (e &amp;&amp; e.preventDefault) {\n        e.preventDefault();\n    }\n    else {\n        window.event.returnValue = false;\n    }\n    return false;\n}\n</code></pre>\n\n<p>EDIT: Just re-read the question and you might also want to prevent the default action in the part of your code that handles the actual dragging, and not just at the initial mousedown or click.</p>\n",
                    "is_accepted": true,
                    "score": 18
                }
            ],
            "body": "<p>this is a bit of a specific question so I'll get right to the point.</p>\n\n<p>I'm working on a short and simple drag and drop routine for part of a web application, and although the dragging and dropping bit works fine, the site goes all ugly-tastic during the operation because the browser still does the default operation and works on text selecting.</p>\n\n<p>I've tried a few solutions mainly involving returning false from the mousedown or click events, and although they disable text selection in some browsers, they also seem to disable the mouseup event entirely, ruining the \"drop\" bit of the script and leaving this perma-floating icon hanging around the mouse-- not fun.</p>\n\n<p>I don't really want text selection to be gone entirely, I just want to suggest that the browser... not do it while dragging, if that makes sense. Since I know the area that is affected (there are iframes involved) I can easily apply a property to the affected elements, etc. I can post code if necessary, but I'm looking for more of a general solution. Since this is an aesthetics thing only, I'm looking for a fix that works in most browsers, it's not really that crucial.</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1242888607,
            "question_id": 891581,
            "score": 14,
            "tags": [
                "javascript",
                "html",
                "drag-and-drop",
                "behavior"
            ],
            "title": "How can I disable Text Selection temporarily using JavaScript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>$(this).parent().css('z-index',3000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>That's invalid Javascript syntax; a property name cannot have a <code>-</code>.</p>\n\n<p>Use either <code>zIndex</code> or <code>\"z-index\"</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>because your jQuery code is wrong. \nCorrectly would be:</p>\n\n<pre><code>var theParent = $(this).parent().get(0); \n$(theParent).css('z-index', 3000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>zIndex</code> is part of javaScript notation.(camelCase)<br />\nbut jQuery.css uses same as CSS syntax. <br />\nso it is <code>z-index</code>.</p>\n\n<p>you forgot .css(\"attr\",\"value\"). use ' or \" in both, attr and val. so, \n<code>.css(\"z-index\",\"3000\");</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Setting the <code>style.zIndex</code> property has <em>no effect</em> on non-positioned elements, that is, the element must be either absolutely positioned, relatively positioned, or fixed.</p>\n\n<p>So I would try:</p>\n\n<pre><code>$(this).parent().css('position', 'relative');\n$(this).parent().css('z-index', 3000);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<p>I, for some reason, can't change the zIndex of an element using jQuery. I've searched all of this website and Google but couldn't find the right answer.\n  I am trying to put my element in front of another div when clicking a button. I used the code you can see under here. But didn't work.</p>\n\n<pre><code>  $(this).parent().css('zIndex',3000);\n</code></pre>\n\n<p>CSS code of elements it's under in the begin:</p>\n\n<pre><code>#wall{\n    width:100%;\n    height:700px;\n    position: absolute;\n    top:500px;\n    background: #11c1e7;\n    opacity: 0.6;\n    z-index: 900;\n    }\n</code></pre>\n\n<p>CSS code of element that should go above this:</p>\n\n<pre><code>.port1 {\nwidth:200px;\nheight:200px;\nleft:&lt;?php echo rand(1,1000); ?&gt;px;\ntop:-500px;\nborder-radius: 500px;\nbackground:red;\nposition:absolute;\nz-index: 10;\n}\n</code></pre>\n\n<p>Does anyone know how I can fix this?</p>\n\n<p>// Edit</p>\n\n<p>Link to the site:\n<a href=\"http://dannypostma.com/project/j.php\">http://dannypostma.com/project/j.php</a></p>\n\n<p>When clicking the portfolio ball, two balls drop from the air. These should go in front of the water when clicked.</p>\n",
            "last_activity_date": 1399557168,
            "question_id": 8201855,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "z-index"
            ],
            "title": "Can&#39;t change z-index with JQuery"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Clicking on the widget needs to open a pop-up window containing a new page -- an iframe is not good enough, it must be a new window -- which is entirely under the control of your web application.  Confirm the action, whatever it is, on that page.</p>\n\n<p>Yes, this is somewhat inelegant, but the present Web security architecture doesn't give you any better options.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>There is no good programmable <a href=\"http://podlipensky.com/2012/07/clickjacking-explained/\" rel=\"nofollow\">solution on clickjacking</a>. Some companies sue spammers as a defense to clickjacking. Others choose to show popup windows once user clicked inside iframe, although it degrades user experience, especially in case of single-click-button. This is exactly what Twitter do for the \u201cRetweet\u201d button. Facebook currently deploys this approach for the \u201cLike\u201d button, asking for confirmation whenever requests come from blacklisted domains. I\u2019ve heard that Googlebot perform some clickjacking heuristics while indexing pages with its \u201c+1\u201d button (checking computed styles, elements overlapping and so on)\u2026</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is no way to prevent request forgery while under a clickjacking attack. No CSRF defense exists that can withstand a clickjacking attack, because there is no way to distinguish a real click from a fake click on the client side.</p>\n\n<p>OWASP <a href=\"https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet#No_Cross-Site_Scripting_.28XSS.29_Vulnerabilities\" rel=\"nofollow\">mentions in their CRSF prevention spreadsheet</a> that one of the preconditions for the CSRF token defense to work is that no XSS attack is underway.</p>\n\n<p>In my view this should also include clickjacking, as the CSRF token even hidden inside iframe  cannot defend against clickjacking. The request is being forged by a direct user click.</p>\n\n<p>So in the end we are not really stuck between CSRF and Clickjacking - CSRF defenses are meant for a different type of attacks where there is a lot less power on the side of the attacker.</p>\n\n<p>So towards the questions you mention concerning clickjacking and CSRF:</p>\n\n<ul>\n<li><p><em>What is the best solution (if any) to this problem?</em> - The best defense for clickjacking on the client side is to open a new browser tab or a resized browser window with a page from your site and confirm the action there, as @Zack mentions. This is what the twitter button does, and there cannot be request forgery in this scenario either.</p></li>\n<li><p><em>So there is a duality, it seems you are stuck between CSRF and Clickjacking</em> - The CSRF defenses are not meant for cases like XSS or clickjacking attacks, they are effective only against less powerful attacks (email with malicious link, post malicious link in forum etc.)</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><strong>--UPDATE--</strong>\nWhen you say \"widget\", if you mean something outside of your application that un-authenticated people interact with then disregard this answer. I reread your question and you never really state what you mean by \"widget\". We have all kinds of \"widgets\" that are with in our application. I thought that's what you were talking about, everything inside an application that only authenticated users were interacting with. If that is the case then this answer is what OWASP recommends.</p>\n\n<p><strong>--Original Answer--</strong>\n\"You don't want this request to be vulnerable to CSRF so you write an iframe to the page.\"  No, don't make an iframe, that way you can do the normal OWASP recommendation for protecting against Cross Site framing.</p>\n\n<p>To protect against CSRF hash some value(s), include it in your form (or ajax POST data), then check the hash value on the back end.  If it matches it's from your site.  The more specific data you can put in the hash the better.</p>\n\n<p>Example: When a user signs in you can create a long random string and tie that to their session.  This string must never be visible on your site or when viewing the source.  Then lets say the user pulls up some specific record that they want to edit.  You could then take that users long random string you created, append that records primary key to it, then hash them.  The result of that hash you can include in your form as a hidden.  Then on your backend before you do anything you check for the presence of that hidden, if it doesn't exist, abort.  If it does exist, take that users random session string and the clear text primary key they submitted, hash them, if it matches you know it's from your site.</p>\n\n<p>And it's easy to add this everywhere even if your site is already written (assuming your site has some single piece of code included on all pages, like a footer).  Make the hashed value and place it in a hidden div somewhere in your footer.  Then you can use jQuery to dynamically add this hash value hidden to all forms on the page.  And you can use jQuery.ajaxPrefilter to add it to all ajax POSTs automatically in case you are doing a ajax post and not a normal form post.  We've protects some very large sites that were already coded this way.</p>\n\n<p><a href=\"https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)_Prevention_Cheat_Sheet\" rel=\"nofollow\">https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)_Prevention_Cheat_Sheet</a></p>\n\n<p>If this sounds like that path you want to take I could show some of the jQuery code for doing it.  As far as what your are hashing, how you want to check it on the backend, etc... that all depends on if you are using ColdFusion, PHP, PL/SQL (psp) etc... I can point you in the right direction if its one of those.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I think I understand what you're doing.   You want to allow any site to iframe your widget, thus an attacker has complete control of the parent's source code and can create clickjacking routines to force users to click the widget.</p>\n\n<p>So the iframe would be able to employ a CSRF token, as it should, which will protect from this type of attack so long as the parent frame is unable to read the token.</p>\n\n<p>Clickjacking, as I am sure you know, is a completely different type of attack than CSRF and needs a different defense.</p>\n\n<p>Really, if the widget is super important than implement 2-phase authentication.  Use <a href=\"http://twilio.com\" rel=\"nofollow\">http://twilio.com</a> to call the user and have him input a pin.  Or send an email to the user with a verification link.  Or ask the user to verify the action next time the user logs into your widget's website. </p>\n\n<p>If you had control of the parent frame, then you would have more options. It would then be a XSS protection matter.  </p>\n\n<h2>Update after the correct answer has been selected</h2>\n\n<p>So my approach to protecting against clickjacking is a bit overboard.  Looks like it can be protected using a popup window with a confirmation action. </p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<blockquote>\n  <p>Because of CSRF you must be within an iframe...</p>\n</blockquote>\n\n<p>No. You cannot remediate CSRF with form cookies and other nonce tricks. It does not matter where you put them.</p>\n\n<blockquote>\n  <p>So there is a duality, it seems you are stuck between CSRF\n  and Clickjacking. What the best solution (if any) to this problem?</p>\n</blockquote>\n\n<p>To remediate CSRF, you have to remove the threat by fixing the server that has the injection or malicious code, stopping the phishing email, etc. In the absence of a benign environment, you need to re-authenticate the user (or provide another challenge/response to ensure an interactive user). See:</p>\n\n<ul>\n<li><a href=\"https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet\" rel=\"nofollow\">Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet</a></li>\n</ul>\n\n<p>Te remdiate Clickjacking, utilize X-Frame-Options or frame-breaking code in Javascript. But I don't think either are foolproof. See:</p>\n\n<ul>\n<li><a href=\"https://www.owasp.org/index.php/Clickjacking_Defense_Cheat_Sheet\" rel=\"nofollow\">Clickjacking Defense Cheat Sheet</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Lets say you have a JavaScript widget which needs to fire off a request to your web application if and only if the user wants to click on it.   You don't want this request to be vulnerable to CSRF so you write an iframe to the page.  Based on the <a href=\"http://code.google.com/p/browsersec/wiki/Part2#Origin_inheritance_rules\">origin inheritance rules</a> the parent site won't be able to read the CSRF token.  However what about clickjacking (or <a href=\"http://en.wikipedia.org/wiki/Likejacking\">likejacking</a> )?  Because of CSRF you must be within an iframe and there for the <a href=\"https://www.owasp.org/index.php/Clickjacking#Defending_with_response_headers\">x-frame-options</a> cannot help, and the same holds true for <a href=\"http://en.wikipedia.org/wiki/Framekiller\">frame-busters</a>.</p>\n\n<p>The attacker is going to apply an <a href=\"http://ui-redressing.mniemietz.de/uiRedressing.pdf\">SVG mask</a> the iframe after the widget has loaded.  This mask will make the iframe invisible.   At this point the attacker can either resize the iframe to be the size of the page or have this now invisible iframe follow the cursor.  Either way whenever the user clicks anywhere on the page,  the iframe receives the click event and its game over. </p>\n\n<p>So there is a duality,  it seems you are stuck between CSRF and Clickjacking.   What the best solution (if any) to this problem?</p>\n",
            "last_activity_date": 1390617524,
            "question_id": 7328295,
            "score": 13,
            "tags": [
                "javascript",
                "security",
                "browser",
                "widget",
                "clickjacking"
            ],
            "title": "How to protect widgets from forged requests"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>multipart/form-data</code> doesn't look at like this: </p>\n\n<pre><code>dcs.source=boss-web&amp;query=data&amp;dcs.algorithm=lingo&amp;dcs.output.format=JSON&amp;dcs.clusters.only=true\n</code></pre>\n\n<p>This is <code>application/x-www-form-urlencoded</code>.</p>\n\n<p>Here's an <a href=\"http://www.redmountainsw.com/wordpress/archives/multipartform-data-over-the-wire-example\">example</a> of how <code>multipart/form-data</code> request looks like. And the related <a href=\"http://www.faqs.org/rfcs/rfc1867.html\">RFC 1867</a>.</p>\n\n<p><code>multipart/form-data</code> is quite often associated with uploading files. If this is your case you could take a look at the <a href=\"http://jquery.malsup.com/form/\">jquery form plugin</a> which allows you to ajaxify forms and <a href=\"http://jquery.malsup.com/form/#file-upload\">supports file uploads</a> as well.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>One option is using an iframe - <a href=\"http://jquery.malsup.com/form/\" rel=\"nofollow\">this</a> plugin.</p>\n\n<p>also see this <a href=\"http://www.ajaxf1.com/tutorial/ajax-file-upload-tutorial.html\" rel=\"nofollow\">tutorial</a>.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This way works:</p>\n\n<pre><code>$( \"form#upload-form\" )\n    .attr( \"enctype\", \"multipart/form-data\" )\n    .attr( \"encoding\", \"multipart/form-data\" );\n$.ajax({ \n    type: \"POST\",\n    contentType:attr( \"enctype\", \"multipart/form-data\" ),\n    url: \"/adm/oferta_insert\",\n    data: dados, \n    success: function( data ) { \n        alert( data );  \n    }  \n});  \n</code></pre>\n\n<p><a href=\"http://www.bennadel.com/blog/1273-Setting-Form-EncType-Dynamically-To-Multipart-Form-Data-In-IE-Internet-Explorer-.htm\" rel=\"nofollow\">http://www.bennadel.com/blog/1273-Setting-Form-EncType-Dynamically-To-Multipart-Form-Data-In-IE-Internet-Explorer-.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Using FormData(), you can upload files via ajax request.</p>\n\n<p>Refer this link for more info: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/FormData\" rel=\"nofollow\">FormData</a></p>\n\n<p>Tutorial about using FormData: <a href=\"http://net.tutsplus.com/tutorials/javascript-ajax/uploading-files-with-ajax/comment-page-1/#comments\" rel=\"nofollow\">tutorial</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to make a HTTP POST call with multipart/form-data , using jQuery:</p>\n\n<pre><code>$.ajax({\n  url: 'http://localhost:8080/dcs/rest',\n  type: 'POST',\n  contentType:'multipart/form-data',\n  data: 'dcs.source=boss-web&amp;query=data&amp;dcs.algorithm=lingo&amp;dcs.output.format=JSON&amp;dcs.clusters.only=true', \n  //dataType: \"jsonP\",\n  success: function(jsonData) {alert('POST alert'); data=jsonData ; },\n  error : function(XMLHttpRequest, textStatus, errorThrown) {\n            console.log('An Ajax error was thrown.');\n            console.log(XMLHttpRequest);\n            console.log(textStatus);\n            console.log(errorThrown);\n          }\n});\n</code></pre>\n\n<p>It doesn't work. Firebug returns an undefined error and the returned <code>XMLHttpRequst</code> object  multipart field is set to false. </p>\n\n<p>What can i do to make this work with jQuery? And if it's not possible is there a simple to achieve this?</p>\n\n<p>i.e. idon't need to transfer files , just some data. but the server requires multipart.</p>\n",
            "last_activity_date": 1407427345,
            "question_id": 3537774,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "http",
                "post",
                "multipart"
            ],
            "title": "Making an HTTP POST call with multipart/form-data using jQuery?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Combine these:</p>\n\n<pre><code>alert(1.foo); // --&gt; parse error\nalert(1.4.foo); // --&gt; undefined - number 1.4 doesn't have the property foo\nalert(1.); // --&gt; 1 (?)\n</code></pre>\n\n<p>To the conclusion:</p>\n\n<pre><code>alert(1..foo); // --&gt; undefined\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Is <strong>not</strong> a range, the <code>1..z</code> expression will simply return <code>undefined</code>.</p>\n\n<p>Why? </p>\n\n<p>The first dot ends a representation of a <a href=\"http://bclary.com/2004/11/07/#a-7.8.3\">Numeric Literal</a>, giving you a <code>Number</code> primitive:</p>\n\n<pre><code>var n = 1.;\n</code></pre>\n\n<p>The grammar of a Numeric Literal is expressed like this:</p>\n\n<pre><code>DecimalIntegerLiteral . DecimalDigitsopt ExponentPartopt \n</code></pre>\n\n<p>As you can see the DecimalDigits part after the dot is <em>optional</em> (opt suffix).</p>\n\n<p>The second dot is the property accessor, it will try only to get the <code>z</code> property, which is <code>undefined</code> because it doesn't exist on the <code>Number.prototype</code> object:</p>\n\n<pre><code>1..z; // undefined\n1..toString(); // \"1\"\n</code></pre>\n\n<p>Is equivalent to access a property with the bracket notation property accessor:</p>\n\n<pre><code>1['z']; // or\n1['toString'](); \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 34
                }
            ],
            "body": "<pre><code>&lt;script&gt;\n1..z\n&lt;/script&gt;\n</code></pre>\n\n<p>This gives no syntax or runtime error. Looks like number and variable name can be any other (<code>123..qwerty</code>).  I'm wondering what does this statement mean?</p>\n",
            "last_activity_date": 1266621036,
            "question_id": 2300197,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "What does `1..something` mean in JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>AFAIK, <code>addJavascriptInterface()</code> only works with primitive types and Strings, and so you cannot pass arbitrary Javascript objects.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>I think you can also pass JSONObject and JSONArray. So not only primitive types, but also primitive types stored in a javascript array [0,1,2] or dictionary {one:1, two:2}.</p>\n\n<p>I have NOT verified this in code, just read the docs. Might be using it soon.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I found a solution, using JSON. My Java method returns a JSONArray, on my javascript code I receive this and convert to a javascript vector using JSON.parse(). See the example:</p>\n\n<p>Java:</p>\n\n<pre><code>public class JavaScriptInterface {\nContext mContext;\nprivate static int ind=-1;\nprivate static int [] val = { 25, 25, 50, 30, 40, 30, 30, 5, 9 };\n\npublic JavaScriptInterface(Context c) {\n    mContext = c;\n}\n\n@JavascriptInterface\npublic JSONArray getChartData() {\n    String texto = \" [ {name: 'valor1', 2007: \"+val[(++ind)%9]+\"}, \"+\n                     \" {name: 'valor2', 2007: \"+val[(++ind)%9]+\"}, \"+\n                     \" {name: 'valor3', 2007: \"+val[(++ind)%9]+\"} ]\"; \n\n    JSONArray jsonar=null;\n    try {\n        jsonar = new JSONArray(texto);\n    } catch (JSONException e) {\n        e.printStackTrace();\n    }\n\n    return jsonar;\n}\n}\n</code></pre>\n\n<p>Now the javascript code:</p>\n\n<pre><code>window.generateData = function() {\n        /*var data = [ {name: 'valor1', 2007: 50},\n                     {name: 'valor2', 2007: 20},\n                     {name: 'valor3', 2007: 30} ];     */\n        var data = JSON.parse( Android.getChartData() );\n        return data;\n    };\n</code></pre>\n\n<p>The commented code above show how it was when static, and now the data came from the Java code.</p>\n\n<p>It was testes on Android 2.1 and 3.2.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You cant pass JSONObject or JSONArray, but you can send strings with that form and parse them to those types. </p>\n\n<p>Your option is to expose the method using strings and then you can use the JSONObject or JSONArray to parse the string and use it accordingly.</p>\n\n<p>Here is what I did.</p>\n\n<pre><code>@JavascriptInterface\npublic void passJSON(String array, String jsonObj) throws JSONException\n{\n    JSONArray myArray = new JSONArray(array);\n    JSONObject myObj = new JSONObject(jsonObj);     \n    ...\n\n}\n</code></pre>\n\n<p>where array is '[\"string1\",\"string2\"]' and jsonObj is '{attr:1, attr2:\"myName\"}'</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to pass a JavaScript object from JavaScript to Java using addJavascriptInterface()? Something along these lines:</p>\n\n<pre><code>var javaScriptObject = {\"field1\":\"string1\", \"field2\":\"string2\"};\nJavaScriptInterface.passObject(javaScriptObject);\n</code></pre>\n\n<p>How would such a call be captured on the Java side? I have no problem setting up the interface to send a string, but when I send an object, I receive null on the Java end.</p>\n",
            "last_activity_date": 1408424029,
            "question_id": 2250917,
            "score": 13,
            "tags": [
                "java",
                "javascript",
                "android"
            ],
            "title": "Passing a JavaScript object using addJavascriptInterface() on Android"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>instanceof operator indicates if the first argument is of the given type. That is saying </p>\n\n<pre><code> A instanceof B\n</code></pre>\n\n<p>returns true if A is an instance of the type B.</p>\n\n<p>The == and === operators are comparison operators on the other hand. They compare values for equality.</p>\n\n<p>For instance, you can say jack instanceof Boy is true but would you say that jack == boy? No.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I think this is more due to the unique way in which objects are defined. You don't define a type in javascript, you define a constructor. But you also do not define the constructor as a constructor, it's simply a function.</p>\n\n<p>You can then refer to the types by the name of their constructor....which is just a function.</p>\n\n<pre><code>function Tiger(){ //function, or object?\n}\n\nfunction Apple(){ //function, or object?\n}\n</code></pre>\n\n<p>Both <em>could</em> be objects, or perhaps just functions. Only the way you use them will determine that. So it <em>kind of</em> makes sense that at a low level, objects are functions and functions are objects, but there is still a difference, right?</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Everything is an <code>Object</code> in JavaScript because JavaScript is an object-oriented language. <code>Function</code> is an instance of <code>Object</code> because everything is an instance of <code>Object</code>. Simple enough. However, objects that initialize other objects (constructors) are also <code>Function</code>s in JavaScript, so it would make sense for <code>Object</code> to also be a <code>Function</code>.</p>\n\n<p>Think about this:</p>\n\n<pre><code>var obj = new Object();\n</code></pre>\n\n<p><code>Object</code> in this case is used as a <code>Function</code>, is it not? So while, in theory, <code>Object</code> should be the lowest-level object in the language, JavaScript cannot function without <code>Function</code>s (pun!), so you need both to be at the same level. <code>Object</code> needs to be an instance of <code>Function</code> because it's a constructor and it needs to create more instances of itself.</p>\n\n<pre><code>function FooBar() {}\n</code></pre>\n\n<p>The <code>FooBar</code> class above is an instance of both <code>Object</code> and <code>Function</code>, because it's both. The same logic applies to the built-in <code>Object</code> and <code>Function</code> objects; they're instances of both.</p>\n\n<p>Phew, confusing. Did that make any sense?</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>From <a href=\"http://www.3site.eu/doc/#Object\" rel=\"nofollow\">JavaScript Prototypal Inheritance</a>:</p>\n\n<blockquote>\n  <p>Quite everything, in JavaScript, inherits from Object. We could say\n  that Object is the super class, or better, the super constructor, of\n  every variable and that everything is an instanceof Object. The Object\n  constructor is a Function, but a Function is an instanceof Object.\n  This means that these assertions are always true:</p>\n  \n  <p><code>(Object <a href=\"http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Reference:Operators:Special_Operators:instanceof_Operator\" rel=\"nofollow\">instanceof</a> Function) === (Function instanceof Object)</code></p>\n  \n  <p>Above example is true because Object is a constructor, and a constructor in JavaScript is always a Function. At the same\n  time, every Function has its own prototype, and a prototype always\n  starts its inheritance from Object.prototype. The Function\n  constructor, is a Function itself, and the function prototype is a\n  function(){};</p>\n  \n  <p><code>(Function.prototype <a href=\"http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Reference:Operators:Special_Operators:instanceof_Operator\" rel=\"nofollow\">instanceof</a> Object) <a href=\"http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Reference:Operators:Comparison_Operators\" rel=\"nofollow\">===</a> (function(){} instanceof Object)</code></p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<pre><code> javascript:alert([ window.navigator.userAgent, Object ].join(\"\\n\\n\") )\n</code></pre>\n\n<p>displays</p>\n\n<pre><code>Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.3) Gecko/20100423 \n    Ubuntu/10.04 (lucid) Firefox/3.6.3\n\nfunction Object() {\n    [native code]\n}\n</code></pre>\n\n<p>reference: <a href=\"http://stackoverflow.com/questions/7018023/is-every-javascript-object-a-function\">Is every JavaScript Object a function?</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is no such thing as classes in Javascript. The <code>instanceof</code> operator is called on functions.</p>\n\n<p><code>Object</code> is a constructor function for \"Object objects\" (yes, this is the official term), and <code>Function</code> is the constructor function for \"Function objects\".</p>\n\n<p>So, when you call <code>Function instanceof Object</code>, it returns <code>true</code> because <code>Function</code> is a function, and thus an object, etc. This does not mean that the types are the same, because Object and Function have different prototypes:</p>\n\n<pre><code>Object.prototype\n   ^\n   | inherits from\n   |                instance\nFunction.prototype  &lt;-------  Object, Function\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<pre><code>Object instanceof Object\ntrue\nObject instanceof Function\ntrue\nFunction instanceof Object\ntrue\nFunction instanceof Function\ntrue\n</code></pre>\n\n<p>so if Function is an Object and the Object is a Function how come</p>\n\n<p><code>Function === Object</code> and <code>Function == Object</code> are false?</p>\n\n<p>I do understand that checking the instance of an object is not the same as comparison. So the question here is the fuzziness in the case where if two objects (which are actually types) are instances of each other, shouldn't the types be the same?</p>\n\n<p>Note: Object is not an instance of a Number or an Array just an instance of Function.</p>\n",
            "last_activity_date": 1410155592,
            "question_id": 2003183,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "Object and Function are quite confusing"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>In an object oriented language, you would typically unit test the <strong>protected</strong> methods by having the test class inherit from the class it's testing.</p>\n\n<p>Of course, Javascript is not really an object oriented language, and this pattern does not allow for inheritance. </p>\n\n<p>I think you either need to make your methods public, or give up on unit testing them.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is no way to access inner functions (private) from an outer scope. If you want to test inner functions you might consider adding a public method for testing purposes only. If you are using some sort of a build environment, for example ant, you may pre-process the javascript file for production and remove those test functions.</p>\n\n<p>Actually Javascript is an Object oriented language. It's just not a statitcally typed one.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>There is an easy way actually. You can use ajax to load the script and inject a function that exposes the private functions. I have an example <a href=\"http://www.sjeiti.com/unit-testing-private-functions/\" rel=\"nofollow\">here</a> that uses qUnit and jQuery. But I'm sure the same can be easily accomplished using pure Javascript.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have a similar problem.  The solution I came up with is not something I like but it does the job and there's not a better solution I can find.</p>\n\n<pre><code>function Graph()\n{\n    this.Test = function _Test(expressionStr) { return eval(expressionStr); }\n\n    var private_data;\n    function draw_legend() { ... }\n    function draw_plot() { ... }\n    function helper_func() { ... }\n    ...\n}\n</code></pre>\n\n<p>To test:</p>\n\n<pre><code>var g = new Graph();\ng.Test(\"helper_func()\") == something;\ng.Test(\"private_data\") == something2\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>My solution is just a little bit of hack. QUnit example:</p>\n\n<p>At the top of Qunit test html I have declared:</p>\n\n<pre><code>var TEST_AVAILABLE = true;\n</code></pre>\n\n<p>In the testable class I have a fragment like this:</p>\n\n<pre><code>if(TEST_AVAILABLE){\n   this.test={\n      hasDraft:hasDraft,\n      isInterpIdIn:isInterpIdIn,\n      // other private methods\n   };\n}\n</code></pre>\n\n<p>In the QUnit you could verify</p>\n\n<pre><code>test( \"hello booth\", function() {\n  var b = new Booth();\n  ok(b);\n  ok(b.test);\n  ok(!b.test.hasDraft());\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm using the module pattern in Javascript to separate my public interface from the private implementation. To simplify what I'm doing, my code generates a chart. The chart consists of multiple parts (axises, labels, plot, legend, etc.) My code looks like:</p>\n\n<pre><code>var Graph = function() {\n  var private_data;\n  function draw_legend() { ... }\n  function draw_plot() { ... }\n  function helper_func() { ... }\n  ...\n\n  return {\n    add_data: function(data) {\n      private_data = data;\n    },\n    draw: function() {\n      draw_legend()\n      draw_plot()\n    }\n  }\n}\n</code></pre>\n\n<p>Some people advocate only testing the public interface of your classes, which makes sense, but I'd really like to get in some tests to test each of the components separately. If I screw up my draw_legend() function, I'd like that test to fail, not a test for the public draw() function. Am I on the wrong track here?</p>\n\n<p>I could separate each of the components in different classes, for example make a Legend class. But it seems silly to create a class for what's sometimes just 5-10 lines of code, and it would be uglier because I'd need to pass in a bunch of private state. And I wouldn't be able to test my helper functions. Should I do this anyway? Should I suck it up and only test the public draw()? Or is there some other solution?</p>\n",
            "last_activity_date": 1359449044,
            "question_id": 716207,
            "score": 13,
            "tags": [
                "javascript",
                "unit-testing"
            ],
            "title": "Testing private functions in javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Generally, the random function is not cryptographically strong, for that you need to make sure you are using a cryptographic pseudo-random-number generator.</p>\n\n<p>Generic random functions generally don't use cryptographically strong generation methods because they take longer than simple ones, (eg. Yarrow is more complicated than Mersenne Twister) and require careful management of the entropy pool, which is not a guarantee that Mozilla, cstdlib, etc. want to make to you.</p>\n\n<p>If you need access to cryptographically strong random number generators, I'd look into  getting access to the underlying SSL implementation (which a given browser may or may not allow access to).</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Each of the JavaScript engines I'm familiar with do <strong>not</strong> use cryptographically-strong RNGs.</p>\n\n<p>If you need a good source of entropy in a browser (and preferably don't need it very often), I would recommend capturing mouse movement data and running it through a cryptographically-strong hashing algorithm.  Existing programs such as the <a href=\"http://egd.sourceforge.net/\">Entropy Gathering Daemon</a> (used with gpg) can be used as a reference for how to implement such a system.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>One interesting data point I found is <a href=\"https://developer.mozilla.org/en/JavaScript_crypto\" rel=\"nofollow\">mozilla</a> has a javascript crypto object that isn't fully implemented yet.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Generally you can't rely on pseudo random number generation in javascript to be even remotely cryptographically secure. You might consider implementing your own PNRG using an entropy gathering system, or perhaps using an external source of random numbers such as <a href=\"http://www.fourmilab.ch/hotbits/\" rel=\"nofollow\">hotbits</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Recent browsers expose <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\"><code>window.crypto.getRandomValues()</code></a> which is cryptographically strong.</p>\n\n<p>There are also JS libraries that implement strong RNGs but without <code>getRandomValues()</code> it's very hard part to collect entropy.  It <a href=\"https://www.clipperz.com/security_privacy/crypto_algorithms/#prng\">can be done from mouse &amp; keyboard</a> though it may take a long time.</p>\n\n<p><code>Math.random()</code> was weak in most browsers in 2008 - <a href=\"http://landing2.trusteer.com/list-context/publications/temporary-user-tracking-major-browsers-and-cross-domain-information-leakag\">Amit Klein's paper</a> goes into excellent detail - and sadly is almost as weak today:</p>\n\n<ul>\n<li><p>Firefox uses a very weak \"our own homebrew LFSR\" algorithm; they've been discussing switching to a stronger algoritm and entropy source since 2006 (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=322529\">bug 322529</a>) and there is still no agreement.</p>\n\n<p>In May 2013 they at least switched the seed from current time to good entropy sources (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=868860\">bug 868860</a>), also removing(?) cross-tab leakage.</p></li>\n<li><p>Webkit uses a weak fast algorithm (<a href=\"http://www.redditmirror.cc/cache/websites/mjolnirstudios.com_7yjlc/mjolnirstudios.com/IanBullard/files/79ffbca75a75720f066d491e9ea935a0-10.html\">GameRand</a>) <a href=\"https://trac.webkit.org/changeset/50789\">since 2009</a>  but seeds <a href=\"https://bugs.webkit.org/show_bug.cgi?id=36673#c4\">since 2010</a> (in each context) from a strong RNG initialized from strong OS sources.<br>\n(I presume this is what Safari uses but I may be confused about the various WebKit ports...)</p></li>\n<li><p>Chrome doesn't use WebKit's random, does its own in V8, <a href=\"https://code.google.com/p/v8/codesearch#v8/trunk/src/v8.cc&amp;q=random_base&amp;sq=package%3av8&amp;l=149\">a weak linear thing</a>.<br>\nThere is no agreement whether Math.random() should be strong (<a href=\"https://code.google.com/p/chromium/issues/detail?id=246054\">bug 246054</a>).</p>\n\n<p>Not sure how it's seeded.  V8 has SetEntropySource() hook, but apparently it was only <a href=\"https://code.google.com/p/chromium/issues/detail?id=90224\">introduced for unit testing</a>, not called by Chrome.  If not called, <code>random()</code> is used for seeding.</p>\n\n<p>State became per-context <a href=\"https://code.google.com/p/v8/issues/detail?id=864\">in 2011</a> but that's not very useful with weak seeding.</p></li>\n<li><p>Opera declared it <a href=\"http://www.opera.com/security/advisory/928\">fixed in Jan 2009</a> and <a href=\"https://github.com/cryptocat/cryptocat/issues/190\">say here</a> that their Math.random() is cryptographically strong.</p></li>\n<li><p>Didn't find documentation on what IE does nowdays.  They had a weak linear PRNG in 2008 (see paper).\nThey did tell Amit they'll fix it in a service pack, so there might be an advisory somewhere...</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I would like to do some experimenting with javascript and encryption and I got curious as to how unpredictable the implementation of the random function is.  Has anyone done any hard tests?</p>\n\n<p>Clearly browsers have the ability to generate strong randomness (for ssl).  The questions is do they give javascript access to the same strength.</p>\n",
            "last_activity_date": 1377851615,
            "question_id": 578700,
            "score": 13,
            "tags": [
                "javascript",
                "math",
                "random"
            ],
            "title": "How trustworthy is javascript&#39;s random implementation in various browsers?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>Strict answer</strong>: Because the JS spec <a href=\"http://es5.github.io/#x11.9.6\">says so</a>:</p>\n\n<blockquote>\n  <ul>\n  <li>If Type(x) is Number, then\n  <ul>\n  <li>If x is NaN, return false.</li>\n  <li>If y is NaN, return false.</li>\n  </ul></li>\n  </ul>\n</blockquote>\n\n<hr>\n\n<p><strong>Useful answer</strong>: The IEEE 754 spec for floating-point numbers (which is used by all languages for floating-point) says that NaNs are never equal.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>This behaviour is specified by the <a href=\"http://en.wikipedia.org/wiki/IEEE_floating_point\">IEEE-754 standard</a> (which the JavaScript spec follows in this respect).</p>\n\n<p>For an extended discussion, see <a href=\"http://stackoverflow.com/questions/1565164/what-is-the-rationale-for-all-comparisons-returning-false-for-ieee754-nan-values\">What is the rationale for all comparisons returning false for IEEE754 NaN values?</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Although either side of <code>NaN===NaN</code> contains the same value and their type is <code>Number</code> but they are not same. According to ECMA-262, either side of <code>==</code> or <code>===</code> contains <code>NaN</code> then it will result false value.</p>\n\n<p>you may find a details rules in here-</p>\n\n<p><a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3\" rel=\"nofollow\">http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Why <code>NaN === NaN</code> returns <code>false</code>  in Javascript?</p>\n\n<pre><code>&gt; undefined === undefined\ntrue\n&gt; NaN === NaN\nfalse\n&gt; a = NaN\nNaN\n&gt; a === a\nfalse\n</code></pre>\n\n<p>On the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\">documentation page</a> I see this:</p>\n\n<blockquote>\n  <h2>Testing against NaN</h2>\n  \n  <p>Equality operator (<code>==</code> and <code>===</code>) cannot be used to test a value against <code>NaN</code>. Use <code>isNaN</code> instead.</p>\n</blockquote>\n\n<p>Is there any reference that answers to the question? It would be welcome.</p>\n",
            "last_activity_date": 1422342400,
            "question_id": 19955898,
            "score": 12,
            "tags": [
                "javascript",
                "nan"
            ],
            "title": "Why NaN === NaN is false?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It sounds like you have a buggy Firefox extension installed which is trying to examine the XMLHttpRequest data and failing....</p>\n\n<p>I suggest you try <a href=\"http://support.mozilla.org/en-US/kb/troubleshoot-firefox-issues-using-safe-mode\" rel=\"nofollow\">http://support.mozilla.org/en-US/kb/troubleshoot-firefox-issues-using-safe-mode</a> or just disabling whatever Firefox extensions are involved.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The problem was a combination of Firefox with jQuery/XMLHttpRequest and <strong>sending an object</strong> via HTTP DELETE. Once JSON'ifying the object via <code>JSON.stringify()</code> everything worked.</p>\n\n<p>Still, a strange exception for Firefox to throw.</p>\n\n<p>Thanks to freddyb for that idea.</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>The problem was with the property called <code>processData</code> within the <code>$.ajax</code> function. When this property is supplied as \"false\" (don't know why) Firefox doesn't like it, and as consequence, the browser doesn't digest the JSON request/response package. Chrome and Safari works just fine.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This happens (as of 2014 with FireFox 32) with any non-<code>GET</code> AJAX request when the <strong><em>request</em></strong> <code>data</code> object is an empty object, like <code>{}</code>. I am using <code>Mithril.js</code> and it may be related to the fact that Mithril always sets a Content-Type for non-<code>GET</code> requests. This was absolutely repeatable once I knew the trigger. </p>\n\n<p>(Note that the \"non-<code>GET</code>\" part may not be entirely accurate -- Mithril ignores the data object if it's a <code>GET</code> so sending an empty object with GET using the underlying AJAX object may also fail in the same way.)</p>\n\n<p>Counter-intuitively, setting <code>data</code> to an empty string, <code>\"\"</code>, does not fail in this way, so that was my work-around. I actually don't set data at all when there is none, and if it's unset by the time I send the request (in my AJAX wrapper) I default it to <code>\"\"</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm building a web app with Django. I have a bunch of API calls in Javascript via Ajax (jQuery v1.8.3).</p>\n\n<p>Most of them work, but a particular one results in a return object with status 0 and this message as the statusText:</p>\n\n<p><code>[Exception... \"'JavaScript component does not have a method named: \"available\"' when calling method: [nsIInputStream::available]\" nsresult: \"0x80570030 (NS_ERROR_XPC_JSOBJECT_HAS_NO_FUNCTION_NAMED)\" location: \"JS frame :: http://127.0.0.1:8000/media/js/jquery.js :: .send :: line 8434\" data: no]</code></p>\n\n<p>The corresponding line in jQuery is <code>xhr.send( ( s.hasContent &amp;&amp; s.data ) || null );</code></p>\n\n<p>However, this occurs only in Firefox. Chrome works fine. Again, other requests do work. The only thing which sets this one apart is the DELETE http method.</p>\n\n<p>The request is as follow (HTTP network data shown in Chrome \u2013 Firebug doesn't show anything in Firefox):</p>\n\n<pre><code>Request URL: http://127.0.0.1:8000/api/reservation/13/\nRequest Method: DELETE\nStatus Code: 400 BAD REQUEST    (This is expected)\n\nRequest Headers\nAccept: application/json, text/javascript, */*; q=0.01\nContent-Length: 15\nContent-Type: application/json\nOrigin: http://127.0.0.1:8000\nReferer: http://127.0.0.1:8000/reservation/\nX-Requested-With: XMLHttpRequest\n\nRequest Payload\n[object Object]\n\nResponse Headers\nCache-Control: no-cache\nContent-Type: text/html; charset=utf-8\nDate: Tue, 02 Apr 2013 19:18:35 GMT\nServer: WSGIServer/0.1 Python/2.7.2\n</code></pre>\n\n<p>On the server, I don't receive any request.</p>\n\n<p>The JS code is (taken directly from Firebug Watch at breakpoint):</p>\n\n<pre><code>options = {\n    contentType: \"application/json\",\n    data: Object {},\n    dataType: \"json\",\n    processData: false,\n    type: \"DELETE\",\n    url: \"/api/reservation/13/\",\n    error: function(),\n    success: function()\n};\n$.ajax(options);\n</code></pre>\n\n<p>I also did try to disable all extensions in FF. I run v20.0.</p>\n",
            "last_activity_date": 1411575271,
            "question_id": 15772920,
            "score": 12,
            "tags": [
                "javascript",
                "http",
                "firefox",
                "delete",
                "xmlhttprequest"
            ],
            "title": "Firefox exception &#39;JavaScript component does not have a method named: &quot;available&quot;&#39;"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><a href=\"http://d3lp1msu2r81bx.cloudfront.net/kjs/js/lib/kinetic-v4.3.1.js\">Have a look at the source (v4.3.1)</a>, l. 3381ff. These are defined on a <code>Kinetic.Container</code>.</p>\n\n<pre><code>    draw: function() {\n        this.drawScene();\n        this.drawHit();\n    },\n    drawScene: function(canvas) {\n        // do stuff\n    },\n    drawHit: function() {\n        // do stuff\n    }\n</code></pre>\n\n<p>The <code>drawScene</code> is used to draw the shapes onto the drawing canvas.</p>\n\n<p>The <code>drawHit</code> (see <a href=\"http://www.html5canvastutorials.com/kineticjs/html5-canvas-kineticjs-custom-hit-function-tutorial/\">example</a>) is used to allow to modify the region where mouse events trigger events. This is done internally using a special <code>Kinetic.HitCanvas</code>.</p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>What is the difference between KineticJS methods <code>layer.draw()</code>, <code>layer.drawScene()</code> and <code>layer.drawHit()</code>?</p>\n",
            "last_activity_date": 1360135185,
            "question_id": 14722787,
            "score": 12,
            "tags": [
                "javascript",
                "html5",
                "kineticjs"
            ],
            "title": "What is the difference between KineticJS draw methods?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<pre><code>$('body').on('click', '#element', function(){\n    $(\"#my\").html(result);\n});\n</code></pre>\n\n<p>The clicked element selector is now passed through the <code>.on()</code> function parameters, and the previous selector should be replaced with the closest parent selector preferably with an ID. If you do not know what parent selector to use, <code>body</code> works too, but is less efficient.</p>\n\n<p>see <a href=\"http://stackoverflow.com/q/14354040/584192\">jQuery 1.9 .live() is not a function</a> on how to migrate existing code.</p>\n",
                    "is_accepted": true,
                    "score": 30
                }
            ],
            "body": "<p>I used <code>live()</code> for generated pages and frames. But in <code>jQuery 1.9</code> this function is deprecated and does not work.</p>\n\n<p>I use <code>on()</code> instead of <code>live()</code> but this method works for one time, and does not work in frames.</p>\n\n<p>My code looks like this:</p>\n\n<pre><code>  $(\"#element\").live('click',function(){\n    $(\"#my\").html(result);\n   });\n</code></pre>\n\n<p>What is the solution?</p>\n",
            "last_activity_date": 1424846802,
            "question_id": 14703646,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "deprecated",
                "jquery-live",
                "jquery-on"
            ],
            "title": "jQuery - how to use the &quot;on()&quot; method instead of &quot;live()&quot;?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>indexOf compares searchElement to elements of the Array using strict equality (the same method used by the ===, or triple-equals, operator).</p>\n</blockquote>\n\n<p>You cannot use <code>===</code> to check the equability of an object.</p>\n\n<p>As <a href=\"http://stackoverflow.com/questions/12604062/javascript-array-indexof-doesnt-search-objects/12604120#comment16989045_12604062\">@RobG</a> pointed out</p>\n\n<blockquote>\n  <p>Note that by definition, two objects are never equal, even if they have exactly the same property names and values. <code>objectA === objectB</code> if and only if objectA and objectB reference the same object.</p>\n</blockquote>\n\n<p>You can simply write a custom indexOf function to check the object.</p>\n\n<pre><code>function myIndexOf(o) {    \n    for (var i = 0; i &lt; arr.length; i++) {\n        if (arr[i].x == o.x &amp;&amp; arr[i].y == o.y) {\n            return i;\n        }\n    }\n    return -1;\n}\n</code></pre>\n\n<p><strong>DEMO:</strong> <a href=\"http://jsfiddle.net/zQtML/\">http://jsfiddle.net/zQtML/</a></p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Those objects aren't equal.</p>\n\n<p>You must implement your own function.</p>\n\n<p>You may do that for example :</p>\n\n<pre><code>var index = -1;\narr.forEach(function(v, i) {\n   if (this.x==v.x &amp;&amp; this.y==v.y) index=i;\n}, searched); \n</code></pre>\n\n<p>where <code>searched</code> is one of your object (or not).</p>\n\n<p><em>(I would implement it with a simple loop but it's prettier with foreach)</em></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As noted, two objects are never equal, but references can be equal if they are to the same object, so to make the code do what you want:</p>\n\n<pre><code>var a = {x:1, y:2};\nvar b = {x:3, y:4};\nvar arr = [a, b];\n\nalert(arr.indexOf(a)); // 0\n</code></pre>\n\n<h3>Edit</h3>\n\n<p>Here's a more general <em>specialIndexOf</em> function. Note that it expects the values of the objects to be primitives, otherwise it needs to be more rigorous.</p>\n\n<pre><code>function specialIndexOf(arr, value) {\n  var a;\n  for (var i=0, iLen=arr.length; i&lt;iLen; i++) {\n    a = arr[i];\n\n    if (a === value) return i;\n\n    if (typeof a == 'object') {\n      if (compareObj(arr[i], value)) {\n        return i;\n      }\n    } else {\n      // deal with other types\n    }\n  }\n  return -1;\n\n  // Extremely simple function, expects the values of all \n  // enumerable properties of both objects to be primitives.\n  function compareObj(o1, o2, cease) {\n    var p;\n\n    if (typeof o1 == 'object' &amp;&amp; typeof o2 == 'object') {\n\n      for (p in o1) {\n        if (o1[p] != o2[p]) return false; \n      }\n\n      if (cease !== true) {\n        compareObj(o2, o1, true);\n      }\n\n      return true;\n    }\n  }\n}\n\nvar a = new String('fred');\nvar b = new String('fred');\n\nvar arr = [0,1,a];\n\nalert(specialIndexOf(arr, b)); // 2\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have array with objects.</p>\n\n<p>Something Like this:</p>\n\n<pre><code>var arr = new Array(\n  {x:1, y:2},\n  {x:3, y:4}\n);\n</code></pre>\n\n<p>When I try</p>\n\n<pre><code>arr.indexOf({x:1, y:2});\n</code></pre>\n\n<p>It returns -1.</p>\n\n<p>If I have strings or numbers or other type of elements but object, then indexOf() works fine.</p>\n\n<p>Does anyone know why and what should I do to search obect elements in array?</p>\n\n<p>Of course, I mean the ways except making string hash keys for objects and give it to array...</p>\n",
            "last_activity_date": 1348673532,
            "question_id": 12604062,
            "score": 12,
            "tags": [
                "javascript",
                "arrays",
                "search",
                "object",
                "indexof"
            ],
            "title": "Javascript array.indexOf doesn&#39;t search objects"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Take a look at <a href=\"http://sunpig.com/martin/archives/2012/03/18/goldilocks-and-the-three-device-pixel-ratios.html\" rel=\"nofollow\">this post</a>. \nIt's done with:</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"width=device-width, target-densitydpi=device-dpi\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>96 \"DPI\" is a web standard that has little to do with reality. The inches it measures are best considered \"logical\" inches, which correspond to font metrics and CSS measurements (which can include points and inches). A \"point\" in typography is defined to be 1/72 inch, but screens stopped being consistently 72 DPI ages ago. Thus, all a CSS point really means now is that a 96 point font is 72 pixels tall. (And that's logical pixels, since the issue is now further conflated by hi-DPI screens.)</p>\n\n<p>Anyhow, most native operating systems don't know a thing about their true physical screen size, so they don't even have information about such that they could expose to web apps via a browser. What you're asking isn't possible.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>I'm trying to figure out how to get the physical dimensions of a device's screen via JavaScipt. So far, my conclusion is that it's currently impossible, but I hope someone can prove me wrong :).</p>\n\n<p>So far I have tried to get this information by finding the device's DPI, but it seems there is no way to get the correct value here, as all devices I have tested (some HDPI &amp; XHDPI Android devices, an iPhone4S, an iPad 2 and an iPad 3) report 96DPI.</p>\n\n<p>The first method of obtaining the DPI I tried is one you can find everywhere on the internet: create a <code>div</code> with a CSS width of <code>1in</code>, get its <code>clientWidth</code> or <code>offsetWidth</code> and there's your DPI. Doesn't work, all devices report 96.</p>\n\n<p>The second method was using the <a href=\"http://www.w3.org/TR/css3-mediaqueries/#resolution\">resolution media query</a>, something along the lines of:</p>\n\n<pre><code>for (var i=90; i &lt; 400; i++) {\n    if (matchMedia('(resolution: ' + i + 'dpi)').matches) {\n       return i;\n    }\n}\n</code></pre>\n\n<p>I thought that was a smart solution, but unfortunately that returns 96 as well.</p>\n\n<p>Is there anything left?</p>\n",
            "last_activity_date": 1340982426,
            "question_id": 11263747,
            "score": 12,
            "tags": [
                "javascript",
                "dimension"
            ],
            "title": "How to get screen&#39;s physical size (i.e. in inches)?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here is a good example how to call javascript running inside the WebView:</p>\n\n<p><a href=\"http://android-er.blogspot.com/2011/10/call-javascript-inside-webview-from.html\">http://android-er.blogspot.com/2011/10/call-javascript-inside-webview-from.html</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Check out <a href=\"http://developer.android.com/reference/android/webkit/WebView.html#addJavascriptInterface%28java.lang.Object,%20java.lang.String%29\"><code>addJavascriptInterface</code></a>.</p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>Is it possible to interact with a webview in android trough my native android code?</p>\n\n<p>I develop can bus driver for android and I like to send my can bus data to a html 5 app in a webview without sending them over internet to a webservice. or is it possible to call funktions via the html 5 app in my native android app?</p>\n\n<p>Do you know a good solution for that scenario?</p>\n",
            "last_activity_date": 1322742618,
            "question_id": 8341159,
            "score": 12,
            "tags": [
                "javascript",
                "android",
                "html5",
                "android-webview"
            ],
            "title": "Any way to communicate with WebView in Android?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>John Resig, founder of jQuery, had <a href=\"http://ejohn.org/blog/degrading-script-tags/\" rel=\"nofollow\">an interesting post</a> awhile back that addressed this limitation and experimented with ways to make it work, none of which he would recommend actually using.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>John Resig <a href=\"http://ejohn.org/blog/degrading-script-tags/\" rel=\"nofollow\">wrote about this topic</a> a couple years ago.  I thought it was a good read :)</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am wondering what if one script tag has both \"src\" and inline script. I tried below code.</p>\n\n<pre><code>&lt;script src=\"http://yui.yahooapis.com/2.8.1/build/yahoo/yahoo-min.js\" type=\"text/javascript\" charset=\"utf-8\"&gt;\n         alert('hello');\n&lt;/script&gt;\n&lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n         alert(YAHOO);\n&lt;/script&gt;\n</code></pre>\n\n<p>It the \"alert('hello')\" seems never executed in Firefox and Chrome. I tried to change the src to point to non-existent URI. The \"alert('hello')\" is also not executed.</p>\n\n<p>So, inline script is always ignored if there is src attribute in script tag?</p>\n",
            "last_activity_date": 1344971860,
            "question_id": 3540581,
            "score": 12,
            "tags": [
                "javascript",
                "inline-scripting"
            ],
            "title": "What if script tag has both &quot;src&quot; and inline script?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Select elements are notoriously tricky in Internet Explorer. I don't think there is any way of reliably determining if one is open or closed.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can play with <code>mouseenter</code> event in select's <code>option</code> child elements as you can only enter in them if select menu is open, or also with the <code>click</code> event on the <code>select</code> element, usually thrown when you open it.</p>\n\n<p>To test in a precise moment if its open or not I think is not possible.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>I can see if the select is open, and then when it closes if the user selects a new option, or completely blurs the select. However, if you click on the same option, or just click out of the select once (closing it but not blurring it), it still shows \"down\". Working on a more complete solution. So, expect this answer to have edits...</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-latest.pack.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n  var selected\n$( document ).ready(\n\n\n function()\n { \n  $( '#test' )\n      .mousedown( function(){ console.log( 'down' ); selected = $( this ).val() } )\n      .blur( function(){ console.log( 'out' ) } )\n      .change( function(){ console.log( 'out' ) } )\n      .mouseleave( function(){ console.log( 'out' ) } )\n      .mouseup( function(){ \n         if( $( this ).val() == selected ) \n           console.log( 'out' )\n    }\n   )\n } // function\n\n) // ready\n&lt;/script&gt;\n\n&lt;select id=\"test\"&gt;\n &lt;option&gt;1&lt;/option&gt;\n &lt;option&gt;2&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>Edit: added mouseout</p>\n\n<p>Edit2: added mouseup - works now!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking for a way to determine if/when a <code>&lt;select&gt;</code> element's menu is open. I don't need to force it to open or close, just figure out if it's open or closed at a given time.</p>\n\n<p>I can listen to events for focus/blur, mouseup/mousedown, etc., but I don't think I can reliably figure out the state of the menu from those events. For example, mousedown followed by mouseup could mean the user clicked and dragged to a selection and released (in which case the menu is now closed) or clicked and released to open the menu (in which case the menu is open). It also seems likely that the specific behavior of dropdown menus is browser-dependent.</p>\n\n<p>I know I could do this if I roll my own dropdown menu, but I prefer to use <code>&lt;select&gt;</code>.</p>\n\n<p>Is there a reliable way to find out if a dropdown menu is open? Or is this something that Javascript can't know?</p>\n\n<p>Conclusion: There doesn't seem to be any guaranteed way to determine if a select menu is open, either by asking the object or by listening to the events it fires.</p>\n\n<p>For my own use I'm just keeping track of whether the select has focus using <i>onfocus</i> and <i>onblur</i>. I'm assuming there's no way for the menu to be open without having focus, and that seems to hold true in all the browsers I've tested. It doesn't actually tell me when the menu is open, but it tells me when it <i>can't</i> be open, which is good enough for my purposes.</p>\n",
            "last_activity_date": 1272300690,
            "question_id": 2709474,
            "score": 12,
            "tags": [
                "javascript",
                "dom",
                "menu",
                "popup",
                "drop-down-menu"
            ],
            "title": "Is there a way to determine if a &lt;select&gt; dropdown menu is open?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Like this:</p>\n\n<pre><code>$('ul &gt; li').length\n</code></pre>\n\n<p>A more elegant way to do it would be to write</p>\n\n<pre><code>$('ul:empty').fadeOut();\n</code></pre>\n\n<p>If the <code>ul</code> is not empty, the selector won't match anything, and the code will do nothing.</p>\n\n<p>You may need to write</p>\n\n<pre><code>$('.SomeContainer:has(ul:empty)').fadeOut();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Simply use <code>.length</code> against the jQuery collection.</p>\n\n<pre><code>var $elements = $('ul#myUlElement').children('li');\nalert($elements.length)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>use .length</p>\n\n<pre><code>$('ul li').length // gives you back all li's in your ul\n$('ul &gt; li').length // give just the first children li's\n</code></pre>\n\n<p>so in order to hide your parent you can use it this way:</p>\n\n<pre><code>elements = $('ul &gt; li')\n\nif (elements.length) {\n   elements.fadeOut()\n}else{\n   elements.parent().fadeOut()\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I am using $().fadeOut() to fade items out in a list ( &lt; li> &lt; /li>). When the list is empty I wish to hide a parent object.</p>\n\n<p>I plan on doing this by checking in my trigger event that fades the list if the count of the objects is 0 then hide the parent element. I can use the fadeOut callback to remove the elements if necessary.</p>\n\n<p>The to the point question:\n<strong>How do I select li tags inside a ul and then get the total count of them using jquery?</strong></p>\n",
            "last_activity_date": 1359034478,
            "question_id": 2686390,
            "score": 12,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "JQuery - How do I count the number of elements selected by a selector?"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>If you simply want a string that represents a range, then you'd find the mid-point of your sequence, and that becomes your middle value (10 in your example). You'd then grab the first item in the sequence, and the item that immediately preceded your mid-point, and build your first-sequence representation. You'd follow the same procedure to get your last item, and the item that immediately follows your mid-point, and build your last-sequence representation.</p>\n\n<pre><code>// Provide initial sequence\nvar sequence = [1,2,3,4,5,6,7,8,9,10];\n// Find midpoint\nvar midpoint = Math.ceil(sequence.length/2);\n// Build first sequence from midpoint\nvar firstSequence = sequence[0] + \"-\" + sequence[midpoint-2];\n// Build second sequence from midpoint\nvar lastSequence  = sequence[midpoint] + \"-\" + sequence[sequence.length-1];\n// Place all new in array\nvar newArray = [firstSequence,midpoint,lastSequence];\n\nalert(newArray.join(\",\")); // 1-4,5,6-10\n</code></pre>\n\n<p>Demo Online: <a href=\"http://jsbin.com/uvahi/edit\" rel=\"nofollow\">http://jsbin.com/uvahi/edit</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could iterate over the numbers and see if the next number is 1 bigger then the current number. So have a:</p>\n\n<pre><code>struct range {\n    int start;\n    int end;\n} range;\n</code></pre>\n\n<p>where if <code>array[i+1] == array[i]+1;</code> (where i is the currently observed number) \nthen <code>range.end = array[i+1];</code>. Then you progress to the next <code>i</code>; If <code>array[i+1] != array[i]+1;</code> then <code>range.end = array[i];</code></p>\n\n<p>you could store the ranges in a <code>vector&lt; range &gt; ranges;</code> </p>\n\n<p>printing would be easy:</p>\n\n<pre><code>for(int i = 0; i &lt; ranges.size(); i++) {\n    range rng = (range)ranges.at(i);\n    printf(\"[%i-%i]\", rng.start, rng.end);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code> ; For all cells of the array\n    ;if current cell = prev cell + 1 -&gt; range continues\n    ;if current cell != prev cell + 1 -&gt; range ended\n\nint[] x  = [2,3,4,5,10,18,19,20]\nstring output = '['+x[0]\nbool range = false; --current range\nfor (int i = 1; i &gt; x[].length; i++) {\n  if (x[i+1] = [x]+1) {\n    range = true;\n  } else { //not sequential\n  if range = true\n     output = output || '-' \n  else\n     output = output || ','\n  output.append(x[i]','||x[i+1])\n  range = false;\n  } \n\n}\n</code></pre>\n\n<p>Something like that.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is an algorithm that I made <a href=\"http://stackoverflow.com/questions/245735/adjacent-number-algorithm-grouper/245788#245788\">some time ago</a>, originally written for C#, now I ported it to JavaScript:</p>\n\n<pre><code>function getRanges(array) {\n  var ranges = [], rstart, rend;\n  for (var i = 0; i &lt; array.length; i++) {\n    rstart = array[i];\n    rend = rstart;\n    while (array[i + 1] - array[i] == 1) {\n      rend = array[i + 1]; // increment the index if the numbers sequential\n      i++;\n    }\n    ranges.push(rstart == rend ? rstart+'' : rstart + '-' + rend);\n  }\n  return ranges;\n}\n\ngetRanges([2,3,4,5,10,18,19,20]);\n// returns [\"2-5\", \"10\", \"18-20\"]\ngetRanges([1,2,3,5,7,9,10,11,12,14 ]);\n// returns [\"1-3\", \"5\", \"7\", \"9-12\", \"14\"]\ngetRanges([1,2,3,4,5,6,7,8,9,10])\n// returns [\"1-10\"]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Here is a version for Perl: </p>\n\n<pre><code>use strict;\nuse warnings;\n\nmy @numbers = (0,1,3,3,3,4,4,7,8,9,12, 14, 15, 19, 35, 35, 37, 38, 38, 39);\n@numbers =  sort {$a &lt;=&gt; $b} @numbers ; # Make sure array is sorted.\n\n# Add \"infinity\" to the end of the array.\n$numbers[1+$#numbers] = undef ;\n\nmy @ranges = () ; # An array where the range strings are stored.\n\nmy $start_number = undef ;\nmy $last_number  = undef ;\nforeach my $current_number (@numbers)\n{\n  if (!defined($start_number))\n  {\n    $start_number = $current_number ;\n    $last_number  = $current_number ;\n  }\n  else\n  {\n    if (defined($current_number) &amp;&amp; (($last_number + 1) &gt;= $current_number))\n    {\n      $last_number = $current_number ;\n      next ;\n    }\n    else\n    {\n      if ($start_number == $last_number)\n      {\n        push(@ranges, $start_number) ;\n      } \n      else\n      {\n        push(@ranges, \"$start_number-$last_number\") ;\n      }\n      $start_number = $current_number ;\n      $last_number  = $current_number ;\n    }\n  }\n}\n\n# Print the results\nprint join(\", \", @ranges) . \"\\n\" ; \n# Returns \"0-1, 3-4, 7-9, 12, 14-15, 19, 35, 37-39\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just having fun with solution from CMS :</p>\n\n<pre><code>  function getRanges (array) {\n    for (var ranges = [], rend, i = 0; i &lt; array.length;) {\n      ranges.push ((rend = array[i]) + ((function (rstart) {\n        while (++rend === array[++i]);\n        return --rend === rstart;\n      })(rend) ? '' : '-' + rend)); \n    }\n    return ranges;\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here's my take on this...</p>\n\n<pre><code>function getRanges(input) {\n\n  //setup the return value\n  var ret = [], ary, first, last;\n\n  //copy and sort\n  var ary = input.concat([]);\n  ary.sort(function(a,b){\n    return Number(a) - Number(b);\n  });\n\n  //iterate through the array\n  for (var i=0; i&lt;ary.length; i++) {\n    //set the first and last value, to the current iteration\n    first = last = ary[i];\n\n    //while within the range, increment\n    while (ary[i+1] == last+1) {\n      last++;\n      i++;\n    }\n\n    //push the current set into the return value\n    ret.push(first == last ? first : first + \"-\" + last);\n  }\n\n  //return the response array.\n  return ret;\n}</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I was just looking for this exact thing. I needed a PHP version so ported CMS's solution. Here it is, for anyone who stops by this question looking for the same thing:</p>\n\n<pre><code>function getRanges( $nums )\n{\n    $ranges = array();\n\n    for ( $i = 0, $len = count($nums); $i &lt; $len; $i++ )\n    {\n        $rStart = $nums[$i];\n        $rEnd = $rStart;\n        while ( isset($nums[$i+1]) &amp;&amp; $nums[$i+1]-$nums[$i] == 1 )\n            $rEnd = $nums[++$i];\n\n        $ranges[] = $rStart == $rEnd ? $rStart : $rStart.'-'.$rEnd;\n    }\n\n    return $ranges;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I found this answer useful, but needed a Python version:</p>\n\n<pre><code>def GroupRanges(items):\n  \"\"\"Yields 2-tuples of (start, end) ranges from a sequence of numbers.\n\n  Args:\n    items: an iterable of numbers, sorted ascendingly and without duplicates.\n\n  Yields:\n    2-tuples of (start, end) ranges.  start and end will be the same\n    for ranges of 1 number\n  \"\"\"\n  myiter = iter(items)\n  start = myiter.next()\n  end = start\n  for num in myiter:\n    if num == end + 1:\n      end = num\n    else:\n      yield (start, end)\n      start = num\n      end = num\n  yield (start, end)\n\n\nnumbers = [1, 2, 3, 5, 6, 7, 8, 9, 10, 20]\nassert [(1, 3), (5, 10), (20, 20)] == list(GroupRanges(numbers))\nassert [(1, 1)] == list(GroupRanges([1]))\nassert [(1, 10)] == list(GroupRanges([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>PHP </p>\n\n<pre><code>function getRanges($nums) {\nsort($nums);\n$ranges = array();\n\nfor ( $i = 0, $len = count($nums); $i &lt; $len; $i++ )\n{\n    $rStart = $nums[$i];\n    $rEnd = $rStart;\n    while ( isset($nums[$i+1]) &amp;&amp; $nums[$i+1]-$nums[$i] == 1 )\n        $rEnd = $nums[++$i];\n\n    $ranges[] = $rStart == $rEnd ? $rStart : $rStart.'-'.$rEnd;\n}\n\nreturn $ranges;\n}\n\n\necho print_r(getRanges(array(2,21,3,4,5,10,18,19,20)));\necho print_r(getRanges(array(1,2,3,4,5,6,7,8,9,10)));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>import java.util.ArrayList;\nimport java.util.Arrays;\n\n\n\npublic class SequencetoRange {\n\n    /**\n     * @param args\n     */\n    public static void main(String[] args) {\n    // TODO Auto-generated method stub\n\n        int num[] = {1,2,3,63,65,66,67,68,69,70,80,90,91,94,95,4,101,102,75,76,71};\n\n        int l = num.length;\n        int i;\n        System.out.print(\"Given number : \");\n        for (i = 0;i &lt; l;i++ ){\n            System.out.print(\"  \" + num[i]);\n        }\n        System.out.println(\"\\n\");\n        Arrays.sort(num);\n\n        ArrayList newArray = new ArrayList();\n        newArray = getRanges(num);\n        System.out.print(\"Range : \");\n        for(int y=0;y&lt;newArray.size();y++)\n        {\n            System.out.print(\" \" +newArray.get(y));\n        }\n    }\n\n    public static ArrayList getRanges(int num[])\n    {  \n        ArrayList ranges = new ArrayList();\n        int rstart, rend;   \n        int lastnum = num[num.length-1];\n        for (int i = 0; i &lt; num.length-1; i++) \n        {     \n            rstart = num[i];     \n            rend = rstart;     \n            while (num[i + 1] - num[i] == 1) \n            {       \n                rend = num[i + 1]; \n                // increment the index if the numbers sequential       \n                if(rend&gt;=lastnum)\n                {\n                    break;\n                }\n                else\n                {\n                    i++;\n                }  \n            }  \n            if(rstart==rend)\n            {\n                ranges.add(rend);\n            }\n            else\n            {\n                ranges.add(+rstart+\"...\"+rend);\n            }\n        } \n        return ranges; \n    } \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In C# </p>\n\n<pre><code>    public string compressNumberRange(string inputSeq)\n    {\n        //Convert String array to long List and removing the duplicates\n        List&lt;long&gt; longList = inputSeq.Split(',').ToList().ConvertAll&lt;long&gt;(s =&gt; Convert.ToInt64(s)).Distinct().ToList();\n\n        //Sort the array\n        longList.Sort();\n\n        StringBuilder builder = new StringBuilder();\n\n\n        for (int itr = 0; itr &lt; longList.Count(); itr++)\n        {\n            long first = longList[itr];\n            long end = first;\n\n            while (longList[itr + 1] - longList[itr] == 1) //Seq check \n            {\n                end = longList[itr + 1];\n                itr++;\n                if (itr == longList.Count() - 1)\n                    break;\n            }\n            if (first == end) //not seq\n                builder.Append(first.ToString() + \",\");\n            else //seq\n                builder.Append(first.ToString() + \"-\" + end.ToString() + \",\");\n        }\n\n        return builder.ToString();\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've written my own method that's dependent on Lo-Dash, but doesn't just give you back an array of ranges, rather, it just returns an array of range groups.</p>\n\n<p>[1,2,3,4,6,8,10] becomes:</p>\n\n<pre><code>[[1,2,3,4],[6,8,10]]\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/mberkom/ufVey/\" rel=\"nofollow\">http://jsfiddle.net/mberkom/ufVey/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is a port of CMS's code for BASH:</p>\n\n<pre><code>#!/usr/bin/env bash\n# vim: set ts=3 sts=48 sw=3 cc=76 et fdm=marker: # **** IGNORE ******\nget_range() { RANGE= # &lt;-- OUTPUT                  **** THIS   ******\n   local rstart rend i arr=( \"$@\" )  # ported from **** JUNK   ******\n   for (( i=0 ; i &lt; $# ; i++ )); do  # http://stackoverflow.com\n      (( rstart = arr[i] ))          # /a/2270987/912236\n      rend=$rstart; while (( arr[i+1] - arr[i] == 1 )); do\n      (( rend = arr[++i] )); done; (( rstart == rend )) &amp;&amp;\n   RANGE+=\" $rstart\" || RANGE+=\" $rstart-$rend\"; done; } # }}}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In javascript how to convert sequence of numbers in an array to range of numbers?</p>\n\n<p>eg. <code>[2,3,4,5,10,18,19,20]</code> to <code>[2-5,10,18-20]</code></p>\n",
            "last_activity_date": 1389495284,
            "question_id": 2270910,
            "score": 12,
            "tags": [
                "javascript",
                "range",
                "sequence"
            ],
            "title": "How to convert sequence of numbers in an array to range of numbers"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>This isn't a full answer, but I quickly found how to fix all my code with minimal changes.  In my \"base\" js class (this is an object which is used on every page for standard button hookups by class name etc) I added the following method which does the check for dupe handlers:</p>\n\n<pre><code>BindOnce: function(triggerName, fn) {\n    function handlerExists(triggerName, theHandler) {\n        function getFunctionName(fn) {\n            var rgx = /^function\\s+([^\\(\\s]+)/\n            var matches = rgx.exec(fn.toString());\n            return matches ? matches[1] : \"(anonymous)\"\n        }\n        exists = false;\n        var handlerName = getFunctionName(theHandler);\n        if ($(document).data('events') !== undefined) {\n            var event = $(document).data('events')[triggerName];\n            if (event !== undefined) {\n                $.each(event, function(i, handler) {\n                    if (getFunctionName(handler) == handlerName) {\n                        exists = true;\n                    }\n                });\n            }\n        }\n        return exists;\n    }\n    if (!handlerExists(triggerName, fn)) {\n        $(document).bind(triggerName, fn);\n    }\n},\n</code></pre>\n\n<p>Then I just invoke it instead of the bind method!</p>\n\n<pre><code>$.mystuff.BindOnce(\"TheTrigger\", OnTriggered)\n</code></pre>\n\n<p>Note that you can't use anon methods here as they would just be called 1, 2, 3 etc and the only way to check for dupes would be with a toString() on the method, which would be pretty slow in a complex application</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Ummm how about using <code>one()</code>? <a href=\"http://api.jquery.com/one/\">http://api.jquery.com/one/</a></p>\n\n<p>Or am i completely misunderstanding you?</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>About a hundred years too late, but if you're not using anonymous functions you can do this much more simply by using unbind first:</p>\n\n<pre><code>$.fn.eventWillOnlySubscribeOnce = function () {\n    return this.each(function () {\n        var oneHandler = (function () {\n             HANDLER CODE\n        });\n\n    $(this).unbind(\"submit\", oneHandler);\n    $(this).bind(\"submit\", oneHandler);\n});\n};\n</code></pre>\n\n<p>This implementation will work in Firefox 4, but not in many other browsers - because the handler variable is created new each time so the unbind can't find a matching handler to unbind. Moving the handler into the parent scope fixes the problem: i.e.</p>\n\n<pre><code>var oneHandler = (function () {\n    HANDLER CODE\n});\n\n$.fn.eventWillOnlySubscribeOnce = function () {\n    return this.each(function () {\n    $(this).unbind(\"submit\", oneHandler);\n    $(this).bind(\"submit\", oneHandler);\n});\n};\n</code></pre>\n\n<p>Presumably Firefox is doing some clever optimisation which means the handler is held as a constant variable somewhere as it never changes.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Prevent duplicate binding using jQuery's event namespace</strong></p>\n\n<p>There are actually a couple different ways of preventing duplicate. One is just passing the original handler in the unbind, BUT if it is a copy and not in the same space in memory it will not unbind, the other popular way (using namespaces) is a more certain way of achieving this.</p>\n\n<p>This is a common issue with events. So I'll explain a little on the jQuery events and using namespace to prevent duplicate bindings. </p>\n\n<p><br/><br/>\n<strong>ANSWER:</strong> (Short and straight to the point)</p>\n\n<hr>\n\n<pre><code>// bind handler normally\n$('#myElement').bind('myEvent', myMainHandler);\n\n// bind another using namespace\n$('#myElement').bind('myEvent.myNamespace', myUniqueHandler);\n\n// unbind the unique and rebind the unique\n$('#myElement').unbind('myEvent.myNamespace').bind('myEvent.myNamespace', myUniqueHandler);\n$('#myElement').bind('myEvent.myNamespace', myUniqueHandler);\n\n// trigger event\n$('#myElement').trigger('myEvent');\n\n// output\nmyMainHandler() // fires once!\nmyUniqueHandler() // fires once!\n</code></pre>\n\n<p><br/><br/>\n<strong>EXAMPLE OF ANSWER:</strong> (Full detailed explanation)</p>\n\n<hr>\n\n<p>First let's create an example element to bind to.  We will use a button with the id of #button.  Then make 3 functions that can and will be used as the handlers to get bound to the event:</p>\n\n<p>function exampleOne() we will bind with a click.\nfunction exampleTwo() we will bind to a namespace of the click.\nfunction exampleThree() we will bind to a namepsace of the click, but unbind and bind multiple times without ever removing the other binds which prevents duplicating binding while not removing any other of the bound methods.</p>\n\n<p><strong>Example Start:</strong> (Create element to bind to and some methods to be our handlers)</p>\n\n<pre><code>&lt;button id=\"button\"&gt;click me!&lt;/button&gt;\n\n\n// create the example methods for our handlers\nfunction exampleOne(){ alert('One fired!'); }\nfunction exampleTwo(){ alert('Two fired!'); }\nfunction exampleThree(){ alert('Three fired!'); }\n</code></pre>\n\n<p><strong>Bind exampleOne to click:</strong></p>\n\n<pre><code>$('#button').bind('click', exampleOne); // bind example one to \"click\" \n</code></pre>\n\n<p>Now if user clicks the button or call $('#button').trigger('click') you will get the alert \"One Fired!\";</p>\n\n<p><strong>Bind exampleTwo to a namespace of click:</strong> \"name is arbitrary, we will use myNamespace2\"</p>\n\n<pre><code>$('#button').bind('click.myNamespace2', exampleTwo);\n</code></pre>\n\n<p>The cool thing about this is, we can trigger the \"click\" which will fire exampleOne() AND exampleTwo(), or we can trigger \"click.myNamespace2\" which will only fire exampleTwo()</p>\n\n<p><strong>Bind exampleThree to a namespace of click:</strong> \"again, name is arbitrary as long as it's different from exampleTwo's namespace, we will use myNamespace3\"</p>\n\n<pre><code>$('#button').bind('click.myNamespace3', exampleThree);\n</code></pre>\n\n<p>Now if 'click' get's triggered ALL three example methods will get fired, or we can target a specific namespace.</p>\n\n<p><strong>PUT IT ALL TOGETHER TO PREVENT DUPLICATE</strong></p>\n\n<p>If we were to continue to bind exampleThree() like so:</p>\n\n<pre><code>$('#button').bind('click.myNamespace3', exampleThree); \n$('#button').bind('click.myNamespace3', exampleThree);\n$('#button').bind('click.myNamespace3', exampleThree);\n</code></pre>\n\n<p>They would get fired three times because each time you call bind you add it to the event array. So, really simple. Just unbind for that namespace prior to binding, like so:</p>\n\n<pre><code>$('#button').unbind('click.myNamespace3').bind('click.myNamespace3', exampleThree); \n$('#button').bind('click.myNamespace3', exampleThree);\n$('#button').unbind('click.myNamespace3').bind('click.myNamespace3', exampleThree); \n$('#button').bind('click.myNamespace3', exampleThree);\n$('#button').unbind('click.myNamespace3').bind('click.myNamespace3', exampleThree); \n$('#button').bind('click.myNamespace3', exampleThree);\n</code></pre>\n\n<p>If the click function is triggered, exampleOne(), exampleTwo(), and exampleThree() only get fired once.</p>\n\n<p><strong>To wrap it all together in a simple function:</strong></p>\n\n<pre><code>var myClickBinding = function(jqEle, handler, namespace){\n    if(namespace == undefined){\n        jqEle.bind('click', handler);\n    }else{\n        jqEle.unbind('click.'+namespace).bind('click.'+namespace, handler);\n    }\n}   \n</code></pre>\n\n<p><strong>Summary:</strong></p>\n\n<p>jQuery event namespaces allow for binding to main event but also allow child namespaces to be created and cleared without effecting sibling namespaces or parent ones which with very minimal creative thinking allows prevention of duplicate bindings.  </p>\n\n<p>For further explanation: <a href=\"http://api.jquery.com/event.namespace/\" rel=\"nofollow\">http://api.jquery.com/event.namespace/</a></p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>An excellent answer from</p>\n\n<p><a href=\"http://stackoverflow.com/questions/8408826/bind-event-only-once\">bind event only once</a></p>\n\n<p><strong>copyPastedInfo</strong>:</p>\n\n<p>if you can apply it, probably want to take a look at <a href=\"http://api.jquery.com/event.preventDefault\" rel=\"nofollow\">event.preventDefaultt</a> and <a href=\"http://api.jquery.com/event.stopPropagation/\" rel=\"nofollow\">event.stopPropagation</a>\nOR unbind and bind each time, within the method like</p>\n\n<pre><code>function someMethod()\n{\n  $(obj).off('click').on('click', function {});\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Once again I want to load a page which contains its own script into a div using $(\"divid\").load(...).  The problem I face is related to events.  Let's say we trigger(\"monkey\") from the parent page and on the loaded page we bind(\"monkey\") and just do an alert(\"monkey bound\").  If the same load method is called multiple times, the bind is called multiple times.  Now I could just unbind it before I bind it, or check the number of handlers before the bind and then not bind it to prevent this.  Neither option is scalable as what if I later want to bind to that trigger in another \"sub page\" (a page loaded into a div).</p>\n\n<p>What I ideally want to do then is check if the handler I am about to add already exists, but I still WANT to use anonymous handlers... (asking a bit much with that last request I think).  Currently I have a workaround by using pre-defined/named methods and then checking this before the bind.</p>\n\n<pre><code>// Found this on StackOverflow\nfunction getFunctionName(fn)\n{\n var rgx = /^function\\s+([^\\(\\s]+)/\n var matches = rgx.exec(fn.toString());\n return matches ? matches[1] : \"(anonymous)\"\n}\n\nfunction HandlerExists(triggerName, handlerName) {\n        exists = false;\n        if ($(document).data('events') !== undefined) {\n            var event = $(document).data('events')[triggerName];\n            if(event !== undefined)\n            {\n                $.each(event, function(i, handler) {\n                    alert(handlerName);\n                    if (getFunctionName(handler) == handlerName) {\n                        exists = true;\n                    }\n                });\n            }\n        }\n        return exists;\n    }\n</code></pre>\n\n<p>This is a pretty crude way of going about it I feel, but appears to work. I just do the following before the bind as follows:</p>\n\n<pre><code>if (!HandlerExists(\"test\", \"theMethod\")) {\n    $(document).bind(\"test\", theMethod);\n}\n</code></pre>\n\n<p>Does anyone have a more elegant solution? for instance, is there any way to check a particular script is loaded? so I could use getScript() to load the js from the child page on first load, and then simply not load it on subsequent loads (and just fire a trigger which would be handled by he preexisting js)..</p>\n",
            "last_activity_date": 1426092778,
            "question_id": 2180326,
            "score": 12,
            "tags": [
                "jquery",
                "events",
                "triggers",
                "bind",
                "javascript"
            ],
            "title": "JQuery event model and preventing duplicate handlers"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Is this behavior only present in IE? If so, it may be related to this issue:<br />\n<a href=\"http://stackoverflow.com/questions/1637503/jquery-change-event-on-select-not-firing-in-ie/\">http://stackoverflow.com/questions/1637503/jquery-change-event-on-select-not-firing-in-ie/</a><br />\nIn essence: You may need to check for onClick instead.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There really isn't any way to fix that. If you add any other listener or timer, then you will potentially upload the file even when the user doesn't want it to (eg, with an onclick). Are you sure uploading the same file can't be done in another way? What about clearing the input once the upload has started (or replace it with a new input if you can't clear it).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can just remove the input and create an identical one with javascript - the new one will be empty.</p>\n\n<p>(edited answer to be straight to the point, comments are irrelevant now)</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>You could have the choose file button clear the contents of the input onclick, that way even even if they choose the same file your event will still trigger.  Of course, then your onchange handler will have to check for blank values, but it should probably be doing something similar or more anyway if it's going to use that value to upload a file...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could not fire change event second time on the file input, but you can fire change event on the span. Below works in chrome and ff. I didn't check in IE.\n<code>\n$('#change_span').bind('change',function(){\n    alert($('#file_1').val())\n})</p>\n\n<p></code></p>\n\n<p><code>&lt;span id='change_span'&gt;&lt;input id=\"file_1\" type=\"file\"&gt;&lt;/span&gt;</code> </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>function resetFileInput ($element) {\n  var clone = $element.clone(false, false);\n  $element.replaceWith(clone);\n}\n</code></pre>\n\n<p>And then use live:</p>\n\n<pre><code>$('#element_id').live('change', function(){\n...\n});\n</code></pre>\n\n<p>Worked well for me!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Set the value of the input to \"\" in your onchange callback. That way, if the same file is selected the next time around, the onchange event will still be triggered because the value is different than \"\".</p>\n\n<pre><code>document.getElementById('files').value = \"\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you don't want to use jQuery</p>\n\n<pre><code>&lt;form enctype='multipart/form-data'&gt;\n    &lt;input onchange=\"alert(this.value); return false;\" type='file'&gt;\n    &lt;br&gt;\n    &lt;input type='submit' value='Upload'&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>It works fine in Firefox, but for Chrome you need to add <code>this.value=null;</code> after alert.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Seems really a simple thing but can't figure it out. I've been using the onchange event on  element and it works well. Once the user browses and selects a file, I get the path and upload it using a my custom js function.</p>\n\n<p>The problem is this doesn't work if a user selects the same file twice in a row, the onchange doesn't fire (which makes sense since nothing changed) but in my case it's important for me to capture that event too, get the path and upload.</p>\n\n<h2>Edit</h2>\n\n<p>(Similar to <a href=\"http://stackoverflow.com/questions/1043957/clearing-input-typefile-using-jquery\">http://stackoverflow.com/questions/1043957/clearing-input-typefile-using-jquery</a>, not sure if I should resolve this as duplicate)</p>\n",
            "last_activity_date": 1411220035,
            "question_id": 2133807,
            "score": 12,
            "tags": [
                "javascript",
                "html",
                "file",
                "javascript-events",
                "file-upload"
            ],
            "title": "alternate to onchange event in &lt;input type=&#39;file&#39; /&gt;"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can access object properties by dot notation or by bracket notation.</p>\n\n<pre><code>var x = {'test': 'hi'};\nalert(x.test); // alerts hi\nalert(x['test']); // alerts hi\n</code></pre>\n\n<p>When you have a dynamic value, you have to use the latter:</p>\n\n<pre><code>var property = 'test';\nalert(x.property); // looks for x.property, undefined if it doesn't exist\nalert(x[property]); // looks for x['test'], alerts hi\n</code></pre>\n\n<p>So what you actually want is:</p>\n\n<pre><code>alert(data[bsID][0].time);\n</code></pre>\n\n<p><strong>EDIT</strong>:</p>\n\n<p>Not sure what you're doing wrong, but this is working for me on Firebug's console:</p>\n\n<pre><code>var data = {\"A5A50000\":[{\"bsid\":\"A5A50000\",\"chanCount\":17,\"time\":\"2009-05-27 16:36:45\",\"avgInterference\":1.711765,\"maxInterference\":4.97,\"avgHandsets\":205.1176,\"maxHandsets\":315,\"avgCalls\":6.4118,\"maxCalls\":13,\"avgCBA\":3868.98059,\"maxCBA\":7463,\"sumSuccessCBA\":197318,\"sumTimeoutHandoff\":133,\"sumAttemptHandoff\":1028,\"sumDeniedHandoff\":216,\"sumConfirmHandoff\":679,\"sumHandoffNetwork\":61873,\"sumJoinNetwork\":96888,\"sumLeaveNetwork\":93754,\"sumRcvdKeepalive\":98773,\"sumTimeoutKeepalive\":19748,\"sumAttemptUplink\":93689,\"sumBlockedUplink\":62453}]};\nvar bsID = 'A5A50000';\nalert(data[bsID][0].time);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>In Javascript, you can use either object or array-style notation to look up an attribute. The following are equivalent:</p>\n\n<pre><code>data.A5A50000\ndata['A5A50000']\n</code></pre>\n\n<p>With the second syntax, you can use a variable in place of an object string:</p>\n\n<pre><code>data[bsID][0]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>The code:</p>\n\n<pre><code>function updateDashboardData() {\n    $.getJSON(\"includes/system/ajaxDataInterface.php\", {recordcount:1}, function(data) {\n        $('.stationContainer').each(function(data) {\n            var bsID = $(this).attr(\"id\");\n            var bsStatus = $(this).children('.stationStatus');\n            alert(data[bsID][0].time);\n            bsStatus.find('.bs_maxHandsets').text(data[bsID][0].maxHandsets);\n            bsStatus.find('.bs_time').text(data[bsID][0].time);\n        });\n    });\n}\n</code></pre>\n\n<p>The object data:</p>\n\n<pre><code>{\n    \"A5A50000\": [{\n        \"bsid\": \"A5A50000\",\n        \"chanCount\": 17,\n        \"time\": \"2009-05-27 16:36:45\",\n        \"avgInterference\": 1.711765,\n        \"maxInterference\": 4.97,\n        \"avgHandsets\": 205.1176,\n        \"maxHandsets\": 315,\n        \"avgCalls\": 6.4118,\n        \"maxCalls\": 13,\n        \"avgCBA\": 3868.98059,\n        \"maxCBA\": 7463,\n        \"sumSuccessCBA\": 197318,\n        \"sumTimeoutHandoff\": 133,\n        \"sumAttemptHandoff\": 1028,\n        \"sumDeniedHandoff\": 216,\n        \"sumConfirmHandoff\": 679,\n        \"sumHandoffNetwork\": 61873,\n        \"sumJoinNetwork\": 96888,\n        \"sumLeaveNetwork\": 93754,\n        \"sumRcvdKeepalive\": 98773,\n        \"sumTimeoutKeepalive\": 19748,\n        \"sumAttemptUplink\": 93689,\n        \"sumBlockedUplink\": 62453\n    }]\n}\n</code></pre>\n\n<p>The problem:</p>\n\n<p><code>alert(data.A5A50000[0].time);</code> properly displays \"2009-05-27 16:36:45\".</p>\n\n<p><code>alert(bsID);</code> properly displays \"A5A50000\".</p>\n\n<p><code>alert(data.bsID[0].time);</code> reports \"data.bsID is undefined\".</p>\n\n<p><code>alert(data[bsID][0].time);</code> reports \"data[bsID] is undefined\".</p>\n\n<p>I'm a little unclear when a variable is/isn't evaluated. Maybe I'm overlooking something silly, but I can't figure out my problem here.</p>\n",
            "last_activity_date": 1376423474,
            "question_id": 922544,
            "score": 12,
            "tags": [
                "javascript",
                "language-design"
            ],
            "title": "Using variable keys to access values in JavaScript objects"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I believe it's a difference between JavaScript definition and firebugs of the same thing.</p>\n\n<p>Undefined is just the state of something that has not been defined as a value. So it has no type.</p>\n\n<blockquote>\n  <p>Also what is the difference between var a; and var b = undefined;</p>\n</blockquote>\n\n<pre><code>var a; alert(a); // undefined\na; alert(a); // \"Error \"a\" not defined\"\na = undefined; alert(a); // undefined\n</code></pre>\n\n<p>2nd example is not valid JavaScript code and the execution will stop. Since this is an error.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>An undeclared variable (that is, one that doesn't exist) does not have a type - and so its type <em>is</em> undefined.  I believe that the generally accepted way to test if something is undefined is </p>\n\n<pre><code>typeof var === 'undefined'\n</code></pre>\n\n<p>rather than</p>\n\n<pre><code>var === undefined\n</code></pre>\n\n<p>since if the variable does not exist, you cannot access it.  The latter case might be more useful if you are sure the variable <em>should</em> exist, since the difference between the two is that an undeclared variable will return false in the first case but cause an error in the second case.</p>\n\n<p>Make sure that you use the triple-equals operator though if you're using the second variant; the (more usual) double-equals operator performs type coercion, so <code>null == undefined</code> is true while <code>null === undefined</code> is false.  Sometimes you might want the first behaviour, though often you'll want the second, especially if you're testing against undefined, so it's important to recognise the difference.  (This is another benefit of the first case since it's not possible to make this subtle error).</p>\n\n<p>Yes, variables can have a value of undefined and you can explicitly assign values to them.  Assigning <code>undefined</code> to a variable though is probably confusing, since it's a bit of a paradox (you've defined the variable as undefined) and it's not possible to distinguish that variable from either variables that don't exist or uninitialised variables.  Use null if you want to signify that a variable has no value currently, or if you want to \"undeclare\" the variable altogether, use <code>delete {varname}</code>.  Assigning undefined to a variable does not remove that variable's declaration; and it will still appear in the list of its owning object's properties if you iterate over them, so I can't think of any situation this would benefit you.</p>\n\n<p>Edit: In response to the comment, when comparing the values with === (or ==), the variable must be deferenced to obtain its current value in order to do the comparison.  Since the variable doesn't exist, this dereferencing fails (no real surprises so far).  While you might expect the typeof operator to work in a similar way (get the current value, see what its type is) it specifically works with undefined variables.  The \"short version\" (as used by the <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Operators/Special%5FOperators/typeof%5FOperator\">Mozilla reference</a> ) is simply that \"The typeof operator returns a string indicating the type of the unevaluated operand.\"</p>\n\n<p>The long version, extracted from the <a href=\"http://www.mozilla.org/js/language/E262-3.pdf\">ECMAScript spec</a>, is that there's a special case for undefined variables:</p>\n\n<blockquote>\n  <p>11.4.3 typeof <em>UnaryExpression</em> is evaluated as follows:</p>\n  \n  <ol>\n  <li>Evaluate <em>UnaryExpression</em> (as per 10.1.4 this returns \"a value of type Reference whose base object is <em>null</em> and whose property name is the identifier\" if the variable is undeclared).</li>\n  <li>If Type(Result(1)) is not Reference, go to step 4.  (It is a Reference)</li>\n  <li>If GetBase(Result(1)) is <em>null</em>, return \"undefined\".  (This is the special case matching undefined variables)</li>\n  </ol>\n</blockquote>\n\n<p>As for your comment to the first question, \"how can you classify what does not exist\" - it's easy!  Simply divide all concepts into things that do exist (e.g. squirrel, rock) and those that don't exist (unicorns, warp drives).  That's what undefined means; regardless of its semantics in English, its Javascript meaning is that the variable hasn't been declared or populated yet, and so while the <em>concept</em> of \"a variable called foo\" is valid, there exists no variable with that name holding a real value.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>JavaScript provides several different notions of missing or empty variables (and object properties):</p>\n\n<ol>\n<li><p>Variables that are actually 'not defined', i.e. they don't exists as a given name isn't bound in the current lexical environment. Accessing such a variable will throw an error, but using <code>typeof</code> won't and will return <code>'undefined'</code>. In contrast, accessing non-existing properties will not throw an error and return <code>undefined</code> instead (and you may use the <code>in</code> operator or the <code>hasOwnProperty()</code> method to check if properties actually do exist).</p></li>\n<li><p>Existing variables which have not been assigned a value (which is common because of <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/var#var_hoisting\" rel=\"nofollow\">var hoisting</a>) or which have been explicitly set to <code>undefined</code>. Accessing such a variable will return <code>undefined</code>, <code>typeof</code> will return <code>'undefined'</code>.</p></li>\n<li><p>Existing variables which have been explicitly set to <code>null</code>. Accessing such a variable will return <code>null</code>, <code>typeof</code> will return <code>'object'</code>. Note that this is misleading: <code>null</code> is not an object, but a primitive value of type <em>Null</em> (which has the consequence that you can't return <code>null</code> from constructor functions - you have to throw an error instead to denote failure).</p></li>\n</ol>\n\n<p>I'd recommend the following practices:</p>\n\n<ol>\n<li>Use <code>typeof</code> to check for <code>undefined</code>, as it will cover the first two cases.</li>\n<li>Don't assign <code>undefined</code> to <em>properties</em>: Use <code>delete</code> to get rid of them instead; note that you cannot delete <em>variables</em> (but also note that globals are actually properties of the global object and thus can be deleted).</li>\n<li>Use <code>null</code> to mark the absence of a meaningful value (eg the forward reference of the last node of a linked list) or if you want to clear a variable as a hint to the garbage collector.</li>\n</ol>\n\n<p>You could go with <code>undefined</code> for 3. as well and never use <code>null</code> at all.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>An undeclared variable does not exist in Javascript memory whereas a declared one does and can be set to undefined.</p>\n\n<p>The difference is caused by Javascript design confusion. If a variable's value is undefined then it should be deleted. Indeed falsy values like 0, \"\", null, and undefined, are all basically meaningless and identical. A lot of time is wasted on them. They are all nothing and non existent. It is highly contradictory to have more than one type of nothing, or maybe to allow even one.</p>\n\n<p>Therefore I think you should avoid explicitly using falsy values when programming altogether. I didn't find a case yet when they couldn't be eliminated by a better method, and programming is much nicer without them. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If you attempt to use a variable that does not exist and has not been declared, javascript will throw an error. <code>var name is not defined</code>, and the script will stop then and there.</p>\n\n<p>But if you check it using <code>typeof noname</code> then it will return <code>\"undefined\"</code>. I always thought that you had to declare a var for it to have a type. Either by using: var a; so it has the type of undefined or by giving it a value like: <code>var b =5;</code> so it has the type of its value.</p>\n\n<p>Also what is the difference between <code>var a;</code> and <code>var b = undefined;</code>?</p>\n",
            "last_activity_date": 1412577101,
            "question_id": 833661,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "What is the difference in Javascript between &#39;undefined&#39; and &#39;not defined&#39;?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The short answer is no. ECMAScript (the standard JS is based on) does not support operator overloading.</p>\n\n<p>As an aside, in ECMAScript 7, you'll be able to overload a subset of the standard operators when designing custom <em>value types</em>. Here is a <a href=\"http://www.slideshare.net/BrendanEich/value-objects\" rel=\"nofollow\">slide deck by language creator and Mozilla CTO Brendan Eich</a> about the subject. This won't allow arbitary operators, however, and the overloaded meaning will only be applied to value types.</p>\n\n<p>It is possible to use third party tools like <a href=\"http://sweetjs.org/\" rel=\"nofollow\">sweet.js</a> to add custom operators though that'd require an extra compilation step.</p>\n\n<p>I've <a href=\"http://stackoverflow.com/questions/20762338/how-would-i-extend-the-javascript-language-to-support-a-new-operator/20764137#20764137\"><strong>answered with a solution from outside JavaScript</strong></a> using esprima - this is <em>changing</em> JavaScript and extending it, it's not native. </p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>No. You can't do that in JS.</p>\n\n<p>The closest you can have IMO is to <em>implement your own</em> object which has a chainable interface, aka \"fluent\" syntax. That way you can operate as if you were speaking out in sequence.</p>\n\n<pre><code>var eq = new YourEquationObject();\n\n// Then operate like 1 - 2 * 3\neq.add(1).sub(2).mul(3);\n</code></pre>\n\n<p>Details are up to you though. Just giving out an idea.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>No. JavaScript does not support operator overloading . but you can make a class method for doing this</p>\n\n<pre><code>var mathClass = function(value){\n   this.value = value;\n}\n\nmathClass.prototype.toLaw = function(){\n   return 2 * this.value;\n}\n\nvar y = new mathClass(2)\n2 + y.toLaw(); //2 + 2 * y\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Read the comments below the answer.</strong></p>\n\n<p>Apparently you can't. Here is something close :</p>\n\n<pre><code>function exec(input) {\n    return Function(\n        'return ' + input.replace(/\u2218( *[\\d.]+)/g, '+ 2 * $1') + ';'\n    )();\n}\n\nexec('2 \u2218 2'); // 6\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The slightly longer then the short one is that Yes you can, but its a bit more involved then what you did in Math class</p>\n\n<p>To extend the language with new constructs you can use a transformer like <a href=\"http://esprima.org/\" rel=\"nofollow\">http://esprima.org/</a> or any of the others. You need to define your syntax, write the parser to parse your statement and finally add the actual code to do the math parts. When these parts is in place you have made a new language that works just as javascript but with the added support of the <code>\u2218</code> operator.</p>\n\n<p>Its really not <em>that</em> hard to add new syntax, here is facebooks example how they add => arrow function syntax </p>\n\n<p><a href=\"https://github.com/facebook/jstransform/blob/master/visitors/es6-arrow-function-visitors.js\" rel=\"nofollow\">https://github.com/facebook/jstransform/blob/master/visitors/es6-arrow-function-visitors.js</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can add pseudo-operators via methods on <code>Number.prototype</code>:</p>\n\n<pre><code>Object.defineProperty(Number.prototype, 'myOp', {\n    value: function(that) {\n        return this + 2 * that;\n    }\n});\n</code></pre>\n\n<p>Then all of this syntax will work</p>\n\n<pre><code>alert( (2).myOp(2) )\nalert( 2 .myOp(2) )\nalert( 2..myOp(2) )\nalert( 2.0.myOp(2) )\n</code></pre>\n\n<p><code>2.myOp(2)</code> does not work because the period is treated as a decimal point</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>During the Math classes we learned how to define new operators. For example:</p>\n\n<h2><code>(\u211d, \u2218), x \u2218 y = x + 2y</code></h2>\n\n<p>This defines <code>\u2218</code> law. For any real numbers <em>x</em> and <em>y</em>, <em>x \u2218 y</em> is <em>x + 2y</em>.</p>\n\n<p>Example: <code>2 \u2218 2 = 2 + 4 = 6</code>.</p>\n\n<hr>\n\n<p>Is possible to define operators like this in JavaScript? I know that a function would do the job:</p>\n\n<pre><code>function foo (x, y) { return x + 2 * y; }\n</code></pre>\n\n<p>but I would like to have the following syntax:</p>\n\n<pre><code>var y = 2 \u2218 2; // returns 6\n</code></pre>\n\n<p>instead of this:</p>\n\n<pre><code>var y = foo(2, 2);\n</code></pre>\n\n<p>Which is the closest solution to this question?</p>\n",
            "last_activity_date": 1387905249,
            "question_id": 20728460,
            "score": 11,
            "tags": [
                "javascript",
                "operators"
            ],
            "title": "Is it possible to create custom operators in JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The <code>node-mysql</code> library automatically performs escaping when used as you are already doing. See <a href=\"https://github.com/felixge/node-mysql#escaping-query-values\">https://github.com/felixge/node-mysql#escaping-query-values</a></p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>The library has a <a href=\"https://github.com/felixge/node-mysql#escaping-query-values\">section</a> in the readme about escaping. It's Javascript-native, so I do not suggest switching to <a href=\"https://github.com/sidorares/nodejs-mysql-native\">node-mysql-native</a>. The documentation states these guidelines for escaping:</p>\n\n<p><strong>Edit:</strong> <a href=\"https://github.com/sidorares/nodejs-mysql-native\">node-mysql-native</a> is also a pure-Javascript solution.</p>\n\n<ul>\n<li>Numbers are left untouched</li>\n<li>Booleans are converted to <code>true</code> / <code>false</code> strings</li>\n<li>Date objects are converted to <code>YYYY-mm-dd HH:ii:ss</code> strings</li>\n<li>Buffers are converted to hex strings, e.g. <code>X'0fa5'</code></li>\n<li>Strings are safely escaped</li>\n<li>Arrays are turned into list, e.g. <code>['a', 'b']</code> turns into <code>'a', 'b'</code></li>\n<li>Nested arrays are turned into grouped lists (for bulk inserts), e.g. <code>[['a', 'b'], ['c', 'd']]</code> turns into <code>('a', 'b'), ('c', 'd')</code></li>\n<li>Objects are turned into <code>key = 'val'</code> pairs. Nested objects are cast to strings.</li>\n<li><code>undefined</code> / <code>null</code> are converted to <code>NULL</code></li>\n<li><code>NaN</code> / <code>Infinity</code> are left as-is. MySQL does not support these, and trying to insert them as values will trigger MySQL errors until they implement support.</li>\n</ul>\n\n<p>This allows for you to do things like so:</p>\n\n<pre><code>var userId = 5;\nvar query = connection.query('SELECT * FROM users WHERE id = ?', [userId], function(err, results) {\n  //query.sql returns SELECT * FROM users WHERE id = '5'\n});\n</code></pre>\n\n<p>As well as this:</p>\n\n<pre><code>var post  = {id: 1, title: 'Hello MySQL'};\nvar query = connection.query('INSERT INTO posts SET ?', post, function(err, result) {\n  //query.sql returns INSERT INTO posts SET `id` = 1, `title` = 'Hello MySQL'\n});\n</code></pre>\n\n<p>Aside from those functions, you can also use the escape functions:</p>\n\n<pre><code>connection.escape(query);\nmysql.escape(query);\n</code></pre>\n\n<p>To escape query identifiers:</p>\n\n<pre><code>mysql.escapeId(identifier);\n</code></pre>\n\n<p>And as a response to your comment on prepared statements:</p>\n\n<blockquote>\n  <p>From a usability perspective, the module is great, but it has not yet implemented something akin to PHP's Prepared Statements.</p>\n</blockquote>\n\n<p>The prepared statements are on the <a href=\"https://github.com/felixge/node-mysql#todo\">todo</a> list for this connector, but this module at least allows you to specify custom formats that can be very similar to prepared statements. Here's an example from the readme:</p>\n\n<pre><code>connection.config.queryFormat = function (query, values) {\n  if (!values) return query;\n  return query.replace(/\\:(\\w+)/g, function (txt, key) {\n    if (values.hasOwnProperty(key)) {\n      return this.escape(values[key]);\n    }\n    return txt;\n  }.bind(this));\n};\n</code></pre>\n\n<p>This changes the query format of the connection so you can use queries like this:</p>\n\n<pre><code>connection.query(\"UPDATE posts SET title = :title\", { title: \"Hello MySQL\" });\n//equivalent to\nconnection.query(\"UPDATE posts SET title = \" + mysql.escape(\"Hello MySQL\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I realize this is an older post but it seems that an answer was never marked so I will throw this out there.</p>\n\n<p>In regards to testing if an module you are utilizing is secure or not there are several routes you can take. I will touch on the pros/cons of each so you can make a more informed decision.</p>\n\n<p>Currently there are not any vulnerabilities for the module you are utilizing, however, this can often lead to a false sense of security as there very well could be a vulnerability currently exploiting the module/software package you are using and you wouldn't be alerted to a problem until the vendor applies a fix/patch.</p>\n\n<ol>\n<li><p>To keep abreast of vulnerabilities you will need to follow mailing lists, forums, IRC &amp; other hacking related discussions.\nPRO: You can often times you will become aware of potential problems within a library before a vendor has been alerted or has issued a fix/patch to remedy the potential avenue of attack on their software.\nCON: This can be very time consuming and resource intensive. If you do go this route a bot using RSS feeds, log parsing (IRC chat logs) and or a web scrapper using key phrases (in this case node-mysql-native) and notifications can help reduce time spent trolling these resources.</p></li>\n<li><p>Create a fuzzer, use a <a href=\"https://www.owasp.org/index.php/Fuzzing\" rel=\"nofollow\">fuzzer</a> or other vulnerability framework such as <a href=\"http://www.metasploit.com\" rel=\"nofollow\">metasploit</a>, <a href=\"https://github.com/sqlmapproject/sqlmap\" rel=\"nofollow\">sqlMap</a> etc. to help test for problems that the vendor may not have looked for.\nPRO: This can prove to be a sure fire method of ensuring to an acceptable level whether or not the module/software you are implementing is safe for public access.\nCON: This also becomes time consuming and costly. The other problem will stem from false positives as well as uneducated review of the results where a problem resides but is not noticed.</p></li>\n</ol>\n\n<p>Really security, and application security in general can be very time consuming and resource intensive. One thing managers will always use is a formula to determine the cost effectiveness (manpower, resources, time, pay etc) of performing the above two options.</p>\n\n<p>Anyways, I realize this is not a 'yes' or 'no' answer that may have been hoping for but I don't think anyone can give that to you until they perform an analysis of the software in question.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Is it possible to prevent SQL injections in Node.js (preferably with a module) in the same way that PHP had Prepared Statements that protected against them.</p>\n\n<p>If so, how? If not, <strong>what are some examples</strong> that might bypass the code I've provided (see below).</p>\n\n<hr>\n\n<p>Some Context:</p>\n\n<p>I'm making a web application with a back-end stack consisting of Node.js + MySql using the <a href=\"https://github.com/felixge/node-mysql\">node-mysql</a> module. From a usability perspective, the module is great, but it has not yet implemented something akin to PHP's <a href=\"http://php.net/manual/en/pdo.prepared-statements.php\">Prepared Statements</a> (though I'm aware it is on the <a href=\"https://github.com/felixge/node-mysql#todo\">todo</a>).</p>\n\n<p>From my understanding, PHP's implementation of prepared statements, among other things, <a href=\"http://stackoverflow.com/questions/5741187/sql-injection-that-gets-around-mysql-real-escape-string/12118602#12118602\">helped greatly</a> in the prevention of SQL injections. I'm worried, though, that my node.js app may be open to similar attacks, <a href=\"https://github.com/felixge/node-mysql#escaping-query-values\">even with the string escaping provided by default</a> (as in the code snippet below).</p>\n\n<p>node-mysql seems to be the most popular mysql connector for node.js, so I was wondering what other people might be doing (if anything) to account for this issue - or if it is even an issue with node.js to begin with (not sure how this wouldn't be, since user/client-side input is involved).</p>\n\n<p><strong>Should I switch to <a href=\"https://github.com/sidorares/nodejs-mysql-native\">node-mysql-native</a> for the time being, since it does provide prepared statements?</strong> I'm hesitant to do this, because it does not seem to be as active as node-mysql (though that may just mean that it is complete).</p>\n\n<p>Here is a snippet of user registration code, which uses the <a href=\"https://github.com/theSmaw/Caja-HTML-Sanitizer\">sanitizer</a> module, along with node-mysql's prepared statement-like syntax (which, as I mentioned above, does character escaping), to prevent cross site scripting and sql injections, respectively:</p>\n\n<pre><code>// Prevent xss\nvar clean_user = sanitizer.sanitize(username);\n\n// assume password is hashed already\nvar post = {Username: clean_user, Password: hash};\n\n// This just uses connection.escape() underneath\nvar query = connection.query('INSERT INTO users SET ?', post,\n   function(err, results)\n   {\n       // Can a Sql injection happen here?\n   });\n</code></pre>\n",
            "last_activity_date": 1387028061,
            "question_id": 15778572,
            "score": 11,
            "tags": [
                "javascript",
                "mysql",
                "node.js",
                "sql-injection",
                "node-mysql"
            ],
            "title": "Preventing SQL injection in Node.js"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The reason they are saying:</p>\n\n<blockquote>\n  <p>Note: The <code>$(\"&gt; elem\", context)</code> selector will be deprecated in a future release. Its usage is thus discouraged in lieu of using alternative selectors.</p>\n</blockquote>\n\n<p>Is due to the comma followed by the context in the selector. E.g. <code>$(\"&gt; elem\")</code> is fine however, <code>$(\"&gt; elem\", context)</code> will be deprecated. </p>\n\n<p><strong><code>$(\"&gt; elem\", context)</code> is the same as <code>$(context + \"&gt; elem\")</code>.</strong></p>\n\n<p>A correct way of obtaining children and grandchildren is</p>\n\n<pre><code>$(\"elem\").children('.child').children('.grandchild');\n</code></pre>\n\n<p>or</p>\n\n<pre><code>context.children('.child').children('.grandchild');\n</code></pre>\n\n<p>or</p>\n\n<pre><code>context.find('&gt; .child &gt; .grandchild');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>In the <a href=\"http://api.jquery.com/child-selector/\">jQuery documentation for the child selector</a> I saw this note:</p>\n\n<blockquote>\n  <p>Note: The <code>$(\"&gt; elem\", context)</code> selector will be deprecated in a future release. Its usage is thus discouraged in lieu of using alternative selectors.</p>\n</blockquote>\n\n<p>I use this pattern all the time, usually like this:</p>\n\n<pre><code>$nodes.find('&gt; children[something=morecomplicated] &gt; somethingelse');\n</code></pre>\n\n<p>However, I don't understand what the \"alternative selectors\" they refer to could be. <strong>What is the right way to write a selector which traverses the immediate children of a context node?</strong>  As a bonus, can anyone explain <em>why</em> this is depreciated? All the alternatives everyone is giving seem amazingly <em>ugly</em>.</p>\n\n<p>Here are some things that <em>don't</em> work:</p>\n\n<pre><code>// does not guarantee that '.child' is an immediate child\n$nodes.find('.child &gt; .grandchild');\n\n// this will return empty array in recent jQuery\n// and will return full list of children in older jQuery\n$nodes.children('.child &gt; .grandchild');\n\n// Anything like this which forces you to split up the selector.\n// This is ugly and inconsistent with usual selector ease-of-use,\n// and is a non-trivial conversion for long or complex selectors.\n$nodes.children('.child').children('.grandchild');\n// After all, no one would ever recommend\n$nodes.find('.this').children('.that');\n// instead of\n$nodes.find('.this &gt; .that');\n</code></pre>\n",
            "last_activity_date": 1423249656,
            "question_id": 8406642,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors"
            ],
            "title": "What is the new proper way to use a child selector with a context node in jQuery?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Use the <code>touchmove</code> event instead (works on my Android browser on Froyo), although there are some problems with it -- the browser only updates the div when the touch has been released, however the event is still fired for every touch movement. This can be demonstrated by changing the code to this:</p>\n\n<blockquote>\n<pre><code>var x = 0;\n$('html').bind('touchmove', function(e) {\n    $('#status').html(x++); // Only updates on touch release\n});\n</code></pre>\n</blockquote>\n\n<p>This is due to a <a href=\"http://uihacker.blogspot.com/2011/01/android-touchmove-event-bug.html\">bug in the Android browser</a> -- you need to call <code>event.preventDefault()</code> to make this work as expected:</p>\n\n<blockquote>\n<pre><code>var x = 0;\n$('html').bind('touchmove', function(e) {\n    e.preventDefault();\n    $('#status').html(x++); // Only updates on touch release\n});\n</code></pre>\n</blockquote>\n\n<p>Official bug details: <a href=\"http://code.google.com/p/android/issues/detail?id=5491\">available here</a></p>\n\n<p>To detect the current X and Y position you should use the <code>event.touches</code> object:</p>\n\n<pre><code>$(window).bind('touchmove', function(jQueryEvent) {\n   jQueryEvent.preventDefault();\n   var event = window.event;\n   $('#status').html('x='+event.touches[0].pageX + '  y= ' + event.touches[0].pageY);\n});\n</code></pre>\n\n<p>jQuery creates it's own \"version\" of the event object which doesn't have the native browsers properties such as <code>.touches</code> -- so you need use <code>window.event</code> instead</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>After reading the accepted answer, perhaps the best way to deal with on-going events for both touch and mouse is something like this?</p>\n\n<pre><code>&lt;div id=\"status\"&gt;x, y&lt;/div&gt;\n&lt;script&gt;\n    $('html').on(\"mousemove touchmove\", function(e){\n        $('#status').html(e.pageX +', '+ e.pageY);\n        e.preventDefault();\n    });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>using this code:</p>\n\n<pre><code>&lt;h2 id=\"status\"&gt;\n0, 0\n&lt;/h2&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n   $('html').mousemove(function(e){\n      $('#status').html(e.pageX +', '+ e.pageY);\n   }); \n&lt;/script&gt;\n</code></pre>\n\n<p>In Windows browser like firefox, It's ok to see the mouse postion when I move mouse, but when I run this page in android(2.1) browser, I can not get the continuous event when I touch the screen, It just trigger the event when I tap the screen, why? and how to get the continuous mousemove event when I touch the screen?   </p>\n",
            "last_activity_date": 1370560510,
            "question_id": 6316503,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "android"
            ],
            "title": "How to get continuous mousemove event when using android mobile browser?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The main reason is <strong>external files</strong> that are included in the head. When you include a file in your <code>&lt;head&gt;</code> it gets run immediately. This means if the JavaScript interacts with the DOM it needs to be wrapped in Dom Ready.</p>\n\n<p>It's also needed for unobtrusive JavaScript and separations of concerns. Ideally your JavaScript and HTML are in separate files. If you follow this you will not have any in-line script tags in your HTML at all.</p>\n\n<p>The second is to defend yourself against obscure browser bugs when you make mistakes. There are cases where it's not save to go and manipulate DOM elements immediately afterwards. (I'm looking at you IE6!)</p>\n\n<p>The third reason is to keep your code clean.</p>\n\n<p>Mixing script tags into your HTML makes spaghetti code.</p>\n\n<pre><code>some HTML\n&lt;script&gt; ... &lt;/script&gt;\n\nsome HTML\n&lt;script&gt; ... &lt;/script&gt;\n\nsome HTML\n&lt;script&gt; ... &lt;/script&gt;\n\nsome HTML\n&lt;script&gt; ... &lt;/script&gt;\n\nsome HTML\n&lt;script&gt; ... &lt;/script&gt;\n\nsome HTML\n&lt;script&gt; ... &lt;/script&gt;\n\nsome HTML\n&lt;script&gt; ... &lt;/script&gt;\n</code></pre>\n\n<p>We have code about ten times worse then that. It's a right pain to read / maintain</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Everything inside it will load as soon as the DOM is loaded and before the page contents are loaded.</p>\n\n<p>The $(document).ready() function has a ton of advantages over other ways of getting events to work. First of all, you don't have to put any \"behavioral\" markup in the HTML</p>\n\n<p>With $(document).ready(), you can get your events to load or fire or whatever you want them to do before the window loads. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You should use jQuery's .ready() only when you are initialising stuff. However, putting your javascript at the bottom of the body element would abolish the need for .ready(), too. As long as you don't cramp code into your .ready().</p>\n\n<p><strong>EDIT:</strong> (read what redsquare said)\nSimilar answer here:\n<a href=\"http://stackoverflow.com/questions/5887971/what-should-be-in-and-what-should-be-out-of-a-jquery-ready/5888064#5888064\">What should be in and what should be out of a jQuery.ready() ?</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In the case of external scripts $(document).ready() could be the only option. As for inline script it is a little different.</p>\n\n<p>According to HTML 4.01 standard it seems a little ambiguous whether or not the initialization technique shown above is legal:</p>\n\n<blockquote>\n  <p><a href=\"http://www.w3.org/TR/html401/interact/scripts.html#h-18.2.4\" rel=\"nofollow\">http://www.w3.org/TR/html401/interact/scripts.html#h-18.2.4</a></p>\n  \n  <p>Scripts that are executed when a document is loaded may be able to\n  modify the document's contents\n  dynamically. The ability to do so\n  depends on the scripting language\n  itself (e.g., the \"document.write\"\n  statement in the HTML object model\n  supported by some vendors). </p>\n  \n  <p>HTML documents are constrained to conform to the HTML DTD both before\n  and after processing any SCRIPT\n  elements.</p>\n</blockquote>\n\n<p>In the HTML 5 draft it seems very clear that this practice is fully supported:</p>\n\n<blockquote>\n  <p><a href=\"http://www.w3.org/TR/html5/scripting-1.html#scripting-1\" rel=\"nofollow\">http://www.w3.org/TR/html5/scripting-1.html#scripting-1</a></p>\n  \n  <p>The following sample shows how a\n  script element can be used to define a\n  function that is then used by other\n  parts of the document. It also shows\n  how a script element can be used to\n  invoke script while the document is\n  being parsed, in this case to\n  initialize the form's output.</p>\n</blockquote>\n\n<pre><code>&lt;script&gt;\n function calculate(form) {\n   var price = 52000;\n   if (form.elements.brakes.checked)\n     price += 1000;\n   if (form.elements.radio.checked)\n     price += 2500;\n   if (form.elements.turbo.checked)\n     price += 5000;\n   if (form.elements.sticker.checked)\n     price += 250;\n   form.elements.result.value = price;\n }\n&lt;/script&gt;\n&lt;form name=\"pricecalc\" onsubmit=\"return false\"&gt;\n &lt;fieldset&gt;\n  &lt;legend&gt;Work out the price of your car&lt;/legend&gt;\n  &lt;p&gt;Base cost: \u00a352000.&lt;/p&gt;\n  &lt;p&gt;Select additional options:&lt;/p&gt;\n  &lt;ul onchange=\"calculate(form)\"&gt;\n   &lt;li&gt;&lt;label&gt;&lt;input type=checkbox name=brakes&gt; Ceramic brakes (\u00a31000)&lt;/label&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;label&gt;&lt;input type=checkbox name=radio&gt; Satellite radio (\u00a32500)&lt;/label&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;label&gt;&lt;input type=checkbox name=turbo&gt; Turbo charger (\u00a35000)&lt;/label&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;label&gt;&lt;input type=checkbox name=sticker&gt; \"XZ\" sticker (\u00a3250)&lt;/label&gt;&lt;/li&gt;\n  &lt;/ul&gt;\n  &lt;p&gt;Total: \u00a3&lt;output name=result&gt;&lt;/output&gt;&lt;/p&gt;\n &lt;/fieldset&gt;\n &lt;script&gt;\n  calculate(document.forms.pricecalc);\n &lt;/script&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>I'm curious what situations exactly require the use of jquery's $(document).ready() or prototype's dom:loaded or any other variant of a handler for this event.</p>\n\n<p>In all the browsers i've tested, it's entirely acceptable to begin interacting with html elements and the DOM immediately after the closing tag. (e.g.</p>\n\n<pre><code>&lt;div id=\"myID\"&gt;\n My Div\n&lt;/div&gt;\n&lt;script type=\"text/javascript\"&gt;\n$('#myID').initializeElement();\n&lt;/script&gt;\n</code></pre>\n\n<p>So at this point i'm wondering whether <code>$(document).ready()</code> is merely there to reduce the thinking involved in writing javascript code that runs during page load. In the case of using <code>$(document).ready()</code> there is regularly rendering issues such as popping and 'artifacts' between the browser first starting to draw the page and the javascript actually executing when the page is 'ready'.</p>\n\n<p>Are there any scenarios where <code>$(document).ready()</code> is required?</p>\n\n<p>Are there any reasons I shouldn't be writing initialization scripts as demonstrated?</p>\n",
            "last_activity_date": 1371203758,
            "question_id": 6005789,
            "score": 11,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "when do you need to use $(document).ready()?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Well, firstly, for anyone who wants to use such an effect, there are loads of jQuery plugins. Here are just a few:</p>\n\n<ol>\n<li><a href=\"http://www.dynamicdrive.com/dynamicindex4/powerzoomer.htm\" rel=\"nofollow\">Power Zoomer</a> </li>\n<li><a href=\"http://www.dynamicdrive.com/dynamicindex4/featuredzoomer.htm\" rel=\"nofollow\">Featured Image\nZoomer</a></li>\n<li><a href=\"http://www.professorcloud.com/mainsite/cloud-zoom.htm\" rel=\"nofollow\">Cloud Zoom</a></li>\n</ol>\n\n<p>Secondly, it's quite easy to achieve. Just load the full-size image, but give it a <code>width</code> smaller than it's actual width, so it is scaled by CSS. Then, use JavaScript+CSS to create a Div (the magnifying glass) with the same image as background, but change the <code>background-position</code> property to the corresponding scaled <code>x,y</code> coordinate that the user's mouse is currently on.</p>\n\n<p>There are other ways of doing it I suppose, and Google might be doing it differently, but this is the most obvious way for me that comes to mind.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I don't know how Google does it, since the logo is no longer showing in my area; but this effect can be achieved by clipping the enlarged animated GIF over the regular image using canvas. Alternatively, it is also possible to create create a circular clipping using CSS border-radius (commonly used to implement rounded corners). </p>\n\n<p>EDIT: I've hacked this up together to show the basic technique that you need if you used CSS border-radius: <a href=\"http://jsfiddle.net/yjBuS/\" rel=\"nofollow\">http://jsfiddle.net/yjBuS/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Looks like they're using two images, one for the logo and one for the zoom (the zoomed one is actually sliced, to run the animations separately...?)  They probably detect if the mouse is over the normal logo, then show the yellow circle and attach it to the mouse position.  Then  showing the other image, shifting it opposite of the mouse.  Or something similar.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Looking at their source code, it seems they are using rather basic techniques to achieve this.</p>\n\n<p>Ignoring all the embedded nifty animated gif's, there are basically two images - large, and small of the entire scene. The larger image is repeated thrice in the document. Look at the annotated image below to get a better idea of how the zoom works.\n<img src=\"http://i.stack.imgur.com/Z711M.jpg\" alt=\"annotated zoom\"></p>\n\n<p>The portion inside the magnifying circle is split up in three div's - top, mid, and bottom. The overflow for each div should be hidden. Each div is relatively positioned inside the zoom circle. On mouse move, change the absolute position of the zoom circle to the mouse coordinates. Their example also uses CSS3 for the scaling and adding some animation delays.</p>\n\n<p>Here's a sorta minimal reconstructed <a href=\"http://jsfiddle.net/anurag/5cRg5/\">example</a>.</p>\n\n<p>Another <a href=\"http://jsfiddle.net/anurag/vtEWx/\">example</a> where we don't hide the div overflow to reveal the entire thing as a square.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>There is a full example of magnifying any sort of HTML, including HTML5 at <a href=\"http://www.aplweb.co.uk/blog/js/magnifying-glass/\" rel=\"nofollow\">http://www.aplweb.co.uk/blog/js/magnifying-glass/</a>. Works cross-browser too - although rounded corners are a bit iffy on most browsers - so you are going to have to use a box rather than circle.</p>\n\n<p>Here is how to works:</p>\n\n<ol>\n<li>Duplicate the content you want to zoom</li>\n<li>Place the duplicated content into another element and set the visible width/height and overflow hidden</li>\n<li>Use JavaScript to move the duplicated content so that it moves by the zoom amount * mouse movement. Also move the visible div by the mouse movement.</li>\n</ol>\n\n<p>That is pretty much it too it. There are lots of little things to look out for though to make it work on all browsers.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Visit <a href=\"http://codeblab.com/glass/\" rel=\"nofollow\">http://codeblab.com/glass/</a> for an real life example and in depth explanation of this technique. Flash and CSS v3 have ample functionality to construct a round magnifying glass.\nHowever, <code>simulate-a-circle-with-overlapping-rectangles</code> works on (many) more platforms. </p>\n\n<p>(DISCLOSURE: codeblab.com is my personal hobby blog with some weak links to my work in The Netherlands.) </p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Google has the <em>coolest</em> effects - once it was a Pac-man game, today is apparently the 160th anniversary of the first World Fair, and Google's logo has an image of it. They <em>also</em> turn the mouse into a magnifying glass that can sweep over the picture (the gold ring).\n<img src=\"http://i.stack.imgur.com/bzmJz.jpg\" alt=\"enter image description here\"></p>\n\n<p>I'm wondering how they do that. It's obviously Javascript, and I looked at the page source, but it's not especially readable (no surprise).</p>\n",
            "last_activity_date": 1423835157,
            "question_id": 5849438,
            "score": 11,
            "tags": [
                "javascript",
                "html",
                "google-doodle"
            ],
            "title": "How to simulate magnifying glass on Web-page image (Javascript)?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You are loading css-files from another domain, I guess that you are not allowed to modify cssRules for externally loaded css files.</p>\n\n<p>see this: <a href=\"http://stackoverflow.com/questions/3211536/accessing-cross-domain-stylesheet-with-cssrules\">Accessing Cross Domain Stylesheet with .cssRules</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try with condition: (IE workaround)</p>\n\n<pre><code>function aftermath(index) {\n    var css = document.styleSheets[index].rules || document.styleSheets[index].cssRules;\n    alert(css.length);\n}\n</code></pre>\n\n<p>This is giving the error:</p>\n\n<pre><code>aftermath(document.styleSheets.length - 1);\n</code></pre>\n\n<p>If i set it to 0 all work fine...\nThe problem is that the css is not ready at this time, if you need to access \nit, you need to do that in a second moment</p>\n\n<p>Last edit:</p>\n\n<p>If you whant keep css updated from source, you can use a php proxy for loading it:</p>\n\n<pre><code>&lt;?php\n$name = 'http://ajax.googleapis.com/ajax/libs/jqueryui/$_GET[version]/themes/$_GET[theme]/jquery-ui.css';\n$fp = fopen($name, 'rb');\nfpassthru($fp);\nexit;\n?&gt;\n</code></pre>\n\n<p>Then you can get it using e.g. <code>/proxy.php?version=1.7.0&amp;theme=humanity</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can get that error when trying to read a stylesheet loaded from a different domain or server, or trying to read an  @import  rule.</p>\n\n<p>For your purpose, just check the  document.styleSheets.length . </p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>The stylesheet is there and works fine, you just cannot access the <code>cssRules</code> property of the stylesheet because it is set to null by the browser.</p>\n\n<p>The security error you get is due to the same origin policy - you are working on stylesheets from another domain, you will not have this problem if the stylesheets are hosted on the same domain your webpage is.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As of 2013, you can set the \"crossorigin\" attribute on the &lt;link&gt;-Element to signal the browser that this CSS is trusted (<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link</a>).</p>\n\n<p>After that, you can access its rules via Javascript.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Here is the code:</p>\n\n<ul>\n<li><a href=\"http://jsfiddle.net/salman/2hyYg/\">http://jsfiddle.net/salman/2hyYg/</a></li>\n<li><a href=\"http://jsfiddle.net/salman/2hyYg/show/\">http://jsfiddle.net/salman/2hyYg/show/</a></li>\n</ul>\n\n<p>You'll notice the <code>alert(document.styleSheets[x].cssRules.length)</code> fails with a \"security exception\". Any workaround for this. I am asking because there are a couple of \"CSS lazy loading\" classes out there that use this feature to detect if the CSS document is loaded. </p>\n\n<p>Also: is the security exception a correct behavior/does it conform to standards?</p>\n",
            "last_activity_date": 1384153634,
            "question_id": 5323604,
            "score": 11,
            "tags": [
                "javascript",
                "css",
                "firefox",
                "securityexception"
            ],
            "title": "Firefox not able to enumerate document.styleSheets[].cssRules[]"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Why not attach just one handler -- <code>Validate</code> -- and call <code>AutoSave</code> from inside it?</p>\n\n<p>For an answer to your question that isn't also a question, see <a href=\"http://stackoverflow.com/questions/282245/what-is-the-event-precedence-in-javascript/282271#282271\">this post</a> or <a href=\"http://stackoverflow.com/questions/2372798/event-handling-order\">this one</a> or <a href=\"http://stackoverflow.com/questions/2706109/are-event-handlers-in-javascript-called-in-order\">this one</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Normally you'd have the Save event handler call Validate() which will return true if everything is fine and ready to be saved.</p>\n\n<pre><code>function onSaved() {\n  if (!validate()) {\n    // set class\n    return;\n  }\n\n  // do the save\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Already answered - but just to add this piece of knowledge, the order of event handlers can not be relied upon. It may in any given implementation be predictable, but this can change from one (Javascript) implementation to the next and/or over time. The only thing certain is that they all will be executed - but not in what order.</p>\n\n<p>Note that the situation is similar when there is an event handler for a DOM object and another  one for the same event for a child or parent - which of those is executed first is not always clear as well. See <a href=\"http://www.quirksmode.org/js/events_order.html\" rel=\"nofollow\">http://www.quirksmode.org/js/events_order.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you use JQuery to bind your events, it guarantees that handlers are fired in the same order that they were bound. Otherwise the order is officially undefined.</p>\n\n<p>If you cannot use JQuery or a similar framework you can easily simulate this by using your own custom even binding, where your generic handler is a function which keeps an array of functions and calls them in order.</p>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>I have an input field, which has too event handlers bound to it.</p>\n\n<p>Validate &amp; AutoSave</p>\n\n<p>Obviously I want to validate before I save. If validation fails, the \"invalid\" class is added to the input and autosave will check for that class before it proceeds.  </p>\n\n<p>This works well enough, but is there a way to guarantee Validate runs before Autosave in all cases?</p>\n",
            "last_activity_date": 1298907126,
            "question_id": 5143817,
            "score": 11,
            "tags": [
                "javascript"
            ],
            "title": "Javascript event handler order"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The type attribute isn't a \"made-up\" element, it's defined here:</p>\n\n<p><a href=\"http://www.w3.org/TR/REC-html40/interact/forms.html#h-17.4\" rel=\"nofollow\">http://www.w3.org/TR/REC-html40/interact/forms.html#h-17.4</a></p>\n\n<p>...and browsers only \"know\" about the @type values defined there (unless they are HTML5 aware -- which has defined some new values like \"date\", \"email\" etc)</p>\n\n<p>When you query the type attribute some browsers return \"text\" to you because if a browser doesn't support the \"date\" type  (or anything it doesn't understand) then it falls back to the default value -- which is type=\"text\"</p>\n\n<p>Have you thought of adding a classname (class=\"date\") to the inputs as well then you can just $('.date').each() and then do you detection on that set</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You cannot get type=\"date\" in a browser that doesn't support this. If a browser detects a type-attribute it doesn't understand it overrides it with the type=\"text\" (default).</p>\n\n<p>A way around this (using jQuery) is simply to add the class date as well.</p>\n\n<p>Then you can do something like</p>\n\n<pre><code>$('input.date').each(function() {\n    var $this = $(this);\n    if($this.attr('type') != 'date') $this.datepicker();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>First of all, <strong>stop using <code>alert</code> to do your debugging!</strong> Grab a copy of Firebug and FireQuery and use those with <code>console.log()</code> instead. Even if you're working with <code>alert()</code>, you really should be using <code>$(\"input[type='date']\").length</code> to find the if the selector returned anything - <code>object [object]</code> isn't telling you anything useful here. </p>\n\n<hr>\n\n<p>A far superior method for detecting supported input types is to simply create an input element and loop through all of the different input types available and check if the <code>type</code> change sticks: </p>\n\n<pre><code>var supported = {date: false, number: false, time: false, month: false, week: false},\n    tester = document.createElement('input');\n\nfor(var i in supported){\n    tester.type = i;\n    if(tester.type === i){\n        supported[i] = true;\n    }\n}\n</code></pre>\n\n<p>This actually makes use of the fact that browsers which do not support that particular input type will fall back to using text, thereby allowing you to test if they're supported or not. </p>\n\n<p>You can then use <code>supported['week']</code>, for instance, to check for the availability of the <code>week</code> input type, and do your fallbacks through this. See a simple demo of this here: <a href=\"http://www.jsfiddle.net/yijiang/r5Wsa/2/\">http://www.jsfiddle.net/yijiang/r5Wsa/2/</a>. You might also consider using <a href=\"http://www.modernizr.com/\">Modernizr</a> for more robust HTML5 feature detection. </p>\n\n<hr>\n\n<p>And finally, a better way to get <code>outerHTML</code> is to, believe it or not, use <code>outerHTML</code>. Instead of </p>\n\n<pre><code>var inputAttr = $('&lt;div&gt;').append($(this).clone()).remove().html().toLowerCase();\n</code></pre>\n\n<p>Why not just use: </p>\n\n<pre><code>var inputAttr = this.outerHTML || new XMLSerializer().serializeToString(this);\n</code></pre>\n\n<p>(Yes, as you can see, there is a caveat - <code>outerHTML</code> isn't supported by Firefox, so we're going to need a simple workaround, from <a href=\"http://stackoverflow.com/questions/1700870/how-do-i-do-outerhtml-in-firefox\">this Stack Overflow question</a>). </p>\n\n<hr>\n\n<p><strong>Edit:</strong> Found a method to do testing for native form UI support, from this page: <a href=\"http://miketaylr.com/code/html5-forms-ui-support.html\">http://miketaylr.com/code/html5-forms-ui-support.html</a>. Browsers that support the UI for these types in some way <em>should</em> also prevent invalid values from been entered into these fields, so the logical extension to the test we're doing above would be this: </p>\n\n<pre><code>var supported = {date: false, number: false, time: false, month: false, week: false},\n    tester = document.createElement('input');\n\nfor(var i in supported){\n    tester.type = i;\n    tester.value = ':(';\n\n    if(tester.type === i &amp;&amp; tester.value === ''){\n        supported[i] = true;\n    }\n}\n</code></pre>\n\n<p>Again, not 100% reliable - this is only good for types that have certain restrictions on their values, and definitely not very good, but it's a step in the right direction, and certainly would solve your problem now. </p>\n\n<p><strong>See the updated demo here: <a href=\"http://www.jsfiddle.net/yijiang/r5Wsa/3/\">http://www.jsfiddle.net/yijiang/r5Wsa/3/</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p><strong>I would argue this is a bug in JQuery!</strong>  If you look at the attr() function in the JQuery code itself, JQuery first trys to get a value for the name you passed in using bracket notation.  If it is not undefined, then it returns that value.   If it is undefined, then it usess the getAttribute() method instead.   </p>\n\n<p>Jquery does something similar to this for $(\"#elem\").attr(name):</p>\n\n<pre><code> if (elem[ name ] !== undefined)\n {\n    return elem[name];\n }\n else\n {\n    return elem.getAttribute( name )\n }\n</code></pre>\n\n<p><strong>The problem is Jquery is assuming if elem[name] is not undefined, then elem[name] is correct.</strong>  </p>\n\n<p>Consider the following example:</p>\n\n<pre><code>&lt;input type=\"date\" id=\"myInput\" name=\"myInput\" joel=\"crawford\" /&gt;    \n\nvar myInput = document.getElementById('myInput');\n\nalert(myInput['type']);//returns text    \nalert(myInput.getAttribute('type'));//returns date\nalert($(\"#myInput\").attr('type'));//returns text\n\nalert(myInput['joel']);//returns undefined\nalert(myInput.getAttribute('joel'));//returns crawford\nalert($(\"#myInput\").attr('joel'));//returns crawford\n</code></pre>\n\n<p>When you pass in .attr(\"type\"), myInput['type'] returns \"text\", so Jquery returns \"text\".  If you passed in .attr(\"joel\"), myInput['joel'] returns undefined, so then Jquery uses getAttribute('joel') instead which returns \"crawford\".  </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Asking for the type attribute does not work in all Android stock browsers. They pretend that they support inputType=\"date\", but they do not offer an UI (datepicker e.g.) for date inputs.</p>\n\n<p>This feature detection worked for me:</p>\n\n<pre><code>   (function() {\n        var el = document.createElement('input'),\n            notADateValue = 'not-a-date';\n        el.setAttribute('type','date');\n        el.setAttribute('value', notADateValue);\n        return el.value !== notADateValue;\n    })();\n</code></pre>\n\n<p>The trick is to set an illegal value into a date field. If the browser sanitises this input, it could also offer a datepicker.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><strong>PART A:</strong></p>\n\n<p>I know there are a lot of things out there that tell you if a <strong>browser</strong> supports a certain HTML5 attribute... <em>http://diveintohtml5.ep.io/detect.html</em>  But they don't tell you how to acquire the type from individual elements and use that info to init your plugins.  </p>\n\n<p>So I tried:</p>\n\n<pre><code>alert($(\"input:date\"));\n//returns \"[object Object]\" \n\nalert($(\"input[type='date']\")); \n//returns \"[object Object]\"\n\nalert($(\"input\").attr(\"type\"));\n//returns \"text\" ... which is a lie. it should have been \"date\"\n</code></pre>\n\n<p>None those worked.</p>\n\n<p>I eventually came up with this (that does work):</p>\n\n<pre><code>var inputAttr = $('&lt;div&gt;').append($(this).clone()).remove().html().toLowerCase();\nalert(inputAttr);\n// returns \"&lt;input min=\"-365\" max=\"365\" type=\"date\"&gt;\"\n</code></pre>\n\n<p><em>Thanks: <a href=\"http://jquery-howto.blogspot.com/2009/02/how-to-get-full-html-string-including.html\">http://jquery-howto.blogspot.com/2009/02/how-to-get-full-html-string-including.html</a></em></p>\n\n<p>So my first question:\n1. Why can I not read the \"type\" attribute in browsers that don't support html5?  You can make up any other attribute and bogus value and read it.\n2. Why does my solution work?  Why does it matter if its in the DOM or not?</p>\n\n<p><strong>PART B:</strong></p>\n\n<p>Below is a basic example of what I am using the detector for:       </p>\n\n<pre><code>  &lt;script type=\"text/javascript\" &gt;\n    $(function () {\n    var tM = document.createElement(\"input\");\n    tM.setAttribute(\"type\", \"date\");\n        if (tM.type == \"text\") {\n            alert(\"No date type support on a browser level. Start adding date, week, month, and time fallbacks\");\n        //   Thanks: http://diveintohtml5.ep.io/detect.html\n\n            $(\"input\").each(function () {\n                // If we read the type attribute directly from the DOM (some browsers) will return unknown attributes as text (like the first detection).  Making a clone allows me to read the input as a clone in a variable.  I don't know why.\n                var inputAttr = $('&lt;div&gt;').append($(this).clone()).remove().html().toLowerCase();\n\n                    alert(inputAttr);\n\n                    if ( inputAttr.indexOf( \"month\" ) !== -1 )\n\n                    {\n                        //get HTML5 attributes from element\n                        var tMmindate =  $(this).attr('min');\n                        var tMmaxdate =  $(this).attr('max');\n                        //add datepicker with attributes support and no animation (so we can use -ms-filter gradients for ie)\n                         $(this).datepick({ \n                            renderer: $.datepick.weekOfYearRenderer,\n                            onShow: $.datepick.monthOnly,\n                            minDate: tMmindate, \n                            maxDate: tMmaxdate, \n                            dateFormat: 'yyyy-mm', \n                            showAnim: ''}); \n                    }\n                    else\n                    {\n\n                        $(this).css('border', '5px solid red');\n                        // test for more input types and apply init to them \n                    }\n\n                });         \n            }\n        });\n\n        &lt;/script&gt;\n</code></pre>\n\n<p>Live example:  <a href=\"http://joelcrawfordsmith.com/sandbox/html5-type-detection.html\">http://joelcrawfordsmith.com/sandbox/html5-type-detection.html</a></p>\n\n<p>And a favor/question:\nCan anyone help me cut some fat in my HTML5 input type fixer?  </p>\n\n<p>I have the functionality down (adds fallbacks to IE6-IE8, and FF with out adding classes to init off of)</p>\n\n<p>Are there are more efficient methods for iterating over the DOM for mystery input types? \nAnd should I be using an If Else, or a function, or a case in my example?</p>\n\n<p>Thanks All,</p>\n\n<p>Joel</p>\n",
            "last_activity_date": 1381390030,
            "question_id": 4159838,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "html5",
                "fallback"
            ],
            "title": "HTML5 Type Detection and Plugin Initialization"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Use <code>Date.setHours(hour,min,sec,millisec)</code> to set the hour default to noon:\n<code>Date.setHours(11);</code> (<a href=\"http://www.w3schools.com/jsref/jsref_sethours.asp\" rel=\"nofollow\">view reference</a>)</p>\n\n<p>24 hours after noon on a day is guaranteed to be the next day, though on daylight savings time days it will be one hour off (which doesn't change the result in your script at all).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The best way is not to deal with DST. Use the UTC methods and you won't have to worry about crossing a DST boundary, or any other timezone discontinuity (locale timezone rules can change for more reasons than just DST).</p>\n\n<pre><code>var timestamp= Date.UTC(2010, 10-1, 31, 0, 0, 0); // zero-based month: 9-&gt;october\nvar nextday= new Date(timestamp+86400000); // add one day\nvar ymd= [\n    nextday.getUTCFullYear(),\n    nextday.getUTCMonth()+1, // zero-based month\n    nextday.getUTCDate()\n].join('-');\nalert(ymd); // 2010-11-1\n</code></pre>\n\n<p>If the above had been done with <code>new Date(2010, ...)</code> and <code>getDate()</code> etc, it'd return <code>2010-10-31</code>, the day add failing due to the DST change (in my region, anyway).</p>\n\n<p>It is a pity that the \u2018default\u2019 most-obvious methods in <code>Date</code> are about local time, especially since JavaScript provides so very little context to scripts on what \u2018local time\u2019 actually is. UTC is a more stable proposition.</p>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>In a previous question I wrote about a javascript date function that was mysteriously stopping on 11/07/101.  Thanks to the stackoverflow users I was told my problem is Daylight Savings Time.  <a href=\"http://stackoverflow.com/questions/4109641/javascript-date-is-this-my-error-or-did-i-find-a-bug\">Javascript date, is this my error or did I find a bug?</a></p>\n\n<p>So my last question on this is what is the recommended approach in Javascript to deal with Daylight Savings Time?</p>\n\n<p>Is <a href=\"http://code.google.com/p/datejs/\">http://code.google.com/p/datejs/</a> the best approach to solve this?</p>\n",
            "last_activity_date": 1324228477,
            "question_id": 4110039,
            "score": 11,
            "tags": [
                "javascript",
                "date"
            ],
            "title": "Javascript dates: what is the best way to deal with Daylight Savings Time?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This is destructuring assignment, available in Javascript 1.7 (mozilla) and some newer browsers: <a href=\"http://www.robertnyman.com/javascript/javascript-1.7.html#destructuring-assignment\">http://www.robertnyman.com/javascript/javascript-1.7.html#destructuring-assignment</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>JavaScript currently available in all browsers does not support anything but <code>variable=</code>, and <code>object.property=</code> on the left-hand side of expressions.</p>\n\n<p>Its spec is so horrible I won't link to it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is a feature called <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/New_in_JavaScript/1.7#Destructuring_assignment_%28Merge_into_own_page.2Fsection%29\" rel=\"nofollow\">destructuring assignment</a>, which was added in JavaScript 1.7. It is not a part of ECMAScript 5: <a href=\"http://stackoverflow.com/questions/1330498/what-is-cross-browser-support-for-javascript-1-7s-new-features-specifically-arr\">What is cross browser support for JavaScript 1.7&#39;s new features? Specifically array comprehensions and the &quot;let&quot; statement</a></p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Opera's older \"futhark\" JavaScript engine had support for this, but it was dropped in the new engine \"carakan\", because it was non-standard, not required on the web, and would complicate the new and very fast implementation.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>For a project a developer sent us a .js file with code similar to this:</p>\n\n<pre><code>var myList = [1,2,3];\nvar a,b,c;\n\n[a,b,c] = myList;\n</code></pre>\n\n<p>It works in Opera 10.30, Firefox 3.6.x but it's not ok for Opera 10.60 and Chrome.</p>\n\n<p>It's just curiosity, do you have any reference or link that says this code is compliant to JS/ECMA standard or not? </p>\n\n<p>What do you think?</p>\n",
            "last_activity_date": 1422236809,
            "question_id": 3986348,
            "score": 11,
            "tags": [
                "javascript",
                "google-chrome",
                "standards",
                "opera"
            ],
            "title": "Multiple assignment in javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Here you go:</p>\n\n<pre><code>function detectLeftButton(evt) {\n    evt = evt || window.event;\n    var button = evt.which || evt.button;\n    return button == 1;\n}\n</code></pre>\n\n<p>For much more information about handling mouse events in JavaScript, try <a href=\"http://unixpapa.com/js/mouse.html\">http://unixpapa.com/js/mouse.html</a></p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>There is now a <a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-buttons\" rel=\"nofollow\">W3C standard</a> <code>event.buttons</code> property supported by <a href=\"http://msdn.microsoft.com/en-us/library/ie/ff974878%28v=vs.85%29.aspx\" rel=\"nofollow\">IE9 in standards mode</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/DOM/MouseEvent\" rel=\"nofollow\">Gecko 15+</a>.</p>\n\n<p>The <a href=\"http://www.quirksmode.org/js/events_properties.html#button\" rel=\"nofollow\">W3C completely stuffed</a> up the event.button property, so for a standards compliant browser event.button is 0, but for browsers created before the standard, event.button is 1.</p>\n\n<p>So code <em>must</em> avoid using <code>event.button</code> except for older browsers. The following code should work:</p>\n\n<pre><code>function detectLeftButton(event) {\n    if ('buttons' in event) {\n        return event.buttons === 1;\n    } else if ('which' in event) {\n        return event.which === 1;\n    } else {\n        return event.button === 1;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use the following code-</p>\n\n<pre><code>onmouseup=\"if(window.event.which==1){//code for left click}\n           else if(window.event.which==3){//code for right click}\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I hate this mess with the mouse buttons created by W3C an MS! I want to know if the left mouse button is pressed when I get a mousedown event. </p>\n\n<p>I use this code</p>\n\n<pre><code>// Return true if evt carries left mouse button press\nfunction detectLeftButton(evt) {\n  // W3C\n  if (window.event == null) {\n    return (evt.button == 0)\n  }\n  // IE\n  else {\n    return (evt.button == 1);\n  }\n}\n</code></pre>\n\n<p>However, it does not work in Opera and Chrome, because it so happens that window.event exists there too.</p>\n\n<p>So what do I do? I have some browser detection, but we all know it cannot be relied upon with all the masking some browsers do lately. How do I detect the left mouse button RELIABLY?</p>\n",
            "last_activity_date": 1423767186,
            "question_id": 3944122,
            "score": 11,
            "tags": [
                "javascript",
                "google-chrome",
                "key",
                "opera",
                "mouseevent"
            ],
            "title": "Detect left mouse button press"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>There is no need for the container div.</p>\n\n<p>Have you tried this?:</p>\n\n<pre><code>var foo = $(data);  // data is your full html document string\n</code></pre>\n\n<p>Then you can search inside of it like so:</p>\n\n<pre><code>$('.someClass', foo); // foo is the document you created earlier\n</code></pre>\n\n<p><strong>Update:</strong></p>\n\n<p>As another answered mentioned, how this will act comes down to the browser.</p>\n\n<p>I looked at the <a href=\"http://api.jquery.com/jQuery/\" rel=\"nofollow\">jQuery docs</a> a bit and found this:</p>\n\n<blockquote>\n  <p>When the HTML is more complex than a\n  single tag without attributes, as it\n  is in the above example, the actual\n  creation of the elements is handled by\n  the browser's <code>innerHTML</code> mechanism.\n  Specifically, jQuery creates a new\n  <code>&lt;div&gt;</code> element and sets the <code>innerHTML</code>\n  property of the element to the HTML\n  snippet that was passed in.</p>\n</blockquote>\n\n<p>So it seems that when you are using a whole html doc as a string, it's no different than setting the <code>innerHTML</code> property of a <code>div</code> you make using <code>createElement</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>After a few quick tests it seems do me that this behavior isn't caused by jQuery but instead by the browser.</p>\n\n<p>As you can easily verify yourself (DEMO <a href=\"http://jsbin.com/ocupa3\">http://jsbin.com/ocupa3</a>)</p>\n\n<pre><code>var data = \"&lt;html&gt;&lt;head&gt;&lt;title&gt;Untitled Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;test&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;\";\ndata = $('&lt;div/&gt;').html(data);\nalert(data.html());\n</code></pre>\n\n<p>yields different results in different browsers</p>\n\n<p>Opera 10.10</p>\n\n<pre><code>&lt;HEAD&gt;&lt;TITLE&gt;Untitled Document&lt;/TITLE&gt;&lt;/HEAD&gt;&lt;P&gt;test&lt;/P&gt;\n</code></pre>\n\n<p>FF 3.6</p>\n\n<pre><code>&lt;title&gt;Untitled Document&lt;/title&gt;&lt;p&gt;test&lt;/p&gt;\n</code></pre>\n\n<p>IE6</p>\n\n<pre><code>&lt;P&gt;test&lt;/P&gt;\n</code></pre>\n\n<p>so this has nothing to do with jQuery, It's the browsers which strip some tags when you insert a whole html string inside a div. But you would need to step through the whole jQuery code for <code>html()</code> to be sure. And you would need to do that for all browsers as there are several different ways jQuery tries to do it's job.</p>\n\n<hr>\n\n<p>For a solution I advise you to investigate using an iframe (possibly hidden) and to set that iframe content to the html-string you have. But be aware that fiddling with iframes and changing their content programmatically isn't an easy task either. There are also different browser related quirks and timing issues involved.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Nope, the jQuery <code>html</code> function is just sending the string through to the element's <code>innerHTML</code> property, which is a function of the browser that tells it to parse the HTML into DOM elements and add them to the page.</p>\n\n<p>Your browser doesn't work with a page as HTML data, it works with it as DOM and imports/exports HTML.</p>\n\n<p>JavaScript has very good <a href=\"http://www.javascriptkit.com/javatutors/re.shtml\" rel=\"nofollow\">Regular Expression support</a>. Depending on the complexity of your task, you may find this is the best way to process your data.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is a solution, which will include the body, head and other attributes:\nmydoc = document.getElementById('NAME_OF_PREVIEW_FRAME').contentWindow.document; mydoc.write(HTML_CODE); mydoc.close();</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a var that contains a full html page, including the head, html, body, etc.  When I pass that string into the .html() function, jQuery strips out all those elements, such as body, html, head, etc, which I don't want.</p>\n\n<p>My data var contains:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Untitled Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Then my jQuery is:</p>\n\n<pre><code>// data is a full html document string\ndata = $('&lt;div/&gt;').html(data);\n// jQuery stips my document string!\nalert(data.find('head').html());\n</code></pre>\n\n<p>I am needing to manipulate a full html page string, so that I can return what is in the  element.  I would like to do this with jQuery, but it seems all of the methods, append(), prepend() and html() all try to convert the string to dom elements, which remove all the other parts of a full html page.</p>\n\n<p>Is there another way that I could do this?  I would be fine using another method. My final goal is to find certain elements inside my string, so I figured jQuery would be best, since I am so used to it.  But, if it is going to trim and remove parts of my string, I am going to have to look for another method.</p>\n\n<p>Ideas?</p>\n",
            "last_activity_date": 1355712348,
            "question_id": 2488839,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "string"
            ],
            "title": "Does jQuery strip some html elements from a string when using .html()?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I don't think it's possible; an article about DOM events here:</p>\n\n<p><a href=\"http://www.howtocreate.co.uk/tutorials/javascript/domevents\">http://www.howtocreate.co.uk/tutorials/javascript/domevents</a></p>\n\n<p>...mentions that firing an event doesn't trigger the default result of the user action, for security reasons; the script should not be able to simulate user interaction directly. You will have to simulate the behavior the keypress causes (such as focus on a field), instead of trying to actually simulate a keypress. You probably won't be able to interact with the browser's native autocomplete functionality, unless the browser explicitly provides a means for you to do so.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>May be this kind of code may help you</p>\n\n<pre><code>&lt;textarea  id='test'&gt;&lt;/textarea&gt;\n&lt;script type=\"text/javascript\"&gt;\n\tdocument.getElementById('test').onkeydown = function(e){\n\t\tif (e.keyCode == 9) {\n\t\t\tthis.value = this.value + ' Tab Pressed!'; \n\t\t\tthis.focus();\n\t\t\treturn false;\n\t\t}\n\t}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm trying to simulate an actual tab key press in JavaScript. I don't want to focus on the next element or anything like that, I just want to make it seem like the tab key has been pressed.</p>\n\n<p>The reason why is because I am building a form JavaScript class where I want to be able to use the enter key just like tab. If someone is using a native BROWSER autocomplete, I need to fire the tab key to capture the selected autocomplete response. If I just move to the next input it won't capture their autocomplete selection and leave the field blank.</p>\n\n<p>Any thoughts?</p>\n",
            "last_activity_date": 1256141085,
            "question_id": 1601593,
            "score": 11,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "Fire tab keypress event in JavaScript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Modal dialogs are dialogs that once opened by the parent, do not allow you to focus on the parent until the dialog is closed.</p>\n\n<p>One could use a modal dialog for a login form, edit form, etc where you want to have a popup for user interaction but not allow the user to return to the window that opened the popup.</p>\n\n<p>As a side note, I believe only Internet Explorer implementes <code>window.showModalDialog</code>, so that kind of limits your usage of it.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Note that there's a bug in Chrome 2 which prevents showModalDialog() from loading properly. The popup window appears, but the content never loads.</p>\n\n<p>One more reason to avoid using showModalDialog().</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><code>showModalDialog()</code>works well in Internet Explorer, Firefox (3 and above)\nWorks in Chrome but popup is not model (you can go to parent window)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>showModalDialog()</code> is currently being standardized as part of <strong>HTML5</strong>. The third argument (for additional options) is not present in the HTML5 version, and is (safely) ignored by Safari and Chrome.</p>\n\n<p><a href=\"http://dev.w3.org/html5/spec//user-prompts.html#dialogs-implemented-using-separate-documents\" rel=\"nofollow\">http://dev.w3.org/html5/spec//user-prompts.html#dialogs-implemented-using-separate-documents</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It has been a few years since this question was originally asked and things have changed a bit since then.  <code>window.showModalDialog</code> is now officially <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dialogs-implemented-using-separate-documents\">standardized as part of HTML5</a> and  is supported in IE, Firefox 3+, Chrome (<a href=\"http://code.google.com/p/chromium/issues/detail?id=16045\">albeit buggy</a>), and Safari 5.1+.  </p>\n\n<p>Unfortunately <code>window.showModalDialog</code> is still plagued by a number of issues.</p>\n\n<ul>\n<li>Modal dialogs are blocked as popups by default in Firefox, Chrome, and Safari.</li>\n<li>The modal dialogs in Chrome are buggy and aren't truly modal - see <a href=\"http://code.google.com/p/chromium/issues/detail?id=16045\">http://code.google.com/p/chromium/issues/detail?id=16045</a> &amp; <a href=\"http://code.google.com/p/chromium/issues/detail?id=42939\">http://code.google.com/p/chromium/issues/detail?id=42939</a>.</li>\n<li>All browsers except Chrome block the user from interacting with the entire window (favorites, browser controls, other tabs, etc...) when a modal dialog is up.</li>\n<li>They're a pain to debug because they halt JavaScript execution in the parent window while waiting for the modal dialog to complete.</li>\n<li>No mobile browsers support <code>window.showModalDialog</code>.</li>\n</ul>\n\n<p>Therefore it's still not a good idea to use <code>window.showModalDialog</code>.  If you need the window opened to be modal (i.e. the user cannot interact with the rest of the page until they deal with the dialog) I would suggest using <a href=\"http://jqueryui.com/demos/dialog/\">jQuery UI's dialog plugin</a>.  </p>\n\n<p><code>window.open</code> will work for non modal windows but I would stick with jQuery UI's dialog because opening new windows tends to annoy users.</p>\n\n<p>If you're interested I write about this in more detail on my blog - <a href=\"http://tjvantoll.com/2012/05/02/showmodaldialog-what-it-is-and-why-you-should-never-use-it/\">http://tjvantoll.com/2012/05/02/showmodaldialog-what-it-is-and-why-you-should-never-use-it/</a>.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Note that while you can show modal from any popup window, you cannot use window.open from a model dialog in some browsers (IE, Safari).</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What are situation when you want to use window.showModalDialog function? It seams that you can do exactly the same with window.open function and few parameters that remove some of the chrome (navigation, addressbar, etc...)  </p>\n\n<p>When would you want to use window.showModalDialog and window.open? </p>\n",
            "last_activity_date": 1357222622,
            "question_id": 728196,
            "score": 11,
            "tags": [
                "javascript"
            ],
            "title": "window.showModalDialog vs. window.open"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This isn't a perfect solution, but if you check the Content-Length HTTP header with <code>request.getHeader(\"Content-Length\")</code> then you can choose to not transfer the entire file.</p>\n\n<p>By way of explanation, an extremely large file will not be transferred all at once.  You'd have to actually open a stream representing that chunk of POST data and read from it for the entire thing to be transfered.</p>\n\n<p>On the other hand, if you're worried about denial-of-service attacks, then you can't really trust the Content-Length header, because it can easily be forged.  In this case, you should set a limit and stream a transfer of this file, stopping as soon as you've exceeded that limit.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Suggest you reconsider the Flash decision and take a look at the YUI Uploader, here:</p>\n\n<p><a href=\"http://developer.yahoo.com/yui/uploader/\" rel=\"nofollow\">http://developer.yahoo.com/yui/uploader/</a></p>\n\n<p>Among other things, the fileSelect event will tell you the size of the selected file in bytes immediately after it is selected but before it's uploaded, so you'll be able to restrict accordingly.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>With JSP or PHP you won't be able to restrict the file size because your page won't get the request until the upload has already happened. At that point you can decide not to save the file but that might be too late.</p>\n\n<p>There are some Java solutions out there, e.g. <a href=\"http://www.javaatwork.com/java-upload-applet/demo.html\" rel=\"nofollow\">MyUploader</a> or <a href=\"http://javauploader.com/\" rel=\"nofollow\">Hermes</a>. Some even support multiple file uploads and resuming partial uploads, and some also give you the source code. You can also write your own, but it will need to be a signed applet in order to function because it needs to access the local filesystem. If you're using Apache as your webserver you'll need enough RAM in your machine to fit the whole file size in memory of all files being uploaded at a given time.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a way to validate on the client side browser whether the size of a file being uploaded from a JSP page is over a set size limit without forcing the user to upload the entire file only to find out it was too large?</p>\n\n<p>I would like to stay away from any proprietary controls or techniques like Flash or ActiveX if possible.</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1222876292,
            "question_id": 158149,
            "score": 11,
            "tags": [
                "java",
                "javascript",
                "jsp",
                "file-upload"
            ],
            "title": "How do you restrict the size of a file being uploaded with JavaScript (or Java) without transferring the entire file?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<h2>Same Origin security Policy</h2>\n\n<p>You <strong>can't</strong> access an <code>&lt;iframe&gt;</code> with javascript, it would be a huge security flaw if you could do it. For the <a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy\" rel=\"nofollow\">Same Origin Security Policy</a>, the browser blocks any script trying to access a frame that has another origin. </p>\n\n<p>For example if you are in <code>http://www.example.com</code> and you want to acces an <code>&lt;iframe&gt;</code> with <code>src=\"http://www.anothersite.com\"</code> you will not be able to do that, because the frame has another origin.</p>\n\n<p>Origin is considered different if at least one of the following variables isn't maintained:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&lt;protocol&gt;://&lt;hostname&gt;:&lt;port&gt;/path/to/page.html\n</code></pre>\n\n<p>Protocol, hostname and port must be the same of your domain, if you want to access a frame.</p>\n\n<h2>Workaround</h2>\n\n<p>Even thought Same Origin Policy blocks scripts from manipulating content of sites with a different origin, <strong>if you own both domains/sites, you can work around this problem</strong> using <strong><a href=\"https://developer.mozilla.org/en-US/Add-ons/SDK/Guides/Content_Scripts/using_postMessage\" rel=\"nofollow\"><code>window.postMessage</code></a> and its relative event <code>window.onmessage</code></strong> to send messages between the two pages, like this:</p>\n\n<ul>\n<li><p>In your main page:</p>\n\n<pre><code>var frame = document.getElementById('your-frame-id');\n\nframe.contentWindow.postMessage(/*any variable or object here*/, '*');\n</code></pre></li>\n<li><p>In your <code>&lt;iframe&gt;</code> (contained in the main page):</p>\n\n<pre><code>window.addEventListener('message', function(event) {\n\n    // IMPORTANT: Check the origin of the data!\n    if (~event.origin.indexOf('http://yoursite.com')) {\n        // The data has been sent from your site\n\n        // The data sent with postMessage is stored in event.data\n        console.log(event.data);\n    } else {\n        // The data hasn't been sent from your site!\n        // Be careful! Do not use it.\n        return;\n    }\n});\n</code></pre></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Complementing Marco Bonelli's answer: the best current way of interacting between frames/iframes is using <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.postMessage\" rel=\"nofollow\"><code>window.postMessage</code></a>, <a href=\"http://caniuse.com/#feat=x-doc-messaging\" rel=\"nofollow\">supported by all browsers</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I am loading an iframe in it and truing to access the elements in it using javascript when I try it says :</p>\n\n<p><code>SecurityError: Blocked a frame with origin \"http://www.xxxx.com\" from accessing a cross-origin frame.</code></p>\n\n<p>Can you please help me finding solution so that I can access the elements in that frame?</p>\n\n<p>I am using this code for testing but in vain. </p>\n\n<pre><code> $(document).ready(function() {\n     // get the iframe in my documnet\n     var iframe = document.getElementById(\n         \"mortgageProductContainer\");\n     // get the window associated with that iframe\n     var iWindow = iframe.contentWindow;\n     // wait for the window to load before accessing the content\n     iWindow.addEventListener(\"load\", function() {\n         // get the document from the window\n         var doc = iframe.contentDocument || iframe.contentWindow\n             .document;\n         // find the target in the iframe content\n         var target = doc.getElementById(\"flbField\");\n         target.innerHTML = \"Found It!\";\n     });\n });\n</code></pre>\n",
            "last_activity_date": 1425648757,
            "question_id": 25098021,
            "score": 10,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "SecurityError: Blocked a frame with origin from accessing a cross-origin frame"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The Meteor documentation actually shows a good example of how to do this with the updated observe API. I'm reposting it here but the original documentation is here: <a href=\"http://docs.meteor.com/#meteor_publish\" rel=\"nofollow\">http://docs.meteor.com/#meteor_publish</a>.</p>\n\n<pre><code>Meteor.publish(\"counts-by-room\", function (roomId) {\n  var self = this;\n  var count = 0;\n  var initializing = true;\n  var handle = Messages.find({roomId: roomId}).observeChanges({\n    added: function (id) {\n      count++;\n      if (!initializing)\n        self.changed(\"counts\", roomId, {count: count});\n    },\n    removed: function (id) {\n      count--;\n      self.changed(\"counts\", roomId, {count: count});\n    }\n    // don't care about moved or changed\n  });\n\n  // Observe only returns after the initial added callbacks have\n  // run.  Now return an initial value and mark the subscription\n  // as ready.\n  initializing = false;\n  self.added(\"counts\", roomId, {count: count});\n  self.ready();\n\n  // Stop observing the cursor when client unsubs.\n  // Stopping a subscription automatically takes\n  // care of sending the client any removed messages.\n  self.onStop(function () {\n    handle.stop();\n  });\n});\n\n// client: declare collection to hold count object\nCounts = new Meteor.Collection(\"counts\");\n\n// client: subscribe to the count for the current room\nMeteor.autorun(function () {\n  Meteor.subscribe(\"counts-by-room\", Session.get(\"roomId\"));\n});\n\n// client: use the new collection\nconsole.log(\"Current room has \" +\n            Counts.findOne(Session.get(\"roomId\")).count +\n            \" messages.\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I have following code to publish my counters</p>\n\n<pre><code>Meteor.publishCounter = (params) -&gt;\n  count = 0\n  init = true\n  id = Random.id()\n  pub = params.handle\n  collection = params.collection\n  handle = collection.find(params.filter, params.options).observeChanges\n    added: =&gt;\n      count++\n      pub.changed(params.name, id, {count: count}) unless init\n    removed: =&gt;\n      count--\n      pub.changed(params.name, id, {count: count}) unless init\n  init = false\n  pub.added params.name, id, {count: count}\n  pub.ready()\n  pub.onStop -&gt; handle.stop()\n</code></pre>\n\n<p>and I use it like this:</p>\n\n<pre><code>  Meteor.publish 'bikes-count', (params = {}) -&gt;\n    Meteor.publishCounter\n      handle: this\n      name: 'bikes-count'\n      collection: Bikes\n      filter: params\n</code></pre>\n\n<p>and finally on client:</p>\n\n<pre><code>Meteor.subscribe 'bikes-count'\nBikesCount = new Meteor.collection 'bikes-count'\n\nTemplate.counter.count = -&gt; BikesCount.findOne().count\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I'm doing something like this:</p>\n\n<p><strong>On cliente</strong></p>\n\n<pre><code>Template.postCount.posts = function() {\n    return Posts.find();\n};\n</code></pre>\n\n<p>Then you create a template:</p>\n\n<pre><code>&lt;template name=\"postCount\"&gt;\n  {{posts.count}}\n&lt;/template&gt;\n</code></pre>\n\n<p>Then, whatever you want to show the counter: <em>{{> postCount}}</em></p>\n\n<p>Much easier than any solution i have seen.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"https://atmospherejs.com/tmeasday/publish-counts\" rel=\"nofollow\">tmeasday:publish-counts</a> atmosphere package does the job ;)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there any way to subscribe to a count in meteor.</p>\n\n<p>I want to publish <code>Articles.find().count()</code> rather than publish Articles.find(). Ideally this should assign the count to a reactive Session that would change when the count changes.</p>\n",
            "last_activity_date": 1415046778,
            "question_id": 14656567,
            "score": 10,
            "tags": [
                "javascript",
                "meteor"
            ],
            "title": "Meteor subscribe to a count"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Sounds like you need <a href=\"http://momentjs.com/\">moment.js</a></p>\n\n<p>e.g.</p>\n\n<pre><code>moment().subtract('days', 6).calendar();\n</code></pre>\n\n<p>=> last Sunday at 8:23 PM</p>\n\n<pre><code>moment().startOf('hour').fromNow();\n</code></pre>\n\n<p>=> 26 minutes ago</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>Pure JS date diff calculation:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var date1 = new Date(\"7/Nov/2012 20:30:00\");\r\nvar date2 = new Date(\"20/Nov/2012 19:15:00\");\r\n\r\nvar diff = date2.getTime() - date1.getTime();\r\n\r\nvar days = Math.floor(diff / (1000 * 60 * 60 * 24));\r\ndiff -=  days * (1000 * 60 * 60 * 24);\r\n\r\nvar hours = Math.floor(diff / (1000 * 60 * 60));\r\ndiff -= hours * (1000 * 60 * 60);\r\n\r\nvar mins = Math.floor(diff / (1000 * 60));\r\ndiff -= mins * (1000 * 60);\r\n\r\nvar seconds = Math.floor(diff / (1000));\r\ndiff -= seconds * (1000);\r\n\r\ndocument.write(days + \" days, \" + hours + \" hours, \" + mins + \" minutes, \" + seconds + \" seconds\");</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>If you're not too worried in accuracy after days, you can simply do the maths</p>\n\n<pre><code>function timeSince(when) { // this ignores months\n    var obj = {};\n    obj._milliseconds = (new Date()).valueOf() - when.valueOf();\n    obj.milliseconds = obj._milliseconds % 1000;\n    obj._seconds = (obj._milliseconds - obj.milliseconds) / 1000;\n    obj.seconds = obj._seconds % 60;\n    obj._minutes = (obj._seconds - obj.seconds) / 60;\n    obj.minutes = obj._minutes % 60;\n    obj._hours = (obj._minutes - obj.minutes) / 60;\n    obj.hours = obj._hours % 24;\n    obj._days = (obj._hours - obj.hours) / 24;\n    obj.days = obj._days % 365;\n    // finally\n    obj.years = (obj._days - obj.days) / 365;\n    return obj;\n}\n</code></pre>\n\n<p>then <code>timeSince(pastDate);</code> and use the properties as you like.</p>\n\n<p><strong>Otherwise</strong> you can use <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date#Methods\" rel=\"nofollow\"><code>.getUTC*</code></a> to calculate it, but note it may be slightly slower to calculate</p>\n\n<pre><code>function timeSince(then) {\n    var now = new Date(), obj = {};\n    obj.milliseconds = now.getUTCMilliseconds() - then.getUTCMilliseconds();\n    obj.seconds = now.getUTCSeconds() - then.getUTCSeconds();\n    obj.minutes = now.getUTCMinutes() - then.getUTCMinutes();\n    obj.hours = now.getUTCHours() - then.getUTCHours();\n    obj.days = now.getUTCDate() - then.getUTCDate();\n    obj.months = now.getUTCMonth() - then.getUTCMonth();\n    obj.years = now.getUTCFullYear() - then.getUTCFullYear();\n    // fix negatives\n    if (obj.milliseconds &lt; 0) --obj.seconds, obj.milliseconds = (obj.milliseconds + 1000) % 1000;\n    if (obj.seconds &lt; 0) --obj.minutes, obj.seconds = (obj.seconds + 60) % 60;\n    if (obj.minutes &lt; 0) --obj.hours, obj.minutes = (obj.minutes + 60) % 60;\n    if (obj.hours &lt; 0) --obj.days, obj.hours = (obj.hours + 24) % 24;\n    if (obj.days &lt; 0) { // months have different lengths\n        --obj.months;\n        now.setUTCMonth(now.getUTCMonth() + 1);\n        now.setUTCDate(0);\n        obj.days = (obj.days + now.getUTCDate()) % now.getUTCDate();\n    }\n    if (obj.months &lt; 0)  --obj.years, obj.months = (obj.months + 12) % 12;\n    return obj;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Moment.js provides such functionality:</p>\n\n<p><a href=\"http://momentjs.com/\" rel=\"nofollow\">http://momentjs.com/</a></p>\n\n<p>It's well documented and nice library.</p>\n\n<p>It should go along the lines \"Duration\" and \"Humanize of API <a href=\"http://momentjs.com/docs/#/displaying/from/\" rel=\"nofollow\">http://momentjs.com/docs/#/displaying/from/</a></p>\n\n<pre><code> var d1, d2; // Timepoints\n var differenceInPlainText = moment(a).from(moment(b), true); // Add true for suffixless text\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Using Date.js already, but can also use another library if necessary.</p>\n\n<p>Not sure what is the best way to work with time deltas. Specifically, I want to display the time that has elapsed between now and a past date-time.</p>\n\n<p>So I need to do something like this:</p>\n\n<pre><code>var elapsed_time = new Date() - pastDate;\npastDate.toString('days-hours-minutes-seconds');\n</code></pre>\n\n<p>Gotten it to mostly work using Date.js, but the problem is now I'm working with a Date object and not a timespan, so what should be an 23 hour time span is instead 23 hours after the Date's very first time:</p>\n\n<pre>\nvar result = (new Date()) - past_date;\n\"result\" is the number (probably milliseconds): 15452732\n</pre>\n\n<pre>\nvar result = (new Date() - past_date\n\"result\" is a date from 1969: Wed Dec 31 1969 23:17:32\n</pre>\n\n<p>What I need is:</p>\n\n<pre>\n0 days 23 hours 17 minutes and 32 seconds\n</pre>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1423248003,
            "question_id": 14297625,
            "score": 10,
            "tags": [
                "javascript",
                "date",
                "datetime",
                "timespan",
                "datejs"
            ],
            "title": "Work with a time span in Javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>this.optional</code> is intended to be used in general purpose validation methods, which might be used with required or optional elements. It allows them to skip all their own checks if the field is not filled in. If the field is optional, the method returns successfully immediately;  if it's required, the method returns failure immediately.</p>\n\n<p>By using this, the method can assume that the value is non-empty, which can simplify the rest of its coding.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>OK... so in your examples, the field is never blank in either form.  Either it has a placeholder value, or an attempt at an email address.  The whole point of <code>this.optional(element)</code> is to immediately return true if the element is blank AND it is not required.</p>\n\n<p>So if you had these two methods:</p>\n\n<pre><code>jQuery.validator.addMethod(\"BOB\", function (value, element) {\n    return this.optional(element) || \n        element.value === 'BOB';\n}, 'You did not enter BOB');\n\njQuery.validator.addMethod(\"mustbeBOB\", function (value, element) {\n    return element.value === 'BOB';\n}, 'You did not enter BOB');\n</code></pre>\n\n<p>Adding a class of <code>BOB required</code> would be the same as entering a class of <code>mustbeBOB</code>.  Compare that to having a class of <code>BOB</code> which would allow for a blank or \"BOB\", vs a class of <code>mustbeBOB</code> which will only pass validation with a value of <code>BOB</code>, blank would fail.  Does that make more sense?</p>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>Please see the documentation:<br>\n<a href=\"http://docs.jquery.com/Plugins/Validation/Validator/addMethod\">http://docs.jquery.com/Plugins/Validation/Validator/addMethod</a>  </p>\n\n<p>I wonder what <code>this.optional(element)</code> does. I created two forms to test:<br>\n<a href=\"http://dl.dropbox.com/u/4017788/Labs/form1.html\">Form1</a> and <a href=\"http://dl.dropbox.com/u/4017788/Labs/form2.html\">Form2</a> -- one with <code>this.optional(element)</code> and the other without it. Theoretically speaking and according to <a href=\"http://stackoverflow.com/questions/12753640/jquery-creditcard-validator-extend\">Andrew Whitaker</a>: </p>\n\n<blockquote>\n  <p>all <code>this.optional</code> does is say \"if the field is optional, return true\n  if it is blank\"</p>\n</blockquote>\n\n<p>or  </p>\n\n<blockquote>\n  <p>The <code>this.optional</code> check is basically checking to see if the field is\n  blank or not before evaluating whether or not it meets the rule.</p>\n</blockquote>\n\n<p>But in action I see no difference in how <a href=\"http://dl.dropbox.com/u/4017788/Labs/form1.html\">Form1</a> and <a href=\"http://dl.dropbox.com/u/4017788/Labs/form2.html\">Form2</a> work. Please help me understand the difference in action.</p>\n",
            "last_activity_date": 1351288948,
            "question_id": 13093971,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "forms",
                "validation"
            ],
            "title": "What does this.optional(element) do when adding a jQuery validation method?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>a = 1\nb = -a\nconsole.log(b)\n\noutput\n-1\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The <code>+</code> operator doesn't change the sign of the value, and the <code>-</code> operator does change the sign. The outcome of both operators depend on the sign of the original value, neither operator makes the value positive or negative regardless of the original sign.</p>\n\n<pre><code>var a = 4;\na = -a; // -4\na = +a; // -4\n</code></pre>\n\n<p>The <code>abs</code> function does what you think that the <code>+</code> opreator does; it makes the value positive regardless of the original sign.</p>\n\n<pre><code>var a =-4;\na = Math.abs(a); // 4\n</code></pre>\n\n<p>Doing <code>+a</code> is practically the same as doing <code>a * 1</code>; it converts the value in <code>a</code> to a number if needed, but after that it doesn't change the value.</p>\n\n<pre><code>var a = \"5\";\na = +a; // 5\n</code></pre>\n\n<p>The <code>+</code> operator is used sometimes to convert string to numbers, but you have the <code>parseInt</code> and <code>parseFloat</code> functions for doing the conversion in a more specific way.</p>\n\n<pre><code>var a = \"5\";\na = parseInt(a, 10); //5\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>One example is that they can be used to convert a string to a number, </p>\n\n<pre><code>var threeStr = '3.0'\nvar three = +threeStr\nconsole.log(threeStr + 3) // '3.03'\nconsole.log(three + 3) //6\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try this</p>\n\n<pre><code>false == 0 // returns true\n</code></pre>\n\n<p>So, </p>\n\n<pre><code>a = false\n\na = +a //a * 1\n\nconsole.log(a) // prints 0 as expected\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>'+' operator in a  variable 'a' simply means : a</p>\n\n<p>'-' operator in a  variable 'a' simply means : -a</p>\n\n<pre><code>Since, in above example \na=-10;\na= +a; // means a, ie, +(-10) which is -10\n\nbut,\na= -a;  // means -a, ie, -(-10) which is +10\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would like to explain this from basic mathematical point:<br>\nThe multiplying rules:  </p>\n\n<pre><code>Positive x Positive = Positive: 3 x 2 = 6  \nNegative x Negative = Positive: (-2) x (-8) = 16   \nNegative x Positive = Negative: (-3) x 4 = -12  \nPositive x Negative = Negative: 3 x (-4) = -12  \n</code></pre>\n\n<p>Considering you example:</p>\n\n<pre><code>a = -10;\na = +a\ndocument.writeln(a);\n</code></pre>\n\n<p>+a = +(-10) = Positive x Negative = Negative = -10</p>\n\n<pre><code>a = false;\na = +a;\ndocument.writeln(a);\n</code></pre>\n\n<p>false == 0, +a = +(+0) = Positive * Positive = Positive = 0 (maybe use true is a better example)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>+a means a*1\nand \n-a means a*(-1)</p>\n\n<p>Thats it!!!!!!</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm trying to understand unary operators in javascript, I found this guide here <a href=\"http://wiki.answers.com/Q/What_are_unary_operators_in_javascript\">http://wiki.answers.com/Q/What_are_unary_operators_in_javascript</a> most of it makes sense but what I don't understand is how the following examples would be used in an actual code example:</p>\n\n<pre><code>+a;\n-a;\n</code></pre>\n\n<p>To my understanding the <strong>+a;</strong> is meant to make the variable the positive value of a and the <strong>-a;</strong> is meant to make the variable the negative value of a. I've tried a number of examples like:</p>\n\n<pre><code>a = -10;\na = +a;\ndocument.writeln(a);\n</code></pre>\n\n<p><strong>And the output is still -10;</strong></p>\n\n<p>I've also tried:</p>\n\n<pre><code>a = false;\na = +a;\ndocument.writeln(a);\n</code></pre>\n\n<p><strong>And the output is 0;</strong></p>\n\n<p>What is a practical code example of these unary operators?</p>\n",
            "last_activity_date": 1345892269,
            "question_id": 12120802,
            "score": 10,
            "tags": [
                "javascript",
                "unary-operator"
            ],
            "title": "Explain +var and -var unary operator in javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><strong>EDIT</strong></p>\n\n<p><strong>Parent window HTML</strong></p>\n\n<pre><code>&lt;script language=\"JavaScript\" type=\"text/javascript\"&gt;\nfunction openPopUP() {\n  window.open('mywindow.html','NewWin',\n            'toolbar=no,status=no,width=350,height=135')\n}\n&lt;/script&gt;\n\n&lt;body onLoad=\"openPopUP();\"&gt;\nor\n&lt;a href=\"javascript:openPopUP();\"&gt;Click to open popup&lt;/a&gt;\n</code></pre>\n\n<p><strong>Child Winow i.e PopUp Window File</strong></p>\n\n<p>put the script in child window child window ill be get hide after 1 second if you wnat more time than change <code>1000</code> to <code>5000</code> or more </p>\n\n<pre><code>&lt;body onLoad=\"setTimeout('window.blur()', 1000);\" \n          onFocus=\"setTimeout('window.blur()', 1000);\"&gt;\n</code></pre>\n\n<hr>\n\n<p>Try out this might work for you , write this line of code in the onload event of your child window...</p>\n\n<pre><code>window.parent.opener.focus(); \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<pre><code>popunder = window.open('http://www.google.com','newwindow','width=200, height=200', \"_blank\");\npopunder.blur();\nwindow.focus();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Try something like this.</p>\n\n<pre><code>window.open(url); \nself.focus();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Although it causes security issues, but I guess one of the way to do it is : </p>\n\n<pre><code>popup = window.open('http://www.google.com', 'newwindow',  \"_blank\");\npopup.blur();\n</code></pre>\n\n<p>This will work only in IE. For other browsers you need to set the security level to minimum.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>popunder = window.open('your_site_url','newwindow','width=500, height=500', \"_blank\");\npopunder.blur();\nwindow.focus();\n</code></pre>\n\n<p>or simply </p>\n\n<pre><code>window.open(url); self.focus();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you want real popunder capabilities there is a great jQuery plugin to handle it at <a href=\"https://github.com/hpbuniat/jquery-popunder\" rel=\"nofollow\">https://github.com/hpbuniat/jquery-popunder</a></p>\n\n<p>It uses a combination of various techniques to accomplish it across various browsers. Not all browsers can handle it the same but the results are very similar.</p>\n\n<p>Current browser compatibility is listed as </p>\n\n<ul>\n<li>Mozilla Firefox 3-30</li>\n<li>Google Chrome 10-35</li>\n<li>Microsoft Internet Explorer 6-11 -- MSIE 6-8 requires jquery 1.x</li>\n<li>Apple Safari 5</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to open a window on click, but I want to open it behind the current window, or when the new window opens it should minimize itself. I have made a function but it actually did not work.</p>\n\n<pre><code>&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n&lt;title&gt;Untitled Document&lt;/title&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction wn(){\n  var mm=window.open('http://www.google.com','newwindow','width=200, height=200', \"_blank\");\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;a href=\"#\" onclick=\"wn()\"&gt;click&lt;/a&gt;\n&lt;/body&gt;\n</code></pre>\n",
            "last_activity_date": 1405623450,
            "question_id": 11407153,
            "score": 10,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Open a window behind the current window using Javascript/jQuery"
        }
    ]
}
