{
    "items": [
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Perhaps you're looking <a href=\"http://docs.jquery.com/Effects/hide#speedcallback\" rel=\"nofollow\">for something like this</a> or a <a href=\"http://docs.jquery.com/Effects/fadeOut#speedcallback\" rel=\"nofollow\">straight fade like this</a>.  There are <a href=\"http://docs.jquery.com/Effects\" rel=\"nofollow\">a few effects to choose from</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Your question is a little vague as a \"cool looking success message\" is not much to go with. </p>\n\n<p>If you are interested, however, through answering questions here I have replicated the functionality of two of Stackoverflow's \"notification\" features that people seem to enjoy: the banner at the top of the page that comes up when you get a new badge, etc. and the red boxes around the site whenever something goes wrong with an action. I've used techniques similar to these to show success messages in my applications and my clients have loved them.</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/659199/how-to-show-popup-message-like-in-stackoverflow/659243#659243\">To show the top banners</a> - <a href=\"http://jsbin.com/owuje\">demo</a></li>\n<li><a href=\"http://stackoverflow.com/questions/758906/how-would-i-implement-stackoverflows-hovering-dialogs/759062#759062\">To show the red boxes</a> - <a href=\"http://jsbin.com/oqale\">demo</a></li>\n</ul>\n\n<p>The examples are very simple, as all it is doing is showing a DIV somewhere in the document and fading it in and out depending on the situation. That's all you really need to get started.</p>\n\n<p>In addition to this, if you are a Mac fan (and even if you're not) there is the <a href=\"http://plugins.jquery.com/project/Growl\">jQuery Growl</a> plugin which is based on the OS X notification system. I am also a big fan of using the <a href=\"http://www.lullabot.com/files/bt/bt-latest/DEMO/index.html\">BeautyTips</a> plugin to show messages near an element, as the bubbles are very nice and easy to style.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>This should work:</p>\n\n<pre><code>function showSnazzySuccessMessage(text)\n{\n    if($(\"#successMessage\").length &lt; 1)\n    {\n        //If the message div doesn't exist, create it\n        $(\"body\").append(\"&lt;div id='successMessage' style='text-align:center;vertical-align:middle;width:400px;position:absolute;top:200px;left:300px;border:2px solid black;background:green;margin:20px;display:none'&gt;\" + text + \"&lt;/div&gt;\");\n    }\n    else\n    {\n        //Else, update the text\n        $(\"#successMessage\").html(text);\n    }\n    //Fade message in\n    $(\"#successMessage\").show('slow');\n    //Fade message out in 5 seconds\n    setTimeout('$(\"#successMessage\").hide(\"slow\")',5000);\n}\n</code></pre>\n\n<p>You'll have to play with the style to get it to look the way you want, but you get the idea.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just throw in a new absolutely positioned div and use the fadeOut-function to animate it's opacity with a slow animation.</p>\n\n<p>Something like this:</p>\n\n<pre><code>var newDiv = $('div').css({position: 'absolute', left: '100px', top: '100px'}).text('SUCCESS!!!').appendTo($('body'));\nnewDiv.fadeOut(5000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I really like <a href=\"http://stanlemon.net/pages/jgrowl\" rel=\"nofollow\">jGrowl</a>. It's very unobtrusive as the messages appear in the left corner and the user can continue to do whatever he's doing, but he does get feedback from the system. And it also looks very fancy :).</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a form which is a simple CRUD. </p>\n\n<p>I am trying to display a cool looking success message when user enters or deletes a record.  I've seen this a lot around the web.</p>\n\n<p>I am very new to jquery. does anyone know any examples that would show how to do this?</p>\n\n<p>Basically a div that would slowly dim out. </p>\n",
            "last_activity_date": 1352529920,
            "question_id": 770038,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Best ways to display notifications with jQuery"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I think you're asking a lot to get a complete solution for this, but it seemed interesting so I've implemented it. The following works in recent WebKit browsers, including Safari on iPhone running OS 3.0. It uses the non-standard but convenient <code>intersectsNode</code> method of <code>Range</code>, which exists in WebKit but was removed from Firefox in 3.0, so it doesn't work in recent versions of Firefox but could be made to do so trivially.</p>\n\n<p>The following will surround each selected text node with a <code>&lt;span&gt;</code> element with a class of \"someclass\" and also a unique class to allow easy undoing. <code>applyClassToSelection</code> returns this unique class; pass this class into <code>removeSpansWithClass</code> to remove the spans.</p>\n\n<p><strong>UPDATE:</strong> Fixed problem when selection is entirely contained within a single text node</p>\n\n<p><strong>UPDATE 2:</strong> Now tested and works in iPhone running OS 3.0.</p>\n\n<p><strong>UPDATE 3:</strong> Added <code>rangeIntersectsNode</code> function to add support for Firefox 3.0 and later. This code should now work in Firefox 1.0+, Safari 3.1+, Google Chrome, Opera 9.6+ and possibly others (untested so far). <strong>It does not work at all in Internet Explorer and will give errors in that browser.</strong> I plan to work on an IE version soon.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var nextId = 0;\n\n    var rangeIntersectsNode = (typeof window.Range != \"undefined\"\n            &amp;&amp; Range.prototype.intersectsNode) ?\n\n        function(range, node) {\n            return range.intersectsNode(node);\n        } :\n\n        function(range, node) {\n            var nodeRange = node.ownerDocument.createRange();\n            try {\n                nodeRange.selectNode(node);\n            } catch (e) {\n                nodeRange.selectNodeContents(node);\n            }\n\n            return range.compareBoundaryPoints(Range.END_TO_START, nodeRange) == -1 &amp;&amp;\n                range.compareBoundaryPoints(Range.START_TO_END, nodeRange) == 1;\n        };\n\n    function applyClassToSelection(cssClass) {\n        var uniqueCssClass = \"selection_\" + (++nextId);\n        var sel = window.getSelection();\n        if (sel.rangeCount &lt; 1) {\n            return;\n        }\n        var range = sel.getRangeAt(0);\n        var startNode = range.startContainer, endNode = range.endContainer;\n\n        // Split the start and end container text nodes, if necessary\n        if (endNode.nodeType == 3) {\n            endNode.splitText(range.endOffset);\n            range.setEnd(endNode, endNode.length);\n        }\n\n        if (startNode.nodeType == 3) {\n            startNode = startNode.splitText(range.startOffset);\n            range.setStart(startNode, 0);\n        }\n\n        // Create an array of all the text nodes in the selection\n        // using a TreeWalker\n        var containerElement = range.commonAncestorContainer;\n        if (containerElement.nodeType != 1) {\n            containerElement = containerElement.parentNode;\n        }\n\n        var treeWalker = document.createTreeWalker(\n            containerElement,\n            NodeFilter.SHOW_TEXT,\n            // Note that Range.intersectsNode is non-standard but\n            // implemented in WebKit\n            function(node) {\n                return rangeIntersectsNode(range, node) ?\n                    NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_REJECT;\n            },\n            false\n        );\n\n        var selectedTextNodes = [];\n        while (treeWalker.nextNode()) {\n            selectedTextNodes.push(treeWalker.currentNode);\n        }\n\n        var textNode, span;\n\n        // Place each text node within range inside a &lt;span&gt;\n        // element with the desired class\n        for (var i = 0, len = selectedTextNodes.length; i &lt; len; ++i) {\n            textNode = selectedTextNodes[i];\n            span = document.createElement(\"span\");\n            span.className = cssClass + \" \" + uniqueCssClass;\n            textNode.parentNode.insertBefore(span, textNode);\n            span.appendChild(textNode);\n        }\n\n        return uniqueCssClass;\n    }\n\n    function removeSpansWithClass(cssClass) {\n        var spans = document.body.getElementsByClassName(cssClass),\n            span, parentNode;\n\n        // Convert spans to an array to prevent live updating of\n        // the list as we remove the spans\n        spans = Array.prototype.slice.call(spans, 0);\n\n        for (var i = 0, len = spans.length; i &lt; len; ++i) {\n            span = spans[i];\n            parentNode = span.parentNode;\n            parentNode.insertBefore(span.firstChild, span);\n            parentNode.removeChild(span);\n\n            // Glue any adjacent text nodes back together\n            parentNode.normalize();\n        }\n    }\n\n    var c;\n&lt;/script&gt;\n\n&lt;input type=\"button\" onclick=\"c = applyClassToSelection('someclass')\"\n    value=\"Add class\"&gt;\n&lt;input type=\"button\" onclick=\"removeSpansWithClass(c)\"\n    value=\"Remove class\"&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>I am displaying some simple styled text as html in a UIWebView on iPhone.  It is basically a series of paragraphs with the occasional strong or emphasized phrase.  At runtime I need to apply styles to ranges of text.</p>\n\n<p>There are a few similar scenarios, one of which is highlighting search results.  If the user has searched for \"something\" I would like to change the background color behind occurrences of the word, then later restore the original background.</p>\n\n<p>Is it possible to apply styles to ranges of text using javascript?  A key part of this is also being able to unset the styles.</p>\n\n<p>There seem to be two likely paths to follow.  One would be modifying some html in Objective-C and passing it through javascript as the new innerHTML of some container.  The other would be to use javascript to directly manipulate DOM nodes.</p>\n\n<p>I could manipulate html, but that sounds tedious in Objective-C so I would rather manipulate the DOM if that is a reasonable approach.  I am not that familiar with javascript and DOM so I do not know if it is a reasonable approach.</p>\n\n<p>I wrote some routines to translate between text ranges and node ranges with offsets.  So if I start with text range 100-200 and that starts in one paragraph and ends in a third, I can get the text nodes and the offsets within the nodes that represent the given text range.  I just need a way to split a text node at an offset in the text.  Currently I just apply styles to the paragraphs containing the text range.</p>\n\n<p>A few notes:</p>\n\n<ul>\n<li>straight javascript please, no external frameworks like jquery.</li>\n<li>the changes never need to be written to disk.</li>\n<li>the changes should be undoable or at least removable.</li>\n<li>the styles to apply already exist in a css file.</li>\n<li>it needs to work in iPhone 3.0 and forward.</li>\n<li>all the source files are shipped with the app.</li>\n<li>please be verbose.</li>\n</ul>\n\n<p>Thanks for any suggestions.</p>\n",
            "last_activity_date": 1284033800,
            "question_id": 2887101,
            "score": 7,
            "tags": [
                "javascript",
                "iphone",
                "html",
                "css",
                "uiwebview"
            ],
            "title": "apply style to range of text with javascript in uiwebview"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction load(){\n  window.document.designMode = \"On\";\n  //run this in a button, will highlight selected text\n  window.document.execCommand(\"hiliteColor\", false, \"#000\");\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body contentEditable=\"true\" onload=\"load()\"&gt;\n  this is text\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Well, you can do it using DOM manipulation. This works in Firefox:</p>\n\n<pre><code>var selection = window.getSelection();\nvar range = selection.getRangeAt(0);\nvar newNode = document.createElement(\"span\");\nnewNode.setAttribute(\"style\", \"background-color: pink;\");\nrange.surroundContents(newNode);\n</code></pre>\n\n<p>Seems to work in the current version of Safari as well. See https://developer.mozilla.org/en/DOM/range.surroundContents and <a href=\"http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113/ranges.html\">http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113/ranges.html</a> </p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This answer is probably a few years too late for you, but I faced a similar problem and wanted to document it here, since it is the first hit on google.</p>\n\n<p>To reiterate, the <strong>problem</strong> is that you would like to just capture the Range object from the User Selection and surround it with a styled div, like so:</p>\n\n<pre><code>function highlightSelection() {\n    var userSelection = window.getSelection().getRangeAt(0);\n    highlightRange(userSelection);\n\n}\n\nfunction highlightRange(range) {\n    var newNode = document.createElement(\"div\");\n    newNode.setAttribute(\n       \"style\",\n       \"background-color: yellow; display: inline;\"\n    );\n    range.surroundContents(newNode);\n}\n</code></pre>\n\n<p>But as Original Parent states, this is unsafe. It will work if the selection does not cross element boundaries, but it will throw a DOM eror if the Range created by the User Selection is an unsafe range which crosses the boundaries of HTML tags.</p>\n\n<hr>\n\n<p><strong>The solution</strong> is to produce an array of smaller Range objects, none of which individually crosses an element barrier, but which collectively cover the Range selected by the user. Each of these safe Ranges can be highlighted as above.</p>\n\n<pre><code>function getSafeRanges(dangerous) {\n    var a = dangerous.commonAncestorContainer;\n    // Starts -- Work inward from the start, selecting the largest safe range\n    var s = new Array(0), rs = new Array(0);\n    if (dangerous.startContainer != a)\n        for(var i = dangerous.startContainer; i != a; i = i.parentNode)\n            s.push(i)\n    ;\n    if (0 &lt; s.length) for(var i = 0; i &lt; s.length; i++) {\n        var xs = document.createRange();\n        if (i) {\n            xs.setStartAfter(s[i-1]);\n            xs.setEndAfter(s[i].lastChild);\n        }\n        else {\n            xs.setStart(s[i], dangerous.startOffset);\n            xs.setEndAfter(\n                (s[i].nodeType == Node.TEXT_NODE)\n                ? s[i] : s[i].lastChild\n            );\n        }\n        rs.push(xs);\n    }\n\n    // Ends -- basically the same code reversed\n    var e = new Array(0), re = new Array(0);\n    if (dangerous.endContainer != a)\n        for(var i = dangerous.endContainer; i != a; i = i.parentNode)\n            e.push(i)\n    ;\n    if (0 &lt; e.length) for(var i = 0; i &lt; e.length; i++) {\n        var xe = document.createRange();\n        if (i) {\n            xe.setStartBefore(e[i].firstChild);\n            xe.setEndBefore(e[i-1]);\n        }\n        else {\n            xe.setStartBefore(\n                (e[i].nodeType == Node.TEXT_NODE)\n                ? e[i] : e[i].firstChild\n            );\n            xe.setEnd(e[i], dangerous.endOffset);\n        }\n        re.unshift(xe);\n    }\n\n    // Middle -- the uncaptured middle\n    if ((0 &lt; s.length) &amp;&amp; (0 &lt; e.length)) {\n        var xm = document.createRange();\n        xm.setStartAfter(s[s.length - 1]);\n        xm.setEndBefore(e[e.length - 1]);\n    }\n    else {\n        return [dangerous];\n    }\n\n    // Concat\n    rs.push(xm);\n    response = rs.concat(re);    \n\n    // Send to Console\n    return response;\n}\n</code></pre>\n\n<p>It is then possible to (appear to) highlight the User Selection, with this modified code:</p>\n\n<pre><code>function highlightSelection() {\n    var userSelection = window.getSelection().getRangeAt(0);\n    var safeRanges = getSafeRanges(userSelection);\n    for (var i = 0; i &lt; safeRanges.length; i++) {\n        highlightRange(safeRanges[i]);\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>Note that you'' probably need some fancier CSS to make the many disparate elements a user could look nice together. I hope that eventually this helps some other weary soul on the internet!</p>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>I'm trying to find a way with javascript to highlight the text the user selects when they click some odd highlight button (as in &lt;span style=\"background-color:yellow\"&gt;highlighted text&lt;/span&gt;). It only has to work with either WebKit or Firefox, but it seems to be well nigh impossible because it has to work in the following cases:</p>\n\n<pre><code>&lt;p&gt;this is text&lt;/p&gt;\n&lt;p&gt;I eat food&lt;/p&gt;\n</code></pre>\n\n<p>When the user selects from \"is text\" through \"I eat\" in the browser (can't just put a span there).</p>\n\n<p>and this case:</p>\n\n<pre><code>&lt;span&gt;&lt;span&gt;this is text&lt;/span&gt;middle text&lt;span&gt;this is text&lt;/span&gt;&lt;/span&gt;\n</code></pre>\n\n<p>When the user selects from \"is text\" to \"this is\" in the browser (even though you can wrap your highlight spans around each element in the selection, I'd like to see you try to get that middle text highlighted).</p>\n\n<p>This problem doesn't seem to be solved anywhere, frankly I doubt it's possible.</p>\n\n<p>It would be possible if you could get the Range that you get from the selection as a string complete with html which could be parsed and then replaced, but as far as I can tell you can't get the raw html of a Range.. pity.</p>\n",
            "last_activity_date": 1350067212,
            "question_id": 304837,
            "score": 7,
            "tags": [
                "javascript",
                "highlight"
            ],
            "title": "javascript user selection highlighting"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>This does exactly what you want:</p>\n\n<pre><code>var x = [ 'p0', 'p1', 'p2' ];\ncall_me.apply(this, x);\n</code></pre>\n\n<p>Read <a href=\"https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Objects/Function/Apply\">more about <code>apply</code> here</a></p>\n",
                    "is_accepted": true,
                    "score": 115
                },
                {
                    "body": "<p>Why dont you pass the entire array and process it as needed inside the function?</p>\n\n<p>Like so:</p>\n\n<pre><code>var x = [ 'p0', 'p1', 'p2' ]; \ncall_me(x)\nfunction call_me(params){\n  for(i=0;i&lt;params.length;i++){\n    alert(params[i])\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Assuming that call_me is a global function, so you don't expect this to be set.</p>\n\n<pre><code>var x = ['p0', 'p1', 'p2'];\ncall_me.apply(null, x);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>As @KaptajnKold had answered</p>\n\n<pre><code>var x = [ 'p0', 'p1', 'p2' ];\ncall_me.apply(this, x);\n</code></pre>\n\n<p>And you don't need to define every parameters for call_me function either.\nYou can just use <code>arguments</code></p>\n\n<pre><code>function call_me () {\n    // arguments is a array consisting of params.\n    // arguments[0] == 'p0',\n    // arguments[1] == 'p1',\n    // arguments[2] == 'p2'\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Note this</p>\n\n<pre><code>function FollowMouse()\n{\n    var len = arguments.length;\n    if(len == 0) return;\n    //\n    for(var i=0; i&lt; len; i++)\n    {\n        arguments[i].style.top = event.clientY+\"px\";\n        arguments[i].style.left = event.clientX+\"px\";\n    }\n\n};\n</code></pre>\n\n<p>//---------------------------</p>\n\n<p>html page</p>\n\n<pre><code>&lt;body onmousemove=\"FollowMouse(d1,d2,d3)\"&gt;\n\n&lt;p&gt;&lt;div id=\"d1\" style=\"position: absolute;\"&gt;Follow1&lt;/div&gt;&lt;/p&gt;\n&lt;div id=\"d2\" style=\"position: absolute;\"&gt;&lt;p&gt;Follow2&lt;/p&gt;&lt;/div&gt;\n&lt;div id=\"d3\" style=\"position: absolute;\"&gt;&lt;p&gt;Follow3&lt;/p&gt;&lt;/div&gt;\n\n\n&lt;/body&gt;\n</code></pre>\n\n<p>can call function with any Args</p>\n\n<pre><code>&lt;body onmousemove=\"FollowMouse(d1,d2)\"&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;body onmousemove=\"FollowMouse(d1)\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>i'd like to call a function using an array as a parameters:</p>\n\n<pre><code>var x = [ 'p0', 'p1', 'p2' ];\ncall_me ( x[0], x[1], x[2] ); // i don't like it\n\nfunction call_me (param0, param1, param2 ) {\n    // ...\n}\n</code></pre>\n\n<p>Is there a better way of passing the contents of x into call_me()?</p>\n\n<p>Ps. I can't change the signature of call_me(), nor the way x is defined.</p>\n\n<p>Thanks in advance</p>\n",
            "last_activity_date": 1425110592,
            "question_id": 2856059,
            "score": 67,
            "tags": [
                "javascript",
                "arrays",
                "function",
                "call"
            ],
            "title": "Passing an array as a function parameter in JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can use <code>console.log()</code> in Firebug or Chrome to get a good object view here, like this:</p>\n\n<pre><code>$.getJSON('my.json', function(data) {\n  console.log(data);\n});\n</code></pre>\n\n<p>If you just want to <em>view</em> the string, look at the <a href=\"http://sites.google.com/a/chromium.org/dev/devtools/google-chrome-developer-tools-tutorial#resources\">Resource view in Chrome</a> or the <a href=\"http://getfirebug.com/network\">Net view in Firebug</a> to see the actual string response from the server (no need to convert it...you received it this way).</p>\n\n<p>If you want to take that string and break it down for easy viewing, there's an excellent tool here: <a href=\"http://json.parser.online.fr/\">http://json.parser.online.fr/</a></p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Yes, <code>JSON.stringify</code>, can be found <a href=\"https://github.com/douglascrockford/JSON-js\">here</a>, it's <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/JSON/stringify\">included</a> in Firefox 3.5.4 and above.</p>\n\n<p><em>A JSON stringifier goes in the opposite direction, converting JavaScript data structures into JSON text. JSON does not support cyclic data structures, so be careful to not give cyclical structures to the JSON stringifier.</em> <a href=\"http://www.json.org/js.html\">http://www.json.org/js.html</a></p>\n\n<pre><code>var myJSONText = JSON.stringify(myObject, replacer);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 93
                },
                {
                    "body": "<p>i personally use the <a href=\"http://plugins.jquery.com/project/Dump\">jquery dump plugin</a> alot to dump objects, its a bit similar to php's print_r() function\nBasic usage:</p>\n\n<pre><code>var obj = {\n            hubba: \"Some string...\",\n            bubba: 12.5,\n            dubba: [\"One\", \"Two\", \"Three\"]\n        }\n$(\"#dump\").append($.dump(obj));\n/* will return:\nObject { \n     hubba: \"Some string...\"\n     bubba: 12.5\n     dubba: Array ( \n          0 =&gt; \"One\"\n          1 =&gt; \"Two\"\n          2 =&gt; \"Three\"\n     )\n}\n*/\n</code></pre>\n\n<p>Its very human readable, i also recommend this site <a href=\"http://json.parser.online.fr/\">http://json.parser.online.fr/</a> for creating/parsing/reading json, because it has nice colors</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Here is the code I use.  You should be able to adapt it to your needs.</p>\n\n<pre><code>function process_test_json() {\n  var jsonDataArr = { \"Errors\":[],\"Success\":true,\"Data\":{\"step0\":{\"collectionNameStr\":\"dei_ideas_org_Private\",\"url_root\":\"http:\\/\\/192.168.1.128:8500\\/dei-ideas_org\\/\",\"collectionPathStr\":\"C:\\\\ColdFusion8\\\\wwwroot\\\\dei-ideas_org\\\\wwwrootchapter0-2\\\\verity_collections\\\\\",\"writeVerityLastFileNameStr\":\"C:\\\\ColdFusion8\\\\wwwroot\\\\dei-ideas_org\\\\wwwroot\\\\chapter0-2\\\\VerityLastFileName.txt\",\"doneFlag\":false,\"state_dbrec\":{},\"errorMsgStr\":\"\",\"fileroot\":\"C:\\\\ColdFusion8\\\\wwwroot\\\\dei-ideas_org\\\\wwwroot\"}}};\n\n  var htmlStr= \"&lt;h3 class='recurse_title'&gt;[jsonDataArr] struct is&lt;/h3&gt; \" + recurse( jsonDataArr );\n  alert( htmlStr );\n  $( document.createElement('div') ).attr( \"class\", \"main_div\").html( htmlStr ).appendTo('div#out');\n  $(\"div#outAsHtml\").text( $(\"div#out\").html() ); \n}\nfunction recurse( data ) {\n  var htmlRetStr = \"&lt;ul class='recurseObj' &gt;\"; \n  for (var key in data) {\n        if (typeof(data[key])== 'object' &amp;&amp; data[key] != null) {\n            htmlRetStr += \"&lt;li class='keyObj' &gt;&lt;strong&gt;\" + key + \":&lt;/strong&gt;&lt;ul class='recurseSubObj' &gt;\";\n            htmlRetStr += recurse( data[key] );\n            htmlRetStr += '&lt;/ul  &gt;&lt;/li   &gt;';\n        } else {\n            htmlRetStr += (\"&lt;li class='keyStr' &gt;&lt;strong&gt;\" + key + ': &lt;/strong&gt;&amp;quot;' + data[key] + '&amp;quot;&lt;/li  &gt;' );\n        }\n  };\n  htmlRetStr += '&lt;/ul &gt;';    \n  return( htmlRetStr );\n}\n\n&lt;/script&gt;\n&lt;/head&gt;&lt;body&gt;\n&lt;button onclick=\"process_test_json()\" &gt;Run process_test_json()&lt;/button&gt;\n&lt;div id=\"out\"&gt;&lt;/div&gt;\n&lt;div id=\"outAsHtml\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>something along this?</p>\n\n<pre><code>function dump(x, indent) {\n    var indent = indent || '';\n    var s = '';\n    if (Array.isArray(x)) {\n        s += '[';\n        for (var i=0; i&lt;x.length; i++) {\n            s += dump(x[i], indent)\n            if (i &lt; x.length-1) s += ', ';\n        }\n        s +=']';\n    } else if (x === null) {\n      s = 'NULL';\n    } else switch(typeof x) {\n        case 'undefined':\n            s += 'UNDEFINED';\n            break;\n        case 'object':\n            s += \"{ \";\n            var first = true;\n            for (var p in x) {\n                if (!first) s += indent + '  ';\n                s += p + ': ';\n                s += dump(x[p], indent + '  ');\n                s += \"\\n\"\n                first = false;\n            }\n            s += '}';\n            break;\n        case 'boolean':\n            s += (x) ? 'TRUE' : 'FALSE';\n            break;\n        case 'number':\n            s += x;\n            break;\n        case 'string':\n            s += '\"' + x + '\"';\n            break;\n        case 'function':\n            s += '&lt;FUNCTION&gt;';\n            break;\n        default:\n            s += x;\n            break;\n    }\n    return s;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a quick function to convert json objects received via <code>jQuery getJSON</code> to a string variable dump (for tracing/debugging purposes)?</p>\n",
            "last_activity_date": 1363380675,
            "question_id": 3334341,
            "score": 59,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "variables",
                "dump"
            ],
            "title": "jQuery /Javascript - json to string variable dump"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>To pass JSLint's criteria, it needs to be written like this:</p>\n\n<p><code>}(jQuery));</code></p>\n\n<p>Though I think that particular criteria is a bit subjective. Both ways seem fine in my opinion.</p>\n\n<p><code>(function () {})()</code> makes a bit more sense to me since you wrap the full function, then call it</p>\n\n<p><code>(function () {}())</code> looks like you're wrapping the result of the function call in a parens ...</p>\n",
                    "is_accepted": true,
                    "score": 87
                }
            ],
            "body": "<p>What does <strong>JSLint</strong> mean by this error and how should it be rewritten?</p>\n\n<p><code>Error: Problem at line 78 character 3: Move the invocation into the parens that contain the function: \n    })(jQuery);\n</code></p>\n",
            "last_activity_date": 1410211564,
            "question_id": 4979252,
            "score": 56,
            "tags": [
                "javascript",
                "jquery",
                "function",
                "debugging",
                "jslint"
            ],
            "title": "JSLint error: &quot;Move the invocation into the parens that contain the function&quot;"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>You could have an invisible div that gets shown via JavaScript when the page loads.</p>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<p>You could also use Javascript to load content from another source file and output that. That may be a bit more black box-is than you're looking for though. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://weblogs.asp.net/alex_papadimoulis/archive/2008/02/21/scriptonly-the-opposite-of-a-noscript.aspx\" rel=\"nofollow\">Alex's article</a> springs to mind here, however it's only applicable if you're using ASP.NET - it could be emulated in JavaScript however but again you'd have to use document.write();</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could set the visibility of a paragraph|div to 'hidden'.</p>\n\n<p>Then in the 'onload' function, you could set the visibility to 'visible'.</p>\n\n<p>Something like:</p>\n\n<p>&lt;body onload=\"javascript:document.getElementById(rec).style.visibility=visible\"&gt;\n&lt;p style=\"visibility: visible\" id=\"rec\"&gt;This text to be hidden unless javascript available.&lt;/p&gt;</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There isn't a tag for that. You would need to use javascript to show the text. </p>\n\n<p>Some people already suggested using JS to dynamically set CSS visible. You could also dynamically generate the text with <code>document.getElementById(id).innerHTML = \"My Content\"</code> or dynamically creating the nodes, but the CSS hack is probably the most straightforward to read.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's an example for the hidden div way:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt;&lt;/title&gt;\n        &lt;style&gt;\n            *[data-when-js-is-on] {\n                display: none;\n            }\n        &lt;/style&gt;\n        &lt;script&gt;\n            document.getElementsByTagName(\"style\")[0].textContent = \"\";\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div data-when-js-is-on&gt;\n            JS is on.\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>(You'd probably have to tweak it for poor IE, but you get the idea.)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Easiest way I can think of:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;noscript&gt;&lt;style&gt; .jsonly { display: none } &lt;/style&gt;&lt;/noscript&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;p class=\"jsonly\"&gt;You are a JavaScript User!&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>No document.write, no scripts, pure CSS.</p>\n",
                    "is_accepted": false,
                    "score": 98
                },
                {
                    "body": "<p>First of all, always seperate content, markup and behaviour!</p>\n\n<p>Now, if you're using the jquery libary (you really should, it makes javascript a lot easier).\nThe following code should do:</p>\n\n<pre><code>&lt;pre&gt;&lt;code&gt;\n$(document).ready(function() {\n    $(\"body\").addClass(\"js\");\n});\n&lt;/code&gt;&lt;/pre&gt;\n</code></pre>\n\n<p>This'll give you an additional class on the body when JS is enabled.\nNow, in css, you can hide the area with css when the js class is not available, and show the area when js is available.</p>\n\n<p>Alternatively, you can add <code>no-js</code> as the the default class to your body tag, and use this code:</p>\n\n<pre><code>\n$(document).ready(function() {\n    $(\"body\").removeClass(\"no-js\");\n    $(\"body\").addClass(\"js\");\n});\n</code></pre>\n\n<p>Remember that it is still displayed if CSS is disabled.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I don't really agree with all the answers here about embedding the HTML beforehand and hiding it with CSS until it is again shown with JS. Even w/o JavaScript enabled, that node still exists in the DOM. True, most browsers (even accessibility browsers) will ignore it, but it still exists and there may be odd times when that comes back to bite you.</p>\n\n<p>My preferred method would be to use jQuery to generate the content. If it will be a lot of content, then you can save it as an HTML fragment (just the HTML you will want to show and none of the html, body, head, etc. tags) then use jQuery's ajax functions to load it into the full page.</p>\n\n<h2>test.html</h2>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n     $(document).ready(function() {\n       $.get('_test.html', function(html) {\n         $('p:first').after(html);\n       });\n     });\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;p&gt;This is content at the top of the page.&lt;/p&gt;\n  &lt;p&gt;This is content at the bottom of the page.&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<h2>_test.html</h2>\n\n<pre><code>&lt;p&gt;This is from an HTML fragment document&lt;/p&gt;\n</code></pre>\n\n<h2>result</h2>\n\n<pre><code>&lt;p&gt;This is content at the top of the page.&lt;/p&gt;\n&lt;p&gt;This is from an HTML fragment document&lt;/p&gt;\n&lt;p&gt;This is content at the bottom of the page.&lt;/p&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I have a simple and flexible solution, somewhat similar to Will's (but with the added benefit of being valid html):</p>\n\n<p>Give the body element a class of \"jsOff\". Remove (or replace) this with JavaScript. Have CSS to hide any elements with a class of \"jsOnly\" with a parent element with a class of \"jsOff\".</p>\n\n<p>This means that if JavaScript is enabled, the \"jsOff\" class will be removed from the body. This will mean that elements with a class of \"jsOnly\" will not have a parent with a class of \"jsOff\" and so will not match the CSS selector that hides them, thus they will be shown.</p>\n\n<p>If JavaScript is disabled, the \"jsOff\" class <strong>will not</strong> be removed from the body. Elements with \"jsOnly\" <strong>will</strong> have a parent with \"jsOff\" and so <strong>will</strong> match the CSS selector that hides them, thus they will be hidden.</p>\n\n<p>Here's the code:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;!-- put this in a separate stylesheet --&gt;\n        &lt;style type=\"text/css\"&gt;\n            .jsOff .jsOnly{\n                display:none;\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n\n    &lt;body class=\"jsOff\"&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            document.body.className = document.body.className.replace('jsOff','jsOn');\n        &lt;/script&gt;\n\n        &lt;noscript&gt;&lt;p&gt;Please enable JavaScript and then refresh the page.&lt;/p&gt;&lt;/noscript&gt;\n\n        &lt;p class=\"jsOnly\"&gt;I am only shown if JS is enabled&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>It's valid html. It is simple. It's flexible.</p>\n\n<p>Just add the \"jsOnly\" class to any element that you want to only display when JS is enabled.</p>\n\n<p>Please note that the JavaScript that removes the \"jsOff\" class should be executed as early as possible inside the body tag. It cannot be executed earlier, as the body tag will not be there yet. It should not be executed later as it will mean that elements with the \"jsOnly\" class may not be visible right away (as they will match the CSS selector that hides them until the \"jsOff\" class is removed from the body element).</p>\n\n<p>This could also provide a mechanism for js-only styling (e.g. <code>.jsOn .someClass{}</code>) and no-js-only styling (e.g. <code>.jsOff .someOtherClass{}</code>). You could use it to provide an alternative to <code>&lt;noscript&gt;</code>:</p>\n\n<pre><code>.jsOn .noJsOnly{\n    display:none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>My solution</p>\n\n<p><strong>.css:</strong></p>\n\n<pre><code>.js {\ndisplay: none;\n}\n</code></pre>\n\n<p><strong>.js:</strong></p>\n\n<pre><code>$(document).ready(function() {\n    $(\".js\").css('display', 'inline');\n    $(\".no-js\").css('display', 'none');\n});\n</code></pre>\n\n<p><strong>.html:</strong></p>\n\n<pre><code>&lt;span class=\"js\"&gt;Javascript is enabled&lt;/span&gt;\n&lt;span class=\"no-js\"&gt;Javascript is disabled&lt;/span&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a tag in HTML that will only display its content if JavaScript is enabled? I know noscript works the opposite way around, displaying its HTML content when JavaScript is turned off. But I would like to only display a form on a site if JavaScript is available, telling them why they can't use the form if they don't have it.</p>\n\n<p>The only way I know how to do this is with the document.write(); method in a script tag, and it seems a bit messy for large amounts of HTML.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1399889042,
            "question_id": 30319,
            "score": 49,
            "tags": [
                "javascript",
                "html",
                "noscript"
            ],
            "title": "Is there a HTML opposite to &lt;noscript&gt;?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>We can use the <code>angular.element(document).ready()</code> method to attach callbacks for when the document is ready.  We can simply attach the callback in the controller like so</p>\n\n<pre><code>function MyCtrl($scope) {\n    angular.element(document).ready(function () {\n        console.log('Hello World');\n    });\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/cVsdp/4/\">http://jsfiddle.net/cVsdp/4/</a></p>\n",
                    "is_accepted": true,
                    "score": 88
                },
                {
                    "body": "<blockquote>\n  <p>Angular initializes automatically upon <code>DOMContentLoaded</code> event or when\n  the angular.js script is evaluated if at that time document.readyState\n  is set to 'complete'. At this point Angular looks for the ng-app\n  directive which designates your application root.</p>\n</blockquote>\n\n<p><a href=\"https://docs.angularjs.org/guide/bootstrap\" rel=\"nofollow\">https://docs.angularjs.org/guide/bootstrap</a></p>\n\n<p>This means that the controller code will run after the DOM is ready.</p>\n\n<p>Thus it's just <code>$scope.init()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>See this post <a href=\"http://stackoverflow.com/questions/15458609/angular-js-how-to-execute-function-on-page-load\">Angular.js - how to execute function on page load?</a>\n<br/>\nFor fast lookup:</p>\n\n<pre><code>// register controller in html\n&lt;div data-ng-controller=\"myCtrl\" data-ng-init=\"init()\"&gt;&lt;/div&gt;\n\n// in controller\n$scope.init = function () {\n    // check if there is query in url\n    // and fire search in case its value is not empty\n};\n</code></pre>\n\n<p>This way, You don't have to wait till document is ready. </p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I have a function within my angular controller, I'd like this function to be run on document ready but I noticed that angular runs it as the dom is created.</p>\n\n<pre><code> function myController($scope)\n {\n     $scope.init = function()\n     {\n        // I'd like to run this on document ready\n     }\n\n     $scope.init(); // doesn't work, loads my init before the page has completely loaded\n }\n</code></pre>\n\n<p>Anyone know how I can go about this?</p>\n",
            "last_activity_date": 1413442931,
            "question_id": 18646756,
            "score": 46,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "How to run function in angular controller on document ready?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Take a look at that : <a href=\"http://davidwalsh.name/detect-android\">http://davidwalsh.name/detect-android</a></p>\n\n<p>JavaScript:</p>\n\n<pre><code>var ua = navigator.userAgent.toLowerCase();\nvar isAndroid = ua.indexOf(\"android\") &gt; -1; //&amp;&amp; ua.indexOf(\"mobile\");\nif(isAndroid) {\n  // Do something!\n  // Redirect to Android-site?\n  window.location = 'http://android.davidwalsh.name';\n}\n</code></pre>\n\n<p>PHP:</p>\n\n<pre><code>$ua = strtolower($_SERVER['HTTP_USER_AGENT']);\nif(stripos($ua,'android') !== false) { // &amp;&amp; stripos($ua,'mobile') !== false) {\n  header('Location: http://android.davidwalsh.name');\n  exit();\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 84
                },
                {
                    "body": "<p>js version, catches iPad too:</p>\n\n<pre><code>var is_mobile = /mobile|android/i.test (navigator.userAgent);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>How about this one-liner?</p>\n\n<pre><code>var isAndroid = /(android)/i.test(navigator.userAgent);\n</code></pre>\n\n<p>The <code>i</code> modifier is used to perform case-insensitive matching.</p>\n\n<hr>\n\n<p>Technique taken from Cordova AdMob test project: <a href=\"https://github.com/floatinghotpot/cordova-admob-pro/wiki/00.-How-To-Use-with-PhoneGap-Build\" rel=\"nofollow\">https://github.com/floatinghotpot/cordova-admob-pro/wiki/00.-How-To-Use-with-PhoneGap-Build</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>(function() {\n    var redirect = false\n    if (navigator.userAgent.match(/iPhone/i)) {\n        redirect = true\n    }\n    if (navigator.userAgent.match(/iPod/i)) {\n        redirect = true\n    }\n    var isAndroid = /(android)/i.test(navigator.userAgent)\n    var isMobile = /(mobile)/i.test(navigator.userAgent)\n    if (isAndroid &amp;&amp; isMobile) {\n        redirect = true\n    }\n    if (redirect) {\n        window.location.replace('jQueryMobileSite')\n    }\n})()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think Michal's answer is the best, but we can take it a step further and dynamically load an Android CSS as per the original question:</p>\n\n<pre><code>var isAndroid = /(android)/i.test(navigator.userAgent);\nif (isAndroid) {\n    var css = document.createElement(\"link\");\n    css.setAttribute(\"rel\", \"stylesheet\");\n    css.setAttribute(\"type\", \"text/css\");\n    css.setAttribute(\"href\", \"/css/android.css\");\n    document.body.appendChild(css);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How would i detect that the device in use is an Android for a mobile website?</p>\n\n<p>I need to apply certain css attributes to the Android platform.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1425431966,
            "question_id": 6031412,
            "score": 45,
            "tags": [
                "javascript",
                "jquery",
                "android"
            ],
            "title": "Detect Android phone via Javascript / jQuery"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>try : </p>\n\n<pre><code>myString = myString.replace(/\\\\n/g, \"\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>You can use <code>\\n</code> in a regex for newlines, and <code>\\r</code> for carriage returns.</p>\n\n<pre><code>var str2 = str.replace(/\\n|\\r/g, \"\");\n</code></pre>\n\n<p>Different operating systems use different line endings, with varying mixtures of <code>\\n</code> and <code>\\r</code>. This regex will replace them all.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>A linebreak in regex is \\n, so your script would be</p>\n\n<pre><code>var test = 'this\\nis\\na\\ntest\\nwith\\newlines';\nconsole.log(test.replace(/\\n/g, ' '));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>How you'd find a line break varies between operating system encodings. Windows would be \\r\\n but Linux just uses \\n and Apple uses \\r.</p>\n\n<p>I found this in <a href=\"http://www.textfixer.com/tutorials/javascript-line-breaks.php\">javascript line breaks</a></p>\n\n<pre><code>someText = someText.replace(/(\\r\\n|\\n|\\r)/gm,\"\");\n</code></pre>\n\n<p>That should remove all kinds of line breaks.</p>\n",
                    "is_accepted": false,
                    "score": 66
                },
                {
                    "body": "<p>This is probably a FAQ.  Anyhow, line breaks (better: newlines) can be one of Carriage Return (CR, <code>\\r</code>, on older Macs), Line Feed (LF, <code>\\n</code>, on Unices incl. Linux) or CR followed by LF (<code>\\r\\n</code>, on WinDOS). (Contrary to another answer, this has <em>nothing</em> to do with character encoding.)</p>\n\n<p>Therefore, the most efficient <code>RegExp</code> literal to match all variants is</p>\n\n<pre><code>/\\r?\\n|\\r/\n</code></pre>\n\n<p>If you want to match all newlines in a string, use a global match,</p>\n\n<pre><code>/\\r?\\n|\\r/g\n</code></pre>\n\n<p>respectively.  Then proceed with the <code>replace</code> method as suggested in several other answers. (Probably you do <em>not</em> want to remove the newlines, but replace them with other whitespace, for example the space character, so that words remain intact.)</p>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim\"><code>String.trim()</code></a> removes whitespace from the beginning and end of strings... including newlines.</p>\n\n<p>Here's an example fiddle: <a href=\"http://jsfiddle.net/BLs8u/\">http://jsfiddle.net/BLs8u/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I have a text in a textarea and I read it out using the .value attribute.\nNow I would like to remove all linebreaks(the character that is produced when you press enter) from my text now using .replace with a regular expression, but how do I indicate a linebreak in a regex?\nIf that is not possible, is there any other way?</p>\n",
            "last_activity_date": 1404812169,
            "question_id": 10805125,
            "score": 43,
            "tags": [
                "javascript",
                "regex",
                "string"
            ],
            "title": "How to remove all line breaks from a string?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Just <a href=\"http://documentcloud.github.com/backbone/#Collection-extend\"><code>.extend</code></a> the collection with a meta data storage function.</p>\n\n<pre><code>var MyCollection = Backbone.Collection.extend({\n    initialize: function() {\n        ...\n\n        this._meta = {};\n    },\n    model: ...\n    meta: function(prop, value) {\n        if (value === undefined) {\n            return this._meta[prop]\n        } else {\n            this._meta[prop] = value;\n        }\n    },\n});\n\nvar collection = new MyCollection();\ncollection.add(someModels);\ncollection.meta(\"someProperty\", value);\n\n...\n\nvar value = collection.meta(\"someProperty\");\n</code></pre>\n\n<p>There may be better places for storing <em>specific</em> meta data but this depends completely on what the meta data is.</p>\n\n<p>For storing generic meta data extending your collection constructor with a method to do deal with that should work.</p>\n\n<p>Be wary that if this meta data needs to be stored and loaded from the server then you've got a bigger task at hand. </p>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>Using the function <code>meta</code> of @Raynos solution with only one parameter do not worked for me. So I've used the following code:</p>\n\n<pre><code>var MyCollection = Backbone.Collection.extend({\n    initialize: function() {\n        this._meta = {};\n    },\n    put: function(prop, value) {\n        this._meta[prop] = value;\n    },\n    get: function(prop) {\n        return this._meta[prop];\n    }\n});\n\nvar collection = new MyCollection();\ncollection.put(\"someProperty\", 12);\nalert(collection.get(\"someProperty\"));\n</code></pre>\n\n<p>Hope it'll helps.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've upgrated Raynos's approach with event triggering, so we can bind to collection's attributes update.</p>\n\n<pre><code>cls.groups = Backbone.Collection.extend({\n\n    // ...\n\n    // Reference to this collection's model.\n    model: cls.group,\n\n    initialize: function() {\n        this._attributes = {}\n    },\n\n    // Extend collection with ability to store attributes and trigger events on attributes changing\n    attr: function(prop, value) {\n        if (value === undefined) {\n            return this._attributes[prop]\n        } else {\n            this._attributes[prop] = value;\n            this.trigger('change:' + prop, value);\n        }\n    },\n\n    // ...\n\n});\n\n\ncls.group = Backbone.View.extend({\n\n    // ...\n\n    initialize: function() {\n\n        // Catching attribute update\n        app.groups.on('change:selected', function(value) {\n            // ...\n        }, this);\n    },\n\n    // ...\n\n    events: {\n        'click' : function(e) {\n            // Set collection meta attribute on model's view click event\n            app.groups.attr('selected', this.model.cid);\n        }\n    }\n\n    // ...\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It's probably best to use Collection in eactly the way it was intended: as a bundle of models. (Julien already commented this on the OP, I'd like to give an explanation why I think he is right)</p>\n\n<p>Let's say you are thinking of a Library (collection) of Book (model) as in Backbone's documentation examples. It makes sense that you've got meta information about the library which you want to store, like the address where this book library is located.</p>\n\n<p>The trick is not to think of it as meta information. You've got a library that has a lot of properties, and one of those properties is its collection of books.</p>\n\n<pre><code>var Book = Backbone.Model.extend{ title: \"Moby Dick\" }\n\nvar Collection = Backbone.Collection.extend({\n    model: Book\n})\n\nvar Library = {\n    address: \"45th Street\",\n    collection: Collection\n}\n</code></pre>\n\n<p>In this example I've defined Library as a plain javascript object. Obviously you can also make Library be a model, so that it has all the Backbone bells and whistles. \nMy point here is that you need to represent reality in a more realistic way by taking one step back and seeing that extra properties that you want to assign to the Collection are in fact sibling properties of an object one level up: the Library in this case.</p>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>Collections in backbone js don't allow you to <code>set</code> attributes, but I often find that there is need to store some meta-information about a collection.  Where is the best place to set that information?</p>\n",
            "last_activity_date": 1411892080,
            "question_id": 5930656,
            "score": 43,
            "tags": [
                "javascript",
                "collections",
                "backbone.js"
            ],
            "title": "Setting attributes on a collection - backbone js"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I've conducted a benchmark on C# and C++ (similar syntax). There, actually, the performance differs essentially in <code>for</code> loops, as compared to <code>do while</code> or <code>while</code>. In C++, performance is greater when incrementing. It may also depend on the compiler.</p>\n\n<p>In Javascript, I reckon, it all depends on the browser (Javascript engine), but this behavior is to be expected. Javascript is optimized for working with DOM. So imagine you loop through a collection of DOM elements you get at each iteration, and you increment a counter, when you have to remove them. You remove the <code>0</code> element, then <code>1</code> element, but then you skip the one that takes <code>0</code>'s place. When looping backwards that problem disappears. I know that the example given isn't just the right one, but I did encounter situations where I had to delete items from an ever-changing object collection.</p>\n\n<p>Because backward looping is more often inevitable than forward looping, I am guessing that the JS engine is optimized just for that.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I believe the reason is because you're comparing the loop end point against 0, which is faster then comparing again  <code>&lt; length</code> (or another JS variable).</p>\n\n<p>It is because the ordinal operators <code>&lt;, &lt;=, &gt;, &gt;=</code> are polymorphic, so these operators require type checks on both left and right sides of the operator to determine what comparison behaviour should be used.</p>\n\n<p>There's some very good benchmarks available here:</p>\n\n<p><strong><a href=\"http://blogs.oracle.com/greimer/entry/best_way_to_code_a\">What's the Fastest Way to Code a Loop in JavaScript</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>I am not sure if it's faster but one reason i see is that when you iterate over an array of large elements using increment you tend to write:</p>\n\n<pre><code>for(var i = 0; i &lt; array.length; i++) {\n ...\n}\n</code></pre>\n\n<p>You are essentially accessing the length property of the array N (number of elements) times.\nWhereas when you decrement, you access it only once. That could be a reason.</p>\n\n<p>But you can also write incrementing loop as follows:</p>\n\n<pre><code>for(var i = 0, len = array.length; i &lt; len; i++) {\n ...\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Have you timed it yourself? Mr. Sounders might be wrong with regards to modern interpreters. This is precisely the sort of optimization in which a good compiler writer can make a big difference.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It is easy to say that an iteration can have less instructions. Let\u2019s just compare these two:</p>\n\n<pre><code>for (var i=0; i&lt;length; i++) {\n}\n\nfor (var i=length; i--;) {\n}\n</code></pre>\n\n<p>When you count each variable access and each operator as one instruction, the former <code>for</code> loop uses 5 instructions (read <code>i</code>, read <code>length</code>, evaluate <code>i&lt;length</code>, test <code>(i&lt;length) == true</code>, increment <code>i</code>) while the latter uses just 3 instructions (read <code>i</code>, test <code>i == true</code>, decrement <code>i</code>). That is a ratio of 5:3.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I'm not sure about Javascript, and under modern compilers it probably doesn't matter, but in the \"olden days\" this code:</p>\n\n<pre><code>for (i = 0; i &lt; n; i++){\n  .. body..\n}\n</code></pre>\n\n<p>would generate</p>\n\n<pre><code>move register, 0\nL1:\ncompare register, n\njump-if-negative L2\n-- body ..\nincrement register\njump L1\nL2:\n</code></pre>\n\n<p>while the backward-counting code</p>\n\n<pre><code>for (i = n; --i&gt;=0;){\n  .. body ..\n}\n</code></pre>\n\n<p>would generate</p>\n\n<pre><code>move register, n\nL1:\ndecrement-and-jump-if-negative register, L2\n.. body ..\njump L1\nL2:\n</code></pre>\n\n<p>so inside the loop it's only doing two extra instructions instead of four.</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>What about using a reverse while loop then:</p>\n\n<pre><code>var values = [1,2,3,4,5]; \nvar i = values.length; \n\n/* i is 1st evaluated and then decremented, when i is 1 the code inside the loop \n   is then processed for the last time with i = 0. */\nwhile(i--)\n{\n   //1st time in here i is (length - 1) so it's ok!\n   process(values[i]);\n}\n</code></pre>\n\n<p>IMO this one at least is a more readble code than <code>for(i=length; i--;)</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is an even more \"performant\" version of this.\nSince each argument is optional in for loops you can skip even the first one.</p>\n\n<pre><code>var array = [...];\nvar i = array.length;\n\nfor(;i--;) {\n    do_teh_magic();\n}\n</code></pre>\n\n<p>With this you skip even the check on the <code>[initial-expression]</code>. So you end up with just one operation left.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've been exploring loop speed as well, and was interested to find this tidbit about decrementing being faster than incrementing. However, I have yet to find a test that demonstrates this. There are lots of loop benchmarks on jsperf. Here is one that tests decrementing:</p>\n\n<p><a href=\"http://jsperf.com/array-length-vs-cached/6\" rel=\"nofollow\">http://jsperf.com/array-length-vs-cached/6</a></p>\n\n<p>Caching your array length, however (also recommended Steve Souders' book) does seem to be a winning optimization.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>In his book <a href=\"http://www.stevesouders.com/blog/2009/04/23/even-faster-web-sites/\">Even Faster Web Sites</a> Steve Sounders writes that a simple way to improve the performance of a loop is to decrement the iterator toward 0 rather than incrementing toward the total length (<em>actually the chapter was written by Nicholas C. Zakas</em>). This change can result in savings of up to 50% off the original execution time, depending on the complexity of each iteration. For example:</p>\n\n<pre><code>var values = [1,2,3,4,5];\nvar length = values.length;\n\nfor (var i=length; i--;) {\n   process(values[i]);\n}\n</code></pre>\n\n<p>This is nearly identical for the <code>for</code> loop, the <code>do-while</code> loop, and the <code>while</code> loop.</p>\n\n<p>I'm wondering, what's the reason for this? <strong>Why is to decrement the iterator so much faster?</strong> (I'm interested in the technical background of this and not in benchmarks proving this claim.) </p>\n\n<hr>\n\n<p>EDIT: At first sight the loop syntax used here looks wrong. There is no <code>length-1</code> or <code>i&gt;=0</code>, so let's clarify (I was confused too).</p>\n\n<p>Here is the general for loop syntax:</p>\n\n<pre><code>for ([initial-expression]; [condition]; [final-expression])\n   statement\n</code></pre>\n\n<ul>\n<li><p><em>initial-expression</em> - <code>var i=length</code></p>\n\n<p>This variable declaration is evaluated first. </p></li>\n<li><p><em>condition</em> - <code>i--</code></p>\n\n<p>This expression is evaluated before each loop iteration. It will decrement the variable before the first pass through the loop. If this expression evaluates to <code>false</code> the loop ends. In JavaScript is <code>0 == false</code> so if <code>i</code> finally equals <code>0</code> it is interpreted as <code>false</code> and the loop ends.</p></li>\n<li><p><em>final-expression</em></p>\n\n<p>This expression is evaluated at the end of each loop iteration (before the next evaluation of <em>condition</em>). It's not needed here and is empty. All three expressions are optional in a for loop.</p></li>\n</ul>\n\n<p>The for loop syntax is not part of the question, but because it's a little bit uncommon I think it's interesting to clarify it. And maybe one reason it's faster is, because it uses less expressions (the <code>0 == false</code> \"trick\").</p>\n",
            "last_activity_date": 1418637304,
            "question_id": 3520688,
            "score": 34,
            "tags": [
                "javascript",
                "performance",
                "loops"
            ],
            "title": "JavaScript loop performance - Why is to decrement the iterator toward 0 faster than incrementing"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I would implement a poll just because it sounds simpler to write, and keeping it simple is very valuable.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Not sure if you have taken a look at some of the COMET implementations out there (is that what you mean by AJAX push).</p>\n\n<p>If the user is surfing the site, won't that in effect be requesting information from the server that this notification can piggy-back on?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Because using a push requires an open HTTP connection to be maintained between your server and each client, I'd go for poll as well - not only is that going to consume a lot of server resources but it's also going to be significantly more tricky to implement as matt b mentioned.</p>\n\n<p>My experience with polling is that if you have a frequent enough polling interval on a busy enough site your web server logs can get flooded with poll requests real quickly.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>I haven't tried it myself, but some say <a href=\"http://simonwillison.net/2007/Dec/5/comet/\" rel=\"nofollow\">COMET works and is easier than you think</a>. There's also a Ruby on Rails plug-in called <a href=\"http://juggernaut.rubyforge.org/\" rel=\"nofollow\">Juggernaut</a> that I've heard talked about highly. Again, I haven't used it, so YMMV, but my understanding is that it takes far fewer resources compared to polling. I believe (can someone confirm?) that COMET is how <a href=\"http://www.macrumorslive.com/\" rel=\"nofollow\">MacRumorsLive.com</a> delivers live blogging of WWDC Stevenotes.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's impossible to say whether polling will be more expensive then pushing without knowing how many clients you'll have. I'd recommend polling because:</p>\n\n<ul>\n<li>It sounds like you want to update data about once per minute. Unless notifications are able to arrive at a much faster rate than that, pushing would mean you're keeping an HTTP connection open but seeing very little activity on it.</li>\n<li>Polling is built on top of existing HTTP conventions, so any server that talks to web browsers is already ready to respond to ordinary Ajax requests. A Comet\u2013 or Flash socket\u2013based solution has different requirements; you'll need something like <code>cometd</code> on the server side and a client-side library that groks server-side push.</li>\n</ul>\n\n<p>So if you needed something heavy-duty to manage a torrent of data and a crapload of clients, I'd recommend Comet. But that doesn't seem to be the case.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Both have diferent requirements and address diferent scenarios.</p>\n\n<p>If you need <strong>realtime updates</strong>, like in an online chat, push is a must.</p>\n\n<p>But, if the <strong>refresh period is big</strong>, as it is in your case (5 minutes), then pool is the appropriate solution. Push, in this case, will require a lot of resource from both the client and the server.</p>\n\n<p><strong>Tip!</strong> try to make the page that checks the pool fast and clean, so it doesn't consumes a lot of resources in the server in each request. What I usually do is to keep a flag in memory (like in a session variable) that says if the pool is empty or not... so, I only do havy look in the pool only if it is not empty. When the pool is empty, which is most of the time, the page request runs extremely fast.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Definitely use push its much cooler.  If you just want simple notifications I would use something like <a href=\"http://www.stream-hub.com\">StreamHub Push Server</a> to do the heavy-lifting for you.  Developing your own Ajax Push functionality is an extremely tricky and rocky road - you have to get it working in all browsers and then handle firewalls and proxies killing keep-alive connections etc... Why re-invent the wheel.  Also, it has a similarily low footprint of less than 10K so it should suit if that is a priority for you.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>There's now a service <a href=\"http://pusherapp.com\" rel=\"nofollow\">http://pusherapp.com</a> that is trying to solve this problem once and for all, in a blink. Might be worth checking out. (disclaimer: i am in no way associated with them).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm surprised noone here has mentioned long-polling. Long polling means keeping an open connection for a longer period (say 30-60 seconds), and once it's closed, re-opening it again, and simply having the socket/connection listen for responses. This results in less connections (but longer ones), and means that responses are almost immediate (some may have to wait for a new polling connection). I'd like to add that in combination with technologies like NodeJS, this results in a very efficient, and resource-light solution, that is 100% browser compatible across all major browsers and versions, and does not require any additional tech like Comet or Flash.</p>\n\n<p>I realize this is an old question, but thought it might still be useful to provide this information :)</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I am working on a simple notification service that will be used to deliver messages to the users surfing a website. The notifications do not have to be sent in real time but it might be a better user experience if they happened more frequently than say every 5 minutes. The data being sent to and from the client is not very large and it is a straight forward database query to retrieve the data.</p>\n\n<p>In reading other conversations on the topic it would appear that an AJAX push can result in higher server loads. Since I can tolerate longer server delays is it worth while to have the server push notifications or to simply poll.</p>\n\n<p>It is not much harder to implement the push scenario and so I thought I would see what the  opinion was here.</p>\n\n<p>Thanks for your help.</p>\n\n<p>EDIT: \nI have looked into a simple AJAX Push and implemented a simple demo based on this <a href=\"http://uwmike.com/articles/2008/01/22/browser-data-push/#more-384\">article</a> by Mike Purvis.\nThe client load is fairly low at around 5k for the initial version and expected to stay that way for quite some time.</p>\n\n<hr>\n\n<p>Thank you everyone for your responses. I have decided to go with the polling solution but to wrap it all within a utility library so that if they want to change it later it is easier.</p>\n",
            "last_activity_date": 1357190715,
            "question_id": 219868,
            "score": 28,
            "tags": [
                "javascript",
                "ajax",
                "web-services",
                "server-push"
            ],
            "title": "Client notification, should I use an AJAX Push or Poll?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>There is a trick to do it.</p>\n\n<p>Before all scripts running, take the original XHMHttpReuqest object and save it in a different var. Then override the original XMLHttpRequest and direct all calls to it via your own object.</p>\n\n<p>Psuedo code:</p>\n\n<pre><code> var savd = XMLHttpRequest;\n XMLHttpRequest.prototype = function() {\n         this.init = function() {\n         }; // your code\n         etc' etc'\n };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Since you mention jquery, I know jquery offers a <code>.ajaxSetup()</code> method that sets global ajax options that include the event triggers like <code>success</code>, <code>error</code>, and <code>beforeSend</code> - which is what sounds like what you are looking for.</p>\n\n<pre><code>$.ajaxSetup({\n    beforeSend: function() {\n        //do stuff before request fires\n    }\n});\n</code></pre>\n\n<p>of course you would need to verify jQuery availability on any page you attempt to use this solution on.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Inspired by <a href=\"http://stackoverflow.com/questions/5202296/add-a-hook-to-all-ajax-requests-on-a-page/5202312#5202312\">aviv's answer</a>, I did a little investigating and this is what I came up with.<br>\n<strong>I'm not sure that it's all that useful</strong> as per the comments in the script and of course <strong>will only work for browsers using a native XMLHttpRequest object</strong>.<br>\nI think it will work if javascript libraries are in use as they will use the native object if possible.  </p>\n\n<pre><code>function addXMLRequestCallback(callback){\n    var oldSend, i;\n    if( XMLHttpRequest.callbacks ) {\n        // we've already overridden send() so just add the callback\n        XMLHttpRequest.callbacks.push( callback );\n    } else {\n        // create a callback queue\n        XMLHttpRequest.callbacks = [callback];\n        // store the native send()\n        oldSend = XMLHttpRequest.prototype.send;\n        // override the native send()\n        XMLHttpRequest.prototype.send = function(){\n            // process the callback queue\n            // the xhr instance is passed into each callback but seems pretty useless\n            // you can't tell what its destination is or call abort() without an error\n            // so only really good for logging that a request has happened\n            // I could be wrong, I hope so...\n            // EDIT: I suppose you could override the onreadystatechange handler though\n            for( i = 0; i &lt; XMLHttpRequest.callbacks.length; i++ ) {\n                XMLHttpRequest.callbacks[i]( this );\n            }\n            // call the native send()\n            oldSend.apply(this, arguments);\n        }\n    }\n}\n\n// e.g.\naddXMLRequestCallback( function( xhr ) {\n    console.log( xhr.responseText ); // (an empty string)\n});\naddXMLRequestCallback( function( xhr ) {\n    console.dir( xhr ); // have a look if there is anything useful here\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>In addition to meouw's answer, I had to inject code into an iframe which intercepts XHR calls, and used the above answer. However, I had to change  </p>\n\n<pre><code>XMLHttpRequest.prototype.send = function(){\n</code></pre>\n\n<p>To:</p>\n\n<pre><code>XMLHttpRequest.prototype.send = function(arguments)\n</code></pre>\n\n<p>And I had to change</p>\n\n<pre><code>oldSend.apply(this, arguments);\n</code></pre>\n\n<p>To:</p>\n\n<pre><code>oldSend.call(this, arguments);\n</code></pre>\n\n<p>This was necessary to get it working in IE9 with <em>IE8 document mode</em>. If this modification was not made, some call-backs generated by the component framework (Visual WebGUI) did not work. More info at these links:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/call\" rel=\"nofollow\">Function.prototype.call</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/apply\" rel=\"nofollow\">Function.prototype.apply</a></li>\n</ul>\n\n<p>Without these modifications AJAX postbacks did not terminate.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>jquery...</p>\n\n<pre><code>&lt;script&gt;\n   $(document).ajaxSuccess(\n        function(event, xhr, settings){ \n          alert(xhr.responseText);\n        }\n   );\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Using the answer of \"meouw\" I suggest to use the following solution if you want to see results of request</p>\n\n<pre><code>function addXMLRequestCallback(callback) {\n    var oldSend, i;\n    if( XMLHttpRequest.callbacks ) {\n        // we've already overridden send() so just add the callback\n        XMLHttpRequest.callbacks.push( callback );\n    } else {\n        // create a callback queue\n        XMLHttpRequest.callbacks = [callback];\n        // store the native send()\n        oldSend = XMLHttpRequest.prototype.send;\n        // override the native send()\n        XMLHttpRequest.prototype.send = function() {\n            // call the native send()\n            oldSend.apply(this, arguments);\n\n            this.onreadystatechange = function ( progress ) {\n               for( i = 0; i &lt; XMLHttpRequest.callbacks.length; i++ ) {\n                    XMLHttpRequest.callbacks[i]( progress );\n                }\n            };       \n        }\n    }\n}\n\naddXMLRequestCallback( function( progress ) {\n    if (typeof progress.srcElement.responseText != 'undefined' &amp;&amp;                        progress.srcElement.responseText != '') {\n        console.log( progress.srcElement.responseText.length );\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you don't have to support &lt;= IE8 you can do this which will generically intercept <strong>any</strong> AJAX globally and not screw up any callbacks etc. that maybe have been assigned by any third party AJAX libraries. The accepted answer does not yield the actual response because it is getting called too early.</p>\n\n<pre><code>(function() {\n    var origOpen = XMLHttpRequest.prototype.open;\n    XMLHttpRequest.prototype.open = function() {\n        console.log('request started!');\n        this.addEventListener('load', function() {\n            console.log('request completed!');\n            console.log(this.readyState); //will always be 4 (ajax is completed successfully)\n            console.log(this.responseText); //whatever the response was\n        });\n        origOpen.apply(this, arguments);\n    };\n})();\n</code></pre>\n\n<p>Some more docs of what you can do here with the addEventListener API here:</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Monitoring_progress\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Monitoring_progress</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'd like to know if it's possible to \"hook\" into every single AJAX request (either as it's about to get sent, or on events) and perform an action. At this point I'm assuming that there are other third-party scripts on the page. Some of these might use jQuery, while others do not. Is this possible?</p>\n",
            "last_activity_date": 1421649363,
            "question_id": 5202296,
            "score": 26,
            "tags": [
                "javascript",
                "ajax",
                "xmlhttprequest"
            ],
            "title": "Add a &quot;hook&quot; to all AJAX requests on a page"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Been having this issue as well, and finally figured out how to do it.</p>\n\n<p>Here is a sample state:</p>\n\n<pre><code>angular.module('myApp', ['ui.router'])\n.config(['$stateProvider', function($stateProvider) {\n    $stateProvider.state('myState', {\n        url: '/state/:id',\n        templateUrl: 'template.html',\n        controller: 'MyCtrl',\n        resolve: {\n            data: ['myService', function(service) {\n                return service.findAll();\n            }]\n        }\n    });\n}]);\n</code></pre>\n\n<p>The unit test below will cover testing the URL w/ params, and executing the resolves which inject its own dependencies:</p>\n\n<pre><code>describe('myApp/myState', function() {\n\n  var $rootScope, $state, $injector, myServiceMock, state = 'myState';\n\n  beforeEach(function() {\n\n    module('myApp', function($provide) {\n      $provide.value('myService', myServiceMock = {});\n    });\n\n    inject(function(_$rootScope_, _$state_, _$injector_, $templateCache) {\n      $rootScope = _$rootScope_;\n      $state = _$state_;\n      $injector = _$injector_;\n\n      // We need add the template entry into the templateCache if we ever\n      // specify a templateUrl\n      $templateCache.put('template.html', '');\n    })\n  });\n\n  it('should respond to URL', function() {\n    expect($state.href(state, { id: 1 })).toEqual('#/state/1');\n  });\n\n  it('should resolve data', function() {\n    myServiceMock.findAll = jasmine.createSpy('findAll').andReturn('findAll');\n\n    $state.go(state);\n    $rootScope.$digest();\n    expect($state.current.name).toBe(state);\n\n    // Call invoke to inject dependencies and run function\n    expect($injector.invoke($state.current.resolve.data)).toBe('findAll');\n  });\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 41
                }
            ],
            "body": "<p>I'm having some trouble unit testing the router in my application, which is built on the Angular ui router. What I want to test is whether state transitions change the URL appropriately (there will be more complicated tests later, but this is where I'm starting.)</p>\n\n<p>Here is the relevant portion of my application code:</p>\n\n<pre><code>angular.module('scrapbooks')\n .config( function($stateProvider){\n    $stateProvider.state('splash', {\n       url: \"/splash/\",\n       templateUrl: \"/app/splash/splash.tpl.html\",\n       controller: \"SplashCtrl\"\n    })\n })\n</code></pre>\n\n<p>And the testing code:</p>\n\n<pre><code>it(\"should change to the splash state\", function(){\n  inject(function($state, $rootScope){\n     $rootScope.$apply(function(){\n       $state.go(\"splash\");\n     });\n     expect($state.current.name).to.equal(\"splash\");\n  })\n})\n</code></pre>\n\n<p>Similar questions on Stackoverflow (and the official ui router test code) suggest wrapping the $state.go call in $apply should be enough. But I've done that and the state is still not updating. $state.current.name remains empty.</p>\n",
            "last_activity_date": 1389553499,
            "question_id": 20433485,
            "score": 24,
            "tags": [
                "javascript",
                "unit-testing",
                "angularjs",
                "angular-ui-router"
            ],
            "title": "Angular ui router unit testing (states to urls)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><code>$.post</code> is an AJAX call.</p>\n\n<p>Your best bet is to make the button a trigger for a form and just submit that using the post method.</p>\n\n<p>An alternative would be to echo your new url from the server, but that defeats the point of AJAX.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Use jQuery.submit() to submit form: <a href=\"http://api.jquery.com/submit/\">http://api.jquery.com/submit/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I created a <code>$.form(url[, data[, method  = 'POST']])</code> function which creates a hidden form, populates it with the specified data and attaches it to the <code>&lt;body&gt;</code>. Here are some examples:</p>\n\n<pre><code>$.form('/index')\n\n&lt;form action=\"/index\" method=\"POST\"&gt;&lt;/form&gt;\n</code></pre>\n\n\n\n<pre><code>$.form('/new', { title: 'Hello World', body: 'Foo Bar' })\n\n&lt;form action=\"/index\" method=\"POST\"&gt;\n    &lt;input type=\"hidden\" name=\"title\" value=\"Hello World\" /&gt;\n    &lt;input type=\"hidden\" name=\"body\" value=\"Foo Bar\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n\n\n<pre><code>$.form('/info', { userIds: [1, 2, 3, 4] }, 'GET')\n\n&lt;form action=\"/info\" method=\"GET\"&gt;\n    &lt;input type=\"hidden\" name=\"userIds[]\" value=\"1\" /&gt;\n    &lt;input type=\"hidden\" name=\"userIds[]\" value=\"2\" /&gt;\n    &lt;input type=\"hidden\" name=\"userIds[]\" value=\"3\" /&gt;\n    &lt;input type=\"hidden\" name=\"userIds[]\" value=\"4\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n\n\n<pre><code>$.form('/profile', { sender: { first: 'John', last: 'Smith', postIds: null },\n                     receiver: { first: 'Foo', last: 'Bar', postIds: [1, 2] })\n\n&lt;form action=\"/profile\" method=\"POST\"&gt;\n    &lt;input type=\"hidden\" name=\"sender[first]\" value=\"John\"&gt;\n    &lt;input type=\"hidden\" name=\"sender[last]\" value=\"Smith\"&gt;\n    &lt;input type=\"hidden\" name=\"receiver[first]\" value=\"John\"&gt;\n    &lt;input type=\"hidden\" name=\"receiver[last]\" value=\"Smith\"&gt;\n    &lt;input type=\"hidden\" name=\"receiver[postIds][]\" value=\"1\"&gt;\n    &lt;input type=\"hidden\" name=\"receiver[postIds][]\" value=\"2\"&gt;\n&lt;/form&gt;\n</code></pre>\n\n\n\n<p>With jQuery's <code>.submit()</code> method you can create and submit a form with a simple expression:</p>\n\n<pre><code>$.form('http://stackoverflow.com/search', { q: '[ajax]' }, 'GET').submit();\n</code></pre>\n\n\n\n<p>Here's the function definition:</p>\n\n<pre><code>jQuery(function($) { $.extend({\n    form: function(url, data, method) {\n        if (method == null) method = 'POST';\n        if (data == null) data = {};\n\n        var form = $('&lt;form&gt;').attr({\n            method: method,\n            action: url\n         }).css({\n            display: 'none'\n         });\n\n        var addData = function(name, data) {\n            if ($.isArray(data)) {\n                for (var i = 0; i &lt; data.length; i++) {\n                    var value = data[i];\n                    addData(name + '[]', value);\n                }\n            } else if (typeof data === 'object') {\n                for (var key in data) {\n                    if (data.hasOwnProperty(key)) {\n                        addData(name + '[' + key + ']', data[key]);\n                    }\n                }\n            } else if (data != null) {\n                form.append($('&lt;input&gt;').attr({\n                  type: 'hidden',\n                  name: String(name),\n                  value: String(data)\n                }));\n            }\n        };\n\n        for (var key in data) {\n            if (data.hasOwnProperty(key)) {\n                addData(key, data[key]);\n            }\n        }\n\n        return form.appendTo('body');\n    }\n}); });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<p>It looks like you are trying to Add Products to the cart and then redirect to your current page.  My guess is is that is how you are updating the visual effect of your shopping cart.  I would suggest adding the success handler on your $.post and then redirecting to the current page.  If an error occurs on the server, you can send back the serialized error and handle it client side.</p>\n\n<pre><code>function addProducts() {\n    $.post('&lt;%= Url.Action(\"AddToCart\", \"Cart\") %&gt;',{\n        returnUrl: window.location.href\n    }, function(data){\n        window.location.href = window.location.href\n    });\n}\n</code></pre>\n\n<p>This will refresh your current page after your products are posted.</p>\n\n<p>Here is a fiddle for reference: <a href=\"http://jsfiddle.net/brentmn/B4P6W/3/\" rel=\"nofollow\">http://jsfiddle.net/brentmn/B4P6W/3/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you're doing a full redirect after a post, then why do it with Ajax?  You should be able to perform a tradtional POST here and have it successfully redirect.</p>\n\n<p>If you <strong>really</strong> want an ajax request to go through and still redirect, a very easy and non-intrusive way to do that would be to return a <code>JavascriptResult</code> from your action instead of a <code>RedirectResult</code>:</p>\n\n<pre><code>return JavaScript(\"window.location = \" + returnUrl);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In an ASP.NET MVC app I use jQuery for posting data on Buttonclick</p>\n\n<pre><code>&lt;button  onclick=\"addProducts()\"&gt;Add products&lt;/button&gt;\n....\n$.post('&lt;%= Url.Action(\"AddToCart\", \"Cart\") %&gt;',\n            {\n                ...\n                returnUrl: window.location.href\n            });\n</code></pre>\n\n<p>In the \"AddToCart\" action of \"Cart\" controller I use redirection to another View after posting:</p>\n\n<pre><code>    public RedirectToRouteResult AddToCart(..., string returnUrl)\n    {\n        ...\n        return RedirectToAction(\"Index\", new { returnUrl });            \n    }\n</code></pre>\n\n<p>All is ok, except this redirection. I stay on the same page after posting. I suspect it's due to Ajax type of \"Post\" request. </p>\n\n<p>How to solve the problem with jQuery post request blocking the redirection?</p>\n",
            "last_activity_date": 1391808454,
            "question_id": 4583703,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "asp.net-mvc",
                "post"
            ],
            "title": "jQuery post request (not Ajax)"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Append extra an <code>[</code> and <code>]</code> to the beginning and end of the string. This will make it an array. Then use <code>eval()</code> or some safe JSON serializer to serialize the string and make it a real JavaScript datatype.</p>\n\n<p>You should use <a href=\"https://github.com/douglascrockford/JSON-js\">https://github.com/douglascrockford/JSON-js</a> instead of <code>eval()</code>. eval is only if you're doing some quick debugging/testing.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If your using jQuery, it's <a href=\"http://api.jquery.com/jQuery.parseJSON/\" rel=\"nofollow\">parseJSON</a> function can be used and is preferable to JavaScript's native <code>eval()</code> function.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As Luca indicated, add extra <code>[]</code> to your string and use the code below:</p>\n\n<pre><code>var myObject = eval('(' + myJSONtext + ')');\n</code></pre>\n\n<p>to test it you can use the snippet below.</p>\n\n<pre><code>var s =\" [{'id':1,'name':'Test1'},{'id':2,'name':'Test2'}]\";\nvar myObject = eval('(' + s + ')');\nfor (i in myObject)\n{\n   alert(myObject[i][\"name\"]);\n}\n</code></pre>\n\n<p>hope it helps..</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Using jQuery:</p>\n\n<pre><code>var str = '{\"id\":1,\"name\":\"Test1\"},{\"id\":2,\"name\":\"Test2\"}';\nvar jsonObj = $.parseJSON('[' + str + ']');\n</code></pre>\n\n<p><code>jsonObj</code> is your JSON object.</p>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>I know a lot of people are saying use eval.  the eval() js function will call the compiler, and that can offer a series of security risks.  It is best to avoid its usage where possible.  The parse function offers a more secure alternative.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As simple as that.</p>\n\n<p><code>var str = '{\"id\":1,\"name\":\"Test1\"},{\"id\":2,\"name\":\"Test2\"}';\n dataObj = JSON.parse(str);</code></p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I would like to convert this string</p>\n\n<pre><code>{\"id\":1,\"name\":\"Test1\"},{\"id\":2,\"name\":\"Test2\"}\n</code></pre>\n\n<p>to array of 2 JSON objects. How should I do it?</p>\n\n<p>best</p>\n",
            "last_activity_date": 1394455352,
            "question_id": 4375537,
            "score": 23,
            "tags": [
                "javascript",
                "arrays",
                "json"
            ],
            "title": "Convert JSON string to array of JSON objects in Javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>From your code</p>\n\n<pre><code>&lt;input type=button value=\"Select\" onClick=\"sendValue(this.form.details);\"\n</code></pre>\n\n<p>Im not sure that your <code>this.form.details</code> valid or not. </p>\n\n<p>IF it's valid, have a look in <code>window.opener.document.getElementById('details').value = selvalue;</code> </p>\n\n<p>I can't found an input's id contain <code>details</code> I'm just found only <code>id=sku1</code> (recommend you to add <code>\"</code> like <code>id=\"sku1\"</code>). </p>\n\n<p>And  from your id it's hardcode. Let's see how to do with dynamic when a child has callback to update some textbox on the parent \n<a href=\"http://codemodel.net/TEST/\">Take a look at here.</a></p>\n\n<h2>First page.</h2>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script&gt;\n    function callFromDialog(id,data){ //for callback from the dialog\n        document.getElementById(id).value = data;\n        // do some thing other if you want\n    }\n\n    function choose(id){\n        var URL = \"secondPage.html?id=\" + id + \"&amp;dummy=avoid#\";\n        window.open(URL,\"mywindow\",\"menubar=1,resizable=1,width=350,height=250\")\n    }\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;input id=\"tbFirst\" type=\"text\" /&gt; &lt;button onclick=\"choose('tbFirst')\"&gt;choose&lt;/button&gt;\n&lt;input id=\"tbSecond\" type=\"text\" /&gt; &lt;button onclick=\"choose('tbSecond')\"&gt;choose&lt;/button&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Look in <code>function choose</code> I'm sent an id of textbox to the popup window (don't forget to add dummy data at last of URL param like <code>&amp;dummy=avoid#</code>)</p>\n\n<h2>Popup Page</h2>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script&gt;\n    function goSelect(data){\n        var idFromCallPage = getUrlVars()[\"id\"];\n        window.opener.callFromDialog(idFromCallPage,data); //or use //window.opener.document.getElementById(idFromCallPage).value = data;\n        window.close();\n    }\n\n\n    function getUrlVars(){\n        var vars = [], hash;\n        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&amp;');\n        for(var i = 0; i &lt; hashes.length; i++)\n        {\n            hash = hashes[i].split('=');\n            vars.push(hash[0]);\n            vars[hash[0]] = hash[1];\n        }\n        return vars;\n    }\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;a href=\"#\" onclick=\"goSelect('Car')\"&gt;Car&lt;/a&gt; &lt;br /&gt;\n&lt;a href=\"#\" onclick=\"goSelect('Food')\"&gt;Food&lt;/a&gt; &lt;br /&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>I have add function getUrlVars for <a href=\"http://jquery-howto.blogspot.com/2009/09/get-url-parameters-values-with-jquery.html\">get URL param</a> that the parent has pass to child.</p>\n\n<p>Okay, when select <strong>data</strong> in the popup, for this case it's will call <code>function goSelect</code></p>\n\n<p>In that function will get URL param to sent back.</p>\n\n<p>And when you need to sent back to the parent just use <strong>window.opener</strong> and the name of <strong>function</strong> like <strong>window.opener.callFromDialog</strong></p>\n\n<p>By fully is <code>window.opener.callFromDialog(idFromCallPage,data);</code></p>\n\n<p>Or if you want to use <code>window.opener.document.getElementById(idFromCallPage).value = data;</code> It's ok too.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>My approach: use a <code>div</code> instead of a pop-up window.</p>\n\n<p>See it working in the jsfiddle here: <a href=\"http://jsfiddle.net/6RE7w/2/\">http://jsfiddle.net/6RE7w/2/</a></p>\n\n<p>Or save the code below as <strong>test.html</strong> and try it locally.</p>\n\n<pre><code>&lt;html&gt;\n\n&lt;head&gt;\n    &lt;script type=\"text/javascript\" src=\"http://code.jquery.com/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        $(window).load(function(){\n            $('.btnChoice').on('click', function(){\n                $('#divChoices').show()\n                thefield = $(this).prev()\n                $('.btnselect').on('click', function(){\n                    theselected = $(this).prev()\n                    thefield.val( theselected.val() )\n                    $('#divChoices').hide()\n                })\n            })\n\n            $('#divChoices').css({\n                'border':'2px solid red',\n                'position':'fixed',\n                'top':'100',\n                'left':'200',\n                'display':'none'\n            })\n        });\n    &lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n&lt;div class=\"divform\"&gt;\n    &lt;input type=\"checkbox\" name=\"kvi1\" id=\"kvi1\" value=\"1\"&gt;\n    &lt;label&gt;Field 1: &lt;/label&gt;\n    &lt;input size=\"10\" type=\"number\" id=\"sku1\" name=\"sku1\"&gt;\n    &lt;button id=\"choice1\" class=\"btnChoice\"&gt;?&lt;/button&gt;\n    &lt;br&gt;\n    &lt;input type=\"checkbox\" name=\"kvi2\" id=\"kvi2\" value=\"2\"&gt;\n    &lt;label&gt;Field 2: &lt;/label&gt;\n    &lt;input size=\"10\"  type=\"number\" id=\"sku2\" name=\"sku2\"&gt;\n    &lt;button id=\"choice2\" class=\"btnChoice\"&gt;?&lt;/button&gt;\n&lt;/div&gt;\n\n&lt;div id=\"divChoices\"&gt;\n    Select something: \n    &lt;br&gt;\n    &lt;input size=\"10\" type=\"number\" id=\"ch1\" name=\"ch1\" value=\"11\"&gt;\n    &lt;button id=\"btnsel1\" class=\"btnselect\"&gt;Select&lt;/button&gt;\n    &lt;label for=\"ch1\"&gt;bla bla bla&lt;/label&gt;\n    &lt;br&gt;\n    &lt;input size=\"10\" type=\"number\" id=\"ch2\" name=\"ch2\" value=\"22\"&gt;\n    &lt;button id=\"btnsel2\" class=\"btnselect\"&gt;Select&lt;/button&gt;\n    &lt;label for=\"ch2\"&gt;ble ble ble&lt;/label&gt;\n&lt;/div&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n\n<p>clean and simple.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>(parent window) </p>\n\n<pre><code>&lt;html&gt; \n&lt;script language=\"javascript\"&gt; \nfunction openWindow() { \n  window.open(\"target.html\",\"_blank\",\"height=200,width=400, status=yes,toolbar=no,menubar=no,location=no\"); \n} \n&lt;/script&gt; \n&lt;body&gt; \n&lt;form name=frm&gt; \n&lt;input id=text1 type=text&gt; \n&lt;input type=button onclick=\"javascript:openWindow()\" value=\"Open window..\"&gt; \n&lt;/form&gt; \n&lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n\n<p>(child window) </p>\n\n<pre><code>&lt;html&gt; \n&lt;script language=\"javascript\"&gt; \nfunction changeParent() { \n  window.opener.document.getElementById('text1').value=\"Value changed..\";\n  window.close();\n} \n&lt;/script&gt; \n&lt;body&gt; \n&lt;form&gt; \n&lt;input type=button onclick=\"javascript:changeParent()\" value=\"Change opener's textbox's value..\"&gt; \n&lt;/form&gt; \n&lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n\n<p><a href=\"http://www.codehappiness.com/post/access-parent-window-from-child-window-or-access-child-window-from-parent-window-using-javascript.aspx\">http://www.codehappiness.com/post/access-parent-window-from-child-window-or-access-child-window-from-parent-window-using-javascript.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>If you want a popup window rather than a <code>&lt;div /&gt;</code>, I would suggest the following approach.</p>\n\n<p>In your parent page, you call a small helper method to show the popup window:</p>\n\n<pre><code>&lt;input type=\"button\" name=\"choice\" onClick=\"selectValue('sku1')\" value=\"?\"&gt;\n</code></pre>\n\n<p>Add the following JS methods:</p>\n\n<pre><code>function selectValue(id)\n{\n    // open popup window and pass field id\n    window.open('sku.php?id=' + encodeURIComponent(id),'popuppage',\n      'width=400,toolbar=1,resizable=1,scrollbars=yes,height=400,top=100,left=100');\n}\n\nfunction updateValue(id, value)\n{\n    // this gets called from the popup window and updates the field with a new value\n    document.getElementById(id).value = value;\n}\n</code></pre>\n\n<p>Your <code>sku.php</code> receives the selected field via <code>$_GET['id']</code> and uses it to construct the parent callback function:</p>\n\n<pre><code>?&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction sendValue(value)\n{\n    var parentId = &lt;?php echo json_encode($_GET['id']); ?&gt;;\n    window.opener.updateValue(parentId, value);\n    window.close();\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>For each row in your popup, change code to this:</p>\n\n<pre><code>&lt;td&gt;&lt;input type=button value=\"Select\" onClick=\"sendValue('&lt;?php echo $rows['packcode']; ?&gt;')\" /&gt;&lt;/td&gt;\n</code></pre>\n\n<p>Following this approach, the popup window doesn't need to know how to update fields in the parent form.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>you could use postMessage: </p>\n\n<p><a href=\"https://developer.mozilla.org/en/docs/DOM/window.postMessage\" rel=\"nofollow\">https://developer.mozilla.org/en/docs/DOM/window.postMessage</a></p>\n\n<p>I think it's is the simplest way to do it</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>use:\n<code>opener.document.&lt;id of document&gt;.innerHTML = xmlhttp.responseText;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am building an order form with PHP and MySQL.</p>\n\n<p>The PHP Form has an input box where the user types in a product code. In the event that the user does not know the product code, I want them to click on an image or button next to the input box, which opens a popup with a list of all product codes. they can then click on the product they want and the product code is passed from the popup to the input box on that table row.</p>\n\n<p>I have the code of my page below and the image of the page it creates so you can get a feel for what I am wanting to acheive.</p>\n\n<p><strong>parent page</strong>\n    </p>\n\n<pre><code>&lt;table border=0  id=\"hor-minimalist-a\"&gt; \n\n&lt;tr&gt;\n&lt;th valign=bottom&gt;KVI&lt;/th&gt;\n&lt;th valign=bottom&gt;PACK CODE&lt;/th&gt;\n&lt;th valign=bottom width=250&gt;DESCRIPTION&lt;/th&gt;\n&lt;th valign=bottom width=40&gt;WHSE&lt;/th&gt;\n&lt;th valign=bottom width=25&gt;SU&lt;/th&gt;\n\n&lt;/tr&gt;\n&lt;tr id=\"r1\"&gt;  \n    &lt;td&gt;\n        &lt;input type=checkbox name=kvi1 id=kvi1 value=1&gt;\n    &lt;/td&gt;\n    &lt;td&gt;\n        &lt;input size=10  type=number id=sku1 name=sku1 onchange=\"showUser(1, this.value)\"&gt;\n        &lt;input type=\"button\" name=\"choice\" onClick=\"window.open('sku.php','popuppage','width=400,toolbar=1,resizable=1,scrollbars=yes,height=400,top=100,left=100');\" value=\"?\"&gt;\n\n    &lt;/td&gt;\n    &lt;td&gt;\n        &lt;div align=\"left\" id=\"txtHint1\"&gt;&amp;nbsp;&lt;/div&gt;\n    &lt;/td&gt;\n    &lt;td&gt;\n        &lt;div align=\"left\" id=\"whse1\"&gt;&amp;nbsp;&lt;/div&gt;\n    &lt;/td&gt;\n    &lt;td&gt;\n        &lt;div align=\"left\" id=\"su1\"&gt;&amp;nbsp;&lt;/div&gt;\n    &lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr id=\"r2\"&gt;  \n    &lt;td&gt;\n        &lt;input type=checkbox name=kvi2 id=kvi2 value=2&gt;\n    &lt;/td&gt;\n    &lt;td&gt;\n        &lt;input size=10  type=number id=sku2 name=sku2 onchange=\"showUser(2, this.value)\"&gt;&lt;img src=q.png&gt;\n    &lt;/td&gt;\n    &lt;td&gt;\n        &lt;div align=\"left\" id=\"txtHint2\"&gt;&amp;nbsp;&lt;/div&gt;\n    &lt;/td&gt;\n    &lt;td&gt;\n        &lt;div align=\"left\" id=\"whse2\"&gt;&amp;nbsp;&lt;/div&gt;\n    &lt;/td&gt;\n    &lt;td valign=bottom&gt;\n        &lt;div align=\"left\" id=\"su2\"&gt;&amp;nbsp;&lt;/div&gt;\n    &lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr id=\"r3\"&gt;  \n    &lt;td&gt;\n        &lt;input type=checkbox name=kvi3 id=kvi3 value=3&gt;\n    &lt;/td&gt;\n    &lt;td&gt;\n        &lt;input size=10  type=number id=sku3 name=sku3 onchange=\"showUser(3, this.value)\"&gt;&lt;img src=q.png&gt;\n    &lt;/td&gt;\n    &lt;td&gt;\n        &lt;div align=\"left\" id=\"txtHint3\"&gt;&amp;nbsp;&lt;/div&gt;\n    &lt;/td&gt;\n    &lt;td&gt;\n        &lt;div align=\"left\" id=\"whse3\"&gt;&amp;nbsp;&lt;/div&gt;\n    &lt;/td&gt;\n    &lt;td&gt;\n        &lt;div align=\"left\" id=\"su3\"&gt;&amp;nbsp;&lt;/div&gt;\n    &lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr id=\"r4\"&gt;  \n    &lt;td&gt;\n        &lt;input type=checkbox name=kvi4 id=kvi4 value=4&gt;\n    &lt;/td&gt;\n    &lt;td&gt;\n        &lt;input size=10  type=number id=sku4 name=sku4 onchange=\"showUser(4, this.value)\"&gt;&lt;img src=q.png&gt;\n    &lt;/td&gt;\n    &lt;td&gt;\n        &lt;div align=\"left\" id=\"txtHint4\"&gt;&amp;nbsp;&lt;/div&gt;\n    &lt;/td&gt;\n    &lt;td&gt;\n        &lt;div align=\"left\" id=\"whse4\"&gt;&amp;nbsp;&lt;/div&gt;\n    &lt;/td&gt;\n    &lt;td&gt;\n        &lt;div align=\"left\" id=\"su4\"&gt;&amp;nbsp;&lt;/div&gt;\n    &lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/sLqxF.jpg\" alt=\"parent page\"></p>\n\n<p><strong>the popup page code and image is below:</strong></p>\n\n<pre><code>&lt;?\n\n  $con = mysql_connect('localhost', 'dbuser', 'dbpass');\n if (!$con)\n   {\n   die('Could not connect: ' . mysql_error());\n   }\n   mysql_select_db(\"databasename\", $con);\n\n $skusql=\"select packcode,category,description,grouping,packconfig,sellingunits,eottpoints from skudata order by category, packcode\"; \n$resultsku=mysql_query($skusql); \n\n ?&gt;\n &lt;SCRIPT LANGUAGE=\"JavaScript\"&gt;\n&lt;!-- Begin\nfunction sendValue (s){\nvar selvalue = s.value;\nwindow.opener.document.getElementById('details').value = selvalue;\nwindow.close();\n}\n//  End --&gt;\n&lt;/script&gt;\n &lt;form name=\"selectform\"&gt;\n\n                &lt;table border=0 width=1000 id=\"hor-minimalist-a\"&gt;\n                    &lt;tr&gt;\n                        &lt;th&gt;Pack Code&lt;/th&gt;                      \n                        &lt;th&gt;&amp;nbsp;&lt;/th&gt; \n                        &lt;th&gt;Category&lt;/th&gt;  \n                        &lt;th&gt;Product Description&lt;/th&gt;\n                        &lt;th&gt;Grouping&lt;/th&gt;\n                        &lt;th&gt;Pack Config&lt;/th&gt; \n                        &lt;th&gt;SU&lt;/th&gt; \n                        &lt;th&gt;Points&lt;/th&gt; \n                    &lt;/tr&gt;\n&lt;?php\n    while($rows=mysql_fetch_array($resultsku)){\n?&gt;\n                    &lt;tr&gt;\n                        &lt;td&gt;&lt;input name=details size=5 value=\"&lt;?php echo $rows['packcode']; ?&gt;\"&gt;&lt;/td&gt;\n                        &lt;td&gt;&lt;input type=button value=\"Select\" onClick=\"sendValue(this.form.details);\"&lt;/td&gt;\n                        &lt;td&gt;&lt;?php echo $rows['category']; ?&gt;&lt;/td&gt;\n                        &lt;td&gt;&lt;center&gt;&lt;?php echo $rows['description']; ?&gt;&lt;/td&gt;\n                        &lt;td&gt;&lt;center&gt;&lt;?php echo $rows['grouping']; ?&gt;&lt;/td&gt;\n                        &lt;td&gt;&lt;center&gt;&lt;?php echo $rows['packconfig']; ?&gt;&lt;/td&gt;\n                        &lt;td&gt;&lt;center&gt;&lt;?php echo $rows['sellingunits']; ?&gt;&lt;/td&gt;\n                        &lt;td&gt;&lt;center&gt;&lt;?php echo $rows['eottpoints']; ?&gt;&lt;/td&gt;\n                    &lt;/tr&gt;                                   \n\n&lt;?php\n    }\n?&gt;\n                    &lt;/table&gt;\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/n30FM.jpg\" alt=\"popup window\"></p>\n\n<p>I am trying to pass the value of the product code from the selected popup window row, to the parent window input box for 'pack code'</p>\n\n<p>I was trying to adapt a script I came across but am not pulling it off. Any help appreciated as always!</p>\n\n<p>Regards,\nRyan</p>\n\n<hr>\n\n<p>UPDATE TO QUESTION:</p>\n\n<p><strong>PARENT PAGE:</strong></p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Unilever Sales Portal&lt;/title&gt;\n&lt;style&gt;\n@import url(\"style.css\");\n&lt;/style&gt;\n&lt;script type=\"text/javascript\"&gt;  \n  function showUser(userNumber, str)  \n  {  \n    if (str==\"\")  \n    {  \n      document.getElementById(\"txtHint\" + userNumber).innerHTML=\"\";  \n      return;  \n    }    \n    if (window.XMLHttpRequest)  \n    {// code for IE7+, Firefox, Chrome, Opera, Safari  \n      xmlhttp=new XMLHttpRequest();  \n    }  \n\n    xmlhttp.onreadystatechange=function()  \n    {  \n      if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200)  \n      {  \n        //document.getElementById(\"txtHint\" + userNumber).innerHTML=xmlhttp.responseText; \n        var responseText = xmlhttp.responseText; \n        var description = responseText; \n        var warehouse = \"\"; \n        var sellingUnits = \"\"; \n        if (responseText.indexOf(\"NOT A VALID\") == -1) \n        { \n          description = responseText.substring(12, responseText.indexOf(\",Warehouse:\"));  \n          warehouse = responseText.substring(responseText.indexOf(\",Warehouse:\")+11, responseText.indexOf(\",SellingUnits:\"));  \n          sellingUnits = responseText.substring(responseText.indexOf(\",SellingUnits:\")+15);  \n        } \n\n        document.getElementById(\"whse\" + userNumber).innerHTML = warehouse;  \n        document.getElementById(\"txtHint\" + userNumber).innerHTML = description;  \n        document.getElementById(\"su\" + userNumber).innerHTML = sellingUnits; \n\n      }  \n    }  \n    xmlhttp.open(\"GET\",\"getdata1.php?q=\"+str,true);  \n    xmlhttp.send(); \n  } \n&lt;/script&gt; \n&lt;script type=\"text/javascript\"&gt;  \nfunction selectValue(id) \n{ \n    // open popup window and pass field id \n    window.open('sku.php?id=' + encodeURIComponent(id),'popuppage', \n      'width=400,toolbar=1,resizable=1,scrollbars=yes,height=400,top=100,left=100'); \n} \n\nfunction updateValue(id, value) \n{ \n    // this gets called from the popup window and updates the field with a new value \n    document.getElementById(id).value = value; \n} \n\n&lt;/script&gt; \n&lt;/head&gt;\n</code></pre>\n\n<p><strong>SKU.PHP</strong></p>\n\n<pre><code>&lt;? \n\n  $con = mysql_connect('localhost', 'dbuser', 'dbpass'); \n if (!$con) \n   { \n   die('Could not connect to server: ' . mysql_error()); \n   } \n   $db=mysql_select_db(\"dbname\", $con); \n\n    if (!$db) \n   { \n   die('Could not connect to DB: ' . mysql_error()); \n   } \n\n\n$sql=\"select packcode,category,description,grouping,packconfig,sellingunits,eottpoints from skudata order by category, packcode\";\n$result=mysql_query($sql);\n\n ?&gt; \n&lt;script type=\"text/javascript\"&gt; \nfunction sendValue(value) \n{ \n    var parentId = &lt;?php echo json_encode($_GET['id']); ?&gt;; \n    window.opener.updateValue(parentId, value); \n    window.close(); \n} \n&lt;/script&gt; \n\n &lt;form name=\"selectform\"&gt; \n\n                &lt;table border=0 width=1000 id=\"hor-minimalist-a\"&gt; \n                    &lt;tr&gt; \n                        &lt;th&gt;Pack Code&lt;/th&gt;                       \n                        &lt;th&gt;&amp;nbsp;&lt;/th&gt;  \n                        &lt;th&gt;Category&lt;/th&gt;   \n                        &lt;th&gt;Product Description&lt;/th&gt; \n                        &lt;th&gt;Grouping&lt;/th&gt; \n                        &lt;th&gt;Pack Config&lt;/th&gt;  \n                        &lt;th&gt;SU&lt;/th&gt;  \n                        &lt;th&gt;Points&lt;/th&gt;  \n                    &lt;/tr&gt; \n&lt;?php \n   while($rows=mysql_fetch_array($result)){\n?&gt; \n                    &lt;tr&gt; \n                        &lt;td&gt;&lt;input name=details size=5 value=\"&lt;?php echo $rows['packcode']; ?&gt;\"&gt;&lt;/td&gt; \n                        &lt;td&gt;&lt;input type=button value=\"Select\" onClick=\"sendValue(this.form.details);\"&lt;/td&gt; \n                        &lt;td&gt;&lt;?php echo $rows['category']; ?&gt;&lt;/td&gt; \n                        &lt;td&gt;&lt;center&gt;&lt;?php echo $rows['description']; ?&gt;&lt;/td&gt; \n                        &lt;td&gt;&lt;center&gt;&lt;?php echo $rows['grouping']; ?&gt;&lt;/td&gt; \n                        &lt;td&gt;&lt;center&gt;&lt;?php echo $rows['packconfig']; ?&gt;&lt;/td&gt; \n                        &lt;td&gt;&lt;center&gt;&lt;?php echo $rows['sellingunits']; ?&gt;&lt;/td&gt; \n                        &lt;td&gt;&lt;center&gt;&lt;?php echo $rows['eottpoints']; ?&gt;&lt;/td&gt; \n                    &lt;/tr&gt;                                    \n\n&lt;?php \n    } \n?&gt; \n                    &lt;/table&gt; \n</code></pre>\n\n<p>Here is the images to show the workings.\n<strong>parent page:</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/F9vfp.jpg\" alt=\"enter image description here\"></p>\n\n<p><strong>Popup Page:</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/MNBiA.jpg\" alt=\"enter image description here\"></p>\n\n<p><strong>Parent Page after popup</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/T933x.jpg\" alt=\"enter image description here\"></p>\n\n<p>Thanks again for the help.\nRegards,\nRyan</p>\n",
            "last_activity_date": 1424757881,
            "question_id": 9994120,
            "score": 21,
            "tags": [
                "javascript",
                "popup"
            ],
            "title": "javascript - pass selected value from popup window to parent window input box"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Something like <a href=\"http://jscc.phorward-software.com/\" rel=\"nofollow\">http://jscc.phorward-software.com/</a>, maybe?</p>\n\n<blockquote>\n        <p>JS/CC is the first available parser development system for <a href=\"http://en.wikipedia.org/wiki/ECMAScript\" rel=\"nofollow\" title=\"Get more information about ECMAScript at Wikipedia\">JavaScript and ECMAScript</a>-derivates. It has been developed, both, with the intention of building a productive compiler development system and with the intention of creating an easy-to-use academic environment for people interested in how parse table generation is done general in\nbottom-up parsing.</p>\n\n<p>The platform-independent software unions both: <b>A regular expression-based <a href=\"http://en.wikipedia.org/wiki/Lexer\" rel=\"nofollow\" title=\"Get more information on Lexical Analyzers at Wikipedia\">lexical analyzer</a> generator</b> matching individual tokens from the input character stream and <b>a <a href=\"http://en.wikipedia.org/wiki/LALR_parser\" rel=\"nofollow\" title=\"Get more information on LALR(1) at Wikipedia\">LALR(1)</a> parser generator</b>, computing the parse tables for a given <a href=\"http://en.wikipedia.org/wiki/Context-free_grammar\" rel=\"nofollow\" title=\"Get more information on Context-Free Grammars at Wikipedia\">context-free grammar</a> specification and building a stand-alone, working parser. The context-free grammar fed to JS/CC is defined in a <a href=\"http://en.wikipedia.org/wiki/Backus_Naur_Form\" rel=\"nofollow\" title=\"Get more information on Backus-Naur-Form at Wikipedia\">Backus-Naur-Form</a>-based meta language, and allows the insertion of individual semantic code to be evaluated on a rule's reduction.</p>\n\n<p><b>JS/CC itself has been entirely written in ECMAScript</b> so it can be executed in many different ways: as platform-independent, browser-based JavaScript embedded on a Website, as a Windows Script Host Application, as a compiled JScript.NET executable, as a Mozilla/Rhino or Mozilla/Spidermonkey interpreted application, or a V8 shell script on Windows, *nix, Linux and Mac OSX. However, for productive execution, it is recommended to use the command-line versions. These versions are capable of assembling a complete compiler from a JS/CC parser specification, which is then stored to a .js JavaScript source file.</p></blockquote>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Depending on the design of the 'set of instructions', you may be able to use Javascript's built-in <code>eval</code> function, which parses Javascript source; you may be able to write a simple translator to convert the instructions to Javascript code.</p>\n\n<p>By the way, be very careful about XSS holes.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For simple parsing tasks I'm quite fond of using a variant of Pratt's <a href=\"http://delivery.acm.org/10.1145/520000/512931/p41-pratt.pdf?key1=512931&amp;key2=5174723121&amp;coll=GUIDE&amp;dl=GUIDE&amp;CFID=15151515&amp;CFTOKEN=6184618\" rel=\"nofollow\">Top Down Operator Precedence parser</a>. While Pratt wrote the original paper using an old Lisp dialect, the same concepts can easily be used in most any language. In fact, Douglas Crockford wrote an excellent article on <a href=\"http://javascript.crockford.com/tdop/tdop.html\" rel=\"nofollow\">Top Down Operator Precedence parsing in JavaScript</a>, which might be just what you need.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I was looking for something similar that wouldn't have any security holes and I came across two resources. They don't parse the script, but actually run it in a \"safe\" environment - something you can't guarantee when using the <code>eval</code> function. So, I don't know if it's exactly what you are looking for but take a look:</p>\n\n<ol>\n<li><a href=\"http://github.com/eligrey/jsandbox\" rel=\"nofollow\">jsandbox</a> - Javascript sandbox</li>\n<li><a href=\"http://code.google.com/p/google-caja/\" rel=\"nofollow\">Google Caja</a> - virtual iframe.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you want to build JavaScript parsers and code generators,\ncheck out the MetaII implementation in Javascript.</p>\n\n<p>A MetaII Compiler tutorial walks you through building a completely self-contained compiler system that can translate itself and other languages:</p>\n\n<p><a href=\"http://www.bayfronttechnologies.com/mc_tutorial.html\">MetaII Compiler Tutorial</a></p>\n\n<p>This is all based on an amazing little 10-page technical paper by Val Schorre: META II: A Syntax-Oriented Compiler Writing Language from honest-to-god 1964.   The MetaII compiler complete self-description is about 30 lines! I learned how to build compilers from this back in 1970. There's a mind-blowing moment when you finally grok how the compiler can regenerate itself....</p>\n\n<p>The tutorial explains MetaII, how it works, and implements MetaII compiling MetaII into JavaScript.  You can easily modify this compiler to parse other langauges, and produce different Javascript.</p>\n\n<p>I know the website author from my college days, but have nothing to do with the website.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>if you're really looking for just a lexer, try <a href=\"http://code.google.com/p/google-code-prettify/\" rel=\"nofollow\">prettify</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want a lexer and nothing but a lexer then take a look at this: <a href=\"https://github.com/aaditmshah/lexer\" rel=\"nofollow\">https://github.com/aaditmshah/lexer</a></p>\n\n<p>It's a pure JavaScript lexer with lots of powerful features written in just a few lines of code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Jison is probably the best and most active lexer &amp; parser generator out there for Javascript.  It mimics Bison and Yacc.</p>\n\n<p>Jison: <a href=\"http://zaach.github.io/jison/\">http://zaach.github.io/jison/</a></p>\n\n<p>If you want just a light weight lexer (~100 sloc) you can take a look at Lexed.js:  <a href=\"https://github.com/tantaman/lexed.js\">https://github.com/tantaman/lexed.js</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://www.antlr.org/\" rel=\"nofollow\">Antlr version 4.5</a> now has a <a href=\"https://theantlrguy.atlassian.net/wiki/display/ANTLR4/JavaScript+Target\" rel=\"nofollow\">Javascript target</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a project where a user needs to define a set of instructions for a ui that is completely written in javascript. I need to have the ability to parse a string of instructions and then translate them into instructions. Is there any libraries out there for parsing that are 100% javascript? Or a generator that will generate in javascript? Thanks!</p>\n",
            "last_activity_date": 1424153417,
            "question_id": 1823612,
            "score": 21,
            "tags": [
                "javascript",
                "parsing",
                "generator",
                "lexer"
            ],
            "title": "Lexer written in Javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"http://javascript.crockford.com/private.html\" rel=\"nofollow\">Douglas can!</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It's hard to beat Crockford:  <a href=\"http://www.crockford.com/javascript/private.html\" rel=\"nofollow\">http://www.crockford.com/javascript/private.html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Variables not declared with var are global in scope. \nFunctions introduce a scope, but note that if blocks and other blocks do not introduce a scope.</p>\n\n<p>I could also see much information about this by Googling Javascript scope. That's really what I would recommend.\n<a href=\"http://www.digital-web.com/articles/scope_in_javascript/\" rel=\"nofollow\">http://www.digital-web.com/articles/scope_in_javascript/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<h3>Global variables</h3>\n\n<p>Every variable in Javascript is a named attribute of an object.  For example:-</p>\n\n<pre><code>var x = 1;\n</code></pre>\n\n<p>x is added to the global object.  The global object is provided by the script context and may already have a set of attributes.  For example in a browser the global object is window.  An equivalent to the above line in a browser would be:-</p>\n\n<pre><code>window.x = 1;\n</code></pre>\n\n<h3>Local variables</h3>\n\n<p>Now what if we change this to:-</p>\n\n<pre><code>function fn()\n{\n    var x = 1;\n}\n</code></pre>\n\n<p>When <code>fn</code> is called a new object is created called the <em>execution context</em> also referred to as the <em>scope</em> (I use these terms interchangeably).  <code>x</code> is added as an attribute to this scope object.  Hence each call to <code>fn</code> will get its own instance of a scope object and therefore its own instance of the x attribute attached to that scope object.</p>\n\n<h3>Closure</h3>\n\n<p>Now lets take this further:-</p>\n\n<pre><code>function fnSequence()\n{\n    var x = 1;\n    return function() { return x++; }\n}\n\nvar fn1 = fnSequence();\nvar fn2 = fnSequence();\n\nWScript.Echo(fn1())\nWScript.Echo(fn2())\nWScript.Echo(fn1())\nWScript.Echo(fn2())\nWScript.Echo(fn1())\nWScript.Echo(fn1())\nWScript.Echo(fn2())\nWScript.Echo(fn2())\n</code></pre>\n\n<p><strong>Note:</strong> Replace <code>WScript.Echo</code> with whatever writes to stdout in your context.</p>\n\n<p>The sequence you should get is :-</p>\n\n<p>1 1 2 2 3 4 3 4</p>\n\n<p>So what has happened here?  We have <code>fnSequence</code> which initialises a variable <code>x</code> to 1 and returns an anonymous function which will return the value of <code>x</code> and then increment it.</p>\n\n<p>When this function is first executed a scope object is created and an attribute <code>x</code> is added to that scope object with the value of 1.  Also created in the same execution object is an anonymous function.  Each function object will have a scope attribute which points to the execution context in which it is created.  This creates what is know as a <em>scope chain</em> which we will come to later.  A reference to this function is returned by <code>fnSequence</code> and stored in <code>fn1</code>.</p>\n\n<p>Note that <code>fn1</code> is now pointing at the anonymous function and that the anonymous function has a scope attribute pointing at a scope object that still has an <code>x</code> attribute attached.  This is known as <code>closure</code> where the contents of an execution context is still reachable after the function it was created for has completed execution.</p>\n\n<p>Now this same sequence happens when assigning to <code>fn2</code>.  <code>fn2</code> will be pointing at a different anonymous function that was created in a different execution context that was create when <code>fnSequence</code> was called this second time.</p>\n\n<h3>Scope Chain</h3>\n\n<p>What happens when the function held by <code>fn1</code> is executed the first time?  A new execution context is created for the execution of the anonymous function.  A return value is to be found from the identifier <code>x</code>.  The function's scope object is inspected for an <code>x</code> attribute but none is found.  This is where the <em>scope chain</em> comes in.  Having failed to find <code>x</code> in the current execution context JavaScript takes the object held by the function's scope attribute and looks for <code>x</code> there.  It finds it since the functions scope was created inside an execution of <code>fnSequence</code>, retrieves its value and increments it.  Hence 1 is output and the <code>x</code> in this scope is incremented to 2.</p>\n\n<p>Now when <code>fn2</code> is executed it is ultimately attached to a different execution context whose <code>x</code> attribute is still 1.  Hence executing <code>fn2</code> also results in 1.</p>\n\n<p>As you can see <code>fn1</code> and <code>fn2</code> each generate their own independent sequence of numbers.</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>Functions introduce a scope. You can declare functions inside other functions, thereby creating a nested scope. The inner scope can access the outer scope, but the outer can not access the inner scope.</p>\n\n<p>Variables are bound to a scope, using the <strong>var</strong> keyword. All variables are implicitly bound to the top-level scope. So if you omit the var keyword, you are implicitly referring to a variable bound to the top level. In a browser, the top level is the <strong>window</strong> object. Note that <strong>window</strong> is it self a variable, so <strong>window</strong> == <strong>window.window</strong></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Can someone provide an explanation of variable scope in JS as it applies to objects, functions and closures? </p>\n",
            "last_activity_date": 1362594074,
            "question_id": 99927,
            "score": 19,
            "tags": [
                "javascript",
                "oop"
            ],
            "title": "OO Javascript : Definitive explanation of variable scope"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>.js.erb</code> files are for controller actions, such as create, when you want javascript to be executed when the action completes. For example, when you want to submit a form via ajax and want display an alert when everything is done, you would put the </p>\n\n<pre><code>$('#business_submit').click(...)\n</code></pre>\n\n<p>in your application.js or *.html.erb, and your create.js.erb could look like this:</p>\n\n<pre><code>alert('New object id: ' + &lt;%= new_object.id %&gt;);\n</code></pre>\n\n<p>This way, the javascript that is getting returned to the browser can be first rendered by Erb, allowing you to insert custom strings/variables/etc just like you can in .html.erb templates.</p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>Per my view, the reason to have js.erb files is to gain access to rails helpers like the <code>something_url</code> routes. I've found, most of the time, that those URLs are already embedded in the <code>&lt;form&gt;</code> tag or something like that, so I have little need for it. Processing everything with .erb also prevents you from caching javascript as aggressively.</p>\n\n<p>For those reasons, I think the most appropriate decision is to put javascript in the most unobtrusive place possible: application.js (or other static scripts). Especially with jQuery, that's really as it was intended.</p>\n\n<p>By the way, <a href=\"http://github.com/kernow/javascript%5Fauto%5Finclude\" title=\"Javascript Auto Include at Github\"><code>javascript_auto_include</code></a> is a nice, tidy plugin for organizing your javascript according to the views that are rendered. Rather than stashing everything in <code>application.js</code>, you might consider this.</p>\n\n<h2>js.erb versus js.rjs</h2>\n\n<p>One of these two (<code>.erb</code>) is really for generating javascript from a template. This is the sort of thing you would include as a  tag in the HTML. The other (<code>.rjs</code>) is about controlling page content in an AJAX response, and would not be run until such an AJAXy call was made.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>What is the advantage to putting you javascript for your rails app into a .js.erb file instead of just throwing it in your application.js file? I have a create button for businesses so should I put the code into a create.js.erb file or put it into my application.js using:</p>\n\n<pre><code>$(\"#business_submit\").click(function() {}\n</code></pre>\n\n<p>All that aside is that I have my create button</p>\n\n<pre><code>    $('.error').hide();\n$(\"#business_submit\").click(function() {\n    // validate and process form here\n\n    $('.error').hide();\n    var name = $(\"input#business_name\").val();\n    if (name == \"\"  || name == \"Required Field\") {\n        $('#namelabel').show()\n        $(\"#business_name\").focus();\n        return false;\n    }\n    var address = $(\"#business_address\").val();\n    if (address == \"\"  || address == \"Required Field\") {\n        $('#addresslabel').show();\n        $(\"#business_address\").focus();\n        return false;\n    }\n    var city = $(\"#business_city\").val();\n    if (city == \"\" || city == \"Required Field\") {\n        $('#citylabel').show();\n        $('#business_city').focus();\n        return false;\n    }\n    var state = $(\"#business_state\").val();\n    if (state == \"\"  || state == \"Required Field\") {\n        $('#statelabel').show();\n        $(\"#business_state\").focus();\n        return false;\n    }\n    var zip = $(\"#business_zip\").val();\n    if (zip == \"\"  || zip == \"Required Field\") {\n        $('#ziplabel').show();\n        $(\"#business_zip\").focus();\n        return false;\n    }\n    var phone = $(\"#business_phone\").val();\n    if (phone == \"\"  || phone == \"Required Field\") {\n        $('#phonelabel').show();\n        $(\"#business_phone\").focus();\n        return false;\n    }\n\n     var category = $(\"#business_business_category_id\").val();\n    if (category == \" - Choose one - \") {\n        $('#categorylabel').show();\n        $(\"#business_business_category_id\").focus();\n        return false;\n    }\n    $(\"#new_business\")[0].reset();\n    $(\"#new_business\").toggle();\n   return false;\n});\n</code></pre>\n\n<p>This works great in my .js file but when I click create it doesn't actually send the information they typed in the form to the database.  So I tried copy pasting the code into the .js.erb file.  Now the form is submitted to the database when I click create, but half the javascript isn't working. The $('.error').hide(); isn't hiding my errors and they are all showing up regardless. $(\"#new_business\")[0].reset(); isn't reseting my form, and there is no validation checks when I click create.  So I either have a fully functional form that doesn't submit or one that submits but isn't really functional. Which one should I try to get working?  </p>\n\n<p>I see a lot of code with $.ajax but I can't figure it out for the life of me. I tried for a bit and I started getting some forgery protection errors in rails which is a whole other problem.</p>\n",
            "last_activity_date": 1256247381,
            "question_id": 1127697,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "ruby-on-rails",
                "forms"
            ],
            "title": ".js.erb VS .js"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>First, make a request for the XML with $.get or however you want. \nThen:</p>\n\n<pre><code>clientID = $(myXML).find(\"client_id\").text();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>To fix the expected response data type to XML right in your request, set the <code>dataType</code> parameter to \"xml\". If you don't, jQuery uses the response headers to make a guess.</p>\n\n<p>It is supported on the <code>$.ajax()</code> function as part of the <code>options</code> object, as well as on <code>$.get()</code> and <code>$.post()</code>:</p>\n\n<pre><code>jQuery.ajax( options )\njQuery.get( url, data, callback, type )\njQuery.post( url, data, callback, type )\n</code></pre>\n\n<p>So you could do this:</p>\n\n<pre><code>$.ajax({\n  type: 'GET',\n  url: \"foo.aspx\",\n  data: {\n    key: \"value\"\n  },\n  dataType: \"xml\",\n  success: function (xml){\n    var clientid = $(xml).find('client_id').first().text();\n    alert(clientid);\n  }   \n});\n</code></pre>\n\n<hr>\n\n<p>Note that as of jQuery 1.5 you can use a nicer version of the above Ajax request:</p>\n\n<pre><code>$.get(\"foo.aspx\", {\n  key: \"value\"\n})\n.done(function (xml){\n  var clientid = $(xml).find('client_id').first().text();\n  alert(clientid);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>Use something like this:</p>\n\n<pre><code>$.ajax({ type: 'GET', url: 'test.xml', dataType: 'xml', success: function(xml){\n    \t\t$('response', xml).each(function() {alert($(this).find('client_id').text());});\t\t\t\n    \t\t}});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>just to complement, i you use $.get: </p>\n\n<pre><code>$.get($('file.xml').val(),{  } , doSomethingWithData);\n</code></pre>\n\n<p>function doSomethingWithData(data) {</p>\n\n<pre><code> $(data).find(\"marker\").each(function() {\n\n\n\t\tvar marker = $(this);\n\n\n\t alert(marker.attr(\"lat\"));\n\n });\n</code></pre>\n\n<p>here tpicall used request.responseXML is the data in this case, and you have to encapsulate it in $(data) in order to work (this make me break the head about 3 hours ;S)  </p>\n\n<pre><code>\t\t\t\t\t //    alert(markerh);\n\n\t\t\t\t}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>HI all,<br />\nI use jQuery to parse my xml\u00a0responses.</p>\n\n<p>I have this xml :</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;response status=\"ok\"&gt;\n  &lt;client_id&gt;185&lt;/client_id&gt;\n&lt;/response&gt;\n</code></pre>\n\n<p>And i want to get \"client_id\" value.</p>\n",
            "last_activity_date": 1358869565,
            "question_id": 510995,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "xml"
            ],
            "title": "parse xml response with jQuery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You could inject a script element into HEAD of the document with a callback that passes the cookie you need to whatever function needs it. </p>\n\n<p>Something like:</p>\n\n<pre><code> &lt;script type=\"text/javascript\"&gt;\n   var newfile=document.createElement('script');\n   newfile.setAttribute(\"type\",\"text/javascript\");\n   newfile.setAttribute(\"src\", 'http://first.com/doAjax?getCookie&amp;callback=passCookie');\n   document.getElementsByTagName(\"head\")[0].appendChild(newfile);\n &lt;/script&gt;\n</code></pre>\n\n<p>And the page first.com/doAjax?getCookie could do this:</p>\n\n<pre><code>     passCookie({'name':'mycookie', 'value':'myvalue'});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Put this PHP-File to first.com:</p>\n\n<pre><code>//readcookie.php    \necho $_COOKIE['cookiename'];\n</code></pre>\n\n<p>On second.com you can use this javascript to get the value:</p>\n\n<pre><code>function readCookieCallback()\n{\n   if ((this.readyState == 4) &amp;&amp; (this.status == 200))\n   {\n     alert(\"the value of the cookie is: \"+this.responseText);\n   } \n   else if ((this.readyState == 4) &amp;&amp; (this.status != 200))\n   {\n     //error...\n   }\n}\n\n\nfunction buttonClickOrAnything()\n{\n  var refreshObject = new XMLHttpRequest();\n  if (!refreshObject)\n  {\n    //IE6 or older\n    try\n    {\n      refreshObject = new ActiveXObject(\"Msxml2.XMLHTTP\");\n    }\n    catch (e)\n    {\n      try\n      {\n        refreshObject = new ActiveXObject(\"Microsoft.XMLHTTP\");\n      }\n      catch (e)\n      {\n        return;\n      }\n    }\n  }\n  refreshObject.onreadystatechange = readCookieCallback;\n  refreshObject.open(\"GET\", \"http://www.first.com/readcookie.php\");\n  refreshObject.send();\n}\n</code></pre>\n\n<p>Regards,\nRobert</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For SETTING cookies you can change my script as follows:</p>\n\n<p>The new PHP-Script:</p>\n\n<pre><code>//writecookie.php\nsetcookie($_GET['c'], $_GET['v']);\n</code></pre>\n\n<p>And the JavaScript:</p>\n\n<pre><code>function buttonClickOrAnything()\n{\n  var refreshObject = new XMLHttpRequest();\n  if (!refreshObject)\n  {\n    //IE6 or older\n    try\n    {\n      refreshObject = new ActiveXObject(\"Msxml2.XMLHTTP\");\n    }\n    catch (e)\n    {\n      try\n      {\n        refreshObject = new ActiveXObject(\"Microsoft.XMLHTTP\");\n      }\n      catch (e)\n      {\n        return;\n      }\n    }\n  }\n  refreshObject.open(\"GET\", \"http://www.first.com/writecookie.php?c=cookiename&amp;v=cookievalue\");\n  refreshObject.send();\n}\n</code></pre>\n\n<p>That should work on all browsers.</p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>Haven't been able to find anything particular to this situation online so here i go...\nI need to set/get the cookies stored at \"first.com\" while browsing \"second.com\", I have full access of \"first.com\" but i only have javascript access (can manipulate the DOM as i want) on \"second.com\".</p>\n\n<p>My first approach was to create an iframe on second.com (with js) that loaded a page like \"first.com/doAjax?setCookie=xxx\" and that did an ajax call to say \"first.com/setCookie?cookieData=xxx\" which would set the cookie on \"first.com\" with the data we passed around. </p>\n\n<p>That pretty much worked fine for setting the cookie on first.com from second.com - for getting a cookie I basically followed the same procedure, created the iframe that loaded \"first.com/doAjax?getCookie\" and that would do an ajax call to say \"first.com/getCookie\" which would read the cookie info on first.com and return it as a JSON object. </p>\n\n<p>The problem is that I'm unable to bring that JSON cookie object back to \"second.com\" so I can read it, well maybe i could just bring it when the Ajax call is complete using \"window.top\" but there's timing issues because its not relative to when the iframe has been loaded. I hope i am clear and was wondering if there's an easier solution rather than this crazy iframe->ajax crap, also seems like this wont even work for getting cookies in SAFARI.</p>\n",
            "last_activity_date": 1371300943,
            "question_id": 402348,
            "score": 18,
            "tags": [
                "javascript",
                "dns",
                "cookies"
            ],
            "title": "Getting setting cookies on different domains, with javascript or other"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I agree. Once it is uploaded to somewhere the user's browser can access then it is pretty easy to get the size.</p>\n\n<pre><code>var img = document.createElement(\"img\");\nimg.src = \"http://my.website.com/usersUploadedImage.jpg\";\nvar w = img.width;\nvar h = img.height;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The file is just a file, you need to create an image like so:</p>\n\n<pre><code>var _URL = window.URL || window.webkitURL;\n$(\"#file\").change(function (e) {\n    var file, img;\n    if ((file = this.files[0])) {\n        img = new Image();\n        img.onload = function () {\n            alert(this.width + \" \" + this.height);\n        };\n        img.src = _URL.createObjectURL(file);\n    }\n});\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/4N6D9/1/\">http://jsfiddle.net/4N6D9/1/</a></p>\n\n<p>I take it you realize this is only supported in a few browsers. Mostly firefox and chrome, could be opera as well by now.</p>\n",
                    "is_accepted": true,
                    "score": 36
                }
            ],
            "body": "<p>I have a JPS with a form in which a user can put an image:</p>\n\n<pre><code>&lt;div class=\"photo\"&gt;\n    &lt;div&gt;Photo (max 240x240 and 100 kb):&lt;/div&gt;\n    &lt;input type=\"file\" name=\"photo\" id=\"photoInput\" onchange=\"checkPhoto(this)\"/&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I have written this js:</p>\n\n<pre><code>function checkPhoto(target) {\n    if(target.files[0].type.indexOf(\"image\") == -1) {\n        document.getElementById(\"photoLabel\").innerHTML = \"File not supported\";\n        return false;\n    }\n    if(target.files[0].size &gt; 102400) {\n        document.getElementById(\"photoLabel\").innerHTML = \"Image too big (max 100kb)\";\n        return false;\n    }\n    document.getElementById(\"photoLabel\").innerHTML = \"\";\n    return true;\n}\n</code></pre>\n\n<p>which works fine to check file type and size. Now I want to check image width and height but I cannot do it.<br>\nI have tried with <code>target.files[0].width</code> but I get <code>undefined</code>. With other ways I get <code>0</code>.\n<br>Any suggestions?</p>\n",
            "last_activity_date": 1401026756,
            "question_id": 8903854,
            "score": 17,
            "tags": [
                "javascript",
                "image",
                "file-upload",
                "image-size"
            ],
            "title": "Check image width and height on upload with Javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>As long as your users aren't using old versions of Safari, Chrome or Opera, you're in luck: use <code>document.elementFromPoint(x, y)</code> (<a href=\"http://msdn.microsoft.com/en-us/library/ms536417%28VS.85%29.aspx\">MSDN ref</a>, <a href=\"https://developer.mozilla.org/En/DOM%3adocument.elementFromPoint\">Mozilla ref</a>, <a href=\"http://www.quirksmode.org/blog/archives/2010/06/more_ie9_goodne.html\">QuirksMode article</a>):</p>\n\n<blockquote>\n  <p>Returns the element from the document\n  ... which is the topmost element which\n  lies under the given point.</p>\n</blockquote>\n\n<p>If you need to support older browsers, I can't think of many options other than what you suggest (traverse the entire DOM, looking at element positions and sizes and seeing if any of them encapsulate your (x, y)).</p>\n\n<p>I don't think the event simulation will work but it is an interesting idea. My understanding of event dispatching is you specify the target that the event is for, which is precisely what you are trying to find out in the first place.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>In IE exist <code>document.body.componentFromPoint(x,y)</code>. I don't know if there is a cross browser implementation.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is probably not the best solution, but you can traverse the dom tree starting with finding co-ordinates of ancestor nodes that contains your x and y positions and quickly get to the leaf node that contains your co-ordinates. For getting the positions of a node in a cross browser way you can look at the JS toolkits. One that I have used is dojo. Take a look at dojo._getMarginBox <a href=\"http://o.aolcdn.com/dojo/1.3/dojo/dojo.xd.js.uncompressed.js\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>document.elementFromPoint(x,y)\n</code></pre>\n\n<p>Documented <a href=\"https://developer.mozilla.org/en/DOM/document.elementFromPoint\" rel=\"nofollow\">here</a> for Firefox 3 and <a href=\"http://msdn.microsoft.com/en-us/library/ms536417%28VS.85%29.aspx\" rel=\"nofollow\">here</a> for IE, but see <a href=\"http://www.quirksmode.org/dom/w3c%5Fcssom.html#t20\" rel=\"nofollow\">quirksmode</a> for cross-browser differences.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use jQuery for that. I'd bind all needed dom elements to the click event, this will give me appropriate dom object on click as well as <a href=\"http://docs.jquery.com/Tutorials%3AMouse%5FPosition\" rel=\"nofollow\" title=\"How do I find the mouse position?\">mouse position</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have the coordinates (X,Y) of a point in an HTML document. How do I determine what DOM node is at those coordinates?</p>\n\n<p>Some ideas:</p>\n\n<ul>\n<li>Is there a DOM hit test function that I missed, that takes a point (X,Y) and returns the DOM element there?</li>\n<li>Is there an efficient way to walk the DOM element tree to find the containing element? This seems like it would be tricky because of absolutely positioned elements.</li>\n<li>Is there a way to simulate an event at a given (X,Y) position such that the browser ends up creating an event object that has a pointer to the element?</li>\n</ul>\n\n<p>(Background: I'm embedding Qt's QWebView in a native application. I'm trying to vary the context menu that the Qt widget provides based on the DOM node that the mouse is over, but Qt 4.5 cannot hit test to a DOM element, though that functionality is coming in 4.6. So I'm hoping I can toss the the coordinate into Javascript and do the hit testing there with DOM APIs.)</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1314939112,
            "question_id": 1569775,
            "score": 17,
            "tags": [
                "javascript",
                "qt",
                "dom",
                "hittest"
            ],
            "title": "How do I find the DOM node that is at a given (X,Y) position? (Hit test)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>To comprehend the actual source would require some degree of Javascript knowledge - If you don't already know what's going on then you basically need to learn more Javascript.</p>\n\n<p>Key things to learn:</p>\n\n<ul>\n<li>Prototypal inheritance ( the\ninheritance used in ECMAScript, the\ncore language on which Javascript is\nbased upon )</li>\n<li>Lambdas ( inline functions )</li>\n<li>Closures ( outer variables from outer scope accessible from inner functions )</li>\n<li>Regular expressions ( used for matching the selector strings fed to jQuery )</li>\n<li>DOM ( The DOM API which is used to interact with markup languages )</li>\n</ul>\n\n<p>When learning, use Firebug so you can evaluate your expressions interactively and immediately see what's going on </p>\n\n<p>An excellent free resource for learning that I would recommend:\n<a href=\"http://eloquentjavascript.net/contents.html\">http://eloquentjavascript.net/contents.html</a></p>\n\n<p>If you're a beginner to DOM Scripting/Javascript:</p>\n\n<ul>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/1590595335\">http://www.amazon.com/DOM-Scripting-Design-JavaScript-Document/dp/1590595335/ref=sr%5F1%5F19?ie=UTF8&amp;s=books&amp;qid=1252905196&amp;sr=1-19</a></li>\n</ul>\n\n<p>If you're intermediate level:</p>\n\n<ul>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\">http://www.amazon.com/gp/product/0596517742/ref=s9%5Fsimz%5Fgw%5Fs0%5Fp14%5Fi3?pf%5Frd%5Fm=ATVPDKIKX0DER&amp;pf%5Frd%5Fs=center-2&amp;pf%5Frd%5Fr=0KCJ77GKHPREBFD3WAKG&amp;pf%5Frd%5Ft=101&amp;pf%5Frd%5Fp=470938631&amp;pf%5Frd%5Fi=507846</a></li>\n</ul>\n\n<p>If you're past intermediate level and want to be an expert:</p>\n\n<ul>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/0764579088\">http://www.amazon.com/Professional-JavaScript-Developers-Wrox-Guides/dp/0764579088</a> </li>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/1590597273\">http://www.amazon.com/Pro-JavaScript-Techniques-John-Resig/dp/1590597273/ref=sr%5F1%5F10?ie=UTF8&amp;s=books&amp;qid=1252905139&amp;sr=1-10</a></li>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/159059908X\">http://www.amazon.com/JavaScript-Design-Patterns-Recipes-Problem-Solution/dp/159059908X/ref=sr%5F1%5F16?ie=UTF8&amp;s=books&amp;qid=1252905196&amp;sr=1-16</a></li>\n</ul>\n\n<p>Other technical references:</p>\n\n<ul>\n<li><a href=\"http://www.w3.org/DOM/\">http://www.w3.org/DOM/</a></li>\n<li><a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\">http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf</a></li>\n<li><a href=\"https://developer.mozilla.org/en/JavaScript\">https://developer.mozilla.org/en/JavaScript</a></li>\n</ul>\n\n<p>If you have specific questions about a certain code snippet just ask here. Another resource that I can recommend for more advanced questions would be the jQuery mailing list or irc://irc.freenode.net/jquery where jresig hangs out himself and comes by and answers questions. There are other guru ops who reside there like ajpiano/paulirish/nlogax. </p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>If you're looking for insight about how jQuery is written, the uncompressed source code is pretty readable.  There are a few books mentioned in <a href=\"http://stackoverflow.com/questions/74884/good-javascript-books\">SO74884</a> that are worth a read.  Resig's book doesn't really cover jQuery at all, but is good about teaching object oriented javascript.  </p>\n\n<p>If you are having a problem understanding something in jQuery's code (why it was done/how it works), you should post a question with some code bits to Stack Overflow, asking for some help understanding it.  </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Why not learn from the man himself, John Resig, here : <a href=\"http://ejohn.org/apps/learn/\" rel=\"nofollow\">http://ejohn.org/apps/learn/</a></p>\n\n<p>Based on that, I'd definitely get the book your friend suggested.</p>\n\n<p>You can also find some more nice resources on his website, courtesy of <a href=\"http://www.google.com/search?q=site%3Aejohn.org%2Fapps\" rel=\"nofollow\">googling site:ejohn.org/apps</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am trying to understand the internals of how jquery framework is written and finding it hard to understand the code.</p>\n\n<p>Does anyone have any suggestions regarding a good way to get started.</p>\n\n<p>Thanks for all the useful input. Editing the topic since I had limited space for adding individual comments.\nI have written a lot of basic javascript code. \nI know basic DOM, have used event handlers, know CSS basics. I have read about many of the topics you have mentioned and I am familiar with it although not an expert and have not coded some of the advanced topics like closures. Here are the books I have used so far Head first javascript - good in the beginning as a starter.\nBooks my friends have recommended and I use regularly are Javascript - The Definitive Guide, Javascript - The good parts (I read this a while ago and it was hard for me at the time).\nMy friend just recommended Secrets of Javascript Ninja - John Resig. Seems like a good one.\nI ordered the Javascript Design patterns book you recommend last week</p>\n\n<p>I have read the <a href=\"https://developer.mozilla.org/en/JavaScript\" rel=\"nofollow\">https://developer.mozilla.org/en/JavaScript</a> you pointed me to. I will checkout some of the other resources you pointed me to.</p>\n\n<p>Let me think a little more regarding if I want to do a little more reading before I post specific questions I have on jquery.</p>\n\n<p>Thanks\nSusan</p>\n",
            "last_activity_date": 1295954928,
            "question_id": 1419731,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "dom"
            ],
            "title": "jQuery framework internals"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This happens when the page itself defines a global variable called <code>console</code>, for example.  If the page is browser-sniffing to decide whether to define it, the behavior could differ in different browsers.</p>\n\n<p>In the case of Firefox it also happens when Firebug is installed and its console is enabled, since that overrides the default <code>window.console</code>.</p>\n",
                    "is_accepted": true,
                    "score": 79
                },
                {
                    "body": "<p>I had the same exact error message, and once I removed firebug, it went away.  </p>\n\n<p>I'm not saying you should remove firebug, I love firebug, but that is most probably the source of the error for you as well.  One more note, the error was still there even if firebug was turned off (disabled) for that particular page.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Right click over firebug console tab and uncheck \"enabled\" option (the first one).  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In Firefox  select the Inspect Element in Console tab and select <strong>Java script</strong>  tab or other way to on select <strong>Security tab</strong> and on warning and errors.</p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>How come I get this message from Firefox Web Console </p>\n\n<blockquote>\n  <p>The Web Console logging API (console.log, console.info, console.warn, console.error) has been disabled by a script on this page</p>\n</blockquote>\n\n<p>The same webpage can print messages in Chrome Console but not Firefox. I opened the same webpage in another computers' Firefox (don't know what version) Web Console can print messages. My Firefox version is the latest, 8.0.</p>\n",
            "last_activity_date": 1424064026,
            "question_id": 8212373,
            "score": 74,
            "tags": [
                "javascript",
                "html",
                "firefox"
            ],
            "title": "Firefox Web Console Disabled?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I have noticed that if I disable the cache, I no longer get this error in the console.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Check your code for duplicated meta cache-control and remove one of them:</p>\n\n<pre><code>&lt;meta http-equiv=\"cache-control\" content=\"no-cache\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The error doesn't occur if Firebug (in my case 1.8) is disabled.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've noticed that this error can happen if you write to the document with document.write after the document has completed loading (e.g. in a function called from JQuery's $(document).ready() method). When this happens, it seems that Firefox discards the old document and writes a new one. I don't know if this is new behavior or not. It seems that when you try to operate on the old document, e.g. with JQuery selectors, you get this error. For me, fixing the script in question to not call document.write after the document had loaded fixed the error.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>In my case, it was <code>document.write</code> method causing the problem on Firefox 4, 5, 6 on Windows. Linux versions are unaffected. What I had to do is to overwrite <code>document.write</code> method.</p>\n\n<p>I aware that <code>document.write</code> shouldn't be used these days, but <code>deployJava.js</code>, a standard Java Applet deployment script written by Sun/Oracle, is using it. Google is using it in Google AdSense ads. <code>document.write</code> is everywhere.</p>\n\n<pre><code>&lt;script&gt;\n    var documentWriteOutput = '';\n    var got = document.write;\n    document.write = function(arg) { documentWriteOutput += arg; }\n&lt;/script&gt;\n&lt;script src=\"badScriptThatIsUsingDocumentWrite.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n    runBadScriptThatIsUsingDocumentWrite();\n    document.write = got;\n    // Do whatever you want with the documentWriteOutput\n    // e.g. $('#somewhere').html(documentWriteOutput);\n&lt;/script&gt;\n</code></pre>\n\n<p>I hope this helps. However, I saw lots of \"solutions\" on the Internet that didn't work for me. It may mean that <em>\"Attempt to run compile-and-go script on a cleared scope\"</em> is a Firefox JavaScript engine problem/bug.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>i had this problem too but I did a clean re-installation of FireFox. </p>\n\n<p>after that the error was gone.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I got this error when I tried adding events on elements appended from a same domain iframe. Added clone() and errors stopped.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For me (Firefox 11, Firebug 1.9.1) it happens sometimes after I refresh the page (either F5 or CTRL+F5) while debugger is paused on a breakpoint.</p>\n\n<p>The solution seems to be to continue the execution of the script, and <strong>refresh the page only when Firebug is <em>not</em> paused</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>It has nothing to do with firebug. The reason it \"goes away\" when firebug is disabled is that you are no longer seeing the exception. The cause of this is having an handler attached to an event that is now null but not properly cleaned up. You need to make sure that handler is properly disposed of, otherwise the event still fires the reference to the handler.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It is: menu Firebug -> Console -> Show Chrome Errors</p>\n\n<p>switch off, end of story ;)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Since upgrading to Firefox 4.0, I've noticed that I'm occasionally getting an error in the console stating:</p>\n\n<blockquote>\n  <p>attempt to run compile-and-go script on a cleared scope</p>\n</blockquote>\n\n<p>The only information I can find about this on the net currently is on the <a href=\"http://groups.google.com/group/mozilla.dev.platform/browse_thread/thread/10ff69b04b88e06f\">mozilla groups forum</a>, where it is suggested that it's something to do with session restoring. In my case, though I haven't been able to reliably reproduce the error, it happens at any time, not just after a restore.</p>\n\n<p>What's the deal? How do I stop the error?</p>\n",
            "last_activity_date": 1340225606,
            "question_id": 5433415,
            "score": 66,
            "tags": [
                "javascript",
                "firefox",
                "firefox4"
            ],
            "title": "Error: Attempt to run compile-and-go script on a cleared scope"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>When an unauthorized request comes in, the entire request is URL encoded, and added as a query string to the request to the authorization form, so I can see where this may result in a problem given your situation.</p>\n\n<p>According to MSDN, the correct element to modify to reset maxQueryStringLength in web.config is the <code>&lt;httpRuntime&gt;</code> element inside the <code>&lt;system.web&gt;</code> element, see <a href=\"http://msdn.microsoft.com/en-us/library/e1f13641%28v=vs.100%29.aspx\">httpRuntime Element (ASP.NET Settings Schema)</a>.  Try modifying that element.</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>In the root <code>web.config</code> for your project, under the <code>system.web</code> node:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;system.web&gt;\n    &lt;httpRuntime maxUrlLength=\"10999\" maxQueryStringLength=\"2097151\" /&gt;\n...\n</code></pre>\n\n<p>In addition, I had to add this under the <code>system.webServer</code> node or I got a security error for my long query strings:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;system.webServer&gt;\n    &lt;security&gt;\n      &lt;requestFiltering&gt;\n        &lt;requestLimits maxUrl=\"10999\" maxQueryString=\"2097151\" /&gt;\n      &lt;/requestFiltering&gt;\n    &lt;/security&gt;\n...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 93
                },
                {
                    "body": "<p>For anyone else that may encounter this problem and it is not solved by either of the options above, this is what worked for me. </p>\n\n<pre><code>1. Click on the website in IIS\n2. Double Click on Authentication under IIS\n3. Enable Anonymous Authentication\n</code></pre>\n\n<p>I had disabled this because we were using our own Auth, but that lead to this same problem and the accepted answer did not help in any way.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p><img src=\"http://i.stack.imgur.com/aJHgW.png\" alt=\"enter image description here\"><br>\nI have a MVC3 site in C#, I have a particular view being fed query parameters from a JavaScript function, the function redirects to the site via </p>\n\n<blockquote>\n  <p>window.location.href = \"../ActionName?\" + query_string;</p>\n</blockquote>\n\n<p>query_string being the dynamic query parameters string built by the JavaScript function.</p>\n\n<p>The reason for this weirdness is that sometimes the same function passes the URL to an ASP.Net webform due to it having to use the <strong>reportviewer</strong> control, the alternate action is to save some parameters in this case it passes to the view. (Can elaborate more if that does not make sense)</p>\n\n<p>The whole thing works fine until I introduce [Authorize] to the action method.\nBreaks if it is in place, works fine without, and [Authorize] works fine on all the other methods.</p>\n\n<p>The whole URL in this case is 966 chars long, after research it seems that the <strong>maxQueryStringLength</strong> value is 2048 by default but can overridden to any value of type integer, so just for grins I added the </p>\n\n<pre><code>&lt;security&gt;\n  &lt;requestFiltering&gt;\n    &lt;requestLimits maxQueryString=\"2048\"&gt;&lt;/requestLimits&gt;\n  &lt;/requestFiltering&gt;\n&lt;/security&gt;\n</code></pre>\n\n<p>key to the web config file under the   key.</p>\n\n<p>No joy there, so I got ridiculous and made it 4096, still no joy.</p>\n\n<p>Now with the whole URL being 966 chars long, the authorize attribute cannot seriously be adding another 1082-3130 chars, so how can I determine what the error actually is, or why the setting is not taking effect.</p>\n\n<p>VS2010 Pro SP1</p>\n",
            "last_activity_date": 1420774577,
            "question_id": 8159321,
            "score": 55,
            "tags": [
                "c#",
                "javascript",
                "asp.net-mvc-3"
            ],
            "title": "request exceeds the configured maxQueryStringLength when using [Authorize]"
        },
        {
            "answer_count": 16,
            "answers": [
                {
                    "body": "<p>Check if the variable is equal to that same variable rounded to an integer, like this:</p>\n\n<pre><code>if(Math.round(data) != data) {\n    alert(\"Variable is not an integer!\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>First off, NaN is a \"number\" (yes I know it's weird, just roll with it), and not a \"function\".</p>\n\n<p>You need to check both if the type of the variable is a number, and to check for integer I would use modulus.</p>\n\n<pre><code>alert(typeof data === 'number' &amp;&amp; data%1 == 0);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You could check if the number has a remainder:</p>\n\n<pre><code>var data = 22;\n\nif(data % 1 === 0){\n   // yes it's an integer.\n}\n</code></pre>\n\n<p>Mind you, if your input could also be text and you want to check first it is not, then you can check the type first:</p>\n\n<pre><code>var data = 22;\n\nif(typeof data === 'number'){\n     // yes it is numeric\n\n    if(data % 1 === 0){\n       // yes it's an integer.\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>use the === operator as below</p>\n\n<pre><code>if (data === parseInt(data, 10))\n    alert(\"data is integer\")\nelse\n    alert(\"data is not an integer\")\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>Assuming you don't know anything about the variable in question, you should take this approach:</p>\n\n<pre><code>if(typeof data === 'number') {\n    var remainder = (data % 1);\n    if(remainder === 0) {\n        // yes, it is an integer\n    }\n    else if(isNaN(remainder)) {\n        // no, data is either: NaN, Infinity, or -Infinity\n    }\n    else {\n        // no, it is a float (still a number though)\n    }\n}\nelse {\n    // no way, it is not even a number\n}\n</code></pre>\n\n<p>To put it simply:</p>\n\n<pre><code>if(typeof data==='number' &amp;&amp; (data%1)===0) {\n    // data is an integer\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>That depends, do you also want to cast strings as potential integers as well?</p>\n\n<p>This will do:</p>\n\n<pre><code>function isInt(value) {\n  return !isNaN(value) &amp;&amp; \n         parseInt(Number(value)) == value &amp;&amp; \n         !isNaN(parseInt(value, 10));\n}\n</code></pre>\n\n<h3>With Bitwise operations</h3>\n\n<p>Simple parse and check</p>\n\n<pre><code>function isInt(value) {\n  var x = parseFloat(value);\n  return !isNaN(value) &amp;&amp; (x | 0) === x;\n}\n</code></pre>\n\n<p>Short-circuiting, and saving a parse operation:</p>\n\n<pre><code>function isInt(value) {\n  if (isNaN(value)) {\n    return false;\n  }\n  var x = parseFloat(value);\n  return (x | 0) === x;\n}\n</code></pre>\n\n<p>Or perhaps both in one shot:</p>\n\n<pre><code>function isInt(value) {\n  return !isNaN(value) &amp;&amp; (function(x) { return (x | 0) === x; })(parseFloat(value))\n}\n</code></pre>\n\n<p>Tests:</p>\n\n<pre><code>isInt(42)        // true\nisInt(\"42\")      // true\nisInt(4e2)       // true\nisInt(\"4e2\")     // true\nisInt(\" 1 \")     // true\nisInt(\"\")        // false\nisInt(\"  \")      // false\nisInt(42.1)      // false\nisInt(\"1a\")      // false\nisInt(\"4e2a\")    // false\nisInt(null)      // false\nisInt(undefined) // false\nisInt(NaN)       // false\n</code></pre>\n\n<p>Here's the fiddle: <a href=\"http://jsfiddle.net/opfyrqwp/28/\">http://jsfiddle.net/opfyrqwp/28/</a></p>\n",
                    "is_accepted": false,
                    "score": 66
                },
                {
                    "body": "<p>You can use regexp for this:</p>\n\n<pre><code>function isInteger(n) {\n    return (typeof n == 'number' &amp;&amp; /^-?\\d+$/.test(n+''));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>function isInteger(argument) { return argument == ~~argument; }\n</code></pre>\n\n<p>isInteger(1);     // true<br>\n    isInteger(0.1);   // false<br>\n    isInteger(\"1\");   // true<br>\n    isInteger(\"0.1\"); // false<br></p>\n\n<p><strong>or:</strong></p>\n\n<pre><code>function isInteger(argument) { return argument == argument + 0 &amp;&amp; argument == ~~argument; }\n</code></pre>\n\n<p>isInteger(1);     // true<br>\nisInteger(0.1);   // false<br>\nisInteger(\"1\");   // false<br>\nisInteger(\"0.1\"); // false<br></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use this function:</p>\n\n<pre><code>function isInteger(value) {\n    return (value == parseInt(value));\n}\n</code></pre>\n\n<p>It will return true even if the value is a string containing an integer value.<br>\nSo, the results will be:</p>\n\n<pre><code>alert(isInteger(1)); // true\nalert(isInteger(1.2)); // false\nalert(isInteger(\"1\")); // true\nalert(isInteger(\"1.2\")); // false\nalert(isInteger(\"abc\")); // false\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p><strong>Be careful while using</strong></p>\n\n<blockquote>\n  <p>num % 1</p>\n</blockquote>\n\n<p>empty string ('') or boolean (true or false) will return as integer. You might not want to do that</p>\n\n<pre><code>false % 1 // true\n'' % 1 //true\n</code></pre>\n\n<h2>Number.isInteger(data)</h2>\n\n<pre><code>Number.isInteger(22); //true\nNumber.isInteger(22.2); //false\nNumber.isInteger('22'); //false\n</code></pre>\n\n<p>build in function in the browser. Dosnt support older browsers</p>\n\n<p><strong>Alternatives:</strong></p>\n\n<pre><code>Math.round(num)=== num\n</code></pre>\n\n<p>However, Math.round() also will fail for empty string and boolean</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To check if integer like poster wants:</p>\n\n<pre><code>if (+data===parseInt(data)) {return true} else {return false}\n</code></pre>\n\n<p>notice + in front of data (converts string to number), and === for exact.</p>\n\n<p>Here are examples:</p>\n\n<pre><code>data=10\n+data===parseInt(data)\ntrue\n\ndata=\"10\"\n+data===parseInt(data)\ntrue\n\ndata=\"10.2\"\n+data===parseInt(data)\nfalse\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>From <a href=\"http://www.toptal.com/javascript/interview-questions\" rel=\"nofollow\">http://www.toptal.com/javascript/interview-questions</a>:</p>\n\n<pre><code>function isInteger(x) { return (x^0) === x; } \n</code></pre>\n\n<p>Found it to be the best way to do this.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use the <code>|</code> operator:</p>\n\n<pre><code>(5.3 | 0) === 5.3 // =&gt; false\n(5.0 | 0) === 5.0 // =&gt; true\n</code></pre>\n\n<p>So, a test function might look like this:</p>\n\n<pre><code>var isInteger = function (value) {\n  if (typeof value !== 'number') {\n    return false;\n  }\n\n  if ((value | 0) !== value) {\n    return false;\n  }\n\n  return true;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use a simple regular expression:</p>\n\n<pre><code>function isInt(value) {\n\n    var er = /^-?[0-9]+$/;\n\n    return er.test(value);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>Number.isInteger()</code> is the way to go.</p>\n\n<p>MDN has also provided the following polyfill for browsers not supporting <code>Number.isInteger()</code>, mainly all versions of IE and Safari.</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\" rel=\"nofollow\">Link to MDN page</a></p>\n\n<pre><code>if (!Number.isInteger) {\n  Number.isInteger = function isInteger(nVal) {\n    return typeof nVal === 'number'\n      &amp;&amp; isFinite(nVal)\n      &amp;&amp; nVal &gt; -9007199254740992\n      &amp;&amp; nVal &lt; 9007199254740992\n      &amp;&amp; Math.floor(nVal) === nVal;\n  };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had to check if a variable (string or number) is an integer and I used this condition:</p>\n\n<pre><code>function isInt(a){\n    return !isNaN(a) &amp;&amp; parseInt(a) == parseFloat(a);\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/e267369d/1/\" rel=\"nofollow\">http://jsfiddle.net/e267369d/1/</a></p>\n\n<p>Some of the other answers have a similar solution (rely on <code>parseFloat</code> combined with <code>isNaN</code>), but mine should be more straight forward and self explaining.</p>\n\n<hr>\n\n<p>Edit: I found out that my method fails for strings containing comma (like \"1,2\") and I also realized that in my particular case I want the function to fail if a string is not a valid integer (should fail on any float, even 1.0). So here is my function Mk II:</p>\n\n<pre><code>function isInt(a){\n    return !isNaN(a) &amp;&amp; parseInt(a) == parseFloat(a) &amp;&amp; (typeof a != 'string' || (a.indexOf('.') == -1 &amp;&amp; a.indexOf(',') == -1));\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/e267369d/3/\" rel=\"nofollow\">http://jsfiddle.net/e267369d/3/</a></p>\n\n<p>Of course in case you actually need the function to accept integer floats (1.0 stuff), you can always remove the dot condition <code>a.indexOf('.') == -1</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I check if a variable is an integer in Javscript and throwing an alert to confirm it ? This doesn't work ?</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n\n var data = 22;\n\n alert(NaN(data));\n\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1422526528,
            "question_id": 14636536,
            "score": 54,
            "tags": [
                "javascript",
                "javascript-events",
                "javascript-framework"
            ],
            "title": "How to check if a variable is an integer in Javascript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I would suggest using regexes:</p>\n\n<pre><code>var intRegex = /^\\d+$/;\nvar floatRegex = /^((\\d+(\\.\\d *)?)|((\\d*\\.)?\\d+))$/;\n\nvar str = $('#myTextBox').val();\nif(intRegex.test(str) || floatRegex.test(str)) {\n   alert('I am a number');\n   ...\n}\n</code></pre>\n\n<p>Or with a single regex as per @Platinum Azure's suggestion:</p>\n\n<pre><code>var numberRegex = /^[+-]?\\d+(\\.\\d+)?([eE][+-]?\\d+)?$/;\nvar str = $('#myTextBox').val();\nif(numberRegex.test(str)) {\n   alert('I am a number');\n   ...\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>jQuery is a set of JavaScript functions, right? So you could use JavaScript's regular expression support to validate the string. You can put this in a jQuery callback if you like, too, since those just take anonymously-declared function bodies and the functions are still JavaScript.</p>\n\n<p>Link: <a href=\"http://www.regular-expressions.info/javascript.html\" rel=\"nofollow\">http://www.regular-expressions.info/javascript.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Value validation wouldn't be a responsibility of jQuery. You can use pure JavaScript for this. Two ways that come to my mind are:</p>\n\n<pre><code>/^\\d+$/.match(value)\nNumber(value) == value\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Forget regular expressions.  JavaScript has a builtin function for this: <code>isNaN()</code>:</p>\n\n<pre><code>isNaN(123)           // false\nisNaN(-1.23)         // false\nisNaN(5-2)           // false\nisNaN(0)             // false\nisNaN(\"100\")         // false\nisNaN(\"Hello\")       // true\nisNaN(\"2005/12/12\")  // true\n</code></pre>\n\n<p>Just call it like so:</p>\n\n<pre><code>if (isNaN( $(\"#whatever\").val() )) {\n    // It isn't a number\n} else {\n    // It is a number\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 59
                },
                {
                    "body": "<p>With jQuery's <a href=\"http://bassistance.de/jquery-plugins/jquery-plugin-validation/\" rel=\"nofollow\">validation</a> plugin you could do something like this, assuming that the form is called <em>form</em> and the value to validate is called <em>nrInput</em></p>\n\n<pre><code>$(\"form\").validate({\n            errorElement: \"div\",\n            errorClass: \"error-highlight\",\n            onblur: true,\n            onsubmit: true,\n            focusInvalid: true,\n            rules:{\n                'nrInput': {\n                    number: true,\n                    required: true\n                }\n            });\n</code></pre>\n\n<p>This also handles decimal values.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>there is a simpler way of checking if a variable is an integer. you can use $.isNumeric() function. e.g.</p>\n\n<pre><code>$.isNumeric( 10 );     // true\n</code></pre>\n\n<p>this will return true but if you put a string in place of the 10, you will get false.</p>\n\n<p>I hope this works for you. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Following script can be used to check whether value is valid integer or not.</p>\n\n<pre><code>  function myFunction() {\n    var a = parseInt(\"10000000\");\n    if (!isNaN(a) &amp;&amp; a &lt;= 2147483647 &amp;&amp; a &gt;= -2147483647){\n    alert(\"is integer\"); \n    } else {\n     alert(\"not integer\"); \n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>String.prototype.isNumeric = function() {\n    var s = this.replace(',', '.').replace(/\\s+/g, '');\nreturn s == 0 || (s/s);\n}\n</code></pre>\n\n<p>usage</p>\n\n<pre><code>'9.1'.isNumeric() -&gt; 1\n'0xabc'.isNumeric() -&gt; 1\n'10,1'.isNumeric() -&gt; 1\n'str'.isNumeric() -&gt; NaN\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a simple <code>textbox</code> in which users enter number.\n<br/>Does jQuery have a <code>isDigit</code> function that will allow me to show an alert box if users enter something other than digits?</p>\n\n<p>The field can have decimal points as well. </p>\n",
            "last_activity_date": 1410442936,
            "question_id": 1272696,
            "score": 52,
            "tags": [
                "javascript",
                "jquery",
                "validation"
            ],
            "title": "checking if number entered is a digit in jquery"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>For the dashes</p>\n\n<pre><code>if(your_string.indexOf('-') === -1)\n{\n  alert(\"no dash found.\");\n}\n</code></pre>\n\n<p>For the alpha numeric you can use a regular expression:</p>\n\n<p><a href=\"http://www.regular-expressions.info/javascript.html\">http://www.regular-expressions.info/javascript.html</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/336210/regular-expression-for-alphanumeric-and-underscores\">Alpha Numeric Regular Expression</a></p>\n",
                    "is_accepted": true,
                    "score": 111
                },
                {
                    "body": "<p>If you have the text in variable <code>foo</code>:</p>\n\n<pre><code>if (! /^[a-zA-Z0-9]+$/.test(foo)) {\n    // Validation failed\n}\n</code></pre>\n\n<p>This will test and make sure the user has entered at least one character, and has entered <em>only</em> alphanumeric characters.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Use a regular expression to accomplish this.</p>\n\n<pre><code>function isAlphanumeric( str ) {\n return /^[0-9a-zA-Z]+$/.test(str);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To test for alphanumeric characters only:</p>\n\n<pre><code>if (/^[0-9A-Za-z]+$/.test(yourString))\n{\n    //there are only alphanumeric characters\n}\nelse\n{\n    //it contains other characters\n}\n</code></pre>\n\n<p>The regex is testing for 1 or more (+) of the set of characters 0-9, A-Z, and a-z, starting with the beginning of input (^) and stopping with the end of input ($).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The correct method to check if string(word,sentence or etc...) contains specific word(character,symbol or etc..)</p>\n\n<pre><code>var inputString = \"this is home\";\nvar findme = \"home\";\n\nif ( inputString.indexOf(findme) &gt; -1 ) {\n  out.print( \"found it\" );\n} else {\n  out.print( \"not found\" );\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Working perfectly.This exmple will help alot.</p>\n\n<pre><code>&lt;script&gt;    \n    function check()\n    {\n       var val = frm1.uname.value;\n       //alert(val);\n       if (val.indexOf(\"@\") &gt; 0)\n       {\n          alert (\"email\");\n          document.getElementById('isEmail1').value = true;\n          //alert( document.getElementById('isEmail1').value);\n       }else {\n          alert(\"usernam\");\n          document.getElementById('isEmail1').value = false;\n          //alert( document.getElementById('isEmail1').value);\n       }\n    }\n&lt;/script&gt;\n\n&lt;body&gt;\n    &lt;h1&gt;My form &lt;/h1&gt;\n    &lt;form action=\"v1.0/user/login\" method=\"post\" id = \"frm1\"&gt;\n        &lt;p&gt;\n            UserName : &lt;input type=\"text\" id = \"uname\" name=\"username\" /&gt;\n        &lt;/p&gt;\n        &lt;p&gt;\n            Password : &lt;input type=\"text\" name=\"password\" /&gt;\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;input type=\"hidden\" class=\"email\" id = \"isEmail1\" name = \"isEmail\"/&gt;\n        &lt;/p&gt;\n        &lt;input type=\"submit\" id = \"submit\" value=\"Add User\" onclick=\"return check();\"/&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>if ('Hello, World!'.indexOf('orl') !== -1)\n    alert(\"The string 'Hello World' contains the substring 'orl'!\");\nelse\n    alert(\"The string 'Hello World' does not contain the substring 'orl'!\");\n</code></pre>\n\n<p>Here is an example: <a href=\"http://jsfiddle.net/oliverni/cb8xw/\" rel=\"nofollow\">http://jsfiddle.net/oliverni/cb8xw/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You're all thinking too hard. Just use a simple Regular Expression, it's your best friend.</p>\n\n<pre><code>var string1 = \"Hi Stack Overflow. I like to eat pizza.\"\nvar string2 = \"Damn, I fail.\"\n\nvar regex = /(pizza)/g // Insert whatever phrase or character you want to find\n\nstring1.test(regex); // =&gt; true\nstring2.test(regex); // =&gt; false\n</code></pre>\n\n<p><a href=\"http://www.regexr.com/\" rel=\"nofollow\">Learn Regex in 5 minutes?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>var inputString = \"this is home\";\nvar findme = \"home\";\n\nif ( inputString.indexOf(findme) &gt; -1 ) {\n    alert( \"found it\" );\n} else {\n    alert( \"not found\" );\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a page with a textbox where a user is supposed to enter a 24 character (letters and numbers, case insensitive) registration code.  I used <code>maxlength</code> to limit the user to entering 24 characters.</p>\n\n<p>The registration codes are typically given as groups of characters seperated by dashes, but I would like for the user to enter the codes without the dashes.</p>\n\n<p>How can I write my Javascript code with our without jQuery to check that a given string that the user inputs does not contain dashes, or better yet, only contains alphanumeric characters?</p>\n",
            "last_activity_date": 1421931304,
            "question_id": 4444477,
            "score": 51,
            "tags": [
                "javascript",
                "jquery",
                "string"
            ],
            "title": "How to tell if a string contains a certain character in javascript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The <a href=\"http://www.w3.org/TR/webstorage/#dom-storage-getitem\"><code>getItem</code></a> method in the WebStorage specification, explicitly returns <code>null</code> is the item does not exist:</p>\n\n<blockquote>\n  <p>... If the given key does not exist in the list associated with the object then this method must return null. ...</p>\n</blockquote>\n\n<p>So, you can:</p>\n\n<pre><code>if (localStorage.getItem(\"infiniteScrollEnabled\") === null) {\n  //...\n}\n</code></pre>\n\n<p><strong>Note:</strong> While the WebStorage specification by definition allows you to store any arbitrary JavaScript object as the value of an storage item, this is <em>not implemented</em> yet on any browser (Bug reports: <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=538142\">Firefox</a>, <a href=\"http://code.google.com/p/chromium/issues/detail?id=31394\">Chromium</a>), the storage item values are type-converted to string.</p>\n\n<p>This can give you problems, like in your example, if you store a Boolean value, it will be converted to string, for example:</p>\n\n<pre><code>localStorage.setItem('test', true);\nlocalStorage.getItem('test') == true; // false!!!\n</code></pre>\n\n<p>That happens because we are comparing a String with a Boolean value:</p>\n\n<pre><code>\"true\" == true; // false\n\"false\" == false; // false\n</code></pre>\n\n<p>Also, if you try to store an object, it will be also converted to String.</p>\n\n<p>See this related question:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/2010892/storing-objects-in-html5-localstorage/\">Storing Objects in HTML5 localStorage</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 100
                },
                {
                    "body": "<p>The shortest way is to use default value, if key is not in storage:</p>\n\n<pre><code>var sValue = localStorage['my.token'] || ''; /* for strings */\nvar iValue = localStorage['my.token'] || 0; /* for integers */\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>localStorage['root2']=null;\n\nlocalStorage.getItem(\"root2\") === null //false\n</code></pre>\n\n<p>Maybe better to do a scan of the plan  ? </p>\n\n<pre><code>localStorage['root1']=187;\n187\n'root1' in localStorage\ntrue\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For TRUE</p>\n\n<pre><code>localStorage.infiniteScrollEnabled = 1;\n</code></pre>\n\n<p>FOR FALSE</p>\n\n<pre><code>localStorage.removeItem(\"infiniteScrollEnabled\")\n</code></pre>\n\n<p>CHECK EXISTANCE</p>\n\n<pre><code>if (localStorage[\"\"infiniteScrollEnabled\"\"]) {\n  //CODE IF ENABLED\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I check if an item is set in <code>localStorage</code>? Currently I am using</p>\n\n<pre><code>if (!(localStorage.getItem(\"infiniteScrollEnabled\") == true || localStorage.getItem(\"infiniteScrollEnabled\") == false)) {\n    // init variable/set default variable for item\n    localStorage.setItem(\"infiniteScrollEnabled\", true);\n}\n</code></pre>\n",
            "last_activity_date": 1412791715,
            "question_id": 3262605,
            "score": 46,
            "tags": [
                "javascript",
                "html5"
            ],
            "title": "HTML5 localStorage: check if item is set"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You should use html():</p>\n\n<p><a href=\"http://jsfiddle.net/K3D6d/4/\" rel=\"nofollow\">SEE DEMO</a></p>\n\n<pre><code>$(document).ready(function(){\n    $(\"#date\").html('&lt;span&gt;'+$(\"#date\").text().substring(0, 2) + '&lt;/span&gt;&lt;br /&gt;'+$(\"#date\").text().substring(3));     \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>use this</p>\n\n<pre><code>&lt;div id=\"date\"&gt;23/05/2013&lt;/div&gt;\n&lt;script type=\"text/javascript\"&gt;\n$(document).ready(function(){\n  var x = $(\"#date\").text();\n    x.text(x.substring(0, 2) + '&lt;br /&gt;'+x.substring(3));     \n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Instead of using substring with a fixed index, you'd better use <code>replace</code> :</p>\n\n<pre><code>$(\"#date\").html(function(t){\n    return t.replace(/^([^\\/]*\\/)/, '&lt;span&gt;$1&lt;/span&gt;&lt;br&gt;')\n});\n</code></pre>\n\n<p>One advantage is that it would still work if the first <code>/</code> is at a different position.</p>\n\n<p>Another advantage of this construct is that it would be extensible to more than one elements, for example to all those implementing a class, just by changing the selector.</p>\n\n<p><a href=\"http://jsfiddle.net/ay4k2/\">Demonstration</a> (note that I had to select jQuery in the menu in the left part of jsfiddle's window)</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Using <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split\"><strong><code>split()</code></strong></a></p>\n\n<pre><code>var data = $('#date').text();\nvar arr = data.split('/');\n$(\"#date\").html(\"&lt;span&gt;\"+arr[0] + \"&lt;/span&gt;&lt;/br&gt;\" + arr[1]+\"/\"+arr[2]);\n</code></pre>\n\n<p>Demo <code>--&gt;</code> <a href=\"http://jsfiddle.net/K3D6d/5/\">http://jsfiddle.net/K3D6d/5/</a></p>\n\n<hr>\n\n<p>When you split this string <code>---&gt;</code> <code>23/05/2013</code> on <code>/</code></p>\n\n<pre><code>var myString = \"23/05/2013\";\nvar arr = myString.split('/');\n</code></pre>\n\n<p>you'll get an array of size <code>3</code></p>\n\n<pre><code>arr[0] --&gt; 23\narr[1] --&gt; 05\narr[2] --&gt; 2013\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 118
                },
                {
                    "body": "<pre><code>var str = \"How are you doing today?\";\n\nvar res = str.split(\" \");\n</code></pre>\n\n<p>Here the variable \"res\" is kind of array.</p>\n\n<p>You can also take this explicity by declaring it as</p>\n\n<pre><code>var res[]= str.split(\" \");\n</code></pre>\n\n<p>Now you can access the individual words of the array.\nSuppose you want to access the third element of the array you can use it by indexing array elements.</p>\n\n<pre><code>var FirstElement= res[0];\n</code></pre>\n\n<p>Now the variable FirstElement contains the value 'How'</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<pre><code>&lt;div id=\"date\"&gt;23/05/2013&lt;/div&gt;\n</code></pre>\n\n<p>I want to format this date, first i want to break string at like the 2nd character and have the rest in the next line. And if it possible with jQuery to append two  tags.\nas follows:</p>\n\n<blockquote>\n  <p><strong>23<br> 05/2013</strong></p>\n</blockquote>\n\n<pre><code>&lt;div id=\"date\"&gt;\n&lt;span&gt;23&lt;/span&gt;\n05/2013&lt;/div&gt;\n</code></pre>\n\n<p>What i did:</p>\n\n<pre><code>&lt;div id=\"date\"&gt;23/05/2013&lt;/div&gt;\n&lt;script type=\"text/javascript\"&gt;\n$(document).ready(function(){\n    $(\"#date\").text().substring(0, 2) + '&lt;br /&gt;';     \n});\n&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/K3D6d/\">http://jsfiddle.net/K3D6d/</a></p>\n\n<p>but this does not work!<br>\nCan someone help with jQuery?<br>\nThank you!</p>\n",
            "last_activity_date": 1422963455,
            "question_id": 16711504,
            "score": 41,
            "tags": [
                "javascript",
                "jquery",
                "split",
                "substring"
            ],
            "title": "How to split the string using jQuery or javascript?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>Why don't you just apply the div submit styles to a submit button?  I'm sure there's a javascript for this but that would be easier.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is how I do it with jQuery</p>\n\n<pre><code>j(\".textBoxClass\").keypress(function(e)\n{\n\t// if the key pressed is the enter key\n\tif (e.which == 13)\n\t{\n\t\t// do work\n\t}\n});\n</code></pre>\n\n<p>Other javascript wouldnt be too different. the catch is checking for keypress argument of \"13\", which is the enter key</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Use the following script.</p>\n\n<pre><code>&lt;SCRIPT TYPE=\"text/javascript\"&gt;\n&lt;!--\n    function submitenter(myfield,e)\n    {\n        var keycode;\n        if (window.event) keycode = window.event.keyCode;\n        else if (e) keycode = e.which;\n        else return true;\n\n        if (keycode == 13)\n        {\n            myfield.form.submit();\n            return false;\n        }\n        else\n            return true;\n    }\n//--&gt;\n&lt;/SCRIPT&gt;\n</code></pre>\n\n<p>For each field that should submit the form when the user hits enter, call the submitenter function as follows.</p>\n\n<pre><code>&lt;FORM ACTION=\"../cgi-bin/formaction.pl\"&gt;\n    name:     &lt;INPUT NAME=realname SIZE=15&gt;&lt;BR&gt;\n    password: &lt;INPUT NAME=password TYPE=PASSWORD SIZE=10\n       onKeyPress=\"return submitenter(this,event)\"&gt;&lt;BR&gt;\n&lt;INPUT TYPE=SUBMIT VALUE=\"Submit\"&gt;\n&lt;/FORM&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>To submit the form when the enter key is pressed create a javascript function along these lines.</p>\n\n<pre><code>\nfunction checkSubmit(e)\n{\n   if(e && e.keyCode == 13)\n   {\n      document.forms[0].submit();\n   }\n}\n</code></pre>\n\n<p>Then add the event to whatever scope you need eg on the div tag</p>\n\n<pre><code>&lt;div onKeyPress=\"return checkSubmit(event)\"/&gt;</code></pre>\n\n<p>This is also the default behaviour of internet explorer 7 anyway though (probably earlier versions as well).</p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>IMO, this is the cleanest answer: </p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;&lt;title&gt;title&lt;/title&gt;&lt;/head&gt;\n&lt;body&gt;\n  &lt;form action=\"\" method=\"get\"&gt;\n    Name: &lt;input type=\"text\" name=\"name\"/&gt;&lt;br/&gt;\n    Pwd: &lt;input type=\"password\" name=\"password\"/&gt;&lt;br/&gt;\n    &lt;div class=\"yourCustomDiv\"/&gt;\n    &lt;input type=\"submit\" style=\"display:none\"/&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Better yet, if you are using javascript to submit the form using the custom div, you should also use javascript to create it, and to set the display:none style on the button. This way users with javascript disabled will still see the submit button and can click on it.</p>\n\n<hr>\n\n<p>It has been noted that display:none will cause IE to ignore the input.  I created a <a href=\"http://jsfiddle.net/Suyw6/1/\">new JSFiddle example</a> that starts as a standard form, and uses progressive enhancement to hide the submit and create the new div.  I did use the CSS styling from <a href=\"http://stackoverflow.com/questions/29943/how-to-submit-a-form-when-the-return-key-is-pressed/6602788#6602788\">StriplingWarrior</a>.</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>If you are using asp.net you can use the defaultButton attribute on the form.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think you should actually have a submit button or a submit image... Do you have a specific reason for using a \"submit div\"? If you just want custom styles I recommend <code>&lt;input type=\"image\"...</code>. <a href=\"http://webdesign.about.com/cs/forms/a/aaformsubmit_2.htm\" rel=\"nofollow\">http://webdesign.about.com/cs/forms/a/aaformsubmit_2.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I tried various javascript/jQuery-based strategies, but I kept having issues. The latest issue to arise involved accidental submission when the user uses the enter key to select from the browser's built-in auto-complete list. I finally switched to this strategy, which seems to work on all the browsers my company supports:</p>\n\n<pre><code>&lt;div class=\"hidden-submit\"&gt;&lt;input type=\"submit\" tabindex=\"-1\"/&gt;&lt;/div&gt;\n</code></pre>\n\n<pre class=\"lang-css prettyprint-override\"><code>.hidden-submit {\n    border: 0 none;\n    height: 0;\n    width: 0;\n    padding: 0;\n    margin: 0;\n    overflow: hidden;\n}\n</code></pre>\n\n<p>This is similar to the currently-accepted answer by Chris Marasti-Georg, but by avoiding <code>display: none</code>, it appears to work correctly on all browsers.</p>\n\n<h3>Update</h3>\n\n<p>I edited the code above to include a negative <code>tabindex</code> so it doesn't capture the tab key. While this technically won't validate in HTML 4, the HTML5 spec includes language to make it work the way most browsers were already implementing it anyway.</p>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p><strong>Use the <code>&lt;button&gt;</code> tag.</strong></p>\n\n<p>There is another tag, <code>&lt;button&gt;</code>, that also can submit a form. It can be styled much in the way of a <code>&lt;div&gt;</code> tag (including <code>&lt;img /&gt;</code> inside the button tag), but you won't have to use any javascript to mimic a button. The buttons from the <code>&lt;input /&gt;</code> tag are not nearly as flexible.</p>\n\n<pre><code>&lt;button type=\"submit\"&gt;\n    &lt;img src=\"http://cdn.sstatic.net/stackoverflow/img/tag-chrome.png\" /&gt;\n    Clicking will submit the form\n&lt;/button&gt;\n</code></pre>\n\n<p>There are three types to set on the <code>&lt;button&gt;</code>; they map to the <code>&lt;input&gt;</code> button types.</p>\n\n<pre><code>&lt;button type=\"submit\"&gt;Will submit the form&lt;/button&gt;\n&lt;button type=\"reset\"&gt;Will reset the form&lt;/button&gt;\n&lt;button type=\"button\"&gt;Will do nothing; add javascript onclick hooks&lt;/button&gt;\n</code></pre>\n\n<p><strong>From the W3C standard</strong></p>\n\n<blockquote>\n  <p>Buttons created with the BUTTON element function just like buttons created with the INPUT element, but they offer richer rendering possibilities: the BUTTON element may have content. For example, a BUTTON element that contains an image functions like and may resemble an INPUT element whose type is set to \"image\", but the BUTTON element type allows content.</p>\n</blockquote>\n\n<p><strong>Standards</strong></p>\n\n<ul>\n<li><a href=\"http://www.w3.org/TR/html4/interact/forms.html#h-17.5\">http://www.w3.org/TR/html4/interact/forms.html#h-17.5</a></li>\n<li><a href=\"http://www.w3.org/TR/html5/the-button-element.html#the-button-element\">http://www.w3.org/TR/html5/the-button-element.html#the-button-element</a></li>\n<li><a href=\"http://www.w3.org/wiki/HTML/Elements/button\">http://www.w3.org/wiki/HTML/Elements/button</a></li>\n</ul>\n\n<p><strong>Top Google hits for \"css3 buttons\"</strong></p>\n\n<ul>\n<li><a href=\"http://hellohappy.org/css3-buttons/\">http://hellohappy.org/css3-buttons/</a></li>\n<li><a href=\"http://css3button.net/\">http://css3button.net/</a></li>\n<li><a href=\"http://css3button.net/showcase/random\">http://css3button.net/showcase/random</a></li>\n</ul>\n\n<p>I use them with <a href=\"/questions/tagged/css-sprites\" class=\"post-tag\" title=\"show questions tagged 'css-sprites'\" rel=\"tag\">css-sprites</a> and a bit of <a href=\"/questions/tagged/css\" class=\"post-tag\" title=\"show questions tagged 'css'\" rel=\"tag\">css</a> styling at <a href=\"http://www.froer.nu/\">http://www.froer.nu/</a>. Note that <code>&lt;a class=\"button\"&gt;</code> links share styling with the <code>&lt;button&gt;</code> element.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I believe this is what you want.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n//&lt;![CDATA[\n\n//Send form if they hit enter.\ndocument.onkeypress = enter;\nfunction enter(e){\nif (e.which == 13){sendform()}\n}\n\n//Form to send\nfunction sendform(){\ndocument.forms[0].submit();\n}\n//]]&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>Every time a key is pressed, function enter() will be called.  If the key pressed matches the enter key (13), then sendform() will be called and the first encountered form will be sent.  This is only for Firefox and other standards compliant browsers.</p>\n\n<p>If you find this code useful, please be sure to vote me up!</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Similar to Chris Marasti-Georg's example, instead using inline javascript.\nEssentially add onkeypress to the fields you want the enter key to work with. This example acts on the password field.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;&lt;title&gt;title&lt;/title&gt;&lt;/head&gt;\n&lt;body&gt;\n  &lt;form action=\"\" method=\"get\"&gt;\n  Name: &lt;input type=\"text\" name=\"name\"/&gt;&lt;br/&gt;\n  Pwd: &lt;input type=\"password\" name=\"password\" onkeypress=\"if(event.keyCode==13) {javascript:form.submit();}\" /&gt;&lt;br/&gt;\n  &lt;input type=\"submit\" onClick=\"javascript:form.submit();\"/&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I use this method:</p>\n\n<pre><code>&lt;form name='test' method=post action='sendme.php'&gt;\n    &lt;input type=text name='test1'&gt;\n    &lt;input type=button value='send' onClick='document.test.submit()'&gt;\n    &lt;input type=image src='spacer.gif'&gt;  &lt;!-- &lt;&lt;&lt;&lt; this is the secret! --&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>Basically, <strong>I just add an invisible input of type image</strong> (where \"<em>spacer.gif</em>\" is a 1x1 transparent gif).</p>\n\n<p>In this way, I can submit this form either with the 'send' button or simply by <strong>pressing enter</strong> on the keyboard.</p>\n\n<p>This is the trick!</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Can someone please tell me how to submit an HTML form when the return key is pressed and if there are no buttons in the form?\n<strong>The submit button is not there</strong>. I am using a custom div instead of that.</p>\n",
            "last_activity_date": 1399478406,
            "question_id": 29943,
            "score": 36,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "How to submit a form when the return key is pressed?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"http://jquery.com\">jQuery: The Write Less, Do More, JavaScript <strong>Library</strong></a>.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>A library. According to the <a href=\"http://jquery.com/\">homepage</a>, and which I agree with.</p>\n\n<p>A framework is something that usually forces a certain way of implementing a solution, whereas jQuery is just a tool to make implementing what you want to do easier.</p>\n",
                    "is_accepted": true,
                    "score": 69
                },
                {
                    "body": "<p>For sure, it's a javascript library. But about being a framework or not,I just think it's not a framework. Have a look on <a href=\"http://en.wikipedia.org/wiki/Framework_%28software%29\">wikipedia definition of software-framework</a>:</p>\n\n<blockquote>\n  <p>It is a collection of software libraries providing a defined\n  application programming interface.</p>\n</blockquote>\n\n<p>And jQuery is just a single library. After that it says:</p>\n\n<blockquote>\n  <p>Frameworks contain key distinguishing features that separate them from normal libraries:</p>\n  \n  <ol>\n  <li>inversion of control - In a framework, unlike in libraries or normal user applications, the overall program's flow of control is not dictated by the caller, but by the framework.</li>\n  </ol>\n</blockquote>\n\n<p>So, I think it's not a framework.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I agree with all the answers here that jQuery itself is indeed a library, not a framework. As specified by Saeed's answer, one of the key distinguishing features is inversion of control. You could however use jQuery's functionality to create a framework of your own. </p>\n\n<p>Examples: there are projects built on top of jQuery that are defined as frameworks: <a href=\"http://jquerymobile.com/\" rel=\"nofollow\">jQuery Mobile: A Touch-Optimized Web Framework</a>, <a href=\"http://javascriptmvc.com/\" rel=\"nofollow\">JavaScriptMVC</a> and <a href=\"http://sammyjs.org/\" rel=\"nofollow\">sammy.js</a> to name a few.</p>\n\n<p>There are also other libraries built on top of jQuery, like <a href=\"http://jqueryui.com/about/\" rel=\"nofollow\">jQuery UI</a></p>\n\n<p>Some of it seems like semantics when defining what a library is vs a framework, but those examples help draw the line for me.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>According to the <a href=\"https://docs.angularjs.org/guide/introduction\" rel=\"nofollow\">angularjs web site</a></p>\n\n<blockquote>\n  <ul>\n  <li>a library - a collection of functions which are useful when writing    web apps. Your code is in charge and it calls into the library when<br>\n  it sees fit. E.g., jQuery.</li>\n  <li>frameworks - a particular implementation of a web application, where    your code fills in the details. The framework is in charge\n  and it    calls into your code when it needs something app specific.\n  E.g.,    durandal, ember, etc.</li>\n  </ul>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>here its mentioned under framework category:\n<a href=\"http://en.wikipedia.org/wiki/Comparison_of_JavaScript_frameworks\">http://en.wikipedia.org/wiki/Comparison_of_JavaScript_frameworks</a></p>\n",
            "last_activity_date": 1426111477,
            "question_id": 7062775,
            "score": 35,
            "tags": [
                "javascript",
                "jquery",
                "frameworks"
            ],
            "title": "Is jquery a javascript library or framework?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I'm afraid it a limitation of Canvas' fillText. There is no multi-line support. Whats worse, there's no built-in way to measure line height, only width, making doing it yourself even harder!</p>\n\n<p>A lot of people have written their own multi-line support, perhaps the most notable project that has is <a href=\"https://mozillalabs.com/skywriter/\">Mozilla Skywriter</a>.</p>\n\n<p>The jist of what you'll need to do is multiple fillText calls while adding the height of the text to the y value each time. (measuring the width of M is what the skywriter people do to approximate text, I believe.)</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Using javascript I developed a solution. It isn't beautiful but it worked for me:</p>\n\n<hr>\n\n<pre><code>function drawMultilineText(){\n\n    // set context and formatting   \n    var context = document.getElementById(\"canvas\").getContext('2d');\n    context.font = fontStyleStr;\n    context.textAlign = \"center\";\n    context.textBaseline = \"top\";\n    context.fillStyle = \"#000000\";\n\n    // prepare textarea value to be drawn as multiline text.\n    var textval = document.getElementByID(\"textarea\").value;\n    var textvalArr = toMultiLine(textval);\n    var linespacing = 25;\n    var startX = 0;\n    var startY = 0;\n\n    // draw each line on canvas. \n    for(var i = 0; i &lt; textvalArr.length; i++){\n        context.fillText(textvalArr[i], x, y);\n        y += linespacing;\n    }\n}\n\n// Creates an array where the &lt;br/&gt; tag splits the values.\nfunction toMultiLine(text){\n   var textArr = new Array();\n   text = text.replace(/\\n\\r?/g, '&lt;br/&gt;');\n   textArr = text.split(\"&lt;br/&gt;\");\n   return textArr;\n}\n</code></pre>\n\n<p>Hope that helps!</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I think you can still rely on CSS</p>\n\n<pre><code>ctx.measureText().height doesn\u2019t exist.\n</code></pre>\n\n<p>Luckily, through CSS hack-ardry ( seeTypographic Metrics for more ways to fix older implementations of  using CSS measurements), we can find the height of the text through measuring the offsetHeight of a  with the same font-properties:</p>\n\n<pre><code>var d = document.createElement(\u201dspan\u201d);\nd.font = \u201c20px arial\u201d\nd.textContent = \u201cHello world!\u201d\nvar emHeight = d.offsetHeight;\n</code></pre>\n\n<p>from:\n<a href=\"http://www.html5rocks.com/en/tutorials/canvas/texteffects/\" rel=\"nofollow\">http://www.html5rocks.com/en/tutorials/canvas/texteffects/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Maybe coming to this party a bit late, but I found the following tutorial for wrapping text on a canvas perfect. </p>\n\n<p><a href=\"http://www.html5canvastutorials.com/tutorials/html5-canvas-wrap-text-tutorial/\" rel=\"nofollow\">http://www.html5canvastutorials.com/tutorials/html5-canvas-wrap-text-tutorial/</a></p>\n\n<p>From that I was able to think get multi lines working (sorry Ramirez, yours didn't work for me!).  My complete code to wrap text in a canvas is as follows:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n     // http: //www.html5canvastutorials.com/tutorials/html5-canvas-wrap-text-tutorial/\n     function wrapText(context, text, x, y, maxWidth, lineHeight) {\n        var cars = text.split(\"\\n\");\n\n        for (var ii = 0; ii &lt; cars.length; ii++) {\n\n            var line = \"\";\n            var words = cars[ii].split(\" \");\n\n            for (var n = 0; n &lt; words.length; n++) {\n                var testLine = line + words[n] + \" \";\n                var metrics = context.measureText(testLine);\n                var testWidth = metrics.width;\n\n                if (testWidth &gt; maxWidth) {\n                    context.fillText(line, x, y);\n                    line = words[n] + \" \";\n                    y += lineHeight;\n                }\n                else {\n                    line = testLine;\n                }\n            }\n\n            context.fillText(line, x, y);\n            y += lineHeight;\n        }\n     }\n\n     function DrawText() {\n\n         var canvas = document.getElementById(\"c\");\n         var context = canvas.getContext(\"2d\");\n\n         context.clearRect(0, 0, 500, 600);\n\n         var maxWidth = 400;\n         var lineHeight = 60;\n         var x = 20; // (canvas.width - maxWidth) / 2;\n         var y = 58;\n\n\n         var text = document.getElementById(\"text\").value.toUpperCase();                \n\n         context.fillStyle = \"rgba(255, 0, 0, 1)\";\n         context.fillRect(0, 0, 600, 500);\n\n         context.font = \"51px 'LeagueGothicRegular'\";\n         context.fillStyle = \"#333\";\n\n         wrapText(context, text, x, y, maxWidth, lineHeight);\n     }\n\n     $(document).ready(function () {\n\n         $(\"#text\").keyup(function () {\n             DrawText();\n         });\n\n     });\n\n    &lt;/script&gt;\n</code></pre>\n\n<p>Where <code>c</code> is the ID of my canvas and <code>text</code> is the ID of my textbox.</p>\n\n<p>As you can probably see am using a non-standard font.  You can use @font-face as long as you have used the font on some text PRIOR to manipulating the canvas - otherwise the canvas won't pick up the font.</p>\n\n<p>Hope this helps someone.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Canvas element doesn't support such characters as newline '\\n', tab '\\t' or &lt; br /> tag.</p>\n\n<p>Try it:</p>\n\n<pre><code>var newrow = mheight + 30;\nctx.fillStyle = \"rgb(0, 0, 0)\";\nctx.font = \"bold 24px 'Verdana'\";\nctx.textAlign = \"center\";\nctx.fillText(\"Game Over\", mwidth, mheight); //first line\nctx.fillText(\"play again\", mwidth, newrow); //second line \n</code></pre>\n\n<p>or perhaps multiple lines:</p>\n\n<pre><code>var textArray = new Array('line2', 'line3', 'line4', 'line5');\nvar rows = 98;\nctx.fillStyle = \"rgb(0, 0, 0)\";\nctx.font = \"bold 24px 'Verdana'\";\nctx.textAlign = \"center\";\nctx.fillText(\"Game Over\", mwidth, mheight); //first line\n\nfor(var i=0; i &lt; textArray.length; ++i) {\nrows += 30;\nctx.fillText(textArray[i], mwidth, rows); \n}  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's my solution, modifying the popular wrapText() function that is already presented here. I'm using the prototyping feature of JavaScript so that you can call the function from the canvas context.</p>\n\n<pre><code>CanvasRenderingContext2D.prototype.wrapText = function (text, x, y, maxWidth, lineHeight) {\n\n    var lines = text.split(\"\\n\");\n\n    for (var i = 0; i &lt; lines.length; i++) {\n\n        var words = lines[i].split(' ');\n        var line = '';\n\n        for (var n = 0; n &lt; words.length; n++) {\n            var testLine = line + words[n] + ' ';\n            var metrics = this.measureText(testLine);\n            var testWidth = metrics.width;\n            if (testWidth &gt; maxWidth &amp;&amp; n &gt; 0) {\n                this.fillText(line, x, y);\n                line = words[n] + ' ';\n                y += lineHeight;\n            }\n            else {\n                line = testLine;\n            }\n        }\n\n        this.fillText(line, x, y);\n        y += lineHeight;\n    }\n}\n</code></pre>\n\n<p>Basic usage:</p>\n\n<pre><code>var myCanvas = document.getElementById(\"myCanvas\");\nvar ctx = myCanvas.getContext(\"2d\");\nctx.fillStyle = \"black\";\nctx.font = \"12px sans-serif\";\nctx.textBaseline = \"top\";\nctx.wrapText(\"Hello\\nWorld!\",20,20,160,16);\n</code></pre>\n\n<p>Here's a demonstration I put together:\n<a href=\"http://jsfiddle.net/7RdbL/\">http://jsfiddle.net/7RdbL/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I happened across this due to having the same problem.  I'm working with variable font size, so this takes that into account:</p>\n\n<pre><code>var texts=($(this).find('.noteContent').html()).split(\"&lt;br&gt;\");\nfor (var k in texts) {\n    ctx.fillText(texts[k], left, (top+((parseInt(ctx.font)+2)*k)));\n}\n</code></pre>\n\n<p>where .noteContent is the contenteditable div the user edited (this is nested in a jQuery each function), and ctx.font is \"14px Arial\" (notice that the pixel size comes first)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Split the text into lines, and draw each separately:</p>\n\n<pre><code>function fillTextMultiLine(ctx, text, x, y) {\n  var lineHeight = ctx.measureText(\"M\").width * 1.2;\n  var lines = text.split(\"\\n\");\n  for (var i = 0; i &lt; lines.length; ++i) {\n    ctx.fillText(lines[i], x, y);\n    y += lineHeight;\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I can't seem to be able to add text to a canvas if the text includes \"\\n\". I mean, the line breaks do not show/work.</p>\n\n<pre><code>ctxPaint.fillText(\"s  ome \\n \\\\n &lt;br/&gt; thing\", x, y);\n</code></pre>\n\n<p>The above code will draw <code>\"s  ome \\n &lt;br/&gt; thing\"</code>, on one line. </p>\n\n<p>Is this a limitation of fillText or am I doing it wrong? the \"\\n\"s are there, and aren't printed, but they don't work either.</p>\n",
            "last_activity_date": 1414054882,
            "question_id": 5026961,
            "score": 30,
            "tags": [
                "javascript",
                "html5",
                "canvas",
                "line",
                "break"
            ],
            "title": "HTML5 canvas ctx.fillText won&#39;t do line breaks?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<hr>\n\n<pre><code>(function($){\n  // can do something like \n  $.fn.function_name = function(x){};\n\n})(jQuery);\n</code></pre>\n\n<p>That is self-executing anonymous function that uses <code>$</code> in argument so that you can use it (<code>$</code>) instead of <code>jQuery</code> inside that function and without the fear of conflicting with other libraries because in other libraries too <code>$</code> has special meaning. That pattern is especially useful when writing jQuery plugins.</p>\n\n<p>You can write any character there instead of <code>$</code> too:</p>\n\n<pre><code>(function(j){\n  // can do something like \n  j.fn.function_name = function(x){};\n\n})(jQuery);\n</code></pre>\n\n<p>Here <code>j</code> will automatically catch up jQuery specified at the end <code>(jQuery)</code>. Or you can leave out the argument completely but then you will have to use <code>jQuery</code> keyword all around instead of <code>$</code> with no fear of collision still. So <code>$</code> is wrapped in the argument for short-hand so that you can write <code>$</code> instead of <code>jQuery</code> all around inside that function.</p>\n\n<hr>\n\n<pre><code>(function(){\n\n}());\n</code></pre>\n\n<p>That is self-executing anonymous function again but with no arguments and runs/calls itself because of <code>()</code> at the end.</p>\n\n<p>That patterns turns out to be extremely useful in some situations. For example, let's say you want to run a piece of code after 500 milli seconds each time, you would naturally go for <code>setInterval</code>.</p>\n\n<pre><code>setInterval(doStuff, 500);\n</code></pre>\n\n<p>But what if <code>doStuff</code> function takes more than 500 mill-seconds to do what it is doing? You would witness unexpected results but <code>setInterval</code> will keep on calling that function again and again at specified time irrespective of whether <code>doStuff</code> finished.</p>\n\n<p>That is where that pattern comes in and you can do the same thing with <code>setTimeout</code> in combination with self-executing anonymous function and avoid <strong>bad</strong> <code>setInterval</code> like this:</p>\n\n<pre><code>(function foo(){\n   doStuff;\n\n   setTimeout(foo, 500);\n\n})()\n</code></pre>\n\n<p>This code will also repeat itself again and again with one difference. <code>setTimeout</code> will never get triggered unless <code>doStuff</code> is finished. A much better approach than using bad <code>setInterval</code>.</p>\n\n<p><a href=\"http://jsbin.com/usali4\">You can test it here.</a></p>\n\n<p>Note that you can also write self-executing anonymous function like this:</p>\n\n<pre><code>function(){\n  // some code\n}();\n</code></pre>\n\n<p>Using extra braces around (like before <code>function</code> keyword) is simply <strong>coding convention</strong> and can be seen in Crackford's writings, jQuery and elsewhere.</p>\n\n<hr>\n\n<pre><code>$(function(){\n\n});\n</code></pre>\n\n<p>That is short-hand syntax for ready handler:</p>\n\n<pre><code>$(document).ready(function(){\n\n});\n</code></pre>\n\n<p><strong>More Information:</strong></p>\n\n<ul>\n<li><a href=\"http://briancrescimanno.com/2009/09/24/how-self-executing-anonymous-functions-work/\">How Self-Executing Anonymous Functions Work</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 62
                },
                {
                    "body": "<p>I know that this question is old, but I stumbled upon it right now and so may other people. I just wanted to point out that, although Sarfraz's answer is great, it has to be said that no, writing a <strong>self-executing, anonymous function</strong> within braces is <strong>not</strong> a <em>coding convention</em>.</p>\n\n<pre><code>function(){\n  // some code\n}();\n</code></pre>\n\n<p>Will not work and give out a <code>SyntaxError</code> because the function is being parsed as a <code>FunctionDeclaration</code>, and the function name <strong>is not optional</strong> in this case.</p>\n\n<p>On the other hand, the <a href=\"http://bclary.com/2004/11/07/#a-11.1.6\" rel=\"nofollow\" title=\"Grouping Operator\">Grouping Operator</a> makes sure that the content is evaluated as a <code>FunctionExpression</code>.</p>\n\n<p><strong>See:</strong> <a href=\"http://stackoverflow.com/questions/1634268/explain-javascripts-encapsulated-anonymous-function-syntax/\">Explain JavaScript's encapsulated anonymous function syntax</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Can someone please explain the differences between the following functions:</p>\n\n<pre><code>(function($){\n  // can do something like \n  $.fn.function_name = function(x){};\n\n})(jQuery);\n</code></pre>\n\n<p>Could I use jQuery in the next function?</p>\n\n<pre><code>(function(){\n\n}());\n</code></pre>\n\n<p>And is the following the same as jquery.ready()?</p>\n\n<pre><code>$(function(){\n\n});\n</code></pre>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1359337033,
            "question_id": 4472528,
            "score": 27,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "JavaScript / jQuery closure function syntax"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can use the <code>eval()</code> function, but that is not a good idea.\nI think the better way is writing functions for your operators like this:</p>\n\n<pre><code>var addition = function(first, second) {\n   return first+second;\n};\n\nvar subtraction = function(first, second) {\n   return first-second;\n};\n\nvar operator = addition;\n\nalert(operator(12, 13));\n\nvar operator = subtraction;\n\nalert(operator(12, 13));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can't overload operators in JavaScript. You can off course use functions to help</p>\n\n<pre><code>var plus = function(a, b) {\n    return a + b;\n};\n\nvar smaller = function(a, b) { \n    return a &lt; b;\n};\n\nvar operator = plus;\nvar total = operator(a, b);\noperator = smaller;\nif(operator(var1, var2)){ /*do something*/ }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Not out of the box. However, it's easy to build by hand in many languages including JS.</p>\n\n<pre><code>var operators = {\n    '+': function(a, b) { return a + b },\n    '&lt;': function(a, b) { return a &lt; b },\n     // ...\n};\n\nvar op = '+';\nalert(operators[op](10, 20));\n</code></pre>\n\n<p>You can use ascii-based names like <code>plus</code>, to avoid going through strings if you don't need to. However, half of the questions similar to this one were asked because someone had strings representing operators and wanted functions from them.</p>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>I believe you want a variable operator. here's one, created as object. you can change the current operation by changing:</p>\n\n<pre><code>[yourObjectName].operation = \"&lt;\" //changes operation to less than\n\n\nfunction VarOperator(op) { //you object containing your operator\n    this.operation = op;\n\n    this.evaluate = function evaluate(param1, param2) {\n        switch(this.operation) {\n            case \"+\":\n                return param1 + param2;\n            case \"-\":\n                return param1 - param2;\n            case \"*\":\n                return param1 * param2;\n            case \"/\":\n                return param1 / param2;\n            case \"&lt;\":\n                return param1 &lt; param2;\n            case \"&gt;\":\n                return param1 &gt; param2;\n        }\n    }\n}\n\n//sample usage:\nvar vo = new VarOperator(\"+\"); //initial operation: addition\nvo.evaluate(21,5); // returns 26\nvo.operation = \"-\" // new operation: subtraction\nvo.evaluate(21,5); //returns 16\nvo.operation = \"&gt;\" //new operation: \"&gt;\"\nvo.evaluate(21,5); //returns true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>From another answer I recently posted, this is in V8 and I think JavaScriptCore, but not Firefox and it's not spec. Since you can trap the operation and the comparators you can implement operator  native overloading in most situations with a bit of work.</p>\n\n<pre><code>var actions = [];\nvar overload = {\n  valueOf: function(){\n    var caller = arguments.callee.caller;\n    actions.push({\n      operation: caller.name,\n      left: caller.arguments[0] === this ? \"unknown\" : this,\n      right: caller.arguments[0]\n    });\n    return Object.prototype.toString.call(this);\n  }\n};\noverload.toString = overload.valueOf;\noverload == 10;\noverload === 10;\noverload * 10;\n10 / overload;\noverload in window;\n-overload;\n+overload;\noverload &lt; 5;\noverload &gt; 5;\n[][overload];\noverload == overload;\nconsole.log(actions);\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>[ { operation: 'EQUALS',\n    left: overload,\n    right: 10 },\n  { operation: 'MUL',\n    left: overload,\n    right: 10 },\n  { operation: 'DIV',\n    left: 'unknown',\n    right: overload },\n  { operation: 'IN',\n    left: overload,\n    right: DOMWindow },\n  { operation: 'UNARY_MINUS',\n    left: overload,\n    right: undefined },\n  { operation: 'TO_NUMBER',\n    left: overload,\n    right: undefined },\n  { operation: 'COMPARE',\n    left: overload,\n    right: 5 },\n  { operation: 'COMPARE',\n    left: 'unknown',\n    right: overload },\n  { operation: 'ToString',\n    left: 'unknown',\n    right: overload } ]\n</code></pre>\n\n<p>At this point you have all the inputs and the operation so the remaining part is the result of the operation. The receiver of the operation will get a primitive value, either string or number, and you can't prevent this. If it's not an arbitrary reciever, say an instance of the class you've operator overloaded, you can handle various get/set traps to intercept the incoming value/prevent overwriting. You can store the operands and operation in some central lookup and use a simple method to trace a primitive value back to the operation which produced it, and then create whatever logic you want to do your custom operation. Another method which would allow arbitrary receivers which could later be reconstituted into complex forms would be in encoding the data into the primitive value so that it can be reversed back into your complex class. Like say an RGB value of 3 distinct 8bit integers (255,255,255) could be be converted into a single number on the get end and the receiver end could trivial convert it back into its complex components. Or for more complex data you could even return a JSON serialized string.</p>\n\n<p>Having access to Harmony Proxies (Firefox6+, Nodejs with flag) makes this whole process immensely easier, as you can create trapping proxies on basically everything and introspect the entire process from end to end and do whatever you want. The operand instances of your data/class, the valueOf/toString/getters of every possible value the internal engine may access, any receiver object you have pre-awareness of, and even trap arbitrary receivers in the case of <code>with(trappingProxy){ \"all variable lookup, creation, and setting in here invokes traps on our proxy\"; }</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>we can implement this using eval, since we are using it for operator checking.</p>\n\n<pre><code>var number1 = 30;\nvar number2 = 40;\nvar operator = \"===\";\n\nfunction evaluate(param1, param2, operator) {\n     return eval(param1 + operator + param2);\n}\n\nif(evaluate(number1, number2, operator)) {\n}\n</code></pre>\n\n<p>in this way we can use dynamic operator evaluation.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a way to do something similar to either of the following:</p>\n\n<pre><code>var1 = 10; var2 = 20;\nvar operator = \"&lt;\";\nconsole.log(var1 operator var2); // returns true\n</code></pre>\n\n<p>-- OR --</p>\n\n<pre><code>var1 = 10; var2 = 20;\nvar operator = \"+\";\ntotal = var1 operator var2; // total === 30\n</code></pre>\n",
            "last_activity_date": 1401340423,
            "question_id": 5834318,
            "score": 25,
            "tags": [
                "javascript",
                "variables",
                "operators",
                "operator-keyword",
                "dynamic-variables"
            ],
            "title": "Are Variable Operators Possible?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>function x() {}\n</code></pre>\n\n<p>is equivalent (or very similar) to</p>\n\n<pre><code>var x = function() {}\n</code></pre>\n\n<p>unless I'm mistaken.</p>\n\n<p>So there is nothing funny going on.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Function-instantiation is allowed inside and outside of functions. Inside those functions, just like variables, the nested functions are local and therefore cannot be obtained from the outside scope.</p>\n\n<pre><code>function foo() {\n    function bar() {\n        return 1;\n    }\n    return bar();\n}\n</code></pre>\n\n<p><code>foo</code> manipulates <code>bar</code> within itself. <code>bar</code> cannot be touched from the outer scope unless it is defined in the outer scope.</p>\n\n<p>So this will not work:</p>\n\n<pre><code>function foo() {\n    function bar() {\n        return 1;\n    }\n}\n\nbar(); // throws error: bar is not defined\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It's perfectly normal in Javascript (and many languages) to have functions inside functions.</p>\n\n<p>Take the time to learn the language, don't use it on the basis that it's similar to what you already know. I'd suggest watching Douglas Crockford's series of YUI presentations on Javascript, with special focus on <a href=\"http://yuilibrary.com/theater/douglas-crockford/crockonjs-3/\" rel=\"nofollow\">Act III: Function the Ultimate</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Functions are another type of variable in JavaScript (with some nuances of course). Creating a function within another function changes the scope of the function in the same way it would change the scope of a variable. This is especially important for use with closures to reduce total global namespace pollution.</p>\n\n<p>The functions defined within another function won't be accessible outside the function unless they have been attached to an object that is accessible outside the function:</p>\n\n<pre><code>function foo(doBar)\n{\n  function bar()\n  {\n    console.log( 'bar' );\n  }\n\n  function baz()\n  {\n    console.log( 'baz' );\n  }\n\n  window.baz = baz;\n  if ( doBar ) bar();\n}\n</code></pre>\n\n<p>In this example, the baz function will be available for use after the <code>foo</code> function has been run, as it's overridden <code>window.baz</code>. The bar function will not be available to any context other than scopes contained within the <code>foo</code> function.</p>\n\n<p>as a different example:</p>\n\n<pre><code>function Fizz(qux)\n{\n  this.buzz = function(){\n    console.log( qux );\n  };\n}\n</code></pre>\n\n<p>The <code>Fizz</code> function is designed as a constructor so that, when run, it assigns a <code>buzz</code> function to the newly created object.</p>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>When you declare a function within a function, the inner functions are only available in the scope in which they are declared, or in your case, the <code>pad2</code> can only be called in the <code>dmy</code> scope.</p>\n\n<p>All the variables existing in <code>dmy</code> are visible in <code>pad2</code>, but it doesn't happen the other way around :D</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It is called <strong>closure</strong>.</p>\n\n<p>Basically, the function defined within other function is accessible only within this function. But may be passed as a result and then this result may be called.</p>\n\n<p>It is very powerful feature. You can see more explanation here:</p>\n\n<p><a href=\"http://blog.morrisjohns.com/javascript_closures_for_dummies.html\" rel=\"nofollow\">http://blog.morrisjohns.com/javascript_closures_for_dummies.html</a> (<a href=\"http://web.archive.org/web/20120101221030/http://blog.morrisjohns.com/javascript_closures_for_dummies.html\" rel=\"nofollow\">mirror on Archive.org</a>)</p>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>I got a piece of code for javascript which I just do not understand:</p>\n\n<pre><code>function dmy(d) {\n    function pad2(n) {\n        return (n &lt; 10) ? '0' + n : n;\n    }\n\n    return pad2(d.getUTCDate()) + '/' +\n       pad2(d.getUTCMonth() + 1) + '/' +\n       d.getUTCFullYear();\n}\n\nfunction outerFunc(base) {\n    var punc = \"!\";\n\n    //inner function\n    function returnString(ext) {\n       return base + ext + punc;\n    }\n\n    return returnString;\n}\n</code></pre>\n\n<p>How can a function be defined within another function? Can we call pad2() from outside of my() function? </p>\n\n<p>Please put some light on it. Thanks</p>\n",
            "last_activity_date": 1408370668,
            "question_id": 7295634,
            "score": 24,
            "tags": [
                "javascript",
                "nested-function"
            ],
            "title": "JavaScript Nested function"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>A suggestion from <a href=\"http://www.razzed.com/2009/03/16/chrome-problems-window-focus-workaround/\" rel=\"nofollow\">someone's blog</a> is to use this:</p>\n\n<pre><code>if (navigator.userAgent.indexOf('Chrome/') &gt; 0) {\n    if (window.detwin) {\n        window.detwin.close();\n        window.detwin = null;\n    }\n}\nwindow.detwin = window.open(URL,  'windowname', '...');\nwindow.detwin.focus();\n</code></pre>\n\n<p>Following <a href=\"http://code.google.com/p/chromium/issues/detail?id=1383&amp;can=1&amp;q=window.focus%20type%3aBug&amp;colspec=ID%20Stars%20Pri%20Area%20Type%20Status%20Summary%20Modified%20Owner\" rel=\"nofollow\">this bug</a> might be useful.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>UPDATE: This solution appears to no longer work in Chrome.</p>\n\n<p>Unbelievably, the solution is quite simple. I've been trying to figure this issue out for at least a week. All you need to do is blur the window then give it focus. I had tried this previously and it didn't work.</p>\n\n<pre><code>windowHandle.blur();\nwindowHandle.focus();\n</code></pre>\n\n<p>So I ended up trying this instead:</p>\n\n<pre><code>windowHandle.blur();\nsetTimeout(windowHandle.focus, 0);\n</code></pre>\n\n<p>and that seems to work.</p>\n\n<p>I've updated my code here:</p>\n\n<pre><code>MyCompany = { UI: {} }; // Put this here if you want to test the code. I create these namespaces elsewhere in code.\n\nMyCompany.UI.Window = new function() {       \n    // Private fields\n    var that = this;\n    var windowHandles = {};\n    var isChrome = /chrome/.test(navigator.userAgent.toLowerCase());\n\n    // Public Members\n    this.focus = function(windowHandle) {\n        if (!windowHandle) {\n            throw new Exception(\"Window handle can not be null.\");\n        }\n\n        if (isChrome) {\n            windowHandle.blur();\n            setTimeout(windowHandle.focus, 0);                    \n        }\n        else {\n            windowHandle.focus();\n        }    \n    }\n\n    this.windowExists = function(windowTarget) {\n        return windowTarget &amp;&amp; windowHandles[windowTarget] &amp;&amp; !windowHandles[windowTarget].closed;\n    }\n\n    this.open = function(url, windowTarget, windowProperties) {\n        // See if we have a window handle and if it's closed or not.\n        if (that.windowExists(windowTarget)) {\n\n            // We still have our window object so let's check if the URLs is the same as the one we're trying to load.\n            var currentLocation = windowHandles[windowTarget].location;\n\n            if (\n                (\n                    /^http(?:s?):/.test(url) &amp;&amp; currentLocation.href !== url\n                )\n                    ||\n                (\n                    // This check is required because the URL might be the same, but absolute,\n                    // e.g. /Default.aspx ... instead of http://localhost/Default.aspx ...\n                    !/^http(?:s?):/.test(url) &amp;&amp;\n                    (currentLocation.pathname + currentLocation.search + currentLocation.hash) !== url\n                )\n            ) {\n                // Not the same URL, so load the new one.\n                windowHandles[windowTarget].location = url;\n            }\n\n            // Give focus to the window. This works in IE 6/7/8, FireFox, Safari but not Chrome.\n            // Well in Chrome it works the first time, but subsequent focus attempts fail,. I believe this is a security feature in Chrome to avoid annoying popups.\n            that.focus(windowHandles[windowTarget]);\n        }\n        else {\n            // Need to do this so that tabbed browsers (pretty much all browsers except IE6) actually open a new window\n            // as opposed to a tab. By specifying at least one window property, we're guaranteed to have a new window created instead\n            // of a tab.\n            //windowProperties = windowProperties || 'menubar=yes,location=yes,width=700, height=400, scrollbars=yes, resizable= yes';\n            windowProperties = windowProperties || 'menubar=yes,location=yes,width=' + (screen.availWidth - 15) + ', height=' + (screen.availHeight - 140) + ', scrollbars=yes, resizable= yes';\n            windowTarget = windowTarget || \"_blank\";\n\n            // Create a new window.\n            var windowHandle = windowProperties ? window.open(url, windowTarget, windowProperties) : window.open(url, windowTarget);\n\n            if (null === windowHandle || !windowHandle) {\n                alert(\"You have a popup blocker enabled. Please allow popups for \" + location.protocol + \"//\" + location.host);\n            }\n            else {\n                if (\"_blank\" !== windowTarget) {\n                    // Store the window handle for reuse if a handle was specified.\n                    windowHandles[windowTarget] = windowHandle;\n                    windowHandles[windowTarget].focus();\n                }\n            }\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Still the same in version 14.0.835.202 m on Windows 7; found another workaround, not more elegant but at least will avoid losing data on the page: show an alert in the window you want to focus.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here's a workaround I was able to use. It may not work for everybody, but it does what I need it to, and it does handle scenarios where your popup has been updated via Ajax after the initial load (ie - it doesn't go back to the server to reload the page).</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function refocusWindow() {\n  var newName = window.name + '-2'; // you'll want to customize this for your needs\n  var options = ''; // again, customize for your situation\n  var w = window.open('', newName, options);\n  w.document.write(document.getElementById('everything').innerHTML);\n  window.close();\n}    \n</code></pre>\n\n<p>I'm using the new window trick to make it look like I'm just refocusing the page, but I'm actually creating a new window with the exact contents of the old window and then closing the old window.</p>\n\n<p>You'll just need to make sure that you are able to grab everything you need for the new window. I put everything I need in an <code>#everything</code> div; you may need to change this for your needs.</p>\n\n<p>Hope this at least helps some of you.</p>\n\n<p><em><strong>Note</strong>: inline Javascript seems to execute with this approach, linked Javascript may not. Proceed with caution if this will be a problem for you.</em></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The only solution that currently works in Chrome is this code inside new window:</p>\n\n<pre><code>$(\".closeBtn\").click( function(e) \n{\n    window.open(\"\",window.opener.name);\n    window.close();\n});\n</code></pre>\n\n<p>Unfortunately the solution only works under two conditions:</p>\n\n<ul>\n<li><code>window.opener</code> has to have it's name set on document load (<code>window.name=\"WhateverName\";</code>)</li>\n<li><code>window.open()</code> is called on user click</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just found out a quite simple solution.</p>\n\n<p>If you reopen a window that is in a background position, targeting the same window (\"_self\"), Chrome automatically focus that window.</p>\n\n<p>To regain focus of a window you should use the following code:</p>\n\n<pre><code>path = windowHandle.document.URL;\nwindowHandle.open(path,\"_self\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This works fine for me.\nRemoved launching blank window from catch block, instead launching the url directly, which avoids user's confusion when he says blank window.</p>\n\n<pre><code>windowHandle = window.open('', 'PrintInvoice', urlOptions);\ntry {\n    windowHandle.document.location.href = url;\n} catch (exc) {\n    windowHandle.close();\n    windowHandle = window.open(url, 'PrintInvoice', urlOptions);\n}\nwindowHandle.focus();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've been struggling with this issue. I wanted a reference to another window, so I was issuing a:</p>\n\n<pre><code>otherWinRef = window.open(\"\",\"OtherWindow\");\n</code></pre>\n\n<p>However when I issue this command, the browser will switch focus to the OtherWindow. I thought this could be addressed by doing this:</p>\n\n<pre><code>otherWinRef = window.open(\"\",\"OtherWindow\");\nwindow.focus();\n</code></pre>\n\n<p>but the window.focus() has no effect. I tried:</p>\n\n<pre><code>otherWinRef = window.open(\"\",\"OtherWindow\");\nsetTimeout(window.focus,0);\n</code></pre>\n\n<p>But the window.focus() call still had no effect. </p>\n\n<p>I resolve the issue by adding the following code to the OtherWindow's source.</p>\n\n<pre><code>function Bounce(w) {\n\n        window.blur();\n        w.focus();\n}\n</code></pre>\n\n<p>Then I changed the code in the main window to:</p>\n\n<pre><code>otherWinRef = window.open(\"\",\"OtherWindow\");\notherWinRef.Bounce(window);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I fought this in Chrome. I wanted a popup window to display when the user clicked a link on the parent screen. Works the first time the popup window is displayed, but once the popup loses focus, javascript can't bring it back to the front again; you must manually click on the window.  Here is what worked for me. This script is the parent window (the one with the links). As you can see, I put it at the end of the HEAD section::</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  var infoWindow;\n\n  function openLink(url)   {\n    infoWindow = window.open(\"\", \"infoWindow\", \"width=880, height=500, top=20, left=20, scrollbars=yes, toolbar=yes, resizable=yes\");\n    infoWindow.location.href=url;\n    infoWindow.focus();\n  }\n\n  function closeWindow()   {\n    if (infoWindow)   {\n      infoWindow.close();\n    }\n  }\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body bgcolor=\"black\" onFocus=\"closeWindow()\" onLoad=\"closeWindow()\"&gt;\n</code></pre>\n\n<p>All links are <code>&lt;A href=\"Javascript: openLink('url')\"&gt;</code>. If the user does not close the popup window manually, it is closed when the parent window regains focus.  So the popup is destroyed and re-created every time. Seems kinda convoluted, but it works for me.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Maybe not what everyone wants either, but (in chrome) I noticed that an alert raised from the pop uped page keeps hold on the focus of the popup. So I'm doing this now...</p>\n\n<p>On the pop uped page, have a function loaded in the header:</p>\n\n<blockquote>\n  <p><code>&lt;script type=\"text/javascript\"&gt;\n          function confirmBlur() {\n              if (confirm(\"Do you want to close this window?\")) {\n                  window.close();\n              }\n          }\n      &lt;/script&gt;</code></p>\n</blockquote>\n\n<p>And then on the pop uped page:</p>\n\n<pre><code>&lt;body onblur=\"ConfirmBlur()\"&gt;\n</code></pre>\n\n<p>So this is a variant of closing the popup when the focus is lost. But in my case, the popup is an edit window for data. A window, one doesn't want to close unasked. So now the user gets notified the focus is about to drop and gets a choice if he wants to close the window or not. Again, far from perfect, but it worked for me.</p>\n\n<p>(be gentle)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Just wondering if Google Chrome is going to support <code>window.focus()</code> at some point. When I mean support, I mean have it work. The call to it doesn't fail, it just doesn't do anything. All other major browsers do not have this problem: FireFox, IE6-IE8 and Safari.</p>\n\n<p>I have a client-side class for managing browser windows. When I first create a window the window comes into focus, but subsequent attempts to bring focus to the window do not work.</p>\n\n<p>From what I can tell, this appears to be a security feature to avoid annoying pop-ups and it does not appear to be a WebKit issue as it works in Safari.</p>\n\n<p>I know one idea someone brought forward was to close the window then reopen it, but this is a horrible solution. Googling shows that I do not appear to be the only person frustrated with this.</p>\n\n<p>And just to be 100% clear, I mean new windows, not tabs (tabs cannot be focused from what I've read) and all the windows being opened are in the same domain.</p>\n\n<p>Any ideas, workarounds aside from the bad one I mention above?</p>\n\n<p>There is a bug logged on the Chromium project about this, check it out <a href=\"http://code.google.com/p/chromium/issues/detail?id=1383&amp;can=1&amp;q=window.focus%20type%3aBug&amp;colspec=ID%20Stars%20Pri%20Area%20Type%20Status%20Summary%20Modified%20Owner\">here</a>. Thanks for posting that <a href=\"http://stackoverflow.com/users/16511/rich-bradshaw\">Rich</a>.</p>\n\n<pre><code>MyCompany = { UI: {} }; // Put this here if you want to test the code. I create these namespaces elsewhere in code.\n\nMyCompany.UI.Window = new function() {\n    // Private fields\n    var that = this;\n    var windowHandles = {};\n\n    // Public Members\n    this.windowExists = function(windowTarget) {\n        return windowTarget &amp;&amp; windowHandles[windowTarget] &amp;&amp; !windowHandles[windowTarget].closed;\n    }\n\n    this.open = function(url, windowTarget, windowProperties) {\n        // See if we have a window handle and if it's closed or not.\n        if (that.windowExists(windowTarget)) {\n\n            // We still have our window object so let's check if the URLs is the same as the one we're trying to load.\n            var currentLocation = windowHandles[windowTarget].location;\n\n            if (\n                (\n                    /^http(?:s?):/.test(url) &amp;&amp; currentLocation.href !== url\n                )\n                    ||\n                (\n                    // This check is required because the URL might be the same, but absolute,\n                    // e.g. /Default.aspx ... instead of http://localhost/Default.aspx ...\n                    !/^http(?:s?):/.test(url) &amp;&amp;\n                    (currentLocation.pathname + currentLocation.search + currentLocation.hash) !== url\n                )\n            ) {\n                // Not the same URL, so load the new one.\n                windowHandles[windowTarget].location = url;\n            }\n\n            // Give focus to the window. This works in IE 6/7/8, FireFox, Safari but not Chrome.\n            // Well in Chrome it works the first time, but subsequent focus attempts fail,. I believe this is a security feature in Chrome to avoid annoying popups.\n            windowHandles[windowTarget].focus();\n        }\n        else\n        {\n            // Need to do this so that tabbed browsers (pretty much all browsers except IE6) actually open a new window\n            // as opposed to a tab. By specifying at least one window property, we're guaranteed to have a new window created instead\n            // of a tab.\n            windowProperties = windowProperties || 'menubar=yes,location=yes,width=700, height=400, scrollbars=yes, resizable= yes';\n            windowTarget = windowTarget || \"_blank\";\n\n            // Create a new window.\n            var windowHandle = windowProperties ? window.open(url, windowTarget, windowProperties) : window.open(url, windowTarget);\n\n            if (null === windowHandle) {\n                alert(\"You have a popup blocker enabled. Please allow popups for \" + location.protocol + \"//\" + location.host);\n            }\n            else {\n                if (\"_blank\" !== windowTarget) {\n                    // Store the window handle for reuse if a handle was specified.\n                    windowHandles[windowTarget] = windowHandle;\n                    windowHandles[windowTarget].focus();\n                }\n            }\n        }\n    }\n}\n</code></pre>\n",
            "last_activity_date": 1415799092,
            "question_id": 2758608,
            "score": 22,
            "tags": [
                "javascript",
                "javascript-events",
                "cross-browser",
                "google-chrome"
            ],
            "title": "window.focus() not working in Google Chrome"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><em>\"Everything is an object\"</em>... that's one of the big misconceptions that exist all around the language.</p>\n\n<p><strong>Not</strong> <em>everything</em> is an object, there are what we call <em>primitive values</em>, which are string, number, boolean, null, and undefined.</p>\n\n<p>That's true, a string is a <strong>primitive value</strong>, but you can access all the methods inherited from <code>String.prototype</code> as if it were an object.</p>\n\n<p>The property <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_11.2.1\">accessor operators</a> (the dot and the bracket notation), temporarily convert the string value to a String object, for being able to access those methods, e.g.:</p>\n\n<pre><code>\"ab\".charAt(1); // \"b\"\n</code></pre>\n\n<p>What happens behind the scenes is something like this:</p>\n\n<pre><code>new String(\"ab\").charAt(1); // \"b\", temporal conversion ToObject\n</code></pre>\n\n<p>As with the other primitive values, such as <code>Boolean</code>, and <code>Number</code>, there are <em>object wrappers</em>, which are simply objects that contain the primitive value, as in your example:</p>\n\n<pre><code>var strObj = new String(\"\");\nstrObj.prop = \"foo\";\n\ntypeof strObj; // \"object\"\ntypeof strObj.prop; // \"string\"\n</code></pre>\n\n<p>While with a primitive:</p>\n\n<pre><code>var strValue = \"\";\nstrValue.prop = \"foo\";\n\ntypeof strValue; // \"string\"\ntypeof strValue.prop; // \"undefined\"\n</code></pre>\n\n<p>And this happens because again, the property accessor on the second line above, creates a new temporal object, as:</p>\n\n<pre><code>var strValue = \"\";\nnew String(strValue).prop = \"foo\"; // a new object which is discarded\n//...\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 46
                }
            ],
            "body": "<p><em>It's not the setup to a joke, i'm really asking.</em></p>\n\n<p><a href=\"http://www.yuiblog.com/blog/2006/11/13/javascript-we-hardly-new-ya/\">Douglas Crockford is fond of saying</a> that in the javascript prototypal object-oriented language there is no need for <code>new</code>. </p>\n\n<p>He explains that <code>new</code> was simply added to give people coming from class-based (i.e. \"<em>classical</em>\") object oriented programming languages some level of comfort:</p>\n\n<blockquote>\n  <h1><a href=\"http://www.yuiblog.com/blog/2006/11/13/javascript-we-hardly-new-ya/\">JavaScript, We Hardly <code>new</code> Ya</a></h1>\n  \n  <p>JavaScript is a prototypal language, but it has a <code>new</code> operator that tries to make it look sort of like a classical language. That tends to confuse programmers, leading to some problematic programming patterns.</p>\n  \n  <p>You never need to use <code>new Object()</code> in JavaScript. Use the object literal <code>{}</code> instead. </p>\n</blockquote>\n\n<p>Okay, fine:  </p>\n\n<ul>\n<li><code>new</code> bad  </li>\n<li><code>{}</code> good</li>\n</ul>\n\n<p>But then commenter <a href=\"http://www.yuiblog.com/blog/2006/11/13/javascript-we-hardly-new-ya/#comment-588504\">V\u00edtor De Ara\u00fajo pointed out that the two are not the same</a>. He gives an example showing that a <code>string</code> is not like an <code>object</code>:</p>\n\n<blockquote>\n  <p>A string object and a string value are not the same thing:</p>\n\n<pre><code>js&gt; p = \"Foo\"\nFoo\njs&gt; p.weight = 42\n42\njs&gt; p.weight // Returns undefined\n\njs&gt; q = new String(\"Foo\")\nFoo\njs&gt; q.weight = 42\n42\njs&gt; q.weight\n42\n</code></pre>\n  \n  <p>The string value cannot have new properties. The same thing is valid for other types.</p>\n</blockquote>\n\n<p>What is going on here that an <code>string</code> is not an <code>object</code>? Am i confusing javascript with some other languages, where everything is an object?</p>\n",
            "last_activity_date": 1286811438,
            "question_id": 3907613,
            "score": 21,
            "tags": [
                "javascript"
            ],
            "title": "How is a Javascript string not an object?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Regarding Internet Explorer 8 - they say  they have fixed it in MS IE8: <a href=\"http://msdn.microsoft.com/en-us/library/dd361842(VS.85).aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/dd361842(VS.85).aspx</a></p>\n\n<p>A similar thread here on StackOverflow: <a href=\"http://stackoverflow.com/questions/170415/do-you-know-what-may-cause-memory-leaks-in-javascript\">http://stackoverflow.com/questions/170415/do-you-know-what-may-cause-memory-leaks-in-javascript</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The vast majority of leaks we talk about with JavaScript are specifically in IE6-7 when you make a reference loop between JavaScript objects and host objects like DOM nodes.</p>\n\n<p>In IE6 this is particularly pernicious in that you don't get the memory back when you leave the page; it's gone until you quit the browser. In IE7 clearing out the page does now return the memory, but you can still have difficulty when you have a long-running application. IE8 solves most of this problem properly by turning the DOM nodes into native JavaScript objects instead of host objects. (You could still trigger the leaks in IE8 by including other non-native objects like ActiveX objects in a reference loop.)</p>\n\n<p>There will certainly still be small obscure memory leaks lurking around in random places for all the browsers, especially in older versions. But there's no one way to easily categorise and avoid them like with the IE refloop issue.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>To add to <em>bobince</em> answer, I did some tests with <strong>IE8</strong>.</p>\n\n<p>I tried almost all examples provided at <a href=\"http://www.javascriptkit.com/javatutors/closuresleak/index.shtml\">http://www.javascriptkit.com/javatutors/closuresleak/index.shtml</a></p>\n\n<p>No one of them is leaking memory anymore (at least not in a perceivable way), except the example that <strong>removes child nodes with events still attached to them</strong>.</p>\n\n<p>This type of example I think it's better explained by <a href=\"http://javascript.crockford.com/memory/leak.html\">Douglas Crockford</a> in his queuetest2.</p>\n\n<p>This one <strong>still leaks memory on IE8</strong> and it's pretty easy to test by simply running <a href=\"http://javascript.crockford.com/memory/queuetest2.html\">the test script</a> and looking at Windows Task Manager - Performance - PF Usage. You will see PF Usage increases by almost 1MB per loop (very fast).</p>\n\n<p>But <strong>in IE8 the memory is released on page unload</strong> (like <strong>navigating to a new page</strong> or <strong>reloading the same page</strong>) and obviously also when totally closing the browser.</p>\n\n<p>So in order for a final user to perceive this memory leaks on IE8 (as reduced systerm performances), he needs to stay on the same page for a long time, which in now days it can frequently happen with AJAX, but this page need also to do <strong>hundreds of childnodes removal of elements with event attached to them</strong>.</p>\n\n<p>Douglas Crockford test is stressing the browser with <strong>10000 nodes added and then removed</strong>, that's excellent for showing you the issue, but in real life I never had a page that removed more than 10 elements. INMHO usually it's faster to use <code>display: none</code> rather than removing an entire set of nodes, that's why I don't use <code>removeChild</code> that much.</p>\n\n<hr>\n\n<p>For whoever might be more interested in the IE8 memory leak explained above, I did another test and it seems <strong>mem leaks do not show up at all in IE8 when using <code>innerHTML</code></strong> in place of <code>appendChild/removeChild</code> to add/remove child elements with attached events. So apparently Douglas Crockford <a href=\"http://javascript.crockford.com/memory/leak.html\">purge function</a> (suggested by him to prevent memory leaks in IE) is not necessary anymore in IE8 at least when using <code>innerHTML</code>...</p>\n\n<p>(<strong>EDITED thanks to 4esn0k comment below</strong>)\n...moreover Douglas Crockford <a href=\"http://javascript.crockford.com/memory/leak.html\">purge function</a> does NOT work at all on IE8, in his code <code>var a = d.attributes</code> returns NO <code>onclick</code> attributes (or any other <code>onevent</code> attributes) that were added at runtime on IE8 (they do are returned on IE7).</p>\n\n<p>Douglas Crockford says:</p>\n\n<blockquote>\n  <p>\"The purge function should be called before removing any element, either\n  by the removeChild method, or by\n  setting the <strong>innerHTML</strong> property.\"</p>\n</blockquote>\n\n<p>I provide here the code for the test:</p>\n\n<pre><code>&lt;body&gt;    \n   &lt;p&gt;queuetest2 similar to the one provided by Douglas Crockford\n   at http://www.crockford.com/javascript/memory/leak.html\n   &lt;br&gt;but this one adds/removes spans using innerHTML\n   instead of appendChild/removeChild.&lt;/p&gt;\n\n   &lt;div id=\"test\"&gt;&lt;/div&gt;    \n   &lt;script&gt;\n       /* ORIGINAL queuetest2 CODE FROM DOUGLAS CROCKFORD IS HERE\n          http://www.crockford.com/javascript/memory/queuetest2.html */\n\n      (function (limit, delay) \n      {\n          var n = 0;\n          var add = true;\n\n          function makeSpan(n) \n          {\n              var div = document.getElementById('test');\n              //adding also an inline event to stress more the browser\n              div.innerHTML = \"&lt;span onmouseover=\\\"this.style.color = '#00ff00';\\\"&gt;\" + n + \"&lt;/span&gt;\";\n              var s = div.getElementsByTagName('span')[0];\n              s.onclick = function(e) \n              {\n                  s.style.backgroundColor = 'red';\n                  alert(n);\n              };\n              return s;\n          }\n\n          function process(n) \n          {\n              if(add)                    \n                 s = makeSpan(n);\n              else\n                 s.parentNode.innerHTML = \"\"; //removing span by clearing the div innerHTML\n              add = !add;\n          }\n\n          function loop() \n          {\n              if (n &lt; limit) \n              {\n                  process(n);\n                  n += 1;\n                  setTimeout(loop, delay);\n              }\n          }\n\n          loop();\n      })(10000, 10);\n\n   &lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>From what I recall of a not too distant past, Javascript interpreters suffered from memory leaking issues when faced with circular references.</p>\n\n<p>Is it still the case in the latest browsers? (e.g. Chrome, FF 3.5 etc)</p>\n",
            "last_activity_date": 1328106370,
            "question_id": 1999840,
            "score": 21,
            "tags": [
                "javascript",
                "memory-leaks",
                "browser",
                "circular-reference"
            ],
            "title": "javascript, circular references and memory leaks"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Based on your previous questions, I suppose you want to run JavaScript snippets from Java's <code>WebDriver</code>. Please correct me if I'm wrong.</p>\n\n<p>The <code>WebDriverJs</code> is actually \"just\" another <code>WebDriver</code> language binding (you can write your tests in Java, C#, Ruby, Python, JS and possibly even more languages as of now). This one, particularly, is JavaScript, and allows you therefore to write tests in JavaScript.</p>\n\n<p>If you want to run JavaScript code in Java <code>WebDriver</code>, do this instead:</p>\n\n<pre><code>WebDriver driver = new AnyDriverYouWant();\nif (driver instanceof JavascriptExecutor) {\n    ((JavascriptExecutor)driver).executeScript(\"yourScript();\");\n}\n</code></pre>\n\n<p>I like to do this, also:</p>\n\n<pre><code>WebDriver driver = new AnyDriverYouWant();\nJavascriptExecutor js;\nif (driver instanceof JavascriptExecutor) {\n    js = (JavascriptExecutor)driver;\n}\njs.executeScript(\"return document.getElementById('someId');\");\n</code></pre>\n\n<p>You can find more documentation on this <a href=\"http://seleniumhq.org/docs/03_webdriver.html#using-javascript\">here, in the documenation</a>, or, preferably, <a href=\"http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/JavascriptExecutor.html\">in the JavaDocs of <code>JavascriptExecutor</code></a>.</p>\n\n<p>The <code>executeScript()</code> takes function calls and raw JS, too. You can <code>return</code> a value from it and you can pass lots of complicated arguments to it, some random examples:</p>\n\n<ol>\n<li><pre><code>// returns the right WebElement\n// it's the same as driver.findElement(By.id(\"someId\"))\njs.executeScript(\"return document.getElementById('someId');\");\n</code></pre></li>\n<li><pre><code>// draws a border around WebElement\nWebElement element = driver.findElement(By.anything(\"tada\"));\njs.executeScript(\"arguments[0].style.border='3px solid red'\", element);\n</code></pre></li>\n<li><pre><code>// changes all input elements on the page to radio buttons\njs.executeScript(\n        \"var inputs = document.getElementsByTagName('input');\" +\n        \"for(var i = 0; i &lt; inputs.length; i++) { \" +\n        \"    inputs[i].type = 'radio';\" +\n        \"}\" );\n</code></pre></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>You need to run this command in the top-level directory of a Selenium SVN repository checkout.</p>\n",
                    "is_accepted": false,
                    "score": -3
                }
            ],
            "body": "<p>I want to use JavaScript with WebDriver (Selenium 2) using Java. I visited the following URL:\n<a href=\"http://code.google.com/p/selenium/wiki/WebDriverJs#Getting_Started\">http://code.google.com/p/selenium/wiki/WebDriverJs#Getting_Started</a></p>\n\n<p>In Getting Started: there is an instruction at 1st line to run as:</p>\n\n<p>$ ./go webdriverjs</p>\n\n<p>My question: From which folder/location the command mentioned above will be run/executed?</p>\n",
            "last_activity_date": 1415844400,
            "question_id": 11430773,
            "score": 20,
            "tags": [
                "java",
                "javascript",
                "selenium-webdriver"
            ],
            "title": "How to use JavaScript with Selenium WebDriver using Java"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You could do it this way:</p>\n\n<pre><code>arr = []\narr.push = function(data) {\n  alert(data); //callback\n\n  return Array.prototype.push.call(this, data);\n}\n</code></pre>\n\n<p>If you're in a situation without call, you could also go for this solution:</p>\n\n<pre><code>arr.push = function(data) {\n  alert(data); //callback\n\n  //While unlikely, someone may be using psh to store something important\n  //So we save it.\n  var saved = this.psh;\n  this.psh = Array.prototype.push;\n  var ret = this.psh(data);\n  this.psh = saved;\n  return ret;\n}\n</code></pre>\n\n<p>Edit:</p>\n\n<p>While I'm telling you how to do it, you might be better served with using a different method that performs the callback then just calls push on the array rather than overriding push. You may end up with some unexpected side effects. For instance, push appears to be varadic (takes a variable number of arguments, like printf), and using the above would break that.</p>\n\n<p>You'd need to do mess with _Arguments() and _ArgumentsLength() to properly override this function. I highly suggest against this route. </p>\n\n<p>Edit once more:\nOr you could use \"arguments\", that'd work too. Still advise against taking this route though.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Since push allows more than one element to be pushed, I use the arguments variable below to let the real push method have all arguments.</p>\n\n<p>This solution only affects the arr variable:</p>\n\n<pre><code>arr.push = function (){\n    //Do what you want here...\n    return Array.prototype.push.apply(this,arguments);\n}\n</code></pre>\n\n<p>This solution affects all arrays. I do not recommend that you do that.</p>\n\n<pre><code>Array.prototype.push=(function(){\n    var original = Array.prototype.push;\n    return function() {\n        //Do what you want here.\n        return original.apply(this,arguments);\n    };\n})();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>I would do this:</p>\n\n<pre><code>var callback = function() { alert(\"called\"); };\nvar original = Array.prototype.push;\nArray.prototype.push = function()\n{\n  callback();\n  return original.apply(this, arguments);\n};\n</code></pre>\n\n<p>If you wanted an argument to be a callback, you could do this:</p>\n\n<pre><code>var original = Array.prototype.push;\nArray.prototype.push = function(callback)\n{\n  callback();\n  return original.apply(this, Array.prototype.slice.call(arguments, 1));\n}\n</code></pre>\n\n<p>These both have been tested.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Array.prototype.push was introduced in JavaScript 1.2. It is really as simple as this:</p>\n\n<pre><code>Array.prototype.push = function() {\n    for( var i = 0, l = arguments.length; i &lt; l; i++ ) this[this.length] = arguments[i];\n    return this.length;\n};\n</code></pre>\n\n<p>You could always add something in the front of that.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I wanted to call a function <strong>after</strong> the object has been pushed to the array, so I did the following:</p>\n\n<pre><code>myArray.push = function() { \n    Array.prototype.push.apply(this, arguments);\n    myFunction();\n    return myArray.length;\n};\n\nfunction myFunction() {\n    for (var i = 0; i &lt; myArray.length; i++) {\n        //doSomething;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to extend the Array.push method so that using push will trigger a callback method, then perform the normal array function.</p>\n\n<p>I'm not quite sure how to do this, but here's some code I've been playing with unsuccessfully.</p>\n\n<pre><code>arr = [];\narr.push = function(data){\n\n\t//callback method goes here\n\n\tthis = Array.push(data);\n\treturn this.length;\n\n}\n\narr.push('test');\n</code></pre>\n",
            "last_activity_date": 1424533092,
            "question_id": 572604,
            "score": 18,
            "tags": [
                "javascript",
                "arrays",
                "prototype"
            ],
            "title": "How to extend Array.prototype.push()?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Wrapping a function between parenthesis ensures this function to be evaluated as a <em>function expression</em>.</p>\n\n<p>That happens because the <a href=\"http://bclary.com/2004/11/07/#a-11.1.6\"><em>Grouping Operator</em></a> (the parentheses), can only evaluate <em>expressions</em>.</p>\n\n<p>If no parenthesis are used, it will be interpreted as a <em>function declaration</em>, and it will cause a syntax error, since the function name is <em>not</em> optional for function declarations.</p>\n\n<pre><code>(function(arg){\n  alert(arg); // alerts test\n})(\"test\");\n</code></pre>\n\n<p>In the above example, the function expression is automatically executed, passing an argument.</p>\n\n<p>That pattern is heavily used by jQuery plugins, since jQuery can run in <em>noConflict</em> mode, the <code>$</code> global variable will not be created, so the jQuery global object is passed as an argument of this <em>anonymous function</em> and inside of that function, you can freely refer to it as <code>$</code> (the received argument).</p>\n\n<p>Keep in mind that also, the function context (the <code>this</code> keyword) inside self-executing function expressions invoked like the above example, will refer always to the Global object.</p>\n\n<p>For a more in-depth info about the differences between function expressions and function declarations, give a look to the following resources:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/1634268/explain-javascripts-encapsulated-anonymous-function-syntax/\">Explain JavaScript\u2019s encapsulated anonymous function syntax</a></li>\n<li><a href=\"http://yura.thinkweb2.com/named-function-expressions/\">Named function expressions demystified</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p><code>function($) { ... }</code> creates a function that accepts a parameter called <code>$</code>.</p>\n\n<p>Wrapping in in parentheses does nothing.</p>\n\n<p>Adding <code>(jQuery)</code> calls the function with <code>jQuery</code> as a parameter.</p>\n\n<hr>\n\n<p>This is done to make the function independent of  <code>$</code> in the global scope.<br>\nWhen you write <code>$</code> in the function, you're referring to the <em>parameter</em> <code>$</code>, not the global variable <code>$</code>. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is an article on closures: <a href=\"http://www.jibbering.com/faq/faq_notes/closures.html\" rel=\"nofollow\">http://www.jibbering.com/faq/faq_notes/closures.html</a></p>\n\n<p>Basically, as CMS has said, it is a function expression.  There is a perfect example to help you better understand about 2/3 of the way down that page.</p>\n\n<p>The <code>jQuery</code> in the last set of parentheses means you're passing the jQuery object to the inner function.  That inner function takes the object and it is assigned as <code>$</code>.  So, when you're accessing the <code>$</code> inside the function, you're actually acting upon the jQuery object you've passed.</p>\n\n<p>As for mixing these with jQuery and Mootools, I've never used Mootools so I'm not sure how it assigns itself.  The only thing I would think is that if it uses <code>$</code> like jQuery, you can call <code>jQuery.noConflict();</code> and reassign jQuery to another variable, maybe <code>var $j = jQuery;</code>  Then, you can use Mootools as you normally would.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>CMS have given you the correct answer but I just want to add that this is not a closure. This is just the () operator being used to return the result of an expression which in this case is a function expression and the fact that in javascript, a returned anonymous function can be called directly. So this is simply combining both:</p>\n\n<pre><code>var x = (1+1); // &lt;-- () evaluates an expression\n</code></pre>\n\n<p>and:</p>\n\n<pre><code>var arr = [0,1,2];\narr.push(function(text){alert(text)});\narr[3]('hello'); // &lt;-- function returned by array called directly\n</code></pre>\n\n<p>And as for the $ parameter, that's just one of the characters that javascript allows for variable names. Your examples is exactly equivalent to:</p>\n\n<pre><code>(function(jQ){})(jQuery);\n(function(moo){})(mooTools);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>the mootools equivalent for namespacing $ is:</p>\n\n<pre><code>(function($) {\n    // $ is the mootools one (aliasing document.id)\n})(document.id);\n</code></pre>\n\n<p>you can combine them into one file, but keep in mind that mootools is a prototypical framework and $ only serves the purpose of a selector whereas all functions go into the element/array/class etc prototypes. hence doing this in mootools works:</p>\n\n<pre><code>var foo = $(\"bar\");\nfoo.hide(); // the element inherits .hide()\n</code></pre>\n\n<p>but in jquery it will fail and needs to be transcribed as</p>\n\n<pre><code>var foo = $(\"#bar\");\n$(foo).hide();\n</code></pre>\n\n<p>the point is, you can't namespace the stuff that mootools exports into prototypes.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The main point for doing this is so that objects created within the function's expression can be utilized from properties and methods attached to passed in objects, without exposing those objects publicly.  This can aid in preventing variable collisions.  It also allows for variables created to be accessed as private storage for anything that is attached..</p>\n\n<p><code><pre>(function($){\n//jQuery is available here as $<br />\nvar myPrivateArray = []; //this is private<br />\n$.addItem = function(item) {\n  myPrivateArray.push(item);\n}<br />\n})(jQuery);</p>\n\n<p>//I can't access myPrivateArray here...\n//but I can use jQuery.addItem to add something.</pre></code></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>what does this mean?</p>\n\n<pre><code>(function($){\n})(jQuery);\n</code></pre>\n\n<p>to make the question clearer, what does wrapping a function in parenthesis mean in JS (sorry, I'm a bit confused on the concept of closures). What about the $ parameter? and the \"jQuery\" in the end parenthesis?</p>\n\n<p>Can I do the same with mootools and combine them in 1 JS file?</p>\n\n<pre><code>(function($){})(jQuery);\n\n(function($){})(mooTools);\n</code></pre>\n\n<p>I have only worked with jquery and am planning to work with Mootools</p>\n",
            "last_activity_date": 1262950710,
            "question_id": 2024888,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "mootools"
            ],
            "title": "a simple question on jquery closure"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Check out <a href=\"https://github.com/chrisa/node-rsa\">node-rsa</a>.</p>\n\n<p>It's a node.js module</p>\n\n<blockquote>\n  <p>This module provides access to RSA public-key routines from OpenSSL.\n  Support is limited to RSAES-OAEP and encryption with a public key, decryption with a private key.</p>\n</blockquote>\n\n<p>Maybe you can port it to run in the browser.</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>RSA client side library for javascript:\n<a href=\"https://www.pidder.com/pidcrypt/?page=rsa\">https://www.pidder.com/pidcrypt/?page=rsa</a></p>\n\n<p>PHP server side component:\n<a href=\"http://phpseclib.sourceforge.net/\">http://phpseclib.sourceforge.net/</a></p>\n\n<p>Good luck!</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>RSA example usage for <a href=\"https://www.pidder.com/pidcrypt/?page=rsa\" rel=\"nofollow\">pidCrypt</a> (js) and <a href=\"http://phpseclib.sourceforge.net/\" rel=\"nofollow\">phpseclib</a> (php).</p>\n\n<p><strong>Do not reuse the private key in this working example.</strong></p>\n\n<p><strong>pidCrypt encryption</strong></p>\n\n<pre><code>//From the pidCrypt example sandbox\nfunction certParser(cert) {\n    var lines = cert.split('\\n');\n    var read = false;\n    var b64 = false;\n    var end = false;\n    var flag = '';\n    var retObj = {\n    };\n    retObj.info = '';\n    retObj.salt = '';\n    retObj.iv;\n    retObj.b64 = '';\n    retObj.aes = false;\n    retObj.mode = '';\n    retObj.bits = 0;\n    for (var i = 0; i &lt; lines.length; i++) {\n        flag = lines[i].substr(0, 9);\n        if (i == 1 &amp;&amp; flag != 'Proc-Type' &amp;&amp; flag.indexOf('M') == 0)//unencrypted cert?\n        b64 = true;\n        switch (flag) {\n            case '-----BEGI':\n                read = true;\n                break;\n            case 'Proc-Type':\n                if (read)retObj.info = lines[i];\n                break;\n            case 'DEK-Info:':\n                if (read) {\n                    var tmp = lines[i].split(',');\n                    var dek = tmp[0].split(': ');\n                    var aes = dek[1].split('-');\n                    retObj.aes = (aes[0] == 'AES') ? true : false;\n                    retObj.mode = aes[2];\n                    retObj.bits = parseInt(aes[1]);\n                    retObj.salt = tmp[1].substr(0, 16);\n                    retObj.iv = tmp[1];\n                }\n                break;\n            case '':\n                if (read)b64 = true;\n                break;\n            case '-----END ':\n                if (read) {\n                    b64 = false;\n                    read = false;\n                }\n                break;\n                default : if (read &amp;&amp; b64)retObj.b64 += pidCryptUtil.stripLineFeeds(lines[i]);\n        }\n    }\n    return retObj;\n}\n\nvar strCreditCardPublicKey=\"-----BEGIN PUBLIC KEY-----\\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC\\/tI7cw+gnUPK2LqWp50XboJ1i\\njrLDn+4\\/gPOe+pB5kz4VJX2KWwg9iYMG9UJ1M+AeN33qT7xt9ob2dxgtTh7Mug2S\\nn1TLz4donuIzxCmW+SZdU1Y+WNDINds194hWsAVhMC1ClMQTfldUGzQnI5sXvZTF\\nJWp\\/9jheCNLDRIkAnQIDAQAB\\n-----END PUBLIC KEY-----\\n\";\n\nvar objParams=certParser(strCreditCardPublicKey);\nvar binaryPrivateKey=pidCryptUtil.decodeBase64(objParams.b64);\n\nvar rsa=new pidCrypt.RSA();\n\nvar asn=pidCrypt.ASN1.decode(pidCryptUtil.toByteArray(key));\nvar tree=asn.toHexTree();\nrsa.setPublicKeyFromASN(tree);\n\nvar strHexSensitiveDataEncrypted=rsa.encrypt(\"4111111111111111\");\n\nvar strBase64SensitiveDataEncrypted=pidCryptUtil.fragment(pidCryptUtil.encodeBase64(pidCryptUtil.convertFromHex(strHexSensitiveDataEncrypted)), 64))\n\nconsole.log(strBase64SensitiveDataEncrypted);\n</code></pre>\n\n<p>.</p>\n\n<p><strong>phpseclib decryption</strong></p>\n\n<pre><code>require_once(\"Crypt/RSA.php\");\n\nfunction decrypt($strBase64CipherText)\n{\n    //CRYPT_RSA_MODE_INTERNAL is slow\n    //CRYPT_RSA_MODE_OPENSSL is fast, but requires openssl to be installed, configured and accessible.\n    define(\"CRYPT_RSA_MODE\", CRYPT_RSA_MODE_INTERNAL);\n\n    $rsa=new Crypt_RSA();\n\n\n    //$strPrivateKey=file_get_contents(\"private.pem\");\n    //This private key is for example purposes\n    //DO NOT REUSE\n    $strPrivateKey=\"-----BEGIN RSA PRIVATE KEY-----\n        MIICXQIBAAKBgQDBNHK7R2CCYGqljipbPoj3Pwyz4cF4bL5rsm1t8S30gbEbMnKn\n        1gpzteoPlKp7qp0TnsgKab13Fo1d+Yy8u3m7JUd/sBrUa9knY6dpreZ9VTNul8Bs\n        p2LNnAXOIA5xwT10PU4uoWOo1v/wn8eMeBS7QsDFOzIm+dptHYorB3DOUQIDAQAB\n        AoGBAKgwGyxy702v10b1omO55YuupEU3Yq+NopqoQeCyUnoGKIHvgaYfiwu9sdsM\n        ZPiwxnqc/7Eo6Zlw1XGYWu61GTrOC8MqJKswJvzZ0LrO3oEb8IYRaPxvuRn3rrUz\n        K7WnPJyQ2FPL+/D81NK6SH1eHZjemb1jV9d8uGb7ifvha5j9AkEA+4/dZV+dZebL\n        dRKtyHLfbXaUhJcNmM+04hqN1DUhdLAfnFthoiSDw3i1EFixvPSiBfwuWC6h9mtL\n        CeKgySaOkwJBAMSdBhn3C8NHhsJA8ihQbsPa6DyeZN+oitiU33HfuggO3SVIBN/7\n        HmnuLibqdxpnDOtJT+9A+1D29TkNENlTWgsCQGjVIC8xtFcV4e2s1gz1ihSE2QmU\n        JU9sJ3YeGMK5TXLiPpobHsnCK8LW16WzQIZ879RMrkeDT21wcvnwno6U6c8CQQCl\n        dsiVvXUmyOE+Rc4F43r0VRwxN9QI7hy7nL5XZUN4WJoAMBX6Maos2Af7NEM78xHK\n        SY59+aAHSW6irr5JR351AkBA+o7OZzHIhvJfaZLUSwTPsRhkdE9mx44rEjXoJsaT\n        e8DYZKr84Cbm+OSmlApt/4d6M4YA581Os1eC8kopewpy\n        -----END RSA PRIVATE KEY-----\n    \";\n    $strPrivateKey=preg_replace(\"/[ \\t]/\", \"\", $strPrivateKey);//this won't be necessary when loading from PEM\n\n\n    $rsa-&gt;loadKey($strPrivateKey);\n\n    $binaryCiphertext=base64_decode($strBase64CipherText);\n\n    $rsa-&gt;setEncryptionMode(CRYPT_RSA_ENCRYPTION_PKCS1);\n    $strBase64DecryptedData=$rsa-&gt;decrypt($binaryCiphertext);\n\n    return base64_decode($strBase64DecryptedData);\n}\n\n//The pidCrypt example implementation will output a base64 string of an encrypted base64 string which contains the original data, like this one:\n$strBase64CipherText=\"JDlK7L/nGodDJodhCj4uMw0/LW329HhO2EvxNXNUuhe+C/PFcJBE7Gp5GWZ835fNekJDbotsUFpLvP187AFAcNEfP7VAH1xLhhlB2a9Uj/z4Hulr4E2EPs6XgvmLBS3MwiHALX2fES5hSKY/sfSUssRH10nBHHO9wBLHw5mRaeg=\";\n\n$binaryDecrypted=decrypt($strBase64CipherText);\n\n//should output '4111111111111111'\nvar_export($binaryDecrypted);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is based on the <a href=\"http://en.wikipedia.org/wiki/Tiny_Encryption_Algorithm\" rel=\"nofollow\">Tiny Encryption Algorithm</a>, which is a symmetric (private key) encryption system. It may nevertheless be of use to you because of its light weight.</p>\n\n<p>The reference is part of a disused site, but the text and the sources are still there: <a href=\"http://www.babelfish.nl/babelfish/Javascript-PHP%20client-server.html\" rel=\"nofollow\">http://www.babelfish.nl/babelfish/Javascript-PHP%20client-server.html</a> </p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I've used something similar for my login page; it encrypts login credentials using the given public key information (N, e) which can be decrypted in PHP.</p>\n\n<p>It uses the following files that are part of <a href=\"http://www-cs-students.stanford.edu/~tjw/jsbn/\"><code>JSBN</code></a>:</p>\n\n<ul>\n<li><code>jsbn.js</code> - to work with big integers</li>\n<li><code>rsa.js</code> - for RSA encryption only (uses jsbn.js)</li>\n<li><code>rng.js</code> - basic entropy collector</li>\n<li><code>prng4.js</code> - ARC4 RNG backend</li>\n</ul>\n\n<p>To encrypt data:</p>\n\n<pre><code>$pk = '-----BEGIN RSA PRIVATE KEY-----\n...\n-----END RSA PRIVATE KEY-----';\n$kh = openssl_pkey_get_private($pk);\n$details = openssl_pkey_get_details($kh);\n\nfunction to_hex($data)\n{\n    return strtoupper(bin2hex($data));\n}\n\n?&gt;\n&lt;script&gt;\nvar rsa = new RSAKey();\nrsa.setPublic('&lt;?php echo to_hex($details['rsa']['n']) ?&gt;', '&lt;?php echo to_hex($details['rsa']['e']) ?&gt;');\n\n// encrypt using RSA\nvar data = rsa.encrypt('hello world');\n&lt;/script&gt;\n</code></pre>\n\n<p>This is how you would decode the sent data:</p>\n\n<pre><code>$kh = openssl_pkey_get_private($pk);\n$details = openssl_pkey_get_details($kh);\n// convert data from hexadecimal notation\n$data = pack('H*', $data);\nif (openssl_private_decrypt($data, $r, $kh)) {\n   echo $r;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I'd like to encrypt in JavaScript, decrypt in PHP, using public-key cryptography. I've been trying to find libraries that can accomplish this, but am having issues.</p>\n\n<p><strike>I am currently looking at <a href=\"http://openpgpjs.org/\">openpgpjs</a>, but I need support in all browsers, and even the test page has errrors on the only listed as supported browser (Google Chrome).</strike></p>\n\n<p>Notes about the final goal:</p>\n\n<p><strong>The TCP connection is already protected by SSL. The main purpose of this layer of protection is defending against intentional or unintentional webserver logging, crash dumps, etc.</strong></p>\n\n<p>On the PHP side, a temporary private key will be generated (it will expire after a short time). The caller (in Javascript) is responsible for asking for a new public key when it expires. The reason for private key expiration is to prevent logged encrypted data decryption, in case the server which stores the private key is later compromised.</p>\n\n<p>Servers compromised scenario: someone gets his hands on backups for all machines except the database server (and cannot access the database due to firewalling, even if he finds out the user and password). Since the private key which encrypted the logged data no longer exists, there is nothing the attacker can do.</p>\n",
            "last_activity_date": 1419863745,
            "question_id": 12457234,
            "score": 13,
            "tags": [
                "php",
                "javascript",
                "rsa",
                "pgp",
                "openpgp"
            ],
            "title": "Encrypt in Javascript, decrypt in PHP, using public-key cryptography"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>how about calling <code>__doPostBack('ctl00$MainContent$gvSearchResults','Page$'+pageid);</code> (javascript method, via python-spidermonkey)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>instead of struggling with python-spidermonkey try <a href=\"http://www.pyside.org/docs/pyside/PySide/QtWebKit/index.html\" rel=\"nofollow\">webkit's qt python bindings</a>.</p>\n\n<p>Here is a <a href=\"http://blog.sitescraper.net/2010/06/scraping-javascript-webpages-in-python.html\" rel=\"nofollow\">full example to execute JavaScript and extract the final HTML</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I mainly use <a href=\"http://htmlunit.sourceforge.net/\">HtmlUnit</a> under jython for these use cases. Also I published a simple article on the subject: <a href=\"http://blog.databigbang.com/web-scraping-ajax-and-javascript-sites/\">Web Scraping Ajax and Javascript sites</a>.</p>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>I am navigating a site using python's mechanize module and having trouble clicking on a javascript link for next page.  I did a bit of reading and people suggested I need python-spidermonkey and DOMforms.  I managed to get them installed by I am not sure of the syntax to actually click on the link.</p>\n\n<p>I can identify the code on the page as: </p>\n\n<pre><code>&lt;a href=\"javascript:__doPostBack('ctl00$MainContent$gvSearchResults','Page$2')\"&gt;2&lt;/a&gt;\n</code></pre>\n\n<p>Does anyone know how to click on it? or if perhaps there's another tool.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1322882702,
            "question_id": 5207948,
            "score": 13,
            "tags": [
                "javascript",
                "python",
                "screen-scraping",
                "mechanize",
                "spidermonkey"
            ],
            "title": "Click on a javascript link within python?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Because the URL isn't on the same domain as your website, you need to use JSONP.</p>\n\n<p>For example: (In jQuery):</p>\n\n<pre><code>$.getJSON(\n    'http://soundcloud.com/oembed?url=http%3A//soundcloud.com/forss/flickermood&amp;format=js&amp;callback=?', \n    function(data) { ... }\n);\n</code></pre>\n\n<p>This works by creating a <code>&lt;script&gt;</code> tag like this one:</p>\n\n<pre><code>&lt;script src=\"http://soundcloud.com/oembed?url=http%3A//soundcloud.com/forss/flickermood&amp;format=js&amp;callback=someFunction\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Their server then emits Javascript that calls <code>someFunction</code> with the data to retrieve.<br>\n`someFunction is an internal callback generated by jQuery that then calls your callback.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You make a bog standard HTTP GET Request. You get a bog standard HTTP Response with an application/json content type and a JSON document as the body. You then parse this.</p>\n\n<p>Since you have tagged this 'JavaScript' (I assume you mean \"from a web page in a browser\"), and I assume this is a third party service, you're stuck. You can't fetch data from remote URI in JavaScript unless explicit workarounds (such as JSONP) are put in place.</p>\n\n<p>Oh wait, reading the documentation you linked to - JSONP is available, but you must say 'js' not 'json' and specify a callback: format=js&amp;callback=foo</p>\n\n<p>Then you can just define the callback function:</p>\n\n<pre><code>function foo(myData) { \n    // do stuff with myData\n}\n</code></pre>\n\n<p>And then load the data:</p>\n\n<pre><code>var script = document.createElement('script');\nscript.type = 'text/javascript';\nscript.src = theUrlForTheApi;\ndocument.body.appendChild(script);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It seems they offer a <code>js</code> option for the format parameter, which will return JSONP. You can retrieve JSONP like so:</p>\n\n<pre><code>function getJSONP(url, success) {\n\n    var ud = '_' + +new Date,\n        script = document.createElement('script'),\n        head = document.getElementsByTagName('head')[0] \n               || document.documentElement;\n\n    window[ud] = function(data) {\n        head.removeChild(script);\n        success &amp;&amp; success(data);\n    };\n\n    script.src = url.replace('callback=?', 'callback=' + ud);\n    head.appendChild(script);\n\n}\n\ngetJSONP('http://soundcloud.com/oembed?url=http%3A//soundcloud.com/forss/flickermood&amp;format=js&amp;callback=?', function(data){\n    console.log(data);\n});  \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>A standard http GET request should do it. Then you can use JSON.parse() to make it into a json object. </p>\n\n<pre><code>function Get(yourUrl){\nvar Httpreq = new XMLHttpRequest(); // a new request\nHttpreq.open(\"GET\",yourUrl,false);\nHttpreq.send(null);\nreturn Httpreq.responseText;          \n\n    }\n</code></pre>\n\n<p>then</p>\n\n<pre><code>var json_obj = JSON.parse(Get(yourUrl));\nconsole.log(\"this is the author name: \"+json_obj.author_name);\n</code></pre>\n\n<p>that's basically it</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>DickFeynman's answer is a workable solution for any circumstance in which JQuery is not a good fit, or isn't otherwise necessary. As ComFreek notes, this requires setting the CORS headers on the server-side. If it's your service, and you have a handle on the bigger question of security, then that's entirely feasible.</p>\n\n<p>Here's a listing of a Flask service, setting the CORS headers, grabbing data from a database, responding with JSON, and working happily with DickFeynman's approach on the client-side:</p>\n\n<pre><code>#!/usr/bin/env python \nfrom __future__ import unicode_literals\nfrom flask      import Flask, Response, jsonify, redirect, request, url_for\nfrom your_model import *\nimport os\ntry:\n    import simplejson as json;\nexcept ImportError:\n    import json\ntry:\n    from flask.ext.cors import *\nexcept:\n    from flask_cors import *\n\napp = Flask(__name__)\n\n@app.before_request\ndef before_request():\ntry:\n    # Provided by an object in your_model\n    app.session = SessionManager.connect()\nexcept:\n    print \"Database connection failed.\"\n\n@app.teardown_request\ndef shutdown_session(exception=None):\n    app.session.close()\n\n# A route with a CORS header, to enable your javascript client to access \n# JSON created from a database query.\n@app.route('/whatever-data/', methods=['GET', 'OPTIONS'])\n@cross_origin(headers=['Content-Type'])\ndef json_data():\n    whatever_list = []\n    results_json  = None\n    try:\n        # Use SQL Alchemy to select all Whatevers, WHERE size &gt; 0.\n        whatevers = app.session.query(Whatever).filter(Whatever.size &gt; 0).all()\n        if whatevers and len(whatevers) &gt; 0:\n            for whatever in whatevers:\n                # Each whatever is able to return a serialized version of itself. \n                # Refer to your_model.\n                whatever_list.append(whatever.serialize())\n             # Convert a list to JSON. \n             results_json = json.dumps(whatever_list)\n    except SQLAlchemyError as e:\n        print 'Error {0}'.format(e)\n        exit(0)\n\n    if len(whatevers) &lt; 1 or not results_json:\n        exit(0)\n    else:\n        # Because we used json.dumps(), rather than jsonify(), \n        # we need to create a Flask Response object, here.\n        return Response(response=str(results_json), mimetype='application/json')\n\nif __name__ == '__main__':\n    #@NOTE Not suitable for production. As configured, \n    #      your Flask service is in debug mode and publicly accessible.  \n    app.run(debug=True, host='0.0.0.0', port=5001) # http://localhost:5001/\n</code></pre>\n\n<p>your_model contains the serialization method for your whatever, as well as the database connection manager (which could stand a little refactoring, but suffices to centralize the creation of database sessions, in bigger systems or Model/View/Control architectures). This happens to use postgreSQL, but could just as easily use any server side data store:</p>\n\n<pre><code>#!/usr/bin/env python \n# Filename: your_model.py\nimport time\nimport psycopg2\nimport psycopg2.pool\nimport psycopg2.extras\nfrom   psycopg2.extensions        import adapt, register_adapter, AsIs\nfrom   sqlalchemy                 import update\nfrom   sqlalchemy.orm             import *\nfrom   sqlalchemy.exc             import *\nfrom   sqlalchemy.dialects        import postgresql\nfrom   sqlalchemy                 import Table, Column, Integer, ForeignKey\nfrom   sqlalchemy.ext.declarative import declarative_base\n\nclass SessionManager(object):\n    @staticmethod\n    def connect():\n        engine = create_engine('postgresql://id:passwd@localhost/mydatabase', \n                                echo = True)\n        Session = sessionmaker(bind = engine, \n                               autoflush = True, \n                               expire_on_commit = False, \n                               autocommit = False)\n    session = Session()\n    return session\n\n  @staticmethod\n  def declareBase():\n      engine = create_engine('postgresql://id:passwd@localhost/mydatabase', echo=True)\n      whatever_metadata = MetaData(engine, schema ='public')\n      Base = declarative_base(metadata=whatever_metadata)\n      return Base\n\nBase = SessionManager.declareBase()\n\nclass Whatever(Base):\n    \"\"\"Create, supply information about, and manage the state of one or more whatever.\n    \"\"\"\n    __tablename__         = 'whatever'\n    id                    = Column(Integer, primary_key=True)\n    whatever_digest       = Column(VARCHAR, unique=True)\n    best_name             = Column(VARCHAR, nullable = True)\n    whatever_timestamp    = Column(BigInteger, default = time.time())\n    whatever_raw          = Column(Numeric(precision = 1000, scale = 0), default = 0.0)\n    whatever_label        = Column(postgresql.VARCHAR, nullable = True)\n    size                  = Column(BigInteger, default = 0)\n\n    def __init__(self, \n                 whatever_digest = '', \n                 best_name = '', \n                 whatever_timestamp = 0, \n                 whatever_raw = 0, \n                 whatever_label = '', \n                 size = 0):\n        self.whatever_digest         = whatever_digest\n        self.best_name               = best_name\n        self.whatever_timestamp      = whatever_timestamp\n        self.whatever_raw            = whatever_raw\n        self.whatever_label          = whatever_label\n\n    # Serialize one way or another, just handle appropriately in the client.  \n    def serialize(self):\n        return {\n            'best_name'     :self.best_name,\n            'whatever_label':self.whatever_label,\n            'size'          :self.size,\n        }\n</code></pre>\n\n<p>In retrospect, I might have serialized the whatever objects as lists, rather than a Python dict, which might have simplified their processing in the Flask service, and I might have separated concerns better in the Flask implementation (The database call probably shouldn't be built-in the the route handler), but <em>you</em> can improve on this, once you have a working solution in your own development environment.</p>\n\n<p>Also, I'm not suggesting people avoid JQuery. But, if JQuery's not in the picture, for one reason or another, this approach seems like a reasonable alternative. </p>\n\n<p>It works, in any case.</p>\n\n<p>Here's my implementation of DickFeynman's approach, in the the client:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var addr = \"dev.yourserver.yourorg.tld\"\n    var port = \"5001\"\n\n    function Get(whateverUrl){\n        var Httpreq = new XMLHttpRequest(); // a new request\n        Httpreq.open(\"GET\",whateverUrl,false);\n        Httpreq.send(null);\n        return Httpreq.responseText;          \n    }\n\n    var whatever_list_obj = JSON.parse(Get(\"http://\" + addr + \":\" + port + \"/whatever-data/\"));\n    whatever_qty = whatever_list_obj.length;\n    for (var i = 0; i &lt; whatever_qty; i++) {\n        console.log(whatever_list_obj[i].best_name);\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>I'm not going to list my console output, but I'm looking at a long list of whatever.best_name strings. </p>\n\n<p>More to the point: The whatever_list_obj is available for use in my javascript namespace, for <em>whatever</em> I care to do with it, ...which might include generating graphics with D3.js, mapping with OpenLayers or CesiumJS, or calculating some intermediate values which have no particular need to live in my DOM.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Hi I'm looking at the following API\n<a href=\"http://wiki.github.com/soundcloud/api/oembed-api\">http://wiki.github.com/soundcloud/api/oembed-api</a></p>\n\n<p>the example they give</p>\n\n<p>Call:</p>\n\n<pre><code>http://soundcloud.com/oembed?url=http%3A//soundcloud.com/forss/flickermood&amp;format=json\n</code></pre>\n\n<p>Response:</p>\n\n<pre><code>{\n\"html\":\"&lt;object height=\\\"81\\\" ... \",\n\"user\":\"Forss\",\n\"permalink\":\"http:\\/\\/soundcloud.com\\/forss\\/flickermood\",\n\"title\":\"Flickermood\",\n\"type\":\"rich\",\n\"provider_url\":\"http:\\/\\/soundcloud.com\",\n\"description\":\"From the Soulhack album...\",\n\"version\":1.0,\n\"user_permalink_url\":\"http:\\/\\/soundcloud.com\\/forss\",\n\"height\":81,\n\"provider_name\":\"Soundcloud\",\n\"width\":0\n}\n</code></pre>\n\n<p>What do i have to do to get this json object from just a url?!!?</p>\n",
            "last_activity_date": 1405456175,
            "question_id": 2499567,
            "score": 8,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "how to make a JSON call to a url?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Call <code>$watch</code> with <code>true</code> as the third argument:</p>\n\n<pre><code>$scope.$watch('form', function(newVal, oldVal){\n    console.log('changed');\n}, true);\n</code></pre>\n\n<p>By default when comparing two complex objects in JavaScript, they will be checked for \"reference\" equality, which asks if the two objects refer to the same thing, rather than \"value\" equality, which checks if the values of all the properties of those objects are equal.</p>\n\n<p>Per the <a href=\"http://docs.angularjs.org/api/ng.$rootScope.Scope#$watch\">Angular documentation</a>, the third parameter is for <code>objectEquality</code>:</p>\n\n<blockquote>\n  <p>When <code>objectEquality == true</code>, inequality of the watchExpression is determined according to the <a href=\"https://docs.angularjs.org/api/ng/function/angular.equals\"><code>angular.equals</code></a> function. To save the value of the object for later comparison, the <a href=\"https://docs.angularjs.org/api/ng/function/angular.copy\"><code>angular.copy</code></a> function is used. This therefore means that watching complex objects will have adverse memory and performance implications.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 163
                },
                {
                    "body": "<p>The <code>form</code> object isn't changing, only the <code>name</code> property is</p>\n\n<p>updated fiddle: <a href=\"http://jsfiddle.net/ReuA8/1/\">http://jsfiddle.net/ReuA8/1/</a></p>\n\n<pre><code>function MyController($scope) {\n$scope.form = {\n    name: 'my name',\n}\n\n$scope.changeCount = 0;\n$scope.$watch('form.name', function(newVal, oldVal){\n    console.log('changed');\n    $scope.changeCount++;\n});\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>function MyController($scope) {\n    $scope.form = {\n        name: 'my name',\n        surname: 'surname'\n    }\n\n    function track(newValue, oldValue, scope) {\n        console.log('changed');\n    };\n\n    $scope.$watch('form.name', track);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The reason why your code doesn't work is because <code>$watch</code> by default does reference check. So in a nutshell it make sure that the object which is passed to it is new object. But in your case you are just modifying some property of form object not creating a new one. In order to make it work you can pass <code>true</code> as the third parameter.</p>\n\n<pre><code>$scope.$watch('form', function(newVal, oldVal){\n    console.log('invoked');\n}, true);\n</code></pre>\n\n<p>It will work but You can use $watchCollection which will be more efficient then $watch because <code>$watchCollection</code> will watch for shallow properties on form object. E.g.</p>\n\n<pre><code>$scope.$watchCollection('form', function (newVal, oldVal) {\n    console.log(newVal, oldVal);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm pretty sure i'm missing something very simple here.</p>\n\n<p>I want to watch for changes in a dictionary, but for some reason watch callback is not called.</p>\n\n<p>Here is a controller that I use:</p>\n\n<pre><code>function MyController($scope) {\n    $scope.form = {\n        name: 'my name',\n        surname: 'surname'\n    }\n\n    $scope.$watch('form', function(newVal, oldVal){\n        console.log('changed');\n    });\n}\n</code></pre>\n\n<p>Here is fiddle: <a href=\"http://jsfiddle.net/Y8ByG/\">http://jsfiddle.net/Y8ByG/</a></p>\n\n<p>I expect $watch callback to be fired each time name or surname is changed, but it doesn't happen.</p>\n\n<p>What is the correct way to do it?</p>\n\n<p>Thank you</p>\n",
            "last_activity_date": 1421533123,
            "question_id": 19455501,
            "score": 94,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-scope"
            ],
            "title": "$watch an object in angular"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Are you talking about code within <code>&lt;script&gt;</code> tags, or in the HTML tag attributes, like this?</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"alert('this is inline JS');return false;\"&gt;Click&lt;/a&gt;\n</code></pre>\n\n<p>Either way, <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Statements/debugger\">the <code>debugger</code> keyword</a> like this will work: </p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"debugger; alert('this is inline JS');return false;\"&gt;Click&lt;/a&gt;\n</code></pre>\n\n<p><strong>N.B.</strong> Chrome won't pause at <code>debugger</code>s if the dev tools are not open.</p>\n\n<hr>\n\n<p>You can also set property breakpoints in JS files and <code>&lt;script&gt;</code> tags:</p>\n\n<ol>\n<li>Click the <em>Sources</em> tab</li>\n<li>Click the <em>Show Navigator</em> icon and select the a file</li>\n<li>Double-click the a line number in the left-hand margin. A corresponding row is added to the <em>Breakpoints</em> panel (4).</li>\n</ol>\n\n<p><img src=\"http://i.stack.imgur.com/gAp7V.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 114
                },
                {
                    "body": "<p>Use the sources tab, you can set breakpoints in JavaScript there. In the directory tree underneath it (with the up and down arrow in it), you can select the file you want to debug. You can get out of an error by pressing resume on the right-hand side of the same tab.</p>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>If you cannot see the \"Scripts\" tab, make sure you are launching Chrome with the right arguments. I had this problem when I launched Chrome for debugging server-side JavaScript with the argument <code>--remote-shell-port=9222</code>. I have no problem if I launch Chrome with no argument.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Refresh the page containing the script whilst the developer tools are open on the scripts tab. This will add a (program) entry in the file list which shows the html of the page including the script. From here you can add breakpoints.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>My situation and what I did to fix it:<br/>\nI have a javascript file included on an HTML page as follows:<br>\n<strong>Page Name: test.html</strong></p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;script src=\"scripts/common.js\"&gt;&lt;/script&gt;\n        &lt;title&gt;Test debugging JS in Chrome&lt;/title&gt;\n        &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div&gt;\n         &lt;script type=\"text/javascript\"&gt;\n            document.write(\"something\");\n         &lt;/script&gt;\n\n        &lt;/div&gt;\n     &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Now entering the Javascript Debugger in Chrome, I click the Scripts Tab, and drop down the list as shown above. I can clearly see <strong>scripts/common.js</strong> however I could <strong>NOT</strong> see the current html page <strong>test.html</strong> in the drop down, therefore I could not debug the embedded javascript:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  document.write(\"something\");\n&lt;/script&gt;\n</code></pre>\n\n<p>That was perplexing. However, when I removed the obsolete <strong>type=\"text/javascript\"</strong> from the embedded script: </p>\n\n<pre><code>&lt;script&gt;\n  document.write(\"something\");\n&lt;/script&gt;\n</code></pre>\n\n<p>..and refreshed / reloaded the page, voila, it appeared in the drop down list, and all was well again.<br/>\nI hope this is helpful to anyone who is having issues debugging embedded javascript on an html page.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Using <strong>Visual Studio</strong> (2012) I had the same issue and switching to <strong>IIS Express</strong> solved the problem!</p>\n\n<p>The <code>script</code> tag's <code>type</code> attribute did not factor into it.</p>\n\n<p>For some reason the <strong>Visual Studio Development Server</strong> does not provide everything Chrome needs to enable the breakpoints.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I came across this issue, however my inline function was withing an angularJS view. Therefore on the load i could not access the inline script to add the debug, as only the index.html was available in the sources tab of the debugger. </p>\n\n<p>This meant that when i was opening the particular view with my inline (had no choice on this) it was not accessible. </p>\n\n<p>The onlly way i was able to hit it was to put an erroneous function or call inside the inline JS function. </p>\n\n<p>My solution included : </p>\n\n<pre><code>function doMyInline(data) {\n        //Throw my undefined error here. \n        $(\"select.Sel\").debug();\n\n        //This is the real onclick i was passing to \n        angular.element(document.getElementById(data.id)).scope().doblablabla(data.id);\n    }\n</code></pre>\n\n<p>This mean when i clicked on my button, i was then prompted in the chrome consolse. </p>\n\n<pre><code>Uncaught TypeError: undefined is not a function \n</code></pre>\n\n<p>The important thing here was the source of this : <code>VM5658:6</code> clicking on this allowed me to step through the inline and hold the break point there for later.. </p>\n\n<p>Extremely convoluted way of reaching it.. But it worked and might prove useful for when dealing with Single page apps which dynamically load your views. </p>\n\n<p>The <code>VM[n]</code> has no significant value, and the <code>n</code> on equates to the script ID. This info can be found here : <a href=\"https://code.google.com/p/chromium/codesearch#search/&amp;q=%22%5BVM%5D%22&amp;sq=package%3Achromium&amp;type=cs\" rel=\"nofollow\">Chrome \"[VM]\"</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I found the solution to debug inline java script on Chrome in this link: \n<a href=\"http://stackoverflow.com/questions/16593333/how-to-add-breakpoints-in-your-inline-javascript-in-chrome\">How to add breakpoints in your inline javascript in chrome</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Another intuitive simple trick to debug especially script inside html returned by ajax, is to temporary put console.log(\"test\") inside the script. </p>\n\n<p>Once you have fired the event, open up the console tab inside the developer tools. \nyou will see the source file link shown up at the right side of the \"test\" debug print statement. just click on the source (something like VM4xxx) and you can now set the break point. </p>\n\n<p>cheers</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>When I open Developer Tools in Google Chrome, I see all kinds of features like Profiles, Timelines, and Audits. but basic functionality like being able to set breakpoint both in js files and within html javascript code is missing!. I tried to use javascript Console which itself is buggy ( like when once it encounter JS error, cannot get out of it unless refresh the whole page useless when ajax is involved). Can some one help? </p>\n",
            "last_activity_date": 1423602897,
            "question_id": 5156388,
            "score": 78,
            "tags": [
                "javascript",
                "debugging",
                "google-chrome"
            ],
            "title": "How to set breakpoint in inline Javascript in Google Chrome browser for linux?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>In C++ <strike><a href=\"http://en.cppreference.com/w/cpp/numeric/complex/pow\">The result of pow(0, 0)</a></strike> the result is basically implementation defined behavior since mathematically we have a contradictory situation where <code>N^0</code> should always be <code>1</code> but <code>0^N</code> should always be <code>0</code> for <code>N &gt; 0</code>, so you should have no expectations mathematically as to the result of this either. This <a href=\"http://community.wolframalpha.com/viewtopic.php?f=35&amp;t=11131\">Wolfram Alpha</a> forum posts goes into a bit more details.</p>\n\n<p>Although having <code>pow(0,0)</code> result in <code>1</code> is useful for many applications as the <a href=\"http://www.open-std.org/jtc1/sc22/wg14/www/C99RationaleV5.10.pdf\"> Rationale for International Standard\u2014Programming Languages\u2014C</a> states in the section covering <em>IEC 60559 floating-point arithmetic</em> support:</p>\n\n<blockquote>\n  <p>Generally, C99 eschews a NaN result where a numerical value is useful. [...] The results of pow(\u221e,0) and pow(0,0) are both 1, because there are applications that can exploit this definition. For example, if x(p) and y(p) are any analytic functions that become zero at p = a, then pow(x,y), which equals exp(y*log(x)), approaches 1 as p approaches a.</p>\n</blockquote>\n\n<p><B>Update C++</b></p>\n\n<p>As leemes correctly pointed out I originally linked to the reference for the <em>complex</em> version of <em>pow</em> while the <a href=\"http://en.cppreference.com/w/cpp/numeric/math/pow\">non-complex</a> version claims it is <em>domain error</em> the <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3485.pdf\">draft C++ standard</a> falls back to the <a href=\"http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf\">draft C standard</a> and both <em>C99</em> and <em>C11</em> in section <code>7.12.7.4</code> <em>The pow functions</em> paragraph <em>2</em> says (<em>emphasis mine</em>):</p>\n\n<blockquote>\n  <p>[...]A domain error <strong>may occur</strong> if x is zero and y is zero.[...]</p>\n</blockquote>\n\n<p>which as far as I can tell means this behavior is <a href=\"http://en.wikipedia.org/wiki/Unspecified_behavior\">unspecified behavior</a> Winding back a bit section <code>7.12.1</code> <em>Treatment of error conditions</em> says:</p>\n\n<blockquote>\n  <p>[...]a domain error occurs if an input argument is outside the domain over\n  which the mathematical function is defined.[...] On a domain error, the function returns an implementation-defined value; if the integer expression math_errhandling &amp; MATH_ERRNO is nonzero, the integer expression errno acquires the value EDOM; [...]</p>\n</blockquote>\n\n<p>So if there was a <em>domain error</em> then this would be <em>implementation defined behavior</em> but in both the latest versions of <code>gcc</code> and <code>clang</code> the value of <code>errno</code> is <code>0</code> so it is not a <em>domain error</em> for those compilers.</p>\n\n<p><B>Update Javascript</B></p>\n\n<p>For <em>Javascript</em> the <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">ECMAScript\u00ae Language Specification</a> in section <code>15.8</code> <em>The Math Object</em> under <code>15.8.2.13</code> <em>pow (x, y)</em> says amongst other conditions that: </p>\n\n<blockquote>\n  <p>If y is +0, the result is 1, even if x is NaN.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 71
                },
                {
                    "body": "<p><a href=\"http://es5.github.io/#x15.8.2.13\">In JavaScript <code>Math.pow</code> is defined as follows</a>:</p>\n\n<blockquote>\n  <ul>\n  <li>If y is NaN, the result is NaN.</li>\n  <li><strong>If y is +0, the result is 1, even if x is NaN.</strong></li>\n  <li>If y is \u22120, the result is 1, even if x is NaN.</li>\n  <li>If x is NaN and y is nonzero, the result is NaN.</li>\n  <li>If abs(x)>1 and y is +\u221e, the result is +\u221e.</li>\n  <li>If abs(x)>1 and y is \u2212\u221e, the result is +0.</li>\n  <li>If abs(x)==1 and y is +\u221e, the result is NaN.</li>\n  <li>If abs(x)==1 and y is \u2212\u221e, the result is NaN.</li>\n  <li>If abs(x)&lt;1 and y is +\u221e, the result is +0.</li>\n  <li>If abs(x)&lt;1 and y is \u2212\u221e, the result is +\u221e.</li>\n  <li>If x is +\u221e and y>0, the result is +\u221e.</li>\n  <li>If x is +\u221e and y&lt;0, the result is +0.</li>\n  <li>If x is \u2212\u221e and y>0 and y is an odd integer, the result is \u2212\u221e.</li>\n  <li>If x is \u2212\u221e and y>0 and y is not an odd integer, the result is +\u221e.</li>\n  <li>If x is \u2212\u221e and y&lt;0 and y is an odd integer, the result is \u22120.</li>\n  <li>If x is \u2212\u221e and y&lt;0 and y is not an odd integer, the result is +0.</li>\n  <li>If x is +0 and y>0, the result is +0.</li>\n  <li>If x is +0 and y&lt;0, the result is +\u221e.</li>\n  <li>If x is \u22120 and y>0 and y is an odd integer, the result is \u22120.</li>\n  <li>If x is \u22120 and y>0 and y is not an odd integer, the result is +0.</li>\n  <li>If x is \u22120 and y&lt;0 and y is an odd integer, the result is \u2212\u221e.</li>\n  <li>If x is \u22120 and y&lt;0 and y is not an odd integer, the result is +\u221e.</li>\n  <li>If x&lt;0 and x is finite and y is finite and y is not an integer, the result is NaN.</li>\n  </ul>\n</blockquote>\n\n<p><sub>emphasis mine</sub></p>\n\n<p>as a general rule, native functions to any language should work as described in the language specification. Sometimes this includes explicitly \"undefined behavior\" where it's up to the implementer to determine what the result should be, however this is not a case of undefined behavior.</p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>When you want to know what value you should give to <code>f(a)</code> when <code>f</code> isn't directly computable in <code>a</code>, you compute the limit of <code>f</code> when <code>x</code> tends towards <code>a</code>.</p>\n\n<p>In case of <code>x^y</code>, usual limits tend towards <code>1</code> when <code>x</code> and <code>y</code> tend to <code>0</code>, and especially <code>x^x</code> tends towards <code>1</code> when <code>x</code> tends to <code>0</code>.</p>\n\n<p>See <a href=\"http://www.math.hmc.edu/funfacts/ffiles/10005.3-5.shtml\">http://www.math.hmc.edu/funfacts/ffiles/10005.3-5.shtml</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The C language definition says (7.12.7.4/2):</p>\n\n<blockquote>\n  <p>A domain error may occur if x is zero and y is zero.</p>\n</blockquote>\n\n<p>It also says (7.12.1/2):</p>\n\n<blockquote>\n  <p>On a domain error, the function returns an implementation-defined value; if the integer expression math_errhandling &amp; MATH_ERRNO is nonzero, the integer expression errno acquires the value EDOM; if the integer expression math_errhandling &amp; MATH_ERREXCEPT is nonzero, the \u2018\u2018invalid\u2019\u2019 floating-point exception is raised.</p>\n</blockquote>\n\n<p>By default, the value of <code>math_errhandling</code> is <code>MATH_ERRNO</code>, so check <code>errno</code> for the value <code>EDOM</code>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It is just convention to define it as <code>1</code>, <code>0</code> or to leave it <code>undefined</code>. The definition <img src=\"http://i.stack.imgur.com/F2L29.png\" alt=\"pow(0,0)\"> is wide spread because of the following definition:</p>\n\n<p><img src=\"http://i.stack.imgur.com/4AG4C.png\" alt=\"mathematical power definition\"></p>\n\n<hr>\n\n<p>ECMA-Script documentation says the following about <code>pow(x,y)</code>:</p>\n\n<blockquote>\n  <ul>\n  <li>If y is +0, the result is 1, even if x is NaN.</li>\n  <li>If y is \u22120, the result is 1, even if x is NaN.</li>\n  </ul>\n</blockquote>\n\n<p>[ <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.8.2.13\">http://www.ecma-international.org/ecma-262/5.1/#sec-15.8.2.13</a> ]</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>According to Wikipedia:</p>\n\n<blockquote>\n  <p>In most settings not involving continuity in the exponent, interpreting 0<sup>0</sup> as 1 simplifies formulas and eliminates the need for special cases in theorems. </p>\n</blockquote>\n\n<p>There are several possible ways to treat <code>0**0</code> with pros and cons to each (see <a href=\"http://en.wikipedia.org/wiki/Exponentiation#Zero_to_the_power_of_zero\">Wikipedia</a> for an extended discussion).</p>\n\n<p>The <a href=\"http://en.wikipedia.org/wiki/IEEE_754-2008\">IEEE 754-2008</a> floating point standard recommends three different functions:</p>\n\n<ul>\n<li><code>pow</code> treats <code>0**0</code> as <code>1</code>. This is the oldest defined version. If the power is an exact integer the result is the same as for <code>pown</code>, otherwise the result is as for <code>powr</code> (except for some exceptional cases).</li>\n<li><code>pown</code> treats 0**0 as 1. The power must be an exact integer. The value is defined for negative bases; e.g., <code>pown(\u22123,5)</code> is <code>\u2212243</code>.</li>\n<li><code>powr</code> treats 0**0 as NaN (Not-a-Number \u2013 undefined). The value is also NaN for cases like <code>powr(\u22123,2)</code> where the base is less than zero. The value is defined by exp(power'\u00d7log(base)).</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<h1>Donald Knuth</h1>\n\n<p>sort of settled this debate in 1992 with the following:</p>\n\n<p><img src=\"http://i.stack.imgur.com/KARrP.png\" alt=\"enter image description here\"></p>\n\n<p>And went even more into details in his paper <a href=\"http://arxiv.org/pdf/math/9205211v1.pdf\" rel=\"nofollow\" title=\"Two Notes on Notation\">Two Notes on Notation</a>.</p>\n\n<p>Basically, while we don't have 1 as the limit of <code>f(x)/g(x)</code> for all not all functions <code>f(x)</code> and <code>g(x)</code>, it still makes combinatorics so much simpler to define <code>0^0=1</code>, and then just make special cases in the few places where you need to consider functions such as <code>0^x</code>, which are weird anyway. After all <code>x^0</code> comes up a lot more often.</p>\n\n<p>Some of the best discussions I know of this topic (other than the Knuth paper) are:</p>\n\n<ul>\n<li><a href=\"http://mathforum.org/dr.math/faq/faq.0.to.0.power.html\" rel=\"nofollow\">http://mathforum.org/dr.math/faq/faq.0.to.0.power.html</a></li>\n<li><a href=\"http://www.quora.com/Mathematics/What-is-math-0-0-math?share=1\" rel=\"nofollow\">http://www.quora.com/Mathematics/What-is-math-0-0-math?share=1</a></li>\n<li><a href=\"http://math.stackexchange.com/questions/475337/the-binomial-formula-and-the-value-of-00\">http://math.stackexchange.com/questions/475337/the-binomial-formula-and-the-value-of-00</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I'd like to disagree with some of the previous answers' assertion that it's a matter of convention or convenience (covering some special cases for various theorems, etc) that 0^0 be defined as 1 instead of 0.</p>\n\n<p>Exponentiation doesn't actually fit that well with our other mathematical notations, so the definition we all learn leaves room for confusion. A slightly different way of approaching it is to say that a^b (or exp(a, b), if you like) returns the value <strong>multiplicatively equivalent</strong> to multiplying <strong>some other thing</strong> by a, repeated b times.</p>\n\n<p>When we multiply 5 by 4, 2 times, we get 80. We've multiplied 5 by 16. So 4^2 = 16.</p>\n\n<p>When you multiply 14 by 0, 0 times, we are left with 14. We've multiplied it 1. Hence, 0^0 = 1.</p>\n\n<p>This line of thinking might also help to clarify negative and fractional exponents. 4^(-2) is a 16th, because 'negative multiplication' is division - we divide by four twice.</p>\n\n<p>a^(1/2) is root(a), because multiplying something by the root of a is half the <strong>multiplicative work</strong> as multiplying it by a itself - you would have to do it twice to multiply something by 4 = 4^1 = (4^(1/2))^2</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>We all know that 0<sup>0</sup> is indeterminate.</p>\n\n<p><strong>But</strong>, <em>javascript</em> says that:</p>\n\n<pre><code>Math.pow(0, 0) === 1 // true\n</code></pre>\n\n<p>and <em>C++</em> says the same thing:</p>\n\n<pre><code>pow(0, 0) == 1 // true\n</code></pre>\n\n<p>WHY?</p>\n\n<p>I know that:</p>\n\n<pre><code>&gt;Math.pow(0.001, 0.001)\n0.9931160484209338\n</code></pre>\n\n<p>But why does <code>Math.pow(0, 0)</code> throw no errors? Or maybe a <code>NaN</code> would be better than <code>1</code>.</p>\n",
            "last_activity_date": 1425778336,
            "question_id": 19955968,
            "score": 66,
            "tags": [
                "javascript",
                "c++",
                "c",
                "language-agnostic",
                "pow"
            ],
            "title": "Why is Math.pow(0, 0) === 1?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>debug.log will send messages to the XCode console in Phonegap (allowing you to either log the result of an exception or do some debugging), however, you are correct that you have to debug other javascript errors in Safari (either on the desktop or on the iphone with Debug Console turned on).  I have yet to find a Javascript error, that was caused by running on the iphone and wasn't present when debugging with the console turned on in Safari (though I know there are a few differences between the WebView and Safari on the iphone).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Note that with 0.9.2 (released today), console.log has been standardized across the platforms for logging (with debug.log deprecated).</p>\n\n<p>There is a function that is available on the desktop WebView that is not exposed in the iOS UIWebView that will catch all errors (I'm trying to hack that functionality into a plugin, which uses private APIs, but the plugin would only be for development), but for now do what Kris suggested above and put try catch blocks on code and use console.log</p>\n\n<p>To quickly catch possible syntax errors, when developing I have the page loaded in desktop Safari and quickly refresh it with the webkit error console viewable.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>For making javascript debugging work in Xcode I would take a look at the following.</p>\n\n<p><a href=\"http://phonegap.com/2011/05/18/debugging-phonegap-javascript/\" rel=\"nofollow\">http://phonegap.com/2011/05/18/debugging-phonegap-javascript/</a><br />\n<a href=\"http://www.daveoncode.com/2010/01/12/debugging-phonegap-applications-using-xcode-console/\" rel=\"nofollow\">http://www.daveoncode.com/2010/01/12/debugging-phonegap-applications-using-xcode-console/</a><br /></p>\n\n<p>As as far as additional troubleshooting goes...<br />\nTo start with you could run the app in safari on you pc and utilize safari's debugger (or chrome as both are running similar rendering engines). This won't hit on the advanced logic errors and many of your api issues but it at the very least should help with troubleshooting many issues (basic javascript, HTML5 etc....). </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I just came across <a href=\"https://github.com/apache/incubator-cordova-weinre\" rel=\"nofollow\">Weinre</a></p>\n\n<p>It's a remote javascript debugger for phonegap. You can either setup your own Weinre server, or use the one at <a href=\"http://debug.phonegap.com/\" rel=\"nofollow\">http://debug.phonegap.com/</a></p>\n\n<p>It seems to work well - very impressed so far.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here's a simple way that worked for me:</p>\n\n<ul>\n<li>cd to the directory containing your index.html file in the terminal</li>\n<li><p>Start a http server using python by invoking (I used python 2.7):</p>\n\n<p>python -m SimpleHTTPServer</p></li>\n<li><p>View the page in safari by entering the address of the HTTPServer in a browser, for me the URL was: </p>\n\n<pre><code>http://0.0.0.0:8000/\n</code></pre></li>\n<li><p>Open developer tools:</p>\n\n<p>In chrome this is alt+command+i. View the console tab, may need to refresh the page.</p>\n\n<p>In Safari: Safari --> Preferences --> Advanced --> check \"Show Develop Menu\". Develop menu --> Show error console (or alt+command+c). Refresh the page. Hitting CTRL+5 opens the issues tab.</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Paste the following somewhere near the start of your document so that it gets executed before any of your other JavaScript. </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    window.onerror = function(message, url, lineNumber) {\n        console.log(\"Error: \"+message+\" in \"+url+\" at line \"+lineNumber);\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>And enjoy viewing details of your Javascript errors in the Xcode console window. </p>\n\n<p>UPDATE: The above technique will log errors such as undefined variables. But syntax errors such as missing commas will still cause the entire script to break without logging anything. </p>\n\n<p>Therefore you should add the following to the start of your <strong>onDeviceReady</strong> function:</p>\n\n<pre><code>console.log('Javascript OK');\n</code></pre>\n\n<p>If you don't see \"JavaScript OK\" appearing in your log window when the app launches, then it means you have a syntax error somewhere. </p>\n\n<p>To save hunting for missing commas, the easiest thing is to paste your code into a Javascript validator such as this one:</p>\n\n<p><a href=\"http://www.javascriptlint.com/online_lint.php\">http://www.javascriptlint.com/online_lint.php</a></p>\n\n<p>and let it find the error for you. </p>\n\n<p>Hopefully that takes some of the pain out of debugging. </p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>The most elegant way to view and debug JavaScript errors in your Cordova/PhoneGap App is by attaching the Web Inspector from your Safari browser to the Web View in your iOS App (but, like Tom Clarkson already mentioned, you will need at least iOS 6).</p>\n\n<ul>\n<li>On your iPad or iPhone use the Settings App to enable Web Inspector in the Advanced Settings for Safari</li>\n<li>Connect your device to a Mac via USB (it will then appear under the Develop menu of Safari)</li>\n<li>Start your App</li>\n<li>Navigate to the Web View you want to debug</li>\n<li>On the Mac, from the Safari Develop menu, select the name of your device and the App (its HTML-page), from its sub menu</li>\n<li>A Web Inspector window will open, enabling you to browse the DOM, set breakpoints etc.</li>\n</ul>\n\n<p><img src=\"http://i.stack.imgur.com/nCB1B.png\" alt=\"enter image description here\"></p>\n\n<p>A very thorough tutorial on setting this up:<br>\n<a href=\"http://webdesign.tutsplus.com/tutorials/workflow-tutorials/quick-tip-using-web-inspector-to-debug-mobile-safari/\">http://webdesign.tutsplus.com/tutorials/workflow-tutorials/quick-tip-using-web-inspector-to-debug-mobile-safari/</a></p>\n\n<hr>\n\n<h2>iOS 7, iOS 8</h2>\n\n<p>In order to use remote web inspection on a device which runs iOS 7, you will need Safari 6.1+. For iOS 8 devices the minimum version of Safari is 7.1.</p>\n",
                    "is_accepted": false,
                    "score": 48
                },
                {
                    "body": "<p>If you use iOS 6, you can simply attach the safari web inspector (on the develop menu of desktop safari) to your app and get full javascript debugging.</p>\n\n<p>There are a couple of areas where it is a bit limited - startup errors and plugin calls - but it works well for pretty much anything else.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to debug my PhoneGap app in Xcode, but its Console can not show javascript errors.</p>\n",
            "last_activity_date": 1417110761,
            "question_id": 4022152,
            "score": 53,
            "tags": [
                "javascript",
                "ios",
                "xcode",
                "debugging",
                "cordova"
            ],
            "title": "How to see the javascript errors of PhoneGap app in Xcode?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You definitely want to use the second expression since months in JS are enumerated from 0.</p>\n\n<p>Also you may use Date.parse method, but it uses different date format:</p>\n\n<pre><code>var d = Date.parse(\"11/30/2011\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>The syntax is as follows:</p>\n\n<pre><code>new Date(year, month, day [, hour, minute, second, millisecond ])\n</code></pre>\n\n<p>so</p>\n\n<pre><code>Date d = new Date(2011,10,30);\n</code></pre>\n\n<p>is correct; hour, minute, second, millisecond are optional.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date</a></p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<pre><code>var d = new Date(2011,10,30);\n</code></pre>\n\n<p>as months are indexed from 0 in js.</p>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>Always, for any issue regarding the JavaScript spec in practical, I will highly recommend the <a href=\"https://developer.mozilla.org/\">Mozilla Developer Network</a>, and <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/\">their JavaScript reference</a>.</p>\n\n<p>As it states in <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date\">the topic of the Date object</a> about the argument variant you use:</p>\n\n<pre><code>new Date(year, month, day [, hour, minute, second, millisecond ])\n</code></pre>\n\n<p>And about the months parameter:</p>\n\n<blockquote>\n  <p><em><strong>month</em></strong> Integer value representing the month, beginning with 0 for January to 11 for December.</p>\n</blockquote>\n\n<p>Clearly, then, you should use the month number 10 for November.</p>\n\n<p>P.S.: The reason why I recommend the MDN is the correctness, good explanation of things, examples, and browser compatibility chart.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>There are multiple methods of creating date as discussed above. I would not repeat same stuff. Here is small method to convert String to Date in Java Script if that is what you are looking for,</p>\n\n<pre><code>function compareDate(str1){\n// str1 format should be dd/mm/yyyy. Separator can be anything e.g. / or -. It wont effect\nvar dt1   = parseInt(str1.substring(0,2));\nvar mon1  = parseInt(str1.substring(3,5));\nvar yr1   = parseInt(str1.substring(6,10));\nvar date1 = new Date(yr1, mon1-1, dt1);\nreturn date1;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Very simple:</p>\n\n<pre><code>var dt=new Date(\"2011/11/30\");\n</code></pre>\n\n<p>Date should be in ISO format yyyy/MM/dd.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>First extract the string like this</p>\n\n<pre><code>var dateString = str.match(/^(\\d{2})\\/(\\d{2})\\/(\\d{4})$/);\n</code></pre>\n\n<p>Then,</p>\n\n<pre><code>var d = new Date( dateString[3], dateString[2]-1, dateString[1] );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I don't have much luck til Date.Parse. So I wouldn't recommend just passing strings to it. Usually ends up working half the time.</p>\n\n<p>The same goes for C# DateTime.Parse so it's not really a JS specific problem. I would upvote Mayank, but I don't have enough reputation.</p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>having this string <code>30/11/2011</code> I want to convert it to date object</p>\n\n<p>do I need to use </p>\n\n<pre><code>Date d = new Date(2011,11,30);\n</code></pre>\n\n<p>or </p>\n\n<pre><code>Date d = new Date(2011,10,30);\n</code></pre>\n\n<p>?</p>\n",
            "last_activity_date": 1421756842,
            "question_id": 8224459,
            "score": 46,
            "tags": [
                "javascript",
                "string",
                "date"
            ],
            "title": "How to create a date object from string in javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>In the currently-in-development version 0.4.0a, the <code>grunt.file.expand</code> method now supports exclusions, and does so in an arguably less complex way than the underlying minimatch matching library. This is possible because <code>grunt.file.expand</code> accepts <em>multiple</em> patterns (whereas minimatch only accepts one).</p>\n\n<p>From <a href=\"http://gruntjs.com/api/grunt.file#grunt.file.expand\">the grunt.file.expand documentation</a>:</p>\n\n<blockquote>\n  <p>This method accepts either comma separated wildcard patterns or an array of wildcard patterns. Paths matching patterns that begin with ! will be excluded from the returned array. Patterns are processed in order, so inclusion and exclusion order is significant.</p>\n</blockquote>\n\n<p>That means you could specify <code>['/**/*.js', '!**/ignoreme/**']</code> and while the first pattern would add all <code>.js</code> files to the result set, the second pattern would then remove all <code>/ignoreme/</code> files from the result set.</p>\n\n<p>Take a look at the <a href=\"https://github.com/cowboy/grunt/blob/8501765fb7addd073754fabf7a0e779a1a54b122/test/grunt/file_test.js#L60-68\">grunt.file.match unit tests</a> if you're really curious.</p>\n\n<p>Note that the version of grunt offering this functionality hasn't officially been released, but if you're interested in using it in a project, see the <a href=\"https://github.com/gruntjs/grunt/wiki/Frequently-Asked-Questions\">When will I be able to use in-development feature 'X'?</a> FAQ entry.</p>\n",
                    "is_accepted": true,
                    "score": 103
                }
            ],
            "body": "<p>I have a situation where I'm trying to use grunt to lint a codebase, excluding specific folders.</p>\n\n<p>grunt uses minimatch (similar to bsdglob) under the hood to match files, but I can't seem to figure out how to do a .gitignore style exclude of a folder.</p>\n\n<p>I'd like to ingest this:</p>\n\n<p><code>ignoreme</code></p>\n\n<p>and match these:</p>\n\n<pre><code>/folder/path/here/to/something/ok.js\n/another/folder/path.js\n/test.js\n</code></pre>\n\n<p>but not match these:</p>\n\n<pre><code>/folder/ignoreme/something.js\n/folder/path/here/to/ignoreme/metoo/file.js\n</code></pre>\n\n<p>This will match everything, including ignoreme:</p>\n\n<pre><code>/**/*.js\n</code></pre>\n\n<p>So I figured I could do something like:</p>\n\n<pre><code>/**/!(ignoreme)/**/*.js\n</code></pre>\n\n<p>but that matches files in the ignoreme folder.</p>\n\n<p>I'm used to regexes, but can't seem to figure out how to repeat a pattern or something here - I also tried stuff like:</p>\n\n<pre><code>/(!(ignoreme)|*)*/*.js\n</code></pre>\n\n<p>hoping the container would repeat, but that doesn't work, it just fails to match everything.</p>\n\n<p>Any way to either pass a regex to grunt file paths, or make this work for me?</p>\n\n<h1>Update:</h1>\n\n<p>Here's how I'm currently dealing with this issue:</p>\n\n<pre><code>var pattern = /\\/ignoreme\\//\nvar files = grunt.file.expandFiles(arrayOfFilesPassedToMinimatch).filter(function(f){\n  return !pattern.test(f)\n})\n</code></pre>\n\n<p>I'd still be interested if folder excludes are possible in minimatch.</p>\n",
            "last_activity_date": 1383902771,
            "question_id": 12632029,
            "score": 44,
            "tags": [
                "javascript",
                "regex",
                "node.js",
                "glob",
                "gruntjs"
            ],
            "title": "grunt (minimatch/glob) folder exclusion"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You do not need to do an <code>else</code>.  <strike>It is implied</strike>.  So</p>\n\n<pre><code>// put your other stylesheets here\n\n&lt;!--[if lt IE 9]&gt;\n    //put your stylesheet here for less than ie9\n&lt;![endif]--&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You're not looking for an else, you're looking for <code>&lt;![if !IE]&gt; &lt;something or other&gt; &lt;!--[endif]&gt;</code> (note that this is not a comment).</p>\n\n<pre><code>&lt;!--[if IE]&gt;\n   You're using IE!\n&lt;![endif]--&gt;\n&lt;![if !IE]&gt;\n   You're using something else!\n&lt;![endif]&gt;\n</code></pre>\n\n<p>You can find documentation on the conditional comments <a href=\"http://reference.sitepoint.com/css/conditionalcomments\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 74
                },
                {
                    "body": "<p>conditional comments can be in scripts as well as in html-</p>\n\n<pre><code>/*@cc_on\n@if(@_jscript_version&gt; 5.5){\n    navigator.IEmod= document.documentMode? document.documentMode:\n    window.XMLHttpRequest? 7: 6;\n\n}\n@else{\n    alert('your '+navigator.appName+' is older than dirt.');\n}\n@end\n@*/\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I use the following to load resources in IE9 or newer and all other browsers</p>\n\n<pre><code>&lt;!--[if gte IE 9]&gt;&lt;!--&gt;        \n    //your style or script\n&lt;!--&lt;![endif]--&gt;\n</code></pre>\n\n<p>This is hard to believe. Look the opening and closing if statement sections are inside comments (so, its not visible to other browsers) but visible to IE.    </p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>The solution for your problem is (note the use of <code>&lt;!-- --&gt;</code>): </p>\n\n<pre><code>&lt;!--[if lt IE 9]&gt;\n  This is less then IE9\n&lt;![endif]--&gt;\n&lt;!--[if gt IE 8]&gt; &lt;!-- --&gt;\n  this is all browsers: IE9 or higher, firefox, chrome, etc.\n&lt;!-- &lt;![endif]--&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code>&lt;!--[if lt IE 9]&gt;\n    This is less then IE9\nELSE\n    this is all browsers: firefox, chrome, etc.\n&lt;![endif]--&gt;\n</code></pre>\n\n<p>How do I do this in my HTML? I want to do an \"else\" ...</p>\n",
            "last_activity_date": 1421921149,
            "question_id": 6742087,
            "score": 43,
            "tags": [
                "javascript",
                "html",
                "css",
                "internet-explorer-9"
            ],
            "title": "How do I make an &quot;else&quot; in an IE HTML conditional?"
        },
        {
            "answer_count": 16,
            "answers": [
                {
                    "body": "<p>A few options:</p>\n\n<ul>\n<li>Visual Studio 2008 (including VWD Express, <a href=\"http://www.berniecode.com/blog/2007/03/08/how-to-debug-javascript-with-visual-web-developer-express/\">http://www.berniecode.com/blog/2007/03/08/how-to-debug-javascript-with-visual-web-developer-express/</a>)</li>\n<li>Adobe Dreamweaver CS4</li>\n<li>Notepad++ (or any other text editor), Firefox and Firebug</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I've found <a href=\"http://www.aptana.com/\">Aptana Studio</a> to be good.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Eclipse and JSEclipse plugin and of course Firefox + Firebug the ultimate duo. You'll find this development setup satisfactory.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Firebug and a good syntax highlighting text editor is about the best combo. It's not necessary to add in much else. With just this combo you get:</p>\n\n<ul>\n<li>Ability to set breakpoints</li>\n<li>Inspect objects</li>\n<li>Traverse the DOM </li>\n<li>Alter CSS rules on the fly</li>\n<li>See network traffic/responses</li>\n<li>Evaluate and substitute code on the fly in production</li>\n</ul>\n\n<p>And there are tools which add on to Firebug:</p>\n\n<ul>\n<li><a href=\"http://developer.yahoo.com/yslow/\" rel=\"nofollow\">YSlow</a> - Determine \"why\" your page is slow</li>\n<li><a href=\"http://fireunit.org/\" rel=\"nofollow\">Fireunit</a> - Run unit tests</li>\n</ul>\n\n<p>One of the advantage of Javascript development is that it's flexible and you can get instantaneous feedback while developing. I see no reason to get in the way of that by adding an IDE which includes a \"deployment\" step.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Netbeans 6.x and Firefox+Firebug</strong></p>\n\n<p>In the past I used <strong>Aptana</strong> Standalone or as a Eclipse plugin. The Pro version has some nice addons like the embedded IE (to the always embedded Firefox) and debugging support for both browsers.\nI found after hours of testing, that Suns <strong>Netbeans</strong> is the best PHP and Python IDE for Windows and Linux. I was surprised that also Javascript support can hold the candle to Aptana. \nSo Netbeans is my recommendation (not only for Javascript).</p>\n\n<p>Give it a try, its free! </p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I think IntellJ's JavaScript support is excellent, just like everything else that they do.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p><a href=\"http://www.activestate.com/komodo/\">Komodo IDE</a> (or the <a href=\"http://www.activestate.com/komodo%5Fedit/\">free Komodo Edit</a> if you can live without an integrated debugger) are pretty nice.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I tried few IDE last week and NetBeans is my winner. It got silent upload option for file upload in background. And very good code completion, folding, etc. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Aptana is a great IDE as it will provide intelli-sense for CSS, javascript, html, java, etc.  The debugger gives you the choice to run in FF or IE and is a full featured debugger.  The community edition allows you to run a server side javascript as well.  A very solid and feature rich platform for free.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I tend to recommend more and more <a href=\"http://www.netbeans.org/features/javascript/index.html\" rel=\"nofollow\">Netbeans</a> <strike>that has not been proposed yet</strike> (I am blind sometimes). Netbeans is developed by Sun and support not only Java but also a few other languages (PHP,Ruby,Python, Javascript).</p>\n\n<p>I use it for a while now and I am very satisfied. It is fast, provides code completion and integrates easily major JS libraries (Prototype, YUI). It has also a debugger that you can tied to FF or IE.</p>\n\n<p>Try it you won't be disappointed!</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>At JetBrains we've just developed lightweight <a href=\"http://www.jetbrains.com/webstorm/\">HTML/Javascript/CSS IDE WebStorm</a> that includes very smart JavaScript Editor with DOM-based autocompletion and HTML5 API support.\nIt allows you to debug(breakpoints supported) and run your scripts directly from IDE.</p>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p>Here's a good list of IDEs you can use for writing JavaScript:</p>\n\n<p><a href=\"http://www.programmerfish.com/top-8-ide-integrated-development-environment-for-java-script-html5-ajax/\">http://www.programmerfish.com/top-8-ide-integrated-development-environment-for-java-script-html5-ajax/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Notepad++ comes with built-in javascript syntax highlighting and <a href=\"http://sourceforge.net/projects/jslintnpp/\" rel=\"nofollow\">JSlint</a> plugin is very handy. IMHO for debugging there is nothing better than Chrome developer tools or Firebug.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Nowadays I am using JetBrains' PHPStorm and I can easily say, this is the best editor I've ever tried. Comes with lots of features that I have not seen at other editors like,</p>\n\n<ul>\n<li>find a word in a directory (grep equivalent)</li>\n<li>extended and useful intellisense feature with multiple files and parent classes</li>\n<li>internal GIT support</li>\n<li>a tree view for application structure</li>\n<li>an awesome version history support that works with GIT and your local history. This is very useful when you want to take a look at a GIT untracked file, you can see all history details of the file for weeks.</li>\n<li>with a great addon named CSSXFire that works with Firebug and tracks the CSS changes and import them to editor and allows you easily reproduce the same changes that you've done in Firebug CSS Console. This is really awesome</li>\n<li>another useful feature is, when you want to delete or rename a file, editor searches the file has been used in this directory and notifies you. This is called <code>safe-refactor</code></li>\n<li>intellisense for files, while you typing a css background-image, a src or an href attribute</li>\n</ul>\n\n<p>Sometimes I deal with PHP so I prefer PHPStorm, so Front End Developers should prefer WebStrorm that is specialized for us.</p>\n\n<p>I think, every FE Developer should try PHPStorm or WebStorm with Firefox and Firebug.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here is my experience with the applications based on Extjs in UI with Java as server side language. I am a big supporter of open source technologies/products.</p>\n\n<p>I so far I have used Eclipse, Netbeans, Webstorm and notepad++ with some added plugins.</p>\n\n<p>And I feel Netbeans is best in terms of Syntax highlighting and formating. It recognizes missing commas, global variables, duplicate keys for object literals in a very impressive way.</p>\n\n<p>Almost similar things can be achieved by adding some pligins like Spket in eclipse too, but it asks for licence when you go for advance level of settings.  </p>\n\n<p>If you are not so much concern about an integrated environment with web server then Web storm is best in all the aspects, but the biggest drawback of it is, \"Its paid\". ( Even if it asks for 1000 Rs ).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This page reviews the most advanced Javascript IDEs (in terms of refactoring and intellisense anyway) :</p>\n\n<p><a href=\"http://blue-walrus.com/2013/08/review-javascript-ides/\" rel=\"nofollow\">http://blue-walrus.com/2013/08/review-javascript-ides/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>What do you suggest for JS development IDE. Is there something similar to VisualStudio IDE, so I can run/debug my application in it?</p>\n",
            "last_activity_date": 1422460816,
            "question_id": 788978,
            "score": 42,
            "tags": [
                "javascript",
                "ide"
            ],
            "title": "IDE for JavaScript development"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The official protobuf project support only Java, C++, and Python. Not Javascript.</p>\n\n<p>According to the Wiki of the project, there are three projects porting protocol buffers to Javascript.</p>\n\n<ul>\n<li>Protobuf.js: <a href=\"https://github.com/dcodeIO/ProtoBuf.js\">https://github.com/dcodeIO/ProtoBuf.js</a></li>\n<li>protobuf-js: <a href=\"http://code.google.com/p/protobuf-js/\">http://code.google.com/p/protobuf-js/</a></li>\n<li>protojs: <a href=\"http://github.com/sirikata/protojs\">http://github.com/sirikata/protojs</a></li>\n</ul>\n\n<p>Protobuf.js is up-to-date.\nprotobuf-js has not been updated for two years, so I would favor Protobuf.js.</p>\n\n<p>The question still is \"Why\"?: protobuf may be a bit smaller, especially when a lot of numeric values are transferred, but JSON is simply the more common protocol in the JS space and probably better supported and easier to integrate into other tools.</p>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>Try Protostuff: <a href=\"http://code.google.com/p/protostuff/\" rel=\"nofollow\">http://code.google.com/p/protostuff/</a></p>\n\n<p>I had a bit of hard time configuring but I'm sure that was more of my issue. You can serialize/deserialize a protobuff/protostuff message to/from JSON. I'm at the early stages of using this but it looks promising so far. </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is it a good choice to use Google Protocol Buffers in JavaScript or is it better to do it with JSON?</p>\n\n<p>Also if someone can give me a simple example about Protocol Buffers implementation in JavaScript. Becauseon Google's site I think it's very poor.</p>\n",
            "last_activity_date": 1399705244,
            "question_id": 6912981,
            "score": 39,
            "tags": [
                "javascript",
                "protocol-buffers"
            ],
            "title": "Google Protocol Buffers - JavaScript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en/DOM/form.reset\"><code>form.reset()</code></a> is a DOM element method (not one on the jQuery object), so you need:</p>\n\n<pre><code>$(\"#client.frm\")[0].reset();\n//faster version:\n$(\"#client\")[0].reset();\n</code></pre>\n\n<p>Or without jQuery:</p>\n\n<pre><code>document.getElementById(\"client\").reset();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 87
                },
                {
                    "body": "<p>,reset() method does not clear the default values and checkbox field and there are many more issues.</p>\n\n<p>In order to completely reset check the below link - </p>\n\n<p><a href=\"http://www.javascript-coder.com/javascript-form/javascript-reset-form.htm\" rel=\"nofollow\">http://www.javascript-coder.com/javascript-form/javascript-reset-form.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Pure JS solution</strong> is as follows:</p>\n\n<pre><code>function clearForm(myFormElement) {\n\n  var elements = myFormElement.elements;\n\n  myFormElement.reset();\n\n  for(i=0; i&lt;elements.length; i++) {\n\n  field_type = elements[i].type.toLowerCase();\n\n  switch(field_type) {\n\n    case \"text\":\n    case \"password\":\n    case \"textarea\":\n          case \"hidden\":\n\n      elements[i].value = \"\";\n      break;\n\n    case \"radio\":\n    case \"checkbox\":\n        if (elements[i].checked) {\n          elements[i].checked = false;\n      }\n      break;\n\n    case \"select-one\":\n    case \"select-multi\":\n                elements[i].selectedIndex = -1;\n      break;\n\n    default:\n      break;\n  }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Use JavaScript function <code>reset()</code>:</p>\n\n<pre><code>document.forms[\"frm_id\"].reset();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can simply do:</p>\n\n<p><code>$(\"#client.frm\").trigger('reset')</code></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Try this :</p>\n\n<pre><code>$('#resetBtn').on('click', function(e){\n    e.preventDefault();\n    $(\"#myform\")[0].reset.click();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Note, function form.reset() will not work if some input tag in the form have attribute name='reset'</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have tried <code>$(\"#client.frm\").reset();</code> but it is not working.So how to reset form via jQuery?</p>\n",
            "last_activity_date": 1389873496,
            "question_id": 3786694,
            "score": 38,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to reset (clear) form through JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>this</code> passed to the function sets the context of the execution, so inside your anonymous function <code>this</code> refers to the <code>window</code>.</p>\n\n<p>You can than write <code>this.alert('');</code>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>function Foo() {\n\n  (function () {\n    console.log(this);\n    // &gt; Foo\n  }).call(this);\n\n  (function () {\n    console.log(this);\n    // &gt; undefined in strict mode, or Window in non strict mode\n  })();\n}\n\nvar bar = new Foo;\n</code></pre>\n\n<p>So, if for whatever reason you use this, it's a way to make the <a href=\"http://benalman.com/news/2010/11/immediately-invoked-function-expression/\" rel=\"nofollow\">IIEF</a> act as it would be a member function of <code>Foo</code>.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>I was curious about this as well as I had just seen John Resig's talk about <a href=\"http://www.youtube.com/watch?v=0LKDImgRfrg\">this video</a>. Yoshi had a great answer but I had to test it in a bit in console log to understand and I thought this modification to his answer might help some people who were having trouble at first like me:</p>\n\n<pre><code>function Foo() {\n  this.foo = true;\n  (function () {\n      console.log(\"Foo = \" + this.foo);\n      // Outputs undefined\n  }());\n  (function () {\n      console.log(\"Foo = \" + this.foo);\n      // Outputs true\n  }).call(this);\n\n  (function () {\n      console.log(this);\n      // Outputs undefined in strict mode, or Window in non strict mode\n      // Anonymous functions usually default to the global scope\n  })();\n}\n\nvar bar = new Foo;\n</code></pre>\n\n<p>It just made a little more sense to me to see the first and second ones side by side, showing that .call(this) essentially gives you the ability to pass the current context to an anonymous function.</p>\n\n<p>Thanks for the question and thanks Yoshi for the clear answer!</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<blockquote>\n  <p>Since this function was not nested, <code>this</code> was just the window. How does it differ from just writing <code>()</code> at the end?</p>\n</blockquote>\n\n<p>No - not in <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-10.4.3\">strict mode</a>:</p>\n\n<blockquote>\n  <ol>\n  <li>If the function code is strict code, set the <code>ThisBinding</code> to <code>thisArg</code>.</li>\n  <li><strong>Else</strong> if <code>thisArg</code> is <code>null</code> or <code>undefined</code>, set the <code>ThisBinding</code> to the global object.</li>\n  <li>\u2026</li>\n  </ol>\n</blockquote>\n\n<p>In strict mode, the <code>this</code> is just directly set to the given value, which is <code>undefined</code> for a normal call. Therefore, <code>.call(this)</code> is used to pass the global object explicitly in. You can try this in the console:</p>\n\n<pre><code>&gt; (function() { \"use strict\"; console.log(this); })()\nundefined\n&gt; (function() { \"use strict\"; console.log(this); }).call(this)\nWindow\n</code></pre>\n\n<p>It might not make a difference for sloppy code, but it's a good practise and future-compatible :-)</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I have seen javascript written like this (it was at a demonstration, and I don\u2019t have the actual code to hand, but it was implied this was normal):</p>\n\n<pre><code>(function() {    \n\n    var a = 1;\n\n    this.sayA = function() {\n        alert(a);\n    }\n\n}).call(this);\n\nsayA();\n</code></pre>\n\n<p>I suppose it is written in an anonyms function so that the variable \"a\" is not globally available.</p>\n\n<p>What could the point of the \".call(this)\" be?  Since this function was not nested, \"this\" was just the window.  How does it differ from just writing () at the end?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1426069283,
            "question_id": 8035822,
            "score": 37,
            "tags": [
                "javascript"
            ],
            "title": "Why write &quot;.call(this)&quot; at the end of an javascript anonyms function?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>When the document completes loading. It is the same as writing this:</p>\n\n<pre><code>$(document).ready(function(){});\n</code></pre>\n\n<p>EDIT: To answer your second question:</p>\n\n<p>If you don't wrap your code in the block above then it would fire as soon as it is encountered instead of after all the controls on the page have loaded. So if a block was at the top of a page and it referred to elements in the page those references would not work as the elements have not loaded yet.</p>\n\n<p>But if you wrap in the block then you know that the page has loaded and all elements are available to now reference.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It fires when the document has been parsed and is ready, and is the equivalent of <code>$(document).ready(function () { })</code>.</p>\n\n<p>The obvious benefit is that having your script tag before other elements on the page means that your script can interact with them even though they're not available at parse time.  If you run your script before elements have been parsed and the document is not ready, they will not be available for interaction.</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>It is executed as soon as the DOM is parsed and is invoked in order of appearance if there are multiple appearances. At this point the document is however not displayed, its just parsed.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>It fires after the the document has fully loaded, the DOM tree has been initialized, all CSS styles have been applied and all Javascript has been executed. It differs from the <code>load</code> event in that elements (other than CSS/JS) that load their content from other URLs, such as images or flash files, have not necessarily finished loading at this point. This is usually called the \"domready\" or \"domloaded\" event, and some modern browsers support it directly (e.g. Firefox has a DomContentLoaded event), and on others it can be simulated with various tricks, like using the <code>defer</code> attribute or placing a script at the very end of the body.</p>\n\n<p>The advantage is that you can reliably interact with the document at this time; for example you can set an event handler on an element with  a certain ID and be sure that it already exists in the DOM tree. On the other hand, it can run considerably earlier than the load event, if some external resource is slow to load. If your script is at the end of your HTML code, then there might be little difference in using or not using the domready event, but usually scripts are called from the <code>head</code> tag, and at that point no elements of the body are available yet.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>We have a JQuery <code>$(function()</code> statement as: </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n$(function(){\n  //Code..\n})\n&lt;/script&gt;\n</code></pre>\n\n<p>Dumb question - when exactly is this function executed?  Is it when the entire HTML page has been downloaded by the client?  </p>\n\n<p>What is benefit of using the wrapping your code within <code>$(function()</code> as opposed to just doing:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n//Code..\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1286889552,
            "question_id": 3908724,
            "score": 33,
            "tags": [
                "javascript",
                "jquery",
                "function"
            ],
            "title": "What event does JQuery $function() fire on?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You need to declare \"timer\" <em>outside</em> the function. Otherwise, you get a brand new variable on each function invocation.</p>\n\n<pre><code>var timer;\nfunction endAndStartTimer() {\n  window.clearTimeout(timer);\n  //var millisecBeforeRedirect = 10000; \n  timer = window.setTimeout(function(){alert('Hello!');},10000); \n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 78
                },
                {
                    "body": "<p>That's because timer is a local variable to your function.</p>\n\n<p>Try creating it outside of the function.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The problem is that the <code>timer</code> variable is local, and its value is lost after each function call.</p>\n\n<p>You need to persist it, you can put it outside the function, or if you don't want to expose the variable as global, you can store it in a <a href=\"http://www.jibbering.com/faq/notes/closures/\">closure</a>, e.g.:</p>\n\n<pre><code>var endAndStartTimer = (function () {\n  var timer; // variable persisted here\n  return function () {\n    window.clearTimeout(timer);\n    //var millisecBeforeRedirect = 10000; \n    timer = window.setTimeout(function(){alert('Hello!');},10000); \n  };\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>Not sure if this violates some good practice coding rule but I usually come out with this one:</p>\n\n<pre><code>if(typeof __t == 'undefined')\n        __t = 0;\nclearTimeout(__t);\n__t = setTimeout(callback, 1000);\n</code></pre>\n\n<p>This prevent the need to declare the timer out of the function.</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I try to make a page to go to the startpage after eg. 10sec of inactivity (user not clicking anywhere). I use jQuery for the rest but the set/clear in my test function are pure javascript.</p>\n\n<p>In my frustation I ended up with something like this function that I hoped I could call on any click on the page. The timer starts fine, but is not reset on a click. If the function is called 5 times within the first 10 seconds, then 5 alerts will apear... no clearTimeout...</p>\n\n<pre><code>function endAndStartTimer() {\n    window.clearTimeout(timer);\n    var timer;\n    //var millisecBeforeRedirect = 10000; \n    timer = window.setTimeout(function(){alert('Hello!');},10000); \n}\n</code></pre>\n\n<p>Any one got some lines of code that will do the trick?\n - on any click stop, reset and start the timer.\n - When timer hits eg. 10sec do something.</p>\n",
            "last_activity_date": 1406551735,
            "question_id": 3015319,
            "score": 33,
            "tags": [
                "javascript",
                "jquery",
                "timer",
                "settimeout"
            ],
            "title": "setTimeout / clearTimeout problems"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>var iframe = $('iframe'); // or some other selector to get the iframe\n$('[tokenid=' + token + ']', iframe.contents()).addClass('border');\n</code></pre>\n\n<p>Also note that if the <code>src</code> of this iframe is pointing to a different domain, due to security reasons, you will not be able to access the contents of this iframe in javascript.</p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>Take a look at this post: <a href=\"http://praveenbattula.blogspot.com/2009/09/access-iframe-content-using-jquery.html\">http://praveenbattula.blogspot.com/2009/09/access-iframe-content-using-jquery.html</a></p>\n\n<pre><code>$(\"#iframeID\").contents().find(\"[tokenid=\" + token + \"]\").html();\n</code></pre>\n\n<p>Place your selector in the find method.</p>\n\n<p>This may not be possible however if the iframe is not coming from your server.  Other posts talk about permission denied errors.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/364952/jquery-javascript-accessing-contents-of-an-iframe\">jquery/javascript: accessing contents of an iframe</a></p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>when your document is ready that doesn't mean that your iframe is ready too,<br>\nso you should listen to the iframe load event then access your contents:</p>\n\n<pre><code>$(function() {\n    $(\"#my-iframe\").bind(\"load\",function(){\n        $(this).contents().find(\"[tokenid=\" + token + \"]\").html();\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>here is simple JQuery to do this to make div draggable with in only container :</p>\n\n<pre><code>$(\"#containerdiv div\").draggable( {containment: \"#containerdiv \", scroll: false} );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In our application, we parse a web page and load it into another page in an iFrame. All the elements in that loaded page have their tokenid-s. I need to select the elements by those tokenid-s. Means - I click on an element on the main page and select corresponding element in the page in the iFrame. With the help of jQuery I'm doing it in the following way:</p>\n\n<pre><code>function selectElement(token) {\n     $('[tokenid=' + token + ']').addClass('border'); \n}\n</code></pre>\n\n<p>However with this function I can select the elements in the current page only, not in the iFrame. Could anybody tell me how can I select the elements in the loaded iFrame?</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1388914950,
            "question_id": 6316979,
            "score": 32,
            "tags": [
                "javascript",
                "iframe",
                "getelementbyid"
            ],
            "title": "Selecting an element in iFrame jQuery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I'd recommend <a href=\"http://raphaeljs.com/\">Rapha\u00ebl</a> for this.</p>\n\n<p>Sweet sexy demo: <a href=\"http://raphaeljs.com/graffle.html\">http://raphaeljs.com/graffle.html</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>For me, <a href=\"http://neyric.github.com/wireit/\" rel=\"nofollow\">WireIt</a> looks like the best bet.  Mentioned also here: <a href=\"http://stackoverflow.com/questions/86361/designing-a-yahoo-pipes-inspired-interface\">http://stackoverflow.com/questions/86361/designing-a-yahoo-pipes-inspired-interface</a></p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"https://www.jgraph.com/mxgraph.html\" rel=\"nofollow\">mxGraph</a>, which is written in plain JavaScript, so you could wrap it in jQuery or any JS framework. Note that it is a commercial component.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Extjs lib. An example online flow chart build with  <a href=\"http://www.cubedrive.com/flowPublic?id=HQypsxuhMgQ_&amp;viewStatus=publicView\" rel=\"nofollow\">extjs</a> </p>\n\n<p>And online flow chart help document <a href=\"http://www.cubedrive.com/wordPublic?id=mN8TqLcVN-4_&amp;viewStatus=publicView\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The following JavaScript libraries may help :)</p>\n\n<ul>\n<li><p><a href=\"http://thejit.org/\">Jit</a></p></li>\n<li><p><a href=\"http://jsplumb.org\">jsPlumb</a></p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 24
                }
            ],
            "body": "<p>Are there any javascript libraries for client-side rendering and manipulation of flow-charts?  My preference would be for jQuery, but I'd settle for others.</p>\n\n<hr>\n\n<p>This question has been asked before, but not for a couple of years so I'm hoping there's a more positive answer now!</p>\n\n<hr>\n\n<p>The question <em>has</em> been asked <em>again</em> and now the most upvoted and most complete version of this question and answers is here:\n<a href=\"http://stackoverflow.com/questions/7034/graph-visualization-library-in-javascript?rq=1\">Graph visualization library in JavaScript</a></p>\n",
            "last_activity_date": 1423725476,
            "question_id": 3944723,
            "score": 32,
            "tags": [
                "javascript",
                "jquery",
                "workflow",
                "flowchart"
            ],
            "title": "JavaScript flowchart / flow diagram lib"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Just <code>return true</code> instead?</p>\n\n<p>The return value from the <code>onClick</code> code is what determines whether the link's inherent clicked action is processed or not - returning <code>false</code> means that it isn't processed, but if you return <code>true</code> then the browser will proceed to process it after your function returns and go to the proper anchor.</p>\n",
                    "is_accepted": true,
                    "score": 62
                },
                {
                    "body": "<p>If the link should only change the location if the function run is successful, then do <code>onclick=\"return runMyFunction();\"</code> and in the function you would return true or false.</p>\n\n<p>If you just want to run the function, and then let the anchor tag do its job, simply remove the <code>return false</code> statement.</p>\n\n<p>As a side note, you should probably use an event handler instead, as inline JS isn't a very optimal way of doing things.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>&lt;a href=\"#Foo\" onclick=\"return runMyFunction();\"&gt;Do it!&lt;/a&gt;\n</code></pre>\n\n<p>and</p>\n\n<pre><code>function runMyFunction() {\n  //code\n  return true;\n}\n</code></pre>\n\n<p>This way you will have youf function executed AND you will follow the link AND you will follow the link exactly after your function was successfully run. </p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I want to author an anchor tag that executes some javascript and then proceeds to go wherever the href was taking it. Invoking a function that executes my JS and then sets window.location or top.location to the href location doesn't work for me.</p>\n\n<p>So, imagine I have an element with id \"Foo\" on the page. I want to author an anchor similar to:</p>\n\n<pre><code>&lt;a href=\"#Foo\" onclick=\"runMyFunction(); return false;\"&gt;Do it!&lt;/a&gt;\n</code></pre>\n\n<p>When this is clicked, I want to execute runMyFunction and then jump the page to #Foo (not cause a reload - using top.location would cause it to reload the page).</p>\n\n<p>Suggestions? I am happy to use jQuery if it can help here...</p>\n",
            "last_activity_date": 1251455140,
            "question_id": 1346043,
            "score": 32,
            "tags": [
                "javascript",
                "html",
                "anchor"
            ],
            "title": "HTML anchor link - href and onclick both?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>With the onclick parameter...</p>\n\n<pre><code>&lt;a href='http://www.google.com' onclick='myJavaScriptFunction();'&gt;mylink&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Use the <a href=\"http://reference.sitepoint.com/html/event-attributes/onclick\" rel=\"nofollow\"><code>onclick</code> HTML attribute</a>.<br></p>\n\n<blockquote>\n  <p>The <code>onclick</code> event handler captures a\n  click event from the users\u2019 mouse\n  button on the element to which the\n  <code>onclick</code> attribute is applied. This\n  action usually results in a call to a\n  script method such as a JavaScript\n  function [...]</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Neater still, instead of the <code>typical href=\"#\"</code> or <code>href=\"javascript:void\"</code> or <code>href=\"whatever\"</code>, I think this makes much more sense:</p>\n\n<pre><code>var el = document.getElementById('foo');\nel.onclick = showFoo;\n\n\nfunction showFoo() {\n  alert('I am foo!');\n  return false;\n}\n\n&lt;a href=\"no-javascript.html\" title=\"Get some foo!\" id=\"foo\"&gt;Show me some foo&lt;/a&gt;\n</code></pre>\n\n<p>If Javascript fails, there is some feedback. Furthermore, erratic behavior (page jumping in the case of <code>href=\"#\"</code>, visiting the same page in the case of <code>href=\"\"</code>) is eliminated.</p>\n",
                    "is_accepted": true,
                    "score": 68
                },
                {
                    "body": "<p>Ideally I would avoid generating links in you code behind altogether as your code will need recompiling every time you want to make a change to the 'markup' of each of those links. If you have to do it I would not embed your javascript 'calls' inside your HTML, it's a bad practice altogether, your markup should describe your document not what it does, thats the job of your javascript.</p>\n\n<p>Use an approach where you have a specific id for each element (or class if its common functionality) and then use Progressive Enhancement to add the event handler(s), something like:</p>\n\n<pre><code>[c# example only probably not the way you're writing out your js]\nResponse.Write(\"&lt;a href=\\\"/link/for/javascriptDisabled/Browsers.aspx\\\" id=\\\"uxAncMyLink\\\"&gt;My Link&lt;/a&gt;\");\n\n[Javascript]  \ndocument.getElementById('uxAncMyLink').onclick = function(e){\n\n// do some stuff here\n\n    return false;\n    }\n</code></pre>\n\n<p>That way your code won't break for users with JS disabled and it will have a clear seperation of concerns.</p>\n\n<p>Hope that is of use.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I would generally recommend using element.attachEvent (IE) or element.addEventListener (other browsers) over setting the onclick event directly as the latter will replace any existing event handlers for that element.</p>\n\n<p>attachEvent / addEventListening allow multiple event handlers to be created.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The JQuery answer. Since JavaScript was invented in order to develop JQuery, I am giving you an example in JQuery doing this:</p>\n\n<pre><code>&lt;div class=\"menu\"&gt;\n    &lt;a href=\"http://example.org\"&gt;Example&lt;/a&gt;\n    &lt;a href=\"http://foobar.com\"&gt;Foobar.com&lt;/a&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\njQuery( 'div.menu a' )\n    .click(function() {\n    \tdo_the_click( this.href );\n    \treturn false;\n    });\n\n// play the funky music white boy\nfunction do_the_click( url )\n{\n    alert( url );\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I prefer using the onclick method rather than the href for javascript hyperlinks. And always use alerts to determine what value do you have.</p>\n\n<p><code>&lt;a href='#' onclick='jsFunction();alert('it works!');'&gt;Link&lt;/a&gt;</code></p>\n\n<p>It could be also used on input tags eg.</p>\n\n<p><code>&lt;input type='button' value='Submit' onclick='jsFunction();alert('it works!');'&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The simplest answer of all is...</p>\n\n<p><code>&lt;a href=\"javascript:alert('You clicked!')\"&gt;My link&lt;/a&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I am dynamically creating a hyperlink in the c# code behind file of ASP.NET. I need to call a JavaScript function on client click. how do i accomplish this?</p>\n",
            "last_activity_date": 1394702877,
            "question_id": 1265887,
            "score": 31,
            "tags": [
                "javascript",
                "hyperlink"
            ],
            "title": "call javascript function on hyperlink click"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>From the ECMAScript standard, ECMA-262, 5th ed.</p>\n\n<blockquote>\n  <h2>15.4.5.2 length</h2>\n  \n  <p>The length property of this Array object is a data property whose value is always numerically greater than the name of every deletable property whose name is an array index.</p>\n</blockquote>\n\n<p>Note the length property of an array only takes into account array indices, which are integers; setting other properties doesn't affect length. </p>\n\n<p>For an array, <code>a[\"3\"]</code> is equivalent to <code>a[3]</code> (this behavior is specified by \u00a7 15.4.5.1); 3 is an array index rather than a property. Thus setting <code>a[\"3\"]</code> affects the array's length. <code>b[\"key1\"]</code> is equivalent to <code>b.key1</code>. Setting properties don't affect the length of a collection.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>length returns 1 + the largest integer key in the object. </p>\n\n<p>In <code>a</code> the largest key is 2 so 1+2 is 3.</p>\n\n<p>In <code>b</code> there are no integer keys (the keys there are <code>key1</code> and <code>key2</code> which cannot be converted into ints) so Javascript assumes that the largest key is <code>-1</code>, and <code>1 + -1</code> yields <code>0</code>.</p>\n\n<p>This program will help you see that:</p>\n\n<pre><code>a = [];\na[\"1\"] = {};\na[\"4\"] = {};\nalert(a.length); // Prints 5\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>One thing to note is that there is a difference between regular arrays and associative arrays. In regular arrays (real arrays), the index has to be an integer. On the other hand, associative arrays can use strings as an index. You can think of associative arrays as a map if you like. Now, also note, true arrays always start from zero. Thus in your example, you created an array in the following manner:</p>\n\n<pre><code>a = [];\na[\"1\"] = {\"string1\":\"string\",\"string2\":\"string\"};\na[\"2\"] = {\"string1\":\"string\",\"string2\":\"string\"}\n</code></pre>\n\n<p>Javascript was able to convert your string indexes into numbers, hence, your code above becomes:</p>\n\n<pre><code>a = [];\na[1] = {\"blah\"};\na[2] = {\"blah\"};\n</code></pre>\n\n<p>But remember what i said earlier: True arrays start from zero. Therefore, the javascript interpreter automatically assigned a[0] to the undefined. Try it out in either firebug or the chrome/safari console, and you will see something like this when you try to print \"a\". You should get something like \"[undefined, Object, Object]. Hence the size 3 not 2 as you expected.</p>\n\n<p>In your second example, i am pretty sure you are trying to simulate the use of an associated array, which essentially is adding properties to an object. Remember associated arrays enable you to use strings as a key. So in other terms, you are adding a property to the object. So in your example:</p>\n\n<pre><code>b[\"key1\"] = {\"string1\":\"string\",\"string2\":\"string\"};\n</code></pre>\n\n<p>this really means:</p>\n\n<pre><code>b.key1 = {\"string1\":\"string\",\"string2\":\"string\"};\n</code></pre>\n\n<p>Initializing b =[] simply creates an array, but your assignment doesn't populate the array. It simply gives \"b\" extra properties. Hope this helps.. :-)</p>\n",
                    "is_accepted": true,
                    "score": 44
                }
            ],
            "body": "<p>Could someone explain this (strange) behavior? Why is the length in the first example 3 and not 2, and most importantly, why is the length in the second example 0? As long as the keys are numerical, length works. When they are not, length is 0. How can I get the correct length from the second example? Thank you.</p>\n\n<pre><code>a = [];\na[\"1\"] = {\"string1\":\"string\",\"string2\":\"string\"};\na[\"2\"] = {\"string1\":\"string\",\"string2\":\"string\"};\nalert(a.length); // returns 3\n\nb = [];\nb[\"key1\"] = {\"string1\":\"string\",\"string2\":\"string\"};\nb[\"key2\"] = {\"string1\":\"string\",\"string2\":\"string\"};\nalert(b.length); // returns 0\n</code></pre>\n",
            "last_activity_date": 1421080288,
            "question_id": 2528680,
            "score": 29,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "Javascript array length incorrect on array of objects"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Afer some research i created a way to get it to work.</p>\n\n<p>here is my test that shows it working: <a href=\"http://www.antiyes.com/test/test2.php\">http://www.antiyes.com/test/test2.php</a></p>\n\n<p>here is the relevant code:</p>\n\n<pre><code>&lt;script&gt;\n    // easy copy of an array\n    Array.prototype.copy = function() {\n        return [].concat(this);\n    };\n\n    // this function is added to jQuery, it allows access to the readylist\n    // it works for jQuery 1.3.2, it might break on future versions\n    $.getReadyList = function() {\n        if(this.readyList != null)\n            this.myreadylist =  this.readyList.copy();      \n        return this.myreadylist;\n    };\n\n    $(document).ready(function() {\n        alert(\"blah\");\n    });\n\n&lt;/script&gt;\n\n&lt;script&gt;\n\n    // this should be added last so it gets all the ready event\n    $(document).ready(function() {\n        readylist = $.getReadyList();\n    });\n\n&lt;/script&gt;\n</code></pre>\n\n<p>then in the body I have:</p>\n\n<pre><code>&lt;input type=\"button\" onclick=\"$(readylist).each(function(){this();});\" value=\"trigger ready\" /&gt;\n</code></pre>\n\n<p>basically what i did was add a function to jQuery that copies the readyList before it's cleared out, then it will be available to be used by you.</p>\n\n<p><strong>it looks like the code below doesnt work:</strong></p>\n\n<pre><code>function AjaxLoaded() {\n    $(document).trigger('ready');\n}\n</code></pre>\n\n<p>drop the quotes around <code>document</code>.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Just in case anyone needs it, I refined John's solution a bit so it could be used directly as an included javascript file.</p>\n\n<pre><code>// jquery_trigger_ready.js\n// this function is added to jQuery, it allows access to the readylist\n// it works for jQuery 1.3.2, it might break on future versions\n$.getReadyList = function() {\n  if(this.readyList != null) { this.myreadylist = [].concat(this.readyList); }\n  return this.myreadylist;\n};\n\n$(document).ready(function() {\n  readylist = $.getReadyList();\n});\n\n$.triggerReady = function() {\n  $(readylist).each(function(){this();});\n}\n</code></pre>\n\n<p>Including this file after including jquery allows for triggering ready by invoking <code>$.triggerReady()</code>. Example:</p>\n\n<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;trigger ready event&lt;/title&gt;\n    &lt;script src=\"test2_files/jquery-1.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    &lt;script src=\"jquery_trigger_ready.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;input onclick=\"$.triggerReady();\" value=\"trigger ready\" type=\"button\"&gt;\n    &lt;script type=\"text/javascript\"&gt;\n      $(document).ready(function(){\n          alert(\"blah\");\n      });\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>By the way, I wanted to make it <code>$(document).triggerReady()</code>. If anyone is willing to share some advice on that, ill be appreciated.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>We had the same problem and solved it another way.</p>\n\n<p>Instead of </p>\n\n<pre><code>$(document).ready(function () {\n  $('.specialClass').click(....\n</code></pre>\n\n<p>We used :</p>\n\n<pre><code>$(document).bind('ready', function(event) {\n  $('.specialClass', event.target).click(..\n</code></pre>\n\n<p>jQuery will trigger a \"ready\" event on the document as usual. When we load the content of a new div via ajax, we can write:</p>\n\n<pre><code>loadedDiv.trigger('ready')\n</code></pre>\n\n<p>And have all the initialization performed only on the div, obtaining what expected. </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Simone Gianni's Answer I think is the most elegant and clean.</p>\n\n<p>and you can even simplify it to become even more easy to use:</p>\n\n<pre><code>jQuery.fn.loadExtended = function(url,completeCallback){\n    return this.load(url,function(responseText, textStatus, XMLHttpRequest) {\n        if (completeCallback !== undefined &amp;&amp; completeCallback !== null) {\n            completeCallback(responseText, textStatus, XMLHttpRequest);\n        }\n        $(this).trigger(\"ready\");\n    });\n};\n</code></pre>\n\n<p>So, now instead of using:</p>\n\n<pre><code>$(\".container\").load(url,function(responseText, textStatus, XMLHttpRequest) {\n    $(this).trigger(\"ready\");\n});\n</code></pre>\n\n<p>you can just use:</p>\n\n<pre><code>$(\".container\").loadExtended(\"tag_cloud.html\");\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>$(\".container\").loadExtended(\"tag_cloud.html\",function(){ \n    alert('callback function') \n});\n</code></pre>\n\n<p>This has the advantage of only applying the trigger on the div that's being updated.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Since the jQuery readyList is not exposed as of version 1.4 (discussed <a href=\"http://forum.jquery.com/topic/readylist-is-no-longer-exposed-in-1-4/\">here</a>) the nice solutions above are broken.</p>\n\n<p>A way around this is by creating your own readyList, through overriding the original jQuery-ready method. This needs to be done before other scripts that use the original ready method are loaded. Otherwise just the same code as John/Kikito:</p>\n\n<pre><code>// Overrides jQuery-ready and makes it triggerable with $.triggerReady\n// This script needs to be included before other scripts using the jQuery-ready.\n// Tested with jQuery 1.7\n(function(){\nvar readyList = [];\n\n// Store a reference to the original ready method.\nvar originalReadyMethod = jQuery.fn.ready;\n\n// Override jQuery.fn.ready\njQuery.fn.ready = function(){\nif(arguments.length &amp;&amp; arguments.length &gt; 0 &amp;&amp; typeof arguments[0] === 'function') {\n  readyList.push(arguments[0]);\n}\n\n// Execute the original method.\noriginalReadyMethod.apply( this, arguments );\n};\n\n// Used to trigger all ready events\n$.triggerReady = function() {\n  $(readyList).each(function(){this();});\n};\n})();\n</code></pre>\n\n<p>I'm not sure whether it is advisable to override the ready method. Feel free to advise me on that. I have not yet found any side effects myself though.</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>My requirements are the following:</p>\n\n<ul>\n<li>I've got a rich webpage that at a certain moment loads a bunch of HTML in a <code>div</code>, via AJAX.</li>\n<li>The HTML I retrieve does have javascript (<code>&lt;script&gt;...&lt;/script&gt;</code>)</li>\n<li>The retrieved javascript contains <code>$('document').ready( ... )</code> parts</li>\n<li>I <strong>can not</strong> modify the retrieved javascript; it comes from an external lib</li>\n<li><p>I've got a javascript function that is called when the AJAX is loaded. I'm trying to \"trick it\" into executing by doing:</p>\n\n<pre><code>function AjaxLoaded() {\n  $('document').trigger('ready');\n}\n</code></pre></li>\n</ul>\n\n<p>That doesn't cut it, I'm afraid.</p>\n\n<p>I've seen <a href=\"http://stackoverflow.com/questions/562229/how-to-trigger-ready-in-jquery\">several</a> <a href=\"http://stackoverflow.com/questions/2200540/document-ready-not-executed-for-ajax-loaded-content\">responses</a> on Stack Overflow that \"evade\" this question by changing the code that is returned on the AJAX (make it a function and call it after loading, or just remove the <code>$(document).ready()</code>). I need to stress out that I can't change the retrieved code on this case.</p>\n",
            "last_activity_date": 1352411692,
            "question_id": 2238030,
            "score": 29,
            "tags": [
                "javascript",
                "jquery",
                "ajax"
            ],
            "title": "Trigger $document.ready (so AJAX code I can&#39;t modify is executed)"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>All the complexities you mentioned seem fine.\nBut if the array object maintains the length, then appending can also be done in O(1) time.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In contrast to most languages, which implement arrays with, well, arrays, in Javascript Arrays are objects, and values are stored in a hashtable, just like regular object values. As such:</p>\n\n<ul>\n<li>Access - O(1)</li>\n<li>Appending - Amortized O(1) (sometimes resizing the hashtable is required; usually only insertion is required)</li>\n<li>Prepending - O(n) via <code>unshift</code>, since it requires reassigning all the indexes</li>\n<li>Insertion - Amortized O(1) if the value does not exist. O(n) if you want to shift existing values (Eg, using <code>splice</code>).</li>\n<li>Deletion - Amortized O(1) to remove a value, O(n) if you want to reassign indices via <code>splice</code>.</li>\n<li>Swapping - O(1)</li>\n</ul>\n\n<p>In general, setting or unsetting any key in a dict is amortized O(1), and the same goes for arrays, regardless of what the index is. Any operation that requires renumbering existing values is O(n) simply because you have to update all the affected values.</p>\n",
                    "is_accepted": true,
                    "score": 20
                }
            ],
            "body": "<p>Arrays in JavaScript are very easy to modify by adding and removing items. It somewhat masks the fact that most languages array's are fixed-size, and require complex operations to resize. It seems that JavaScript makes it easy to write poorly performing array code. This leads to the question:</p>\n\n<p><strong>What performance (in terms of big O time complexity) can I expect from JavaScript implementations in regards to array performance?</strong></p>\n\n<p>I assume that all reasonable JavaScript implementations have at least the following big O's.</p>\n\n<ul>\n<li>Access - O(1)</li>\n<li>Appending - O(n)</li>\n<li>Prepending - O(n)</li>\n<li>Insertion - O(n)</li>\n<li>Deletion - O(n)</li>\n<li>Swapping - O(1)</li>\n</ul>\n\n<p>JavaScript lets you pre-fill an array to a certain size, using <code>new Array(length)</code> syntax. (Bonus question: Is creating an array in this manner O(1) or O(n)) This is more like a conventional array, and if used as a pre-sized array, can allow O(1) appending. If circular buffer logic is added, you can achieve O(1) prepending. If a dynamically expanding array is used, O(log n) will be the average case for both of those.</p>\n\n<p>Can I expect better performance for some things than my assumptions here? I don't expect anything is outlined in any specifications, but in practice it could be that all major implementations use optimized arrays behind the scenes. Are there dynamically expanding arrays or some other performance boosting algorithms at work?</p>\n\n<p>P.S.</p>\n\n<p>The reason I'm wondering this is because I'm researching some sorting algorithms, most of which seem to assume appending and deleting are O(1) operations when describing their overall big O.</p>\n",
            "last_activity_date": 1402233303,
            "question_id": 11514308,
            "score": 27,
            "tags": [
                "javascript",
                "arrays",
                "algorithm",
                "big-o",
                "time-complexity"
            ],
            "title": "Big O of JavaScript arrays"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Yup. Function references are just like any other object reference, you can pass them around to your heart's content.</p>\n\n<p>Here's a more concrete example:</p>\n\n<pre><code>function foo() {\n    alert(\"Hello from foo!\");\n}\n\nfunction caller(f) {\n    // Call the given function\n    f();\n}\n\nfunction indirectCaller(f) {\n    // Call `caller`, who will in turn call `f`\n    caller(f);\n}\n\n// Do it\nindirectCaller(foo); // alerts \"Hello from foo!\"\n</code></pre>\n\n<p><a href=\"http://jsbin.com/abozaq\">Live example</a></p>\n\n<p>You can also pass in arguments for <code>foo</code>:</p>\n\n<pre><code>function foo(a, b) {\n    display(a + \" + \" + b + \" = \" + (a + b));\n}\n\nfunction caller(f, v1, v2) {\n    // Call the given function\n    f(v1, v2);\n}\n\nfunction indirectCaller(f, v1, v2) {\n    // Call `caller`, who will in turn call `f`\n    caller(f, v1, v2);\n}\n\n// Do it\nindirectCaller(foo, 1, 2); // alerts \"1 + 2 = 3\"\n</code></pre>\n\n<p><a href=\"http://jsbin.com/abozaq/4\">Live example</a></p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>Yes of course, function are objects and can be passed,  but of course you must declare it:</p>\n\n<pre><code>function firstFunction(){\n    //some code\n    var callbackfunction = function(data){\n       //do something with the data returned from the ajax request\n     }\n    //a callback function is written for $.post() to execute\n    secondFunction(\"var1\",\"var2\",callbackfunction);\n}\n</code></pre>\n\n<p>an interesting thing is that your callback function has also access to every variable you might have declared inside firstFunction() (variables in javascript have local scope).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you google for <code>javascript callback function example</code> you will get <a href=\"http://stackoverflow.com/questions/483073/getting-a-better-understanding-of-callback-functions-in-javascript\">Getting a better understanding of callback functions in JavaScript</a></p>\n\n<p>This is how to do a callback function:</p>\n\n<pre><code>function f() {\n    alert('f was called!');\n}\n\nfunction callFunction(func) {\n    func();\n}\n\ncallFunction(f);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Also, could be simple as:</p>\n\n<pre><code>if( typeof foo == \"function\" )\n    foo();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Example for <code>CoffeeScript</code>:</p>\n\n<pre><code>test = (str, callback) -&gt;\n  data = \"Input values\"\n  $.ajax\n    type: \"post\"\n    url: \"http://www.mydomain.com/ajaxscript\"\n    data: data\n    success: callback\n\ntest (data, textStatus, xhr) -&gt;\n  alert data + \"\\t\" + textStatus\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm new to ajax and callback functions, please forgive me if i get the concepts all wrong.</p>\n\n<p><b>Problem:</b> Could i send a <strong><em>callbackfunction</em></strong> as a parameter to another function that will execute the callback?</p>\n\n<pre><code>function firstFunction(){\n    //some code\n\n    //a callback function is written for $.post() to execute\n    secondFunction(\"var1\",\"var2\",callbackfunction);\n}\n\nfunction secondFunction(var1, var2, callbackfunction) {\n    params={}\n    if (event != null) params = event + '&amp;' + $(form).serialize();\n\n    // $.post() will execute the callback function\n    $.post(form.action,params, callbackfunction);\n}\n</code></pre>\n",
            "last_activity_date": 1386254244,
            "question_id": 6466031,
            "score": 24,
            "tags": [
                "javascript",
                "ajax",
                "callback",
                "call"
            ],
            "title": "How to pass callback as a parameter into another function"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>You can take a look at <a href=\"http://www.w3schools.com/jsref/jsref_obj_date.asp\" rel=\"nofollow\">this</a>. One of the examples says:</p>\n\n<pre><code>var d = new Date(dateString);\n</code></pre>\n\n<p>Once you have Date object you can fairly easy play with it. You can either call toLocaleDateString, toLocaleTimeString or you can test if getHours is bigger than 12 and then just calculate AM/PM time.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>jQuery doesn't have any Date utilities at all. If you don't use any additional libraries, the usual way is to create a JavaScript <code>Date</code> object and then extract the data from it and format it yourself.</p>\n\n<p>For creating the <code>Date</code> object you can either make sure that your date string in the JSON is in a form that <code>Date</code> understands, which is IETF standard (which is basically <a href=\"http://tools.ietf.org/html/rfc822#section-5\" rel=\"nofollow\">RFC 822 section 5</a>). So if you have the chance to change your JSON, that would be easiest. (EDIT: Your format may actually work the way it is.)</p>\n\n<p>If you can't change your JSON, then you'll need to parse the string yourself and get day, mouth, year, hours, minutes and seconds as integers and create the <code>Date</code> object with that.</p>\n\n<p>Once you have your <code>Date</code> object you'll need to extract the data you need and format it:</p>\n\n<pre><code>   var myDate = new Date(\"4 Feb 2011, 19:00:00\");\n   var hours = myDate.getHours();\n   var am = true;\n   if (hours &gt; 12) {\n      am = false;\n      hours -= 12;\n   } else (hours == 12) {\n      am = false;\n   } else (hours == 0) {\n      hours = 12;\n   }\n\n   var minutes = myDate.getMinutes();\n   alert(\"It is \" + hours + \" \" + (am ? \"a.m.\" : \"p.m.\") + \" and \" + minutes + \" minutes\".);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>UPDATE 2:</strong> without seconds option</p>\n\n<p><strong>UPDATE:</strong> AM after noon corrected, tested: <a href=\"http://jsfiddle.net/inti/xbtjE/\">http://jsfiddle.net/inti/xbtjE/</a></p>\n\n<p>I created this function to do this:</p>\n\n<pre><code>function formatDate(date) {\n    var d = new Date(date);\n    var hh = d.getHours();\n    var m = d.getMinutes();\n    var s = d.getSeconds();\n    var dd = \"AM\";\n    var h = hh;\n    if (h &gt;= 12) {\n        h = hh-12;\n        dd = \"PM\";\n    }\n    if (h == 0) {\n        h = 12;\n    }\n    m = m&lt;10?\"0\"+m:m;\n\n    s = s&lt;10?\"0\"+s:s;\n\n    /* if you want 2 digit hours:\n    h = h&lt;10?\"0\"+h:h; */\n\n    var pattern = new RegExp(\"0?\"+hh+\":\"+m+\":\"+s);\n\n    var replacement = h+\":\"+m;\n    /* if you want to add seconds\n    replacement += \":\"+s;  */\n    replacement += \" \"+dd;    \n\n    return date.replace(pattern,replacement);\n}\n\nalert(formatDate(\"February 04, 2011 12:00:00\"));\n</code></pre>\n\n<p>Hope it does what you need!</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<pre><code>date = date.replace(/[0-9]{1,2}(:[0-9]{2}){2}/, function (time) {\n    var hms = time.split(':'),\n        h = +hms[0],\n        suffix = (h &lt; 12) ? 'am' : 'pm';\n    hms[0] = h % 12 || 12;        \n    return hms.join(':') + suffix\n});\n</code></pre>\n\n<p>edit: I forgot to deal with 12 o'clock am/pm. Fixed.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here you go</p>\n\n<pre><code>var myDate = new Date(\"February 04, 2011 19:00:00\");\nvar hr = myDate.getHours(); \nvar convHrs = \"\";\nvar ampmSwitch = \"\";\nampmSwitch = (hr &gt; 12)? \"PM\":\"AM\"; \nconvHrs = (hr &gt;12)? hr-12:hr;\n// Build back the Date / time using getMonth/ getFullYear and getDate and other functions on the myDate object. Enclose it inside a func and there you got the working 12 hrs converter ;)\n</code></pre>\n\n<p>And here's the converter func for yas ;) Happy coding!!</p>\n\n<pre><code>function convertTo12Hrs(yourDateTime){\n    var myDate = new Date(yourDateTime);\n    var dtObject = new Object();\n    var monthsCollection = {0:\"January\", 1:\"February\",2:\"March\",3:\"April\",4:\"May\",5:\"June\",6:\"July\",7:\"August\",8:\"September\",9:\"October\",10:\"November\",11:\"December\"};\n    dtObject.year = myDate.getFullYear();\n    dtObject.month = monthsCollection[myDate.getMonth()];\n    dtObject.day = (myDate.getDate()&lt;10)?\"0\"+myDate.getDate():myDate.getDate();\n    dtObject.minutes = (myDate.getMinutes() &lt; 10)? \"0\"+myDate.getMinutes():myDate.getMinutes();\n    dtObject.seconds = (myDate.getSeconds() &lt; 10)? \"0\"+myDate.getSeconds():myDate.getSeconds();\n    // Check if hours are greater than 12? Its PM\n    dtObject.ampmSwitch = (myDate.getHours() &gt; 12)? \"PM\":\"AM\";\n    // Convert the hours\n    dtObject.hour = (myDate.getHours() &gt; 12)?myDate.getHours()-12:myDate.getHours();\n    // Add the 0 as prefix if its less than 10\n    dtObject.hour = (dtObject.hour &lt; 10)? \"0\"+dtObject.hour:dtObject.hour;\n\n    // Format back the string as it was or return the dtObject object or however you like. I am returning the object here\n    return dtObject;\n}\n</code></pre>\n\n<p>invoke it like\nconvertTo12Hrs(\"February 04, 2011 19:00:00\"); it will return you the object, which in turn you can use to format back your datetime string as you fancy... </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>    //it is pm if hours from 12 onwards\n    suffix = (hours &gt;= 12)? 'pm' : 'am';\n\n    //only -12 from hours if it is greater than 12 (if not back at mid night)\n    hours = (hours &gt; 12)? hours -12 : hours;\n\n    //if 00 then it is 12 am\n    hours = (hours == '00')? 12 : hours;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>You're going to end up doing alot of string manipulation anyway,\nso why not just manipulate the date string itself?</p>\n\n<p>Browsers format the date string differently.</p>\n\n<blockquote>\n  <p>Netscape ::: Fri May 11 2012 20:15:49 GMT-0600 (Mountain Daylight Time)</p>\n  \n  <p>IE ::: Fri May 11 20:17:33 MDT 2012 </p>\n</blockquote>\n\n<p>so you'll have to check for that.  </p>\n\n<pre><code>var D = new Date().toString().split(' ')[(document.all)?3:4];\n</code></pre>\n\n<p>That will set D equal to the 24-hour HH:MM:SS string.  Split that on the\ncolons, and the first element will be the hours.</p>\n\n<pre><code>var H = new Date().toString().split(' ')[(document.all)?3:4].split(':')[0];\n</code></pre>\n\n<p>You <em>can</em> convert 24-hour hours into 12-hour hours, but that hasn't\nactually been mentioned here.  Probably because it's fairly CRAZY\nwhat you're actually doing mathematically when you convert hours \nfrom clocks.  In fact, what you're doing is adding 23, mod'ing that\nby 12, and adding 1</p>\n\n<pre><code>twelveHour = ((twentyfourHour+23)%12)+1;\n</code></pre>\n\n<p>So, for example, you could grab the whole time from the date string, mod\nthe hours, and display all that with the new hours.</p>\n\n<pre><code>var T = new Date().toString().split(' ')[(document.all)?3:4].split(':');\nT[0] = (((T[0])+23)%12)+1;\nalert(T.join(':'));\n</code></pre>\n\n<p>With some smart regex, you can probably pull the hours off the HH:MM:SS\npart of the date string, and mod them all in the same line.  It would be\na ridiculous line because the backreference $1 couldn't be used in\ncalculations without putting a function in the replace.</p>\n\n<p>Here's how that would look:</p>\n\n<pre><code>var T = new Date().toString().split(' ')[(document.all)?3:4].replace(/(^\\d\\d)/,function(){return ((parseInt(RegExp.$1)+23)%12)+1} );\n</code></pre>\n\n<p>Which, as I say, is ridiculous.  If you're using a library that CAN perform\ncalculations on backreferences, the line becomes:</p>\n\n<pre><code>var T = new Date().toString().split(' ')[(document.all)?3:4].replace(/(^\\d\\d)/, (($1+23)%12)+1);\n</code></pre>\n\n<p>And that's not actually out of the question as useable code, if you document it well.\nThat line says:</p>\n\n<blockquote>\n  <p>Make a Date string, break it up on the spaces, get the browser-apropos part,\n  and replace the first two-digit-number with that number mod'ed.</p>\n</blockquote>\n\n<p>Point of the story is, the way to convert 24-hour-clock hours to 12-hour-clock hours\nis a non-obvious mathematical calculation:</p>\n\n<p>You add 23, mod by 12, then add one more.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's a reasonably terse way to do it using a Prototype:</p>\n\n<pre>\nDate.prototype.getFormattedTime = function () {\n    var hours = this.getHours() == 0 ? \"12\" : this.getHours() > 12 ? this.getHours() - 12 : this.getHours();\n    var minutes = (this.getMinutes() &lt; 10 ? \"0\" : \"\") + this.getMinutes();\n    var ampm = this.getHours() &lt; 12 ? \"AM\" : \"PM\";\n    var formattedTime = hours + \":\" + minutes + \" \" + ampm;\n    return formattedTime;\n}\n</pre>\n\n<p>Then all you have to do is convert your string value to a date and use the new method:</p>\n\n<pre>\nvar stringValue = \"February 04, 2011 19:00:00;\nvar dateValue = new Date(stringValue);\nvar formattedTime = dateValue.getFormattedTime();\n</pre>\n\n<p>Or in a single line:</p>\n\n<pre>\nvar formattedTime = new Date(\"February 04, 2011 19:00:00\").getFormattedTime();\n</pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code> function GetTime(date) {\n        var currentTime = (new Date(date))\n        var hours = currentTime.getHours()\n        //Note: before converting into 12 hour format\n        var suffix = '';\n        if (hours &gt; 11) {\n            suffix += \"PM\";\n        } else {\n            suffix += \"AM\";\n        }\n        var minutes = currentTime.getMinutes()\n        if (minutes &lt; 10) {\n            minutes = \"0\" + minutes\n        }\n        if (hours &gt; 12) {\n            hours -= 12;\n        } else if (hours === 0) {\n            hours = 12;\n        }\n        var time = hours + \":\" + minutes + \" \" + suffix;\n        return time;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is how you can change hours without if statement:</p>\n\n<pre><code>hours = ((hours + 11) % 12 + 1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Here is a nice little function that worked for me.</p>\n\n<pre><code>function getDisplayDatetime() {\nvar d = new Date(); var hh = d.getHours(); var mm = d.getMinutes(); var dd = \"AM\"; var h = hh;\n\nif (mm.toString().length == 1) {\n    mm = \"0\" + mm;\n}\n\nif (h &gt;= 12) {\n    h = hh - 12;\n    dd = \"PM\";\n}\n\nif (h == 0) {\n    h = 12;\n}\nvar Datetime = \"Datetime: \" + d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getUTCDate() + \" \" + h + \":\" + mm;\nreturn Datetime + \" \" + dd;\n</code></pre>\n\n<p>}</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;script&gt;\n    function time1()\n    {\n        var today=new Date();\n        var h=today.getHours();\n        var m=today.getMinutes();\n        var s=today.getSeconds();\n        h = h % 12;\n        h= h ? h : 12; // the hour '0' should be '12'\n        var ampm=h &gt;= 12 ? 'PM' : 'AM';\n        m = m &lt; 10 ? '0'+m : m;\n        s = s &lt;10 ? '0'+s: s;\n    // add a zero in front of numbers&lt;10\n\n        document.getElementById('clk').innerHTML=h+':'+m+':'+s+' '+ampm;\n        t=setTimeout(function(){time1()},500);\n}\n&lt;/script&gt;\n\n&lt;body onload=\"time1()\"&gt;\n&lt;span id=\"clk\"&gt;&lt;/span&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Please try with below code</p>\n\n<pre><code>var s = \"15 Feb 2015 11.30 a.m\";\n        var times = s.match(\"((([0-9])|([0-2][0-9])).([0-9][0-9])[\\t ]?((a.m|p.m)|(A.M|P.M)))\");            \n        var time = \"\";\n\n        if(times != null){                          \n            var hour = times[2];\n            if((times[6] == \"p.m\" || times[6] == \"P.M\")){\n                if(hour &lt; 12){\n                    hour = parseInt(hour) + parseInt(12);\n                }else if(hour == 12){\n                    hour = \"00\";\n                }\n            }\n            time = [hour, times[5], \"00\"].join(\":\");\n\n        }\n</code></pre>\n\n<p>Thanks</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;html&gt;\n&lt;script type=\"text/javascript\" src=\"http://www.datejs.com/build/date.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n   (function ()\n   {\n      var time = (new Date().toString(\"hh:mm:ss tt\"));\n      var date = (new Date().toString(\"d MMM yyyy\"));\n      alert(time);\n      alert(date);\n   })();\n&lt;/script&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can get am the current time or passed date time to AM PM format through following function.</p>\n\n<p><a href=\"http://allinworld99.blogspot.in/2014/07/get-am-pm-from-datetime-javascript.html\" rel=\"nofollow\"><strong>Live Output with Example</strong></a></p>\n\n<pre><code>  function getval() {\n        var currentTime = new Date()\n        var hours = currentTime.getHours()\n        var minutes = currentTime.getMinutes()\n\n        if (minutes &lt; 10)\n            minutes = \"0\" + minutes;\n\n        var suffix = \"AM\";\n        if (hours &gt;= 12) {\n            suffix = \"PM\";\n            hours = hours - 12;\n        }\n        if (hours == 0) {\n            hours = 12;\n        }\n        var current_time = hours + \":\" + minutes + \" \" + suffix;\n        show_message(\"Current Your System Time is : \" + current_time);\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What is the best way to convert the following JSON returned value from a 24-hour format to 12-hour format w/ AM &amp; PM? The date should stay the same - the time is the only thing that needs formatting.</p>\n\n<pre><code>February 04, 2011 19:00:00\n</code></pre>\n\n<p>P.S. Using jQuery if that makes it any easier! Would also prefer a simple function/code and not use Date.js.</p>\n",
            "last_activity_date": 1418172134,
            "question_id": 4898574,
            "score": 24,
            "tags": [
                "javascript",
                "datetime",
                "time",
                "formatting"
            ],
            "title": "Converting 24 hour time to 12 hour time w/ AM &amp; PM using Javascript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>First, I don't really know a thing of Cappucino or what you're trying to do. But I've seen this when working with Qt WebKit and JavaScript objects. It happened after javascript window object was cleared, e.g. if I didn't load my native JS objects to WebKit after new page was loaded. </p>\n\n<p>This basically means, you are trying to use internally deleted JavaScript object.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Both Chrome and Safari have built in debuggers. Make sure you use the index-debug.html file to launch your application to get easy to read code. </p>\n\n<p>In Safari, go to Preferences and activate the Developer menu. Then go to Develop > Start Debugging JavaScript. Use the pause icon in the lower left to set the debugger to pause on errors. The next time you hit the problem the debugger will pause at the offending line and show you how it got there through the stack trace.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Usually this error occurs with the XMLHttpRequest when you call the open method with async = true, or you leave the async parameter undefined so it defaults to asynchronous, and then you access the status or responseText properties. Those properties are only available after you do a synchronous call, or on the readyState becoming ready (once the asynchronous call responds). I suggest you first try with async = false, and then switch to it being true and use the onReadyStateChange.</p>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<p>In this case I believe the issue was stemming from trying to draw images to canvas using a pattern fill with an image that was not fully loaded. This question was related to <a href=\"https://github.com/280north/cappuccino/issues/811\" rel=\"nofollow\">Cappuccino issue 811</a> and my reasoning is based on <a href=\"https://github.com/aparajita\" rel=\"nofollow\">aparajita's</a> advice to make sure the image is loaded before attempting to use it as a pattern fill.</p>\n\n<p>Still, this error is frustratingly opaque considering the key piece of information (what object was called) is not obvious and the places it can crop up in are varied.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This can also happen when Javascript tries to <code>document.write()</code> into an XHTML page (<code>Content-Type: application/xhtml+xml</code>).</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Chrome canary offers stack traces for DOM Exceptions!</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>In my case I was setting the headers prior to opening the connection.  To prevent this error the headers need to be set after opening the connection:</p>\n\n<pre><code>var fd = new FormData();\nfd.append(\"fileToUpload\", file);\nvar xhr = new XMLHttpRequest();\nxhr.open(\"POST\", postUrl, true);\nxhr.setRequestHeader(\"cache-control\", \"no-cache\");\nxhr.send(fd);\n</code></pre>\n\n<p>I understand this answer is specific to my problem and not the generic INVALID_STATE_ERR: DOM Exception 11 message but figured I would post my solution here for the next person.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>This error is also thrown when attempting to modify the <code>value</code> property of a <code>&lt;input type=\"file\"</code></p>\n\n<p>This is a security check.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've seen this happen when trying to dynamically write an <code>input[type=\"file\"]</code> element with its <code>value</code> attribute set. </p>\n\n<p>When i removed the <code>value</code> attr from what i was injecting it all worked.</p>\n\n<p>In a sense, I see this error as meaning \"you tried to do something that specification does not allow\" based upon this article here -- <a href=\"http://designbyjeeba.blogspot.com/2011/04/dreaded-invalidstateerr-dom-exception.html\" rel=\"nofollow\">http://designbyjeeba.blogspot.com/2011/04/dreaded-invalidstateerr-dom-exception.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I recently tested a Cappuccino app I was working on with Chrome and Safari. I get the error:</p>\n\n<pre><code>INVALID_STATE_ERR: DOM Exception 11: An attempt was made to use an object that is not, or is no longer, usable.\n</code></pre>\n\n<p>The lack of information is frustrating. What object and where did I attempt to use it? Chrome tries to answer the second question but the line number it gives, 465, doesn't mean anything when the file it gives is just 94 lines long. Without more information I don't even know where to start looking.</p>\n",
            "last_activity_date": 1360955663,
            "question_id": 3488698,
            "score": 24,
            "tags": [
                "javascript",
                "dom",
                "webkit",
                "cappuccino"
            ],
            "title": "INVALID_STATE_ERR: DOM Exception 11 (WebKit)"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can use the <a href=\"http://npmjs.org/\">npm</a> modules <a href=\"https://www.npmjs.org/package/jsdom\">jsdom</a> and <a href=\"https://www.npmjs.org/package/htmlparser\">htmlparser</a> to create and parse a DOM in Node.JS.</p>\n\n<p>Other options include:</p>\n\n<ul>\n<li><a href=\"http://pypi.python.org/pypi/BeautifulSoup/3.2.0\">BeautifulSoup</a> for python</li>\n<li>you can convert you <a href=\"https://github.com/jfisteus/html2xhtml\">html to xhtml</a> and use XSLT</li>\n<li><a href=\"http://htmlagilitypack.codeplex.com/\">HTMLAgilityPack</a> for .NET</li>\n<li><a href=\"https://github.com/jamietre/CsQuery\">CsQuery</a> for .NET (my new favorite)</li>\n<li>The spidermonkey and rhino JS engines have native E4X support. This may be useful, only if you convert your html to xhtml.</li>\n</ul>\n\n<p>Out of all these options, I prefer using the Node.js option, because it uses the standard W3C DOM accessor methods and I can reuse code on both the client and server. I wish BeautifulSoup's methods were more similar to the W3C dom, and I think converting your HTML to XHTML to write XSLT is just plain sadistic.</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>In .NET, there's the <a href=\"http://htmlagilitypack.codeplex.com/\" rel=\"nofollow\">HTML Agility Pack</a>, which is an extremely solid HTML parsing library.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"https://github.com/fb55/htmlparser2\" rel=\"nofollow\">Htmlparser2</a> by FB55 seems to be a good alternative.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>jsdom is too strict to do any real screen scraping sort of things, but beautifulsoup doesn't choke on bad markup.</p>\n\n<p><a href=\"https://github.com/harryf/node-soupselect\" rel=\"nofollow\">node-soupselect</a> is a port of python's beautifulsoup into nodejs, and it works beautifully</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use <a href=\"https://github.com/MatthewMueller/cheerio\">Cheerio</a>. It isn't as strict as jsdom and is optimized for scraping. As a bonus, uses the jQuery selectors you already know.</p>\n\n<blockquote>\n  <p>\u2764 Familiar syntax: Cheerio implements a subset of core jQuery. Cheerio\n  removes all the DOM inconsistencies and browser cruft from the jQuery\n  library, revealing its truly gorgeous API.</p>\n  \n  <p>\u03df Blazingly fast: Cheerio works with a very simple, consistent DOM\n  model. As a result parsing, manipulating, and rendering are incredibly\n  efficient. Preliminary end-to-end benchmarks suggest that cheerio is\n  about 8x faster than JSDOM.</p>\n  \n  <p>\u2741 Insanely flexible: Cheerio wraps around @FB55's forgiving\n  htmlparser. Cheerio can parse nearly any HTML or XML document.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Use <strong>htmlparser2</strong>, its way faster and pretty straightforward. Consult this usage example:</p>\n\n<p><a href=\"https://www.npmjs.org/package/htmlparser2#usage\" rel=\"nofollow\">https://www.npmjs.org/package/htmlparser2#usage</a></p>\n\n<p>And the live demo here:</p>\n\n<p><a href=\"http://demos.forbeslindesay.co.uk/htmlparser2/\" rel=\"nofollow\">http://demos.forbeslindesay.co.uk/htmlparser2/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I need to parse (server side) big amounts of HTML pages.<br>\nWe all agree that regexp is not the way to go here.<br>\nIt seems to me that javascript is the native way of parsing a HTML page, but that assumption relies on the server side code having all the DOM ability javascript has inside a browser.</p>\n\n<p>Does Node.js have that ability built in?<br>\nIs there a better approach to this problem, parsing HTML on the server side?</p>\n",
            "last_activity_date": 1417176259,
            "question_id": 7372972,
            "score": 23,
            "tags": [
                "javascript",
                "node.js",
                "html-parsing",
                "server-side",
                "serverside-javascript"
            ],
            "title": "How do I parse a HTML page with Node.js"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>AFAIK, all history plugins do the same thing:</p>\n\n<pre><code>setInterval(function() {\n   if(theHashChanged) {\n      someFunction(oldHash,newHash);\n   }\n}, 500/*whatever*/);\n</code></pre>\n\n<p>That's pretty the core of it (minus browser hacks for adding history entries without clicking a link, etc.). It's always going to be buggy because it's a bit of a hack and there is no cross browser API for handling history changes.</p>\n\n<p>On top of all that, the user experience for this sort of thing is not very good. Users don't understand when they have to click the back button 4 times to get off the page.</p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>I recently looked at 3 different plugins - <a href=\"http://www.mikage.to/jquery/jquery_history.html\">jquery history plugin</a>, <a href=\"http://plugins.jquery.com/project/history\">history</a>, and <a href=\"http://benalman.com/projects/jquery-bbq-plugin/\">jQuery BBQ</a>.</p>\n\n<p>They were all quite hard to setup, I did get jQuery.history working but it still had problems with IE7. So I changed to BBQ and it worked fine across all our target browsers (IE6, IE7, IE8, Fx3).</p>\n\n<p>So I recommend the jQuery BBQ plugin.</p>\n\n<p>Edit: <a href=\"http://mattfrear.com/2010/03/20/enabling-browser-back-button-on-cascading-dropdowns-with-jquery-bbq-plugin/\">here's a blog post</a> I just wrote which demonstrates jQuery BBQ with cascading dropdowns.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>I've had good luck with <a href=\"http://code.google.com/p/reallysimplehistory/\" rel=\"nofollow\">reallysimplehistory</a> (nee dhtmlHistory). It's not jQuery specific, but it works in IE, firefox, and webkit, and doesn't require much setup.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Perhaps try this jQuery History plugin: <a href=\"http://www.balupton.com/sandbox/jquery-history/demo/\" rel=\"nofollow\">http://www.balupton.com/sandbox/jquery-history/demo/</a> It provides cross browser support, binding to hashes, overloading hashes, all the rest.</p>\n\n<p>There is also a Ajax extension for it, allowing it to easily upgrade your webpage into a proper Ajax application: <a href=\"http://www.balupton.com/sandbox/jquery-ajaxy/demo/\" rel=\"nofollow\">http://www.balupton.com/sandbox/jquery-ajaxy/demo/</a></p>\n\n<p>This is the solution chosen by such sites as <a href=\"http://wbhomes.com.au/\" rel=\"nofollow\">http://wbhomes.com.au/</a> and <a href=\"http://gatesonline.com.au/stage/public/\" rel=\"nofollow\">http://gatesonline.com.au/stage/public/</a></p>\n\n<p>Overall it is well documented, supported and feature rich. It's also won a bounty question here <a href=\"http://stackoverflow.com/questions/3205900/how-to-show-ajax-requests-in-url/3276206#3276206\">http://stackoverflow.com/questions/3205900/how-to-show-ajax-requests-in-url/3276206#3276206</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Have you tried jQuery Address? From Asual, the guys who made SWFAdress. <a href=\"http://www.asual.com/jquery/address/\" rel=\"nofollow\">Asual - jquery Address</a></p>\n\n<blockquote>\n  <p>The jQuery Address plugin provides powerful deep linking capabilities and allows the creation of unique virtual addresses that can point to a website section or an application state. </p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>History.js</strong> is well documented/maintained and supports all browsers.</p>\n\n<p><a href=\"https://github.com/browserstate/history.js\" rel=\"nofollow\">https://github.com/browserstate/history.js</a></p>\n\n<p>From the site:</p>\n\n<blockquote>\n  <p>History.js gracefully supports the HTML5 History/State APIs\n  (pushState, replaceState, onPopState) in all browsers. Including\n  continued support for data, titles, replaceState. Supports jQuery,\n  MooTools and Prototype. For HTML5 browsers this means that you can\n  modify the URL directly, without needing to use hashes anymore. For\n  HTML4 browsers it will revert back to using the old onhashchange\n  functionality.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been looking around JQuery libraries for the URL hash, but found none that were good. There is the \"history plugin\", but we all know it's buggy and isn't flexible.</p>\n\n<p>I am loading my pages inside a div. I'll need a way to do back/forward along with the url hashing.</p>\n\n<pre><code>mydomain.com/#home\nmydomain.com/#aboutus\nmydomain.com/#register\n</code></pre>\n\n<p>What's the best library that can handle all of this?</p>\n",
            "last_activity_date": 1397165740,
            "question_id": 2358928,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "fragment-identifier",
                "hashchange"
            ],
            "title": "What&#39;s the best library to do a URL hash/history in JQuery?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>function _arrayBufferToBase64( buffer ) {\n    var binary = '';\n    var bytes = new Uint8Array( buffer );\n    var len = bytes.byteLength;\n    for (var i = 0; i &lt; len; i++) {\n        binary += String.fromCharCode( bytes[ i ] );\n    }\n    return window.btoa( binary );\n}\n</code></pre>\n\n<p>but, non-native implementations are faster e.g. <a href=\"https://gist.github.com/958841\">https://gist.github.com/958841</a>\nsee <a href=\"http://jsperf.com/encoding-xhr-image-data/6\">http://jsperf.com/encoding-xhr-image-data/6</a></p>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p>This works fine for me:</p>\n\n<pre><code>var base64String = btoa(String.fromCharCode.apply(null, new Uint8Array(arrayBuffer)));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I need an efficient (read native) way to convert an ArrayBuffer to a base64 string which needs to be used on a multipart post. </p>\n",
            "last_activity_date": 1425387691,
            "question_id": 9267899,
            "score": 21,
            "tags": [
                "javascript",
                "encoding",
                "base64",
                "arraybuffer"
            ],
            "title": "ArrayBuffer to base64 encoded string"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Question is good, but the answer is : it depends on that. </p>\n\n<p>If the other webpage doesn't contain any form or text, for example you can use the CURL method  to pickup  the exact content and after then showing on your page. YOu can do it without using an iframe. </p>\n\n<p>But, if the page what you want to embed contains for example a form it will not work correctly , because the form handling is on that site.  </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could load the external page with jquery:</p>\n\n<pre>\n&lt;script&gt;$(\"#testLoad\").load(\"http://www.somesite.com/somepage.html\");&lt;/script&gt;\n&lt;div id=\"testLoad\">&lt;/div&gt;\n//would this help\n</pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Or you could use the object tag:</p>\n\n<p><a href=\"http://jsfiddle.net/7MaXx/\">http://jsfiddle.net/7MaXx/</a></p>\n\n<pre><code>&lt;!--[if IE]&gt;\n&lt;object classid=\"clsid:25336920-03F9-11CF-8FD0-00AA00686F13\" data=\"http://www.google.be\"&gt;\n&lt;p&gt;backup content&lt;/p&gt;\n&lt;/object&gt;\n&lt;![endif]--&gt;\n\n&lt;!--[if !IE]&gt; &lt;--&gt;\n&lt;object type=\"text/html\" data=\"http://www.flickr.com\" style=\"width:100%; height:100%\"&gt;\n&lt;p&gt;backup content&lt;/p&gt;\n&lt;/object&gt;\n&lt;!--&gt; &lt;![endif]--&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>An interesting use of this would be if you used it in Email marketing! You could setup a landing page with the email on it and reference that landing page in the email HTML. </p>\n\n<p>Why? Because you can then edit the content in real time if you have an error. So if the email is refreshed or opened it will be corrected. </p>\n\n<p><strong>Word of caution</strong>. This may not display properly in all email clients. In fact I know it wont. So alternative HTML based on browser, email client and device might be needed. </p>\n\n<p>Or just dont make mistakes :) </p>\n\n<p>I found that to be an interesting solution to being able to fix problems on email that have already been sent out! </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>What about something  like this?</p>\n\n<pre><code>&lt;?php\n$URL = \"http://example.com\";\n$base = '&lt;base href=\"'.$URL.'\"&gt;';\n$host = preg_replace('/^[^\\/]+\\/\\//', '', $URL);\n$tarray = explode('/', $host);\n$host = array_shift($tarray);\n$URI = '/' . implode('/', $tarray);\n$content = '';\n$fp = @fsockopen($host, 80, $errno, $errstr, 30);\nif(!$fp) { echo \"Unable to open socked: $errstr ($errno)\\n\"; exit; } \nfwrite($fp,\"GET $URI HTTP/1.0\\r\\n\");\nfwrite($fp,\"Host: $host\\r\\n\");\nif( isset($_SERVER[\"HTTP_USER_AGENT\"]) ) { fwrite($fp,'User-Agent: '.$_SERVER\n\n[\"HTTP_USER_AGENT\"].\"\\r\\n\"); }\nfwrite($fp,\"Connection: Close\\r\\n\");\nfwrite($fp,\"\\r\\n\");\nwhile (!feof($fp)) { $content .= fgets($fp, 128); }\nfclose($fp);\nif( strpos($content,\"\\r\\n\") &gt; 0 ) { $eolchar = \"\\r\\n\"; }\nelse { $eolchar = \"\\n\"; }\n$eolpos = strpos($content,\"$eolchar$eolchar\");\n$content = substr($content,($eolpos + strlen(\"$eolchar$eolchar\")));\nif( preg_match('/&lt;head\\s*&gt;/i',$content) ) { echo( preg_replace('/&lt;head\\s*&gt;/i','&lt;head&gt;'.\n\n$base,$content,1) ); }\nelse { echo( preg_replace('/&lt;([a-z])([^&gt;]+)&gt;/i',\"&lt;\\\\1\\\\2&gt;\".$base,$content,1) ); }\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there any way to embed an external web page without using an iframe? I have access to both sites, I just want the page that the content is embedded on to resize based on the content that is embedded (it will change over time, and be on multiple sites). </p>\n\n<p>Thanks!</p>\n\n<p>EDIT: I don't think any kind of AJAX would work because it's cross-site, and JavaScript doesn't let you load off-site content (as far as I'm aware). </p>\n",
            "last_activity_date": 1422907057,
            "question_id": 8433319,
            "score": 21,
            "tags": [
                "javascript",
                "asp.net",
                "html",
                "iframe",
                "embed"
            ],
            "title": "Embed an External Page Without an Iframe?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can use <a href=\"http://de3.php.net/manual/en/intro.tidy.php\">Tidy</a>:</p>\n\n<blockquote>\n  <p>Tidy is a binding for the Tidy HTML clean and repair utility which allows you to not only clean and otherwise manipulate HTML documents, but also traverse the document tree. </p>\n</blockquote>\n\n<p>or <a href=\"http://htmlpurifier.org/\">HTMLPurifier</a></p>\n\n<blockquote>\n  <p>HTML Purifier is a standards-compliant \n    HTML filter library written in \n    PHP. HTML Purifier will not only remove all malicious \n    code (better known as XSS) with a thoroughly audited, \n    secure yet permissive whitelist,\n    it will also make sure your documents are \n    standards compliant, something only achievable with a \n    comprehensive knowledge of W3C's specifications.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>i have solution for php</p>\n\n<pre><code>&lt;?php\n    // close opened html tags\n    function closetags ( $html )\n        {\n        #put all opened tags into an array\n        preg_match_all ( \"#&lt;([a-z]+)( .*)?(?!/)&gt;#iU\", $html, $result );\n        $openedtags = $result[1];\n        #put all closed tags into an array\n        preg_match_all ( \"#&lt;/([a-z]+)&gt;#iU\", $html, $result );\n        $closedtags = $result[1];\n        $len_opened = count ( $openedtags );\n        # all tags are closed\n        if( count ( $closedtags ) == $len_opened )\n        {\n        return $html;\n        }\n        $openedtags = array_reverse ( $openedtags );\n        # close tags\n        for( $i = 0; $i &lt; $len_opened; $i++ )\n        {\n            if ( !in_array ( $openedtags[$i], $closedtags ) )\n            {\n            $html .= \"&lt;/\" . $openedtags[$i] . \"&gt;\";\n            }\n            else\n            {\n            unset ( $closedtags[array_search ( $openedtags[$i], $closedtags)] );\n            }\n        }\n        return $html;\n    }\n    // close opened html tags\n</code></pre>\n\n<p>?></p>\n\n<p>you can use this function like</p>\n\n<pre><code>   &lt;?php echo closetags(\"your content &lt;p&gt;test test\"); ?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>In addition to server-side tools like Tidy, you can also use the user's browser to do some of the cleanup for you. One of the really great things about <code>innerHTML</code> is that it will apply the same on-the-fly repair to dynamic content as it does to HTML pages. This code works pretty well (with two caveats) and nothing actually gets written to the page:</p>\n\n<pre><code>var divTemp = document.createElement('div');\ndivTemp.innerHTML = '&lt;p id=\"myPara\"&gt;these &lt;i&gt;tags aren\\'t &lt;strong&gt; closed';\nconsole.log(divTemp.innerHTML); \n</code></pre>\n\n<p>The caveats:</p>\n\n<ol>\n<li><p>The different browsers will return different strings. This isn't so bad, except in the the case of IE, which will return capitalized tags and will strip the quotes from tag attributes, which will not pass validation. The solution here is to do some simple clean-up on the server side. But at least the document will be properly structured XML.</p></li>\n<li><p>I suspect that you may have to put in a delay before reading the innerHTML -- give the browser a chance to digest the string -- or you risk getting back exactly what was put in. I just tried on IE8 and it looks like the string gets parsed immediately, but I'm not so sure on IE6. It would probably be best to read the innerHTML after a delay (or throw it into a setTimeout() to force it to the end of the queue). </p></li>\n</ol>\n\n<p>I would recommend you take @Gordon's advice and use Tidy if you have access to it (it takes less work to implement) and failing that, use innerHTML and write your own tidy function in PHP.</p>\n\n<p>And though this isn't part of your question, as this is for a CMS, consider also using the <a href=\"http://developer.yahoo.com/yui/editor/\" rel=\"nofollow\">YUI 2 Rich Text Editor</a> for stuff like this. It's fairly easy to implement, somewhat easy to customize, the interface is very familiar to most users, and it spits out perfectly valid code. There are several other off-the-shelf rich text editors out there, but YUI has the best license and is the most powerful I've seen.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Erik Arvidsson wrote a nice HTML SAX parser in 2004. <a href=\"http://erik.eae.net/archives/2004/11/20/12.18.31/\" rel=\"nofollow\">http://erik.eae.net/archives/2004/11/20/12.18.31/</a></p>\n\n<p>It keeps track of the the open tags, so with a minimalistic SAX handler it's possible to insert closing tags at the correct position:</p>\n\n<pre><code>function tidyHTML(html) {\n    var output = '';\n    HTMLParser(html, {\n        comment: function(text) {\n            // filter html comments\n        },\n        chars: function(text) {\n            output += text;\n        },\n        start: function(tagName, attrs, unary) {\n            output += '&lt;' + tagName;\n            for (var i = 0; i &lt; attrs.length; i++) {\n                output += ' ' + attrs[i].name + '=';\n                if (attrs[i].value.indexOf('\"') === -1) {\n                    output += '\"' + attrs[i].value + '\"';\n                } else if (attrs[i].value.indexOf('\\'') === -1) {\n                    output += '\\'' + attrs[i].value + '\\'';\n                } else { // value contains \" and ' so it cannot contain spaces\n                    output += attrs[i].value;\n                }\n            }\n            output += '&gt;';\n        },\n        end: function(tagName) {\n            output += '&lt;/' + tagName + '&gt;';\n        }\n    });\n    return output;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Found a great answer for this one:</p>\n\n<p>Use PHP 5 and use the loadHTML() method of the DOMDocument object. This auto parses badly formed HTML and a subsequent call to saveXML() will output the valid HTML. The DOM functions can be found here:</p>\n\n<p><a href=\"http://www.php.net/dom\">http://www.php.net/dom</a> </p>\n\n<p>The usage of this:</p>\n\n<pre><code>$doc = new DOMDocument();\n$doc-&gt;loadHTML(\"$yourText\");\n$yourText = $doc-&gt;saveHTML();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>A better PHP function to delete not open/not closed tags from webmaster-glossar.de (me)</p>\n\n<pre><code>function closetag($html){\n    $html_new = $html;\n    preg_match_all ( \"#&lt;([a-z]+)( .*)?(?!/)&gt;#iU\", $html, $result1);\n    preg_match_all ( \"#&lt;/([a-z]+)&gt;#iU\", $html, $result2);\n    $results_start = $result1[1];\n    $results_end = $result2[1];\n    foreach($results_start AS $startag){\n        if(!in_array($startag, $results_end)){\n            $html_new = str_replace('&lt;'.$startag.'&gt;', '', $html_new);\n        }\n    }\n    foreach($results_end AS $endtag){\n        if(!in_array($endtag, $results_start)){\n            $html_new = str_replace('&lt;/'.$endtag.'&gt;', '', $html_new);\n        }\n    }\n    return $html_new;\n}\n</code></pre>\n\n<p>use this function like:</p>\n\n<pre><code>closetag('i &lt;b&gt;love&lt;/b&gt; my &lt;strike&gt;cat'); \n#output: i &lt;b&gt;love&lt;/b&gt; my cat\n\nclosetag('i &lt;b&gt;love&lt;/b&gt; my cat&lt;/strike&gt;'); \n#output: i &lt;b&gt;love&lt;/b&gt; my cat\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Whenever we are fetching some user inputed content with some editing from the database or similar sources, we might retrieve the portion which only contains the opening tag but no closing.</p>\n\n<p>This can hamper the website's current layout. </p>\n\n<p>Is there a clientside or serverside way of fixing this?</p>\n",
            "last_activity_date": 1405348791,
            "question_id": 3059398,
            "score": 21,
            "tags": [
                "php",
                "javascript",
                "content-management-system"
            ],
            "title": "How to close unclosed HTML Tags?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Here's some code that should help you:</p>\n\n<pre><code>var numElements = 4,\n    angle = 0\n    step = (2*Math.PI) / numElements;\nfor(var i = 0; i &lt; numElements.length; i++) {\n    var x = container_width/2 + radius * Math.cos(angle);\n    var y = container_height/2 + radius * Math.sin(angle);\n    angle += step;\n}\n</code></pre>\n\n<p>It is not complete but should give you a good start.</p>\n\n<hr>\n\n<p>Update: Here's something that actually works:</p>\n\n<pre><code>var radius = 200; // radius of the circle\nvar fields = $('.field'),\n    container = $('#container'),\n    width = container.width(),\n    height = container.height(),\n    angle = 0,\n    step = (2*Math.PI) / fields.length;\nfields.each(function() {\n    var x = Math.round(width/2 + radius * Math.cos(angle) - $(this).width()/2),\n        y = Math.round(height/2 + radius * Math.sin(angle) - $(this).height()/2);\n    $(this).css({\n        left: x + 'px',\n        top: y + 'px'\n    });\n    angle += step;\n});\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/ThiefMaster/LPh33/\">http://jsfiddle.net/ThiefMaster/LPh33/</a><br>\nHere's an <a href=\"http://jsfiddle.net/ThiefMaster/LPh33/4/\">improved version</a> where you can change the element count.</p>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>For an element around a centre at (<em>x</em>, <em>y</em>), distance <em>r</em>, the element's centre should be positioned at:</p>\n\n<pre><code>(x + r cos(2k\u03c0/n), y + r sin(2k\u03c0/n))\n</code></pre>\n\n<p>where <em>n</em> is the number of elements, and <em>k</em> is the \"number\" of the element you're currently positioning (between 1 and <em>n</em> inclusive).</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I've combined ThiefMaster's fiddle with the jQuery pointAt plugin:</p>\n\n<p>Demo: <a href=\"http://jsfiddle.net/BananaAcid/nytN6/\" rel=\"nofollow\">http://jsfiddle.net/BananaAcid/nytN6/</a></p>\n\n<pre><code>the code is somewhat like above.\nmight be interesting to some of you.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm looking for a function to arrange some elements around a circle.<br>\nresult should be something like :  </p>\n\n<p><img src=\"http://i.stack.imgur.com/gEpQW.jpg\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1384171915,
            "question_id": 10152390,
            "score": 20,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Dynamically arrange some elements around a circle"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Take a look at this: AngularJS+JQuery(datatable)</p>\n\n<p>FULL code: <a href=\"http://jsfiddle.net/zdam/7kLFU/\">http://jsfiddle.net/zdam/7kLFU/</a></p>\n\n<p>JQuery Datatables's Documentation: <a href=\"http://www.datatables.net/\">http://www.datatables.net/</a></p>\n\n<pre><code>var dialogApp = angular.module('tableExample', []);\n\n    dialogApp.directive('myTable', function() {\n        return function(scope, element, attrs) {\n\n            // apply DataTable options, use defaults if none specified by user\n            var options = {};\n            if (attrs.myTable.length &gt; 0) {\n                options = scope.$eval(attrs.myTable);\n            } else {\n                options = {\n                    \"bStateSave\": true,\n                    \"iCookieDuration\": 2419200, /* 1 month */\n                    \"bJQueryUI\": true,\n                    \"bPaginate\": false,\n                    \"bLengthChange\": false,\n                    \"bFilter\": false,\n                    \"bInfo\": false,\n                    \"bDestroy\": true\n                };\n            }\n\n            // Tell the dataTables plugin what columns to use\n            // We can either derive them from the dom, or use setup from the controller           \n            var explicitColumns = [];\n            element.find('th').each(function(index, elem) {\n                explicitColumns.push($(elem).text());\n            });\n            if (explicitColumns.length &gt; 0) {\n                options[\"aoColumns\"] = explicitColumns;\n            } else if (attrs.aoColumns) {\n                options[\"aoColumns\"] = scope.$eval(attrs.aoColumns);\n            }\n\n            // aoColumnDefs is dataTables way of providing fine control over column config\n            if (attrs.aoColumnDefs) {\n                options[\"aoColumnDefs\"] = scope.$eval(attrs.aoColumnDefs);\n            }\n\n            if (attrs.fnRowCallback) {\n                options[\"fnRowCallback\"] = scope.$eval(attrs.fnRowCallback);\n            }\n\n            // apply the plugin\n            var dataTable = element.dataTable(options);\n\n\n\n            // watch for any changes to our data, rebuild the DataTable\n            scope.$watch(attrs.aaData, function(value) {\n                var val = value || null;\n                if (val) {\n                    dataTable.fnClearTable();\n                    dataTable.fnAddData(scope.$eval(attrs.aaData));\n                }\n            });\n        };\n    });\n\nfunction Ctrl($scope) {\n\n    $scope.message = '';            \n\n        $scope.myCallback = function(nRow, aData, iDisplayIndex, iDisplayIndexFull) {            \n            $('td:eq(2)', nRow).bind('click', function() {\n                $scope.$apply(function() {\n                    $scope.someClickHandler(aData);\n                });\n            });\n            return nRow;\n        };\n\n        $scope.someClickHandler = function(info) {\n            $scope.message = 'clicked: '+ info.price;\n        };\n\n        $scope.columnDefs = [ \n            { \"mDataProp\": \"category\", \"aTargets\":[0]},\n            { \"mDataProp\": \"name\", \"aTargets\":[1] },\n            { \"mDataProp\": \"price\", \"aTargets\":[2] }\n        ]; \n\n        $scope.overrideOptions = {\n            \"bStateSave\": true,\n            \"iCookieDuration\": 2419200, /* 1 month */\n            \"bJQueryUI\": true,\n            \"bPaginate\": true,\n            \"bLengthChange\": false,\n            \"bFilter\": true,\n            \"bInfo\": true,\n            \"bDestroy\": true\n        };\n\n\n        $scope.sampleProductCategories = [\n\n              {\n                \"name\": \"1948 Porsche 356-A Roadster\",\n                \"price\": 53.9,\n                  \"category\": \"Classic Cars\",\n                  \"action\":\"x\"\n              },\n              {\n                \"name\": \"1948 Porsche Type 356 Roadster\",\n                \"price\": 62.16,\n            \"category\": \"Classic Cars\",\n                  \"action\":\"x\"\n              },\n              {\n                \"name\": \"1949 Jaguar XK 120\",\n                \"price\": 47.25,\n            \"category\": \"Classic Cars\",\n                  \"action\":\"x\"\n              }\n              ,\n              {\n                \"name\": \"1936 Harley Davidson El Knucklehead\",\n                \"price\": 24.23,\n            \"category\": \"Motorcycles\",\n                  \"action\":\"x\"\n              },\n              {\n                \"name\": \"1957 Vespa GS150\",\n                \"price\": 32.95,\n            \"category\": \"Motorcycles\",\n                  \"action\":\"x\"\n              },\n              {\n                \"name\": \"1960 BSA Gold Star DBD34\",\n                \"price\": 37.32,\n            \"category\": \"Motorcycles\",\n                  \"action\":\"x\"\n              }\n           ,\n              {\n                \"name\": \"1900s Vintage Bi-Plane\",\n                \"price\": 34.25,\n            \"category\": \"Planes\",\n                  \"action\":\"x\"\n              },\n              {\n                \"name\": \"1900s Vintage Tri-Plane\",\n                \"price\": 36.23,\n            \"category\": \"Planes\",\n                  \"action\":\"x\"\n              },\n              {\n                \"name\": \"1928 British Royal Navy Airplane\",\n                \"price\": 66.74,\n            \"category\": \"Planes\",\n                  \"action\":\"x\"\n              },\n              {\n                \"name\": \"1980s Black Hawk Helicopter\",\n                \"price\": 77.27,\n            \"category\": \"Planes\",\n                  \"action\":\"x\"\n              },\n              {\n                \"name\": \"ATA: B757-300\",\n                \"price\": 59.33,\n            \"category\": \"Planes\",\n                  \"action\":\"x\"\n              }\n\n        ];            \n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>After many hours of experimenting with using jQueryDataTables with Angular, I found what I needed was available with a native Angular directive called ng-table. It provides sorting, pagination, and ajax reloads (sort of lazy loading capable with a few tweaks).</p>\n\n<p><a href=\"http://bazalt-cms.com/ng-table/\">http://bazalt-cms.com/ng-table/</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Take a look at:\n<a href=\"http://l-lin.github.io/angular-datatables/\" rel=\"nofollow\">http://l-lin.github.io/angular-datatables/</a>\nIt's ready for usage.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm trying to use the <a href=\"http://www.datatables.net\">jquery datatable plugin</a> in my angularjs project. but my question is does it support <strong>lazy loading</strong> of value for angularjs? i want beacuse i have many row. how to use  <a href=\"http://www.datatables.net/release-datatables/examples/server_side/pipeline.html\">datatable pipeline</a> with angularjs.</p>\n\n<p>There is a solution for pagination in <a href=\"http://stackoverflow.com/questions/11109754/pagination-using-jquery-datatable\">here</a>. How to use the solution with angularjs?</p>\n",
            "last_activity_date": 1409315736,
            "question_id": 14242455,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "angularjs",
                "jquery-datatables"
            ],
            "title": "Using Jquery Datatable with AngularJs"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Try changing the content-type in PHP; that should help.  (For example, I assume, it doesn't modify images)</p>\n\n<p>Alternatively, you could remove the code in Javascript using <code>indexOf</code> and <code>substring</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Check the terms of service agreement for your host. They may require their analytics code to run unadulterated as part of your TOS. </p>\n\n<p>If they require this code to run, then there are 2 possible solutions:</p>\n\n<ul>\n<li>Get a new host (see <a href=\"http://www.webhostingtalk.com\" rel=\"nofollow\">http://www.webhostingtalk.com</a> for hosting reviews and deals) </li>\n<li>Figure out what in your code is being affected and find a work around there. </li>\n</ul>\n\n<p>If they do not require the analytics code block as a condition of service then you may be able to block their snippet from running by altering the tag's event handler via jquery that they use to fire their code. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>They have a link in their cPanel where you can disable the analytics code.</p>\n\n<p><a href=\"http://members.000webhost.com/analytics.php\">http://members.000webhost.com/analytics.php</a></p>\n\n<p><strong>EDIT</strong></p>\n\n<p>Beware - by doing this you violate their policy and they will eventually drop you from their service and you will lose all your data.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>Yes fixed it have a look  <a href=\"http://www.chyd.co.cc/blogging/feedburner-setting-on-000webhost.html\" rel=\"nofollow\">http://www.chyd.co.cc/blogging/feedburner-setting-on-000webhost.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are using the <code>$.ajax();</code> function, there is a <a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\"><code>dataFilter</code></a> parameter that lets you modify the raw contents of the request before processing it. In here, you could either substring or replace out the offending text, or you could add a <code>&lt;!--</code> to the end of your XML file, then stick a <code>--&gt;</code> at the end of the response in the <code>dataFilter</code> code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The analytics code also creates 3 html errors when checked with the w3c validator, so this also lowers your website ranking with google, as google say their ranking also requires that your pages are well formed! try using the validator on this page <a href=\"http://www.pagerank.webuda.com/\" rel=\"nofollow\">HERE</a>  and you will see the 3 errors.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had EXACTLY the same problem with these guys. I was so confounded as  Chrome just said there was a problem, but thankfully I tried Firefox and it actually blurted out the offending code. I talked to customer support about it, and they said they don't add content to customer pages. Seriously?! So the solution is, as suggested by others, move on and get someone better.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In case anyone run into this problem in the future, to stop the analytic code from being included, all you have to do is use the exit() command at the end of your script. The code is in a PHP auto-append file. It doesn't get executed if you exit explicitly instead of letting the script reach the end of the file. The setup at 000webhost.com parses HTML through PHP as well. If you want your regular HTML files to pass validation, add at the very end the following:</p>\n\n<pre><code>&lt;?php exit; ?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>According to the FAQ, you can go to <a href=\"http://members.000webhost.com/analytics.php\" rel=\"nofollow\">http://members.000webhost.com/analytics.php</a> to disable the analytics:</p>\n\n<blockquote>\n  <p><a href=\"http://members.000webhost.com/analytics.php\" rel=\"nofollow\">How to disable analytic code from my site? (Note: in some case you\n  might need to add this \"php_value auto_append_file none\" to your\n  .htaccess)</a></p>\n</blockquote>\n\n<ul>\n<li><p>FAQ - Frequent Ask Questions Guide!:</p>\n\n<p><a href=\"http://www.000webhost.com/forum/faq/7894-faq-frequent-ask-questions-guide.html\" rel=\"nofollow\">http://www.000webhost.com/forum/faq/7894-faq-frequent-ask-questions-guide.html</a></p></li>\n</ul>\n\n<hr>\n\n<p>Alternatively, you could edit your <code>.htaccess</code> file by adding this line:</p>\n\n<pre><code>php_value auto_append_file none\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Adding to Catfish's answer,</p>\n\n<blockquote>\n  <p>They have a link in their cPanel where you can disable the analytics code.</p>\n  \n  <p><a href=\"http://members.000webhost.com/analytics.php\" rel=\"nofollow\">http://members.000webhost.com/analytics.php</a></p>\n  \n  <p><strong>EDIT</strong></p>\n  \n  <p>Beware - by doing this you violate their policy and they will eventually drop you from their service and you will lose all your data.</p>\n</blockquote>\n\n<p>As asked by asalamon74 in the comments,</p>\n\n<blockquote>\n  <p>When I disable the analytics code with this method my domain get canceled due to inactivity. Is there a way to avoid it</p>\n</blockquote>\n\n<p>Yes, there is a simple way to avoid it. Go ahead and enable your analytics code. Visit <a href=\"http://members.000webhost.com/analytics.php\" rel=\"nofollow\">http://members.000webhost.com/analytics.php</a> and enable it again.</p>\n\n<p>Then, create a <code>.htaccess</code> in your <code>public_html</code> folder and add the following code to it:</p>\n\n<pre><code>&lt;FilesMatch \"\\.(php)$\"&gt;\nphp_value auto_append_file none\n&lt;/FilesMatch&gt;\n</code></pre>\n\n<p>This will prevent all <code>.php</code> files from been appended with the analytics code. Just replace <code>php</code> with any file extension where you want the analytics code removed.</p>\n\n<p>That's all. This way your domain won't get cancelled. Hope it helps.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I use the free webhost 000webhost.  The service is okay but it inserts some javascript counter into every file and request.\nThe script looks like this.</p>\n\n<pre><code>&lt;!-- www.000webhost.com Analytics Code --&gt;\n&lt;script type=\"text/javascript\" src=\"http://analytics.hosting24.com/count.php\"&gt;&lt;/script&gt;\n&lt;noscript&gt;&lt;a href=\"http://www.hosting24.com/\"&gt;&lt;img src=\"http://analytics.hosting24.com/count.php\" alt=\"web hosting\" /&gt;&lt;/a&gt;&lt;/noscript&gt;\n&lt;!-- End Of Analytics Code --&gt;\n</code></pre>\n\n<p>If i do a jquery post it breaks my code and I get no response.</p>\n\n<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;response&gt;\n &lt;status&gt;1&lt;/status&gt;\n &lt;time&gt;1266267386&lt;/time&gt;\n &lt;message&gt;\n  &lt;author&gt;test&lt;/author&gt;\n  &lt;text&gt;hallo&lt;/text&gt;\n &lt;/message&gt;\n &lt;message&gt;\n  &lt;author&gt;test&lt;/author&gt;\n  &lt;text&gt;hallo&lt;/text&gt;\n &lt;/message&gt;\n &lt;message&gt;\n  &lt;author&gt;test&lt;/author&gt;\n  &lt;text&gt;hallo&lt;/text&gt;\n &lt;/message&gt;\n &lt;message&gt;\n  &lt;author&gt;test&lt;/author&gt;\n  &lt;text&gt;hallo&lt;/text&gt;\n &lt;/message&gt;\n &lt;message&gt;\n  &lt;author&gt;admin&lt;/author&gt;\n  &lt;text&gt;hallo&lt;/text&gt;\n &lt;/message&gt;\n&lt;/response&gt;\n&lt;!-- www.000webhost.com Analytics Code --&gt;\n&lt;script type=\"text/javascript\" src=\"http://analytics.hosting24.com/count.php\"&gt;&lt;/script&gt;\n&lt;noscript&gt;&lt;a href=\"http://www.hosting24.com/\"&gt;&lt;img src=\"http://analytics.hosting24.com/count.php\" alt=\"web hosting\" /&gt;&lt;/a&gt;&lt;/noscript&gt;\n&lt;!-- End Of Analytics Code --&gt;\n</code></pre>\n\n<p>How can I fix that? How can I remove the hosting javascript code?</p>\n",
            "last_activity_date": 1424550715,
            "question_id": 2268868,
            "score": 19,
            "tags": [
                "javascript",
                "php",
                "jquery"
            ],
            "title": "Webhoster inserts a javascript which brokes my code how to remove it?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I think the easiest way to do this is to keep a secondary <code>Deferred</code> object around for each AJAX request, and ensure that <em>that</em> one is always resolved:</p>\n\n<pre><code>var d1 = $.Deferred();\nvar d2 = $.Deferred();\n\nvar j1 = $.getJSON(...).complete(d1.resolve);\nvar j2 = $.getJSON(...).complete(d2.resolve);\n\n$.when(j1, j2).done( only fires if j1 AND j2 are resolved );\n\n$.when(d1, d2).done(function() {\n     // will fire when j1 AND j2 are both resolved OR rejected\n     // check j1.isResolved() and j2.isResolved() to find which failed\n});\n</code></pre>\n\n<p>This is making use of the additional AJAX <code>.complete()</code> method which jQuery adds to its promises for AJAX methods, which is called for both resolved and rejected promises.</p>\n\n<p>NB: <code>d1.resolve</code> works as a callback in its own right, it doesn't need to be wrapped in a <code>function() { ... }</code> block.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>@Alnitak answer is clever and helped me erase a hack that I'd created in which I was somewhat artificially resolving a promise - regardless of underlying outcome - in order that I may use 'when' to batch up multiple requests and use 'done' to proceed regardless of their success/failure.</p>\n\n<p>I'm \"answering\" Alnitak's answer in the hope of providing another use for his suggestion that supports an arbitrary number of underlying promises.</p>\n\n<pre><code>var asyncFunc, entity, entities, $deferred, $deferreds;\n// ...\nforeach (entity in entities) {\n    $deferred = $.Deferred();\n    $deferreds.push($deferred);\n    asyncFunc(entity).done(...).fail(...).always($deferred.resolve);\n}\n// ...\n$.when.apply($, $deferreds).done(...)\n</code></pre>\n\n<p>This is pseudo-JavaScript but, it should convey the approach. For some arbitrarily sized set of entities, create a deferred ($deferred) for each entity and push it onto an array ($deferreds), make the async call, add done/fail as desired but always include an 'always' that resolves this entity's $deferred. <b>NB</b> the 'always' receives the deferred's resolve function not its invocation.</p>\n\n<p>The 'when' converts the $deferreds array into the argument list for 'when' and, since this set of deferreds is guaranteed to resolve (thanks to the always), it's now possible to define a 'done' that will be invoked once all the async calls complete regardless of whether these succeed/fail.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Here's a jQuery plugin I've made by modifying the actual core code for <code>$.when()</code> to use your semantics. For want of a better name it's called <code>$.myWhen()</code>:</p>\n\n<pre><code>(function($) {\n  $.myWhen = function( subordinate /* , ..., subordinateN */ ) {\n    var i = 0,\n      responseValues = Array.prototype.slice.call( arguments ),\n      length = responseValues.length,\n\n      // the count of uncompleted subordinates\n      remaining = length !== 1 || ( subordinate &amp;&amp; jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n      // the master Deferred. If responseValues consist of only a single Deferred, just use that.\n      deferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n      // Update function for all resolve, reject and progress values\n      updateFunc = function( i, contexts, values ) {\n        return function( value ) {\n          contexts[ i ] = this;\n          values[ i ] = arguments.length &gt; 1 ? Array.prototype.slice.call( arguments ) : value;\n          if( values === progressValues ) {\n            deferred.notifyWith( contexts, values );\n          } else if ( !( --remaining ) ) {\n            deferred.resolveWith( contexts, values );\n          }\n        };\n      },\n\n      progressValues, progressContexts, responseContexts;\n\n    // add listeners to Deferred subordinates; treat others as resolved\n    if ( length &gt; 1 ) {\n      progressValues = new Array( length );\n      progressContexts = new Array( length );\n      responseContexts = new Array( length );\n      for ( ; i &lt; length; i++ ) {\n        if ( responseValues[ i ] &amp;&amp; jQuery.isFunction( responseValues[ i ].promise ) ) {\n          responseValues[ i ].promise()\n            .always( updateFunc( i, responseContexts, responseValues ) )\n            .progress( updateFunc( i, progressContexts, progressValues ) );\n        } else {\n          --remaining;\n        }\n      }\n    }\n\n    // if we're not waiting on anything, resolve the master\n    if ( !remaining ) {\n      deferred.resolveWith( responseContexts, responseValues );\n    }\n\n    return deferred.promise();\n  };\n})(jQuery);\n</code></pre>\n\n<p>Just put this code right after where you've loaded jQuery and the <code>$.myWhen()</code> function will be available alongside <code>$.when()</code>. Everything else is 100% exactly the same except for the semantics.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've recently made a plugin that may help. I call it <code>$.whenAll</code>. </p>\n\n<blockquote>\n  <p>This extension treats all successes and failures as progress events.\n  After all the promises have completed, the global promise is resolved\n  if there were no errors. Otherwise the global promise is rejected.</p>\n</blockquote>\n\n<p>$.whenAll - <a href=\"https://gist.github.com/4341799\" rel=\"nofollow\">https://gist.github.com/4341799</a> (<a href=\"https://dl.dropbox.com/u/2400/tests/jquery.whenall.htm\" rel=\"nofollow\">tests</a>)</p>\n\n<p>Sample usage:</p>\n\n<pre><code>$.whenAll($.getJSON('foo'), $.getJSON('bar'))\n  .then(\n    doneCallback\n    ,failcallback\n    // progress callback\n    // the only problem is $.ajax.done/fail states call their callbacks \n    // with params in different locations (except for state)\n    ,function(data, state, jqXhr) {\n      if (state == 'success') {\n        // do happy stuff\n      }\n      else { // error (fail)\n        // `data` is actually the jqXhr object for failed requests\n        // `jqXhr` is the text of the error \"Not Found\" in this example\n      }\n    }\n  )\n;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>My implementation:</p>\n\n<p><strong>Plugin Code:</strong></p>\n\n<pre><code>jQuery.whenAll = function (deferreds) {\n        var lastResolved = 0;\n\n        var wrappedDeferreds = [];\n\n        for (var i = 0; i &lt; deferreds.length; i++) {\n            wrappedDeferreds.push(jQuery.Deferred());\n\n            deferreds[i].always(function() {\n                wrappedDeferreds[lastResolved++].resolve(arguments);\n            });\n        }\n\n        return jQuery.when.apply(jQuery, wrappedDeferreds).promise();\n    };\n</code></pre>\n\n<p><strong>To use it:</strong></p>\n\n<pre><code>jQuery.whenAll([jQuery.get('/your-resource'), jQuery.get('/your-resource')])\n   .done(\n       function(result1, result2) {\n           console.log(result1[1]);\n           console.log(result2[1]);\n       });\n</code></pre>\n\n<p><strong>Check out the fiddle:</strong>\n<a href=\"http://jsfiddle.net/LeoJH/VMQ3F/\" rel=\"nofollow\">http://jsfiddle.net/LeoJH/VMQ3F/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You want <a href=\"http://api.jquery.com/deferred.always/\" rel=\"nofollow\">deferred.always()</a> (available in jQuery 1.6+):</p>\n\n<pre><code>// Called when all deferreds are either resolved or rejected\n$.when(\n    $.ajax(\"/page1.php\"),\n    $.ajax(\"/page2.php\"),\n    $.ajax(\"/page3.php\"))\n.always(function() { alert(\"AJAX requests completed\") });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>When multiple Deferred objects are passed to <a href=\"http://api.jquery.com/jQuery.when/\">jQuery.when</a>, the method returns the Promise from a new \"master\" Deferred object that tracks the aggregate state of all the Deferreds it has been passed.</p>\n\n<p>The method will either </p>\n\n<ol>\n<li>resolve its master Deferred as soon as ALL the Deferreds resolve, or </li>\n<li>reject its master Deferred as soon as ONE of the Deferreds is rejected.</li>\n</ol>\n\n<p>If the master Deferred is resolved (ie. ALL the Deferreds resolve), it is passed the resolved values of all the Deferreds that were passed to jQuery.when. For example, when the Deferreds are jQuery.ajax() requests, the arguments will be the jqXHR objects for the requests, in the order they were given in the argument list:</p>\n\n<pre><code>$.when( $.getJSON('foo'), $.getJSON('bar') ).done(function(foo, bar) {\n\n    // foo &amp; bar are jqXHR objects for the requests\n\n});\n</code></pre>\n\n<p>In the multiple Deferreds case where one of the Deferreds is rejected, jQuery.when IMMEDIATELY FIRES the fail callbacks for its master Deferred, even if some of the Deferreds may still be unresolved at that point:</p>\n\n<pre><code>$.when( $.getJSON('foo'), $.getJSON('bar') ).fail(function(req) {\n\n    // req is the jqXHR object for one of the failed requests\n\n});\n</code></pre>\n\n<p>I need to fire a callback when all the Deferreds passed to jQuery.when are no longer 'unresolved' (ie. all are either 'resolved' or 'rejected'). I could send JSON objects with 200 OK codes (instead sending JSON with 404 Not Found error status codes) and determine success/error in the done() method, but I'd prefer keeping my API RESTful. How can I accomplish this?</p>\n",
            "last_activity_date": 1412954946,
            "question_id": 5824615,
            "score": 17,
            "tags": [
                "javascript",
                "jquery",
                "rest",
                "jquery-deferred"
            ],
            "title": "jQuery.when - Callback for when ALL Deferreds are no long &#39;unresolved&#39; (either resolved or rejected)?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Solved it myself, here's fiddle with working code <a href=\"http://jsfiddle.net/uhXf5/6/\">http://jsfiddle.net/uhXf5/6/</a></p>\n\n<p>Here's code in case someone will came across similar problem:</p>\n\n<pre><code>function reduceAdd(p, v) {\n  v.tags.forEach (function(val, idx) {\n     p[val] = (p[val] || 0) + 1; //increment counts\n  });\n  return p;\n}\n\nfunction reduceRemove(p, v) {\n  v.tags.forEach (function(val, idx) {\n     p[val] = (p[val] || 0) - 1; //decrement counts\n  });\n  return p;\n\n}\n\nfunction reduceInitial() {\n  return {};  \n}\n\n\nvar data = [\n    {\"key\":\"KEY-1\",\"tags\":[\"tag1\", \"tag2\"], \"date\":new Date(\"10/02/2012\")},\n    {\"key\":\"KEY-2\",\"tags\":[\"tag2\"], \"date\": new Date(\"10/05/2012\")},\n    {\"key\":\"KEY-3\",\"tags\":[\"tag3\", \"tag1\"], \"date\":new Date(\"10/08/2012\")}];\n\nvar cf = crossfilter(data);\n\nvar tags = cf.dimension(function(d){ return d.tags;});\nvar tagsGroup = tags.groupAll().reduce(reduceAdd, reduceRemove, reduceInitial).value();\n// hack to make dc.js charts work\ntagsGroup.all = function() {\n  var newObject = [];\n  for (var key in this) {\n    if (this.hasOwnProperty(key) &amp;&amp; key != \"all\") {\n      newObject.push({\n        key: key,\n        value: this[key]\n      });\n    }\n  }\n  return newObject;\n}\n\n\nvar dates = cf.dimension(function(d){ return d.date;});\nvar datesGroup = dates.group();\n\n\nvar chart = dc.rowChart(\"#chart\");\n    chart                                                                                       \n    .renderLabel(true)\n    .dimension(tags)\n    .group(tagsGroup)\n    .filterHandler(function(dimension, filter){     \n        dimension.filter(function(d) {return chart.filter() != null ? d.indexOf(chart.filter()) &gt;= 0 : true;}); // perform filtering\n        return filter; // return the actual filter value\n       })\n    .xAxis().ticks(3);\n\nvar chart2 = dc.barChart(\"#chart2\");\n    chart2  \n    .width(500)\n    .transitionDuration(800)\n    .margins({top: 10, right: 50, bottom: 30, left: 40})\n    .dimension(dates)\n    .group(datesGroup)\n    .elasticY(true)\n    .elasticX(true)\n    .round(d3.time.day.round)    \n    .x(d3.time.scale())    \n    .xUnits(d3.time.days)\n    .centerBar(true)\n    .renderHorizontalGridLines(true)       \n    .brushOn(true);    \n\n\ndc.renderAll();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>The example above is a great approach.  You can take it one step further though.\nIn the solution above, it will only filter based on the first selection you make.  Any subsequent selections are ignored.</p>\n\n<p>If you want it to respond to all selections, you would create a filterHandler as follows:</p>\n\n<pre><code> barChart.filterHandler (function (dimension, filters) {\n   dimension.filter(null);   \n    if (filters.length === 0)\n        dimension.filter(null);\n    else\n        dimension.filterFunction(function (d) {\n            for (var i=0; i &lt; d.length; i++) {\n                if (filters.indexOf(d[i]) &gt;= 0) return true;\n            }\n            return false; \n        });\n  return filters; \n  }\n);\n</code></pre>\n\n<p>Working sample here:\n<a href=\"http://jsfiddle.net/jeffsteinmetz/cwShL/\">http://jsfiddle.net/jeffsteinmetz/cwShL/</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Jeff's answer does work, but there is no need to keep track of the \"found\" variable or continue the loop if an item was found.  If X is in [X,Y,Z], this has already cut the amount of iterations in 1/3.</p>\n\n<pre><code>else\n    dimension.filterFunction(function (d) {\n        for (var i=0; i &lt; d.length; i++) {\n            if (filters.indexOf(d[i]) &gt;= 0) return true;\n        }\n        return false; \n    });\n</code></pre>\n\n<p>Alternatively, you could patch dc.js filterFunction method and that would handle all cases.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I'd like to try to provide some context for the approach listed by Jeff and Kostya.</p>\n\n<p>You'll notice that the tagsGroup uses groupAll unlike the typical group method.  Crossfilter tells us that \"The returned object is similar to a standard grouping, except it has no top or order methods. Instead, use value to retrieve the reduce value for all matching records.\"  Kostya called the \".value()\" method to retrieve the single object that represents the entire group.</p>\n\n<pre><code>var tagsGroup = tags.groupAll().reduce(reduceAdd, reduceRemove, reduceInitial).value();\n</code></pre>\n\n<p>This object won't work well with dc.js because dc.js expects the group object to have an all method.  Kostya patched that object to have an \"all\" method like so:</p>\n\n<pre><code>// hack to make dc.js charts work\ntagsGroup.all = function() {\n  var newObject = [];\n  for (var key in this) {\n    if (this.hasOwnProperty(key) &amp;&amp; key != \"all\") {\n      newObject.push({\n        key: key,\n        value: this[key]\n      });\n    }\n  }\n  return newObject;\n}\n</code></pre>\n\n<p>This will work with a simple dc.js chart, but you won't be able to use all dc.js functionality since not all of the group functions are present.  For example, you won't be able to use the \"cap\" method on your chart because the cap method expects the group object to have a \"top\" method.  You could also patch the top method like so:</p>\n\n<pre><code>topicsGroup.top = function(count) {\n    var newObject = this.all();\n     newObject.sort(function(a, b){return b.value - a.value});\n    return newObject.slice(0, count);\n};\n</code></pre>\n\n<p>This will enable your chart to use the cap method:</p>\n\n<pre><code>barChart\n    .renderLabel(true)\n    .height(200)\n    .dimension(topicsDim)\n    .group(topicsGroup)\n    .cap(2)\n    .ordering(function(d){return -d.value;})\n    .xAxis().ticks(3);\n</code></pre>\n\n<p>An updated example is available at <a href=\"http://jsfiddle.net/djmartin_umich/m7V89/#base\" rel=\"nofollow\">http://jsfiddle.net/djmartin_umich/m7V89/#base</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have data set where some of the field values are arrays and I'd like to use crossfilter and d3.js or dc.js to display histogram of how many times each of those values was present in the dataset.</p>\n\n<p>Here's an example:</p>\n\n<pre><code>var data = [\n    {\"key\":\"KEY-1\",\"tags\":[\"tag1\", \"tag2\"]},\n    {\"key\":\"KEY-2\",\"tags\":[\"tag2\"]},\n    {\"key\":\"KEY-3\",\"tags\":[\"tag3\", \"tag1\"]}];\n\nvar cf = crossfilter(data);\n\nvar tags = cf.dimension(function(d){ return d.tags;});\nvar tagsGroup = tags.group();\n\n\ndc.rowChart(\"#chart\")\n    .renderLabel(true)\n    .dimension(tags)\n    .group(tagsGroup)\n    .xAxis().ticks(3);\n\ndc.renderAll();\n</code></pre>\n\n<p>And JSFiddle <a href=\"http://jsfiddle.net/uhXf5/2/\">http://jsfiddle.net/uhXf5/2/</a></p>\n\n<p>When I run that code it produces graph like this:</p>\n\n<p><img src=\"http://i.stack.imgur.com/lbWJ0.png\" alt=\"graph1\"></p>\n\n<p>But what I want is something like this:</p>\n\n<p><img src=\"http://i.stack.imgur.com/Gosd0.png\" alt=\"enter image description here\"></p>\n\n<p>To make things even more complicated it would be awesome to be able to click on any of the rows and filter dataset by the tag that was clicked.</p>\n\n<p>Anyone has any ideas how to achieve that?</p>\n\n<p>Thanks,\nKostya</p>\n",
            "last_activity_date": 1404926320,
            "question_id": 17524627,
            "score": 16,
            "tags": [
                "javascript",
                "d3.js",
                "crossfilter",
                "dc.js"
            ],
            "title": "Is there a way to tell crossfilter to treat elements of array as separate records instead of treating whole array as single key?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>To start with the fact that I do not know the answer but would good old browser capability detection work like:</p>\n\n<pre><code>if (document.images)\n</code></pre>\n\n<p>But in your case you would use the css3 property you want to use?</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>Maybe you are looking for something like this? <a href=\"http://www.filamentgroup.com/lab/delivering%5Fthe%5Fright%5Fexperience%5Fto%5Fthe%5Fright%5Fdevice/\" rel=\"nofollow\">http://www.filamentgroup.com/lab/delivering%5Fthe%5Fright%5Fexperience%5Fto%5Fthe%5Fright%5Fdevice/</a></p>\n\n<p>The other thing to think about is what you want for default if JS is turned off.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I believe you can do it this way:</p>\n\n<pre><code>if ('WebkitTransform' in document.body.style \n || 'MozTransform' in document.body.style \n || 'OTransform' in document.body.style \n || 'transform' in document.body.style) \n{\n    alert('I can Rotate!');\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>There is a new DOM API <a href=\"http://dev.w3.org/csswg/css-conditional/#CSS-interface\" rel=\"nofollow\">CSS.supports</a> for that purpose. FF, Opera (as supportsCSS) and Chrome Canary already implement this method. </p>\n\n<p>For cross-browser compatibility you can use my <a href=\"https://github.com/termi/CSS.supports/\" rel=\"nofollow\">CSS.supports polyfill</a></p>\n\n<p>Example:</p>\n\n<p><code>\nCSS.supports(\"display\", \"table\");//IE&lt;8 return false\n</code></p>\n\n<p>But, you still need to specify browser prefix for prefixing css properties. For example:</p>\n\n<p><code>\nCSS.supports(\"-webkit-filter\", \"blur(10px)\");\n</code></p>\n\n<p>I suggest to using <a href=\"http://modernizr.com/\" rel=\"nofollow\">Modernizr</a> for feature-detection.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Is it possible in javascript to know if a css property is supported by the client browser? I'm talking about the rotation properties of css3, i want to execute some functions only if the browser supports them.</p>\n",
            "last_activity_date": 1371831722,
            "question_id": 1342994,
            "score": 16,
            "tags": [
                "javascript",
                "css"
            ],
            "title": "check browser css property support"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>Please note that this solution is not the best. I made this just to match the requirements of the OP. I personally would suggest looking into the other answers.</strong></p>\n\n<p>THe following regexp will give you back the domain and the rest. <code>:\\/\\/(.[^\\/]+)(.*)</code>:</p>\n\n<ol>\n<li>www.google.com</li>\n<li>/goosomething</li>\n</ol>\n\n<p>I suggest you studying the RegExp documentation here: <a href=\"http://www.regular-expressions.info/reference.html\" rel=\"nofollow\">http://www.regular-expressions.info/reference.html</a></p>\n\n<p>Using your function:</p>\n\n<pre><code>function get_domain_name()\n    { \n    aaaa=\"http://www.somesite.se/blah/sdgsdgsdgs\";\n    //aaaa=\"http://somesite.se/blah/sese\";\n        var matches = aaaa.match(/:\\/\\/(?:www\\.)?(.[^/]+)(.*)/);\n        alert(matches[1]);\n        alert(matches[2]);\n    }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>The <a href=\"http://www.ietf.org/rfc/rfc3986.txt\"><strong>RFC</strong></a> (see appendix B) provides a regular expression to parse the URI parts:</p>\n\n<pre><code>^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n 12            3  4          5       6  7        8 9\n</code></pre>\n\n<p>where</p>\n\n<pre><code>scheme    = $2\nauthority = $4\npath      = $5\nquery     = $7\nfragment  = $9\n</code></pre>\n\n<hr>\n\n<p>Example:</p>\n\n<pre><code>function parse_url(url) {\n    var pattern = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\n    var matches =  url.match(pattern);\n    return {\n        scheme: matches[2],\n        authority: matches[4],\n        path: matches[5],\n        query: matches[7],\n        fragment: matches[9]\n    };\n}\nconsole.log(parse_url(\"http://www.somesite.se/blah/sdgsdgsdgs\"));\n</code></pre>\n\n<p>gives</p>\n\n<pre><code>Object\n    authority: \"www.somesite.se\"\n    fragment: undefined\n    path: \"/blah/sdgsdgsdgs\"\n    query: undefined\n    scheme: \"http\"\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Kjerc/\"><strong>DEMO</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You just need to modify your regex a bit.  For example:</p>\n\n<pre><code>var aaaa=\"http://www.somesite.se/blah/sdgsdgsdgs\";\nvar m = aaaa.match(/^[^:]*:\\/\\/([^\\/]+)(\\/.*)$/);\n</code></pre>\n\n<p>m will then contain the following parts:</p>\n\n<pre><code>[\"http://www.somesite.se/blah/sdgsdgsdgs\", \"www.somesite.se\", \"/blah/sdgsdgsdgs\"]\n</code></pre>\n\n<p>Here is the same example, but modified so that it will split out the \"www.\" part.  I think the regular expression should be written so that the match will work whether or not you you have the \"www.\" part.  So check this out:</p>\n\n<pre><code>var aaaa=\"http://www.somesite.se/blah/sdgsdgsdgs\";\nvar m = aaaa.match(/^[^:]*:\\/\\/(www\\.)?([^\\/]+)(\\/.*)$/);\n</code></pre>\n\n<p>m will then contain the following parts:</p>\n\n<pre><code>[\"http://www.somesite.se/blah/sdgsdgsdgs\", \"www.\", \"somesite.se\", \"/blah/sdgsdgsdgs\"]\n</code></pre>\n\n<p>Now check out the same regular expression but with a url that does not start with \"www.\":</p>\n\n<pre><code>var bbbb=\"http://somesite.se/blah/sdgsdgsdgs\";\nvar m = .match(/^[^:]*:\\/\\/(www\\.)?([^\\/]+)(\\/.*)$/);\n</code></pre>\n\n<p>Now your match looks like this:</p>\n\n<pre><code>[\"http://somesite.se/blah/sdgsdgsdgs\", undefined, \"somesite.se\", \"/blah/sdgsdgsdgs\"]\n</code></pre>\n\n<p>So as you can see it will do the right thing in both cases.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Instead of relying on a potentially unreliable* regex, you should instead use the built-in URL parser that the JavaScript DOM API provides:</p>\n\n<pre><code>var url = document.createElement('a');\nurl.href = \"http://www.example.com/some/path?name=value#anchor\";\n</code></pre>\n\n<p>That's all you need to do to parse the URL. Everything else is just accessing the parsed values:</p>\n\n<pre><code>url.protocol; //(http:)\nurl.hostname ; //(www.example.com)\nurl.pathname ; //(/some/path)\nurl.search ; // (?name=value)\nurl.hash; //(#anchor)\n</code></pre>\n\n<p>In this case, if you're looking for <code>/blah/sdgsdgsdgs</code>, you'd access it with <code>url.pathname</code></p>\n\n<p>Basically, you're just creating a link (technically, anchor element) in JavaScript, and then you can make calls to the parsed pieces directly. (Since you're not adding it to the DOM, it doesn't add any invisible links anywhere.) It's accessed in the same way that values on the <code>location</code> object are. </p>\n\n<p>(Inspired by <a href=\"http://stackoverflow.com/questions/3213531/creating-a-new-location-object-in-javascript/3213643#3213643\">this wonderful answer</a>.)</p>\n\n<p>EDIT: An important note: it appears that Internet Explorer has a bug where it omits the leading slash on the <code>pathname</code> attribute on objects like this. You could normalize it by doing something like:</p>\n\n<pre><code> url.pathname = url.pathname.replace(/(^\\/?)/,\"/\");\n</code></pre>\n\n<p>Note:\n*: I say \"potentially unreliable\", since it can be tempting to try to build or find an all-encompassing URL parser, but there are many, many conditions, edge cases and forgiving parsing techniques that might not be considered or properly supported; browsers are probably best at implementing (since parsing URLs is critical to their proper operation) this logic, so we should keep it simple and leave it to them. </p>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>There is a nice jQuery plugin for parsing URLs: <a href=\"https://github.com/allmarkedup/purl\" rel=\"nofollow\">Purl</a>.</p>\n\n<p>All the regex stuff is hidden inside, and you get something like:</p>\n\n<pre><code>&gt; url = $.url(\"http://markdown.com/awesome/language/markdown.html?show=all#top\");\n&gt; url.attr('source');\n\"http://markdown.com/awesome/language/markdown.html?show=all#top\"\n\n&gt; url.attr('protocol');\n\"http\"\n\n&gt; url.attr('host');\n\"markdown.com\"\n\n&gt; url.attr('relative');\n\"/awesome/language/markdown.html?show=all#top\"\n\n&gt; url.attr('path');\n\"/awesome/language/markdown.html\"\n\n&gt; url.attr('directory');\n\"/awesome/language/\"\n\n&gt; url.attr('file');\n\"markdown.html\"\n\n&gt; url.attr('query');\n\"show=all\"\n\n&gt; url.attr('fragment');\n\"top\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If there is one thing I just cant get my head around, it's regex.</p>\n\n<p>So after a lot of searching I finally found this one that suits my needs:</p>\n\n<pre><code>function get_domain_name()\n    { \n    aaaa=\"http://www.somesite.se/blah/sdgsdgsdgs\";\n    //aaaa=\"http://somesite.se/blah/sese\";\n        domain_name_parts = aaaa.match(/:\\/\\/(.[^/]+)/)[1].split('.');\n        if(domain_name_parts.length &gt;= 3){\n            domain_name_parts[0] = '';\n        }\n        var domain = domain_name_parts.join('.');\n        if(domain.indexOf('.') == 0)\n            alert(\"1\"+ domain.substr(1));\n        else\n            alert(\"2\"+ domain);\n    }\n</code></pre>\n\n<p>It basically gives me back the domain name, is there anyway I can also get all the stuff after the domain name? in this case it would be <code>/blah/sdgsdgsdgs</code> from the <code>aaaa</code> variable.</p>\n",
            "last_activity_date": 1410270456,
            "question_id": 6168260,
            "score": 14,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "How to parse a URL?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>Use a <code>script</code> block.</p>\n\n<pre><code>&lt;script id=\"someId\" type=\"text/html\"&gt;\n   &lt;!-- your template here --&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>and one of many JQuery plugins.</p>\n\n<p><a href=\"http://weblogs.asp.net/scottgu/archive/2010/05/07/jquery-templates-and-data-linking-and-microsoft-contributing-to-jquery.aspx\" rel=\"nofollow\">http://weblogs.asp.net/scottgu/archive/2010/05/07/jquery-templates-and-data-linking-and-microsoft-contributing-to-jquery.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are several good ones out there:</p>\n\n<p><a href=\"http://github.com/janl/mustache.js/\" rel=\"nofollow\">Mustache.js</a><br>\n<a href=\"http://beebole.com/pure/\" rel=\"nofollow\">Pure.js</a><br>\n<a href=\"http://json-template.googlecode.com/svn/trunk/doc/Introducing-JSON-Template.html\" rel=\"nofollow\">Json Template</a></p>\n\n<p>If you want a jQuery version, <a href=\"http://github.com/fitzgen/tempest\" rel=\"nofollow\">Tempest</a> looks good.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You should check out google closure template. It's completely independent so you can use it with any lib you want. It's a templating tool written in java.</p>\n\n<p><a href=\"http://code.google.com/closure/templates/docs/helloworld_js.html\" rel=\"nofollow\">http://code.google.com/closure/templates/docs/helloworld_js.html</a></p>\n\n<p>It allows you to create a template on the server, run a java \"compiler\" on it and the output is a javascript function that takes json as its parameter.</p>\n\n<pre><code>{namespace examples}\n/**\n * Greets a person using \"Hello\" by default.\n * @param name The name of the person.\n * @param? greetingWord Optional greeting word to use instead of \"Hello\".\n */\n{template .helloName}\n  {if not $greetingWord}\n    Hello {$name}!\n  {else}\n    {$greetingWord} {$name}!\n  {/if}\n{/template}\n</code></pre>\n\n<p>This will generate a function called examples.helloName that can be called like</p>\n\n<p>Their format is very IDE friendly, I get all the HTML syntax highlighting when editing the templates</p>\n\n<pre><code>examples.helloName({name: 'Ana', greetingWord:\"Howdy\"});\n</code></pre>\n\n<p>You can call other templates from within templates, it automatically html escapes your data (unless you tell it not to), provides bidirection support.</p>\n\n<p>Another great thing is the fact that the templating tool can also generate java code. So somebody writing an app that must support browsers with scripting disabled can generate the HTML on the server if necessary.</p>\n\n<p>Last but not least, unlike other js templating systems (), the template is parsed on the server, so the client side only has to do the merging of the template and data, the parsing of the template is done as a build step on the server.</p>\n\n<p><a href=\"http://dev.sencha.com/deploy/dev/docs/?class=Ext.XTemplate\" rel=\"nofollow\">http://dev.sencha.com/deploy/dev/docs/?class=Ext.XTemplate</a> is an example of a templating tool that runs completely on the client. There are two problems with this approach, the parsing of the template is done on the client and your html has to be embedded in a javascript string. However, some IDEs (Intellij) will highlight the HTML inside JS strings). </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What about JAML Code?</p>\n\n<p><a href=\"http://github.com/edspencer/jaml\" rel=\"nofollow\">http://github.com/edspencer/jaml</a></p>\n\n<p>Similar to a few of the above but I believe is a bit more logical...</p>\n\n<p>It is the concept of defining your templates via JSON / JavaScript and then using a function in JavaScript to pass arguments to your template which gets it rendered and returned as an element.</p>\n\n<p>There are implementations around for the various JavaScript Frameworks that exist.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have <a href=\"http://github.com/Sidnicious/stencil.js\" rel=\"nofollow\">a templating engine called stencil.js</a>, which I believe is pretty sweet. It works with jQuery via the <a href=\"http://github.com/creationix/jquery-haml\" rel=\"nofollow\">jquery-haml DOM building engine</a>.</p>\n\n<p>Write your template (which you can put in an external file and decode as JSON):</p>\n\n<pre><code>[\"%div.sidebar_elem\"\n    [\"%a\", { href: { key:'link' } },\n        { key: \"text\" }\n    ]\n]\n</code></pre>\n\n<p>And run it through <code>stencil</code> along with your data:</p>\n\n<pre><code>$(\"#parent\").stencil(template, { link: \"http://example.com\", text: \"Click me!\" });\n</code></pre>\n\n<p>There are more examples at the <a href=\"http://github.com/Sidnicious/stencil.js\" rel=\"nofollow\">stencil.js</a> GitHub project, but I think it's just what you're looking for.</p>\n\n<p>It could use a couple more utility methods, and some code for an unfinished data binding component is still in the <code>master</code> branch, so drop me a comment if you\u2019re interested and I'll see if I can clean it up.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The 2 libs I know that do not mix template coding with HTML markups are <a href=\"http://wiki.github.com/raid-ox/chain.js/\" rel=\"nofollow\">chain.js</a> and <a href=\"http://beebole.com/pure\" rel=\"nofollow\">PURE</a></p>\n\n<p><code>chain</code> makes only DOM manipulations.<br/>\n<code>PURE</code> uses a mix of DOM and <code>innerHTML</code> as the DOM alone can be slow to render bigger templates.</p>\n\n<p>I'm the main contributor of PURE, and we created it to build a web app on the ajax model you describe.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Take a look at this one <a href=\"http://ejohn.org/blog/javascript-micro-templating/\" rel=\"nofollow\">http://ejohn.org/blog/javascript-micro-templating/</a>. Made by John Resig, creator of jQuery, this one doesn't even need jQuery, and it's freaking small. It also stores templates in script tag (Daniel's answer). Example template:</p>\n\n<pre><code>&lt;script type=\"text/html\" id=\"user_tmpl\"&gt;\n    &lt;% for ( var i = 0; i &lt; users.length; i++ ) { %&gt;\n        &lt;li&gt;&lt;a href=\"&lt;%=users[i].url%&gt;\"&gt;&lt;%=users[i].name%&gt;&lt;/a&gt;&lt;/li&gt;\n    &lt;% } %&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>Maybe you can load them using src attribute if you really need them to be in separate files, which I don't think is a wise idea, because it means additional roundtrip to the server. So at the end, for the sake of optimization, you can store them in separate files, but embed them server side in the page that needs them.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>How about <a href=\"http://embeddedjs.com/\" rel=\"nofollow\">EJS</a>? </p>\n\n<p>Example from their page:</p>\n\n<p>\"EJS combines data and a template to produce HTML.\"</p>\n\n<p>Data:</p>\n\n<pre><code>{title: 'Cleaning Supplies',  supplies: ['mop', 'broom', 'duster'] }\n</code></pre>\n\n<p>Template:</p>\n\n<pre><code>&lt;ul&gt;\n&lt;% for(var i=0; i&lt;supplies.length; i++) {%&gt;\n   &lt;li&gt;&lt;%= supplies[i] %&gt;&lt;/li&gt;\n&lt;% } %&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>Result:</p>\n\n<ul>\n<li>mop</li>\n<li>broom</li>\n<li>duster</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>check out ibdom, and some background/history here: <a href=\"http://stackoverflow.com/questions/449780/recommended-javascript-html-template-library-for-jquery/3767682#3767682\">http://stackoverflow.com/questions/449780/recommended-javascript-html-template-library-for-jquery/3767682#3767682</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Could always go with jQuery-Templates: <a href=\"http://api.jquery.com/category/plugins/templates/\" rel=\"nofollow\">http://api.jquery.com/category/plugins/templates/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since there is no well defined API and a best library for templating, I would suggest you choose one that is actively developed. Below, I briefly explained two libraries that are actively being developed.</p>\n\n<p>jQuery team decided that jQuery Templates will no longer be actively developed or maintained, thus I would strongly suggest NOT using it. See <a href=\"http://blog.jquery.com/2011/04/16/official-plugins-a-change-in-the-roadmap/\" rel=\"nofollow\">this blog entry</a>.</p>\n\n<p>You can use <a href=\"https://github.com/BorisMoore/jsrender\" rel=\"nofollow\">JsRender</a> in accordance with <a href=\"https://github.com/BorisMoore/jsviews\" rel=\"nofollow\">JsViews</a> to take full functionality provided by jQuery Templates and even more like data linking. You can find demos for <a href=\"http://borismoore.github.com/jsrender/demos/index.html\" rel=\"nofollow\">JsRender</a> and <a href=\"http://borismoore.github.com/jsviews/demos/index.html\" rel=\"nofollow\">JsViews</a>. I would suggest using these libraries since they are actively being developed by jQuery UI team but be aware that they are still not even beta!</p>\n\n<p>Mustache is another templating solution that is actively being developed and it simplifies templates by combining conditional tags and enumeration tags. It also provides strong features like inverted sections, partials and high order sections with simple syntax. Mustache is also one of the fastest templating solutions <a href=\"http://www.viget.com/extend/benchmarking-javascript-templating-libraries/\" rel=\"nofollow\">See blog by Brian Landau</a>. I, personally, find mustache a good templating solution since it has a simple syntax and performs well.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>What about <a href=\"http://www.enfusion-framework.org\" rel=\"nofollow\">http://www.enfusion-framework.org</a></p>\n\n<p>Stuff like this:</p>\n\n<pre><code>&lt;span template&gt;Our telephone number is {phone}.&lt;/span&gt;\n\n&lt;span session&gt;You are logged in as {nickname}.&lt;/span&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am a web guy doing mostly Perl server-side stuff, and I'm slowly coming to a few conclusions. </p>\n\n<ul>\n<li>It is far better to do most of your code via Javascript and toss data back and forth via AJAX than it is to hit submit and reload a mostly-identical page</li>\n<li>I like jQuery because I like CSS, and it's fun to chain together big long and scary-to-others definitions</li>\n<li>There's something to that templating stuff.</li>\n</ul>\n\n<p>You want your HTML elements to look like your HTML elements, and it's easier to define that in HTML:</p>\n\n<pre><code>&lt;div class=\"sidebar_elem\"&gt;\n     &lt;a href=\"\"&gt; TEXT&lt;/a&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Than it is to cobble up the same in Javascript or jQuery:</p>\n\n<pre><code>( '&lt;div/&gt;' )\n     .attr('id' , 'sidebar_elem' + i )\n     .addclass( 'sidebar_elem' )\n     ;\n( '&lt;a/&gt;' )\n     .attr('href' , link_url )\n     .appendTo( '#sidebar_elem' + i )\n     ;\n</code></pre>\n\n<p>This is to say that I am no longer a templating agnostic, but I don't know which templating tool to believe in. I have looked into some jQuery-based templating plugins, but I have yet to become happy with any of them, in part because the ones I've seen seem to want to put all that code into the page itself, which breaks the \"Only markup goes into HTML files, only style goes into CSS files, only code goes into JS files\" mantra I keep reciting.</p>\n\n<p>So, I'm looking for a Javascript-based templating tool that would allow me to have my templates in an outside file so I can have one template change cover a series of web pages. If it's jQuery-based, that's great, less stuff I have to learn, but it isn't a deal-breaker. </p>\n",
            "last_activity_date": 1401459521,
            "question_id": 3585573,
            "score": 11,
            "tags": [
                "javascript",
                "templates"
            ],
            "title": "HTML Templates in Javascript? Without coding in the page?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I took the time to create the punycode below. It it based on the C code in RFC 3492. To use it with domain names you have to remove/add \"xn--\" from/to the input/output to/from decode/encode.</p>\n\n<p>The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.</p>\n\n<p><strong>Update 28 sep 2010</strong>: Added functions <em>ToASCII</em> and <em>ToUnicode</em> to make it easier to convert between puny coded IDN and ASCII.</p>\n\n<pre><code>//Javascript Punycode converter derived from example in RFC3492.\n//This implementation is created by some@domain.name and released into public domain\nvar punycode = new function Punycode() {\n    // This object converts to and from puny-code used in IDN\n    //\n    // punycode.ToASCII ( domain )\n    // \n    // Returns a puny coded representation of \"domain\".\n    // It only converts the part of the domain name that\n    // has non ASCII characters. I.e. it dosent matter if\n    // you call it with a domain that already is in ASCII.\n    //\n    // punycode.ToUnicode (domain)\n    //\n    // Converts a puny-coded domain name to unicode.\n    // It only converts the puny-coded parts of the domain name.\n    // I.e. it dosent matter if you call it on a string\n    // that already has been converted to unicode.\n    //\n    //\n    this.utf16 = {\n        // The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.\n        decode:function(input){\n            var output = [], i=0, len=input.length,value,extra;\n            while (i &lt; len) {\n                value = input.charCodeAt(i++);\n                if ((value &amp; 0xF800) === 0xD800) {\n                    extra = input.charCodeAt(i++);\n                    if ( ((value &amp; 0xFC00) !== 0xD800) || ((extra &amp; 0xFC00) !== 0xDC00) ) {\n                        throw new RangeError(\"UTF-16(decode): Illegal UTF-16 sequence\");\n                    }\n                    value = ((value &amp; 0x3FF) &lt;&lt; 10) + (extra &amp; 0x3FF) + 0x10000;\n                }\n                output.push(value);\n            }\n            return output;\n        },\n        encode:function(input){\n            var output = [], i=0, len=input.length,value;\n            while (i &lt; len) {\n                value = input[i++];\n                if ( (value &amp; 0xF800) === 0xD800 ) {\n                    throw new RangeError(\"UTF-16(encode): Illegal UTF-16 value\");\n                }\n                if (value &gt; 0xFFFF) {\n                    value -= 0x10000;\n                    output.push(String.fromCharCode(((value &gt;&gt;&gt;10) &amp; 0x3FF) | 0xD800));\n                    value = 0xDC00 | (value &amp; 0x3FF);\n                }\n                output.push(String.fromCharCode(value));\n            }\n            return output.join(\"\");\n        }\n    }\n\n    //Default parameters\n    var initial_n = 0x80;\n    var initial_bias = 72;\n    var delimiter = \"\\x2D\";\n    var base = 36;\n    var damp = 700;\n    var tmin=1;\n    var tmax=26;\n    var skew=38;\n    var maxint = 0x7FFFFFFF;\n\n    // decode_digit(cp) returns the numeric value of a basic code \n    // point (for use in representing integers) in the range 0 to\n    // base-1, or base if cp is does not represent a value.\n\n    function decode_digit(cp) {\n        return cp - 48 &lt; 10 ? cp - 22 : cp - 65 &lt; 26 ? cp - 65 : cp - 97 &lt; 26 ? cp - 97 : base;\n    }\n\n    // encode_digit(d,flag) returns the basic code point whose value\n    // (when used for representing integers) is d, which needs to be in\n    // the range 0 to base-1. The lowercase form is used unless flag is\n    // nonzero, in which case the uppercase form is used. The behavior\n    // is undefined if flag is nonzero and digit d has no uppercase form. \n\n    function encode_digit(d, flag) {\n        return d + 22 + 75 * (d &lt; 26) - ((flag != 0) &lt;&lt; 5);\n        //  0..25 map to ASCII a..z or A..Z \n        // 26..35 map to ASCII 0..9\n    }\n    //** Bias adaptation function **\n    function adapt(delta, numpoints, firsttime ) {\n        var k;\n        delta = firsttime ? Math.floor(delta / damp) : (delta &gt;&gt; 1);\n        delta += Math.floor(delta / numpoints);\n\n        for (k = 0; delta &gt; (((base - tmin) * tmax) &gt;&gt; 1); k += base) {\n                delta = Math.floor(delta / ( base - tmin ));\n        }\n        return Math.floor(k + (base - tmin + 1) * delta / (delta + skew));\n    }\n\n    // encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,\n    // uppercase if flag is nonzero, and returns the resulting code point.\n    // The code point is unchanged if it is caseless.\n    // The behavior is undefined if bcp is not a basic code point.\n\n    function encode_basic(bcp, flag) {\n        bcp -= (bcp - 97 &lt; 26) &lt;&lt; 5;\n        return bcp + ((!flag &amp;&amp; (bcp - 65 &lt; 26)) &lt;&lt; 5);\n    }\n\n    // Main decode\n    this.decode=function(input,preserveCase) {\n        // Dont use utf16\n        var output=[];\n        var case_flags=[];\n        var input_length = input.length;\n\n        var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;\n\n        // Initialize the state: \n\n        n = initial_n;\n        i = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points: Let basic be the number of input code \n        // points before the last delimiter, or 0 if there is none, then\n        // copy the first basic code points to the output.\n\n        basic = input.lastIndexOf(delimiter);\n        if (basic &lt; 0) basic = 0;\n\n        for (j = 0; j &lt; basic; ++j) {\n            if(preserveCase) case_flags[output.length] = ( input.charCodeAt(j) -65 &lt; 26);\n            if ( input.charCodeAt(j) &gt;= 0x80) {\n                throw new RangeError(\"Illegal input &gt;= 0x80\");\n            }\n            output.push( input.charCodeAt(j) );\n        }\n\n        // Main decoding loop: Start just after the last delimiter if any\n        // basic code points were copied; start at the beginning otherwise. \n\n        for (ic = basic &gt; 0 ? basic + 1 : 0; ic &lt; input_length; ) {\n\n            // ic is the index of the next character to be consumed,\n\n            // Decode a generalized variable-length integer into delta,\n            // which gets added to i. The overflow checking is easier\n            // if we increase i as we go, then subtract off its starting \n            // value at the end to obtain delta.\n            for (oldi = i, w = 1, k = base; ; k += base) {\n                    if (ic &gt;= input_length) {\n                        throw RangeError (\"punycode_bad_input(1)\");\n                    }\n                    digit = decode_digit(input.charCodeAt(ic++));\n\n                    if (digit &gt;= base) {\n                        throw RangeError(\"punycode_bad_input(2)\");\n                    }\n                    if (digit &gt; Math.floor((maxint - i) / w)) {\n                        throw RangeError (\"punycode_overflow(1)\");\n                    }\n                    i += digit * w;\n                    t = k &lt;= bias ? tmin : k &gt;= bias + tmax ? tmax : k - bias;\n                    if (digit &lt; t) { break; }\n                    if (w &gt; Math.floor(maxint / (base - t))) {\n                        throw RangeError(\"punycode_overflow(2)\");\n                    }\n                    w *= (base - t);\n            }\n\n            out = output.length + 1;\n            bias = adapt(i - oldi, out, oldi === 0);\n\n            // i was supposed to wrap around from out to 0,\n            // incrementing n each time, so we'll fix that now: \n            if ( Math.floor(i / out) &gt; maxint - n) {\n                throw RangeError(\"punycode_overflow(3)\");\n            }\n            n += Math.floor( i / out ) ;\n            i %= out;\n\n            // Insert n at position i of the output: \n            // Case of last character determines uppercase flag: \n            if (preserveCase) { case_flags.splice(i, 0, input.charCodeAt(ic -1) -65 &lt; 26);}\n\n            output.splice(i, 0, n);\n            i++;\n        }\n        if (preserveCase) {\n            for (i = 0, len = output.length; i &lt; len; i++) {\n                if (case_flags[i]) {\n                    output[i] = (String.fromCharCode(output[i]).toUpperCase()).charCodeAt(0);\n                }\n            }\n        }\n        return this.utf16.encode(output);\n    };\n\n    //** Main encode function **\n\n    this.encode = function (input,preserveCase) {\n        //** Bias adaptation function **\n\n        var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;\n\n        if (preserveCase) {\n            // Preserve case, step1 of 2: Get a list of the unaltered string\n            case_flags = this.utf16.decode(input);\n        }\n        // Converts the input in UTF-16 to Unicode\n        input = this.utf16.decode(input.toLowerCase());\n\n        var input_length = input.length; // Cache the length\n\n        if (preserveCase) {\n            // Preserve case, step2 of 2: Modify the list to true/false\n            for (j=0; j &lt; input_length; j++) {\n                case_flags[j] = input[j] != case_flags[j];\n            }\n        }\n\n        var output=[];\n\n\n        // Initialize the state: \n        n = initial_n;\n        delta = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points: \n        for (j = 0; j &lt; input_length; ++j) {\n            if ( input[j] &lt; 0x80) {\n                output.push(\n                    String.fromCharCode(\n                        case_flags ? encode_basic(input[j], case_flags[j]) : input[j]\n                    )\n                );\n            }\n        }\n\n        h = b = output.length;\n\n        // h is the number of code points that have been handled, b is the\n        // number of basic code points \n\n        if (b &gt; 0) output.push(delimiter);\n\n        // Main encoding loop: \n        //\n        while (h &lt; input_length) {\n            // All non-basic code points &lt; n have been\n            // handled already. Find the next larger one: \n\n            for (m = maxint, j = 0; j &lt; input_length; ++j) {\n                ijv = input[j];\n                if (ijv &gt;= n &amp;&amp; ijv &lt; m) m = ijv;\n            }\n\n            // Increase delta enough to advance the decoder's\n            // &lt;n,i&gt; state to &lt;m,0&gt;, but guard against overflow: \n\n            if (m - n &gt; Math.floor((maxint - delta) / (h + 1))) {\n                throw RangeError(\"punycode_overflow (1)\");\n            }\n            delta += (m - n) * (h + 1);\n            n = m;\n\n            for (j = 0; j &lt; input_length; ++j) {\n                ijv = input[j];\n\n                if (ijv &lt; n ) {\n                    if (++delta &gt; maxint) return Error(\"punycode_overflow(2)\");\n                }\n\n                if (ijv == n) {\n                    // Represent delta as a generalized variable-length integer: \n                    for (q = delta, k = base; ; k += base) {\n                        t = k &lt;= bias ? tmin : k &gt;= bias + tmax ? tmax : k - bias;\n                        if (q &lt; t) break;\n                        output.push( String.fromCharCode(encode_digit(t + (q - t) % (base - t), 0)) );\n                        q = Math.floor( (q - t) / (base - t) );\n                    }\n                    output.push( String.fromCharCode(encode_digit(q, preserveCase &amp;&amp; case_flags[j] ? 1:0 )));\n                    bias = adapt(delta, h + 1, h == b);\n                    delta = 0;\n                    ++h;\n                }\n            }\n\n            ++delta, ++n;\n        }\n        return output.join(\"\");\n    }\n\n    this.ToASCII = function ( domain ) {\n        var domain_array = domain.split(\".\");\n        var out = [];\n        for (var i=0; i &lt; domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(\n                s.match(/[^A-Za-z0-9-]/) ?\n                \"xn--\" + punycode.encode(s) :\n                s\n            );\n        }\n        return out.join(\".\");\n    }\n    this.ToUnicode = function ( domain ) {\n        var domain_array = domain.split(\".\");\n        var out = [];\n        for (var i=0; i &lt; domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(\n                s.match(/^xn--/) ?\n                punycode.decode(s.slice(4)) :\n                s\n            );\n        }\n        return out.join(\".\");\n    }\n}();\n</code></pre>\n\n<p>Edited: Added the missing add and subtract of 0x10000 in the UTF-16 part.</p>\n\n<p>Update Licence:\nFrom RFC3492:</p>\n\n<blockquote>\n  <p>Disclaimer and license</p>\n  \n  <p>Regarding this entire document or\n  any portion of it (including the<br>\n  pseudocode and C code), the author\n  makes no guarantees and is not<br>\n  responsible for any damage resulting\n  from its use.  The author grants<br>\n  irrevocable permission to anyone to\n  use, modify, and distribute it in<br>\n  any way that does not diminish the\n  rights of anyone else to use,<br>\n  modify, and distribute it, provided\n  that redistributed derivative    works\n  do not contain misleading author or\n  version information.    Derivative\n  works need not be licensed under\n  similar terms.</p>\n</blockquote>\n\n<p>I put my work in this punycode and utf16 in the public domain. It would be nice to get an email telling me in what project you use it.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>I\u2019ve compared several Punycode implementations in different programming languages, and came up with a fully documented and unit-tested library that works in pretty much every JavaScript environment.</p>\n\n<p><strong><a href=\"https://github.com/bestiejs/punycode.js\">https://github.com/bestiejs/punycode.js</a></strong></p>\n\n<p>It\u2019s already been bundled with Node.js (will be part of the v0.6.2 release). Previous Node.js versions had a different Punycode library that wasn\u2019t fully compliant.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I found this the other day: <a href=\"http://0xcc.net/jsescape/\">http://0xcc.net/jsescape/</a> but the punycode conversion doesn't work if there's a dash in the middle.  For instance - I need to convert the punycode NIATO-OTABD to n\u00f1i\u00f1ato\u00f1.</p>\n\n<p>Any help much appreciated</p>\n",
            "last_activity_date": 1383033635,
            "question_id": 183485,
            "score": 11,
            "tags": [
                "javascript",
                "unicode",
                "punycode"
            ],
            "title": "Can anyone recommend a good, free javascript for punycode to Unicode conversion?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>the event itself doesn't exist as scroll is a single event fired everytime the user scrolls by a certain increment.</p>\n\n<p>What you can do however is emulate the event.</p>\n\n<p>Credit to James Padolsey for this, lifted from his webpage:.\nRead it here to fully understand the code and how it is implemented.</p>\n\n<p><a href=\"http://james.padolsey.com/javascript/special-scroll-events-for-jquery/\" rel=\"nofollow\">http://james.padolsey.com/javascript/special-scroll-events-for-jquery/</a></p>\n\n<blockquote>\n  <p>(function(){</p>\n\n<pre><code>var special = jQuery.event.special,\n    uid1 = 'D' + (+new Date()),\n    uid2 = 'D' + (+new Date() + 1);\n\nspecial.scrollstart = {\n    setup: function() {\n\n        var timer,\n            handler =  function(evt) {\n\n                var _self = this,\n                    _args = arguments;\n\n                if (timer) {\n                    clearTimeout(timer);\n                } else {\n                    evt.type = 'scrollstart';\n                    jQuery.event.handle.apply(_self, _args);\n                }\n\n                timer = setTimeout( function(){\n                    timer = null;\n                }, special.scrollstop.latency);\n\n            };\n\n        jQuery(this).bind('scroll', handler).data(uid1, handler);\n\n    },\n    teardown: function(){\n        jQuery(this).unbind( 'scroll', jQuery(this).data(uid1) );\n    }\n};\n\nspecial.scrollstop = {\n    latency: 300,\n    setup: function() {\n\n        var timer,\n                handler = function(evt) {\n\n                var _self = this,\n                    _args = arguments;\n\n                if (timer) {\n                    clearTimeout(timer);\n                }\n\n                timer = setTimeout( function(){\n\n                    timer = null;\n                    evt.type = 'scrollstop';\n                    jQuery.event.handle.apply(_self, _args);\n\n                }, special.scrollstop.latency);\n\n            };\n\n        jQuery(this).bind('scroll', handler).data(uid2, handler);\n\n    },\n    teardown: function() {\n        jQuery(this).unbind( 'scroll', jQuery(this).data(uid2) );\n    }\n};   })();\n</code></pre>\n</blockquote>\n\n<p>Probably worth noting that there are several questions related to yours, so this may be a possible duplication.\ne.g.\n<a href=\"http://stackoverflow.com/questions/4289473/javascript-do-an-action-after-user-is-done-scrolling\">Javascript: do an action after user is done scrolling</a>\n and <a href=\"http://stackoverflow.com/questions/8931605/fire-event-after-scrollling-scrollbars-or-mousewheel-javascript\">fire event after scrollling scrollbars or mousewheel javascript</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can verify if <code>window.scrollY == 0</code></p>\n\n<pre><code>$(window).scroll(function(){\n  if (window.scrollY == 0) {\n    //...\n  }\n});\n</code></pre>\n\n<p>But this event will be fired at every scroll.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$.fn.scrollStopped = function(callback) {\n    var $this = $(this), self = this;\n    $this.scroll(function(){\n        if ($this.data('scrollTimeout')) {\n          clearTimeout($this.data('scrollTimeout'));\n        }\n        $this.data('scrollTimeout', setTimeout(callback,250,self));\n    });\n};\n</code></pre>\n\n<p>What should happen is when the scrolling stops after 250 milliseconds about, it will fire the \"scrollStop\" event on that element. It basically is cancelling and setting a timeout again and again and once the scrolling actually stops, it ends up not cancelling the timeout.</p>\n\n<p><a href=\"http://jsfiddle.net/wtRrV/219/\" rel=\"nofollow\">http://jsfiddle.net/wtRrV/219/</a></p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>I prefer to be able to listen on a event. This is what I do:</p>\n\n<p>The jquery plugin:</p>\n\n<pre><code>+function(jQuery){\n        var scrollStopEventEmitter = function(element, jQuery) {\n            this.scrollTimeOut = false;\n            this.element       = element;\n            jQuery(element).on('scroll', $.proxy(this.onScroll, this));\n        }\n\n        scrollStopEventEmitter.prototype.onScroll = function() \n        {\n            if (this.scrollTimeOut != false) {\n              clearTimeout(this.scrollTimeOut);\n            }\n\n            var context = this;\n\n            this.scrollTimeOut = setTimeout(function(){ context.onScrollStop()}, 250);\n        }\n\n        scrollStopEventEmitter.prototype.onScrollStop = function() \n        {\n            this.element.trigger('scrollStop');\n        }\n\n        jQuery.fn.scrollStopEventEmitter = function(jQuery) {   \n            return new scrollStopEventEmitter(this, jQuery);\n        };\n\n    }($);\n</code></pre>\n\n<p>In this case, window will now trigger scrollStop event</p>\n\n<pre><code>$(window).scrollStopEventEmitter($);\n</code></pre>\n\n<p>Now I can listen on scrollStop</p>\n\n<pre><code>$(window).on('scrollStop',function(){\n        // code\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If i want to bind an event on page scrolling i can use <code>scroll();</code>.</p>\n\n<p>But how to fire when <code>scroll()</code> is ended up?</p>\n\n<p>I would like to reproduce this:</p>\n\n<pre><code>   $(window).scroll(function(){\n    //do somenthing\n    });\n\n    $(window).scrollSTOPPED(function(){  //--&gt; when i'm scrolling then i stop to scrolling (so NOT when page scrollbar is at the end top or bottom :)\n    //do somenthing else\n    });\n</code></pre>\n\n<p>any ideas?</p>\n",
            "last_activity_date": 1417621731,
            "question_id": 14035083,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "scroll"
            ],
            "title": "jQuery - bind event on Scroll Stop"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>An href does not have a load event you need to apply your stuff as the page itself loads e.g.</p>\n\n<pre><code>window.onload = function(){\n//code here\n\n}\n</code></pre>\n\n<p>use the function on this page: <a href=\"http://www.dustindiaz.com/top-ten-javascript/\" rel=\"nofollow\">http://www.dustindiaz.com/top-ten-javascript/</a></p>\n\n<p>to add the event the body element (in line would be )</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Even if you add an inline: </p>\n\n<pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"foo.css\" onload=\"alert('xxx')\"/&gt;\n</code></pre>\n\n<p>It won't fire in FireFox as there <a href=\"http://www.w3.org/TR/html4/struct/links.html#edef-LINK\" rel=\"nofollow\">isn't</a> an <code>onload</code> event for <code>link</code> elements. (It will work in IE)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For CSS stylesheets (not LINK elements in general) i'm using manual interval, by poking it's rules length. It works crossbrowser (AFAIT).</p>\n\n<pre><code>try {\n  if ( cssStylesheet.sheet &amp;&amp; cssStylesheet.sheet.cssRules.length &gt; 0 )\n    cssLoaded = 1;\n  else if ( cssStylesheet.styleSheet &amp;&amp; cssStylesheet.styleSheet.cssText.length &gt; 0 )\n    cssLoaded = 1;\n  else if ( cssStylesheet.innerHTML &amp;&amp; cssStylesheet.innerHTML.length &gt; 0 )\n    cssLoaded = 1;\n}\ncatch(ex){}\n</code></pre>\n\n<p>In code above, the cssStylesheet is DOMElement.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>All credit goes to Tobiasz up above, but here's a little expansion on what he said:</p>\n\n<pre><code>function _cssIsLoaded(cssStylesheet) {\n    var cssLoaded = 0;\n    try {\n        if ( cssStylesheet.sheet &amp;&amp; cssStylesheet.sheet.cssRules.length &gt; 0 )\n            cssLoaded = 1;\n        else if ( cssStylesheet.styleSheet &amp;&amp; cssStylesheet.styleSheet.cssText.length &gt; 0 )\n            cssLoaded = 1;\n        else if ( cssStylesheet.innerHTML &amp;&amp; cssStylesheet.innerHTML.length &gt; 0 )\n            cssLoaded = 1;\n        }\n        catch(ex){ }\n\n        if(cssLoaded) {\n            // your css is loaded! Do work!\n            // I'd recommend having listeners subscribe to cssLoaded event, \n            // and then here you can emit the event (ie. EventManager.emit('cssLoaded');\n        } else {\n            // I'm using underscore library, but setTimeout would work too\n            // You basically just need to call the function again in say, 50 ms\n            _.delay(_.bind(this._cssIsLoaded, this), 50, cssStylesheet);\n        }\n}\n</code></pre>\n\n<p>You'd call it with something like (using jquery): </p>\n\n<pre><code>var link = $(\"&lt;link&gt;\");\nlink.attr({\n    type: 'text/css',\n    rel: 'stylesheet',\n    href: sheet\n});\n\n$(\"head\").append(link);\n// link.get(0), because you want the actual element, not jQuery-wrapped element\nself._cssIsLoaded(link.get(0));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Nice shot Matt. I've created this helper with your comment. </p>\n\n<pre><code>var CSSload = function(link, callback) {\n    var cssLoaded = false;\n    try{\n        if ( link.sheet &amp;&amp; link.sheet.cssRules.length &gt; 0 ){\n            cssLoaded = true;\n        }else if ( link.styleSheet &amp;&amp; link.styleSheet.cssText.length &gt; 0 ){\n            cssLoaded = true;\n        }else if ( link.innerHTML &amp;&amp; link.innerHTML.length &gt; 0 ){\n            cssLoaded = true;\n        }\n    }\n    catch(ex){ }\n    if ( cssLoaded ){\n        callback();\n    }else{\n        setTimeout(function(){\n            CSSload(link);\n        }, 100);\n    }\n};\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var $link = $('&lt;link rel=\"stylesheet\" media=\"screen\" href=\"file.css\"/&gt;');\n$('head').append($link);\nCSSload($link.get(0), function(){\n  // do something onLoad\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's what is, in my opinion, a better solution for this issue that uses the IMG tag and its onerror event. This method will do the job without looping, doing contorted style observance, or loading files in iframes, etc. This solution fires correctly when the file is loads, and right away if the file is already cached (which is ironically better than how most DOM load events handle cached assets). Here's a post on my blog that explains the method - <a href=\"http://www.backalleycoder.com/2011/03/20/link-tag-css-stylesheet-load-event/\">Back Alley Coder post</a> - I just got tired of this not having a legit solution, enjoy! </p>\n\n<pre><code>var loadCSS = function(url, callback){\n    var link = document.createElement('link');\n        link.type = 'text/css';\n        link.rel = 'stylesheet';\n        link.href = url;\n\n    document.getElementsByTagName('head')[0].appendChild(link);\n\n    var img = document.createElement('img');\n        img.onerror = function(){\n            if(callback) callback(link);\n        }\n        img.src = url;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>The link.innerHTML, link.styleSheet and cssRules are all good approaches, but they do not work for stylesheets that belong to a domain outside of the origin domain (so cross-site stylesheet loading fails). This can be pretty unexpected when a subdomain vs a domain is used (www for example) or a static CNS is used. And its pretty annoying since  elements have no same-origin restriction.</p>\n\n<p>Here's a solution that that uses the onload method for browsers that support it (IE and Opera), but then uses a timed interval for browsers that do not and compares the ownerNode and owningElement nodes to check to see when the stylesheet has made its way into the DOM.</p>\n\n<p><a href=\"http://www.yearofmoo.com/2011/03/cross-browser-stylesheet-preloading.html\" rel=\"nofollow\">http://www.yearofmoo.com/2011/03/cross-browser-stylesheet-preloading.html</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This function has held up on all browsers as well as in both cross domain and same domain situations, also this handles the injection of javascripts as well as stylesheets.</p>\n\n<pre><code>function loadScript(src, type, callback_fn) {\n    var loaded = false, scrpt, img;\n    if(type === 'script') {\n        scrpt = document.createElement('script');\n        scrpt.setAttribute('type', 'text/javascript')\n        scrpt.setAttribute('src', src);\n\n    } else if(type === 'css') {\n        scrpt = document.createElement('link')\n        scrpt.setAttribute('rel', 'stylesheet')\n        scrpt.setAttribute('type', 'text/css')\n        scrpt.setAttribute('href', src);\n    }\n    document.getElementsByTagName('head')[0].appendChild(scrpt);\n\n    scrpt.onreadystatechange = function(){\n        if (this.readyState === 'complete' || this.readyState === 'loaded') {\n            if(loaded === false) {\n                callback_fn();\n            }\n            loaded = true;\n        }\n    };\n\n    scrpt.onload = function() {\n        if(loaded === false) {\n            callback_fn();\n        }\n        loaded = true;\n    };\n\n    img = document.createElement('img');\n    img.onerror = function(){\n        if(loaded === false) {\n            callback_fn();\n        }\n        loaded = true;\n    }\n    img.src = src;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>E.g. Android browser doesn't support \"onload\" / \"onreadystatechange\" events for  element: <a href=\"http://pieisgood.org/test/script-link-events/\" rel=\"nofollow\">http://pieisgood.org/test/script-link-events/</a><br>\nBut it returns:</p>\n\n<pre><code>\"onload\" in link === true\n</code></pre>\n\n<p>So, my solution is to detect Android browser from userAgent and then wait for some special css rule in your stylesheet (e.g., reset for \"body\" margins).<br>\nIf it's not Android browser and it supports \"onload\" event- we will use it:</p>\n\n<pre><code>var userAgent = navigator.userAgent,\n    iChromeBrowser = /CriOS|Chrome/.test(userAgent),\n    isAndroidBrowser = /Mozilla\\/5.0/.test(userAgent) &amp;&amp; /Android/.test(userAgent) &amp;&amp; /AppleWebKit/.test(userAgent) &amp;&amp; !iChromeBrowser; \n\naddCssLink('PATH/NAME.css', function(){\n    console.log('css is loaded');\n});\n\nfunction addCssLink(href, onload) {\n    var css = document.createElement(\"link\");\n    css.setAttribute(\"rel\", \"stylesheet\");\n    css.setAttribute(\"type\", \"text/css\");\n    css.setAttribute(\"href\", href);\n    document.head.appendChild(css);\n    if (onload) {\n        if (isAndroidBrowser || !(\"onload\" in css)) {\n            waitForCss({\n                success: onload\n            });\n        } else {\n            css.onload = onload;\n        }\n    }\n}\n\n// We will check for css reset for \"body\" element- if success-&gt; than css is loaded\nfunction waitForCss(params) {\n    var maxWaitTime = 1000,\n        stepTime = 50,\n        alreadyWaitedTime = 0;\n\n    function nextStep() {\n        var startTime = +new Date(),\n            endTime;\n\n        setTimeout(function () {\n            endTime = +new Date();\n            alreadyWaitedTime += (endTime - startTime);\n            if (alreadyWaitedTime &gt;= maxWaitTime) {\n                params.fail &amp;&amp; params.fail();\n            } else {\n                // check for style- if no- revoke timer\n                if (window.getComputedStyle(document.body).marginTop === '0px') {\n                    params.success();\n                } else {\n                    nextStep();\n                }\n            }\n        }, stepTime);\n    }\n\n    nextStep();\n}\n</code></pre>\n\n<p>Demo: <a href=\"http://codepen.io/malyw/pen/AuCtH\" rel=\"nofollow\">http://codepen.io/malyw/pen/AuCtH</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>i'm trying to attach an event handler to the load event of a link tag, to execute some code after a stylesheet has loaded.</p>\n\n<pre><code>new_element = document.createElement('link');\nnew_element.type = 'text/css';\nnew_element.rel = 'stylesheet';\nnew_element.href = 'http://domain.tld/file.css';\nnew_element.addEventListener('load', function() { alert('foo'); }, false);\ndocument.getElementsByTagName('head')[0].appendChild(new_element)\n</code></pre>\n\n<p>i have tried onreadystatechange as well</p>\n\n<pre><code>new_element.onreadystatechange = function() { alert('foo'); }\n</code></pre>\n\n<p>unfortunately neither approach results in an alert being triggered..\nFurthermore, new_element.onload is null after registering a handler for the 'load' event with addEventListener.. is that normal?</p>\n\n<p>thanks,\nandrew</p>\n\n<p>ps: i may not use any framework in solving this</p>\n",
            "last_activity_date": 1390298288,
            "question_id": 2635814,
            "score": 7,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "javascript: capturing load event on LINK"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I used some ideas from <a href=\"http://www.bennadel.com/blog/1856-Using-jQuery-s-Animate-Step-Callback-Function-To-Create-Custom-Animations.htm\">here</a> but integrated them with jQuery UI instead.  You'll have to implement logic to handle a momentum animation that pushes the element out-of-bounds (outside it's parent container's boundaries)</p>\n\n<p>The resulting code:</p>\n\n<pre><code>$(function() {\n    var $d = $(\"#draggable\");\n\n    var x1, x2,\n        y1, y2,\n        t1, t2;  // Time\n\n    var minDistance = 40; // Minimum px distance object must be dragged to enable momentum.\n\n    var onMouseMove = function(e) {\n        var mouseEvents = $d.data(\"mouseEvents\");\n        if (e.timeStamp - mouseEvents[mouseEvents.length-1].timeStamp > 40) {\n            mouseEvents.push(e);\n            if (mouseEvents.length > 2) {\n                mouseEvents.shift();\n            }\n        }\n    }\n\n    var onMouseUp = function() {\n        $(document).unbind(\"mousemove mouseup\");\n    }\n\n    $d.draggable({\n        start: function(e, ui) {\n            $d.data(\"mouseEvents\", [e]);\n            $(document)\n                .mousemove(onMouseMove)\n                .mouseup(onMouseUp);\n        },\n        stop: function(e, ui) {\n            $d.stop();\n            $d.css(\"text-indent\", 100);\n\n            var lastE = $d.data(\"mouseEvents\").shift();\n\n            x1 = lastE.pageX;\n            y1 = lastE.pageY;\n            t1 = lastE.timeStamp;\n            x2 = e.pageX;\n            y2 = e.pageY;\n            t2 = e.timeStamp;\n\n            // Deltas\n            var dX = x2 - x1,\n                dY = y2 - y1,\n                dMs = Math.max(t2 - t1, 1);\n\n            // Speeds\n            var speedX = Math.max(Math.min(dX/dMs, 1), -1),\n                speedY = Math.max(Math.min(dY/dMs, 1), -1);\n\n            // Distance moved (Euclidean distance)\n            var distance = Math.sqrt(Math.pow(x1-x2, 2) + Math.pow(y1-y2, 2));\n\n            if (distance > minDistance) {\n                // Momentum\n                var lastStepTime = new Date();\n                $d.animate({ textIndent: 0 }, {\n                    duration: Math.max(Math.abs(speedX), Math.abs(speedY)) * 2000,\n                    step: function(currentStep){\n                        speedX *= (currentStep / 100);\n                        speedY *= (currentStep / 100);\n\n                        var now = new Date();\n                        var stepDuration = now.getTime() - lastStepTime.getTime();\n\n                        lastStepTime = now;\n\n                        var position = $d.position();\n\n                        var newLeft = (position.left + (speedX * stepDuration / 4)),\n                            newTop = (position.top + (speedY * stepDuration / 4));\n\n                        $d.css({\n                            left: newLeft+\"px\",\n                            top: newTop+\"px\"\n                        });\n                    }\n                });\n            }\n        }\n    });\n});</code></pre>\n\n<p><a href=\"http://jsfiddle.net/529KH/\">Try it out</a></p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>The work <a href=\"http://stackoverflow.com/users/516365/simshaun\">simshaun</a> did on this is fantastic.  </p>\n\n<p>I messed with his version and got a bit smoother animation with the <a href=\"http://gsgd.co.uk/sandbox/jquery/easing/\">jquery.easing</a> plugin.<br>\nTry it out on <a href=\"http://jsfiddle.net/mattsahr/LnuaD/\">jsfiddle</a>.</p>\n\n<pre><code>$(document).ready(function() {\n    $('#dragme').draggable({\n        start: function(e, ui) {\n            dragMomentum.start(this.id, e.clientX, e.clientY, e.timeStamp);\n         },\n        stop: function(e, ui) {\n            dragMomentum.end(this.id, e.clientX, e.clientY, e.timeStamp);\n        }  \n     });\n});\n\nvar dragMomentum = new function () {    \n    var howMuch = 30;  // change this for greater or lesser momentum\n    var minDrift = 6; // minimum drift after a drag move\n    var easeType = 'easeOutBack';\n\n    //  This easing type requires the plugin:  \n    //  jquery.easing.1.3.js  http://gsgd.co.uk/sandbox/jquery/easing/\n\n    var dXa =[0];\n    var dYa =[0];\n    var dTa =[0];\n\n    this.start = function (elemId, Xa, Ya, Ta)  {\n          dXa[elemId] = Xa;\n        dYa[elemId] = Ya;\n        dTa[elemId] = Ta;\n\n      }; // END dragmomentum.start()\n\n    this.end = function (elemId, Xb, Yb, Tb)  {        \n        var Xa = dXa[elemId];\n        var Ya = dYa[elemId];\n        var Ta = dTa[elemId];\n        var Xc = 0;\n        var Yc = 0;\n\n        var dDist = Math.sqrt(Math.pow(Xa-Xb, 2) + Math.pow(Ya-Yb, 2));\n        var dTime = Tb - Ta;\n        var dSpeed = dDist / dTime;\n        dSpeed=Math.round(dSpeed*100)/100;\n\n        var distX =  Math.abs(Xa - Xb);\n        var distY =  Math.abs(Ya - Yb);\n\n        var dVelX = (minDrift+(Math.round(distX*dSpeed*howMuch / (distX+distY))));\n        var dVelY = (minDrift+(Math.round(distY*dSpeed*howMuch / (distX+distY))));\n\n        var position = $('#'+elemId).position();\n        var locX = position.left;\n        var locY = position.top;\n\n        if ( Xa > Xb ){  // we are moving left\n            Xc = locX - dVelX;\n        } else {  //  we are moving right\n            Xc = locX + dVelX;\n        }\n\n        if ( Ya > Yb ){  // we are moving up\n            Yc = (locY - dVelY);\n        } else {  // we are moving down\n            Yc = (locY + dVelY);\n        }\n\n        var newLocX = Xc + 'px';\n        var newLocY = Yc + 'px';\n\n        $('#'+elemId).animate({ left:newLocX, top:newLocY }, 700, easeType );\n\n    }; // END  dragmomentum.end()\n\n};  // END dragMomentum()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>How do you enable easing or inertia when dragging an element using jquery ui draggable (http://jqueryui.com/demos/draggable/)?  I'd like to recreate the easing similar to maps.google.com that as you throw/drag the map it eases into place.  Ideally, I'd like to move the element move based on the force you throw/drag the element.  How do you accomplish this functionality?  Maybe jquery ui draggable isn't necessary, but I'm looking to emulate the dragging and easing found on Google Maps.</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1302555491,
            "question_id": 4443526,
            "score": 5,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "google-maps",
                "draggable"
            ],
            "title": "jquery ui drag easing/inertia"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Well it can't really cause problems, it's just giving you advice. Take it or leave it. That said, I'm not sure how clever it is. There may well be contexts in which it doesn't present it as an issue.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Keep in mind that JSLint enforces one persons idea of what good JavaScript should be. You still have to use common sense when implementing the changes it suggests.</p>\n\n<p>In general, comparing type and value will make your code safer (you will not run into the unexpected behavior when type conversion doesn't do what you think it should).</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>A quote from <a href=\"http://javascript.crockford.com/code.html\">http://javascript.crockford.com/code.html</a>:</p>\n\n<blockquote>\n  <p>=== and !== Operators.</p>\n  \n  <p>It is almost always better to use the\n  === and !== operators. The == and != operators do type coercion. In\n  particular, do not use == to compare\n  against falsy values.</p>\n</blockquote>\n\n<p>JSLint is very strict, their 'webjslint.js' does not even pass their own validation.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>JSLint is inherently more defensive than the Javascript syntax allows for.</p>\n\n<p>From the JSLint documentation:</p>\n\n<blockquote>\n  <p>The <code>==</code> and <code>!=</code> operators do type coercion before comparing. This is bad because it causes <code>' \\t\\r\\n' == 0</code> to be true. This can mask type errors.</p>\n  \n  <p>When comparing to any of the following values, use the <code>===</code> or <code>!==</code> operators (which do not do type coercion): <code>0 '' undefined null false true</code></p>\n  \n  <p>If you only care that a value is <em>truthy</em> or <em>falsy</em>, then use the short form. Instead of</p>\n  \n  <p><code>(foo != 0)</code></p>\n  \n  <p>just say</p>\n  \n  <p><code>(foo)</code></p>\n  \n  <p>and instead of</p>\n  \n  <p><code>(foo == 0)</code></p>\n  \n  <p>say</p>\n  \n  <p><code>(!foo)</code></p>\n  \n  <p>The <code>===</code> and <code>!==</code> operators are preferred.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>IMO, blindly using <code>===</code>, without trying to <strong>understand</strong> how <em>type conversion</em> works doesn't make much sense.</p>\n\n<p>The primary <em>fear</em> about the Equals operator <code>==</code> is that the comparison rules depending on the types compared can make the operator non-transitive, for example, if:</p>\n\n<pre><code>A == B AND\nB == C\n</code></pre>\n\n<p>Doesn't really guarantees that:</p>\n\n<pre><code>A == C\n</code></pre>\n\n<p>For example:</p>\n\n<pre><code>'0' == 0;   // true\n 0  == '';  // true\n'0' == '';  // false\n</code></pre>\n\n<p>The Strict Equals operator <code>===</code> is not really necessary when you compare values of the same type, the most common example:</p>\n\n<pre><code>if (typeof foo == \"function\") {\n  //..\n}\n</code></pre>\n\n<p>We compare the result of the <code>typeof</code> operator, which <strong>is always</strong> a <em>string</em>, with a <em>string</em> literal...</p>\n\n<p>Or when you know the type coercion rules, for example, check if something is <code>null</code> or <code>undefined</code>something:</p>\n\n<pre><code>if (foo == null) {\n  // foo is null or undefined\n}\n\n// Vs. the following non-sense version:\n\nif (foo === null || typeof foo === \"undefined\") {\n  // foo is null or undefined\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 68
                },
                {
                    "body": "<p>Triple-equal is different to double-equal because in addition to checking whether the two sides are the same value, triple-equal also checks that they are the same data type.</p>\n\n<p>So <code>(\"4\" == 4)</code> is true, whereas <code>(\"4\" === 4)</code> is false.</p>\n\n<p>Triple-equal also runs slightly quicker, because JavaScript doesn't have to waste time doing any type conversions prior to giving you the answer.</p>\n\n<p>JSLint is deliberately aimed at making your JavaScript code as strict as possible, with the aim of reducing obscure bugs. It highlights this sort of thing to try to get you to code in a way that forces you to respect data types.</p>\n\n<p>But the good thing about JSLint is that it is just a guide. As they say on the site, it will hurt your feelings, even if you're a very good JavaScript programmer. But you shouldn't feel obliged to follow its advice. If you've read what it has to say and you understand it, but you are sure your code isn't going to break, then there's no compulsion on you to change anything.</p>\n\n<p>You can even tell JSLint to ignore categories of checks if you don't want to be bombarded with warnings that you're not going to do anything about.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>To help explain this question and also explain why NetBeans (from) 7.3 has started showing this warning this is an extract from the response on the NetBeans bug tracker when someone reported this as a bug:</p>\n\n<p>It is good practice to use === rather than == in JavaScript.</p>\n\n<blockquote>\n  <p>The == and != operators do type coercion before comparing. This is bad because\n  it causes ' \\t\\r\\n' == 0 to be true. This can mask type errors. JSLint cannot\n  reliably determine if == is being used correctly, so it is best to not use ==\n  and != at all and to always use the more reliable === and !== operators\n  instead.</p>\n</blockquote>\n\n<p><a href=\"http://netbeans.org/bugzilla/show_bug.cgi?id=218091\" rel=\"nofollow\">Reference</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Recently I was running some of my code through JSLint when I came up with this error. The thing I think is funny about this error though is that it automatically assumes that all == should be ===. </p>\n\n<p>Does that really make any sense? I could see a lot of instances that you would not want to compare type, and I am worried that this could actually cause problems.</p>\n\n<p>The word \"Expected\" would imply that this should be done EVERY time.....That is what does not make sense to me.</p>\n",
            "last_activity_date": 1425484013,
            "question_id": 3735939,
            "score": 46,
            "tags": [
                "javascript",
                "jslint"
            ],
            "title": "JSLint Expected &#39;===&#39; and instead saw &#39;==&#39;"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>See <a href=\"http://sonspring.com/journal/jquery-iframe-sizing\">this</a> blog post. It uses jQuery, but it should help you even if you are not using it.</p>\n\n<p>Basically you add this to your <code>document.ready()</code></p>\n\n<pre><code>$('iframe').load(function() {\n    RunAfterIFrameLoaded();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<blockquote>\n  <p>to detect when the iframe has loaded and its document is ready?</p>\n</blockquote>\n\n<p>It's ideal if you can get the iframe to tell you itself from a script inside the frame. For example it could call a parent function directly to tell it it's ready. Care is always required with cross-frame code execution as things can happen in an order you don't expect. Another alternative is to set \u2018var isready= true;\u2019 in its own scope, and have the parent script sniff for \u2018contentWindow.isready\u2019 (and add the onload handler if not).</p>\n\n<p>If for some reason it's not practical to have the iframe document co-operate, you've got the traditional load-race problem, namely that even if the elements are right next to each other:</p>\n\n<pre><code>&lt;img id=\"x\" ... /&gt;\n&lt;script type=\"text/javascript\"&gt;\n    document.getElementById('x').onload= function() {\n        ...\n    };\n&lt;/script&gt;\n</code></pre>\n\n<p>there is no guarantee that the item won't already have loaded by the time the script executes.</p>\n\n<p>The ways out of load-races are:</p>\n\n<ol>\n<li><p>on IE, you can use the \u2018readyState\u2019 property to see if something's already loaded;</p></li>\n<li><p>if having the item available only with JavaScript enabled is acceptable, you can create it dynamically, setting the \u2018onload\u2019 event function before setting source and appending to the page. In this case it cannot be loaded before the callback is set;</p></li>\n<li><p>the old-school way of including it in the markup:</p>\n\n<p><code>&lt;img onload=\"callback(this)\" ... /&gt;</code></p></li>\n</ol>\n\n<p>Inline \u2018onsomething\u2019 handlers in HTML are almost always the wrong thing and to be avoided, but in this case sometimes it's the least bad option.</p>\n",
                    "is_accepted": true,
                    "score": 29
                }
            ],
            "body": "<p>I'm trying to detect when an iframe and its content have loaded but not having much luck. My application takes some input in text fields in the parent window and updates the iframe to provide a 'live preview'</p>\n\n<p>I started with the following code (YUI) to detect when the iframe load event occurs.</p>\n\n<pre><code>$E.on('preview-pane', 'load', function(){\n    previewBody = $('preview-pane').contentWindow.document.getElementsByTagName('body')[0];\n}\n</code></pre>\n\n<p>'preview-pane' is the ID of my iframe and I'm using YUI to attach the event handler. However, trying to access the body in my callback (upon iframe load) fails, I think because the iframe loads before the event handler is ready. This code works if I delay the iframe loading by making the php script that generates it sleep.</p>\n\n<p>Basically, I'm asking what is the correct approach across browsers to detect when the iframe has loaded and its document is ready?</p>\n",
            "last_activity_date": 1426043782,
            "question_id": 751435,
            "score": 41,
            "tags": [
                "javascript",
                "events",
                "cross-browser"
            ],
            "title": "Detecting when Iframe content has loaded (Cross browser)"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>In global scope the two are in fact equivalent functionality-wise. In function scope, <code>var</code> is certainly preferable when the behaviour of closures is desired.</p>\n\n<p>I would just use <code>var</code> all of the time: firstly, it's consistent with the usually preferred behaviour in closures (so it's easier to move your code into a closure if you decide to do so later), and secondly, it just feels more semantic to me to say that I'm creating a variable than attaching a property of the window. But it's mostly style at this point.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>In addition to other answers, worth noting is that if you don't use <code>var</code> inside a function while declaring a variable, it <em>leaks</em> into global scope automatically making it a property of <code>window</code> object (or global scope).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I would suggest creating a namespace variable <code>var App = {};</code></p>\n\n<pre><code>App.myGrid = ...\n</code></pre>\n\n<p>That way you can limit the pollution of the global namespace.</p>\n\n<p>EDIT: Regarding the number of variables issue - 2 possible solutions come to mind:</p>\n\n<ol>\n<li>You can further namespace them by type(Grids, Buttons, etc) or by relationship(ClientInfoSection, AddressSection, etc)</li>\n<li>You encapsulate your methods in objects that get instantiated with the components you have</li>\n</ol>\n\n<p>ex: you have</p>\n\n<pre><code>function foo() {\n    myCombo.someMethod();\n    myGrid.someMethod();\n}\n</code></pre>\n\n<p>becomes:</p>\n\n<pre><code>var Foo = function(combo, grid) {\n    var myCombo = combo;//will be a private property\n    this.myGrid = grid;//will be a public property\n    this.foo = function() {//public method\n        myCombo.someMethod();\n        myGrid.someMethod();\n    }\n}\nApp.myFoo = new Foo(someCombo, someGrid);\nApp.myFoo.foo();\n</code></pre>\n\n<p>this way you limit the amount of little objects and only expose what you need (namely the foo function)</p>\n\n<p>PS: if you need to expose the internal components then add them to this inside the constructor function</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>The general answer to the question would be to use <code>var</code>.</p>\n\n<p>More specifically, always put your code in an <a href=\"http://benalman.com/news/2010/11/immediately-invoked-function-expression/\" rel=\"nofollow\">Immediately Invoked Function Expression (IIFE)</a>:</p>\n\n<pre><code>(function(){\n  var foo,\n      bar;\n  ...code...\n})();\n</code></pre>\n\n<p>This keeps variables like <code>foo</code> and <code>bar</code> from polluting the global namespace. Then, when you explicitly <em>want</em> a variable to be on the global object (typically <code>window</code>) you can write:</p>\n\n<pre><code>window.foo = foo;\n</code></pre>\n\n<p>JavaScript has functional scope, and it's really good to take full advantage of it. You wouldn't want your app to break just because some other programmer did something silly like overwrote your timer handle.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A potentially important difference in functionality is that <code>window.myGrid</code> can be <code>delete</code>d, and <code>var myGrid</code> can not.</p>\n\n<pre><code>var test1 = 'value';\nwindow.test2 = 'value';\n\n\nconsole.log( delete window.test1 ); // false ( was not deleted )\nconsole.log( delete window.test2 ); // true  ( was deleted )\n\n\nconsole.log( test1 );  // 'value'         ( still accessible )\nconsole.log( test2 );  // ReferenceError  ( no longer exists )\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>One nice use of window.variable is that you can check it without having a javascript error. For example, if you have:</p>\n\n<pre><code>if(myVar){\n//do work\n}\n</code></pre>\n\n<p>and myVar is not defined anywhere on the page, you will get a javascript error. However:</p>\n\n<pre><code>if(window.myVar){\n//do work\n}\n</code></pre>\n\n<p>gives no error, and works as one would expect.</p>\n\n<p>var myVar = 'test';\nand\nwindow.myVar = 'test';</p>\n\n<p>are roughly equivalent.</p>\n\n<p>Aside from that, as other said, you should descend from one global object to avoid polluting the global namespace.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>To expand on what Liviu said, use: </p>\n\n<pre><code>App = (function() {\n    var exports = {};\n    /* code goes here, attach to exports to create Public API */\n    return exports; \n})();\n</code></pre>\n\n<p>By doing that you can hide some of your implementation specific code, which you may not want exposed by using <code>var</code>'s inside.  However, you can access anything attached to the <code>exports</code> object.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>We have a lot of setup JS code that defines panels, buttons, etc that will be used in many other JS files.</p>\n\n<p>Typically, we do something like:</p>\n\n<p><strong>grid.js</strong></p>\n\n<pre><code>var myGrid = .....\n</code></pre>\n\n<p><strong>combos.js</strong></p>\n\n<pre><code>var myCombo = .....\n</code></pre>\n\n<p>Then, in our application code, we:</p>\n\n<p><strong>application.js</strong></p>\n\n<pre><code>function blah() {\n    myGrid.someMethod()\n}\n</code></pre>\n\n<p><strong>someother.js</strong></p>\n\n<pre><code>function foo() {\n    myCombo.someMethod();\n    myGrid.someMethod();\n}\n</code></pre>\n\n<p>So, should we be using the <code>var myGrid</code> or is better to use <code>window.myGrid</code></p>\n\n<p>What's the difference?</p>\n",
            "last_activity_date": 1363180382,
            "question_id": 6904166,
            "score": 35,
            "tags": [
                "javascript",
                "global-variables"
            ],
            "title": "Should I use window.variable or var?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You will need to pad with \"0\" if its a single digit &amp; note <code>getMonth</code> returns 0..11 not 1..12</p>\n\n<pre><code>function printDate() {\n    var temp = new Date();\n    var dateStr = padStr(temp.getFullYear()) +\n                  padStr(1 + temp.getMonth()) +\n                  padStr(temp.getDate()) +\n                  padStr(temp.getHours()) +\n                  padStr(temp.getMinutes()) +\n                  padStr(temp.getSeconds());\n    debug (dateStr );\n}\n\nfunction padStr(i) {\n    return (i &lt; 10) ? \"0\" + i : \"\" + i;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>Relying on <a href=\"http://docs.jquery.com/UI/Datepicker/formatDate\">JQuery Datepicker</a>, but it could be done easily:</p>\n\n<pre><code>var mydate = new Date();\n$.datepicker.formatDate('yy-mm-dd', mydate);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>use this polyfill <a href=\"https://github.com/UziTech/js-date-format\" rel=\"nofollow\">https://github.com/UziTech/js-date-format</a></p>\n\n<pre><code>var d = new Date(\"1/1/2014 10:00 am\");\nd.format(\"DDDD 'the' DS 'of' MMMM YYYY h:mm TT\");\n//output: Wednesday the 1st of January 2014 10:00 AM\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Here is what I need to do. </p>\n\n<p>Get Date, convert to string and pass it over to a third party utility. \nThe response from the library will have date in string format as I passed it. So, I need to convert the date to string like 20110506105524 (YYYYMMDDHHMMSS)</p>\n\n<pre><code>function printDate() {\n    var temp = new Date();\n    var dateStr = temp.getFullYear().toString() + \n                  temp.getMonth().toString() + \n                  temp.getDate().toString() +\n                  temp.getHours().toString() + \n                  temp.getMinutes().toString() + \n                  temp.getSeconds().toString();\n\n    debug (dateStr );\n}\n</code></pre>\n\n<p>The problem with above is that for months 1-9, it prints one digit. How can I change it to print exactly 2 digits for month, date ...</p>\n",
            "last_activity_date": 1399910283,
            "question_id": 5914020,
            "score": 35,
            "tags": [
                "javascript",
                "string",
                "date"
            ],
            "title": "javascript date to string"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>var arr = new Array();\nvar x= ... get your nodes;\n\nfor (i=0;i&lt;x.length;i++)\n{\n  if (x.item(i).nodeType==1)\n  {\n    arr.push(x.item(i));\n  }\n}\n</code></pre>\n\n<p>This should work, cross browser and get you all the \"element\" nodes.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>NodeLists are <em><a href=\"http://jibbering.com/faq/#hostObject\">host objects</a></em>, using the <a href=\"http://bclary.com/2004/11/07/#a-15.4.4.10\"><code>Array.prototype.slice</code></a> method on host objects is not guaranteed to work, the ECMAScript Specification states: </p>\n\n<blockquote>\n  <p>Whether the slice function can be applied successfully to a host object is implementation-dependent.</p>\n</blockquote>\n\n<p>I would recommend you to make a simple function to iterate over the <code>NodeList</code> and add each \nexisting element to an array:</p>\n\n<pre><code>function toArray(obj) {\n  var array = [];\n  // iterate backwards ensuring that length is an UInt32\n  for (var i = obj.length &gt;&gt;&gt; 0; i--;) { \n    array[i] = obj[i];\n  }\n  return array;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>While it is not really a proper shim, since there is no spec requiring working with DOM elements, I've made one to allow you to use <code>slice()</code> in this manner: <a href=\"https://gist.github.com/brettz9/6093105\" rel=\"nofollow\">https://gist.github.com/brettz9/6093105</a></p>\n\n<p><strong>UPDATE</strong>: When I raised this with the editor of the DOM4 spec (asking whether they might add their own restrictions to host objects (so that the spec would require implementers to properly convert these objects when used with array methods) beyond the ECMAScript spec which had allowed for implementation-independence), he replied that \"Host objects are more or less obsolete per ES6 / IDL.\" I see per <a href=\"http://www.w3.org/TR/WebIDL/#es-array\" rel=\"nofollow\">http://www.w3.org/TR/WebIDL/#es-array</a> that specs can use this IDL to define \"platform array objects\" but <a href=\"http://www.w3.org/TR/domcore/\" rel=\"nofollow\">http://www.w3.org/TR/domcore/</a> doesn't seem to be using the new IDL for <code>HTMLCollection</code> (though it looks like it might be doing so for <code>Element.attributes</code> though it only explicitly states it is using WebIDL for DOMString and DOMTimeStamp). I do see <code>[ArrayClass]</code> (which inherits from Array.prototype) is used for <code>NodeList</code> (and <code>NamedNodeMap</code> is now deprecated in favor of the only item that would still be using it, <code>Element.attributes</code>). In any case, it looks like it is to become standard. The ES6 <code>Array.from</code> might also be more convenient for such conversions than having to specify <code>Array.prototype.slice</code> and more semantically clear than <code>[].slice()</code> (and the shorter form, <code>Array.slice()</code> (an \"array generic\"), has, as far as I know, not become standard behavior).</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a Javascript function that accepts a list of HTML nodes, but it expects a Javascript array (it runs some Array methods on that) and I want to feed it the output of <code>Document.getElementsByTagName</code> that returns a DOM node list.</p>\n\n<p>Initially I thought of using something simple like:</p>\n\n<pre><code>Array.prototype.slice.call(list,0)\n</code></pre>\n\n<p>And that works fine in all browsers, except of course Internet Explorer which returns the error \"JScript object expected\", as apparently the DOM node list returned by <code>Document.getElement*</code> methods is not a JScript object enough to be the target of a function call.</p>\n\n<p>Caveats: I don't mind writing Internet Explorer specific code, but I'm not allowed to use any Javascript libraries such as JQuery because I'm writing a widget to be embedded into 3rd party web site, and I cannot load external libraries that will create conflict for the clients.</p>\n\n<p>My last ditch effort is to iterate over the DOM node list and create an array myself, but is there a nicer way to do that?</p>\n",
            "last_activity_date": 1376521755,
            "question_id": 2735067,
            "score": 29,
            "tags": [
                "javascript",
                "html",
                "dom"
            ],
            "title": "How to convert a DOM node list to an array in Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>A lookahead (that <code>(?=</code> part) does not consume any input. It is a <em>zero-width assertion</em> (as are boundary checks and lookbehinds).</p>\n\n<p>You want a regular match here, to consume the <code>cow</code> portion. To capture the portion in between, you use a capturing group (just put the portion of pattern you want to capture inside parenthesis):</p>\n\n\n\n<pre class=\"lang-regex prettyprint-override\"><code>cow(.*)milk\n</code></pre>\n\n<p>No lookaheads are needed at all.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<ul>\n<li>You need capture the <code>.*</code></li>\n<li>You can (but don't have to) make the <code>.*</code> nongreedy</li>\n<li><p>There's really no need for the lookahead.</p>\n\n<pre><code>&gt; /cow(.*?)milk/i.exec('My cow always gives milk');\n[\"cow always gives milk\", \" always gives \"]\n</code></pre></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here's a regex which will grab what's between cow and milk (without leading/trailing space):</p>\n\n<pre><code>srctext = \"My cow always gives milk.\";\nvar re = /(.*cow\\s+)(.*)(\\s+milk.*)/;\nvar newtext = srctext.replace(re, \"$2\");\n</code></pre>\n\n<p>An example: <a href=\"http://jsfiddle.net/entropo/tkP74/\">http://jsfiddle.net/entropo/tkP74/</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I have found very similar posts but I can't quite get my regular expression right here.</p>\n\n<p>I am trying to write a regular expression which returns a string which is between two other strings. For example: I want to get the string which resides between the strings \"cow\" and \"milk\"</p>\n\n<blockquote>\n  <p>My cow always gives milk</p>\n</blockquote>\n\n<p>would return</p>\n\n<blockquote>\n  <p>\"always gives\"</p>\n</blockquote>\n\n<p>Here is the expression I have pieced together so far:</p>\n\n<pre><code>(?=cow).*(?=milk)\n</code></pre>\n\n<p>However this returns the string \"cow always gives\"</p>\n\n<p>Thanks,</p>\n\n<p>Phillip</p>\n\n<p>***Edit 04/13/2011\nThanks For your responses.  I was able to get what I needed using Martinho Fernandes' solution below.  The exact code is:</p>\n\n<pre><code>var test = \"My cow always gives milk\";\n\nvar testRE = test.match(\"cow(.*)milk\");\nalert(testRE[1]);\n</code></pre>\n\n<p>You'll notice that I am alerting the testRE variable as an array.  This is because testRE is returning as an array, for some reason.  The output from:</p>\n\n<blockquote>\n  <p>My cow always gives milk</p>\n</blockquote>\n\n<p>Changes into:</p>\n\n<blockquote>\n  <p>always gives</p>\n</blockquote>\n\n<p>Thanks again, hope this is helpful.</p>\n\n<p>-Phillip</p>\n",
            "last_activity_date": 1385623348,
            "question_id": 5642315,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "regex",
                "string"
            ],
            "title": "Regular Expression to get a string between two strings in Javascript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You pretty much answered your own question. If you want to <strong>really</strong> make it harder for users to cheat, send game log to the server, where you'll calculate the score.</p>\n\n<p>You don't have to send <strong>all</strong> the events, just ones that affect result score.</p>\n\n<p>There are some techniques, though, that may help you:</p>\n\n<ul>\n<li><p>include signature in your request. Something like MD5(secret_key + params). Although, \"secret key\" will have to be in JS source, it will effectively protect you from simple request interception (see <a href=\"https://addons.mozilla.org/en-US/firefox/addon/tamper-data/?src=search\" rel=\"nofollow\">Tamper Data</a> and <a href=\"http://charlesproxy.com\" rel=\"nofollow\">Charles</a>)</p></li>\n<li><p>if it's a multiplayer game, accept scores calculated by clients and compare them. Cheaters will be pretty visible (assuming that the majority of users are honest).</p></li>\n<li><p>you can set a score cap, an \"unreachable\" result. Everyone who posts score higher than this is a cheater. For example, speed typing game: no one can type correct text at 1500 chars/minute, even 700 is pretty damn hard (though achievable).</p></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>I like to play cheat the cheater - something like using a token to authenticate the score that changes every time the update is called... but I accept the cheat score that gets posted using a duplicate token. Then I display that cheat score to only the cheater, so it appears that it worked, but now the cheater is seeing his results in a sandbox.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>On score submit:</p>\n\n<ol>\n<li>Request some token from the server, this should be time based and only valid for about 2 seconds</li>\n<li>Only accept submits that include a valid hash of this token, some salt and the score.</li>\n</ol>\n\n<p>This prevents manual tampering with the request as it would timeout the score. If you want to account for high-latency give it a little more time until the timeout.</p>\n\n<p>The hashing function:</p>\n\n<p>Scramble the hashing function inside packed code (http://dean.edwards.name/packer/ really produces nasty to read code) if you use jQuery or some other library just drop the hashing functionality inside the library file and it gets pretty bad to find, escpecially if you use a function name like \"h\" :)</p>\n\n<p>Handling the score-variable itself:</p>\n\n<p>Well everybody with a debugging console can change the variable on runtime when doing this but if you encapsulate your whole Javascript inside a function and call it nothing is in the global namespace and it's much harder to get to the variables:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>(function() {\n  //your js code here\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Depending on the nature of the game, you could use other players to verify the results. In simple games this works great, on others you have to be clever and develop many aspects around this feature. E.g. sometimes is possible to replay and verify results based on logged actions. This trick works specially well for Human versus AI, as long as the model is deterministic.</p>\n\n<p>Another option is redefining the score concept to be more user-centric, this is pretty easy to implement, but tends to be hard to devise, and only applies to a few categories of games.</p>\n\n<p>Purely speculative approaches are also possible, it's sometimes pretty easy to know when some parameters don't fit. It would not avoid cheating, but would moderate it a lot.</p>\n\n<p>The most complicated part is getting a small enough replay log, but since most data isn't random (except for player actions, which, actually aren't that random because depend on the game) it's essentially a matter of getting the design right.</p>\n\n<p>Also, if gameplay is extended enough, for action games and the like you can get a lot of compression from doing some approximation, merging (e.g. motion vectors), and clipping uninteresting stuff.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have had lots of thoughts about it and, eventually, decided to only have <strong>local individual highscores</strong>, so cheating is not really beneficial for player and not harmful to others. Yet my game is just a simple <a href=\"http://vesna.in.ua/minesweeper/\" rel=\"nofollow\">minesweeper</a>, and there were people who complained about the lack of competitive table.</p>\n\n<p>Option 2, is approach taken by <a href=\"http://www.websudoku.com/\" rel=\"nofollow\">WebSudoku</a> - to show your place \"among the people of internet\". So you will not see any other results, and people wont see your results - but you can compare yourself to crowd.</p>\n\n<p>p.s: And seriously - any kid with Firebug/WebInspector can easily hack your JS game and, eventually, to be able to reach very high score.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Ideally you would send your entire event log to the server for checking. Perhaps you can implement a heuristic so you can easily determine if the score is within a set of bounds. For instance, if the total game time is 5 seconds you might expect a much lower score than with a much longer game time.</p>\n\n<p>Alternatively, you could choose to manually check the event log for really high scores (the overall top-X, which should be fairly stable).</p>\n\n<p>You will need a seeded random number generator if you're doing anything with randomness (like random events). Which might be tricky if you hadn't already thought of it.</p>\n\n<hr>\n\n<p>You can find many more resources but it really just boils down to server-side checking. JavaScript is not unique in this, but likely easiest to exploit because you not only see the client-server communication but also the client-side source code!</p>\n\n<p><a href=\"http://stackoverflow.com/questions/2978976/html5-multiplayer-game-security-solutions\">HTML5 Multiplayer Game Security Solutions</a></p>\n\n<p><a href=\"http://lanyrd.com/2011/jsconf/sfggb/\" rel=\"nofollow\">http://lanyrd.com/2011/jsconf/sfggb/</a></p>\n\n<p>Games like Starcraft only record the mouse clicks and key presses. The actual commands are then simulated. I expect 'Worms Armageddon' to do something similar but their random events (like the bounciness of bananas) aren't seeded properly so in the <em>instant replay</em> you might get a different result.</p>\n\n<p>You could imagine something similar for MMORPGs. The server calculates your position based on the keypresses, the client merely tries to give a good early interpretation but you may <em>warp around</em> when you're lagging because the server will place you elsewhere on the map because it didn't get the keypress events timely.</p>\n\n<p>If you attack something, the server will check if you're close enough and how much damage you can expect to deal with current stats and equipment.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Record key points in game, then score is submitted with these key points. When people look high scores, they can also see overview of played game, if it looks like it is impossible to play like that without cheating, then people can report these suspicious scores to admins.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are relying on the client to send the final score to the server, then there is no way (afaik) to prevent a genius from cheating. But I think you might be able to prevent stupid people (and honest people) from cheating, so that only geniuses and their friends will dominate your leaderboards.</p>\n\n<p>There are two ways I can think of</p>\n\n<p>1.) \"security through obscurity.\"</p>\n\n<p>Come up with an algorithm that transforms simple scores into something else (and to transform them back). Then obfuscate it. Complicate it. Write a function that multiplies it by q and divides it by ralph. Apply a bunch of functions to it, and among the 5-15 functions that do random stuff to it, include one that multiplies the number by 19 ( a prime number ). On your server, check to make sure every incoming number (or letter) is divisible by 19, and decode</p>\n\n<p>You have to write a bunch of complex code that transforms simple scores into something crazy-looking. You have to write a series of functions in the least-efficient, most spaghetti-code fashion possible. Use \nOne thing you cold do is to have a set of disallowed values. I.e., perhaps all points awarded are even. If anyone tries to submit an odd number, they are obviously cheating (and very stupid).</p>\n\n<p>2.) time</p>\n\n<p>You should be able to know when the user started the game. You should have a session started and record when they requested the page. Then you should also be able to tell when they submitted their score. And you should also know what the time series is for max points. I.e. can you get 5 points per minute, 100 per minute, minute^3, etc... If user submits more points than are possible during that time, they are cheating.</p>\n\n<p>You could also strike a balance between server and client processing and make the client should send progress update every x minutes by ajax. And if it fails to report, you assume it's been compromised (much like in Bond movies, when he's infiltrating the enemy's lair and he snaps some guard's neck. When the guard doesn't respond to his next 10-minutely check-in, the alarms will go off).</p>\n\n<p>If you've ever played Zynga Poker, you've probably seen what happens when someone at the table has a slow internet connection.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I used a system using a time based request having 3 parameters </p>\n\n<pre><code>req number, curr time, score \n</code></pre>\n\n<p>The <strong>req number</strong> is returned from server in the response to the update score request , each time this is a new random value.</p>\n\n<p>The curr time is calculated not from computer clock but from start of game and is synced with server using an ajax request.</p>\n\n<p>Update score request is sent after short intervals (around 30 sec max).</p>\n\n<p>Following checks are applied on the server</p>\n\n<blockquote>\n  <p>Time is within 10 seconds range from the server clock. <br/>\n  there has been not more than 40 seconds since the req number was sent. <br/>\n  the score change sent after 30 seconds is possible (within 2 x humanly possible range)</p>\n</blockquote>\n\n<p>Score is updated only if the above checks are passed or the user gets a disconnection message :(</p>\n\n<p>This is simpler than most methods and works out to eliminate all casual hackers (well, unless they read this and want to go to the trouble of updating score quickly or making a script of their own).</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><em>[I know there have been similar questions about preventing cheating on high score lists, but no answer didn't really help me for JavaScript based games, so please try to think about my question, before telling me about similar posts. I ask about <code>best practices</code> because the JavaScript is always visible for the user and therefore it is not possible to prevent cheating completly, I just want to make it harder.]</em></p>\n\n<p>I'm developing a JavaScript based game that works in the browser. I want to make a high score list that contains the user name and the score of all users. To achieve that the browser sends the username and the score to my server (via AJAX).</p>\n\n<p>Submitting fake scores to this list would be fairly easy: One could take a look at the AJAX requests and then make an own AJAX request with a faked score. Using something like a <code>token</code> that has to be send with the other data is pointless, as it will be easy to discover.</p>\n\n<p>My only approach, that would prevent cheating, would be to send a description of every user action to the server and calculate the score there. But this is not really practicable as it would be too much for the server.</p>\n\n<p><strong>I accepted an answer, but in case anyone has other ideas about how to make cheating harder, please create another answer!</strong></p>\n",
            "last_activity_date": 1363608501,
            "question_id": 8670612,
            "score": 24,
            "tags": [
                "javascript"
            ],
            "title": "What are the best practices for making online high score lists in JavaScript based games?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If you really need it, you cant just get all links, forms and DOM objects that have a handler changing the url and make those wait until you've done what you want.\nFor the links, you get them by getElementsByTagName, check if the href starts with anything but a # and just add your onbeforeunload function add onclick (which will be invoked before the href is looked at).\nSame for the forms but with onsubmit.\nAnd finaly, for the elements changing the href with JavaScript, you should make sure when you add the lsitener that you call your onbeforeunlaod function (or, if you use DOM0 or DOM1 listeners, you can just add some class and then use a global script that checks all elements with the class and adds it to the event listener with a closure.</p>\n\n<p>But you should normaly be able to avoid the use of this event (probably using cookies to store the thing you wanted to send every x seconds and allowing to, in the worst case, have a look at it next time the user loads a page and, in the best case, be able to send an Ajax request at onbeforeunload or onunload which, even if it sends only the http headers, woudl allow you to get what you want).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I see that it's an old question, but i faced this problem recently.</p>\n\n<p>I'm using <code>document.unload</code> and it works fine in ios browsers (although if you look at <a href=\"https://developer.apple.com/library/IOS/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html#//apple_ref/doc/uid/TP40006511-SW5\" rel=\"nofollow\">Apple documentation</a> it seems to be deprecated and they recommend to use <code>document.pagehide</code>)</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Looks like Apple has disabled the window.onbeforeunload event for iOS devices (iPhone, iPad, iPod Touch). Unfortunately I can't find any documentation as to why this event doesn't work in Mobile Safari.</p>\n\n<p>Does anyone know if there's a reliable alternative to this function? Android's browser appears to support it just fine, and the Safari desktop application also supports the onbeforeunload event without issue.</p>\n",
            "last_activity_date": 1413878642,
            "question_id": 4127621,
            "score": 23,
            "tags": [
                "javascript",
                "iphone",
                "ios",
                "mobile-safari",
                "onbeforeunload"
            ],
            "title": "Is there any way to use window.onbeforeunload on Mobile Safari for iOS devices?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can't, at least not in iOS (iPhone), and I believe Android as well.  It's a usability issue that the keyboard should not be allowed to be triggered except by user input (it's just annoying if it's automatic).</p>\n\n<p>There are a couple of ways I know of to get around this:</p>\n\n<ul>\n<li><code>prompt()</code> opens the keyboard</li>\n<li>If you trigger the <code>.focus()</code> from within a <code>.click()</code> event (e.g. from opening your dialog), the keyboard shows up</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<blockquote>\n  <p>$(\"#textinput\").focus();</p>\n</blockquote>\n\n<p>Opening the keyboard by setting the focus to an input element, will only work if the focus is set within a \"user context\" (e.g. click, mousedown, mouseup).</p>\n\n<p>From the \"script context\" (setTimeout, callback returned from an ajax call) the keyboard won't show up.</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I'm creating a mobile version of my site. There's a part of the site where a dialog pops up with a text input. Normally I would just use jQuery to bring focus to the text input, but that's not working. Here's what I'm trying:</p>\n\n<pre><code>$(\"#textinput\").focus();\n$(\"#textinput\").click(); \n$(\"#textinput\").trigger(\"tap\"); //jQuery Mobile\n</code></pre>\n\n<p>None of them seem to work. Any ideas? I've been testing it on my DroidX. I'm using jQuery Mobile but I'm open to other libraries if they help.</p>\n",
            "last_activity_date": 1414655966,
            "question_id": 6837543,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "jquery-mobile"
            ],
            "title": "Show virtual keyboard on mobile phones in javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can use <a href=\"https://developer.mozilla.org/en/DOM/window.location#replace\"><code>location.replace</code></a> to replace the current location entry (the redirect page) with the new one (the target). That requires that you do the redirection via JavaScript rather than with meta tags or a 302. E.g.:</p>\n\n<pre><code>// In the redirecting page\nlocation.replace(\"path/to/target/page\");\n</code></pre>\n\n<p><a href=\"http://jsbin.com/ijojaz\">Live example</a> | <a href=\"http://jsbin.com/ijojaz/edit\">Live example source</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Instead of using <code>window.location = url;</code> to redirect, </p>\n\n<p>try <code>window.location.replace(url);</code>.</p>\n\n<blockquote>\n  <p>after using replace() the current page will not be saved in session\n  history, meaning the user won't be able to use the Back button to\n  navigate to it.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 39
                }
            ],
            "body": "<p>When the user loads the page, I immediately do a window redirect to another location.</p>\n\n<p>The problem is, when the user clicks back, it'll go back to the page which does the redirect.</p>\n\n<p>Can I \"cancel\" the history of the previous page? So that when the user clicks back, it goes back TWO pages instead?</p>\n",
            "last_activity_date": 1388681826,
            "question_id": 8969878,
            "score": 20,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "In Javascript, how do I &quot;clear&quot; the back (history -1)?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The wikipedia article has a formula which looks like something that can easily be implemented:</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Hue#Computing_hue_from_RGB\">http://en.wikipedia.org/wiki/Hue#Computing_hue_from_RGB</a></p>\n\n<p>Edit: here's a function which uses those formulas:</p>\n\n<pre><code>function getHue(color) {\n  var r = parseInt(color.substring(0,2),16)/255;\n  var g = parseInt(color.substring(2,4),16)/255;\n  var b = parseInt(color.substring(4,6),16)/255;\n\n  var hue;\n  if ((r &gt;= g) &amp;&amp; (g &gt;= b)) {\n      hue = 60*(g-b)/(r-b);\n  } else if ((g &gt; r) &amp;&amp; (r &gt;= b)) {\n      hue = 60*(2 - (r-b)/(g-b));\n  }\n  //... continue here\n  return hue;\n}\n\nalert(getHue('FF0000')); // correctly returns 0\nalert(getHue('408000')); // correctly returns 90\nalert(getHue('0000FF')); // not implemented yet\n</code></pre>\n\n<p>Just continue using the formulas from the table in that wikipedia article for other angles.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you <a href=\"http://www.google.com/search?q=rgb+to+hsl\">search</a> for how to convert RGB to HSL, you'll find a number of algorithms, including in the Wikipedia article linked by <a href=\"http://stackoverflow.com/questions/3732046/how-do-you-get-the-hue-of-a-xxxxxx-colour/3732073#3732073\">Sergey</a>.</p>\n\n<p>First, extract the RGB components of the hex color notation.</p>\n\n<pre><code>var color='#c7d92c'; // A nice shade of green.\nvar r = parseInt(color.substr(1,2), 16); // Grab the hex representation of red (chars 1-2) and convert to decimal (base 10).\nvar g = parseInt(color.substr(3,2), 16);\nvar b = parseInt(color.substr(5,2), 16);\n</code></pre>\n\n<p>That'll get you the byte (0-255) representation of your color.  In this case, 199, 217, 44.</p>\n\n<p>You can then use the formulae from the Wikipedia article to calculate hue, or <a href=\"https://github.com/mjijackson/mjijackson.github.com/blob/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.txt\">shamelessly steal someone else's code</a>:</p>\n\n<pre><code>function rgbToHsl(r, g, b){\n    r /= 255, g /= 255, b /= 255;\n    var max = Math.max(r, g, b), min = Math.min(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min){\n        h = s = 0; // achromatic\n    }else{\n        var d = max - min;\n        s = l &gt; 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max){\n            case r: h = (g - b) / d + (g &lt; b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n\n    return [h, s, l];\n}\n</code></pre>\n\n<p>(See the <a href=\"https://github.com/mjijackson/mjijackson.github.com/blob/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.txt\">source page</a> for documentation and a <code>hslToRgb()</code> function.)</p>\n\n<p>We can now put those two snippets together and get the hue:</p>\n\n<pre><code>var hue = rgbToHsl(r, g, b)[0] * 360;\n</code></pre>\n\n<p>The <code>[0]</code> is to grab the hue &ndash; the function returns an array (<code>[h,s,l]</code>).  We multiply by 360 since hue is returned as a value between 0 and 1; we want to convert it to degrees.</p>\n\n<p>With the example color of <code>#c7d92c</code>, <code>hue</code> will be ~66.24.  Photoshop's color picker says the hue of that color is 66&deg; so it looks like we're good!</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<pre><code>hue = Atan2(1.732050808 * (G - B), (2 * R - G - B)) * 57.295779513;\n</code></pre>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Hue\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Hue</a></p>\n\n<p>hue = Atan2(sqr(3) * (G - B), 2 * R - G - B)</p>\n\n<p>The result will be in polar coordinates.  Multiply by 180 and divide by pi to convert to angle.  </p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How do you extract the hue component of a color given as '#rrggbb'?</p>\n",
            "last_activity_date": 1388807404,
            "question_id": 3732046,
            "score": 20,
            "tags": [
                "javascript",
                "colors"
            ],
            "title": "How do you get the hue of a #xxxxxx colour?"
        }
    ]
}
