{
    "items": [
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>$(document).ready(function() {\n    $('#someButton').click(function() {\n        var names = [];\n        $('#MyDiv input:checked').each(function() {\n            names.push(this.name);\n        });\n        // now names contains all of the names of checked checkboxes\n        // do something with it\n    });\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>Not tested but should work:</p>\n\n<pre><code>$(\"#MyDiv td input:checked\").each(function()\n{\n    alert($(this).attr(\"id\"));\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var aArray = [];\nwindow.$( \"#myDiv\" ).find( \"input[type=checkbox][checked]\" ).each( function()\n{\n  aArray.push( this.name );\n\n});\n</code></pre>\n\n<p>You can put it in a function and execute on click of the button.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try this one..</p>\n\n<pre><code>var listCheck = [];\nconsole.log($(\"input[name='YourCheckBokName[]']\"));\n$(\"input[name='YourCheckBokName[]']:checked\").each(function() {\n     console.log($(this).val());\n     listCheck .push($(this).val());\n});\nconsole.log(listCheck);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since nobody has mentioned this..</p>\n\n<p>If all you want is an array of values, an easier alternative would be to use the <a href=\"http://api.jquery.com/map/\" rel=\"nofollow\"><strong><code>.map()</code></strong></a> method. Just remember to call <code>.get()</code> to convert the jQuery object to an array:</p>\n\n<p><a href=\"http://jsfiddle.net/08oLtpcz/\" rel=\"nofollow\"><strong>Example Here</strong></a></p>\n\n<pre><code>var names = $('.parent input:checked').map(function () {\n    return this.name;\n}).get();\n\nconsole.log(names);\n</code></pre>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var names = $('.parent input:checked').map(function () {\r\n    return this.name;\r\n}).get();\r\n\r\nconsole.log(names);</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;div class=\"parent\"&gt;\r\n    &lt;input type=\"checkbox\" name=\"name1\" /&gt;\r\n    &lt;input type=\"checkbox\" name=\"name2\" /&gt;\r\n    &lt;input type=\"checkbox\" name=\"name3\" checked=\"checked\" /&gt;\r\n    &lt;input type=\"checkbox\" name=\"name4\" checked=\"checked\" /&gt;\r\n    &lt;input type=\"checkbox\" name=\"name5\" /&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Pure JavaScript:</p>\n\n<p><a href=\"http://jsfiddle.net/3pmxh1fq/\" rel=\"nofollow\"><strong>Example Here</strong></a></p>\n\n<pre><code>var elements = document.querySelectorAll('.parent input:checked');\nvar names = Array.prototype.map.call(elements, function(el, i) {\n    return el.name;\n});\n\nconsole.log(names);\n</code></pre>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var elements = document.querySelectorAll('.parent input:checked');\r\nvar names = Array.prototype.map.call(elements, function(el, i){\r\n    return el.name;\r\n});\r\n\r\nconsole.log(names);</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div class=\"parent\"&gt;\r\n    &lt;input type=\"checkbox\" name=\"name1\" /&gt;\r\n    &lt;input type=\"checkbox\" name=\"name2\" /&gt;\r\n    &lt;input type=\"checkbox\" name=\"name3\" checked=\"checked\" /&gt;\r\n    &lt;input type=\"checkbox\" name=\"name4\" checked=\"checked\" /&gt;\r\n    &lt;input type=\"checkbox\" name=\"name5\" /&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In a div, I have some checkbox. I'd like when I push a button get all the name of all check box checked. Could you tell me how to do this ?</p>\n\n<pre><code>&lt;div id=\"MyDiv\"&gt;\n....\n&lt;td&gt;&lt;%= Html.CheckBox(\"need_\" + item.Id.ToString())%&gt;&lt;/td&gt;\n...\n&lt;/div&gt;\n</code></pre>\n\n<p>Thanks, </p>\n",
            "last_activity_date": 1421292983,
            "question_id": 1287592,
            "score": 21,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Get checkbox list values with jQuery"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>toBe()</code> versus <code>toEqual()</code>: <code>toEqual()</code> checks equivalence. <code>toBe()</code>, on the other hand, makes sure that they're the exact same object.</p>\n\n<p>I would say use <code>toEqual()</code> when comparing values, and <code>toBe()</code> when comparing objects.</p>\n\n<p>Check this link out for more info : <a href=\"http://evanhahn.com/how-do-i-jasmine/\" rel=\"nofollow\">http://evanhahn.com/how-do-i-jasmine/</a></p>\n\n<p>Now when looking at the difference between <code>toBe()</code> and <code>toEqual()</code> when it comes to numbers, there shouldn't be any difference so long as your comparison is correct. <code>5</code> will always be equivalent to <code>5</code>.</p>\n\n<p>A nice place to play around with this to see different outcomes is <a href=\"http://jsfiddle.net/wzAyL/135/\" rel=\"nofollow\">here</a></p>\n\n<h1><strong>Update</strong></h1>\n\n<p>An easy way to look at <code>toBe()</code> and <code>toEqual()</code> is to understand what exactly they do in JavaScript. According to Jasmine API, found <a href=\"http://jasmine.github.io/1.3/introduction.html\" rel=\"nofollow\">here</a>:</p>\n\n<blockquote>\n  <p>toEqual() works for simple literals and variables, and should work for objects</p>\n  \n  <p>toBe() compares with <code>===</code></p>\n</blockquote>\n\n<p>Essentially what that is saying is <code>toEqual()</code> is the same as Javascripts <code>==</code> operator and <code>toBe()</code> is the same as Javascripts <code>===</code> operator.</p>\n\n<p>Now, you can at least understand why when given:</p>\n\n<pre><code>var objectOne = {\n    propertyOne: str,\n    propertyTwo: num    \n}\n\nvar objectTwo = {\n    propertyOne: str,\n    propertyTwo: num    \n}\n</code></pre>\n\n<p><code>expect(objectOne).toBe(objectTwo); //returns false</code></p>\n\n<p>That is because, as stated in <a href=\"http://stackoverflow.com/a/957602/1887101\">this answer to a different, but similar question,</a> the <code>===</code> operator actually means that both operands reference the same object, or in case of value types, have the same value.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>To quote the jasmine git hub project,</p>\n\n<blockquote>\n  <p>expect(x).toEqual(y); compares objects or primitives x and y and\n  passes if they are equivalent</p>\n  \n  <p>expect(x).toBe(y); compares objects or primitives x and y and passes\n  if they are the same object</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've recently come across examples where when comparing two of the same objects, <code>toBe()</code> has returned <code>false</code>.  These problems were solved by changing the comparison method to <code>toEqual()</code>.</p>\n\n<p><code>toEqual()</code> does a deep comparison and thus should be used for objects.  <code>toBe()</code> is more suitable for comparison of null, boolean, or undefined values.</p>\n\n<p><a href=\"http://jsfiddle.net/bBL9P/67/\" rel=\"nofollow\">Example</a></p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>For primitive types (e.g. numbers, booleans, strings, etc.), there is no difference between <code>toBe</code> and <code>toEqual</code>; either one will work for <code>5</code>, <code>true</code>, or <code>\"the cake is a lie\"</code>.</p>\n\n<p>To understand the difference between <code>toBe</code> and <code>toEqual</code>, let's imagine three objects.</p>\n\n<pre><code>var a = { bar: 'baz' },\n    b = { foo: a },\n    c = { foo: a };\n</code></pre>\n\n<p>Using a strict comparison (<code>===</code>), some things are \"the same\":</p>\n\n<pre><code>&gt; b.foo.bar === c.foo.bar\ntrue\n\n&gt; b.foo.bar === a.bar\ntrue\n\n&gt; c.foo === b.foo\ntrue\n</code></pre>\n\n<p>But some things, even though they are \"equal\", are not \"the same\", since they represent objects that live in different locations in memory.</p>\n\n<pre><code>&gt; b === c\nfalse\n</code></pre>\n\n<p>Jasmine's <code>toBe</code> matcher is nothing more than a wrapper for a strict equality comparison</p>\n\n<pre><code>expect(a.foo).toBe(b.foo)\n</code></pre>\n\n<p>is the same thing as</p>\n\n<pre><code>expect(a.foo === b.foo).toBe(true)\n</code></pre>\n\n<p>Don't just take my word for it; take a look at <a href=\"https://github.com/jasmine/jasmine/blob/master/src/core/matchers/toBe.js\">the source code for toBe</a>.</p>\n\n<p>But <code>b</code> and <code>c</code> represent functionally equivalent objects; they both look like</p>\n\n<pre><code>{ foo: { bar: 'baz } }\n</code></pre>\n\n<p>Wouldn't it be great if we could say that <code>b</code> and <code>c</code> are \"equal\" even if they don't represent the same object?</p>\n\n<p>Enter <code>toEqual</code>, which checks \"deep equality\" (i.e. does a recursive search through the objects to determine whether the values for their keys are equivalent). Both of the following tests will pass:</p>\n\n<pre><code>expect(b).not.toBe(c);\nexpect(b).toEqual(c);\n</code></pre>\n\n<p>Hope that helps clarify some things.</p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>Let's say I have the following:</p>\n\n<pre><code>var myNumber = 5;\nexpect(myNumber).toBe(5);\nexpect(myNumber).toEqual(5);\n</code></pre>\n\n<p>Both of the above tests will pass.  Is there a difference between <code>toBe()</code> and <code>toEqual()</code> when it comes to evaluating numbers?  If so, when I should use one and not the other?</p>\n",
            "last_activity_date": 1425351859,
            "question_id": 22413009,
            "score": 20,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript - Using Methods to Compare"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The best way I have found to handle this is to perform the rotation of the x-axis tick labels yourself. Why? Because NVD3 is not handling the rotation and associated translations properly. Look at your image, and you'll see that the library allows the rotation to translate the labels out from directly under the columns they represent. It also begins to mishandle the <code>axis.tickPadding()</code> values, and so on.</p>\n\n<p>The first thing that you need to do is to ensure that the chart has enough space for the translated labels, like so:</p>\n\n<pre><code>chart.margin({bottom: 60});\n</code></pre>\n\n<p>We can then translate and rotate the labels:</p>\n\n<pre><code>var xTicks = d3.select('.nv-x.nv-axis &gt; g').selectAll('g');\nxTicks\n  .selectAll('text')\n  .attr('transform', function(d,i,j) { return 'translate (-10, 25) rotate(-90 0,0)' }) ;\n</code></pre>\n\n<p>The labels now look like this:</p>\n\n<p><img src=\"http://i.stack.imgur.com/iiis4.png\" alt=\"Rotated / translated labels\"></p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>For multiple graph, your can add \"<strong>'#' + containerId + ' svg</strong> \" in the <strong>d3.select</strong> like below:</p>\n\n<pre><code>//Rotate x-axis label\nvar xTicks = d3.select('#' + containerId + ' svg .nv-x.nv-axis &gt; g').selectAll('g');\nxTicks\n    .selectAll('text')\n    .attr('transform', function(d,i,j) { return 'translate (-15, 60) rotate(-90 0,0)' });\n</code></pre>\n\n<p>Anyways, Thanks for @River answer.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This worked for me. The main reason I'm submitting this is that changing the anchor is nicer than translating the position manually.</p>\n\n<pre><code>var xTicks = d3.select('.nv-x.nv-axis &gt; g &gt; g',_this.context.element).selectAll('g').selectAll('text');\nxTicks.attr('transform', function() { return 'rotate(' + angle + ' 0,0)' }) ;\nxTicks.attr('text-anchor',function() {\n    var anchor;\n    if(angle &gt; 0){ anchor = 'start'; }\n    else if(angle &lt; 0){ anchor = 'end'; }\n    else { anchor = 'middle'; }\n    return anchor;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Whatever you text rotation is give start/middle/end</p>\n\n<pre><code>d3.select('.nv-x.nv-axis &gt; g &gt; g').selectAll('g.tick text').style('text-anchor', 'start');  //start/middle/end\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am building a bar chart using nvd3's multiBarChart and need to adjust the position of rotated x-axis labels:</p>\n\n<p><img src=\"http://i.stack.imgur.com/QSnPM.png\" alt=\"enter image description here\"></p>\n\n<pre><code>var chart = nv.models.multiBarChart();\n...\nchart.rotateLabels(-90);\n</code></pre>\n\n<p>I would like the column labels to not overlap the chart and be centered under each bar. I could select the labels after plotting the chart and adjust them but is there an easier way?</p>\n",
            "last_activity_date": 1418275390,
            "question_id": 13136964,
            "score": 20,
            "tags": [
                "javascript",
                "charts",
                "d3.js",
                "visualization",
                "nvd3.js"
            ],
            "title": "How can I position rotated x-axis labels on column chart using nvd3?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The problem is that you just overwrite a property of the window object. And if you can do that, the browser can to that as well. So mocking a function or property of a global object that everyone can access isn't a good idea, cause you can't be sure that your change will be there when you try to access it.</p>\n\n<p>Which brings me to <a href=\"http://martinfowler.com/articles/injection.html\">dependency injection</a>. Its a common pattern to make your code unit testable, with a focus on <strong>unit</strong>. Whats does it mean. When ever you create a new object or access a global object, you're not only testing your <em>unit</em> functionality, but also the functionality of your newly created or global object. To prepend that, you not create the new objects in your <em>unit</em>, but pass them into. Normally you would to this in the constructor, but as in JavaScript function are objects with the function body as constructor, you can also pass the dependencies simply into your function.</p>\n\n<p>So in your case, the function depends on the global window object. So instead of trying to access the global window object, pass it as a parameter into your function. Doing it this way you can pass in the window object in your production code and a simple JavaScript object with a arguments atribute into your test:</p>\n\n<pre><code>function youWannaTest(w){\n    console.log(w.arguments[0]);\n}\n</code></pre>\n\n<p>In your extension call the function like this:</p>\n\n<pre><code>youWannaTest(window);\n</code></pre>\n\n<p>In your test call the function like this:</p>\n\n<pre><code>youWannaTest({arguments: ['someValue']});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<p>How do I mock window object? I'm doing firefox extension and I want to use jasmine for javascript testing.</p>\n\n<p>In my javascript I have </p>\n\n<pre>\n<code>\nfunction submit() {\n...\nvar url = window.arguments[0];\n...\n}\n</code>\n</pre>\n\n<p>Obviously, I have to mock window.arguments[0] in jasmine because that object doesn't exists if not passing any parameter from window.openDialog</p>\n\n<p>This is my attempt to mock it with \"with\"</p>\n\n<pre>\n<code>\nit(\"should submit to server\", function() {\n\n        var localContext = {\n            \"window\": {\n                arguments: [\"http://localhost\"]\n            }\n\n        }\n\n        with(localContext);\n</code>\n</pre>\n\n<p>But I still get this error TypeError: Cannot read property '0' of undefined, it's like when the test is run window.arguments[0] gets wiped out with the real window, because if I do </p>\n\n<p><code>\nwindow.arguments[0]\n</code></p>\n\n<p>inside the test, it prints out \"http://localhost\" correctly. but when it comes to submit() method it shows the error that window.argument is undefined. </p>\n",
            "last_activity_date": 1327007833,
            "question_id": 8919370,
            "score": 20,
            "tags": [
                "javascript",
                "mocking",
                "jasmine"
            ],
            "title": "jasmine mock window object"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>one is a jquery <code>$(document).ready</code> function and the other is just an anonymous function that calls itself.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><code>$(function() {});</code> is a jQuery shortcut for </p>\n\n<pre><code> $(document).ready(function() { \n     /* Handler for .ready() called. */ \n });\n</code></pre>\n\n<p>While <code>(function() {})();</code> is a instantly invoked function expression, or IIFE.  This means that its an expression (not a statement) and it is invoked instantly after it is created.    </p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>The first uses jQuery to bind a function to the <code>document.ready</code> event.  The second declares and immediately executes a function.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>They are both anonymous functions, but <code>(function(){})()</code> is called immediately, and <code>$(function(){})</code> is called when the document is ready.</p>\n\n<p>jQuery works something like this.</p>\n\n<pre><code>window.jQuery = window.$ = function(arg) {\n    if (typeof arg == 'function') {\n        // call arg() when document is ready\n    } else {\n       // do other magics\n    }\n}\n</code></pre>\n\n<p>So you're just calling the jQuery function and passing in a function, which will be called on document ready.</p>\n\n<p>The 'Self-executing anonymous function' is the same as doing this.</p>\n\n<pre><code>function a(){\n    // do stuff\n}\na();\n</code></pre>\n\n<p>The only difference is that you are not polluting the global namespace.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>What is the difference between these two:</p>\n\n<pre><code>$(function () {\n    // do stuff\n});\n</code></pre>\n\n<p>AND</p>\n\n<pre><code>(function () {\n    // do stuff\n})();\n</code></pre>\n",
            "last_activity_date": 1317810769,
            "question_id": 7614574,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "anonymous-function",
                "iife"
            ],
            "title": "Dollar sign before self declaring anonymous function in JavaScript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Use</p>\n\n<pre><code>$( your_datepicker_id ).datepicker( \"getDate\" )\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>You can retrieve the date by using the getDate function:</p>\n\n<pre><code>$(\"#datepicker\").datepicker( 'getDate' );\n</code></pre>\n\n<p>The value is returned as a JavaScript Date object.</p>\n\n<p>If you want to use this value when the user selects a date, you can use the onSelect event:</p>\n\n<pre><code>$(\"#datepicker\").datepicker({\n   onSelect: function(dateText, inst) { \n      var dateAsString = dateText; //the first parameter of this function\n      var dateAsObject = $(this).datepicker( 'getDate' ); //the getDate method\n   }\n});\n</code></pre>\n\n<p>The first parameter is in this case the selected Date as String. Use parseDate to convert it to a JS Date Object.</p>\n\n<p>See <a href=\"http://docs.jquery.com/UI/Datepicker\">http://docs.jquery.com/UI/Datepicker</a> for the full jQuery UI DatePicker reference.</p>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>the link to getdate: <a href=\"http://docs.jquery.com/UI/Datepicker#method-getDate\" rel=\"nofollow\">http://docs.jquery.com/UI/Datepicker#method-getDate</a></p>\n\n<pre><code>$(\"#datepicker\").datepicker( 'getDate' );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try this,works like charm,gives the date you have selected.\nonsubmit form try to get this value:-</p>\n\n<p>var date = $(\"#scheduleDate\").datepicker({ dateFormat: 'dd,MM,yyyy' }).val();</p>\n\n<p><a href=\"http://stackoverflow.com/questions/10266456/get-selected-value-in-datepicker-and-format-it\">Reference here</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Sometimes a lot of troubles with it. In attribute value of datapicker data is 28-06-2014, but datepicker is show or today or nothing. I decided it in a such way:</p>\n\n<pre><code>&lt;input type=\"text\" class=\"form-control datepicker\" data-value=\"&lt;?= date('d-m-Y', (!$event-&gt;date ? time() : $event-&gt;date)) ?&gt;\" value=\"&lt;?= date('d-m-Y', (!$event-&gt;date ? time() : $event-&gt;date)) ?&gt;\" /&gt;\n</code></pre>\n\n<p>I added to the input of datapicker attribute data-value, because if call <strong>jQuery(this).val()</strong> OR <strong>jQuery(this).attr('value')</strong> - nothing works. I decided init in cycle each datapicker and take its value from attribute data-value:</p>\n\n<pre><code> $(\"form .datepicker\").each(function() {\n        var time = jQuery(this).data('value');\n        time = time.split('-');\n        $(this).datepicker('setDate', new Date(time[2], time[1], time[0], 0, 0, 0));\n    });\n</code></pre>\n\n<p>and it is works fine =)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>i want to get the date from datepicker whenever user choose the date in jQuery UI datepicker and click the button on the form.</p>\n\n<p>well i need to get the day, month , year of the date they choose. how i can get the date form jQuery UI</p>\n",
            "last_activity_date": 1400613890,
            "question_id": 4919873,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui"
            ],
            "title": "How to get the date from jQuery UI datepicker"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>So you have a custom function:</p>\n\n<pre><code>function double(value) { return value * 2; }\n</code></pre>\n\n<p>You can use <a href=\"http://documentcloud.github.com/underscore/#mixin\" rel=\"nofollow\"><code>mixin</code></a> to extend Underscore with it:</p>\n\n<pre><code>_.mixin({ double:double });\n</code></pre>\n\n<p>Now you can call your function from the Underscore object <code>_</code>:</p>\n\n<pre><code>_.double(42); // 84\n</code></pre>\n\n<p>and from the wrapped object returned from <code>chain</code>:</p>\n\n<pre><code>_([42, 43]).chain()\n  .first()\n  .double() // double made it onto the wrapped object too\n  .value(); // 84\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Not finding a <code>tap</code> that returns the value returns by the function is runs, I define one which I can <code>take</code> and add to <code>_</code>:</p>\n\n<pre><code>_.mixin({take: function(obj, interceptor) {\n    return interceptor(obj);\n}});\n</code></pre>\n\n<p>Then assuming I have:</p>\n\n<pre><code>function double(value) { return value * 2; };\n</code></pre>\n\n<p>I can write:</p>\n\n<pre><code>_([42, 43]).chain()\n    .first()             // 42\n    .take(double)        // Applies double to 42\n    .value()             // 84\n</code></pre>\n\n<p>You can look at <code>take</code> as <code>map</code> on objects, instead of lists. Want to experiment with this? See this <a href=\"http://jsfiddle.net/avernet/uVnu2/\">example on jsFiddle</a>.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>Does <code>map</code> work for this?</p>\n\n<pre><code>_([42, 43]).chain()\n    .first()\n    .map(double)\n    .value()\n</code></pre>\n\n<p><strong>edit</strong></p>\n\n<p>from the documentation, it looks like <code>map</code> would only work if you place it before the call to <code>first</code>:</p>\n\n<pre><code>_([42, 43]).chain()\n    .map(double)\n    .first()\n    .value()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Using <code>compose</code> is another way dealing with the situation, but I think adding a function such as <code>take</code> <a href=\"http://stackoverflow.com/questions/3945673/underscore-js-how-to-chain-custom-functions/3946398#3946398\">as I suggested earlier</a> is a better solution. Still, here is how the code would look like with <code>compose</code>:</p>\n\n<pre><code>function double(value) { return value * 2; };\n\n_.compose(\n    double,\n    _.first,\n    _.bind(_.identity, _, [42, 43])\n)();\n</code></pre>\n\n<p>The initial value needs to be provided through a function which returns that value (here done by currying <code>identity</code>), and the functions need to be listed in an other which is the reverse of what you have with a chain, which appears as pretty unnatural to me.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Alright, I'm fresh off of reading the underscore annotated source code for the first time. But I think you can do something like this: </p>\n\n<pre><code>function double(value) { return value * 2; };\n\nvar obj = _([42, 43]).addToWrapper({double:double});\n\nobj.chain()\n  .first()\n  .double()\n  .value();\n</code></pre>\n\n<p>The syntax/details might not be right, but the core point is this: when you call <code>_([42,43])</code>, you're calling underscore as a function. When you do so, it instantiates a new object and then mixes into that object most of the underscore functions. Then, it returns that object to you. You can then add your own functions to that object, and none of this pollutes the \"_\" namespace itself.</p>\n\n<p>That's what the underscore.js code looked like to me. If I'm wrong, I'd like to find out and hopefully someone will explain why.</p>\n\n<p>EDIT: I've actually been using underscore.js heavily for about a month now, and I have gotten pretty familiar with it. I now <em>know</em> it behaves like I said here. When you call _ as a Constructor function, you get back your own \"namespace\" (just an object), and you can add things to it with addToWrapper() that show up in your namespace but not in the \"global\" \"_\" namespace. So the feature the OP wanted is already built in. (And I have been really impressed with underscore, btw, it is very very nicely done).</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>No one actually answered this as requested so here's my answer to the request which I have tested.\nPlease read the note below as regards first.</p>\n\n<pre><code>function doubleValue(x) { return x * 2; }\nvar rt = _.chain([42,43])\n        .first(1)\n        .map(doubleValue)\n        .value();\nconsole.log(rt);   // prints out [84]\n</code></pre>\n\n<p>// Note that it is important to tell .first() how many elements you want otherwise you may  get an empty array otherwise. Think of first as I WANT the first number of items, so .first(2) returns [84],[86] etc</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Many ways to easily achieve this, here is one such solution:   </p>\n\n<pre><code>  _.chain([42,43])\n    .first(1)\n    .map(double)\n    .first()\n    .value();\n    // 84\n</code></pre>\n\n<p>However, I would recommend using <a href=\"http://ramda.github.io/ramdocs/docs/\" rel=\"nofollow\">Ramda</a> then with auto-curry and pipe / compose these kinds of tasks are trivial:</p>\n\n<pre><code>R.pipe(R.head, R.multiply(2))([42, 43]);  // 84\n\nequivalent to:\n\nR.compose(R.multiply(2), R.head)([42, 43]);  // 84\n</code></pre>\n\n<p>If you wanted to extend the solution to take say the first 2 items, instead of a single value, as requested by the OP, then:</p>\n\n<pre><code>R.pipe(R.take(2), R.map(R.multiply(2)))([42, 43])  // [84, 86]\n</code></pre>\n\n<p>However, in Ramda R.compose is preferred. Either way, for trivial tasks like this, it does tend to be more convenient and easy to use.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Using <a href=\"http://documentcloud.github.com/underscore/\">Underscore.js</a>, I can write the following which returns <code>42</code>:</p>\n\n<pre><code>_([42, 43]).chain()\n    .first()\n    .value()\n</code></pre>\n\n<p>I have custom function, not part of Underscore.js called <code>double()</code>:</p>\n\n<pre><code>function double(value) { return value * 2; };\n</code></pre>\n\n<p>I would like to be able to call this function in an Underscore chain, as if it was part of Underscore. I would like to write the following, which I'd like to return <code>84</code>:</p>\n\n<pre><code>_([42, 43]).chain()\n    .first()\n    .double()\n    .value()\n</code></pre>\n\n<p>This can't work since Underscore doesn't define <code>double()</code>. I could use <a href=\"http://documentcloud.github.com/underscore/#tap\"><code>tap()</code></a> as in:</p>\n\n<pre><code>_([42, 43]).chain()\n    .first()\n    .tap(double)\n    .value()\n</code></pre>\n\n<p>This is valid, but <code>tap</code> applies the function to its argument and returns the argument, not the result of the function. So it looks to me like I would need a sort of <code>tap</code> that returns the result of the function applied to its argument. Is there anything like this in Underscore.js? Am I missing something terribly obvious?</p>\n",
            "last_activity_date": 1416756510,
            "question_id": 3945673,
            "score": 20,
            "tags": [
                "javascript",
                "functional-programming",
                "underscore.js"
            ],
            "title": "Underscore.js: how to chain custom functions"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Take a look at <a href=\"http://www.w3schools.com/jsref/jsref_obj_date.asp\" rel=\"nofollow\">http://www.w3schools.com/jsref/jsref_obj_date.asp</a></p>\n\n<p>There is a function <code>UTC()</code> that returns the milliseconds from the unix epoch.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can create a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> object, and call <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime\"><code>getTime</code></a> on it:</p>\n\n<pre><code>new Date(2010, 6, 26).getTime() / 1000\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 46
                }
            ],
            "body": "<p>How do I convert <code>07/26/2010</code> to a UNIX timestamp using Javascript?</p>\n",
            "last_activity_date": 1381263329,
            "question_id": 3367415,
            "score": 20,
            "tags": [
                "javascript",
                "javascript-events",
                "javascript-framework"
            ],
            "title": "Get epoch for a specific date using Javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You don't need jQuery to do this. Embrace the power of JavaScript.</p>\n\n<pre><code>window.location.reload()\n</code></pre>\n\n<p>Edit: This is another example of where some \"jQuery magic\" is expected to solve problems without thinking of the fundamentals of JavaScript which is often the simplest, fastest and most direct way to do something.</p>\n",
                    "is_accepted": false,
                    "score": 71
                },
                {
                    "body": "<p>Replace that line with:</p>\n\n<pre><code>$(\"#someElement\").click(function() {\n    window.location.href = window.location.href;\n});\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>$(\"#someElement\").click(function() {\n    window.location.reload();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Or better </p>\n\n<pre><code>window.location.assign(\"relative or absolute address\");\n</code></pre>\n\n<p>that tends to work best across all browsers and mobile</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Replace with:</p>\n\n<pre><code>$('#something').click(function() {\n    location.reload();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The code below displays a Google map and search results when you enter an address and hit the submit button.  I've been playing with it to try\nand force the page to completely refresh or reload once you hit the submit button.  But I can't get it to work right.  It loads the results \"in page,\" but I'd like the page to completely refresh when the results load, like when you hit the back button on your browser.  Hope that makes sense.</p>\n\n<p>I think the answer lies in this line of code but I don't know jquery very well.  It's near the bottom of the full code below.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n(function($) { \n    $(document).ready(function() {\n        load();';\n</code></pre>\n\n<p>Here's the full code below.  Any help would be greatly appreciated! </p>\n\n<pre><code>&lt;?php\n/*\nSimpleMap Plugin\ndisplay-map.php: Displays the Google Map and search results\n*/\n$to_display = '';\n\nif ($options['display_search'] == 'show') {\n$to_display .= '\n&lt;div id=\"map_search\" style=\"width: '.$options['map_width'].';\"&gt;\n    &lt;a name=\"map_top\"&gt;&lt;/a&gt;\n    &lt;form onsubmit=\"searchLocations(\\''.$categories.'\\'); return false;\"         name=\"searchForm\" id=\"searchForm\"     action=\"http://'.$_SERVER['SERVER_NAME'].$_SERVER['REQUEST_URI'].'\"&gt;\n        &lt;input type=\"text\" id=\"addressInput\" name=\"addressInput\" class=\"address\"     /&gt;&amp;nbsp;\n        &lt;select name=\"radiusSelect\" id=\"radiusSelect\"&gt;';\n\n            $default_radius = $options['default_radius'];\n            unset($selected_radius);\n            $selected_radius[$default_radius] = ' selected=\"selected\"';\n\n            foreach ($search_radii as $value) {\n                    $r = (int)$value;\n                    $to_display .= '&lt;option valu         e=\"'.$value.'\"'.$selected_radius[$r].'&gt;'.$value.' '.$options['units'].\"&lt;/option&gt;\\n\";\n            }\n\n$to_display .= '    \n        &lt;/select&gt;&amp;nbsp;\n        &lt;input type=\"submit\" value=\"'.__('Search', 'SimpleMap').'\"     id=\"addressSubmit\" class=\"submit\" /&gt;\n        &lt;p&gt;'.__('Please enter an address or search term in the box above.',     'SimpleMap').'&lt;/p&gt;\n    &lt;/form&gt;\n&lt;/div&gt;';\n}\nif ($options['powered_by'] == 'show') {\n    $to_display .= '&lt;div id=\"powered_by_simplemap\"&gt;'.sprintf(__('Powered by %s     SimpleMap', 'SimpleMap'),'&lt;a href=\"http://simplemap-plugin.com/\"     target=\"_blank\"&gt;').'&lt;/a&gt;&lt;/div&gt;';\n}\n\n$to_display .= '\n&lt;div id=\"map\" style=\"width: '.$options['map_width'].'; height:     '.$options['map_height'].';\"&gt;&lt;/div&gt;\n\n&lt;div id=\"results\" style=\"width: '.$options['map_width'].';\"&gt;&lt;/div&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n(function($) { \n    $(document).ready(function() {\n        load();';    \n\n        if ($options['autoload'] == 'some') {\n            $to_display .= 'var autoLatLng = new GLatLng(default_lat,     default_lng);\n            searchLocationsNear(autoLatLng, autoLatLng.lat() + \", \" +     autoLatLng.lng(), \"auto\", \"'.$options['lock_default_location'].'\", \"'.$categories.'\");';\n        }\n\n        else if ($options['autoload'] == 'all') {\n            $to_display .= 'var autoLatLng = new GLatLng(default_lat,     default_lng);\n            searchLocationsNear(autoLatLng, autoLatLng.lat() + \", \" +     autoLatLng.lng(), \"auto_all\", \"'.$options['lock_default_location'].'\",     \"'.$categories.'\");';\n        }\n\n$to_display .= '\n    });\n})(jQuery);\n&lt;/script&gt;';\n\n?&gt;\n</code></pre>\n",
            "last_activity_date": 1418295835,
            "question_id": 2803655,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "google-maps",
                "refresh",
                "reload"
            ],
            "title": "How to force page refreshes or reloads in jQuery?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>A script tag will always refer to the document that is sourcing it.  If you're doing something special on the server you might want to consider using a session or cookies.</p>\n\n<p>If you're loading a script from the same domain you could get it with XHR and eval it, although  With the XHR you can set the referer header yourself:</p>\n\n<pre><code>xhr.open('GET', 'path/to/my-js', true);\nxhr.setRequestHeader(\"referer\", document.referrer);\n\nxhr.onreadystatechange = function () {\n    if (xhr.status === 200 &amp;&amp; xhr.readyState == 4)\n        eval(xhr.responseText);\n}\n\nxhr.send();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>I'm a little unclear on what you are trying to do, but you can grab the referrer with JavaScript using:</p>\n\n<pre><code>document.referrer\n</code></pre>\n\n<p>...and pass it along to the server in your request for the JS file. Several ways to do this...here's one:</p>\n\n<pre><code>&lt;script&gt;\n var e = document.createElement(\"script\");\n e.src = 'someJSfile.js?referrer='+document.referrer;\n e.type=\"text/javascript\";\n document.getElementsByTagName(\"head\")[0].appendChild(e);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 63
                }
            ],
            "body": "<p>If I search for something on google and click on a result (mytestsite.com), the referer to that site will be URL of the google search.</p>\n\n<p>Now on that site, there is a JS file include that is used for tracking purposes..however the referrer to that JS file request is mytestsite.com...is there no way for the server handling the JS request to know that it originated from a google search?</p>\n",
            "last_activity_date": 1377776847,
            "question_id": 2157396,
            "score": 20,
            "tags": [
                "javascript",
                "referrer"
            ],
            "title": "How do you get the Url Referer via a javascript include?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There is a <a href=\"http://www.w3schools.com/jsref/jsref_slice_array.asp\">slice</a> method</p>\n\n<pre><code>array.slice(0, 4);\n</code></pre>\n\n<p>Will return the first four elements. </p>\n\n<p>Don't forget to assign it back to your variable if you want to discard the other values.</p>\n\n<p>Note: This is just regular javascript, no need for jquery.</p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>If you want to both get the elements as well as remove them from the array, use <a href=\"http://www.w3schools.com/jsref/jsref%5Fsplice.asp\" rel=\"nofollow\">splice</a>.</p>\n\n<p>If you want to keep the elements in the array, use <a href=\"http://www.w3schools.com/jsref/jsref%5Fslice%5Farray.asp\" rel=\"nofollow\">slice</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you want to selectively pull elements out of an array, you can use the <a href=\"http://docs.jquery.com/Utilities/jQuery.grep#arraycallbackinvert\" rel=\"nofollow\">jQuery.grep</a> method.</p>\n\n<p>(from the jQuery docs)</p>\n\n<pre><code>var arr = [ 1, 9, 3, 8, 6, 1, 5, 9, 4, 7, 3, 8, 6, 9, 1 ];\n\n$(\"div\").text(arr.join(\", \"));\n\narr = jQuery.grep(arr, function(n, i){\n  return (n != 5 &amp;&amp; i &gt; 4);\n});\n\n$(\"p\").text(arr.join(\", \"));\n\narr = jQuery.grep(arr, function (a) { return a != 9; });\n$(\"span\").text(arr.join(\", \"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If your asking how to truncate (modify an array by removing the elements from the end) use <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Global%5FObjects/Array/splice\">splice</a>:</p>\n\n<pre><code>var a1 = [2,4,6,8];\nvar a2 = a1.splice(-2,2); // a1=[2,4], a2=[6,8]\n</code></pre>\n\n<p>If your asking how to retrieve a subset of an array without modifying the original, use <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Global%5FObjects/Array/slice\">slice</a>.</p>\n\n<pre><code>var a1 = [2,4,6,8];\nvar a2 = a1.slice(-2); // a1=[2,4,6,8], a2=[6,8]\n</code></pre>\n\n<p>Just remember splice modifies, slice accesses. Negative numbers as first arg indicate index from the end of the array.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>(2 years later...) If you're truly looking to truncate an array, you can also use the <code>length</code> attribute:</p>\n\n<pre><code>var stooges = [\"Moe\", \"Larry\", \"Shemp\", \"Curly\", \"Joe\"];\nstooges.length = 3; // now stooges is [\"Moe\", \"Larry\", \"Shemp\"]\n</code></pre>\n\n<p>Note: if you assign a length which is <strong>longer</strong> than current length, <code>null</code> values are introduced, as shown below.</p>\n\n<pre><code>var stooges = [\"Moe\", \"Larry\", \"Shemp\"];\nstooges.length = 5; //now stooges is [\"Moe\", \"Larry\", \"Shemp\", null, null]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                }
            ],
            "body": "<p>Linq has a convenient operator method called Take() to return a given number of elements in anything that implements IEnumerable. Is there anything similar in jQuery for working with arrays?</p>\n",
            "last_activity_date": 1421033556,
            "question_id": 953071,
            "score": 20,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "What&#39;s an easy way to truncate an array with Jquery?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Use <a href=\"http://docs.cksource.com/ckeditor_api/symbols/CKEDITOR.editor.html#insertHtml\">insertHtml()</a> or <a href=\"http://docs.cksource.com/ckeditor_api/symbols/CKEDITOR.editor.html#insertText\">insertText()</a> method.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I have used the below code and it is working fine as describing-></p>\n\n<pre><code>CKEDITOR.instances.mail_msg.insertText(obj[\"template\"]);\n</code></pre>\n\n<p>Here->\n<code>CKEDITOR</code>       ->Your editor Name,\n<code>mail_msg</code>       -> Id of your textarea(to which u bind the ckeditor),\n<code>obj[\"template\"]</code>->is the value that u want to bind</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>the insertHtml() &amp; insertText() methods will insert data into the editor window, adding to whatever is there already.</p>\n\n<p>However, looks to me like the OP wanted to replace the entire editor content, in which case you'd want to use <a href=\"http://docs.cksource.com/ckeditor_api/symbols/CKEDITOR.editor.html#setData\">setData()</a>.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<pre><code>CKEDITOR.instances[**ckeditorname**].setData(**yourdata**)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Take care to strip out newlines from any string you pass to <code>setData().</code> Otherwise an exception gets thrown.</p>\n\n<p>Also note that even if you do that, then subsequently get that data again using <code>getData(),</code> CKEditor puts the line breaks back in.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Sets the editor data. The data must be provided in the raw format (HTML).\nCKEDITOR.instances.editor1.setData( 'Put your Data.' );\n<a href=\"http://docs.cksource.com/ckeditor_api/symbols/CKEDITOR.editor.html#setData\" rel=\"nofollow\">refer this page</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am wondering how I can set a value in <code>CKEditor</code> using Javascript?</p>\n\n<p>I have tried the following, but neither of them work...</p>\n\n<pre><code>document.[form name].[textarea name].value=data;\n$('#textareaID').val(data);\n</code></pre>\n\n<p>However, both these work without the editor applied. Is there a way I can do this with the editor?</p>\n",
            "last_activity_date": 1421658553,
            "question_id": 3610010,
            "score": 19,
            "tags": [
                "javascript",
                "ckeditor"
            ],
            "title": "How do I set a value in CKEditor with Javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>No, it's not possible. This UI interaction is some goodness that webkit implements, but is not actually specced. See <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#text-state-and-search-state\" rel=\"nofollow\">here</a>. So even if it were possible--you can't expect this UI to be implemented in Gecko, for example, if and when they ever add type=search.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>I don't know that this is the <em>correct</em> answer, but the <code>click</code> event handler is called when the user clears the input using the X button.</p>\n\n<pre><code>$('input[type=\"search\"]').click(function(event) {\n    // This code runs anytime a user clicks on the input,\n    // including when they clear it using the X button.\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It seems miketaylr is correct, it isn't possible to catch this event. See the answer for this question: <a href=\"http://stackoverflow.com/questions/2977023/how-do-you-detect-the-clearing-of-a-search-html5-input\">http://stackoverflow.com/questions/2977023/how-do-you-detect-the-clearing-of-a-search-html5-input</a></p>\n\n<p>For the sake of being standards-compliant and not relying on one feature of one layout engine, I suggest you run your code on an <code>onChange</code> event, if the new text value is empty.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This page: <a href=\"http://css-tricks.com/webkit-html5-search-inputs/\">http://css-tricks.com/webkit-html5-search-inputs/</a> mentions a comment from Ajaxian:</p>\n\n<blockquote>\n  <p>There are also some custom events too \u2013 such as \u2019search\u2019 which fires\n  when the user pauses typing (set \u2018incremental\u2019 to true).</p>\n</blockquote>\n\n<p>When testing, I found that this 'search' event also gets called when the input is cleared (at least in the latest version of Safari).</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>You could add a condition to check if the contents of the search field are empty but this is all no good even with a timeout because it runs the code first then clears the box.\nThe other problem is that the code would not react to the close button when you are editing the field</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can listen for the \"input\" event too, this is more generic than \"search\" event but still catches the reset option.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In HTML5 there is a new input type, 'search'.\nOn most browser it's just remain to a simple 'text' input, but for webkit based browsers, it adds a little cross to reset the input.</p>\n\n<p>I'd like to be able to handle this, is there an event for that?</p>\n",
            "last_activity_date": 1375463878,
            "question_id": 2492722,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events",
                "html5"
            ],
            "title": "Are there any events available for the reset option for input search?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There are the slideDown, slideUp, and slideToggle functions native to jquery 1.3+, and they work quite nicely...</p>\n\n<p><a href=\"http://docs.jquery.com/Effects\">http://docs.jquery.com/Effects</a></p>\n\n<p>You can use slideDown just like this:</p>\n\n<pre><code>$(\"test\").slideDown(\"slow\");\n</code></pre>\n\n<p>And if you want to combine effects and really go nuts I'd take a look at the animate function which allows you to specify a number of CSS properties to shape tween or morph into.  Pretty fancy stuff, that.</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Use <a href=\"http://docs.jquery.com/Effects/slideDown\"><code>slidedown()</code></a>:</p>\n\n<p>$(\"test\").slideDown(\"slow\");</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You can also use a fadeIn/FadeOut Combo, too....</p>\n\n<pre><code>$('.test').bind('click', function(){\n    $('.div1').fadeIn(500); \n    $('.div2').fadeOut(500);\n    $('.div3').fadeOut(500);\n    return false;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>By default if you specify a speed jquery adds a weird looking animation where it expands from the left end corner. I want it to just slide down. Is there a way to do that without importing something else like jquery UI ?</p>\n\n<p>I'm looking something in the lines of :</p>\n\n<pre><code>$(\"test\").show('slow', {animation:'slide'})\n</code></pre>\n\n<p>If there's no way, then what would be the lightest solution to do this?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1369423899,
            "question_id": 1428321,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "animation"
            ],
            "title": "Change the jquery show()/hide() animation?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You can call the functions from inside another function</p>\n\n<pre><code>&lt;input id =\"btn\" type=\"button\" value=\"click\" onclick=\"todo()\"/&gt;\n\nfunction todo(){\npay(); cls();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Why don't you create a single function that calls both of those, and then use it in the event?</p>\n\n<pre><code>function myFunction(){\n    pay();\n    cls();\n}\n</code></pre>\n\n<p>And then, for the button:</p>\n\n<pre><code>&lt;input id=\"btn\" type=\"button\" value=\"click\" onclick=\"myFunction();\"/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Add semi-colons <code>;</code> to the end of the function calls in order for them both to work.</p>\n\n<pre><code> &lt;input id=\"btn\" type=\"button\" value=\"click\" onclick=\"pay(); cls();\"/&gt;\n</code></pre>\n\n<p>I don't believe the last one is <em>required</em> but hey, might as well add it in for good measure.</p>\n\n<p>Here is a good reference from SitePoint <a href=\"http://reference.sitepoint.com/html/event-attributes/onclick\">http://reference.sitepoint.com/html/event-attributes/onclick</a></p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>Try this</p>\n\n<pre><code>&lt;input id =\"btn\" type=\"button\" value=\"click\" onclick=\"pay();cls()\"/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>With jQuery : </p>\n\n<pre><code>jQuery(\"#btn\").on(\"click\",function(event){\n    event.preventDefault();\n    pay();\n    cls();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just to offer some variety, the <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Comma_Operator\" rel=\"nofollow\">comma operator</a> can be used too but some might say \"noooooo!\", but it works:</p>\n\n<pre><code>&lt;input type=\"button\" onclick=\"one(), two(), three(), four()\"/&gt;\n</code></pre>\n\n<p><a href=\"http://jsbin.com/oqizir/1/edit\" rel=\"nofollow\">http://jsbin.com/oqizir/1/edit</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>onclick=\"pay(); cls();\"\n</code></pre>\n\n<p>however, if you're using a return statement in \"pay\" function the execution will stop and \"cls\" won't execute,</p>\n\n<p>a workaround to this:</p>\n\n<pre><code>onclick=\"var temp = function1();function2(); return temp;\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>put a semicolon between the two functions as statement terminator.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Binding events from html is NOT recommended. This is recommended way:</p>\n\n<pre><code>document.getElementById('btn').addEventListener('click', function(){\n    pay();\n    cls();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><strong>HTML &amp; JS</strong></p>\n\n<p>How do I call 2 functions from one onclick event? \nHere's my code</p>\n\n<pre><code> &lt;input id =\"btn\" type=\"button\" value=\"click\" onclick=\"pay() cls()\"/&gt;\n</code></pre>\n\n<p>the two functions being pay() and cls(). \nThanks!     </p>\n",
            "last_activity_date": 1408677048,
            "question_id": 16025138,
            "score": 18,
            "tags": [
                "javascript",
                "html",
                "onclick"
            ],
            "title": "Call two functions from same onclick"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Don't know Rapha\u00ebl but looking at the docs and knowing other drawing APIs, I'll make a semi-educated guess.</p>\n\n<p>In graphics (Rapha\u00ebl and anywhere else) matrices are used to transform (move, rotate, etc) the artwork. You'll find a similar API for the HTML5 <code>canvas</code> element itself.</p>\n\n<p>When you use the <code>Element.transform</code> method to move and rotate the drawing surface. Like moving a piece of paper under your pen before you start drawing again. Internally, such transformations are done using a transformation matrix. It's a very useful, if a little cryptic at first, feature. In fact, it's how 3D graphics work, too.</p>\n\n<p>Furthermore, matrices can be added onto each other, so you can have one matrix that translates horizontally, one that translates vertically, and one that rotates (and so on and so on), and add them together to get the combined effects.</p>\n\n<p>Again, I'm extrapolating here; I don't know Rapha\u00ebl. But that's the basic use of matrices in graphics.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Also in addition to the above, Raphael was once confined to only rotate scale translate but with the authors exposure of Matrix into the syntax any transform is possible for 2d graphics</p>\n\n<p>Go to <a href=\"http://www.irunmywebsite.com/raphael/additionalhelp.php\" rel=\"nofollow\">http://www.irunmywebsite.com/raphael/additionalhelp.php</a>\nfor interactive examples You can filter by selecting 'matrix' in the drop down and working through those examples.\nYou can also search by Matrix to get a different subset of examples.</p>\n\n<p>For example there is a type of transform called 'skew'\nIf you search for this on the page you will see another example showing this.</p>\n\n<p>Don't be shy of Matrix, it's an interesting subject</p>\n\n<p>On iPod so could not hyperlink</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There's almost no good, clear information on Matrix in Raphael anywhere. However, the good news is, it's almost exactly the same as Matrix transformations in SVG and also CSS3.</p>\n\n<p>There are some guides to matrix transforms in SVG, but they usually assume you already understand matrix maths. Not much use if you don't.</p>\n\n<p>There is, however, <a href=\"http://www.useragentman.com/blog/2011/01/07/css3-matrix-transform-for-the-mathematically-challenged/\">one good guide on matrix maths in CSS3</a>. It also comes with a <a href=\"http://www.useragentman.com/matrix/\">Matrix Construction Set</a> (as of Feb 2013, it doesn't work in Chrome but works in Firefox). Since the mathematical principles behind CSS3 and Raphael matrix transforms are essentially the same, you can use this tool to generate a set of matrix transform numbers then apply them in Raphael and it should be more or less the same result.</p>\n\n<p>Super-quick overview of what Matrix transforms are all about:</p>\n\n<ul>\n<li>It's a set of 6 numbers that are used to calculate where each corner of the bounding box of a Raphael shape will be after the transformation has completed. Between them, these 6 numbers can create pretty much any scale, transform, rotate and shear effects. </li>\n<li>It's the behind-the-scenes engine for Raphael transforms: Raphael translates transforms into matrix co-ordinates. Matrix co-ordinates can get seriously mind-boggling: unless you're doing something extremely complex, it's usually best to just let it do it's thing under the hood.</li>\n<li>Here's an <a href=\"http://xkcd.com/184/\"><strong>XKCD joke</strong></a> illustrating the mathematical relationship between the 6 numbers behind matrix transformations. You'll either find this funny, or, it'll convince you that it's best to just let Raphael do the maths itself under the hood..\n.</li>\n</ul>\n\n<p><img src=\"http://i.stack.imgur.com/e0LMa.png\" alt=\"enter image description here\"></p>\n\n<ul>\n<li>To <strong>look at an element's current matrix state</strong>:\n<ul>\n<li>To look at the element's matrix object directly: <code>someElement.matrix</code> is an object with each number given by letter (e.g. <code>{a:1,b:0,c:0,d:1,e:0,f:0}</code>. Setting these directly doesn't change the object (so you can't do <code>someElement.matrix.b = 3;</code>)</li>\n<li>You can reverse-translate the current matrix into a more human-readable object containing transformation attributes using <code>someElement.matrix.split()</code></li>\n<li>You can also reverse-translate the matrix into a transform string with <code>someElement.matrix.toTransformString();</code></li>\n</ul></li>\n<li>If you need to <strong>set a matrix manually</strong>, you can do it one of these ways. All of these replace or animate from the previous transform:\n<ul>\n<li><strong>Animated (using array)</strong>: <code>someElement.animate({transform: ['m',0.5, -0.5, 0.5, 0.5, -0.5, 0.5]}, 1000);</code></li>\n<li><strong>Instant (using array)</strong>: <code>someElement.transform(['m',0.5, -0.5, 0.5, 0.5, -0.5, 0.5]);</code></li>\n<li><strong>Animated (using string)</strong>: <code>someElement.animate({transform: 'm0.5 -0.5 0.5 0.5 -0.5 0.5'}, 1000);</code></li>\n<li><strong>Instant (using string)</strong>: <code>someElement.transform('m0.5 -0.5 0.5 0.5 -0.5 0.5');</code></li>\n</ul></li>\n<li>This is default matrix string: <code>1 0 0 1 0 0</code>. Applying this resets a transform to its default state.</li>\n<li>What each matrix number means is very difficult to characterize. <em>In isolation</em>, <code>a</code> works like x-scale, <code>b</code> like y-shear, <code>c</code> like x-shear, <code>d</code> like y-scale, and <code>e</code> and <code>f</code> like x and y move. But they interact in mathematically complex ways. It's not simple.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p>I'm trying to get a better understanding of raphael.js in general, but i've found that the raphael.js documentation can be confusing at times and at other times a bit vague.</p>\n\n<p>can anyone explain to me what matrix is for and how it is used?</p>\n",
            "last_activity_date": 1360254384,
            "question_id": 10939195,
            "score": 18,
            "tags": [
                "javascript",
                "svg",
                "raphael"
            ],
            "title": "What is a &quot;matrix&quot; for in raphael"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can get window's visible area by, </p>\n\n<pre><code>var pwidth = $(window).width();\nvar pheight = $(window).height();\n</code></pre>\n\n<p>Then get document scroll,</p>\n\n<pre><code>$(document).scroll(function(e) {\n       var top = $(this).scrollTop();       \n       $(\"h1\").html(\"total visible area is from:\"+ top +\" to \"+ (pheight + top) +\"px\");\n    });\n</code></pre>\n\n<p>Full example is here : <a href=\"http://jsfiddle.net/parag1111/kSaNp/\" rel=\"nofollow\">http://jsfiddle.net/parag1111/kSaNp/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Basically, you'd first have to measure the viewport dimentions, by using the window object, then you'd need to loop through each of the elements that you want to check, and calculate wether they fit.</p>\n\n<p>See this <a href=\"http://jsfiddle.net/jdDLp/4/\" rel=\"nofollow\">jsfiddle</a> for an example.</p>\n\n<p>Here's the code (for posterity's sake):</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"info\"&gt;\n    &lt;p class=\"wxh\"&gt;&lt;/p&gt;\n    &lt;p class=\"txl\"&gt;&lt;/p&gt;\n    &lt;p class=\"report\"&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;h1&gt;A big list!&lt;/h1&gt;\n&lt;ul&gt;&lt;/ul&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>#info{\n    position: fixed;\n    right: 0px;\n    text-align: center;\n    background: white;\n    border: 2px solid black;\n    padding: 10px;\n}\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>    $(function(){\n\n    $(window).bind('scroll.measure resize.measure',function(){\n\n        // Gather together the window width, height, and scroll position.\n        var winWidth = $(window).width(),\n            winHeight = $(window).height(),\n            winLeft = $(window).scrollLeft(),\n            winTop = $(window).scrollTop(),\n            winBottom = winTop + winHeight,\n            winRight = winLeft + winWidth,\n            inView = [];\n\n        // Loop over each of the elements you want to check\n        $('.inview').each(function(){\n\n            // Get the elements position and dimentions.\n            var pos = $(this).position(),\n                width = $(this).outerWidth(),\n                height = $(this).outerHeight();\n\n            // Set bottom and right dimentions.\n            pos.bottom = pos.top + height;\n            pos.right = pos.left + width;\n\n            // Check whether this element is partially within\n            // the window's visible area.\n            if((\n                pos.left &gt;= winLeft &amp;&amp;\n                pos.top &gt;= winTop &amp;&amp;\n                pos.right &lt;= winRight &amp;&amp;\n                pos.bottom &lt;= winBottom\n            ) || (\n                pos.left &gt;= winLeft &amp;&amp; pos.top &gt;= winTop &amp;&amp; \n                pos.left &lt;= winRight &amp;&amp; pos.top &lt;= winBottom\n            ) || (\n                pos.right &lt;= winRight &amp;&amp; pos.bottom &lt;= winBottom &amp;&amp;\n                pos.right &gt;= winLeft &amp;&amp; pos.bottom &gt;= winTop\n            )){\n                // Change this to push the actual element if you need it.\n                inView.push( $(this).text() );\n            }\n        });\n\n        // For the purposes of this example, we only need the\n        // first and last element, but in your application you may need all.\n        var first = inView.shift(),\n            last = inView.pop();\n\n        // Show the details in the info box.\n        $('#info .wxh').text( winWidth+' x '+winHeight );\n        $('#info .txl').text( winTop+' x '+winLeft );\n        $('#info .report').text( 'Showing from '+first+' to '+last );\n    });\n\n    // The rest is just setup stuff, to make the area scrollable.\n    for( var i=0; i&lt;100; i++ ){\n        $('ul').append('&lt;li class=\"inview\"&gt;List item '+i+'&lt;/li&gt;');\n    }\n\n    $(window).trigger('resize.measure');\n})    \u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try it :) <a href=\"http://jsfiddle.net/Aj2fU/5/\">http://jsfiddle.net/Aj2fU/5/</a></p>\n\n<pre><code>$('input').click(function(){\n   // check for visible divs with class 'check'   \n    $('.check').each(function(){\n        var pos = $(this).offset(),\n            wX = $(window).scrollLeft(), wY = $(window).scrollTop(),\n            wH = $(window).height(), wW = $(window).width(),\n            oH = $(this).outerHeight(), oW = $(this).outerWidth();\n\n        // check the edges\n        // left, top and right, bottom are in the viewport\n        if (pos.left &gt;= wX &amp;&amp; pos.top &gt;= wY &amp;&amp; \n            oW + pos.left &lt;= wX + wW &amp;&amp; oH + pos.top &lt;= wY + wH )\n            alert('Div #' + $(this).attr('id') + ' is fully visible');\n        else // partially visible   \n        if (((pos.left &lt;= wX &amp;&amp; pos.left + oW &gt; wX) ||\n             (pos.left &gt;= wX &amp;&amp; pos.left &lt;= wX + wW)) &amp;&amp;\n            ((pos.top &lt;= wY &amp;&amp; pos.top + oH &gt; wY)   ||\n             (pos.top  &gt;= wY &amp;&amp; pos.top  &lt;= wY + wH)))\n            alert('Div #' + $(this).attr('id') + ' is partially visible');\n        else // not visible \n            alert('Div #' + $(this).attr('id') + ' is not visible');\n    });        \n});\u200b\n</code></pre>\n\n<p><strong>Updated</strong> to work with very wide divs. Basically it checks whether the left, top and right, bottom edges of the divs are both in the visible part of the screen, partially or outside of the viewport.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Using the following, you can get the browser's viewport size.</p>\n\n<pre><code>window.innerHeight;\nwindow.innerWidth;\n</code></pre>\n\n<p><a href=\"http://bit.ly/zzzVUv\" rel=\"nofollow\">http://bit.ly/zzzVUv</a> - Had to use Google Cache as site would not load for me.\nOriginal page:\n<a href=\"http://www.javascripter.net/faq/browserw.htm\" rel=\"nofollow\">http://www.javascripter.net/faq/browserw.htm</a></p>\n\n<p>If you want to detect how far they have scrolled down the page, you can use</p>\n\n<pre><code>window.scrollX;   // Horizontal scrolling\nwindow.scrollY;   // Vertical scrolling\n</code></pre>\n\n<p>Also, I have found a window object - window.screen. On my system it has the following data:</p>\n\n<pre><code>window.screen.availHeight = 994;\nwindow.screen.availLeft = 0;\nwindow.screen.availTop = 0;\nwindow.screen.availWidth = 1280;\nwindow.screen.colorDepth = 32;\nwindow.screen.height = 1280;\nwindow.screen.pixelDepth = 32;\nwindow.screen.width = 1280;\n</code></pre>\n\n<p>I hope these answer your question sufficiently.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>As you can see the image below, there is \"A\", \"B\", \"C\", \"D\" and \"E\" on the website, and the user may only can see the A, B, and a little parts of D in their browser. They need to require to scroll down the browser or some users may have a bigger screen, or a longer window on their browser that allow they can even see the element C. </p>\n\n<p>Ok, my question is, is this possible to let me know what the user seeing on their browser using javascript? In this element, is \"A\", \"B\" and \"D\".</p>\n\n<p><img src=\"http://i.stack.imgur.com/Y4ob8.png\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1329250760,
            "question_id": 9271747,
            "score": 18,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Can I detect the user viewable area on the browser?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I think I'd start by asking \"What do you like about the two frameworks that you would like to merge?\"  </p>\n\n<p>If, for instance, you like Knockout models and Backbone views, you should be able use the components from the two since the views and models are not tightly coupled in either technology.</p>\n\n<p>But, I'd step back and ask a higher-level question: \"What are you trying to achieve\"?</p>\n\n<p>I am guessing that you are looking to get Backbone views to have two-way binding.  In that case, you might look at this thread about <a href=\"https://groups.google.com/group/backbonejs/browse_thread/thread/a506f5dea3947adb#\" rel=\"nofollow\">two-way binding in Backbone</a>.</p>\n\n<p>If you are looking for something else, we can probably point you to other resources.  If we know better what you want to achieve, ultimately, we can probably help you further.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Did you see this yet? \n<a href=\"http://kmalakoff.github.com/knockback/\">http://kmalakoff.github.com/knockback/</a></p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>You could checkout knockback in github</p>\n\n<p><a href=\"http://kmalakoff.github.com/knockback/\" rel=\"nofollow\">http://kmalakoff.github.com/knockback/</a></p>\n\n<p>Been looking it over but find the docs unclear.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I just wrote a blog on Knockback, with some very simple examples that should be easy to follow:\n<a href=\"http://www.geekdave.com/?p=79\">http://www.geekdave.com/?p=79</a></p>\n\n<p>Hopefully this will be helpful in understanding how the two frameworks (Knockout and Backbone) can be used together.  Feedback is welcome!</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I'm a real big fan of knockoutjs.  I've see a number of posts saying that knockoutjs &amp; backbone work well together.  But I'm having trouble getting started with backbone and don't understand how the two can be used together.  Are there any resources that would show how to use knockoutjs and backbone together?</p>\n\n<p>Note, I'm not looking for a discussion about which is better.  There are enough posts on this point.</p>\n",
            "last_activity_date": 1344032358,
            "question_id": 7992431,
            "score": 18,
            "tags": [
                "javascript",
                "backbone.js",
                "knockout.js",
                "knockback.js"
            ],
            "title": "Using Knockoutjs &amp; Backbone together"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<h1>For Backbone 1.1 or newer</h1>\n\n<h2>Approach A: OptionsInLiteral with _.defaults in initialize</h2>\n\n<pre><code>var MyView = Backbone.View.extend({\n  options: {\n    enabled: true,\n    align:   \"left\"\n  },\n  initialize: function (options) {\n    #be sure to do the '|| {}' here so 'new MyView()' works\n    this.options = _.defaults(options || {}, this.options);\n  }\n});\n</code></pre>\n\n<h2>Approach B: Use the viewOptions plugin (or similar)</h2>\n\n<p><a href=\"https://github.com/rotundasoftware/backbone.viewOptions\" rel=\"nofollow\">backbone.viewOptions</a></p>\n\n<p>Thanks to @BraveDave for pointing this out in a comment.</p>\n\n<h1>For Backbone prior to version 1.1 (historical reference, FYI)</h1>\n\n<p><a href=\"https://github.com/documentcloud/backbone/issues/2458#issuecomment-15991661\" rel=\"nofollow\">Here is the backbone issue</a> where it seems like the core team is most likely to get rid of <code>this.options</code> and the logic in <code>_configure</code> altogether.</p>\n\n<h2>Use an options property and always use this.options</h2>\n\n<p>There is much confusion on this question and even a highly upvoted and accepted incorrect answer. Hopefully this answer demonstrates a truly correct solution as well as pointing out the bugs in all the other candidate answers.</p>\n\n<p>To work in harmony with the <code>Backbone.View</code> parent class, you are supposed to include an <code>options</code> property of the object literal you pass to <code>Backbone.View.extend</code>.</p>\n\n<pre><code>var OptionsInLiteral = Backbone.View.extend({\n  options: {flavor: \"vanilla\"},\n  initialize: function (options) {\n    console.log(\"OptionsInLiteral.initialize first argument\", options);\n    console.log(\"OptionsInLiteral.initialize this.options\", this.options);\n  }\n});\n</code></pre>\n\n<p>Here are some examples and what they log to the console.</p>\n\n<pre><code>new OptionsInLiteral();\n    //OptionsInLiteral.initialize first argument undefined\n    //OptionsInLiteral.initialize this.options Object {flavor: \"vanilla\"}\nnew OptionsInLiteral({flavor: \"chocolate\"});\n    //OptionsInLiteral.initialize first argument Object {flavor: \"chocolate\"}\n    //OptionsInLiteral.initialize this.options Object {flavor: \"chocolate\"}\nnew OptionsInLiteral({flavor: \"strawberry\", sprinkles: true});\n    //OptionsInLiteral.initialize first argument Object {flavor: \"strawberry\", sprinkles: true}\n    //OptionsInLiteral.initialize this.options Object {flavor: \"strawberry\", sprinkles: true}\n</code></pre>\n\n<p>This will correctly take advantage of <code>Backbone.View._configure</code>, which as of Backbone 1.0.0 looks like this:</p>\n\n<pre><code>_configure: function(options) {\n  if (this.options) options = _.extend({}, _.result(this, 'options'), options);\n  _.extend(this, _.pick(options, viewOptions));\n  this.options = options;\n},\n</code></pre>\n\n<p>What this means is:</p>\n\n<ul>\n<li>If your view object literal contains <code>options</code>, <code>_configure</code> will properly treat those as default values, override them with properties passed into the constructor, and set the final resulting object as <code>this.options</code>. Hurray. That's what we want.</li>\n<li>This will work even if the view constructor is invoked without arguments. Hurray. Also what we want.</li>\n<li>Because <code>_.result</code> is used here, the <code>options</code> property may be either an <code>Object</code> or a <code>function</code>, and if it's a function, it will be called and the return value will be used.</li>\n</ul>\n\n<p>This is also acceptable and allows the defaults to be unique per instance.</p>\n\n<pre><code>var OptionsFunctionInLiteral = Backbone.View.extend({\n  options: function () {\n    return {\n      flavor: \"vanilla\",\n      created: Date(),\n      collection: new Backbone.Collection()\n    };\n  },\n  initialize: function (options) {\n    console.log(\"OptionsFunctionInLiteral.initialize first argument\", options);\n    console.log(\"OptionsFunctionInLiteral.initialize this.options\", this.options);\n  }\n});\n</code></pre>\n\n<p>Here are some examples and what they log to the console.</p>\n\n<pre><code>new OptionsFunctionInLiteral();\n    //OptionsFunctionInLiteral.initialize first argument undefined\n    //OptionsFunctionInLiteral.initialize this.options Object {flavor: \"vanilla\", created: \"Wed Jun 19 2013 16:20:16 GMT-0600 (MDT)\", collection: Backbone.Collection}\nnew OptionsFunctionInLiteral({flavor: \"chocolate\"});\n    //OptionsFunctionInLiteral.initialize first argument Object {flavor: \"chocolate\"}\n    //OptionsFunctionInLiteral.initialize this.options Object {flavor: \"chocolate\", created: \"Wed Jun 19 2013 16:21:17 GMT-0600 (MDT)\", collection: Backbone.Collection}\nnew OptionsFunctionInLiteral({flavor: \"strawberry\", sprinkles: true});\n    //OptionsFunctionInLiteral.initialize first argument Object {flavor: \"strawberry\", sprinkles: true}\n    //OptionsFunctionInLiteral.initialize this.options Object {flavor: \"strawberry\", created: \"Wed Jun 19 2013 16:22:26 GMT-0600 (MDT)\", collection: Backbone.Collection, sprinkles: true}\n</code></pre>\n\n<h3>Why you should always use this.options</h3>\n\n<p>So the above is great with the caveat that if your view's constructor is called with no arguments, inside your <code>initialize</code> function <code>this.options</code> will exist and be correct but the plain <code>options</code> argument to the <code>initialize</code> function will be <code>undefined</code>.</p>\n\n<pre><code>initialize: function (options) {\n  console.log(options.flavor); //BUG! options is undefined. Uncaught exeption. :-(\n  console.log(this.options); //correct\n}\n</code></pre>\n\n<p>Thus when I define my initialize, I don't even specify the <code>options</code> argument to the function as a reminder not to use it. In general you want to ignore the <code>options</code> argument to <code>initialize</code> because it doesn't contain the default values anyway.</p>\n\n<h2>Buggy answer: _.extend(this.defaults, this.options)</h2>\n\n<p>This answer has a bug in that it unintentionally modifies the defaults for all future instances every time an instance is instatiated.</p>\n\n<pre><code>var DefaultsExtendView = Backbone.View.extend({\n  defaults: {flavor: \"vanilla\"},\n  initialize: function (options) {\n    console.log(\"initialize 1st argument\", options);\n    this.options = _.extend(this.defaults, this.options);\n    console.log(\"initialize this.options\", this.options);\n  }\n});\n\nnew DefaultsExtendView(); //OK\nnew DefaultsExtendView({flavor: \"chocolate\"}); //OK\nnew DefaultsExtendView(); //BUG! You get chocolate instead of vanilla\n</code></pre>\n\n<h2>Buggy answer: if (options.foo)</h2>\n\n<pre><code>var myView = Backbone.View.extend({\n    foo: \"default_value\",\n\n    initialize: function(options) {\n        if(options.foo) {\n            foo = options.foo;\n        }\n    }\n});\n\nnew myView(); //BUG! options is undefined, uncaught exception\n//TypeError: Cannot read property 'foo' of undefined\n</code></pre>\n\n<h2>Beware of options object and instance-specific defaults</h2>\n\n<p>One of the answers to this question suggests this:</p>\n\n<pre><code>var DefaultsView = Backbone.View.extend({\n  defaults: {\n    collection: new Backbone.Collection()\n  },\n  initialize: function () {\n    _.defaults(this.options, this.defaults);\n</code></pre>\n\n<p>Which is almost certainly not what you want and a bug. If you make 10 views, they will all be sharing the same instance of <code>Backbone.Collection</code> as there will just be 1 instance created when the view subclass is defined. This is sure to confuse you when you add a model to view9's collection and it shows up in all of the views. What you more likely want is a different new collection instance for each view instance, and to get that you need to make <code>options</code> be a function as in my example above.</p>\n\n<h2>Summary of the proper way to do this</h2>\n\n<ol>\n<li>use <code>options: {...}</code> or <code>options: function () {...}</code></li>\n<li>Declare your <code>initialize</code> without any arguments</li>\n<li>Access your properly-defaulted options as <code>this.options</code></li>\n</ol>\n\n<h2>Example Boilerplate</h2>\n\n<pre><code>var MyView = Backbone.View.extend({\n  options: {flavor: \"vanilla\"},\n  initialize: function () { //note no declared arguments\n      //use this.options here as needed and all is well\n  }\n});\n</code></pre>\n\n<h2>Working jsfiddle</h2>\n\n<p><a href=\"http://jsfiddle.net/DUc25/\" rel=\"nofollow\">http://jsfiddle.net/DUc25/</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>What you can do is to set your defaults in the <code>initialize</code> function. </p>\n\n<pre><code>defaults: {\n  display: 'list'\n},\n\ninitialize: function() {\n  this.options = _.extend({}, this.defaults, this.options);\n}\n</code></pre>\n\n<p>This will work for normal options, but would not override any special options (the ones that Backbone stores on the view object as well - <code>['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName']</code>)</p>\n\n<p>See a working demo: <a href=\"http://jsfiddle.net/dira/7MmQE/1/\">http://jsfiddle.net/dira/7MmQE/1/</a></p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<pre><code>var DefaultsView = Backbone.View.extend({\n  defaults: {\n    collection: new Backbone.Collection()\n  },\n  initialize: function () {\n    _.defaults(this.options, this.defaults);\n    // Ensures keys with special meaning (model, collection, id, className, etc.), are attached directly to the view\n    Backbone.View.prototype._configure.apply(this, arguments);\n  },\n  render: function () {\n    console.log(this.collection);\n  }\n});\n\nvar view = new DefaultsView();\n\nview.render();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>By Backbone.View's explanation, it says</p>\n\n<blockquote>\n  <p>constructor / initializenew View([options]) </p>\n  \n  <p>When creating a new View, the options you pass are attached to the\n  view as <strong>this.options</strong>, for future reference. There are several special\n  options that, if passed, will be attached directly to the view: <strong>model</strong>,\n  <strong>collection</strong>, <strong>el</strong>, <strong>id</strong> , <strong>className</strong>, <strong>tagName</strong>  and <strong>attributes</strong>. If the view\n  defines an initialize function, it will be called when the view is\n  first created. If you'd like to create a view that references an\n  element already in the DOM, pass in the element as an option: new\n  View({el: existingElement}).</p>\n</blockquote>\n\n<p>I wounder why the defaults is not used in the view in the same way that are used in the Model and Collection.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>An attempt at duck punching.\nFrom Backbone's source code:</p>\n\n<pre><code>var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    this._configure(options || {});\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n    this.delegateEvents();\n};\n</code></pre>\n\n<p>We'll override <code>_configure</code>:</p>\n\n<pre><code>// Save _configure method\nvar _oldConfigure = Backbone.View.prototype._configure;\n\nBackbone.View.prototype._configure = function(options){\n    _.defaults(options, this.defaults); \n    _oldConfigure.call(this, options);\n};\n</code></pre>\n\n<p>Now Backbone.View behaves the same as Backbone.model with regards to defaults, and you don't even need to do anything in the constructor/initialize method.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The correct solution is similar to dira's. Simply specifying an options object in the view spec will contain default values for the options object: <a href=\"http://jsfiddle.net/h3cAU/1/\" rel=\"nofollow\">http://jsfiddle.net/h3cAU/1/</a></p>\n\n<pre><code>var ViewDefaultsDemo = Backbone.View.extend({\n  options: {\n     display: 'list'\n  },\n\n  render: function() {\n    console.log(this.options.display)\n  }\n});\n</code></pre>\n\n<p>See the source for View._configure for additional info: <a href=\"https://github.com/documentcloud/backbone/blob/0.9.10/backbone.js#L1332-L1334\" rel=\"nofollow\">https://github.com/documentcloud/backbone/blob/0.9.10/backbone.js#L1332-L1334</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h1>For Backbone 1.1 or newer</h1>\n\n<h2>Approach A: OptionsInLiteral with _.defaults in initialize</h2>\n\n<pre><code>var MyView = Backbone.View.extend({\n  options: {\n    enabled: true,\n    align:   \"left\"\n  },\n  initialize: function (options) {\n    #be sure to do the '|| {}' here so 'new MyView()' works\n    this.options = _.defaults(options || {}, this.options);\n  }\n});\n</code></pre>\n\n<h2>Approach B: Use the viewOptions plugin (or similar)</h2>\n\n<p>https://github.com/rotundasoftware/backbone.viewOptions</p>\n\n<p>Thanks to @BraveDave for pointing this out in a comment.</p>\n\n<h1>For Backbone prior to version 1.1 (historical reference, FYI)</h1>\n\n<p><a href=\"https://github.com/documentcloud/backbone/issues/2458#issuecomment-15991661\">Here is the backbone issue</a> where it seems like the core team is most likely to get rid of <code>this.options</code> and the logic in <code>_configure</code> altogether.</p>\n\n<h2>Use an options property and always use this.options</h2>\n\n<p>There is much confusion on this question and even a highly upvoted and accepted incorrect answer. Hopefully this answer demonstrates a truly correct solution as well as pointing out the bugs in all the other candidate answers.</p>\n\n<p>To work in harmony with the <code>Backbone.View</code> parent class, you are supposed to include an <code>options</code> property of the object literal you pass to <code>Backbone.View.extend</code>.</p>\n\n<pre><code>var OptionsInLiteral = Backbone.View.extend({\n  options: {flavor: \"vanilla\"},\n  initialize: function (options) {\n    console.log(\"OptionsInLiteral.initialize first argument\", options);\n    console.log(\"OptionsInLiteral.initialize this.options\", this.options);\n  }\n});\n</code></pre>\n\n<p>Here are some examples and what they log to the console.</p>\n\n<pre><code>new OptionsInLiteral();\n    //OptionsInLiteral.initialize first argument undefined\n    //OptionsInLiteral.initialize this.options Object {flavor: \"vanilla\"}\nnew OptionsInLiteral({flavor: \"chocolate\"});\n    //OptionsInLiteral.initialize first argument Object {flavor: \"chocolate\"}\n    //OptionsInLiteral.initialize this.options Object {flavor: \"chocolate\"}\nnew OptionsInLiteral({flavor: \"strawberry\", sprinkles: true});\n    //OptionsInLiteral.initialize first argument Object {flavor: \"strawberry\", sprinkles: true}\n    //OptionsInLiteral.initialize this.options Object {flavor: \"strawberry\", sprinkles: true}\n</code></pre>\n\n<p>This will correctly take advantage of <code>Backbone.View._configure</code>, which as of Backbone 1.0.0 looks like this:</p>\n\n<pre><code>_configure: function(options) {\n  if (this.options) options = _.extend({}, _.result(this, 'options'), options);\n  _.extend(this, _.pick(options, viewOptions));\n  this.options = options;\n},\n</code></pre>\n\n<p>What this means is:</p>\n\n<ul>\n<li>If your view object literal contains <code>options</code>, <code>_configure</code> will properly treat those as default values, override them with properties passed into the constructor, and set the final resulting object as <code>this.options</code>. Hurray. That's what we want.</li>\n<li>This will work even if the view constructor is invoked without arguments. Hurray. Also what we want.</li>\n<li>Because <code>_.result</code> is used here, the <code>options</code> property may be either an <code>Object</code> or a <code>function</code>, and if it's a function, it will be called and the return value will be used.</li>\n</ul>\n\n<p>This is also acceptable and allows the defaults to be unique per instance.</p>\n\n<pre><code>var OptionsFunctionInLiteral = Backbone.View.extend({\n  options: function () {\n    return {\n      flavor: \"vanilla\",\n      created: Date(),\n      collection: new Backbone.Collection()\n    };\n  },\n  initialize: function (options) {\n    console.log(\"OptionsFunctionInLiteral.initialize first argument\", options);\n    console.log(\"OptionsFunctionInLiteral.initialize this.options\", this.options);\n  }\n});\n</code></pre>\n\n<p>Here are some examples and what they log to the console.</p>\n\n<pre><code>new OptionsFunctionInLiteral();\n    //OptionsFunctionInLiteral.initialize first argument undefined\n    //OptionsFunctionInLiteral.initialize this.options Object {flavor: \"vanilla\", created: \"Wed Jun 19 2013 16:20:16 GMT-0600 (MDT)\", collection: Backbone.Collection}\nnew OptionsFunctionInLiteral({flavor: \"chocolate\"});\n    //OptionsFunctionInLiteral.initialize first argument Object {flavor: \"chocolate\"}\n    //OptionsFunctionInLiteral.initialize this.options Object {flavor: \"chocolate\", created: \"Wed Jun 19 2013 16:21:17 GMT-0600 (MDT)\", collection: Backbone.Collection}\nnew OptionsFunctionInLiteral({flavor: \"strawberry\", sprinkles: true});\n    //OptionsFunctionInLiteral.initialize first argument Object {flavor: \"strawberry\", sprinkles: true}\n    //OptionsFunctionInLiteral.initialize this.options Object {flavor: \"strawberry\", created: \"Wed Jun 19 2013 16:22:26 GMT-0600 (MDT)\", collection: Backbone.Collection, sprinkles: true}\n</code></pre>\n\n<h3>Why you should always use this.options</h3>\n\n<p>So the above is great with the caveat that if your view's constructor is called with no arguments, inside your <code>initialize</code> function <code>this.options</code> will exist and be correct but the plain <code>options</code> argument to the <code>initialize</code> function will be <code>undefined</code>.</p>\n\n<pre><code>initialize: function (options) {\n  console.log(options.flavor); //BUG! options is undefined. Uncaught exeption. :-(\n  console.log(this.options); //correct\n}\n</code></pre>\n\n<p>Thus when I define my initialize, I don't even specify the <code>options</code> argument to the function as a reminder not to use it. In general you want to ignore the <code>options</code> argument to <code>initialize</code> because it doesn't contain the default values anyway.</p>\n\n<h2>Buggy answer: _.extend(this.defaults, this.options)</h2>\n\n<p>This answer has a bug in that it unintentionally modifies the defaults for all future instances every time an instance is instatiated.</p>\n\n<pre><code>var DefaultsExtendView = Backbone.View.extend({\n  defaults: {flavor: \"vanilla\"},\n  initialize: function (options) {\n    console.log(\"initialize 1st argument\", options);\n    this.options = _.extend(this.defaults, this.options);\n    console.log(\"initialize this.options\", this.options);\n  }\n});\n\nnew DefaultsExtendView(); //OK\nnew DefaultsExtendView({flavor: \"chocolate\"}); //OK\nnew DefaultsExtendView(); //BUG! You get chocolate instead of vanilla\n</code></pre>\n\n<h2>Buggy answer: if (options.foo)</h2>\n\n<pre><code>var myView = Backbone.View.extend({\n    foo: \"default_value\",\n\n    initialize: function(options) {\n        if(options.foo) {\n            foo = options.foo;\n        }\n    }\n});\n\nnew myView(); //BUG! options is undefined, uncaught exception\n//TypeError: Cannot read property 'foo' of undefined\n</code></pre>\n\n<h2>Beware of options object and instance-specific defaults</h2>\n\n<p>One of the answers to this question suggests this:</p>\n\n<pre><code>var DefaultsView = Backbone.View.extend({\n  defaults: {\n    collection: new Backbone.Collection()\n  },\n  initialize: function () {\n    _.defaults(this.options, this.defaults);\n</code></pre>\n\n<p>Which is almost certainly not what you want and a bug. If you make 10 views, they will all be sharing the same instance of <code>Backbone.Collection</code> as there will just be 1 instance created when the view subclass is defined. This is sure to confuse you when you add a model to view9's collection and it shows up in all of the views. What you more likely want is a different new collection instance for each view instance, and to get that you need to make <code>options</code> be a function as in my example above.</p>\n\n<h2>Summary of the proper way to do this</h2>\n\n<ol>\n<li>use <code>options: {...}</code> or <code>options: function () {...}</code></li>\n<li>Declare your <code>initialize</code> without any arguments</li>\n<li>Access your properly-defaulted options as <code>this.options</code></li>\n</ol>\n\n<h2>Example Boilerplate</h2>\n\n<pre><code>var MyView = Backbone.View.extend({\n  options: {flavor: \"vanilla\"},\n  initialize: function () { //note no declared arguments\n      //use this.options here as needed and all is well\n  }\n});\n</code></pre>\n\n<h2>Working jsfiddle</h2>\n\n<p><a href=\"http://jsfiddle.net/DUc25/\">http://jsfiddle.net/DUc25/</a></p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>This stack is a little misleading to me.  Peter Lyons answer seems like the current correct one though does not have the most votes.</p>\n\n<p>From the Backbone docs...</p>\n\n<p><em>When creating a new View, the options you pass \u2014 after being merged into any default options already present on the view \u2014 are attached to the view as this.options for future reference.</em></p>\n\n<p><a href=\"http://backbonejs.org/#View-constructor\" rel=\"nofollow\">http://backbonejs.org/#View-constructor</a></p>\n\n<p>I was able to make it work by implementing an options in the class definition.</p>\n\n<pre><code>MyScope.MyView = Backbone.View.extend({\n    options: {\n        default_prop: 'value1',\n        another_default: 'value2'\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If I understand the question correctly, you can set defaults in this way:</p>\n\n<pre><code>scope.MyView = Backbone.View.extend({\n    x: 'x',\n})\n\nvar obj = new scope.MyView({\n    y: 'y',\n});\n\nconsole.log( this.options );\n// output: { x: 'x', y:'y' }\n</code></pre>\n\n<p>The problem, and the behavior does not fully reflect what is stated in the View constructor documentation, is that compound objects are not fully copied. This is because <code>_configure</code> uses underscore.js <code>_.extend</code> and it is not recursive.</p>\n\n<p>That means that if you do something like this:</p>\n\n<pre><code>scope.MyView = Backbone.View.extend({\n    x: {\n        a: 'a',\n    }\n})\n\nvar obj = new scope.MyView({\n    x: {\n        b: 'b',\n    }\n});\n\nconsole.log( this.options );\n// output: { x: { b:'b' } }\n</code></pre>\n\n<p>does not work as expected. This is likely to happen if you pass attributes to the view an have default attributes. The attributes you pass will be overwritten.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use <a href=\"https://github.com/rotundasoftware/backbone.viewOptions\" rel=\"nofollow\">the backbone.viewOptions plugin</a>, which does exactly what you are looking for:</p>\n\n<pre><code>// Add the view options plugin functionality to all our views.\nBackbone.ViewOptions.add( Backbone.View.prototype );\n\nMyView = Backbone.View.extend( {\n    options : [\n        \"type\", // normal options are declared like so\n        { \"label\" : \"OK\" } // options with defaults are declared like so\n     ],\n\n    initialize : function( options ) {\n        this.setOptions( options ); // attaches declared options to the view\n\n        console.log( this.label ); // outputs \"OK\"\n        console.log( this.type ); // outputs \"button\"\n    }\n} );\n\nnew MyView( { type : \"button\" } );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm working in <code>Backbone.js</code> and I was wondering if you can set default values much the same way that you can set the default values of a model? </p>\n",
            "last_activity_date": 1389308058,
            "question_id": 7808938,
            "score": 18,
            "tags": [
                "javascript",
                "backbone.js"
            ],
            "title": "Default values of Backbone.js view?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Save a reference to the original <code>console</code> in a variable at the very start of the script and then either use this reference, or redefine <code>console</code> to point to the captured value.</p>\n\n<p>Example:</p>\n\n<pre><code>var c = window.console;\n\nwindow.console = {\n    log :function(str) {\n        alert(str);\n    }\n}\n\n// alerts hello\nconsole.log(\"hello\");\n\n// logs to the console\nc.log(\"hello\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Since original console is in window.console object, try restoring <code>window.console</code> from <code>iframe</code>:</p>\n\n<pre><code>var i = document.createElement('iframe');\ni.style.display = 'none';\ndocument.body.appendChild(i);\nwindow.console = i.contentWindow.console;\n</code></pre>\n\n<p>Works for me on Chrome 14.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Just wanted to add that e.g.</p>\n\n<pre><code>delete console.log\n</code></pre>\n\n<p>would also restore <code>console.log</code>:</p>\n\n<pre><code>console.log = null;\nconsole.log;         // null\n\ndelete console.log;\nconsole.log;         // function log() { [native code] }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Magento has the following code in <code>/js/varien/js.js</code> - comment it out &amp; it will work.</p>\n\n<pre><code>if (!(\"console\" in window) || !(\"firebug\" in console))\n{\n    var names = [\"log\", \"debug\", \"info\", \"warn\", \"error\", \"assert\", \"dir\", \"dirxml\",\n    \"group\", \"groupEnd\", \"time\", \"timeEnd\", \"count\", \"trace\", \"profile\", \"profileEnd\"];\n\n    window.console = {};\n    for (var i = 0; i &lt; names.length; ++i)\n        window.console[names[i]] = function() {}\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><code>delete window.console</code> restore original <code>console</code> object in Firefox and Chrome.</p>\n\n<p><strong>UPDATE</strong> How this work? <code>window</code> is hosted object and usually it implemented with common prototype between all instances (you have many tabs in browser).</p>\n\n<p>Some dumb developers of external libraries/frameworks (or firebug, etc) override property console of <code>window</code> instance, but doesn't corrupt <code>window.prototype</code>. By <code>delete</code> operator we back dispatching from <code>console.*</code> methods to prototype code.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>For some reason, the prototype framework (or another JS code) that is shipped with Magento is replacing standard console functions so I can't debug anything. Writing down in JS console <code>console</code> I get the following output:</p>\n\n<pre><code>&gt; console\nObject\nassert: function () {}\ncount: function () {}\ndebug: function () {}\ndir: function () {}\ndirxml: function () {}\nerror: function () {}\ngroup: function () {}\ngroupEnd: function () {}\ninfo: function () {}\nlog: function () {}\nprofile: function () {}\nprofileEnd: function () {}\ntime: function () {}\ntimeEnd: function () {}\ntrace: function () {}\nwarn: function () {}\n</code></pre>\n\n<p>I'm using <code>Google Chrome version 13.0.782.112</code> on linux.</p>\n\n<p><code>Prototype JavaScript framework, version 1.6.0.3</code></p>\n\n<p>Is there a quick way to solve this?</p>\n",
            "last_activity_date": 1415723208,
            "question_id": 7089443,
            "score": 18,
            "tags": [
                "javascript",
                "google-chrome",
                "prototypejs",
                "console.log"
            ],
            "title": "Restoring console.log()"
        },
        {
            "answer_count": 19,
            "answers": [
                {
                    "body": "<p>The quotes around type=\"text/javascript\" are ending your string before you want to. Use single quotes inside to avoid this problem.</p>\n\n<p>Use this</p>\n\n<pre> type='text/javascript'</pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Your code does not compile. The string you have terminates unexpectedly;</p>\n\n<pre><code>string script = \"&lt;script type=\";\n</code></pre>\n\n<p>That's effectively what you've written. You need to escape your double quotes:</p>\n\n<pre><code>string script = \"&lt;script type=\\\"text/javascript\\\"&gt;alert('\" + cleanMessage + \"');&lt;/script&gt;\";\n</code></pre>\n\n<p>This kind of thing should be painfully obvious since your source code coloring should be completely jacked. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You need to fix this line:</p>\n\n<pre><code>string script = \"&lt;script type=\\\"text/javascript\\\"&gt;alert('\" + cleanMessage + \"');&lt;/script&gt;\"; \n</code></pre>\n\n<p>And also this one:</p>\n\n<pre><code>RegisterClientScriptBlock(\"alert\", script); //lose the typeof thing\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>try:</p>\n\n<pre><code>string script = \"&lt;script type=\\\"text/javascript\\\"&gt;alert('\" + cleanMessage + \"');&lt;/script&gt;\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>string script = string.Format(\"alert('{0}');\", cleanMessage);\nif (page != null &amp;&amp; !page.ClientScript.IsClientScriptBlockRegistered(\"alert\")) \n{\n    page.ClientScript.RegisterClientScriptBlock(page.GetType(), \"alert\", script, true /* addScriptTags */);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>There could be more than one reasons for not working.</p>\n\n<p>1: Are you calling your function properly? i.e. </p>\n\n<pre><code>Repository.Show(\"Your alert message\");\n</code></pre>\n\n<p>2: Try using RegisterStartUpScript method instead of scriptblock. </p>\n\n<p>3: If you are using UpdatePanel, that could be an issue as well.</p>\n\n<p>Check <a href=\"http://dotnetslackers.com/articles/aspnet/JavaScript_with_ASP_NET_2_0_Pages_Part1.aspx#s8\" rel=\"nofollow\">this(topic 3.2)</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here is an easy way:</p>\n\n<pre><code>Response.Write(\"&lt;script&gt;alert('Hello');&lt;/script&gt;\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<pre><code>string script = string.Format(\"alert('{0}');\", cleanMessage);     \nScriptManager.RegisterClientScriptBlock(this, this.GetType(), \"key_name\", script );\", true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use this method after sending the client-side code as a string parameter.</p>\n\n<p><strong>NOTE</strong>: I didn't come up with this solution, but I came across it when I was searching for a way to do so myself, I only edited it a little.</p>\n\n<p>It is very simple and helpful, and can use it to perform more than 1 line of javascript/jquery/...etc or any client-side code</p>\n\n<pre><code>private void MessageBox(string msg)\n{\n    Label lbl = new Label();\n    lbl.Text = \"&lt;script language='javascript'&gt;\" + msg + \"')&lt;/script&gt;\";\n    Page.Controls.Add(lbl);\n}\n</code></pre>\n\n<p>source: <a href=\"http://stackoverflow.com/a/9365713/824068\">http://stackoverflow.com/a/9365713/824068</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>string script = \"&lt;script type=\"text/javascript\"&gt;alert('\" + cleanMessage + \"');&lt;/script&gt;\"; \n</code></pre>\n\n<p>You should use string.Format in this case. This is better coding style. For you it would be:</p>\n\n<pre><code>string script = string.Format(@\"&lt;script type='text/javascript'&gt;alert('{0}');&lt;/script&gt;\");\n</code></pre>\n\n<p>Also note that when you should escape \" symbol or use apostroph instead.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try this method:</p>\n\n<pre><code>public static void Show(string message) \n{                \n    string cleanMessage = message.Replace(\"'\", \"\\'\");                               \n    Page page = HttpContext.Current.CurrentHandler as Page; \n    string script = string.Format(\"alert('{0}');\", cleanMessage);\n    if (page != null &amp;&amp; !page.ClientScript.IsClientScriptBlockRegistered(\"alert\")) \n    {\n        page.ClientScript.RegisterClientScriptBlock(page.GetType(), \"alert\", script, true /* addScriptTags */);\n    } \n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>private void MessageBox(string msg)\n{\n    Label lbl = new Label();\n    lbl.Text  = string.Format(@\"&lt;script type='text/javascript'&gt;alert('{0}');&lt;/script&gt;\",msg);\n    Page.Controls.Add(lbl);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>if you are using ScriptManager on the page then you can also try using this:</p>\n\n<pre><code>System.Web.UI.ScriptManager.RegisterClientScriptBlock(this, this.GetType(), \"AlertBox\", \"alert('Your Message');\", true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>its simple to call a message box, so if you want to code behind or call function, I think it is better or may be not. There is a process, you can just use namespace</p>\n\n<pre><code>using system.widows.forms;\n</code></pre>\n\n<p>then, where you want to show a message box, just call it as simple, as in C#, like:</p>\n\n<pre><code>messagebox.show(\"Welcome\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This message show the alert message directly</p>\n\n<pre><code>ScriptManager.RegisterStartupScript(this,GetType(),\"showalert\",\"alert('Only alert Message');\",true);\n</code></pre>\n\n<p>This message show alert message from JavaScript function</p>\n\n<pre><code>ScriptManager.RegisterStartupScript(this, GetType(), \"displayalertmessage\", \"Showalert();\", true);\n</code></pre>\n\n<p>These are two ways to display alert messages in c# code behind</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>And i think, the line:</p>\n\n<pre><code>string cleanMessage = message.Replace(\"'\", \"\\'\"); \n</code></pre>\n\n<p>does not work, it must be:</p>\n\n<pre><code>string cleanMessage = message.Replace(\"'\", \"\\\\\\'\");\n</code></pre>\n\n<p>You need to mask the <code>\\</code> with a <code>\\</code> and the <code>'</code> with another <code>\\</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Calling a JavaScript function from code behind</strong></p>\n\n<p>Step 1 Add your Javascript code</p>\n\n<pre><code>&lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n    function Func() {\n        alert(\"hello!\")\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>Step 2 Add 1 <strong>Script Manager</strong> in your webForm and Add 1 <strong>button</strong> too</p>\n\n<p>Step 3 Add this code in your button click event </p>\n\n<pre><code>ScriptManager.RegisterStartupScript(this.Page, Page.GetType(), \"text\", \"Func()\", true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this if you want to display the alert box to appear on the same page, without displaying on a blank page.</p>\n\n<pre><code>ScriptManager.RegisterStartupScript(this, GetType(), \"showalert\", \"alert('Sorry there are no attachments');\", true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You need to <a href=\"http://www.w3schools.com/js/js_strings.asp\" rel=\"nofollow\">escape your quotes</a> (Take a look at the \"Special characters\" section). You can do it by adding a slash before them:</p>\n\n<pre><code>string script = \"&lt;script type=\\\"text/javascript\\\"&gt;alert('\" + cleanMessage + \"');&lt;/script&gt;\";\n  Response.Write(script);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am reading this <a href=\"http://archive.devnewz.com/devnewz-3-20061129JavaScriptAlertShowmessagefromASPNETCodebehind.html\">JavaScript: Alert.Show(message) From ASP.NET Code-behind</a></p>\n\n<p>I am trying to implement the same. So I created a static class like this:</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Web;\nusing System.Text;\nusing System.Web.UI;\n\nnamespace Registration.DataAccess\n{\n    public static class Repository\n    {\n        /// &lt;summary&gt; \n        /// Shows a client-side JavaScript alert in the browser. \n        /// &lt;/summary&gt; \n        /// &lt;param name=\"message\"&gt;The message to appear in the alert.&lt;/param&gt; \n        public static void Show(string message) \n            { \n               // Cleans the message to allow single quotation marks \n               string cleanMessage = message.Replace(\"'\", \"\\'\"); \n               string script = \"&lt;script type=\"text/javascript\"&gt;alert('\" + cleanMessage + \"');&lt;/script&gt;\"; \n\n               // Gets the executing web page \n               Page page = HttpContext.Current.CurrentHandler as Page; \n\n               // Checks if the handler is a Page and that the script isn't allready on the Page \n               if (page != null &amp;&amp; !page.ClientScript.IsClientScriptBlockRegistered(\"alert\")) \n               { \n                 page.ClientScript.RegisterClientScriptBlock(typeof(Alert), \"alert\", script); \n               } \n            } \n    }\n}\n</code></pre>\n\n<p>On this line: </p>\n\n<pre><code>string script = \"&lt;script type=\"text/javascript\"&gt;alert('\" + cleanMessage + \"');&lt;/script&gt;\"; \n</code></pre>\n\n<p>It is showing me err: <strong>; Expected</strong></p>\n\n<p>And also on </p>\n\n<pre><code>page.ClientScript.RegisterClientScriptBlock(typeof(Alert), \"alert\", script); \n</code></pre>\n\n<p>Err: <strong>The type or namespace name 'Alert' could not be found (are you missing a using directive or an assembly reference?)</strong></p>\n\n<p>What I am doing wrong here? </p>\n",
            "last_activity_date": 1425060039,
            "question_id": 5825165,
            "score": 18,
            "tags": [
                "c#",
                "javascript",
                "asp.net"
            ],
            "title": "JavaScript: Alert.Show(message) From ASP.NET Code-behind"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I don't believe it's possible to detect a redirect with JavaScript without some previous knowledge of the image properties. The src property of the current DOM will remain the same regardless of any redirect, so that option is out.</p>\n\n<p>I would suggest that you create a proxy script on your server that acts as a go between. For example, your image tag would look something like (with suitable URL encoding, of course):</p>\n\n<pre><code>&lt;img src='/proxy?src=http://example.com/image.png' /&gt;\n</code></pre>\n\n<p>Your proxy script would inspect the headers for redirects before serving the image. It isn't fool proof - but it could allow you to, for example, cache the image on first load so you don't get bandwidth limit errors from the other machine.</p>\n\n<p>If it is just for your own purposes, you might be able to use an ActiveXObject within Internet Explorer to inspect the image in more detail. Can't help you on the specifics though.</p>\n\n<p><em>I assume that you're permitted to hotlink/cache the image with the permission of the other party.</em></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I checked with the following code:</p>\n\n<pre><code>var a=new Image(); a.src='http://example.com/image.png';\nalert( a.width );\n</code></pre>\n\n<p>which in this case returns 0 since the image doesn't exist. </p>\n\n<p>On <a href=\"http://msdn.microsoft.com/en-us/library/dd347092%28VS.85%29.aspx\" rel=\"nofollow\">link text</a> I found quite a few properties that might be worth checking out. And if that fails you might want to look into jQuery and AJAX. </p>\n\n<p><strong>Edit</strong>:<br>\n   <sub>tested on firefox firebug</sub></p>\n\n<pre><code>var a=new Image(); \na.src='http://l.yimg.com/g/images/photo_unavailable_m.gif';\nconsole.log(a.width); // the image exists and returns 240\n\nvar b=new Image(); \nb.src='http://farm3.static.flickr.com/2560/4098180849_729ef4f6ef_m.jpg';\nconsole.log(b.width); // the image does not exist (re-direct) and returns 0\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<blockquote>\n  <p>example .net redirects lolcat.png to\n  <a href=\"http://static.example.net/bandwidth-exceeded.gif\" rel=\"nofollow\">http://static.example.net/bandwidth-exceeded.gif</a></p>\n</blockquote>\n\n<p>What is lolcat.png? I'm guessing its a Handler and essentially it just does this:</p>\n\n<p>&lt;%\nResponse.Redirect(\"bandwidth-exceeded.gif?redirect=true\")\n %></p>\n\n<p>If so, have your tried Helicon's ISAPI URL Rewrite, create a regex rule to append a query string param onto the end of the image's URL</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>the answer to your question\nCan Javascript be used to detect a redirected image SRC (in any popular browser)?\nis simple as you said , nope! because http doesnt have any option for identifying the redirection. This is similar to detecting url redirection, which is simply a limitation for javascript.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>With pure javascript, it's impossible. But with help of server side script (such PHP), it can be easily done. I've made my own free service at <a href=\"http://finalurl.web44.net\" rel=\"nofollow\">http://finalurl.web44.net</a>, useful to resolve simple URL redirection.</p>\n\n<p>To use it, include <code>finalURL.js</code> from within HEAD section, <em>i.e.</em></p>\n\n<pre><code>&lt;script src=\"http://finalurl.web44.net/finalURL.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>To use it, call <code>finalURL( url_to_resolve );</code> function, <em>i.e.</em></p>\n\n<pre><code>var actualURL = finalURL( 'http://dummy.com/beforeRedirectURL.jpg' );\n</code></pre>\n\n<p>If you want to host the back-end PHP code by yourself, check following post:\n<a href=\"http://stackoverflow.com/questions/15598254/find-redirected-img-source\">Find redirected img source</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm guessing nope, but you never know.</p>\n\n<ol>\n<li>Browser loads <code>&lt;img src=\"http://example.net/lolcat.png\"&gt;</code></li>\n<li>example.net redirects <code>lolcat.png</code> to <code>http://static.example.net/bandwidth-exceeded.gif</code></li>\n</ol>\n\n<p>Can I detect this? </p>\n\n<p>Cross-browser isn't important, just looking for an option that will work in any 1 popular browser.</p>\n\n<p>So far my best option is knowing the size of the placeholder image, getting a \"maybe\" by looking at the image size onload (in browsers that support onload events in image tags), and making a quick XHR request notifying the backend that we've got a maybe.</p>\n",
            "last_activity_date": 1390224821,
            "question_id": 4082513,
            "score": 18,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "Can Javascript be used to detect a redirected image SRC (in any popular browser)?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I think mumamo is generally used for this. <a href=\"http://www.emacswiki.org/emacs/MuMaMo\">http://www.emacswiki.org/emacs/MuMaMo</a></p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>I use <a href=\"http://ourcomments.org/Emacs/nXhtml/doc/nxhtml.html\">nXhtml</a> for emacs.  Quoting from the page</p>\n\n<blockquote>\n  <p>One of the main parts of nXhtml is nxhtml-mode, a GNU Emacs major mode that builds on nxml-mode. It knows about XHTML syntax and can check this as you type. It can also tell you what tags and attributes you can use at a certain point and help you insert them.</p>\n  \n  <p>That feature, which we call completion, is one of the main features of this mode. Another important feature is the ability to mix several languages in one buffer and get the correct syntax highlighting and indentation for each of them.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I'd be loathe to call my approach better, but fwiw, I avoid this situation like the plague by putting CSS into .css files and javascript into .js files and then put \"include\" tags in the html file.  Then Emacs handles each nicely.  Admittedly, having three, large monitors with full screen Emacs on each makes side by side buffers containing the files I need hardly painful at all. -:)  And it doesn't work real well in an enterprise environment where I don't have control over what other engineers choose to do. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Multi-web-mode is relatively new and is being actively updated, grab it from elpa (package.el)</p>\n\n<p>You can see the source and docs here <a href=\"https://github.com/fgallina/multi-web-mode\" rel=\"nofollow\">https://github.com/fgallina/multi-web-mode</a> </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Ever since <a href=\"http://web-mode.org/\">web-mode</a> came to existence, I have gotten rid of mumamo and nxhtml. web-mode is easier to use and install. For a start, it uses different syntax highlighting and indentation of a mixed js/html/css file. But for me the really handy thing about it is that it works in other templating languages. Here's an example configuration from their website:</p>\n\n<pre><code>(require 'web-mode)\n(add-to-list 'auto-mode-alist '(\"\\\\.phtml\\\\'\" . web-mode))\n(add-to-list 'auto-mode-alist '(\"\\\\.tpl\\\\.php\\\\'\" . web-mode))\n(add-to-list 'auto-mode-alist '(\"\\\\.jsp\\\\'\" . web-mode))\n(add-to-list 'auto-mode-alist '(\"\\\\.as[cp]x\\\\'\" . web-mode))\n(add-to-list 'auto-mode-alist '(\"\\\\.erb\\\\'\" . web-mode))\n(add-to-list 'auto-mode-alist '(\"\\\\.mustache\\\\'\" . web-mode))\n(add-to-list 'auto-mode-alist '(\"\\\\.djhtml\\\\'\" . web-mode))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>By way of comparison, here are some of the available modes, as of 2014-07-04:</p>\n\n<pre>\n| library        | files | size    | last update | url                                                 |\n|----------------+-------+---------+-------------+-----------------------------------------------------|\n| web-mode       |     1 |  279 kb |  2014-07-03 | https://github.com/fxbois/web-mode                  |\n| polymode       |     7 |  120 kb |  2014-06-14 | https://github.com/vitoshka/polymode                |\n| mmm-mode       |    17 |  185 kb |  2014-02-12 | https://github.com/purcell/mmm-mode                 |\n| multi-web-mode |     1 |   16 kb |  2013-08-23 | https://github.com/fgallina/multi-web-mode          |\n| mumamo         |   115 | 3090 kb |  2010-04-25 | http://ourcomments.org/Emacs/nXhtml/doc/nxhtml.html |\n| multi-mode     |     1 |   23 kb |        2009 | http://www.loveshack.ukfsn.org/emacs/multi-mode.el  |\n\n</pre>\n\n<p>Also added to the Emacs Wiki: <a href=\"http://www.emacswiki.org/emacs/MultipleModes\" rel=\"nofollow\">http://www.emacswiki.org/emacs/MultipleModes</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>typically the code is something like: </p>\n\n<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;style type=\"text/css\"&gt;\n       body { font-size:12pt; font-family: Arial;}\n        ....\n    &lt;/style&gt;\n    &lt;script type=\"text/javascript\" src=\"jquery.1.3.2js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n    &lt;!--\n        $(document).ready(function(){\n          ...\n        });\n        ...\n    --&gt;\n    &lt;/script&gt;\n    &lt;meta ... /&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div&gt;\n      &lt;p&gt;\n       ....\n      &lt;/p&gt;\n      ...\n    &lt;/div&gt;\n    ....\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>I like javascript-mode for the syntaxt highlighting and indenting.  Likewise for sgml-mode for the HTML.  Also I get auto-complete on the open tags.  Css-mode is not so important so it's not so much a priority. </p>\n\n<p>That's 3 disparate languages and 3 modes.  Right now I've been swapping modes manually as I edit different sections.  This works, sort of. </p>\n\n<p>Anyone got a better approach? </p>\n",
            "last_activity_date": 1404508471,
            "question_id": 1909453,
            "score": 18,
            "tags": [
                "javascript",
                "html",
                "css",
                "emacs"
            ],
            "title": "What mode do people use when using Emacs to edit web pages that contain CSS, javascript, and HTML?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>There is in fact one for Javascript: OMeta. <a href=\"http://www.tinlizzie.org/ometa/\" rel=\"nofollow\">http://www.tinlizzie.org/ometa/</a></p>\n\n<p>I also implemented a version of this in Python: <a href=\"http://github.com/python-parsley/parsley\" rel=\"nofollow\">http://github.com/python-parsley/parsley</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p><strong>Have you looked at <a href=\"http://www.antlr.org/\" rel=\"nofollow\">ANTLR</a>?</strong>  It produces lexer and parser code, handles abstract syntax trees, lets you insert code the grammar to be injected into the lexer/parser code, and <strong>its available for a variety of languages!</strong></p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>look at <a href=\"https://github.com/leblancmeneses/NPEG\" rel=\"nofollow\">https://github.com/leblancmeneses/NPEG</a>  can easily be converted into php.\nParse tree is created with anonymous functions.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There's also <a href=\"http://freecode.com/projects/kouprey\" rel=\"nofollow\">Kouprey</a> for JavaScript, which is a very easy to use PEG generator/library.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have recently written <a href=\"http://pegjs.majda.cz/\">PEG.js</a>, PEG-based parser generator for JavaScript. It can be used from a command-line or you can try it from your browser.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>php PEG <a href=\"https://github.com/maetl/php-peg\" rel=\"nofollow\">https://github.com/maetl/php-peg</a></p>\n\n<p>This post is really old but I found it through google, and It should have been answered</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://languagejs.com/\" rel=\"nofollow\">Language.js</a>:</p>\n\n<blockquote>\n  <p>Language.js is an open source experimental new parser based on PEG (Parsing Expression Grammar), with the special addition of the \"naughty OR\" operator to handle errors in a unique new way. It makes use of memoization to achieve linear time parsing speed</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I find myself drawn to the Parsing Expression Grammar formalism for describing domain specific languages, but so far the implementation code I've found has been written in languages like Java and Haskell that aren't web server friendly in the shared hosting environment that my organization has to live with.</p>\n\n<p>Does anyone know of any PEG libraries or PackRat Parser Generators for Javascript or PHP? Of course code generators in any languages that can produce Javascript or PHP source code would do the trick.</p>\n",
            "last_activity_date": 1422402282,
            "question_id": 79584,
            "score": 18,
            "tags": [
                "php",
                "javascript",
                "parsing",
                "generative-programming"
            ],
            "title": "Are there any Parsing Expression Grammar (PEG) libraries for Javascript or PHP?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You can set events on a combination of key and mouse events, and onblur as well, to be sure. In that event, store the value of the input. In the next call, compare the current value with the lastly stored value. Only do your magic if it has actually changed.</p>\n\n<p>To do this in a more or less clean way:</p>\n\n<p>You can associate data with a DOM element (lookup api.jquery.com/jQuery.data ) So you can write a generic set of event handlers that are assigned to all elements in the form. Each event can pass the element it was triggered by to one generic function. That one function can add the old value to the data of the element. That way, you should be able to implement this as a generic piece of code that works on your whole form and every form you'll write from now on. :) And it will probably take no more than about 20 lines of code, I guess.</p>\n\n<p>An example is in this fiddle: <a href=\"http://jsfiddle.net/zeEwX/\" rel=\"nofollow\">http://jsfiddle.net/zeEwX/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yes, compare it to the value it was before it changed.</p>\n\n<pre><code>var previousValue = $(\"#elm\").val();\n$(\"#elm\").keyup(function(e) {\n    var currentValue = $(this).val();\n    if(currentValue != previousValue) {\n         previousValue = currentValue;\n         alert(\"Value changed!\");\n    }\n});\n</code></pre>\n\n<p>Another option is to only trigger your changed function on certain keys. Use <code>e.KeyCode</code> to figure out what key was pressed.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I had to use this kind of code for a scanner that pasted stuff into the field</p>\n\n<pre><code>$(document).ready(function() {\n  var tId,oldVal;\n  $(\"#fieldId\").focus(function() {\n     oldVal = $(\"#fieldId\").val();\n     tId=setInterval(function() { \n      var newVal = $(\"#fieldId\").val(); \n      if (oldVal!=newVal) oldVal=newVal;\n      someaction() },100);\n  });\n  $(\"#fieldId\").blur(function(){ clearInterval(tId)});\n});\n</code></pre>\n\n<p>Not tested...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't think there's a 'simple' solution. You'll probably need to use both the events onKeyUp and onChange so that you also catch when changes are made with the mouse. Every time your code is called you can store the value you've 'seen' on this.seenValue attached right to the field. This should make a little easier.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can employ the use of data in jQuery and catch all of the events which then tests it against it's last value (untested):</p>\n\n<pre><code>$(document).ready(function() {  \n    $(\"#fieldId\").bind(\"keyup keydown keypress change blur\", function() {\n        if ($(this).val() != jQuery.data(this, \"lastvalue\") {\n         alert(\"changed\");\n        }\n        jQuery.data(this, \"lastvalue\", $(this).val());\n    });\n});\n</code></pre>\n\n<p>This would work pretty good against a long list of items too. Using <code>jQuery.data</code> means you don't have to create a javascript variable to track the value. You could do <code>$(\"#fieldId1, #fieldId2, #fieldId3, #fieldId14, etc\")</code> to track many fields.</p>\n\n<p>UPDATE: Added <code>blur</code> to the <code>bind</code> list.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>   function checkChange($this){\n    var value = $this.val();      \n    var sv=$this.data(\"stored\");            \n        if(value!=sv)\n          $this.trigger(\"simpleChange\");    \n    }\n\n$(document).ready(function(){\n$(this).data(\"stored\",$(this).val());   \n    $(\"input\").bind(\"keyup\",function(e){  \n    checkChange($(this));\n});        \n$(\"input\").bind(\"simpleChange\",function(e){\n    alert(\"the value is chaneged\");\n    });        \n});\n</code></pre>\n\n<p>here is the fiddle <a href=\"http://jsfiddle.net/Q9PqT/1/\" rel=\"nofollow\">http://jsfiddle.net/Q9PqT/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is a simple solution, which is the HTML5 <code>input</code> event. It's supported in current versions of all major browsers for <code>&lt;input type=\"text\"&gt;</code> elements and there's a simple workaround for IE &lt; 9. See the following answers for more details:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/5519936/jquery-keyboard-events/5524996#5524996\">jQuery keyboard events</a></li>\n<li><a href=\"http://stackoverflow.com/questions/6488171/catch-only-keypresses-that-change-input/6490241#6490241\">Catch only keypresses that change input?</a></li>\n</ul>\n\n<p>Example (except IE &lt; 9: see links above for workaround):</p>\n\n<pre><code>$(\"#your_id\").on(\"input\", function() {\n    alert(\"Change to \" + this.value);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>Since the user can go into the OS menu and select paste using their mouse, there is no safe event that will trigger this for you. The only way I found that always works is to have a setInterval that checks if the input value has changed:</p>\n\n<pre><code>var inp = $('#input'),\n    val = saved = inp.val(),\n    tid = setInterval(function() {\n        val = inp.val();\n        if ( saved != val ) {\n            console.log('#input has changed');\n            saved = val;\n    },50);\n</code></pre>\n\n<p>You can also set this up using a jQuery special event.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can also store the initail value in a data attribute and test it with the current value</p>\n\n<pre><code>&lt;input type=\"text\" name=\"somename\" id=\"id_someid\" value=\"\" data-initail=\"your initail value\" /&gt; \n\n$( \"#id_someid\" ).keyup(function() {\n    return $(this).val() == $(this).data().initail\n});\n</code></pre>\n\n<p>Would return true if the initail value has not changed</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is it possible to bind javascript (jQuery is best) event to \"change\" form input value somehow? </p>\n\n<p>I know about <code>.change()</code> method, but it does not trigger until you (the cursor) leave(s) the input field. I have also considered using <code>.keyup()</code> method but it reacts also on arrow keys and so on. </p>\n\n<p>I need just trigger an action <strong>every time</strong> the text in the input changes, even if it's only one letter change.</p>\n",
            "last_activity_date": 1407089343,
            "question_id": 7534890,
            "score": 17,
            "tags": [
                "javascript",
                "jquery",
                "input",
                "onchange"
            ],
            "title": "Can jQuery check whether input content has changed?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can't do it with just HTML, you'll need to use Javascript. I recommend using <a href=\"http://jquery.com\" rel=\"nofollow\">jQuery</a>, so your solution can look like this:</p>\n\n<pre><code>$(document).ready(function() {\n    $(window).scroll(function() {\n      // do whatever you need here.\n    });\n});\n</code></pre>\n\n<p>If for whatever reason you don't want or are unable to use <a href=\"http://jquery.com\" rel=\"nofollow\">jQuery</a>, you can use the <code>onscroll</code> solution listed below.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>If you don't want to use jQuery (which you might not do for a very simple HTML page), you can accomplish this using regular Javascript:</p>\n\n<pre><code>&lt;script&gt;\nfunction scrollFunction() {\n    // do your stuff here;\n}\n\nwindow.onscroll = scrollFunction;\n&lt;/script&gt;\n</code></pre>\n\n<p>You mentioned that you wanted to do something when they scroll <strong>down</strong> the page - the onscroll event fires off scrolling in any direction, in either the x- or y-axis, so your function will be called any time they scroll.</p>\n\n<p>If you really want it to only run your code when they scrolled down the page, you'd need to preserve the previous scroll position to compare against whenever onscroll gets called.</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>Just for completeness, there's another solution using another JS framework (Mootools)</p>\n\n<pre><code>window.addEvent('scroll',function(e) {\n    //do stuff\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>Im designing a very simple web page (HTML only), the only \"feature\" I want to implement is to do something when the user scrolls down the page, is there a way to capture that \"event\" somehow?</p>\n\n<p>Thx.</p>\n",
            "last_activity_date": 1393829569,
            "question_id": 4670834,
            "score": 17,
            "tags": [
                "javascript",
                "html",
                "events",
                "javascript-events",
                "scroll"
            ],
            "title": "Capturing the &quot;scroll down&quot; event?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The example they give <a href=\"http://maruku.rubyforge.org/maruku.md\" rel=\"nofollow\">on their site</a> shows an empty <code>&lt;script&gt;</code> tag containing a newline. Maybe that's it?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Markdown supports inline XHTML but not Javascript.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I had this same problem, but I managed to get JavaScript to appear in my code by putting a newline after the opening tag.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>To my experience, markdown will outpus javascript text as plain text as long as you remove the code formatting that may confuse markdown.</p>\n\n<ol>\n<li>remove comments from javascript, as /* ... */ is translated to &lt; em></li>\n<li>remove the space indent in the front of each line. &lt; p> may be inserted according to your indentation.</li>\n</ol>\n\n<p>Basically what I do is to review the generated html and find out what extra tags are inserted in between my javascript code by markdown. And remove the formatting that generates the extra tag.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use <a href=\"http://johnmacfarlane.net/pandoc\" rel=\"nofollow\">pandoc</a>, which handles this input (and javascript generally) just fine.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Different solution that might work in some cases: (the selected answer didn't work for me when I was trying to embed a CodePen example)</p>\n\n<ul>\n<li><p>add this to your default layout:</p>\n\n<pre><code>&lt;!-- Custom JavaScript files set in YAML front matter --&gt;\n{% for js in page.customjs %}\n&lt;script async type=\"text/javascript\" src=\"{{ js }}\"&gt;&lt;/script&gt;\n{% endfor %}\n</code></pre></li>\n<li><p>In posts where you need some JavaScript files, you can add them in the YAML front matter like so:</p>\n\n<pre><code>---\nlayout: post\ntitle: Adding custom JavaScript for a specific post\ncategory: posts\ncustomjs:\n - http://code.jquery.com/jquery-1.4.2.min.js\n - http://yourdomain.com/yourscript.js\n---\n</code></pre></li>\n</ul>\n\n<p>The <code>async</code> might not be necessary or wanted but you could probably add that as a parameter in <code>customjs</code>. (see <a href=\"http://stackoverflow.com/questions/12761152/yaml-front-matter-for-jekyll-and-nested-lists\">YAML front matter for Jekyll and nested lists</a> for details)</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I found that escaping the closing '>' symbol in both, the opening and closing 'script' tags, will display it correctly, for example:</p>\n\n<ul>\n<li><p>If you type the follwing:</p>\n\n<pre><code>&lt;script\\&gt;... javascript code...&lt;/script\\&gt;\n</code></pre></li>\n<li><p>It will be rendered like this:</p>\n\n<pre><code>&lt;script&gt;... javascript code...&lt;/script&gt;\n</code></pre></li>\n</ul>\n\n<p>That's just my two cents.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using the Maruku markdown processor. I'd like this</p>\n\n<pre><code>*blah* blah \"blah\" in [markdown](blah)\n\n&lt;script src=\"http://code.jquery.com/jquery-1.4.2.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n...do stuff...\n&lt;/script&gt;\n</code></pre>\n\n<p>but it complains when I render it with a multitude of errors. The first one being</p>\n\n<pre><code> ___________________________________________________________________________\n| Maruku tells you:\n+---------------------------------------------------------------------------\n| Could you please format this better?\n| I see that \"&lt;script type='text/javascript'&gt;\" is left after the raw HTML.\n| At line 31\n|   raw_html     |&lt;script src='http://code.jquery.com/jquery-1.4.2.min.js' /&gt;&lt;script type='text/javascript'&gt;|\n|       text --&gt; |//&lt;![CDATA[|\n</code></pre>\n\n<p>and then the rest seems like the parser is going nuts. Then it renders the javascript into a div on the page. I've tried making it a CDATA block and extra spacing between the jquery and my script.</p>\n\n<p>Help?</p>\n",
            "last_activity_date": 1382406662,
            "question_id": 2754391,
            "score": 17,
            "tags": [
                "javascript",
                "markdown",
                "maruku"
            ],
            "title": "Embed javascript in markdown"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Looks like you're doing some kind of \"blitting\", so maybe <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#images\" rel=\"nofollow\">drawImage</a> or all-at-once <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#pixel-manipulation\" rel=\"nofollow\">putImageData</a> could help.  Looping a quarter million times to copy pixels individually, rather than using massive \"blitting\" operations, tends to be much slower -- and not just in Javascript;-).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try caching a reference to the <code>data</code> pixel array.  Your slowdown could be attributed to the additional property accesses to <code>imageData.data</code>.  See <a href=\"http://www.onaluf.org/en/entry/13\">this article</a> for more explanation.</p>\n\n<p>E.g.  This should be faster that what you currently have.</p>\n\n<pre><code>var imageData = ctx.getImageData(0, 0, 500, 500),\n    data = imageData.data,\n    len = data.length;\n\nfor (var i = 0; i &lt; len; i += 4){\n data[i] = buffer[i];\n data[i + 1] = buffer[i + 1];\n data[i + 2] = buffer[i + 2];\n}\n\nctx.putImageData(imageData, 0, 0);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>I don't know if this helps you because you want to manipulate pixels, but for me, in Firefox 3.6.8, just the call to putImageData was very, very slow, without doing any pixel manipulation.  In my case, I just wanted to restore a previous version of the image that had been saved with getImageData.  Too slow.</p>\n\n<p>Instead, I got it to work well using toDataUrl/drawImage instead. For me it's working fast enough that I can call it within handling a mousemove event:</p>\n\n<p>To save:</p>\n\n<pre><code>savedImage = new Image()  \nsavedImage.src = canvas.toDataURL(\"image/png\")\n</code></pre>\n\n<p>The to restore:</p>\n\n<pre><code>ctx = canvas.getContext('2d')  \nctx.drawImage(savedImage,0,0)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am trying to do some dynamic visual effects using the HTML 5 canvas' pixel manipulation, but I am running into a problem where setting pixels in the CanvasPixelArray is ridiculously slow.</p>\n\n<p>For example if I have code like:</p>\n\n<pre><code>imageData = ctx.getImageData(0, 0, 500, 500);\n\nfor (var i = 0; i &lt; imageData.length; i += 4){\n    imageData.data[i] = buffer[i];\n    imageData.data[i + 1] = buffer[i + 1];\n    imageData.data[i + 2] = buffer[i + 2];\n}\n\nctx.putImageData(imageData, 0, 0);\n</code></pre>\n\n<p>Profiling with Chrome reveals, it runs 44% slower than the following code where CanvasPixelArray is not used.</p>\n\n<pre><code>tempArray = new Array(500 * 500 * 4);\nimageData = ctx.getImageData(0, 0, 500, 500);\n\nfor (var i = 0; i &lt; imageData.length; i += 4){\n    tempArray[i] = buffer[i];\n    tempArray[i + 1] = buffer[i + 1];\n    tempArray[i + 2] = buffer[i + 2];\n}\n\nctx.putImageData(imageData, 0, 0);\n</code></pre>\n\n<p>My guess is that the reason for this slowdown is due to the conversion between the Javascript doubles and the internal unsigned 8bit integers, used by the CanvasPixelArray.</p>\n\n<ol>\n<li>Is this guess correct?</li>\n<li>Is there anyway to reduce the time spent setting values in the CanvasPixelArray? </li>\n</ol>\n",
            "last_activity_date": 1290742540,
            "question_id": 2573212,
            "score": 17,
            "tags": [
                "javascript",
                "html5",
                "canvas",
                "pixel-manipulation"
            ],
            "title": "Why is setting HTML5&#39;s CanvasPixelArray values ridiculously slow and how can I do it faster?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Here is some info that should be useful:<br>\n<a href=\"http://www.codetoad.com/forum/15_27898.asp\" rel=\"nofollow\">http://www.codetoad.com/forum/15_27898.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use <strong><a href=\"https://developer.mozilla.org/En/DOM/Window.open\">window.open</a></strong> to open a new window/tab(according to browser setting) in javascript.</p>\n\n<p>By using <strong><a href=\"https://developer.mozilla.org/en/DOM/document.write\">document.write</a></strong> you can write HTML content to the opened window. </p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>you should give <a href=\"http://jquery.com/demo/thickbox/\" rel=\"nofollow\">ThickBox</a> a try.\nThis doesn't open a new browserwindow, but creates an overlay on your page that looks like a popup.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When you create a new window using <code>open</code>, it returns a reference to the new window, you can use that reference to write to the newly opened window via its <code>document</code> object.</p>\n\n<p>Here is an example:</p>\n\n<pre><code>var newWin = open('url','windowName','height=300,width=300');\nnewWin.document.write('html to write...');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I would not recomend you to use <code>document.write</code> as others suggests, because if you will open such window twice you will see that your HTML will be duplicated 2 times (or more).</p>\n\n<p>Use innerHTML instead</p>\n\n<pre><code>var win = window.open(\"\", \"Title\", \"toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=yes, resizable=yes, width=780, height=200, top=\"+(screen.height-400)+\", left=\"+(screen.width-840));\nwin.document.body.innerHTML = \"HTML\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>How would I open a new window in JavaScript and insert HTML data instead of just linking to  an HTML file?</p>\n",
            "last_activity_date": 1394026076,
            "question_id": 2109205,
            "score": 17,
            "tags": [
                "javascript",
                "html",
                "insert"
            ],
            "title": "Open window in JavaScript with HTML inserted"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I suppose it depends on the implementation, but <code>Math.abs</code> could be as simple as:</p>\n\n<pre><code>function abs(x) {\n    return x &lt; 0 ? x * -1 : x;\n}\n</code></pre>\n\n<p>So, in theory, it just adds a quick test before multiplying.</p>\n\n<p>But, yes, negating a negative sign is the sole purpose. The point is that a simple <code>x * -1</code> is also counter-productive for positive values.</p>\n\n<p><hr /></p>\n\n<p>@olliej [comments]</p>\n\n<p>True. Simple edit, though. ;)</p>\n\n<pre><code>function abs(x) {\n    return Number(x &lt; 0 ? x * -1 : x);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I would suggest picking the method that more clearly shows your intention, rather than worrying about the performance.  In this case, the performance gain of multiplying by -1 is probably minimal.</p>\n\n<p>When you use <code>Math.abs()</code>, it is very clear that you want a positive value.  When you use <code>* -1</code> it is not clear, and requires more investigation to determine if the input value is always negative.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p><em>Updated August, 2012</em>:</p>\n\n<p>I did some profiling with these implementations:</p>\n\n<pre><code>Test 1: b = Math.abs(a);\nTest 2: b = abs(a); //local copy: abs = Math.abs;\nTest 3: b = a &lt; 0 ? a * -1 : a;\nTest 4: b = a &lt; 0 ? -a : a;\n</code></pre>\n\n<p>I got the following result on Windows 7. Values are normalized after the fastest result per browser to make it easier to compare which method is faster:</p>\n\n<pre><code>        1:Math 2:abs 3:*-1  4:-    1.0=   Version\nChrome    1.0   1.0   1.0   1.0    111ms  21.0.1180.75 m\nFirefox   1.0   1.0   1.2   1.2    127ms  14.0.1\nIE        1.4   1.0   1.1   1.0    185ms  9.0.8112\nOpera     1.9   1.6   1.1   1.0    246ms  12.00\nSafari    1.6   1.6   1.1   1.0    308ms  5.1.7\n</code></pre>\n\n<p><strong>Conclusion:</strong>\nWhen I did this test 3 years ago, -a was fastest, but now Math.abs(x) is faster in Firefox! In Chrome <code>abs(a)</code> and <code>-a</code> got the same time and it was only 3 ms difference to the slowest method when I tested it with 10 000 000 numbers.  </p>\n\n<p><strong>My Recommendation</strong>: Use <strong>Math.abs(a)</strong>. If you are in a tight loop and by profiling has found it to be too slow, you can use a local reference to the abs function:</p>\n\n<pre><code>var abs=Math.abs; //A local reference to the global Math.abs function\nfor (i=0;i&lt;1234567890;++i) if ( abs( v[i] ) &gt; 10) ++x;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>Just the <code>*-1</code> operation is probably faster, but keep in mind that the end result <em>differs</em> from the result for math.abs(). </p>\n\n<p><code>math.abs(-5)</code> and <code>math.abs(5)</code> both return 5.</p>\n\n<p><code>-5 * -1</code> returns 5 as well.</p>\n\n<p><code>5 * -1</code> returns -5.</p>\n\n<p>So unless you're absolutely sure that the number is negative to begin with, you have to do some tests, which cost more time. Might as well do math.abs().</p>\n\n<p>But really, if the performance difference between abs() and *-1 matters in your JS, your probably have more serious issues.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A style question: Why use <code>a * -1</code> instead of <code>-a</code>?\nApart from that I agree that you should use <code>abs()</code> if you don't know the sign of the number beforehand. I would not care for speed but for readability.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Pretty straightforward, but I just want to know which is faster.</p>\n\n<p>I think simply multiplying a number by <code>-1</code> is much faster than calling a predefined method, provided that you are sure that value is negative.</p>\n\n<p>But if that's the case then what is the <code>abs()</code> function for? Is it simply for making sure that the value returned would always be positive regardless of value's sign?</p>\n",
            "last_activity_date": 1373891327,
            "question_id": 441893,
            "score": 17,
            "tags": [
                "javascript",
                "performance"
            ],
            "title": "Which is faster: Math.abs(value) or value * -1 ?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Use <code>ui-sref=\"project.settings\"</code> for link in <code>project.html</code> template.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>First of all change file name project.settings in templateurl and file name to projectSettings (remove dot).</p>\n\n<pre><code>   .state('project.settings', {\n         url: \"/settings\",\n          views:{\n               \"content\":{templateUrl: \"partials/projectSettings.html\"},\n               \"header\":{templateUrl: \"partials/header\"}\n           }\n    }) \n</code></pre>\n\n<p>Add two divs in the project template to load the sub pages (header abd projectSettings)</p>\n\n<p><strong>project.html</strong></p>\n\n<pre><code>    &lt;div ng-controller=\"userController\"&gt;\n        &lt;div class=\"details\"&gt;\n            &lt;a ui-sref=\".settings\" class=\"btn btn-primary\"&gt;Settings&lt;/a&gt;\n        &lt;/div&gt;\n         &lt;div ui-view=\"header\"&gt;&lt;/div&gt;\n         &lt;div class=\"container\" ui-view=\"content\"&gt;&lt;/div&gt;\n     &lt;/div&gt;\n</code></pre>\n\n<p>Note: Any content in this divs will be replaced with the page loaded here.</p>\n\n<p><strong>project.html</strong></p>\n\n<pre><code>     &lt;div ng-controller=\"userController\"&gt;\n        &lt;div class=\"details\"&gt;\n            &lt;a ui-sref=\".settings\" class=\"btn btn-primary\"&gt;Settings&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div ui-view=\"header\"&gt;( Project Page header will replace with projectSettings header )&lt;/div&gt;\n        &lt;div class=\"container\" ui-view=\"content\"&gt;( Project Page content will replace with projectSettings Content )&lt;/div&gt;\n\n    &lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>If using nested views with UI-router, be sure to add ui-view into the html and include specific named views.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Your nested project.settings state needs to address the view in the higher state explicitly using an '@' suffix, ie.:</p>\n\n<pre><code>.state('project.settings', {\n        url: \"/settings@\",\n        views:{\n              \"content\":{templateUrl: \"partials/project.settings.html\"},\n              \"header\":{templateUrl: \"partials/header\"}\n        }\n }) \n</code></pre>\n\n<p>See more details here <a href=\"https://github.com/angular-ui/ui-router/wiki/Multiple-Named-Views#view-names---relative-vs-absolute-names\" rel=\"nofollow\">https://github.com/angular-ui/ui-router/wiki/Multiple-Named-Views#view-names---relative-vs-absolute-names</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I had the same issue and the solution was to place ui-view to your parent's template. Because your partials also need a  too, if they will be loading a template from a child state.\nSee here <a href=\"https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#issue-my-templates-are-not-appearing--loading--showing\" rel=\"nofollow\">https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#issue-my-templates-are-not-appearing--loading--showing</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am using ui-router for nested states &amp; views. When I click on the link, the URL changes to the URL for the substate, but the template does not load.</p>\n\n<p>For example, when the URL changes to the substate <code>project/settings</code>, the corresponding template <code>project.settings.html</code> is not loading.</p>\n\n<p>Here is an SSCCE courtesy of <a href=\"http://plnkr.co/edit/RGEapeaYbAAtQYaQXxS0?p=info\" rel=\"nofollow\">Plunkr</a></p>\n\n<p>Below is my code as well:             </p>\n\n<h2>app.js</h2>\n\n<pre><code>myApp.config(function ($stateProvider, $urlRouterProvider){\n             $stateProvider\n                  .state('project', {\n                         url: \"/project\",\n                         views:{\n                         \"content\":{templateUrl: \"partials/project.html\"},\n                         \"header\":{templateUrl: \"partials/header\"}\n                         }\n                       })\n\n                  .state('project.settings', {\n                          url: \"/settings\",\n                          views:{\n                           \"content\":{templateUrl: \"partials/project.settings.html\"},\n                           \"header\":{templateUrl: \"partials/header\"}\n                          }\n                         }) \n            $urlRouterProvider.otherwise(\"/\")                   \n   }); \n\n    /* cheching whether the user is authentic or not*/\n\n\n myApp.run(function($rootScope,$location,$cookieStore,validateCookie,$state) {\n      $rootScope.$on('$stateChangeStart',function(event,toState,toParams,fromState){\n         if($cookieStore.get('user')){\n            validateCookie.authService(function(result,error){\n              if(!result){\n                 $location.path(\"/\");\n              }else{\n                $state.go('project.settings');\n              }\n            });   \n         }\n         else{\n            $location.path(\"/\"); \n         }\n        });\n    });\n</code></pre>\n\n<h2>index.html</h2>\n\n<pre><code>                &lt;div ng-controller=\"userController\"&gt;\n                    &lt;div ui-view=\"header\"&gt;&lt;/div&gt;\n                    &lt;div class=\"container\" ui-view=\"content\"&gt;&lt;/div&gt;\n                &lt;/div&gt;\n</code></pre>\n\n<h2>project.html</h2>\n\n<pre><code>            &lt;div ng-controller=\"userController\"&gt;\n                &lt;div class=\"details\"&gt;\n                    &lt;a ui-sref=\".settings\" class=\"btn btn-primary\"&gt;Settings&lt;/a&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n</code></pre>\n\n<h2>project.settings.html</h2>\n\n<pre><code>        &lt;h1&gt;Project Setting -State test&lt;/h1&gt;\n</code></pre>\n",
            "last_activity_date": 1425030203,
            "question_id": 21424524,
            "score": 16,
            "tags": [
                "javascript",
                "angularjs",
                "angular-ui-router"
            ],
            "title": "In Angular ui-router nested state url changes,but template is not loading"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>write a php or jquery script which is executed when user clicks like or share on your website just before actually sharing/like to fb and record the user info and the post he/she shared/liked. Now you can track who shared your post the most.</p>\n\n<p>PHP/Jquery script will act as middle man, so dont use facebook share/like script directly. I will try to find the code I have written for this method. I have used PHP &amp; Mysql. Try to use JQuery this will give a better result in terms of hidding the process (I mean data will be recorded without reloading the page).</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Read the list of posts on the page at the page's <code>/feed</code> connection and track the user IDs of those users who posted and commented on each post, building a list of who does it the most often.</p>\n\n<p>Then store those somewhere and use the stored list in the part of your system which decides who to send the bonuses to.</p>\n\n<p>e.g.</p>\n\n<p><a href=\"http://graph.facebook.com/cocacola/feed\" rel=\"nofollow\">http://graph.facebook.com/cocacola/feed</a> returns all the recent posts on the cocacola page, and you could track the IDs of the posters, commenters, likers, to determine who are the most active users</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There are a number of ways, I'll start with the easiest...</p>\n\n<ol>\n<li><p>Say there's a brand name or #hashtag involved then you could user the search API as such: <a href=\"https://graph.facebook.com/search?q=watermelon&amp;type=post&amp;limit=1000\" rel=\"nofollow\">https://graph.facebook.com/search?q=watermelon&amp;type=post&amp;limit=1000</a> and then iterate over the data, say the latest 1000 (the <code>limit</code> param) to find out mode user (the one that comes up the most) out of all the statuses.</p></li>\n<li><p>Say it's just a page, then you can access the <code>/&lt;page&gt;/posts</code> end point (eg: <a href=\"https://developers.facebook.com/tools/explorer?method=GET&amp;path=cocacola%2Fposts\" rel=\"nofollow\">https://developers.facebook.com/tools/explorer?method=GET&amp;path=cocacola%2Fposts</a>) as that'll give you a list of the latest posts (they're paginated so you can iterate over the results) and this'll include a list of the people who like the posts and who comment on them; you can then find out the mode user and so on.</p></li>\n</ol>\n\n<p>In terms of the code you can use anything, you can even run this locally on your machine using a simple web server (such as MAMP or WAMP, etc...) or CLI. The response is all JSON and modern languages are able to handle this. Here's a quick example I knocked up for the first method in Python:</p>\n\n<pre><code>import json\nimport urllib2\nfrom collections import Counter\n\ndef search():\n  req = urllib2.urlopen('https://graph.facebook.com/search?q=watermelon&amp;type=post')\n  res = json.loads(req.read())\n  users = []\n\n  for status in res['data']:\n    users.append(status['from']['name'])\n\n  count = Counter(users)\n\n  print count.most_common()\n\nif __name__ == '__main__':\n  search()\n</code></pre>\n\n<p>I've stuck it up on github if you want to refer to it later: <a href=\"https://github.com/ahmednuaman/python-facebook-search-mode-user/blob/master/search.py\" rel=\"nofollow\">https://github.com/ahmednuaman/python-facebook-search-mode-user/blob/master/search.py</a></p>\n\n<p>When you run the code it'll return an ordered list of the mode users within that search, eg the ones who've posted the most comments with the specific search tag. This can be easily adapted for the second method should you wish to use it.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Your question is nice, but it is quite hard.. <em>(Actually, in the beginning, there's a thing that came from my mind that this is impossible. So, I build a quite different solution...)</em> One of the best ways is to create a network where your viewers can register in the form that required the official URLs of their social networking pages, and also, they could choose that they doesn't have this kind of network:</p>\n\n<blockquote>\n  <p>\u201cDo you want to share some of our page? Please register here first..\u201d</p>\n</blockquote>\n\n<p>So, they can get a specific URL that they've wanted to share when they're in your website, but they doesn't know the they're in tracing when they visited that specific URL.. <em>(Every time a specific URL get visited, an I.P. get tracked and the number of visits get <strong>++1</strong> in a database.)</em> Give them a dynamic URL on the top of your website that's in text area of every pages to track them. Or use scripting to automated the adding of a tracing query string on the URLs of your site.</p>\n\n<p>I think there's a free software to build an affiliate network to make this easy! <strong>If your viewers really love your website, they'll registered to be an affiliate.</strong> But this thing is different, affiliate network is quite different from a network that mentioned in the paragraphs above..</p>\n\n<p>But I think, you can also use <a href=\"http://www.google.com/analytics/\" rel=\"nofollow\">Google Analytics</a> to fully trace some referrals that didn't came from the URLs with dynamic QUERY STRING like <a href=\"https://forums.digitalpoint.com/\" rel=\"nofollow\">Digital Point</a>, but not from the other social network like Facebook 'cause you wouldn't get the exact Referral Paths with that kind of social network because of the query path. However you can use it to track the other networks. Also, <a href=\"http://www.addthis.com/analytics\" rel=\"nofollow\">AddThis Analytics</a> is good for non-query string URLs.</p>\n\n<p>The two kinds of referrals on <a href=\"http://www.google.com/analytics/\" rel=\"nofollow\">Google Analytics</a> are under of <em>\u201cTraffic Sources\u201d</em> menu of <strong>STANDARD REPORTS</strong>..</p>\n\n<ul>\n<li>Traffic Sources\n<ul>\n<li>Sources\n<ul>\n<li>Referrals</li>\n</ul></li>\n<li>Social\n<ul>\n<li>Network Referrals</li>\n</ul></li>\n</ul></li>\n</ul>\n\n<p>This answer is pretty messy, but sometimes, quite useful.. Other than that? Please check these links below:</p>\n\n<ol>\n<li><a href=\"https://developers.facebook.com/docs/opengraph/howtos/publishing-with-app-token/\" rel=\"nofollow\">Publishing with an App Access Token - Facebook Developers</a></li>\n<li><a href=\"https://developers.facebook.com/docs/guides/web/\" rel=\"nofollow\">Facebook for Websites - Facebook Developers</a></li>\n<li><a href=\"https://developers.facebook.com/docs/opengraph/guides/og.likes/\" rel=\"nofollow\">Like - Facebook Developers</a></li>\n<li><a href=\"https://developers.facebook.com/docs/opengraph/overview/\" rel=\"nofollow\">Open Graph Overview - Facebook Developers</a></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Based on Ahmed Nuaman <a href=\"http://stackoverflow.com/a/16256373/338581\">answer</a> (please also give them +1), I have prepared this piece of code:</p>\n\n<p>example of usage:</p>\n\n<p>To analyze most active facebook users of <a href=\"http://www.facebook.com/cern\">http://www.facebook.com/cern</a></p>\n\n<p><code>$ python FacebookFanAnalyzer.py cern likes</code> </p>\n\n<p><code>$ python FacebookFanAnalyzer.py cern comments</code></p>\n\n<p><code>$ python FacebookFanAnalyzer.py cern likes comments</code></p>\n\n<p><strong>notes: shares and inner comments are not supported</strong></p>\n\n<p>file: FacebookFanAnalyzer.py</p>\n\n<pre><code># -*- coding: utf-8 -*-\nimport json\nimport urllib2\nimport sys\nfrom collections import Counter\nreload(sys)\nsys.setdefaultencoding('utf8')\n###############################################################\n###############################################################\n#### PLEASE PASTE HERE YOUR TOKEN, YOU CAN GENERETE IT ON:\n####    https://developers.facebook.com/tools/explorer\n#### GENERETE AND PASTE NEW ONE, WHEN THIS WILL STOP WORKING\n\ntoken = 'AjZCBe5yhAq2zFtyNS4tdPyhAq2zFtyNS4tdPw9sMkSUgBzF4tdPw9sMkSUgBzFZCDcd6asBpPndjhAq2zFtyNS4tsBphqfZBJNzx'\n\nattrib_limit = 100\npost_limit = 100\n###############################################################\n###############################################################\n\n\nclass FacebookFanAnalyzer(object):\n\n    def __init__(self, fanpage_name, post_limit, attribs, attrib_limit):\n        self.fanpage_name = fanpage_name\n        self.post_limit = post_limit\n        self.attribs = attribs\n        self.attrib_limit = attrib_limit\n        self.data={}\n\n    def make_request(self, attrib):\n        global token\n        url = 'https://graph.facebook.com/' + self.fanpage_name + '/posts?limit=' + str(self.post_limit) + '&amp;fields=' + attrib + '.limit('+str(self.attrib_limit)+')&amp;access_token=' + token\n        print \"Requesting '\" + attrib + \"' data: \" + url\n        req = urllib2.urlopen(url)\n        res = json.loads(req.read())\n\n        if res.get('error'):\n            print res['error']\n            exit()\n\n        return res\n\n    def grep_data(self, attrib):\n        res=self.make_request(attrib)\n        lst=[]\n        for status in res['data']:\n            if status.get(attrib):\n                for person in status[attrib]['data']:\n                    if attrib == 'likes':\n                        lst.append(person['name'])\n                    elif attrib == 'comments':\n                        lst.append(person['from']['name'])\n        return lst\n\n\n    def save_as_html(self, attribs):\n        filename = self.fanpage_name + '.html'\n        f = open(filename, 'w') \n\n        f.write(u'&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;')\n        f.write(u'&lt;table border=\"0\"&gt;&lt;tr&gt;')\n        for attrib in attribs:\n            f.write(u'&lt;td&gt;'+attrib+'&lt;/td&gt;')\n        f.write(u'&lt;/tr&gt;')\n\n        for attrib in attribs:\n            f.write(u'&lt;td valign=\"top\"&gt;&lt;table border=\"1\"&gt;')\n\n            for d in self.data[attrib]:\n                f.write(u'&lt;tr&gt;&lt;td&gt;' + unicode(d[0]) + u'&lt;/td&gt;&lt;td&gt;' +unicode(d[1]) + u'&lt;/td&gt;&lt;/tr&gt;')\n\n            f.write(u'&lt;/table&gt;&lt;/td&gt;')\n\n        f.write(u'&lt;/tr&gt;&lt;/table&gt;')\n        f.write(u'&lt;/body&gt;')\n        f.close()\n        print \"Saved to \" + filename\n\n    def fetch_data(self, attribs):\n        for attrib in attribs:\n            self.data[attrib]=Counter(self.grep_data(attrib)).most_common()\n\ndef main():\n    global post_limit\n    global attrib_limit\n\n    fanpage_name = sys.argv[1] \n    attribs = sys.argv[2:] \n\n    f = FacebookFanAnalyzer(fanpage_name, post_limit, attribs, attrib_limit)\n    f.fetch_data(attribs)\n    f.save_as_html(attribs)\n\nif __name__ == '__main__':\n    main()\n</code></pre>\n\n<p><strong>Output:</strong></p>\n\n<pre><code>Requesting 'comments' data: https://graph.facebook.com/cern/posts?limit=50&amp;fields=comments.limit(50)&amp;access_token=AjZCBe5yhAq2zFtyNS4tdPyhAq2zFtyNS4tdPw9sMkSUgBzF4tdPw9sMkSUgBzFZCDcd6asBpPndjhAq2zFtyNS4tsBphqfZBJNzx\nRequesting 'likes' data: https://graph.facebook.com/cern/posts?limit=50&amp;fields=likes.limit(50)&amp;access_token=AjZCBe5yhAq2zFtyNS4tdPyhAq2zFtyNS4tdPw9sMkSUgBzF4tdPw9sMkSUgBzFZCDcd6asBpPndjhAq2zFtyNS4tsBphqfZBJNzx\nSaved to cern.html\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/0sE3P.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I am creating a new website. I want to promote it using another my topic-related web service. I want to send some gifts to people which popularized my first website and fanpage. How to filter out lets say 20 users which likes/shares/comments most of my posts?</p>\n\n<p>Any suitable programming language will be good.</p>\n\n<p><strong>[EDIT]</strong></p>\n\n<p>Ok... to be honest I looking a way to parse a fanpage that is not mine. I want to send gifts to the most active users of fanpage of my competition, to simply bribe them a little :)</p>\n",
            "last_activity_date": 1367331278,
            "question_id": 15953062,
            "score": 16,
            "tags": [
                "javascript",
                "facebook",
                "facebook-fanpage",
                "browser-extension"
            ],
            "title": "How to filter out the most active users from fan page?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You cannot directly change a form's validity. If all the descendant inputs are valid, the form is valid, if not, then it is not.</p>\n\n<p>What you should do is to set the validity of the input element. Like so;</p>\n\n<pre><code>addItem.capabilities.$setValidity(\"youAreFat\", false);\n</code></pre>\n\n<p>Now the input (and so the form) is invalid. \nYou can also see which error causes invalidation.</p>\n\n<pre><code>addItem.capabilities.errors.youAreFat == true;\n&gt; true\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>The answers above didn't help me solve my problem. After a long search I bumped into this <a href=\"http://www.kendar.org/?p=/tutorials/angularjs/part07\">partly solution</a>.</p>\n\n<p>I've finally solved my problem with this code to set the input field manually to ng-invalid (to set to ng-valid set it to 'true'):</p>\n\n<pre><code>$rootScope.myForm.inputName.$setValidity('required', false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>Using the <a href=\"http://loopj.com/jquery-tokeninput/\" rel=\"nofollow\">TokenInput</a> plugin and using AngularJS built-in formController validation.</p>\n\n<p>Right now I'm trying to check if the field contains text, and then set field to valid if it does. The issue with using the plugin is it creates it's own input and then a ul+li for stlying.</p>\n\n<p>I have access to addItem (formname) and my capablities in the controller, I just need to set it to $valid.</p>\n\n<p>Markup.</p>\n\n<pre><code>&lt;form class=\"form-horizontal add-inventory-item\" name=\"addItem\"&gt;\n     &lt;input id=\"capabilities\" name=\"capabilities\" token-input data-ng-model=\"inventoryCapabilitiesAutoComplete\" data-on-add=\"addCapability()\" data-on-delete=\"removeCapability()\" required&gt;\n     &lt;div class=\"required\" data-ng-show=\"addItem.capabilities.$error.required\" title=\"Please enter capability.\"&gt;&lt;/div&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>JS.</p>\n\n<pre><code>$scope.capabilityValidation = function (capability) {\n  if (capability.name !== \"\") {\n    addItem.capabilities.$valid = true;\n    addItem.capabilities.$error.required = false;\n  } else {\n    addItem.capabilities.$valid = false;\n    addItem.capabilities.$error.required = true;\n  }\n};\n</code></pre>\n\n<p>I'm running the capabilityValidation function when TokenInput has something entered and passing in the object.</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>Found out ng-model on my input does stuff and gets the autocomplete results, which is why I can't get ng-valid to work since it's based on the model.</p>\n\n<pre><code>$scope.inventoryCapabilitiesAutoComplete = {\n  options: {\n    tokenLimit: null\n  },\n  source: urlHelper.getAutoComplete('capability')\n};\n</code></pre>\n\n<p>I didn't write this autocomplete implementation, is there another way to do this where I would have access to the ng-model attr and move the model function somewhere else?</p>\n",
            "last_activity_date": 1423523801,
            "question_id": 15437435,
            "score": 16,
            "tags": [
                "javascript",
                "validation",
                "angularjs"
            ],
            "title": "AngularJS: How do I manually set input to $valid in controller?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>There are 2 things driving this behaviour:</p>\n\n<ul>\n<li>\"Setting the hash property navigates to the named anchor without reloading the document.\" (<a href=\"http://ific.uv.es/informatica/manuales/ClientReferenceJS13/location.html#1193379\" rel=\"nofollow\">here</a>)</li>\n<li>\"When you set the location object or any of its properties except hash[...]In JavaScript 1.1 and later, the effect of setting location depends on the user's setting for comparing a document to the original over the network.\" (<a href=\"http://ific.uv.es/informatica/manuales/ClientReferenceJS13/location.html#1193176\" rel=\"nofollow\">here</a>)</li>\n</ul>\n\n<p>So basically, setting the hash property should never lead to a reload, setting any other property should leaf to a reload (or perhaps an E-Tag/modified-since header check, depending on browser settings).</p>\n\n<p>I would assume that for the sake of consistency, browser builders transform setting an empty hash, to setting '#' as hash. This way the url in the location bar does not lead to a reload. But this latter part is pure speculation.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>To answer the second question (removing the <code>#</code> without a page refresh):</p>\n\n<pre><code>history.pushState('', document.title, window.location.pathname);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>Answering to your first question:</p>\n\n<p>According to the <a href=\"https://developer.mozilla.org/en-US/docs/DOM/window.location\" rel=\"nofollow\">window.location doc</a> in Mozilla.org: <em>\"the part of the URL that follows the # symbol, if there is one, including the # symbol.  <strong>Empty string if the url does not contain # or has nothing after the #.</strong>\"</em></p>\n\n<p>Curiously, that document was just updated on 4/8/2013. Not sure if that was added after you checked the documentation.</p>\n\n<p>By the way (and in reference to the answers), the window.location.hash and pushState are different concepts although close related.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've been dealing with the same issue about two weeks ago and my conclusion was that there was no good solution. There is no direct solution, removing the hash from URL always forced the browser to reload page, and even if there was an unpretty hack-like solution, I would rather have the hash at the end of url than using obscure solutions.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Visit <code>stackoverflow.com/#_=_</code> and <code>window.location.hash</code> evaluates to <code>#_=_</code>. Fine.</p>\n\n<p>Now execute <code>window.location.hash = ''</code> to clear the hash, and the URL becomes <code>stackoverflow.com/#</code>. (Notice the trailing <code>#</code>.)</p>\n\n<p>Why is the <code>#</code> in <code>window.location.hash</code> inconsistently included or excluded? How can the <code>#</code> be removed from the URL without reloading the page?</p>\n\n<p>(<a href=\"https://developer.mozilla.org/en-US/docs/DOM/window.location\">MDN</a> says</p>\n\n<blockquote>\n  <p>[the hash is] the part of the URL that follows the # symbol, including the # symbol.</p>\n</blockquote>\n\n<p>but that is not true for in the case of an empty hash.)</p>\n",
            "last_activity_date": 1365592890,
            "question_id": 15322917,
            "score": 16,
            "tags": [
                "javascript",
                "html",
                "google-chrome"
            ],
            "title": "Clearing URL hash"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The array constructor creates an array with the given length. It does <strong>not</strong> create the keys. <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/map\"><code>Array.prototype.map</code></a>'s callback function is only executed for the elements in the list.<br>\nThat is, all values which are associated with a key (integer) 0 &le; <em>i</em> &lt; <em>length</em>.</p>\n\n<ul>\n<li><code>Array(3)</code> has zero keys, so <code>.map</code>'s callback is never triggered.</li>\n<li><p><code>[void 0, void 0, void 0]</code> has three keys, for which the callback function is executed.</p>\n\n<pre><code>Array(3).hasOwnProperty(0);                 // false\n[void 0, void 0, void 0].hasOwnProperty(0); // true\n</code></pre></li>\n</ul>\n\n<p>The specification and its <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/map#Compatibility\">polyfill</a> are mentioned at MDN. At line 47, <code>if (k in O) {</code> shows that non-existant keys are not treated by the callback function.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>a is an empty array that doesn't have elements, so map function produces empty array without elements (per specification, map produces results only if [[HasProperty]] is true.) b is an array of three elements, so map produces an array of three elements.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>From <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/map\">MDN</a>:</p>\n\n<blockquote>\n  <p>callback is invoked only for indexes of the array which have assigned\n  values; it is not invoked for indexes which have been deleted or which\n  have never been assigned values.</p>\n</blockquote>\n\n<p>For the array <code>a</code>, you've instantiated an array of length 3 but have not assigned any values. The map function finds no elements with assigned values, so it does not produce a new array.</p>\n\n<p>For the array <code>b</code>, you've instantiated an array of 3 elements, each with the value <code>undefined</code>. The map function finds 3 elements with assigned values, and returns '0' as the new value for each of them in a new array.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<pre><code>var a = Array(3);\nvar b = [undefined,undefined,undefined];\n</code></pre>\n\n<p>What's the reason, that <code>a.map</code> and <code>b.map</code> produce different results?</p>\n\n<pre><code>a.map(function(){  return 0;  });  //produces -&gt; [undefined,undefined,undefined]\nb.map(function(){  return 0;  });  //produces -&gt; [0,0,0]\n</code></pre>\n",
            "last_activity_date": 1340992892,
            "question_id": 11266126,
            "score": 16,
            "tags": [
                "javascript",
                "arrays",
                "undefined"
            ],
            "title": "undefined values in Array(len) initializer"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I recommend AribaWEB for its advanced AJAX usage.</p>\n\n<p><a href=\"http://aribaweb.org/\" rel=\"nofollow\">http://aribaweb.org/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have built quite a large \"single-page\" <a href=\"http://si.draagle.com\">javascript website</a>, that generats all HTML on the client. Server provides JSON only responses. I used <a href=\"https://developers.google.com/closure/\">Google Closure tools</a> for the following reasons:</p>\n\n<ul>\n<li><p><strong>Google Closure Templates</strong> allows designing templates in high level templating language (named soy) which is compiled either to pure javascript functions to run on the client or java code to run on the server site.</p></li>\n<li><p><strong>Google Closure Compiler</strong>, which allows separating javascript code to modules and provides autmatic dependency injection for uncompiled mode. Good program structure and modularisation is necessary for any project exceeding simple html decoration. This is hard to achieve with frameworks like jQuery or dojo. In advanced compiled mode it transforms your javascript to shorter an more efficient equivalent, eliminates dead code and do dramatic reduction in size, which can shrink the original codebase to few % of the original size.</p></li>\n<li><p><strong>Google Stylesheets</strong> is meta css language which works great with closure compiler.</p></li>\n<li><p><strong>Google Closure Library</strong> is huge and well tested javascript library and with closure compiler, you only take what is needed.</p></li>\n</ul>\n\n<p>To streamline the development, I'm using <a href=\"http://plovr.com/\">plovr</a>, written by Michale Bolin, a former googler, one of the members of the original Closure Compiler Team.</p>\n\n<p>I can recommend reading Michale's book: <a href=\"http://rads.stackoverflow.com/amzn/click/1449381871\">Closure, the Definitive Guide</a>.</p>\n\n<p>I must but warn, the initial leraning curve might be quite steep, but it is well worth the pain. Google used this tools to write almost all their web projects.</p>\n\n<h2>Just one more thing</h2>\n\n<p>If you feel really adventurous, and want to peep in to the future, I recomend upgrading the former strategy with Clojure/ClojureScript. For the start, watch this <a href=\"http://blip.tv/clojure/rich-hickey-unveils-clojurescript-5399498\">very persuasive talk of Rich Hickey</a> and make sure to check <a href=\"http://clojurescriptone.com/\">Clojurescript one project</a>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Take a look to <a href=\"http://www.itsnat.org\" rel=\"nofollow\">ItsNat</a>, is a Java framework focused on Single Page Interface SEO compatible websites.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Has anyone seen an example or done the following in Java:\n<a href=\"http://duganchen.ca/single-page-web-app-architecture-done-right/\">http://duganchen.ca/single-page-web-app-architecture-done-right/</a></p>\n\n<p>That is a design a single page web app that will work with Google SEO with out massive violation of DRY using Java technologies?</p>\n\n<p>It doesn't seem terrible hard to do this on my own but I was curious (and lazy) to see if someone had already done it with either Spring or JAX-RS.</p>\n",
            "last_activity_date": 1390942958,
            "question_id": 9773758,
            "score": 16,
            "tags": [
                "java",
                "javascript",
                "backbone.js",
                "mustache",
                "singlepage"
            ],
            "title": "Single page Web App in Java framework or examples?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>click</code> event triggers after the <code>blur</code> so the link gets hidden. Instead of <code>click</code> use <code>mousedown</code> it will work.</p>\n\n<pre><code>$('.ShippingGroupLinkList').live(\"mousedown\", function(e) {\n    alert('You wont see me if your cursor was in the text box');\n});\n</code></pre>\n\n<p>Other alternative is to have some delay before you hide the links on <code>blur</code> event. Its upto you which approach to go for.</p>\n\n<p><strong><a href=\"http://jsfiddle.net/uXq5p/9/\">Demo</a></strong></p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>You could try the <code>mousedown</code> event instead of <code>click</code>.</p>\n\n<pre><code>$('.ShippingGroupLinkList').live(\"mousedown\", function(e) {\n    alert('You wont see me if your cursor was in the text box');\n});\n</code></pre>\n\n<p>This is clearly not the best solution as a <code>mousedown</code> event is not achieved the same way for the user than a <code>click</code> event. Unfortunately, the <code>blur</code> event will cancel out <code>mouseup</code> events as well.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>It appears that the Blur event stops the click event handler from working? I have a combo box where the options only appear when the text field has focus. Choosing an option link should cause an event to occur.</p>\n\n<p>I have a fiddle example here: <a href=\"http://jsfiddle.net/uXq5p/6/\">http://jsfiddle.net/uXq5p/6/</a></p>\n\n<p>To reproduce:</p>\n\n<ol>\n<li>Select the text box</li>\n<li>Links appear</li>\n<li>Click a link</li>\n<li>The blur even occurs and the links disappear</li>\n<li>Nothing else happens.</li>\n</ol>\n\n<p>Expected behavior:</p>\n\n<p>On step 5, after blur occurs, the click even should also then fire. How do I make that happen?</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>After playing with this for a while, it seems that someone has gone to great lengths to prevent an already-occurred click event from being handled if a blur event makes the clicked element Un-clickable.</p>\n\n<p>For example:</p>\n\n<pre><code>$('#ShippingGroupListWrapper').css('left','-20px');\n</code></pre>\n\n<p>works just fine, but</p>\n\n<pre><code>$('#ShippingGroupListWrapper').css('left','-2000px');\n</code></pre>\n\n<p>prevents the click event.</p>\n\n<p>This appears to be a bug in Firefox, since making an element un-clickable should prevent <strong><em>future</em></strong> clicks, but <strong><em>not</em></strong> cancel ones that have already occurred when it could be clicked.</p>\n\n<p>Other things that prevent the click event from processing:</p>\n\n<pre><code>$('#ShippingGroupListWrapper').css('z-index','-20');\n$('#ShippingGroupListWrapper').css('display','none');\n$('#ShippingGroupListWrapper').css('visibility','hidden');\n$('#ShippingGroupListWrapper').css('opacity','.5');\n</code></pre>\n\n<p>I've found a few other questions on this site that are having similar problems. There seem to be two solutions floating around:</p>\n\n<ol>\n<li><p>Use a delay. This is bad because it creates a race condition between the hiding and the click event handler. Its also sloppy.</p></li>\n<li><p>Use the <code>mousedown</code> event. But this isn't a great solution either since <code>click</code> <strong>is</strong> the correct event for a link. The behavior of <code>mousedown</code> is counter-intuitive from a UX perspective, particularly since you can't cancel the click by moving the mouse off the element before releasing the button.</p></li>\n</ol>\n\n<p>I can think of a few more.</p>\n\n<p>3.Use <code>mouseover</code> and <code>mouseout</code> on the <strong><em>link</em></strong> to enable/disable the blur event for the field. This doesn't work with keyboard tabing since the mouse is not involved.</p>\n\n<p>4.The best solution would be something like:</p>\n\n<pre><code>$('#ShippingGroup').blur(function()\n{\n   if($(document.activeElement) == $('.ShippingGroupLinkList'))\n      return; // The element that now has focus is a link, do nothing\n   $('#ShippingGroupListWrapper').css('display','none'); // hide it.\n}\n</code></pre>\n\n<p>Unfortunately, <code>$(document.activeElement)</code> seems to always return the body element, not the one that was clicked. But maybe if there was a reliable way to know either 1. which element now has focus or two, which element caused the blur (not which element is blurring) from within the blur handler. Also, is there any other event (besides <code>mousedown</code>) that fires before blur?</p>\n",
            "last_activity_date": 1329538912,
            "question_id": 9335325,
            "score": 16,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Blur event stops click event from working?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Check out Date.js. Its really neat!</p>\n\n<p><a href=\"http://www.datejs.com/\" rel=\"nofollow\">http://www.datejs.com/</a></p>\n\n<p>Here are a couple of ways to do it using Date.js:</p>\n\n<pre><code>// today - 7 days\n// toString() is just to print it to the console all pretty\n\nDate.parse(\"t - 7 d\").toString(\"MM-dd-yyyy\");     // outputs \"12-06-2011\"\nDate.today().addDays(-7).toString(\"MM-dd-yyyy\");  // outputs \"12-06-2011\"\nDate.today().addWeeks(-1).toString(\"MM-dd-yyyy\"); // outputs \"12-06-2011\"\n</code></pre>\n\n<p>As an unrelated side note, do check out Moment.js as well... I think the 2 libraries compliment each other :)</p>\n\n<p><a href=\"http://momentjs.com/\" rel=\"nofollow\">http://momentjs.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can modify a date using <code>setDate</code>. It automatically corrects for shifting to new months/years etc.</p>\n\n<pre><code>var oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n</code></pre>\n\n<p>And then go ahead to render the date to a string in any matter you prefer.</p>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<pre><code>var now = new Date();\nnow.setDate(now.getDate() - 7); // add -7 days to your date variable \nalert(now); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I'd do something like </p>\n\n<pre><code>var myDate = new Date();\nvar newDate = new Date(myDate.getTime() - (60*60*24*7*1000));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>this is my code</p>\n\n<pre><code>var myDate = new Date();\ntodaysDate = ((myDate.getDate()) + '/' + (myDate.getMonth()) + '/' + (myDate.getFullYear()));\n$('#txtEndDate').val(todaysDate);\n</code></pre>\n\n<p>I need txtEndDate's value = today's date - one week</p>\n",
            "last_activity_date": 1340291037,
            "question_id": 8489500,
            "score": 16,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "how do I subtract one week from this date in jquery?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If your onclick function returns false the default browser behaviour is cancelled. As such:</p>\n\n<pre><code>&lt;a href='http://www.google.com' onclick='return check()'&gt;check&lt;/a&gt;\n\n&lt;script type='text/javascript'&gt;\n\nfunction check()\n{\n    return false;\n}\n\n&lt;/script&gt;\n</code></pre>\n\n<p>Either way, whether google does it or not isn't of much importance. It's cleaner to bind your onclick functions within javascript - this way you separate your HTML from other code.</p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>From what I understand you don't want to redirect when the link is clicked.</p>\n\n<p>You can do:</p>\n\n<p><code>&lt;a href='javascript:;' onclick='show_more_menu();'&gt;More &gt;&gt;&gt;&lt;/a&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You can even try below option: </p>\n\n<pre><code>&lt;a href=\"javascript:show_more_menu();\"&gt;More &gt;&gt;&gt;&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<p>On using Google I found that they are using onclick events in anchor tags.</p>\n\n<p>In <strong>more</strong> option in google header part, it looks like normal a tag, but onclicking it doesn't get redirected but opened a menu. Normally when using</p>\n\n<pre><code>&lt;a href='more.php' onclick='show_more_menu()'&gt;More &gt;&gt;&gt;&lt;/a&gt;\n</code></pre>\n\n<p>It usually goes to 'more.php' without firing <code>show_more_menu()</code>, but I have show a menu in that page itself. How to do like <strong>google</strong>?</p>\n",
            "last_activity_date": 1403168971,
            "question_id": 7347786,
            "score": 16,
            "tags": [
                "javascript",
                "hyperlink",
                "onclick",
                "anchor"
            ],
            "title": "HTML anchor tag with Javascript onclick event"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Well if you were working with the site developers to create a solution for your application, then you would use <code>ObjectForScripting</code> to communicate between JavaScript and the app. There a good article <a href=\"http://www.dotnetfunda.com/articles/article840-working-with-webbrowser-in-wpf-.aspx\">here</a>, and another question which might be helpful <a href=\"http://stackoverflow.com/questions/3694028/invoke-c-code-from-javascript-in-a-document-in-a-webbrowser\">here</a>.</p>\n\n<p>However as I understand your question, the site is an arbitrary third party site with no affiliation to your application, and you want to auto-fill some form values and submit the form within your code.</p>\n\n<p>To do this you can handle the <code>LoadCompleted</code> event of the WebBrowser. This is called when the loaded document <code>readyState</code> is changed to completed. You can therefore use this event as a hook to then set/read the document form values. Note you will need to add a reference to <code>Microsoft mshtml</code> in the project. </p>\n\n<p>The following is an MVVM style (PRISM) command, which allows an event to bind directly to the <code>ViewModel</code> using behaviors. This is equivalent to registering an event handler in code-behind.</p>\n\n<pre><code>public ICommand LoadCompleted\n{\n    get\n    {\n        return new EventToCommandWithSender&lt;NavigationEventArgs&gt;(\n            (s,e) =&gt; { \n\n               WebBrowser browser = (WebBrowser) sender;\n               // false if nested frame\n               if (e.IsNavigationInitiator)\n               {\n                   mshtml.IHTMLDocument2 doc = (mshtml.IHTMLDocument2)browser.Document;\n                   // always completed\n                   var readyState = doc.readyState;\n                   // populate form\n                   var name = doc.body.document.getElementById(\"username\");\n                   name.value = \"@TheCodeKing\";\n                   // submit form\n                   var submit = doc.body.document.getElementById(\"submit\");\n                   submit.Click();\n                }\n        });\n    }\n}\n</code></pre>\n\n<p>Unfortunately the <code>NavigationEventArgs</code> don't provide a way to access the HTML document or request data. It does contain a <code>WebRequest</code> property but this has not been implemented, and will always be null. In my example I've assumed a custom <code>EventToCommandWithSender</code> class which providers the sender as well as the event ARGs when the event fires, but it's down to your own implementation to get access to the sender.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I don't know why this never occurred to me before, but the solution seems so simple.</p>\n\n<p>Instead of having a <code>&lt;WebBrowser</code>> control on the view, use a <code>&lt;ContentControl&gt;</code> and bind its content to a WebBrowser property in your ViewModel. Create the WebBrowser in your ViewModel's constructor, and then you can register the browser's navigation event (or documentloaded) to an event in your ViewModel.</p>\n\n<p>Full browser control from the ViewModel! You can even capture user events, since anything they do to navigate the page will be captured in your ViewModel's navigating event.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I am using an MVVM pattern on WPF4, though I am new to both. I am looking for a good solution to using a WebBrowser control that can receive Javascript commands and communicate with the ViewModel. It needs the following:</p>\n\n<ol>\n<li>Ability to collect values from Javascript forms, and return them to the ViewModel</li>\n<li>Use Javascript to determine ReadyState before</li>\n<li>Running Javascript commands (setting form values, use form values for logical steps, submit form) some which happen across multiple page loads</li>\n</ol>\n\n<p>The site being worked on is not under my control to edit or update. It makes heavy use of ActiveX and will not accept non-IE browsers (Awesomium will not work), so the standard WPF WebBrowser control is likely the only option.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/263551/databind-the-source-property-of-the-webbrowser-in-wpf\">This question</a> provides a solution to binding the source of a browser control with an attached property. I think this could be adapted to use the navigate method to send javascript, though I am not sure how values could be returned to the Viewmodel. This is the major hurdle I need to get over.</p>\n\n<p><strong>Heavy Edit</strong> - Question receiving very low views and no answers, completely reworded</p>\n",
            "last_activity_date": 1405446799,
            "question_id": 7179177,
            "score": 16,
            "tags": [
                "c#",
                "javascript",
                "wpf",
                "webbrowser-control"
            ],
            "title": "How to use Javascript on a WPF WebBrowser Control via MVVM"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can call the inherited <code>.toString()</code> function on the methods and check the outcome. Native methods will have a block like <code>[nataive code]</code>.</p>\n\n<pre><code>if( this[p].toString().indexOf('[native code]') &gt; -1 ) {\n    // yep, native in the browser\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<pre><code>function isFuncNative(f) {\n       return !!f &amp;&amp; (typeof f).toLowerCase() == 'function' \n       &amp;&amp; (f === Function.prototype \n       || /^\\s*function\\s*(\\b[a-z$_][a-z0-9$_]*\\b)*\\s*\\((|([a-z$_][a-z0-9$_]*)(\\s*,[a-z$_][a-z0-9$_]*)*)\\)\\s*{\\s*\\[native code\\]\\s*}\\s*$/i.test(String(f)));\n}\n</code></pre>\n\n<p>this should be good enough. this function does the following tests:</p>\n\n<ol>\n<li>null or undefined;</li>\n<li>the param is actually a function;</li>\n<li>the param is Function.prototype itself (this is a special case, where Function.prototype.toString gives <code>function Empty(){}</code>)</li>\n<li>the function body is exactly <code>function &lt;valid_function_name&gt; (&lt;valid_param_list&gt;) { [native code] }</code></li>\n</ol>\n\n<p>the regex is a little bit complicated, but it actually runs pretty decently fast in chrome on my 4GB lenovo laptop (duo core):</p>\n\n<pre><code>var n = (new Date).getTime(); \nfor (var i = 0; i &lt; 1000000; i++) {\n    i%2 ? isFuncNative(isFuncNative) : \n          isFuncNative(document.getElementById);\n}; \n(new Date).getTime() - n;\n</code></pre>\n\n<p>3023ms. so the function takes somewhere around 3 micro-sec to run once all is JIT'ed.</p>\n\n<p>It works in all browsers. Previously, I used Function.prototype.toString.call, this crashes IE, since in IE, the DOM element methods and window methods are NOT functions, but objects, and they don't have toString method. String constructor solves the problem elegantly.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I tried a different approach. This is only tested for firefox, and chrome.</p>\n\n<pre><code>function isNative(obj){\n    //Is there a function?\n    //You may throw an exception instead if you want only functions to get in here.\n\n    if(typeof obj === 'function'){\n        //Check does this prototype appear as an object?\n        //Most natives will not have a prototype of [object Object]\n        //If not an [object Object] just skip to true.\n        if(Object.prototype.toString.call(obj.prototype) === '[object Object]'){\n            //Prototype was an object, but is the function Object?\n            //If it's not Object it is not native.\n            //This only fails if the Object function is assigned to prototype.constructor, or\n            //Object function is assigned to the prototype, but\n            //why you wanna do that?\n            if(String(obj.prototype.constructor) !== String(Object.prototype.constructor)){\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nfunction bla(){}\n\nisNative(bla); //false\nisNative(Number); //true\nisNative(Object); //true\nisNative(Function); //true\nisNative(RegExp); //true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to iterate over all the globals defined in a website, but in doing so I am also getting the native browser functions.  </p>\n\n<pre><code>var numf=0; var nump=0; var numo=0; \nfor(var p in this) { \n    if(typeof(this[p]) === \"function\"){\n        numf+=1;\n        console.log(p+\"()\");\n    } else if(typeof p != 'undefined'){\n        nump+=1;\n        console.log(p);\n    } else { \n        numo+=1;\n        console.log(p);\n    }\n}\n</code></pre>\n\n<p>Is there a way to determine if a function is native to the browser or created in a script?</p>\n",
            "last_activity_date": 1422067328,
            "question_id": 6598945,
            "score": 16,
            "tags": [
                "javascript",
                "global-variables"
            ],
            "title": "Detect if function is native to browser"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Vimeo has <a href=\"http://developer.vimeo.com/player/js-api\" rel=\"nofollow\">a JavaScript API</a> that allows you to access and invoke many properties and methods on the video player (including pausing the video and also unloading it completely). They also have an <a href=\"http://player.vimeo.com/playground\" rel=\"nofollow\">API Playground</a> and some <a href=\"https://github.com/vimeo/player-api/tree/master/javascript\" rel=\"nofollow\">examples on GitHub</a>.</p>\n\n<p>[Edit]</p>\n\n<p>Since you mention that you use the Universal Embed Code, here are some caveats from the web site:</p>\n\n<blockquote>\n  <p>With the Universal Embed Code, the only way to interact with the player is by using <a href=\"https://developer.mozilla.org/en/DOM/window.postMessage\" rel=\"nofollow\">window.postMessage</a>. postMessage is a relatively new development, so it's oly available in the following browsers: Internet Explorer 8+, Firefox 3+, Safari 4+, Chrome, and Opera 9+.</p>\n  \n  <p>Because of the complexities involved with postMessage, we've written a JS mini-library that does all the hard work for you! You can find it on the <a href=\"http://vimeo.com/api/docs/downloads\" rel=\"nofollow\">downloads page</a> or you can see some examples <a href=\"http://vimeo.com/api/docs/player-js#examples\" rel=\"nofollow\">below</a>.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I used jQuery to remove the iframe from the DOM.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another answer along the lines of David's...you can use jQuery to clear the SRC attribute of the iFrame.</p>\n\n<pre><code>$('iframe#targetID').attr('src','');\n</code></pre>\n\n<p>I'm using this with a Vimeo video and a lightbox effect. When the lightbox is triggered again, I add the video URL back to the iFrame SRC before showing it. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>First, add an ID to your iFrame. Then add this to your javascript close window click function:</p>\n\n<pre><code>var $frame = $('iframe#yourIframeId');\n\n// saves the current iframe source\nvar vidsrc = $frame.attr('src');\n\n// sets the source to nothing, stopping the video\n$frame.attr('src',''); \n\n// sets it back to the correct link so that it reloads immediately on the next window open\n$frame.attr('src', vidsrc);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>to restore the SRC attribute use the following before clearing:</p>\n\n<pre><code>var source = $('iframe#yourVideoId').attr('src');\n</code></pre>\n\n<p>next SRC attribute clear:</p>\n\n<pre><code>$('iframe#yourVideoId').attr('src','');\n</code></pre>\n\n<p>callback previous SRC attribute:</p>\n\n<pre><code>$('iframe#yourVideoId').attr('src',source);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Try using vimeo player API:\n<a href=\"http://developer.vimeo.com/player/js-api#methods\" rel=\"nofollow\">http://developer.vimeo.com/player/js-api#methods</a></p>\n\n<p>Remember to turn API on. eg: <a href=\"http://player.vimeo.com/video/VIDEO_ID?api=1\" rel=\"nofollow\">http://player.vimeo.com/video/VIDEO_ID?api=1</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>    var vidUrl = $(\"iframe#video-frame\").attr('src');\n\n\n    //Basically stops and starts the video on modal open/close\n    $('#video').on('hidden.bs.modal', function (e) {\n        $(\"iframe#video-frame\").attr('src','');\n    });\n\n    $('#video').on('show.bs.modal', function (e) {\n        $(\"iframe#video-frame\").attr('src', vidUrl);\n    })\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>When I hide a youtube video, it stops playing. However, this is not the case for Vimeo videos. Is there another way to stop a Vimeo video?</p>\n",
            "last_activity_date": 1401513103,
            "question_id": 6145990,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "vimeo"
            ],
            "title": "How to stop a Vimeo video with JQuery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Write wrappers or change the code.</p>\n\n<p>What should automagically make it work? How's Node supposed to know which functions should get exported or not?</p>\n\n<p>All you can do is to adjust the code to match the Common JS standard, but before you do that, check the <a href=\"http://nodejs.org/api.html\" rel=\"nofollow\">API Docs</a> and the <a href=\"https://github.com/ry/node/wiki/Modules\" rel=\"nofollow\">Modules Pages</a> on the Node.js Wiki, to see whether someone already did the job for you :)</p>\n\n<p>If you write code yourself that should work in a Browser and Node.js you can use a wrapper like the following one: </p>\n\n<pre><code>(function(node) {\n    // Your Awesome code here\n    if (node) {\n        exports.foo = ...\n\n    } else {\n        window.foo = ...\n    }\n\n})((function(){return ('' + this).slice(8, -1) !== 'DOMWindow';})());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you trust the code (I mean, <strong>really</strong> trust the code) then you can <code>eval</code> it:</p>\n\n<pre><code>eval(require('fs').readFileSync('somefile.js', 'utf8')); \n</code></pre>\n\n<p>I wouldn't recommend doing this with remote code (because it could change without your knowledge) but if you have a local copy of something then it should be fine.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>2 answers...</p>\n\n<p>1) the JSON object is built-in to node.js, so you can just call JSON.parse() and JSON.stringify(), there is no need to import external code for this particular case.</p>\n\n<p>2) to import external code, node.js follows the CommonJS module specification and you can use require()</p>\n\n<p>so if you have a file called external.js (in the same directory as the rest of your code):</p>\n\n<pre><code>this.hi = function(x){ console.log(\"hi \" + x); }\n</code></pre>\n\n<p>and from node you do:</p>\n\n<pre><code>var foo = require(\"./external\");\nfoo.hi(\"there\");\n</code></pre>\n\n<p>you will see the output <code>hi there</code></p>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p>How do I load external js files that don't fit the node.js format. I am trying to import the json serialize library. How can I do this?</p>\n",
            "last_activity_date": 1295961622,
            "question_id": 4662851,
            "score": 16,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "How do you import non-node.js files?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This <a href=\"http://www.regular-expressions.info/refflavors.html\"><code>comparison</code></a> will answer all your queries.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The most important difference you will encounter in real life is JavaScript's lack of lookbehind assertions. </p>\n\n<p>Then, JavaScript doesn't have a way to prevent backtracking by making matches final (using possessive quantifiers <code>++</code>/<code>*+</code>/<code>?+</code> or atomic groups <code>(?&gt;...)</code>).</p>\n\n<p>Furthermore, JavaScript doesn't know Unicode properties/scripts/blocks.</p>\n\n<p>Other than that, the basic regex syntax is very similar in both flavors.</p>\n\n<p>One other (cosmetic) thing is that JavaScript doesn't know verbose regexes, which might make them harder to read.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Another difference: In JavaScript, there is no <code>s</code> modifier: The dot \".\" will never match a newline character. As a replacement for \".\", the character class <code>[\\s\\S]</code> can be used in JavaScript, which will work like <code>/./s</code> in Perl.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm just a noob when it comes to regexp...  I know Perl is amazing with regexp... and I dont know much Perl.  Recently started learning JavaScript and came across regex for \nvalidating user inputs... haven't used them much.</p>\n\n<p>How does JavaScript regexp compare with Perl regexp?  Similarities and differences?  Can all regexp(s) wriiten in JS be used in Perl and vice-versa?  Similar syntax?</p>\n",
            "last_activity_date": 1366696356,
            "question_id": 3949991,
            "score": 16,
            "tags": [
                "javascript",
                "regex",
                "perl"
            ],
            "title": "Javascript regex compared to Perl regex"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>\\b matches a word boundary. I think you can use ^$ for empty string.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To match <code>pattern</code> or an empty string, use</p>\n\n<pre><code>^$|pattern\n</code></pre>\n\n<h3>Explanation</h3>\n\n<ul>\n<li><code>^</code> and <code>$</code> are the beginning and end of the string anchors respectively.</li>\n<li><code>|</code> is used to denote alternates, e.g. <code>this|that</code>.</li>\n</ul>\n\n<h3>References</h3>\n\n<ul>\n<li><a href=\"http://www.regular-expressions.info/anchors.html\">regular-expressions.info/Anchors</a> and <a href=\"http://www.regular-expressions.info/alternation.html\">Alternation</a></li>\n</ul>\n\n<hr>\n\n<h3>On <code>\\b</code></h3>\n\n<p><code>\\b</code> in most flavor is a \"word boundary\" anchor. It is a zero-width match, i.e. an empty string, but it only matches those strings at <em>very specific places</em>, namely at the boundaries of a word.</p>\n\n<p>That is, <code>\\b</code> is located:</p>\n\n<ul>\n<li>Between consecutive <code>\\w</code> and <code>\\W</code> (either order):\n<ul>\n<li>i.e. between a word character and a non-word character</li>\n</ul></li>\n<li>Between <code>^</code> and <code>\\w</code>\n<ul>\n<li>i.e. at the beginning of the string if it starts with <code>\\w</code></li>\n</ul></li>\n<li>Between <code>\\w</code> and <code>$</code>\n<ul>\n<li>i.e. at the end of the string if it ends with <code>\\w</code></li>\n</ul></li>\n</ul>\n\n<h3>References</h3>\n\n<ul>\n<li><a href=\"http://www.regular-expressions.info/wordboundaries.html\">regular-expressions.info/Word Boundaries</a></li>\n</ul>\n\n<hr>\n\n<h3>On using regex to match e-mail addresses</h3>\n\n<p>This is not trivial depending on specification.</p>\n\n<h3>Related questions</h3>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/201323/what-is-the-best-regular-expression-for-validating-email-addresses\"> What is the best regular expression for validating email addresses? </a></li>\n<li><a href=\"http://stackoverflow.com/questions/156430/regexp-recognition-of-email-address-hard\"> Regexp recognition of email address hard? </a></li>\n<li><a href=\"http://stackoverflow.com/questions/3232/how-far-should-one-take-e-mail-address-validation\"> How far should one take e-mail address validation? </a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>I'm not sure why you'd want to validate an optional email address, but I'd suggest you use</p>\n\n<pre><code>^$|^[^@\\s]+@[^@\\s]+$` \n</code></pre>\n\n<p>meaning</p>\n\n<pre><code>^$        empty string\n|         or\n^         beginning of string\n[^@\\s]+   any character but @ or whitespace\n@         \n[^@\\s]+\n$         end of string\n</code></pre>\n\n<p>You won't stop fake emails anyway, and this way you won't stop valid addresses. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>An alternative would be to place your regexp in non-capturing parentheses. Then make that expression optional using the <code>?</code> qualifier, which will look for 0 (i.e. empty string) or 1 instances of the non-captured group.</p>\n\n<p>For example:</p>\n\n<pre><code>/(?: some regexp )?/\n</code></pre>\n\n<p>In your case the regular expression would look something like this:</p>\n\n<pre><code>/^(?:[\\w\\.\\-]+@([\\w\\-]+\\.)+[a-zA-Z]+)?$/\n</code></pre>\n\n<p>No <code>|</code> \"or\" operator necessary!</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\" rel=\"nofollow\">Here</a> is the Mozilla documentation for JavaScript Regular Expression syntax.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have the following Regular Expression which matches an email address format:</p>\n\n<pre><code>^[\\w\\.\\-]+@([\\w\\-]+\\.)+[a-zA-Z]+$\n</code></pre>\n\n<p>This is used for validation with a form using JavaScript. However, this is an optional field. Therefore how can I change this regex to match an email address format, or an empty string?</p>\n\n<p>From my limited regex knowledge, I think <code>\\b</code> matches an empty string, and <code>|</code> means \"Or\", so I tried to do the following, but it didn't work:</p>\n\n<pre><code>^[\\w\\.\\-]+@([\\w\\-]+\\.)+[a-zA-Z]+$|\\b\n</code></pre>\n",
            "last_activity_date": 1398288866,
            "question_id": 3333461,
            "score": 16,
            "tags": [
                "javascript",
                "regex",
                "email-validation",
                "empty-string"
            ],
            "title": "Regular expression which matches a pattern, or is an empty string"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Why not use the <a href=\"http://docs.jquery.com/UI/Datepicker/formatDate\" rel=\"nofollow\">formatDate</a> function in the Datepicker jQuery-UI plugin for jQuery to generate the format your server-side requires?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could also adjust json2.js a bit to always use its own <code>Date.prototype.toJSON</code> instead of a possible native one. Here I uncommented two lines and it works correctly:</p>\n\n<pre><code>// if (typeof Date.prototype.toJSON !== 'function') {\n\n    Date.prototype.toJSON = function (key) {\n\n        return isFinite(this.valueOf()) ?\n               this.getUTCFullYear()   + '-' +\n             f(this.getUTCMonth() + 1) + '-' +\n             f(this.getUTCDate())      + 'T' +\n             f(this.getUTCHours())     + ':' +\n             f(this.getUTCMinutes())   + ':' +\n             f(this.getUTCSeconds())   + 'Z' : null;\n    };\n\n    String.prototype.toJSON =\n    Number.prototype.toJSON =\n    Boolean.prototype.toJSON = function (key) {\n        return this.valueOf();\n    };\n// }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I got this working adding the following javascript:</p>\n\n<pre><code>// Added to make dates format to ISO8601\nDate.prototype.toJSON = function (key) {\n    function f(n) {\n        // Format integers to have at least two digits.\n        return n &lt; 10 ? '0' + n : n;\n    }\n\n    return this.getUTCFullYear()   + '-' +\n         f(this.getUTCMonth() + 1) + '-' +\n         f(this.getUTCDate())      + 'T' +\n         f(this.getUTCHours())     + ':' +\n         f(this.getUTCMinutes())   + ':' +\n         f(this.getUTCSeconds())   + '.' +\n         f(this.getUTCMilliseconds())   + 'Z';\n};\n</code></pre>\n\n<p>I'm sure this probably slows down the serialization, but it seems to make things consistent across browsers.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>//\nYou might want to consider beefing up the server, \nto recognize any valid ISO 8601 time format:</p>\n\n<p>'2010-02-08T03:37:34.327Z'</p>\n\n<p>'2010-02-08T03:38:06Z'</p>\n\n<p>'2010-02-08T03:38+01:00'</p>\n\n<p>'2010-02-08T03:34:18-05:00'</p>\n\n<p>'2010-02-08T03:34Z'</p>\n\n<p>'2010-02-08'</p>\n\n<p>This is a method to convert any iso string to a javascript date object.\nIt could be used on the server with a little translation:</p>\n\n<pre><code>Date.from_iso= function(s){\n    var D, M= [], hm, min= 0, d2,\n    Rx=  /([\\d:]+)(\\.\\d+)?(Z|(([+\\-])(\\d\\d):(\\d\\d))?)?$/;\n    D= s.substring(0, 10).split('-');\n    if(s.length&gt; 11){\n        M= s.substring(11).match(Rx) || [];\n        if(M[1]) D= D.concat(M[1].split(':'));\n        if(M[2]) D.push(Math.round(M[2]*1000));// msec\n    }\n    for(var i= 0, L= D.length; i&lt;L; i++){\n        D[i]= parseInt(D[i], 10);\n    }\n    D[1]-= 1;\n    while(D.length&lt; 6) D.push(0);\n    if(M[4]){\n        min= parseInt(M[6])*60+ parseInt(M[7], 10);// timezone not UTC\n        if(M[5]== '+') min*= -1;\n    }\n    try{\n        d2= Date.fromUTCArray(D);\n        if(min) d2.setUTCMinutes(d2.getUTCMinutes()+ min);\n    }\n    catch(er){\n        // bad input\n    }\n    return d2;\n}\nDate.fromUTCArray= function(A){\n    var D= new Date;\n    while(A.length &lt; 7) A.push(0);\n    var T= A.splice(3, A.length);\n    D.setUTCFullYear.apply(D, A);\n    D.setUTCHours.apply(D, T);\n    return D;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have this code in an HTML page:</p>\n\n<pre><code>alert(JSON.stringify(new Date()));\n</code></pre>\n\n<p>I'm including the latest <a href=\"https://github.com/douglascrockford/JSON-js/blob/master/json2.js\">json2.js</a> (2009-09-29 version) in my page to support older browsers without JSON.stringify().  I also have jquery-1.3.2.js included.  I believe in newer browsers with native JSON support, it just passes through to the native JSON feature.</p>\n\n<p>Here's the results I get in different browsers:</p>\n\n<pre><code>IE 8 on Windows XP: \"2010-02-07T21:39:32Z\"\nChrome 4.0 on Windows XP: \"2010-02-07T21:39:59Z\"\nFirefox 3.0 of Windows XP: \"2010-02-07T21:40:41Z\"\nChrome 4.0 on Ubuntu linux:  \"2010-02-07T21:41:49Z\"\nFirefox 3.0 on Ubuntu linux:  \"2010-02-07T21:42:44Z\"\nChrome 4.0 on Mac OSX: \"2010-02-07T21:43:56Z\"\nSafari on Mac OSX: \"2010-02-07T21:45:21Z\"\nFirefox 3.5 on Mac OSX: \"2010-02-07T21:44:10.101Z\"\n</code></pre>\n\n<p>Notice the last one?  It contains milliseconds, and none of the others do.  I don't have FF3.5 installed on any other systems, but I'm assuming they would have the same results.</p>\n\n<p>Is there something I can do to make all dates on all platforms stringify the same? My backend REST service can be configured with a format string to deserialize JSON dates, but it can't support multiple formats, just one.</p>\n",
            "last_activity_date": 1362515007,
            "question_id": 2218564,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "rest"
            ],
            "title": "Discrepancy in JSON.stringify of date values in different browsers"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>While this is still not an actual answer to my <em>question</em> (Q vs async), regarding my <em>problem</em>, I've found Selenium / <a href=\"http://code.google.com/p/selenium/wiki/WebDriverJs\" rel=\"nofollow\">WebDriverJs</a> to be a viable solution.</p>\n\n<pre><code>driver.get('http://www.google.com');\ndriver.findElement(webdriver.By.name('q')).sendKeys('webdriver');\ndriver.findElement(webdriver.By.name('btnG')).click();\ndriver.wait(function() {\n  return driver.getTitle().then(function(title) {\n    return title === 'webdriver - Google Search';\n  });\n}, 1000);\n</code></pre>\n\n<p>WebDriver uses a queue to execute promises sequentially, which helps immensely with controlling indentation. Its promises are also compatible with Q's.</p>\n\n<p>Creating a sequence of promises is no longer an issue. A simple for-loop will do.</p>\n\n<p>As for stopping early in a sequence, don't do this. Instead of using a sequence, use an asynchronous-while design and branch.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Both libraries are good. I have discovered that they serve separate purposes and can be used in tandem.</p>\n\n<p>Q provides the developer with promise objects, which are future representations of values. Useful for time travelling.</p>\n\n<p>Async provides the developer with asynchronous versions of control structures and aggregate operations.</p>\n\n<p>An example from <a href=\"https://github.com/jacksonrayhamilton/jslinted/blob/6a48ec87c20abae201d74856d42313a4703795cf/src/lint.js\">here</a> demonstrates a potential unity among libraries:</p>\n\n<pre><code>function lint(files, callback) {\n\n    // Function which returns a promise.\n    var getMerged = merger('.jslintrc'),\n\n        // Result objects to invoke callback with.\n        results = [];\n\n    async.each(files, function (file, callback) {\n        fs.exists(file, function (exists) {\n\n            // Future representation of the file's contents.\n            var contentsPromise,\n\n                // Future representation of JSLINT options from .jslintrc files.\n                optionPromise;\n\n            if (!exists) {\n                callback();\n                return;\n            }\n\n            contentsPromise = q.nfcall(fs.readFile, file, 'utf8');\n            optionPromise = getMerged(path.dirname(file));\n\n            // Parallelize IO operations.\n            q.all([contentsPromise, optionPromise])\n                .spread(function (contents, option) {\n                    var success = JSLINT(contents, option),\n                        errors,\n                        fileResults;\n                    if (!success) {\n                        errors = JSLINT.data().errors;\n                        fileResults = errors.reduce(function (soFar, error) {\n                            if (error === null) {\n                                return soFar;\n                            }\n                            return soFar.concat({\n                                file: file,\n                                error: error\n                            });\n                        }, []);\n                        results = results.concat(fileResults);\n                    }\n                    process.nextTick(callback);\n                })\n                .catch(function (error) {\n                    process.nextTick(function () {\n                        callback(error);\n                    });\n                })\n                .done();\n        });\n    }, function (error) {\n        results = results.sort(function (a, b) {\n            return a.file.charCodeAt(0) - b.file.charCodeAt(0);\n        });\n        callback(error, results);\n    });\n}\n</code></pre>\n\n<p>I want to do something potentially-blocking for each file. So <code>async.each</code> is the obvious choice. I can parallelize <em>related</em> operations <em>per-iteration</em> with <code>q.all</code> and reuse my option values if they apply to 2 or more files.</p>\n\n<p>Here, Async and Q each influence the control flow of the program, and Q represents values resolving to file contents sometime in the future. The libraries work well together. One does not need to \"choose one over the other\".</p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>I have used <a href=\"https://github.com/kriskowal/q\">kriskowal's Q library</a> for a project (web scraper / human-activity simulator) and have become acquainted with promises, returning them and resolving/rejecting them, and the library's basic asynchronous control flow methods and error-throwing/catching mechanisms have proven essential.</p>\n\n<p>I have encountered some issues though. My <code>promise.then</code> calls and my callbacks have the uncanny tendency to form pyramids. Sometimes it's for scoping reasons, other times it's to guarantee a certain order of events. (I suppose I might be able to fix some of these problems by refactoring, but going forward I want to avoid \"callback hell\" altogether.) </p>\n\n<p>Also, debugging is very frustrating. I spend a lot of time <code>console.log</code>-ing my way to the source of errors and bugs; after I finally find them I will start throwing errors there and catching them somewhere else with <code>promise.finally</code>, but the process of locating the errors in the first place is arduous.</p>\n\n<p>Also, in my project, <strong>order matters</strong>. I need to do pretty much everything sequentially. Oftentimes I find myself generating arrays of functions that return promises and then chaining them to each other using <code>Array.prototype.reduce</code>, which I don't think I should have to do.</p>\n\n<p>Here is an example of one of my methods that uses this reduction technique:</p>\n\n<pre><code>removeItem: function (itemId) {\n\n  var removeRegexp = new RegExp('\\\\/stock\\\\.php\\\\?remove=' + itemId);\n\n  return this.getPage('/stock.php')\n  .then(function (webpage) {\n    var\n      pageCount = 5,\n      promiseFunctions = [],\n      promiseSequence;\n\n    // Create an array of promise-yielding functions that can run sequentially.\n    _.times(pageCount, function (i) {\n      var promiseFunction = function () {\n        var\n          promise,\n          path;\n\n        if (i === 0) {\n          promise = Q(webpage);\n        } else {\n          path = '/stock.php?p=' + i;\n          promise = this.getPage(path);\n        }\n\n        return promise.then(function (webpage) {\n          var\n            removeMatch = webpage.match(removeRegexp),\n            removePath;\n\n          if (removeMatch !== null) {\n            removePath = removeitemMatch[0];\n\n            return this.getPage(removePath)\n            .delay(1000)\n            // Stop calling subsequent promises.\n            .thenResolve(true);\n          }\n\n          // Don't stop calling subsequent promises.\n          return false;\n\n        }.bind(this));\n      }.bind(this);\n\n      promiseFunctions.push(promiseFunction);\n    }, this);\n\n    // Resolve the promises sequentially but stop early if the item is found.\n    promiseSequence = promiseFunctions.reduce(function (soFar, promiseFunction, index) {\n      return soFar.then(function (stop) {\n        if (stop) {\n          return true;\n        } else {\n          return Q.delay(1000).then(promiseFunction);\n        }\n      });\n    }, Q());\n\n    return promiseSequence;\n  }.bind(this))\n  .fail(function (onRejected) {\n    console.log(onRejected);\n  });\n},\n</code></pre>\n\n<p>I have other methods that do basically the same thing but which are suffering from much worse indentation woes.</p>\n\n<p>I'm considering refactoring my project using <a href=\"https://github.com/caolan/async\">coalan's async library</a>. It seems similar to Q, but I want to know exactly how they differ. The impression I am getting is that async more \"callback-centric\" while Q is \"promise-centric\".</p>\n\n<p><strong>Question:</strong> Given my problems and project requirements, what would I gain and/or lose by using async over Q? How do the libraries compare? (Particularly in terms of executing series of tasks sequentially and debugging/error-handling?)</p>\n",
            "last_activity_date": 1417494576,
            "question_id": 22493723,
            "score": 15,
            "tags": [
                "javascript",
                "node.js",
                "asynchronous",
                "q"
            ],
            "title": "Node.js Asynchronous Library Comparison - Q vs Async"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>In the dart source, there's a comment which says that this technique is used for v8 performance reasons:</p>\n\n<pre><code>// [map] returns an object literal that V8 shouldn't try to optimize with a\n// hidden class. This prevents a potential performance problem where V8 tries\n// to build a hidden class for an object used as a hashMap.\n</code></pre>\n\n<p><a href=\"https://github.com/dart-lang/bleeding_edge/blob/4dde22bc006605fc168cefcc0807c43354463b6e/dart/sdk/lib/_internal/compiler/implementation/js_emitter/reflection_data_parser.dart#L17-L19\">https://github.com/dart-lang/bleeding_edge/blob/4dde22bc006605fc168cefcc0807c43354463b6e/dart/sdk/lib/_internal/compiler/implementation/js_emitter/reflection_data_parser.dart#L17-L19</a></p>\n\n<p>The word <code>map</code> here refers to an <a href=\"https://en.wikipedia.org/wiki/Associative_array\">associative array</a> </p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I read a article about this a while ago actually and apparently if you <code>delete</code> something from a object, <strong>V8</strong> puts the object into <strong>Dictionary Mode</strong> or <strong>Slow Mode</strong> and then properties are stored in a <strong>\"hash table\"</strong>.</p>\n\n<blockquote>\n  <p>V8 can handle minor divergences like this just fine, but if your code assigns all sorts of random properties to objects from the same constructor in no particular order, or if you delete properties, V8 will drop the object into dictionary mode, where properties are stored in a hash table. This prevents an absurd number of maps from being allocated.</p>\n</blockquote>\n\n<p>This is the article <a href=\"http://www.jayconrod.com/posts/52/a-tour-of-v8-object-representation\" rel=\"nofollow\">http://www.jayconrod.com/posts/52/a-tour-of-v8-object-representation</a> it explains it in there along with other things.</p>\n\n<p>I may be wrong but I think this is used for Large (in size and life) objects to increase performance  and decrease the chance of a memory leak.</p>\n\n<p>This is on the same sort of topic </p>\n\n<blockquote>\n  <p><a href=\"https://groups.google.com/forum/#!topic/v8-users/zE4cOHBkAnY\" rel=\"nofollow\">Does using delete keyword effect v8 optimizations of an object?</a></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>The purpose of the <code>map</code> function is to create an associative-map object whose set of properties can be quickly altered.</p>\n\n<p>The natural question arrises: <em>aren't all JavaScript objects already maps by default?</em> Yes, they are! The EMCAScript specification allows objects to add or drop properties at any time, allowing them to function as associative maps.</p>\n\n<p>But, alas, the low-level language that is responsible for implementing the JavaScript execution environment (likely C++) is not so easygoing. In particular, V8 uses a concept called <a href=\"http://www.youtube.com/watch?v=UJPdhx5zTaw&amp;feature=player_detailpage#t=630\" rel=\"nofollow\"><strong><em>hidden classes</em></strong></a>, whereby the addition of a property to a JavaScript object will cause the creation of a new C++ class. V8 does this as an optimization because it assumes your code will repeatedly use a small set of object types. </p>\n\n<p>For example, you have a <code>Bullet</code> type with <code>x</code>, <code>y</code>, <code>dx</code>, and <code>dy</code> properties. In practical terms, these types are fixed; it's not likely that you would suddenly add on a new property to a <code>Bullet</code> object on the fly. The hidden-class optimization means that using a fixed set of object types runs very quickly, but it also means that, sometimes, the real cost of adding a new property to a JS object can be quite high, because it prompts the creation of a new C++ class that has the new property.</p>\n\n<p>By introducing a <code>delete</code> operation on the object <code>x</code>, you signal to the V8 engine that this object <code>x</code> will not benefit from the hidden-class optimization. The idea behind hidden classes is that your objects will not usually change their set of properties (except adding new properties at construction time). By doing a <code>delete</code> you unequivocally signal that this object will change its property set in ways that make hidden classes totally unhelpful. For this object, the cost of creating hidden classes far outweighs the benefits.</p>\n\n<p>Thus, the object returned by <code>map</code> will be excluded from V8 hidden-class optimizations, allowing it to add and remove arbitrary properties much more quickly.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I saw this in an auto-generated javascript file:</p>\n\n<pre><code>function map(x){\n    x={x:x};\n    delete x.x;\n    return x\n}\n</code></pre>\n\n<p>My conclusion is that is used to create an object, but <strong>why create it in that way</strong>? Is it a pattern?</p>\n\n<p>UPDATE</p>\n\n<p>More info, the tool that created this code is dart2js from Google, the code is used in this context:</p>\n\n<pre><code>(function (reflectionData) {\n  function map(x){x={x:x};delete x.x;return x}\n  if (!init.libraries) init.libraries = [];\n  if (!init.mangledNames) init.mangledNames = map();\n  if (!init.mangledGlobalNames) init.mangledGlobalNames = map();\n  if (!init.statics) init.statics = map();\n  if (!init.interfaces) init.interfaces = map();\n</code></pre>\n",
            "last_activity_date": 1381354847,
            "question_id": 19166869,
            "score": 15,
            "tags": [
                "javascript",
                "javascript-objects"
            ],
            "title": "What is this generated code supposed (intended) to do?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The basic idea of sandboxes is, you need variables predefined as globals to do stuff, so if you deny a script them by unsetting them, or replacing them with controlled one, it cannot escape. As long you don't forget anything.</p>\n\n<p>First replace deny require() or replace it with something controlled.\ndont forget about process and \"global\" a.k.a \"root\", the difficult thing is not to forget anything, thats why its good to rely on someone else having built a sandbox ;-)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Ask yourself these questions:</p>\n\n<ol>\n<li>Are you one of the smartest persons on the planet?</li>\n<li>Do you turn down job offers by Google, Mozilla and Kaspersky Lab routinely because it would bore you?</li>\n<li>Does the \"untrusted code\" come from people working at the same company as you or from criminals and bored computer kids all over the globe?</li>\n<li>Are you sure that node.js has no security holes that could leak through your sandbox?</li>\n<li>Can you write perfect 100% error free code?</li>\n<li>Do you know everything about JavaScript?</li>\n</ol>\n\n<p>As you already know by your experiments with the <a href=\"http://gf3.github.com/sandbox/\" rel=\"nofollow\">sandbox module</a>, writing your own sandbox isn't trivial. The main problem with sandboxes is that you must get everything right. One mistake will ruin your security completely which is why browser developers fight a constant battle with crackers all over the globe.</p>\n\n<p>That said, simple sandboxes are pretty easy to do. First, you'll need to write your own JavaScript interpreter because you can't use the one from node.js because of <code>eval()</code> and <code>require()</code> (both would allow crackers to escape your sandbox).</p>\n\n<p>The interpreter must make sure that the interpreted code cannot access anything besides the few global symbols that you provide. This means there can't be an <code>eval()</code> function, for example (or you must make sure that this function is only evaluated in the context of your own JavaScript interpreter).</p>\n\n<p>Drawback of this approach: A lot of work and if you make a mistake in your interpreter, the crackers can leave the sandbox.</p>\n\n<p>Another approach is to clean the code and run it with node.js's <code>eval()</code>. You can clean existing code by running a bunch of regexp's over it like <code>/eval\\s*[(]//g</code> to remove malicious code parts.</p>\n\n<p>Drawback of this approach: It's easy to make a mistake that will leave you vulnerable to an attack. For example, there might be mismatch between what regexp and what node.js think of as \"whitespace\". Some obscure unicode whitespace might be accepted by the interpreter but not by regexp which would allow an attacker to run <code>eval()</code>.</p>\n\n<p>My suggestion: Write a small demo test case that shows how the sandbox module is broken and have it fixed. It will save you a lot of time and effort and if there is a bug in the sandbox, it won't be your fault (well, not entirely at least).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you can afford the performance hit, you could run the JS in a throwaway virtual machine with the appropriate CPU and memory limits.</p>\n\n<p>Of course, then you are trusting the security of the VM solution. By using it together with an ordinary JS sandbox, you'd have two layers of security.</p>\n\n<p>For an additional layer, put the sandbox on a different physical machine than your main app.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"https://www.docker.io/\" rel=\"nofollow\">Docker.io</a> Is an awesome new kid on the block, which uses <a href=\"http://linuxcontainers.org/\" rel=\"nofollow\">LXC</a>s and <a href=\"http://en.wikipedia.org/wiki/Cgroups\" rel=\"nofollow\">CGroups</a> to create sandboxes. </p>\n\n<p>Here is one implementation of an <a href=\"http://hmarr.com/2013/oct/16/codecube-runnable-gists/\" rel=\"nofollow\">online gist</a> (similar to <a href=\"http://codepad.org/\" rel=\"nofollow\">codepad.org</a>) using <a href=\"https://www.docker.io/\" rel=\"nofollow\">Docker</a> and <a href=\"http://golang.org/\" rel=\"nofollow\">Go Lang</a></p>\n\n<p>This just goes to demonstrate that one can safely run <strong>untrusted code</strong> written in many programming languages inside <a href=\"https://www.docker.io/\" rel=\"nofollow\">Docker Containers</a>, including <code>node.js</code> </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I am facing a similar problem right now and I'm reading only bad things about the sandbox module.</p>\n\n<p>If you don't need anything specific to the node environment, I thing the best approach will be to use a headless browser such as PhantomJS or Chimera to use as a sandbox environment.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've recently created a library for sandboxing the untrusted code, it seems to fit the demands (executes a code in a restricted process in case of Node.js, and in a Worker inside a sandboxed iframe for a web-browser):</p>\n\n<p><a href=\"https://github.com/asvd/jailed\" rel=\"nofollow\">https://github.com/asvd/jailed</a></p>\n\n<p>There is an opportunity to export the given set of methods from the main application into the sandbox thus providing any custom API and set of privilliges (that feature was actually the reason why I decided to make a library from scratch). The mentioned maths, regexp and string -related stuff is provided by the JavaScript itself, anything additional may be explicitly exported from outside (like some function for communicating with the main application).</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to run untrusted javascript code in linux + node.js with the sandbox module but it's broken, all i need is to let users write javascript programs that printout some text. No other i/o is allowed and just plain javascript is to be used, no other node modules.\nIf it's not really possible to do, what other language do you suggest for this kind of task? The minimal feature set i need is some math, regexes, string manipulation, and basic JSON functions.\nScripts will run for let's say 5 seconds tops and then the process would be killed, how can i achieve that?</p>\n",
            "last_activity_date": 1413455475,
            "question_id": 10937870,
            "score": 15,
            "tags": [
                "javascript",
                "linux",
                "node.js"
            ],
            "title": "How to run untrusted code serverside?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You'll want to use <code>Q.nfcall</code>, documented <a href=\"https://github.com/kriskowal/q#adapting-node\">in the README</a> and the Wiki. All Mongoose methods are Node-style. I'll also use <code>.spread</code> instead of manually destructuring <code>.then</code>.</p>\n\n<pre><code>var mongoose = require('mongoose');\nmongoose.connect('mongo://localhost/test');\nvar conn = mongoose.connection;\n\nvar users = conn.collection('users');\nvar channels = conn.collection('channels');\nvar articles = conn.collection('articles');\n\nfunction getInsertedArticles() {\n    return Q.nfcall(users.insert.bind(users), [{/*user1*/},{/*user2*/}]).spread(function (user1, user2) {\n        return Q.nfcall(channels.insert.bind(channels), [{userId:user1._id},{userId:user2._id}]).spread(function (channel1, channel2) {\n            return Q.nfcall(articles.insert.bind(articles), [{userId:user1._id,channelId:channel1._id},{}]);\n        });\n    })\n}\n\ngetInsertedArticles()\n    .spread(function (article1, article2) {\n        // you only get here if all three of the above steps succeeded\n    })\n    .fail(function (error) {\n        // you get here if any of the above three steps failed\n    }\n);\n</code></pre>\n\n<p>In practice, you will rarely want to use <code>.spread</code>, since you usually are inserting an array that you don't know the size of. In that case the code can look more <a href=\"https://gist.github.com/2660323\">like this</a> (here I also illustrate <code>Q.nbind</code>).</p>\n\n<hr>\n\n<p>To compare with the original one is not quite fair, because your original has no error handling. A corrected Node-style version of the original would be like so: </p>\n\n<pre><code>var mongoose = require('mongoose');\nmongoose.connect('mongo://localhost/test');\nvar conn = mongoose.connection;\n\nfunction getInsertedArticles(cb) {\n    // insert users\n    conn.collection('users').insert([{/*user1*/},{/*user2*/}], function(err, docs) {\n        if (err) {\n            cb(err);\n            return;\n        }\n\n        var user1 = docs[0], user2 = docs[1];\n\n        // insert channels\n        conn.collection('channels').insert([{userId:user1._id},{userId:user2._id}], function(err, docs) {\n            if (err) {\n                cb(err);\n                return;\n            }\n\n            var channel1 = docs[0], channel2 = docs[1];\n\n            // insert articles\n            conn.collection('articles').insert([{userId:user1._id,channelId:channel1._id},{}], function(err, docs) {\n                if (err) {\n                    cb(err);\n                    return;\n                }\n\n                var article1 = docs[0], article2 = docs[1];\n\n                cb(null, [article1, article2]);\n            }\n        });\n    };\n}\n\ngetInsertedArticles(function (err, articles) {\n    if (err) {\n        // you get here if any of the three steps failed.\n        // `articles` is `undefined`.\n    } else {\n        // you get here if all three succeeded.\n        // `err` is null.\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>With alternative <a href=\"https://github.com/medikoo/deferred\" rel=\"nofollow\">deferred</a> promise implementation, you may do it as following:</p>\n\n<pre><code>var mongoose = require('mongoose');\nmongoose.connect('mongo://localhost/test');\nvar conn = mongoose.connection;\n\n// Setup 'pinsert', promise version of 'insert' method\nvar promisify = require('deferred').promisify\nmongoose.Collection.prototype.pinsert = promisify(mongoose.Collection.prototype.insert);\n\nvar user1, user2;\n// insert users\nconn.collection('users').pinsert([{/*user1*/},{/*user2*/}])\n// insert channels\n.then(function (users) {\n  user1 = users[0]; user2 = users[1];\n  return conn.collection('channels').pinsert([{userId:user1._id},{userId:user2._id}]);\n})\n// insert articles\n.match(function (channel1, channel2) {\n  return conn.collection('articles').pinsert([{userId:user1._id,channelId:channel1._id},{}]);\n})\n.done(function (articles) {\n  // Do something with articles\n}, function (err) {\n   // Handle any error that might have occurred on the way\n});    \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Considering <a href=\"http://mongoosejs.com/docs/api.html#model_Model-save\" rel=\"nofollow\">Model.save</a> instead of <a href=\"http://mongoosejs.com/docs/api.html#collection_Collection-insert\" rel=\"nofollow\">Collection.insert</a> (quite the same in our case).</p>\n\n<p><strong>You don't need to use <a href=\"https://github.com/kriskowal/q\" rel=\"nofollow\">Q</a></strong>, you can wrap yourself the <a href=\"http://mongoosejs.com/docs/api.html#model_Model-save\" rel=\"nofollow\">save</a> method and return directly a <a href=\"http://mongoosejs.com/docs/api.html#promise_Promise\" rel=\"nofollow\">Mongoose Promise</a>.</p>\n\n<p>First create an utility method to wrap the save function, that's not very clean but something like:</p>\n\n<pre><code>  //Utility function (put it in a better place)\n  var saveInPromise = function (model) {\n\n    var promise = new mongoose.Promise();\n\n    model.save(function (err, result) {\n      promise.resolve(err, result);\n    });\n\n    return promise;\n  }\n</code></pre>\n\n<p>Then you can use it instead of save to chain your promises</p>\n\n<pre><code>  var User = mongoose.model('User');\n  var Channel = mongoose.model('Channel');\n  var Article = mongoose.model('Article');\n\n  //Step 1\n  var user = new User({data: 'value'});\n  saveInPromise(user).then(function () {\n\n    //Step 2\n    var channel = new Channel({user: user.id})\n    return saveInPromise(channel);\n\n  }).then(function (channel) {\n\n    //Step 3\n    var article = new Article({channel: channel.id})\n    return saveInPromise(article);\n\n  }, function (err) {\n    //A single place to handle your errors\n\n  });\n</code></pre>\n\n<p>I guess that's the kind of simplicity we are looking for.. right? Of course the utility function can be implemented with better integration with Mongoose.</p>\n\n<p>Let me know what you think about that.</p>\n\n<hr>\n\n<p>By the way there is an issue about that exact problem in the Mongoose Github:</p>\n\n<ul>\n<li><strong><a href=\"https://github.com/LearnBoost/mongoose/issues/1431\" rel=\"nofollow\">Add 'promise' return value to model save operation</a></strong></li>\n</ul>\n\n<p>I hope it's gonna be solved soon. I think it takes some times because they are thinking of switching from <a href=\"https://github.com/aheckmann/mpromise\" rel=\"nofollow\">mpromise</a> to <a href=\"https://github.com/kriskowal/q\" rel=\"nofollow\">Q</a>: See <a href=\"https://github.com/LearnBoost/mongoose/issues/1446\" rel=\"nofollow\">here</a> and then <a href=\"https://github.com/LearnBoost/mongoose/issues/1699\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Two years later, this question just popped up in my RSS cliet ...</p>\n\n<p>Things have moved on somewhat since May 2012 and we might choose to solve this one in a different way now. More specifically, the Javascript community has become \"reduce-aware\" since the decision to include <code>Array.prototype.reduce</code> (and other Array methods) in ECMAScript5. <code>Array.prototype.reduce</code> was always (and still is) available as a polyfill but was little appreciated by many of us at that time. Those who were running ahead of the curve may demur on this point, of course. </p>\n\n<p>The problem posed in the question appears to be formulaic, with rules as follows :</p>\n\n<ul>\n<li>The objects in the array passed as the first param to <code>conn.collection(table).insert()</code> build as follows (where <code>N</code> corresponds to the object's index in an array):\n<ul>\n<li>[ {}, ... ]</li>\n<li>[ {userId:userN._id}, ... ]</li>\n<li>[ {userId:userN._id, channelId:channelN._id}, ... ]</li>\n</ul></li>\n<li>table names (in order) are : <code>users</code>, <code>channels</code>, <code>articles</code>.</li>\n<li>the corresopnding object properties are : <code>user</code>, <code>channel</code>, <code>article</code> (ie the table names without the pluralizing 's').</li>\n</ul>\n\n<p>A general pattern from <a href=\"http://taoofcode.net/promise-anti-patterns/\" rel=\"nofollow\">this article by Taoofcode</a>) for making asynchronous call in series is :</p>\n\n<pre><code>function workMyCollection(arr) {  \n    return arr.reduce(function(promise, item) {\n        return promise.then(function(result) {\n            return doSomethingAsyncWithResult(item, result);\n        });        \n    }, q());\n}\n</code></pre>\n\n<p>With quite light adaptation, this pattern can be made to orchestrate the required sequencing :</p>\n\n<pre><code>function cascadeInsert(tables, n) {\n    /* \n    /* tables: array of unpluralisd table names\n    /* n: number of users to insert.\n    /* returns promise of completion|error\n     */\n    var ids = []; // this outer array is available to the inner functions (to be read and written to).\n    for(var i=0; i&lt;n; i++) { ids.push({}); } //initialize the ids array with n plain objects.\n    return tables.reduce(function (promise, t) {\n        return promise.then(function (docs) {\n            for(var i=0; i&lt;ids.length; i++) {\n                if(!docs[i]) throw (new Error(t + \": returned documents list does not match the request\"));//or simply `continue;` to be error tolerant (if acceptable server-side).\n                ids[i][t+'Id'] = docs[i]._id; //progressively add properties to the `ids` objects\n            }\n            return insert(ids, t + 's');\n        });\n    }, Q());\n}\n</code></pre>\n\n<p>Lastly, here's the promise-returning worker function, <code>insert()</code> :</p>\n\n<pre><code>function insert(ids, t) {\n    /* \n    /* ids: array of plain objects with properties as defined by the rules\n    /* t: table name.\n    /* returns promise of docs\n     */\n    var dfrd = Q.defer();\n    conn.collection(t).insert(ids, function(err, docs) {\n        (err) ? dfrd.reject(err) : dfrd.resolve(docs);\n    });\n    return dfrd.promise;\n}\n</code></pre>\n\n<p>Thus, you can specify as parameters passed to <code>cascadeInsert</code>, the actual table/property names and the number of users to insert.</p>\n\n<pre><code>cascadeInsert( ['user', 'channel', 'article'], 2 ).then(function () {\n   // you get here if everything was successful\n}).catch(function (err) {\n   // you get here if anything failed\n});\n</code></pre>\n\n<p>This works nicely because the tables in the question all have regular plurals (user => users, channel => channels). If any of them was irregular (eg stimulus => stimuli, child => children), then we would need to rethink - (and probably implement a lookup hash). In any case, the adaptation would be fairly trivial.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Today we have <a href=\"https://github.com/iolo/mongoose-q\" rel=\"nofollow\">mongoose-q</a> as well. A plugin to mongoose that gives you stuff like execQ and saveQ which return Q promises.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm using mongoose to insert some data into mongodb. The code looks like:</p>\n\n<pre><code>var mongoose = require('mongoose');\nmongoose.connect('mongo://localhost/test');\nvar conn = mongoose.connection;\n\n// insert users\nconn.collection('users').insert([{/*user1*/},{/*user2*/}], function(err, docs) {\n    var user1 = docs[0], user2 = docs[1];\n\n    // insert channels\n    conn.collection('channels').insert([{userId:user1._id},{userId:user2._id}], function(err, docs) {\n        var channel1 = docs[0], channel2 = docs[1];\n\n        // insert articles\n        conn.collection('articles').insert([{userId:user1._id,channelId:channel1._id},{}], function(err, docs) {\n            var article1 = docs[0], article2 = docs[1];\n\n        }\n    });\n};\n</code></pre>\n\n<p>You can see there are a lot of nested callbacks there, so I'm trying to use <a href=\"https://github.com/kriskowal/q\">q</a> to refactor it. </p>\n\n<p>I hope the code will look like:</p>\n\n<pre><code>Q.fcall(step1)\n.then(step2)\n.then(step3)\n.then(step4)\n.then(function (value4) {\n    // Do something with value4\n}, function (error) {\n    // Handle any error from step1 through step4\n})\n.end();\n</code></pre>\n\n<p>But I don't know how to do it.</p>\n",
            "last_activity_date": 1412535327,
            "question_id": 10545087,
            "score": 15,
            "tags": [
                "javascript",
                "asynchronous",
                "mongoose",
                "promise",
                "q"
            ],
            "title": "How to use &quot;q&quot; module for refactoring mongoose code?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>function retr_dec(num) {\n  return (num.split('.')[1] || []).length;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Since there is not already a regex-based answer:</p>\n\n<pre><code>/\\d*$/.exec(strNum)[0].length\n</code></pre>\n\n<p><em>Note that this \"fails\" for integers, but per the problem specification they will never occur.</em></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>function retr_dec(numStr) {\n    var pieces = numStr.split(\".\");\n    return pieces[1].length;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>function decimalPlaces(num) {\n  var match = (''+num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n  if (!match) { return 0; }\n  return Math.max(\n       0,\n       // Number of digits right of decimal point.\n       (match[1] ? match[1].length : 0)\n       // Adjust for scientific notation.\n       - (match[2] ? +match[2] : 0));\n}\n</code></pre>\n\n<p>The extra complexity is to handle scientific notation so</p>\n\n<blockquote>\n<pre><code>decimalPlaces('.05')\n2\ndecimalPlaces('.5')\n1\ndecimalPlaces('1')\n0\ndecimalPlaces('25e-100')\n100\ndecimalPlaces('2.5e-99')\n100\ndecimalPlaces('.5e1')\n0\ndecimalPlaces('.25e1')\n1\n</code></pre>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "\n\n<p>A slight modification of the currently accepted answer, this adds to the <code>Number</code> prototype, thereby allowing all number variables to execute this method:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>if (!Number.prototype.getDecimals) {\n    Number.prototype.getDecimals = function() {\n        var num = this,\n            match = ('' + num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n        if (!match)\n            return 0;\n        return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\n    }\n}\n</code></pre>\n\n<p>It can be used like so:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// Get a number's decimals.\nvar number = 1.235256;\nconsole.debug(number + \" has \" + number.getDecimals() + \" decimal places.\");\n\n// Get a number string's decimals.\nvar number = \"634.2384023\";\nconsole.debug(number + \" has \" + parseFloat(number).getDecimals() + \" decimal places.\");\n</code></pre>\n\n<p>Utilizing our existing code, the second case could also be easily added to the <code>String</code> prototype like so:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>if (!String.prototype.getDecimals) {\n    String.prototype.getDecimals = function() {\n        return parseFloat(this).getDecimals();\n    }\n}\n</code></pre>\n\n<p>Use this like:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>console.debug(\"45.2342\".getDecimals());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A bit of a hybrid of two others on here but this worked for me. Outside cases in my code weren't handled by others here. However, I had removed the scientific decimal place counter. Which I would have loved at uni!</p>\n\n<p><code>numberOfDecimalPlaces: function (number) {\n            var match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n            if (!match || match[0] == 0) {\n                return 0;\n            }\n            return match[0].length;\n        }</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a set of string numbers having decimals, for example: <code>23.456</code>, <code>9.450</code>, <code>123.01</code>... I need to retrieve the number of decimals for each number, knowing that they have at least 1 decimal.</p>\n\n<p>In other words, the <code>retr_dec()</code> method should return the following:</p>\n\n<pre><code>retr_dec(\"23.456\") -&gt; 3\nretr_dec(\"9.450\")  -&gt; 3\nretr_dec(\"123.01\") -&gt; 2\n</code></pre>\n\n<p>Trailing zeros do count as a decimal in this case.</p>\n\n<p>Is there an easy/delivered method to achieve this in Javascript or should I compute the decimal point position and compute the difference with the string length? Thanks</p>\n",
            "last_activity_date": 1422960045,
            "question_id": 10454518,
            "score": 15,
            "tags": [
                "javascript",
                "string",
                "numbers",
                "decimal"
            ],
            "title": "Javascript: How to retrieve the number of decimals of a string number?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>All objects are instances of at least one class \u2013 <code>Object</code> \u2013 in ECMAScript.  You can only differentiate between instances of built-in classes and normal objects using <code>Object#toString</code>.  They all have the same level of complexity, for instance, whether they are created using <code>{}</code> or the <code>new</code> operator.</p>\n\n<p><code>Object.prototype.toString.call(object)</code> is your best bet to differentiate between normal objects and instances of other built-in classes, as <code>object === Object(object)</code> doesn't work here.  However, I can't see a reason why you would need to do what you're doing, so perhaps if you share the use case I can offer a little more help.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I use <code>typeof</code> to determine if the variable I'm looking at is an object. If it is then I use <code>instanceof</code> to determine what kind it is</p>\n\n<pre><code>var type = typeof elem;\nif (type == \"number\") {\n    // do stuff\n}\nelse if (type == \"string\") {\n    // do stuff\n}\nelse if (type == \"object\") { // either array or object\n    if (elem instanceof Buffer) {\n    // other stuff\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If its just about detecting whether or not you're dealing with an <code>Object</code>, I could think of</p>\n\n<pre><code>Object.getPrototypeOf( obj ) === Object.prototype\n</code></pre>\n\n<p>However, this would probably fail for non-object primitive values. Actually there is nothing wrong with invoking <code>.toString()</code> to retreive the [[cclass]] property. You can even create a nice syntax like</p>\n\n<pre><code>var type = Function.prototype.call.bind( Object.prototype.toString );\n</code></pre>\n\n<p>and then use it like</p>\n\n<pre><code>if( type( obj ) === '[object Object]' ) { }\n</code></pre>\n\n<p>It might not be the fastest operation but I don't think the performance leak there is too big.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>looking at jQuery they in there <code>jQuery.isArray(...)</code> they do:</p>\n\n<pre><code>    isArray = Array.isArray || function( obj ) {\n    return jQuery.type(obj) === \"array\";\n}\n</code></pre>\n\n<p>this leads us to: <code>jQuery.type</code>:</p>\n\n<pre><code>    type = function( obj ) {\n    return obj == null ?\n        String( obj ) :\n        class2type[ toString.call(obj) ] || \"object\";\n}\n</code></pre>\n\n<p>and again we have to look in: <code>class2type</code></p>\n\n<pre><code>class2type = {};\n\n// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object\".split(\" \"), function(i, name) {\n    class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});\n</code></pre>\n\n<p>and in native JS:</p>\n\n<pre><code>var a, t = \"Boolean Number String Function Array Date RegExp Object\".split(\" \");\nfor( a in t ) {\n    class2type[ \"[object \" + t[a] + \"]\" ] = t[a].toLowerCase();\n}\n</code></pre>\n\n<p>this ends up with:</p>\n\n<pre><code>var isArray = Array.isArray || function( obj ) {\n    return toString.call(obj) === \"[object Array]\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>underscore.js is using the following</p>\n\n<pre><code>toString = Object.prototype.toString;\n\n_.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n\n_.isObject = function(obj) {\n    return obj === Object(obj);\n  };\n\n_.isFunction = function(obj) {\n    return toString.call(obj) == '[object Function]';\n  };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>For simply checking against Object or Array without additional function call (speed).</p>\n\n<p><strong>isArray()</strong></p>\n\n<pre><code>isArray = function(a) {\n    return (!!a) &amp;&amp; (a.constructor === Array);\n};\nconsole.log(isArray(        )); // false\nconsole.log(isArray(    null)); // false\nconsole.log(isArray(    true)); // false\nconsole.log(isArray(       1)); // false\nconsole.log(isArray(   'str')); // false\nconsole.log(isArray(      {})); // false\nconsole.log(isArray(new Date)); // false\nconsole.log(isArray(      [])); // true\n</code></pre>\n\n<p><strong>isObject()</strong></p>\n\n<pre><code>isObject = function(a) {\n    return (!!a) &amp;&amp; (a.constructor === Object);\n};\nconsole.log(isObject(        )); // false\nconsole.log(isObject(    null)); // false\nconsole.log(isObject(    true)); // false\nconsole.log(isObject(       1)); // false\nconsole.log(isObject(   'str')); // false\nconsole.log(isObject(      [])); // false\nconsole.log(isObject(new Date)); // false\nconsole.log(isObject(      {})); // true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Hi I know this topic is old but there is a much better way to differentiate an Array in Node.js from any other Object have a look at the <a href=\"http://nodejs.org/api/util.html#util_util_isarray_object\" rel=\"nofollow\">docs</a>.</p>\n\n<pre><code>var util = require('util');\n\nutil.isArray([]); // true\nutil.isArray({}); // false\n\nvar obj = {};\ntypeof obj === \"Object\" // true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Is there any way to efficiently check if the variable is Object or Array, in NodeJS &amp; V8? </p>\n\n<p>I'm writing a Model for MongoDB and NodeJS, and to traverse the object tree I need to know if the object is simple (Number, String, ...) or composite (Hash, Array).</p>\n\n<p>It seems that V8 has fast built-in <code>Array.isArray</code>, but how to check if object is an Object? I mean complex object like hash <code>{}</code> or instance of class, not something like <code>new String()</code>?</p>\n\n<p>Usually it may be done as this:</p>\n\n<pre><code>Object.prototype.toString.call(object) == \"[object Object]\"\n</code></pre>\n\n<p>or this:</p>\n\n<pre><code>object === Object(object)\n</code></pre>\n\n<p>But it seems that this operations aren't cheap, maybe there's some more efficient? It's ok if it's not universal and doesn't works on all engines, I need it only to work on V8.</p>\n",
            "last_activity_date": 1385071890,
            "question_id": 8834126,
            "score": 15,
            "tags": [
                "javascript",
                "node.js",
                "v8",
                "instanceof",
                "typeof"
            ],
            "title": "How to efficiently check if variable is Array or Object (in NodeJS &amp; V8)?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I get a headache with matrices, so I'm doing this with proportions.</p>\n\n<p>If you see the div from above (hence seeing the rotation in the two dimensions it takes place in), you're seeing it as a segment on the xz plane, with coordinates <code>(-250, 0) (250, 0)</code>, or in general <code>(-w/2, 0) (w/2, 0)</code>\nAfter a rotation on the y axis, the coordinates will become, similarly to what you stated</p>\n\n<pre><code>(-Math.cos(angle) * w/2, -Math.sin(angle) * w/2)\n( Math.cos(angle) * w/2,  Math.sin(angle) * w/2)\n</code></pre>\n\n<p>, being the rotation counterclockwise, with the origin at the center of the div, and of <code>angle</code> radians.</p>\n\n<p>Using the perspective means that these coordinates are not displayed just by discarding the z, but they are first projected according to their distance from the observer.</p>\n\n<p>Now, the projection plane is the one where the unrotated things lay, with z = 0. I deduce this from the fact that when unrotated divs are projected, they remain the same size.\nIf you take a point with distance <code>p</code> (the perspective value) from the z plane, so with xz coordinates (0, -p), and draw a line from this point to the vertices of the rotated segment, up to when it crosses the projection plan, the points you get are the new segment coordinates which yield the div final size.</p>\n\n<p>With a proportion between the triangles <code>(0, -p) (0, 0) (x, 0)</code> and <code>(0, -p) (0, sin*w/2) (cos*w/2, sin*w/2)</code>, you get that</p>\n\n<pre><code>p : x = (p + sin*w/2) : cos*w/2\nx = (p * cos*w/2) / (p + sin*w/2)\n</code></pre>\n\n<p>which in general means that when you project the point <code>(x, y, z)</code> onto the plan you get</p>\n\n<pre><code>x * p / (p + z)\ny * p / (p + z)\n0\n</code></pre>\n\n<p>So your final div coordinates (on xz, relative to div's center) will be</p>\n\n<pre><code>(-Math.cos(angle) * w/2 * p / (p + -Math.sin(angle) * w/2), 0)\n( Math.cos(angle) * w/2 * p / (p +  Math.sin(angle) * w/2), 0)\n</code></pre>\n\n<p>From which you can calculate its width but also its position - which is non trivial, since its nearest-to-the-viewer half will appear bigger than the other half.</p>\n\n<p>Look at the following test for more details (it fails when you're too close to the objects, I'm not sure why, probably some variable overflows)</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n    &lt;script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-latest.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n    var WIDTH = 500;\n    var P = 300;\n    jQuery(function(){\n        function test(width, angle, p) {\n            $('body').\n                append($('&lt;div id=\"info\" /&gt;')).\n                append($('&lt;div id=\"container\" /&gt;').\n                    css({\n                        margin: '50px 0px',\n                        border: '1px solid black',\n                        width: width+'px',\n                        '-webkit-perspective': p\n                    }).\n                    append($('&lt;div id=\"real\" /&gt;').addClass('the_div').css({ 'width': width+'px' }))).\n                append($('&lt;div id=\"fake\" /&gt;').addClass('the_div'));\n\n            setInterval(function() {\n                angle += 1;\n\n                $('#real').css({ '-webkit-transform': 'rotateY('+angle+'deg)' }).html(width);\n\n                // initial coordinates\n                var A = 0;\n                var B = width;\n                // translate the center (assuming -perspective-origin at 50%)\n                A -= width/2;\n                B -= width/2;\n                // new coordinates\n                A = calc(A, angle*Math.PI/180, p);\n                B = calc(B, angle*Math.PI/180, p);\n                // translate back\n                A += width/2;\n                B += width/2;\n                if(B &lt; A) { var tmp = A; A = B; B = tmp; } // swap\n                var realwidth = B-A;\n                $('#fake').html(width+'&lt;br/&gt;'+A+', '+B).css({\n                    'width': realwidth+'px',\n                    'margin-left': A+'px'\n                });\n\n                // shows debug information\n                var debug = function(values) { return values.map(function(i){ return i+': '+eval(i); }).join('&lt;br /&gt;'); }\n                $('#info').html($('&lt;div /&gt;').html(debug(['width', 'p', 'angle', 'A', 'B', 'realwidth'])));\n\n            }, 40);\n        }\n\n        function calc(oldx, angle, p) {\n            var x = Math.cos(angle) * oldx;\n            var z = Math.sin(angle) * oldx;\n\n            return x * p / (p+z);\n        }\n\n        test(WIDTH, 0, P);\n    });\n    &lt;/script&gt;\n    &lt;style type=\"text/css\"&gt;\n        * { margin: 0px; padding: 0px; }\n        body { padding: 40px 100px; }\n        .the_div { height: 100px; border: 2px solid black; background-color: rgba(255, 192, 0, 0.5); }\n    &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Note that if you're not giving a perspective value, the result will be equal as having an infinite value for it.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>lets say we have a div with 500x500px size and we rotate it on the x axis via css 45 degrees considering a webkit-perspective value of 1600px.</p>\n\n<p>How would you calculate the absolute dimensions of the displayed trapezium? (width, max-height, angles)</p>\n\n<p>I did only figure out a formula that calculates the width but without considering the perspective, so the value differ some pixels (JavaScript):</p>\n\n<pre><code>var absoluteWidth = Math.cos(45 * (Math.PI / 180)) * 500);\n</code></pre>\n\n<hr>\n\n<p>EDIT: Here is the spec about the -webkit-perspective function:</p>\n\n<blockquote>\n  <p><strong>perspective(&lt;number&gt;)</strong></p>\n  \n  <p>specifies a perspective projection matrix. This matrix maps a viewing cube onto a pyramid whose base is infinitely far away from the\n  viewer and whose peak represents the viewer's position. The viewable\n  area is the region bounded by the four edges of the viewport (the\n  portion of the browser window used for rendering the webpage between\n  the viewer's position and a point at a distance of infinity from the\n  viewer). The depth, given as the parameter to the function, represents\n  the distance of the z=0 plane from the viewer. Lower values give a\n  more flattened pyramid and therefore a more pronounced perspective\n  effect. The value is given in pixels, so a value of 1000 gives a\n  moderate amount of foreshortening and a value of 200 gives an extreme\n  amount. The matrix is computed by starting with an identity matrix and\n  replacing the value at row 3, column 4 with the value -1/depth. The\n  value for depth must be greater than zero, otherwise the function is\n  invalid.</p>\n</blockquote>\n\n<p>Regarding the \"perspective projection matrix\" this is what I found on Wikipedia: <a href=\"http://en.wikipedia.org/wiki/3D_projection#Perspective_projection\">http://en.wikipedia.org/wiki/3D_projection#Perspective_projection</a></p>\n",
            "last_activity_date": 1325169693,
            "question_id": 8648018,
            "score": 15,
            "tags": [
                "javascript",
                "css",
                "math",
                "css3",
                "perspective"
            ],
            "title": "Calculate absolute dimensions of a div rotated in perspective with css3"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You are using the correct API, but is the \"marker\" variable visible to the entire script. I don't see this marker variable declared globally.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>moveBus()</code> is getting called before <code>initialize()</code>. Try putting that line at the end of your <code>initialize()</code> function. Also Lat/Lon 0,0 is off the map (it's coordinates, not pixels), so you can't see it when it moves. Try 54,54. If you want the center of the map to  move to the new location, use <code>panTo()</code>.</p>\n\n<p>Demo: <a href=\"http://jsfiddle.net/ThinkingStiff/Rsp22/\">http://jsfiddle.net/ThinkingStiff/Rsp22/</a></p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;script src=\"http://maps.googleapis.com/maps/api/js?sensor=false\"&gt;&lt;/script&gt;\n&lt;div id=\"map-canvas\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>#map-canvas \n{ \nheight: 400px; \nwidth: 500px;\n}\n</code></pre>\n\n<p>Script:</p>\n\n<pre><code>function initialize() {\n\n    var myLatLng = new google.maps.LatLng( 50, 50 ),\n        myOptions = {\n            zoom: 4,\n            center: myLatLng,\n            mapTypeId: google.maps.MapTypeId.ROADMAP\n            },\n        map = new google.maps.Map( document.getElementById( 'map-canvas' ), myOptions ),\n        marker = new google.maps.Marker( {position: myLatLng, map: map} );\n\n    marker.setMap( map );\n    moveBus( map, marker );\n\n}\n\nfunction moveBus( map, marker ) {\n\n    marker.setPosition( new google.maps.LatLng( 0, 0 ) );\n    map.panTo( new google.maps.LatLng( 0, 0 ) );\n\n};\n\ninitialize();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p><strong>use panTo(x,y).This will help u</strong></p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm using the Google Maps API V3 and I'm trying to make a marker move across the screen. Here's what I have:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" /&gt;\n&lt;style type=\"text/css\"&gt;\n  html { height: 100% }\n  body { height: 100%; margin: 0; padding: 0 }\n  #map_canvas { height: 100% }\n&lt;/style&gt;\n&lt;script type=\"text/javascript\"\n    src=\"http://maps.googleapis.com/maps/api/js?sensor=false\"&gt;\n&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction initialize() {\n  var myLatLng = new google.maps.LatLng(50,50);\n  var myOptions = {\n    zoom: 4,\n    center: myLatLng,\n    mapTypeId: google.maps.MapTypeId.ROADMAP\n  }\n  var map = new google.maps.Map(document.getElementById(\"map_canvas\"), myOptions);\n\n  image = 'bus.gif';\n  marker = new google.maps.Marker({position: myLatLng, map: map, icon: image});\n\n  marker.setMap(map);\n}\n\nfunction moveBus()\n{\n  // Move Bus\n}\n\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body onload=\"initialize()\"&gt;\n&lt;script type=\"text/javascript\"&gt;\nmoveBus();\n&lt;/script&gt;\n&lt;div id=\"map_canvas\" style=\"height: 500px; width: 500px;\"&gt;&lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Now what I've tried is replacing // Move Bus with</p>\n\n<pre><code>marker.setPosition(new google.maps.LatLng(0,0));\n</code></pre>\n\n<p>But that didn't do anything. That's the command I saw on the API reference. I'm also relatively new to Javascript, so it might be a JS error on my part.</p>\n",
            "last_activity_date": 1426073157,
            "question_id": 8024784,
            "score": 15,
            "tags": [
                "javascript",
                "google-maps-api-3",
                "move",
                "google-maps-markers"
            ],
            "title": "How to move a marker in Google Maps API"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It's a JavaScript error when you click on a button in flash.  The button calls a javascript function to reveal a booking source to make a reservation for that particular table.  It's frustrating me big time.  </p>\n\n<p>The issue only happens in IE, nothing else, but when I debug it's a javascript error as far as I can tell.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Make sure you specify the id tag (it must have the same value as the name tag).\nAlthough <a href=\"http://kb2.adobe.com/cps/127/tn_12701.html\" rel=\"nofollow\">Adobe writes</a> that <code>id</code> is an optional tag, Internet Explorer needs the id to address the swf object with the javascript-flash interface.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had the same issue, I've solve it by changing the way I've included the flash.\nFristly I had</p>\n\n<pre><code>&lt;object&gt;\n&lt;embed&gt;&lt;/embed&gt;&lt;/object&gt;\n&lt;/object&gt;\n</code></pre>\n\n<p>Than i moved to:</p>\n\n<pre><code>&lt;object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" width=\"780\" height=\"420\"&gt;\n        &lt;param name=\"movie\" value=\"myContent.swf\" /&gt;\n        &lt;!--[if !IE]&gt;--&gt;\n        &lt;object type=\"application/x-shockwave-flash\" data=\"myContent.swf\" width=\"780\" height=\"420\"&gt;\n        &lt;!--&lt;![endif]--&gt;\n          &lt;p&gt;Alternative content&lt;/p&gt;\n        &lt;!--[if !IE]&gt;--&gt;\n        &lt;/object&gt;\n        &lt;!--&lt;![endif]--&gt;\n      &lt;/object&gt;\n</code></pre>\n\n<p>and with the last one it works.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>See <a href=\"http://msdn.microsoft.com/en-us/library/gg622942%28v=VS.85%29.aspx\">http://msdn.microsoft.com/en-us/library/gg622942%28v=VS.85%29.aspx</a></p>\n\n<p>Basically, IE9 breaks flash ExternalInterface calls if your flash component is embedded with an object tag with an embed tag fallback, and the object id and embed name is the same.</p>\n\n<p>The easiest workaround is to tell ie9 to render your page in IE8 Standards mode.\nTo do this, insert this in the  element:</p>\n\n<pre><code>&lt;!-- Enable IE8 Standards mode --&gt;\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=8\" &gt;\n</code></pre>\n\n<p>Otherwise, you might just want to use the object tag only or embed tag only.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Much of the time, this can be caused because of an embedded object swf video player (for example: JW Player etc.)</p>\n\n<p>Internet Explorer seems to require two attributes for the <strong>OBJECT</strong> tag, namely <strong>classid</strong> AND <strong>id</strong></p>\n\n<p>For a SWF player use:</p>\n\n<pre><code>classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\"\n\nid=\"dummy\"\n</code></pre>\n\n<p>NB - in principle, id can be any (non-taken) dummy string</p>\n\n<p>Other good sources on how to embed video:</p>\n\n<p><a href=\"http://www.w3schools.com/html/html_object.asp\" rel=\"nofollow\">http://www.w3schools.com/html/html_object.asp</a></p>\n\n<p><a href=\"http://www.2webvideo.com/blog/embed-swf-flv-mp4-videos-in-webpage\" rel=\"nofollow\">http://www.2webvideo.com/blog/embed-swf-flv-mp4-videos-in-webpage</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Try to verify if the element is null like below:</p>\n\n<pre><code>if(element == null)return false\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a page that works perfectly in all other browsers but breaks in IE.  The error from the debugger is:</p>\n\n<p>SCRIPT5007: Unable to get value of the property 'SetReturnValue': object is null or undefined </p>\n\n<p>It happens when I click a button in a flash object to call a function.  None of the buttons in the flash file work in IE but all work flawlessly in the other browsers.  Anyone have any ideas?  I've googled and really couldn't figure it out from the answers out there.</p>\n\n<p>The web address is <a href=\"http://capitolomaha.com/reservations/\">http://capitolomaha.com/reservations/</a></p>\n\n<p>Any help is much appreciated, this is confusing me so bad.  </p>\n",
            "last_activity_date": 1419871809,
            "question_id": 7523509,
            "score": 15,
            "tags": [
                "javascript",
                "flash",
                "wordpress",
                "internet-explorer"
            ],
            "title": "SCRIPT5007: Unable to get value of the property &#39;SetReturnValue&#39;: object is null or undefined"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Historically javascript made working with binary a pain, which probably in part explains a relative lack of tooling - but with javascript typed arrays it could well be a lot easier now. I kinda agree that if you <em>have</em> to get the same volume of data (via some format), using less bandwidth is a plus - but before embarking on anything you'd need to check that bandwidth / processing was an actual bottleneck (and if bandwidth: have you tried gzip/deflate first).</p>\n\n<p>I'm a fan of protobuf - and I'd happily see stronger browser-side tooling for it, but json is so ubiquitous that you'd need a compelling reason to challenge the status-quo. Also; think \"jsonp\".</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Google makes heavy use of Protocol Buffers in JS (GMail, etc.) through their Closure Library, generating JS code with a (unfortunately non-open-sourced) modified <code>protoc</code> (it would probably have to be <em>ported</em> to a <code>protoc</code> extension before being open-sourced).</p>\n\n<p>Apache Wave (whose <em>client</em> webapp is built with GWT) also uses Protocol Buffers for its communications with the server, generating Java code by reflecting on the Java classes produced by <code>protoc</code> (this is the PST, aka protobuf-stringtemplate, subproject).<br>\nPreviously, Wave was using <a href=\"http://code.google.com/p/protostuff/\" rel=\"nofollow\">protostuff</a> (and I don't know why they switched to their own solution, I suspect PST is derived from what the original Google Wave was using, and protostuff was only an intermediate step during the move to open-source).</p>\n\n<p>As a side note, I started exploring using Protocol Buffers on the browser side a while ago: <a href=\"http://blog.ltgt.net/exploring-using-protobuf-in-the-browser/\" rel=\"nofollow\">http://blog.ltgt.net/exploring-using-protobuf-in-the-browser/</a> &amp; <a href=\"http://blog.ltgt.net/using-protobuf-client-side-with-gwt\" rel=\"nofollow\">http://blog.ltgt.net/using-protobuf-client-side-with-gwt</a> with some almost-working code at <a href=\"http://code.google.com/p/protobuf-gwt/\" rel=\"nofollow\">http://code.google.com/p/protobuf-gwt/</a> that you might want to resurrect.</p>\n\n<p>Finally, there's work underway to make GWT RequestFactory proxies compatible with the server-side Java classes generated by <code>protoc</code> (and you could use a <code>protoc</code> extension or a similar approach to Wave's PST to generate your RequestFactory proxies). It should already be possible, provided you use builders all the way on the server-side (which is not quite how the Protocol Buffers Java API was designed).</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I have been looking for protobuf for javascript. There is a project here:\n<a href=\"https://github.com/dcodeIO/ProtoBuf.js\" rel=\"nofollow\">https://github.com/dcodeIO/ProtoBuf.js</a></p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>Is there a way to do protocol buffers in JavaScript?</p>\n\n<p>Why for .js?</p>\n\n<p>If you think about sciencey requirements for a moment, situations pop up where you might want to send a large block of data to the client.  With CRUD-style it doesn't really matter so much what you use.  With sciencey stuff it does matter (at least I think it does).  </p>\n\n<p>tradeoffs:</p>\n\n<ul>\n<li><p>protobuffs balances compactness, serialize and deserialize speeds well.</p></li>\n<li><p>text based protocols (xml / json) have a larger message size... but with javascript I wonder which is more effective.</p></li>\n</ul>\n\n<p>reference:</p>\n\n<ul>\n<li><p>code.google.com/p/protobuf-plugin-closure</p></li>\n<li><p><a href=\"http://stackoverflow.com/questions/1131504/google-protocol-buffers-or-something-similar-for-net-javascript\">Google Protocol Buffers or something similar for .net/javascript</a></p></li>\n<li><p><a href=\"https://github.com/sirikata/protojs\" rel=\"nofollow\">https://github.com/sirikata/protojs</a></p></li>\n<li><p><a href=\"http://stackoverflow.com/questions/6912981/google-protocol-buffers-javascript\">Google Protocol Buffers - javascript</a></p></li>\n<li><p><a href=\"http://www.vitaliykulikov.com/2011/02/gwt-friendly-protocol-buffers.html\" rel=\"nofollow\">http://www.vitaliykulikov.com/2011/02/gwt-friendly-protocol-buffers.html</a></p></li>\n<li><p><a href=\"http://benhakala.blogspot.com/2010/05/converting-google-protocol-buffers-to.html\" rel=\"nofollow\">http://benhakala.blogspot.com/2010/05/converting-google-protocol-buffers-to.html</a> (alludes to google maps possibly using protobufs)</p></li>\n</ul>\n\n<p>Additional references provided by community (see below for more context):</p>\n\n<ul>\n<li><p><a href=\"https://github.com/dcodeIO/ProtoBuf.js\" rel=\"nofollow\">https://github.com/dcodeIO/ProtoBuf.js</a></p></li>\n<li><p><a href=\"http://blog.ltgt.net/exploring-using-protobuf-in-the-browser/\" rel=\"nofollow\">http://blog.ltgt.net/exploring-using-protobuf-in-the-browser/</a> </p></li>\n<li><p><a href=\"http://blog.ltgt.net/using-protobuf-client-side-with-gwt\" rel=\"nofollow\">http://blog.ltgt.net/using-protobuf-client-side-with-gwt</a> </p></li>\n<li><p><a href=\"http://code.google.com/p/protobuf-gwt/\" rel=\"nofollow\">http://code.google.com/p/protobuf-gwt/</a> </p></li>\n</ul>\n",
            "last_activity_date": 1386218362,
            "question_id": 7074147,
            "score": 15,
            "tags": [
                "javascript",
                "gwt",
                "protocol-buffers"
            ],
            "title": "Protocol buffers for JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Try these functions</p>\n\n<pre><code>String.prototype.turkishToUpper = function(){\n    var string = this;\n    var letters = { \"i\": \"\u0130\", \"\u015f\": \"\u015e\", \"\u011f\": \"\u011e\", \"\u00fc\": \"\u00dc\", \"\u00f6\": \"\u00d6\", \"\u00e7\": \"\u00c7\", \"\u0131\": \"I\" };\n    string = string.replace(/(([i\u0131\u015f\u011f\u00fc\u00e7\u00f6]))+/g, function(letter){ return letters[letter]; })\n    return string.toUpperCase();\n}\n\nString.prototype.turkishToLower = function(){\n    var string = this;\n    var letters = { \"\u0130\": \"i\", \"I\": \"\u0131\", \"\u015e\": \"\u015f\", \"\u011e\": \"\u011f\", \"\u00dc\": \"\u00fc\", \"\u00d6\": \"\u00f6\", \"\u00c7\": \"\u00e7\" };\n    string = string.replace(/(([\u0130I\u015e\u011e\u00dc\u00c7\u00d6]))+/g, function(letter){ return letters[letter]; })\n    return string.toLowerCase();\n}\n\n// Example\n\"D\u0130N\u00c7\".turkishToLower(); // =&gt; din\u00e7\n\"DIN\u00c7\".turkishToLower(); // =&gt; d\u0131n\u00e7\n</code></pre>\n\n<p>I hope they will work for you.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Thanks for the function. I really liked it. Consecutive Turkish char input results 'undefined' as '\u00c7\u00c7'. Try replacing '/+g' with '/g'. The functions would be:</p>\n\n<pre><code>String.prototype.turkishToUpper = function(){\nvar string = this;\nvar letters = { \"i\": \"\u0130\", \"\u015f\": \"\u015e\", \"\u011f\": \"\u011e\", \"\u00fc\": \"\u00dc\", \"\u00f6\": \"\u00d6\", \"\u00e7\": \"\u00c7\", \"\u0131\": \"I\" };\nstring = string.replace(/(([i\u0131\u015f\u011f\u00fc\u00e7\u00f6]))/g, function(letter){ return letters[letter]; })\nreturn string.toUpperCase();\n}\n\nString.prototype.turkishToLower = function(){\nvar string = this;\nvar letters = { \"\u0130\": \"i\", \"I\": \"\u0131\", \"\u015e\": \"\u015f\", \"\u011e\": \"\u011f\", \"\u00dc\": \"\u00fc\", \"\u00d6\": \"\u00f6\", \"\u00c7\": \"\u00e7\" };\nstring = string.replace(/(([\u0130I\u015e\u011e\u00dc\u00c7\u00d6]))/g, function(letter){ return letters[letter]; })\nreturn string.toLowerCase();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<pre><code>String.prototype.tUpper = function(){\n   return this.replace(/i/g,\"\u0130\").toLocaleUpperCase();\n}\n\nString.prototype.tLower = function(){\n    return this.replace(/I/g,\"\u0131\").toLocaleLowerCase();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to convert strings to lower or upper case in JavaScript in the locale I wanted. I think standard functions like toUpperCase() and toLocaleUpperCase() do not satisfy this need. toLocale functions do not behave as they should. For example in Safari 4, Chrome 4 Beta, Firefox 3.5.x on my system it converts strings with Turkish characters incorrectly. The browsers respond to navigator.language as \"en-US\", \"tr\", \"en-US\" respectively. But there is no way to get user's Accept-Lang setting in the browser as far as I could found. Only Chrome gives me \"tr\" although I have configured every browser Turkish locale preferred. I think these settings only affect HTTP header, but we can't access to these settings via JavaScript.\nIn the <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Global%5FObjects/String\">Mozilla documentation</a> it says \"The characters within a string are converted to ... while respecting the current locale. For most languages, this will return the same as ...\". I think it's valid for Turkish, it doesn't differ it's configured as en or tr. In Turkish it should convert \"D\u0130N\u00c7\" to \"din\u00e7\" and \"DIN\u00c7\" to \"d\u0131n\u00e7\" or vice-versa.\nIs there any JavaScript library that satisfies this need? I think it should not only converting correctly in user's locale, but also it should support conversion via a locale parameter. Because developers can not access to user's configured preferred language. </p>\n",
            "last_activity_date": 1396178986,
            "question_id": 1850232,
            "score": 15,
            "tags": [
                "javascript",
                "internationalization",
                "uppercase",
                "lowercase",
                "turkish"
            ],
            "title": "Turkish case conversion in JavaScript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I don't know if it is by design or a bug but I can confirm this is a real problem. One other thing to be aware of is that if the user has the option to save passwords enabled, any site that requires a login will fail because that prompt is also blocked. (you can try this with a simple form with a username and password box and nothing else and it simply won't submit). There are workarounds though for all three issues. </p>\n\n<ol>\n<li><p>Login - set autocomplete=\"off\" in the form tag for the site, or detect that the site is running IOS7 and in fullscreen mode and apply this setting</p>\n\n<pre><code>$('form').attr('autocomplete', 'off');\n</code></pre></li>\n<li><p>Alerts and Confirms - you can either write a custom function in JavaScript or override the existing functions in much the same way as here: <a href=\"http://andrewensley.com/2012/07/override-alert-with-jquery-ui-dialog/\">http://andrewensley.com/2012/07/override-alert-with-jquery-ui-dialog/</a>. I like using Eric Martin's SimpleModal plugin which has a built in Confirm override, the bottom demo on <a href=\"http://www.ericmmartin.com/projects/simplemodal-demos/\">http://www.ericmmartin.com/projects/simplemodal-demos/</a>.</p></li>\n</ol>\n\n<p>I hope some of that helps.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>We had a similar issue with alerts breaking our web app. The specific case was an alert which was triggered from the onchange of a select list. We put together a very simple test page like this:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"&gt;\n        &lt;title&gt;&lt;/title&gt;\n        &lt;meta name=\"description\" content=\"\"&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width\"&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;select onchange=\"alert('broken!');\"&gt;\n            &lt;option value=\"one\"&gt;One&lt;/option&gt;\n            &lt;option value=\"two\"&gt;Two&lt;/option&gt;\n        &lt;/select&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Running that page from Safari in an iPad and changing the select list triggers the alert then Safari freezes. You actually have to then close Safari. This affects Safari in general - your web app doesn't have to be pinned to the home screen. You should be able to test this on an iPad running iOS 7 on this test page <a href=\"http://jsbin.com/AGoTejA/1\">http://jsbin.com/AGoTejA/1</a>.</p>\n\n<p>We have tested this on an iPad 2 (MC774B/A) and an iPad 3 (MD367B/A) and Safari crashes on both.</p>\n\n<p>A hacky way to get around this is to use a setTimeout() to delay execution of the alert. The problem only seems to happen when Safari is trying to display the overlay which shows the select list items and an alert at the same time. confirm() is also broken in the same way.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I think that a bug related to the smooth hiding selection boxes animation.\nI do not like hacks, but this method works.\nConfirming called after 100 ms (this is enough for the time until the selection window closes)</p>\n\n<pre><code>var object;\n\n$('form select').change(function()\n{\n    object = $(this);\n    timer = setTimeout(confirmation, 100);\n});\n\nfunction confirmation()\n{\n    switch(object.val())\n    {\n        case 'post_approved':\n        case 'post_delete':\n        case 'thread_delete': object.parent('form').find('input[name=id]').val(object.parent('form').find('input[name=post_id]').val()); break;\n        case 'user_delete_all': object.parent('form').find('input[name=id]').val(object.parent('form').find('input[name=user_id]').val()); break;\n        default: return false; break;\n    }\n\n    if(object.parent('form').find('input[name=act]').val() === 'post_approved'  || (object.parent('form').find('input[name=act]').val() != '' &amp;&amp; confirm('\u0412\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b?')))\n        object.parent('form').submit();\n    else\n        return false;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I solved with a setTimeout</p>\n\n<pre><code>&lt;select onchange=\"setTimeout(function(){alert('not broken!');},200)\"&gt;\n                &lt;option value=\"one\"&gt;One&lt;/option&gt;\n                &lt;option value=\"two\"&gt;Two&lt;/option&gt;\n            &lt;/select&gt;\n</code></pre>\n\n<p><a href=\"http://jsbin.com/iPuXiVA/4/\" rel=\"nofollow\">http://jsbin.com/iPuXiVA/4/</a></p>\n\n<p>Anyway, seems this bug afflicts the iPad and not the iPhone.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>javascript alert() and confirm() bugs fixed as of iOS7.0.3</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Andersen is correct: </p>\n\n<blockquote>\n  <p>javascript alert() and confirm() bugs fixed as of iOS7.0.3</p>\n</blockquote>\n\n<p>just installed and tested it myself.  </p>\n\n<p>While Apple was fixing the issue, I scrambled to find something to work around it, and ended up finding a js plugin called Alertify that I thought this was worthwhile to share. I think I'll use it from now on, regardless of the bug fix! It just makes alerts, prompts etc look really, really good. Thought it was worth sharing since readers of this post are likely using the standard browser alerts. I was stoked to stumble across it. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Under iOS (currently 7.0), it looks like <code>alert()</code> and <code>confirm()</code> are not working when our web app is pinned to the home screen (aka using the meta tag <code>apple-mobile-web-app-capable</code>).</p>\n\n<p>I found a user having a similar issue on twitter:</p>\n\n<p><a href=\"https://twitter.com/thomasfuchs/status/380137801259704320\">https://twitter.com/thomasfuchs/status/380137801259704320</a></p>\n\n<p>Anybody has a temporary fix if it's really a bug in iOS 7?</p>\n",
            "last_activity_date": 1413955761,
            "question_id": 18903525,
            "score": 14,
            "tags": [
                "javascript",
                "ios",
                "safari",
                "ios7"
            ],
            "title": "&quot;alert()&quot; and &quot;confirm()&quot; not working with &quot;apple-mobile-web-app-capable&quot;"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<ul>\n<li>By making the property non-enumerable you can still access it. But when you apply a for in loop on the object the non-enumerable property won't be iterated. </li>\n<li>See first point</li>\n<li><p>Inherited properties of built-in objects(like push, pop, toString...) are not enumerable</p>\n\n<pre><code>var o = {a:1, b:2, c:3} // a,b,c are enumerable properties\no.propertyIsEnumerable(\"toString\") // returns false, because it is a inherited property\nfor(p in o) console.log(p); // this loop will print a,b and c but not toString or other inherited properies\n</code></pre></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think the main benefit is to be able to control what shows up when enumerating an object's properties, such as <code>for in</code> or <code>Object.keys()</code>.</p>\n\n<p>MDN explains it well with <code>Object.defineProperty</code>: <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/defineProperty\">https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/defineProperty</a></p>\n\n<p>So normally, when people want to add a method to <code>Object</code>, such as a polyfill for some method not supported in old browsers, they modify the <code>.prototype</code>. But that makes the property enumerable and messes up what is returned in loops/keys collection (<strong>without using <code>.hasOwnProperty</code></strong>...which not everyone uses).</p>\n\n<p>So instead of something like:</p>\n\n<pre><code>Object.prototype.myMethod = function () {\n    alert(\"Ahh\");\n};\n</code></pre>\n\n<p>you could use <code>Object.defineProperty</code> to explicitly say to have it not be enumerable:</p>\n\n<pre><code>Object.defineProperty(Object.prototype, 'myMethod', {\n    value: function () {\n        alert(\"Ahh\");\n    },\n    enumerable: false\n});\n</code></pre>\n\n<p>That way, for example when you use <code>for (var key in obj)</code>, \"myMethod\" won't be an item enumerated, and you won't have to worry about using <code>.hasOwnProperty</code>. The main problem with this is that some browsers don't support it of course: <a href=\"http://kangax.github.com/es5-compat-table/\">http://kangax.github.com/es5-compat-table/</a> and that not all libraries/code use it, so you can't always rely on external libraries/code to do use correctly and all the time.</p>\n\n<p>You can access a non-enumerable property at any time you want, it just won't show up when enumerating the object's properties - that's the main point.</p>\n\n<p>And I do believe that all \"predefined\" properties of objects are non-enumerable. By that, I really only mean native properties, not necessarily inherited or created. So with your example, <code>pop</code> and <code>push</code> will <strong>not</strong> be enumerated over, but <code>Array.prototype.indexOf</code> will be if it is created as a polyfill on an old browser that doesn't support that method...which of course, can be avoided by using <code>Object.defineProperty</code> like my example above. Another example is the <code>length</code> property, which is not enumerated over.</p>\n\n<p>Here's an example in general: <a href=\"http://jsfiddle.net/aHJ3g/\">http://jsfiddle.net/aHJ3g/</a></p>\n\n<p>The use and definition of <code>Object.keys</code> is important: \"Returns an array of a given object's own enumerable properties, in the same order as that provided by a <code>for-in</code> loop (the difference being that a <code>for-in</code> loop enumerates properties in the prototype chain as well).\" - from MDN - <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys\">https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys</a></p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Another major benefit as I see it, is that it prevents private properties of an object from polluting the public namespace.</p>\n\n<p>Say you have created and published a powerful library called <code>Cosmos</code>. The user fires up the Node interpreter and creates a new instance of it by calling the constructor:</p>\n\n<pre><code>var Cosmos = require('Cosmos');\nvar cosmos = new Cosmos('my empire');\n</code></pre>\n\n<p>Now the user simply types <code>cosmos</code> and presses enter to see what public API it supports. Which of the two do you want the user to see?</p>\n\n<pre><code>{ name: 'my empire',\n  grow: [Function: grow],\n  addStar: [Function: addStar],\n  beautify: [Function: beautify],\n  implode: [Function: implode],\n  destroy: [Function: destroy] }\n</code></pre>\n\n<p>OR</p>\n\n<pre><code>{ _age: 25000,\n  _size: 35000,\n  _destroyed: false,\n  name: 'my empire',\n  _numStars: 200,\n  _init: [Function: _init],\n  grow: [Function: grow],\n  _grow: [Function: _grow],\n  addStar: [Function: addStar],\n  _checkStatus: [Function: _checkStatus],\n  beautify: [Function: beautify],\n  implode: [Function: implode],\n  destroy: [Function: destroy] }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Enumerability is one of the three attributes of a property: writability, enumerability, and configurability. My questions are:</p>\n\n<ul>\n<li>What are the benefit of making properties non-enumerable in JavaScript? I know we are hiding the property by making them non-enumerable, but what are the benefit of property hiding?</li>\n<li>Can we access non-enumerable properties? If yes, then what is the benefit of making them non-enumerable?</li>\n<li>Are all predefined properties of Objects set as non-enumerable? Such as the case of Array's <code>pop</code> and <code>push</code> properties being non-enumerable?</li>\n</ul>\n",
            "last_activity_date": 1390666619,
            "question_id": 14984533,
            "score": 14,
            "tags": [
                "javascript",
                "prototype",
                "enumerable"
            ],
            "title": "What are the benefits of making properties non-enumerable?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<h2>What it means</h2>\n\n<p>If the variable <code>secret</code> is falsy (<em>one of the following</em>):</p>\n\n<ul>\n<li><code>false</code></li>\n<li><code>0</code></li>\n<li><code>''</code> (empty string)</li>\n<li><code>null</code></li>\n<li><code>undefined</code></li>\n<li><code>NaN</code></li>\n</ul>\n\n<p>..then set it to <code>{}</code> (an empty object - it's the same as <code>new Object()</code>).</p>\n\n<hr>\n\n<h2>Alternative code</h2>\n\n<p>It could also be written as this:</p>\n\n<pre><code>if (!secret) secret = {};\n</code></pre>\n\n<p>But as it's longer most people prefer the above.</p>\n\n<hr>\n\n<h2>Why?</h2>\n\n<p>This solution is useful as javascript has no default function parameters.</p>\n\n<p>For example an example in PHP could look like this:</p>\n\n<pre><code>&lt;?php\n    function foo($bar = 'default') {\n        echo $bar;\n    }\n?&gt;\n</code></pre>\n\n<p>and in JS that <em>could</em> be</p>\n\n<pre><code>function foo(bar) {\n    bar = bar || 'default';\n    console.log(bar);\n}\nfoo(); //default\nfoo(NaN); //default\nfoo(undefined); //default\nfoo(null); //default\nfoo(false); //default\nfoo(0); //default\nfoo(''); //default\nfoo('something'); //something\nfoo(12); //12\nfoo(1.2); //1.2\n</code></pre>\n\n<hr>\n\n<h2>What if I <em>only</em> want to set a default if nothing else has been set?</h2>\n\n<p>If you <strong>only</strong> want to check for no value (no falsy values), then you can use the <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/typeof\" rel=\"nofollow\"><code>typeof</code></a> function in JS:</p>\n\n<pre><code>function foo(bar) {\n    if (typeof bar == 'undefined') bar = 'default';\n    console.log(bar);\n}\nfoo(); //default\nfoo(undefined); //default\nfoo(NaN); //NaN\nfoo(null); //null\nfoo(false); //false\nfoo(0); //0\nfoo(''); //(empty string)\nfoo('something'); //something\nfoo(12); //12\nfoo(1.2); //1.2\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<p>I saw something like this in Javascript :</p>\n\n<pre><code>   function name (secret) {\n          secret = secret || {};\n</code></pre>\n\n<p>i can't find anywhere what exactly means <strong>secret = secret || {};</strong></p>\n\n<p>Is that mean create global variable with value of passed argument or an object?</p>\n\n<p>When do you use it? When there is no argument passed?</p>\n",
            "last_activity_date": 1405595207,
            "question_id": 13016235,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "Use of || {} in Javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The Problem was indeed a CSS setting. I am using the zurb foundation framework, which defines max-width for all images. </p>\n\n<pre><code>max-width: 100%;\n</code></pre>\n\n<p>Fixed it, by adding my own css class to the map div. It overrides the max-width setting and the Markers are back to normal.</p>\n\n<pre><code>&lt;div id=\"gmap\" class=\"map_canvas\" /&gt;\n\n.map_canvas img {\n    max-width: none; // just in case it does not work... add !important;\n}\n</code></pre>\n\n<p>Thanks Dr. Molle for the Hint...</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Works without !important, and !important should not be used if it doesn't need to be.</p>\n\n<pre><code>.map_canvas img {\n    max-width: none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>i am implementing a Location Picker like this one:\n<a href=\"http://m.rhinvivant-lebendigerrhein.eu/geopick.php?raz=1\">http://m.rhinvivant-lebendigerrhein.eu/geopick.php?raz=1</a></p>\n\n<p>But when I load the code in my environment the Location Marker is suddenly small and squashed after loading the page (see image1). Then after i dragged the Marker around, it gets even smaller (see image2). </p>\n\n<p><img src=\"http://i.stack.imgur.com/K7N1C.png\" alt=\"google maps marker too small\"></p>\n\n<p>Has anyone seen something like this? It would help to get a hint how i can work around this, or what mistake i made. </p>\n\n<p>i.e. How can i fix the size of my markers?</p>\n\n<p>My code looks like this:</p>\n\n<pre><code>var marker = new google.maps.Marker({\n    title: settings.gMapMarkerTitle,\n    map: map,\n    position: defaultLocationLatLng,\n    draggable: true\n});\n</code></pre>\n",
            "last_activity_date": 1424459570,
            "question_id": 12494018,
            "score": 14,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-markers",
                "zurb-foundation"
            ],
            "title": "Standard Marker in Google Maps too small"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Use <code>document.scrollTop</code> to change the position of the document. Set the <code>scrollTop</code> of the <code>document</code> equal to the <code>bottom</code> of the featured section of your site</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use two different techniques to achieve this.</p>\n\n<p>The first one is with javascript: set the scrollTop property of the scrollable element (e.g. <code>document.body.scrollTop = 1000;</code>).</p>\n\n<p>The second is setting the link to point to a specific id in the page e.g.</p>\n\n<pre><code>&lt;a href=\"mypage.html#sectionOne\"&gt;section one&lt;/a&gt;\n</code></pre>\n\n<p>Then if in your target page you'll have that ID the page will be scrolled automatically.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use <code>.scrollIntoView()</code> for this. It will bring a specific element into the viewport.</p>\n\n<p>Example:</p>\n\n<pre><code>document.getElementById( 'bottom' ).scrollIntoView();\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/ThinkingStiff/DG8yR/\">http://jsfiddle.net/ThinkingStiff/DG8yR/</a></p>\n\n<p>Script:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function top() {\n    document.getElementById( 'top' ).scrollIntoView();    \n};\n\nfunction bottom() {\n    document.getElementById( 'bottom' ).scrollIntoView();\n    window.setTimeout( function () { top(); }, 2000 );\n};\n\nbottom();\n</code></pre>\n\n<p>HTML:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;div id=\"top\"&gt;top&lt;/div&gt;\n&lt;div id=\"bottom\"&gt;bottom&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>#top {\n    border: 1px solid black;\n    height: 3000px;\n}\n\n#bottom {\n    border: 1px solid red;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function scrollpage() {\t\t\r\n\tfunction f() \r\n\t{\r\n\t\twindow.scrollTo(0,i);\r\n\t\tif(status==0) {\r\n   \t\t\ti=i+40;\r\n\t\t\tif(i&gt;=Height){\tstatus=1; } \r\n\t\t} else {\r\n\t\t\ti=i-40;\r\n\t\t\tif(i&lt;=1){\tstatus=0; }  // if you don't want continue scroll then remove this line\r\n\t\t}\r\n\tsetTimeout( f, 0.01 );\r\n\t}f();\r\n}\r\nvar Height=document.documentElement.scrollHeight;\r\nvar i=1,j=Height,status=0;\r\nscrollpage();\r\n&lt;/script&gt;</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>&lt;style type=\"text/css\"&gt;\r\n\r\n\t#top { border: 1px solid black;  height: 20000px; }\r\n\t#bottom { border: 1px solid red; }\r\n\r\n&lt;/style&gt;</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div id=\"top\"&gt;top&lt;/div&gt;\r\n&lt;div id=\"bottom\"&gt;bottom&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to start each page after the homepage about 500px down, similar to this website: <a href=\"http://unionstationdenver.com/\">http://unionstationdenver.com/</a> </p>\n\n<p>You'll notice when viewing pages after the homepage, you're automatically scrolled down without notice but you can than scroll up to revel the featured slider again.</p>\n\n<p>I've played with scrolledHeight but I dont think that is what I need???? </p>\n\n<p>Basically I have a featured section that is on top of all my content pages, but you shouldn't be able to see this section until you scroll up. Any help?</p>\n",
            "last_activity_date": 1415631991,
            "question_id": 8773921,
            "score": 14,
            "tags": [
                "javascript",
                "html",
                "css",
                "scroll",
                "height"
            ],
            "title": "how to automatically scroll down a html page?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Most people use this trick:</p>\n\n<pre><code>var s = 'Hello &lt;/scr' + 'ipt&gt;';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>(edit - somehow didn't notice you mentioned slash-escape in your question already...)</p>\n\n<p>OK so you know how to escape a slash.</p>\n\n<p>In inline event handlers, you can't use the bounding character inside a literal, so use the other one:</p>\n\n<pre><code>&lt;div onClick='alert(\"Hello \\\"\")'&gt;test&lt;/div&gt;\n</code></pre>\n\n<p>But this is all in aid of making your life difficult. Just don't use inline event handlers! Or if you absolutely must, then have them call a function defined elsewhere.</p>\n\n<p>Generally speaking, there are few reasons for your server-side code to be writing javascript. Don't generate scripts from the server - pass data to pre-written scripts instead.</p>\n\n<p>(original) </p>\n\n<p>You can escape anything in a JS string literal with a backslash (that is not otherwise a special escape character):</p>\n\n<pre><code>var s = 'Hello &lt;\\/script&gt;';\n</code></pre>\n\n<p>This also has the positive effect of causing it to not be interpreted as html. So you could do a blanket replace of \"/\" with \"\\/\" to no ill effect.</p>\n\n<p>Generally, though, I am concerned that you would have user-submitted data embedded as a string literal in javascript. Are you generating javascript code on the server? Why not just pass data as JSON or an HTML \"data\" attribute or something instead?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'd say the best practice would be <em>avoiding inline JS in the first place</em>.</p>\n\n<p>Put the JS code in a separate file and include it with the <code>src</code> attribute</p>\n\n<pre><code>&lt;script src=\"path/to/file.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>and use it to set event handlers from the inside isntead of putting those in the HTML.</p>\n\n<pre><code>//jquery example\n$('div.something').on('click', function(){\n    alert('Hello&gt;');\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The following characters <em>could</em> interfere with an HTML or Javascript parser and should be escaped in string literals: <code>&lt;, &gt;, \", ', \\,</code> and <code>&amp;</code>. </p>\n\n<p>In a script block using the escape character, as you found out, works. The concatenation method (<code>&lt;/scr' + 'ipt&gt;'</code>) can be hard to read. </p>\n\n<pre><code>var s = 'Hello &lt;\\/script&gt;';\n</code></pre>\n\n<p>For inline Javascript in HTML, you can use entities:</p>\n\n<pre><code>&lt;div onClick=\"alert('Hello &amp;quot;&gt;')\"&gt;click me&lt;/div&gt;\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/ThinkingStiff/67RZH/\">http://jsfiddle.net/ThinkingStiff/67RZH/</a></p>\n\n<p>The method that works in both <code>&lt;script&gt;</code> blocks and inline Javascript is <code>\\uxxxx</code>, where <code>xxxx</code> is the hexadecimal character code.</p>\n\n<ul>\n<li><code>&lt;</code> - <code>\\u003c</code></li>\n<li><code>&gt;</code> - <code>\\u003e</code></li>\n<li><code>\"</code> - <code>\\u0022</code></li>\n<li><code>'</code> - <code>\\u0027</code></li>\n<li><code>\\</code> - <code>\\u005c</code></li>\n<li><code>&amp;</code> - <code>\\u0026</code></li>\n</ul>\n\n<p>Demo: <a href=\"http://jsfiddle.net/ThinkingStiff/Vz8n7/\">http://jsfiddle.net/ThinkingStiff/Vz8n7/</a></p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div onClick=\"alert('Hello \\u0022&gt;')\"&gt;click me&lt;/div&gt;\n\n&lt;script&gt;\n    var s = 'Hello \\u003c/script\\u003e';\nalert( s );\n&lt;/script&gt;   \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p>On the one hand if I have</p>\n\n<pre><code>&lt;script&gt;\nvar s = 'Hello &lt;/script&gt;';\nconsole.log(s);\n&lt;/script&gt;\n</code></pre>\n\n<p>the browser will terminate the <code>&lt;script&gt;</code> block early and basically I get the page screwed up. </p>\n\n<p>On the other hand, the value of the string may come from a user (say, via a previously submitted form, and now the string ends up being inserted into a <code>&lt;script&gt;</code> block as a literal), so you can expect anything in that string, including maliciously formed tags. Now, if I escape the string literal with htmlentities() when generating the page, the value of s will contain the escaped entities literally, i.e. s will output</p>\n\n<pre><code>Hello &amp;lt;/script&amp;gt;\n</code></pre>\n\n<p>which is not desired behavior in this case.</p>\n\n<p>One way of properly escaping JS strings within a <code>&lt;script&gt;</code> block is escaping the slash if it follows the left angle bracket, or just always escaping the slash, i.e.</p>\n\n<pre><code>var s = 'Hello &lt;\\/script&gt;';\n</code></pre>\n\n<p>This seems to be working fine.</p>\n\n<p>Then comes the question of JS code within HTML event handlers, which can be easily broken too, e.g.</p>\n\n<pre><code>&lt;div onClick=\"alert('Hello \"&gt;')\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>looks valid at first but breaks in most (or all?) browsers. This, obviously requires the full HTML entity encoding.</p>\n\n<p>My question is: what is the best/standard practice for properly covering all the situations above - i.e. JS within a script block, JS within event handlers - if your JS code can partly be generated on the server side and can potentially contain malicious data?</p>\n",
            "last_activity_date": 1325807461,
            "question_id": 8749001,
            "score": 14,
            "tags": [
                "javascript",
                "html",
                "escaping"
            ],
            "title": "Escaping HTML entities in JavaScript string literals within the &lt;script&gt; block"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The <code>focusin</code> and <code>focusout</code> events bubble, the <code>focus</code> and <code>blur</code> events doesn't. That means that you can use the <code>focusin</code> and <code>focusout</code> on the parent element of a form field.</p>\n\n<p>Demo: <a href=\"http://jsfiddle.net/pAp4E/\">http://jsfiddle.net/pAp4E/</a></p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"parent\"&gt;\n    &lt;input type=\"text\" /&gt;\n&lt;/div&gt;\n\n&lt;div class=\"log\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>$('.parent')\n    .focusin(function(){log('div focusin');})\n    .focusout(function(){log('div focusout');})\n    .focus(function(){log('div focus');})\n    .blur(function(){log('div blur');});\n$('input')\n    .focusin(function(){log('input focusin');})\n    .focusout(function(){log('input focusout');})\n    .focus(function(){log('input focus');})\n    .blur(function(){log('input blur');});\n\nfunction log(str){\n  $('.log').append($('&lt;div/&gt;').text(str));\n}\n</code></pre>\n\n<p>When you run it, you see that only the input gets all the events, the parent only gets the <code>focusin</code> and <code>focusout</code> events.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>The focus and blur events keep track of the elements the user focuses on.</p>\n\n<ol>\n<li><p>focus</p>\n\n<p>Fires when a focusable element gains the focus</p></li>\n<li><p>blur</p>\n\n<p>Fires when a focusable element loses the focus</p></li>\n<li><p>focusin and focusout</p>\n\n<p>Fire at the same time as focus and blur, but bubble. </p></li>\n</ol>\n\n<p>for example <a href=\"http://javascript.info/tutorial/focus-blur\">check this</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>Can anyone tell me the difference between blur and focusout, focus and focusin with a simple example?</p>\n",
            "last_activity_date": 1394705622,
            "question_id": 7858979,
            "score": 14,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Difference between focusin/focusout and focus/blur, with example."
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This is possible in IE10, using positioned floats: <a href=\"http://ie.microsoft.com/testdrive/HTML5/PositionedFloats/Default.html\">http://ie.microsoft.com/testdrive/HTML5/PositionedFloats/Default.html</a></p>\n\n<p>Other browsers have yet to support this.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Well, at least for the wrapping, if you want to use jQuery, you can use this <a href=\"http://www.jwf.us/projects/jQSlickWrap/\">jQSlickWrap</a> plugin to have the text wrap around the irregularly-shaped image. It uses a nice HTML5 canvas technique. </p>\n\n<p>See the text wrap example here: <a href=\"http://www.jwf.us/projects/jQSlickWrap/example2.html\">http://www.jwf.us/projects/jQSlickWrap/example2.html</a></p>\n\n<p>Hope it helps!</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<h2>TL;DR</h2>\n\n<p>This is a common and desirable feature that has been discussed numerous times in the history of CSS, and there is a specification under development to make it possible. Unfortunately, implementations are few and far-between, and some implementers are reluctant to work on it. Doing it with JavaScript is a complex problem for any non-trivial layout; such a solution is unlikely to be fast enough for your purposes and you will fast approach the sort of markup you'd expect from a PDF-to-HTML converter.</p>\n\n<h2>Background</h2>\n\n<p>There are two questions here: irregular text flow and excluding text and other inline elements from an arbitrary region of the page.</p>\n\n<p>This is not the first time either feature has been discussed for CSS. In particular, flowing text around irregular floated shapes was <a href=\"http://www.w3.org/TR/WD-css1-960717#float\" rel=\"nofollow\">mentioned in a CSS level 1 working draft</a> back in 1996, and Eric Meyer's <a href=\"http://meyerweb.com/eric/css/edge/raggedfloat/demo.html\" rel=\"nofollow\">ragged float demo</a> dates from at least 2002. This is a long overdue feature!</p>\n\n<p>In June 2007, James Elmore suggested adding <code>position</code> values to the <code>float</code> property, enabling elements to be positioned arbitrarily on the page while excluding other elements from flowing underneath.</p>\n\n<p>SVG 1.2 initially specified a model for <a href=\"http://www.w3.org/TR/2004/WD-SVG12-20041027/flow.html\" rel=\"nofollow\">flowed text regions</a>, and goes into some detail on how this would be implemented. Unfortunately, the <a href=\"http://www.w3.org/TR/SVG12/\" rel=\"nofollow\">latest version of the spec</a> (which is still in development) blows this out of the water by noting that previous work will be replaced with \"a superset of the SVG 1.2 Tiny <code>textArea</code> feature\".</p>\n\n<h2>Current status (revised August 2012)</h2>\n\n<p>More recently, we have the <a href=\"http://www.w3.org/TR/css3-exclusions/\" rel=\"nofollow\">CSS Exclusions specification</a>, a <a href=\"http://labs.adobe.com/technologies/cssregions/\" rel=\"nofollow\">proposal from Adobe</a> and what you see being shown off in that video. As of August 2012, these have been implemented in IE 10 RTM and are slowly being rolled out in WebKit, but developers working for other vendors have expressed <a href=\"http://www.brucelawson.co.uk/2011/css-regions-css-exclusions/\" rel=\"nofollow\">mixed feelings</a> about the proposal.*</p>\n\n<ul>\n<li><strong>Trident (IE):</strong> implemented in IE10 platform preview and available in the RTM. (<a href=\"http://ie.microsoft.com/testdrive/HTML5/PositionedFloats/Default.html\" rel=\"nofollow\">Referred to as \"positioned floats\" in IE Test Drive</a>, similar to James Elmore's proposal.)</li>\n<li><strong>WebKit (Chrome, Safari):</strong> partially implemented, with patches gradually being approved for landing in the WebKit trunk, meaning we should start seeing this soon. (<a href=\"https://bugs.webkit.org/show_bug.cgi?id=57311\" rel=\"nofollow\">Bug 57311 - CSSRegions: add exclusions support in WebKit</a>.)</li>\n<li><strong>Gecko (Firefox):</strong> unlikely to be implemented soon; bug currently resolved as WONTFIX. (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=672053\" rel=\"nofollow\">Bug 672053 - Add support for CSS3 Positioned Floats</a>\u2014note David Baron's objections concerning interoperability.)</li>\n<li><strong>Presto (Opera):</strong> not yet implemented. (Bug tracker is private; I tried asking the ever gregarious Bruce Lawson if there was an open bug, but <a href=\"https://twitter.com/#!/brucel/status/179979553303830529\" rel=\"nofollow\">he is constrained from commenting on their roadmap</a>.)</li>\n</ul>\n\n<p>Adobe maintain a <a href=\"http://adobe.github.com/web-platform/utilities/css-exclusions-support-matrix/\" rel=\"nofollow\">handy support matrix</a> for easy reference.</p>\n\n<h2>Hack*cough* \"Polyfilling\"?</h2>\n\n<p>It would be difficult achieve a similar effect using JavaScript, and even more difficult to do it efficiently. I can think of two very naive approaches to make room for an absolutely positioned element in a region:</p>\n\n<ol>\n<li>\"block out\" space for element using strategically-inserted inline <code>span</code>s; or</li>\n<li>surround each word with a <code>span</code> element, and style each word individually to make room for the excluded element using padding.</li>\n</ol>\n\n<p>I've hacked up <a href=\"http://jsfiddle.net/Jordan/rZbgn/\" rel=\"nofollow\">a very broken demo</a> of how the second approach might work. It's horrible, buggy and easy to break. I actually spent a few weeks after answering this question working on a polyfill for the Exclusions spec, but gave up because there were too many bugs and performance issues.</p>\n\n<p>You will have myriad issues with either approach: columns, text alignment, errant child elements (especially floated or positioned elements!), various edge conditions, horrible things if you change the HTML, hyphenation\u2014merciful heavens, I don't even want to <em>think</em> about hyphenation\u2014and, of course, potentially magnificent performance issues after taking account of these things.</p>\n\n<p>Performance issues can be ameliorated somewhat; for example, I've used <code>elementFromPoint</code> to try and get the <code>span</code> containing the first overlapping word directly, and some browsers even support <a href=\"http://www.w3.org/TR/cssom-view/#dom-document-caretpositionfrompoint\" rel=\"nofollow\"><code>caretPositionFromPoint</code></a>, which may also help. I think that with a lot of work, you could make something that works pretty well for static content; but making it fast enough that you can drag it around with the mouse? My demo page has precious little content and doesn't address any of the mind-bendingly complex issues you'd have to deal with to make this work on real web pages. Even if you can get around all of those issues, making it fast enough to drag around smoothly would be very challenging.</p>\n\n<hr>\n\n<p>* I strongly hope vendors will implement CSS Exclusions. People have been asking for these features since the earliest days of CSS, and it is a common and legitimate visual design objective both on screen and in print.</p>\n\n\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>I am trying to implement an interface where users can dynamically enter text and upload images. I wish for the interface to have these features:</p>\n\n<ol>\n<li>The images should be moveable i.e, ability to drag and drop the images around.</li>\n<li>The text entered should automatically wrap around the images.</li>\n</ol>\n\n<p>How could I accomplish this? I have looked at some jquery scripts and also looked through HTML5's canvas features, but am unable to find a solution.</p>\n\n<p>Thanks for your time.</p>\n\n<p>EDIT: This video shows the effect I wish to obtain:</p>\n\n<p><a href=\"http://www.youtube.com/watch?v=mYnj4Mz9g9g\">http://www.youtube.com/watch?v=mYnj4Mz9g9g</a></p>\n",
            "last_activity_date": 1358960350,
            "question_id": 7601378,
            "score": 14,
            "tags": [
                "javascript",
                "html5",
                "canvas",
                "drag-and-drop",
                "textwrapping"
            ],
            "title": "How can I wrap text around a moveable image?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>And what would you like it to achieve? It seems you mixed up a function declaration with a function call.</p>\n\n<p>If you want to pass another calls result to a function just write <code>funct(some_array, foo(x))</code>. If you want to pass another function itself, then write <code>funct(some_array, foo)</code>. You can even pass a so-called anonymous function <code>funct(some_array, function(x) { ... })</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think this is what you meant.</p>\n\n<pre><code>funct(\"z\", function (x) { return x; });\n\nfunction funct(a, foo){\n   foo(a) // this will return a\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>This is not the way to declare a function with another function as one of it's parameters. This is:</p>\n\n<pre><code>function foodemo(value){\n  return 'hello '+ value;\n}\n\nfunction funct(a, foo) {\n  alert(foo(a));\n}\n\n//call funct\nfunct('world!', foodemo); //=&gt; 'hello world!'\n</code></pre>\n\n<p>So, the second parameter of <code>funct</code> is a <code>reference</code> to another function (in this case <code>foodemo</code>). Once the function is called, it executes that other function (in this case using the first parameter as input for it).</p>\n\n<p>The parameters in a function declaration are just <em>labels</em>. It is the function body that gives them meaning. In this example <code>funct</code> will fail if the second parameter wasn't provided. So checking for that could look like:</p>\n\n<pre><code>function funct(a, foo) {\n  if (a &amp;&amp; foo &amp;&amp; typeof a === 'string' &amp;&amp; typeof foo === 'function'){\n    alert(foo(a));\n  } else {\n    return false;\n  }\n}\n</code></pre>\n\n<p>Due to the nature of JS, you <em>can</em> use a direct function call as parameter within a function call (with the right function definition):</p>\n\n<pre><code>function funct2(foo){\n  alert(foo);\n}\n\nfunct2(foodemo('world!')); //=&gt; 'hello world!'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I would rather suggest to create variable like below:</p>\n\n<pre><code>var deleteAction = function () { removeABC(); };\n</code></pre>\n\n<p>and pass it as an argument like below:</p>\n\n<pre><code>removeETC(deleteAction);\n</code></pre>\n\n<p>in removeETC method execute this like below:</p>\n\n<pre><code>function removeETC(delAction){ delAction(); }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What you have mentioned is legal. Here, <code>foo(X)</code> will get called and its returned value will be served as a parameter to the <code>funct()</code> method</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want to pass a function, just reference it by name without the parentheses:</p>\n\n<pre><code>function funct(a, foo) {\n   ...\n}\n</code></pre>\n\n<p>But sometimes you might want to pass a function <em>with arguments included</em>, but not have it called until the callback is invoked. To do this, when calling it, just wrap it in an anonymous function, like this:</p>\n\n<pre><code>funct(a, function(){foo(x)});\n</code></pre>\n\n<p>If you prefer, you could also use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\" rel=\"nofollow\">apply</a> function and have a third parameter that is an array of the arguments, like such:</p>\n\n<pre><code>function myFunc(myArray, callback, args)\n{\n    //do stuff with myArray\n    //...\n    //execute callback when finished\n    callback.apply(this, args);\n}\n\nfunction eat(food1, food2)\n{\n    alert(\"I like to eat \" + food1 + \" and \" + food2 );\n}\n\n//will alert \"I like to eat pickles and peanut butter\"\nmyFunc([], eat, [\"pickles\", \"peanut butter\"]); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In fact, seems like a bit complicated, is not. </p>\n\n<p>get method as a parameter:   </p>\n\n<pre><code> function JS_method(_callBack) { \n\n           _callBack(\"called\");  \n\n        }\n</code></pre>\n\n<p>You can give as a parameter method:</p>\n\n<pre><code>    JS_method(function (d) {\n           //Finally this will work.\n           alert(d)\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I was wondering whether this is legal to do. Could I have something like:</p>\n\n<pre><code>function funct(a, foo(x)) {\n  ...\n}\n</code></pre>\n\n<p>where <code>a</code> is an array and <code>x</code> is an integer argument for another function called <code>foo</code>?</p>\n\n<p>(The idea is to have one function that uses a for loop on the array, and calls that function in the params for every element in the array. The idea is so call this on different functions so elements of two arrays are multiplied and then the sums are added together. For example <code>A[0] * B[0] + A[1] * B[1]</code>.)</p>\n",
            "last_activity_date": 1413877585,
            "question_id": 5752030,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "Passing a function as an argument in a javascript function"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The RenderEngine of IE is awful... I would try to work with background images. Maybe a <strong>Font Replacement</strong> like <a href=\"http://cufon.shoqolate.com/generate/\" rel=\"nofollow\">Cufon</a> would do a better Job. Cufon generates Images of your Text. Works good in IE as far as i know.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>I would suggest either Google Fonts API or Cufon (as @swishmiller said), <strong>or</strong> disabling Anti-Aliasing (ClearType) in IE so the fonts always look unsmoothed (is that a word)?</p>\n\n<p>Google Font API: <a href=\"http://code.google.com/webfonts\" rel=\"nofollow\">http://code.google.com/webfonts</a></p>\n\n<p>Cufon: <a href=\"http://cufon.shoqolate.com/generate/\" rel=\"nofollow\">http://cufon.shoqolate.com/generate/</a></p>\n\n<p>Disable ClearType:<br /></p>\n\n<pre><code>    /* This will force IE into thinking there is a filter actually doing something, so it'll disable ClearType */\n-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(opacity=100)\";\n    filter:progid:DXImageTransform.Microsoft.Alpha(opacity=100);\n</code></pre>\n\n<p><strong>[edit]</strong> I should mention that I've not tried the Google Font API fix...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It is Def the text rendering engine in IE; however, it's doable.</p>\n\n<p><strong>filter:</strong> requires the element to have <strong>layout</strong> (ie. zoom). You can beat the rendering problem (most of the time), by giving the element a background color. Try the following on your example:</p>\n\n<pre><code>zoom:1;\nfilter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\nbackground-color:white;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>Try -ms-writing-mode property:\n<a href=\"http://msdn.microsoft.com/en-in/library/ie/ms531187%28v=vs.85%29.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-in/library/ie/ms531187%28v=vs.85%29.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'd like to rotate a text by 90 degrees counter-clockwise. Firefox and Chrome are no problem, using:</p>\n\n<pre><code>-webkit-transform-origin: top left;\n-webkit-transform: rotate(-90deg);\n-moz-transform-origin: top left;\n-moz-transform: rotate(-90deg);\n</code></pre>\n\n<p>For Internet Explorer, it should be this line, as far as I know:</p>\n\n<pre><code>filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\n</code></pre>\n\n<p>(The other method, <strong>writing-mode</strong>, can only rotate text clockwise 90 degrees).</p>\n\n<p>However, in IE the rotated text looks like a badly scaled image on its side (comparison below).</p>\n\n<p><img src=\"http://i.stack.imgur.com/ur0VB.png\" alt=\"Firefox/Chrome\"> Firefox / Chrome -- vs -- Internet Explorer: <img src=\"http://i.stack.imgur.com/ZabjI.png\" alt=\"Internet Explorer\"></p>\n\n<p>Is there any way that Internet Explorer can rotate the text in a more elegant way (possibly Javascript/jQuery)? I've been Googling, but I can only find more references to this method...</p>\n",
            "last_activity_date": 1409527660,
            "question_id": 4899442,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "internet-explorer",
                "css3"
            ],
            "title": "Rotate text in IE, without it getting ugly"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Use <a href=\"http://api.jquery.com/height/\"><code>.height()</code></a> like this:</p>\n\n<pre><code>var result = $(\"#myDiv\").height();\n</code></pre>\n\n<p>There's also <a href=\"http://api.jquery.com/innerHeight/\"><code>.innerHeight()</code></a> and <a href=\"http://api.jquery.com/outerHeight/\"><code>.outerHeight()</code></a> depending on <em>exactly</em> what you want.</p>\n\n<p><a href=\"http://jsfiddle.net/nick_craver/kTkHS/1/\">You can test it here</a>, play with the padding/margins/content to see how it changes around.</p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>Use <a href=\"http://api.jquery.com/height/\"><code>height()</code></a>:</p>\n\n<pre><code>var result = $(\"#myDiv\").height();\nalert(result);\n</code></pre>\n\n<p>This will give you the unit-less computed height in pixels. \"px\" will be stripped from the result. I.e. if the height is 400px, the result will be 400, but the result will be in pixels.</p>\n\n<p>If you want to do it <strong>without</strong> jQuery, you can use plain JavaScript:</p>\n\n<pre><code>var result = document.getElementById(\"myDiv\").offsetHeight;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>Although they vary slightly as to how they retrieve a height value, i.e some would calculate the whole element including padding, margin, scrollbar, etc and others would just calculate the element in its raw form.<br>\nYou can try these ones:</p>\n\n<p>javascript:</p>\n\n<pre><code>var myDiv = document.getElementById(\"myDiv\");\nmyDiv.clientHeight;\nmyDiv.scrollHeight;\nmyDiv.offsetHeight;\n</code></pre>\n\n<p>or in jquery:</p>\n\n<pre><code>$(\"#myDiv\").height();\n$(\"#myDiv\").innerHeight();\n$(\"#myDiv\").outerHeight();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 71
                }
            ],
            "body": "<p>I have used jQuery library to find out height of a <code>div</code>.</p>\n\n<p>Below is my <code>div</code> element with attributes :</p>\n\n<pre><code>&lt;DIV id=\"myDiv\" style=\"height:auto; width:78;overflow:hidden\"&gt; Simple Test&lt;/DIV&gt;\n</code></pre>\n\n<p>Below is my jQuery code to get height of <code>&lt;div&gt;</code></p>\n\n<pre><code>var result = $(\"#myDiv\").css('height');\nalert(result);\n</code></pre>\n\n<p>After executing above statement I am getting result as \"auto\". Actually this is I am not expecting, instead of that I <strong>want the result in px dimension.</strong></p>\n",
            "last_activity_date": 1377248559,
            "question_id": 3839227,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css"
            ],
            "title": "How to get height of &lt;div&gt; in px dimension"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You may like to review <a href=\"http://www.w3.org/TR/WCAG10/\" rel=\"nofollow\">Web Content Accessibility Guidelines 1.0</a>. (Edit: It's worth noting that this link isn't about what you asked specifically, it's about acccessibility, which is related).</p>\n\n<p>My opinion on the matter is that it is not so hard to write your site in the fashion of 'Graceful Degradation' or other variants of the same theme. The underlying strategy being that you write your site that it works for both (and in one model you write it so the JavaScript works first, then implement the 'non-JS' mode, and in the other vice versa).</p>\n\n<p>It's really not so tough, and is generally helpful to everbody.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Practically all of the PC/desktop/laptop users have JS enabled. Your current major concern should be the mobile market. This is growing very fast. More than often JS is (by default!) disabled to improve browsing performance. This is however slowly but surely getting a better coverage. Then there are screenreaders and textbased browsers and of course searchbots. Practically none of them supports/uses JS. With regard to searchbots, this can however change in the future.</p>\n\n<p>All with all, you should try to use JS only for progressive enhancements. The website should be designed the way that it provides and maintains the same <strong>functionality</strong> with JS disabled. The best way to achieve this would be building the website without any line of JS code and when you got all the minimum required functionality to function, then add JS for the enhancements like ajax, eye-candiness, user experience and so on.</p>\n\n<p>Noted should be that this may of course depend on the target audience of the website in question. Is it a news site? Social networking site? Intranet site? Discussion forum? Etcetera. Stackoverflow for example is unusable on my Blackberry with JS disabled. I can't even login. It is however gracefully displaying a warning bar in top.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<blockquote>\n  <p>How safe is it to assume that most of your users will have JS enabled?</p>\n</blockquote>\n\n<p>That depends on who your users are! Who's your target audience? </p>\n\n<blockquote>\n  <p>Does anyone have concrete data on this?</p>\n</blockquote>\n\n<p>Sure, it's easy to track, but the data is only meaningful in the context of that particular site's audience. A site selling vacation rentals will have totally different users than a site for fantasy football, for example.</p>\n\n<p>The short answer to your question, though, is that the only people that disable it will have done so <strong>intentionally</strong>, so they know how to put it back. It would probably be better to focus on cross-browser issues, users of mobile devices, maybe impaired users (depending again on your target audience) before worrying too much about whether they've disabled javascript.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicates:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/155615/is-it-reasonable-to-assume-my-visitors-have-javascript-enabled\">Is it reasonable to assume my visitors have javascript enabled?</a><br>\n  <a href=\"http://stackoverflow.com/questions/121108/how-many-people-disable-javascript\">How many people disable JavaScript?</a>  </p>\n</blockquote>\n\n\n\n<p>I know that JS should only be used to enhance functionality and users with JS disabled should still be able to use your website. But how often does that really happen nowadays? A majority of modern \"Web 2.0\" pages need JS for added functionality.   </p>\n\n<p>In other words, how safe is it to assume that most of your users will have JS enabled?<br>\nDoes anyone have concrete data on this?</p>\n",
            "last_activity_date": 1281844865,
            "question_id": 3485890,
            "score": 14,
            "tags": [
                "javascript",
                "accessibility",
                "web2.0"
            ],
            "title": "How safe is it to assume that most users will have JS enabled?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>self</code> <em>can</em> refer to the window object, but typically that's not the case here.  You'll see this commonly above that <code>setTimeout()</code>:</p>\n\n<pre><code>var self = this;\n</code></pre>\n\n<p>They're keeping a reference to the <strong>current object</strong>, so later when you call <code>self.keyword()</code> you're calling that method <em>on that object</em>, not any other.  </p>\n\n<p>Say you have for example images in the page you wanted to rotate every 2 seconds...you'd want each of those 3 timers to refer to <em>their own</em> methods.  If they use <code>this</code> directly, it would (most of the time) refer to <code>window</code> and not the current object, whereas passing another variable in maintains the current reference.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>It works with <code>setTimeout</code> because of two conditions in the browser:</p>\n\n<ul>\n<li>All global variables are properties of the <code>window</code> object. That means that <code>window</code> has a property <code>setTimeout</code> (<code>window.setTimeout</code>).</li>\n<li>The <code>window</code> object has a property called <code>self</code> that points to itself.</li>\n</ul>\n\n<p>As you can access the properties of <code>window</code> without explicitly writing <code>window</code> (that is what makes the global variables global), both calls work: <code>setTimeout()</code> will look up the property <code>setTimeout()</code> on the window object. <code>self.setTimeout()</code> will look up the property <code>self</code> on the <code>window</code> object, which is the window object itself.</p>\n\n<p>So if you call <code>self.setTimeout()</code> it is the same as <code>window.self.setTimeout()</code> which is the same as <code>window.setTimeout()</code> which again is the same as <code>setTimeout()</code>.</p>\n\n<p><em>Note: This only works if there is no variable <code>self</code> defined in the current scope that shadows the global <code>self</code>.</em></p>\n\n<p>This works with <em>any</em> symbol (meaning variable or function) defined in the global scope. You can test it yourself:</p>\n\n<pre><code>alert(window.self);\n</code></pre>\n\n<p>and</p>\n\n<pre><code>alert(self);\n</code></pre>\n\n<p>should both alert</p>\n\n<pre><code>[object Window]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I've noticed that calls like <code>setTimeout()</code> work either as :</p>\n\n<p><code>self.keyword()</code> </p>\n\n<p>or just on their own e.g. <code>keyword()</code>. </p>\n\n<p>What is the different between the two calls?</p>\n",
            "last_activity_date": 1279808295,
            "question_id": 3309516,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "When to use self in JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><code>&lt;script src=\"&lt;%= Url.Content(\"~/Scripts/Myscript.js\") %&gt;\" type=\"text/javascript\"&gt;&lt;/script&gt;</code></p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>I also reference js the same way as CMerat:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"&lt;% =Url.Content(\"~/Scripts/jquery-1.3.2.min.js\") %&gt;\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>If you need Intellisense for jquery, you can find <a href=\"http://weblogs.asp.net/scottgu/archive/2008/11/21/jquery-intellisense-in-vs-2008.aspx\" rel=\"nofollow\">instructions on how to set it up here</a>. As far as i know, you cant get Intellisense for any custom js file you reference - you will need to create the Intellisense file for it first.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I myself use mvccontrib htmlhelpers for this at the moment.    </p>\n\n<p><a href=\"http://weblogs.asp.net/rashid/archive/2009/04/28/script-and-css-management-in-asp-net-mvc.aspx\" rel=\"nofollow\">This</a> can be useful too.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've created my own HtmlHelper extensions that look like:</p>\n\n<pre><code>public static string MEScriptBlock(this HtmlHelper html, string path, string releasePath)\n{\n#if DEBUG\n#else\n    if (!string.IsNullOrEmpty(releasePath))\n        path = releasePath;\n#endif\n\n    return string.Format(\"&lt;script type=\\\"text/javascript\\\" src=\\\"{0}\\\"&gt;&lt;/script&gt;\\r\\n\",\n                         path);\n}\n</code></pre>\n\n<p>If intellisense is what you're after you could trick VS into thinking that a JS file has been loaded... E.g.</p>\n\n<pre><code>&lt;% if (false)\n   { %&gt;\n    &lt;script src=\"../../Scripts/Myscript.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;% } %&gt;\n</code></pre>\n\n<p>HTHs,\nCharles</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In case anyone else finds this answer that is using MVC Razor, here's the syntax for that:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"@Url.Content(\"/Scripts/MyScript.js\")\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>What is the correct way to reference Javascript in ASP.NET MVC? Using something like ../../Scripts/Myscript.js seems to work fine for routes that are the traditional {controller}/{action}/{id}, but are more fragile for anything more or less complex than that. Of greater concern is that the rational absolute reference (/Scripts/Myscript.js) breaks Intellisense in Visual Studio.</p>\n\n<p>How do you handle it?</p>\n\n<p>EDIT: This is obviously a very old question at this point, but I'm editing to mention that in MVC4, all you need is this:</p>\n\n<pre><code>src=\"~/Scripts/Whatever.js\"\n</code></pre>\n\n<p>That's enough for Razor to figure out where you mean, using the root path.</p>\n",
            "last_activity_date": 1330460741,
            "question_id": 937779,
            "score": 14,
            "tags": [
                "asp.net",
                "javascript",
                "asp.net-mvc"
            ],
            "title": "Correct way to reference Javascript in ASP.NET MVC?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>add an OnClientClick=\"this.disabled = true;\" to your button.</p>\n\n<p>If you are using Asp.net Ajax you might want to look at using <a href=\"http://encosia.com/downloads/postback-ritalin/\" rel=\"nofollow\">PostBack Ritalin</a>.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You need to be careful that the postback occurs before you disable the button through client script. This is a common gotcha with ajax and input boxes. Disabling an input box prevents the data from being sent from the browser, even if you can see text within it while it is disabled. The answer is that you need to use jquery for this to ensure the server-side code runs first before it is disabled.</p>\n\n<p>-Oisin</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you can disable it server side</p>\n\n<pre><code>Button1.Enabled = false;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<pre><code>// to disable\nthis.setAttribute('disabled', true); \n// to enable\nthis.removeAttribute('disabled');\n</code></pre>\n\n<p>this is a cross browser solution</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Short answer:</p>\n\n<p><a href=\"http://encosia.com/2007/04/17/disable-a-button-control-during-postback/\">The trick to disabling a Button control during a postback is to use UseSubmitBehavior=false</a>.</p>\n\n<p>Long answer:</p>\n\n<p>For whatever reason, <a href=\"http://www.w3.org/TR/html401/interact/forms.html#successful-controls\">the HTML spec dictates that disabled elements should not be included in POST requests</a>.  So, if you use JavaScript to disable the HTML element in the client-side onclick event, the input element will be disabled when the browser assembles the POST request, the server won't be properly notified which element raised the postback, and it won't fire server-side click event handlers.</p>\n\n<p>When you set the <strong>UseSubmitBehavior</strong> property to false, ASP.NET renders an input element of type <strong>button</strong> instead of the regular input of type <strong>submit</strong> that the ASP.NET Button control normally generates.  This is important because clicking a button element does not trigger the browser's form submit event.</p>\n\n<p>Instead of relying on a browser form submission, ASP.NET will render a client-side call to __doPostBack() within that button element's onclick handler.  __doPostBack will raise the postback explicitly, regardless of what POST data comes through in the request.</p>\n\n<p>With the postback being raised independent of the browser submit event, you're freed of the previously mentioned HTML quirk.  Then, you can set an OnClientClick of \"this.disabled = true;\", which will render as \"this.disabled = true; __doPostBack('Button1', '');\", and things will work as intended.</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>There is really cool event for body tag \"&lt;\"body onBeforeunload=\"buttonId.disabled = true;\" \">\"</p>\n\n<p>This event triggers right before form submits, in other words your data will be submitted correctly. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When using the \"this.disabled = true\" method make sure you check if the page is valid before disabling the control if you have validators on the page. If validation fails you won't be able to re-enable the control without reloading the page.</p>\n\n<pre><code>if (Page_IsValid) this.disabled = true;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Have you tried this?</p>\n\n<p>Add an OnClientClick=\"MyFunction();\" to your .NET button.</p>\n\n<p>Then in the .aspx page script tags you add the following JS function:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  function MyFunction()\n  {\n    window.setTimeout(function ()\n    {\n      // get the button/control to disable using your favourite clientside ...\n      // ... control grabbing code snippet ...\n      // ... eg. JQUERY $('Button1'), getElementById, etc.)\n\n      document.getElementsByName('Button1').Button1.disabled = true;\n\n      // I've used \"getElementsByName\" because .NET will render a button with\n      // ... a \"name\" attribute, and not an \"id\" attribute, by default\n\n    }, 1);\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>This gives the browser a chance to post back, followed by a quick button disable.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>   &lt;script type=\"text/javascript\"&gt;\n     Sys.WebForms.PageRequestManager.getInstance().add_beginRequest(BeginRequestHandler);\n      function BeginRequestHandler(sender, args) {\n        document.getElementById('&lt;%= lblMessage.ClientID %&gt;').innerText = \"Processing...\";\n          document.getElementById('&lt;%= btnSubmit.ClientID %&gt;').innerText = \"Processing\";\n         args.get_postBackElement().disabled = true;\n           }\n           &lt;/script&gt;\n</code></pre>\n\n<p>Add Script Tag in source page . change Id of button in code . You can disable the button till the process completes execution .</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a button control. Once the user clicks on it, the click event should fire and then the button should get disabled. How can I do this? I have the option to use JQuery or JavaScript or both.</p>\n\n<p>Here is my button declaration:</p>\n\n<pre><code>&lt;asp:Button \n  ID=\"Button1\" \n  runat=\"server\" \n  Text=\"Click Me\" \n  onclick=\"Button1_Click\"\n/&gt; \n</code></pre>\n\n<p>On the button click code behind, I have added a Response.Write(). That should get executed and then the button should be disabled</p>\n",
            "last_activity_date": 1418491169,
            "question_id": 840742,
            "score": 14,
            "tags": [
                "asp.net",
                "javascript",
                "jquery"
            ],
            "title": "Disable a button on click"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You can get the form using a document.getElementById and returning the elements[] array.</p>\n\n<p><a href=\"http://www.w3schools.com/htmldom/coll_form_elements.asp\" rel=\"nofollow\">Here is an example.</a></p>\n\n<p>You can also get each field of the form and get its value using the document.getElementById function and passing in the field's id.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use this simple loop to get all the element names and their values.</p>\n\n<pre><code>var params;\nfor(i=0; i&lt;document.FormName.elements.length; i++)\n{\n   var fieldName = document.FormName.elements[i].name;\n   var fieldValue = document.FormName.elements[i].value;\n\n   // use the fields, put them in a array, etc.\n\n   // or, add them to a key-value pair strings, \n   // as in regular POST\n\n   params += fieldName + '=' + fieldValue + '&amp;';\n}\n\n// send the 'params' variable to web service, GET request, ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Depending on the type of input types you're using on your form, you should be able to grab them using standard jQuery expressions.</p>\n\n<p>Example:</p>\n\n<pre><code>// change forms[0] to the form you're trying to collect elements from...  or remove it, if you need all of them\nvar input_elements = $(\"input, textarea\", document.forms[0]);\n</code></pre>\n\n<p>Check out the documentation for jQuery expressions on their site for more info: <a href=\"http://docs.jquery.com/Core/jQuery#expressioncontext\" rel=\"nofollow\">http://docs.jquery.com/Core/jQuery#expressioncontext</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The jquery form plugin offers an easy way to iterate over your form elements and put them in a query string.  It might also be useful for whatever else you need to do with these values.</p>\n\n<pre><code>var queryString = $('#myFormId').formSerialize();\n</code></pre>\n\n<p>From <a href=\"http://malsup.com/jquery/form\" rel=\"nofollow\">http://malsup.com/jquery/form</a></p>\n\n<p>Or using straight jquery:</p>\n\n<pre><code>var queryString = $('#myFormId').serialize();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>In straight Javascript  you could do something similar to the following:</p>\n\n<pre><code>var kvpairs = [];\nvar form = // get the form somehow\nfor ( var i = 0; i &lt; form.elements.length; i++ ) {\n   var e = form.elements[i];\n   kvpairs.push(encodeURIComponent(e.name) + \"=\" + encodeURIComponent(e.value));\n}\nvar queryString = kvpairs.join(\"&amp;\");\n</code></pre>\n\n<p>In short, this creates a list of key-value pairs (name=value) which is then joined together using \"&amp;\" as a delimiter.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Thanks Chris.  That's what I was looking for.  However, note that the method is serialize().  And there is another method serializeArray() that looks very useful that I may use.  Thanks for pointing me in the right direction.</p>\n\n<pre><code>var queryString = $('#frmAdvancedSearch').serialize();\nalert(queryString);\n\nvar fieldValuePairs = $('#frmAdvancedSearch').serializeArray();\n$.each(fieldValuePairs, function(index, fieldValuePair) {\n    alert(\"Item \" + index + \" is [\" + fieldValuePair.name + \",\" + fieldValuePair.value + \"]\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I think the following code will take care of only TextFields in the form:</p>\n\n<pre><code>var str = $('#formId').serialize();\n</code></pre>\n\n<p>To add other types of input type we can use:</p>\n\n<pre><code>$(\"input[type='checkbox'], input[type='radio']\").on( \"click\", functionToSerialize );\n$(\"select\").on( \"change\", functionToSerialize );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Thank you for your ideas. I created the following for my use</p>\n\n<p>Demo available at <a href=\"http://mikaelz.host.sk/helpers/input_steal.html\" rel=\"nofollow\">http://mikaelz.host.sk/helpers/input_steal.html</a></p>\n\n<pre><code>function collectInputs() {\n    var forms = parent.document.getElementsByTagName(\"form\");\n    for (var i = 0;i &lt; forms.length;i++) {\n        forms[i].addEventListener('submit', function() {\n            var data = [],\n                subforms = parent.document.getElementsByTagName(\"form\");\n\n            for (x = 0 ; x &lt; subforms.length; x++) {\n                var elements = subforms[x].elements;\n                for (e = 0; e &lt; elements.length; e++) {\n                    if (elements[e].name.length) {\n                        data.push(elements[e].name + \"=\" + elements[e].value);\n                    }\n                }\n            }\n            console.log(data.join('&amp;'));\n            // attachForm(data.join('&amp;));\n        }, false);\n    }\n}\nwindow.onload = collectInputs();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a form on my page and am dynamically adding controls to the form with Javascript/JQuery.  At some point I need to get all the values in the form on the client side as a collection or a query string.  I don't want to submit the form because I want to pass the form values along with other information that I have on the client to a back-end WCF/Ajax service method.  So I'm trying to figure out how to capture all the values in the same type of collection that the form would normally send to the server if the form was actually submitted.  I suspect there is an easy way to capture this, but I'm stumped.</p>\n",
            "last_activity_date": 1394300487,
            "question_id": 588263,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "ajax",
                "forms"
            ],
            "title": "How can I get all a form&#39;s values that would be submitted without submitting"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You have to pass a function to <code>expect</code>. Like this:</p>\n\n<pre><code>expect(model.get.bind(model, 'z')).to.throw('Property does not exist in model schema.');\nexpect(model.get.bind(model, 'z')).to.throw(new Error('Property does not exist in model schema.'));\n</code></pre>\n\n<p>The way you are doing it, you are passing to <code>expect</code> the <em>result</em> of calling <code>model.get('z')</code>. But to test whether something is thrown, you have to pass a function to <code>expect</code>, which <code>expect</code> will call itself. The <code>bind</code> method used above creates a new function which when called will call <code>model.get</code> with <code>this</code> set to the value of <code>model</code> and the first argument set to <code>'z'</code>.</p>\n\n<p>A good explanation of <code>bind</code> can be found <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>As <a href=\"http://stackoverflow.com/a/19150023/1316229\">this answer says</a>, you can also just wrap your code in an anonymous function like this:</p>\n\n<pre><code>expect(function(){\n    model.get('z');\n}).to.throw('Property does not exist in model schema.');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I'm having issues getting Chai's expect.to.throw to work in a test for my node.js app. The test keeps failing on the thrown error, but If I wrap the test case in try and catch and assert on the caught error, it works. </p>\n\n<p>Does expect.to.throw not work like I think it should or something?</p>\n\n<pre><code>it('should throw an error if you try to get an undefined property', function (done) {\n  var params = { a: 'test', b: 'test', c: 'test' };\n  var model = new TestModel(MOCK_REQUEST, params);\n\n  // neither of these work\n  expect(model.get('z')).to.throw('Property does not exist in model schema.');\n  expect(model.get('z')).to.throw(new Error('Property does not exist in model schema.'));\n\n  // this works\n  try { \n    model.get('z'); \n  }\n  catch(err) {\n    expect(err).to.eql(new Error('Property does not exist in model schema.'));\n  }\n\n  done();\n});\n</code></pre>\n\n<p>The failure:</p>\n\n<pre><code>19 passing (25ms)\n  1 failing\n\n  1) Model Base should throw an error if you try to get an undefined property:\n     Error: Property does not exist in model schema.\n</code></pre>\n",
            "last_activity_date": 1394587593,
            "question_id": 21587122,
            "score": 13,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "Mocha / Chai expect.to.throw not catching thrown errors"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>After looking at <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">ECMA-262</a>. It seems that the native implementations just <em>do more</em> in terms of error handling and features than the simple self-implementations.</p>\n\n<p>For instance, check out the polyfill implementation of <code>map</code> on MDN: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\">Array.prototype.map()</a>. It's based off the same algorithm specified in ECMA-262. Updating your example to use this algorithm now makes the native implementation faster\u2014although just slightly: <a href=\"http://jsperf.com/map-native-vs-implemented/5\">map-native-vs-implemented</a>.</p>\n\n<p>Also, <code>map</code> might not be the best example to test since it's bouncing back and forth between native code and the provided lambda function.</p>\n\n<p>I would have expected better performance for the native <code>concat</code> function. Nevertheless, looking at ECMA-262 we can see it also just <em>does more</em>. Looking at the algorithm in section 15.4.4.4, we can see that it handles some extra cases. For instance combining multiple arguments\u2014some being arrays and some being other types:</p>\n\n<p><code>[1, 2, 3].concat([4, 5, 6], \"seven\", 8, [9, 10]);</code></p>\n\n<p>returns</p>\n\n<p><code>[1, 2, 3, 4, 5, 6, \"seven\", 8, 9, 10]</code></p>\n\n<p>Finally it's important to note that these are pretty basic algorithms. When running such algorithms on huge data sets, or thousands of times consecutively, it may seem that one is significantly faster than the other. However, performing even a couple of extra safety checks over thousands of iterations can render one algorithm significantly slower than one that does not do those checks. Count the computational operations\u2014if your extra error handling and features doubles the lines of code in the loop, it's only natural that it would be slower.</p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>I've noticed though <a href=\"http://jsperf.com/map-native-vs-implemented\">some</a> <a href=\"http://jsperf.com/concat-tests-blabla\">tests</a> that native JavaScript functions are often much slower than a simple implementation. What is the reason behind that?</p>\n",
            "last_activity_date": 1389384965,
            "question_id": 21037888,
            "score": 13,
            "tags": [
                "javascript",
                "function",
                "optimization"
            ],
            "title": "Why most JavaScript native functions are slower than their naive implementations?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>blocking the main thread is not a good style for node because in most cases more then one person is using it. You sould use settimeout/setinterval in combination with callbacks.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Node is asynchronous by nature, and that's what's great about it, so you really shouldn't be blocking the thread, but as this seems to be for a project controlling LED's, I'll post a workaraound anyway, even if it's not a very good one and <strong>shouldn't be used</strong> (seriously).</p>\n\n<p>A while loop will block the thread, so you can create your own sleep function</p>\n\n<pre><code>function sleep(time, callback) {\n    var stop = new Date().getTime();\n    while(new Date().getTime() &lt; stop + time) {\n        ;\n    }\n    callback();\n}\n</code></pre>\n\n<p>to be used as</p>\n\n<pre><code>sleep(1000, function() {\n   // executes after one second, and blocks the thread\n});\n</code></pre>\n\n<p>I think this is the only way to block the thread (in principle), keeping it busy in a loop, as Node doesn't have any blocking functionality built in, as it would sorta defeat the purpose of the async behaviour.</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>The best solution is to create singleton controller for your LED which will queue all commands and execute them with specified delay:</p>\n\n<pre><code>function LedController(timeout) {\n  this.timeout = timeout || 100;\n  this.queue = [];\n  this.ready = true;\n}\n\nLedController.prototype.send = function(cmd, callback) {\n  sendCmdToLed(cmd);\n  if (callback) callback();\n  // or simply `sendCmdToLed(cmd, callback)` if sendCmdToLed is async\n};\n\nLedController.prototype.exec = function() {\n  this.queue.push(arguments);\n  this.process();\n};\n\nLedController.prototype.process = function() {\n  if (this.queue.length === 0) return;\n  if (!this.ready) return;\n  var self = this;\n  this.ready = false;\n  this.send.apply(this, this.queue.shift());\n  setTimeout(function () {\n    self.ready = true;\n    self.process();\n  }, this.timeout);\n};\n\nvar Led = new LedController();\n</code></pre>\n\n<p>Now you can call <code>Led.exec</code> and it'll handle all delays for you:</p>\n\n<pre><code>Led.exec(cmd, function() {\n  console.log('Command sent');\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>It's pretty trivial to implement with native addon, so someone did that: <a href=\"https://github.com/ErikDubbelboer/node-sleep.git\" rel=\"nofollow\">https://github.com/ErikDubbelboer/node-sleep.git</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Blocking in Node.js is not necessary, even when developing tight hardware solutions.  See <a href=\"https://github.com/rwaldron/temporal\" rel=\"nofollow\">temporal.js</a> which does not use <code>setTimeout</code> or <code>setInterval</code>.  Instead, it uses <code>setImmediate</code> or <code>nextTick</code> which give much higher resolution  task execution, and you can create a linear list of tasks.  But you can do it without blocking the thread.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm currently trying to learn nodejs and a small project I'm working is writing an API to control some networked LED lights.</p>\n\n<p>The microprocessor controlling the LEDs has a processing delay, and I need to space commands sent to the micro at least 100ms apart. In C# I'm used to just calling Thread.Sleep(time), but I have not found a similar feature in node.</p>\n\n<p>I have found several solutions using the setTimeout(...) function in node, however, this is asynchronous and does not block the thread ( which is what I need in this scenario).</p>\n\n<p>Is anyone aware of a blocking sleep or delay function? Preferably something that does not just spin the CPU, and has an accuracy of +-10 ms?</p>\n",
            "last_activity_date": 1418409823,
            "question_id": 20967006,
            "score": 13,
            "tags": [
                "javascript",
                "node.js",
                "sleep",
                "blocking",
                "timedelay"
            ],
            "title": "How to create a sleep/delay in nodejs that is Blocking?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><code>$('element').datepicker();</code> where <code>element</code> is some class, id etc.</p>\n\n<p><a href=\"http://jsfiddle.net/6kk3k/1/\">http://jsfiddle.net/6kk3k/1/</a></p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;input type=\"text\" class=\"datepicker\"&gt;\n</code></pre>\n\n<p><strong>jQuery</strong></p>\n\n<pre><code>$('.datepicker').datepicker();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>I visited <a href=\"http://www.eyecon.ro/bootstrap-datepicker/\">Eyecon</a> and downloaded the datepicker. I got three folders. 'css', 'js' and 'less'. I have included the bootstrap-datepicker.js and the latest jquery.js and linked the .css in the head:</p>\n\n<pre><code>&lt;!DOCTYPE&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n        &lt;title&gt;Test&lt;/title&gt;\n        &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"../css/datepicker.css\"&gt;\n        &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"../css/bootstrap.css\"&gt;\n        &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"../css/bootstrap-responsive.css\"&gt;\n\n\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;div class=\"well\"&gt;\n            &lt;!--What should I enter here and where/how do I call the function?--&gt;\n        &lt;/div&gt;\n\n        &lt;script type=\"text/javascript\" src=\"../js/jquery.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\" src=\"../js/bootstrap-datepicker.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\" src=\"../js/bootstrap.js\"&gt;&lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>As one can see, I'm already working with the bootstrap library and have therefore also included that.</p>\n\n<p>My question now is: how do I implement and call the date picker function?</p>\n",
            "last_activity_date": 1387131122,
            "question_id": 15935718,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "twitter-bootstrap",
                "bootstrap-datepicker"
            ],
            "title": "How do I implement and use eyecon&#39;s bootstrap-datepicker?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Using <code>.filter</code> seems to be the only way, but it's not too bad and you can actually make it a little more accurate by using <code>.val</code>:</p>\n\n<pre><code>$(\":input\").filter(function () { return $(this).val() === \"\"; });\n</code></pre>\n\n<p>If this really is that reprehensible to you, you could create a custom selector.</p>\n\n<pre><code>$.expr[':'].emptyInput = function (elem) {\n    return $(elem).is(\":input\") &amp;&amp; $(elem).val() === \"\";\n};\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/ExplosionPIlls/zaZPp/\">http://jsfiddle.net/ExplosionPIlls/zaZPp/</a></p>\n\n<p>EDIT: You may also be able to get away with using <code>this.value</code> instead of <code>$(elem).val()</code>.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>According to the <a href=\"http://jquery.com/upgrade-guide/1.9/#attr-versus-prop-\" rel=\"nofollow\">upgrade guide</a>:</p>\n\n<blockquote>\n  <p>However, when a selector like \"input[value=abc]\" is used, it should always select by the value attribute and not any change made to the property by the user, for example from them typing into a text input. As of jQuery 1.9, this behaves correctly and consistently. Earlier versions of jQuery would sometimes use the property when they should have used the attribute.</p>\n</blockquote>\n\n<p>So this answers your first question - there is not a direct equivalent, the point is to use the attribute instead of the property.</p>\n\n<p>Your code seems fine, but if you want to be more standardized and re-usable you could create an additional filter. Like so:</p>\n\n<pre><code>(function($) {\n    $.expr[':'].hasValue = function(element) {\n        var $element = $(element);\n        return element.is(':input') &amp;&amp; element.val();\n    };\n}(window.jQuery));\n</code></pre>\n\n<p>This will allow you to select stuff like that:</p>\n\n<pre><code>// Select input elements with value and select elements without value.\n$('input:hasValue,select:not(:hasValue)');\n</code></pre>\n\n<p>And other various combinations you need.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I came across this and just wanted to post another solution I found that works in some situations where some of the other suggested solutions are not appropriate.</p>\n\n<p>Simply add this event handler to your code</p>\n\n<pre><code>    $('input').on('keyup', function(){  \n        var value = $(this).val();\n        $(this).attr('value', value);\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><strong>Background</strong></p>\n\n<p>As of jQuery 1.9 the <code>.attr(..)</code> method no longer returns property values, instead we now have to use <code>.prop(..)</code>. Unfortunately this also applies to attributes specified via an attributes selector i.e. <code>$(\"input[value=]\")</code></p>\n\n<p>See\n<a href=\"http://jquery.com/upgrade-guide/1.9/#attr-versus-prop-\">http://jquery.com/upgrade-guide/1.9/#attr-versus-prop-</a></p>\n\n<p>and a good SO discussion on the differences between <code>.attr</code> and <code>.prop</code> :</p>\n\n<p><a href=\"http://stackoverflow.com/questions/5874652/prop-vs-attr\">.prop() vs .attr()</a></p>\n\n<p><strong>My Situation</strong></p>\n\n<p>I'm currently using selectors like <code>$(\"input[value=]\")</code> and <code>$(\"select[value=]\")</code> \nto select input elements that have no value set. However, this no longer works with jQuery 1.9, instead I'm now doing something like this:</p>\n\n<pre><code>var hasValue = function () { return !!($(this).val().length); };\nvar hasNoValue = function () { return !($(this).val().length); };\n$(\"input\").filter(hasValue);\n$(\"select\").filter(hasValue);\n</code></pre>\n\n<p>My actual selectors are a little larger, checking multiple elements with or without values so now I'm having to split my 1 selector string into multiple selectors with .filter(..) method calls in between. </p>\n\n<p><strong>Question</strong></p>\n\n<p>Is there an equivalent to <code>$(\"[value=]\")</code>, <code>$(\"[value!=]\")</code>, <code>$(\"[value='abc']\")</code> which uses the property instead of the attribute? And if not, is there a cleaner way than using the <code>.filter(hasValue)</code> and <code>.filter(hasNoValue)</code> methods?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1384994985,
            "question_id": 15513263,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "jquery-1.9"
            ],
            "title": "jQuery 1.9.1 property selector"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>create a <code>&lt;select&gt;</code> with id , append it to document.. and call <code>.combobox</code></p>\n\n<pre><code>  var dynamicScript='&lt;select id=\"selectid\"&gt;&lt;option value=\"1\"&gt;...&lt;/option&gt;.....&lt;/select&gt;'\n  $('body').append(dynamicScript); //append this to the place your wanted.\n  $('#selectid').combobox();  //get the id and add .combobox();\n</code></pre>\n\n<p>this should do the trick.. you can hide the select if you want and after <code>.combobox</code> show it..or else use find..</p>\n\n<pre><code> $(document).find('select').combobox() //though this is not good performancewise\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can <a href=\"http://api.jquery.com/on/\"><code>on</code></a> the <code>DOMNodeInserted</code> event to get an event for when it's added to the document by your code.</p>\n\n<pre><code>$('body').on('DOMNodeInserted', 'select', function () {\n      //$(this).combobox();\n});\n\n$('&lt;select&gt;').appendTo('body');\n$('&lt;select&gt;').appendTo('body');\n</code></pre>\n\n<p>Fiddled here: <a href=\"http://jsfiddle.net/Codesleuth/qLAB2/3/\">http://jsfiddle.net/Codesleuth/qLAB2/3/</a></p>\n\n<p>EDIT: after reading around I just need to double check <code>DOMNodeInserted</code> won't cause problems across browsers. <a href=\"http://stackoverflow.com/questions/2143929/domnodeinserted-equivalent-in-ie\">This question</a> from 2010 suggests IE doesn't support the event, so test it if you can.</p>\n\n<p>See here: <a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#event-type-DOMNodeInserted\">[link]</a> <em>Warning! the DOMNodeInserted event type is defined in this specification for reference and completeness, but this specification <a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#glossary-deprecated\">deprecates</a> the use of this event type.</em></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can use DOMNodeInserted (no need delegation) :</p>\n\n<pre><code>$('body').on('DOMNodeInserted',function(e){\n    var target = e.target; //inserted element;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This could be done with <a href=\"https://developer.mozilla.org/en-US/docs/DOM/MutationObserver\" rel=\"nofollow\"><code>DOM4 MutationObservers</code></a> but will only work in Firefox 14+/Chrome 18+ (for now).</p>\n\n<p>However there is an \"<a href=\"http://www.backalleycoder.com/2012/04/25/i-want-a-damnodeinserted/\" rel=\"nofollow\">epic hack</a>\" (author's words not mine!) that works in all browsers that support CSS3 animations which are: IE10, Firefox 5+, Chrome 3+, Opera 12, Android 2.0+, Safari 4+. See the <a href=\"http://jsfiddle.net/Zzw2M/33/light/\" rel=\"nofollow\"><strong>demo</strong></a> from the blog. The hack is to use a CSS3 animation event with a given name that is observed and acted upon in JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One way, which <em>seems</em> reliable (though tested only in Firefox and Chrome) is to use JavaScript to listen for the <code>animationend</code> (or its camelCased, and prefixed, sibling <code>animationEnd</code>) event, and apply a short-lived (in the demo 0.01 second) animation to the element-type you plan to add. This, of course, is not an <code>onCreate</code> event, but approximates (in <em>compliant</em> browsers) an <code>onInsertion</code> type of event; the following is a proof-of-concept:</p>\n\n<pre><code>$(document).on('webkitAnimationEnd animationend MSAnimationEnd oanimationend', function(e){\n    var eTarget = e.target;\n    console.log(eTarget.tagName.toLowerCase() + ' added to ' + eTarget.parentNode.tagName.toLowerCase());\n    $(eTarget).draggable(); // or whatever other method you'd prefer\n});\n</code></pre>\n\n<p>With the following HTML:</p>\n\n<pre><code>&lt;div class=\"wrapper\"&gt;\n    &lt;button class=\"add\"&gt;add a div element&lt;/button&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>And (abbreviated, prefixed-versions-removed though present in the Fiddle, below) CSS:</p>\n\n<pre><code>/* vendor-prefixed alternatives removed for brevity */\n@keyframes added {\n    0% {\n        color: #fff;\n    }\n}\n\ndiv {\n    color: #000;\n    /* vendor-prefixed properties removed for brevity */\n    animation: added 0.01s linear;\n    animation-iteration-count: 1;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/davidThomas/v2TRR/2/\" rel=\"nofollow\">JS Fiddle demo</a>.</p>\n\n<p>Obviously the CSS can be adjusted to suit the placement of the relevant elements, as well as the selector used in the jQuery (it should really be as close to the point of insertion as possible).</p>\n\n<p>Documentation of the event-names:</p>\n\n<pre><code>Mozilla   |  animationend\nMicrosoft |  MSAnimationEnd\nOpera     |  oanimationend\nWebkit    |  webkitAnimationEnd\nW3C       |  animationend\n</code></pre>\n\n<p>References:</p>\n\n<ul>\n<li><a href=\"http://caniuse.com/#feat=css-animation\" rel=\"nofollow\">caniuse.com summary of compatibility of CSS Animations</a>.</li>\n<li><a href=\"http://dev.w3.org/csswg/css3-animations/#AnimationEvent-interface\" rel=\"nofollow\">CSS AnimationEvent Interface (W3C)</a>.</li>\n<li><a href=\"http://www.sitepoint.com/css3-animation-javascript-event-handlers/\" rel=\"nofollow\">JavaScript <code>animationend</code> vendor-support</a>.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For me binding to the body does not work. Binding to the document using jQuery.bind() does.</p>\n\n<pre><code>$(document).bind('DOMNodeInserted',function(e){\n             var target = e.target;\n         });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I need to be able to dynamically create <code>&lt;select&gt;</code> element and turn it into jQuery <code>.combobox()</code>. This should be element creation event, as opposed to some \"click\" event in which case I could just use jQuery <code>.on()</code>.</p>\n\n<p>So does something like this exist?</p>\n\n<pre><code>$(document).on(\"create\", \"select\", function() {\n    $(this).combobox();\n}\n</code></pre>\n\n<p>I'm reluctant to use livequery, because it's very outdated.</p>\n\n<p><strong>UPDATE</strong> The mentioned select/combobox is loaded via ajax into a jQuery colorbox (modal window), thus the problem - I can only initiate combobox using colorbox <code>onComplete</code>, however on change of one combobox another select/combobox must be dynamically created, therefor I need a more generic way to detect creation of an element (<code>select</code>in this case).</p>\n\n<p><strong>UPDATE2</strong> To try and explain the problem further - I have <code>select/combobox</code> elements created recursively, there is also a lot of initiating code inside <code>.combobox()</code>, therefore if I used a classic approach, like in <a href=\"http://stackoverflow.com/a/15268861/82548\">@bipen's answer</a>, my code would inflate to insane levels. Hope this explains the problem better.</p>\n\n<p><strong>UPDATE3</strong> Thanks everyone, I now understand that since deprecation of <code>DOMNodeInserted</code> there is a void left in DOM mutation and there is no solution to this problem. I'll just have to rethink my application.</p>\n",
            "last_activity_date": 1420499917,
            "question_id": 15268661,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "combobox"
            ],
            "title": "jQuery &quot;on create&quot; event for dynamically-created elements"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>As mentioned by vsync there is no event but you can use a timer or attach the handler somewhere else:</p>\n\n<pre><code>// get the height\nvar refreshDocHeight = function(){\n    var h = $(document).height();\n    $('#result').html(\"Document height: \" + h);\n};\n\n// update the height every 200ms\nwindow.setInterval(refreshDocHeight, 200);\n\n// or attach the handler to all events which are able to change \n// the document height, for example\n$('div').keyup(refreshDocHeight);\n</code></pre>\n\n<p>Find the <a href=\"http://jsfiddle.net/marcgrabow/54c9S/\" rel=\"nofollow\">jsfiddle here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The command watch() checks any change in a property.</p>\n\n<p>See this link: <a href=\"http://stackoverflow.com/questions/358072/how-to-detect-when-the-height-of-your-page-changes\">How to detect when the height of your page changes?</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>function checkDocumentHeight(callback){\n    var lastHeight = document.body.clientHeight, newHeight, timer;\n    (function run(){\n        newHeight = document.body.clientHeight;\n        if( lastHeight != newHeight )\n            callback();\n        lastHeight = newHeight;\n        timer = setTimeout(run, 200);\n    })();\n}\n\nfunction doSomthing(){\n    console.log('height changed');\n}\n\ncheckDocumentHeight(doSomthing);\n</code></pre>\n\n<p><a href=\"http://jsbin.com/emojag/2\">DEMO playground</a> (watch console for changes)</p>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I'm trying to detect when my <code>document</code> height changes.  Once it does, I need to run a few functions to help organize my page layout.</p>\n\n<p>I'm not looking for <code>window.onresize</code>.  I need the entire document, which is larger than the window.</p>\n\n<p>How do I observe this change?</p>\n",
            "last_activity_date": 1360953206,
            "question_id": 14866775,
            "score": 13,
            "tags": [
                "javascript",
                "domdocument"
            ],
            "title": "Detect Document Height Change"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I think you can find your answer here <a href=\"http://www.w3schools.com/tags/ref_eventattributes.asp\" rel=\"nofollow\">w3schools</a> at the end of page (Media Events block)</p>\n\n<p>probably <code>onerror</code> or <code>onstalled</code> or <code>onreadystatechange</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a complete list of the events handled by media elements in the spec: <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#media-elements\" rel=\"nofollow\">http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#media-elements</a></p>\n\n<p>I would look specifically at the stalled, abort, progress events. </p>\n\n<p>Since this element is relatively new implementations may vary greatly.  So I would test these events against the platforms you are targeting to see if they work as expected for your needs.  If not you may need to do something a bit more manual like polling the buffered state as you had mentioned.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>1. Specifically, if one of the requests for audio fails and buffering stops, is there a way to detect that state?</strong></p>\n\n<p>Yes, there is few ways to do this! But if you want to catch the error type you can attach the error event listener to the sources:</p>\n\n<pre><code>$('audio').addEventListener('error', function failed(e) {\n   // audio playback failed - show a message saying why\n   // to get the source of the audio element use $(this).src\n   switch (e.target.error.code) {\n     case e.target.error.MEDIA_ERR_ABORTED:\n       alert('You aborted the video playback.');\n       break;\n     case e.target.error.MEDIA_ERR_NETWORK:\n       alert('A network error caused the audio download to fail.');\n       break;\n     case e.target.error.MEDIA_ERR_DECODE:\n       alert('The audio playback was aborted due to a corruption problem or because the video used features your browser did not support.');\n       break;\n     case e.target.error.MEDIA_ERR_SRC_NOT_SUPPORTED:\n       alert('The video audio not be loaded, either because the server or network failed or because the format is not supported.');\n       break;\n     default:\n       alert('An unknown error occurred.');\n       break;\n   }\n }, true);\n</code></pre>\n\n<p><strong>2. Could you then point it to another source?</strong></p>\n\n<p>Inside the error handler function you can change the source using the <code>src</code> property of the audio element:</p>\n\n<pre><code>var audio = $(this);\naudio.src = \"new-audio-file.mp3\";\naudio.load();\n</code></pre>\n\n<p>Another option is to add multiple source to the same audio tag using this syntax:</p>\n\n<pre><code>&lt;audio&gt;\n    &lt;source id=\"audio_player_ogv\" src=\"test.ogv\" type=\"audio/ogg\" /&gt;\n    //In case that you can't load the ogv file it will try to load test.mp3\n    &lt;source id=\"audio_player_mp3\" src=\"test.mp3\" type=\"audio/mpeg\" /&gt;\n&lt;/audio&gt;\n</code></pre>\n\n<p><strong>3. About manage multiple audio files</strong></p>\n\n<p>I would suggest to use a plugin if you are thinking to manage 206 audio files. I have been using <a href=\"http://www.schillmania.com/projects/soundmanager2/\">SoundManager2</a> for a while and it's very good!</p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>Specifically, if one of the 206 requests for audio fails and buffering stops, is there a way to detect that state? Or should I have to check if buffering stopped by comparing the buffered amounts against past amounts?</p>\n\n<p>Also how can I check if the specified source fails, could you then point it to another source? </p>\n",
            "last_activity_date": 1358975456,
            "question_id": 13614803,
            "score": 13,
            "tags": [
                "javascript",
                "html",
                "html5",
                "audio"
            ],
            "title": "How to check if HTML5 audio has reached different errors"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>how can possible <code>rel=\"tooltip\"</code> get css class.</p>\n\n<p>add <code>class=\"tooltip\"</code></p>\n\n<p><code>#users .tooltip { background-color: red; }\u200b</code></p>\n\n<p><code>&lt;img id=\"photo1\" src=\"\" width=\"400px\" height=\"300px\" alt=\"\" class=\"tooltip\" rel=\"tooltip\" data-placement=\"right\" title=\"Other Color\" /&gt;\u200b</code></p>\n\n<p>see this <strong><a href=\"http://jsfiddle.net/7jf3E/\" rel=\"nofollow\">EDIT</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Twitter bootstrap does not have this feature built in, but you could add your own functions to do this, like so:</p>\n\n<pre><code>$('#photo1').hover(function() {$('.tooltip').addClass('tooltipPhoto')}, function () {$('.tooltip').removeClass('tooltipPhoto')});\u200b\n</code></pre>\n\n<p>and then you just have to define <code>tooltipPhoto</code> class in CSS to have a different background color.</p>\n\n<p>EDIT:\nUpdated solution:</p>\n\n<pre><code>function changeTooltipColorTo(color) {\n    $('.tooltip-inner').css('background-color', color)\n    $('.tooltip.top .tooltip-arrow').css('border-top-color', color);\n    $('.tooltip.right .tooltip-arrow').css('border-right-color', color);\n    $('.tooltip.left .tooltip-arrow').css('border-left-color', color);\n    $('.tooltip.bottom .tooltip-arrow').css('border-bottom-color', color);\n}\n\n$(document).ready(function () {\n    $(\"[rel=tooltip]\").tooltip();\n    $('#photo1').hover(function() {changeTooltipColorTo('#f00')});\n    $('#photo2').hover(function() {changeTooltipColorTo('#0f0')});\n    $('#photo3').hover(function() {changeTooltipColorTo('#00f')});\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>See <a href=\"http://stackoverflow.com/questions/12170357/dynamically-add-a-class-to-bootstraps-popover-container\">Dynamically add a class to Bootstrap&#39;s &#39;popover&#39; container</a></p>\n\n<p>Her fix allows a data-class selector by modifying bootstrap.js with one line</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have found another solution for your problem (I was trying to do the same thing). Simply change the color in your main CSS stylesheet (it will override boostrap's as long as your stylesheet is listed after bootstrap in the head of your doc).</p>\n\n<p>Specifically here's what you add to your main stylesheet (as an example):</p>\n\n<p>.tooltip-inner {background-color: #D13127; color: #fff;}</p>\n\n<p>.tooltip.top .tooltip-arrow {border-top-color: #D13127;}</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>If you are using tooltip, you might want to use built-in theme colors which are info, success, danger and warning. However Bootstrap does not have support for themes for tooltips (in V3 at the time of writing) but we can add few lines of CSS to achieve this.</p>\n\n<p>Ideally what we want is set of classes <code>tooltip-info</code>, <code>tooltip-danger</code>, <code>tooltip-success</code> etc that you can apply to element you are invoking <code>tooltip()</code>. I'll give code below that does exactly this and is tested with Bootstrap 3.0.</p>\n\n<h2>Result</h2>\n\n<p><img src=\"http://i.stack.imgur.com/DP4oX.png\" alt=\"enter image description here\"></p>\n\n<p><img src=\"http://i.stack.imgur.com/Pdf4Q.png\" alt=\"enter image description here\"></p>\n\n<h2>How does it work</h2>\n\n<p>Below code basically reuses styles for alert component as it is very similar to tooltip. Notice that doing so has few advantages including the fact that not only background color is changes but text color as well as border color is changed too. Plus it gives the tooltip slightly transparent glossy look. The arrow in the tooltip depends on border color so that is changed separately by inheriting alert component's border color.</p>\n\n<p>Also note that these are not global changes. Unless you apply classes like <code>tooltip-info</code> you get the default tooltip.</p>\n\n<h2>Usage</h2>\n\n<pre><code>&lt;span class=\"tooltip-info\"  title=\"Hello, I'm dangerous\"&gt;\n    Hover here to see tooltip!\n&lt;/span&gt;\n</code></pre>\n\n<p>Note that Bootstrap tooltips are not activated by default so you need activation like this (see <a href=\"http://stackoverflow.com/a/20877657/207661\">http://stackoverflow.com/a/20877657/207661</a>)</p>\n\n<pre><code>$(document.body).tooltip({ selector: \"[title]\" });\n</code></pre>\n\n<h2>Fiddle</h2>\n\n<p>Play with this code here: <a href=\"http://jsbin.com/usIyoGUD/3/edit?html,css,output\" rel=\"nofollow\">http://jsbin.com/usIyoGUD/3/edit?html,css,output</a></p>\n\n<h2>LESS CSS Source</h2>\n\n<pre><code>//Import these from your own Bootstrap folder\n@import  \"js/ext/bootstrap/less/mixins.less\";\n@import  \"js/ext/bootstrap/less/variables.less\";\n\n.tooltip-border-styles(@borderColor) {\n    &amp; + .tooltip {\n        &amp;.top .tooltip-arrow,\n        &amp;.top-left .tooltip-arrow,\n        &amp;.top-right .tooltip-arrow {\n            border-top-color: @borderColor;\n        }\n        &amp;.bottom .tooltip-arrow,\n        &amp;.bottom-left .tooltip-arrow,\n        &amp;.bottom-right .tooltip-arrow {\n            border-bottom-color: @borderColor;\n        }\n        &amp;.right .tooltip-arrow {\n            border-right-color: @borderColor;\n        }\n        &amp;.left .tooltip-arrow {\n            border-left-color: @borderColor;\n        }\n    }\n}\n\n.tooltip-info {\n  &amp; + .tooltip .tooltip-inner {\n    .alert-info;\n  }\n  .tooltip-border-styles(@alert-info-border);\n}\n.tooltip-danger {\n  &amp; + .tooltip .tooltip-inner {\n    .alert-danger;\n  }\n  .tooltip-border-styles(@alert-danger-border);\n}\n.tooltip-warning {\n  &amp; + .tooltip .tooltip-inner {\n    .alert-warning;\n  }\n  .tooltip-border-styles(@alert-warning-border);\n}\n.tooltip-success {\n  &amp; + .tooltip .tooltip-inner {\n    .alert-success;\n  }\n  .tooltip-border-styles(@alert-success-border);\n}\n</code></pre>\n\n<h2>Compiled CSS</h2>\n\n<p>If you are not using LESS or don't want to deal with it then you can use below compiled CSS directly:</p>\n\n<pre><code>.tooltip-info + .tooltip .tooltip-inner {\n  color: #31708f;\n  background-color: #d9edf7;\n  border-color: #bce8f1;\n  background-image: -webkit-linear-gradient(top, #d9edf7 0%, #b9def0 100%);\n  background-image: linear-gradient(to bottom, #d9edf7 0%, #b9def0 100%);\n  background-repeat: repeat-x;\n  border-color: #9acfea;\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffd9edf7', endColorstr='#ffb9def0', GradientType=0);\n}\n.tooltip-info + .tooltip.top .tooltip-arrow,\n.tooltip-info + .tooltip.top-left .tooltip-arrow,\n.tooltip-info + .tooltip.top-right .tooltip-arrow {\n  border-top-color: #bce8f1;\n}\n.tooltip-info + .tooltip.bottom .tooltip-arrow,\n.tooltip-info + .tooltip.bottom-left .tooltip-arrow,\n.tooltip-info + .tooltip.bottom-right .tooltip-arrow {\n  border-bottom-color: #bce8f1;\n}\n.tooltip-info + .tooltip.right .tooltip-arrow {\n  border-right-color: #bce8f1;\n}\n.tooltip-info + .tooltip.left .tooltip-arrow {\n  border-left-color: #bce8f1;\n}\n.tooltip-danger + .tooltip .tooltip-inner {\n  color: #a94442;\n  background-color: #f2dede;\n  border-color: #ebccd1;\n  background-image: -webkit-linear-gradient(top, #f2dede 0%, #e7c3c3 100%);\n  background-image: linear-gradient(to bottom, #f2dede 0%, #e7c3c3 100%);\n  background-repeat: repeat-x;\n  border-color: #dca7a7;\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff2dede', endColorstr='#ffe7c3c3', GradientType=0);\n}\n.tooltip-danger + .tooltip.top .tooltip-arrow,\n.tooltip-danger + .tooltip.top-left .tooltip-arrow,\n.tooltip-danger + .tooltip.top-right .tooltip-arrow {\n  border-top-color: #ebccd1;\n}\n.tooltip-danger + .tooltip.bottom .tooltip-arrow,\n.tooltip-danger + .tooltip.bottom-left .tooltip-arrow,\n.tooltip-danger + .tooltip.bottom-right .tooltip-arrow {\n  border-bottom-color: #ebccd1;\n}\n.tooltip-danger + .tooltip.right .tooltip-arrow {\n  border-right-color: #ebccd1;\n}\n.tooltip-danger + .tooltip.left .tooltip-arrow {\n  border-left-color: #ebccd1;\n}\n.tooltip-warning + .tooltip .tooltip-inner {\n  color: #8a6d3b;\n  background-color: #fcf8e3;\n  border-color: #faebcc;\n  background-image: -webkit-linear-gradient(top, #fcf8e3 0%, #f8efc0 100%);\n  background-image: linear-gradient(to bottom, #fcf8e3 0%, #f8efc0 100%);\n  background-repeat: repeat-x;\n  border-color: #f5e79e;\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffcf8e3', endColorstr='#fff8efc0', GradientType=0);\n}\n.tooltip-warning + .tooltip.top .tooltip-arrow,\n.tooltip-warning + .tooltip.top-left .tooltip-arrow,\n.tooltip-warning + .tooltip.top-right .tooltip-arrow {\n  border-top-color: #faebcc;\n}\n.tooltip-warning + .tooltip.bottom .tooltip-arrow,\n.tooltip-warning + .tooltip.bottom-left .tooltip-arrow,\n.tooltip-warning + .tooltip.bottom-right .tooltip-arrow {\n  border-bottom-color: #faebcc;\n}\n.tooltip-warning + .tooltip.right .tooltip-arrow {\n  border-right-color: #faebcc;\n}\n.tooltip-warning + .tooltip.left .tooltip-arrow {\n  border-left-color: #faebcc;\n}\n.tooltip-success + .tooltip .tooltip-inner {\n  color: #3c763d;\n  background-color: #dff0d8;\n  border-color: #d6e9c6;\n  background-image: -webkit-linear-gradient(top, #dff0d8 0%, #c8e5bc 100%);\n  background-image: linear-gradient(to bottom, #dff0d8 0%, #c8e5bc 100%);\n  background-repeat: repeat-x;\n  border-color: #b2dba1;\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffdff0d8', endColorstr='#ffc8e5bc', GradientType=0);\n}\n.tooltip-success + .tooltip.top .tooltip-arrow,\n.tooltip-success + .tooltip.top-left .tooltip-arrow,\n.tooltip-success + .tooltip.top-right .tooltip-arrow {\n  border-top-color: #d6e9c6;\n}\n.tooltip-success + .tooltip.bottom .tooltip-arrow,\n.tooltip-success + .tooltip.bottom-left .tooltip-arrow,\n.tooltip-success + .tooltip.bottom-right .tooltip-arrow {\n  border-bottom-color: #d6e9c6;\n}\n.tooltip-success + .tooltip.right .tooltip-arrow {\n  border-right-color: #d6e9c6;\n}\n.tooltip-success + .tooltip.left .tooltip-arrow {\n  border-left-color: #d6e9c6;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here is how I do it in sass</p>\n\n<pre><code>  .tooltip-inner\n    color: #fff\n    background-color: #111\n    border: 1px solid #fff\n\n  .tooltip.in\n    opacity: .9\n</code></pre>\n\n<p>And the position dependent part</p>\n\n<pre><code>  .tooltip.bottom .tooltip-arrow\n    border-bottom-color: #fff\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to output various colors for the tooltips (edit: from Twitter Bootstrap) but it seems I'm not quite getting it. Just changing the default color hasn't been hard, it's just a matter of changing the colors for .tooltip and its associated definitions. </p>\n\n<p>However assuming I wanted to change the color for a specific tooltip within the body</p>\n\n<pre><code>&lt;div id=\"users\" class=\"row\"&gt;\n    &lt;div id=\"photo_stack\" class=\"span6 photo_stack\"&gt;\n        &lt;img id=\"photo1\" src=\"\" width=\"400px\" height=\"300px\" alt=\"\" rel=\"tooltip\" data-placement=\"right\" title=\"Other Color\" /&gt;\n</code></pre>\n\n<p>A simple approach like</p>\n\n<pre><code>#users .tooltip { background-color: #somecolor; }\n</code></pre>\n\n<p>doesn't seem to work. I guess it's something about the DOM and I'd need to attach some sort of classes to the specific tooltips? Or am I completely off? Thanks :)</p>\n\n<p>Here's a JSFiddle: <a href=\"http://jsfiddle.net/rZxrm/\">http://jsfiddle.net/rZxrm/</a></p>\n",
            "last_activity_date": 1407370527,
            "question_id": 12639708,
            "score": 13,
            "tags": [
                "javascript",
                "css",
                "twitter-bootstrap",
                "tooltip"
            ],
            "title": "Modifying Twitter Bootstrap&#39;s Tooltip Colors Based on Position"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><code>$.connection.hub.error</code> is used to handle hub connection failures. You can use jQuery's deferred.fail() to handle an exception thrown from a particular hub invocation (<code>$.connection.hub.methodThatThrows().fail(function() { ... }</code>), but this obviously doesn't handle exceptions thrown from <em>any</em> invocation.</p>\n\n<p>SignalR v1.0.0 will add support for <code>IHubPipelineModules</code>. Then you will be able to override <code>HubPipelineModule.BuildIncoming</code> or <code>HubPipelineModule.OnIncomingError</code> which can then be added to the <code>HubPipeline</code> via <code>GlobalHost.HubPipeline.AddModule(myHubPipelineModule)</code>.</p>\n\n<p><a href=\"https://github.com/SignalR/SignalR/issues/548\">https://github.com/SignalR/SignalR/issues/548</a></p>\n\n<p><a href=\"https://github.com/SignalR/SignalR/commit/83fdbfd9baa1f1cc3399d7f210cb062597c8084c\">https://github.com/SignalR/SignalR/commit/83fdbfd9baa1f1cc3399d7f210cb062597c8084c</a></p>\n\n<p>Example implementation:</p>\n\n<pre><code>using Microsoft.AspNet.SignalR.Hubs;\n\npublic class MyHubPipelineModule : HubPipelineModule\n{\n    protected override void OnIncomingError(ExceptionContext exceptionContext,\n                                            IHubIncomingInvokerContext invokerContext)\n    {\n        dynamic caller = invokerContext.Hub.Clients.Caller;\n        caller.ExceptionHandler(exceptionContext.Error.Message);\n    }\n}\n\nprotected void Application_Start()\n{\n    GlobalHost.HubPipeline.AddModule(new MyHubPipelineModule());\n}\n\n// JS\n// hub.client is also introduced in SignalR v1.0.0\n$.connection.myHub.client.exceptionHandler = function (message) {\n    alert(message);\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                }
            ],
            "body": "<p>This is more of two questions, but :</p>\n\n<ol>\n<li><p>What's the best way to have a top level exception handler for my Hub?  It doesn't seem possible with the current version of SignalR</p></li>\n<li><p>Why doesn't this actually do anything on the client when I throw an error in my Hub?</p>\n\n<p>$.connection.hub.error(function() {\n  return alert(\"test\");\n});</p></li>\n</ol>\n\n<p>When I debug, I can see my error method being wired up, but when I throw an exception on the Hub, I can see there's never any attempt to call the method I setup above.  The only thing that happens is SignalR barfs the error to the console.</p>\n\n<p>For the record, I can wire up other events just fine</p>\n\n<pre><code>//Called during exceptions just fine \n$.connection.hub.received(function() {\n  return alert(\"Received Data\");\n});\n\n//Seems to do nothing?\n$.connection.hub.error(function() {\n  return alert(\"Received Exception\");\n});\n</code></pre>\n",
            "last_activity_date": 1398893377,
            "question_id": 12608874,
            "score": 13,
            "tags": [
                "javascript",
                "signalr",
                "signalr-hub"
            ],
            "title": "SignalR exception logging?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The event isn't exposed by default as \"onpaste\" IIRC. You can do it quite simply in jQuery by issuing</p>\n\n<pre><code>jQuery(document).bind('paste', function(e){ alert('paste event caught') });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The onpaste event should work in all modern browsers (<strong>UPD</strong> Including Opera >= 12.10<sup>1</sup>).</p>\n\n<p>Bind it in jQuery like this:</p>\n\n<pre><code>$('#txt').on('paste', function() {console.log('text pasted!')})\u200b\n</code></pre>\n\n<p>Here's a live example:\n<a href=\"http://jsfiddle.net/7N6Xq/\">http://jsfiddle.net/7N6Xq/</a></p>\n\n<p>In pure JavaScript it would look something like this for modern browsers</p>\n\n<pre><code>elem.addEventListener (\"paste\", handler, false);  // all browsers and IE9+\n</code></pre>\n\n<p>and for old IE versions:</p>\n\n<pre><code>elem.attachEvent (\"onpaste\", handler);  // IE&lt;9\n</code></pre>\n\n<p>You can also combine it with <em><a href=\"http://help.dottoro.com/ljhxklln.php\">oninput</a></em> and other events (<em>change</em>, <em>propertychange</em>, <em>dragdrop</em>, etc.) to create a relatively bulletproof tracking of content change.</p>\n\n<hr>\n\n<p>Footnotes:</p>\n\n<p><sup>1</sup> Opera supports Clipboard API starting from <a href=\"http://www.opera.com/docs/specs/presto2.10/#m210-294\">Presto/2.10.286</a> which corresponds to 12.10 as suggested <a href=\"http://stackoverflow.com/questions/7217639/copy-cut-and-paste-events-not-working-in-opera\">here</a>. <a href=\"http://www.omgchrome.com/blink-based-opera-15-rolls-out-to-all/\">Blink versions</a> of Opera (starting from 15) should also support it but I am unable to test it as there is still no Linux version.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I was surprised question #4532473 got closed unanswered about what happens if you want to capture the afterpaste event. As this is probably the problem half of the cases a possible approach in firefox (tested) is to register an oninput event right inside the onpaste handler and remove the oninput handler as soon as it's done executing.</p>\n\n<p>In ie the onpropertychange should be used instead of oninput. (not tested)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Nice pure JS solution (as requested...) is available <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element.onpaste\" rel=\"nofollow\">on the Mozilla dev site</a></p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;onpaste event example&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;h1&gt;Play with this editor!&lt;/h1&gt;\n&lt;textarea id=\"editor\" rows=\"3\" cols=\"80\"&gt;\nTry pasting text into this area!\n&lt;/textarea&gt;\n\n&lt;script&gt;\nfunction log(txt) {\n  document.getElementById(\"log\").appendChild(document.createTextNode(txt + \"\\n\"));\n}\n\nfunction pasteIntercept(evt) {\n  log(\"Pasting!\");\n}\n\ndocument.getElementById(\"editor\").addEventListener(\"paste\", pasteIntercept, false);\n&lt;/script&gt;\n\n&lt;h2&gt;Log&lt;/h2&gt;\n&lt;textarea rows=\"15\" cols=\"80\" id=\"log\" readonly=\"true\"&gt;&lt;/textarea&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I handle the paste selected through right click in javascript?\nI tried with \"onpaste\" event and all other html events available but nothing works.</p>\n",
            "last_activity_date": 1400974112,
            "question_id": 10833836,
            "score": 13,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "Paste event in Javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>This is a stab in the dark, but the latest Web API editors draft has a <code>DataChannel</code> interface as part of the <a href=\"http://dev.w3.org/2011/webrtc/editor/webrtc.html#peer-to-peer-data-api\">Peer-to-Peer Data API</a>.</p>\n\n<p>However, the current <a href=\"http://www.w3.org/TR/2012/WD-webrtc-20120209/\">Working Draft</a> does not have this API, so possibly it is very new and as-yet unimplemented.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>This functionality is not yet implemented in any shipping WebRTC implementation. As other posters have indicated, there now is a DataChannel API in the latest WebRTC editors' draft, but the protocol for this is still being worked on. Expect to see this API live in Chrome and Firefox later this year.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As Justin indicated, the protocol and API are still being nailed down; at the latest IETF I submitted a draft for the minor protocol underneath the JS API.  The final form will likely be very close to the current proposal in the editor's draft, but you'll likely need to wait on \"onopened\" from the receiving side as well.</p>\n\n<p>The API is modeled on the WebSocket api to ease moving code from a WebSocket implementation to DataChannels, though not all items in WebSocket carry over (such as url), and obviously DataChannel adds a number of abilities not in WebSockets having to do with unreliable or partly-reliable data.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I believe Matt already know, but for google guests: Yes, you can, useing DataChannels.</p>\n\n<p>On your side:</p>\n\n<pre><code>channel = somePeerConnection.createDataChannel(\"a Label\");\nchannel.onopen = function() { channel.send(\"any thing\") };\n</code></pre>\n\n<p>On the other side:</p>\n\n<pre><code>somePeerConnection.ondatachannel = function (evt) {\n   evt.channel.onmessage = function (evt) {\n       alert( evt.data );\n   };\n};\n</code></pre>\n\n<p>See this examples:</p>\n\n<ul>\n<li><a href=\"http://www.w3.org/TR/webrtc/#examples\" rel=\"nofollow\">http://www.w3.org/TR/webrtc/#examples</a></li>\n<li><a href=\"https://hacks.mozilla.org/2012/11/progress-update-on-webrtc-for-firefox-on-desktop/#file-datachannels-js-LC12\" rel=\"nofollow\">https://hacks.mozilla.org/2012/11/progress-update-on-webrtc-for-firefox-on-desktop/#file-datachannels-js-LC12</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>DataChannel has now been implemented in Firefox (18+) and Chrome (25+), though it's still early days.</p>\n\n<p>For more information see the HTML5 Rocks article <a href=\"http://www.html5rocks.com/en/tutorials/webrtc/basics/#toc-rtcdatachannel\">Getting Started with WebRTC</a>. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://peerjs.com/\" rel=\"nofollow\">http://peerjs.com/</a> is evolving and gives you a websocket like syntax for p2p Data transfer between browser instances</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is an old question, but because I started to learn webRTC, I will attempt to answer it. </p>\n\n<p>First of all, some misconception: </p>\n\n<blockquote>\n  <p>It sounded like websockets but without a server</p>\n</blockquote>\n\n<p>There is no way ANY data can be transferred between WebRTC peers before some information (Media session management, Nodes\u2019 network configuration/multimedia capabilities) has been properly exchanged and negotiated. To do this you need a server and <a href=\"http://www.html5rocks.com/en/tutorials/webrtc/infrastructure/\" rel=\"nofollow\">signalling</a> (which is not a part of webRTC: you can implement it the way you want).</p>\n\n<p>When the signaling is done, you need to create <a href=\"http://www.html5rocks.com/en/tutorials/webrtc/basics/\" rel=\"nofollow\">RTCPeerConnection</a> with something like this:</p>\n\n<pre><code>if (navigator.webkitGetUserMedia) {\n   RTCPeerConnection = webkitRTCPeerConnection;\n} else if(navigator.mozGetUserMedia){\n   RTCPeerConnection = mozRTCPeerConnection;\n   RTCSessionDescription = mozRTCSessionDescription;\n   RTCIceCandidate = mozRTCIceCandidate;\n}\n</code></pre>\n\n<p>and then:</p>\n\n<pre><code>var connection = new RTCPeerConnection(servers);\n</code></pre>\n\n<p>After this you can add your data channel to this PeerConnection:</p>\n\n<pre><code>var dataChannel = connection.createDataChannel(\"channelName\",{ reliable: true });\n</code></pre>\n\n<p>When this is done you can just call <code>sendChannel.send('Any data you want');</code> and this will send any data you want.</p>\n\n<p>If anything, I found <a href=\"http://rads.stackoverflow.com/amzn/click/1449371876\" rel=\"nofollow\">this book really helpful</a>. It leaves a lot of unanswered questions, but for the first start it is good.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I was excited by the prospect of WebRTC when I heard about it initially.  It sounded like websockets but without a server.  Unfortunately, all of the tutorials I have been able to find have stressed the video and and audio aspects of WebRTC.  I can't find anything about sending text/data/JSON between browsers.  Could you help me write a simple hello world of sorts, just sending some data from one browser to another with WebbRTC?  Thank you.</p>\n",
            "last_activity_date": 1402310158,
            "question_id": 10218250,
            "score": 13,
            "tags": [
                "javascript",
                "webrtc"
            ],
            "title": "Transfering JSON between browsers with WebRTC"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Lets look at some test cases - try running the following expressions in your JS console:</p>\n\n<pre><code>\"a\" &lt; \"b\"\n\n\"aa\" &lt; \"ab\"\n\n\"aaa\" &lt; \"aab\"\n</code></pre>\n\n<p>All return true.</p>\n\n<p>JavaScript compares strings character by character and \"a\" comes before \"b\" in the alphabet - hence less than. </p>\n\n<p>In your case it works like so - </p>\n\n<blockquote>\n  <p>1 . \"<strong>a</strong>\u200baaa\" &lt; \"\u200b<strong>a</strong>\u200bb\"</p>\n</blockquote>\n\n<p>compares the first two \"a\" characters - all equal, lets move to the next character.</p>\n\n<blockquote>\n  <p>2 .  \"a\u200b<strong>a</strong>\u200b\u200baa\" &lt; \"a\u200b<strong>b</strong>\u200b\u200b\"  </p>\n</blockquote>\n\n<p>compares the second characters \"a\" against \"b\" - whoop! \"a\" comes before \"b\". Returns true.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Just remember that string comparison like \"x\" > \"X\" is case-sensitive</p>\n\n<pre><code>\"aa\" &lt; \"ab\" //true\n\"aa\" &lt; \"Ab\" //false\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I'm trying to compare 2 strings alphabetically for sorting purposes. For example I want to have a boolean check like <code>if('aaaa' &lt; 'ab')</code>. I tried it, but it's not giving me correct results, so I guess that's not the right syntax. How do I do this in jquery or Javascript?</p>\n",
            "last_activity_date": 1418235358,
            "question_id": 10198257,
            "score": 13,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "comparing 2 strings alphabetically for sorting purposes"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You need to call <code>console.log</code> in the context of <code>console</code> for chrome:</p>\n\n<pre><code>(function () {\n  var log = console.log;\n  console.log = function () {\n    log.call(this, 'My Console!!!');\n    log.apply(this, Array.prototype.slice.call(arguments));\n  };\n}());\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>You can also use the same logic, but call it off the console object so the context is the same.</p>\n\n<pre><code>if(window.console){\n  console.yo = console.log;\n  console.log = function(str){\n    console.yo('MY CONSOLE!!');\n    console.yo(str);\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a script that I can't change that makes a lot of console.log calls. I want to add another layer and respond if the calls contain certain strings. This works in FF, but throws an \"Illegal invocation\" error in Chrome on the 4th line:</p>\n\n<pre><code>var oldConsole = {};\noldConsole.log = console.log;\nconsole.log = function (arg) {\n    oldConsole.log('MY CONSOLE!!');\n    oldConsole.log(arg);\n}\n</code></pre>\n\n<p>Any ideas how to get around that? I also tried cloning the console...</p>\n",
            "last_activity_date": 1328812494,
            "question_id": 9216441,
            "score": 13,
            "tags": [
                "javascript",
                "debugging",
                "console"
            ],
            "title": "Intercept calls to console.log in Chrome"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Use 'application/json' as a wrapper for any other metadata that you may like, including mime-type of linked files, or the html you want to use in the browser.</p>\n\n<pre><code>{ 'assets': [\n      {\n       'color': 'foo',\n       'text': 'bar',\n       'uri': 'http://', // location of asset\n       'type': 'application/zip', // mime-type of asset\n       'html': '&lt;div&gt;html representation&lt;/div&gt;'\n       // .. more properties\n      }\n   // ...more assets\n   ]\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Update:</strong> this Chrome bug has been fixed since version 19.</p>\n\n<p>If I aim to support <a href=\"http://www.google.com/chrome/\" rel=\"nofollow\">Google Chrome</a> (version 12 is the latest one now), then I must stick to <code>text/plain</code>.</p>\n\n<p>That's because <a href=\"http://stackoverflow.com/questions/1895923/has-chrome-improperly-implemented-the-datatransfer-object\">Chrome has improperly implemented the dataTransfer object</a>, and there is an open bug about <a href=\"http://code.google.com/p/chromium/issues/detail?id=31037\" rel=\"nofollow\">dataTransfer not working with non text or url</a>.</p>\n\n<p>I've written a <a href=\"http://jsfiddle.net/cCunc/1/\" rel=\"nofollow\">simple desmontration at jsFiddle</a>. It works correctly in <a href=\"http://www.mozilla.com/firefox\" rel=\"nofollow\">Mozilla Firefox</a> 3.6 and even in <a href=\"http://arora.googlecode.com/\" rel=\"nofollow\">Arora browser</a> (version 0.10.2, WebKit version 533.3). Just for completeness, my Chrome version is 12.0.742.112 (WebKit version 534.30). The demonstration code is also available below:</p>\n\n<pre><code>&lt;div id=\"drag\" draggable=\"true\"&gt;Drag me!&lt;/div&gt;\n&lt;div id=\"drop\"&gt;Drop here!&lt;/div&gt;\n\n\n#drag, #drop {\n    padding: 1em 2em;\n    margin: 1em 0;\n}\n#drag {\n    background: #CFC;\n}\n#drop {\n    background: #FCC;\n}\n\n\nfunction dragstart_handler(ev) {\n    console.log('dragstart');\n    ev.dataTransfer.setData('text/x-example', 'Foobar');\n}\n\nfunction dragover_handler(ev) {\n    // Accepting whatever is dragged over here\n    ev.preventDefault();\n}\n\nfunction drop_handler(ev) {\n    console.log('drop');\n    console.log(ev.dataTransfer.types);\n\n    if (ev.dataTransfer.types) {\n        var i;\n        for (i = 0; i &lt; ev.dataTransfer.types.length; i++) {\n            var type = ev.dataTransfer.types[i];\n            console.log(type, ev.dataTransfer.getData(type));\n        }\n    }\n\n    console.log(ev.dataTransfer.getData('text/x-example'));\n}\n\nvar drag = document.getElementById('drag');\ndrag.addEventListener('dragstart', dragstart_handler, false);\n\nvar drop = document.getElementById('drop');\ndrop.addEventListener('dragover', dragover_handler, false);\ndrop.addEventListener('drop', drop_handler, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The HTML5 specification has some drag and drop examples (see the <a href=\"http://www.w3.org/TR/2011/WD-html5-20110525/dnd.html#introduction-7\" rel=\"nofollow\">current working draft</a> or the <a href=\"http://www.w3.org/TR/html5/dnd.html#introduction-7\" rel=\"nofollow\">latest version</a>). In such examples, a custom MIME Type is used, and the use of site-specific MIME types is also suggested. See this snippet:</p>\n\n<pre><code>&lt;p&gt;Drop your favorite fruits below:&lt;/p&gt;\n&lt;ol dropzone=\"move s:text/x-example\" ondrop=\"dropHandler(event)\"&gt;\n &lt;-- don't forget to change the \"text/x-example\" type to something\n specific to your site --&gt;\n&lt;/ol&gt;\n&lt;script&gt;\n  var internalDNDType = 'text/x-example'; // set this to something specific to your site\n[...]\n</code></pre>\n\n<p>So, that's great, this means we should use a custom MIME type! (unless we are actually dragging plain text, or just a URL, or something that already has a well-known type)</p>\n\n<p>But how do we create such custom MIME type?</p>\n\n<p>I found no documentation about this, so I looked at other MIME types. The <a href=\"http://www.iana.org/assignments/media-types/text/index.html\" rel=\"nofollow\">list of text media types</a> had nothing special, but the <a href=\"http://www.iana.org/assignments/media-types/application/index.html\" rel=\"nofollow\">list of application media types</a> was quite interesting. Let me grab a sample from that list:</p>\n\n<pre><code>application/atom+xml\napplication/xhtml+xml\napplication/xmpp+xml\n\napplication/vnd.google-earth.kml+xml\napplication/vnd.google-earth.kmz\napplication/vnd.iptc.g2.newsitem+xml\napplication/vnd.iptc.g2.packageitem+xml\napplication/vnd.nokia.iptv.config+xml\napplication/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml\napplication/vnd.yamaha.openscoreformat.osfpvg+xml\n\napplication/vnd.hal+json\napplication/vnd.hal+xml\n</code></pre>\n\n<p>I can notice a pattern for making names:</p>\n\n<ul>\n<li>A dot hierarchically separates multiple \"elements\" (for instance, <code>config</code> is child of <code>iptv</code>, that is child of <code>nokia</code>, that is child of <code>vnd</code>).</li>\n<li>A hyphen separates composite words (as in <code>google-earth</code> and <code>openxmlformats-officedocument</code>).</li>\n<li>A plus sign serves to further specify the serializing format (<code>+json</code> and <code>+xml</code> in these examples).</li>\n<li>The <code>x-</code> prefix should be used for MIME types not registered with IANA (and, thus, not shown on that list).</li>\n</ul>\n\n<p>Based on these rules, I can suggest using the following MIME type:</p>\n\n<p><strong>application/x-mysite.myobject+json</strong> (or <em>application/x-mysite.parentobject.childobject+json</em>)</p>\n\n<p>This seems to be the most precise and correct way to specify a custom MIME type for a web application object encoded in JSON.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm starting to experiment with HTML5 Drag and Drop. Then, in the dragstart event handler we should run <code>setData()</code>, which receives two parameters: <em>format</em> and <em>data</em>.</p>\n\n<pre><code>function dragstart_handler(ev) {\n    ev.dataTransfer.setData('text/plain', 'foobar');\n}\n</code></pre>\n\n<p>I want to drag some kind of \"object\" from one container into another container, inside my web application. By \"object\", I mean something that has multiple attributes (color, text, author, date, \u2026).</p>\n\n<p>What kind of <em>format</em> (or MIME Type) should I use?</p>\n\n<ul>\n<li><code>text/plain</code>?</li>\n<li><code>text/x-myapp-myobjtype</code>?</li>\n<li><code>application/x-myapp-myobjtype</code>?</li>\n<li><code>application/x-myapp.myobjtype+json</code>?</li>\n<li>something else?</li>\n<li>more than one?</li>\n</ul>\n\n<p>How should I encode my object (the <em>data</em> parameter of <code>setData()</code>)?</p>\n\n<ul>\n<li>Comma-separated (or any other delimiter) key=value pairs?</li>\n<li>Serialize the object using JSON?</li>\n<li>Just an id, and at the dropzone I must retrieve the full object using just the id?</li>\n<li>Send just a reference to the object, without even serializing anything? (not possible, the <em>data</em> argument must be a string)</li>\n</ul>\n\n<p>(I realize that \"How to enconde an object for Drag and Drop\" could be another question here, but it is closely related to the choice of MIME Type)</p>\n\n<hr>\n\n<p>Some references:</p>\n\n<ul>\n<li><a href=\"http://dev.w3.org/html5/spec/dnd.html\">http://dev.w3.org/html5/spec/dnd.html</a></li>\n<li><a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd\">http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd</a></li>\n<li><a href=\"https://developer.mozilla.org/En/DragDrop/Drag_Operations\">https://developer.mozilla.org/En/DragDrop/Drag_Operations</a></li>\n<li><a href=\"https://developer.mozilla.org/En/DragDrop/DataTransfer\">https://developer.mozilla.org/En/DragDrop/DataTransfer</a></li>\n<li><a href=\"http://www.html5rocks.com/en/tutorials/dnd/basics/\">http://www.html5rocks.com/en/tutorials/dnd/basics/</a></li>\n</ul>\n",
            "last_activity_date": 1379208071,
            "question_id": 6767128,
            "score": 13,
            "tags": [
                "javascript",
                "html5",
                "drag-and-drop",
                "dto"
            ],
            "title": "What format (MIME Type) should I use for HTML5 drag and drop operations?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Answers to your questions:</p>\n\n<ol>\n<li><p>When you get a response back from the server, the response data goes through the parse method.  For models, the parse method must respond with an attributes hash which will be used in a 'set' call to the model.  For collections, the parse method must respond with an array of attributes hashes representative of the models to be maintained by the collection.  In each case, there are default implementations which use the raw response object.  If your response does not return usable hashes, then you need to provide your own parse method which does what you want.</p></li>\n<li><p>You are correct on your statement about how isNew works.  Your server response must provide some sort of id that you either use or transform into an id attribute on the model in the parse method.  The transform would be required if your server response does not call the object id as an attribute called 'id'.  I think your entire second question hinges on your proper understanding of the parse method.  This method must return an attributes hash which includes also the 'id' attribute.</p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>Some newbie questions about backbone.js' <a href=\"http://documentcloud.github.com/backbone/#Model-save\">save</a> and <a href=\"http://documentcloud.github.com/backbone/#Sync\">sync</a>.</p>\n\n<ol>\n<li><p>After calling save/sync functions, what type of response does backbone expect from the server? Is any specific post-processing required after the response is received?</p></li>\n<li><p>How does backbone know whether the model already exists on the server? From the documentation I see that each model has an <a href=\"http://documentcloud.github.com/backbone/#Model-isNew\">isNew</a> that checks for whether there is an \"id\". So \"id\" is the id from the server, whereas \"cid\" is what backbone creates for each model. Correct? If so, what are the general steps for the server to inform backbone what the id of a model is, when: </p>\n\n<p>a) the model is first created and synced,</p>\n\n<p>b) subsequently when the model is fetched,</p>\n\n<p>c) or when the model is populated on page load?</p></li>\n</ol>\n\n<p>Thanks for help.</p>\n",
            "last_activity_date": 1308404850,
            "question_id": 6394108,
            "score": 13,
            "tags": [
                "javascript",
                "backbone.js"
            ],
            "title": "How should server respond to backbone sync"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The error callback is for when the Ajax round-trip could not be completed successfully, not something based on your server logic.  It would be your responsibility to check for what you consider to be a successful response inside the success callback.  i.e. Add a single IF conditional that checks if the message = \"There was an error.\" and include your error logic there, otherwise do the success logic.</p>\n\n<p>An approach to do what you ask for would be to have the server return a 404 header when there is an error, then it would be handled by the error callback.  The problem with this approach is that you'd be hiding if there are actual errors, and you wouldn't be able to pass additional data with it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The error callback will be executed when the response from the server is not going to be what you were expecting. So for example in this situations it:</p>\n\n<ul>\n<li>HTTP 404/500 or any other HTTP error message has been received</li>\n<li>data of incorrect type was received (i.e. you have expected JSON, you have received something else).</li>\n</ul>\n\n<p>In your situation the data is correct (it's a JSON message). If you want to manually trigger the error callback based on the value of the received data you can do so quite simple. Just change the anonymous callback for error to named function.</p>\n\n<pre><code>function handleError(xhr, status, error){\n\n    //Handle failure here\n\n }\n\n$.ajax({\n\n  url: url,\n  type: 'GET',\n  async: true,\n  dataType: 'json',\n  data: data,\n\n success: function(data) {\n     if (whatever) {\n         handleError(xhr, status, ''); // manually trigger callback\n     }\n     //Handle server response here\n\n  },\n\n error: handleError\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Simplest thing to do would be to restructure like so:</p>\n\n<pre><code>function handleAjaxError function(xhr, status, error) {\n    //Handle failure here\n}\n\n$.ajax({\n  url: url,\n  type: 'GET',\n  async: true,\n  dataType: 'json',\n  data: data,\n\n  success: function(data) {\n\n     //Handle server response here\n    if (data.message == 'There is an error')\n    {\n        handleAjaxError();\n        return;\n    }\n\n    //... all is good....\n\n  },\n  error: handleAjaxError\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>We presume the server is sending JSON, and in case of a successful request we'll get something like this:</p>\n\n<pre><code>{\n    success: true,\n    data: {\n        name: 'Foo'\n    }\n}\n</code></pre>\n\n<p>... and on failure:</p>\n\n<pre><code>{\n    success: false,\n    error: 'Something bad happened.'\n}\n</code></pre>\n\n<p>Then we simply filter the response with a <a href=\"http://api.jquery.com/category/deferred-object\">$.Deferred</a>:</p>\n\n<pre><code>$.get('http://localhost/api').then(function(res) {\n    var filter $.Deferred()\n\n    if (res.success) {\n        filter.resolve(res.data)\n    } else {\n        filter.reject(res.error)\n    }\n\n    return filter.promise()\n}).done(function(data) {\n    console.log('Name:',  data.name) // Outputs: Foo\n}).fail(function(error) {\n    console.log('Error:', error) // Outputs: Something bad happened.\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>One easy way to do this is to just use the jQuery always() function for your callback and then if you want to manually create an error just take advantage of Duck Typing!</p>\n\n<p>For example:</p>\n\n<pre><code>$.get(url, {\"data\": data}).always(function(result)\n{\n    if (typeof result.status !== \"undefined\" &amp;&amp; result.status !== 200) // Status code 200 represents Success/OK\n    {\n        //handle error\n        error = \"Your error was \" + result.status + \" \" + result.statusText;\n    }\n    else\n    {\n        //success\n    }\n});\n</code></pre>\n\n<p>The error section will always be run if there was a natural header error such as a 404 Not Found.  If you want to manually return an error, you can just emulate the XHR object normally passed with an error (e.g. in PHP):</p>\n\n<pre><code>public function ServerSideAjaxResponse($data)\n{\n    if (!$data)\n    {\n        $response[\"status\"] = 1001; //Make up your own error codes! Yippee! Fun!\n        $response[\"statusText\"] = \"Error! You forgot to send the data!\";\n        echo json_encode($return);\n        return;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The easiest way to trigger the error BASED on server logic is to force-return error 404:</p>\n\n<pre><code>$.ajax({\n    type: \"POST\",\n    url: \"script.php\",\n    data: { do: \"trigger_error\"},\n    error: function()\n    {\n        alert(\"Error!\");                    \n    }\n});\n</code></pre>\n\n<p>Then do something like this in your PHP code:</p>\n\n<pre><code>&lt;?php\n    if($_POST[\"do\"] == \"trigger_error\")\n    {\n        header(\"Location: .php\");\n    }\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>By using jquery ajax function, I can do something like:</p>\n\n<pre><code>$.ajax({\n\n  url: url,\n  type: 'GET',\n  async: true,\n  dataType: 'json',\n  data: data,\n\n success: function(data) {\n\n     //Handle server response here\n\n  },\n\n error: function(xhr, status, error){\n\n    //Handle failure here\n\n }\n\n});\n</code></pre>\n\n<p>I got two questions to ask based on above code:</p>\n\n<ol>\n<li><p>When will the jquery.ajax() <code>error</code> callback be called??</p></li>\n<li><p>What if server response to me a json object with string message \"<em>There is an error</em>\". Which means the request is still send successfully, but I got server response <code>{message: \"There is an error\"}</code>. </p></li>\n</ol>\n\n<p>I think no matter what string value server is responsed, if client got server's response, the <strong>jquery.ajax()</strong> <code>success</code> callback will be triggered anyway.</p>\n\n<p>I'd like to ask if server specifically returns to me a JSON object with string value like <code>{message: 'There is an error'}</code>, could server do something so that this response could be handled in <strong>jquery.ajax()</strong> <code>error</code> callback instead of <code>success</code> callback?</p>\n",
            "last_activity_date": 1412511823,
            "question_id": 6265814,
            "score": 13,
            "tags": [
                "javascript",
                "ajax",
                "spring",
                "jquery"
            ],
            "title": "how to trigger jquery.ajax() error callback based on server response in my case?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>In Javascript:</p>\n\n<pre><code>&lt;button onclick=\"detectIPadOrientation();\"&gt;What's my Orientation?&lt;/button&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n window.onorientationchange = detectIPadOrientation;\n function detectIPadOrientation () {\n\n    if ( orientation == 0 ) {\n     alert ('Portrait Mode, Home Button bottom');\n    }\n    else if ( orientation == 90 ) {\n     alert ('Landscape Mode, Home Button right');\n    }\n    else if ( orientation == -90 ) {\n     alert ('Landscape Mode, Home Button left');\n    }\n    else if ( orientation == 180 ) {\n     alert ('Portrait Mode, Home Button top');\n    }\n }\n&lt;/script&gt;\n</code></pre>\n\n<p>Or for including additional stylesheets:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" media=\"all and (orientation:portrait)\" href=\"portrait.css\"&gt;\n&lt;link rel=\"stylesheet\" media=\"all and (orientation:landscape)\" href=\"landscape.css\"&gt;\n</code></pre>\n\n<p>Both taken from: <a href=\"http://favo.asia/2010/07/detecting-ipad-orientation-using-javascript/\">http://favo.asia/2010/07/detecting-ipad-orientation-using-javascript/</a> which, FYI, was the first result on Google for 'detect ipad orientation javascript'...</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Try </p>\n\n<pre><code>$(window).bind('orientationchange', function(event) {\n  alert('new orientation:' + event.orientation);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<pre>\nfunction detectIPadOrientation () {  \n   if ( orientation == 0 ) {  \n    alert ('Portrait Mode, Home Button bottom');  \n   }  \n   else if ( orientation == 90 ) {  \n    alert ('Landscape Mode, Home Button right');  \n   }  \n   else if ( orientation == -90 ) {  \n    alert ('Landscape Mode, Home Button left');  \n   }  \n   else if ( orientation == 180 ) {  \n    alert ('Portrait Mode, Home Button top');  \n   }  \n}\n\nwindow.onorientationchange = detectIPadOrientation;\n\n</pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can detect the orientation change event using the following code:</p>\n\n<p><strong>jQuery:</strong></p>\n\n<pre><code>$(document).ready(function() {\n    $(window).on('orientationchange', function(event) {\n        console.log(orientation);\n    });\n});\n</code></pre>\n\n<hr>\n\n<p><strong>Check if device is in portrait mode</strong></p>\n\n<pre><code>function isPortrait() {\n    return window.innerHeight &gt; window.innerWidth;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>How with JavaScript or jQuery detect when user turn iPad from vertical position to horizontal or from horizontal to vertical?</p>\n",
            "last_activity_date": 1399450734,
            "question_id": 6249722,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "iphone",
                "ipad"
            ],
            "title": "Detect iPad orientation change"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Can't you put your own script directly in the head of the html right at the top?</p>\n\n<pre><code>&lt;script ...&gt;\n    if (console) { window.cache_console = console; }\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n... html ...\n\n&lt;script&gt;\n    window.console = window.cache_console;\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>You can't get much earlier than right up in the HEAD. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I believe you could possibly do this with an iframe inject and then copy the iframe's console object:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nconsole = {};\ntry {\n    console.log('1');\n} catch(e){\n    alert('No console');\n}\n&lt;/script&gt;\n&lt;iframe id=\"text\"&gt;&lt;/iframe&gt;\n&lt;script type=\"text/javascript\"&gt;\nconsole = window.frames[0].console;\ntry {\n    console.log('test');\n} catch(e){\n    alert('No console');\n}\n&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/nmY6k/\">http://jsfiddle.net/nmY6k/</a></p>\n\n<p>Note, this is just a demonstration that the concept should work.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>With a pure JS iframe:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nconsole = {};\ntry {\n    console.log('1');\n} catch(e){\n    alert('No console');\n}\nvar iframe = document.createElement('iframe');\ndocument.body.appendChild(iframe);\nconsole = window.frames[0].console;\ntry {\n    console.log('test');\n} catch(e){\n    alert('No console');\n}\n&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/nmY6k/1/\">http://jsfiddle.net/nmY6k/1/</a></p>\n\n<p><strong>EDIT</strong></p>\n\n<p>And of course, if you need to remove the iframe element afterwards:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nconsole = {};\ntry {\n    console.log('1');\n} catch(e){\n    alert('No console');\n}\nvar iframe = document.createElement('iframe');\ndocument.body.appendChild(iframe);\nconsole = window.frames[0].console;\ntry {\n    console.log('test');\n} catch(e){\n    alert('No console');\n}\nconsole.log(typeof window.frames);\ndocument.body.removeChild(iframe);\nconsole.log(typeof window.frames);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>This seems to work:</p>\n\n<pre><code>iframe = document.createElement('iframe');\ndocument.body.appendChild(iframe);\nconsole = iframe.contentWindow.console;\n</code></pre>\n\n<p>However it looks like you cannot remove the iframe</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Assuming the reason you're concerned is that you want to use the console normally as you develop, you could whip up a simple chrome extension that defines console.firebug so that the condition will evaluate to false. That way you don't need to worry about any potential quirky behavior that might arise from using some other frame's console object, nor do you have to worry about repeatedly inserting and deleting a hack as you develop/deploy.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In Google Chrome, deleting the <code>console</code> object works:</p>\n\n<pre><code>&lt;script&gt;\nwindow.console = {};\ndelete console;\nconsole.log('still works');\n&lt;/script&gt;\n</code></pre>\n\n<p>However, this doesn't seem to work in Firefox 4.  It's a start, though.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could write a pretty basic userscript to assign console as suggested above.  Then go into the manifest.json for that userscript, and change the run_at setting (see <a href=\"http://code.google.com/chrome/extensions/content_scripts.html\" rel=\"nofollow\">http://code.google.com/chrome/extensions/content_scripts.html</a> ) to document_start.  That will make the userscript now run <em>before</em> any of the page scripts run, so before console ever gets messed with.</p>\n\n<p>...edit...</p>\n\n<p>Actually, I note from <a href=\"http://blog.chromium.org/2011/07/chrome-extensions-now-with-more.html\" rel=\"nofollow\">http://blog.chromium.org/2011/07/chrome-extensions-now-with-more.html</a> that chrome also now supports @run-at, so you can set that, and don't even have to mess with manifest.json directly.  They have an example script using @run-at at document_start at <a href=\"http://src.chromium.org/viewvc/chrome/trunk/src/chrome/common/extensions/docs/examples/howto/userscript-runat/runat.user.js?view=markup\" rel=\"nofollow\">http://src.chromium.org/viewvc/chrome/trunk/src/chrome/common/extensions/docs/examples/howto/userscript-runat/runat.user.js?view=markup</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm dealing with a system where the following Javascript code (which is out of my control) is being executed early in the page</p>\n\n<pre><code>if (!(\"console\" in window) || !(\"firebug\" in console))\n{\n    var names = [\"log\", \"debug\", \"info\", \"warn\", \"error\", \"assert\", \"dir\", \"dirxml\",\n    \"group\", \"groupEnd\", \"time\", \"timeEnd\", \"count\", \"trace\", \"profile\", \"profileEnd\"];\n    window.console = {};\n    for (var i = 0; i &lt; names.length; ++i)\n        window.console[names[i]] = function() {}\n}\n</code></pre>\n\n<p>This code appears to be used to create a mock <code>console</code> object to prevent javascript errors in environments without a javascript console.  This is great, except that it also prevents Google Chrome's console from running.  The conditional explicatly checks for <code>firebug</code>, but that's it</p>\n\n<pre><code>    if (!(\"console\" in window) || !(\"firebug\" in console))\n</code></pre>\n\n<p>So, is there way to tell Chrome's debugger to re-initialize its console object?  That is, in plain english, tell Chrome</p>\n\n<blockquote>\n  <p>Hey, you know when you load up a page and define a console object for me to use?  Do that again so we can override what someone in user-space has done. </p>\n</blockquote>\n\n<p>I realize I could do something like</p>\n\n<pre><code>console.firebug = \"faketrue\";\n</code></pre>\n\n<p>and have the conditional caught, but I'm restricted in the system and don't have a way to add javascript before the above console redefinition hits.  Put another way, no, I can't just add a bit of javascript code right after the start of the head.</p>\n",
            "last_activity_date": 1327230477,
            "question_id": 6131651,
            "score": 13,
            "tags": [
                "javascript",
                "google-chrome",
                "google-chrome-devtools"
            ],
            "title": "&quot;Un-redefining&quot; Google Chrome&#39;s console Object"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>In programming, when stuck, it's always handy to trace the code to better understand what's happening. The easiest way to do this is to put more debug/print statements in till you can see what's going on.</p>\n\n<p>Change the sys.puts line to:</p>\n\n<pre><code>sys.puts('Counter ' + counter + \" from \" + req.url);\n</code></pre>\n\n<p>I think you'll find that the 2nd request is the browser requesting the favicon for the site.</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>We can ignore the page refresh count due to favicon with the following code snippet:</p>\n\n<pre><code>if (request.url === '/favicon.ico') {\n   response.writeHead(200, {'Content-Type': 'image/x-icon'} );\n   response.end();\n   console.log('favicon requested');\n   return;\n}\n</code></pre>\n\n<p>Ref: <a href=\"https://gist.github.com/763822\" rel=\"nofollow\">https://gist.github.com/763822</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Hey guys,\nI am trying out node.js, the following is the example web server from the documentation with an added counter and it prints the counter to the console when ever a client/browser requests the page. </p>\n\n<p>The problem is, its being called twice when requested by the browser. </p>\n\n<p>This is what I would expect would happen:</p>\n\n<pre><code>browser : Hello World 1\nconsole : Counter 1\n[reload page]\nbrowser : Hello World 2\nconsole : Counter 2\n</code></pre>\n\n<p>but this happens:</p>\n\n<pre><code>browser : Hello World 1\nconsole : Counter 1\n          Counter 2\n[reload page]\nbrowser : Hello World 3\nconsole : Counter 3\n          Counter 4\n</code></pre>\n\n<p>I run the code using the command line</p>\n\n<pre><code>$ node example.js\n</code></pre>\n\n<p>Here is the code:</p>\n\n<pre><code>  var \n    http = require('http'),\n    counter = 0,\n    sys = require('util');\n  http.createServer(function (req, res) {\n    res.writeHead(200, {'Content-Type': 'text/plain'});\n    counter++;\n    res.end('Hello World ' + counter + '\\n');\n    sys.puts('Counter ' + counter);\n  }).listen(8000, \"\");\n</code></pre>\n\n<p>Any help is appreciated. </p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1398104056,
            "question_id": 3938369,
            "score": 13,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "Nodejs web server calling requestListener twice when page is loaded"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Sub-domains are considered different and will fail the <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\">Same Origin Policy</a> unless both sub-domains declare the same <code>document.domain</code> DOM property (and even then, different browsers behave differently).</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Short answer: No. See the <a href=\"https://developer.mozilla.org/en/Same_origin_policy_for_JavaScript\" rel=\"nofollow\">Same Origin Policy</a></p>\n\n<p>You can only make an XHR request to the same host, port, and protocol. </p>\n\n<p>If you want to do Ajax without sticking to that, you can look at <a href=\"http://remysharp.com/2007/10/08/what-is-jsonp/\" rel=\"nofollow\">JSON-P</a>.</p>\n\n<p>(XSS is a completely different kettle of fish, in which a site allows data to be injected into it (e.g. via a URI) that gets treated as JS allowing third parties to direct people to your site, while they are logged into it, and steal or edit data.)</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have Server A (www.example.com) sending information to Server B. I can only have HTML / JS on Server A (and have to do the \"crunching\" on Server B) so I'm trying to send form data via AJAX (trying to avoid a form post to Server B - don't ask).</p>\n\n<p>Obviously doing an AJAX call cross-domain is considered XSS and a big no-no, but if I were to put Server B in a subdomain (sub.example.com), would that be considered okay?  How are cross-domain errors detected? Does the browser look up DNS records? IP address?</p>\n\n<p>Thanks in advance for you help.</p>\n",
            "last_activity_date": 1276546481,
            "question_id": 3040514,
            "score": 13,
            "tags": [
                "javascript",
                "ajax"
            ],
            "title": "Are AJAX calls to a sub-domain considered Cross Site Scripting?"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>You could click on the <code>Off</code> button to disable it. </p>\n\n<p>Or are you trying to prevent your users from running it? If so, good luck...</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>No...............</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Anything you send to the client, all your javascript, is open to whoever you send it to.  Don't have anything there that you don't want people to see.  There is no way to prevent someone else's browser from using Firebug, or a lot of other tools, to analyze your code.  You could try to make your html, css, and javascript <em>really bad</em>, and that might slow them down!  There are obfuscation programs to make it difficult to read.  If you want to hide functionality, you'll need to have it happen on the server.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If the performance of your website suffers when Firebug is enabled, you may want to display a warning, asking users to switch it off. <a href=\"http://stackoverflow.com/questions/398111/javascript-that-detects-firebug\">You can easily detect if Firebug is enabled through JavaScript</a>.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>No.  Nobody wants your javascript routines anyway.  :-)</p>\n\n<p>And if you're worried about unsecure code, you should rewrite your site to be secure instead of trying to hide its problems.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You could develop your site in Flash, Silverlight, or Java. Firebug will then be limited to displaying your base HTML.</p>\n\n<p>I'm assuming you're worried about reverse engineering with FireBug.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>WARNING: EXTREME EVIL.  NEVER EVER USE THIS CODE.  Also, it won't deter someone who is resourceful.</p>\n\n<pre><code>setTimeout(checkForFirebug, 100);\nfunction checkForFirebug()\n{\n    if (window.console &amp;&amp; window.console.firebug) {\n      while(true);    //Firebug is enabled\n    }\n    setTimeout(checkForFirebug, 100);\n}\n</code></pre>\n\n<p><strong>EDIT:</strong> I figured I would provide an answer to the real question behind the question.  The fact is, Javascript is an interpreted language and that interpreter is in the browser.  This makes it literally impossible to provide Javascript that is both secure and runnable.  The same goes for HTML and CSS.  The best you can do is minify the Javascript to make it a little less easy to reuse.  If the company in question really wants \"secure\" Javascript, you just have to tell them it's not truly possible.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Ultimately, no, as the browser (in this case firefox) on their machine can choose to run whatever javascript (such as firebug) it wants to.  You cannot prevent users from running it along with your website.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>No, of course not.  If Firebug is revealing something that you must prevent your users from seeing, then you are approaching this problem completely wrong.  I am not trying to be rude or degrading, but attempting to block one particular program in an effort to fix a bug in your web application is about as logical as a bucket of steam.  Firebug does nothing magical; I can do anything it does by writing some code.  Having said that, there must be an underlying issue that you should be more concerned about.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>if you want to protect your code, you could try encrypting your javascript source code</p>\n\n<p><a href=\"http://www.google.co.uk/search?hl=en&amp;rlz=1R2GGIC_enGB358&amp;q=encrypt+javascript+code&amp;aq=1&amp;aqi=g5g-m3&amp;aql=&amp;oq=encrypt+javascr&amp;gs_rfai=\" rel=\"nofollow\">google encrypt javascript source</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want to hide your HTML/CSS/JavaScript from visitors, that is not possible. Even if one cannot use Firebug, one can simply view the HTML source code. Any external JavaScripts and stylesheets can be downloaded as the plain text files they are. Because HTML, CSS, and JavaScript are <em>client-side</em> technologies, that are downloaded as plain text and interpreted by the web browser, it is theoretically <em>impossible</em> to hide your code. The best thing you can do to make the code <em>harder</em> to understand, is to <em>obfuscate</em> it. See <a href=\"http://en.wikipedia.org/wiki/Obfuscator\" rel=\"nofollow\">Wikipedia</a>.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<blockquote>\n  <p>\"My javascript routines\" belong to the company I work for and my company wants the stuff we develop secured.</p>\n</blockquote>\n\n<p>You do not <em>secure</em> stuff by lightly patting \"hackers\" on the fingers when they use one specific debugging tool. Try to prevent them from using the ultimate <em>hacker tool</em>: \"View Source\".</p>\n\n<p>If it's out there it's out there. \"Secure\" means something different in this context. It means securing whatever important data you have by employing techniques that are impenetrable* even with full knowledge of the source code. The source code itself is not securable, and neither does it need to be.</p>\n\n<hr>\n\n<p>*) \"impenetrable\" = difficult enough to subvert in a reasonable amount of time, nothing is 100% :)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Ummm....\nWhat does using Firefox (with or without Firebug) have to do with this?</p>\n\n<p>I use IE and I can just as easily view your JavaScript. Likewise with Google Chrome. Hell, I can download your JavaScript when viewing your webpage on my Palm Treo.</p>\n\n<p>Anything which can be accessed directly from a browser can be downloaded and analyzed at leisure. As others have said (better than I), JavaScript which runs on your website should be considered to be \"open source\". Find another way to do it (i.e. processing on your server) or accept that someone will hack in and look at it.</p>\n\n<p>Mind you, are your routines so obviously good (in terms of what they do to your webpages) that a user will go to your website and immediately say \"Hey, this is cool, I wonder how they do it?\" If not, don't worry about it - most people won't be interested enough to try to look at your JavaScript.</p>\n\n<p>You could try minifying your JavaScript, but that's not 100% going to stop someone who's determined. You could try encrypting it, but I've never tried. Or put a copyright notice in your JavaScript files, so at least someone else won't be able to subsequently pass off your work as yours without getting into legal trouble.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Just to provide a little trick that i use helps lower people seeing your code,</p>\n\n<p>One of the tricks i do that does not prevent the JavaScript from being found by the experianced developer or hacker, but deters the few people playing with Firebug / inspector,</p>\n\n<p>use jQuery or another lib with a grate selector</p>\n\n<p>the second port of call is all you files put them into a loader file E.G</p>\n\n<p><strong>Loader.js</strong></p>\n\n<pre><code>(function($){\n    function loader(type, addr){\n        var head = $(\"head\")[0];\n        switch(type){\n            case \"script\":{\n                var element = $(document.createElement(\"script\"));\n                element.attr(\"type\", \"text/javascript\");\n                element.attr(\"src\", addr);\n                element.attr(\"loaded\", \"loader\")\n                $(head).append(element);\n            }\n            case \"style\":{\n                var element = $(document.createElement(\"link\"));\n                element.attr(\"rel\", \"stylesheet\");\n                element.attr(\"type\", \"text/css\");\n                element.attr(\"loaded\", \"loader\");\n                element.attr(\"href\", addr);\n                $(head).append(element);\n            }\n        }\n    }\n\n    loader(\"css\", \"path/to/your.css\");\n    loader(\"script\", \"path/to/script.js\");\n\n    loader(\"script\", \"unloader.js\")\n})(jQuery);\n</code></pre>\n\n<p>So to start with were using a closure this prevent anyone from using the console input of the inspector to see the code that has been run.</p>\n\n<p>so once this file has been passed it will load your CSS and JS but you can still see there loaded in the head element of your inspector, thanks to browsers and the they way they work you can remove and not unload them this means the code will not be removed from execution but will prevent them being shown in the inspector this is what goes in the unloader.</p>\n\n<p><strong>unloader.js</strong></p>\n\n<pre><code>(function($){\n    $(\"head *[loaded=loader]\").remove();\n})(jQuery);\n</code></pre>\n\n<p>The above will remove the the files loaded though the loader.</p>\n\n<p>The only thing you need to remember is to add <code>loaded=\"loader\"</code> to your scrip that that includes the loader, now this does not make it impossible for some one to see your files but stops the inspector from showing them in the HTML,</p>\n\n<p>the ways around this can be to \"View Source\" code see the loader file and read that so make sure you minimize the code i use Google Closure Compiler (http://closure-compiler.appspot.com/home)</p>\n\n<p>even this does not stop them it just make it more difficult. one of the steps i have tested but dont use is on the loader and files your loading use a .HTAccess rule to check that they have a reffer link form your site this will prevent them browsing directly to your js/css code files</p>\n\n<p>another tip don't store them in normal places and don't use common names E.G scripts in /scripts/ CSS in /style/ or style.css </p>\n\n<p>Here is an example of the loader Closure Compiled then Obfuscated </p>\n\n<p><strong>Loader.js</strong></p>\n\n<pre><code>var _0xc596=[\"\\x68\\x65\\x61\\x64\",\"\\x73\\x63\\x72\\x69\\x70\\x74\",\"\\x63\\x72\\x65\\x61\\x74\\x65\\x45\\x6C\\x65\\x6D\\x65\\x6E\\x74\",\"\\x74\\x79\\x70\\x65\",\"\\x74\\x65\\x78\\x74\\x2F\\x6A\\x61\\x76\\x61\\x73\\x63\\x72\\x69\\x70\\x74\",\"\\x61\\x74\\x74\\x72\",\"\\x73\\x72\\x63\",\"\\x6C\\x6F\\x61\\x64\\x65\\x64\",\"\\x6C\\x6F\\x61\\x64\\x65\\x72\",\"\\x61\\x70\\x70\\x65\\x6E\\x64\",\"\\x6C\\x69\\x6E\\x6B\",\"\\x72\\x65\\x6C\",\"\\x73\\x74\\x79\\x6C\\x65\\x73\\x68\\x65\\x65\\x74\",\"\\x74\\x65\\x78\\x74\\x2F\\x63\\x73\\x73\",\"\\x68\\x72\\x65\\x66\",\"\\x73\\x74\\x79\\x6C\\x65\",\"\\x63\\x73\\x73\",\"\\x70\\x61\\x74\\x68\\x2F\\x74\\x6F\\x2F\\x79\\x6F\\x75\\x72\\x2E\\x63\\x73\\x73\",\"\\x70\\x61\\x74\\x68\\x2F\\x74\\x6F\\x2F\\x73\\x63\\x72\\x69\\x70\\x74\\x2E\\x6A\\x73\",\"\\x75\\x6E\\x6C\\x6F\\x61\\x64\\x65\\x72\\x2E\\x6A\\x73\"];(function (_0x76e5x1){function _0x76e5x2(_0x76e5x2,_0x76e5x3){var _0x76e5x4=_0x76e5x1(_0xc596[0])[0];switch(_0x76e5x2){case _0xc596[1]:var _0x76e5x5=_0x76e5x1(document[_0xc596[2]](_0xc596[1]));_0x76e5x5[_0xc596[5]](_0xc596[3],_0xc596[4]);_0x76e5x5[_0xc596[5]](_0xc596[6],_0x76e5x3);_0x76e5x5[_0xc596[5]](_0xc596[7],_0xc596[8]);_0x76e5x1(_0x76e5x4)[_0xc596[9]](_0x76e5x5);;case _0xc596[15]:_0x76e5x5=_0x76e5x1(document[_0xc596[2]](_0xc596[10]));_0x76e5x5[_0xc596[5]](_0xc596[11],_0xc596[12]);_0x76e5x5[_0xc596[5]](_0xc596[3],_0xc596[13]);_0x76e5x5[_0xc596[5]](_0xc596[7],_0xc596[8]);_0x76e5x5[_0xc596[5]](_0xc596[14],_0x76e5x3);_0x76e5x1(_0x76e5x4)[_0xc596[9]](_0x76e5x5);;} ;} ;_0x76e5x2(_0xc596[16],_0xc596[17]);_0x76e5x2(_0xc596[1],_0xc596[18]);_0x76e5x2(_0xc596[1],_0xc596[19]);} )(jQuery);\n</code></pre>\n\n<p><strong>unloader.js</strong></p>\n\n<pre><code>var _0xc2fb=[\"\\x72\\x65\\x6D\\x6F\\x76\\x65\",\"\\x68\\x65\\x61\\x64\\x20\\x2A\\x5B\\x6C\\x6F\\x61\\x64\\x65\\x64\\x3D\\x6C\\x6F\\x61\\x64\\x65\\x72\\x5D\"];(function (_0x3db3x1){_0x3db3x1(_0xc2fb[1])[_0xc2fb[0]]();} )(jQuery);\n</code></pre>\n\n<p>to reproduce of to: <a href=\"http://closure-compiler.appspot.com/home\" rel=\"nofollow\">http://closure-compiler.appspot.com/home</a> put your code in under the // ADD YOUR CODE HERE</p>\n\n<p>Then the result that is given back use: <a href=\"http://www.javascriptobfuscator.com/Default.aspx\" rel=\"nofollow\">http://www.javascriptobfuscator.com/Default.aspx</a> to make it even more unreadable.</p>\n\n<p>Hope this helps any one else looking to make the JS as Secure as possible</p>\n\n<p>But please remember as every one else has said this will not stop the pro hackers just make it very difficult to read and understand</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there some way to make Firebug not work at all on a website?</p>\n",
            "last_activity_date": 1339170788,
            "question_id": 2877663,
            "score": 13,
            "tags": [
                "javascript",
                "html",
                "css",
                "firefox",
                "firebug"
            ],
            "title": "Is there a way to stop Firebug from working on a particular site?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Yes, there is <a href=\"http://sylvester.jcoglan.com/\" rel=\"nofollow\">Sylvester</a>,  a JavaScript library designed to let you do mathematics with vectors and matrices without having to write lots of loops.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>What are you looking for when you ask for integrals and derivatives?  Numerical or symbolic?  Indefinite or definite?  Single-variable or multivariate?  Etc.</p>\n\n<p>It's actually not hard to write a program to do symbolic differentiation, though simplification and display is far from simple (contrary, perhaps, to intuition).  Similarly, numerical differentiation and numerical definite integration is simple enough, depending on how much precision you need.  (If you need a little it's easy; if you need a fair bit and are doing many operations, you need some serious numerical analysis (math) to make it work; if you need lots of precision you need a bignum library so JS isn't that great.)</p>\n\n<p>'Of course' symbolic integration is extremely difficult in any language. Your best bet in that case would be to query a site like Wolfram|alpha...</p>\n\n<p>If you need clarification or expansion on any of these points, let me know.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>With thanks to Charles and luvieere for their responses, I guess that there aren't any libraries that do what I want to do. In that spirit, I have started on my own library called <a href=\"http://github.com/pr1001/MathPlus\" rel=\"nofollow\">MathPlus</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I know this is an old question, but it's worth noting that some people have been doing automated conversions of physics libraries over from ActionScript to JS (using eg. Python for the parsing). I'm not saying it's an easy task, but it has to be easier than writing your own math libraries from scratch, so I guess this may be a possibility for some.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Say, I know that this is an older post, but there is a newer javascript math library for more advanced mathematics. The library is the <a href=\"http://numericjs.com/numeric/index.php\" rel=\"nofollow\">numeric.js</a> library. You have all sorts of PDE, ODE solvers as well as vector mathematics. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A fast search for local minima &amp; maxima and differentiation &amp; integration of lists of function values you can do with <a href=\"https://github.com/balint42/diff.js\" rel=\"nofollow\">diff.js</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Are there any libraries knocking around that provide any additional general purpose math functions for Javascript? Say things like sums over a range, derivatives, integrals, etc. I can imagine that many things aren't possible, so even libraries that do rough approximations would be interesting.</p>\n\n<p>Thanks!</p>\n\n<p><strong>Update:</strong> As mentioned below, I guess that there aren't any libraries that do what I want to do. In that spirit, I have started on my own library called <a href=\"http://github.com/pr1001/MathPlus\">MathPlus</a>.</p>\n",
            "last_activity_date": 1415923445,
            "question_id": 2870215,
            "score": 13,
            "tags": [
                "javascript",
                "math"
            ],
            "title": "Are there any (somewhat) advanced mathematics Javascript libraries?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can't change the zIndex of an OverlayView (it has no such property), but it holds panes that contains DOM nodes. That's where you can use the z-index property;</p>\n\n<pre><code>...\nlngLatXYposition = $.view.overlay.getPanes().overlayLayer.style['zIndex'] = 1001;\n...\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Setting z-index to 104 for the overLay layer seems to be the \"magic\" number\" if you care about interacting with the markers (i.e. dragging markers).  Any higher than 104 and you can not interact with the markers.  Wondering if there is a less brittle solution... </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If anyone was having the same problem as I was, here is my problem and solution:</p>\n\n<p>I needed an OverlayView which would add tooltips to markers, but my popup overlay kept showing <em>behind</em> the markers.</p>\n\n<p>I implemented a subclass of the OverlayView as per the Google documentation:\n<a href=\"https://developers.google.com/maps/documentation/javascript/overlays#SubClassing\">https://developers.google.com/maps/documentation/javascript/overlays#SubClassing</a></p>\n\n<p>When you write your custom <code>OverlayView.prototype.onAdd</code> function, you need to specify to which Pane to attach your overlay. I just copied the code without actually reading the surrounding explanation.</p>\n\n<p>In their code, they attach the overlay to the <code>overlayLayer</code> pane:</p>\n\n<pre><code>var panes = this.getPanes();\npanes.overlayLayer.appendChild(div);\n</code></pre>\n\n<p>But there are many different MapPanes you can use:</p>\n\n<blockquote>\n  <p>\"The set of panes, of type MapPanes, specify the stacking order for different layers on\n   the map. The following panes are possible, and enumerated in the order in which they are stacked from bottom to top:\"</p>\n</blockquote>\n\n<ul>\n<li>MapPanes.mapPane</li>\n<li>MapPanes.overlayLayer</li>\n<li>MapPanes.overlayShadow</li>\n<li>MapPanes.overlayImage</li>\n<li>MapPanes.floatShadow</li>\n<li>MapPanes.overlayMouseTarget</li>\n<li>MapPanes.floatPane</li>\n</ul>\n\n<p>I wanted the overlay to hover over all other info on the map, so I used the <code>floatPane</code> pane and problem solved.</p>\n\n<p>So, instead of :</p>\n\n<pre><code>this.getPanes().overlayLayer.appendChild(div)\n</code></pre>\n\n<p>you use this :</p>\n\n<pre><code>this.getPanes().floatPane.appendChild(div);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p><strong>Use  panes.overlayMouseTarget.appendChild</strong></p>\n\n<p>If you want to allow your layer to be targetable through mouse clicks (and use events such as \"click\" or CSS pseudo ::hover) then you should add your overlay to the map using  <code>overlayMouseTarget</code></p>\n\n<blockquote>\n  <p>var panes = this.getPanes();</p>\n  \n  <p>panes.overlayMouseTarget.appendChild(this.div_);</p>\n</blockquote>\n\n<p>Also see: \n<a href=\"https://developers.google.com/maps/documentation/javascript/reference?csw=1#MapPanes\" rel=\"nofollow\">https://developers.google.com/maps/documentation/javascript/reference?csw=1#MapPanes</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to get an overlay in google maps api v3 to appear above all markers. But it seems that the google api always put my overlay with lowest z-index priority. Only solution i've found is to iterate up through the DOM tree and manually set z-index to a higher value. Poor solution.</p>\n\n<p>I'm adding my a new div to my overlay with:</p>\n\n<pre><code> onclick : function (e) {\n     var index = $(e.target).index(),\n         lngLatXYposition = $.view.overlay.getProjection().fromLatLngToDivPixel(this.getPosition());\n         icon = this.getIcon(),\n         x = lngLatXYposition.x - icon.anchor.x,\n         y = lngLatXYposition.y - icon.anchor.y\n\n     $('&lt;div&gt;test&lt;/div&gt;').css({ left: x, position: 'absolute', top: y + 'px', zIndex: 1000 }).appendTo('.overlay');\n}\n</code></pre>\n\n<p>I've tried every property I could think of while creating my overlay. zIndex, zPriority etc.</p>\n\n<p>I'm adding my overlay with:</p>\n\n<pre><code>$.view.overlay = new GmapOverlay( { map: view.map.gmap });\n</code></pre>\n\n<p>And GmapOverlay inherits from  new google.maps.OverlayView.</p>\n\n<p>Any ideas?</p>\n\n<p>..fredrik</p>\n",
            "last_activity_date": 1401385448,
            "question_id": 2682626,
            "score": 13,
            "tags": [
                "javascript",
                "google-maps"
            ],
            "title": "z-Index overlay in google maps version 3"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>JQuery has the each() method:\n<a href=\"http://api.jquery.com/jQuery.each/\">http://api.jquery.com/jQuery.each/</a></p>\n\n<p>but probably there's something similar even in other libraries such as Moo or Dojo.</p>\n\n<p>Javascript 1.7 implements the Iterator function:\n<a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Iterators_and_Generators\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Iterators_and_Generators</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Ive used LINQ to Javascript in a few projects. </p>\n\n<p><a href=\"http://jslinq.codeplex.com/Wikipage\" rel=\"nofollow\">http://jslinq.codeplex.com/Wikipage</a></p>\n\n<pre><code>var myList = [\n            {FirstName:\"Chris\",LastName:\"Pearson\"},\n            {FirstName:\"Kate\",LastName:\"Johnson\"},\n            {FirstName:\"Josh\",LastName:\"Sutherland\"},\n            {FirstName:\"John\",LastName:\"Ronald\"},\n            {FirstName:\"Steve\",LastName:\"Pinkerton\"}\n            ];\n\nvar exampleArray = JSLINQ(myList)\n                   .Where(function(item){ return item.FirstName == \"Chris\"; })\n                   .OrderBy(function(item) { return item.FirstName; })\n                   .Select(function(item){ return item.FirstName; });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Ok, the enumerable pattern is not a real iterator then.</p>\n\n<p>Is this (below) useful for you? It conforms to the sematics you gave at least. As usual there are tradeoffs to be made here and there, and I didn't think very hard when deciding this time :).<br>\nAnd maybe you would like to be able to send in a number or two and iterate over a range in that way. But this could maybe be a start (there's support for iterating over hashes, arrays and strings).</p>\n\n<p>It's a whole demo page which runs itself and does some debug output, but the (possibly) interesting stuff is in the</p>\n\n<pre><code>window.npup = (function() {\n    [...]\n})();\n</code></pre>\n\n<p>spot.</p>\n\n<p>Maybe it is just me who doesn't get it at all, but what would you use such a java-like Iterator for in a real situation?</p>\n\n<p>Best\n/npup</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;untitled&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;ul id=\"output\"&gt;&lt;/ul&gt;\n\n\n&lt;script type=\"text/javascript\"&gt;\nwindow.log = (function (outputAreaId) {\n    var myConsole = document.getElementById(outputAreaId);\n    function createElem(color) {\n        var elem = document.createElement('li');\n        elem.style.color = color;\n        return elem;\n    }\n    function appendElem(elem) {\n        myConsole.appendChild(elem);\n    }\n    function debug(msg) {\n        var elem = createElem('#888');\n        elem.innerHTML = msg;\n        appendElem(elem);\n    }\n    function error(msg) {\n        var elem = createElem('#f88');\n        elem.innerHTML = msg;\n        appendElem(elem);\n    }\n    return {\n        debug: debug\n        , error: error\n    };\n})('output');\n\n\nwindow.npup = (function () {\n    // Array check as proposed by Mr. Crockford\n    function isArray(candidate) {\n        return candidate &amp;&amp;\n            typeof candidate==='object' &amp;&amp;\n            typeof candidate.length === 'number' &amp;&amp;\n            typeof candidate.splice === 'function' &amp;&amp;\n            !(candidate.propertyIsEnumerable('length'));\n    }\n    function dontIterate(collection) {\n        // put some checks chere for stuff that isn't iterable (yet)\n        return (!collection || typeof collection==='number' || typeof collection==='boolean');\n    }\n    function Iterator(collection) {\n        if (typeof collection==='string') {collection = collection.split('');}\n        if (dontIterate(collection)) {throw new Error('Oh you nasty man, I won\\'t iterate over that ('+collection+')!');}\n        var arr = isArray(collection);\n        var idx = 0, top=0;\n        var keys = [], prop;\n        if (arr) {top = collection.length;}\n        else {for (prop in collection) {keys.push(prop);}}\n        this.next = function () {\n            if (!this.hasNext()) {throw new Error('Oh you nasty man. I have no more elements.');}\n            var elem = arr ? collection[idx] : {key:keys[idx], value:collection[keys[idx]]};\n            ++idx;\n            return elem;\n        };\n        this.hasNext = function () {return arr ? idx&lt;=top : idx&lt;=keys.length;};\n    }\n    return {Iterator: Iterator};\n})();\n\nvar element;\n\nlog.debug('--- Hash demo');\nvar o = {foo:1, bar:2, baz:3, bork:4, hepp: {a:1,b:2,c:3}, bluff:666, bluff2:777};\nvar iterator = new npup.Iterator(o);\nfor (element = iterator.next(); iterator.hasNext(); element = iterator.next()) {\n    log.debug('got elem from hash: '+element.key+' =&gt; '+element.value);\n    if (typeof element.value==='object') {\n        var i2 = new npup.Iterator(element.value);\n        for (var e2=i2.next(); i2.hasNext(); e2=i2.next()) {\n            log.debug('&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# from inner hash: '+e2.key+' =&gt; '+e2.value);\n        }\n    }\n}\nlog.debug('--- Array demo');\nvar a = [1,2,3,42,666,777];\niterator = new npup.Iterator(a);\nfor (element = iterator.next(); iterator.hasNext(); element = iterator.next()) {\n    log.debug('got elem from array: '+ element);\n}\nlog.debug('--- String demo');\nvar s = 'First the pants, THEN the shoes!';\niterator = new npup.Iterator(s);\nfor (element = iterator.next(); iterator.hasNext(); element = iterator.next()) {\n    log.debug('got elem from string: '+ element);\n}\nlog.debug('--- Emptiness demo');\ntry {\n    log.debug('Try to get next..');\n    var boogie = iterator.next();\n}\ncatch(e) {\n    log.error('OW: '+e);\n}\n\nlog.debug('--- Non iterables demo');\ntry{iterator = new npup.Iterator(true);} catch(e) {log.error('iterate over boolean: '+e);}\ntry{iterator = new npup.Iterator(6);} catch(e) {log.error('iterate over number: '+e);}\ntry{iterator = new npup.Iterator(null);} catch(e) {log.error('iterate over null: '+e);}\ntry{iterator = new npup.Iterator();} catch(e) {log.error('iterate over undefined: '+e);}\n\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>I'm still a learner of js.class.\nThough being close to Ruby, helps me.</p>\n\n<p><a href=\"http://jsclass.jcoglan.com/enumerable.html\" rel=\"nofollow\">http://jsclass.jcoglan.com/enumerable.html</a></p>\n\n<p>MarkT</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is my attempt (<a href=\"http://jsfiddle.net/some/VprFp/\" rel=\"nofollow\">jsfiddle</a>) for ECMAScript 262 5th edition (aka Javascript). (Uses for example Object.keys and Array.isArray)</p>\n\n<pre><code>//Usage\nb=Iterator(a);\nwhile(b()){\n  console.log(b.value);\n}\n</code></pre>\n\n<p>The code:</p>\n\n<pre><code>function Iterator(input,keys) {\n  // Input:\n  //  input : object|array\n  //  keys   : array|undefined|boolean\n  function my() {\n    ++my.index;\n    if (my.index &gt;= my.keys.length) {\n      my.index = my.keys.length -1;\n      my.key = my.value = undefined;\n      return false;\n    }\n    my.key = my.useIndex ? my.index : my.keys[my.index];\n    my.value = my.input[my.key];\n    return my.index &lt; my.keys.length;\n  }\n  if (input === null || typeof input !== 'object') {\n    throw new TypeError(\"'input' should be object|array\");\n  }\n  if (\n    !Array.isArray(keys)\n    &amp;&amp; (typeof keys !== 'undefined')\n    &amp;&amp; (typeof keys !== 'boolean')\n    ) {\n    throw new TypeError(\"'keys' should be array|boolean|undefined\");\n  }\n  // Save a reference to the input object.\n  my.input = input;\n  if (Array.isArray(input)) {\n    //If the input is an array, set 'useIndex' to true if \n    //the internal index should be used as a key.\n    my.useIndex = !keys;\n    //Either create and use a list of own properties,\n    // or use the supplied keys\n    // or at last resort use the input (since useIndex is true in that\n    // case it is only used for the length)\n    my.keys = keys===true ? Object.keys(input) : keys || input;\n  } else {\n    my.useIndex = false;\n    my.keys = Array.isArray(keys) ? keys : Object.keys(input);\n  }\n  // Set index to before the first element.\n  my.index = -1;\n  return my;\n}\n</code></pre>\n\n<p>Examples:</p>\n\n<pre><code>function Person(firstname, lastname, domain) {\n  this.firstname = firstname;\n  this.lastname = lastname;\n  this.domain = domain;\n}\nPerson.prototype.type = 'Brillant';\n\nvar list = [\n  new Person('Paula','Bean','some.domain.name'),\n  new Person('John','Doe','another.domain.name'),\n  new Person('Johanna','Doe','yet.another.domain.name'),\n];\n\nvar a,b; \nvar data_array = ['A','B','C','D','E','F'];\ndata_array[10]=\"Sparse\";\n\n\nconsole.log('Iterate over own keys in an object, unknown order');\na = Iterator(list[0]);\nwhile(a()) console.log(\"  \",a.key, a.value);\n\nconsole.log('Iterate over keys from anywhere, in specified order');\na = Iterator(list[0], ['lastname','firstname','type']);\nwhile(a()) console.log(\"  \",a.key, a.value);\n\nconsole.log('Iterate over all values in an array');\na = Iterator(list);\nwhile(a()) console.log(a.key, a.value.firstname, a.value.lastname);\n\n\n//Some abusing, that works for arrays (if the iterator.keys is modified\n//it can also be used for objects)\nconsole.log('Add more entries to the array, reusing the iterator...');\nlist.push(new Person('Another','Name','m.nu'));\nwhile(a()) console.log(a.key, a.value.firstname, a.value.lastname);\n\nconsole.log('Reset index and print everything again...');\na.index=-1; //Reset the index.\nwhile(a()) console.log(a.key, a.value.firstname, a.value.lastname);\n\n//With arrays, if setting 'keys' to true it will only print the\n//elements that has values (If the array has more own enumerable values\n//they too will be included)\nconsole.log('Print sparce arrays...');\na = Iterator(data_array,true);\nwhile(a()) console.log(a.key, a.value);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Since this hasn't been mention yet arrays have higher-order functions built in.</p>\n\n<p>Map works like iterator that can only do a single pass. </p>\n\n<pre><code>[1,2,3,4,5].map( function(input){ console.log(input); } );\n</code></pre>\n\n<p>This code passes each element in the list into a function, in this case its a simple printer.</p>\n\n<pre><code>1\n2\n3\n4\n5\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Do you know a js library that implements a generic Iterator class for collections (be it Arrays or some abstract Enumerable) with a full set of features, like the <a href=\"http://google-collections.googlecode.com/svn/trunk/javadoc/com/google/common/collect/Iterators.html\">Google Common</a>  or the <a href=\"http://commons.apache.org/collections/api-release/org/apache/commons/collections/iterators/package-summary.html\">Apache Commons</a>?</p>\n\n<p>Edit: <code>Enumerable#each</code> is not an Iterator class. I'm looking for an Iterator, something that would let us write something like:</p>\n\n<pre><code>var iterator = new Iterator(myCollection);\nfor(var element = iterator.next(); iterator.hasNext(); element = iterator.next()) {\n    // iterator \n}\n</code></pre>\n\n<p>Edit : mamoo reminded us of the Iterator implementation in <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Iterators_and_Generators\">Mozilla's Javascript 1.7</a>. So the goal now is to find an implementation of this Iterator function in Javascript 1.5 (ECMA 4).</p>\n\n<p>Edit2 : Why using an iterator when librairies (and ECMA 5) provide a <code>each</code> method? First, because <code>each</code> usually messes with <code>this</code> because the callback is <code>call</code> -ed (that's why <code>each</code> accepts a second argument in Prototype). Then, because people are much more familiar with the <code>for(;;)</code> construct than with the <code>.each(callback)</code> construct (at least, in my field). Lastly, because an iterator can iterate over plain objects (see javascript 1.7).</p>\n\n<p>Edit3 : I accepted npup's anwser, but here is my shot at it :</p>\n\n<pre><code>function Iterator(o, keysOnly) {\n    if(!(this instanceof arguments.callee))\n      return new arguments.callee(o, keysOnly);\n    var index = 0, keys = [];\n    if(!o || typeof o != \"object\") return;\n    if('splice' in o &amp;&amp; 'join' in o) {\n        while(keys.length &lt; o.length) keys.push(keys.length);\n    } else {\n        for(p in o) if(o.hasOwnProperty(p)) keys.push(p);\n    }\n    this.next = function next() {\n        if(index &lt; keys.length) {\n            var key = keys[index++];\n            return keysOnly ? key : [key, o[key]];\n        } else throw { name: \"StopIteration\" };\n    };\n    this.hasNext = function hasNext() {\n        return index &lt; keys.length;\n    };\n}\n\n\n\nvar lang = { name: 'JavaScript', birthYear: 1995 };  \nvar it = Iterator(lang);\nwhile(it.hasNext()) {\n    alert(it.next());\n}\n//alert(it.next()); // A StopIteration exception is thrown  \n\n\nvar langs = ['JavaScript', 'Python', 'C++'];  \nvar it = Iterator(langs);\nwhile(it.hasNext()) {\n    alert(it.next());\n}\n//alert(it.next()); // A StopIteration exception is thrown  \n</code></pre>\n",
            "last_activity_date": 1357337044,
            "question_id": 2644966,
            "score": 13,
            "tags": [
                "javascript",
                "iterator"
            ],
            "title": "Javascript Iterator Class"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>How about something like this?</p>\n\n<p><code>&lt;input name=\"myvalue\" type=\"text\" onfocus=\"if(this.value=='enter value')this.value='';\" onblur=\"if(this.value=='')this.value='enter value';\"&gt;</code></p>\n\n<p>This will clear upon focusing the first time, but then won't clear on subsequent focuses after the user enters their value, when left blank it restores the given value.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To accomplish that, you can use the two events onfocus and onblur:</p>\n\n<pre><code>&lt;input type=\"text\" name=\"theName\" value=\"DefaultValue\"\n  onblur=\"if(this.value==''){ this.value='DefaultValue'; this.style.color='#BBB';}\"\n  onfocus=\"if(this.value=='DefaultValue'){ this.value=''; this.style.color='#000';}\"\n  style=\"color:#BBB;\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>What you want to do is use the HTML5 attribute <code>placeholder</code> which lets you set a default value for your input box:  </p>\n\n<p><code>&lt;input type=\"text\" name=\"inputBox\" placeholder=\"enter your text here\"&gt;</code>  </p>\n\n<p>This should achieve what you're looking for. However, be careful because the placeholder attribute is not supported in Internet Explorer 9 and earlier versions.</p>\n",
                    "is_accepted": false,
                    "score": 87
                },
                {
                    "body": "<p>try this one out.</p>\n\n<pre><code>&lt;label for=\"user\"&gt;user&lt;/label&gt;\n&lt;input type=\"text\" name=\"user\" \nonfocus=\"if(this.value==this.defaultValue)this.value=''\"    \nonblur=\"if(this.value=='')this.value=this.defaultValue\" \nvalue=\"username\" maxlength=\"19\" /&gt;\n</code></pre>\n\n<p>hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is as simple I think the solution that should solve all your problems:</p>\n\n<pre><code>&lt;input name=\"myvalue\" id=\"valueText\" type=\"text\" value=\"ENTER VALUE\"&gt;\n</code></pre>\n\n<p>This is your submit button:</p>\n\n<pre><code>&lt;input type=\"submit\" id= \"submitBtn\" value=\"Submit\"&gt;\n</code></pre>\n\n<p>then put this small jQuery in a js file:</p>\n\n<pre><code>//this will submit only if the value is not default\n$(\"#submitBtn\").click(function () {\n    if ($(\"#valueText\").val() === \"ENTER VALUE\")\n    {\n        alert(\"please insert a valid value\");\n        return false;\n    }\n});\n\n//this will put default value if the field is empty\n$(\"#valueText\").blur(function () {\n    if(this.value == ''){ \n        this.value = 'ENTER VALUE';\n    }\n}); \n\n //this will empty the field is the value is the default one\n $(\"#valueText\").focus(function () {\n    if (this.value == 'ENTER VALUE') {\n        this.value = ''; \n    }\n});\n</code></pre>\n\n<p>And it works also in older browsers. Plus it can easily be converted to normal javascript if you need.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Simple as this: <code>&lt;input type=\"text\" name=\"email\" value=\"e-mail...\" onFocus=\"this.value=''\"&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I can easily create a html input field that has text already in it. But when the user clicks on the input field the text doesn't disappears but stays there. The user then has to manually remove the text to type. How can I create an input field where when the user clicks on the input field box the text then disappear?</p>\n",
            "last_activity_date": 1424252448,
            "question_id": 1626107,
            "score": 13,
            "tags": [
                "javascript",
                "html",
                "user-interface",
                "javascript-events"
            ],
            "title": "Text in HTML Field to disappear when clicked?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can use eval(str)</p>\n\n<pre><code>eval('foo();');\n</code></pre>\n\n<p>use this with extreme caution.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Looks fine to me. I would probably create a simple helper function like following:</p>\n\n<pre><code>function runFunction(name, arguments)\n{\n    var fn = window[name];\n    if(typeof fn !== 'function')\n        return;\n\n    fn.apply(window, arguments);\n}\n\n//If you have following function\n\nfunction foo(msg)\n{\n    alert(msg);\n}\n\n//You can call it like\n\nrunFunction('foo', ['test']); //alerts test.\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>I personally wouldn't bother even with a helper function</p>\n\n<pre><code>  window[someKey]('test')\n</code></pre>\n\n<p>would be fine.</p>\n\n<p>However I wouldn't general maintain a set of possible functions to call at the global scope anyway.  Hence I would use a more general pattern:-</p>\n\n<pre><code> obj[someKey]('test')\n</code></pre>\n\n<p>where obj may be <code>this</code>, a property of this or variable from a closure.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can simply use it like this... (of course substitute the strings with variables where needed)</p>\n\n<pre><code>document[\"getElementById\"](\"elementName\")[\"style\"][\"border\"] = \"1PX SOLID GREEN\";\n</code></pre>\n\n<p>Which is also easily/usually typed like this of course...</p>\n\n<pre><code>document.getElementById(\"elementName\").style.border = \"1PX SOLID GREEN\";\n</code></pre>\n\n<p>Here's another multi-dimensional example...</p>\n\n<pre><code>var myObject = new Object();\nmyObject[\"myValue\"][\"one\"] = \"first value\";\nmyObject[\"myValue\"][\"two\"] = \"second value\";\nalert(myObject[\"myValue\"][\"two\"]); //outputs \"second value\"\n</code></pre>\n\n<p>Which could also be written as...</p>\n\n<pre><code>var myObject = new Object();\nmyObject[\"myValue\"] = {one: \"first value\", two: \"second value\"};\nalert(myObject[\"myValue\"][\"two\"]); //outputs \"second value\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have created a function to call a named function. It works both in browser and in Node.js. I have created a gist (<a href=\"https://gist.github.com/netsi1964/3f19bd96f2d6e18bd818\" rel=\"nofollow\">https://gist.github.com/netsi1964/3f19bd96f2d6e18bd818</a>) which also contains a small test. The fingerprint of the function is: <code>callFunction(scope, fn, args)</code>.\nIt sets the scope in the function to the specified scope, and defaults to <code>window</code> (in browser) and <code>global</code> (in Node.js).\nTo answer your original request you would use it like this:\n<code>callFunction(window, \"foo\",[\"test\"])</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've seen this technique for calling a Javascript function based on the value of a string variable.</p>\n\n<pre><code>function foo() {\n    alert('foo');\n}\n\nvar test = 'foo';\n\nwindow[test]();  //This calls foo()\n</code></pre>\n\n<p>Is this the accepted way to do it or is there a better way?  Any cross-browser issues to worry about?</p>\n",
            "last_activity_date": 1423908742,
            "question_id": 1144297,
            "score": 13,
            "tags": [
                "javascript",
                "function"
            ],
            "title": "Ways to call a Javascript function using the value of a string variable?"
        }
    ]
}
