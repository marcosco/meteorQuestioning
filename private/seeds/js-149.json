{
    "items": [
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Apart from writing the good people at Google and asking them to create grey-scale versions of all of their image tiles and an optional API parameter, no.</p>\n",
                    "is_accepted": false,
                    "score": -10
                },
                {
                    "body": "<p>IE has the <code>filter: gray</code> directive.</p>\n\n<p>It renders any HTML element in grayscale. JSFiddle <a href=\"http://jsfiddle.net/cTduB/2/\" rel=\"nofollow\">here</a>.</p>\n\n<p>You <em>may</em> be able to apply this to the map's parent DIV. It <em>may</em> turn the map it contains in to a grayscale represtenation. I can't say whether this will work without side effects - you'd have to try. But it's well possible.</p>\n\n<p>IE only, though, but supported since Version 4. </p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/ms533003%28VS.85%29.aspx\" rel=\"nofollow\">Grayscale Filter docs at MSDN</a> </p>\n\n<p>Other than that, I think there is a Flash API for Maps, isn't there? It might be easier to achieve there.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yes, in V3 of the api they have introduced <a href=\"http://code.google.com/apis/maps/documentation/javascript/maptypes.html#StyledMaps\"><code>StyledMaps</code></a>.</p>\n\n<p>They've even <a href=\"http://gmaps-samples-v3.googlecode.com/svn/trunk/styledmaps/wizard/index.html\">provided a tool</a> for you to generate the code for the styles you like. Slide the \"Saturation\" all the way down and you've got grayscale going on!</p>\n\n<p>The following example displays a grayscale map of Brooklyn:</p>\n\n<pre><code>var map;\nvar brooklyn = new google.maps.LatLng(40.6743890, -73.9455);\n\nvar stylez = [\n    {\n      featureType: \"all\",\n      elementType: \"all\",\n      stylers: [\n        { saturation: -100 } // &lt;-- THIS\n      ]\n    }\n];\n\nvar mapOptions = {\n    zoom: 11,\n    center: brooklyn,\n    mapTypeControlOptions: {\n         mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'tehgrayz']\n    }\n};\n\nmap = new google.maps.Map(document.getElementById(\"map_canvas\"), mapOptions);\n\nvar mapType = new google.maps.StyledMapType(stylez, { name:\"Grayscale\" });    \nmap.mapTypes.set('tehgrayz', mapType);\nmap.setMapTypeId('tehgrayz');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 83
                },
                {
                    "body": "<p>Just use <a href=\"https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\" rel=\"nofollow\">CSS3 grayscale()</a> filter effect for the Google maps iframe element! It works because the js code prints images.</p>\n\n<pre><code>iframe { \n  -webkit-filter: grayscale(100%);\n  -moz-filter: grayscale(100%);\n  -ms-filter: grayscale(100%);\n  -o-filter: grayscale(100%);\n  filter: grayscale(100%);\n  filter: url(grayscale.svg); /* Firefox 4+ */\n  filter: gray; /* IE 6-9 */\n}\n</code></pre>\n\n<p>Try also to target <strong>only the background images</strong> by applying this to the very first div element under the <code>div.gm-style</code> (or any other wrapper). I don't know if Google changes the dom structure often but at the moment speaking (25 Nov 2014) this works fine.</p>\n\n<pre><code>iframe .gm-style &gt; div:first-child {\n  // Same code here\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Yes, there is a third party API for Google maps that provides gray-scale (snazzymaps).</p>\n\n<p>Its very simple. You can use this website to get the different color scheme for google maps.</p>\n\n<p><a href=\"http://snazzymaps.com\" rel=\"nofollow\">http://snazzymaps.com</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Check out this:</p>\n\n<p><a href=\"http://snazzymaps.com/style/15/subtle-grayscale\" rel=\"nofollow\">http://snazzymaps.com/style/15/subtle-grayscale</a></p>\n\n<p>Works like a charm :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there any way to display a Google Map (embedded via the Javascript API) in grayscale without losing any other functionality?</p>\n",
            "last_activity_date": 1416913803,
            "question_id": 4003578,
            "score": 31,
            "tags": [
                "javascript",
                "google-maps"
            ],
            "title": "Google Maps in Grayscale"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>For mocking ajax requests, you can try something like this...</p>\n\n<p>Here's the function you want to test:</p>\n\n<pre><code>    var functionToTest = function () {\n        $.ajax({\n            url: 'someUrl',\n            type: 'POST',\n            dataType: 'json',\n            data: 'foo=1&amp;foo=2&amp;foo=3',\n            success: function (data) {\n                $('#main').html(data.someProp);\n            }\n        });\n    };\n</code></pre>\n\n<p>Here's the test case:</p>\n\n<pre><code>    test('ajax mock test', function () {\n        var options = null;\n        jQuery.ajax = function (param) {\n            options = param;\n        };\n        functionToTest();\n        options.success({\n            someProp: 'bar'\n        });\n        same(options.data, 'foo=1&amp;foo=2&amp;foo=3');\n        same($('#main').html(), 'bar');\n    });\n</code></pre>\n\n<p>It's essentially overriding jQuery's ajax function and then checks the following 2 things:\n- the value that was passed to the ajax function\n- invokes the success callback and asserts that it did what it was supposed to do</p>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<p>See this link to mock the getJSON call in your setup/teardown methods,\n<a href=\"http://www.ajaxprojects.com/ajax/tutorialdetails.php?itemid=505\" rel=\"nofollow\">http://www.ajaxprojects.com/ajax/tutorialdetails.php?itemid=505</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I just started using <a href=\"http://sinonjs.org/\">Sinon.JS</a>, which allows mocking of XMLHttpRequests and also offers a simple fake-server API. Really easy to use! It also offers integration with qunit.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Instead of overriding jQuery's AJAX function, you could also use the jQuery Mockjax plugin developed by .appendTo. This plugin essentially does what the other answer suggests, but it allows for much more sophisticated mocking. For example, if you have the function:</p>\n\n<pre><code>$.ajax({\n    url:\"/api/user\",\n    type:\"GET\",\n    dataType:\"json\",\n    data:'{\"uid\":\"foobar\"}',\n    success:function(data){\n        console.log(\"Success!\");\n    },\n    error:function(data){\n        console.log(\"Error!\");\n    }\n});\n</code></pre>\n\n<p>You can mock it with mockjax by simply calling the function mockjax, which is automatically included in jQuery:</p>\n\n<pre><code>$.mockjax({\n    url:\"/api/user\",\n    type:\"GET\",\n    response:function(requestData){\n         //handle the mock response in here\n         this.responseText = '{\"fullname\":\"Mr. Foo Bar\"}';\n    }\n});\n</code></pre>\n\n<p>The second mocking function can be included in an external JavaScript file, say \"mocks.js,\" and the only other thing that needs to be done is include the mockjax library (which can be found at <a href=\"https://github.com/appendto/jquery-mockjax/\">https://github.com/appendto/jquery-mockjax/</a>). The only thing to keep in mind is that this will only mock jQuery ajax calls, not all XMLHttpRequests. If you want to do that, then follow @bertvh's advice and use Sinon.js.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>There is my implementation of addon which allows to parameterize qunit tests:\n<a href=\"https://github.com/AStepaniuk/qunit-parameterize\" rel=\"nofollow\">https://github.com/AStepaniuk/qunit-parameterize</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have two questions:<br />\nCan you have parameterised unit tests in qunit?</p>\n\n<p>How do you do mocking with qunit e.g. mocking a getJSON call?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1364971429,
            "question_id": 522437,
            "score": 31,
            "tags": [
                "javascript",
                "qunit"
            ],
            "title": "Qunit parameterized tests and mocking"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Basically, you're not going to do any better.\nAll it is doing is calling attachEventListener() on each of your selected elements.</p>\n\n<p>On parse time alone, this method is probably quicker than setting inlined event handlers on each element.</p>\n\n<p>Generally, I would consider this to be a very inexpensive operation.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>There are two things that can make your event binding code slow: the selector and the # of bindings. The most critical of the two is the # of bindings, but the selector could impact your initial performance.</p>\n\n<p>As far as selectors go, just make sure you don't use pure class name selectors like <code>.myclass</code>. If you know that the class of <code>myclass</code> will always be in a <code>&lt;div&gt;</code> element, make your selector be <code>div.myclass</code> as it will help jQuery find the matching elements faster. Also, don't take advantange of jQuery letting you give it huge selector strings. Everything it can do with string selectors it can also do through functions, and this is intentional, as it is (marginally, admittedly) faster to do it this way as jQuery doesn't have to sit around to parse your string to figure out what you want. So instead of doing <code>$('#myform input:eq(2)');</code> you might do <code>$('input','#myform').eq(2);</code>. By specifying a context, we are also not making jQuery look anywhere it doesn't have to, which is much faster. <a href=\"http://stackoverflow.com/questions/879123/what-is-the-most-efficient-way-to-access-dom-elements-in-jquery\">More on this here</a>.</p>\n\n<p>As far as the amount of bindings: if you have a relatively medium-sized amount of elements then you should be fine - anything up to 200, 300 potential element matches will perform fine in modern browsers. If you have more than this you might want to instead look into Event Delegation.</p>\n\n<p>What is Event Delegation? Essentially, when you run code like this:</p>\n\n<pre><code>$('div.test').click(function() {\n    doSomething($(this));\n});\n</code></pre>\n\n<p>jQuery is doing something like this behind the scenes (binding an event for each matched element):</p>\n\n<pre><code>$('div.test').each(function() {\n    this.addEventListener('click', function() {\n        doSomething(this);\n    }, false);\n});\n</code></pre>\n\n<p>This can get inefficient if you have a large amount of elements. With event delegation, you can cut down the amount of bindings done down to one. But how? The event object has a <code>target</code> property that lets you know what element the event acted on. So you could then do something like this:</p>\n\n<pre><code>$(document).click(function(e) {\n    var $target = $(e.target);\n    if($target.is('div.test')) { // the element clicked on is a DIV\n                                 // with a class of test\n       doSomething($target);\n    }\n});\n</code></pre>\n\n<p>Thankfully you don't actually have to code the above with jQuery. The <a href=\"http://docs.jquery.com/Events/live#typefn\">live</a> function, which is advertised as an easy way to bind events to elements that do not yet exist, is actually able to do this by using event delegation and checking at the time an action occurs if the target matches the selector you specify to it. This has the side effect, of course, of being very handy when speed is important.</p>\n\n<p>The moral of the story? If you are concerned about the amount of bindings your script has just replace <code>.bind</code> with <code>.live</code> and make sure you have smart selectors.</p>\n\n<p>Do note, however, that not all events are supported by <code>.live</code>. If you need something not supported by it, you can check out the <a href=\"http://docs.jquery.com/Plugins/livequery\">livequery</a> plugin, which is live on steroids.</p>\n",
                    "is_accepted": true,
                    "score": 65
                }
            ],
            "body": "<p>I just wrote a $().bind('event') function and then got concerned that this kind of a call might be very expensive if jQuery has to run through each element in the DOM to bind this event.</p>\n\n<p>Or maybe, it's just about as efficient as an event could be. The jQuery docs I've read aren't making this clear. Any opinions?</p>\n",
            "last_activity_date": 1244662449,
            "question_id": 905883,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "performance",
                "events"
            ],
            "title": "Is binding events in jQuery very expensive, or very inexpensive?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Not exactly sure whether this would work in your code as you have $resource integration.\nBut it may be worth to look into angular events: <code>$routeChangeStart</code> and <code>$routeChangeSuccess</code>.</p>\n\n<p>in html:</p>\n\n<pre><code>&lt;span ng-show=\"isViewLoading\"&gt; loading the view... &lt;span&gt;\n</code></pre>\n\n<p>in controller (which defines the scope of the html above):</p>\n\n<pre><code>$scope.isViewLoading = false;\n$scope.$on('$routeChangeStart', function() {\n  $scope.isViewLoading = true;\n});\n$scope.$on('$routeChangeSuccess', function() {\n  $scope.isViewLoading = false;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 41
                },
                {
                    "body": "<p>The routing system for angular seems to be a bit limited.. \n<br/><br/>This solved it for me:\n<br/><a href=\"http://www.bennadel.com/blog/2420-Mapping-AngularJS-Routes-Onto-URL-Parameters-And-Client-Side-Events.htm\" rel=\"nofollow\">http://www.bennadel.com/blog/2420-Mapping-AngularJS-Routes-Onto-URL-Parameters-And-Client-Side-Events.htm</a></p>\n\n<p>Also, about the events triggering twice: if you setup a route do map to \"a/b/c\" angular automatically sets up another route, \"a/b/c/\" (with trailing slash) to redirect to the first (and vice versa), and both trigger events. I just test for a presence of route parameters.</p>\n\n<p>Regarding the limited condition of the routing sistem: there is <a href=\"https://github.com/angular/angular.js/pull/1198\" rel=\"nofollow\">this pull</a> from angular, to extend it's capabilities.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I like the <code>ng-show</code>... But the <code>ui-if</code> of the Angular UI project is better IMHO.. Since remove the HTML code from the DOM...</p>\n\n<pre><code>&lt;span ui-if=\"isViewLoading\"&gt; loading the view... &lt;span&gt;\n</code></pre>\n\n<p>_e</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can also use the ng-show directive. Simply check whether you model is empty and display a DOM subset like so:</p>\n\n<pre><code>    &lt;!-- model not ready --&gt;\n    &lt;div style=\"width: 200\" ng-show=\"lines == ''\"&gt;\n      &lt;div class=\"progress progress-striped active\"&gt;\n         &lt;div class=\"bar\" style=\"width: 0%;\"&gt;&lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;!-- your model code --&gt;\n    &lt;ul class=\"nav nav-tabs nav-stacked\"&gt;\n      &lt;li ng-repeat=\"line in lines\"&gt;\n        {{line.Id}}\n      &lt;/li&gt;\n    &lt;/ul&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can create a directive that will show based on a broadcast that you send before and after a service call, which you could put on $rootScope. So if you're calling a factory to handle dishing out generic POST/GET calls then right before the call you can call a function on $rootScope, such as \"$rootScope.startLoading()\" and when it finishes call \"$rootScope.doneLoading()\", where each of these methods broadcast an event for you to pick up on your directive. Then you just handle on your directive to catch the events, \"scope.$on(\"startLoading\", func(...\" and have it insert/show a loading div template into the DOM and run, then also have a catch for done loading to remove/hide it.</p>\n\n<p>That way you can have a nice general loading overlay.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You will want to use the <code>$rootScope</code> because monitoring a controller's <code>$scope</code> is limited to the controller, and as it happens you're switching from one view (one controller) to another view (another controller). So it would make sense to have one-code-fit-all.</p>\n\n<pre><code>$rootScope.$on('$stateChangeStart', \nfunction(event, toState, toParams, fromState, fromParams){ ... })\n</code></pre>\n\n<p>In that function set the <code>$rootScope.isLoadingState</code> which will display your loading indicator.</p>\n\n<p>Then use</p>\n\n<pre><code>$rootScope.$on('$stateChangeSuccess', \nfunction(event, toState, toParams, fromState, fromParams){ ... })\n</code></pre>\n\n<p>To unset that variable.</p>\n\n<p>Complete reference <a href=\"https://github.com/angular-ui/ui-router/wiki#state-change-events\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The following code reads via a service and shows on the web page a list of 'page' objects for a specific 'page category' (string). Using the resolve object property in $routeProvider.when(), I am able to postpone updating the view until the new value is ready. </p>\n\n<p>Two questions:</p>\n\n<ol>\n<li><p>When asking for a new page list, I want to show a loading-icon. How can I detect (in a non-hackish way) the event when the reading from server starts (and the loading-icon should be displayed)? I guess I could do something like $('.pages-loading-icon').show() in the service, but find that to be too gui dependent too placed in the service.</p></li>\n<li><p>When the new value is ready, I would like the old to fade out and the new to fade in. What is the 'angular' way to do this? I have tried to do it in the controller using $watch, but that causes the new value to be display shortly before the fadeout starts.</p></li>\n</ol>\n\n<p>The code:</p>\n\n<p><strong>app.js:</strong></p>\n\n<pre><code>$routeProvider.when('/:cat', { templateUrl: 'partials/view.html', controller: RouteCtrl, resolve: RouteCtrl.resolve});\n</code></pre>\n\n<p><strong>controllers.js:</strong></p>\n\n<pre><code>function RouteCtrl($scope, $routeParams, pages) {\n        $scope.params = $routeParams;\n        $scope.pages = pages;\n    }\n\nRouteCtrl.resolve={\n    pages: function($routeParams, Pages){\n        if($routeParams.hasOwnProperty('cat')){\n            return Pages.query($routeParams.cat);\n        }\n    }\n}\n</code></pre>\n\n<p><strong>services.js:</strong>\nThe last pages read is stored in currentPages and its category in lastCat.</p>\n\n<pre><code>factory('Pages', function($resource, $q, $timeout){\n    return {\n        res: $resource('jsonService/cat=:cat', {}, {\n            query: {method:'GET', params:{cat:'cat'}, isArray:true}\n        }),\n        lastCat: null,\n        currentPages: null,\n        query: function(cat) {\n            var res = this.res;\n            if(cat != this.lastCat){\n                var deferred = $q.defer();\n                var p = res.query({'cat':cat}, function(){\n                    deferred.resolve(p);\n                });\n                this.lastCat = cat;\n                this.currentPages = deferred.promise;\n            }\n            return this.currentPages;\n        }\n    };\n})\n</code></pre>\n\n<p><strong>view.html</strong></p>\n\n<pre><code>&lt;ul &gt;\n    &lt;li ng-repeat=\"page in pages\"&gt;\n        &lt;a href=\"#{{params.cat}}/{{page.slug}}\"&gt;{{page.title}}&lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n",
            "last_activity_date": 1396727114,
            "question_id": 12352411,
            "score": 27,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Angularjs: How to display loading-icon when using &#39;resolve&#39; in $routeProvider?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Of course you can do just fine with <a href=\"http://www.getfirebug.com\">Firebug</a>, the console and the scripts tab where you can add breakpoints and watches, but you want to do it smarter / easier obviously.</p>\n\n<p>There is a neat Firebug plugin called <a href=\"http://www.softwareishard.com/blog/firebug/eventbug-alpha-released/\">EventBug</a> that just logs all the events and groups them by event type so you can expand and see what triggered them. </p>\n\n<p><img src=\"http://i.stack.imgur.com/6Cuee.png\" alt=\"EventBug Screenshot\"></p>\n\n<p>EventBug doesn't do it realtime, you have to refresh though.</p>\n\n<p>One other way is to use the 'Log Events' feature against any DOM element in Firebug. This does do it realtime and you can see what order events are fired / triggered as well.</p>\n\n<p>Try this:</p>\n\n<ul>\n<li>Toggle open Firebug</li>\n<li>Right click the element in HTML tab, if you want to see all events then right click <code>&lt;body&gt;</code></li>\n<li>Choose <code>Log Events</code> from the context menu</li>\n<li>Make sure the Console tab is enabled</li>\n<li>Click to enable the 'Persist' mode in the Console tab (otherwise Console tab will clear after the page is reloaded)</li>\n<li>You may have to select <code>Closed</code> (manually)</li>\n<li>Voila! watch events stream in the console tab</li>\n</ul>\n\n<p>This is what you see with Log Events:</p>\n\n<p><img src=\"http://i.stack.imgur.com/hyLld.png\" alt=\"enter image description here\"></p>\n\n<p>Also worth trying the <a href=\"http://firequery.binaryage.com/\">FireQuery</a> add-on for Firebug to see what elements in the DOM have jQuery events attached to them and what they are.</p>\n\n<p>And as benvie's answer mentions, this is possible in webkit's developer tools as well.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>This doesnt exist in Firebug I believe, and the underlying problem is lack of support or lack of exposure at the api level. Alternatively, there's only a few ways to subscribe to DOM events: Element.prototype.addEventListener (and window.addEventListener and document.addEventListener and XMLHttpRequest.addEventListener and some others) aside from 'onevent' properties which are observable and interceptable.</p>\n\n<p>But realistically, the WebKit debugger and Chromium's debugger (which is webkit's with extra points) allow one to debug and observe attached listeners. Sometimes it's easier to debug one browsers's bugs in another browser with better exposure of application/runtime state, even when that browser doesn't exhibit the bug.</p>\n\n<p><img src=\"http://i.stack.imgur.com/OF7bT.png\" alt=\"enter image description here\"></p>\n\n<p><a href=\"https://developers.google.com/chrome-developer-tools/docs/elements\" rel=\"nofollow\">https://developers.google.com/chrome-developer-tools/docs/elements</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm trying to debug a webpage that makes heavy use of JavaScript events, and so I need to monitor all JavaScript events that are fired.</p>\n\n<p>Most of the events are bound using jQuery. Hence, it would be particularly useful if there was a way to specifically monitor only those events.</p>\n",
            "last_activity_date": 1421612512,
            "question_id": 11097234,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events",
                "firefox-addon",
                "javascript-debugger"
            ],
            "title": "Using Firefox, how can I monitor all JavaScript events that are fired?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I found a solution after wondering why IE doesn't suffer from this problem.</p>\n\n<p>Firefox and Chrome/Safari triggers the <code>DOMContentLoaded</code> event before font-face is applied, thus causing the problem. </p>\n\n<p>The solution is to not listen for <code>DOMContentLoaded</code> but instead go oldschool and listen to <code>onreadystatechange</code> and wait until the <code>document.readyState === 'complete'</code> which is always triggered after font-face is applied (as far as I can tell by my tests) - which is of course what always happens in IE since it doesn't support <code>DOMContentLoaded</code>.</p>\n\n<p>So basically you can roll-your-own event in jQuery called <code>fontfaceapplied</code> - maybe it should be built in ;)</p>\n\n<pre><code>document.onreadystatechange = function() {\n    if (document.readyState === 'complete') \n        $(document).trigger('fontfaceapplied');\n};\n</code></pre>\n\n<p>Funny fact: Opera does it <em>right</em> and waits to trigger <code>DOMContentLoaded</code> until font-face is applied.</p>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>Setting the function to trigger after a timeout of 200ms solves this issue when using Google Fonts.</p>\n\n<p>There's a noticeable jump, but there usually is for equal heights stuff, for the purists this might not be perfect but it works cross browser.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am currently building a corporate website for a customer that uses custom fonts extensively.</p>\n\n<p>On jQuerys DOM-ready I am doing placement calculations to figure out where some pop-up menus with dynamic width and height should be placed based on their dynamic contents.</p>\n\n<p>These calculations fail, since DOM-ready is fired before font-face is applied, and thus widths and heights are incorrect.</p>\n\n<p>Right now (for the prototype) i am doing the calculations 500ms after DOM-ready to alleviate this problem, but this can't go into production for obvious reasons.</p>\n\n<p>The problem has been observed in latest Firefox and chrome. IE 8 doesn't seem to have the problem, but then DOM-ready fires fairly late, so the delay is kind of built in I guess :)</p>\n\n<p>Waiting for the load event is not an option, so my question to you is this: </p>\n\n<p>Is there a reliable cross-browser way to detect when font-face has been applied?</p>\n",
            "last_activity_date": 1396005451,
            "question_id": 6677181,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "font-face",
                "domready"
            ],
            "title": "How to know when font-face has been applied"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>In short : </p>\n\n<p>Define some methods (Meteor.methods) in the files pushed to the sever that will do actual work on the server, define some methods (Meteor.methods) in the files pushed to the client to get an 'instant' behavior on the client (such as a loading indicator) until the server pushes the resulting changes back to the client</p>\n\n<p>Here's David's original post :</p>\n\n<blockquote>\n  <p>Hi Ben,</p>\n  \n  <p>In principle, a method can perform completely different actions on the\n  client and server, for example showing a loading indicator on the\n  client and talking to a remote API on the server.  Calls to\n  Meteor.methods on the client define the client behavior, and calls to\n  Meteor.methods on the server define the server behavior.</p>\n  \n  <p>For methods that operate on the database, often the same\n  implementation will do for both.  The client version affects the\n  client-side database (the browser-side \"cache\" of documents subscribed\n  to) and the server-side version affects the real database.  When the\n  client hears back, it \"snaps\" to the result of the server-side\n  mutations; the client-side database mutations are discarded (or\n  undone, depending on how you think about it).  If a client-side method\n  calls other methods, these secondary calls are <em>not</em> remoted to the\n  server.  The server-side version will either call the same methods on\n  the server, or not, as it sees fit.</p>\n  \n  <p>So any client-side method impl you provide is just a \"simulation\" and\n  doesn't have to be accurate (it may not be able to be).  The hope is\n  that you typically get the simulation impl for free because it's the\n  same as the server impl!</p>\n  \n  <p>Does this answer your question?</p>\n  \n  <p>-- David</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>here's another example.</p>\n\n<p>say you're writing a bingo game and you click the button to call \"house!\".. in the click event you might call a Method, e.g.</p>\n\n<pre><code>Method.call(\"callHouse\");\n</code></pre>\n\n<p>this will invoke the server method:</p>\n\n<pre><code>// on the server\nMeteor.methods({\n  callHouse: function () {\n    if (currentGame.isInProgress) {\n      currentGame.winner = this.userId;\n      currentGame.end();\n    }\n  }\n});\n</code></pre>\n\n<p>if you are the first to call \"house\", the method will mark you as the winner.. however, let's pretend the method is extremely slow and your client app is waiting.. you're 99% sure the server will confirm you are the winner - you just want to update the user's screen without the wait.. in this case implement a client-side stub:</p>\n\n<pre><code>// on the client\nMeteor.methods({\n  callHouse: function () {\n    currentGame.winner = Meteor.userId();\n    // add any other side-effects you expect to occur here\n  }\n});\n</code></pre>\n\n<p>when the server result returns, if the data returned is different to what you set in the stub, it will correct it and refresh the screen accordingly.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>If you define a method on a file shared by client/server like <code>/collections</code> wouldn't it be accessible to both and automatically stub? </p>\n\n<p>So:</p>\n\n<p><code>/collections/houses.js</code></p>\n\n<pre><code>Meteor.methods({\n  callHouse: function () {\n    if (currentGame.isInProgress) {\n      currentGame.winner = this.userId;\n      currentGame.end();\n    }\n  }\n});\n</code></pre>\n\n<p>This will be available to both the client and server. If it doesn't pass, the server will automatically reject the client update/revert it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As said Daniel you can define a method on a file which not in client or server directories and available on both sides. You can also use <code>isSimulation</code> boolean value to make additional checking. For example it may looks something like this:</p>\n\n<pre><code>Meteor.methods({\n  addMovie: function (movieData) {\n    if (!this.isSimulation) {\n      check(movieData, someAdditionaCheckinFunc);\n    }\n    Movies.insert(movieData);\n  }\n})\n</code></pre>\n\n<p>Thus code in the conditional branch will be executed on server only.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Using Meteor, I'm attempting to understand when to use server-side <code>Meteor.methods()</code> while still retaining instant UI updates. </p>\n\n<p>From Andrew Scala's <a href=\"http://andrewscala.com/meteor/\">introductory tutorial</a>, he claims that <code>Meteor.methods()</code> should be used when you want to update and modify your database documents: </p>\n\n<blockquote>\n  <p>The idea is that you define all the functions on the server that do\n  dangerous stuff like modify and update data, and then let the client\n  call those functions and get return values like regular functions. The\n  client never sees the implementation and doesn\u2019t personally modify the\n  data. The server does all the work.</p>\n</blockquote>\n\n<p>And following this advice, I implemented this in my code: </p>\n\n<p>Server-side: </p>\n\n<pre><code>Meteor.methods({\n\n  addMovie: function(data) {\n    var movie = Movies.insert({name: data});\n    return movie;\n  },\n\n  ...\n</code></pre>\n\n<p>Client-side: </p>\n\n<pre><code>Template.movies.events = ({\n\n  'click #add-movie': function(e) {\n\n    var name = document.getElementById('movie-name').value;\n    Meteor.call('addMovie', name);\n\n    return false;\n\n  }, \n\n  ...\n</code></pre>\n\n<p>This works, but it's slow. The UI doesn't update instantly like it would if you called <code>Movies.insert()</code> on the client-side. The <a href=\"http://docs.meteor.com/#meteor_methods\">docs</a> indicate that, to rectify the problem, you can create stubs on the client-side: </p>\n\n<blockquote>\n  <p>Calling methods on the client defines stub functions associated with\n  server methods of the same name. You don't have to define a stub for\n  your method if you don't want to. In that case, method calls are just\n  like remote procedure calls in other systems, and you'll have to wait\n  for the results from the server.</p>\n</blockquote>\n\n<p>But what should these stubs look like? Should it basically look the same as the server-side method? If so, what's the point? I'm looking for a more comprehensive explanation of the use and purpose of <code>Meteor.methods()</code>, the point/use of stubs, and their implementation. </p>\n\n<p><strong>EDIT:\nDavid Greenspan has helped clarify the use of Meteor.methods() and stubs on <a href=\"https://groups.google.com/forum/#!topic/meteor-talk/BB-AfAYY52g\">meteor-talk</a>.</strong> </p>\n",
            "last_activity_date": 1407877522,
            "question_id": 12231712,
            "score": 24,
            "tags": [
                "javascript",
                "node.js",
                "meteor",
                "stubs"
            ],
            "title": "When to use Meteor.methods and utilizing stubs"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You have it mostly right, here is a detailed look at the events and potential input cases.</p>\n\n<h2>JavaScript events</h2>\n\n<p>This is when the different event are triggered:</p>\n\n<ul>\n<li><p><strong><code>change</code></strong></p>\n\n<p>This will be called when the <code>blur</code> event is triggered if the value of the <code>&lt;input&gt;</code> has been changed. In other words it will trigger when the input loses focus the value is different to what it was.</p></li>\n<li><p><strong><code>input</code></strong></p>\n\n<p>The <code>input</code> event is basically everything you are looking for, it captures the event on any input change and most likely came about due to the headaches causes when developing something that watches every keystroke. The input event even manages to catch the case where the mouse pastes in content.</p>\n\n<p>Unfortunately the <a href=\"http://www.w3.org/html/wg/drafts/html/master/forms.html#event-input-input\"><code>input</code> event</a> is relatively new and only available to modern browsers (IE9+).</p></li>\n<li><p><strong><code>keydown</code></strong></p>\n\n<p>The <code>keydown</code> event is pretty simple, it triggers when the user pushes the key down..</p></li>\n<li><p><strong><code>keypress</code></strong></p>\n\n<p>The <code>keypress</code> event is supposed to <a href=\"http://stackoverflow.com/a/3396790/1156119\">represent a character being typed</a>. Because of this is does not capture backspace or delete which immediately dismisses it for use over <code>keydown</code>.</p></li>\n<li><p><strong><code>keyup</code></strong></p>\n\n<p>Much like <code>keydown</code>, it triggers whenever the user releases a key.</p></li>\n<li><p><strong><code>paste</code></strong></p>\n\n<p>This handy event triggers when data is pasted into the element.</p></li>\n</ul>\n\n<h3>Modifier keys</h3>\n\n<p>Note that <code>keydown</code>, <code>keypress</code> and <code>keyup</code> carr with them information about the modifier keys <kbd>ctrl</kbd> <kbd>shift</kbd> and <kbd>alt</kbd> in the properties <code>ctrlKey</code>, <code>shiftKey</code> and <code>altKey</code> respectively.</p>\n\n<h2>The cases</h2>\n\n<p>Here is a list of the cases you need to consider:</p>\n\n<ul>\n<li><p>Entering input with keyboard (includes holding down a key)</p>\n\n<p>Triggers: <code>keydown</code>, <code>keypress</code>, <code>input</code>, <code>keyup</code></p></li>\n<li><p>Deleting input (<kbd>backspace</kbd>/<kbd>delete</kbd>)</p>\n\n<p>Triggers: <code>keydown</code>, <code>input</code>, <code>keyup</code></p></li>\n<li><p>Pasting using <kbd>ctrl+v</kbd></p>\n\n<p>Triggers: <code>keydown</code>, <code>paste</code>, <code>input</code>, <code>keyup</code></p></li>\n<li><p>Using mouse to paste</p>\n\n<p>Triggers: <code>paste</code>, <code>input</code></p></li>\n<li><p>Select an item from the autocomplete (<kbd>\u2191</kbd>/<kbd>\u2193</kbd>)</p>\n\n<p>Triggers: <code>keydown</code>, <code>keyup</code></p></li>\n</ul>\n\n<h2>Implementation</h2>\n\n<p>Given the above, you could implement your autocomplete box handling the <code>input</code> event for all changes to the input, and then <code>keydown</code> event to handling up and down. This would really separate everything nicely and lead to some pretty clean code.</p>\n\n<p>If you want to support IE8, you will need to throw everything except pasting into the <code>keydown</code> event and then handle <code>paste</code>. The <code>paste</code> event is quite widely supported now and has been in <a href=\"http://stackoverflow.com/a/2177059/1156119\">IE since v5.5</a>).</p>\n\n<h2>Experimenting with events</h2>\n\n<p><a href=\"http://jsfiddle.net/Tyriar/V47m8/\">Here is the jsFiddle</a> I used to test the events, you might find it useful. It shows a bit more information about each event:</p>\n\n<pre><code>function logEvent(e) {\n    console.log(e.type +\n                \"\\n    this.value = '\" + this.value + \"'\" +\n                (e.keyCode ? \"\\n    e.keyCode  = '\" + e.keyCode + \"'\" : \"\") +\n                (e.keyCode ? \"\\n    char       = '\" + String.fromCharCode(e.keyCode) + \"'\" : \"\"));\n    console.log(e);\n}\n</code></pre>\n\n<h2>References</h2>\n\n<ul>\n<li><a href=\"http://www.w3.org/TR/2011/WD-html5-20110113/common-input-element-attributes.html#common-event-behaviors\">HTML 5 Spec - Common event behaviors</a></li>\n<li><a href=\"http://stackoverflow.com/a/3396790/1156119\">SO - onKeyPress Vs. onKeyUp and onKeyDown</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2176861/javascript-get-clipboard-data-on-paste-event-cross-browser\">SO - JavaScript get clipboard data on paste event (Cross browser)</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 21
                }
            ],
            "body": "<p>I am trying to distinguish the different use of the <code>keydown</code>, <code>keypress</code>, <code>keyup</code>, <code>input</code>, <code>change</code> event in JavaScript.</p>\n\n<p>If it is a JavaScript autocomplete search box, is it true that we have to use the <code>input</code> event handler?</p>\n\n<p>The reason is: </p>\n\n<ol>\n<li><p>the <code>change</code> event handler won't be invoked until the user press Enter or leave that input box (by the Tab key or clicking outside of the input box), so the <code>change</code> event cannot possibly fit the purpose of making suggestion when the user types in one more character to the input box.</p></li>\n<li><p>The <code>keydown</code> event handler can be used to \"add\" the keystroke to the search term, but for CTRL-v or CMD-v (on Mac) to paste it, we can't really get the <code>keyCode</code> one by one if we paste a word such as <code>hello</code> into the search box -- because only one keydown will be for the CTRL and one keydown for the <code>v</code>, instead of <code>hello</code> -- but we can use the input box's <code>value</code> attribute to get the value -- however, what if the user uses the mouse to right click and choose \"paste\" to add text to the box -- in which case should we, or can we use a mouse event handler to look at the <code>value</code> attribute?  It is just too messy to deal with such low level of keyboard and mouse.</p></li>\n</ol>\n\n<p>So the <code>input</code> event handler seems to just fit the exact purpose because ANY value change, the <code>input</code> event handler will be invoked.  And that's why the <code>input</code> event handler can be important and useful.</p>\n\n<p>We still need the <code>keydown</code> event handler, because what if the user presses the Down Arrow key to go down on the list of possible item?  (and possibly the ESC to make the autocomplete suggestion box disappear).   In these cases, the <code>input</code> event handler and the <code>change</code> event handler won't be invoked, and the <code>keydown</code> event will be useful for these cases.</p>\n\n<p>Is the above concept correct, mainly for understanding the <code>input</code> event?</p>\n\n<p>(A jsfiddle for understanding what events handlers are called: <a href=\"http://jsfiddle.net/jYsjs/\">http://jsfiddle.net/jYsjs/</a> )</p>\n",
            "last_activity_date": 1412377513,
            "question_id": 15727324,
            "score": 21,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "For a JavaScript autocomplete search box, must we use the &quot;input&quot; event handler?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>UPDATE 2</strong>:</p>\n\n<p>It's now supported out of the box, see the <a href=\"http://stackoverflow.com/a/25466708/104891\">complete answer below</a>.</p>\n\n<p><img src=\"http://i.stack.imgur.com/9w4v7.png\" alt=\"Download library\"></p>\n\n<p><strong>UPDATE</strong>:</p>\n\n<p>There is a more complete stub file that can be added as a library to get code completion. It's a part of the Closure Compiler project. Download <a href=\"https://code.google.com/p/closure-compiler/source/browse/contrib/externs/chrome_extensions.js\" rel=\"nofollow\">chrome_extensions.js</a>.</p>\n\n<p>See also the <a href=\"http://youtrack.jetbrains.com/issue/WEB-3202\" rel=\"nofollow\">feature request for WebStorm</a> to add this library automatically from the IDE.</p>\n\n<hr>\n\n<p>You need to get the JavaScript library for the Chrome API somewhere, or <a href=\"https://github.com/linux-china/chrome_js_api_stub\" rel=\"nofollow\">use a stub to get basic completion</a>.</p>\n\n<p>Library or a stub <a href=\"http://www.jetbrains.com/webstorm/webhelp/configuring-javascript-libraries.html\" rel=\"nofollow\">can be configured in WebStorm</a>.</p>\n\n<hr>\n\n<p>I found the <a href=\"http://src.chromium.org/chrome/trunk/src/chrome/common/extensions/api\" rel=\"nofollow\">JSON files with the Extension API</a>. One can write a script that will build JS stubs from these JSON files, the stubs can look like the basic version linked on GitHub above, but with the automatic generation they will contain almost complete API and JSDoc comments so that <a href=\"https://developer.chrome.com/extensions/api_index.html\" rel=\"nofollow\">documentation like here</a> can be viewed directly in the IDE.</p>\n\n<p>JSON => JavaScript object stubs mapping is pretty straightforward in this case and writing this kind of converter should not take more than a day (or several hours for the skilled coder).</p>\n\n<p>If someone goes ahead and implements it, please post the link to the results here.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>WebStorm should one day accept json definitions directly to enable autocomplete for the functions defined. Meanwhile, you can use the program at <a href=\"https://github.com/QuickrWorld/jsgen\" rel=\"nofollow\">https://github.com/QuickrWorld/jsgen</a> to convert the json files to js to enable auto-complete for the chrome extension APIs.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h2>First Time</h2>\n\n<ol>\n<li><p>Open the <code>Settings</code> dialog (<code>File</code> > <code>Settings</code>)</p></li>\n<li><p><code>Javascript</code> > <code>Libraries</code> (under Project Settings)</p></li>\n<li><p>Click <code>Download</code></p></li>\n<li><p>Change <code>Official libraries</code> to <code>TypeScript community stubs</code></p></li>\n<li><p>Select <code>chrome</code> from the list (you can find it quickly by just typing <code>chrome</code> and then pressing Esc)</p></li>\n<li><p>Click <code>Download and Install</code></p></li>\n<li><p>Click <code>OK</code> to close the Settings dialog.</p></li>\n</ol>\n\n<hr>\n\n<p>Steps 2-6 illustrated below:</p>\n\n<p><img src=\"http://i.stack.imgur.com/Bis13.png\" alt=\"Webstorm Screenshot\"></p>\n\n<hr>\n\n<h2>In Subsequent Projects</h2>\n\n<p>In any subsequent project, you just:</p>\n\n<ol>\n<li><p>Open the <code>Settings</code> dialog again (<code>File</code> > <code>Settings</code>)</p></li>\n<li><p><code>Javascript</code> > <code>Libraries</code> again</p></li>\n<li><p>Just check <code>chrome-DefinitelyTyped</code></p></li>\n<li><p>Click <code>OK</code> to close the dialog.</p></li>\n</ol>\n\n<hr>\n\n<p>Steps 2-4 shown below:</p>\n\n<p><img src=\"http://i.stack.imgur.com/gNGHb.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>I just bought WebStorm 5 and so far have been really enjoying its Inspection features. One hitch I've run in to when developing my Chrome extension is that it doesn't recognize the <code>chrome</code> variable:</p>\n\n<p><img src=\"http://i.stack.imgur.com/UmiCM.png\" alt=\"Unresolved variable or type chrome\"></p>\n\n<p>Is there a way I can add the <code>chrome</code> variable to the Inspector so that it can autocomplete as I type? I'm guessing I would need to add Chromium as an External Library but I'm unsure where to start.</p>\n",
            "last_activity_date": 1410575710,
            "question_id": 13997468,
            "score": 20,
            "tags": [
                "javascript",
                "autocomplete",
                "google-chrome-extension",
                "intellij-idea",
                "webstorm"
            ],
            "title": "How do I use WebStorm for Chrome Extension Development?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You would need to take advantage of the 'success' (or 'complete') event that is fired by the jQuery ajax call to fire a subsequent AJAX call for refreshing the content of your reviews.  This would probably look something like (winged it, untested):</p>\n\n<pre><code>function UpdateComments(){\n    resultHTML = jQuery.ajax({\n        type: 'GET',\n        url: 'Comments/List/UserID'\n    }).responseText;\n\n    $('#comments').html(resultHTML);\n}\n\nfunction PostComment(targetUserID, commenterUserID, comment)\njQuery.ajax({\n        type: 'POST',\n        contentType: 'application/json; charset=utf-8',\n        data: $.toJSON({review: comment, id:targetUserID, commenter:commenterUserID}),\n        dataType: 'json',\n        url: 'Comments/Add',\n        success: function(result){\n            // Only update comments if the post was successful:\n            resultJson = $.evalJSON(result);\n            if(resultJson['success'] == true){\n                UpdateComments();                    \n            }\n        }\n    });\n</code></pre>\n\n<p><strong>EDIT</strong> The JSON code would make use of the jquery plugin jquery-json (<a href=\"http://code.google.com/p/jquery-json/\">http://code.google.com/p/jquery-json/</a>)</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>In response to Matt, another way to submit the form data is, instead of the JSON, you could call $('#form').serialize() in the 'data' field of the jQuery.ajax function. This would eliminate the need for a plugin. </p>\n\n<p>Also, I'm not an expert on this subject, still trying to learn it myself, but is it necessary to have both a POST and GET request when you could insert the response from ASP.NET MVC into the page instead? This would result in one request. There might be a valid reason for that approach though. I guess mine would look like this:</p>\n\n<pre><code>    // The Controller Action should return a PartialView as response,\n    // so just a user control that contains the comments. \nfunction PostComment(targetUserID, commenterUserID, comment)\njQuery.ajax({\n\ttype: 'POST',\n\tdata: $('#commentForm').serialize(),\n\turl: 'Comments/Add',\n\tsuccess: function(result){ \n\t    $('#comments').html(result);\n\n\n\t    }\n\t}\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I have a site where each user's page shows comments and allows other user's to add comments. I want to have it so the add comments form is on the page and when a user adds a comment, it is added to the database and shows up in the comment section with AJAX. I am using jQuery for the AJAX and LINQ to SQL to handle the database logic. How would go about doing this so that after the comment is added to the database, the comments section is refreshed and updated without refreshing the page?</p>\n",
            "last_activity_date": 1367649109,
            "question_id": 578443,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "asp.net-mvc",
                "dom"
            ],
            "title": "ASP.NET MVC AJAX with jQuery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Instead of holding the content into memory in the <code>\"data\"</code> event listener you should write to the file in append mode.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I changed the callback to:</p>\n\n<pre><code>request.addListener('response', function (response) {\n        var downloadfile = fs.createWriteStream(filename, {'flags': 'a'});\n        sys.puts(\"File size \" + filename + \": \" + response.headers['content-length'] + \" bytes.\");\n        response.addListener('data', function (chunk) {\n            dlprogress += chunk.length;\n            downloadfile.write(chunk, encoding='binary');\n        });\n        response.addListener(\"end\", function() {\n            downloadfile.end();\n            sys.puts(\"Finished downloading \" + filename);\n        });\n\n    });\n</code></pre>\n\n<p>This worked perfectly.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<pre><code>function downloadfile(res)  \n{    \nvar requestserver = http.request(options, function(r) {\nconsole.log('STATUS: ' + r.statusCode);\nconsole.log('HEADERS: ' + JSON.stringify(r.headers));\n\nvar fd = fs.openSync('sai.tar.gz', 'w');\n\n  r.on('data', function (chunk) {\n    size += chunk.length;\n    console.log(size+'bytes received');\n    sendstatus(res,size);\n    fs.write(fd, chunk, 0, chunk.length, null, function(er, written) {\n});\n});\n  r.on('end',function(){\n    console.log('\\nended from server');\n    fs.closeSync(fd);\n    sendendstatus(res);\n});\n});\n}\n</code></pre>\n\n<p>//when downloading large file please use fs.write function , dont use writeFile it will over ride the previous content`</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>does the request package work for your uses?</p>\n\n<p>it lets you do things like this:</p>\n\n<pre><code>request(downloadurl).pipe(fs.createWriteStream(downloadtohere))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use streams like Carter Cole suggested. Here is a more complete example</p>\n\n<pre><code>var inspect = require('eyespect').inspector();\nvar request = require('request');\nvar filed = require('filed');\nvar temp = require('temp');\nvar downloadURL = 'http://upload.wikimedia.org/wikipedia/commons/e/ec/Hazard_Creek_Kayaker.JPG';\nvar downloadPath = temp.path({prefix: 'singlePageRaw', suffix: '.jpg'});\n\nvar downloadFile = filed(downloadPath);\nvar r = request(downloadURL).pipe(downloadFile);\n\n\nr.on('data', function(data) {\n  inspect('binary data received');\n});\ndownloadFile.on('end', function () {\n  inspect(downloadPath, 'file downloaded to path');\n});\n\ndownloadFile.on('error', function (err) {\n  inspect(err, 'error downloading file');\n});\n</code></pre>\n\n<p>You may need to install modules which you can do via\n<code>npm install filed request eyespect temp</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I`m trying to create a file downloader as a background service but when a large file is scheduled, it's first put in memory and then, at the end of the download the file is written to disk. </p>\n\n<p>How can I make the file be wrote gradually to the disk preserving memory considering that I may have lots of files being downloaded at the same time?</p>\n\n<p>Here's the code I`m using:</p>\n\n<pre><code>var sys = require(\"sys\"),\n    http = require(\"http\"),\n    url = require(\"url\"),\n    path = require(\"path\"),\n    fs = require(\"fs\"),\n    events = require(\"events\");\n\nvar downloadfile = \"http://nodejs.org/dist/node-v0.2.6.tar.gz\";\n\nvar host = url.parse(downloadfile).hostname\nvar filename = url.parse(downloadfile).pathname.split(\"/\").pop()\n\nvar theurl = http.createClient(80, host);\nvar requestUrl = downloadfile;\nsys.puts(\"Downloading file: \" + filename);\nsys.puts(\"Before download request\");\nvar request = theurl.request('GET', requestUrl, {\"host\": host});\nrequest.end();\n\nvar dlprogress = 0;\n\n\nsetInterval(function () {\n   sys.puts(\"Download progress: \" + dlprogress + \" bytes\");\n}, 1000);\n\n\nrequest.addListener('response', function (response) {\n    response.setEncoding('binary')\n    sys.puts(\"File size: \" + response.headers['content-length'] + \" bytes.\")\n    var body = '';\n    response.addListener('data', function (chunk) {\n        dlprogress += chunk.length;\n        body += chunk;\n    });\n    response.addListener(\"end\", function() {\n        fs.writeFileSync(filename, body, 'binary');\n        sys.puts(\"After download finished\");\n    });\n\n});\n</code></pre>\n",
            "last_activity_date": 1359510032,
            "question_id": 4771614,
            "score": 18,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "Download large file with node.js avoiding high memory consumption"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Backbone does not explicitly handle cleaning up objects for you. It's 50/50 you and the JavaScript runtime.</p>\n\n<p>JavaScript is a garbage collected language like Java, C#, Ruby, and others. The basic of a garbage collected languages is that an object that is still referenced by your application will not be cleaned up. The counter to that is when an object is no longer referenced by your application, will be cleaned up.</p>\n\n<h3>JavaScript in general:</h3>\n\n<p>When you create a variable, you can either scope that variable to a local function or as a global variable. </p>\n\n<p>Global variables are never cleaned up by the garbage collector, during the life of the page. The only time they are cleaned up is when you leave the HTML page behind entirely - navigate to a different page and force the browser to load the new page from the server (doing a complete server refresh) or closing the browser or browser tab.</p>\n\n<p>Function scoped variables are cleaned up when the variable falls out of scope - that is, when the function has exited and there are no more references to it. There are a few exceptions to this: return values and closures. </p>\n\n<p>A return value is held in your app by assigning the return value to another variable. A return value falls under the same general rules, but the variable is now in a different function. Once that variable goes out of scope, it can be cleaned up. </p>\n\n<p>A closure allows a parent scope to provide values that a descendant scope can access. When the descendant scope is cleaned up, the parent's closured variable may be allowed to be cleaned up (assuming nothing else is holding on to it).</p>\n\n<p>Objects with attributes and functions fall under the same rules. An object can reference another object or function by having an attribute assigned to it: <code>myObj.foo = thatObj</code>.</p>\n\n<p>The DOM (Document Object Model - the HTML in your app) is a JavaScript object. Events and other references to your DOM work the same as any other reference. If you have an object handling a DOM event, it has a reference in your app and it won't be cleaned up by the garbage collector. If you want it cleaned up, you have to remove all references to it - including the DOM reference from the event handler.</p>\n\n<h3>Cleaning Up Memory</h3>\n\n<p>The general rule is that if you are loading data in to a backbone collection or object and you want that object to be cleaned up so it's not using anymore memory, you must remove all references to that object. This is just the standard JavaScript garbage collection rule.</p>\n\n<p>You cannot force garbage collection, but you can force a variable to de-reference the thing it points to using the <code>delete</code> keyword in JavaScript: <code>delete myVar</code></p>\n\n<h3>Backbone</h3>\n\n<p>Backbone is JavaScript so it falls under the same rules. There are some interesting uses of closures and references in Backbone that you need to be aware of, which will help you to know when you need to manually clean up some objects.</p>\n\n<p>For example: events. An even handler / callback method works by having a reference between the object that triggers the event and the callback that handles the event. This is one of the easiest places to cause memory leaks in a Backbone app and I discuss it in detail, here: <a href=\"http://lostechies.com/derickbailey/2011/09/15/zombies-run-managing-page-transitions-in-backbone-apps/\">http://lostechies.com/derickbailey/2011/09/15/zombies-run-managing-page-transitions-in-backbone-apps/</a></p>\n\n<p>Other than being aware of how events work in terms of references, just follow the standard rules for manage memory in JavaScript and you'll be fine. Once you remove all references to that collection of User objects, they'll be cleaned up.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Note that if you <code>console.log()</code> you model (at least in chrome) it will remain in memory because the console has a reference to it.</p>\n\n<p>I got mad because of this. If you see memory leak, try clearing your console and run you profile again. If you had the same problem i had, it's gone :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Lately I am diving into the whole client-side MVC/MVVM design paterns, and the one I am particularly interested in is backbone.js.</p>\n\n<p>One thing I do not fully understand is what happend to the models when they are not really needed anymore.</p>\n\n<p>Let's say we have an app that has users and products. We have user models/views and product models/views</p>\n\n<p>NOTE: for simplicity sake <em>we are <strong>not</strong> a user</em>. We can just CRUD users / products.</p>\n\n<p>When I enter the products page, I assume we load the model and the view corresponding to this.</p>\n\n<p>What happens when we leave the page and enter the users page. A user model/view is loaded, but the products are also still loaded.</p>\n\n<p>Do we keep them loaded, does backbone take care of that for you, or do you explicitly need to end certain objects.</p>\n",
            "last_activity_date": 1384364095,
            "question_id": 9758346,
            "score": 17,
            "tags": [
                "javascript",
                "memory-management",
                "memory-leaks",
                "garbage-collection",
                "backbone.js"
            ],
            "title": "What does backbone.js do with models that are not used anymore"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>If that's a global object, you can use <code>if (!window.maybeObject)</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use:</p>\n\n<pre><code>if (typeof objectName == 'object') {\n    //do something\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can safely use the <code>typeof</code> operator on undefined variables.</p>\n\n<p>If it has been assigned any value, including null, typeof will return something other than undefined. typeof always returns a string.</p>\n\n<p>Therefore</p>\n\n<pre><code>if (typeof maybeObject != \"undefined\") {\n   alert(\"GOT THERE\");\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 209
                },
                {
                    "body": "<p>You could use \"typeof\".</p>\n\n<pre><code>if(typeof maybeObject != \"undefined\")\n    alert(\"GOT HERE\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There are a lot of half-truths here, so I thought I make some things clearer.</p>\n\n<p>Actually you can't accurately tell if a variable exists (unless you want to wrap every second line into a try-catch block).</p>\n\n<p>The reason is Javascript has this notorious value of <code>undefined</code> which strikingly doesn't mean that the variable is not defined, or that it doesn't exist <code>undefined !== not defined</code></p>\n\n<pre><code>var a;\nalert(typeof a); // undefined (declared without a value)\nalert(typeof b); // undefined (not declared)\n</code></pre>\n\n<p>So both a variable that exists and another one that doesn't can report you the <code>undefined</code>  type.</p>\n\n<p>As for @Kevin's misconception, <code>null == undefined</code>. It is due to type coercion, and it's the main reason why Crockford keeps telling everyone who is unsure of this kind of thing to always use strict equality operator <code>===</code> to test for possibly falsy values. <code>null !== undefined</code> gives you what you might expect. Please also note, that <code>foo != null</code> can be an effective way to check if a variable is neither <code>undefined</code> nor <code>null</code>. Of course you can be explicit, because it may help readability.</p>\n\n<p>If you restrict the question to check if an object exists, <code>typeof o == \"object\"</code> may be a good idea, except if you don't consider arrays objects, as this will also reported to be the type of <code>object</code> which may leave you a bit confused. Not to mention that <code>typeof null</code> will also give you <code>object</code> which is simply wrong.</p>\n\n<p>The primal area where you really should be careful about <code>typeof</code>, <code>undefined</code>, <code>null</code>, <code>unknown</code> and other misteries are host objects. They can't be trusted. They are free to do almost any dirty thing they want. So be careful with them, check for functionality if you can, because it's the only secure way to use a feature that may not even exist.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>I used to just do a <code>if(maybeObject)</code> as the null check in my javascripts. </p>\n\n<pre><code>if(maybeObject){\n    alert(\"GOT HERE\");\n}\n</code></pre>\n\n<p>So only if <code>maybeObject</code> - is an object, the alert would be shown.\nI have an example in my site.</p>\n\n<p><a href=\"https://sites.google.com/site/javaerrorsandsolutions/home/javascript-dynamic-checkboxes\" rel=\"nofollow\">https://sites.google.com/site/javaerrorsandsolutions/home/javascript-dynamic-checkboxes</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Or, you can all start using my exclusive <strong>exists()</strong> method instead and be able to do things considered impossible. i.e.:</p>\n\n<p>Things like: <code>exists(\"blabla\")</code>, or even:  <code>exists(\"foreignObject.guessedProperty.guessNext.propertyNeeded\")</code> are also possible...</p>\n",
                    "is_accepted": false,
                    "score": -7
                },
                {
                    "body": "<pre><code>if (maybeObject !== undefined)\n  alert(\"Got here!\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>set Textbox value to one frame to inline frame using div alignmnt tabbed panel.\nSo first of all, before set the value we need check selected tabbed panels frame available or not using following codes:</p>\n\n<p>Javascript Code :</p>\n\n<pre><code>/////////////////////////////////////////\n&lt;script&gt;\n\nfunction set_TextID()\n            {\n                try\n                    {\n                        if(!parent.frames[\"entry\"])\n                            {\n                            alert(\"Frame object not found\");    \n                            }\n                            else\n                            {\n                                var setText=document.getElementById(\"formx\").value;\n                                parent.frames[\"entry\"].document.getElementById(\"form_id\").value=setText;\n                            }\n                            if(!parent.frames[\"education\"])\n                            {\n                            alert(\"Frame object not found\");    \n\n                            }\n                            else\n                            {\n                                var setText=document.getElementById(\"formx\").value;\n                                parent.frames[\"education\"].document.getElementById(\"form_id\").value=setText;\n                            }\n                            if(!parent.frames[\"contact\"])\n                            {\n                            alert(\"Frame object not found\");    \n\n                            }\n                            else\n                            {\n                                var setText=document.getElementById(\"formx\").value;\n                                parent.frames[\"contact\"].document.getElementById(\"form_id\").value=setText;\n                            }\n\n                        }catch(exception){}\n                }\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Two ways.</p>\n\n<h2>typeof for local variables</h2>\n\n<p>You can test for a local object using typeof:</p>\n\n<pre><code>if (object !== \"undefined\") {}\n</code></pre>\n\n<h2>window for global variables</h2>\n\n<p>You can test for a global object (one defined on the global scope) by inspecting the window object:</p>\n\n<pre><code>if (window.FormData) {}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Think it's easiest like this    </p>\n\n<pre><code>if(myobject_or_myvar)\n    alert('it exists');\nelse\n   alert(\"what the hell you'll talking about\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                }
            ],
            "body": "<p>How do I verify the existence of an object in JavaScript?</p>\n\n<p>The following works:</p>\n\n<pre><code>if (!null)\n   alert(\"GOT HERE\");\n</code></pre>\n\n<p>But this fails:</p>\n\n<pre><code>if (!maybeObject)\n   alert(\"GOT HERE\");\n</code></pre>\n\n<p><strong>Error:</strong> maybeObject is not defined.</p>\n",
            "last_activity_date": 1397919604,
            "question_id": 4186906,
            "score": 118,
            "tags": [
                "javascript",
                "debugging",
                "variables",
                "null",
                "undefined"
            ],
            "title": "Check if object exists in JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>It sure is!</p>\n\n<p><a href=\"http://www.w3.org/TR/2010/WD-html5-20100624/text-level-semantics.html#the-a-element\" rel=\"nofollow\">http://www.w3.org/TR/2010/WD-html5-20100624/text-level-semantics.html#the-a-element</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It looks like target=\"_blank\" is still alright, it is listed as a browsing context keyword in the latest html5 draft: <a href=\"http://www.w3.org/TR/html5/browsers.html#valid-browsing-context-name-or-keyword\">http://www.w3.org/TR/html5/browsers.html#valid-browsing-context-name-or-keyword</a></p>\n",
                    "is_accepted": true,
                    "score": 110
                },
                {
                    "body": "<p>It is ok to use target=\"_blank\"; This was done away with in XHTML because targeting new windows will always bring up the pop-up alert in most browsers. XHTML will always show an error with the target attribute in a validate. </p>\n\n<p>HTML 5 brought it back because we still use it. It's our friend and we can't let go. </p>\n\n<p>Never let go. </p>\n",
                    "is_accepted": false,
                    "score": 76
                },
                {
                    "body": "<p>\"it's by the easiest way to open a new window for something like a PDF\"</p>\n\n<p>It's also the easiest way to annoy non-Windows users. PDF open just fine in browsers on other platforms. Opening a new windows also messes up the navigation history and complicates matter on smaller platforms like smartphones.</p>\n\n<p>Do NOT open new windows for things like PDF just because older versions of Windows were broken.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Though the <code>target=\"_blank\"</code> is <a href=\"http://www.w3.org/html/wg/drafts/html/master/browsers.html#valid-browsing-context-name-or-keyword\" rel=\"nofollow\">acceptable in HTML5</a>, I personally try never to use it (even for opening PDFs in a new window).</p>\n\n<p>HTML should define <strong>meaning and content</strong>. Ask yourself: <em>would the <strong>meaning</strong> of the <code>a</code> element change if you removed the <code>target</code> attribute?</em> If not, the code should not go in the HTML. (Actually I'm surprised the W3C kept it... I guess they really can't just let go.)</p>\n\n<p>Browser <strong>behavior</strong>, specifically, <em>interactive behavior with the user</em>, should be implemented with scripting languages, most commonly JS. Since you want the browser to behave in a particular way, you should use JS. But as you mentioned, this behavior requires the browser to rely on JS. (Though if your site degrades gracefully, or enhances progressively, <a href=\"http://accessites.org/site/2007/02/graceful-degradation-progressive-enhancement/\" rel=\"nofollow\">or whatever</a>, then it should still be okay. The users with JS disabled won't miss much.)</p>\n\n<p>That being said, <strong>neither of these is the right answer. <a href=\"http://jalada.co.uk/2011/02/10/why-you-shouldnt-use-target_blank-and-what-to-use-instead.html\" rel=\"nofollow\">Out there somewhere</a> is the opinion that <em>how a link opens should ultimately be up to the end user</em>.</strong></p>\n\n<p>I'm surfing the web, getting deeper and deeper into a rabbit hole, and I want to be the one who decides whether to go off on a tangent or to continue on my path. If I want to read the linked page real quick before coming back, I'll open a new tab. If I think it looks interesting but I want to save it for later, I'll open it in a new background tab. If I decide I'm done reading this page and go on to the next one, I'll just open the link in this tab. All of these decisions are mine and only mine to make, and I would get pretty pissed off if my browser (or web designer) made them for me.</p>\n\n<p>THAT being said, web developers should make it absolutely clear where their links go, what types and/or formats of sources they reference, and what they do. Tooltips can be your friend (unless you're using a tablet or phone; in that case, specify these on the mobile site). We all know how much it sucks to be taken somewhere we weren't expecting or make something happen we didn't mean to.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I recall reading somewhere that in HTML5 it was no longer okay to use <code>target=\"_blank\"</code> in HTML5, but I can't find it now.</p>\n\n<p>Is it alright to continue to use <code>target=\"_blank\"</code>?</p>\n\n<p>I know it's generally considered a bad idea, but it's by the easiest way to open a new window for something like a PDF. It also doesn't require you to rely on JavaScript.</p>\n",
            "last_activity_date": 1412770385,
            "question_id": 4198788,
            "score": 105,
            "tags": [
                "javascript",
                "html",
                "html5",
                "target"
            ],
            "title": "Is it alright use to target=_blank in HTML5?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>history.back()\n</code></pre>\n\n<p>or</p>\n\n<pre><code>history.go(-1)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<pre><code>&lt;input name=\"action\" type=\"submit\" value=\"Cancel\" onclick=\"window.history.back();\"/&gt; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You just need to call the following:</p>\n\n<pre><code>history.go(-1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>put this in your input tag</p>\n\n<pre><code>&lt;input action=\"action\" type=\"button\" value=\"Back\" onclick=\"history.go(-1);\" /&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 132
                },
                {
                    "body": "<p>Shortest Yet!</p>\n\n<pre><code>&lt;button onclick=\"history.go(-1);\"&gt;Go back&lt;/button&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/qXrbx/\" rel=\"nofollow\">http://jsfiddle.net/qXrbx/</a></p>\n\n<p>I prefer the <code>.go(-number)</code> method as then, for 1 or many 'backs' there's only 1 method to use/remember/update/search for, etc.</p>\n\n<p>Also, using a  tag for a back button seems more appropriate than tags with names and types...</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>For Going to previous page</p>\n\n<p><strong>First Method</strong></p>\n\n<pre><code>&lt;a href=\"javascript: history.go(-1)\"&gt;Go Back&lt;/a&gt;\n</code></pre>\n\n<p><strong>Second Method</strong></p>\n\n<pre><code>&lt;a href=\"##\" onClick=\"history.go(-1); return false;\"&gt;Go back&lt;/a&gt; \n</code></pre>\n\n<p>if we want to more than one step back then increase </p>\n\n<pre><code>For going 2 steps back history.go(-2)\nFor going 3 steps back history.go(-3)\nFor going 4 steps back history.go(-4)\nand so on.......\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>This Java script function will do the job</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script&gt;\n    function goBack()\n     {\n    window.history.back()\n     }\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;input type=\"button\" value=\"Back\" onclick=\"goBack()\"&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there a function I can attach as onclick event of a button to make the browser go back to previous page?</p>\n\n<pre><code>&lt;input name=\"action\" type=\"submit\" value=\"Cancel\"/&gt;\n</code></pre>\n",
            "last_activity_date": 1408025433,
            "question_id": 8067510,
            "score": 62,
            "tags": [
                "javascript",
                "html",
                "browser",
                "javascript-events",
                "onclick"
            ],
            "title": "Onclick javascript to make browser go back to previous page?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Great question</p>\n\n<p>There seems to be a custom event you can bind:\n<a href=\"http://javascript.gakaa.com/domnodeinserted-description.aspx\" rel=\"nofollow\">http://javascript.gakaa.com/domnodeinserted-description.aspx</a></p>\n\n<p>So I guess you could do something like:</p>\n\n<pre><code>$(document).bind('DOMNodeInserted',function(){ /* do stuff */ });\n</code></pre>\n\n<p>But I haven't tried so I don't have a clue.. </p>\n\n<p>btw.: related question:\n<a href=\"http://stackoverflow.com/questions/1324647/can-javascript-listen-for-ondomchange-on-every-dom-elements\">Can javascript listen for \"onDomChange\" on every Dom elements?</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I was reading up on the new release of jQuery, version 1.5 and I immediately thought of this question.</p>\n\n<p>With jQuery 1.5 you can actually create your own version of jQuery by using something called jQuery.sub();</p>\n\n<p>That way you can actually override the default .append(), insert(), .html(), .. functions in jQuery and create your own custom event called something like \"mydomchange\" - without it affecting all other scripts.</p>\n\n<p>So you can do something like this (copied from the .sub() documentation with minor mod.):</p>\n\n<pre><code>var sub$ = jQuery.sub();\nsub$.fn.insert = function() {\n    // New functionality: Trigger a domchange event\n    this.trigger(\"domchange\");\n    // Be sure to call the original jQuery remove method\n    return jQuery.fn.insert.apply( this, arguments );\n};\n</code></pre>\n\n<p>You would have to do this to all the dom manipulation methods...</p>\n\n<p>jQuery.sub() in the jQuery documention:\n<a href=\"http://api.jquery.com/jQuery.sub/\" rel=\"nofollow\">http://api.jquery.com/jQuery.sub/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>In my opinion, the DOM Level 3 events <a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#event-type-DOMNodeInserted\"><code>DOMNodeInserted</code><sup>help</sup></a> (which fires only for nodes) and <a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#event-type-DOMSubtreeModified\"><code>DOMSubtreeModified</code><sup>help</sup></a> (which fires for virtually any modification, like attribute changes) are your best shot to accomplish that task.</p>\n\n<p>Of course, the big downside of those events is, that the Internet Explorers of this world don't support them<br>\n(...well, <strong>IE9</strong> does).</p>\n\n<p>The other reasonable solution for this problem, is to hook into any method Which can modify the DOM. But then we have to ask, what is our scope here? </p>\n\n<p>Is it just enough to deal with DOM modification methods from a specific library like jQuery? What if for some reason another library is modifying the DOM or even a native method ?</p>\n\n<p>If it's just for jQuery, we don't need <code>.sub()</code> at all. We could write hooks in the form of:</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div id=\"test\"&gt;Test DIV&lt;/div&gt;\n</code></pre>\n\n<p><strong>JS</strong></p>\n\n<pre><code>(function(_append, _appendTo, _after, _insertAfter, _before, _insertBefore) {\n    $.fn.append = function() {\n        this.trigger({\n            type: 'DOMChanged',\n            newnode: arguments[0]\n        });\n        return _append.apply(this, arguments);\n    };\n    $.fn.appendTo = function() {\n        this.trigger({\n            type: 'DOMChanged',\n            newnode: this\n        });\n        return _appendTo.apply(this, arguments);\n    };\n    $.fn.after = function() {\n        this.trigger({\n             type: 'DOMChanged',\n             newnode: arguments[0]\n         });\n        return _after.apply(this, arguments);\n    };\n\n    // and so forth\n\n}($.fn.append, $.fn.appendTo, $.fn.after, $.fn.insertAfter, $.fn.before, $.fn.insertBefore));\n\n$('#test').bind('DOMChanged', function(e) {\n    console.log('New node: ', e.newnode);\n});\n\n$('#test').after('&lt;span&gt;new span&lt;/span&gt;');\n$('#test').append('&lt;p&gt;new paragraph&lt;/p&gt;');\n$('&lt;div&gt;new div&lt;/div&gt;').appendTo($('#test'));\n</code></pre>\n\n<hr>\n\n<p>A live example of the above code can be found here: <a href=\"http://www.jsfiddle.net/RRfTZ/1/\">http://www.jsfiddle.net/RRfTZ/1/</a></p>\n\n<p>This of course requires a complete list of DOMmanip methods. I'm not sure if you can overwrite native methods like <code>.appendChild()</code> with this approach. <code>.appendChild</code> is located in <code>Element.prototype.appendChild</code> for instance, might be worth a try.</p>\n\n<p><strong>update</strong></p>\n\n<p>I tested overwriting <code>Element.prototype.appendChild</code> etc. in Chrome, Safari and Firefox (official latest release). Works in Chrome and Safari but not in Firefox!</p>\n\n<hr>\n\n<p>There might be other ways to tackle the requirement. But I can't think of a single approach which is really satisfying, like counting / watching all descendents of a node (which would need an <code>interval</code> or <code>timeouts</code>, eeek).</p>\n\n<p><strong>Conclusion</strong></p>\n\n<p>A mixture of DOM Level 3 events where supported and hooked DOMmanip methods is probably the best you can do here.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Well, first of all, you shouldn't even be using selectors like this if you're worried about perf.</p>\n\n<pre><code>$('input[type=text], input[type=password], textarea, .basic_form .block select, .order_form .form_item select, .order_form .form_item input')\n</code></pre>\n\n<p>Any browser that doesn't have native implementations of xpath (more than just IE iirc) or getElementsByClassName (IE 7 and below) could easily spend a few seconds chewing on that on a big site so polling would of course be completely out of the question if you want it that broad.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>There is no simple obvious way to do it.  The only surefire approach is active polling, which causes there to be a render hiccup between when the new element is created and when the polling notices it.  That can also make your page take a lot of resources depending on how frequently you poll the page.  You can also couple this, as you observed, with binding several browser-specific events to at least make things work out better in those browsers.</p>\n\n<p>You can override jQuery's DOM modification functions to trigger a custom change event (and use $.live to catch those events for manipulation), but when I've tried this in the past, it's subtly broken various jQuery plugins (my guess is some of those plugins do something similar).  In the end I've given up on doing so reliably since I don't want to give up the performance and render hiccups to active polling, and there is no other comprehensive way to do it.  Instead I have an initialization event I make sure to trigger for each DOM change I make, and I bind my manipulation events to those instead.</p>\n\n<p>Be careful, it's easy to get stuck in an infinite event loop if you don't think things through, and this can also be subtle and difficult to track down; and worse yet may happen for a corner case your unit testing didn't allow for (so your users experience it instead of just you).  The custom manually triggered initialization event is easier to diagnose in this sense since you always know exactly when you're triggering it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>There are a lot of questions about <strong>binding future manipulations to non-existent elements</strong> that all end up answered with <strong><a href=\"http://api.jquery.com/live/\">live</a>/delegate</strong>. I am wondering how to run an arbitrary callback <em>(to add a class or trigger a plugin, for example)</em> to <strong>all existing elements that match a selector and all future elements that match that same selector</strong> that are yet to be created.</p>\n\n<p>It seems that the main functionality of the livequery plugin made it into the core but the other part, attaching arbitrary callbacks got lost along the way somehow.</p>\n\n<p>Another common answer is <strong>event delegation</strong> but what if one doesn't have access to all of the vendor code that is creating the elements to have it <a href=\"http://api.jquery.com/trigger/\">trigger</a> the events?</p>\n\n<hr>\n\n<p>Here is some real-world code:</p>\n\n<pre><code>// with livequery\n$('input[type=text], input[type=password], textarea, .basic_form .block select, .order_form .form_item select, .order_form .form_item input')\n    .livequery(function(){\n        $(this)\n            .focus(function(){\n                $(this).addClass('active');\n            })\n            .blur(function(){\n                $(this).removeClass('active');\n            })\n            .addClass('text');\n    });\n\n// with live\n$('input[type=text], input[type=password], textarea, .basic_form .block select, .order_form .form_item select, .order_form .form_item input')\n    .live('focus', function(){\n            $(this).addClass('active');\n        })\n    .live('blur', function(){\n            $(this).removeClass('active');\n        });\n    // now how to add the class to future elements?\n    // (or apply another plugin or whatever arbitrary non-event thing)\n</code></pre>\n\n<hr>\n\n<p>One approach would be to monitor when new nodes are added/removed and re-trigger our selectors. Thanks to <strong>@arnorhs</strong> we know about the <strong>DOMNodeInserted</strong> event, which I would ignore the cross-browser problems in the hope that those small IE patches could someday land upstream to jQuery or knowing the jQuery DOM functions could be wrapped.</p>\n\n<p>Even if we could ensure that the DOMNodeInserted fired cross-browser, however, it would be ridiculous to bind to it with multiple selectors. Hundreds of elements can be created at any time, and making potentially dozens of selector calls on each of those elements would crawl.</p>\n\n<h2>My best idea so far</h2>\n\n<p>Would it maybe be better to monitor DOMNodeInserted/Deleted and/or hook into jQuery's DOM manipulation routines to only set a flag that a \"re-init\" should happen? Then there could just be a timer that checks that flag every x seconds, only running all those selectors/callbacks when the DOM has actually changed.</p>\n\n<p>That could still be really bad if you were adding/removing elements in great numbers at a fast rate (like with animation or <em>_</em>_). Having to re-parse the DOM once for each saved selector every x seconds could be too intense if x is low, and the interface would appear sluggish if x is high.</p>\n\n<h2>Any other novel solutions?</h2>\n\n<p><s>I will add a bounty when it lets me.</s> I have added a bounty for the most novel solution!</p>\n\n<p>Basically what I am getting at is a more <strong>aspect-oriented approach</strong> to manipulating the DOM. One that can allow that <strong>new elements are going to be created in the future</strong>, and they should be created <strong>with the initial document.ready modifications applied to them as well</strong>.</p>\n\n<p>JS has been able to do so much magic lately that I'm hoping it will be obvious.</p>\n",
            "last_activity_date": 1379996690,
            "question_id": 4893937,
            "score": 40,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "mutation-events"
            ],
            "title": "Preferred way of modifying elements that have yet to be created (besides events)"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I'm only familiar with Mongo and Couch, but <a href=\"https://github.com/joyent/node/wiki/modules#wiki-database\">this</a> wiki site lists the various databases.</p>\n\n<p>There's also one named <a href=\"https://github.com/creationix/node-persistence\">Persistence</a> that I don't see listed on the wiki.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Try nStore, it seems like a nice key/value lightweight dembedded db for node.\nSee <a href=\"https://github.com/creationix/nstore\">https://github.com/creationix/nstore</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I had trouble with SQLite3, nStore and Alfred.</p>\n\n<p>What works for me is <a href=\"https://github.com/felixge/node-dirty\" rel=\"nofollow\">node-dirty</a>:</p>\n\n<pre><code>path = \"#{__dirname}/data/messages.json\"\nmessages = db path\n\nmessage = 'text': 'Lorem ipsum dolor sit...'\n\nmessages.on \"load\", -&gt;    \n    messages.set 'my-unique-key', message, -&gt;\n        console.log messages.get('my-unique-key').text\n\n    messages.forEach (key, value) -&gt;\n        console.log \"Found key: #{key}, val: %j\", value\n\nmessages.on \"drain\", -&gt;\n    console.log \"Saved to #{path}\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I wrote jaguarDb to handle some of the things that you are mentioning since I sometimes need a \"little\" database for demo or test projects too and I don't want to depend on mongoDB or another real database.</p>\n\n<p><a href=\"https://github.com/hectorcorrea/jaguarDb\" rel=\"nofollow\">https://github.com/hectorcorrea/jaguarDb</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had the same requirements as you but couldn't find a suitable database. nStore was promising but the API was not nearly complete enough and not very coherent.</p>\n\n<p>That's why I made <a href=\"https://github.com/louischatriot/nedb\">NeDB</a>, which a dependency-less embedded database for Node.js projects. You can use it with a simple <code>require()</code>, it is persistent, and its API is the most commonly used subset of the very well-known MongoDB API.</p>\n\n<p><a href=\"https://github.com/louischatriot/nedb\">https://github.com/louischatriot/nedb</a></p>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>Take a look at <a href=\"http://www.tingodb.com\">http://www.tingodb.com</a>. I believe it does what you looking for. Additionally it fully compatible with MongoDB API. This reduces implementation risks and gives you option to switch to heavy solution as your app grows.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Embedded JavaScript in-process file system backed database upward compatible on API level with MongoDB.\n<a href=\"https://github.com/sergeyksv/tingodb\" rel=\"nofollow\">https://github.com/sergeyksv/tingodb</a></p>\n\n<p>LevelUP aims to expose the features of LevelDB in a Node.js-friendly way.\n<a href=\"https://github.com/rvagg/node-levelup\" rel=\"nofollow\">https://github.com/rvagg/node-levelup</a></p>\n\n<p>You can also look at UnQLite. with a node.js binding node-unqlite</p>\n\n<p>I prefer tingodb since it seems to have more features. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"https://github.com/louischatriot/nedb\">NeDB</a> seems to be what you are looking for. From the blurb:</p>\n\n<blockquote>\n  <p>Embedded persistent database for Node.js, written in Javascript, with no dependency (except npm modules of course). You can think of it as a SQLite for Node.js projects, which can be used with a simple require statement. The API is a subset of MongoDB's. You can use it as a persistent or an in-memory only datastore.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>UeberDB provides abstraction for various databases</p>\n\n<p><a href=\"https://www.npmjs.org/package/ueberDB\" rel=\"nofollow\">https://www.npmjs.org/package/ueberDB</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Maybe you should try <a href=\"http://wamalaka.com/locallydb/\" rel=\"nofollow\">LocallyDB</a> it's easy-to-use and lightweight in addition to the with advanced selecting system similar to javascript conditional expression...</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Anybody know of a lightweight yet durable database, written in Javascript, that can be used with Node.js. </p>\n\n<p>I don't want the 'weight' of (great) solutions like Mongo or Couch. A simple, in memory JS database with the capability to persist to disk as a file would be enough. I would only use it to store small amounts of data. </p>\n\n<p>Requirements:</p>\n\n<ul>\n<li>can run in process with a node.js server application</li>\n<li>can save the whole database to disk and recover after a failure</li>\n<li>NO need for atomic writes or transaction supports</li>\n<li>fast queries and sorting would be nice</li>\n<li>only needs to support small data volumes, up to 1MB in total</li>\n</ul>\n\n<p>I've come across TAFFY db so far but it really doesn't seem optimized for use in Node.js. Anybody seen what I'm looking for out there?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1408398274,
            "question_id": 7233057,
            "score": 38,
            "tags": [
                "javascript",
                "database",
                "key-value-store"
            ],
            "title": "Lightweight Javascript DB for use in Node.js"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><strong>OLD INFO:</strong> I've solved this: <a href=\"http://www.hakoniemi.net/labs/scrollingOffset/nonbounce.html\">http://www.hakoniemi.net/labs/scrollingOffset/nonbounce.html</a></p>\n\n<p><strong>NEW INFO:</strong> This is now a jQuery plugin that can be found from here: <a href=\"http://www.hakoniemi.net/labs/nonbounce/\">http://www.hakoniemi.net/labs/nonbounce/</a>.</p>\n\n<p><strong>There are several issues</strong>, like losing the zooming capability when this is applied or it's dynamic updating isn't working fluently.</p>\n\n<p>But now the simplest way is to define: <code>&lt;div class=\"nonbounce\"&gt;...&lt;/div&gt;</code> and then <code>$.nonbounce();</code></p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>How about this pseudo-code:</p>\n\n<pre><code>document.body.addEventListener(\"ontouchstart\", function(event) {\n  if(document.getElementById(\"main\").scrollTop &gt; 0) return;\n  event.preventDefault();\n  event.stopPropagation();\n}, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I ran into the same problem and came up with this solution:</p>\n\n<p><a href=\"http://demo.josefkjaergaard.com/stackoverflow/element_scroll/index.html\" rel=\"nofollow\">http://demo.josefkjaergaard.com/stackoverflow/element_scroll/index.html</a></p>\n\n<p>Basically I prevent the scroll-content from being in its maximum positions.This prevents the body-scroll from being activated.</p>\n\n<p>It works but it does create a little snap at the end of the easing. With a little more work this behavior could probably be hidden by offsetting the content in opposite direction.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here are some useful resources I found on the subject:</p>\n\n<ul>\n<li><a href=\"https://github.com/joelambert/ScrollFix\" rel=\"nofollow\">https://github.com/joelambert/ScrollFix</a></li>\n<li><a href=\"http://apdevblog.com/optimizing-webkit-overflow-scrolling/\" rel=\"nofollow\">http://apdevblog.com/optimizing-webkit-overflow-scrolling/</a></li>\n<li><a href=\"http://www.hakoniemi.net/labs/nonbounce/\" rel=\"nofollow\">http://www.hakoniemi.net/labs/nonbounce/</a></li>\n<li><a href=\"http://www.kylejlarson.com/blog/2011/fixed-elements-and-scrolling-divs-in-ios-5/\" rel=\"nofollow\">http://www.kylejlarson.com/blog/2011/fixed-elements-and-scrolling-divs-in-ios-5/</a></li>\n<li><a href=\"http://cubiq.org/iscroll-4\" rel=\"nofollow\">http://cubiq.org/iscroll-4</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've been working on a mobile webapp as of late. I'm optimizing mobile-first, focusing specifically on iOS for the iPhone right now. I don't want the precise look of a native app, but I think that the <em>feeling</em> of being native is of absolute importance. I've made the markup and CSS to reflect this idea, leaving me with this (annotated to better understand the problem I'm having later on):</p>\n\n<p><img src=\"http://i.stack.imgur.com/jrKpV.png\" alt=\"Webapp markup\"></p>\n\n<p>This all works problem-free, and it also has the advantage of having a native feel, with static header and footer, and a scrollable inner view (thanks to <code>-webkit-overflow-scrolling: touch</code>).</p>\n\n<p>As anyone who has used iOS for more than 5 minutes will know, when you scroll up or down, you get some nice momentum scrolling. Also, when you hit the top of a list, you get a nice 'bounce' effect:</p>\n\n<p><img src=\"http://i.stack.imgur.com/oi5CZ.png\" alt=\"List bouncing in Settings.app\"></p>\n\n<p>I feel that this helps to define the feeling of iOS, and such a small detail can go a long way. Luckily, when you are below the top of a list in a scrollable element in a webapp, and scroll past the top, you get the same effect. This is the <strong>desired behavior</strong> in action:</p>\n\n<p><img src=\"http://i.stack.imgur.com/jU48Y.png\" alt=\"Scrolling down and up in a webapp produces this bouncing effect\"></p>\n\n<p>However, when you are at the top of the list, and try to recreate the same bouncing behavior a the top of the list (\u00e0 la Setting.app, seen above), we get the following behavior, which is <strong>not desired</strong>:\n<img src=\"http://i.stack.imgur.com/yG2ps.png\" alt=\"Scrolling down produces the bouncing effect for the entire chrome of the app\"></p>\n\n<p>I've seen some <a href=\"http://stackoverflow.com/questions/9108599/disabling-ios-elastic-body-scroll-keep-native-scrolling-working\">similar</a> <a href=\"http://stackoverflow.com/questions/9669670/how-to-disable-vertical-bounce-scroll-on-iphone-in-a-mobile-web-application\">questions</a> on Stack Overflow, but these all opt for disabling bouncing. I'm wondering if it's at all possible to <strong>keep bouncing, but always make it occur on <code>body section section#main</code>, not on webapp's chrome</strong>. I'm not using jQuery, so I'd prefer answers to be in straight-up JavaScript (bonus points for a CSS solution, though).</p>\n\n<p>Here's a <a href=\"https://github.com/kylewlacy/planner/tree/so\">GitHub repo</a> with all of the code (Sinatra, HAML, and Sass; current branch is <code>so</code>), or a <a href=\"http://jsfiddle.net/kylewlacy/gFpQr/\">JSFiddle</a> with broken images and links, but shows the issue in question on an iPhone (best to add to homescreen to test).</p>\n",
            "last_activity_date": 1383031170,
            "question_id": 12663576,
            "score": 36,
            "tags": [
                "javascript",
                "ios",
                "css",
                "web-applications",
                "iphone-web-app"
            ],
            "title": "Prevent scroll bounce for the body element, but keep it for child elements in iOS"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Try:</p>\n\n<pre><code>//using the form as the jQuery selector (recommended)\n$('form').submit(function(evt) {\n    evt.preventDefault();\n    var $form = $(this);\n    if($form.valid()) {\n        //Ajax call here\n    }\n});\n\n//using the click event on the submit button\n$('#buttonId').click(function(evt) {\n    evt.preventDefault();\n    var $form = $('form');\n    if($form.valid()) {\n        //Ajax call here\n    }\n});\n</code></pre>\n\n<p>This should work with jQuery ajax and MSAjax calls. Could also try using <a href=\"http://nuget.org/packages/TakeCommand.js\">http://nuget.org/packages/TakeCommand.js</a> or <a href=\"https://github.com/webadvanced/takeCommand\">https://github.com/webadvanced/takeCommand</a> it will automatically handle this for you.</p>\n",
                    "is_accepted": true,
                    "score": 57
                },
                {
                    "body": "<p>I have been phaffing about with MVC client side validation for days:</p>\n\n<p>Don't use .click use .submit:</p>\n\n<pre><code>$(\"#MyForm\").submit(function () {\n\n    if($(\"#MyForm\").valid())\n    {\n        //Do ajax stuff\n    }\n\n    //Return false regardless of validation to stop form submitting\n    //prior to ajax doing its thing\n    return false;\n});\n</code></pre>\n\n<p>I'm going add an update to this, consider cancelling the event rather than returning false (or do both):</p>\n\n<pre><code>$(\"#MyForm\").submit(function (e) {\n\n    if($(\"#MyForm\").valid())\n    {\n        //Do ajax stuff\n    }\n\n    e.preventDefault();\n\n    //Return false regardless of validation to stop form submitting\n    //prior to ajax doing its thing\n    return false;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<h2>IMPORTANT!!:</h2>\n\n<p>Paul's solution is the correct answer to the question, not Dr Rob's.  </p>\n\n<p>Although you can just use valid() instead of validate().form().</p>\n\n<p>But more importantly, there really is no reason to restrict your code as suggested by Dr Rob, ie, not .click and only use .submit.  That isn't what solved the problem!  What solved the problem was wrapping the $.ajax(...) call in the if statement.  Ie:</p>\n\n<pre><code>if($(\"#MyForm\").valid())\n{\n    //call to $.ajax or equivalent goes in here.\n}\n</code></pre>\n\n<p>I think that needs clarifying as otherwise the real answer to the problem is obfuscated.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>At least in my case (MVC 5), it was also necessary to add the following code or else <code>.valid()</code> would always return true:</p>\n\n<pre><code>$(function () {\n$(document).ajaxComplete(function(event, request, settings){\n    //re-parse the DOM after Ajax to enable client validation for any new form fields that have it enabled\n    $.validator.unobtrusive.parse(document);\n});\n</code></pre>\n\n<p>});</p>\n\n<p>See <a href=\"http://johnculviner.com/the-unobtrusive-libraries-client-validation-on-ajax-in-asp-net-mvc-3/\" rel=\"nofollow\">http://johnculviner.com/the-unobtrusive-libraries-client-validation-on-ajax-in-asp-net-mvc-3/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>$(YourForm).data('unobtrusiveValidation').validate()</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am creating an MVC 3 web application. I want to use Data Annotations on my entity class and then use onobtrusive client side validation before making a post back to the server. This works fine when making a regular post. I get validation and the validation summary if any of the fields are not valid. However, I want to post back the information via ajax and json. How can I can I 'manually' validate the form on the client side first then make my ajax post back to the server. Below is a summarized version of my code.</p>\n\n<pre><code>  public class Customer\n    {\n        [Required(ErrorMessage = \"The customer's first name is required.\")]\n        public string FirstName { get; set; }\n\n        [Required(ErrorMessage = \"The customer's last name is required.\")]\n        public string LastName { get; set; }\n    }\n\n\n\n    &lt;% using (Html.BeginForm()) { %&gt;\n\n    &lt;%: Html.LabelFor(model =&gt; model.FirstName, \"First Name\")%&gt;\n    &lt;%: Html.TextBoxFor(model =&gt; model.FirstName, new { @class = \"TextBox\", id = \"Customer.FirstName\" })%&gt;\n    &lt;%: Html.ValidationMessageFor(model =&gt; model.FirstName, \"*\")%&gt;\n\n    &lt;%: Html.LabelFor(model =&gt; model.LastName, \"Last Name\")%&gt;\n    &lt;%: Html.TextBoxFor(model =&gt; model.LastName, new { @class = \"TextBox\", id = \"Customer.LastName\" })%&gt;\n    &lt;%: Html.ValidationMessageFor(model =&gt; model.LastName, \"*\")%&gt;\n\n    &lt;div id=\"CustomerEditSave\" class=\"Button CustomerEditButtons\" style=\"margin-right:40px;\"&gt;\n       &lt;a href=\"#\"&gt;Save&lt;/a&gt;\n    &lt;/div&gt;\n\n    &lt;%: Html.ValidationSummary(true) %&gt;\n\n    &lt;% } %&gt;\n</code></pre>\n\n<p>I have tried this code but it only validates the first name and does not display the validation summary.</p>\n\n<pre><code>    $(\"#CustomerEditSave\").click(function () {\n        $(form).validate();\n        //Ajax call here\n    });\n</code></pre>\n",
            "last_activity_date": 1416210803,
            "question_id": 5127813,
            "score": 36,
            "tags": [
                "javascript",
                "jquery",
                "asp.net-mvc",
                "validation",
                "asp.net-mvc-3"
            ],
            "title": "Call MVC 3 Client Side Validation Manually for ajax posts"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Checkout the <code>uncaughtException</code> handler in node.js. It captures the thrown errors that bubble up to the event loop.</p>\n\n<p><a href=\"http://nodejs.org/docs/v0.4.7/api/process.html#event_uncaughtException_\" rel=\"nofollow\">http://nodejs.org/docs/v0.4.7/api/process.html#event_uncaughtException_</a></p>\n\n<p>But not throwing errors is always a better solution. You could just do a <code>return res.end('Unabled to load file xxx');</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is one of the problems with Node right now. It's practically impossible to track down which request caused an error to be thrown inside a callback. </p>\n\n<p>You're going to have to handle your errors within the callbacks themselves (where you still have a reference to the request and response objects), if possible. The uncaughtException handler will stop the node process from exiting, but the request that caused the exception in the first place will just hang there from the user point of view.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>One idea: You could just use a helper method to create your call backs and make it your standard practice to use it. This does put the burden on the developer still, but at least you can have a \"standard\" way of handling your callbacks such that the chance of forgetting one is low:</p>\n\n<pre><code>var callWithHttpCatch = function(response, fn) {\n    try {\n        fn &amp;&amp; fn();\n    }\n    catch {\n        response.writeHead(500, {'Content-Type': 'text/plain'}); //No\n    }\n}\n\n&lt;snipped&gt;\n      var buffer = new require('buffer').Buffer(10);\n      fs.read(fd, buffer, 0, 10, null,\n        function(error, bytesRead, buffer) {\n\n          callWithHttpCatch(response, buffer.dontTryThisAtHome());  // causes exception\n\n          response.end(buffer);\n        }); //fs.read\n\n    }); //fs.open\n</code></pre>\n\n<p>I know that probably isn't the answer you were looking for, but one of the nice things about ECMAScript (or functional programming in general) is how easily you can roll your own tooling for things like this.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I give an answer to my own question... :)</p>\n\n<p>As it seems there is no way around to manually catch errors. I now use a helper function that itself returns a <em>function</em> containing a try/catch block. Additionally, my own web server class checks if either the request handling function calls <code>response.end()</code> <strong>or</strong> the try/catch helper function <code>waitfor()</code> (raising an exception otherwise). This avoids to a great extent that request are mistakenly left unprotected by the developer. It isn't a 100% error-prone solution but works well enough for me.</p>\n\n<pre><code>handler.waitfor = function(callback) {\n  var me=this;\n\n  // avoid exception because response.end() won't be called immediately:\n  this.waiting=true;\n\n  return function() {\n    me.waiting=false;\n    try {\n      callback.apply(this, arguments);\n\n      if (!me.waiting &amp;&amp; !me.finished)\n        throw new Error(\"Response handler returned and did neither send a \"+\n          \"response nor did it call waitfor()\");\n\n    } catch (e) {\n      me.handleException(e);\n    }\n  }\n}\n</code></pre>\n\n<p>This way I just have to add a inline <code>waitfor()</code> call to be on the safe side.</p>\n\n<pre><code>function handleRequest(request, response, handler) {\n  fs.read(fd, buffer, 0, 10, null, handler.waitfor(\n    function(error, bytesRead, buffer) {\n\n      buffer.unknownFunction();  // causes exception\n      response.end(buffer);\n    }\n  )); //fs.read\n}\n</code></pre>\n\n<p>The actual checking mechanism is a little more complex, but it should be clear how it works. If someone is interested I can post the full code here.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Very good question. I'm dealing with the same problem now. Probably the best way, would be to use <code>uncaughtException</code>. The reference to respone and request objects is not the problem, because you can wrap them into your exception object, that is passed to <code>uncaughtException</code> event. Something like this:</p>\n\n<pre><code>var HttpException = function (request, response, message, code) {\n\n  this.request = request;\n  this.response = response;  \n  this.message = message;    \n  this.code = code || 500;\n\n}\n</code></pre>\n\n<p>Throw it:</p>\n\n<pre><code>throw new HttpException(request, response, 'File not found', 404);\n</code></pre>\n\n<p>And handle the response:</p>\n\n<pre><code>process.on('uncaughtException', function (exception) {\n  exception.response.writeHead(exception.code, {'Content-Type': 'text/html'});\n  exception.response.end('Error ' + exception.code + ' - ' + exception.message);\n});\n</code></pre>\n\n<p>I haven't test this solution yet, but I don't see the reason why this couldn't work.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Two things have really helped me solve this problem in my code.</p>\n\n<ol>\n<li>The 'longjohn' module, which lets you see the full stack trace (across multiple asyncronous callbacks).</li>\n<li><p>A simple closure technique to keep exceptions within the standard <code>callback(err, data)</code> idiom (shown here in CoffeeScript).</p>\n\n<pre><code>ferry_errors = (callback, f) -&gt;\n  return (a...) -&gt;\n    try f(a...)\n    catch err\n      callback(err)\n</code></pre></li>\n</ol>\n\n<p>Now you can wrap unsafe code, and your callbacks all handle errors the same way: by checking the error argument.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Node 0.8 introduces a new concept called \"Domains\". They are very roughly analogousness to AppDomains in .net and provide a way of encapsulating a group of IO operations. They basically allow you to wrap your request processing calls in a context specific group. If this group throws any uncaught exceptions then they can be handled and dealt with in a manner which gives you access to all the scope and context specific information you require in order to successfully recover from the error (if possible).</p>\n\n<p>This feature is new and has only just been introduced, so use with caution, but from what I can tell it has been specifically introduced to deal with the problem which the OP is trying to tackle.</p>\n\n<p>Documentation can be found at: <a href=\"http://nodejs.org/api/domain.html\">http://nodejs.org/api/domain.html</a></p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>I've recently created a simple abstraction named WaitFor to call async functions in sync mode (based on Fibers): <a href=\"https://github.com/luciotato/waitfor\" rel=\"nofollow\">https://github.com/luciotato/waitfor</a></p>\n\n<p>It's too new to be \"rock solid\". </p>\n\n<p>using <strong>wait.for</strong> you can use async function as if they were sync, without blocking node's event loop. It's almost the same you're used to:</p>\n\n<pre><code>var wait=require('wait.for');\n\nfunction handleRequest(request, response) {\n      //launch fiber, keep node spinning\n      wait.launchFiber(handleinFiber,request, response); \n}\n\nfunction handleInFiber(request, response) {\n  try {\n    if (request.url==\"whatever\")\n      handleWhateverRequest(request, response);\n    else\n      throw new Error(\"404 not found\");\n\n  } catch (e) {\n    response.writeHead(500, {'Content-Type': 'text/plain'});\n    response.end(\"Server error: \"+e.message);\n  }\n}\n\nfunction handleWhateverRequest(request, response, callback) {\n  if (something) \n    throw new Error(\"something bad happened\");\n  Response.end(\"OK\");\n}\n</code></pre>\n\n<p>Since you're in a fiber, you can program sequentially, \"blocking the fiber\", but not node's event loop.</p>\n\n<p>The other example:</p>\n\n<pre><code>var sys    = require('sys'),\n    fs     = require('fs'),\n    wait   = require('wait.for');\n\nrequire(\"http\").createServer( function(req,res){\n      wait.launchFiber(handleRequest,req,res) //handle in a fiber\n  ).listen(8124);\n\nfunction handleRequest(request, response) {\n  try {\n    var fd=wait.for(fs.open,\"/proc/cpuinfo\", \"r\");\n    console.log(\"File open.\");\n    var buffer = new require('buffer').Buffer(10);\n\n    var bytesRead=wait.for(fs.read,fd, buffer, 0, 10, null);\n\n    buffer.dontTryThisAtHome();  // causes exception\n\n    response.end(buffer);\n  }\n  catch(err) {\n    response.end('ERROR: '+err.message);\n  }\n\n}\n</code></pre>\n\n<p>As you can see, I used <strong>wait.for</strong> to call node's async functions in sync mode, \nwithout (visible) callbacks, so I can have all the code inside one try-catch block.</p>\n\n<p><strong>wait.for</strong> will throw an exception if any of the async functions returns err!==null</p>\n\n<p>more info at <a href=\"https://github.com/luciotato/waitfor\" rel=\"nofollow\">https://github.com/luciotato/waitfor</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>At the time of this writing, the approach I am seeing is to use \"Promises\".</p>\n\n<p><a href=\"http://howtonode.org/promises\" rel=\"nofollow\">http://howtonode.org/promises</a><br/>\n<a href=\"https://www.promisejs.org/\" rel=\"nofollow\">https://www.promisejs.org/</a></p>\n\n<p>These allow code and callbacks to be structured well for error management and also makes it more readable.\nIt primarily uses the <strong>.then()</strong> function.</p>\n\n<pre><code>someFunction().then(success_callback_func, failed_callback_func);\n</code></pre>\n\n<p>Here's a basic example:</p>\n\n<pre><code>  var SomeModule = require('someModule');\n\n  var success = function (ret) {\n      console.log('&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Success!');\n  }\n\n  var failed = function (err) {\n    if (err instanceof SomeModule.errorName) {\n      // Note: I've often seen the error definitions in SomeModule.errors.ErrorName\n      console.log(\"FOUND SPECIFIC ERROR\");\n    }\n    console.log('&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; FAILED!');\n  }\n\n  someFunction().then(success, failed);\n  console.log(\"This line with appear instantly, since the last function was asynchronous.\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm new to node.js although I'm pretty familiar with JavaScript in general. My question is regarding \"best practices\" on how to handle errors in node.js.</p>\n\n<p>Normally when programming web servers, FastCGI servers or web pages in various languages I'm using Exceptions with blocking handlers in a multi-threading environment. When a request comes in I usually do something like this:</p>\n\n<pre><code>function handleRequest(request, response) {\n  try {\n\n    if (request.url==\"whatever\")\n      handleWhateverRequest(request, response);\n    else\n      throw new Error(\"404 not found\");\n\n  } catch (e) {\n    response.writeHead(500, {'Content-Type': 'text/plain'});\n    response.end(\"Server error: \"+e.message);\n  }\n}\n\nfunction handleWhateverRequest(request, response) {\n  if (something) \n    throw new Error(\"something bad happened\");\n  Response.end(\"OK\");\n}\n</code></pre>\n\n<p>This way I can always handle internal errors and send a valid response to the user.</p>\n\n<p>I understand that with node.js one is supposed to do non-blocking calls which obviously leads to various number of callbacks, like in this example:</p>\n\n<pre><code>var sys    = require('sys'),\n    fs     = require('fs');\n\nrequire(\"http\").createServer(handleRequest).listen(8124);\n\nfunction handleRequest(request, response) {\n\n  fs.open(\"/proc/cpuinfo\", \"r\",\n    function(error, fd) {\n      if (error)\n        throw new Error(\"fs.open error: \"+error.message);\n\n      console.log(\"File open.\");\n\n      var buffer = new require('buffer').Buffer(10);\n      fs.read(fd, buffer, 0, 10, null,\n        function(error, bytesRead, buffer) {\n\n          buffer.dontTryThisAtHome();  // causes exception\n\n          response.end(buffer);\n        }); //fs.read\n\n    }); //fs.open\n\n}\n</code></pre>\n\n<p>This example will kill the server completely because exceptions aren't being catched.\nMy problem is here that I can't use a single try/catch anymore and thus can't generally catch any error that may be raised during the handling of the request. </p>\n\n<p>Of course I could add a try/catch in each callback but I don't like that approach because then it's up to the programmer that he doesn't <em>forget</em> a try/catch. For a complex server with lots of different and complex handlers this isn't acceptable.</p>\n\n<p>I could use a global exception handler (preventing the complete server crash) but then I can't send a response to the user since I don't know which request lead to the exception. This also means that the request remains unhandled/open and the browser is waiting forever for a response.</p>\n\n<p>Does someone have a good, rock solid solution?</p>\n",
            "last_activity_date": 1406132825,
            "question_id": 5816436,
            "score": 35,
            "tags": [
                "javascript",
                "exception-handling",
                "callback",
                "node.js"
            ],
            "title": "error handling in asynchronous node.js calls"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can use OpenLayers (js API for maps).</p>\n\n<p>There's an <a href=\"http://openlayers.org/dev/examples/sundials-spherical-mercator.html\" rel=\"nofollow\">example</a> on their page showing how to embed OSM tiles.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You need to use some JavaScript stuff to show your map. OpenLayers is the number one choice for this.</p>\n\n<p>There is an example at <a href=\"http://wiki.openstreetmap.org/wiki/OpenLayers_Simple_Example\">http://wiki.openstreetmap.org/wiki/OpenLayers_Simple_Example</a> and something more advanced at</p>\n\n<p><a href=\"http://wiki.openstreetmap.org/wiki/OpenLayers_Marker\">http://wiki.openstreetmap.org/wiki/OpenLayers_Marker</a></p>\n\n<p>and</p>\n\n<p><a href=\"http://wiki.openstreetmap.org/wiki/Openlayers_POI_layer_example\">http://wiki.openstreetmap.org/wiki/Openlayers_POI_layer_example</a></p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>I would also take a look at <a href=\"http://developers.cloudmade.com/projects\">CloudMade's developer tools</a>.  They offer a beautifully styled OSM base map service, an OpenLayers plugin, and even their own light-weight, very fast JavaScript mapping client.  They also host their own routing service, which you mentioned as a possible requirement.  They have great documentation and examples.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Take a look at <a href=\"http://www.mapstraction.com/\" rel=\"nofollow\">mapstraction</a>.  This can give you more flexibility to provide maps based on google, osm, yahoo, etc however your code won't have to change.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There's now also <a href=\"http://leafletjs.com/\" rel=\"nofollow\">Leaflet</a>, which is built with mobile devices in mind. </p>\n\n<p>For a simple map, it is IMHO easier and faster to set up than OpenLayers, yet fully configurable and tweakable for more complex uses.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there a way to embed/mashup the OpenStreetMap in your page (like the way <a href=\"http://code.google.com/apis/maps/\">Google Maps API</a> works)?</p>\n\n<p>I need to show a map inside my page with some markers and allow dragging/zooming around, maybe routing.\nI suspect there would be some Javascript API for this, but I can't seem to find it.</p>\n\n<p>Searching gets me an <a href=\"http://wiki.openstreetmap.org/wiki/API\">API for access to raw map data</a>, but that seems to be more for map editing; besides, working with that would be a heavy task for AJAX.</p>\n",
            "last_activity_date": 1398669596,
            "question_id": 925164,
            "score": 33,
            "tags": [
                "javascript",
                "api",
                "maps",
                "openstreetmap"
            ],
            "title": "Openstreetmap: embedding map in webpage (like Google Maps)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No, you can just write the function as:</p>\n\n<pre><code>$(document).ready(function() {\n    MyBlah(\"hello\");\n});\n\nfunction MyBlah(blah) {\n    alert(blah);\n}\n</code></pre>\n\n<p>This calls the function <code>MyBlah</code> on content ready.</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>That is how you define an anonymous function that gets called when the document is ready.</p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>No. </p>\n\n<p>You define the functions exactly the same way you would in regular javascript.</p>\n\n<pre><code>//document ready\n$(function(){\n    myBlah();\n})\n\nvar myBlah = function(blah){\n    alert(blah);\n}\n</code></pre>\n\n<p>Also: There is no need for the $</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>First of all, your code works and that's a valid way of creating a function in JavaScript (jQuery aside), but because you are declaring a function inside another function (an anonymous one in this case) \"MyBlah\" will not be accessible from the global scope.</p>\n\n<p>Here's an example:</p>\n\n<pre><code>$(document).ready( function () {\n\n    var MyBlah = function($blah) { alert($blah);  };\n\n    MyBlah(\"Hello this works\") // Inside the anonymous function we are cool.\n\n });\n\nMyBlah(\"Oops\") //This throws a JavaScript error (MyBlah is not a function)\n</code></pre>\n\n<p>This is (sometimes) a desirable behavior since we <strong>do not pollute the global namespace</strong>, so if your function does not need to be called from other part of your code, this is the way to go.</p>\n\n<p>Declaring it outside the anonymous function places it in the global namespace, and it's accessible from everywhere.</p>\n\n<p>Lastly, the <strong>$</strong> at the beginning of the variable name is not needed, and sometimes used as a jQuery convention when the variable is an instance of the jQuery object itself (not necessarily in this case).</p>\n\n<p>Maybe what you need is creating a <a href=\"http://addictedtonew.com/archives/414/creating-a-jquery-plugin-from-scratch/\">jQuery plugin</a>, this is very very easy and useful as well since it will allow you to do something like this:</p>\n\n<pre><code>$('div#message').myBlah(\"hello\")\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 64
                },
                {
                    "body": "<p>You can extend jQuery prototype and use your function as a jQuery method.</p>\n\n<pre><code>(function($)\n{\n    $.fn.MyBlah = function(blah)\n    {\n        $(this).addClass(blah);\n        console.log('blah class added');\n    };\n})(jQuery);\n\njQuery(document).ready(function($)\n{\n    $('#blahElementId').MyBlah('newClass');\n});\n</code></pre>\n\n<p>More info on extending jQuery prototype here: <a href=\"http://api.jquery.com/jquery.fn.extend/\" rel=\"nofollow\">http://api.jquery.com/jquery.fn.extend/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is this how you define a function in jQuery?</p>\n\n<pre><code>$(document).ready( function () {\n    var MyBlah = function($blah) { alert($blah);  };\n });\n</code></pre>\n\n<p>Now to call the function I do:</p>\n\n<pre><code>MyBlah('hello');\n</code></pre>\n",
            "last_activity_date": 1397043462,
            "question_id": 907634,
            "score": 33,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Is this how you define a function in jQuery?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>var scrollBottom = $(window).scrollTop() + $(window).height();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>I would say that a scrollBottom as a direct opposite of scrollTop should be:</p>\n\n<pre><code>var scrollBottom = $(document).height() - $(window).height() - $(window).scrollTop();\n</code></pre>\n\n<p>Here is a small ugly test that works for me:</p>\n\n<pre><code>// SCROLLTESTER START //\n$('&lt;h1 id=\"st\" style=\"position: fixed; right: 25px; bottom: 25px;\"&gt;&lt;/h1&gt;').insertAfter('body');\n\n$(window).scroll(function () {\n  var st = $(window).scrollTop();\n  var scrollBottom = $(document).height() - $(window).height() - $(window).scrollTop();\n\n  $('#st').replaceWith('&lt;h1 id=\"st\" style=\"position: fixed; right: 25px; bottom: 25px;\"&gt;scrollTop: ' + st + '&lt;br&gt;scrollBottom: ' + scrollBottom + '&lt;/h1&gt;');\n});\n// SCROLLTESTER END //\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<pre><code>var scrollBottom =\n    $(document).height() - $(window).height() - $(window).scrollTop();\n</code></pre>\n\n<p>I think it is better to get bottom scroll.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to place an element to the bottom of the page whenever the user scrolls the page. It's like \"fixed position\" but I can't use \"position: fixed\" css as many of my clients' browser can't support that.</p>\n\n<p>I noticed jquery can get current viewport's top position, but how can I get the bottom of the scroll viewport?</p>\n\n<p>So I am asking how to know: $(window).scrollBottom() </p>\n",
            "last_activity_date": 1409690138,
            "question_id": 4655273,
            "score": 30,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jquery: $(window).scrollTop() but no $(window).scrollBottom()"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here is the trick using ng-show</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;div ng-controller=\"Ctrl\"&gt;\n&lt;h1&gt;My Foo&lt;/h1&gt;\n&lt;ul&gt;\n    &lt;li ng-repeat=\"foo in foos\"&gt;\n        &lt;a href=\"#\" ng-click=\"setBarFilter(foo.name)\"&gt;{{foo.name}}&lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n&lt;br /&gt;\n&lt;h1&gt;My Bar&lt;/h1&gt;\n&lt;ul&gt;\n    &lt;li ng-repeat=\"bar in bars | filter:barFilter\"&gt;{{bar.name}}&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p ng-show=\"(bars | filter:barFilter).length == 0\"&gt;Nothing here!&lt;/p&gt;\n\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>jsFiddle:</strong> <a href=\"http://jsfiddle.net/adrn/PEumV/2/\">http://jsfiddle.net/adrn/PEumV/2/</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>A tweak on the approach that only requires you to specify the filter once:</p>\n\n<pre><code>  &lt;li ng-repeat=\"bar in filteredBars = (bars | filter:barFilter)\"&gt;{{bar.name}}&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p ng-hide=\"filteredBars.length\"&gt;Nothing here!&lt;/p&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/mrajcok/k4u5z/\">Fiddle</a></p>\n",
                    "is_accepted": true,
                    "score": 91
                }
            ],
            "body": "<p>I want to have a place holder, e.g. <code>&lt;No result&gt;</code> when filter result returns empty. Could anyone please help? I don't even know where to start...</p>\n\n<p><strong>HTML</strong>:</p>\n\n<pre><code>&lt;div ng-controller=\"Ctrl\"&gt;\n&lt;h1&gt;My Foo&lt;/h1&gt;\n&lt;ul&gt;\n    &lt;li ng-repeat=\"foo in foos\"&gt;\n        &lt;a href=\"#\" ng-click=\"setBarFilter(foo.name)\"&gt;{{foo.name}}&lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n&lt;br /&gt;\n&lt;h1&gt;My Bar&lt;/h1&gt;\n&lt;ul&gt;\n    &lt;li ng-repeat=\"bar in bars | filter:barFilter\"&gt;{{bar.name}}&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>JS</strong>:</p>\n\n<pre><code>function Ctrl($scope) {\n\n  $scope.foos = [{\n    name: 'Foo 1'\n  },{\n    name: 'Foo 2'\n  },{\n    name: 'Foo 3'\n  }];\n\n  $scope.bars = [{\n    name: 'Bar 1',\n    foo: 'Foo 1'\n  },{\n    name: 'Bar 2',\n    foo: 'Foo 2'\n  }];\n\n  $scope.setBarFilter = function(foo_name) {\n    $scope.barFilter = {};\n    $scope.barFilter.foo = foo_name;\n  }\n}\n</code></pre>\n\n<p><strong>jsFiddle</strong>: <a href=\"http://jsfiddle.net/adrn/PEumV/1/\">http://jsfiddle.net/adrn/PEumV/1/</a></p>\n\n<p>Thanks!            </p>\n",
            "last_activity_date": 1359760343,
            "question_id": 14615495,
            "score": 29,
            "tags": [
                "javascript",
                "html",
                "angularjs"
            ],
            "title": "AngularJS - placeholder for empty result from filter"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I think you're misunderstanding how backbone works. Backbone is an MVC library for javascript, not a web server.  File uploads are negotiated between the clients browser and your server. Backbone is just the middle layer that helps you organize and present data in an easy, convenient manner.</p>\n\n<p>That being said, what you need to do to associate a file with your model is 1) handle the upload with rails and then 2) store the file name and location in a string within your model.</p>\n\n<p>So here's the file uploading part:</p>\n\n<blockquote>\n  <p><a href=\"http://khamsouk.souvanlasy.com/articles/ajax-file-uploads-in-rails-using-attachment_fu-and-responds_to_parent\" rel=\"nofollow\">http://khamsouk.souvanlasy.com/articles/ajax-file-uploads-in-rails-using-attachment_fu-and-responds_to_parent</a></p>\n</blockquote>\n\n<p>Once you get back the list_item object, you would just create a new field in your model and store <code>list_item.filename</code> and <code>asset_path(list_item)</code>.</p>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You may want to check out the <a href=\"http://cmlenz.github.com/jquery-iframe-transport/\" rel=\"nofollow\">jquery.iframe.transport</a> plugin. If you're using rails 3, you can use <a href=\"https://github.com/leppert/remotipart\" rel=\"nofollow\">remotipart</a> instead (it bundles the iframe.transport plugin), which hooks into rails's ujs driver to automatically add support for file upload in ajax requests.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Answering my own question after few months of trial using different methods. My solution is the following (with Rails).</p>\n\n<p>For any form that requires file upload I would set <code>data-remote=\"true\"</code> and <code>enctype=\"multipart/form-data\"</code> and include <a href=\"https://github.com/rails/jquery-ujs/blob/master/src/rails.js\">rails.js</a> and <a href=\"https://github.com/cmlenz/jquery-iframe-transport/blob/master/jquery.iframe-transport.js\">jquery.iframe-transport.js</a>.</p>\n\n<p>Setting <code>data-remote=\"true\"</code> with <a href=\"https://github.com/rails/jquery-ujs/blob/master/src/rails.js\">rails.js</a> allows me to bind to <code>ajax:success</code> and create the Backbone.js model on success.</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;form action=\"/posts.js\" method=\"post\" data-remote=\"true\" enctype=\"multipart/form-data\"&gt;\n  &lt;input type=\"text\" name=\"post[message]\" /&gt;\n  &lt;input type=\"file\" name=\"post[file]\" /&gt;\n  &lt;button&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p><strong>JavaScript:</strong></p>\n\n<p><em>You should obviously bind <code>ajax:error</code> to handle error cases.</em></p>\n\n<p><em>For me, the data is sanitized in the <code>ActiveRecord</code> model, so don't have to worry too much about the <code>eval</code> statement.</em></p>\n\n<pre><code>$('form').bind('ajax:success', function(event, data) {\n  new Model(eval(data)); // Your newly created Backbone.js model\n});\n</code></pre>\n\n<p><strong>Rails Controller:</strong></p>\n\n<pre><code>class PostsController &lt; ApplicationController\n  respond_to :js\n\n  def create\n    @post = Post.create(params[:post])\n    respond_with @post\n  end\nend\n</code></pre>\n\n<p><strong>Rails View (create.js.haml):</strong></p>\n\n<p><em>Using the <a href=\"https://github.com/leppert/remotipart\">remotipart</a> gem.</em></p>\n\n<p><em>This will handle the case when the form does file uploads with <code>enctype</code> being set, and when it doesn't.</em></p>\n\n<p><em>You could choose to call <code>sanitize</code> on your response here.</em></p>\n\n<pre><code>= remotipart_response do\n  - if remotipart_submitted?\n    = \"eval(#{Yajl::Encoder.encode(@post)});\"\n  - else\n    =raw \"eval(#{Yajl::Encoder.encode(@post)});\"\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>If you don't mind to break backward compatibility, you can take advantage of <a href=\"http://caniuse.com/#search=XMLHttpRequest%202\" rel=\"nofollow\">XHR2 and FormData</a>\n<br><br>\nIt's simple as that:</p>\n\n<pre><code>var data = new FormData( $('form.someForm').get(0) );\n$.ajax('http://*****.com', {\n  type:'POST',\n  data: data,\n  processData: false,\n  contentType: false // it automaticly sets multipart/form-data; boundary=...\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using Backbone.js in a Rails app and I need to do file uploads as part of one of the Backbone models.</p>\n\n<p>I don't believe Backbone allows for multi-part file upload out of the box. Has anyone managed to get it working via some plugin or with another external lib? How can I extend Backbone.js to support this?</p>\n",
            "last_activity_date": 1383339190,
            "question_id": 6500379,
            "score": 29,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "backbone.js"
            ],
            "title": "File upload with Backbone"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Using the function above, you would do:</p>\n\n<pre><code>var myHash = new Hash('one',[1,10,5],'two', [2], 'three',[3,30,300]);\n</code></pre>\n\n<p>Of course, the following would also work:</p>\n\n<pre><code>var myHash = {}; // New object\nmyHash['one'] = [1,10,5];\nmyHash['two'] = [2];\nmyHash['three'] = [3, 30, 300];\n</code></pre>\n\n<p>since all objects in JavaScript are hash tables! It would, however, be harder to iterate over since using <code>foreach(var item in object)</code> would also get you all its functions, etc., but that might be enough depending on your needs.</p>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>If all you want to do is store some static values in a lookup table, you can use an <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Values,_variables,_and_literals#Object_literals\">Object Literal</a> (the same format used by <a href=\"http://json.org\">JSON</a>) to do it compactly:</p>\n\n<pre><code>var table = { one: [1,10,5], two: [2], three: [3, 30, 300] }\n</code></pre>\n\n<p>And then access them using JavaScript's associative array syntax:</p>\n\n<pre><code>alert(table['one']);    // Will alert with [1,10,5]\nalert(table['one'][1]); // Will alert with 10\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>You could use my JavaScript hash table implementation, <a href=\"http://www.timdown.co.uk/jshashtable/\">jshashtable</a>. It allows any object to be used as a key, not just strings.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The Javascript interpreter natively stores objects in a hash table. If you're worried about contamination from the prototype chain, you can always do something like this:</p>\n\n<pre><code>// Simple ECMA5 hash table\nHash = function(oSource){\n  for(sKey in oSource) if(Object.prototype.hasOwnProperty.call(oSource, sKey)) this[sKey] = oSource[sKey];\n};\nHash.prototype = Object.create(null);\n\nvar oHash = new Hash({foo: 'bar'});\noHash.foo === 'bar'; // true\noHash['foo'] === 'bar'; // true\noHash['meow'] = 'another prop'; // true\noHash.hasOwnProperty === undefined; // true\nObject.keys(oHash); // ['foo', 'meow']\noHash instanceof Hash; // true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am using a hash table in JavaScript, and I want to show the values of the following in a hash table</p>\n\n<pre><code>one   -[1,10,5]\ntwo   -[2]\nthree -[3, 30, 300, etc.]\n</code></pre>\n\n<p>I have found the following code. It works for the following data.</p>\n\n<pre><code>   one  -[1]\n   two  -[2]\n   three-[3]\n</code></pre>\n\n<p>How do I assign one-[1,2] values to a hash table and how do I access it?</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function Hash()\n    {\n        this.length = 0;\n        this.items = new Array();\n        for (var i = 0; i &lt; arguments.length; i += 2) {\n            if (typeof(arguments[i + 1]) != 'undefined') {\n                this.items[arguments[i]] = arguments[i + 1];\n                this.length++;\n            }\n        }\n\n        this.removeItem = function(in_key)\n        {\n            var tmp_value;\n            if (typeof(this.items[in_key]) != 'undefined') {\n                this.length--;\n                var tmp_value = this.items[in_key];\n                delete this.items[in_key];\n            }\n            return tmp_value;\n        }\n\n        this.getItem = function(in_key) {\n            return this.items[in_key];\n        }\n\n        this.setItem = function(in_key, in_value)\n        {\n            if (typeof(in_value) != 'undefined') {\n                if (typeof(this.items[in_key]) == 'undefined') {\n                    this.length++;\n                }\n\n                this.items[in_key] = in_value;\n            }\n            return in_value;\n        }\n\n        this.hasItem = function(in_key)\n        {\n            return typeof(this.items[in_key]) != 'undefined';\n        }\n    }\n\n    var myHash = new Hash('one',1,'two', 2, 'three',3 );\n\n    for (var i in myHash.items) {\n        alert('key is: ' + i + ', value is: ' + myHash.items[i]);\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>How do I do it?</p>\n",
            "last_activity_date": 1392905368,
            "question_id": 456932,
            "score": 29,
            "tags": [
                "javascript",
                "hashtable"
            ],
            "title": "Hash table in JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You have to mock Backbone.Router.route which is the function that is internally used to bind the functions on to Backbone.History.</p>\n\n<p>Thats the original function:</p>\n\n<pre><code>route : function(route, name, callback) {\n  Backbone.history || (Backbone.history = new Backbone.History);\n  if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n  Backbone.history.route(route, _.bind(function(fragment) {\n    var args = this._extractParameters(route, fragment);\n    callback.apply(this, args);\n    this.trigger.apply(this, ['route:' + name].concat(args));\n  }, this));\n}\n</code></pre>\n\n<p>you could to something like this, which simply call the functions when the router will be initialized:</p>\n\n<pre><code>Backbone.Router.route = function(route, name, callback) {\n    callback();\n}\n</code></pre>\n\n<p>You could also save the callbacks in a object and with the route as name and call same steps by step:</p>\n\n<pre><code>var map = {}\nBackbone.Router.route = function(route, name, callback) {\n    map[route] = callback();\n}\n\nfor(i in map){\n    map[i]();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is a very good tutorial about testing backbone:</p>\n\n<p><a href=\"http://tinnedfruit.com/2011/04/26/testing-backbone-apps-with-jasmine-sinon-3.html\" rel=\"nofollow\">http://tinnedfruit.com/2011/04/26/testing-backbone-apps-with-jasmine-sinon-3.html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's a low-levelish way of doing it with jasmine, testing that pushState works as expected and that your router sets up things properly...\nI assume a <code>router</code> that has been initialized and has a <em>home</em> route mapped to ''. You can adapt this for your other routes. I also assume you've done in your app initialization a <code>Backbone.history.start({ pushState: true });</code></p>\n\n<pre><code>    describe('app.Router', function () {\n\n        var router = app.router, pushStateSpy;\n\n        it('has a \"home\" route', function () {\n            expect(router.routes['']).toEqual('home');\n        });\n\n        it('triggers the \"home\" route', function () {\n            var home = spyOn(router, 'home').andCallThrough();\n            pushStateSpy = spyOn(window.history, 'pushState').andCallFake(function (data, title, url) {\n                expect(url).toEqual('/');\n                router.home();\n            });\n            router.navigate('');\n            expect(pushStateSpy).toHaveBeenCalled();\n            expect(home).toHaveBeenCalled();\n            ...\n        });\n    });  \n</code></pre>\n\n<p>You can effectively achieve similar things by doing <code>Backbone.history.stop();</code> it's meant for this reason.</p>\n\n<p><strong>UPDATE:</strong> Browsers with no <code>pushState</code>:</p>\n\n<p>This of course will work fine if your browser you test on has support for <code>pushState</code>. If you test against browsers that don't, you can conditionally test as follows:</p>\n\n<pre><code>it('triggers the \"home\" route', function () {\n    var home = spyOn(router, 'home').andCallThrough();\n\n    if (Backbone.history._hasPushState) {\n        pushStateSpy = spyOn(window.history, 'pushState').andCallFake(function (data, title, url) {\n            expect(url).toEqual('/');\n            router.home();\n        });\n        router.navigate('', {trigger: true});\n        expect(pushStateSpy).toHaveBeenCalled();\n        expect(home).toHaveBeenCalled();\n\n    } else if (Backbone.history._wantsHashChange) {\n        var updateHashSpy = spyOn(Backbone.history, '_updateHash').andCallFake(function (loc, frag) {\n            expect(frag).toEqual('');\n            router.home();\n        });\n        router.navigate('', {trigger: true});\n        expect(updateHashSpy).toHaveBeenCalled();\n        expect(home).toHaveBeenCalled();\n    }\n});\n</code></pre>\n\n<p>If you are on IE6, good luck.</p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>Here's what I ended up using myself. I made a mock version of the router by extending it and overriding the methods with a blank method to prevent it from invoking any further logic when being called:</p>\n\n<pre><code>describe(\"routers/main\", function() {\n\n    beforeEach(function() {\n\n        // Create a mock version of our router by extending it and only overriding\n        // the methods\n        var mockRouter = App.Routers[\"Main\"].extend({\n            index: function() {},\n            login: function() {},\n            logoff: function() {}\n        });\n\n        // Set up a spy and invoke the router\n        this.routeSpy = sinon.spy();\n        this.router = new mockRouter;\n\n        // Prevent history.start from throwing error\n        try {\n            Backbone.history.start({silent:true, pushState:true});\n        } catch(e) {\n\n        }\n\n        // Reset URL\n        this.router.navigate(\"tests/SpecRunner.html\");\n    });\n\n    afterEach(function(){\n        // Reset URL\n        this.router.navigate(\"tests/SpecRunner.html\");\n    });\n\n    it('Has the right amount of routes', function() {\n        expect(_.size(this.router.routes)).toEqual(4);\n    });\n\n    it('/ -route exists and points to the right method', function () {\n        expect(this.router.routes['']).toEqual('index');\n    });\n\n    it(\"Can navigate to /\", function() {\n        this.router.bind(\"route:index\", this.routeSpy);\n        this.router.navigate(\"\", true);\n        expect(this.routeSpy.calledOnce).toBeTruthy();\n        expect(this.routeSpy.calledWith()).toBeTruthy();\n    });\n\n});\n</code></pre>\n\n<p>Note that <code>sinon.js</code> is used above to create the spy, along with <code>underscore.js</code> to provide the <code>size</code> function.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>When I'm testing a backbone router, what I care about is that the routes I provided are invoking the functions I specify with the correct arguments. A lot of the other answers here aren't really testing that.</p>\n\n<p>If you need to test the functionality of some routes, you can test those functions by themselves.</p>\n\n<p>Assuming you have a simple router:</p>\n\n<pre><code>App.Router = Backbone.Router.extend({\n  routes: {\n    '(/)':'index',\n    '/item/:id':'item'\n  },\n  index: {\n    //render some template\n  }, \n  item: {\n    //render some other template, or redirect, or _whatever_\n  }\n});\n</code></pre>\n\n<p>Here's how I do it:</p>\n\n<pre><code>describe('Router', function() {\n\n  var trigger = {trigger: true};\n  var router\n\n  beforeEach(function() {\n    // This is the trick, right here:\n    // The Backbone history code dodges our spies\n    // unless we set them up exactly like this:\n    Backbone.history.stop(); //stop the router\n    spyOn(Router.prototype, 'index'); //spy on our routes, and they won't get called\n    spyOn(Router.prototype, 'route2'); \n\n    router = new App.Router(); // Set up the spies _before_ creating the router\n    Backbone.history.start();\n  });\n\n  it('empty route routes to index', function(){\n    Backbone.history.navigate('', trigger);\n    expect(router.index).toHaveBeenCalled();\n  });\n\n  it('/ routes to index', function(){\n    router.navigate('/', trigger);\n    expect(router.index).toHaveBeenCalled();\n  });\n\n  it('/item routes to item with id', function(){\n    router.navigate('/item/someId', trigger);\n    expect(router.item).toHaveBeenCalledWith('someId');\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>So I've just started to write tests for my in-progress javascript app, using <code>sinon.js</code> &amp; <code>jasmine.js</code>. Works pretty well overall, but I need to also be able to test my routers.</p>\n\n<p>The routers, in their current state, will trigger an number of views and other stuff, terminating the current <code>jasmine.js</code> test by invoking <code>Backbone.navigate</code> dependent on application state and UI itneraction.</p>\n\n<p>So how could I test that routing to different locations would work,  while keeping the routers \"sandboxed\" and not allowing them to change route?</p>\n\n<p>Can I  set up some sort of mock function that will monitor pushState changes or similar?</p>\n",
            "last_activity_date": 1393650387,
            "question_id": 9215737,
            "score": 27,
            "tags": [
                "javascript",
                "backbone.js",
                "jasmine",
                "sinon"
            ],
            "title": "Testing routers in backbone.js properly?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Since cyclomatic complexity is evaluated counting the number of keyword\n\"if, switch, while for break\" etc.. every tools that works with C will do the job, like\nsourcemonitor:\n<a href=\"http://www.campwoodsw.com/sourcemonitor.html\">http://www.campwoodsw.com/sourcemonitor.html</a></p>\n\n<p>Actually, on javascript the more you try to modulize your code, the more you will slow it down, so take it with a grain of salt ;)</p>\n\n<p>EDIT:\nI <strong>Really</strong> can't understand what's going on on this answer, I get another downvote, when in my answer I tell a good tool for calculating cyclomatic complexity in javascript,\nand this in particular works very well.</p>\n\n<p>For the second assertion, mine is a comment that comes from experience, I never tell <em>don't modulize your js code</em>, I only tell to <em>make attention in doing it</em>, because often there is a tradeoff with speed, and when I talk of speed I mean that 2 different slowdown can happen: at <em>download time</em> and at <em>execution time</em> (and in slow device like pda/smartphone this is important).</p>\n\n<p>Since tools like this often drive developer into writing more code trying to chase the smaller index possible,\nbut in js more code unfortunately means that slowdowns can happen, and the <strong>overuse</strong> of these tools is bad.\nSurelly these tools can give you hints of <strong>where</strong> your code can be improved, but you've to master how to use the tool and not blindy rely on it.</p>\n\n<p>So if you downvote me again, please write a comment in which you explain why you do so, the discussion can only benefit from this, thank you and sorry for the vent.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I've been working on a JavaScript static code analysis tool that does caclulate cyclomatic complexity for JavaScript.  You can try an online version of jsmeter here: <a href=\"http://jsmeter.info\">http://jsmeter.info</a></p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>I have moved my jsmeter tool to a new site: <a href=\"http://jsmeter.info\">http://jsmeter.info</a></p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>You can use the ccm tool from <a href=\"http://www.blunck.info/ccm.html\" rel=\"nofollow\">http://www.blunck.info/ccm.html</a>. </p>\n\n<p>It does java-script, c/c++ and c#. It's free, runs on Windows (can be run on Linux and Mac OS X as well - using mono framework).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There's now also Yardstick: <a href=\"https://github.com/calmh/yardstick\" rel=\"nofollow\">https://github.com/calmh/yardstick</a></p>\n\n<p>It tries to calculate cyclomatic complexity for idiomatic Javascript, handling more cases than for example jscheckstyle.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I recently wrote a tool of my own to perform software complexity analysis on JavaScript projects:</p>\n\n<p><a href=\"https://github.com/philbooth/complexity-report\">complexity-report</a></p>\n\n<p>It reports a bunch of different complexity metrics: lines of code, number of parameters, cyclomatic complexity, cyclomatic density, Halstead complexity measures, the maintainability index, first-order density, change cost and core size.</p>\n\n<p>It is released under the MIT license and built using Node.js and the <a href=\"http://esprima.org/\">Esprima</a> JavaScript parser. It can be installed via npm, like so:</p>\n\n<p><code>\nsudo npm install -g complexity-report\n</code></p>\n\n<p>I also put a web front-end up for people that just want to analyse smaller amounts of code without downloading the tool:</p>\n\n<p><a href=\"http://jscomplexity.org/\">JSComplexity.org</a></p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p><a href=\"http://www.jshint.com\" rel=\"nofollow\">JSHint</a> recently <a href=\"https://github.com/jshint/jshint/pull/593\" rel=\"nofollow\">added support</a> for calculating code metrics. You can set maximum values for <a href=\"http://www.jshint.com/docs/#maxparams\" rel=\"nofollow\">the number of formal parameters allowed</a> (<strong>maxparams</strong>), <a href=\"http://www.jshint.com/docs/#maxdepth\" rel=\"nofollow\">how deeply nested code blocks should be</a> (<strong>maxdepth</strong>), <a href=\"http://www.jshint.com/docs/#maxstatements\" rel=\"nofollow\">the number of statements allowed per function</a> (<strong>maxstatements</strong>), as well as <a href=\"http://www.jshint.com/docs/#maxcomplexity\" rel=\"nofollow\">the maximum cyclomatic complexity</a> (<strong>maxcomplexity</strong>).</p>\n\n<p><em>Maximum number of formal parameters allowed per function</em></p>\n\n<pre><code>/*jshint maxparams:3 */\n\nfunction login(request, onSuccess) {\n  // ...\n}\n\n// JSHint: Too many parameters per function (4).\nfunction logout(request, isManual, whereAmI, onSuccess) {\n  // ...\n}\n</code></pre>\n\n<p><em>Maximum number of nested code blocks allowed per function</em></p>\n\n<pre><code>/*jshint maxdepth:2 */\n\nfunction main(meaning) {\n  var day = true;\n\n  if (meaning === 42) {\n    while (day) {\n      shuffle();\n\n      if (tired) { // JSHint: Blocks are nested too deeply (3).\n          sleep();\n      }\n    }\n  }\n}\n</code></pre>\n\n<p><em>Maximum number of statements allowed per function</em></p>\n\n<pre><code>/*jshint maxstatements:4 */\n\nfunction main() {\n  var i = 0;\n  var j = 0;\n\n  // Function declarations count as one statement. Their bodies\n  // don't get taken into account for the outer function.\n  function inner() {\n    var i2 = 1;\n    var j2 = 1;\n\n    return i2 + j2;\n  }\n\n  j = i + j;\n  return j; // JSHint: Too many statements per function. (5)\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For completeness in the answers, I was looking for the same tool some time ago and didn't find anything that worked well for visualization so I wrote <a href=\"http://github.com/jsoverson/plato\">plato</a></p>\n\n<p>Sample reports for :</p>\n\n<ul>\n<li><a href=\"http://jsoverson.github.com/plato/examples/jquery/\">jquery</a></li>\n<li><a href=\"http://jsoverson.github.com/plato/examples/grunt/\">grunt</a></li>\n<li><a href=\"http://jsoverson.github.com/plato/examples/marionette/\">marionettejs</a></li>\n</ul>\n\n<p>It uses phil's complexity-report (mentioned above) and also aggregates data from jshint (and eventually, others).</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The new version of <a href=\"http://jshint.com\" rel=\"nofollow\">http://jshint.com</a> is out and has a very good cyclomatic complexity calculator</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Are there any tools available for calculating Cyclomatic Complexity in Javascript? </p>\n\n<p>I've found it a very helpful metric in the past while working on server side code, and would like to be able to use it for the client side Javascript I write.</p>\n",
            "last_activity_date": 1383500153,
            "question_id": 100645,
            "score": 27,
            "tags": [
                "javascript",
                "metrics",
                "cyclomatic-complexity"
            ],
            "title": "Calculate Cyclomatic Complexity for Javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Check <a href=\"http://tobeytailor.s3.amazonaws.com/get_barcode_from_image/index.html\">this</a> JavaScript barcode scanner\nIt's <a href=\"https://gist.github.com/421369\">open source</a> and free</p>\n\n<p>Also you can check this JavaScript library <a href=\"https://github.com/EddieLa/BarcodeReader\">https://github.com/EddieLa/BarcodeReader</a></p>\n",
                    "is_accepted": false,
                    "score": 39
                }
            ],
            "body": "<p>I need a javascript code that will read/ extract barcode from an image. \nfor example, the image may be embedded in a web page and i wan to pass the image to the Javascript function.</p>\n\n<p>The function should read/parse the image and extract the barcode from the image.</p>\n",
            "last_activity_date": 1399974232,
            "question_id": 6869445,
            "score": 25,
            "tags": [
                "javascript",
                "image",
                "barcode"
            ],
            "title": "reading barcode from an image using javascript"
        },
        {
            "answer_count": 23,
            "answers": [
                {
                    "body": "<p>Start learning JQuery. It's the best thing for JS development, ever.</p>\n\n<ul>\n<li>No, you don't need a webserver. JS is browser based.</li>\n<li>As for an IDE, any text editor would do. Vim would work fine.</li>\n<li>Use Firebug in Firefox for JS debugging. It makes it so much easier.</li>\n<li>Again, use JQuery. It's great.</li>\n</ul>\n\n<p>Alex</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<ol>\n<li><a href=\"http://www.gotapi.com\" rel=\"nofollow\">http://www.gotapi.com</a> is a good reference for documentation</li>\n<li>You can use whatever IDE you would like -- it's mainly text</li>\n<li><a href=\"https://addons.mozilla.org/en-US/firefox/addon/1843\" rel=\"nofollow\">Firebug</a> is great for debugging <a href=\"https://addons.mozilla.org/en-US/firefox/addon/1843\" rel=\"nofollow\">https://addons.mozilla.org/en-US/firefox/addon/1843</a></li>\n<li>You can test locally -- JavaScript is run on the client anyways so no real limitations</li>\n<li>Once you get the basics down you might want to look at <a href=\"http://www.jquery.com\" rel=\"nofollow\">jQuery</a> -- it really allows you to do some fantastic stuff that has already been tested, etc. so you're not reinventing the wheel.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are talking about javascript in the browser, you can just load an html page that includes your .js file.</p>\n\n<p>Firefox is probably the nicest browser for JS development.  The debugging console is handy and you'll want to look into a couple of plugins: firebug (<a href=\"http://getfirebug.com/\" rel=\"nofollow\">http://getfirebug.com/</a>) and Venkman (<a href=\"http://www.mozilla.org/projects/venkman/\" rel=\"nofollow\">http://www.mozilla.org/projects/venkman/</a>).</p>\n\n<p>If you're happy with vim, you'll probably find it good enough for js development.  Textmate on the Mac is nice, too.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'd highly recommend learning Javascript using <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a>. Although most languages are best to learn without a framework, I'd say javascript is the exception to that rule. jQuery is well <a href=\"http://docs.jquery.com/\" rel=\"nofollow\">documented</a>, and takes out alot of the hacks that you generally need to get your code working in all browsers.</p>\n\n<p>For debugging, I don't know of any specific tools, but Firebug on Firefox is very helpful.</p>\n\n<p>There's no need to run a webserver, but you don't want to load the JS file directly either, most likely. Generally, you set up an HTML page, and include the javascript file from there. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Since you already have a java background, the easiest way to jump into Javascript would probably be to check out an O'Reilly book.  You'll get the syntax questions answered easily and be able to move on rapidly.<br/><br/>\nConcerning an IDE, I use either Dreamweaver or BBEdit on OS X, or VIM.  I'm probably not well versed in what is available, though, I tend to be an old hat.<br/><br/>\nMost debugging is alerts, sadly.  IE has the \"errors found on this page, click here for details\" box when you mess something up, but this will usually only get you within a few lines of the problem (if you're lucky!)\n<br/><br/>\nNo webserver is needed.  You can preview everything in the browser of your choice<br/><br/>\nTips:  Stick to learning what you want to know.  There are various frameworks available out there that may \"make things easier\" but don't worry about getting into those until you figure out the basics.  It is not a very difficult language, but can sometimes be very frustrating.  Just apply your prior knowledge and you should be just fine.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Check Crockford's javascript <a href=\"http://www.crockford.com/\">articles</a> first.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>If you're looking for a reference book on the language, <a href=\"http://rads.stackoverflow.com/amzn/click/0596101996\" rel=\"nofollow\">JavaScript: The Definitive Guide</a> is <em>the</em> book to get.</p>\n\n<p>Visual Studio is by far the best Javascript debugging environment, but that's not useful to you if you're limited to Linux &amp; Mac.  On that platform, I would agree with the suggestions for Firefox with Firebug and Venkman.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Keep it simple, and test everything across multiple browsers. Compared to the strictly controlled compilation of Java, you'll find Javascript is fuzzy and unpredictable. Many things don't behave themselves.</p>\n\n<p>I don't use jQuery myself, but I'm starting to wish I did. Like many of the better javascript libraries, it papers over some of the cracks and makes the language more regular.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you already use InelliJ Idea, it also has pretty good support for javascript development. It does highlighting, autocompletion, and some level of code validation.\nFor debugging, the best tool I know is <a href=\"http://getfirebug.com/\" rel=\"nofollow\">Firebug</a> extension.\nAs reference material, I suggest the book <a href=\"http://oreilly.com/catalog/9780596101992/?CMP=AFC-ak_book&amp;ATT=JavaScript%3A+The+Definitive+Guide\" rel=\"nofollow\">Javascript: The definitive guide</a>, from O'Reilly.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use any texteditor to write javascript. I like Ultra Edit because it has syntax highlighting and code folding and sftp browser (almost any advanced text editors have), so it really doesn't matter. <a href=\"http://notepad-plus.sourceforge.net/uk/site.htm\" rel=\"nofollow\">notepad++</a> is good and free with many features including highlighting and folding.</p>\n\n<p>To debug javascript you can use <a href=\"http://getfirebug.com/\" rel=\"nofollow\">firebug</a> which is firefox addon. You don't need to use alerts. You can write console.log(somevar) and see value in firebug console. Check more information on firebug console api.</p>\n\n<p>And you don't need webserver to run javascript. Just write html file with some javascript and open it with your favorite webbrowser. You might also want to check javascript frameworks like <a href=\"http://jquery.com/\" rel=\"nofollow\">jquery</a>, <a href=\"http://mootools.net/\" rel=\"nofollow\">mootools</a> or <a href=\"http://javascriptmvc.com/\" rel=\"nofollow\">Javascript MVC</a>. They all have good documentation and tutorials.</p>\n\n<p><a href=\"http://www.w3schools.com/js/default.asp\" rel=\"nofollow\">w3schools</a> has basic javascript tutorial for beginners</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could run through <a href=\"http://eloquentjavascript.net\" rel=\"nofollow\">Eloquent JavaScript</a>, though some of it might be a bit elementary if you're an experienced programmer. Coming to grips with all the weird quirks of this language is probably the biggest challenge.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try your best to learn it WITHOUT relying on a library first. Since you have background in C, its going to be a quick learn for you, so do so without being flavored by jQuery or Prototype. Learn to build a good XMLHTTP Request, manipulate the DOM, build your own objects, etc etc. Once done, look at all the libraries and see which suits your needs the best. </p>\n\n<p>Always test in the latest browsers, and then work your way back.</p>\n\n<p>If you're a very visual learner, the Head First series is good.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Oh, lastly, Aptana is an excellent IDE for javascript (and css). The free version is good enough for learning.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you want to start from the beginning, then I always suggest starting here:</p>\n\n<p><a href=\"http://www.w3schools.com/js/default.asp\" rel=\"nofollow\">http://www.w3schools.com/js/default.asp</a></p>\n\n<p>Someone else mentioned Eloquent JavaScript, which is a wonderfully formatted online tutorial that does a good job of linear teaching through the various concepts.</p>\n\n<p>Even though you are an experienced programmer, these are simple references that will introduce you to 95% of the core language capabilities. Not that I have a problem with either, but please do not begin your journey with Crockford articles, or JavaScript: The Definitive Guide. In my experience that is the sort of information you digest after you have already been using JavaScript for a few months. Once you start getting into public and private methods, overloading, and class creation you are into \"style\", and not necessarily substance.</p>\n\n<p>People don't like to reference w3schools because it does not begin with object oriented techniques and tutorials, and it has an outdated appeal. It is a big mistake, because before you get into the advanced stuff I strongly suggest you begin with the fundamentals. After you get those down, I suggest you pick up John Resig's book Pro JavaScript Techniques. John does a better job of covering some of the advanced techniques without getting into a bunch of the academic tripe you get elsewhere.</p>\n\n<p>I also wrote this post, which did surprisingly better than I thought:</p>\n\n<p><a href=\"http://blog.reindel.com/2007/10/16/mastering-javascript-concept-and-resource-guide/\" rel=\"nofollow\">http://blog.reindel.com/2007/10/16/mastering-javascript-concept-and-resource-guide/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is a great page to learn Javascript.</p>\n\n<p><a href=\"http://www.hunlock.com/\" rel=\"nofollow\">http://www.hunlock.com/</a></p>\n\n<p>He covers all sort of areas without depending on Libraries. Which is the best way to learn. Once you understand what Javascript is really about, please go ahead and choose a library of your liking.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Douglas Crockford has several videos on Javascript on the YUI Developer Theater that are very good.  There are two series I would recommend</p>\n\n<blockquote>\n  <p>The JavaScript Programming Language</p>\n  \n  <p>Advanced JavaScript</p>\n</blockquote>\n\n<p>which can be found at this <a href=\"http://developer.yahoo.com/yui/theater/\" rel=\"nofollow\">link</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is a good <a href=\"http://eloquentjavascript.net/index.html\" rel=\"nofollow\">JavaScript book</a> by Marijn Haverbeke. It is a very good introduction for the beginner.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I prefer working with Textmate and the jQuery bundle. It is my editor for everything, SVN commit mesages, Git commit messages, html, css, javascript, python, fooling around, typing blog posts, you name it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since you have proficiency in C, C++ and Java, I'll advice you to void comparing Javascript to these. Javascript has a similar syntax, but is fundamentally very different. It's a prototype-based, language. It has lexical scope, and it has first-class functions. Those are all aspects that are foreign to said languages. It is not without reason that Javascript has been called scheme with Java-syntax.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think that there are a lot of good answers here with a lot of good suggestions, however, I also disagree with most of the answers that say \"start learning with jQuery.\" I'm <strong><em>passionately</em></strong> against learning a framework for a language before learning the language in which the framework is implemented. You're automatically creating a level of abstraction for yourself. Knowing the language prior to learning jQuery or any other framework will help enhance your ability to understand what the framework is doing, how to write better code, and how to implement a feature into the framework that you wish was there but isn't.</p>\n\n<p>With that said, here's a set of resources that I have found to be extremely helpful in learning JavaScript (some of them have already been mentioned):</p>\n\n<p><strong>Websites</strong></p>\n\n<ul>\n<li><a href=\"http://www.w3schools.com/js/default.asp\">W3Schools JavaScript\nReference</a></li>\n<li><a href=\"http://www.crockford.com/\">Douglas Crockford's Website</a></li>\n</ul>\n\n<p><strong>Books</strong></p>\n\n<ul>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/0596527748\">Head First JavaScript</a>. This book is really good at getting you up to speed on the synxtax of JavaScript and what it's capable of without getting you bogged down into the technical implementations of the language. It also helps connect the dots between JavaScript and the DOM.</li>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\">JavaScript: The Good Parts</a> At approximately 150 pages, this is a relatively easy read that explains the good parts of the language and the bad parts of the language. This book will make you a better JavaScript programmer by staying away from the 'awful parts' of the language while also helping you to stick to the good parts and writing more clear, maintainable, expressive code.</li>\n</ul>\n\n<p><strong>Videos</strong></p>\n\n<ul>\n<li>Douglas Crockford's videos on \"Advanced JavaScript\" (<a href=\"http://video.yahoo.com/watch/111585/1027823\">1</a>, <a href=\"http://video.yahoo.com/watch/111586/1027832\">2</a>, <a href=\"http://video.yahoo.com/watch/111587/1027854\">3</a>)</li>\n<li>Douglas Crockford's video on <a href=\"http://video.yahoo.com/watch/630959/2974197\">\"JavaScript: The Good Parts\"</a></li>\n</ul>\n\n<p><strong>Frameworks</strong></p>\n\n<ul>\n<li><a href=\"http://jquery.com/\">jQuery</a>. This seems to be the favorite around Stack Overflow. I've done some work with it and it really is a good library. </li>\n<li><a href=\"http://www.prototypejs.org\">Prototype</a>. This is another library that I enjoy using. It's class creation and inheritance support are nice as well as its API.</li>\n</ul>\n\n<p><strong>IDEs</strong></p>\n\n<ul>\n<li><a href=\"http://aptana.com/\">Aptana Studio</a> is the best JavaScript IDE that I've ever used. It has all of the features you'd expect from a powerful IDE with respect to JavaScript. </li>\n<li>Notepad. You don't really need anything other than a web browser and text editor for writing JavaScript, so if this floats your boat, then go for it.</li>\n</ul>\n\n<p>Yes, there are more websites, books, and videos that can help you get started, but for someone that has a programming background, I can't imagine that picking up JavaScript would be utterly difficult. Additionally, there are other frameworks available, but jQuery and Prototype are the ones with which I'm most familiar and have found them to be really useful.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<ul>\n<li><p>The W3Schools website is a good place to learn the basics.  It also has a great reference section:\n<a href=\"http://www.w3schools.com/js/default.asp\" rel=\"nofollow\">http://www.w3schools.com/js/default.asp</a></p></li>\n<li><p>The Firefox plugin \"Firebug\" is great for debugging.</p></li>\n<li><p>No, you don't need a webserver to run Javascript.</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Debugging</strong> JavaScript; If you insert the line  </p>\n\n<pre><code>     debugger;\n</code></pre>\n\n<p>in your JavaScript then your browser will usually fire up a Debugger. With IE and VS installed (if you are doing ASP.Net for example) then you can debug in VS. With Firefox and Firebug installed this will start the Firebug debugger which is helpful as the \"set breakpoint\" functionality in Firebug seems to be unreliable - at least in my case.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since you come from a background in imperative languages, I would strongly recommend that you get to understand the power of closures and functions as first order values. In my experience, this is something that does not come naturally to java or c++ programmers.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What it a good starting point for learning javascript?  I'm a well versed C and Java programmer and I have some decent experience in C++, so I'm looking for a few suggestions:</p>\n\n<ul>\n<li>What is some good reference material?</li>\n<li>Is there a particular IDE/editor that is worth looking at?  I use vim for C/C++ development and I used IntelliJ Idea for Java.  I'm limited to either Linux or Mac based tools.</li>\n<li>How do you debug javascript code?  Is it just a series of <code>alert()</code>'s?</li>\n<li>Am I required to run a webserver to test javascript, or can I load the .js file directly?  If so, are there limitations to this approach?</li>\n<li>Any other advice for a javascript beginner?</li>\n</ul>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1390398877,
            "question_id": 83444,
            "score": 25,
            "tags": [
                "javascript"
            ],
            "title": "Starting javascript development - what to do?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Have a look at the <a href=\"http://diveintohtml5.info/history.html\" rel=\"nofollow\">HTML5 history api</a>. If you plan to use it, getting a library wrapping it and maybe even adding a fallback to location hashes would be a good idea.</p>\n\n<p><a href=\"https://github.com/browserstate/history.js\" rel=\"nofollow\">https://github.com/browserstate/history.js</a> looks not bad from a quick look at it.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>By using:</p>\n\n<pre><code>window.history.pushState(\u201cstring\u201d, \u201cTitle\u201d, \u201cnewUrl\u201d);\n</code></pre>\n\n<p>This is new in HTML 5.</p>\n\n<p>Your url will change to newUrl without reloading the page.</p>\n\n<p>Note: title arg in the method will not change the Title of the html page. This is used to name the page in the browser history, incase u go back and then go forward.</p>\n",
                    "is_accepted": true,
                    "score": 34
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/4973777/how-does-github-change-the-url-but-not-the-reload\">How does GitHub change the URL but not the reload?</a>  </p>\n</blockquote>\n\n\n\n<p>Hi folks,</p>\n\n<p>I have noticed that Github.com does not force users to download webpages when browsing repositories, but instead uses AJAX in order to refresh the page content.</p>\n\n<p>Github also changes the browser address bar to the real address representing the content. I have no idea how to implement this if not by using # hashtags within the url.</p>\n\n<hr>\n\n<p><strong>In short:</strong> github uses ajax to load new webpages, without using hashtags. How do they accomplish this?</p>\n\n<hr>\n\n<p>Any ideas? </p>\n",
            "last_activity_date": 1372621083,
            "question_id": 5607902,
            "score": 24,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "ajax"
            ],
            "title": "How to change browser address bar without reloading page - HTML/Javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Note: For both drag and resize, you'll have to make separate cases for certain different types of elements. Take a look in <strong><a href=\"http://jsfiddle.net/vPyjc/\">the example I provide later on</a></strong> that handles the dragging of both ellipses and rectangles in the same set of functions.</p>\n\n<hr>\n\n<p>To make an element dragable you use:</p>\n\n<pre><code>element.drag(move, start, up);\n</code></pre>\n\n<p>The three arguments are references to the functions that handle moving (dragging), starting (mouse down), and the stopping (mouseup).</p>\n\n<p>For example to make a draggable circle (from the documentation):</p>\n\n<pre><code>window.onload = function() {\nvar R = Raphael(\"canvas\", 500, 500);    \nvar c = R.circle(100, 100, 50).attr({\n    fill: \"hsb(.8, 1, 1)\",\n    stroke: \"none\",\n    opacity: .5\n});\nvar start = function () {\n    // storing original coordinates\n    this.ox = this.attr(\"cx\");\n    this.oy = this.attr(\"cy\");\n    this.attr({opacity: 1});\n},\nmove = function (dx, dy) {\n    // move will be called with dx and dy\n    this.attr({cx: this.ox + dx, cy: this.oy + dy});\n},\nup = function () {\n    // restoring state\n    this.attr({opacity: .5});\n};\nc.drag(move, start, up);    \n};\u200b\n</code></pre>\n\n<h2><strong><a href=\"http://jsfiddle.net/aEcGY/\">jsFiddle example</a></strong></h2>\n\n<p><br/></p>\n\n<p>In the above example, the <code>ox</code> and <code>oy</code> properties are tacked on to the element to keep track of its location, and these properties in conjunction with <code>dx</code> and <code>dy</code> are used to change the location of the element as it's being dragged.</p>\n\n<p><strong><a href=\"http://jsfiddle.net/vPyjc/\">A more complicated drag and drop</a></strong> to answer <strong><a href=\"http://stackoverflow.com/questions/3679436/how-can-i-combine-objects-in-the-raphael-javascript-library/3875603#3875603\">this question</a></strong>.</p>\n\n<p>To make an object resizeable, you would simply create a second set of drag and drop methods for the resizer and just adjust the target elements <code>height</code> and <code>width</code> based on dragging the resizer.</p>\n\n<p>Here's a full of one drag and drop and resizeable box I wrote up:</p>\n\n<h2><strong><a href=\"http://jsfiddle.net/tmkfs/\">jsFiddle example of drag and drop and resizeable box</a></strong></h2>\n\n<pre><code>window.onload = function() {\nvar R = Raphael(\"canvas\", 500, 500),\n    c = R.rect(100, 100, 100, 100).attr({\n            fill: \"hsb(.8, 1, 1)\",\n            stroke: \"none\",\n            opacity: .5,\n            cursor: \"move\"\n        }),\n    s = R.rect(180, 180, 20, 20).attr({\n            fill: \"hsb(.8, .5, .5)\",\n            stroke: \"none\",\n            opacity: .5\n        }),\n    // start, move, and up are the drag functions\n    start = function () {\n        // storing original coordinates\n        this.ox = this.attr(\"x\");\n        this.oy = this.attr(\"y\");\n        this.attr({opacity: 1});\n\n        this.sizer.ox = this.sizer.attr(\"x\");\n        this.sizer.oy = this.sizer.attr(\"y\");\n        this.sizer.attr({opacity: 1});\n    },\n    move = function (dx, dy) {\n        // move will be called with dx and dy\n        this.attr({x: this.ox + dx, y: this.oy + dy});\n        this.sizer.attr({x: this.sizer.ox + dx, y: this.sizer.oy + dy});        \n    },\n    up = function () {\n        // restoring state\n        this.attr({opacity: .5});\n        this.sizer.attr({opacity: .5});        \n    },\n    rstart = function () {\n        // storing original coordinates\n        this.ox = this.attr(\"x\");\n        this.oy = this.attr(\"y\");\n\n        this.box.ow = this.box.attr(\"width\");\n        this.box.oh = this.box.attr(\"height\");        \n    },\n    rmove = function (dx, dy) {\n        // move will be called with dx and dy\n        this.attr({x: this.ox + dx, y: this.oy + dy});\n        this.box.attr({width: this.box.ow + dx, height: this.box.oh + dy});\n    };   \n    // rstart and rmove are the resize functions;\n    c.drag(move, start, up);\n    c.sizer = s;\n    s.drag(rmove, rstart);\n    s.box = c;\n};\u200b\n</code></pre>\n\n<p>The included event handlers (you can use more of course in conjunction with <strong><a href=\"http://raphaeljs.com/reference.html#node\"><code>.node()</code></a></strong>) and the drag and drop description is at the bottom of the page <strong><a href=\"http://raphaeljs.com/reference.html\">in the documentation</a></strong>.</p>\n\n<p>You would simply make one Raphael canvas, and then each item would be a different element. Just assign them to variables so you can handle them, like in the example above ( <code>c</code> was used to refer to the created circle element ).</p>\n\n<p>In response to comments here is a simple drag and drop + resize able circle. The trick is that circles use the attributes <code>cx</code> and <code>cy</code> for positioning and <code>r</code> for size. The mechanics are pretty much the same... an ellipse would be slightly more complicate, but again it's just a question of working with the right attributes.</p>\n\n<h2><a href=\"http://jsfiddle.net/Pxbrf/\">jsFiddle example of drag and drop and resizeable circle</a></h2>\n\n<pre><code>window.onload = function() {\n    var R = Raphael(\"canvas\", 500, 500),\n        c = R.circle(100, 100, 50).attr({\n            fill: \"hsb(.8, 1, 1)\",\n            stroke: \"none\",\n            opacity: .5\n        }),\n        s = R.circle(125, 125, 15).attr({\n            fill: \"hsb(.8, .5, .5)\",\n            stroke: \"none\",\n            opacity: .5\n        });\n    var start = function () {\n        // storing original coordinates\n        this.ox = this.attr(\"cx\");    \n        this.oy = this.attr(\"cy\");\n\n        this.sizer.ox = this.sizer.attr(\"cx\");    \n        this.sizer.oy = this.sizer.attr(\"cy\")\n\n        this.attr({opacity: 1});\n        this.sizer.attr({opacity: 1});\n    },\n    move = function (dx, dy) {\n        // move will be called with dx and dy\n        this.attr({cx: this.ox + dx, cy: this.oy + dy});\n        this.sizer.attr({cx: this.sizer.ox + dx, cy: this.sizer.oy + dy});\n    },\n    up = function () {\n        // restoring state\n        this.attr({opacity: .5});\n        this.sizer.attr({opacity: .5});\n    },\n    rstart = function() {\n        // storing original coordinates\n        this.ox = this.attr(\"cx\");\n        this.oy = this.attr(\"cy\");        \n\n        this.big.or = this.big.attr(\"r\");\n    },\n    rmove = function (dx, dy) {\n        // move will be called with dx and dy\n        this.attr({cx: this.ox + dy, cy: this.oy + dy});\n        this.big.attr({r: this.big.or + Math.sqrt(2*dy*dy)});\n    };\n    c.drag(move, start, up);    \n    c.sizer = s;\n    s.drag(rmove, rstart);\n    s.big = c;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>Have a look at <a href=\"https://github.com/ElbertF/Raphael.FreeTransform\" rel=\"nofollow\">Raphael.FreeTransform</a> which seems to do what you're after.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try Graphiti here is the link : <a href=\"http://www.draw2d.org/draw2d/\" rel=\"nofollow\">Draw2d and Graphiti</a></p>\n\n<p>It is based on Raphael and very easy to use.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I want to make an svg element (path, rect, or circle) be able to be draggable and give it resize handles.</p>\n\n<p>But unlike HTML DOM, not all elements have an upper left hand corner x,y coordinate and a width and height for a box surrounding the content. This makes it inconvenient to make a generic resize or drag procedure.</p>\n\n<p>Is it a good idea to have each path or circle be drawn inside its own svg object to give me a box to play with?</p>\n\n<p>How is draggable/resizable typically implemented in SVG?</p>\n",
            "last_activity_date": 1345728875,
            "question_id": 3614200,
            "score": 20,
            "tags": [
                "javascript",
                "svg",
                "raphael"
            ],
            "title": "Draggables and Resizables in SVG"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Doing it on client side will make your user download all the data at first which might not be needed, and will remove the primary benefit of pagination.</p>\n\n<p>The best way to do so for such kind of AJAX apps is to make AJAX call the server for next page and add update the current page using client side script.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Server side - send to the client just enough content for the current view.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The right answer depends on your priorities and the size of the data set to be paginated.</p>\n\n<p><strong>Server side pagination is best for:</strong></p>\n\n<ul>\n<li>Large data set</li>\n<li>Faster initial page load</li>\n<li>Accessibility for those not running javascript</li>\n</ul>\n\n<p><strong>Client side pagination is best for:</strong></p>\n\n<ul>\n<li>Small data set</li>\n<li>Faster subsequent page loads</li>\n</ul>\n\n<p>So if you're paginating for primarily cosmetic reasons, it makes more sense to handle it client side. And if you're paginating to reduce initial load time, server side is the obvious choice.</p>\n\n<p>Of course, client side's advantage on subsequent page load times diminishes if you utilize Ajax to load subsequent pages.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>If you have large pages and a large number of pages you are better of requesting pages in chunks from the server via AJAX. So let the server do the pagination, based of your request URL.</p>\n\n<p>You can also pre-fetch the next few pages the user will likely view to make the interface seem more responsive.</p>\n\n<p>If there are only few pages, grabbing it all up-front and paginating on the client may be a better choice.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Even with small data sizes the best choice would be server side pagination. You will not have to worry later if your web application scales further. </p>\n\n<p>And for larger data sizes the answer is obvious. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In a practical world of limits, I would page on the server side to conserve all the resources associated with sending the data. Also, the server needs to protect itself from a malicious/malfunctioning client asking for a HUGE page.</p>\n\n<p>Once that code is happily chugging along, I would add \"smarts\" to the client to get the \"next\" and \"previous\" page and hold that in memory. When the user pages to the next page, update your cache.</p>\n\n<p>If the client software does this sort of page caching, do consider how fast your data ages (is likely to change) and if you should check that your cached page of data is still valid. Maybe re-request it if it ages more than 2 minutes. Maybe have a \"dirty\" flag in it. Something like that. Hope you find this helpful. :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I prefer server side pagination.  However, when implementing it, you need to make sure that you're optimizing your SQL properly.  For instance, I believe in MySQL, if you use the LIMIT option it doesn't use the index so you need to rewrite your sql to use the index properly.</p>\n\n<p>G-Man</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Do you mean that your JavaScript has all the data in memory, and shows one page a time? Or that it downloads each page from the server as it's needed, using AJAX?</p>\n\n<p>If it's the latter, you also may need to think about sorting. If you sort using JavaScript, you'll only be able to sort one page at a time, which doesn't make much sense. So your sorting should be done on the server.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>What is it best to handle pagination? Server side or doing it dynamically using javascript?</p>\n\n<p>I'm working on a project which is heavy on the ajax and pulling in data dynamically, so I've been working on a javascript pagination system that uses the dom - but I'm starting to think it would be better to handle it all server side.</p>\n\n<p>What are everyone's thoughts?</p>\n",
            "last_activity_date": 1230935512,
            "question_id": 407878,
            "score": 20,
            "tags": [
                "javascript",
                "pagination",
                "client-side",
                "server-side"
            ],
            "title": "Pagination: Server Side or Client Side?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I don't believe that the intent of <strong>require.js</strong> is to load all of your scripts asynchronously <em>in production</em>.  In <em>development</em> async loading of each script is convenient because you can make changes to your project and reload without a \"compile\" step.  However in <em>production</em> you should be <a href=\"http://requirejs.org/docs/optimization.html#wholeproject\">combining all of your source files</a> into one or more larger modules using the <a href=\"https://github.com/jrburke/r.js/\">r.js optimizer</a>.  If your large webapp can defer loading of a subset of your modules until a later time (e.g. after a particular user action) these modules can optimized separately and loaded asynchronously in production.</p>\n\n<p>Regarding the speed of loading a single large JS file vs multiple smaller files, generally:</p>\n\n<blockquote>\n  <p>\u201cReduce HTTP requests\u201d has become a general maxim for speeding up frontend performance, and that is a concern that\u2019s even more relevant in today\u2019s world of mobile browsers (often running on networks that are an order of magnitude slower than broadband connections).  <a href=\"http://calendar.perfplanet.com/2011/beyond-bandwidth-ui-performance/\">[reference]</a></p>\n</blockquote>\n\n<p>But there are other considerations such as:</p>\n\n<ul>\n<li><strong>Mobile Caches</strong>: <a href=\"http://headjs.com/\">iPhones limit the size of files they cache</a> so big files may need to be downloaded each time, making many small files better.</li>\n<li><strong>CDN Usage</strong>:  If you use a common 3rd party library like <strong>jQuery</strong> it's probably best not to include it in a big single JS file and instead load it from a CDN since a user of your site may already have it in their cache from another website (<a href=\"http://encosia.com/3-reasons-why-you-should-let-google-host-jquery-for-you/\">reference</a>). <em>For more info, see update below</em></li>\n<li><strong>Lazy Evaluation</strong>: AMD modules can be lazily parsed and evaluated allowing download on app load while deferring the cost of parse+eval until the module is needed.  See <a href=\"http://calendar.perfplanet.com/2011/lazy-evaluation-of-commonjs-modules/\">this</a> article and the series of other older articles that it references. </li>\n<li><strong>Target Browser</strong>: Browsers limit the number of concurrent downloads per hostname.  For example, IE 7 will only download two files from a given host concurrently.  Others limit to 4, and others to 6. <a href=\"http://www.stevesouders.com/blog/2009/05/12/sharding-dominant-domains/\">[reference]</a></li>\n</ul>\n\n<p>Finally, <a href=\"http://www.stevesouders.com/blog/2010/12/06/evolution-of-script-loading/\">here's a good article by Steve Souders</a> that summarizes a bunch of script loading techniques.</p>\n\n<p><strong>Update:</strong> Re CDN usage: Steve Souders <a href=\"http://www.stevesouders.com/blog/2013/03/18/http-archive-jquery/\">posted a detailed analysis</a> of using a CDN for 3rd party libraries (e.g. jQuery) that identifies the many considerations, pros and cons.</p>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p>This question is a bit old now, but I thought I might add my thoughts.</p>\n\n<p>I completely agree with <a href=\"http://stackoverflow.com/a/11563110/320399\">rharper</a> in using r.js to combine all your code for production, but there is also a case for splitting functionality. </p>\n\n<p>For single page apps I think having everything together makes sense. For large scale more traditional page based websites which have in page interactions this can be quite cumbersome and result in loading a lot of unnecessary code for a lot of users.</p>\n\n<p>The approach I have used a few times is </p>\n\n<ul>\n<li>define core modules (needed on all pages for them to operate properly), this gets combined into a single file.</li>\n<li>create a module loader that understands DOM dependencies and paths to modules</li>\n<li>on doc.ready loop through the module loader and async load modules needed for enhanced functionality as needed by specific pages.</li>\n</ul>\n\n<p>The advantage here is you keep the initial page weight down, and as additional scripts are loaded async after page load the perceived performance should be faster. That said, all functionality loaded this way should be done approached as progressive enhancement (i.e. ajax on forms) so that in the event of slow loading or errors the basic functionality is still available.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>How much faster is requireJS actually, on a large website?</p>\n\n<p>Has anyone done any tests on the speed of large websites that use asynchronous loading vs not?</p>\n\n<p>For instance, using Backbone with a lot of views (> 100), is it better to simply have a views object that gets loaded with all the views at once and is then always available, or should they all be loaded asynchronously as needed?</p>\n\n<p>Also, are there any differences for these considerations for mobile vs desktop? I've heard that you want to limit the <em>number</em> of requests on mobile instead of the size.</p>\n",
            "last_activity_date": 1375901485,
            "question_id": 11531091,
            "score": 18,
            "tags": [
                "javascript",
                "performance",
                "asynchronous",
                "requirejs",
                "amd"
            ],
            "title": "How much speed is gained with RequireJS/AMD in JS?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The magic is in <code>box-sizing:border-box;</code>. For compatibility with Firefox, chrome&lt;10, and safari&lt;5.1, add the -webkit- and -moz- prefixes. IE supports it as of 8.0.</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html lang='en'&gt;\n    &lt;head&gt;\n        &lt;meta charset='utf-8'&gt;\n        &lt;title&gt;very structured layout&lt;/title&gt;\n        &lt;style type='text/css'&gt;\n            *      {margin:0; padding:0;}\n            body   {background:#fff; position:absolute; width:100%; height:100%;}\n            #main  {background:#888; height:100%; padding:60px 0 40px; box-sizing:border-box;}\n            #head  {background:#f8f; position:absolute; width:100%; height:60px;}\n            #left  {background:#ff8; float:left; width:250px; height:100%; overflow:scroll;}\n            #right {background:#8f8; height:100%; overflow:scroll;}\n            #foot  {background:#f88; position:absolute; bottom:0; width:100%; height:40px;}\u200b\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div id='head'&gt;header: width = 100%, height = 40px&lt;/div&gt;\n        &lt;div id='main'&gt;\n            &lt;div id='left'&gt;left: width = 250px, height = 100%&lt;/div&gt;\n            &lt;div id='right'&gt;right: width = 100% - 250px, height = 100%&lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div id='foot'&gt;foot: width = 100%, height = 60px&lt;/div&gt;\u200b\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/QH68c/1/\">fiddle</a></p>\n\n<p><strong>edit</strong>: after Andres' solution made me realize I could achieve greater compatibility, I messed around a bit and came up with an alternate solution, which I think is more intuitive as well. It doesn't work in IE7, but it does work in IE8.</p>\n\n<p>The page is the same as the above, with the only change being that the CSS is replaced with this:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>*      {margin:0; padding:0;}\nbody   {background:#fff;}\n#main  {background:#888; position:absolute; top:40px; bottom:60px; width:100%;}\n#head  {background:#f8f; position:absolute; width:100%; height:40px;}\n#left  {background:#ff8; position:absolute; width:250px; height:100%; overflow:scroll;}\n#right {background:#8f8; margin-left:250px; height:100%; overflow:scroll;}\n#foot  {background:#f88; position:absolute; bottom:0; width:100%; height:60px;}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/J6R3J/\">fiddle</a></p>\n\n<p>Note that, for both versions, <code>#head</code> and <code>#foot</code> need to have an <code>overflow</code> property other than <code>visible</code> if their content would otherwise extend off the page.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>I managed to get the layout you mocked up in your post by first creating a main container class that is stretched 100% both vertically and horizontally, this way we can fully stretch the content within to the full height of your viewport. Within this container div i created another container and positioned it absolutely while stretching it in all directions, <code>top, left, bottom, right</code>, i felt that this method was cleaner cause this way i can easily position the header and footer without the need for negative margins (tried it like that but it didn't work).</p>\n\n<p>Here is a demo of the layout: <a href=\"http://jsfiddle.net/andresilich/gbzTN/1/show\">http://jsfiddle.net/andresilich/gbzTN/1/show</a>, edit <a href=\"http://jsfiddle.net/andresilich/gbzTN/1/\">here</a>.</p>\n\n<p>And the code:</p>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>html, body {\n    height: 100%;\n}\n\n.main {\n    *zoom:1;\n}\n\n.main, .row-fluid {\n    height: 100%;\n}\n\n.main:before, .main:after,\n.column:before, .column:after {\n    content: \"\";\n    display: table;\n}\n\n.main:after,\n.column:after {\n    clear: both;\n}\n\n.column {\n    height: 100%;\n    overflow: auto;\n    *zoom:1;\n}\n\n.column .padding {\n    padding: 20px;\n}\n\n.box {\n    bottom: 40px;\n    left: 0;\n    position: absolute;\n    right: 0;\n    top: 40px;\n}\n\n.span9.full {\n    width: 100%;\n}\n\n.footer {\n    height: 40px;\n    width: 100%;\n    z-index: 100;\n    background-color: red;\n    bottom: 0;\n    left:0;\n    right:0;\n    position: fixed;\n}\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div class=\"navbar navbar-fixed-top\"&gt;\n  &lt;div class=\"navbar-inner\"&gt;\n    &lt;div class=\"container-fluid\"&gt;\n      &lt;a class=\"btn btn-navbar\" data-toggle=\"collapse\" data-target=\".nav-collapse\"&gt;\n        &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n        &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n        &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n      &lt;/a&gt;\n      &lt;a class=\"brand\" href=\"#\"&gt;Project name&lt;/a&gt;\n      &lt;div class=\"btn-group pull-right\"&gt;\n        &lt;a class=\"btn dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\"&gt;\n          &lt;i class=\"icon-user\"&gt;&lt;/i&gt; Username\n          &lt;span class=\"caret\"&gt;&lt;/span&gt;\n        &lt;/a&gt;\n        &lt;ul class=\"dropdown-menu\"&gt;\n          &lt;li&gt;&lt;a href=\"#\"&gt;Profile&lt;/a&gt;&lt;/li&gt;\n          &lt;li class=\"divider\"&gt;&lt;/li&gt;\n          &lt;li&gt;&lt;a href=\"#\"&gt;Sign Out&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;\n      &lt;div class=\"nav-collapse\"&gt;\n        &lt;ul class=\"nav\"&gt;\n          &lt;li class=\"active\"&gt;&lt;a href=\"#\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n          &lt;li&gt;&lt;a href=\"#about\"&gt;About&lt;/a&gt;&lt;/li&gt;\n          &lt;li&gt;&lt;a href=\"#contact\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;&lt;!--/.nav-collapse --&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"main clearfix\"&gt;\n    &lt;div class=\"box\"&gt;\n        &lt;div class=\"row-fluid\"&gt;\n            &lt;div class=\"column span3\"&gt;\n                &lt;div class=\"padding\"&gt;\n                    .. content ..\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=\"column span9\"&gt;\n                &lt;div class=\"padding\"&gt;\n                    &lt;div class=\"full span9\"&gt;\n                        .. content ..\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"footer clearfix\"&gt;\n    &lt;h3&gt;footer&lt;/h3&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>Edit</strong>: noticed that this solution does not work as expected in IE7 (works perfect in IE8 and above) so here is a conditional comment targeting everything below IE8 that should fix the issue and make it work as expected:</p>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>&lt;!--[if lt IE 8]&gt;\n    &lt;style type=\"text/css\"&gt;\n        html {\n            margin: 40px 0px;\n            overflow: hidden\n        }\n\n        .main {\n            zoom:1;\n        }\n\n        .column {\n            overflow-x: hidden !important;\n            overflow-y: scroll !important;\n            zoom: 1;\n        }\n\n        .box {\n            position: relative !important;\n            min-height: 100%;\n            height:100%;\n            zoom: 1;\n            top:0 !important;\n        }\n\n        .main {\n            margin: 40px 0px;\n        }\n    &lt;/style&gt;\n&lt;![endif]--&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I'm trying set up a layout that will look like this:\n<img src=\"http://i.stack.imgur.com/eSSfS.png\" alt=\"enter image description here\"></p>\n\n<p>I want to use twitter bootstrap for the project, but I understand it may not be the best way to go for the basic layout that looks like this. I know how to setup the header and footer to be fixed at the top and bottom, but I have a hard time having my sidebar constant width and independently scrollable.</p>\n\n<p>My current implementation is here: <a href=\"http://jsfiddle.net/Mwkrw/3/\">http://jsfiddle.net/Mwkrw/3/</a>.</p>\n\n<p>I tried setting up the fixed sidebar using <a href=\"http://stackoverflow.com/questions/9350818/fixed-sidebar-naviagion-in-fluid-twitter-bootstrap-2-0\">Fixed sidebar naviagion in fluid twitter bootstrap 2.0</a> and a couple of other similar answers on stack overflow, but they all break when the sidebar is longer than the content and as far as I know there is no way to give it an independent scroll.</p>\n\n<p>I would ideally like to do this with pure css - no javascript. I'm sure it's possible and it's my lack of skill and knowledge that prevents me form doing it properly, so there may be no point in unnecessarily adding javascript code. (I'm still adding a javascript tag in case it's not possible)</p>\n\n<p>Thanks for all the help!</p>\n\n<p>EDIT: So my header clearly did not need to be position fixed. Here is the new and improved version: <a href=\"http://jsfiddle.net/Mwkrw/4/\">http://jsfiddle.net/Mwkrw/4/</a> I'm still struggling with the two scrollable divs though.</p>\n",
            "last_activity_date": 1423735957,
            "question_id": 10474354,
            "score": 18,
            "tags": [
                "javascript",
                "html",
                "css",
                "css3",
                "twitter-bootstrap"
            ],
            "title": "Layout with fixed header and footer, fixed width sidebar and flexible content"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I know this isn't the full code sample as requested (because there are several ways of doing this), but do you already have the URL for the avatar?  I noticed that turning \".../eric.png\" into \".../eric_bigger.png\" resulted in the larger image.  When \"_bigger\" already exists, removing it gave me the URL to the original image.</p>\n\n<p>I tested this with several followers' profile images and, when the profile image was > 150px square, worked.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>function get_big_profile_image($username, $size = '') {\n  $api_call = 'http://twitter.com/users/show/'.$username.'.json';\n  $results = json_decode(file_get_contents($api_call));\n  return str_replace('_normal', $size, $results-&gt;profile_image_url);\n}\n</code></pre>\n\n<p>get_big_profile_image('bobsaget', '_bigger') should return a large avatar:\n<a href=\"http://a1.twimg.com/profile_images/330305510/n229938150541_9850_bigger.jpg\">http://a1.twimg.com/profile_images/330305510/n229938150541_9850_bigger.jpg</a></p>\n\n<p>get_big_profile_image('bobsaget') should return an <strong>even larger</strong> image: <a href=\"http://a1.twimg.com/profile_images/330305510/n229938150541_9850.jpg\">http://a1.twimg.com/profile_images/330305510/n229938150541_9850.jpg</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Twitter <del>has</del> <em>had</em> a nice simple URL. </p>\n\n<p><a href=\"https://api.twitter.com/1/users/profile_image/abraham\">https://api.twitter.com/1/users/profile_image/abraham</a></p>\n\n<p>It has size options like \"?size=bigger\"</p>\n\n<p>You can read more about it on <a href=\"http://blog.abrah.am/2010/04/little-known-twitter-and-twitterapi.html\">Little known Twitter and TwitterAPI tips and tricks</a>.</p>\n\n<p>Twitter now has documentation up as <a href=\"https://dev.twitter.com/docs/api/1/get/users/profile_image/%3ascreen_name\">GET users/profile_image/:screen_name</a>.</p>\n\n<p><strong>Update</strong>: Support for this method has been removed from v1.1 of the API. <a href=\"https://dev.twitter.com/discussions/16425\">Recommended practice</a> going forward is <a href=\"https://dev.twitter.com/docs/api/1.1/get/users/show\">GET /users/show</a> and cache <code>profile_image_url</code> locally in your service/app.</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>Previous answerers have provided the correct answer I wanted to link to original twitter api doc page so you'd know it is actually an official way of doing stuff:</p>\n\n<p>You need to specify <code>?size=</code></p>\n\n<ul>\n<li>bigger - 73px by 73px </li>\n<li>normal - 48px by 48px </li>\n<li>mini - 24px by 24px</li>\n</ul>\n\n<blockquote>\n<pre><code>http://api.twitter.com/1/users/profile_image/twitter.json?size=bigger\nhttp://api.twitter.com/1/users/profile_image/twitter.json?size=normal\n</code></pre>\n</blockquote>\n\n<p><a href=\"http://dev.twitter.com/doc/get/users/profile_image/:screen_name\" rel=\"nofollow\">http://dev.twitter.com/doc/get/users/profile_image/:screen_name</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>So, it's not in the docs (http://dev.twitter.com/doc/get/users/profile_image/:screen_name), but it looks like after retrieving the image by specifying any of the three sizes (bigger, normal, mini), you can just remove the suffix before the file extension to get the original image. Hmm... is this safe to use?</p>\n\n<p>For example, this query: api.twitter.com/1/users/profile_image/rrbrambley</p>\n\n<p>Results in: a2.twimg.com/profile_images/931772958/deformed_cropped_headonly_normal.jpg</p>\n\n<p>If I change this url  by removing \"_normal\" then I get the original image: a2.twimg.com/profile_images/931772958/deformed_cropped_headonly.jpg</p>\n\n<p>I know there are apps that use the original image. This must be the way?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Apologies if this is something that's now known, but I didn't see it documented anywhere during my searches, including the official Twitter docs.</p>\n\n<p>You can add the ?size=original as a parameter, which will return the original uploaded image for the user.</p>\n\n<p>So:\n<code>http://api.twitter.com/1/users/profile_image/twitter.json?size=original</code></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Twitter profile images urls:\n<strong>Bigger:</strong> <a href=\"https://api.twitter.com/1/users/profile_image/puneetsindhwani/?size=bigger\" rel=\"nofollow\">https://api.twitter.com/1/users/profile_image/puneetsindhwani/?size=bigger</a>\n<strong>Original:</strong> <a href=\"https://api.twitter.com/1/users/profile_image/puneetsindhwani/?size=original\" rel=\"nofollow\">https://api.twitter.com/1/users/profile_image/puneetsindhwani/?size=original</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>When you get original image link, you can modify it to get bigger.\n<a href=\"http://pbs.twimg.com/profile_images/34543543/image_name_normal.jpg\" rel=\"nofollow\">http://pbs.twimg.com/profile_images/34543543/image_name_normal.jpg</a></p>\n\n<p>becomes </p>\n\n<p><a href=\"http://pbs.twimg.com/profile_images/34543543/image_name.jpg\" rel=\"nofollow\">http://pbs.twimg.com/profile_images/34543543/image_name.jpg</a> or image_name_bigger, ...</p>\n\n<p>Source: <a href=\"https://dev.twitter.com/docs/user-profile-images-and-banners\" rel=\"nofollow\">https://dev.twitter.com/docs/user-profile-images-and-banners</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a quick way to pull twitter profile image in PHP or Javascript? I need to get the url of the FULL image (not avatar size). Thanks. Any code sample is good.</p>\n",
            "last_activity_date": 1390927092,
            "question_id": 2115084,
            "score": 17,
            "tags": [
                "php",
                "javascript",
                "html",
                "api",
                "twitter"
            ],
            "title": "Pull twitter profile image"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>As I said in the comments of your question, sweet.js <a href=\"https://github.com/mozilla/sweet.js/issues/34\" rel=\"nofollow\">doesn't support infix operators</a> yet. You're free to fork sweet.js and add it yourself, or you're simply SOL.</p>\n\n<p>Honestly, it's not worth it to implement custom infix operators yet. Sweet.js is a well supported tool, and it's the only one I know of that tries to implement macros in JS. Adding custom infix operators with a custom preprocessor is probably not worth the gain you might have.</p>\n\n<p>That said, if you're working on this alone for non-professional work, do whatever you want...</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Yes, it's possible and not even very hard :)</p>\n\n<hr>\n\n<p>We'll need to discuss a few things:</p>\n\n<ol>\n<li>What are syntax and semantics.</li>\n<li>How are programming languages parsed? What is a syntax tree?</li>\n<li>Extending the language syntax.</li>\n<li>Extending the language semantics.</li>\n<li>How do I add an operator to the JavaScript language.</li>\n</ol>\n\n<p>If you're lazy and just want to see it in action - <a href=\"https://github.com/benjamingr/so-operator-question\" rel=\"nofollow\"><strong>I put the working code on GitHub</strong></a></p>\n\n<h3>1. What is syntax and semantics?</h3>\n\n<p>Very generally - a language is composed of two things. </p>\n\n<ul>\n<li><p><strong>Syntax</strong> - these are the symbols in the language like unary operators like <code>++</code>, as well as <code>Expression</code>s like a <a href=\"http://es5.github.io/#x13\" rel=\"nofollow\"><code>FunctionExpression</code></a> that represent an \"inline\" function. The syntax represents just the symbols used and <em>not</em> their meaning. In short <strong>the syntax is just the drawings of letters and symbols</strong> - it holds no inherent meaning.</p></li>\n<li><p><strong>Semantics</strong> ties meaning to these symbols. Semantics is what says <code>++</code> means \"increment by one\", in fact here is <a href=\"http://es5.github.io/#x11.4.4\" rel=\"nofollow\">the exact defintion</a>. It ties meaning to our syntax and without it the syntax is just a list of symbols with an order.</p></li>\n</ul>\n\n<h3>2. How are programming languages parsed? What is a syntax tree?</h3>\n\n<p>At some point, when something executes your code in JavaScript or any other programming language - it needs to understand that code. A part of this called <strong><em>lexing</em></strong> (or tokenizing, let's not go into subtle differences here) means breaking up code like:</p>\n\n<pre><code>function foo(){ return 5;}\n</code></pre>\n\n<p>Into its meaningful parts - that is saying that there is a <code>function</code> keyword here, followed by an identifier, an empty arguments list, then a block opening <code>{</code> containing a return keyword with the literal <code>5</code>, then a semicolon, then an end block <code>}</code>.</p>\n\n<p>This part is <em>entirely</em> in the syntax, all it does is break it up to parts like <code>function,foo,(,),{,return,5,;,}</code> . It still has <em>no understanding</em> of the code.</p>\n\n<p>After that - a <code>Syntax Tree</code> is built. A syntax tree is more aware of the grammar but is still entirely syntactic. For example, a syntax tree would see the tokens of:</p>\n\n<pre><code>function foo(){ return 5;}\n</code></pre>\n\n<p>And figure out \"Hey! There is a <a href=\"http://es5.github.io/#x13\" rel=\"nofollow\">function declaration</a> here!\".</p>\n\n<p>It's called a tree because it's just that - trees allow nesting. </p>\n\n<p>For example, the code above can produce something like:</p>\n\n<pre><code>                                        Program\n                                  FunctionDeclaration (identifier = 'foo')\n                                     BlockStatement\n                                     ReturnStatement\n                                     Literal (5)\n</code></pre>\n\n<p>This is rather simple, just to show you it isn't always so linear, let's check <code>5 +5</code>:</p>\n\n<pre><code>                                        Program\n                                  ExpressionStatement\n                               BinaryExpression (operator +)\n                            Literal (5)       Literal(5)   // notice the split her\n</code></pre>\n\n<p>Such splits can occur.</p>\n\n<p>Basically, a syntax tree allows us to express the syntax.</p>\n\n<p>This is where <code>x \u2218 y</code> fails - it sees <code>\u2218</code> and doesn't understand the syntax.</p>\n\n<h3>3. Extending the language syntax.</h3>\n\n<p>This just requires a project that parses the syntax. What we'll do here is read the syntax of \"our\" language which is not the same as JavaScript (and does not comply to the specification) and replace our operator with something the JavaScript syntax is OK with. </p>\n\n<p>What we'll be making is <em>not</em> JavaScript. It does not follow the JavaScript specification and a standards complaint JS parser will throw an exception on it.</p>\n\n<h3>4. Extending the language semantics</h3>\n\n<p>This we do all the time anyway :) All we'll do here is just define a function to call when the operator is called.</p>\n\n<h2>5. How do I add an operator to the JavaScript language.</h2>\n\n<p>Let me just start by saying after this prefix that we'll <em>not</em> be adding an operator to JS here, rather - we're defining our own language - let's call it \"CakeLanguage\" or something and add the operator it it. This is because <code>\u2218</code> is not a part of the JS grammar and the JS grammar does not allow arbitrary operators like <a href=\"http://www.haskell.org/haskellwiki/Haskell\" rel=\"nofollow\">some other languages</a>.</p>\n\n<p>We'll use two open source projects for this:</p>\n\n<ul>\n<li><a href=\"http://esprima.org/\" rel=\"nofollow\"><strong>esprima</strong></a> which takes JS code and generates the syntax tree for it.</li>\n<li><a href=\"https://github.com/Constellation/escodegen\" rel=\"nofollow\"><strong>escodegen</strong></a> which does the other direction, generating JS code from the syntax tree esprima spits.</li>\n</ul>\n\n<p>It you paid close attention you'd know we <em>can't</em> use esprima directly since we'll be giving it grammar it does not understand.</p>\n\n<p>We'll add a <code>#</code> operator that does <code>x # y === 2x + y</code> for the fun. We'll give it the precedence of multiplicity (because operators have operator precedence).</p>\n\n<p>So, after you get your copy of Esprima.js - we'll need to change the following:</p>\n\n<p>To <code>FnExprTokens</code> - that is <em>expressions</em> we'll need to add <code>#</code> so it'd recognize it. Afterwards, it'd look as such:</p>\n\n<pre><code>FnExprTokens = ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n                    'return', 'case', 'delete', 'throw', 'void',\n                    // assignment operators\n                    '=', '+=', '-=', '*=', '/=', '%=', '&lt;&lt;=', '&gt;&gt;=', '&gt;&gt;&gt;=',\n                    '&amp;=', '|=', '^=', ',',\n                    // binary/unary operators\n                    '+', '-', '*', '/', '%','#', '++', '--', '&lt;&lt;', '&gt;&gt;', '&gt;&gt;&gt;', '&amp;',\n                    '|', '^', '!', '~', '&amp;&amp;', '||', '?', ':', '===', '==', '&gt;=',\n                    '&lt;=', '&lt;', '&gt;', '!=', '!=='];\n</code></pre>\n\n<p>To <code>scanPunctuator</code> we'll add it and its char code as a possible case: <code>case 0x23:  // #</code></p>\n\n<p>And then to the test so it looks like:</p>\n\n<pre><code> if ('&lt;&gt;=!+-*#%&amp;|^/'.indexOf(ch1) &gt;= 0) {\n</code></pre>\n\n<p>Instead of:</p>\n\n<pre><code>    if ('&lt;&gt;=!+-*%&amp;|^/'.indexOf(ch1) &gt;= 0) {\n</code></pre>\n\n<p>And then to <code>binaryPrecedence</code> let's give it the same precedence as multiplicity:</p>\n\n<pre><code>case '*':\ncase '/':\ncase '#': // put it elsewhere if you want to give it another precedence\ncase '%':\n   prec = 11;\n   break;\n</code></pre>\n\n<p>That's it! We've just extended our language syntax to support the <code>#</code> operator.</p>\n\n<p>We're not done yet, we need to convert it back to JS.</p>\n\n<p>Let's first define a short <code>visitor</code> function for our tree that recursively visits all its node.</p>\n\n<pre><code>function visitor(tree,visit){\n    for(var i in tree){\n        visit(tree[i]);\n        if(typeof tree[i] === \"object\" &amp;&amp; tree[i] !== null){\n            visitor(tree[i],visit);\n        }\n    }\n}\n</code></pre>\n\n<p>This just goes through the Esprima generated tree and visits it. We pass it a function and it runs that on every node.</p>\n\n<p>Now, let's treat our special new operator:</p>\n\n<pre><code>visitor(syntax,function(el){ // for every node in the syntax\n    if(el.type === \"BinaryExpression\"){ // if it's a binary expression\n\n        if(el.operator === \"#\"){ // with the operator #\n        el.type = \"CallExpression\"; // it is now a call expression\n        el.callee = {name:\"operator_sharp\",type:\"Identifier\"}; // for the function operator_#\n        el.arguments = [el.left, el.right]; // with the left and right side as arguments\n        delete el.operator; // remove BinaryExpression properties\n        delete el.left;\n        delete el.right;\n        }\n    }\n});\n</code></pre>\n\n<p>So in short:</p>\n\n<pre><code>var syntax = esprima.parse(\"5 # 5\");\n\nvisitor(syntax,function(el){ // for every node in the syntax\n    if(el.type === \"BinaryExpression\"){ // if it's a binary expression\n\n        if(el.operator === \"#\"){ // with the operator #\n        el.type = \"CallExpression\"; // it is now a call expression\n        el.callee = {name:\"operator_sharp\",type:\"Identifier\"}; // for the function operator_#\n        el.arguments = [el.left, el.right]; // with the left and right side as arguments\n        delete el.operator; // remove BinaryExpression properties\n        delete el.left;\n        delete el.right;\n        }\n    }\n});\n\nvar asJS = escodegen.generate(syntax); // produces operator_sharp(5,5);\n</code></pre>\n\n<p>The last thing we need to do is define the function itself:</p>\n\n<pre><code>function operator_sharp(x,y){\n    return 2*x + y;\n}\n</code></pre>\n\n<p>And include that above our code.</p>\n\n<p>That's all there is to it! If you read so far - you deserve a cookie :)</p>\n\n<p>Here is the <a href=\"https://github.com/benjamingr/so-operator-question\" rel=\"nofollow\">code on GitHub</a> so you can play with it.</p>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>The answer to the question <em><a href=\"http://stackoverflow.com/q/20728460/1420197\">Is it possible to create custom operators in JavaScript?</a></em> is <strong><em>not yet</em></strong>, but <a href=\"http://stackoverflow.com/a/20728490/1420197\">@Benjamin suggested</a> that it would be possible to add a new operator using <em>third party tools</em>:</p>\n\n<blockquote>\n  <p>It is possible to use third party tools like sweet.js to add custom operators though that'd require an extra compilation step.</p>\n</blockquote>\n\n<p>I will take the same example, like in the previous question:</p>\n\n<h2><em>(\u211d, \u2218), x \u2218 y = x + 2y</em></h2>\n\n<p>For any two real numbers <em>x</em> and <em>y</em>: <strong>x \u2218 y</strong> is <strong>x + 2y</strong> that is also a real number. How can I add this operator in my extended JavaScript language?</p>\n\n<p>After the following code will be run:</p>\n\n<pre><code>var x = 2\n  , y = 3\n  , z = x \u2218 y;\n\nconsole.log(z);\n</code></pre>\n\n<p>The output will contain</p>\n\n<pre><code>8\n</code></pre>\n\n<p>(because <code>8</code> is <code>2 + 2 * 3</code>)</p>\n\n<hr>\n\n<p>How would I extend the JavaScript language to support a new operator?</p>\n",
            "last_activity_date": 1421878768,
            "question_id": 20762338,
            "score": 15,
            "tags": [
                "javascript",
                "node.js",
                "macros",
                "operators",
                "transpiler"
            ],
            "title": "How would I extend the JavaScript language to support a new operator?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I am using <a href=\"https://github.com/jprante/elasticsearch-river-jdbc\">jdbc-river</a> w/ mysql. It is very fast. You can configure them to continually poll data, or use one-time (one-shot strategy) imports.</p>\n\n<p>e.g.</p>\n\n<pre><code>curl -xPUT http://es-server:9200/_river/my_river/_meta -d '\n{\n    \"type\" : \"jdbc\",\n    \"jdbc\" : {\n        \"strategy\" : \"simple\",\n        \"poll\" : \"5s\",\n        \"scale\" : 0,\n        \"autocommit\" : false,\n        \"fetchsize\" : 10,\n        \"max_rows\" : 0,\n        \"max_retries\" : 3,\n        \"max_retries_wait\" : \"10s\",\n        \"driver\" : \"com.mysql.jdbc.Driver\",\n        \"url\" : \"jdbc:mysql://mysql-server:3306/mydb\",\n        \"user\" : \"root\",\n        \"password\" : \"password*\",\n        \"sql\" : \"select c.id, c.brandCode, c.companyCode from category c\"\n    },\n    \"index\" : {\n        \"index\" : \"mainIndex\",\n        \"type\" : \"category\",\n        \"bulk_size\" : 30,\n        \"max_bulk_requests\" : 100,\n        \"index_settings\" : null,\n        \"type_mapping\" : null,\n        \"versioning\" : false,\n        \"acknowledge\" : false\n    }\n}'\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>I've been reading through a lot of good documentation about how to implement Elastic Search on a website with javascript or PHP.</p>\n\n<p>Very Good introduction to ES:\n<a href=\"http://www.elasticsearchtutorial.com/basic-elasticsearch-concepts.html\">http://www.elasticsearchtutorial.com/basic-elasticsearch-concepts.html</a></p>\n\n<p>Very complete doc:\n<a href=\"http://okfnlabs.org/blog/2013/07/01/elasticsearch-query-tutorial.html\">http://okfnlabs.org/blog/2013/07/01/elasticsearch-query-tutorial.html</a>\nand:\n<a href=\"http://exploringelasticsearch.com/book/modeling-data/type-basics.html\">http://exploringelasticsearch.com/book/modeling-data/type-basics.html</a></p>\n\n<p>a whole CRUD:\n<a href=\"http://joelabrahamsson.com/elasticsearch-101/\">http://joelabrahamsson.com/elasticsearch-101/</a></p>\n\n<p>Elastic search with PHP:\n<a href=\"https://speakerdeck.com/farrelley/elasticsearch-for-php-lone-star-php-2012\">https://speakerdeck.com/farrelley/elasticsearch-for-php-lone-star-php-2012</a>\n<a href=\"http://elasticsearch-users.115913.n3.nabble.com/Elastica-PHP-client-for-elasticsearch-td1738187.html\">http://elasticsearch-users.115913.n3.nabble.com/Elastica-PHP-client-for-elasticsearch-td1738187.html</a>\n<a href=\"http://hublog.hubmed.org/archives/001907.html\">http://hublog.hubmed.org/archives/001907.html</a></p>\n\n<p>So the reason why I'm giving you those URLs is to understand how to use one or many of those great documentations when having a pre-existing SQL DB.</p>\n\n<p>I'm missing the point somewhere: As they said elastic search will create its own indexes and db with mongoDB, I don't understand how can I use my (gigantic) database using SQL ? Let say I have a mysql db, and I would like to use elastic search to make my research faster and to propose the user pre made queries, how do I do that ? how does ES works over/along MySQL ? how to transfer this gigantic set of Datas (over 8GB) into ES DB in order to be fuly efficient at the beginning ?</p>\n\n<p>Many Thanks  </p>\n",
            "last_activity_date": 1374856063,
            "question_id": 17856457,
            "score": 14,
            "tags": [
                "php",
                "javascript",
                "sql",
                "json",
                "elasticsearch"
            ],
            "title": "How to use Elastic Search on top of a pre-existing SQL Database?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I've not used javascript or taglist much, but looking through <code>:help taglist-extend</code>, it looks like your definitions (listed above) rename the javascript output to js, so you'll probably need something like (in your vimrc):</p>\n\n<pre><code>let tlist_js_settings = 'js;f:function;m:method'\n</code></pre>\n\n<p>This is assuming that the ctags 'kind' is 'f' for function and 'm' for method.  Have a look at your tags file and see what the 'kind' column looks like.  By way of example, my C code tags file includes this line:</p>\n\n<pre><code>ADC_CR1_AWDCH_0 .\\LibraryModules\\CMSIS\\Headers\\stm32f10x.h\t2871;\"\td\n</code></pre>\n\n<p>This is a <code>#define</code> of a symbol <code>ADC_CR1_AWDCH_0</code>, which is in the listed file at line 2871.  The 'd' is the ctags 'kind' for a defined name.  Hopefully that will give you enough to get you going.</p>\n\n<p>As an aside, I'm not sure whether the override will work correctly, so it might be worth naming your file 'myfile.mjs' and changing your langmap to <code>js:.mjs</code> until it's working properly.  Then at least you'll know whether your problems are associated with misidentification of files or the actual parsing.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Got it!  I dove into the taglist.vim code for awhile, and this is what I found:</p>\n\n<p>taglist.vim forces ctags to use the same filetype that vim is using.  So even though the ~/.ctags snippet I found via google is assigning my much-needed definitions to the new \"js\" language and applying it to files that end in .js, taglist is forcing ctags into using the \"JavaScript\" filetype that vim is using -- which is built right into ctags already.</p>\n\n<p>The solution is to change the ~/.ctags file from what I've posted above to this:</p>\n\n<pre><code>--regex-JavaScript=/([A-Za-z0-9._$]+)[ \\t]*[:=][ \\t]*new[ \\t]+Object\\(/\\1/o,object/\n--regex-JavaScript=/([A-Za-z0-9._$]+)[ \\t]*[:=][ \\t]*\\{/\\1/o,object/\n--regex-JavaScript=/([A-Za-z0-9._$()]+)[ \\t]*[:=][ \\t]*function[ \\t]*\\(/\\1/f,function/\n--regex-JavaScript=/function[ \\t]+([A-Za-z0-9._$]+)[ \\t]*\\([^\\]\\)]*\\)/\\1/f,function/\n--regex-JavaScript=/([A-Za-z0-9._$]+)[ \\t]*[:=][ \\t]*new[ \\t]+Array\\(/\\1/a,array/\n--regex-JavaScript=/([A-Za-z0-9._$]+)[ \\t]*[:=][ \\t]*\\[/\\1/a,array/\n--regex-JavaScript=/([^= ]+)[ \\t]*=[ \\t]*[^\"\"]'[^'']*/\\1/s,string/\n--regex-JavaScript=/([^= ]+)[ \\t]*=[ \\t]*[^'']\"[^\"\"]*/\\1/s,string/\n</code></pre>\n\n<p>which alters the pre-existing JavaScript language definition directly, rather than creating a new language definition within ctags.  Now, when taglib forces vim's registered filetype, the new definitions are used.  Also missing from the previously posted ~/.ctags lines was the \"kind\" letter that Al mentioned in his answer, so those are included in my updated version as well.</p>\n\n<p>From there, drop the following into your ~/.vimrc to activate the new types:</p>\n\n<pre><code>let g:tlist_javascript_settings = 'javascript;s:string;a:array;o:object;f:function'\n</code></pre>\n\n<p>All-in-all, the new regex lines aren't perfect -- they'll definitely need some tweaking to avoid a lot of false positives, and it might be nice to separate out constants and such.  But now, at least, I have the ability to do that :).</p>\n\n<p><b>Edit:</b> Added instructions on how to activate types without editing the plugin, and vastly improved the main ctags function regex to avoid some false-positives.</p>\n\n<p><b>Edit 2:</b> Added more array and object definitions to the ctags regex.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>I ran into this post on a google search, and although your findings are excellent, I think we can improve them. This is the results of a bit of hacking on your solution:</p>\n\n<p><strong>.ctags</strong></p>\n\n<pre><code>--regex-JavaScript=/^var[ \\t]+([a-zA-Z0-9_$]+) = \\[/\\1/a,array/\n--regex-JavaScript=/^var[ \\t]+([a-zA-Z0-9_$]+) = \\{/\\1/o,object/\n--regex-JavaScript=/^var[ \\t]+([a-zA-Z0-9_$]+) = (^{^[)+/\\1/r,var/\n--regex-JavaScript=/^[ \\t]*(this\\.)?([A-Za-z0-9_$()]+)[ \\t]*[:=][ \\t]*function[ \\t]*\\(\\)/\\2/u,function/\n--regex-JavaScript=/^[ \\t]*function ([a-z0-9]+[A-Za-z0-9_]*)/\\1/u,function/\n--regex-JavaScript=/^[ \\t]*([A-Za-z0-9]+)\\.prototype\\.([a-z0-9]+[A-Za-z0-9_]*)/\\1 : \\2/u,function/\n--regex-JavaScript=/^[ \\t]*function ([A-Z]+[A-Za-z0-9_]*)/\\1/o,object/\n</code></pre>\n\n<p><strong>.vimrc</strong></p>\n\n<pre><code>let g:tlist_javascript_settings = 'javascript;r:var;s:string;a:array;o:object;u:function'\n</code></pre>\n\n<p>This gets rid of a few more false positives, and adds some more features in, as a tradeoff for getting rid of some of the more problematic regexes. I'll keep updating if I find I need more.</p>\n\n<p><strong>Edit</strong>: I've gotten everything working really nicely now; I feel like this result is solid. The only major deficiency is that it doesn't work on comma separated variable definitions. That seems particularly nasty. Maybe another day. :)</p>\n\n<p>Note also that I changed the .vimrc. This isn't because I'm a freak; it's because somehow taglist or ctags or something has some default values set, and if you don't change it, then you get a lot of doubles where functions and vars are concerned, which really drives me insane (I pay super attention to detail.. :P )</p>\n\n<p><strong>Edit</strong>: More tweaks. It picks up on prototype function declarations now, and doesn't do some other stupid stuff.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Hi thanks to Tom Frost for his question and research, I think there is a little problem with the 4th line regexp of your final answer:</p>\n\n<pre><code>--regex-JavaScript=/function[ \\t]+([A-Za-z0-9._$]+)[ \\t]*\\([^\\]\\)]*\\)/\\1/f,function/\n</code></pre>\n\n<p>Doesn't worked for me, I pulled it a bit and now works ok:</p>\n\n<pre><code>--regex-JavaScript=/function[ \\t]+([A-Za-z0-9._$]+)[ \\t]*\\([^\\)]*\\)/\\1/f,function/\n</code></pre>\n\n<p>PD. The others answers' regexps posted here doesn't work at all at least for me :-?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To avoid duplicate entries from ctags' built in javascript support I define 'js' language as in original post and help taglist use ctags with it. I also make sure that tagnames are stripped from some less useful bits (quotes, \"this.\", \".prototype\"). I don't use object/array/string/var regexps, but it's easy to combine my regexps with the other suggestions. </p>\n\n<p>~/.ctags:</p>\n\n<pre><code>--langdef=js\n--langmap=js:.js\n--regex-js=/[\"']?(this\\.)?([A-Za-z0-9_$]+)[\"']?((\\.prototype)?(\\.[A-Za-z0-9_$]+))?[ \\t]*[:=][ \\t]*function/\\2\\5/f,function/\n--regex-js=/function[ \\t]+([A-Za-z0-9_$]+)/\\1/f,function/\n</code></pre>\n\n<p>~/.vimrc:</p>\n\n<pre><code>let g:tlist_javascript_settings = 'js;f:function'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The best-practice solution, which is also very new, neat and easy way to get JavaScript source-code browsing / tag-list in Vim, is using Mozilla's <em><a href=\"http://DoctorJS\" rel=\"nofollow\">DoctorJS</a></em> (formerly known as <em>jsctags</em>).</p>\n\n<h2><a href=\"http://stackoverflow.com/questions/4777366/recommended-vim-plugins-for-javascript-coding/5893600#5893600\">See my answer for this question for more info</a>.</h2>\n\n<p>Enjoy. :)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I've recently abandoned mouse-driven, platform-specific GUI editors and committed entirely to vim.  The experience so far has been fantastic, but I'm stuck when it comes to Javascript.</p>\n\n<p>The ever-popular taglist utility (using Exuberant Ctags) has been great for everything but Javascript.  With the language's overly-free form and structure, taglist could only pick up a handful of functions when I opened it up -- only those defined in the format:</p>\n\n<pre><code>function FUNCNAME (arg1, arg2) {\n</code></pre>\n\n<p>but no variables or function objects defined like: </p>\n\n<pre><code>var myFunc = function (arg1, arg2) {\n</code></pre>\n\n<p>So I googled a bit and found the following definition set for ctags, which I put in my ~/.ctags file:</p>\n\n<pre><code>--langdef=js\n--langmap=js:.js\n--regex-js=/([A-Za-z0-9._$]+)[ \\t]*[:=][ \\t]*\\{/\\1/,object/\n--regex-js=/([A-Za-z0-9._$()]+)[ \\t]*[:=][ \\t]*function[ \\t]*\\(/\\1/,function/\n--regex-js=/function[ \\t]+([A-Za-z0-9._$]+)[ \\t]*([^])])/\\1/,function/\n--regex-js=/([A-Za-z0-9._$]+)[ \\t]*[:=][ \\t]*\\[/\\1/,array/\n--regex-js=/([^= ]+)[ \\t]*=[ \\t]*[^\"\"]'[^'']*/\\1/,string/\n--regex-js=/([^= ]+)[ \\t]*=[ \\t]*[^'']\"[^\"\"]*/\\1/,string/\n</code></pre>\n\n<p>After that, running ctags from the command line was fantastic.  It found every function and object that I needed it to find.</p>\n\n<p>The problem is that the taglist.vim plugin isn't seeing those new results.  When I open my javascript file in vim and hit :TlistToggle, I get the exact same meager handful of functions I got before.  I hit 'u' to update the list, with no effect.</p>\n\n<p>Digging into taglist.vim, I found this:</p>\n\n<pre><code>\" java language\nlet s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .\n                               \\ 'f:field;m:method'\n\n\" javascript language\nlet s:tlist_def_javascript_settings = 'javascript;f:function'\n</code></pre>\n\n<p>...which implies we're only looking at one specific kind of output from the ctags utility  for javascript.  Unfortunately, I'm not savvy enough with taglist or vim in general (yet) to discover what change I can make to get all those wonderful ctags command-line results to show up in vim.</p>\n\n<p>Help appreciated!</p>\n",
            "last_activity_date": 1308516772,
            "question_id": 1790623,
            "score": 14,
            "tags": [
                "javascript",
                "vim",
                "ctags",
                "taglist"
            ],
            "title": "How can I make vim&#39;s taglist plugin show useful information for javascript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>We have a \"call back\" (a 1x1 transparent GIF image with a parameter representing the ID for the page render) in the page that logs a \"Page viewed\" to our database.  That is records with the same ID that the page itself is recorded, and we have a log entry when our rendering finishes.</p>\n\n<p>So we have time of:</p>\n\n<ul>\n<li>Page preparation started</li>\n<li>Page preparation / Response finished</li>\n<li>Client phoned-home when rendering completed</li>\n</ul>\n\n<p>Helps with understanding clients that are \"slow\" (CPU or ISP/bandwidth)</p>\n\n<p>P.S. Page renders that do not call home are of interest too - the user clicked-off (assuming that other page renders in that session did record a Phone Home)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What about utilizing something like <a href=\"https://addons.mozilla.org/en-US/firefox/addon/5369\" rel=\"nofollow\">yslow</a> ( a firefox extension)?</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I'm pretty dubious of these methods. Some of these methods are more complex than necessary and I question the accuracy of this data. What I'd do is have testers go to various networks and use something like Firebug or something:</p>\n\n<p><a href=\"http://getfirebug.com/\" rel=\"nofollow\">http://getfirebug.com/</a></p>\n\n<p>For the heck of it; here is an interesting paper recently submitted to SOSP on a tool called AjaxScope. Interestingly enough, it is a scholarly article, presented by MS Research, that shows Firefox's Javascript implementation performing many times better than Internet Explorer in a few cases. :)</p>\n\n<p><a href=\"http://research.microsoft.com/en-us/groups/rad/sosp07.pdf\" rel=\"nofollow\">http://research.microsoft.com/en-us/groups/rad/sosp07.pdf</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>EDIT (2013): try <a href=\"http://lognormal.github.io/boomerang/doc/\" rel=\"nofollow\">Boomerang</a> instead, like @yasei-no-umi suggests. It's actively maintained.</p>\n\n<p>-- old answer --</p>\n\n<p>We use <a href=\"http://code.google.com/p/jiffy-web/\" rel=\"nofollow\">Jiffy</a>.</p>\n\n<p>It's very simple to use and modify - we wrote our own server-side code (instead of Jiffy's Apache + perl) and used Jiffy's JS.</p>\n\n<p>Regarding a performance penalty - there isn't one on the client side. The JS itself is trivially fast, and the reporting back to the server can be done with an XHR after page load, which affects nothing in the user experience. On the server side you'll get twice as many requests. If that's a bottleneck, you could set up a different server just for the timing responses.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>We tend to use a combination of:</p>\n\n<p>Firefox:\n<a href=\"https://addons.mozilla.org/en-US/firefox/addon/60\" rel=\"nofollow\">Web Developer Toolbar</a>\n<a href=\"http://getfirebug.com/\" rel=\"nofollow\">Firebug</a>\n<a href=\"http://developer.yahoo.com/yslow/\" rel=\"nofollow\">YSlow</a></p>\n\n<p>IE:\n<a href=\"http://www.fiddler2.com/fiddler2/\" rel=\"nofollow\">Fiddler</a></p>\n\n<p>out of all of these, I've found YSlow gives the best information on what you can do to improve your load times, but Fiddler gives the best overall information on what you can expect over the wire, and can even simulate different network speeds.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>An alternative to <a href=\"http://code.google.com/p/jiffy-web/\" rel=\"nofollow\">Jiffy</a> is <a href=\"http://stevesouders.com/episodes/\" rel=\"nofollow\">Episodes</a>.  </p>\n\n<p>Both involve instrumenting your Javascript to keep track of various timings, and logging those timings on a central server.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is also <a href=\"http://yahoo.github.com/boomerang/doc/\">Boomerang</a> from Yahoo. </p>\n\n<p>Has some advanced features not existing in Jiffy and Episodes. Also support <a href=\"https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/NavigationTiming/Overview.html\">Navigation Timing</a> API in browsers that support it (Chrome 6, IE 9)</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>For completeness' sake, you can now use the Navigation timing API in some of the <strong>modern</strong> browsers: <a href=\"https://developer.mozilla.org/en-US/docs/Navigation_timing\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Navigation_timing</a></p>\n\n<pre><code>function onLoad() { \n  var now = new Date().getTime();\n  var page_load_time = now - performance.timing.navigationStart;\n  console.log(\"User-perceived page loading time: \" + page_load_time);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm looking to monitor the end user experience of our website and link that with timing information already logged on the server side. My assumption is that this will require javascript to to capture time stamps at the start of request (window.onbeforeunload) and at the end of loading (window.onload). Basically this - \"<a href=\"http://www.javaworld.com/javaworld/jw-11-2008/jw-11-measuring-client-response.html\" rel=\"nofollow\">Measuring Web application response time: Meet the client</a>\"</p>\n\n<ol>\n<li>Is there a better approach?</li>\n<li>What kind of performance penalty should I be expecting (order of magnitude)?</li>\n<li>How good are the results?</li>\n</ol>\n",
            "last_activity_date": 1374485698,
            "question_id": 547458,
            "score": 14,
            "tags": [
                "javascript",
                "performance",
                "monitoring",
                "client-side",
                "timing"
            ],
            "title": "What is the best way to measure Client Side page load times?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I'd follow @pkozlowski's advice and make sure the response is an array. Anyway, here's an example that loads data from a JSON file similar to what you describe in your comments. It uses <strong>ngResource</strong> and can help you put things together: <a href=\"http://plnkr.co/edit/Ofq7Md8udEnIhAPF1NgL?p=preview\">http://plnkr.co/edit/Ofq7Md8udEnIhAPF1NgL?p=preview</a></p>\n\n<p>The service</p>\n\n<pre><code>angular.module('jsonService', ['ngResource'])\n.factory('JsonService', function($resource) {\n  return $resource('cats.json',{ }, {\n    getData: {method:'GET', isArray: false}\n  });\n});\n</code></pre>\n\n<p>Notice that <code>isArray</code> is set to <code>false</code>. </p>\n\n<p>Your app and controller</p>\n\n<pre><code>var app = angular.module('app', ['jsonService']);\n\napp.controller('ctrl', function($scope, JsonService){\n  JsonService.getData(function(data){\n    $scope.name = data.name;\n    $scope.children = data.children;\n  });\n});\n</code></pre>\n\n<p><code>getData</code> is actually not needed since the <strong>Resource</strong> class gives you some useful convenience methods such a <code>get</code>, you can just do this</p>\n\n<pre><code>angular.module('jsonService', ['ngResource'])\n.factory('JsonService', function($resource) {\n  return $resource('cats.json');\n});\n\napp.controller('ctrl', function($scope, JsonService){\n  JsonService.get(function(data){\n    $scope.name = data.name;\n    $scope.children = data.children;\n  });\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<p>How can I use <code>angular-resources.js</code> to read in a JSON file through a service?</p>\n\n<p>I am working on a very basic Angular app for testing purposes and am just trying to read in data from JSON file right now.  I am placing this code in a service so I can more easily swap it out when we move a server based data store.</p>\n\n<p>My <code>App</code> and <code>App.controller</code> declaration are as follows:</p>\n\n<pre><code>'use strict';\n\n// create module for custom directives\nvar App = angular.module('App', ['jsonService']);\n\n// controller business logic\nApp.controller('AppCtrl', function AppCtrl($scope, JsonService) {\n    console.log(\"marker 1\");\n\n    if (!$scope.jsonData) {\n        console.log(\"marker 2\");\n        JsonService.getData(function (d) {\n            console.log(d);\n            $scope.jsonData = d;\n            $scope.records = d.length;\n        });\n    } else {\n        console.log(\"I have data already... \" + $scope.jsonData);\n    }\n\n    console.log($scope.jsonData);\n});\n</code></pre>\n\n<p>My <code>JsonService</code> is defined as the follow, at the moment:</p>\n\n<pre><code>'use strict';\n\nangular.module('jsonService', ['ngResource'])\n.factory('JsonService', function($resource, $filter) {\n    // define the remote service using Angular's $resource module\n    var service = $resource('/data/ProcessModeling-Resources.json', {});\n\n    var JsonService = {\n        // calls $resource.query() to retrieve the remote data.\n        getData : function getData(callback) {\n            console.log(\"marker 3\");\n            service.query(function (data) {\n                console.log(\"marker 4\");\n            });\n        }\n    };\n\n    return JsonService;\n});\n</code></pre>\n\n<p>The console output I am getting follows:</p>\n\n<pre><code>marker 1 app.js:8\nmarker 2 app.js:11\nmarker 3 services.js:13\nundefined app.js:21\nTypeError: Object #&lt;Resource&gt; has no method 'push'\n    at copy (http://127.0.0.1:8000/lib/angular.js:556:21)\n    at new Resource (http://127.0.0.1:8000/lib/angular-resource.js:330:9)\n    at http://127.0.0.1:8000/lib/angular-resource.js:386:32\n    at forEach (http://127.0.0.1:8000/lib/angular.js:117:20)\n    at http://127.0.0.1:8000/lib/angular-resource.js:385:19\n    at wrappedCallback (http://127.0.0.1:8000/lib/angular.js:6650:59)\n    at http://127.0.0.1:8000/lib/angular.js:6687:26\n    at Object.Scope.$eval (http://127.0.0.1:8000/lib/angular.js:7840:28)\n    at Object.Scope.$digest (http://127.0.0.1:8000/lib/angular.js:7707:25)\n    at Object.Scope.$apply (http://127.0.0.1:8000/lib/angular.js:7926:24) angular.js:5582\n</code></pre>\n\n<p>I'm receiving my error when I attempt to call my <code>service.query(function (data) { }</code>, which (if I'm understanding correctly) should be pulling my JSON file in.</p>\n\n<p>I've been using <a href=\"http://ericterpstra.com/apps/jsCats/ngCatsHOM/\">AngularJS Cats App</a> as an example for pulling data.</p>\n",
            "last_activity_date": 1386703597,
            "question_id": 13849902,
            "score": 13,
            "tags": [
                "javascript",
                "json",
                "angularjs"
            ],
            "title": "Reading in JSON through Angular Resources Service"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I had problems with this, too. </p>\n\n<p>It's Social network's API fault. If you look in Chrome to the NET tab, you'll see that there are 252 requests per page! (Facebook, g+, Twitter, your resources)</p>\n\n<p>This is part of problem</p>\n\n<pre><code>loadScriptAsync('//connect.facebook.net/en_US/all.js');\n</code></pre>\n\n<p>it loads all scripts possible, maybe multiple times without caching. I think there's no chance to avoid this from your side</p>\n\n<p>OT: Why do you require offline&amp;SMS access when logging on your site? I think nobody wise would like to give you him/her phone number and/or offline access</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>ah I found the answer by checking what Techcrunch / AOL does.\nYou load the XFBML as the user scrolls.</p>\n\n<p>1.) Don't Parse XFBML on FB.init or the loading of the JS SDK</p>\n\n<pre><code>FB.init({\n  appId  : APP_ID,\n  xfbml  : false\n});\n</code></pre>\n\n<p>2.) Load jQuery and jquery.sonar.js - this contains scroll and scrollout custom events</p>\n\n<pre><code>&lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"http://artzstudio.com/files/jquery-boston-2010/jquery.sonar/jquery.sonar.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>3.) jQuery code to parse XFBML on scrollin event (stolen from Techcrunch)</p>\n\n<pre><code>jQuery(document).ready(function($) {\n    var $shareWidgets = $( '.share-widget' );\n    $shareWidgets.bind( 'scrollin', { distance: 500 }, function() {\n        var $share = $( this );\n        if (!$share.data( 'initFB' ) &amp;&amp; window.FB) {\n            $share.data('initFB', 1);\n            $share.unbind( 'scrollin' );\n            FB.XFBML.parse( $share[0] );\n        }\n    });\n});\n</code></pre>\n\n<p>4.) wrap your XFBML tags in a class called 'share-widget'</p>\n\n<pre><code>&lt;span class=\"share-widget\"&gt;&lt;fb:like&gt;&lt;/fb:like&gt;&lt;/span&gt;\n</code></pre>\n\n<p>and voila! no more dang XFBML slowing down your pages. Ofcourse this only helps when you have a lot of XFBML tags on your page. Which most blogs may have.</p>\n\n<p>Thank you AOL!</p>\n\n<p>See the SlideShare presentation of AOL using jQuery: <a href=\"http://www.slideshare.net/daveartz/jquery-in-the-aol-enterprise\">http://www.slideshare.net/daveartz/jquery-in-the-aol-enterprise</a> where they talk about this and other optimizations they use.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p><a href=\"http://sharrre.com\" rel=\"nofollow\">Sharrre</a> loads your sharing buttons only when needed, you can use all like button features and it has built-in Google Analytics tracking.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here a quick pure javascript snippet to aid with throttling of multiple like buttons:</p>\n\n<p><a href=\"http://stackoverflow.com/a/11002386/223002\">http://stackoverflow.com/a/11002386/223002</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>See <a href=\"http://running.ph/\">http://running.ph/</a></p>\n\n<p>It just hangs chrome for a while, while all the buttons load. I've read using IFrame avoids this but I really want to use XFBML JS for all the extra functionality you get with it like tracking Likes, comments, and the send button.</p>\n\n<p>Does anyone have a solution to this?\nI'm sure I'm not the only site with 10+ Like buttons on it.</p>\n",
            "last_activity_date": 1382193699,
            "question_id": 6838254,
            "score": 9,
            "tags": [
                "javascript",
                "facebook",
                "facebook-like"
            ],
            "title": "Lots of XFBML Facebook Like buttons are slow?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You could try <a href=\"https://chrome.google.com/extensions/detail/cplklnmnlbnpmjogncfgfijoopmnlemp\" rel=\"nofollow\">iMacros for Chrome</a>. It is a pretty easy to use automation system.</p>\n\n<ol>\n<li>Open iMacros</li>\n<li>Click <em>Record</em>.</li>\n<li>Go about you browsing routine.</li>\n<li>Click stop.</li>\n</ol>\n\n<p>I don't think it can get any easier than that. The scripts it saves are in plain text so you can edit them for some fine grain control if need be.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The solution appears to be to make one's own <a href=\"https://developer.chrome.com/extensions/tabs#type-Tab\" rel=\"nofollow\">Google Chrome Extension (GCE)</a>. It is easy to learn within about 4 hours if you know how to do slightly advanced Javascript stuff, and is very powerful. I can use the Tabs API to create a new tab and go to a specific URL. I can then inject jQuery into that URL and make it manipulate the DOM or do anything we normally can do with jQuery. I can't do file I/O, but there are two workarounds. One, I can force the browser to download a file from a remote location, and I can send data from the current page back up to a remote server via jQuery's $.get() or $.post() calls.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>You can use Python to automate web tasks using <a href=\"http://live.gnome.org/PyWebKitGtk\"><strong>pywebkitgtk</strong></a>. It is a Python binding for WebKitGtk, which uses the WebKit engine, the same engine as chrome.</p>\n\n<p>Thanks to this blog post, <a href=\"http://blog.motane.lu/2009/06/18/pywebkitgtk-execute-javascript-from-python/\">pywebkitgtk - Execute JavaScript from Python</a>, I made a subclass of <code>webkit.WebView</code> to make these tasks easier.</p>\n\n<pre><code>import gtk\nimport webkit\nimport json\n\nclass WebView(webkit.WebView):\n    def eval_script(self, script):\n        self.execute_script('oldtitle=document.title;document.title=\"!!!!\";document.title=JSON.stringify(eval(' + json.dumps(script) + '));')\n        result = json.loads(self.get_main_frame().get_title())\n        self.execute_script('document.title=oldtitle;')\n        return result\n    def wait_for_load(self):\n        handle = None\n        def load_status_cb(view, frame):\n            if frame == view.get_main_frame():\n                self.disconnect(handle)\n                gtk.main_quit()\n        handle = self.connect('load-finished', load_status_cb)\n        gtk.main()\n</code></pre>\n\n<p>I added the function called <code>eval_script</code> which is like <code>execute_script</code>, but you could get the results of the function as Python objects. You just need to make sure that what you are evaluating is JSON-serializable.</p>\n\n<p>Also, I added a <code>wait_for_load</code> function which is pretty self-explanatory.</p>\n\n<p>To set up a UI, you first have to create a window, a scrolled window, and a web view.</p>\n\n<pre><code># window\nwindow = gtk.Window()\nwindow.set_default_size(800, 600)\n\n# scroll view\nscroll_view = gtk.ScrolledWindow()\nscroll_view.props.hscrollbar_policy = gtk.POLICY_AUTOMATIC\nscroll_view.props.vscrollbar_policy = gtk.POLICY_AUTOMATIC\n\n# web view\nweb_view = WebView()\n\n# events\nwindow.connect('delete-event', lambda window, event: gtk.main_quit())\n\n# show\nscroll_view.add(web_view)\nwindow.add(scroll_view)\nwindow.show_all()\n</code></pre>\n\n<p>Then you can start automating things! For example, this code loads StackOverflow's login page, click the Facebook login button, fills in the username and password (in this case \"test\"). Finally, it shows the login button text.</p>\n\n<pre><code># the script is here\nweb_view.open('http://www.stackoverflow.com/users/login')\nweb_view.wait_for_load()\n\nweb_view.execute_script('openid.signin(\"facebook\")')\nweb_view.wait_for_load()\n\nweb_view.execute_script('document.querySelector(\"#email\").value = \"test\"')\nweb_view.execute_script('document.querySelector(\"#pass\").value = \"test\"')\n\nprint \"Login's button text is:\", web_view.eval_script('document.querySelector(\"#buttons input[type=\\\\\"submit\\\\\"]\").value')\n</code></pre>\n\n<p>In my case, the Facebook's interface was in Thai language, and I could see the login's button text.</p>\n\n<blockquote>\n  <p>Login's button text is: \u0e40\u0e02\u0e49\u0e32\u0e2a\u0e39\u0e48\u0e23\u0e30\u0e1a\u0e1a</p>\n</blockquote>\n\n<p>You can also have it actually click the submit button, just by calling <code>click()</code> on that element. <em>(Note: <code>click()</code> works for button elements, not on links)</em></p>\n\n<pre><code>web_view.execute_script('document.querySelector(\"#buttons input[type=\\\\\"submit\\\\\"]\").click()')\nweb_view.wait_for_load()\n</code></pre>\n\n<p>You will notice that after all the scripts are finished, the application closes itself without waiting.</p>\n\n<p>If you want to keep the application running after it finish all the scripts in there, you need to add the last line:</p>\n\n<pre><code>gtk.main()\n</code></pre>\n\n<p>Also, if you remove the <code>window.show_all()</code> line and the last <code>gtk.main()</code> line. Then your app will work without a GUI. <em>(Note: You still need a display server.)</em></p>\n\n<p>Right now, we don't have good pywebkitgtk docs yet, so you have to look at <a href=\"http://webkitgtk.org/reference/webkitgtk-webkitwebview.html\">WebKitGtk's documentation</a> instead. Good luck.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Definitely check out <a href=\"http://watir.com/platforms/\" rel=\"nofollow\">Watir</a>!  I find it extremely straightforward.  It works just as easily with Selenium as it does with Chrome, IE, or Firefox.  Though the version for Chrome is not yet officially supported, they claim it is usable.  I, myself have only used it for Selenium, IE, and Firefox.</p>\n\n<p>Also, Watir easily integrates with <a href=\"http://cukes.info/\" rel=\"nofollow\">Cucumber</a>, if you're looking for cutting-edge BDD (Behavior-Driven Development).  It's just Ruby code, is open source, and hosted on <a href=\"https://github.com/\" rel=\"nofollow\">gitHub</a>.  Enjoy!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can checkout <a href=\"http://qaagent.com\" rel=\"nofollow\">http://qaagent.com</a>. This is an easy way to automate some web related task</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've seen some wild things happen when I paste some urlencoded Javascript into a URL on Firefox and Chrome. Is it possible to use this technique to tell Chrome to visit a URL and then save it as a file? I'm trying to automate Chrome, and Selenium looked extremely daunting.</p>\n\n<p><strong>EDIT</strong>: Unfortunately, I forgot to be more clear here. Let me explain. Things like wget, curl, etc. won't work because I have to get through logins in some of these scripts. And I've looked at iMacros, but found that I can't get them to run from command line except on Windows, unless I pay for the $499 package. Some other advantages of GCEs are that the dev platform is free and open to some degree, and they are cross-platform. (I use Linux.)</p>\n\n<p><strong>EDIT</strong>: At this point, I'm learning about Google Chrome Extensions. It appears they are easy to build and will let me (I think) tell the browser to open a new tab, go to a page, manipulate the DOM on that page (such as populating some fields and logging in), and then manipulate the DOM on the response page. GCEs don't let you do File I/O, so they are not like Firefox Extensions with XPCOM, but you can get around that by using AJAX to send data to a backend script (like a PHP script on a LAMP server) to save that data.</p>\n\n<p><strong>EDIT</strong>: By the way, and this is slightly off-topic (but I add to clarify) those \"wild things\" in Javascript that I mentioned were when you manipulate the DOM creating a URL that looks like so:</p>\n\n<pre><code>javascript:(function(){...your URL-encoded Javascript here...})();\n</code></pre>\n",
            "last_activity_date": 1402383313,
            "question_id": 4730906,
            "score": 9,
            "tags": [
                "javascript",
                "google-chrome",
                "automation"
            ],
            "title": "Automating Chrome"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>here is a good explanation about <a href=\"http://www.javascriptkit.com/javatutors/trycatch2.shtml\" rel=\"nofollow\">The Error object and throwing your own errors</a></p>\n\n<p><strong>The Error Object</strong></p>\n\n<p>just what we can extract from it in an event of an error. The Error object in all browsers support the following two properties:</p>\n\n<ul>\n<li><p>name: The name of the error, or more specifically, the name of the constructor function the error belongs to.</p></li>\n<li><p>message: A description of the error, with this description varying depending on the browser.</p></li>\n</ul>\n\n<p>Six possible values can be returned by the name property, which as mentioned correspond to the names of the error's constructors. They are:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Error Name          Description\n\nEvalError           An error in the eval() function has occurred.\n\nRangeError          Out of range number value has occurred.\n\nReferenceError      An illegal reference has occurred.\n\nSyntaxError         A syntax error within code inside the eval() function has occurred.\n                    All other syntax errors are not caught by try/catch/finally, and will\n                    trigger the default browser error message associated with the error. \n                    To catch actual syntax errors, you may use the onerror event.\n\nTypeError           An error in the expected variable type has occurred.\n\nURIError            An error when encoding or decoding the URI has occurred \n                   (ie: when calling encodeURI()).\n</code></pre>\n\n<p><strong>Throwing your own errors (exceptions)</strong></p>\n\n<p>Instead of waiting for one of the 6 types of errors to occur before control is automatically transferred from the try block to the catch block, you can also explicitly throw your own exceptions to force that to happen on demand. This is great for creating your own definitions of what an error is and when control should be transferred to catch.</p>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<p>The following article perhaps goes into some more detail as to which is a better choice; <code>throw 'An error'</code> or <code>throw new Error('An error')</code>:</p>\n\n<p><a href=\"http://www.nczonline.net/blog/2009/03/10/the-art-of-throwing-javascript-errors-part-2/\">http://www.nczonline.net/blog/2009/03/10/the-art-of-throwing-javascript-errors-part-2/</a></p>\n\n<p>It suggests that the latter (<code>new Error()</code>) is more reliable, since browsers like Internet Explorer and Safari (unsure of versions) don't correctly report the message when using the former.</p>\n\n<blockquote>\n  <p>Doing so will cause an error to be thrown, but not all browsers respond the way you\u2019d expect. Firefox, Opera, and Chrome each display an \u201cuncaught exception\u201d message and then include the message string. Safari and Internet Explorer simply throw an \u201cuncaught exception\u201d error and don\u2019t provide the message string at all. Clearly, this is suboptimal from a debugging point of view.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>You first mention this code:</p>\n\n<pre><code>throw new Error('sample')\n</code></pre>\n\n<p>and then in your first example you write:</p>\n\n<pre><code>throw new Error({'hehe':'haha'}) \n</code></pre>\n\n<p>The first Error object would actually work, because it is expecting a string value, in this case 'sample'. The second would not because you are trying to pass an object in, and it is expecting a string.</p>\n\n<p>The error object would have the \"message\" property, which would be 'sample'.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I want to write a common error handler which will catch custom errors thrown on purpose at any instance of the code.</p>\n\n<p>When I did <code>throw new Error('sample')</code> like in the following code</p>\n\n<pre><code>&lt;script&gt;\ntry{\nthrow new Error({'hehe':'haha'}) \n//throw new Error('hehe');\n}catch(e)\n{\n    alert(e)\n    console.log(e);\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>Log shows: in firefox as <code>Error: [object Object]</code> and i couldn't parse the object.</p>\n\n<p>For the second throw the log shows as: <code>Error: hehe</code></p>\n\n<p>Whereas when I did this</p>\n\n<pre><code>&lt;script&gt;\ntry{\nthrow ({'hehe':'haha'}) \n}catch(e)\n{\n    alert(e)\n    console.log(e);\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>the console showed as: <code>Object { hehe=\"haha\"}</code> in which I was able to access the error properties.</p>\n\n<p>What is the difference?</p>\n\n<p>Is the difference as seen in the code? like string will be just passed as string and object as objects but the syntax will be different?</p>\n\n<p>I haven't explored throwing error object... I had done only throwing strings.</p>\n\n<p>Is there any other way than the above two mentioned methods?</p>\n\n<p>Your suggestions please.</p>\n",
            "last_activity_date": 1423673600,
            "question_id": 9156176,
            "score": 62,
            "tags": [
                "javascript",
                "error-handling"
            ],
            "title": "javascript what is the difference in throw new Error and throw(object)"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>It's part of jQuerys (actually John Resigs I guess) philosophy about the library.  </p>\n\n<p>It trys to be \"kind\" to you and your customers, that in turn means, it'll throw exceptions pretty rarely<br>\n(like really rarely)</p>\n\n<p>But like always, you can easily extend it like:</p>\n\n<pre><code>(function(_jQuery){\n    jQuery = function(){\n        var ret = _jQuery.apply(this, arguments);\n        if(!ret.length) throw new Error('empty selector');\n        return ret;\n    };\n}(jQuery));\n</code></pre>\n\n<p>But like <code>Nick</code> says in a comment, most times this is <strong>not</strong> a desired behavior. If you want to have it for some reason anyway, a code snippet like the above should do it.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>because <code>$(\"#thisdivdoesntexist\")</code> in jQuery still returns an 'empty' jQuery <code>Object</code> and all jQuery objects have their methods, so no error. </p>\n\n<p>this is actually a good thing. If this were to throw an error, you would need some extra checks in a lot of cases before doing something, meaning you'd have a lot of 'overload' code. although it would not be bad practice to check if it exists before calling a method on the object, when the selector returns nothing, not all javascript will halt (which is what would happen if it'd throw an error)</p>\n\n<p>therefore you can use selectors globally, even if some pages don't have the selector, without really having to worry about that. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think that it is probably to do with the fact that your selector:</p>\n\n<pre><code>$(\"#divMenuContainer:visible\")\n</code></pre>\n\n<p>Under the covers returns a jQuery object, containing a number of possible matches.  The Hide function is then performed on each of these.  I imagine not throwing an exception in this case makes a certain kind of sense, as you have a list with zero entries, rather than getting a null back.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A selector that doesn't refer to any elements is still a legal selector, and it may be intentional.  It may be that a given selector will sometimes return elements, and you would want to be able to use such a selector without a chance to throw runtime errors.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>jQuery() will always return a jQuery object, for one to prevent errors, but more importantly:</p>\n\n<p>So you can write responsive code.</p>\n\n<pre><code>do X if Y is present\n</code></pre>\n\n<p>If Y is not present, X does not compute.</p>\n\n<p>This means you can have a global init cross pages and just init plugins wether they find something or not.</p>\n\n<pre><code>$(function(){\n    // does nothing if the page contains no element with className 'accordion'\n    $('.accordion').implementAccordion();\n    // usually on a single page, but we can add it to a global js file nontheless.\n    $('.validate-form').implementFormValidator();\n});\n</code></pre>\n\n<p>Though ofcourse, some plugins are really poorly written and will throw an error.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>It just makes sense to me... If your selector doesn't match any element, you can still call all the normal jQuery prototype functions without generating errors! The worst case, you end up with an 'empty' jQuery set, applying your changes to no elements.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Normally I only continue if the element(s) exist by doing something along the lines of:</p>\n\n<pre><code>var aThing = $(\"#myElement\");\nif(aThing.length){\n    //my code here\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are a few good reasons here, \"chainability\" is the main drive, the ability to write very terse code by chaining has to throw no errors to work seemlessly, for example:</p>\n\n<pre><code>$(\"#divMenuContainer:visible\").hide(\"explode\").add(\"#another\").fadeIn();\n</code></pre>\n\n<p>Each object in the chain, even if it references no DOM elements may have more added later, or let's take another example:</p>\n\n<pre><code>$(\"#divMenuContainer:visible\").live(\"click\", function() { ... });\n</code></pre>\n\n<p>In this case we don't care about any of the elements the selector found, we care about the selector itself.  Here's another:</p>\n\n<pre><code>$(\"#divMenuContainer:visible\").find(\".child\").hide(\"explode\").end().fadeOut();\n</code></pre>\n\n<p>Even if there are no children, we may want to hop back in the chain afterwards, continuing to use the <code>.prevObject</code> reference to go back up the chain.</p>\n\n<p>There are dozens of distinct cases like this that show the benefits of the library being the way it is.  As for the <em>why</em>, from interviews of <a href=\"http://ejohn.org/\">John Resig</a>, who is the creator of jQuery, he states that's just how it worked out.  He was after code as terse as he could get it, and the chaining model is what came out of hat, it just happens to have a lot of benefits as well, the example above are just a few of those.</p>\n\n<p>To be clear, I'm not saying <em>every</em> attribute of chaining is a good one, there are just many upsides to it.</p>\n\n<hr>\n\n<p>Let's take this page as an example, what if we had something like this:</p>\n\n<pre><code>$(\".comment\").click(replyToFunction);\n</code></pre>\n\n<p><em>Should</em> that fail because there aren't any comments yet?  Well no not really, that's expected, I wouldn't want an error here...if the element exists do it, if not don't.  My point is, at least in my experience, <em>not</em> throwing an error because of a missing element is tremendously more useful than throwing one.</p>\n\n<p>The selector in your question, the <a href=\"http://api.jquery.com/id-selector/\"><code>#ID</code>selector</a> is a very special case where you expect only a single element, so maybe you could argue it should fail there...but then that wouldn't be consistent with other selectors, and you want a library to be consistent.  </p>\n\n<p>With pretty much any other <a href=\"http://api.jquery.com/category/selectors/\">selector</a> you expect 0-many elements, so failing when you don't find any elements would be significantly less desirable in most situations, even more so in the cases like <a href=\"http://api.jquery.com/live/\"><code>.live()</code></a> above.</p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>Think of it as a <em>query</em>, which it is. You are asking for all \"records\" (DOM elements) that match your criteria. The result is a set of zero records.</p>\n\n<p>It then loops over your zero records and applies the action to them. :)</p>\n\n<p>If you did the same thing with SQL, or an array, it would behave the same way in most languages. A collection of zero records is not an error state.<div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var things = $(\"invalid selector\");\r\n$(\"p\").text(\"The object is valid: \" + things + \" but has \" + things.length + \" elements.\")</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n\r\n&lt;p&gt;&lt;/p&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 49
                },
                {
                    "body": "<p>A good example is when you want to do something with all the checked checkboxes</p>\n\n<pre><code>$(\"input:checked\")\n</code></pre>\n\n<p>...you don't know how many are checked.  Could be any, all or none.  It depends on the user.</p>\n\n<p>So, instead of having to write code like</p>\n\n<pre><code>var checkedInputs = $(\"input:checked\");\nif (checkedInputs  &amp;&amp; checkedInputs .length &gt; 0) {\n      checkedInputs .doStuff();\n}\n</code></pre>\n\n<p>You can just </p>\n\n<pre><code>$(\"input:checked\").doStuff();\n</code></pre>\n\n<p>And if they have made selections, great, stuff gets done.  If not... no harm, no foul.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>i guess because it'll be used on the front-end - end users shouldn't see exceptions because a developer has written some bad code. it's probably generally safer to fail silently in this case.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Its a matter of flexibility.  Myself I'd like the same protections you ask for, you can always do it yourself.  Use:</p>\n\n<pre><code>jQuery.fn.single = function() {\n    if (this.length != 1) {\n        throw new Error(\"Expected 1 matching element, found \" + this.length);\n    }\n\n    return this;\n};\n</code></pre>\n\n<p>and now use $(\"input:checked\").single() with assurance that its either returning a single item or giving you an error.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I thought it was to be like CSS, meaning if you are trying to style an element that does not exist, you get no error.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Was recently using some code along the lines of </p>\n\n<pre><code>$(\"#divMenuContainer:visible\").hide(\"explode\");\n</code></pre>\n\n<p>However after some time spent trying to get it to work I realized my selector was referencing a div that didnt exist.</p>\n\n<p>The result of the query was simply that it didn\u2019t execute. </p>\n\n<p>Obviously this is by design, could anyone explain the logic of why this design choice was made rather than raise some sort of exception?</p>\n\n<p>Not trying to criticise just trying to understand.</p>\n",
            "last_activity_date": 1411093953,
            "question_id": 3709604,
            "score": 62,
            "tags": [
                "javascript",
                "jquery",
                "design",
                "jquery-selectors"
            ],
            "title": "Why doesn&#39;t jQuery bomb if your selector object is invalid?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I don't think mustache can do this!  (surprisingly)\nYou can iterate over a list of objects, and then access the attributes of each object, but you can't seem to iterate over a simple list of values!</p>\n\n<p>So, you have to transform your list into:</p>\n\n<pre><code>[ {\"value\":\"foo\"},{\"value\":\"bar\"},{\"value\":\"baz\"} ] \n</code></pre>\n\n<p>and then your template would be:</p>\n\n<pre><code>&lt;ul&gt;\n  {{#the_list}}\n  &lt;li&gt;{{value}}&lt;/li&gt;\n  {{/the_list}}\n&lt;/ul&gt;\n</code></pre>\n\n<p>To me, this seems like a severe problem with Mustache -- any template system should be able to loop over a list of simple values!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had the same problem this morning and after a little experimentation I discovered you can use the {{.}} to refer to the current element of an array:</p>\n\n<pre><code>&lt;ul&gt;\n  {{#yourList}}\n  &lt;li&gt;{{.}}&lt;/li&gt;\n  {{/yourList}}\n&lt;/ul&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 54
                },
                {
                    "body": "<p>You can do it like this...</p>\n\n<pre><code>Mustache.render('&lt;ul&gt;{{#.}}&lt;li&gt;{{.}}&lt;/li&gt;{{/.}}&lt;/ul&gt;', ['foo','bar','baz']);\n</code></pre>\n\n<p>It also works for things like this...</p>\n\n<pre><code>var obj = [{name: 'foo'}, {name: 'bar'}];\nvar tmp = '&lt;ul&gt;{{#.}}&lt;li&gt;{{name}}&lt;/li&gt;{{/.}}&lt;/ul&gt;';\nMustache.render(tmp, obj);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 94
                },
                {
                    "body": "<p>Building on @danjordan's answer, this will do what you want:</p>\n\n<pre><code>Mustache.render('&lt;ul&gt;{{#.}}&lt;li&gt;{{.}}&lt;/li&gt;{{/.}}&lt;/ul&gt;',['foo','bar','baz']);\n</code></pre>\n\n<p>returning:</p>\n\n<pre><code>&lt;ul&gt;&lt;li&gt;foo&lt;/li&gt;&lt;li&gt;bar&lt;/li&gt;&lt;li&gt;baz&lt;/li&gt;&lt;/ul&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>My object looks like this:</p>\n\n<pre><code>['foo','bar','baz']\n</code></pre>\n\n<p>And I want to use a mustache template to produce from it something like this:</p>\n\n<pre><code>\"&lt;ul&gt;&lt;li&gt;foo&lt;/li&gt;&lt;li&gt;bar&lt;/li&gt;&lt;li&gt;baz&lt;/li&gt;&lt;/ul&gt;\"\n</code></pre>\n\n<p>But how? Do I really have to munge it into something like this first?</p>\n\n<pre><code>{list:['foo','bar','baz']}\n</code></pre>\n",
            "last_activity_date": 1386606631,
            "question_id": 6516297,
            "score": 60,
            "tags": [
                "javascript",
                "mustache"
            ],
            "title": "Can mustache iterate a top-level array?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Here's the shortest I can get it:</p>\n\n<pre><code>&lt;script&gt;document.write(new Date().getFullYear())&lt;/script&gt;\n</code></pre>\n\n<p>That will work in all browsers I've run across.</p>\n\n<p>How I got there:</p>\n\n<ul>\n<li>You can just call <code>getFullYear</code> directly on the newly-created <code>Date</code>, no need for a variable. <code>new Date().getFullYear()</code> may look a bit odd, but it's reliable: the <code>new Date()</code> part is done first, then the <code>.getFullYear()</code>.</li>\n<li>You can drop the <code>type</code>, because JavaScript is the default; this is even documented as part of the <a href=\"http://www.w3.org/TR/html5/scripting-1.html#script\">HTML5 specification</a>, which is likely in this case to be writing up what browsers already do.</li>\n<li>You can drop the semicolon at the end for one extra saved character, because JavaScript has \"automatic semicolon insertion,\" a feature I normally <em>despise</em> and rail against, but in this specific use case it should be safe enough.</li>\n</ul>\n\n<p>It's important to note that this only works on browsers where JavaScript is enabled. Ideally, this would be better handled as an offline batch job (<code>sed</code> script on *nix, etc.) once a year, but if you want the JavaScript solution, I think that's as short as it gets. (Now I've gone and tempted fate.)</p>\n",
                    "is_accepted": true,
                    "score": 149
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;document.write(new Date().getFullYear());&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you want to include a time frame, e.g. \u201c\u00a9 Company 2010-2014\u201d which automatically updates each year, then the shortest code will have to look like this:</p>\n\n<pre><code>&amp;copy; Copyright 2010&lt;script&gt;new Date().getFullYear()&gt;2010&amp;&amp;document.write(\"-\"+new Date().getFullYear());&lt;/script&gt;, Company.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I need to update a few hundred static Html pages that have the copyright date hard coded in the footer. I want to replace it with some javascript that will automatically update each year.</p>\n\n<p>Currently I'm using:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;var year = new Date();document.write(year.getFullYear());&lt;/script&gt;\n</code></pre>\n\n<p>Is this as short as it gets?</p>\n",
            "last_activity_date": 1424938400,
            "question_id": 4562587,
            "score": 52,
            "tags": [
                "javascript"
            ],
            "title": "Shortest way to print current year in Javascript"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Put a \"return false;\" on the second option:</p>\n\n<pre><code>&lt;a href=\"\" onclick=\"jquery_stuff; return false;\" /&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<pre><code>&lt;a href=\"javascript:// some helpful comment \" onclick=\"jquery_stuff\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You need to <code>return false;</code> after the <code>jquery_stuff</code>:</p>\n\n<pre><code>&lt;a href=\"no-javascript.html\" onclick=\"jquery_stuff(); return false;\" /&gt;\n</code></pre>\n\n<p>This will cancel the default action.</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<pre><code>&lt;a href=\"javascript:;\" onclick=\"jquery\"&gt;link&lt;/a&gt;\n</code></pre>\n\n<p><code>href</code> requires something in there if you want it to not pop up errors in validators for html. The <code>javascript:;</code> is a good place holder.</p>\n\n<p>If you really want to use the <code>#</code>:</p>\n\n<pre><code>&lt;a href=\"#me\" name=\"me\" onclick=\"jquery\"&gt;link&lt;/a&gt;\n</code></pre>\n\n<p>Be careful with the <code>return false;</code>, it halts default behaviours of whatever you are doing.</p>\n\n<p>Also if your js is like a submit you may run into problems in internet explorer.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can put simply as like below:</p>\n\n<pre><code>&lt;a href=\"javascript:;\" onclick=\"jquery_stuff\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I usually use a <code>&lt;span&gt;</code> and style it to look like a link when I need to accomplish something like this.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Usually I do:</p>\n\n<pre><code>&lt;a style=\"cursor:pointer;\" onclick=\"whatever();\"&gt;Whatever&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Check eyelidlessness' comment (use a button, not an anchor). Was just about to post the same advice. An anchor that doesn't link to a resource and merely executes a script should be implemented as a button.</p>\n\n<blockquote>\n  <p>Stop putting your event handlers in HTML, and stop using anchor tags\n  that don't serve anchor semantic purposes. Use a button and add the\n  click handler in your Javascript. Example: HTML <code>&lt;button\n  id=\"jquery_stuff\"&gt;Label&lt;/button&gt;</code> and JavaScript\n  <code>$('#jquery_stuff').click(jquery_stuff);</code>. You can use CSS to style the\n  button to look like a link, by removing padding, borders, margin and\n  background-color, then adding your link styles (eg. color and\n  text-decoration). \u2013 eyelidlessness Oct 19 '10 at 17:40</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>How about this:</p>\n\n<pre><code>&lt;a href=\"#nogo\" onclick=\"foo();\"&gt;some text&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>jQuery has a function built in for this called <code>preventDefault</code> which can be found here:\n<a href=\"http://api.jquery.com/event.preventDefault/\">http://api.jquery.com/event.preventDefault/</a></p>\n\n<p>Here's their example:</p>\n\n<pre><code>&lt;script&gt;\n$(\"a\").click(function(event) {\n    event.preventDefault();\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>You can also build the link like this:</p>\n\n<pre><code>&lt;a href=\"javascript:void(0)\" onclick=\"myJsFunc();\"&gt;Link&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>  &lt;a href=\"#\" class=\"falseLinks\"&gt;Link1&lt;/a&gt;\n  &lt;a href=\"#\" class=\"falseLinks\"&gt;Link2&lt;/a&gt;\n</code></pre>\n\n<p>etc..</p>\n\n<p>JQUERY:</p>\n\n<pre><code>  $(function() {\n    $(\"a.falseLinks\").click(function() {\n      // ...other stuff you want to do when links is clicked\n\n      // This is the same as putting onclick=\"return false;\" in HTML\n     return false;\n    })\n  });\n</code></pre>\n\n<p>@eyelidlessness was a bit douchy in the way he said it but he was right. This is the cleanest way to do it. Why use jQuery if you're then gonna go back to vanilla Javascript for stuff jQuery does easier and cleaner?</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm working on some JQuery to hide/show some content when I click a link. I can create something like:</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"jquery_stuff\" /&gt;\n</code></pre>\n\n<p>But if I click that link while I'm scrolled down on a page, it will jump back up to the top of the page.</p>\n\n<p>If I do something like:</p>\n\n<pre><code>&lt;a href=\"\" onclick=\"jquery_stuff\" /&gt;\n</code></pre>\n\n<p>The page will reload, which rids the page of all the changes that javascript has made.</p>\n\n<p>Something like this:</p>\n\n<pre><code>&lt;a onclick=\"jquery_stuff\" /&gt;\n</code></pre>\n\n<p>Will give me the desired effect, but it no longer shows up as a link. Is there some way to specify an empty anchor so I can assign a javascript handler to the <code>onclick</code> event, without changing anything on the page or moving the scrollbar?</p>\n",
            "last_activity_date": 1378733312,
            "question_id": 493175,
            "score": 51,
            "tags": [
                "javascript",
                "jquery",
                "anchor"
            ],
            "title": "How can I create an empty HTML anchor so the page doesn&#39;t &quot;jump up&quot; when I click it?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Have a look at this fiddle <a href=\"http://jsfiddle.net/ganarajpr/MSjqL/\" rel=\"nofollow\">http://jsfiddle.net/ganarajpr/MSjqL/</a></p>\n\n<p>I have ( I assume! ) done exactly what you were doing and it seems to be working. Can you check what is not working here for you?</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try this in your markup</p>\n\n<pre><code>&lt;input type=\"text\" ng-model=\"searchText\" /&gt;\n&lt;button ng-click=\"check(searchText)\"&gt;Check!&lt;/button&gt;\n{{ searchText }}\n</code></pre>\n\n<p>and this in your controller</p>\n\n<pre><code>$scope.check = function (searchText) {\n    console.log(searchText);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>I came across the same issue when dealing with a non-trivial view (there are nested scopes). And finally discovered this is a known tricky thing when developing AngularJS application due to the nature of prototype-based inheritance of java-script. AngularJS nested scopes are created through this mechanism. And value created from ng-model is placed in children scope, not saying parent scope (maybe the one injected into controller) won't see the value, the value will also shadow any property with same name defined in parent scope if not use dot to enforce a prototype reference access. For more details, checkout the online video specific to illustrate this issue, <a href=\"http://egghead.io/video/angularjs-the-dot/\">http://egghead.io/video/angularjs-the-dot/</a> and comments following up it.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>In Mastering Web Application Development with AngularJS book p.19, it is written that </p>\n\n<blockquote>\n  <p>Avoid direct bindings to scope's properties. Two-way data binding to\n  object's properties (exposed on a scope) is a preferred approach. As a\n  rule of thumb, you should have a dot in an expression provided to the\n  ng-model directive (for example, ng-model=\"thing.name\").</p>\n</blockquote>\n\n<p>Scopes are just JavaScript objects, and they mimic dom hierarchy. According to <a href=\"http://blog.vjeux.com/2011/javascript/how-prototypal-inheritance-really-works.html\">JavaScript Prototype Inheritance</a>, scopes properties are separated through scopes. To avoid this, <strong>dot notation</strong> should use to bind ng-models.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I just had this very issue using a root_controller bound to the body-element. Then I was using ng-view with the angular router. The problem is that angular ALWAYS creates a new scope when it inserts the html into ng-view element. As a consequence, my \"check\" function was defined on the parent scope of the scope that was modified by my ng-model element.</p>\n\n<p>To solve the problem, just use a dedicated controller within route-loaded html content.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><em>\"If you use ng-model, you have to have a dot in there.\"</em>\n<br/>\nYou have to use a child property of an existing object to avoid <a href=\"https://www.youtube.com/watch?v=ZhfUv0spHCY&amp;feature=youtu.be&amp;t=31m34s\" rel=\"nofollow\" title=\"The Parent/Child Property Disconnect\">this quirk</a> in Javascript:<br/></p>\n\n<p><strong>Controller</strong></p>\n\n<pre><code>$scope.formData = {};\n$scope.check = function () {\n  console.log($scope.formData.searchText.$modelValue); //works\n}\n</code></pre>\n\n<p><strong>Template</strong></p>\n\n<pre><code>&lt;input ng-model=\"formData.searchText\"/&gt;\n&lt;button ng-click=\"check()\"&gt;Check!&lt;/button&gt;\n</code></pre>\n\n<p>Without a dot, your child scope creates it's own value, overwriting the inherited value from the parent scope.<br/>See this video clip for more: <a href=\"https://www.youtube.com/watch?v=ZhfUv0spHCY&amp;feature=youtu.be&amp;t=31m34s\" rel=\"nofollow\">https://www.youtube.com/watch?v=ZhfUv0spHCY&amp;feature=youtu.be&amp;t=31m34s</a></p>\n",
                    "is_accepted": false,
                    "score": 95
                },
                {
                    "body": "<p>Using <code>this</code> instead of <code>$scope</code> works. <div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function AppCtrl($scope){\r\n  $scope.searchText = \"\";\r\n  $scope.check = function () {\r\n    console.log(\"You typed '\" + this.searchText + \"'\"); // used 'this' instead of $scope\r\n  }\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.2.23/angular.min.js\"&gt;&lt;/script&gt;\r\n\r\n&lt;div ng-app&gt;\r\n  &lt;div ng-controller=\"AppCtrl\"&gt;\r\n    &lt;input ng-model=\"searchText\"/&gt;\r\n    &lt;button ng-click=\"check()\"&gt;Write console log&lt;/button&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Probably silly question, but I have my html form with simple input and button:</p>\n\n<pre><code>&lt;input type=\"text\" ng-model=\"searchText\" /&gt;\n&lt;button ng-click=\"check()\"&gt;Check!&lt;/button&gt;\n{{ searchText }}\n</code></pre>\n\n<p>Then in the controller (template and controller are called from routeProvider):</p>\n\n<pre><code>$scope.check = function () {\n    console.log($scope.searchText);\n}\n</code></pre>\n\n<p>Why do I see the view updated correctly but undefined in the console when clicking the button?</p>\n\n<p>Thanks!</p>\n\n<p>Update:\nSeems like I have actually solved that issue (before had to come up with some workarounds) with:\nOnly had to change my property name from <code>searchText</code> to <code>search.text</code>, then define empty <code>$scope.search = {};</code> object in the controller and voila... Have no idea why it's working though ;]</p>\n",
            "last_activity_date": 1426087069,
            "question_id": 12618342,
            "score": 48,
            "tags": [
                "javascript",
                "data-binding",
                "angularjs"
            ],
            "title": "Ng-model does not update controller value"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>For a simple answer:</p>\n\n<p>Exports is used to make parts of your module available to scripts outside the module. So when someone uses require like below in another script:</p>\n\n<pre><code>   var sys = require(\"sys\");  \n</code></pre>\n\n<p>They can access any functions or properties you put in module.exports</p>\n\n<p>The easiest way to understand prototype in your example is that Server is a class that inherits all of the methods of HTTPSServer. prototype is one way to achieve class inheritance in javascript.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p><a href=\"http://nodetuts.com/tutorials/17-building-nodejs-modules.html\">This</a> video explains node.js module.exports and <a href=\"http://bonsaiden.github.com/JavaScript-Garden/#object.prototype\">here</a> is a resource which describes JavaScript prototype.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I am new to Javascript and am seeing a lot of usage of exports and prototype in the code that I read. What are they mainly used for and how do they work?</p>\n\n<pre><code>//from express\nvar Server = exports = module.exports = function HTTPSServer(options, middleware){\n  connect.HTTPSServer.call(this, options, []);\n  this.init(middleware);\n};\n\nServer.prototype.__proto__ = connect.HTTPSServer.prototype;\n</code></pre>\n",
            "last_activity_date": 1300723730,
            "question_id": 5380159,
            "score": 42,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "What is exports and prototype in Javascript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You'd solve your problem by turning your <code>Playlist</code> from a collection into a model. If you think about it, a <code>Playlist</code> would probably have other attributes anyway (e.g. name) that wouldn't be settable on a collection.</p>\n\n<p><code>Playlists</code> would then be a collection of <code>Playlist</code> models (instead of collections), which should work without error.</p>\n\n<pre><code>var Track = Backbone.Model.extend({\n    //trackdata\n});\n\nvar Playlist = Backbone.Model.extend({\n    model : Track\n});\n\nvar Playlists = Backbone.Collection.extend({\n    url   : \"playlists\",\n    model : Playlist\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                }
            ],
            "body": "<p>I'm trying to figure out how to make a Collection of collections with backbone.js. I'm pretty new to backbone. I have something like the following situation:</p>\n\n<pre><code> +---------------+               +------------------+\n | Playlists     |               | Playlist         |\n |---------------|          0..* |------------------|\n |               +--------------&gt;| Name             |\n |               |               |                  |\n |               |               |                  |\n +---------------+               +-------+----------+\n                                         |\n                                         |\n                                         |0..*\n                                         v\n                                 +------------------+\n                                 |  Track           |\n                                 |------------------|\n                                 | Name             |\n                                 | Artist           |\n                                 |                  |\n                                 +------------------+\n</code></pre>\n\n<p>In code this looks similar to this:</p>\n\n<pre><code>var trackModel = Backbone.Model.extend({\n    //trackdata\n});\n\nvar playlistModel = Backbone.Collection.extend({\n    model : trackModel,\n    url   : \"playlist\"\n});\n\nvar playlistsModel = Backbone.Collection.extend({\n    url   : \"playlists\",\n    model : playlistModel   //This pretty sure doesn't work like I want, because there is no model attribute for collections :S\n});\n</code></pre>\n\n<p>However I always receive an error in the js console saying:</p>\n\n<pre><code> Uncaught TypeError: Object [object Object] has no method '_validate'\n</code></pre>\n\n<p>when I try to execute a function that triggers the validate (like add, fetch, ...)</p>\n\n<p>It makes no difference if i add the <code>validate</code> or <code>_validate</code> function to any of the collections or models.</p>\n\n<p>I believe this is because backbone.js doesn't support collections in collections. Is there another way that works?</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>This is how it looks right now</p>\n\n<pre><code>var Track = Backbone.Model.extend({ \n    //trackdata \n}); \n\nvar Tracks = Backbone.Collection.extend({ \n    model:Track; \n}); \n\nvar Playlist = Backbone.Model.extend({ \n    //name  : ...\n    tracks: new Tracks ()\n}); \n\nvar Playlists = Backbone.Collection.extend({ \n    url : \"playlists\", \n    model : Playlist \n});\n</code></pre>\n",
            "last_activity_date": 1418564685,
            "question_id": 10388199,
            "score": 41,
            "tags": [
                "javascript",
                "backbone.js"
            ],
            "title": "Backbone.js Collection of Collections"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<h2>Resolved!</h2>\n\n<p>By using the following</p>\n\n<pre><code>paper.print(100, 100, \"Test string\", paper.getFont(\"Times\", 800), 30);\n</code></pre>\n\n<p>it now aligns text on the left.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Text-anchor property for text method is set to 'middle' by default. </p>\n\n<p>If you want to left align it then change text-anchor in attributes for the object:</p>\n\n<pre><code>var t = paper.text(50, 50, \"Rapha\u00ebl\\nkicks\\nbutt!\").attr({'text-anchor': 'start'});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 127
                },
                {
                    "body": "<p>I know you didn't say you need to vertical align it to top, but if you want to use paper.text instead of paper.print... and would like to vertical align to be top.</p>\n\n<p>Try this:</p>\n\n<pre><code>function alignTop(t) {\n    var b = t.getBBox();\n    var h = Math.abs(b.y2) - Math.abs(b.y) + 1;\n\n    t.attr({\n        'y': b.y + h\n    });\n}\n</code></pre>\n\n<p>And just pass the Raphael text object to it.  It will top align it for you.\nand just call that function </p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Following code works well in IE , Chrome (Firefox not tested):    </p>\n\n<pre><code>var t = paper.text(50, 50, \"Rapha\u00ebl\\nkicks\\nbutt!\"),\n    b = t._getBBox();\nt.translate(-b.width/2,-b.height/2);\n</code></pre>\n\n<p><strong>Explanation:</strong></p>\n\n<p>in Raphael , text is centered around your given x &amp; y by default, you can set left align with:</p>\n\n<pre><code>t.attr({'text-anchor':'start'})\n</code></pre>\n\n<p>but you have no attribute to set it top align. I firstly tried :</p>\n\n<pre><code>var b=t.getBBox(); \n</code></pre>\n\n<p>but it returned NaN in IE, so I turned to:</p>\n\n<pre><code>var b=t._getBBox();\n</code></pre>\n\n<p>_getBBox() is undocumented but used internally by Raphael itself , and it works!</p>\n\n<p>Hope it helps.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to position text within the SVG canvas, by supplying <strong>x, y coordinates</strong></p>\n\n<pre><code>var t = paper.text(50, 50, \"Rapha\u00ebl\\nkicks\\nbutt!\");\n</code></pre>\n\n<p>but does not position the text like all other objects...</p>\n\n<p><strong>x, y coordinates specify the center</strong> of the object! <strong>Not the <em>\"left and top most\"</em> pixel!</strong></p>\n\n<hr>\n\n<p>I would like to <strong><em>\"left align\"</em></strong> the text along a line, same as standard HTML.</p>\n\n<p>Help would be very much appreciated.</p>\n",
            "last_activity_date": 1382151767,
            "question_id": 2124763,
            "score": 37,
            "tags": [
                "javascript",
                "svg",
                "raphael"
            ],
            "title": "Raphael JS and Text positioning?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>module</code> is just a plain JavaScript object with an <code>exports</code> property. <code>exports</code> is a plain JavaScript variable that happens to be set to <code>module.exports</code>.\nAt the end of your file, node.js will basically 'return' <code>module.exports</code> to the <code>require</code> function. A simplified way to view a JS file in Node could be this:</p>\n\n<pre><code>var module = { exports: {} };\nvar exports = module.exports;\n\n// your code\n\nreturn module.exports;\n</code></pre>\n\n<p>If you set a property on <code>exports</code>, like <code>exports.a = 9;</code>, that will set <code>module.exports.a</code> as well because objects are passed around as references in JavaScript, which basically just means that if you set multiple variables to the same object, they <em>are</em> all the same object; so then <code>exports</code> and <code>module.exports</code> are the same object.<br>\nBut if you set <code>exports</code> to something new, it will no longer be set to <code>module.exports</code>, so <code>exports</code> and <code>module.exports</code> are no longer the same object.</p>\n",
                    "is_accepted": true,
                    "score": 82
                },
                {
                    "body": "<p>Rene's answer about the relationship between <code>exports</code> and <code>module.exports</code> is quite clear, it's all about javascript references. Just want to add that:  </p>\n\n<p>We see this in many node modules:  </p>\n\n<p><code>var app = exports = module.exports = {};</code>  </p>\n\n<p>This will make sure that event if we changed module.exports, we can still use exports by making those two variables point to the same object.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>module is just a plain JavaScript object with an exports property. exports is a plain JavaScript variable that happens to be set to module.exports</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>On this page (<a href=\"http://docs.nodejitsu.com/articles/getting-started/what-is-require\">http://docs.nodejitsu.com/articles/getting-started/what-is-require</a>), it states that \"If you want to set the exports object to a function or a new object, you have to use the module.exports object.\"</p>\n\n<p>My question is why.</p>\n\n<pre><code>// right\nmodule.exports = function () {\n  console.log(\"hello world\")\n}\n// wrong\nexports = function () {\n  console.log(\"hello world\")\n}\n</code></pre>\n\n<p>I console.logged the result (<code>result=require(example.js)</code>) and the first one is <code>[Function]</code> the second one is <code>{}</code>.</p>\n\n<p>Could you please explain the reason behind it? I read the post here: <a href=\"http://stackoverflow.com/questions/7137397/module-exports-vs-exports-in-nodejs\">module.exports vs exports in nodeJS</a> . It is helpful, but does not explain the reason why it is designed in that way. Will there be a problem if the reference of exports be returned directly?</p>\n",
            "last_activity_date": 1420025591,
            "question_id": 16383795,
            "score": 35,
            "tags": [
                "javascript",
                "node.js",
                "commonjs"
            ],
            "title": "Difference between &quot;module.exports&quot; and &quot;exports&quot; in the CommonJs Module System"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>When you write:</p>\n\n<pre><code>\u2026.data(someArray).enter().append('foo');\n</code></pre>\n\n<p>D3 creates a bunch of <code>&lt;foo&gt;</code> elements, one for each entry in the array. More importantly, it also associates the data for each entry in the array with that DOM element, as a <code>__data__</code> property.</p>\n\n<p>Try this:</p>\n\n<pre><code>var data = [ {msg:\"Hello\",cats:42}, {msg:\"World\",cats:17} ]; \nd3.select(\"body\").selectAll(\"q\").data(data).enter().append(\"q\");\nconsole.log( document.querySelector('q').__data__ );\n</code></pre>\n\n<p>What you will see (in the console) is the object <code>{msg:\"Hello\",cats:42}</code>, since that was associated with the first created <code>q</code> element.</p>\n\n<p>If you later do:</p>\n\n<pre><code>d3.selectAll('q').data(function(d){\n  // stuff\n});\n</code></pre>\n\n<p>the value of <code>d</code> turns out to be that <code>__data__</code> property. (At this point it's up to you to ensure that you replace <code>// stuff</code> with code that returns a new array of values.)</p>\n\n<p><a href=\"http://phrogz.net/js/d3-playground/#MultiBars_HTML\">Here's another example</a> showing the data bound to the HTML element and the ability to re-bind subsets of data on lower elements:</p>\n\n<p>&nbsp; <img src=\"http://i.stack.imgur.com/7DxEa.png\" alt=\"no description\"></p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>The key to understanding what this code is doing is to recognize that selections are <em>arrays of arrays</em> of DOM elements. The outer-most array is called a 'selection', the inner array(s) are called 'groups' and those groups contain the DOM elements. You can test this by going into the console at d3js.org and making a selection like d3.selectAll('p'), you will see an array containing an array containing 'p' elements.</p>\n\n<p>In your example, when you first call selectAll('tr') you get a selection with a single group that contains all the 'tr' elements. Then each element of <code>matrix</code> is matched to each 'tr' element.</p>\n\n<p>But when you call selectAll('td') on that selection, the selection already contains a group of 'tr' elements. This time each of those elements will each <strong>become a group</strong> of 'td' elements. A group is just an array, but it also has a parentNode property that references the old selection, in this case the 'tr' elements.</p>\n\n<p>Now when you call <code>data(function(d) { return d; })</code> on this new selection of 'td' elements, <code>d</code> represents the data bound to each group's parent node. So in the example, the 'td's in the first group will be bound with the array [11975,  5871, 8916, 2868]. The second group of 'td's are bound with [ 1951, 10048, 2060, 6171].</p>\n\n<p>You can read mike bostock's own excellent explanation of selections and data binding here: <a href=\"http://bost.ocks.org/mike/selection/\" rel=\"nofollow\">http://bost.ocks.org/mike/selection/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm reading through the D3.js documentation, and am finding it hard to understand <a href=\"https://github.com/mbostock/d3/wiki/Selections#wiki-data\">the <code>selection.data</code> method</a> from the documentation. </p>\n\n<p>This is the example code given in the documentation:</p>\n\n<pre><code>var matrix = [\n  [11975,  5871, 8916, 2868],\n  [ 1951, 10048, 2060, 6171],\n  [ 8010, 16145, 8090, 8045],\n  [ 1013,   990,  940, 6907]\n];\n\nvar tr = d3.select(\"body\").append(\"table\").selectAll(\"tr\")\n    .data(matrix)\n  .enter().append(\"tr\");\n\nvar td = tr.selectAll(\"td\")\n    .data(function(d) { return d; })\n  .enter().append(\"td\")\n    .text(function(d) { return d; });\n</code></pre>\n\n<p>I understand most of this, but what is going on with the <code>.data(function(d) { return d; })</code> section of the <code>var td</code> statement?</p>\n\n<p>My best guess is as follows:</p>\n\n<ul>\n<li>The <code>var tr</code> statement has bound a four-element array to each tr node</li>\n<li>The <code>var td</code> statement then uses that four-element array as its data, somehow</li>\n</ul>\n\n<p>But how does <code>.data(function(d) { return d; })</code> actually get that data, and what does it return? </p>\n",
            "last_activity_date": 1402419415,
            "question_id": 9481497,
            "score": 35,
            "tags": [
                "javascript",
                "d3.js",
                "html-table"
            ],
            "title": "Understanding how D3.js binds data to nodes"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>V8 is the fastest, because it compiles all JS to machine code.</p>\n\n<p>SpiderMonkey (what FF uses) is fast too, but compiles to an intermediate byte-code, not machine code. That's the major difference with V8. EDIT- Newer Firefox releases come with a newer variant of SpideMonkey; TraceMonkey. TraceMonkey does JIT compilation of critical parts, and maybe other smart optimizations. </p>\n\n<p>Rhino compiles Javascript into Java classes, thus allowing you to basically write \"Java\" applications in Javascript. Rhino is also used as a way to interpret JS in the backend and manipulate it, and have complete code understanding, such as reflection. This is used for example by the YUI Compressor.</p>\n\n<p>The reason why Rhino is used instead of V8 all over the place is probably because V8 is relatively new, so a lot of projects have already been using Rhino/Spidermonkey as their JS engine, for example Yahoo widgets. (I assume that's what you're referring to with \"scripts on their desktops\")</p>\n\n<p>edit-\nThis link might also give some insight of why SpiderMonkey is so widely adopted.\n<a href=\"http://stackoverflow.com/questions/93692/which-javascript-engine-would-you-embed-in-an-application\">http://stackoverflow.com/questions/93692/which-javascript-engine-would-you-embed-in-an-application</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>To respond the question, why native code Vs Byte code... </p>\n\n<p>The native code is faster and for google a strategic choice because they have plan to JS one of them at least is ChromeOS.</p>\n\n<p>A good video about this question is posted on Channel9 with an interview with Lars Bak the man behind V8 can be found <a href=\"http://channel9.msdn.com/shows/Going+Deep/Expert-to-Expert-Erik-Meijer-and-Lars-Bak-Inside-V8-A-Javascript-Virtual-Machine\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you want to see how the various in-browser Javascript engines stack up, install Safari 4 (yes it runs on Windows now too!), Chrome V8, Firefox 3.5, and IE 8 (if you are on windows) and run the benchmark:</p>\n\n<p><a href=\"http://www2.webkit.org/perf/sunspider-0.9/sunspider.html\">http://www2.webkit.org/perf/sunspider-0.9/sunspider.html</a></p>\n\n<p>I believe as Pointy said above, the new Firefox 3.5 uses TraceMonkey that also compiles to intermedit code on the fly using some form of JIT.  So it should compare to V8 somewhat favorably.  At least it won't be 10x slower than V8 like Firefox 3 SpiderMonkey (without JIT) was.</p>\n\n<p>For me... safari 4.0.3 was 2.5x faster than Tracemonky in Firefox 3.5.3 on Win XP.  IE8 was much much slower.  I don't have Chrome installed at the moment.</p>\n\n<p>Don't know about Rhino compiling to java bytecode.  If it's still interpreting the dynamic features of Javascript such as being able to add attributes to object instances at runtime (example obj.someNewAttribute=\"someValue\" which is allowed in Javascript)... I'm not so sure that it's entirely \"compiled\" to bytecode, and you might not get any better performance other than you don't have to compile from Javascript source code text every time your Javascript runs.  Remember that Javascript allows very dynamic syntax such as eval(\"x=10;y=20;z=x*y\"); which means you can build up strings of code that get compiled at runtime.  That's why I'd think Rhino would be mixed-mode interpreted/compiled even if you did compile to JVM bytecode.</p>\n\n<p>The JVM is still an interpreter, albeit a very good one with JIT support.  So I like to think of Rhino-on-JVM as 2 interpreter layers (interpreter-on-interpreter) or interpreter^2.  Whereas most of your other Javascript engines are written in C, and as such should perform more like interpreter^1.  Each interpreter layer can add 5-10x performance degradation as compared to C or C++ (ref Perl or Python or Ruby for example), but with JIT the performance hit can be much lower on the order of 2-4x.  And the JVM has one of the most robust &amp; mature JIT engines ever.</p>\n\n<p>So your mileage will definitely vary and you probably would benefit from doing some serious benchmarks if you want a real answer for your intended application on your own hardware &amp; OS.</p>\n\n<p>Rhino can't be too awfully slow, since I know lots of folks are using it.  I think it's main appeal is not its speed, but the fact that is easy-to-code/light-weight/embeddable/interpreter that has hooks into Java libraries, which makes it perfect for scripting/configuration/extensibility of your software project.  Some text editors like UltraEdit are even embedding Javascript as an alternative macro scripting engine.  Every programmer seems to be able to stumble through javascript pretty easily, so it's easy to pick up as well.</p>\n\n<p>One advantage to Rhino is that it runs pretty much anywhere the JVM runs.  In my experience, trying to get stand-alone TraceMonkey or SpiderMonkey to build &amp; run from command line can be a bit painful on systems like Windows.  And embedding in your own application can be even more time consuming.  But the payback to having an embeddable language would be worth it for a big project, as compared to having to \"roll your own\" mini scripting solution if that's what you're looking to do.</p>\n\n<p>Scripting with Rhino is really easy if you have Java and the rhino jar, you just write your javascript and run it from command line.  I use it all the time for simple tasks.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>There are various approaches to JavaScript execution, even when doing JIT. V8 and Nitro (formerly known as SquirrelFish Extreme) choose to do a whole-method JIT, meaning that they compile all JavaScript code down to native instructions when they encounter script, and then simply execute that as if it was compiled C code. SpiderMonkey uses a \"tracing\" JIT instead, which first compiles the script to bytecode and interprets it, but monitors the execution, looking for \"hot spots\" such as loops. When it detects one, it then compiles just that hot path to machine code and executes that in the future.</p>\n\n<p>Both approaches have upsides and downsides. Whole-method JIT ensures that all JavaScript that is executed will be compiled and run as machine code and not interpreted, which in general should be faster. However, depending on the implementation it may mean that the engine spends time compiling code that will never be executed, or may only be executed once, and is not performance critical. In addition, this compiled code must be stored in memory, so this can lead to higher memory usage.</p>\n\n<p>The tracing JIT as implemented in SpiderMonkey can produce extremely specialized code compared to a whole-method JIT, since it has already executed the code and can speculate on the types of variables (such as treating the index variable in a for loop as a native integer), where a whole-method JIT would have to treat the variable as an object because JavaScript is untyped and the type could change (SpiderMonkey will simply \"fall off\" trace if the assumption fails, and return to interpreting bytecode). However, SpiderMonkey's tracing JIT currently does not work efficiently on code with many branches, as the traces are optimized for single paths of execution. In addition, there's some overhead involved in monitoring execution before deciding to compile a trace, and then switching execution to that trace. Also, if the tracer makes an assumption that is later violated (such as a variable changing type), the cost of falling off trace and switching back to interpreting is likely to be higher than with a whole-method JIT.</p>\n",
                    "is_accepted": false,
                    "score": 53
                }
            ],
            "body": "<p>I am confused about JavaScript engines right now. I know that <a href=\"https://code.google.com/p/v8/\">V8</a> was a big deal because it compiled JavaScript to native code. </p>\n\n<p>Then I started reading about <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey\">Mozilla SpiderMonkey</a>, which from what I understand is written in C and can compile JavaScript. So how is this different from V8 and if this is true, why does Firefox not do this?</p>\n\n<p>Finally, does <a href=\"https://developer.mozilla.org/en-US/docs/Rhino\">Rhino</a> literally compile the JavaScript to Java byte code so you would get all the speed advantages of Java? If not, why do people not run V8 when writing scripts on their desktops?</p>\n",
            "last_activity_date": 1412700432,
            "question_id": 2137320,
            "score": 34,
            "tags": [
                "javascript",
                "v8",
                "rhino",
                "spidermonkey",
                "javascript-engine"
            ],
            "title": "Javascript Engines Advantages"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>When I've built multi-lingual sites before (not very large ones, so this might not scale too well), I keep a series of \"language\" files:</p>\n\n<ul>\n<li>lang.en.js</li>\n<li>lang.it.js</li>\n<li>lang.fr.js</li>\n</ul>\n\n<p>Each of the files declares an object which is basically just a map from key word to language phrase:</p>\n\n<pre><code>// lang.en.php\nlang = {\n    greeting : \"Hello\"\n};\n\n// lang.fr.php\nlang = {\n    greeting : \"Bonjour\"\n};\n</code></pre>\n\n<p>Dynamically load one of those files and then all you need to do is reference the key from your map:</p>\n\n<pre><code>document.onload = function() {\n    alert(lang.greeting);\n};\n</code></pre>\n\n<p>There are, of course, many other ways to do this, and many ways to do this style but better: encapsulating it all into a function so that a missing phrase from your \"dictionary\" can be handled gracefully, or even do the whole thing using OOP, and let it manage the dynamic including of the files, it could perhaps even draw language selectors for you, etc.</p>\n\n<pre><code>var l = new Language('en');\nl.get('greeting');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>Just found a nice article about i18n in javascript:<br />\n<a href=\"http://24ways.org/2007/javascript-internationalisation\" rel=\"nofollow\">http://24ways.org/2007/javascript-internationalisation</a></p>\n\n<p>Although a simple google search with i18n + javascript reveals plenty of alternatives.  </p>\n\n<p>In the end, it depends on how <em>deep</em> you want it to be. For a couple of languages, a single file is enough.</p>\n\n<p>You could use a framework like <a href=\"http://jquery.com/\" rel=\"nofollow\">Jquery</a>, use a span to identify the text (with a class) and then use the id of each span to find the corresponding text in the chosen language.<br />\n1 Line of Jquery, done.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There are are a few things you need to keep in mind when designing multilanguage support:</p>\n\n<p>1 - Separate code from data (i.e. don't hard-code strings right into your functions)</p>\n\n<p>2 - create a formatting hook function to deal with localization differences. Allowing formattable strings (<strong>\"{0}\"</strong>) is better than concatenating (<strong>\"Welcome to\" + value</strong>), for a lot of reasons:</p>\n\n<ul>\n<li>in some languages, a number is formatted like 1.234.678,00 instead of 1,234,567.00</li>\n<li>pluralization is often not as simple as appending an \"s\" at the end of the singular</li>\n<li>grammar rules are different and can affect the order of things so you should allow dynamic data to be appended after the translation hook: for example, <strong>\"Welcome to {0}\"</strong> turns into <strong>\"{0} he youkoso\"</strong> in japanese (this happens in pretty much every language, mind you).</li>\n</ul>\n\n<p>3 - Make sure that you can actually format strings <strong>after</strong> the translation hook runs, so you can reuse keys.</p>\n\n<p>4 - <strong>Do not, under any circunstance, hook database outputs to the translator utility</strong>. If you have multilingual data, create separate tables / rows in your database. I've seen people get this no-brainer wrong fairly often (usually for countries and states/provinces in forms).</p>\n\n<p>5 - Create explicit coding practices rules for creating keys. The formatter utility function (which will look something like <strong>translate(\"hello world\")</strong> will take a key as a parameter, and keys with slight variations make maintainance very annoying. For instance, you might end up with three keys in the following example: \"enter you name\", \"enter your name:\", \"enter your name: \". Choose one format (e.g. no colon, trimmed) and catch discrepancies in code reviews. Don't do this filtering programmatically, as it can trigger false positives.</p>\n\n<p>6 - Be mindful that HTML markup could potentially be needed in the translation table (e.g. if you need to bold a word in a sentence, or have footnote medical references). Test for this extensively.</p>\n\n<p>7 - There are several ways of importing language strings. Ideally, you should have multiple versions of a language.lang.js file, switch between them with server side code, and reference the file from the bottom of the HTML file. Pulling the file via AJAX is also an alternative, but could introduce delays. Merging language.js into your main code file is not advisable, since you lose the benefits of file caching.</p>\n\n<p>8 - <strong>Test with your target languages.</strong> This sounds silly, but I've seen a serious bug once because the programmer didn't bother to check for the existence of \"\u00e9\" in the key.</p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>You should look into what has been done in classic JS components - take things like Dojo, Ext, FCKEditor, TinyMCE, etc. You'll find lots of good ideas.</p>\n\n<p>Usually it ends up being some kind of attributes you set on tags, and then you replace the content of the tag with the translation found in your translation file, based on the value of the attribute.</p>\n\n<p>One thing to keep in mind, is the evolution of the language set (when your code evolves, will you need to retranslate the whole thing or not). We keep the translations in PO Files (Gnu Gettext), and we have a script that transforms the PO File into ready to use JS Files.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Forgot two things : </p>\n\n<ul>\n<li>Always use UTF-8 - this sounds silly, but if you are not in utf-8 from start (HTML head + JS encoding), you'll be bust quickly.</li>\n<li>Use the english string as a key to your translations - this way you won't end up with things like: lang.Greeting = 'Hello world' - but lang['Hello world'] = 'Hello world';</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>function Language(lang)\n{\n    var __construct = function() {\n        if (eval('typeof ' + lang) == 'undefined')\n        {\n            lang = \"en\";\n        }\n        return;\n    }()\n\n    this.getStr = function(str, defaultStr) {\n        var retStr = eval('eval(lang).' + str);\n        if (typeof retStr != 'undefined')\n        {\n            return retStr;\n        } else {\n            if (typeof defaultStr != 'undefined')\n            {\n                return defaultStr;\n            } else {\n                return eval('en.' + str);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>After adding this to your page, you can work with it like this:</p>\n\n<pre><code>var en = {\n    SelPlace:\"Select this place?\",\n    Save:\"Saved.\"\n};\n\nvar tr = {\n    SelPlace:\"Buray\u0131 se\u00e7mek istiyor musunuz?\"\n};\n\nvar translator = new Language(\"en\");\nalert(translator.getStr(\"SelPlace\")); // the result: Select this place?\nalert(translator.getStr(\"Save\")); // the result: Saved.\nalert(translator.getStr(\"DFKASFASDFJK\", \"Default string for non-existent string\")); // the result: Default string for non-existent string\n\nvar translator = new Language(\"tr\");\nalert(translator.getStr(\"SelPlace\")); // the result: Buray\u0131 se\u00e7mek istiyor musunuz?\nalert(translator.getStr(\"Save\")); // the result: Saved. (because it doesn't exist in this language, borrowed from english as default)\nalert(translator.getStr(\"DFKASFASDFJK\", \"Default string for non-existent string\")); // the result: Default string for non-existent string\n</code></pre>\n\n<p>If you call the class with a language that you haven't defined, English(<strong>en</strong>) will be selected.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>what is the best practice for multilanguage website using DOM Manipulating with javascript? I build some dynamic parts of the website using javascript. My first thought was using an array with the text strings and the language code as index. Is this a good idea?</p>\n",
            "last_activity_date": 1407286547,
            "question_id": 228835,
            "score": 32,
            "tags": [
                "javascript",
                "internationalization"
            ],
            "title": "Best practice javascript and multilanguage"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Based on <a href=\"http://twitter.github.com/bootstrap/javascript.html#collapse\">the doc</a></p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;div class=\"row\"&gt;\n    &lt;div class=\"span4 collapse-group\"&gt;\n        &lt;h2&gt;Heading&lt;/h2&gt;\n        &lt;p class=\"collapse\"&gt;Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada magna mollis euismod. Donec sed odio dui. &lt;/p&gt;\n        &lt;p&gt;&lt;a class=\"btn\" href=\"#\"&gt;View details &amp;raquo;&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<pre class=\"lang-js prettyprint-override\"><code>$('.row .btn').on('click', function(e) {\n    e.preventDefault();\n    var $this = $(this);\n    var $collapse = $this.closest('.collapse-group').find('.collapse');\n    $collapse.collapse('toggle');\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Sherbrow/68RXP/\">Working demo</a>.</p>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>It's possible to do this without using extra JS code using the data-collapse and data-target attributes on the a link.</p>\n\n<p>e.g.</p>\n\n<pre><code>&lt;a class=\"btn\" data-toggle=\"collapse\" data-target=\"#viewdetails\"&gt;View details &amp;raquo;&lt;/a&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Dc6jF/\">Here's a working example</a>.</p>\n",
                    "is_accepted": false,
                    "score": 83
                },
                {
                    "body": "<p>Elaborating a bit more on Taylor Gautier's reply (sorry, I dont have enough reputation to add a comment), I'd reply to Dean Richardson on how to do what he wanted, without any additional JS code. Pure CSS.</p>\n\n<p>You would replace his <code>.btn</code> with the following:</p>\n\n<pre><code>&lt;a class=\"btn showdetails\" data-toggle=\"collapse\" data-target=\"#viewdetails\"&gt;&lt;/a&gt;\n</code></pre>\n\n<p>And add a small CSS for when the content is displayed:</p>\n\n<pre><code>.in.collapse+a.btn.showdetails:before { \n    content:'Hide details \u00ab';\n}\n.collapse+a.btn.showdetails:before { \n    content:'Show details \u00bb'; \n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/8cYFj/\">Here is his modified example</a></p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>I wanted an \"expand/collapse\" container with a plus and minus button to open and close it.  This is BS3.</p>\n\n<p><img src=\"http://i.stack.imgur.com/X2HRG.png\" alt=\"enter image description here\"></p>\n\n<h3>HTML:</h3>\n\n<pre><code>&lt;button id=\"button\" type=\"button\" class=\"btn btn-primary\" \n  data-toggle=\"collapse\" data-target=\"#demo\"&gt;\n  &lt;span class=\"glyphicon glyphicon-collapse-down\"&gt;&lt;/span&gt; Show\n&lt;/button&gt;\n\n&lt;div id=\"demo\" class=\"collapse\"&gt;\n  &lt;ol class=\"list-group\"&gt;\n      &lt;li class=\"list-group-item\"&gt;Warrior&lt;/li&gt;\n      &lt;li class=\"list-group-item\"&gt;Adventurer&lt;/li&gt;\n      &lt;li class=\"list-group-item\"&gt;Mage&lt;/li&gt;\n  &lt;/ol&gt;\n&lt;/div&gt;\n</code></pre>\n\n<h3>JS:</h3>\n\n<pre><code>$(function(){\n  $('#demo').on('hide.bs.collapse', function () {\n    $('#button').html('&lt;span class=\"glyphicon glyphicon-collapse-down\"&gt;&lt;/span&gt; Show');\n  })\n  $('#demo').on('show.bs.collapse', function () {\n    $('#button').html('&lt;span class=\"glyphicon glyphicon-collapse-up\"&gt;&lt;/span&gt; Hide');\n  })\n})\n</code></pre>\n\n<h3>Example:</h3>\n\n<p><a href=\"http://plnkr.co/edit/aG5BtH?p=preview\" rel=\"nofollow\">http://plnkr.co/edit/aG5BtH?p=preview</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have recently come accross bootstrap and I am working on extending the hero example. I want to add the following behaviour to my page:</p>\n\n<p>When a button (i.e. an element with selector '.row .btn') is clicked on, I want to be able to toggle between expanding/collapsing the portion of text above the button.</p>\n\n<p>This is what the HTML looks like:</p>\n\n<pre><code>&lt;html&gt;\n  &lt;head&gt;\n      &lt;title&gt;Test Page&lt;/title&gt;\n    &lt;!-- Le styles --&gt;\n    &lt;link href=\"../assets/css/bootstrap.css\" rel=\"stylesheet\"&gt;\n    &lt;style type=\"text/css\"&gt;\n      body {\n        padding-top: 60px;\n        padding-bottom: 40px;\n      }\n    &lt;/style&gt;\n    &lt;link href=\"../assets/css/bootstrap-responsive.css\" rel=\"stylesheet\"&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div class=\"navbar navbar-fixed-top\"&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"container\"&gt;\n      &lt;div class=\"hero-unit\"&gt;\n        &lt;h1&gt;Hello, world!&lt;/h1&gt;\n        &lt;p&gt;Blah, blah.&lt;/p&gt;\n        &lt;p&gt;&lt;a class=\"btn btn-primary btn-large\"&gt;Learn more &amp;raquo;&lt;/a&gt;&lt;/p&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Example row of columns --&gt;\n      &lt;div class=\"row\"&gt;\n        &lt;div class=\"span4\"&gt;\n          &lt;h2&gt;Heading&lt;/h2&gt;\n           &lt;p&gt;Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada magna mollis euismod. Donec sed odio dui. &lt;/p&gt;\n          &lt;p&gt;&lt;a class=\"btn\" href=\"#\"&gt;View details &amp;raquo;&lt;/a&gt;&lt;/p&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;!-- Placed at the end of the document so the pages load faster --&gt;\n    &lt;script src=\"../assets/js/jquery.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../assets/js/bootstrap-transition.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../assets/js/bootstrap-alert.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../assets/js/bootstrap-modal.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../assets/js/bootstrap-dropdown.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../assets/js/bootstrap-scrollspy.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../assets/js/bootstrap-tab.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../assets/js/bootstrap-tooltip.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../assets/js/bootstrap-popover.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../assets/js/bootstrap-button.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../assets/js/bootstrap-collapse.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../assets/js/bootstrap-carousel.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../assets/js/bootstrap-typeahead.js\"&gt;&lt;/script&gt;\n\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>I can hack this using jQuery, but maybe there is a way of doing it the Bootstrap way? - i.e. using the Bootstrap API?</p>\n",
            "last_activity_date": 1413315226,
            "question_id": 11968072,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "twitter-bootstrap"
            ],
            "title": "Twitter Bootstrap button click to toggle expand/collapse text section above button"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Since your content must be dynamic you can set the css properties of the modal dynamically on <code>show</code> event of the modal which will re-size the modal overriding its default specs. Reason being bootstrap applies a max-height to the modal body with the css rule as below:</p>\n\n<pre><code>.modal-body {\n    position: relative;\n    overflow-y: auto;\n    max-height: 400px;\n    padding: 15px;\n}\n</code></pre>\n\n<p>So you can add inline styles dynamically using jquery <code>css</code> method: </p>\n\n<p>For newer versions of bootstrap use <code>show.bs.modal</code></p>\n\n<pre><code>$('#modal').on('show.bs.modal', function () {\n       $(this).find('.modal-body').css({\n              width:'auto', //probably not needed\n              height:'auto', //probably not needed \n              'max-height':'100%'\n       });\n});\n</code></pre>\n\n<p>For older versions of bootstrap use <code>show</code></p>\n\n<pre><code>$('#modal').on('show', function () {\n       $(this).find('.modal-body').css({\n              width:'auto', //probably not needed\n              height:'auto', //probably not needed \n              'max-height':'100%'\n       });\n});\n</code></pre>\n\n<p>or use a css rule to override:</p>\n\n<pre><code>.autoModal.modal .modal-body{\n    max-height: 100%;\n}\n</code></pre>\n\n<p>and add this class <code>autoModal</code> to your target modals.</p>\n\n<p>Change the content dynamically in the fiddle, you will see the modal getting resized accordingly. <kbd><a href=\"http://jsfiddle.net/GDVdN/\" rel=\"nofollow\">Demo</a></kbd></p>\n\n<p>Newer version of bootstrap see the available <a href=\"http://getbootstrap.com/javascript/#modals-events\" rel=\"nofollow\"><code>event names</code></a>.</p>\n\n<ul>\n<li><strong>show.bs.modal</strong>    This event fires immediately when the show instance method is called. If caused by a click, the clicked element is available as the relatedTarget property of the event.</li>\n<li><strong>shown.bs.modal</strong>   This event is fired when the modal has been made visible to the user (will wait for CSS transitions to complete). If caused by a click, the clicked element is available as the relatedTarget property of the event.</li>\n<li><strong>hide.bs.modal</strong>    This event is fired immediately when the hide instance method has been called.</li>\n<li><strong>hidden.bs.modal</strong>  This event is fired when the modal has finished being hidden from the user (will wait for CSS transitions to complete).</li>\n<li><strong>loaded.bs.modal</strong>  This event is fired when the modal has loaded content using the remote option.</li>\n</ul>\n\n<p>Older version of bootstrap <kbd><a href=\"http://twitter.github.io/bootstrap/javascript.html#modals\" rel=\"nofollow\">modal events</a> </kbd> supported.</p>\n\n<ul>\n<li><strong>Show</strong> -    This event fires immediately when the show instance method is called.</li>\n<li><strong>shown</strong> -   This event is fired when the modal has been made visible to the user (will wait for css transitions to complete).</li>\n<li><strong>hide</strong> -    This event is fired immediately when the hide instance method has been called.</li>\n<li><strong>hidden</strong> -  This event is fired when the modal has finished being hidden from the user (will wait for css transitions to complete).</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>for bootstrap 3 use like</p>\n\n<pre><code>$('#myModal').on('hidden.bs.modal', function () {\n// do something\u2026\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I have database content which has different types of data, such as Youtube videos, Vimeo videos, text, Imgur pictures, etc. All of them have different heights and widths. All I have found while searching the Internet is changing the size to only one parameter. It has to be same as the content in the popup. </p>\n\n<p>This is my HTML code. I also use Ajax to call the content.</p>\n\n<pre><code>&lt;div id=\"modal\" class=\"modal hide fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\"&gt;\n    &lt;div class=\"modal-header\"&gt;\n        &lt;button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"&gt;\u00d7&lt;/button&gt;\n        &lt;h3 id=\"ModalLabel\"&gt;&lt;/h3&gt;\n    &lt;/div&gt;\n    &lt;div class=\"modal-body\"&gt;\n\n    &lt;/div&gt;\n&lt;/div&gt; \n</code></pre>\n",
            "last_activity_date": 1425682681,
            "question_id": 16152275,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "twitter-bootstrap"
            ],
            "title": "How to resize Twitter Bootstrap modal dynamically based on the content"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Have a look at how it's done in <code>Chat.cs</code> in <code>SignalR.Samples.Hubs.Chat</code> from <a href=\"https://github.com/SignalR/SignalR\" rel=\"nofollow\">https://github.com/SignalR/SignalR</a>.</p>\n\n<p>I can see in there that static <code>Dictionary&lt;TKey, TValue&gt;</code>'s are being instantiated at the top, so I imagine they are being maintained persistently too, either with the <code>Chat</code> class being a persisted instance (?) or that array being updated somehow.</p>\n\n<p>Check it out, David Fowler would probably be the best on this.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There's an <a href=\"http://www.asp.net/signalr/overview/hubs-api/hubs-api-guide-server#callfromoutsidehub\">example in the documentation</a>.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Hub.GetClients has disappeared in version 0.4.0.</p>\n\n<p>From the <a href=\"https://github.com/SignalR/SignalR/wiki/Hubs\">wiki</a> you can now use:</p>\n\n<pre><code>IConnectionManager connectionManager = AspNetHost.DependencyResolver.Resolve&lt;IConnectionManager&gt;();\ndynamic clients = connectionManager.GetClients&lt;MyHub&gt;();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>This is the correct way for SignalR 2.x:</p>\n\n<pre><code>var context = GlobalHost.ConnectionManager.GetHubContext&lt;MyHub&gt;();\ncontext.Clients.All.addMessage(message);\n</code></pre>\n\n<p>Basically, you can use the dependency resolver for the current host to resolve the <code>IConnectionManager</code> interface which allows you to get ahold of the context object for a hub.</p>\n\n<p>Further information can be found in the <a href=\"http://www.asp.net/signalr/overview/guide-to-the-api/hubs-api-guide-server#callfromoutsidehub\">official documentation</a>.</p>\n",
                    "is_accepted": false,
                    "score": 48
                }
            ],
            "body": "<p>I've set up a SignalR hub to communicate between the server and client. The hub server side code is stored in a class called Hooking.cs. What I want is to be able to call a method defined in Hooking.cs to allow me to broadcast messages to any connected clients from anywhere in my application. It seems that a new instance of Hooking.cs is created for every client/server call, so I had hoped that I would be able to use something like</p>\n\n<pre><code>var hooking = new Hooking();\nhooking.Test();\n</code></pre>\n\n<p>with the method Test() defined in Hooking.cs such as</p>\n\n<pre><code>public static void Test() {\n    Clients.test()\n}\n</code></pre>\n\n<p>and with a the client side javascript</p>\n\n<pre><code>var hooking = $.connection.hooking;\nhooking.test = function() { alert(\"test worked\"); };\n$.connection.hub.start()\n</code></pre>\n\n<hr>\n\n<p>Unfortunately it isn't that simple, as Clients is not static, so not accessible from a static method.</p>\n\n<p>Looking through the SignalR source code I came across a method that looked promising, <code>Hubs.Invoke(string hubName, string method, params object[] args)</code>, so I would hope I could use something such as <code>Hubs.Invoke(\"Hooking\", \"Test\")</code> but I can't make it work.</p>\n\n<p>Any help with this would be hugely appreciated</p>\n",
            "last_activity_date": 1412681048,
            "question_id": 7634255,
            "score": 28,
            "tags": [
                "c#",
                "javascript",
                "asp.net-mvc",
                "signalr",
                "signalr-hub"
            ],
            "title": "Calling SignalR hub clients from elsewhere in system"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Using bitwise operation would be a better solution. Try this</p>\n\n<pre><code>function formatSizeUnits(bytes)\n{\n    if ( ( bytes &gt;&gt; 30 ) &amp; 0x3FF )\n        bytes = ( bytes &gt;&gt;&gt; 30 ) + '.' + ( bytes &amp; (3*0x3FF )) + 'GB' ;\n    else if ( ( bytes &gt;&gt; 20 ) &amp; 0x3FF )\n        bytes = ( bytes &gt;&gt;&gt; 20 ) + '.' + ( bytes &amp; (2*0x3FF ) ) + 'MB' ;\n    else if ( ( bytes &gt;&gt; 10 ) &amp; 0x3FF )\n        bytes = ( bytes &gt;&gt;&gt; 10 ) + '.' + ( bytes &amp; (0x3FF ) ) + 'KB' ;\n    else if ( ( bytes &gt;&gt; 1 ) &amp; 0x3FF )\n        bytes = ( bytes &gt;&gt;&gt; 1 ) + 'Bytes' ;\n    else\n        bytes = bytes + 'Byte' ;\n    return bytes ;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Try this</p>\n\n<pre><code>function bytesToSize(bytes) {\n   var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n   if (bytes == 0) return '0 Byte';\n   var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n   return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n};\n</code></pre>\n\n<p><strong>Fixed :</strong> <em>(as @disfated said)</em></p>\n\n<p>1 kilo = 1000 (Decimal) (or change to 1024 for binary) + Precision parameter</p>\n\n<pre><code>function bytesToSize(bytes) {\n   if(bytes == 0) return '0 Byte';\n   var k = 1000;\n   var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n   var i = Math.floor(Math.log(bytes) / Math.log(k));\n   return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 93
                },
                {
                    "body": "<pre><code>function formatBytes(bytes) {\n    if(bytes &lt; 1024) return bytes + \" Bytes\";\n    else if(bytes &lt; 1048576) return(bytes / 1024).toFixed(3) + \" KB\";\n    else if(bytes &lt; 1073741824) return(bytes / 1048576).toFixed(3) + \" MB\";\n    else return(bytes / 1073741824).toFixed(3) + \" GB\";\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are 2 real ways to represent sizes when related to bytes, they are SI units (10^3) or IEC units (2^10). There is also JEDEC but their method is ambiguous and confusing. I noticed the other examples have errors such as using KB instead of kB to represent a kilobyte so I decided to write a function that will solve each of these cases using the range of currently accepted units of measure.</p>\n\n<p>There is a formatting bit at the end that will make the number look a bit better (at least to my eye) feel free to remove that formatting if it doesn't suit your purpose.</p>\n\n<p>Enjoy.</p>\n\n<pre><code>// pBytes: the size in bytes to be converted.\n// pUnits: 'si'|'iec' si units means the order of magnitude is 10^3, iec uses 2^10\n\nfunction prettyNumber(pBytes, pUnits) {\n    // Handle some special cases\n    if(pBytes == 0) return '0 Bytes';\n    if(pBytes == 1) return '1 Byte';\n    if(pBytes == -1) return '-1 Byte';\n\n    var bytes = Math.abs(pBytes)\n    if(pUnits &amp;&amp; pUnits.toLowerCase() &amp;&amp; pUnits.toLowerCase() == 'si') {\n        // SI units use the Metric representation based on 10^3 as a order of magnitude\n        var orderOfMagnitude = Math.pow(10, 3);\n        var abbreviations = ['Bytes', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    } else {\n        // IEC units use 2^10 as an order of magnitude\n        var orderOfMagnitude = Math.pow(2, 10);\n        var abbreviations = ['Bytes', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    }\n    var i = Math.floor(Math.log(bytes) / Math.log(orderOfMagnitude));\n    var result = (bytes / Math.pow(orderOfMagnitude, i));\n\n    // This will get the sign right\n    if(pBytes &lt; 0) {\n        result *= -1;\n    }\n\n    // This bit here is purely for show. it drops the percision on numbers greater than 100 before the units.\n    // it also always shows the full number of bytes if bytes is the unit.\n    if(result &gt;= 99.995 || i==0) {\n        return result.toFixed(0) + ' ' + abbreviations[i];\n    } else {\n        return result.toFixed(2) + ' ' + abbreviations[i];\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I got this code to covert size in bytes via using PHP</p>\n\n<p><a href=\"http://stackoverflow.com/questions/5501427/php-filesize-mb-kb-conversion\">PHP filesize MB/KB conversion</a></p>\n\n<p>Now I wan't to covert via using Javascript , I tried to convert this code to JS so look like this..</p>\n\n<pre><code>function formatSizeUnits(bytes){\n      if      (bytes&gt;=1073741824) {bytes=(bytes/1073741824).toFixed(2)+' GB';}\n      else if (bytes&gt;=1048576)    {bytes=(bytes/1048576).toFixed(2)+' MB';}\n      else if (bytes&gt;=1024)       {bytes=(bytes/1024).toFixed(2)+' KB';}\n      else if (bytes&gt;1)           {bytes=bytes+' bytes';}\n      else if (bytes==1)          {bytes=bytes+' byte';}\n      else                        {bytes='0 byte';}\n      return bytes;\n}\n</code></pre>\n\n<p><strong>Demo :</strong> <a href=\"http://jsbin.com/opufih/1/edit\">http://jsbin.com/opufih/1/edit</a></p>\n\n<p>This is a correctly way to do ? Or another better or easier ?</p>\n\n<p>and this code has any wrong coding ?\n<strong><em>Thanks</em></strong></p>\n\n<hr>\n\n<p><strong>Updated :</strong> (After the standardization)</p>\n\n<pre><code>function formatSizeUnits(bytes){\n        if      (bytes&gt;=1000000000) {bytes=(bytes/1000000000).toFixed(2)+' GB';}\n        else if (bytes&gt;=1000000)    {bytes=(bytes/1000000).toFixed(2)+' MB';}\n        else if (bytes&gt;=1000)       {bytes=(bytes/1000).toFixed(2)+' KB';}\n        else if (bytes&gt;1)           {bytes=bytes+' bytes';}\n        else if (bytes==1)          {bytes=bytes+' byte';}\n        else                        {bytes='0 byte';}\n        return bytes;\n}\n</code></pre>\n\n<p><strong>Demo :</strong> <a href=\"http://jsbin.com/opufih/9/edit\">http://jsbin.com/opufih/9/edit</a></p>\n",
            "last_activity_date": 1409777634,
            "question_id": 15900485,
            "score": 27,
            "tags": [
                "javascript",
                "size",
                "byte",
                "converter"
            ],
            "title": "Correct way to convert size in bytes to KB, MB, GB in Javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>us the <a href=\"http://www.tizag.com/javascriptT/javascript-string-split.php\" rel=\"nofollow\">split function</a>:</p>\n\n<pre><code>var splitresult = \"14 2\".split(\" \");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You can <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/split\"><code>.split()</code></a> to get an array of <em>strings</em>, then loop through to convert them to numbers, like this:</p>\n\n<pre><code>var myArray = \"14 2\".split(\" \");\nfor(var i=0; i&lt;myArray.length; i++) { myArray[i] = +myArray[i]; } \n//use myArray, it's an array of numbers\n</code></pre>\n\n<p>The <code>+myArray[i]</code> is just  a quick way to do the number conversion, if you're sure they're integers you can just do:</p>\n\n<pre><code>for(var i=0; i&lt;myArray.length; i++) { myArray[i] = parseInt(myArray[i], 10); } \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>First split the string on spaces:</p>\n\n<pre><code>var result = '14 2'.split(' ');\n</code></pre>\n\n<p>Then convert the result array of strings into integers:</p>\n\n<pre><code>for (var i in result) {\n    result[i] = parseInt(result[i], 10);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var result = \"14 2\".split(\" \").map(function(x){return parseInt(x)});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Just for fun I thought I'd throw a <code>forEach(f())</code> solution in too.</p>\n\n<pre><code>var a=[];\n\"14 2\".split(\" \").forEach(function(e){a.push(parseInt(e,10))});\n\n// a = [14,2]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A quick one for modern browsers:</p>\n\n<pre><code>'14 2'.split(' ').map(Number);\n\n// [14, 2]`\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p><strong>SO... Older thread, I know, but...</strong></p>\n\n<p><strong>TL;DR</strong>: <code>\"5 6 note this foo\".split(\" \").map(Number).filter(Boolean); // [5, 6]</code></p>\n\n<p>There is a subtle flaw in the more elegant solutions listed here, specifically @amillara and @Marcus' otherwise beautiful answers.</p>\n\n<p>The problem occurs when an element of the string array isn't integer-like, perhaps in a case without validation on an input. For a contrived example...</p>\n\n<p><strong>The problem:</strong></p>\n\n<hr>\n\n<pre><code>var effedIntArray = \"5 6 7 69 foo\".split(' ').map(Number); // [5, 6, 7, 69, NaN]\n</code></pre>\n\n<p>Since you obviously want a PURE int array, that's a problem. <em>Honestly</em>, I didn't catch this until I copy-pasted SO code into my script... :/</p>\n\n<p><br>\n<strong>The</strong> <em>(slightly-less-baller)</em> <strong>fix:</strong></p>\n\n<hr>\n\n<pre><code>var intArray = \"5 6 7 69 foo\".split(\" \").map(Number).filter(Boolean); // [5, 6, 7, 69]\n</code></pre>\n\n<p>So, now even when you have crap int string, your output is a pure integer array. The others are really sexy in most cases, but I did want to offer my mostly rambly <strong><em>w'actually</em></strong>. It is still a one-liner though, to my credit...</p>\n\n<p>Hope it saves someone time!</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I want the following string '14 2' into an array of two integers.\nHow can I do it ?\nCan sm1 please tell me specific commands instead of giving links?</p>\n",
            "last_activity_date": 1414622868,
            "question_id": 4291447,
            "score": 26,
            "tags": [
                "javascript"
            ],
            "title": "convert string into array of integers"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Nesting views isn't natively possible, as of now, in angularJS. In my last app, I used a solution derived from here: <a href=\"http://www.bennadel.com/blog/2420-Mapping-AngularJS-Routes-Onto-URL-Parameters-And-Client-Side-Events.htm\">http://www.bennadel.com/blog/2420-Mapping-AngularJS-Routes-Onto-URL-Parameters-And-Client-Side-Events.htm</a></p>\n\n<p>Allowing me to effectively nest views (and skipping the limited ng-view altogether)</p>\n\n<p>After doing so, this other (simpler, better, I believe) solution appeared:</p>\n\n<p><a href=\"http://angular-ui.github.com/\">http://angular-ui.github.com/</a> (scroll down to \"Route Checking\")</p>\n\n<p>Check it out!</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I'd suggest that you have a look at the <a href=\"https://github.com/angular-ui/ui-router\">ui-router</a> project by the AngularUI team. This project contains a new router based on states, which can also react to URLs, but allow way better handling of application state.</p>\n\n<p>This includes the use of having multiple and / or nested views.</p>\n\n<p>I had a similar question a while ago, so maybe its answers are going to help you as well: <a href=\"http://stackoverflow.com/questions/15460279/how-do-i-setup-nested-views-in-angularjs\">How do I setup nested views in AngularJS?</a></p>\n\n<p>Moreover, you can expect ui-router to be integrated in AngularJS in a future version, so this will most probably be the way routing works in the future anyway. So no need to stick to other workarounds if you can already have what will be next today :-)</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Take a look at this:</p>\n\n<ul>\n<li><p><a href=\"https://github.com/angular-ui/ui-router\" rel=\"nofollow\">https://github.com/angular-ui/ui-router</a></p></li>\n<li><p><a href=\"http://angular-ui.github.io/ui-router/sample/#/\" rel=\"nofollow\">http://angular-ui.github.io/ui-router/sample/#/</a></p></li>\n</ul>\n\n<p>Looks like the thing you are looking for</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There are many third party libraries for nested views and routing. <a href=\"https://github.com/angular-ui/ui-router\" rel=\"nofollow\">ui-router</a> is already mentioned here, I would also suggest to take a look at this one:</p>\n\n<p><a href=\"http://angular-route-segment.com\" rel=\"nofollow\">http://angular-route-segment.com</a></p>\n\n<p>It has the nested views capabilities which you ask for exactly, and it is much simpler to use than ui-router. In your example:</p>\n\n<p><strong>index.html</strong>:</p>\n\n<pre><code>&lt;div app-view-segment=\"0\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p><strong>view1.html</strong>:</p>\n\n<pre><code>&lt;p&gt;This is the partial for view 1.&lt;/p&gt;\n&lt;div app-view-segment=\"1\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p><strong>deep-view.html</strong>:</p>\n\n<pre><code>&lt;p&gt;This is the partial for view inside view1.&lt;/p&gt;  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you do not want to turn to yet another library to solve your problem (not that there's anything wrong with that), you should also look into using directives and ng-switch and ng-show.</p>\n\n<p>This approach was given as an answer here :</p>\n\n<p><a href=\"http://stackoverflow.com/questions/12863663/angularjs-complex-nesting-of-partials-and-templates\">angular complex nesting of partials</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I sincerely doubt this is idiomatic Angular (and it's mentioned above that there is possible cross-browser issues), but my <code>ng-include</code> solution for having an \"all\" view with my other views nested inside something like an <code>all.html</code>:</p>\n\n<pre><code>    &lt;div class=\"all\" ng-include src=\"'views/foo.html'\" ng-controller=\"FooCtrl\"&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"all\" ng-include src=\"'views/bar.html'\" ng-controller=\"BarCtrl\"&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"all\" ng-include src=\"'views/baz.html'\" ng-controller=\"BazCtrl\"&gt;\n    &lt;/div&gt;\n</code></pre>\n\n<p>This worked for me but felt like it was going against the grain of the framework. I will personally be trying something like what Eamon links to on my next pass.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I had two different apps in angular. During integration to a single application I had to </p>\n\n<p>nest ng-views. </p>\n\n<p>For sample (index.html) is</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"en\" ng-app=\"myApp\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"utf-8\"&gt;\n&lt;title&gt;My AngularJS App&lt;/title&gt;\n&lt;link rel=\"stylesheet\" href=\"css/app.css\"/&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;ul class=\"menu\"&gt;\n&lt;li&gt;&lt;a href=\"#/view1\"&gt;view1&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"#/view2\"&gt;view2&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;div ng-view&gt;&lt;/div&gt;\n\n&lt;div&gt;Angular seed app: v&lt;span app-version&gt;&lt;/span&gt;&lt;/div&gt;\n\n&lt;script src=\"lib/angular/angular.js\"&gt;&lt;/script&gt;\n&lt;script src=\"js/app.js\"&gt;&lt;/script&gt;\n&lt;script src=\"js/services.js\"&gt;&lt;/script&gt;\n&lt;script src=\"js/controllers.js\"&gt;&lt;/script&gt;\n&lt;script src=\"js/filters.js\"&gt;&lt;/script&gt;\n&lt;script src=\"js/directives.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>One of my app view is (view2.html)</p>\n\n<pre><code>&lt;div class=\"ng-view\"&gt;&lt;/div&gt;\n&lt;p&gt;This is the partial for view 1.&lt;/p&gt;\n{{ 'Current version is v%VERSION%.' | interpolate }}\n</code></pre>\n\n<p>Now this application has different views once again inside it.</p>\n\n<p>I tried but the page is not loading. Is there a possibility to nest ng-views? </p>\n\n<p>If not Possible can it be explained</p>\n\n<p>Thanks in advance</p>\n",
            "last_activity_date": 1378151575,
            "question_id": 15637350,
            "score": 24,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Nesting ng-views in angular js"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Stack Overflow is using <a href=\"http://www.html5rocks.com/en/tutorials/websockets/basics/\" rel=\"nofollow\">Web Sockets</a> for real time updates. If you take a look in the source code (line 35), you would see:</p>\n\n<pre><code>StackExchange.ready(function () {\n    StackExchange.realtime.init('ws://sockets.ny.stackexchange.com');\n    StackExchange.realtime.subscribeToInboxNotifications();\n    StackExchange.realtime.subscribeToReputationNotifications('1');\n});\n</code></pre>\n\n<p>But note that some Opera versions does not support Web Socket. (<a href=\"http://my.opera.com/core/blog/websockets\" rel=\"nofollow\">not until Opera 10.70</a>)</p>\n\n<p>However <a href=\"http://www.facebook.com\" rel=\"nofollow\">Facebook</a> does not seem to use Web Sockets, and I think they are just using simple XHR.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>It seems that Twitter also uses simple XHR (1 minute intervals) for their \"real time updates\".</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Facebook uses <code>long polling/Comet</code>. So it makes a connection and waits for a response, if no response, then it times out and tries again. The timeout is around 40 secs. That's how it does most of the instant updating. However they use a combination of techniques. More on long polling here. </p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Comet_(programming)\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Comet_(programming)</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Now a days real time updates are common in most popular sites which have heavy usages. </p>\n\n<ul>\n<li><a href=\"http://stackexchange.com/questions?tab=realtime\">StackExchange</a> </li>\n<li>Facebook </li>\n<li>Twitter</li>\n</ul>\n\n<p>I'm wondering how do these \"real time updates\" work? I'm just looking for a general bird's view perspective. I suspect that the JS can't be calling the server every X seconds for an update and then appending that to the <code>&lt;ul&gt;</code>. Is a notification sent from the server went to pull more content? </p>\n\n<p>Would be great if there is a simple how to article that explains this with a demo?</p>\n",
            "last_activity_date": 1389638112,
            "question_id": 10808924,
            "score": 24,
            "tags": [
                "javascript",
                "real-time",
                "stackexchange"
            ],
            "title": "How do real time updates work?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<ul>\n<li><a href=\"http://blooberry.com\">blooberry.com</a></li>\n<li>MSDN (<a href=\"http://msdn.microsoft.com/en-us/library/aa737439.aspx\">HTML &amp; CSS section</a>)</li>\n<li><a href=\"http://www.w3.org/TR/html401/\">HTML 4.01 Reference</a></li>\n<li><a href=\"http://whatwg.org/html5\">WHATWG's HTML 5 Reference</a></li>\n</ul>\n\n<p><a href=\"http://w3fools.com/\">W3Fools - A W3Schools Intervention</a> also promotes the following \"more reputable sources\":</p>\n\n<blockquote>\n  <p><a href=\"http://dev.opera.com/articles/view/1-introduction-to-the-web-standards-cur/#toc\">Opera Web Standards Curriculum</a> covers the basics of web standards-based design in HTML and CSS.<br>\n  <a href=\"http://code.google.com/edu/submissions/html-css-javascript/\">Google's HTML, CSS, and Javascript from the Ground Up</a> presents the basics of web development with video tutorials presented by Google's expert web developers.<br>\n  <a href=\"http://reference.sitepoint.com/\">SitePoint</a> is a pretty good reference for HTML, CSS and JavaScript. Their documentation always mentions feature support across different browsers, and describes known browser bugs.<br>\n  The W3C, itself, has a wiki-based general <a href=\"http://www.w3.org/html/wiki/Learn\">Learn</a> page as well as an <a href=\"http://www.w3.org/html/wiki/Elements\">HTML element reference</a>.<br>\n  <a href=\"https://developer.mozilla.org/en-US/docs\">The MDN (Mozilla's Developer Network)</a> takes over at intermediate CSS and covers JavaScript better than anyone.<br>\n  The MDN is also a wiki (little known fact), which means we, as knowledgeable web developers, can add or change information so the pages are as effective and comprehensive as possible.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>The <strong>very best</strong> HTML reference is the HTML spec itself:</p>\n\n<ul>\n<li><a href=\"http://www.w3.org/TR/html401/\" rel=\"nofollow\">HTML4 spec</a></li>\n<li><a href=\"http://dev.w3.org/html5/spec/spec.html\" rel=\"nofollow\">HTML5 spec</a></li>\n</ul>\n\n<p>It provides examples of how elements/attributes can be used, and the expected reactions in many case situations.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The first place you should probably send somebody for reference would be the most official body of reference for the subject.  For example, if somebody was asking about a particular HTML tag or something about the HTML spec, their first stop should be <a href=\"http://www.w3.org/TR/html401/\" rel=\"nofollow\">that spec</a> (as an example, and there are lots of page anchors throughout that spec to navigate directly to what the user needs).</p>\n\n<p>Examples can often be quickly found via Google.  If the Google results are clearly plentiful and seem pretty good, then just linking the user to the Google search itself would work fine.  (And may subtly nudge them to use Google a little more thoroughly, though keep in mind that SO generally doesn't want its answers to just be \"just Google it\" so use tact and offer additional information beyond just the search.)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In general, my first stop for HTML, Javascript or DOM information is the <a href=\"https://developer.mozilla.org/en-US/docs\">MDC Doc Center</a> from the Mozilla Developer Network.  It is occasionally Firefox/Gecko-specific, but is in general a good first stop.</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/HTML/\">HTML doc center</a></li>\n<li><a href=\"https://developer.mozilla.org/en/Javascript\">Javascript doc center</a></li>\n<li><a href=\"https://developer.mozilla.org/en/DOM\">DOM doc center</a></li>\n</ul>\n\n<p>Personally, I find the HTML spec (and even more the DOM spec) far to hard to take in quickly or to use as a quick reference. MDC is great for that.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I love this one:</p>\n\n<p><a href=\"http://dev.opera.com/articles/view/12-the-basics-of-html/\" rel=\"nofollow\">I love the opera tutorial.</a> (From there onwards).</p>\n\n<p>Concise but complete and very clearly explained! </p>\n\n<p><a href=\"http://dev.opera.com/articles/view/1-introduction-to-the-web-standards-cur/#toc\" rel=\"nofollow\">See the table of contents here.</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are too many good references out there, but these are my two cents. Hope it helps:</p>\n\n<ul>\n<li><p>Great tricks, references and\nexamples:\n<a href=\"http://www.quirksmode.org/sitemap.html\" rel=\"nofollow\">http://www.quirksmode.org/sitemap.html</a></p></li>\n<li><p>Nice step by step:\n<a href=\"http://nearlythere.com/mite03/css-tutorial/\" rel=\"nofollow\">http://nearlythere.com/mite03/css-tutorial/</a></p></li>\n<li><p>Cheat sheets (pretty cool!!):\n<a href=\"http://sixrevisions.com/resources/cheat_sheets_web_developer/\" rel=\"nofollow\">http://sixrevisions.com/resources/cheat_sheets_web_developer/</a></p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is the W3C's <a href=\"http://www.w3.org/community/webed/wiki/\" rel=\"nofollow\">Web Education Community Group Wiki</a>, on standards that are maintained by them. It provides quite some useful information on e.g. HTML and CSS, and they link to appropriate standards.</p>\n\n<p>See for example <a href=\"http://www.w3.org/community/webed/wiki/HTML/Elements/textarea\" rel=\"nofollow\">this page on the <code>textarea</code> element</a></p>\n\n<p><strong>EDIT:</strong> I just realize this was already mentioned as 'general Learn page' from the W3Fools page, but it might still be useful to name this reference.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Sites like Microsoft's MSDN and Mozilla's MDN are not bad, as long as you remember that they view the world through coloured glasses. The only real reference is, of course, the W3C.<br>\nWhenever some site's information clashes with the information on the W3C's site, the W3C is always right.</p>\n\n<p>Keep that in mind and you can safely peruse other websites, even W3Schools. W3Schools is not better or worse than other non-official websites.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>From my time on SO I've found w3schools may not be the best place to send people as an html/web programming reference.  I started using them a loooong time ago and have been sending people there for years because of their usage of programming categories and tutorials.  </p>\n\n<p>I know I can go there and easily find out what different tags are available for use(though it may not be correct) and I can find out attributes to tags easily.  Are there any alternatives that can provide the same simple reference and tutorials as they do?  Where should I refer people too?</p>\n",
            "last_activity_date": 1341006575,
            "question_id": 4662304,
            "score": 22,
            "tags": [
                "javascript",
                "html",
                "css",
                "reference"
            ],
            "title": "Online HTML/CSS/Javascript learning reference alternative to w3schools?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>First you need to learn how to install a function that extends Raphael to support zooming...\n<a href=\"http://www.irunmywebsite.com/raphael/additionalhelp.html?q=addownmethodstocanvas\" rel=\"nofollow\">http://www.irunmywebsite.com/raphael/additionalhelp.html?q=addownmethodstocanvas</a></p>\n\n<p>Next you want to implement Wout's zooming plugin...\n<a href=\"http://github.com/wout/raphael-zoom\" rel=\"nofollow\">http://github.com/wout/raphael-zoom</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can try the scripts from IE9 test page <a href=\"http://ie.microsoft.com/testdrive/Graphics/42OrganizationChart/Default.xhtml\" rel=\"nofollow\">http://ie.microsoft.com/testdrive/Graphics/42OrganizationChart/Default.xhtml</a> Requires a little tweaking with ids but worked fine for me.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Raphael is good, but not good enough. </p>\n\n<p>Check out this page: <a href=\"http://code.google.com/p/svgpan/\">http://code.google.com/p/svgpan/</a>. It does exactly what you asked for.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>I've derived Andrea's SVGPan into a (hopefully) more friendly <a href=\"https://github.com/andrewseddon/raphael-zpd\">Raph\u00e4el plugin</a> :)</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>If someone is still interested: I just found this implementation of Pan and Zoom for Raphael. Still a very young project, but interesting enough I think:</p>\n\n<p><a href=\"https://github.com/escobar5/raphael-pan-zoom\">https://github.com/escobar5/raphael-pan-zoom</a></p>\n\n<p>Online demo here:\n<a href=\"http://htmlpreview.github.com/?https://raw.github.com/escobar5/raphael-pan-zoom/master/examples/complete-map/index.html\">http://htmlpreview.github.com/?https://raw.github.com/escobar5/raphael-pan-zoom/master/examples/complete-map/index.html</a></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I ended up using the <a href=\"https://github.com/ariutta/svg-pan-zoom\" rel=\"nofollow\">svg-pan-zoom</a> which is derived from SVGPan, but allows zoomin/panning of an arbitrary <code>svg</code> element within your HTML, and can add controls. </p>\n\n<p>SVGPan works great if your complete page is just a loaded SVG (like the tiger example), but not if your svg is somewhere deeper in the html. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am in need of a small script that will display an SVG (vector image) within a frame that has 2 functions;</p>\n\n<ol>\n<li><p>The image can be panned (moved around to look at different parts of\nthe svg image with the cursor) simmilar to google maps.</p></li>\n<li><p>The SVG image can be zoomed in and out on also simmilar to google\nmaps except there will be no need to load new imagery as the image\nis a vector.</p></li>\n</ol>\n\n<p>For a simmilar script i have seen that works with normal image formats see <a href=\"http://jibbering.com/routeplanner/\">http://jibbering.com/routeplanner/</a></p>\n",
            "last_activity_date": 1407508318,
            "question_id": 2339374,
            "score": 22,
            "tags": [
                "javascript",
                "svg",
                "raphael"
            ],
            "title": "Zooming and panning svg images using raphael.js or some other js library"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This is a great question because it shows how the Meteor security model works.</p>\n\n<p>There's no security issue here because Meteor <em>never</em> trusts the client code.</p>\n\n<p>In Meteor, only the server decides what data each client has access to (see <a href=\"http://docs.meteor.com/#meteor_publish\">Meteor.publish</a>) and what data each client is allowed to change (see <a href=\"http://docs.meteor.com/#allow\">Meteor.allow</a>).  When a client authenticates to the server, the server stores the user's ID.  Until that client logs out, it provides that ID to your <code>Meteor.publish</code> and <code>Meteor.allow</code> functions on the server as <code>userId</code>.</p>\n\n<p>Meteor also sends the user ID down on the client, because of course you want to change how the client behaves and what's on the screen based on who is logged in.  And as you say, we can't stop a rogue client from arbitrarily changing any of its JavaScript code to change what it thinks the user ID is!  But doing that doesn't give the client any new permissions, because it's still only the server code that makes the security decisions.</p>\n\n<p>You can try this out using the secure parties application:</p>\n\n<ol>\n<li>Make a parties app with <code>$ meteor create --example parties</code></li>\n<li>Create a user account and double click on the map to create a party.  Check the box to make it a private party.</li>\n<li>Open the JavaScript console and type <code>Meteor.userId()</code> to get your user`s ID.</li>\n<li>Log out.  The party will disappear from the screen because the server won't publish it to any other user.</li>\n<li>Now, go into the console and overwrite <code>Meteor.userId()</code> with a new function that returns the ID you want.</li>\n</ol>\n\n<p>So now you've faked the client to think that it's your user.  But the server knows better.  There still won't be a party on the screen, and you can't update the Parties collection to change that party information.</p>\n\n<p>In fact, it's completely safe to set the client user ID to anything you want!  You can reach right into the accounts system and call <code>Meteor.default_connection.setUserId(\"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\");</code>.  Try it, and you'll see that the login button in the upper right corner turns into an animation.  That's because the client is calling <code>Meteor.user()</code> to show the email address of the logged in user you just set.  But because you haven't logged into the server as that user, it's not publishing any information about that user and you just get the spinny.</p>\n\n<p><strong>This is a very strong security model.</strong>  You don't have to worry about any of the client code, even though in most apps that's where most of the code lives!  As long as you write secure server methods, publish functions, and allow/deny rules, you're completely locked down no matter what the client tries to do.</p>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>I just tested Meteor using two browsers and copied the local storage <code>Meteor.userId</code> and <code>Meteor.loginToken</code> between each browser and they both logged me in as the same person. When I logged out of one I was still able to publish in the other.</p>\n\n<p>I do not think this is as secure as is being made out.</p>\n\n<p>If I can copy these values and still be seen as same user, even when I am using a different browser, then it is not secure at all.</p>\n\n<hr>\n\n<p>Update</p>\n\n<p>Upon reflection...</p>\n\n<p>I suppose it would be possible to log the <a href=\"http://en.wikipedia.org/wiki/IP_address\" rel=\"nofollow\">IP address</a> of the user when they login. Then if a user tries to access and the IP address is not the same you could ask them to log in again.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Playing around with Meteor, I have found that even with the insecure package removed, the client can change the Meteor.userId function. For example,</p>\n\n<pre><code>Meteor.userId=function() {return \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\"}\n</code></pre>\n\n<p>as can be done with <code>Meteor.default_connection.userId()</code> (the redirected function). How do I secure this?</p>\n",
            "last_activity_date": 1392726901,
            "question_id": 13331836,
            "score": 19,
            "tags": [
                "javascript",
                "security",
                "meteor"
            ],
            "title": "Meteor.userId is changeable"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>A JavaScript REPL: <a href=\"http://tech.einaregilsson.com/repl.html\">http://tech.einaregilsson.com/repl.html</a></p>\n\n<p>A PHP REPL developed at Facebook: <a href=\"http://www.phpsh.org/\">http://www.phpsh.org/</a></p>\n\n<p>A Python REPL: <a href=\"http://www.trypython.org/\">http://www.trypython.org/</a></p>\n\n<p>A Ruby REPL: <a href=\"http://tryruby.org/\">http://tryruby.org/</a></p>\n\n<p>A Haskell REPL: <a href=\"http://tryhaskell.org/\">http://tryhaskell.org/</a></p>\n\n<p>An R REPL: <a href=\"http://rstudio.org/\">http://rstudio.org/</a></p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<h1>repl.it</h1>\n\n<p>Have you tried <a href=\"http://repl.it\">http://repl.it</a>? It supports Ruby, Python, Lua, Scheme, JavaScript, Javascript.next, CoffeeScript, QBasic, Forth, Move and Kaffeine.</p>\n\n<p>It also supports these esoteric languages: Emoticon, Brainfuck, LOLCODE, Unlambda and Bloop</p>\n\n<h2>From their FAQ:</h2>\n\n<h3>What is repl.it?</h3>\n\n<p>It is an online environment for interactively exploring programming languages. The name comes from the read-eval-print loop, the interactive toplevel used by languages like Lisp and Python.</p>\n\n<h3>Is repl.it open source?</h3>\n\n<p>Yes! You can explore the code and contribute to various parts of repl.it through our GitHub repositories.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>also check out:</p>\n\n<ul>\n<li><a href=\"http://ideone.com/\" rel=\"nofollow\" title=\"Ideone.com\">Ideone</a> for languages which need to be compiled like C++/Java</li>\n<li>and a neat all-in-one web development editor <a href=\"http://jsfiddle.net/\" rel=\"nofollow\" title=\"JSFiddle\">JSFiddle</a></li>\n<li>and also <a href=\"http://codepad.org/\" rel=\"nofollow\" title=\"Codepad\">Codepad</a></li>\n</ul>\n\n<p>not to mention pastebin-like places:</p>\n\n<ul>\n<li><a href=\"http://pastebin.com\" rel=\"nofollow\" title=\"PasteBin\">Pastebin</a></li>\n<li><a href=\"http://gist.github.com\" rel=\"nofollow\" title=\"GitHub Gist\">Gist@GitHub</a></li>\n<li><a href=\"http://hastebin.com\" rel=\"nofollow\" title=\"Hastebin\">Hastebin</a></li>\n<li><a href=\"http://codr.cc\" rel=\"nofollow\" title=\"Code live\">Codr.cc - Code live!</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>A real good initiative that deserves acclaim..(for <strong>PHP</strong> only).</p>\n\n<p><a href=\"http://codepad.viper-7.com/\" rel=\"nofollow\">http://codepad.viper-7.com/</a> </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've developed a C# REPL (open Source) which at the moment is an desktop app but not that hard to convert into a Web version: <a href=\"http://diniscruz.blogspot.co.uk/p/c-repl-script-environment.html\" rel=\"nofollow\">http://diniscruz.blogspot.co.uk/p/c-repl-script-environment.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yet another REPL for PHP - Boris (<a href=\"https://github.com/d11wtq/boris\" rel=\"nofollow\">https://github.com/d11wtq/boris</a>)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>A simple, online repl for PHP: <a href=\"http://phpepl.cloudcontrolled.com/\" rel=\"nofollow\">http://phpepl.cloudcontrolled.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>if you do by yourself, you can start from something like this:</p>\n\n<pre><code>&lt;?php while(1) echo eval(file_get_contents(\"php://stdin\", \"r\")); ?&gt;\n</code></pre>\n\n<ol>\n<li><p>write the code above in a file (eg. repl.php)</p></li>\n<li><p>execute the file with php at command prompt: php repl.php</p></li>\n<li><p>you will have a PHP \"bash\"</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm looking to find a REPL system that can be executed on a web page and that the server can react to. Is there anything out there (I'd assume it would have to be using Javascript/AJAX)? If there's a PHP implementation, it would be even more awesome, but for now I'm just looking for some kind of an implementation.</p>\n",
            "last_activity_date": 1375151144,
            "question_id": 5918670,
            "score": 19,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "ajax",
                "read-eval-print-loop"
            ],
            "title": "REPL Environment for the Web"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I'm sure you can.</p>\n\n<p>You have two options:</p>\n\n<p>You can modify the CSS of the grid.\nThis is useful if have to make small modification on the design.\nThe major modifications shouldn't be done this way because the JQGrid's CSS classes are really dependent on each other.</p>\n\n<p>Or you can remove all the styling from the HTML and replace it with your own.</p>\n\n<p>For instance you have a JQGrid like:</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;table id=\"list2\" class=\"scroll\" cellpadding=\"0\" cellspacing=\"0\"&gt;&lt;/table&gt; \n&lt;div id=\"pager2\" class=\"scroll\" style=\"text-align:center;\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p><strong>jQuery</strong></p>\n\n<pre><code>jQuery(\"#list2\").jqGrid({ url:'server.php?q=2', \n datatype: \"json\", \n colNames:['Inv No','Date'],\n colModel:[ {name:'id',index:'id', width:55},{name:'invdate',index:'invdate',width:90}],\n rowNum:10, \n rowList:[10,20,30],\n pager: jQuery('#pager2'), \n sortname: 'id', \n viewrecords: true, \n caption:\"JSON Example\" }).navGrid('#pager2',{edit:false,add:false,del:false}); \n</code></pre>\n\n<p>This will generate HTML like below:</p>\n\n<pre><code>&lt;div class=\"ui-jqgrid-titlebar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix\"&gt;\n\n..\n\n&lt;/div&gt;\n</code></pre>\n\n<p>Remove all the CSS classes:</p>\n\n<pre><code>JQuery(\"#list2\").removeClass(\".ui-jqgrid-titlebar\");\n</code></pre>\n\n<p>etc.</p>\n\n<p>After you created your own classes you can add to the HTML structure with:</p>\n\n<pre><code>JQuery(\"#list2\").addClass(\".YourClass\");\n</code></pre>\n\n<p>I suggest to use both techniques.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One of the big features of jqGrid 3.5 is integration with jQuery UI Themes. You can build and/or select a theme from <a href=\"http://jqueryui.com/themeroller/\">here</a>. Then just add a reference to it in your page:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"../css/redmond/jquery-ui-1.7.2.custom.css\"/&gt;\n</code></pre>\n\n<p>This will get you a grid that looks very good, with a minimum of effort. </p>\n\n<p>Does that solve your problem or do you need to overhaul the grid look-and-feel even more?</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>To elaborate on what Justin Ethier says...</p>\n\n<p>Since jqGrid uses Jquery-UI themes, the best way to change the appearance of the grid would be to make a custom <a href=\"http://jqueryui.com/themeroller/\" rel=\"nofollow\">theme</a>.</p>\n\n<p>I would strongly recommend that you see if that works for you before attempt to modify the css after the fact... although you can do that as well, if the jquery-ui theme look is too confining for you.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You would need to change the grid header (on-the-fly).</p>\n\n<p>This is my code</p>\n\n<p><strong>The HTML:</strong></p>\n\n<pre><code>&lt;table id=\"jqgrid_ctrs\" class=\"scroll\" cellpadding=\"0\" cellspacing=\"0\"&gt;&lt;/table&gt;\n&lt;div id=\"jqgrid_ctrs_pager\" class=\"scroll\" style=\"text-align:center;\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p><strong>The jqGrid:</strong></p>\n\n<pre><code>    jQuery(\"#jqgrid_ctrs\").jqGrid({\n        url:'php-modules/controllers_data.php?ctrtype=LED',\n        datatype: \"json\",\n        width:500,\n        height:\"auto\",\n        colNames:['CtrName','Type', 'Description', 'Location'],\n        colModel:[\n           {name:'CtrName',index:'CTRNAME', width:70, editable:false},\n           {name:'Type',index:'CTRTYPE', width:70, editable:false},\n           {name:'Description',index:'CTRDESCR', width:250, editable:false},\n           {name:'Location',index:'CTRLOCATION', width:70, editable:false}\n        ],\n        rowNum:10,\n        rowList:[10,20,30],\n        pager: jQuery('#jqgrid_ctrs_pager'),\n        sortname: 'CtrName',\n        viewrecords: true,\n        sortorder: 'desc',\n        caption:'System Controllers',\n\n    }).navGrid('#jqgrid_ctrs_pager',\n                {search:true,edit:false,add:false,del:false}\n              );\n</code></pre>\n\n<p>In order to understand which object I have to work in, let's inspect the HTML code generated by the JavaScript code:</p>\n\n<pre><code>&lt;div id=\"gview_jqgrid_ctrs\" class=\"ui-jqgrid-view\" style=\"width: 760px;\"&gt;\n    &lt;div class=\"ui-jqgrid-titlebar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix\"&gt;&lt;/div&gt;\n    &lt;div class=\"ui-state-default ui-jqgrid-hdiv\" style=\"width: 760px;\"&gt;\n</code></pre>\n\n<p>...</p>\n\n<p>Now, the only div with an ID specified is the &lt;div id=\"gview_jqgrid_ctrs\"...</p>\n\n<p>That's why the following DOESN'T WORK.</p>\n\n<pre><code>jQuery(\"#jqgrid_ctrs\").removeClass('.ui-widget-header');\njQuery(\"#jqgrid_ctrs\").addClass('.jqgrid-header');\n</code></pre>\n\n<p>I had to select the parent div and \"search into\" the header div, having the \"ui-jqgrid-titlebar\" class specified. Then I removed the original \"ui-widget-header\" class and replace with my own class.</p>\n\n<pre><code>$(\"#gview_jqgrid_ctrs .ui-jqgrid-titlebar\").removeClass('ui-widget-header');\n$(\"#gview_jqgrid_ctrs .ui-jqgrid-titlebar\").addClass('jqgrid-header');\n</code></pre>\n\n<p>Where .jqgrid-header is a style defined in this way.</p>\n\n<pre><code>.jqgrid-header { \n    background:#FF9C00 url(images/new_header_bck.png) repeat-x scroll 50% 50%;\n    border:1px solid #4297D7;\n    color:#FF0000;\n    font-weight:bold;\n  }\n</code></pre>\n\n<p>I've tested this and works. Hope this will be useful...</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<pre><code>/* Remove jquery-ui styles from jqgrid */\nfunction removeJqgridUiStyles(){\n    $(\".ui-jqgrid\").removeClass(\"ui-widget ui-widget-content\");\n    $(\".ui-jqgrid-view\").children().removeClass(\"ui-widget-header ui-state-default\");\n    $(\".ui-jqgrid-labels, .ui-search-toolbar\").children().removeClass(\"ui-state-default ui-th-column ui-th-ltr\");\n    $(\".ui-jqgrid-pager\").removeClass(\"ui-state-default\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can remove all ui-grid classes:</p>\n\n<pre><code>$(\"[class^='ui-jqgrid']\").removeAttr('class');\n</code></pre>\n\n<p>This may have performance issues if your grid size is big.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am using <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=start\">jqGrid</a> 3.5. Can I change the style and look of the grid and make it more beautiful using jQuery or custom CSS or something else?</p>\n",
            "last_activity_date": 1388591755,
            "question_id": 1415439,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "jqgrid"
            ],
            "title": "Change style of jqGrid"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>It's worthwhile combining the files at run time to avoid having to synchronise new versions. However, once they are programmatically combined, cache them to disk. Then the code which runs each time the files are fetched need only check that the files haven't changed before serving the cached version.</p>\n\n<p>If they have changed, then the compression code can run as a one-off.\nWhilst there will be a slight performance cost, you will also receive a performance benefit from fewer file requests.</p>\n\n<p>This is the approach that the <a href=\"http://code.google.com/p/minify/\" rel=\"nofollow\">Minify</a> tool uses to compress JS/CSS, which has worked really well for me. It's Linux/PHP only, but you might get some more ideas there too.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>We have done something similar with several ASP.NET web applications.  Specifically, we use the <a href=\"http://developer.yahoo.com/yui/compressor/\">Yahoo Yui compressor</a>, which has a .NET library version which you can reference in your applications.</p>\n\n<p>The approach we took was to generate the necessary merged/minified files at runtime.  We wrapped all this logic up into an ASP.NET control, but that isn't necessary depending on your project.</p>\n\n<ul>\n<li>The first time a request is made for a page, we process through the list of included JS and CSS files.  In a separate thread (so the original request returns without delay) we then merged the included files together (1 for JS, 1 for CSS), and then apply the Yui compressor.  </li>\n<li>The result is then written to disk for fast reference in the future</li>\n<li>On subsequent requests, the page first looks for the minified versions.  If found, it just serves those up.  If not, it goes through the process again.</li>\n</ul>\n\n<p>As some icing to the cake:</p>\n\n<ul>\n<li>For debug purposes, if the query string ?debug=true is present, the merged/minified resources are ignored and the original individual files are served instead (since it can be hard to debug optimized JS)</li>\n</ul>\n\n<p>We have found this process to work exceptionally well.  We built it into a library so all our ASP.NET sites can take advantage.  The post-build scripts can get complicated if each page has different dependencies, but the run-time can determine this quite easily.  And, if someone needs to make a quick fix to a CSS file, they can do so, delete the merged versions of the file, and the process will automatically start over without need to do post-build processing with MSBuild or NAnt.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>I did a really nice solution to this a couple of years back but I don't have the source left. The solution was for webforms but it should work fine to port it to MVC. I'll give it a try to explain what I did in some simple step. First we need to register the scripts and we wrote a special controller that did just that. When the controller was rendered it did three things:</p>\n\n<ol>\n<li>Minimize all the files, I think we used the YUI compression</li>\n<li>Combine all the files and store as string</li>\n<li>Calculate a hash for the string of the combined files and use that as a virtual filename. You store the string of combined files in a cached dictionary on the server with the hash value as key, the html that is rendered needs to point to a special folder where the \"scripts\" are located.</li>\n</ol>\n\n<p>The next step is to implement a special HttpHandler that handles request for files in the special folder. When a request is made to that special folder you make a lookup in the cached dictionary and returns the string bascially.</p>\n\n<p>One really nice feature of this is that the returned script is always valid so the user will never have to ask you for an update of the script. The reason for that is when you make a change to any of the script files the hash value will change and the client will ask for a new script.</p>\n\n<p>You can use this for css-files as well with no problems. I remebered making it configurable so you could turn off combine files, minimize files, or just exclude one file from the process if you wanted to do some debugging.</p>\n\n<p>I might have missed some details, but it wasn't that hard to implement and it turned out very well.</p>\n\n<p><strong>Update:</strong> I've implemented a solution for MVC and released it on <a href=\"http://nuget.org/List/Packages/SimpleCompression\" rel=\"nofollow\">nuget</a> and have the source up on <a href=\"https://github.com/mastoj/SimpleCompression\" rel=\"nofollow\">github</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>have you heard of Combres ?\ngo to : <a href=\"http://combres.codeplex.com\" rel=\"nofollow\">http://combres.codeplex.com</a> and check it out</p>\n\n<p>it minifies your CSS and JS files at Runtime meaning you can change any file and upload it and each request the client does it minifies it.\nall you gotta do is add the files u wanna compress to a list in the combres XML file and just call the list from your page / masterpage.</p>\n\n<p>if you are using VS2010 you can easily install it on your project using NuGet\nhere's the Combres NuGet link: <a href=\"http://combres.codeplex.com/wikipage?title=5-Minute%20Quick%20Start\" rel=\"nofollow\">http://combres.codeplex.com/wikipage?title=5-Minute%20Quick%20Start</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://ajaxmin.codeplex.com/\" rel=\"nofollow\">Microsoft\u2019s Ajax minifier</a> is suprisingly good as a minification tool.  I wrote a blog post on combining files and using their minifier in a javascript and stylesheet handler:</p>\n\n<p><a href=\"http://www.markistaylor.com/javascript-concatenating-and-minifying/\" rel=\"nofollow\">http://www.markistaylor.com/javascript-concatenating-and-minifying/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://www.RequestReduce.com\">RequestReduce</a> provides a really nice solution for combining and minifying javascript and css at run time. It will also attempt to sprite your background images. It caches the processed files and serves them using custom ETags and far future headers. <a href=\"http://www.RequestReduce.com\">RequestReduce</a> uses a response filter to transform the content so no code or configuration is needed for basic functionality. It can be configured to work in a web farm environment and sync content accross several servers and can be configured to point to a CDN. It can be downloaded at <a href=\"http://www.RequestReduce.com\">http://www.RequestReduce.com</a> or from Visual Studio via Nuget. The source is available at <a href=\"https://github.com/mwrock/RequestReduce\">https://github.com/mwrock/RequestReduce</a>.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I needed a solution for combining/minifying CSS/JS on a .NET 2.0 web app and SquishIt and other tools I found weren't .NET 2.0-compatible, I created my own solution that uses a syntax similar to SquishIt but is compatible with .NET 2.0. Since I thought other people might find it useful I put it up on Github. You can find it here: <a href=\"https://github.com/AlliterativeAlice/simpleyui\" rel=\"nofollow\">https://github.com/AlliterativeAlice/simpleyui</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am looking at implementing some performance optimization around my javascript/css. In particular looking to achieve the minification and combining of such. I am developing in .net/c# web applications.</p>\n\n<p>I have a couple of options and looking for feedback on each:</p>\n\n<p>First one is this clever tool I came across Chirpy which via visual studio combines, minifies etc -> <a href=\"http://chirpy.codeplex.com/\">http://chirpy.codeplex.com/</a> This is a visual studio add in but as I am in a team environment, this tool isnt ideal.</p>\n\n<p>My next option is to use an Msbuild task (http://yuicompressor.codeplex.com/) to minify the files and also combine them (maybe read from an xml file what needs to be combined). While this works for minifying fine, the concern I have is that I will have to maintain what must be combined which could be a headache.</p>\n\n<p>3rd option is to use msbuild task just for the minifying and at runtime using some helper classes, combine the files on a per page basis. This would combine the files, give it a name and add a version to it.</p>\n\n<p>Any other options I could consider? My concern with the last option is that it may have performance issues as I would have to open the file from the local drive, read its contents and then combine the files. This is alot of processing at run time. I was looking at something like Squishit - <a href=\"https://github.com/jetheredge/SquishIt/downloads\">https://github.com/jetheredge/SquishIt/downloads</a> This minifies the files at run time but I would look at doing this at compile time.</p>\n\n<p>So any feedback on my approaches would be great? If the 3rd option would not cause performance issues, I am leading towards it. </p>\n",
            "last_activity_date": 1386018135,
            "question_id": 4338570,
            "score": 17,
            "tags": [
                "c#",
                "javascript",
                "css",
                "minify"
            ],
            "title": "Minifying and combining files in .net"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If I understood your question here is the solution. </p>\n\n<pre><code>    $.ajaxSetup({ cache: true});\n</code></pre>\n\n<p>and for specific calls</p>\n\n<pre><code> $.ajax({\n        url: ...,\n        type: \"GET\",\n        cache: false,           \n        ...\n    });\n</code></pre>\n\n<p>If you want opposite (cashe for specific calls) you can set false at the begining and true for specific calls</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>cache:true</code> only works with GET and HEAD request.</p>\n\n<p>You could roll your own solution as you said with something along these lines :</p>\n\n<pre><code>var localCache = {\n    data: {},\n    remove: function (url) {\n        delete localCache.data[url];\n    },\n    exist: function (url) {\n        return localCache.data.hasOwnProperty(url) &amp;&amp; localCache.data[url] !== null;\n    },\n    get: function (url) {\n        console.log('Getting in cache for url' + url);\n        return localCache.data[url];\n    },\n    set: function (url, cachedData, callback) {\n        localCache.remove(url);\n        localCache.data[url] = cachedData;\n        if ($.isFunction(callback)) callback(cachedData);\n    }\n};\n\n$(function () {\n    var url = '/echo/jsonp/';\n    $('#ajaxButton').click(function (e) {\n        $.ajax({\n            url: url,\n            data: {\n                test: 'value'\n            },\n            cache: true,\n            beforeSend: function () {\n                if (localCache.exist(url)) {\n                    doSomething(localCache.get(url));\n                    return false;\n                }\n                return true;\n            },\n            complete: function (jqXHR, textStatus) {\n                localCache.set(url, jqXHR, doSomething);\n            }\n        });\n    });\n});\n\nfunction doSomething(data) {\n    console.log(data);\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/techunter/c6Kha/\">Working fiddle here</a></p>\n\n<p>EDIT: as this post becomes popular, here is an even better answer for those who want to manage timeout cache and you also don't have to bother with all the mess in the <a href=\"https://api.jquery.com/jQuery.ajax/\">$.ajax()</a> as I use <a href=\"https://api.jquery.com/jQuery.ajaxPrefilter/\">$.ajaxPrefilter()</a>. Now just setting <code>{cache: true}</code> is enough to handle the cache correctly :</p>\n\n<pre><code>var localCache = {\n    /**\n     * timeout for cache in millis\n     * @type {number}\n     */\n    timeout: 30000,\n    /** \n     * @type {{_: number, data: {}}}\n     **/\n    data: {},\n    remove: function (url) {\n        delete localCache.data[url];\n    },\n    exist: function (url) {\n        return !!localCache.data[url] &amp;&amp; ((new Date().getTime() - localCache.data[url]._) &lt; localCache.timeout);\n    },\n    get: function (url) {\n        console.log('Getting in cache for url' + url);\n        return localCache.data[url].data;\n    },\n    set: function (url, cachedData, callback) {\n        localCache.remove(url);\n        localCache.data[url] = {\n            _: new Date().getTime(),\n            data: cachedData\n        };\n        if ($.isFunction(callback)) callback(cachedData);\n    }\n};\n\n$.ajaxPrefilter(function (options, originalOptions, jqXHR) {\n    if (options.cache) {\n        var complete = originalOptions.complete || $.noop,\n            url = originalOptions.url;\n        //remove jQuery cache as we have our own localCache\n        options.cache = false;\n        options.beforeSend = function () {\n            if (localCache.exist(url)) {\n                complete(localCache.get(url));\n                return false;\n            }\n            return true;\n        };\n        options.complete = function (data, textStatus) {\n            localCache.set(url, data, complete);\n        };\n    }\n});\n\n$(function () {\n    var url = '/echo/jsonp/';\n    $('#ajaxButton').click(function (e) {\n        $.ajax({\n            url: url,\n            data: {\n                test: 'value'\n            },\n            cache: true,\n            complete: doSomething\n        });\n    });\n});\n\nfunction doSomething(data) {\n    console.log(data);\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/techunter/5n2tk/\">And the fiddle here</a> <strong>CAREFUL, not working with $.Deferred</strong></p>\n\n<p>Here is a working but flawed implementation working with deferred:</p>\n\n<pre><code>var localCache = {\n    /**\n     * timeout for cache in millis\n     * @type {number}\n     */\n    timeout: 30000,\n    /** \n     * @type {{_: number, data: {}}}\n     **/\n    data: {},\n    remove: function (url) {\n        delete localCache.data[url];\n    },\n    exist: function (url) {\n        return !!localCache.data[url] &amp;&amp; ((new Date().getTime() - localCache.data[url]._) &lt; localCache.timeout);\n    },\n    get: function (url) {\n        console.log('Getting in cache for url' + url);\n        return localCache.data[url].data;\n    },\n    set: function (url, cachedData, callback) {\n        localCache.remove(url);\n        localCache.data[url] = {\n            _: new Date().getTime(),\n            data: cachedData\n        };\n        if ($.isFunction(callback)) callback(cachedData);\n    }\n};\n\n$.ajaxPrefilter(function (options, originalOptions, jqXHR) {\n    if (options.cache) {\n        //Here is our identifier for the cache. Maybe have a better, safer ID (it depends on the object string representation here) ?\n        // on $.ajax call we could also set an ID in originalOptions\n        var id = originalOptions.url+ JSON.stringify(originalOptions.data);\n        options.cache = false;\n        options.beforeSend = function () {\n            if (!localCache.exist(id)) {\n                jqXHR.promise().done(function (data, textStatus) {\n                    localCache.set(id, data);\n                });\n            }\n            return true;\n        };\n\n    }\n});\n\n$.ajaxTransport(\"+*\", function (options, originalOptions, jqXHR, headers, completeCallback) {\n\n    //same here, careful because options.url has already been through jQuery processing\n    var id = originalOptions.url+ JSON.stringify(originalOptions.data);\n\n    options.cache = false;\n\n    if (localCache.exist(id)) {\n        return {\n            send: function (headers, completeCallback) {\n                completeCallback(200, \"OK\", localCache.get(id));\n            },\n            abort: function () {\n                /* abort code, nothing needed here I guess... */\n            }\n        };\n    }\n});\n\n$(function () {\n    var url = '/echo/jsonp/';\n    $('#ajaxButton').click(function (e) {\n        $.ajax({\n            url: url,\n            data: {\n                test: 'value'\n            },\n            cache: true\n        }).done(function (data, status, jq) {\n            console.debug({\n                data: data,\n                status: status,\n                jqXHR: jq\n            });\n        });\n    });\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/4YwX4/\">Fiddle HERE</a>\nSome issues, our cache ID is dependent of the json2 lib JSON object representation.</p>\n\n<p>Use Console view (F12) or FireBug to view some logs generated by the cache.</p>\n",
                    "is_accepted": true,
                    "score": 38
                }
            ],
            "body": "<p>I would like to enable caching of an ajax response in javascript/browser.</p>\n\n<p>From the <a href=\"http://api.jquery.com/jQuery.ajax/?rdfrom=http://docs.jquery.com/mw/index.php?title=Ajax/jQuery.ajax&amp;redirect=no#options\">jquery.ajax docs</a>:</p>\n\n<blockquote>\n  <p>By default, requests are always issued, but the browser may serve\n  results out of its cache. To disallow use of the cached results, set\n  cache to false. To cause the request to report failure if the asset\n  has not been modified since the last request, set ifModified to true.</p>\n</blockquote>\n\n<p>However, neither of these address forcing caching.</p>\n\n<p><strong>Motivation:</strong>\nI want to put <code>$.ajax({...})</code> calls in my initialisation functions, some of which request the same url. Sometimes I need to call one of these initialisation functions, sometimes I call several. </p>\n\n<p><strong>So, I want to minimise the requests to the server if that particular url has already been loaded.</strong></p>\n\n<p>I could roll my own solution (with some difficulty!), but I would like to know if there is a standard way of doing this.</p>\n",
            "last_activity_date": 1402915051,
            "question_id": 17104265,
            "score": 15,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "caching",
                "browser"
            ],
            "title": "Caching a jquery ajax response in javascript/browser"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><a href=\"https://github.com/mozilla/pdf.js/tree/master/examples/text-selection\">I have committed the example to Mozilla's pdf.js repository and it is available under the <code>examples</code> directory.</a></p>\n\n<p>I have been struggling with this problem for 2-3 days now, but I finally figured it out. <a href=\"http://jsfiddle.net/vivin/RjqUf/\">Here</a> is a fiddle that shows you how to load a PDF with text-selection enabled.</p>\n\n<p>The difficulty in figuring this out was that the text-selection logic was intertwined with the viewer code (<code>viewer.js</code>, <code>viewer.html</code>, <code>viewer.css</code>). I had to extricate relevant code and CSS out to get this to work (that JavaScript file is referenced in the file; you can also check it out <a href=\"http://vivin.net/pub/pdfjs/textlayerbuilder.js\">here</a>). The end result is a minimal demo that should prove helpful. To implement selection properly, the CSS that is in <code>viewer.css</code> is also extremely important as it sets up CSS styles for the <code>div</code>s that are eventually created and then used to get text selection working.</p>\n\n<p>The heavy lifting is done by the <code>TextLayerBuilder</code> object, which actually handles the creation of the selection <code>div</code>s. You can see calls to this object from within <code>viewer.js</code>. </p>\n\n<p>Anyway, here's the code including the CSS. Keep in mind that you will still need the <code>pdf.js</code> file. My fiddle has a link to a version that I built from Mozilla's GitHub repo for <code>pdf.js</code>. I didn't want to link to the repo's version directly since they are constantly developing it and it may be broken.</p>\n\n<p>So without further ado:</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Minimal pdf.js text-selection demo&lt;/title&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;div id=\"pdfContainer\" class = \"pdf-content\"&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>.pdf-content {\n    border: 1px solid #000000;\n}\n\n/* CSS classes used by TextLayerBuilder to style the text layer divs */\n\n/* This stuff is important! Otherwise when you select the text, the text in the divs will show up! */\n::selection { background:rgba(0,0,255,0.3); }\n::-moz-selection { background:rgba(0,0,255,0.3); }\n\n.textLayer {\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    color: #000;\n    font-family: sans-serif;\n    overflow: hidden;\n}\n\n.textLayer &gt; div {\n    color: transparent;\n    position: absolute;\n    line-height: 1;\n    white-space: pre;\n    cursor: text;\n}\n\n.textLayer .highlight {\n    margin: -1px;\n    padding: 1px;\n\n    background-color: rgba(180, 0, 170, 0.2);\n    border-radius: 4px;\n}\n\n.textLayer .highlight.begin {\n    border-radius: 4px 0px 0px 4px;\n}\n\n.textLayer .highlight.end {\n    border-radius: 0px 4px 4px 0px;\n}\n\n.textLayer .highlight.middle {\n    border-radius: 0px;\n}\n\n.textLayer .highlight.selected {\n    background-color: rgba(0, 100, 0, 0.2);\n}\n</code></pre>\n\n<p><strong>JavaScript:</strong></p>\n\n<pre><code>//Minimal PDF rendering and text-selection example using pdf.js by Vivin Suresh Paliath (http://vivin.net)\n//This fiddle uses a built version of pdf.js that contains all modules that it requires.\n//\n//For demonstration purposes, the PDF data is not going to be obtained from an outside source. I will be\n//storing it in a variable. Mozilla's viewer does support PDF uploads but I haven't really gone through\n//that code. There are other ways to upload PDF data. For instance, I have a Spring app that accepts a\n//PDF for upload and then communicates the binary data back to the page as base64. I then convert this\n//into a Uint8Array manually. I will be demonstrating the same technique here. What matters most here is\n//how we render the PDF with text-selection enabled. The source of the PDF is not important; just assume\n//that we have the data as base64.\n//\n//The problem with understanding text selection was that the text selection code has heavily intertwined\n//with viewer.html and viewer.js. I have extracted the parts I need out of viewer.js into a separate file\n//which contains the bare minimum required to implement text selection. The key component is TextLayerBuilder,\n//which is the object that handles the creation of text-selection divs. I have added this code as an external\n//resource.\n//\n//This demo uses a PDF that only has one page. You can render other pages if you wish, but the focus here is\n//just to show you how you can render a PDF with text selection. Hence the code only loads up one page.\n//\n//The CSS used here is also very important since it sets up the CSS for the text layer divs overlays that\n//you actually end up selecting. \n//\n//For reference, the actual PDF document that is rendered is available at:\n//http://vivin.net/pub/pdfjs/TestDocument.pdf\n\nvar pdfBase64 = \"...\"; //should contain base64 representing the PDF\n\nvar scale = 1; //Set this to whatever you want. This is basically the \"zoom\" factor for the PDF.\n\n/**\n * Converts a base64 string into a Uint8Array\n */\nfunction base64ToUint8Array(base64) {\n    var raw = atob(base64); //This is a native function that decodes a base64-encoded string.\n    var uint8Array = new Uint8Array(new ArrayBuffer(raw.length));\n    for(var i = 0; i &lt; raw.length; i++) {\n        uint8Array[i] = raw.charCodeAt(i);\n    }\n\n    return uint8Array;\n}\n\nfunction loadPdf(pdfData) {\n    PDFJS.disableWorker = true; //Not using web workers. Not disabling results in an error. This line is\n                                //missing in the example code for rendering a pdf.\n\n    var pdf = PDFJS.getDocument(pdfData);\n    pdf.then(renderPdf);                               \n}\n\nfunction renderPdf(pdf) {\n    pdf.getPage(1).then(renderPage);\n}\n\nfunction renderPage(page) {\n    var viewport = page.getViewport(scale);\n    var $canvas = jQuery(\"&lt;canvas&gt;&lt;/canvas&gt;\");\n\n    //Set the canvas height and width to the height and width of the viewport\n    var canvas = $canvas.get(0);\n    var context = canvas.getContext(\"2d\");\n    canvas.height = viewport.height;\n    canvas.width = viewport.width;\n\n    //Append the canvas to the pdf container div\n    jQuery(\"#pdfContainer\").append($canvas);\n\n    //The following few lines of code set up scaling on the context if we are on a HiDPI display\n    var outputScale = getOutputScale();\n    if (outputScale.scaled) {\n        var cssScale = 'scale(' + (1 / outputScale.sx) + ', ' +\n            (1 / outputScale.sy) + ')';\n        CustomStyle.setProp('transform', canvas, cssScale);\n        CustomStyle.setProp('transformOrigin', canvas, '0% 0%');\n\n        if ($textLayerDiv.get(0)) {\n            CustomStyle.setProp('transform', $textLayerDiv.get(0), cssScale);\n            CustomStyle.setProp('transformOrigin', $textLayerDiv.get(0), '0% 0%');\n        }\n    }\n\n    context._scaleX = outputScale.sx;\n    context._scaleY = outputScale.sy;\n    if (outputScale.scaled) {\n        context.scale(outputScale.sx, outputScale.sy);\n    }     \n\n    var canvasOffset = $canvas.offset();\n    var $textLayerDiv = jQuery(\"&lt;div /&gt;\")\n        .addClass(\"textLayer\")\n        .css(\"height\", viewport.height + \"px\")\n        .css(\"width\", viewport.width + \"px\")\n        .offset({\n            top: canvasOffset.top,\n            left: canvasOffset.left\n        });\n\n    jQuery(\"#pdfContainer\").append($textLayerDiv);\n\n    page.getTextContent().then(function(textContent) {\n        var textLayer = new TextLayerBuilder($textLayerDiv.get(0), 0); //The second zero is an index identifying\n                                                                       //the page. It is set to page.number - 1.\n        textLayer.setTextContent(textContent);\n\n        var renderContext = {\n            canvasContext: context,\n            viewport: viewport,\n            textLayer: textLayer\n        };\n\n        page.render(renderContext);\n    });\n}\n\nvar pdfData = base64ToUint8Array(pdfBase64);\nloadPdf(pdfData);    \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<p>I'm trying <a href=\"https://github.com/mozilla/pdf.js\">PDF.js</a>.</p>\n\n<p>My problem is that the <a href=\"http://jsbin.com/pdfjs-helloworld-v2/1/edit\">Hello World demo</a> does not support text selection. It will draw everything in a canvas without the text layer. The <a href=\"http://mozilla.github.io/pdf.js/web/viewer.html\">official PDF.js demo</a> does support text selection but the code is too complex. I was wondering if somebody has a minimalistic demo with the text layer.</p>\n",
            "last_activity_date": 1385504321,
            "question_id": 16775907,
            "score": 15,
            "tags": [
                "javascript",
                "pdf.js"
            ],
            "title": "Is there a minimalistic PDF.js sample that supports text selection?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>This seems to fit the bill...</p>\n\n<p><a href=\"http://lab.smashup.it/flip/\">http://lab.smashup.it/flip/</a></p>\n\n<p><strong>Quote:</strong>  <em>Flip is compatible with: Firefox, Chrome/Chromium, Opera, Safari and even IE (6,7,8)</em></p>\n\n<hr>\n\n<p>Here is another one...</p>\n\n<p><a href=\"http://dev.jonraasch.com/quickflip/examples/\">http://dev.jonraasch.com/quickflip/examples/</a></p>\n\n<p><a href=\"http://jonraasch.com/blog/quickflip-2-jquery-plugin\">http://jonraasch.com/blog/quickflip-2-jquery-plugin</a></p>\n\n<hr>\n\n<p>There is no \"flip\" in this one, but perhaps you'll find this helpful in another way...</p>\n\n<p><a href=\"http://malsup.com/jquery/cycle/browser.html\">http://malsup.com/jquery/cycle/browser.html</a></p>\n\n<hr>\n\n<p>This one seems powerful, but you'll have to program the flip yourself...</p>\n\n<p><a href=\"https://github.com/heygrady/transform/wiki\">https://github.com/heygrady/transform/wiki</a></p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>There are -moz prefixes that should let you accomplish what you're trying to do.</p>\n\n<p>See here:\n<a href=\"http://css3playground.com/flip-card.php\">http://css3playground.com/flip-card.php</a></p>\n\n<p>Try adding -moz variants of all the -webkit magic here:\n<a href=\"http://jsfiddle.net/nicooprat/GDdtS/\">http://jsfiddle.net/nicooprat/GDdtS/</a></p>\n\n<p>Or... if you're using Compass (http://compass-style.org) and Sass (sass-lang.com) like me, this works nicely in Chrome, Safari, and FF.</p>\n\n<h2>HTML</h2>\n\n<pre><code>&lt;div class=\"flip\"&gt; \n    &lt;div class=\"card\"&gt; \n        &lt;div class=\"face front\"&gt; \n            Front\n        &lt;/div&gt; \n        &lt;div class=\"face back\"&gt; \n            Back\n        &lt;/div&gt; \n    &lt;/div&gt; \n&lt;/div&gt; \n</code></pre>\n\n<p>\u200b</p>\n\n<h2>SASS with compass mixins</h2>\n\n<p>(http://compass-style.org/reference/compass/css3/transform/)</p>\n\n<pre><code>.flip\n  position: relative\n  +perspective(800)\n  width: 80%\n  height: 200px\n\n.flip .card.flipped\n  +transform(rotatex(-180deg))\n\n.flip .card\n  +transform-style(preserve-3d)\n  +transition(0.5s)\n  width: 100%\n  height: 100%\n\n.flip .card .face\n  position: absolute\n  z-index: 2\n  +backface-visibility(hidden) \n  width: 100%\n  height: 100%\n\n.flip .card .front\n  position: absolute\n  z-index: 1\n\n.flip .card .back\n  +transform(rotatex(-180deg))\n\n// Make it at least functional IE\n.flip .card.flipped .back\n  z-index: 0\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I was trying to use this <a href=\"http://blog.guilhemmarty.com/flippy/\" rel=\"nofollow\">http://blog.guilhemmarty.com/flippy/</a>, you can have a try.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Check out this blog post from David Walsh: <a href=\"http://davidwalsh.name/css-flip\" rel=\"nofollow\">http://davidwalsh.name/css-flip</a></p>\n\n<p>It has some great code for creating a flip effect that works on multiple browsers.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I also couldn't seem to find a good example of this anywhere, so I spent <strike>some</strike> way too much time making my own.</p>\n\n<p>This one works on all browsers, does not have that weird 360deg IE flip, and includes provision for static content (that lives on both sides of the card - which I needed to put a 'flip' button at the top right of both sides).</p>\n\n<p>--I tested on latest versions of Chrome, Firefox, Safari, Opera, and IE.</p>\n\n<p><a href=\"http://jsfiddle.net/Tinclon/2ega7yLt/7/\" rel=\"nofollow\">http://jsfiddle.net/Tinclon/2ega7yLt/7/</a></p>\n\n<p>Edit: Also works with transparent backgrounds: <a href=\"http://jsfiddle.net/Tinclon/2ega7yLt/8/\" rel=\"nofollow\">http://jsfiddle.net/Tinclon/2ega7yLt/8/</a></p>\n\n<p>The css (of course) includes IE hacks, so it's a bit long, but the html is quite straightforward:</p>\n\n<pre><code>&lt;div class=\"card\"&gt;\n  &lt;div class=\"content\"&gt;\n    &lt;div class=\"cardFront\"&gt;FRONT CONTENT&lt;/div&gt;\n    &lt;div class=\"cardBack\"&gt;BACK CONTENT&lt;/div&gt;\n    &lt;div class=\"cardStatic\"&gt;STATIC CONTENT&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p></p>\n\n<pre><code>$('.card').hover(function(){$('.card').toggleClass('applyflip');}.bind(this));\n</code></pre>\n\n<p></p>\n\n<pre><code>.card {\n    perspective: 1000px;\n    -webkit-perspective: 1000px;\n    -moz-perspective: 1000px;\n    -o-perspective: 1000px;\n    -ms-perspective: 1000px;\n    margin:80px 150px;\n    width:320px;\n    height:243px;\n    vertical-align:top;\n    position:absolute;\n    display:block;\n    font-size:25px;\n    font-weight:bold;\n}\n\n.card .content {\n    transition: 0.5s ease-out;\n    -webkit-transition: 0.5s ease-out;\n    -moz-transition: 0.5s ease-out;\n    -o-transition: 0.5s ease-out;\n    -ms-transition: 0.5s ease-out;\n    transform-style: preserve-3d;\n    -webkit-transform-style: preserve-3d;\n    -moz-transform-style: preserve-3d;\n    -o-transform-style: preserve-3d;\n    -ms-transform-style: preserve-3d;\n\n    /* content backface is visible so that static content still appears */\n    backface-visibility: visible;\n    -webkit-backface-visibility: visible;\n    -moz-backface-visibility: visible;\n    -o-backface-visibility: visible;\n    -ms-backface-visibility: visible;\n\n\n    border: 1px solid grey;\n    border-radius: 15px;\n    position:relative;\n    width: 100%;\n    height: 100%;\n\n}\n.card.applyflip .content {\n    transform: rotateY(180deg);\n    -webkit-transform: rotateY(180deg);\n    -moz-transform: rotateY(180deg);\n    -o-transform: rotateY(180deg);\n    -ms-transform: rotateY(180deg);\n}\n\n\n.card .content .cardStatic {\n    /* Half way through the card flip, rotate static content to 0 degrees */\n    transition: 0s linear 0.17s;\n    -webkit-transition: 0s linear 0.17s;\n    -moz-transition: 0s linear 0.17s;\n    -o-transition: 0s linear 0.17s;\n    -ms-transition: 0s linear 0.17s;\n    transform: rotateY(0deg);\n    -webkit-transform: rotateY(0deg);\n    -moz-transform: rotateY(0deg);\n    -o-transform: rotateY(0deg);\n    -ms-transform: rotateY(0deg);\n\n    text-align: center;\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 0;\n    width: 100%;\n    line-height:100px;\n}\n\n.card.applyflip .content .cardStatic {\n    /* Half way through the card flip, rotate static content to -180 degrees -- to negate the flip and unmirror the static content */\n    transition: 0s linear 0.17s;\n    -webkit-transition: 0s linear 0.17s;\n    -moz-transition: 0s linear 0.17s;\n    -o-transition: 0s linear 0.17s;\n    -ms-transition: 0s linear 0.17s;\n    transform: rotateY(-180deg);\n    -webkit-transform: rotateY(-180deg);\n    -moz-transform: rotateY(-180deg);\n    -o-transform: rotateY(-180deg);\n    -ms-transform: rotateY(-180deg);\n}\n\n.card .content .cardFront {\n    background-color: skyblue;\n    color: tomato;\n}\n\n.card .content .cardBack {\n    background-color: tomato;\n    color: skyblue;\n}\n\n.card .content .cardFront, .card .content .cardBack {\n    /* Backface visibility works great for all but IE. As such, we mark the backface visible in IE and manage visibility ourselves */\n    backface-visibility: hidden;\n    -webkit-backface-visibility: hidden;\n    -moz-backface-visibility: hidden;\n    -o-backface-visibility: hidden;\n    -ms-backface-visibility: visible;\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n    line-height:200px;\n    border-radius: 14px;\n}\n.card .content .cardFront, .card.applyflip .content .cardFront {\n    transform: rotateY(0deg);\n    -webkit-transform: rotateY(0deg);\n    -moz-transform: rotateY(0deg);\n    -o-transform: rotateY(0deg);\n    -ms-transform: rotateY(0deg);\n}\n\n.card .content .cardBack, .card.applyflip .content .cardBack {\n    transform: rotateY(-180deg);\n    -webkit-transform: rotateY(-180deg);\n    -moz-transform: rotateY(-180deg);\n    -o-transform: rotateY(-180deg);\n    -ms-transform: rotateY(-180deg);\n}\n\n.card .content .cardFront, .card.applyflip .content .cardBack {\n    /* IE Hack. Halfway through the card flip, set visibility. Keep other browsers visible throughout the card flip. */\n    animation: stayvisible 0.5s both;\n    -webkit-animation: stayvisible 0.5s both;\n    -moz-animation: stayvisible 0.5s both;\n    -o-animation: stayvisible 0.5s both;\n    -ms-animation: donothing 0.5s;\n    -ms-transition: visibility 0s linear 0.17s;\n    visibility: visible;\n}\n.card.applyflip .content .cardFront, .card .content .cardBack {\n    /* IE Hack. Halfway through the card flip, set visibility. Keep other browsers visible throughout the card flip. */\n    animation: stayvisible 0.5s both;\n    -webkit-animation: stayvisible 0.5s both;\n    -moz-animation: stayvisible 0.5s both;\n    -o-animation: stayvisible 0.5s both;\n    -ms-animation: donothing 0.5s;\n    -ms-transition: visibility 0s linear 0.17s;\n    visibility: hidden;\n}\n@keyframes stayvisible { from { visibility: visible; } to { visibility: visible; } }\n@-webkit-keyframes stayvisible { from { visibility: visible; } to { visibility: visible; } }\n@-moz-keyframes stayvisible { from { visibility: visible; } to { visibility: visible; } }\n@-o-keyframes stayvisible { from { visibility: visible; } to { visibility: visible; } }\n@-ms-keyframes donothing { 0% { } 100% { } }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>So I have been looking for the flip card effect. There are a number of nice examples that work well with webkit browsers. For example:</p>\n\n<p><a href=\"http://www.ilovecolors.com.ar/wp-content/uploads/css-card-flip-webkit/click.html\" rel=\"nofollow\">http://www.ilovecolors.com.ar/wp-content/uploads/css-card-flip-webkit/click.html</a></p>\n\n<p>But I have found none that works with Internet Explorer/Firefox as well. Do you guys perhaps have an example where a similar flip effect is done?</p>\n",
            "last_activity_date": 1421529728,
            "question_id": 6268428,
            "score": 15,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "html5",
                "css3"
            ],
            "title": "Flip card effect for non-webkit browsers"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>John,</p>\n\n<p>You always start in the view because your DOM interactions (incl. form submits) happen in views.</p>\n\n<p>Then, if I were you, I would add a custom method to the User model, and call the method from the view. The login method does not exactly fit with native Backbone sync as you're not trying to add / update / retrieve anything (mind that you DO NOT want to load user password or password hash from the server for security reasons). So you do a regular Ajax call without calling Backbone fetch(). So, here you go:</p>\n\n<pre><code>var UserModel = Backbone.Model.extend({\n  ...\n  checkLogin: function(name, password) {\n    var self = this;\n    $.post('/login', { name: name, password: password }, function(data) {\n      self.set(data); // data should be in JSON and contain model of this user\n    }, 'json').error(\n      self.trigger('loginError'); // our custom event\n    );\n  }\n});\n</code></pre>\n\n<p>And the view:</p>\n\n<pre><code>var UserView = Backbone.View.extend({\n  events: {\n    'click .login': 'loginSubmit'\n  },\n\n  initialize: function() {\n     _.bindAll(this, 'loginSubmit', 'loginSuccess', 'loginError');\n     this.model.bind('change', this.loginSuccess);\n     this.model.bind('loginError', this.loginError);\n  },\n\n  loginSubmit: function() {\n    var name = 'username', // you get it from some element\n        password = '***'; // you get it from another element\n    this.model.checkLogin(name, password);\n  },\n\n  loginSuccess: function() {\n    alert ('You have been logged in');\n    console.log(this.model); // should log loaded user model\n  },\n\n  loginError: function() {\n    alert ('Problem with login');\n  }\n});\n</code></pre>\n\n<p>Make sure you pass the UserModel instance to the UserView instance, e.g.:</p>\n\n<pre><code>var userModel = new UserModel,\n    userView = new UserView({ model: userModel });\n</code></pre>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Create an authentication Model, that stores the post state (username, password, remember me) as well as the response state (login failed, login accepted)...</p>\n\n<pre><code>App.Model.authentication= Backbone.Model.extend({\n    defaults: {\n        Username: \"\",\n        Password: \"\",\n        RememberMe: false,\n        LoginFailed: false,\n        LoginAccepted: false\n    },\n    url:\"api/authentication\"\n});\n</code></pre>\n\n<p>Update the View to use the model:</p>\n\n<pre><code>   $(function () {\n    var LoginView = Backbone.View.extend({\n        model: new App.Model.authentication(),\n        el: $(\"#login-form\"),\n        events: {\n            \"click #login\": \"login\"\n        },\n\n        login: function () {\n            this.model.save({username: this.$el.find(\"#username\"),\n                password: this.$el.find(\"#password\")}, {\n                success: function () {\n                    /* update the view now */\n                },\n                error: function () {\n                    /* handle the error code here */\n                }\n            });\n        }\n    });\n}\n</code></pre>\n\n<p>);</p>\n\n<p>Calling Model.Save() will issue a post request to the server, although in this instance on the server you're not actually saving anything, but check the credentials and sending back an object with the same model, but with the \"LoginAccepted\" field set appropriately.</p>\n\n<p>Don't implement custom JQuery AJAX Posts - Its not in the spirit of backbone, which handles it all for you under the hood via its REST interface.</p>\n\n<p>More details on the REST interface and the various REST Actions and URLS that backbone uses here: <a href=\"http://codebyexample.info/2012/04/30/backbone-in-baby-steps-part-3/\" rel=\"nofollow\">http://codebyexample.info/2012/04/30/backbone-in-baby-steps-part-3/</a></p>\n\n<p>One more thing on the AJAX vs model.save() debate. If your application was a stateless chat room like IRC - which sends messages to other users in the chat room but doesn't save the messages centrally... would you throw away all of backbone's REST functionality and re-implement them with custom AJAX calls because you're not ACTUALLY 'saving', you're really just 'sending'. That would cost you a huge amount of work to re-implement functionality that's already there, just because of semantics. Always read model.save() as model.post() - its not just for saving - its for sending.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>ReST is <strong>NOT</strong> a standard, simply a spec and any practical developer will mix ReST and RPC when appropriate to do so. That said, neither of these answers pointed out the fact that the server response should return a token (sessionID, JSON web token, etc.) and delete the plain text password. Failing to do so introduces a security risk.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I 'm learning Backbone.js for a new app I'm building.\nI need to perform an AJAX call(<code>REST SERVICE</code>) to authenticate.</p>\n\n<p>Where is the correct place for this call? In the Model, View or somewhere else? specifically related to Backbone.js MVC model.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script src=\"lib/jquery-1.6.1.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"lib/json2.js\"&gt;&lt;/script&gt;\n&lt;script src=\"lib/underscore-min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"lib/backbone-min.js\"&gt;&lt;/script&gt;   \n\n&lt;script language=\"javascript\"&gt;\n      $(function(){\n         var LoginView = Backbone.View.extend({\n          el: $(\"#login-form\"),\n\n          events: {\n            \"click #login\": \"login\"\n          },\n\n          login: function(){\n              alert(\"Hello\");\n           }\n        });\n\n        window.LoginView = new LoginView();\n      });\n    &lt;/script&gt;   \n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form action=\"/login\" id=\"login-form\"&gt;\n      Username: &lt;input type=\"text\" id=\"username\"&gt;&lt;br&gt;\n      Password: &lt;input type=\"password\" id=\"password\"&gt;&lt;br&gt;\n      &lt;button id=\"login\"&gt;Login&lt;/button&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1418567265,
            "question_id": 11331604,
            "score": 6,
            "tags": [
                "javascript",
                "backbone.js"
            ],
            "title": "backbone.js ajax calls"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Check if you're <code>response[0]</code> actually exists, the error seems to suggest it doesn't.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It'll be because <code>response[0]</code> itself is undefined.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>reponse[0] is not defined, check if it is defined and then check for its property title. </p>\n\n<pre><code>if(response[0] !== undefined &amp;&amp; response[0].title !== undefined){\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 179
                },
                {
                    "body": "<p>You must first check whether <code>response[0]</code> is undefined, and only if it's not, check for the rest. That means that in your case, <code>response[0]</code> is undefined.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Just check if</strong> <code>response[0]</code> <strong>is undefined:</strong></p>\n\n<pre><code>if(response[0] !== undefined) { ... }\n</code></pre>\n\n<p><strong>if you still need to check title:</strong></p>\n\n<pre><code>if(response[0] !== undefined &amp;&amp; response[0].title !== undefined){ ... }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Actually you must surround it with an Try/Catch block so your code won't stop from working.\nLike this:</p>\n\n<pre><code>try{\n    if(typeof(response[0].title) !== 'undefined')\n  }catch(e){\n    console.log('responde[0].title is undefined'); \n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I had trouble with all of the other code examples above. In Chrome, this was the condition that worked for me:</p>\n\n<pre><code>typeof(possiblyUndefinedVariable) !== \"undefined\"\n</code></pre>\n\n<p>I will have to test that in other browsers and see how things go I suppose.</p>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I'm checking <code>if(response[0].title !== undefined)</code>, but I get the error:</p>\n\n<blockquote>\n  <p>Uncaught TypeError: Cannot read property 'title' of undefined.</p>\n</blockquote>\n",
            "last_activity_date": 1408599117,
            "question_id": 7041123,
            "score": 113,
            "tags": [
                "javascript",
                "undefined"
            ],
            "title": "Test if something is not undefined in JavaScript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Try this: <code>window.location.href.split('?')[0]</code></p>\n",
                    "is_accepted": true,
                    "score": 91
                },
                {
                    "body": "<pre><code>location.toString().replace(location.search, \"\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Read about <a href=\"https://developer.mozilla.org/en/DOM/window.location\"><code>Window.location</code></a> and the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Location\"><code>Location</code></a> interface:</p>\n\n<pre><code>var url = [location.protocol, '//', location.host, location.pathname].join('');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 112
                },
                {
                    "body": "<p>just cut the string using split (the easy way):</p>\n\n<pre><code>var myString = \"http://localhost/dms/mduserSecurity/UIL/index.php?menu=true&amp;submenu=true&amp;pcode=1235\"\nvar mySplitResult = myString.split(\"?\");\nalert(mySplitResult[0]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use properties of <code>window.location</code></p>\n\n<pre><code>var loc = window.location;\nvar withoutQuery = loc.hostname + loc.pathname;\nvar includingProtocol = loc.protocol + \"//\" + loc.hostname + loc.pathname;\n</code></pre>\n\n<p>You can see more properties at <a href=\"https://developer.mozilla.org/en/DOM/window.location\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM/window.location</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here are two methods:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var s=\"http://localhost/dms/mduserSecurity/UIL/index.php?menu=true&amp;submenu\n                                =true&amp;pcode=1235\";\n\n    var st=s.substring(0, s.indexOf(\"?\"));\n\n    alert(st);\n\n    alert(s.replace(/\\?.*/,''));\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try:</p>\n\n<pre><code>document.location.protocol + '//' +\ndocument.location.host +\ndocument.location.pathname;\n</code></pre>\n\n<p>(NB: <code>.host</code> rather than <code>.hostname</code> so that the port gets included too, if necessary)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var url = window.location.origin + window.location.pathname;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you also want to remove hash, try this one: <code>window.location.href.split(/[?#]/)[0]</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a URL like : </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>http://localhost/dms/mduserSecurity/UIL/index.php?menu=true&amp;submenu=true&amp;pcode=1235\n</code></pre>\n\n<p>I want to get the URL without the query string:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>http://localhost/dms/mduserSecurity/UIL/index.php\n</code></pre>\n\n<p>Is there any method in JavaScript, not in PHP?</p>\n\n<p>Currently I am using </p>\n\n<pre><code>var url = document.location.href;\n</code></pre>\n\n<p>but it returns the complete URL only.</p>\n",
            "last_activity_date": 1406610543,
            "question_id": 5817505,
            "score": 70,
            "tags": [
                "javascript",
                "url"
            ],
            "title": "is there any method to get url without query string in java script"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>It depends on whether you want to use the binary or decimal convention.</p>\n\n<p>RAM, for instance, is always measured in binary, so to express 1551859712 as ~1.4GiB would be correct.</p>\n\n<p>On the other hand, hard disk manufacturers like to use decimal, so they would call it ~1.6GB.</p>\n\n<p>And just to be confusing, floppy disks use a mixture of the two systems - their 1MB is actually 1024000 bytes.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<pre><code>1551859712 / 1024 = 1515488\n1515488 / 1024 = 1479.96875\n1479.96875 / 1024 = 1.44528198242188\n</code></pre>\n\n<p>Your solution is correct. The important thing to realize is that in order to get from <code>1551859712</code> to <code>1.5</code>, you have to do divisions by 1000, but bytes are counted in binary-to-decimal chunks of 1024, hence why the Gigabyte value is less.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here's one I just wrote:</p>\n\n<pre><code>function humanFileSize(bytes, si) {\n    var thresh = si ? 1000 : 1024;\n    if(bytes &lt; thresh) return bytes + ' B';\n    var units = si ? ['kB','MB','GB','TB','PB','EB','ZB','YB'] : ['KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB'];\n    var u = -1;\n    do {\n        bytes /= thresh;\n        ++u;\n    } while(bytes &gt;= thresh);\n    return bytes.toFixed(1)+' '+units[u];\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 66
                },
                {
                    "body": "<p><strong>Here is a prototype to convert a number to a readable string respecting the new international standards.</strong></p>\n\n<blockquote>\n  <p>There are two ways to represent big numbers: You could either display\n  them in multiples of 1000 = 10 3 (base 10) or 1024 = 2 10 (base 2). If\n  you divide by 1000, you probably use the SI prefix names, if you\n  divide by 1024, you probably use the IEC prefix names. The problem\n  starts with dividing by 1024. Many applications use the SI prefix\n  names for it and some use the IEC prefix names. The current situation\n  is a mess. If you see SI prefix names you do not know whether the\n  number is divided by 1000 or 1024</p>\n</blockquote>\n\n<p><a href=\"https://wiki.ubuntu.com/UnitsPolicy\">https://wiki.ubuntu.com/UnitsPolicy</a></p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Template:Quantities_of_bytes\">http://en.wikipedia.org/wiki/Template:Quantities_of_bytes</a></p>\n\n<pre><code>Object.defineProperty(Number.prototype,'fileSize',{value:function(a,b,c,d){\n return (a=a?[1e3,'k','B']:[1024,'K','iB'],b=Math,c=b.log,\n d=c(this)/c(a[0])|0,this/b.pow(a[0],d)).toFixed(2)\n +' '+(d?(a[1]+'MGTPEZY')[--d]+a[2]:'Bytes');\n},writable:false,enumerable:false});\n</code></pre>\n\n<p><strong>Usage:</strong></p>\n\n<p><em>IEC prefix</em></p>\n\n<pre><code>console.log((186457865).fileSize()); // default IEC (power 1024)\n//177.82 MiB\n//KiB,MiB,GiB,TiB,PiB,EiB,ZiB,YiB\n</code></pre>\n\n<p><em>SI prefix</em></p>\n\n<pre><code>console.log((186457865).fileSize(1)); //1,true for SI (power 1000)\n//186.46 MB \n//kB,MB,GB,TB,PB,EB,ZB,YB\n</code></pre>\n\n<p>i set the IEC as default because i always used binary mode to calculate the size of a file... using the power of 1024</p>\n\n<hr>\n\n<p>If you just want one of them in a short oneliner function:</p>\n\n<p><strong>SI</strong></p>\n\n<pre><code>function fileSizeSI(a,b,c,d,e){\n return (b=Math,c=b.log,d=1e3,e=c(a)/c(d)|0,a/b.pow(d,e)).toFixed(2)\n +' '+(e?'kMGTPEZY'[--e]+'B':'Bytes')\n}\n//kB,MB,GB,TB,PB,EB,ZB,YB\n</code></pre>\n\n<p><strong>IEC</strong></p>\n\n<pre><code>function fileSizeIEC(a,b,c,d,e){\n return (b=Math,c=b.log,d=1024,e=c(a)/c(d)|0,a/b.pow(d,e)).toFixed(2)\n +' '+(e?'KMGTPEZY'[--e]+'iB':'Bytes')\n}\n//KiB,MiB,GiB,TiB,PiB,EiB,ZiB,YiB\n</code></pre>\n\n<p><strong>Usage:</strong></p>\n\n<pre><code>console.log(fileSizeIEC(7412834521));\n</code></pre>\n\n<p>if you have some questions about the functions just ask</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Another embodiment of the calculation</p>\n\n<pre><code>function humanFileSize(size) {\n    var i = Math.floor( Math.log(size) / Math.log(1024) );\n    return ( size / Math.pow(1024, i) ).toFixed(2) * 1 + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Based on <a href=\"http://stackoverflow.com/users/2450730/cocco\">cocco</a>'s idea, here's a less compact -but hopefully more comprehensive- example.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;File info&lt;/title&gt;\n\n&lt;script&gt;\n&lt;!--\nfunction fileSize(bytes) {\n    var exp = Math.log(bytes) / Math.log(1024) | 0;\n    var result = (bytes / Math.pow(1024, exp)).toFixed(2);\n\n    return result + ' ' + (exp == 0 ? 'bytes': 'KMGTPEZY'[exp - 1] + 'B');\n}\n\nfunction info(input) {\n    input.nextElementSibling.textContent = fileSize(input.files[0].size);\n} \n--&gt;\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;label for=\"upload-file\"&gt; File: &lt;/label&gt;\n&lt;input id=\"upload-file\" type=\"file\" onchange=\"info(this)\"&gt;\n&lt;div&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>sizeOf = function (bytes) {\n  if (bytes == 0) { return \"0.00 B\"; }\n  var e = Math.floor(Math.log(bytes) / Math.log(1024));\n  return (bytes/Math.pow(1024, e)).toFixed(2)+' '+' KMGTP'.charAt(e)+'B';\n}\n</code></pre>\n\n<blockquote>\n  <p>sizeOf(2054110009);<br>\n  //=> \"1.91 GB\"  </p>\n  \n  <p>sizeOf(7054110);<br>\n  //=> \"6.73 MB\"</p>\n  \n  <p>sizeOf( (3*1024*1024) );<br>\n  //=> \"3.00 MB\"</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's mine - works for really big files too -_-</p>\n\n<pre><code>function formatFileSize(size)\n{\n    var sizes = [' Bytes', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB'];\n    for (var i = 1; i &lt; sizes.length; i++)\n    {\n        if (size &lt; Math.pow(1024, i)) return (Math.round((size/Math.pow(1024, i-1))*100)/100) + sizes[i-1];\n    }\n    return size;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using this function to convert file size in bytes to a human readable file size:</p>\n\n<pre><code>function getReadableFileSizeString(fileSizeInBytes) {\n\n    var i = -1;\n    var byteUnits = [' kB', ' MB', ' GB', ' TB', 'PB', 'EB', 'ZB', 'YB'];\n    do {\n        fileSizeInBytes = fileSizeInBytes / 1024;\n        i++;\n    } while (fileSizeInBytes &gt; 1024);\n\n    return Math.max(fileSizeInBytes, 0.1).toFixed(1) + byteUnits[i];\n};\n</code></pre>\n\n<p>However, it seems like this isn't 100% accurate. For example...</p>\n\n<pre><code>getReadableFileSizeString(1551859712); // output is \"1.4 GB\"\n</code></pre>\n\n<p>Shouldn't this be \"1.5 GB\"? It seems like the division by 1024 is losing precision. Am I totally misunderstanding something or is there a better way to do this?</p>\n",
            "last_activity_date": 1425636621,
            "question_id": 10420352,
            "score": 58,
            "tags": [
                "javascript",
                "filesize",
                "human-readable"
            ],
            "title": "converting file size in bytes to human readable"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can specify the template as a dependency using the text! module like you have shown. I do this with Mustache Templates.</p>\n\n<p>However Require.js does not explicitly support css files.</p>\n\n<p>Here is the official explanation, it's explained pretty well:\n<a href=\"http://requirejs.org/docs/faq-advanced.html#css\">http://requirejs.org/docs/faq-advanced.html#css</a></p>\n\n<p>Edit: Feb 2012.</p>\n\n<p>Templates such as handlebars can also be precompiled and included just like any other JS module\n<a href=\"http://handlebarsjs.com/precompilation.html\">http://handlebarsjs.com/precompilation.html</a></p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>There is a third-party CSS plugin for RequireJS which seems to work well: <a href=\"https://github.com/VIISON/RequireCSS/\">https://github.com/VIISON/RequireCSS/</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Take a look here ,this is  well tested and documented plugin for RequireJs ,\nalso with the description of problems it solves when working with css dependencies.\nWorth to say I'm using it in production.\n<a href=\"https://github.com/dimaxweb/CSSLoader\" rel=\"nofollow\">https://github.com/dimaxweb/CSSLoader</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>After playing around with AMD/RequireJS I was wondering if it is a good idea to load UI modules including templates and CSS so they are completely independent from the web page.</p>\n\n<p>It sounds like good, but I haven't seen this implemented in the wild so there may be pitfalls.</p>\n\n<p>Think of some UI module with the following structure:</p>\n\n<pre><code>myWidget\n    |--img \n    |--main.js\n    |--styles.css\n    +--template.tpl\n</code></pre>\n\n<p>All stuff in one folder. Looks very nice.</p>\n\n<p>The module in main.js would look something like this:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>define([\"TemplateEngine\", \"text!myWidget/template.tpl\"], function(TemplateEngine, template) {\n\n    // Load CSS (Pseudo Code)\n    var cssUrl = \"myWidget/styles.css\";\n    appendToHead(cssUrl);\n\n    return function() {\n        return {\n            render: function(data) {\n                  return TemplateEngine.toHtml(template, data);\n            } \n        }\n    }\n});\n</code></pre>\n\n<p>Questions are now:</p>\n\n<ol>\n<li>Am I missing something?</li>\n<li>Are there any plugins/concepts how to achieve this in a \"standard\" way?</li>\n<li>Is the RequireJS optimizer able to handle the CSS part here, say concat/minify the stylesheets like it does with the JS parts?</li>\n<li>Any opinions on that? Good or bad?</li>\n</ol>\n",
            "last_activity_date": 1407877994,
            "question_id": 7917639,
            "score": 53,
            "tags": [
                "javascript",
                "css",
                "requirejs",
                "javascript-module",
                "js-amd"
            ],
            "title": "RequireJS: Loading modules including templates and CSS"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Use the minDate option to set the minimum possible date.\n<a href=\"http://jqueryui.com/demos/datepicker/#option-minDate\">http://jqueryui.com/demos/datepicker/#option-minDate</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You just need to specify a minimum date - setting it to 0 means that the minimum date is 0 days from today i.e. today. You could pass the string <code>'0d'</code> instead (the default unit is days).</p>\n\n<pre><code>$(function () {\n    $('#date').datepicker({ minDate: 0 });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Try setting <code>startDate</code> to the current date. For example:</p>\n\n<pre><code>$('.date-pick').datePicker({startDate:'01/01/1996'});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>$(\"#datepicker\").datepicker({ minDate: 0 });\n</code></pre>\n\n<p>Remove the quotes from <code>0</code>.</p>\n",
                    "is_accepted": false,
                    "score": 87
                },
                {
                    "body": "<p>This works:</p>\n\n<pre><code>$(\"#datepicker\").datepicker({ minDate: +0 });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I am using following code to format date and show 2 months in calendar...</p>\n\n<pre><code>&lt;script&gt;\n$(function() {\n\n    var dates = $( \"#from, #to\" ).datepicker({\n\n        showOn: \"button\",\n        buttonImage: \"imgs/calendar-month.png\",\n        buttonImageOnly: true,                           \n        defaultDate: \"+1w\",\n        changeMonth: true,\n        numberOfMonths: 2,\n\n        onSelect: function( selectedDate ) {\n\n\n\n\n            $( \".selector\" ).datepicker({ defaultDate: +7 });\n            var option = this.id == \"from\" ? \"minDate\" : \"maxDate\",\n\n\n                instance = $( this ).data( \"datepicker\" ),\n                date = $.datepicker.parseDate(\n                    instance.settings.dateFormat ||\n                    $.datepicker._defaults.dateFormat,\n                    selectedDate, instance.settings );\n\n            dates.not( this ).datepicker( \"option\", \"dateFormat\", 'yy-mm-dd' );\n\n\n        }\n    });\n});\n\n&lt;/script&gt;\n</code></pre>\n\n<p>The problem is I am not sure how to restrict previous dates selection.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Remove the quotes surrounding <code>0</code> and it will work.</p>\n\n<p><strong>Working Code Snippet:</strong></p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>// set minDate to 0 for today's date\r\n$('#datepicker').datepicker({ minDate: 0 });</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>body {\r\n    font-size: 12px; /* just so that it doesnt default to 16px */\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;!-- load jQuery and jQuery UI --&gt;\r\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/jquery-ui.min.js\"&gt;&lt;/script&gt;\r\n\r\n&lt;!-- load jQuery UI CSS theme --&gt;\r\n&lt;link rel=\"stylesheet\" href=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/themes/smoothness/jquery-ui.css\" /&gt;\r\n\r\n\r\n&lt;input type='text' id='datepicker' /&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Make sure you put multiple properties in the same line (since you only showed 1 line of code, you may have had the same problem I did).</p>\n\n<p>Mine would set the default date, but didn't gray out old dates. This doesn't work:</p>\n\n<pre><code>$('#date_end').datepicker({ defaultDate: +31 })\n$('#date_end').datepicker({ minDate: 1 })\n</code></pre>\n\n<p>This does both:</p>\n\n<pre><code>$('#date_end').datepicker({ defaultDate: +31, minDate: 1 })\n</code></pre>\n\n<p>1 and +1 work the same (or 0 and +0 in your case).</p>\n\n<p>Me:  Windows 7 x64, Rails 3.2.3, Ruby 1.9.3</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are dealing with a previously bound date picker then setting</p>\n\n<pre><code>$(\"#datepicker\").datepicker({ minDate: 0 });\n</code></pre>\n\n<p>will not work. That syntax is applicable only when you are creating the widget.</p>\n\n<p>To set min date for a bound date picker use the following:</p>\n\n<pre><code>$(\"#datePicker\").datepicker(\"option\", \"minDate\", 0);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>var givenStartDate = $('#startDate').val();\n        alert('START DATE'+givenStartDate);\n        var givenEndDate = $('#endDate').val();\n        alert('END DATE'+givenEndDate);\n        var date = new Date();\n        var month = date.getMonth()+1;\n        var day = date.getDate();\n        var currentDate = date.getFullYear() + '-' +\n            (month&lt;10 ? '0' : '') + month + '-' +\n            (day&lt;10 ? '0' : '') + day;\n        if(givenStartDate &lt; currentDate || givenEndDate &lt; currentDate)\n         { \n        $(\"#updateButton\").attr(\"disabled\",\"disabled\"); \n         }\n         if(givenStartDate &lt; currentDate &amp;&amp; givenEndDate &gt; currentDate)\n            {\n            $(\"#updateButton\").attr(\"enabled\",\"enabled\");\n            }\n         if(givenStartDate &gt; currentDate || givenEndDate &gt; currentDate) { \n        $(\"#updateButton\").attr(\"enabled\",\"enabled\"); \n         }\n</code></pre>\n\n<p>Try this. If any mistake, please correct me :) Thanks all.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Give zero to mindate and it'll disabale past dates.</p>\n\n<pre><code>$( \"#datepicker\" ).datepicker({ minDate: 0});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/ZL2Bc/\">Live example</a></p>\n\n<p><a href=\"http://jqueryui.com/datepicker/#min-max\">read more here</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>How do I disable past dates on jQuery datepicker? I looked for options but don't seem to find anything that indicates the ability to disable past dates. </p>\n\n<p>UPDATE: Thanks yall for the quick response. I tried that with no luck. Days were still not grayed out as I expected and still accept the selected past date. </p>\n\n<p>I tried this:</p>\n\n<pre><code>$('#datepicker').datepicker({ minDate: '0' });\n</code></pre>\n\n<p>Doesn't work.</p>\n\n<p>I tried this:</p>\n\n<pre><code>$('#datepicker').datepicker({ minDate: new Date() });\n</code></pre>\n\n<p>Still doesn't work either. </p>\n\n<p>It displays the calendar widget just fine. It just won't gray out or prevent input of past days. I've attempted the minDate and maxDate in the past with no luck so I figured it must not be them. </p>\n",
            "last_activity_date": 1418753330,
            "question_id": 1786411,
            "score": 46,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "date",
                "datepicker"
            ],
            "title": "jQuery datepicker to prevent past date"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Use this: <a href=\"https://github.com/ncb000gt/node.bcrypt.js/\">https://github.com/ncb000gt/node.bcrypt.js/</a></p>\n\n<p>bcrypt is one of just a few algorithms focused on this use case.  You should never be able to decrypt your passwords, only verify that a user-entered cleartext password matches the stored/encrypted hash.</p>\n\n<p>bcrypt is very straightforward to use.  Here is a snippet from my Mongoose User schema (in CoffeeScript). Be sure to use the async functions as bycrypt is slow (on purpose).</p>\n\n<pre><code>class User extends SharedUser\n  defaults: _.extend {domainId: null}, SharedUser::defaults\n\n  #Irrelevant bits trimmed...\n\n  password: (cleartext, confirm, callback) -&gt;\n    errorInfo = new errors.InvalidData()\n    if cleartext != confirm\n      errorInfo.message = 'please type the same password twice'\n      errorInfo.errors.confirmPassword = 'must match the password'\n      return callback errorInfo\n    message = min4 cleartext\n    if message\n      errorInfo.message = message\n      errorInfo.errors.password = message\n      return callback errorInfo\n    self = this\n    bcrypt.gen_salt 10, (error, salt)-&gt;\n      if error\n        errorInfo = new errors.InternalError error.message\n        return callback errorInfo\n      bcrypt.encrypt cleartext, salt, (error, hash)-&gt;\n        if error\n          errorInfo = new errors.InternalError error.message\n          return callback errorInfo\n        self.attributes.bcryptedPassword = hash\n        return callback()\n\n  verifyPassword: (cleartext, callback) -&gt;\n    bcrypt.compare cleartext, @attributes.bcryptedPassword, (error, result)-&gt;\n      if error\n        return callback(new errors.InternalError(error.message))\n      callback null, result\n</code></pre>\n\n<p>Also, read <a href=\"http://codahale.com/how-to-safely-store-a-password/\">this article, which should convince you that bcrypt is a good choice</a> and help you avoid becoming \"well and truly effed\".</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>This is the best example I've come across to date, uses node.bcrypt.js\n<a href=\"http://devsmash.com/blog/password-authentication-with-mongoose-and-bcrypt\">http://devsmash.com/blog/password-authentication-with-mongoose-and-bcrypt</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I'm looking for some examples of how to securly store passwords and other sensitive data using node.js and mondodb.</p>\n\n<p>I want everything to use a unique salt that I will store along side the hash in the mongo document.</p>\n\n<p>For authentication would I just salt and encrypt the input and match it to a stored hash?</p>\n\n<p>Should I ever need to decrypt this data and if so how should I do it?</p>\n\n<p>How are the private keys, or even salting methods securely stored on the server?</p>\n\n<p>I've heard the AES and Blowfish are both good options, what should I use?</p>\n\n<p><strong>Any examples of how to design this would be wonderfully helpful!</strong></p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1348344367,
            "question_id": 6951563,
            "score": 43,
            "tags": [
                "javascript",
                "mongodb",
                "node.js",
                "cryptography",
                "aes"
            ],
            "title": "Storing passwords with Node.js and MongoDB"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You are looking for <a href=\"http://nodejs.org/api/all.html#all_child_process_exec_command_options_callback\">child_process.exec</a></p>\n\n<p>Here is the example:</p>\n\n<pre><code>var exec = require('child_process').exec,\n    child;\n\nchild = exec('cat *.js bad_file | wc -l',\n  function (error, stdout, stderr) {\n    console.log('stdout: ' + stdout);\n    console.log('stderr: ' + stderr);\n    if (error !== null) {\n      console.log('exec error: ' + error);\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You should take a look at the <a href=\"http://nodejs.org/api/child_process.html\">documentation</a>. To execute a command and fetch its complete output as a buffer, use <code>child_process.exec</code>:</p>\n\n<pre><code>var exec = require('child_process').exec;\nexec('prince -v builds/pdf/book.html -o builds/pdf/book.pdf', function (error, stdout, stderr) {\n  // output is in stdout\n});\n</code></pre>\n\n<p>To execute a command and receive output as streams, use <code>child_process.spawn</code>:</p>\n\n<pre><code>var spawn = require('child_process').spawn;\nvar child = spawn('prince', ['-v', 'builds/pdf/book.html', '-o', 'builds/pdf/book.pdf']);\n\nchild.stdout.on('data', function(chunk) {\n  // output here\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 55
                },
                {
                    "body": "<p>I just wrote a Cli helper to deal with Unix/windows easily.</p>\n\n<p><strong>Javascript:</strong></p>\n\n<pre><code>define([\"require\", \"exports\"], function (require, exports) {\n    /**\n     * Helper to use the Command Line Interface (CLI) easily with both Windows and Unix environments.\n     * Requires underscore or lodash as global through \"_\".\n     */\n    var Cli = (function () {\n        function Cli() {}\n            /**\n             * Execute a CLI command.\n             * Manage Windows and Unix environment and try to execute the command on both env if fails.\n             * Order: Windows -&gt; Unix.\n             *\n             * @param command                   Command to execute. ('grunt')\n             * @param args                      Args of the command. ('watch')\n             * @param callback                  Success.\n             * @param callbackErrorWindows      Failure on Windows env.\n             * @param callbackErrorUnix         Failure on Unix env.\n             */\n        Cli.execute = function (command, args, callback, callbackErrorWindows, callbackErrorUnix) {\n            if (typeof args === \"undefined\") {\n                args = [];\n            }\n            Cli.windows(command, args, callback, function () {\n                callbackErrorWindows();\n\n                try {\n                    Cli.unix(command, args, callback, callbackErrorUnix);\n                } catch (e) {\n                    console.log('------------- Failed to perform the command: \"' + command + '\" on all environments. -------------');\n                }\n            });\n        };\n\n        /**\n         * Execute a command on Windows environment.\n         *\n         * @param command       Command to execute. ('grunt')\n         * @param args          Args of the command. ('watch')\n         * @param callback      Success callback.\n         * @param callbackError Failure callback.\n         */\n        Cli.windows = function (command, args, callback, callbackError) {\n            if (typeof args === \"undefined\") {\n                args = [];\n            }\n            try {\n                Cli._execute(process.env.comspec, _.union(['/c', command], args));\n                callback(command, args, 'Windows');\n            } catch (e) {\n                callbackError(command, args, 'Windows');\n            }\n        };\n\n        /**\n         * Execute a command on Unix environment.\n         *\n         * @param command       Command to execute. ('grunt')\n         * @param args          Args of the command. ('watch')\n         * @param callback      Success callback.\n         * @param callbackError Failure callback.\n         */\n        Cli.unix = function (command, args, callback, callbackError) {\n            if (typeof args === \"undefined\") {\n                args = [];\n            }\n            try {\n                Cli._execute(command, args);\n                callback(command, args, 'Unix');\n            } catch (e) {\n                callbackError(command, args, 'Unix');\n            }\n        };\n\n        /**\n         * Execute a command no matters what's the environment.\n         *\n         * @param command   Command to execute. ('grunt')\n         * @param args      Args of the command. ('watch')\n         * @private\n         */\n        Cli._execute = function (command, args) {\n            var spawn = require('child_process').spawn;\n            var childProcess = spawn(command, args);\n\n            childProcess.stdout.on(\"data\", function (data) {\n                console.log(data.toString());\n            });\n\n            childProcess.stderr.on(\"data\", function (data) {\n                console.error(data.toString());\n            });\n        };\n        return Cli;\n    })();\n    exports.Cli = Cli;\n});\n</code></pre>\n\n<p><strong>Typescript original source file:</strong></p>\n\n<pre><code> /**\n * Helper to use the Command Line Interface (CLI) easily with both Windows and Unix environments.\n * Requires underscore or lodash as global through \"_\".\n */\nexport class Cli {\n\n    /**\n     * Execute a CLI command.\n     * Manage Windows and Unix environment and try to execute the command on both env if fails.\n     * Order: Windows -&gt; Unix.\n     *\n     * @param command                   Command to execute. ('grunt')\n     * @param args                      Args of the command. ('watch')\n     * @param callback                  Success.\n     * @param callbackErrorWindows      Failure on Windows env.\n     * @param callbackErrorUnix         Failure on Unix env.\n     */\n    public static execute(command: string, args: string[] = [], callback ? : any, callbackErrorWindows ? : any, callbackErrorUnix ? : any) {\n        Cli.windows(command, args, callback, function () {\n            callbackErrorWindows();\n\n            try {\n                Cli.unix(command, args, callback, callbackErrorUnix);\n            } catch (e) {\n                console.log('------------- Failed to perform the command: \"' + command + '\" on all environments. -------------');\n            }\n        });\n    }\n\n    /**\n     * Execute a command on Windows environment.\n     *\n     * @param command       Command to execute. ('grunt')\n     * @param args          Args of the command. ('watch')\n     * @param callback      Success callback.\n     * @param callbackError Failure callback.\n     */\n    public static windows(command: string, args: string[] = [], callback ? : any, callbackError ? : any) {\n        try {\n            Cli._execute(process.env.comspec, _.union(['/c', command], args));\n            callback(command, args, 'Windows');\n        } catch (e) {\n            callbackError(command, args, 'Windows');\n        }\n    }\n\n    /**\n     * Execute a command on Unix environment.\n     *\n     * @param command       Command to execute. ('grunt')\n     * @param args          Args of the command. ('watch')\n     * @param callback      Success callback.\n     * @param callbackError Failure callback.\n     */\n    public static unix(command: string, args: string[] = [], callback ? : any, callbackError ? : any) {\n        try {\n            Cli._execute(command, args);\n            callback(command, args, 'Unix');\n        } catch (e) {\n            callbackError(command, args, 'Unix');\n        }\n    }\n\n    /**\n     * Execute a command no matters what's the environment.\n     *\n     * @param command   Command to execute. ('grunt')\n     * @param args      Args of the command. ('watch')\n     * @private\n     */\n    private static _execute(command, args) {\n        var spawn = require('child_process').spawn;\n        var childProcess = spawn(command, args);\n\n        childProcess.stdout.on(\"data\", function (data) {\n            console.log(data.toString());\n        });\n\n        childProcess.stderr.on(\"data\", function (data) {\n            console.error(data.toString());\n        });\n    }\n}\n\nExample of use:\n\n    Cli.execute(Grunt._command, args, function (command, args, env) {\n        console.log('Grunt has been automatically executed. (' + env + ')');\n\n    }, function (command, args, env) {\n        console.error('------------- Windows \"' + command + '\" command failed, trying Unix... ---------------');\n\n    }, function (command, args, env) {\n        console.error('------------- Unix \"' + command + '\" command failed too. ---------------');\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I am in the process of porting a CLI library from Ruby over to NodeJS. In my code I execute several third party binaries when necessary. I am not sure how best to accomplish this in node/js.</p>\n\n<p>Here's an example in Ruby where I call princexml to convert to a pdf:</p>\n\n<pre><code>cmd = system(\"prince -v builds/pdf/book.html -o builds/pdf/book.pdf\")\n</code></pre>\n\n<p>I need to do the same thing node/js.</p>\n",
            "last_activity_date": 1423384528,
            "question_id": 20643470,
            "score": 37,
            "tags": [
                "javascript",
                "ruby",
                "node.js",
                "command-line-interface"
            ],
            "title": "execute a command line binary in node/js"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I have simple and dirty solution.<br>\nUse If else ...  </p>\n\n<pre><code>var marker = this.map.createMarker(view.latlng, this.markerNumber);\nthis.map.bounds.extend(view.latlng);\nthis.map.map.setCenter(this.map.bounds.getCenter()); \nif (this.markerNumber === 1) {\n  this.map.map.setZoom(16);\n} else {\n   this.map.map.fitBounds(this.map.bounds);\n}       \nthis.markerNumber++;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Alright, I've figured it out. Apparently, the fitbounds() happens asynchronously, so you have to wait for a <code>bounds_changed</code> event before setting zoom works.</p>\n\n<pre><code>map = this.map.map;\n\nmap.fitBounds(this.map.bounds);\nzoomChangeBoundsListener = \n    google.maps.event.addListenerOnce(map, 'bounds_changed', function(event) {\n        if (this.getZoom()){\n            this.setZoom(16);\n        }\n});\nsetTimeout(function(){google.maps.event.removeListener(zoomChangeBoundsListener)}, 2000);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>I just added one line to the function <code>addBounds(position)</code> and it fixed it, as the following shows:</p>\n\n<pre><code>    addBounds: function(position) {\n        this.get('bounds', new google.maps.LatLngBounds()).extend(this._latLng(position));\n        this.get('map').fitBounds(this.get('bounds'));\n        this.get('map').setZoom(16);//line added\n        return this;\n    },\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>google.maps.event.addListenerOnce(yourMap, 'bounds_changed', function(event) {\n  if (this.getZoom() &gt; 15) {\n    this.setZoom(15);\n  }\n});\n</code></pre>\n\n<p>This solution works better\u2026 instead of waiting on timeout to remove listener. Call this directly before using <code>fitBounds</code> (I believe calling after will work as well).</p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>I found the additional zoom to be a little jarring. If you set the maxZoom option before calling fitBounds (and then unset it in the callback) you can avoid it:</p>\n\n<pre><code>map.setOptions({\n    maxZoom: 10\n});\n\nmap.setCenter(new google.maps.LatLng(-89, -179)); // make sure it changes so the idle listener gets called back\n\nmap.fitBounds(bounds);\n\nvar listener = google.maps.event.addListenerOnce(map, \"idle\", function()\n{\n    map.setOptions({\n        maxZoom: 999\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm using fitBounds() to set the zoom level on my map too include all the markers currently displayed. However, when I have only one marker visible, the zoom level is 100% (... which zoom level 20 I think...). However, I don't want it to be that far zoomed in so the user can adjust the position of the marker without having to zoom out. </p>\n\n<p>I have the following code:</p>\n\n<pre><code>var marker = this.map.createMarker(view.latlng, this.markerNumber);\nthis.map.bounds.extend(view.latlng);\nthis.map.map.setCenter(this.map.bounds.getCenter());\nthis.map.map.fitBounds(this.map.bounds);\nif (this.markerNumber === 1) {\n  this.map.map.setZoom(16);\n}\nthis.markerNumber++;\n</code></pre>\n\n<p>where this.map.bounds was previously defined as:</p>\n\n<pre><code>this.map.bounds = new google.maps.LatLngBounds();\n</code></pre>\n\n<p>However, the problem I am having is that the line <code>this.map.map.setZoom(16);</code> doesn't work if I use <code>this.map.map.fitBounds(this.map.bounds);</code>, however, I know that line of code is correct because when I comment out the fitBound() line, the setZoom() magically starts functioning.</p>\n\n<p>Any ideas how I resolve this? I'm thinking of setting a maxZoom level as an alternative if I can't get this working.</p>\n",
            "last_activity_date": 1390041405,
            "question_id": 4523023,
            "score": 35,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3",
                "google-maps-markers"
            ],
            "title": "Using setZoom() after using fitBounds() with Google Maps API V3"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The difference is that a document fragment effectively disappears when you add it to the DOM. What happens is that all the child nodes of the document fragment are inserted at the location in the DOM where you insert the document fragment and the document fragment itself is not inserted. The fragment itself continues to exist but now has no children.</p>\n\n<p>This allows you to insert multiple nodes into the DOM at the same time:</p>\n\n<pre><code>var frag = document.createDocumentFragment();\nvar textNode = frag.appendChild(document.createTextNode(\"Some text\"));\nvar br = frag.appendChild(document.createElement(\"br\"));\nvar body = document.body;\nbody.appendChild(frag);\nalert(body.lastChild.tagName); // \"BR\"\nalert(body.lastChild.previousSibling.data); // \"Some text\"\nalert(frag.hasChildNodes()); // false\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 39
                }
            ],
            "body": "<p>I was <a href=\"http://www.nczonline.net/blog/2009/02/03/speed-up-your-javascript-part-4/\">reading about document fragments</a> and DOM reflow and wondered how <code>document.createDocumentFragment</code> differed from <code>document.createElement</code> as it looks like  neither of them exist in the DOM until I append them to a DOM element.</p>\n\n<p>I did a test (below) and all of them took exactly the same amount of time (about 95ms). At a guess this could possibly be due to there being no style applied to any of the elements, so no reflow maybe. </p>\n\n<p>Anyway, based on the example below, why should I use <code>createDocumentFragment</code> instead of <code>createElement</code> when inserting into the DOM and whats the differnce between the two.  </p>\n\n<pre><code>var htmz = \"&lt;ul&gt;\";\nfor (var i = 0; i &lt; 2001; i++) {\n    htmz += '&lt;li&gt;&lt;a href=\"#\"&gt;link ' + i + '&lt;/a&gt;&lt;/li&gt;';\n}\nhtmz += '&lt;ul&gt;';\n\n//createDocumentFragment\nconsole.time('first');\nvar div = document.createElement(\"div\");\ndiv.innerHTML = htmz;\nvar fragment = document.createDocumentFragment();\nwhile (div.firstChild) {\n    fragment.appendChild(div.firstChild);\n}\n$('#first').append(fragment);\nconsole.timeEnd('first');\n\n//createElement\nconsole.time('second');\nvar span = document.createElement(\"span\");\nspan.innerHTML = htmz;\n$('#second').append(span);\nconsole.timeEnd('second');\n\n\n//jQuery\nconsole.time('third');\n$('#third').append(htmz);\nconsole.timeEnd('third');\n</code></pre>\n",
            "last_activity_date": 1407073154,
            "question_id": 3397161,
            "score": 33,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "Should I use document.createDocumentFragment or document.createElement"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I happened to be looking for the same thing :)</p>\n\n<p>At this discussion on <a href=\"http://groups.google.com/group/google-maps-js-api-v3/browse_thread/thread/48a49b1481aeb64c?pli=1\">Google Groups</a> I discovered that basically when you do a fitBounds, the zoom happens \"asynchronously\" so you need to capture the zoom and bounds change event.  The code in the final post worked for me with a small modification... as it stands it stops you zooming greater than 15 completely, so used the idea from the fourth post to have a flag set to only do it the first time.</p>\n\n<pre><code>// Do other stuff to set up map\nvar map = new google.maps.Map(mapElement, myOptions);\n// This is needed to set the zoom after fitbounds, \ngoogle.maps.event.addListener(map, 'zoom_changed', function() {\n    zoomChangeBoundsListener = \n        google.maps.event.addListener(map, 'bounds_changed', function(event) {\n            if (this.getZoom() &gt; 15 &amp;&amp; this.initialZoom == true) {\n                // Change max/min zoom here\n                this.setZoom(15);\n                this.initialZoom = false;\n            }\n        google.maps.event.removeListener(zoomChangeBoundsListener);\n    });\n});\nmap.initialZoom = true;\nmap.fitBounds(bounds);\n</code></pre>\n\n<p>Hope that helps,</p>\n\n<p>Anthony.</p>\n",
                    "is_accepted": true,
                    "score": 57
                },
                {
                    "body": "<p>Without trying it, I'd say you should be able to do it just by having <code>fitBounds()</code> before you get the zoom level, i.e.</p>\n\n<pre><code>map.fitBounds(bounds);\nvar zoom = map.getZoom();\nmap.setZoom(zoom &gt; 6 ? 6 : zoom);\n</code></pre>\n\n<p>If you did try that and it didn't work, you can setup your map with <code>minZoom</code> in the <code>MapOptions</code> <sup><a href=\"http://code.google.com/apis/maps/documentation/javascript/reference.html#MapOptions\">(api-reference)</a></sup> like this:  </p>\n\n<pre><code>var map = new google.maps.Map(document.getElementById(\"map\"), { minZoom: 6 });\n</code></pre>\n\n<p>This would keep the map from zooming any further out when using <code>fitBounds()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Anthony's solution is very nice. I only needed to fix the zoom for the inital page load (ensuring that you weren't too far zoomed in to start with) and this did the trick for me: </p>\n\n<pre><code>var zoomChangeBoundsListener =\n    google.maps.event.addListener(map, 'bounds_changed', function(event) {\n        google.maps.event.removeListener(zoomChangeBoundsListener);\n        map.setZoom( Math.min( 15, map.getZoom() ) );\n    });\n\n\nmap.fitBounds( zoomBounds );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>In my case, I simply wanted to set the zoom level to one less than what google maps chose for me during fitBounds.  The purpose was to use fitBounds, but also ensure no markers were under any map tools, etc.  </p>\n\n<p>My map is created early and then a number of other dynamic components of the page have an opportunity to add markers, calling fitBounds after each addition.</p>\n\n<p>This is in the initial block where the map object is originally created...</p>\n\n<pre><code>var mapZoom = null;\n</code></pre>\n\n<p>Then this is added to each block where a marker is added, right before the map.fitBounds is called...</p>\n\n<pre><code>google.maps.event.addListenerOnce(map, 'bounds_changed', function() { \n    if (mapZoom != map.getZoom()) { \n        mapZoom = (map.getZoom() - 1); \n        map.setZoom(mapZoom); \n    } \n});\n</code></pre>\n\n<p>When using 'bounds_changed' without the check in place, the map zoomed out once for every marker regardless of whether it needed it or not. Conversely, when I used 'zoom_changed', I would sometimes have markers under map tools because the zoom didn't actually change. Now it is always triggered, but the check ensures that it only zooms out once and only when needed.</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>When you call map.fitBounds() on one item - the map may zoom in too closely.  To fix this, simply add 'maxZoom' to mapOptions...</p>\n\n<pre><code>var mapOptions = {\n  maxZoom: 15\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Since Google Maps V3 is event driven, you can tell the API to set back the zoom to a proper amount when the <em>zoom_changed</em> event triggers:</p>\n\n<pre><code>var initial = true\ngoogle.maps.event.addListener(map, \"zoom_changed\", function() {\n    if (initial == true){\n       if (map.getZoom() &gt; 11) {\n         map.setZoom(11);\n         initial = false;\n       }\n    }\n}); \n</code></pre>\n\n<p>I used <em>initial</em> to make the map not zooming too much when the eventual fitBounds is permorfed, but to let the user zoom as much as he/she wants. Without the condition any zoom event over 11 would be possible for the user.  </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can also set the maxZoom option just before calling fitBounds() and reset the value afterwards:</p>\n\n<pre><code>if(!bounds.isEmpty()) {\n    var originalMaxZoom = map.maxZoom;\n    map.setOptions({maxZoom: 18});\n    map.fitBounds(bounds);\n    map.setOptions({maxZoom: originalMaxZoom});\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm drawing a series of markers on a map (using v3 of the maps api).</p>\n\n<p>In v2, I had the following code:</p>\n\n<pre><code>  bounds = new GLatLngBounds();\n\n  ... loop thru and put markers on map ...\n  bounds.extend(point);\n  ... end looping\n\n  map.setCenter(bounds.getCenter());\n  var level = map.getBoundsZoomLevel(bounds);\n  if ( level == 1 ) \n    level = 5;\n  map.setZoom(level &gt; 6 ? 6 : level);\n</code></pre>\n\n<p>And that work fine to ensure that there was always an appropriate level of detail displayed on the map.</p>\n\n<p>I'm trying to duplicate this functionality in v3, but the setZoom and fitBounds don't seem to be cooperating:</p>\n\n<pre><code>... loop thru and put markers on the map\n  var ll = new google.maps.LatLng(p.lat,p.lng);\n  bounds.extend(ll);\n... end loop\n\nvar zoom = map.getZoom();\nmap.setZoom(zoom &gt; 6 ? 6 : zoom);\nmap.fitBounds(bounds);\n</code></pre>\n\n<p>I've tried different permutation (moving the fitBounds before the setZoom, for example) but nothing I do with setZoom seems to affect the map.  Am I missing something?  Is there a way to do this?</p>\n",
            "last_activity_date": 1404205134,
            "question_id": 2989858,
            "score": 33,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3",
                "fitbounds"
            ],
            "title": "Google Maps v3: Enforcing min. zoom level when using fitBounds"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here is the changeLocation example from this article <a href=\"http://www.yearofmoo.com/2012/10/more-angularjs-magic-to-supercharge-your-webapp.html#apply-digest-and-phase\">http://www.yearofmoo.com/2012/10/more-angularjs-magic-to-supercharge-your-webapp.html#apply-digest-and-phase</a></p>\n\n<pre><code>//be sure to inject $scope and $location\nvar changeLocation = function(url, forceReload) {\n  $scope = $scope || angular.element(document).scope();\n  if(forceReload || $scope.$$phase) {\n    window.location = url;\n  }\n  else {\n    //only use this if you want to replace the history stack\n    //$location.path(url).replace();\n\n    //this this if you want to change the URL and add it to the history stack\n    $location.path(url);\n    $scope.$apply();\n  }\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>I am doing the below for page redirection(from login to home page). I have to pass the user object also to the home page. so, i am using windows localstorage.</p>\n\n<pre><code>    $http({\n        url:'/login/user',\n        method : 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n          },\n        data: userData\n    }).success(function(loginDetails){\n        $scope.updLoginDetails = loginDetails;\n        if($scope.updLoginDetails.successful == true)\n            {\n                loginDetails.custId = $scope.updLoginDetails.customerDetails.cust_ID;\n                loginDetails.userName = $scope.updLoginDetails.customerDetails.cust_NM;\n                window.localStorage.setItem(\"loginDetails\", JSON.stringify(loginDetails));\n                $window.location='/login/homepage';\n            }\n        else\n        alert('No access available.');\n\n    }).error(function(err,status){\n        alert('No access available.');      \n    });\n</code></pre>\n\n<p>And it worked for me.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am attempting to make a simple authentication service by sending a Post to a php file, I need it to load the home page partial on my ng-view when its successful.</p>\n\n<p>This is what i tried :</p>\n\n<pre><code>function loginCtrl($scope, $http, $location){\n    $http.post(url,data).success(function(data){\n        $location.path('/home');\n    });\n}\n</code></pre>\n\n<p>Results in my url changing but <code>ng-view</code> not updating. it updates when i manually refresh the page.</p>\n\n<p>(routes have been configured properly at the <code>$routeProvider</code>, i have tested redirecting this with a standalone function not as a callback and it works )</p>\n\n<p>I have also tried defining <code>$location.path('/home')</code> as a function and then calling it on the callback it still doesn't work.</p>\n\n<p>I did some research and found some articles stating this happens when using another third party plugin, I am only loading angular.js</p>\n\n<p>Any insights or pointers to some study material will be great</p>\n",
            "last_activity_date": 1398867062,
            "question_id": 14301524,
            "score": 30,
            "tags": [
                "javascript",
                "model-view-controller",
                "angularjs"
            ],
            "title": "In Angular, how to redirect with $location.path as $http.post success callback"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>I was under the impression that jQuery did the whole opacity support thing for you.\nDoes this work for all browsers?</p>\n\n<pre><code>$('#list_box').animate({opacity: '1',height: '300px',top: newTop},{duration: 300});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Do you use some pngfix script ? that may be the culprit.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use <code>fadeTo</code> to accomplish what you want to do:</p>\n\n<pre><code>$('#list_box').fadeTo(\"slow\", 0.33);\n</code></pre>\n\n<p><code>fadeIn</code> and <code>fadeOut</code> do transitions from 0 to 100%, but the above will allow you to fade to an arbitrary opacity.</p>\n\n<p>(<a href=\"http://docs.jquery.com/Effects/fadeTo#speedopacitycallback\" rel=\"nofollow\">http://docs.jquery.com/Effects/fadeTo#speedopacitycallback</a>)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've been having the same problem. I stumbled into the answer, when I set the opacity to 40%:</p>\n\n<pre><code>$('#list_box').stop().animate({opacity: '.4'},\"slow\");\n</code></pre>\n\n<p>I noticed that made the opacity jump to 100%, then animate down to 40%. Eureka.</p>\n\n<p>So, now I explicitly set the opacity to zero before the animation:</p>\n\n<pre><code>$('#list_box').css({opacity:0}).stop().animate({opacity: '1'},\"slow\");\n</code></pre>\n\n<p>That animates smoothly, except the text still looks horrible in IE.</p>\n\n<p>To clean up the text, I removed the opacity from the css in IE after the animation. This seems to clear up the text quite a bit in IE6 and IE8.</p>\n\n<pre><code>$('#list_box').css({opacity:0}).stop().animate({opacity: '1'},\"slow\",function(){\n    //remove the opacity in IE\n    jQuery.each(jQuery.browser, function(i) {\n        if($.browser.msie){\n            $('#list_box').css({opacity:''});\n        }\n    });\n});\n</code></pre>\n\n<p>I'm testing it on a Mac in Parallels, in IE6 and IE8. Everything seems to work fine on the Mac side.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You do not need to write a special handler for IE, jQuery does it all for you behind the scenes:</p>\n\n<pre><code>jQuery('#list_box').animate({opacity: '1',height: '300px',top: newTop}, 300);\n</code></pre>\n\n<p><strong>HOWEVER</strong>: If you have a 24-bit transparent PNG as your background image that is disappearing, you need to be aware that you cannot combine <code>filter: alpha</code> (which jQuery correctly uses behind the scenes in IE) with a 24-bit transparent PNG in IE7 or IE8. I believe the only way around it is to set a background color (other than <code>transparent</code>) on the object on which you are using <code>filter: alpha</code></p>\n\n<p><strong>How to test</strong>: Simply set a background color on <code>#list_box</code> to a solid color by adding something like this to your CSS <em>after</em> your <code>background-image</code> declaration:</p>\n\n<pre><code>#list_box { background-color: red }\n</code></pre>\n\n<p>If the background image remains, and your <code>#list_box</code> animates correctly (except for the hideous background) you know what the problem is and will have to find another way to accomplish what you want.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>In jQuery, once the div is set to have either opacity:0 (in Standards Compliant Browsers) or filter:alpha(opacity=0) in IE, you can just use <pre>$('#div').animate({opacity:1},100);</pre> Since jQuery supports cross-browser support, if you end up animating the filter via IE, then chances are jQuery is trying to support IE and the conflict comes when jQuery fires the opacity change x2. </p>\n\n<p>I hope this helps. I have had the same issue, plus odd issues with IE not being able to handle fading on a div stack with multiple items in it. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Very (very) late with the answer, but as this is at the top of Google when I looked for help with a jquery v animate issue in IE8 I thought i'd post it here.</p>\n\n<p>My problem was connected to the hasLayout bug in IE, and adding \"display: inline-block\" to the element to be faded fixed the problem.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Ok this might help a little bit, I found a solution in this site about the exact problem <a href=\"http://blog.bmn.name/2008/03/jquery-fadeinfadeout-ie-cleartype-glitch/\" rel=\"nofollow\">http://blog.bmn.name/2008/03/jquery-fadeinfadeout-ie-cleartype-glitch/</a></p>\n\n<p>in conclusion, the general problem is the opacity filter on IE, in your specific case there is not much you can do, thought</p>\n\n<p>but in case you fade in and out, the prevent the problem with a png background image you just have to remove the filter attribute the jQuery function added whe the fx ends. Just use a callback function, something like that would do it:</p>\n\n<pre><code>$('#node').fadeOut('slow', function() {&lt;br/&gt;\n    this.style.removeAttribute('filter');&lt;br/&gt;\n});\n</code></pre>\n\n<p>in case you selectors returns more than one, use the each function, something like this:</p>\n\n<pre><code>$('.nodes').fadeIn('fast',\n    function() {\n        $(this).each (\n            function(idx,el) {\n                el.style.removeAttribute('filter');\n             }\n        );\n     }\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had the same sort of issue with this:</p>\n\n<pre><code>$('#nav li').hover(function() {\n $(this).stop().animate({opacity: '0.4'}, 'slow');\n},\nfunction() {\n $(this).stop().animate({opacity: '1'}, 'slow');\n});\n</code></pre>\n\n<p>I simply added float:left; to the #nav li css and it fixed the issue.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I\u00b4ve had the same problem with the IE 7,\nthe problem was a trailing comma after the opacity property</p>\n\n<pre><code>jQuery(this).animate({opacity:1.00,},800);\n</code></pre>\n\n<p>It has to be:</p>\n\n<pre><code>jQuery(this).animate({opacity:1.00},800);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I found a solution that worked for me: <code>position:inline-block;</code>\nThis works for fading text opacity, I haven't tried it with a CSS background image. Maybe it helps anyway.</p>\n\n<blockquote>\n  <p>I just wanted to report a small bug with fadeTo method in Internet Explorer 8. It won't work if your element as \"display\" set to \"inline\". I found that you need to put it to \"inline-block\" and then it works perfectly. There is nothing about this on the web and it's not the first time I have this problem.</p>\n  \n  <p>Don't know if it's the right way to report this issue, but i'm sure someone will read this post :)</p>\n</blockquote>\n\n<p>found at <a href=\"http://www.devcomments.com/IE-8-fadeTo-problem-with-inline-elements-to65024.htm\" rel=\"nofollow\">http://www.devcomments.com/IE-8-fadeTo-problem-with-inline-elements-to65024.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Same problem with IE8. Adding \"display: inline-block\" to <strong>.hover2</strong> in fixed the problem.</p>\n\n<pre><code>$(function() {\n\n        $(\".hover1\").css(\"opacity\",\"1.0\"); // Default set opacity to 1.0\n\n        // On Mouse over\n        $(\".hover1\").hover( \n                            function () {\n\n                                        // SET OPACITY TO 15%\n                                        $(\"span.hover2\").stop().animate({opacity: 0.15}, 1200);\n                                        },\n\n                                        // ON MOUSE OUT\n                            function () {\n\n                                        // SET OPACITY BACK TO 100%\n                                        $(\"span.hover2\").stop().animate({opacity: 1.0}, 1200);\n                                        }\n                         );\n                }\n     );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I noticed the problem was caused by position:relative of the container. If \"switching\" to absolute opacity animation will work.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I solved it with adding an opaque background to the animated element:</p>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>.overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 195px;\n    height: 274px;\n    cursor: pointer;\n    background: #fff url('../images/common/image_hover.png') 0 0 no-repeat; /* the solution */\n    opacity: 0;\n    -ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\"; /* IE8 */\n    filter: alpha(opacity=0); /* IE6-7 */     \n    zoom: 1;\n}\n</code></pre>\n\n<p><strong>JS:</strong></p>\n\n<pre><code>$('.overlay').hover(\n    function(){\n        $(this).animate({'opacity': 0.7}, 300);\n    },\n    function(){\n        $(this).animate({'opacity': 0}, 250);\n    }\n);\n</code></pre>\n\n<p>Works for IE7-8</p>\n\n<p>Hope this will help someone ;)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm trying to use <code>animate()</code> to change the height and opacity of a <code>div</code>. The div has an image background in CSS. It works fine on Firefox and Safari, but when I test it in IE the background is being removed. This is my code:</p>\n\n<pre><code>if (jQuery.support.opacity) {\n    jQuery('#list_box').animate({opacity: '1',height: '300px',top: newTop},{duration: 300});\n} else {\n    jQuery('#list_box').animate({filter: 'alpha(opacity=100)',height: '300px',top: newTop},{duration: 300});\n}\n</code></pre>\n\n<p>How can I fix this problem?</p>\n",
            "last_activity_date": 1411479275,
            "question_id": 1375646,
            "score": 29,
            "tags": [
                "javascript",
                "jquery",
                "internet-explorer",
                "animation"
            ],
            "title": "Animate opacity doesn&#39;t work properly on IE"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try <a href=\"http://scriptsharp.com/\" rel=\"nofollow\">Script#</a>. It even has jQuery &amp; unit testing support for JavaScript - from C#.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You should be aware, that for many problems/projects, what you are proposing makes little sense. However, if you would like to code your Javascript in C#, this is the best tool I know for the job: <a href=\"http://scriptsharp.com/\" rel=\"nofollow\">http://scriptsharp.com/</a></p>\n\n<p>If you want this because you dislike Javascripts syntax, verbosity, classes, and type rules (or lack thereof); perhaps you should also look at <a href=\"http://coffeescript.org/\" rel=\"nofollow\">CoffeeScript</a>. CoffeeScript is all the good things in Javascript, and it compiles to Javascript.</p>\n\n<h1>Edited 2013-05-26</h1>\n\n<p>Anyone reading this answer now, should also be aware of <a href=\"http://www.typescriptlang.org/\" rel=\"nofollow\">TypeScript</a>, especially if the motivation is better types and type safety.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Script#:\n<a href=\"http://scriptsharp.com/\" rel=\"nofollow\">http://scriptsharp.com/</a></p>\n\n<p>Have followed this for a while as it was pretty compelling to me a couple of years ago.  The guy is brilliant and its a legit project, check it out.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here a <a href=\"https://github.com/jashkenas/coffee-script/wiki/List-of-languages-that-compile-to-JS\">list of languages that compile to javascript</a>, including a few c# options.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I'm looking for good engine, capable of translate C# source code to JavaScript-analog.</p>\n",
            "last_activity_date": 1417791243,
            "question_id": 7667327,
            "score": 27,
            "tags": [
                "c#",
                "javascript",
                ".net",
                "source-to-source"
            ],
            "title": "Best C# to JavaScript translator"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It's using HTML5 speech input via <code>&lt;input type=\"text\" x-webkit-speech /&gt;</code></p>\n\n<p>as the name suggests, this only works in webkit. Not sure if there are alternatives for other browsers.</p>\n\n<p>See <a href=\"http://jsfiddle.net/xYB3n/\">http://jsfiddle.net/xYB3n/</a></p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>It's available to anyone.  There's more information here:</p>\n\n<p><a href=\"http://chrome.blogspot.com/2011/04/everybodys-talking-and-translating-with.html\">http://chrome.blogspot.com/2011/04/everybodys-talking-and-translating-with.html</a></p>\n\n<p>and an example here:\n<a href=\"http://www.web2voice.com/chrome-speech-input.html\">http://www.web2voice.com/chrome-speech-input.html</a></p>\n\n<p>I'm glad I'm not the only one who thinks the lack of a permissions prompt feels a little bit big-brother-esque.  </p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>A nice wrapper for the Web Speech API is available here: <a href=\"https://www.talater.com/annyang/\" rel=\"nofollow\">talater.com/annyang</a>.</p>\n\n<p>This library allows you to easily bind functions to voice commands, eg:</p>\n\n<pre><code>annyang.init({\n    \"help\": function() {$(\"#help\").show();}\n});\nannyang.start();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm not sure if this is the right site for this question, but I was wondering how the voice activated search on Google's homepage works. Does it use Flash, some kind of plugin built into Google Chrome, or how does it use the microphone? This could be a dangerous privacy invasion if it is allowed to work the same way on any website, because no dialog asking for permission comes up, and I find this startling that Google (and who knows what other sites) can use my microphone without my permission. How is Google doing this? Javascript? Actionscript? Some custom plugin?</p>\n",
            "last_activity_date": 1424900691,
            "question_id": 6389039,
            "score": 26,
            "tags": [
                "javascript",
                "html",
                "voice-recognition"
            ],
            "title": "How Google Voice Search works? Is there an API for that?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You can do this <code>---&gt;</code> <a href=\"http://jsfiddle.net/chY5y/\" rel=\"nofollow\">http://jsfiddle.net/chY5y/</a></p>\n\n<pre><code>$('body').append(yourVariable); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try:</p>\n\n<pre><code>document.getElementById('element').innerHTML = ...;\n</code></pre>\n\n<p>Fiddle: <a href=\"http://jsfiddle.net/HKhw8/\">http://jsfiddle.net/HKhw8/</a></p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Might not do what you do, but you can type</p>\n\n<pre><code>console.log(string)\n</code></pre>\n\n<p>And it will print the string into the console of your <em>browser</em>. In chrome push <kbd>CTRL</kbd> + <kbd>SHIFT</kbd> + <kbd>J</kbd> to open the console.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><a href=\"http://jsfiddle.net/IQAndreas/qsPEc/1/\">I have a template for this purpose</a>; here is the code I use:</p>\n\n<h2>HTML</h2>\n\n<pre><code>&lt;pre id=\"output\"&gt;&lt;/pre&gt;\n</code></pre>\n\n<h2>JavaScript</h2>\n\n<pre><code>function out()\n{\n    var args = Array.prototype.slice.call(arguments, 0);\n    document.getElementById('output').innerHTML += args.join(\" \") + \"\\n\";\n}\n</code></pre>\n\n<h2>Sample use (JavaScript)</h2>\n\n<pre><code>out(\"Hello world!\");\nout(\"Your lottery numbers are:\", Math.random(), 999, Math.PI);\nout(\"Today is\", new Date());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Use the <code>alert()</code> function:</p>\n\n<pre><code>alert(variable name);\nalert(\"Hello World\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>To be able to see output from console.log() in JSFiddle, go to External Resources on the left-side panel and add the following link for Firebug:</p>\n\n<p><a href=\"https://getfirebug.com/firebug-lite-debug.js\">https://getfirebug.com/firebug-lite-debug.js</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/yfMZe.jpg\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 84
                },
                {
                    "body": "<p>Here's one alternative: <a href=\"http://jsfiddle.net/skibulk/erh7m9og/1/\" rel=\"nofollow\">http://jsfiddle.net/skibulk/erh7m9og/1/</a></p>\n\n<pre><code>document.write = function (str) {\n    document.body.insertAdjacentHTML(\"beforeend\", str);\n}\n\ndocument.write(\"\u00a1hola mundo\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just to add something that might be useful to some folks....</p>\n\n<p>If you add the debugger console as shown above, you can access the scope by executing this:</p>\n\n<p>scope = angular.element(document.querySelector('[ng-controller=MyCtrl]')).scope();</p>\n\n<p>I find inspecting the scope directly easier than console.log, alert(), etc.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How would I print something out to the result screen in JsFiddle from my js. I can't use document.write(), it doesn't allow it -- neither print -- what do I use!</p>\n",
            "last_activity_date": 1425236962,
            "question_id": 17382200,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "jsfiddle"
            ],
            "title": "Print out a var in JsFiddle"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>The Bootstrap Collapse has some Events that you can react to:</p>\n\n<pre><code>$(document).ready(function(){    \n    $('#accordProfile').on('shown', function () {\n       $(\".icon-chevron-down\").removeClass(\"icon-chevron-down\").addClass(\"icon-chevron-up\");\n    });\n\n    $('#accordProfile').on('hidden', function () {\n       $(\".icon-chevron-up\").removeClass(\"icon-chevron-up\").addClass(\"icon-chevron-down\");\n    });\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Added to @muffls answer so that this works with all twitter bootstrap collapse and makes the change to the arrow before the animatation starts.</p>\n\n<pre><code>$('.collapse').on('show', function(){\n    $(this).parent().find(\".icon-chevron-left\").removeClass(\"icon-chevron-left\").addClass(\"icon-chevron-down\");\n}).on('hide', function(){\n    $(this).parent().find(\".icon-chevron-down\").removeClass(\"icon-chevron-down\").addClass(\"icon-chevron-left\");\n});\n</code></pre>\n\n<p>Depending on your HTML structure you may need to modify the <code>parent()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I think the best codes are these:</p>\n\n<pre><code>  $('#accordion1').collapse({\n    toggle: false\n  }).on('show',function (e) {\n        $(e.target).parent().find(\".icon-chevron-down\").removeClass(\"icon-chevron-down\").addClass(\"icon-chevron-up\");\n      }).on('hide', function (e) {\n        $(e.target).parent().find(\".icon-chevron-up\").removeClass(\"icon-chevron-up\").addClass(\"icon-chevron-down\");\n      });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Here is my solution which is further refined from one posted by @john-magnolia and solves some of its issues</p>\n\n<pre><code>/**\n * Toggle on/off arrow for Twitter Bootstrap collapsibles.\n *\n * Multi-collapsible-friendly; supports several collapsibles in the same group, on the same page.\n */\nfunction animateCollapsibles() {\n\n    $('.collapse').on('show', function() {\n        var $t = $(this);\n        var header = $(\"a[href='#\" + $t.attr(\"id\") + \"']\");\n        header.find(\".icon-chevron-right\").removeClass(\"icon-chevron-right\").addClass(\"icon-chevron-down\");\n    }).on('hide', function(){\n        var $t = $(this);\n        var header = $(\"a[href='#\" + $t.attr(\"id\") + \"']\");\n        header.find(\".icon-chevron-down\").removeClass(\"icon-chevron-down\").addClass(\"icon-chevron-right\");\n    });\n}\n</code></pre>\n\n<p>And here is the example markup:</p>\n\n<pre><code>&lt;div class=\"accordion\" id=\"accordion-send\"&gt;\n    &lt;div class=\"accordion-group\"&gt;\n        &lt;div class=\"accordion-heading\"&gt;\n            &lt;a class=\"accordion-toggle\" data-toggle=\"collapse\" data-parent=\"#accordion-send\" href=\"#collapse-refund\"&gt;\n                &lt;i class=\"icon icon-chevron-right\"&gt;&lt;/i&gt; Send notice\n            &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div id=\"collapse-refund\" class=\"accordion-body collapse\"&gt;\n            &lt;div class=\"accordion-inner\"&gt;\n                &lt;p&gt;Lorem ipsum Toholampi city&lt;/p&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is my approach for Bootstrap 2.x. It is just some css. No JavaScript needed:</p>\n\n<pre><code>    .accordion-caret .accordion-toggle:hover {\n        text-decoration: none;\n    }\n    .accordion-caret .accordion-toggle:hover span,\n    .accordion-caret .accordion-toggle:hover strong {\n        text-decoration: underline;\n    }\n    .accordion-caret .accordion-toggle:before {\n        font-size: 25px;\n        vertical-align: -3px;\n    }\n    .accordion-caret .accordion-toggle:not(.collapsed):before {\n        content: \"\u25be\";\n        margin-right: 0px;\n    }\n    .accordion-caret .accordion-toggle.collapsed:before {\n        content: \"\u25b8\";\n        margin-right: 0px;\n    }\n</code></pre>\n\n<p>Just add class <em>accordion-caret</em> to the accordion-group div, like this:</p>\n\n<pre><code>&lt;div class=\"accordion-group accordion-caret\"&gt;\n    &lt;div class=\"accordion-heading\"&gt;\n        &lt;a class=\"accordion-toggle\" data-toggle=\"collapse\" href=\"#collapseOne\"&gt;\n            &lt;strong&gt;Header&lt;/strong&gt;\n        &lt;/a&gt;\n    &lt;/div&gt;\n    &lt;div id=\"collapseOne\" class=\"accordion-body collapse in\"&gt;\n        &lt;div class=\"accordion-inner\"&gt;\n            Content\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Here it's the answer for those who are looking for a solution in Bootstrap 3(like myself).</p>\n\n<h2>The HTML part:</h2>\n\n<pre><code>&lt;div class=\"btn-group\"&gt;\n  &lt;button type=\"button\" class=\"btn btn-danger\"&gt;Action&lt;/button&gt;\n  &lt;button type=\"button\" class=\"btn btn-danger\" data-toggle=\"collapse\" data-target=\"#demo\"&gt;\n    &lt;span class=\"glyphicon glyphicon-minus\"&gt;&lt;/span&gt;\n  &lt;/button&gt;\n&lt;/div&gt;\n&lt;div id=\"demo\" class=\"collapse in\"&gt;Some dummy text in here.&lt;/div&gt;\n</code></pre>\n\n<h2>The js part:</h2>\n\n<pre><code>$('.collapse').on('shown.bs.collapse', function(){\n$(this).parent().find(\".glyphicon-plus\").removeClass(\"glyphicon-plus\").addClass(\"glyphicon-minus\");\n}).on('hidden.bs.collapse', function(){\n$(this).parent().find(\".glyphicon-minus\").removeClass(\"glyphicon-minus\").addClass(\"glyphicon-plus\");\n});\n</code></pre>\n\n<hr>\n\n<h2>Example accordion:</h2>\n\n<p><a href=\"http://bootply.com/89084\">Bootply accordion example</a></p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>If anyone is interested this is how you do it with BS3 since they changed the event names:</p>\n\n<pre><code>$('.collapse').on('show.bs.collapse', function(){\n  var i = $(this).parent().find('i')\n  i.toggleClass('fa-caret-right fa-caret-down');\n}).on('hide.bs.collapse', function(){\n  var i = $(this).parent().find('i')\n  i.toggleClass('fa-caret-down fa-caret-right');\n});\n</code></pre>\n\n<p>You simply change the class names in the example to the ones you use in your case.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>@RobSadler:</p>\n\n<p>RE Martin Wickman's CSS only version...</p>\n\n<p>You can get around that problem by putting accordion-caret on the anchor tag and giving it a collapsed class by default.  Like so:</p>\n\n<pre><code>&lt;div class=\"accordion-group\"&gt;\n&lt;div class=\"accordion-heading\"&gt;\n    &lt;a class=\"accordion-toggle accordion-caret collapsed\" data-toggle=\"collapse\" href=\"#collapseOne\"&gt;\n        &lt;strong&gt;Header&lt;/strong&gt;\n    &lt;/a&gt;\n&lt;/div&gt;\n&lt;div id=\"collapseOne\" class=\"accordion-body collapse in\"&gt;\n    &lt;div class=\"accordion-inner\"&gt;\n        Content\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p></p>\n\n<p>That worked for me.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A bootstrap v3 solution (where the events have different names), also using only one jQuery selector (as seen <a href=\"http://stackoverflow.com/a/14928493/637423\">here</a>):</p>\n\n<pre><code>$('.accordion').on('hide.bs.collapse show.bs.collapse', function (n) {\n    $(n.target).siblings('.panel-heading').find('i.glyphicon').toggleClass('glyphicon-chevron-down glyphicon-chevron-up');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use CSSes pseudo-selector :after using Bootstrap 3's integrated Glyphicons for a <strong>no JS answer</strong> with minor modification to your HTML...</p>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>.panel-heading [data-toggle=\"collapse\"]:after\n{\n    font-family: 'Glyphicons Halflings';\n    content: \"\\e072\"; /* \"play\" icon */\n    float: right;\n    color: #b0c5d8;\n    font-size: 18px;\n    line-height: 22px;\n\n    /* rotate \"play\" icon from &gt; (right arrow) to down arrow */\n    -webkit-transform: rotate(-90deg);\n    -moz-transform:    rotate(-90deg);\n    -ms-transform:     rotate(-90deg);\n    -o-transform:      rotate(-90deg);\n    transform:         rotate(-90deg);\n}\n.panel-heading [data-toggle=\"collapse\"].collapsed:after\n{\n    /* rotate \"play\" icon from &gt; (right arrow) to ^ (up arrow) */\n    -webkit-transform: rotate(90deg);\n    -moz-transform:    rotate(90deg);\n    -ms-transform:     rotate(90deg);\n    -o-transform:      rotate(90deg);\n    transform:         rotate(90deg);\n}\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<p>Add <code>class=\"collapsed\"</code> to any anchor tags that are closed by default.</p>\n\n<p>This will turn anchors such as</p>\n\n<pre><code>&lt;a data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#collapseTwo\"&gt;\n</code></pre>\n\n<p>into</p>\n\n<pre><code>&lt;a class=\"collapsed\" data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#collapseTwo\"&gt;\n</code></pre>\n\n<p><strong>CodePen Live Example</strong></p>\n\n<p><a href=\"http://codepen.io/anon/pen/GJqmF\" rel=\"nofollow\">http://codepen.io/anon/pen/GJqmF</a></p>\n\n<p><strong>Screenshot</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/1y7nm.png\" alt=\"How it appears in JSBin\"></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For Bootstrup 3.2 + FontAwesome</p>\n\n<pre><code>$(document).ready(function(){    \n    $('#accordProfile').on('shown.bs.collapse', function () {\n       $(\".fa-chevron-down\").removeClass(\"fa-chevron-down\").addClass(\"fa-chevron-up\");\n    });\n\n    $('#accordProfile').on('hidden.bs.collapse', function () {\n       $(\".fa-chevron-up\").removeClass(\"fa-chevron-up\").addClass(\"fa-chevron-down\");\n    });\n});\n</code></pre>\n\n<p>Sometimes you have to write so. If so\n    \n    \n     </p>\n\n<pre><code>$('.collapsed span').removeClass('fa-minus').addClass('fa-plus');\n</code></pre>\n\n<p>Automatically generated (class=\"collapsed\"), when you press the hide menu.</p>\n\n<p>ps when you need to create a tree menu</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've set up this simple version of the Bootstrap <a href=\"http://twitter.github.com/bootstrap/javascript.html#collapse\">accordion</a>:</p>\n\n<p><strong>Simple accordion:</strong>\n<a href=\"http://jsfiddle.net/darrenc/cngPS/\">http://jsfiddle.net/darrenc/cngPS/</a></p>\n\n<p>Currently the icon only points <strong>down</strong>, but does anyone know what JS would be needed to be implemented so as to change the class of the icon to:</p>\n\n<pre><code>&lt;i class=\"icon-chevron-up\"&gt;&lt;/i&gt;\n</code></pre>\n\n<p>...so that it points <strong>up</strong> when <strong>expanded</strong> and toggles back to <strong>down</strong> again when collapsed, and so fourth?</p>\n\n<p>Hmm...</p>\n\n<p>Thanks for your time! :-)</p>\n\n<p>Darren</p>\n",
            "last_activity_date": 1414794680,
            "question_id": 13778703,
            "score": 24,
            "tags": [
                "javascript",
                "jquery",
                "twitter-bootstrap"
            ],
            "title": "Adding open/closed icon to Twitter Bootstrap collapsibles (accordions)"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Yes, in today's browsers, files referenced are being loaded non-blocking way. But there are differences:</p>\n\n<ul>\n<li>ready event appears sooner if you put \"things that you do not need to wait for\" for dynamic load, as you can see from the timing of the blue bar. So actions in the page may start sooner.</li>\n<li>scripts that are loaded from the text in the page (as opposed from dynamic loading) are executed in order. So they must wait for each other, if someone is loading longer. Dynamically loaded scripts, on other way, do execute as soon as possible unless put <code>.async=false</code> to script element.</li>\n</ul>\n\n<p>So, on contemporary browsers, the difference is only semantical (static load simulates old sequential way, dynamic is much more parallel).</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>It depends of how many files you want to load in the same time. In your case you are using 3 JavaScript files. Different browsers have different limits, so it's mean when you have for example 7 JavaScript files in Frefox 7th will be loaded after 6 have finished, since Firefox has limit 6 parallel downloads.</p>\n\n<p>Using scripts or loading scitps just before  tag is still good approach. Try to repeat your test with more JavaScript files, like 10 or so.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am playing a little with some non-blocking JavaScript loading. This means I have a small snippet of JavaScript in my <code>head</code>, and load all my external files at runtime. I even took it a little further to load CSS non-blocking.</p>\n\n<p>I see the articles I could find are a little outdated, that is why I want to know if this is all still relevant.</p>\n\n<p>Now first the scripts, they look like this:</p>\n\n<pre><code>&lt;script&gt;\n(function () {\n    var styles = JSON.parse(myObject.styles);\n    for( name in styles ){\n        var link  = document.createElement('link');\n        link.setAttribute('rel', 'stylesheet');\n        link.setAttribute('type', 'text/css');\n        link.setAttribute('href', styles[name]);\n        document.getElementsByTagName('head')[0].appendChild(link);\n    }\n\n    var scripts = JSON.parse(myObject.scripts);\n    for( name in scripts ){\n        var e = document.createElement('script');\n        e.src = scripts[name];\n        e.async = true;\n        document.getElementsByTagName('head')[0].appendChild(e);\n    }\n}());\n&lt;/script&gt;\n</code></pre>\n\n<p><code>myObject.styles</code> is here just an object that holds all the urls for all the files.</p>\n\n<p>I have run 3 test, here are the results:</p>\n\n<h2>Normal setup</h2>\n\n<p><img src=\"http://i.stack.imgur.com/fW8PS.png\" alt=\"Page load with css in the head and javascript at the bottom\"></p>\n\n<p>This is just the normal setup, we have 4 css files in the head, and 3 js files at the bottom of the page.</p>\n\n<p>Now I do not see anything blocking. What I see it that everything is loading at the same time.</p>\n\n<h2>Non-blocking JS</h2>\n\n<p><img src=\"http://i.stack.imgur.com/TvduB.png\" alt=\"Page load with non-blocking javascript\"></p>\n\n<p>Now to take this a little further, I have made ONLY the js files non-blocking. This with the script above. I suddenly see that my css files are blocking up the load. This is strange, because it is not blocking anything in the first example. <strong>Why is css suddenly blocking the load ?</strong></p>\n\n<h2>Everything non-blocking</h2>\n\n<p><img src=\"http://i.stack.imgur.com/9whIu.png\" alt=\"Page load with everything non-blocking\"></p>\n\n<p>Finally I did a test where all the external files are loaded in a non-blocking way. Now I do not see any difference with our first method. They just both look the same.</p>\n\n<h2>Conclusion</h2>\n\n<p>My conclusion is that the files are already loaded in a non-blocking way, I do not see a need to add special script.</p>\n\n<p>Or am I missing something here?</p>\n\n<h2>More:</h2>\n\n<ul>\n<li>Article: <a href=\"http://www.yuiblog.com/blog/2008/07/22/non-blocking-scripts/\" rel=\"nofollow\">http://www.yuiblog.com/blog/2008/07/22/non-blocking-scripts/</a></li>\n<li>Question: <a href=\"http://stackoverflow.com/questions/6828271/javascript-non-blocking-scripts-why-dont-simply-put-all-scripts-before-body\">Javascript non-blocking scripts, why don&#39;t simply put all scripts before &lt;/body&gt; tag?</a></li>\n<li>Question: <a href=\"http://stackoverflow.com/questions/5765113/do-modern-browsers-still-limit-parallel-downloads\">Do modern browsers still limit parallel downloads?</a></li>\n<li>Code: <a href=\"http://calendar.perfplanet.com/2010/the-truth-about-non-blocking-javascript/\" rel=\"nofollow\">http://calendar.perfplanet.com/2010/the-truth-about-non-blocking-javascript/</a></li>\n<li>Code: <a href=\"http://blog.fedecarg.com/2011/07/12/javascript-asynchronous-script-loading-and-lazy-loading/\" rel=\"nofollow\">http://blog.fedecarg.com/2011/07/12/javascript-asynchronous-script-loading-and-lazy-loading/</a></li>\n</ul>\n",
            "last_activity_date": 1386589874,
            "question_id": 8197072,
            "score": 24,
            "tags": [
                "javascript",
                "nonblocking"
            ],
            "title": "Non-blocking javascript and css in modern browsers. Is it still needed?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>(set! *unchecked-math* true)\n\n(defn add-up ^long [^long n]\n  (loop [n n i 0 sum 0]\n    (if (&lt; n i)\n      sum\n      (recur n (inc i) (+ i sum)))))\n\n(defn fib ^long [^long n]\n  (if (&lt;= n 1) 1\n      (+ (fib (dec n)) (fib (- n 2)))))\n\n(comment\n  ;; ~130ms\n  (dotimes [_ 10]\n    (time\n     (add-up 1e8)))\n\n  ;; ~1180ms\n  (dotimes [_ 10]\n    (time\n     (fib 41)))\n  )\n</code></pre>\n\n<p>All numbers from 2.66ghz i7 Macbook Pro OS X 10.7 JDK 7 64bit</p>\n\n<p>As you can see Node.js is trounced. This is with 1.3.0 alphas, but you can achieve the same thing in 1.2.0 if you know what you're doing.</p>\n\n<p>On my machine Node.js 0.4.8 for addup 1e8 was ~990ms, for fib 41 ~7600ms.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>Couple of hints, assuming you're using clojure 1.2</p>\n\n<ul>\n<li>repeating the (time ...) tests is likely to gain higher speeds in clojure, because of JIT optimizations kicking in.</li>\n<li>(inc i) is - a little - faster than (+ i 1)</li>\n<li>the unchecked-* functions are also faster (sometimes MUCH faster) than their checked variants. Assuming you don't need to exceed the limit of longs or doubles, using unchecked-add, unchecked-int etc could be a lot faster.</li>\n<li>read up on type declarations; in some cases, they can also improve speed substantially.</li>\n</ul>\n\n<p>Clojure 1.3 is generally faster with numerics than 1.2, but it's still under development.</p>\n\n<p>The following is about 20 times faster than your version, and it can still be improved by modifying the algorithm (counting down, like the js version does, instead of up saves a binding).</p>\n\n<pre><code>(defn add-up-faster\n  \"Adds up numbers from 1 to n\"\n  ([n] (add-up-faster n 0 0))\n  ([^long n ^long i ^long sum] \n    (if (&lt; n i)\n      sum\n      (recur n (unchecked-inc i) (unchecked-add i sum)))))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>A high-level comment. Node.js and Clojure have completely different models for attaining scalability and eventually making software run fast.</p>\n\n<p>Clojure achieves scalability through multi-core parallelism. If you build your Clojure programs correctly, you can divvy up your computational work (via <code>pmap</code>, etc.) to ultimately run in parallel on separate cores.</p>\n\n<p>Node.js is not parallel. Rather its key insight is that scalability (usually in a web application environment) is I/O bound. So Node.js and Google V8 technology attain scalability via many asynchronous I/O callbacks.</p>\n\n<p>Theoretically, I would expect Clojure to beat Node.js in areas easily parallelizable. Fibonacci would fall in this category and would beat Node.js if given enough cores. And Node.js would be better for server-side applications that make many requests to the file system or network.</p>\n\n<p>In conclusion, I do not think this may be a very good benchmark for comparing Clojure versus Node.js.</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>I'd actually expect Clojure to be significantly faster than Javascript if you optimise your code for performance. </p>\n\n<p>Clojure will statically compile to fairly optimised Java bytecode whenever you give enough static type information (i.e. type hints or casts to primitive types). So in theory at least, you ought to be able to get pretty close to pure Java speed, which is itself pretty close to native code performance.</p>\n\n<p>So let's prove it! </p>\n\n<p>In this case, you have several issues that are causing the Clojure code to run slow: </p>\n\n<ul>\n<li>Clojure supports arbitrary-precision arithmetic by default, so any arithmetic operations are automatically checked for overflow and if necessary numbers are promoted to BigIntegers etc. This extra checking adds a small amount of overhead which is usually negligible, but can show up if you run arithmetic operations in a tight loop like this. The easy way to fix this in Clojure 1.2 is to use the unchecked-* functions (this is a bit inelegant, but will be much improved in Clojure 1.3)</li>\n<li>Unless you tell it otherwise, Clojure behaves dynamically and boxes function arguments. Hence I suspect your code is creating and boxing a lot of Integers/Longs. The way to remove this for your loop variables is to use primitive type hints and use constructs like loop/recur.</li>\n<li>Likewise, the <code>n</code> is boxed, which means that the &lt;= function call cannot be optimised to use primitive arithmetic. You can avoid this by casting n into a long primitive with a local let.</li>\n<li><code>(time (some-function))</code> is also an unreliable way to benchmark in Clojure because it won't necessarily allow JIT compilation optimisations to kick in. You often need to run (some-function) a few times first so that the JIT has a chance to do its work.</li>\n</ul>\n\n<p>My suggestion for the optimised Clojure version of add-up would therefore be something more like:</p>\n\n<pre><code>(defn add-up\n  \"Adds up numbers from 1 to n\"\n  [n]\n  (let [n2 (long n)]                                    ; unbox loop limit\n    (loop [i (long 1)                                   ; use \"loop\" for primitives\n          acc (long 0)]                                 ; cast to primitive\n      (if (&lt;= i n2)                                     ; use unboxed loop limit\n        (recur (unchecked-inc i) (unchecked-add acc i)) ; use unchecked maths\n        acc))))\n</code></pre>\n\n<p>And a better way to time it is as follows (to allow JIT compilation to happen):</p>\n\n<pre><code>(defn f [] (add-up 10000000))\n(do \n  (dotimes [i 10] (f)) \n  (time (f)))\n</code></pre>\n\n<p>If I do the above, I get <strong>6 ms</strong> for the Clojure solution in Clojure 1.2. Which is something like 15-20x faster than the Node.js code and maybe 80-100x faster than your original Clojure version.</p>\n\n<p>Incidentally, this is also about as fast as I can get this loop to go in pure Java so I doubt that it would be possible to improve this much in any JVM language. It also puts us at about 2 machine cycles per iteration... so it's probably not far from native machine code speed either! </p>\n\n<p>(sorry not able to benchmark against Node.js on my machine, but it's a 3.3 GHz core i7 980X for anyone interested)</p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>Not directly related to optimization problem at hand but your Fib can be easily sped up:</p>\n\n<pre><code>(defn fib\n  \"Fib\"\n  [n]\n  (if (&lt;= n 1) 1\n      (+ (fib (- n 1)) (fib (- n 2)))))\n</code></pre>\n\n<p>change to: </p>\n\n<pre><code>(def fib (memoize (fn\n  [n]\n  (if (&lt;= n 1) 1\n      (+ (fib (- n 1)) (fib (- n 2)))))))\n</code></pre>\n\n<p>Works much faster (from 13000 ms for fib 38 on core i5 - why is my computer slower than dualcores? - to 0.2 ms).  In essence it isn't much different than an iterative solution - though it does allow you to express the problem in a recursive fashion for the price of some memory.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is a more appropriate node.js way to handle this:</p>\n\n<pre><code>Number.prototype.triangle = function() {\n    return this * (this + 1) /2;\n}\n\nvar start = new Date();\nvar result = 100000000 .triangle();\nvar elapsed = new Date() - start;\nconsole.log('Answer is', result, ' in ', elapsed, 'ms');\n</code></pre>\n\n<p>yielding:</p>\n\n<pre><code>$ node triangle.js\nAnswer is 5000000050000000  in  0 ms\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Playing around, you can get some pretty good performance for fib as well using something like the below:</p>\n\n<pre><code>(defn fib [^long n]\n  (if (&lt; n 2) \n   n\n   (loop [i 2 l '(1 1)]\n   (if (= i n)\n    (first l)\n     (recur \n      (inc i) \n      (cons \n       (+' (first l) (second l)) \n        l))))))\n\n\n(dotimes [_ 10]\n (time\n  (fib 51)))\n; on old MB air, late 2010\n; \"Elapsed time: 0.010661 msecs\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I just started learning Clojure. One of the first things I noticed is that there are no loops. That's OK, I can recur. So let's look at this function (from Practical Clojure):</p>\n\n<pre><code>(defn add-up\n  \"Adds up numbers from 1 to n\"\n  ([n] (add-up n 0 0))\n  ([n i sum] \n    (if (&lt; n i)\n      sum\n      (recur n (+ 1 i) (+ i sum)))))\n</code></pre>\n\n<p>To achieve the same function in Javascript, we use a loop like so:</p>\n\n<pre><code>function addup (n) {\n  var sum = 0;\n  for(var i = n; i &gt; 0; i--) {\n    sum += i;\n  }\n  return sum;\n}\n</code></pre>\n\n<p>When timed, the results look like:</p>\n\n<pre><code>input size: 10,000,000\nclojure: 818 ms\nnodejs: 160 ms\n\ninput size: 55,000,000\nclojure: 4051 ms\nnodejs: 754 ms\n\ninput size: 100,000,000\nclojure: 7390 ms\nnodejs: 1351 ms\n</code></pre>\n\n<p>I then proceeded to try the classic fib (after reading <a href=\"http://www.mikeperham.com/2008/12/13/clojure-vs-ruby/\">this</a>):</p>\n\n<p>in clojure:</p>\n\n<pre><code>(defn fib\n  \"Fib\"\n  [n]\n  (if (&lt;= n 1) 1\n      (+ (fib (- n 1)) (fib (- n 2)))))\n</code></pre>\n\n<p>in js:</p>\n\n<pre><code>function fib (n) {\n  if (n &lt;= 1) return 1;\n  return fib(n-1) + fib(n-2);\n}\n</code></pre>\n\n<p>Again, the performance has quite some difference.</p>\n\n<pre><code>fib of 39\nclojure: 9092 ms\nnodejs: 3484 ms\n\nfib of 40\nclojure: 14728 ms\nnodejs: 5615 ms\n\nfib of 41\nclojure: 23611 ms\nnodejs: 9079 ms\n</code></pre>\n\n<p>Note I'm using (time (fib 40)) in clojure so it's ignoring the bootup time for JVM. These are ran on a MacBook Air (1.86 Ghz Intel Core 2 Duo).</p>\n\n<p>So what's causing Clojure to be slow here? And why do people say that \"Clojure is fast\"?</p>\n\n<p>Thanks in advance and Please, no flame wars.</p>\n",
            "last_activity_date": 1420438460,
            "question_id": 6216888,
            "score": 23,
            "tags": [
                "javascript",
                "performance",
                "node.js",
                "clojure"
            ],
            "title": "Is NodeJs faster than Clojure?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Based in Jquery documentation:</p>\n\n<pre><code>All three of the following syntaxes are equivalent:\n\n$(document).ready(handler)\n$().ready(handler) (this is not recommended)\n$(handler)\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/ready/\" rel=\"nofollow\">http://api.jquery.com/ready/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<ol>\n<li><p><code>$(function(){})</code> is equivalent to <code>$('document').ready(function(){});</code>. It's up to you which you use, but the latter is the older of the two, and more verbose to boot.</p></li>\n<li><p>The second approach you have listed is an explicit attempt to prevent global variables, and injects the known globals <code>$</code>, <code>window</code>, and <code>document</code>. This is recommended to increase awareness of how easily globals are introduced, and be as 'clean-room' as possible about the code we are injecting to the page. Also, note that the second approach is not equivalent to the first if you follow the comments shown. Because $ is inserted as an argument, this code is compatible with other libraries that may desire to own the $ symbol.</p></li>\n</ol>\n\n<p>In particular, <code>// The rest of the code goes here</code> is in a place that may be executed before the document is ready, or when that event is fired. Put it inside the function passed to $.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Your link has the anwser: </p>\n\n<p>The below is fine, </p>\n\n<p>If you know the environments where your code will run.</p>\n\n<p>If you do not care about page load performance.</p>\n\n<p>If you don't care about best practices.</p>\n\n<pre><code> $(\"document\").ready(function() {\n    // The DOM is ready!\n    // The rest of the code goes here\n  });\n</code></pre>\n\n<p>But they recommend, its better to use like below for,\nIf you don't know the environment where your code will run and </p>\n\n<p>Better page load performance</p>\n\n<pre><code>// IIFE - Immediately Invoked Function Expression\n  (function($, window, document) {\n\n    // The $ is now locally scoped \n\n   // Listen for the jQuery ready event on the document\n   $(function() {\n\n     // The DOM is ready!\n\n   });\n\n   // The rest of the code goes here!\n\n  }(window.jQuery, window, document));\n  // The global jQuery object is passed as a parameter\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you use $ as an alias for jQuery then</p>\n\n<pre><code>   $(document).ready(function(){})\n</code></pre>\n\n<p>is same as </p>\n\n<pre><code>  (function($, window, document) {\n\n  // The $ is now locally scoped \n\n // Listen for the jQuery ready event on the document\n  $(function() {\n\n    // The DOM is ready!\n\n  });\n\n  // The rest of the code goes here!\n\n }(window.jQuery, window, document));\n</code></pre>\n\n<p>As pointed out in an earlier answer, the second method insulates you from using $ alias freely for jQuery as it passes the jQuery object to the Immediately invoked function expression, which basically keeps the variables and code within it private, and does not pollute the global namespace. </p>\n\n<p>In short, if you resort to the first method and use other libraries using $, you will end with conflict.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The only difference between your code and the \"suggested\" approach is compatibility and possibly better compression. There are no speed differences.</p>\n\n<p>Passing <code>window.jQuery</code> as the first argument to your IIFE (immediately-invoked function expression) and naming it <code>$</code> within the IIFE will just allow you to use jQuery without interfering with other libraries that assign themselves to the global <code>$</code>. If you don't use any other libraries that assign themselves to the global <code>$</code>, the first argument to your IIFE isn't going to serve any purpose.</p>\n\n<p>Passing <code>window</code> and <code>document</code> to your IIFE will allow JS minifiers to transform your code into something like this (without the whitespace), which gives you slightly better compression:</p>\n\n<pre><code>(function(a, b, c) {\n    a(c).ready(function() {\n        // ...\n    });\n})(window.jQuery, window, document);\n</code></pre>\n\n<p>Unless you use <code>window</code> and <code>document</code> extensively, I would just do:</p>\n\n<pre><code>;(function($) {\n    $(function() {\n        ...\n    });\n})(jQuery);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>It's called a <code>self ivoking</code> or <code>immediately invoked</code> function. \nIt means that the function is run as soon as it is created using the parameters in the final set of brackets.</p>\n\n<p>Read <a href=\"http://sarfraznawaz.wordpress.com/2012/01/26/javascript-self-invoking-functions/\" rel=\"nofollow\">Javascript Self Invoking Functions</a> and <a href=\"http://benalman.com/news/2010/11/immediately-invoked-function-expression/\" rel=\"nofollow\">Immediately-Invoked Function Expression (IIFE)</a> will clear where to use and how to use these functions</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In the rare situation when you'll have to work on an older jQuery version (if I recall correctly - pre 1.8.X), whenever you'd specify two document.ready blocks, only the first one would be fired in IE9.</p>\n\n<p>Now this is a rare bug I experienced once, or twice and which I fail to be able to reproduce, but I thought it would be worth noting.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Immediately Invoked Function Expressions (IIFEs)</strong></p>\n\n<p>IIFEs are an ideal solution for locally scoping global variables/properties and protecting your JavaScript codebase from outside interference (e.g. third-party libraries). If you are writing jQuery code that will be run in many different environments (e.g. jQuery plugins), then it is important to use an IIFE to locally scope jQuery because you can\u2019t assume everyone is using the $ to alias jQuery. Here is how you would do it:</p>\n\n<pre><code>   // IIFE - Immediately Invoked Function Expression\n  (function($, window, document) {\n      // The $ is now locally scoped\n\n      // The rest of your code goes here!\n\n  }(window.jQuery, window, document));\n  // The global jQuery object is passed as a parameter\n</code></pre>\n\n<p>If you don\u2019t like having to scroll to the bottom of your source file to see what global variables/properties you are passing to your IIFE, you can do this:</p>\n\n<pre><code>   // IIFE - Immediately Invoked Function Expression\n  (function(yourcode) {\n\n      // The global jQuery object is passed as a parameter\n      yourcode(window.jQuery, window, document);\n\n      }(function($, window, document) {\n\n          // The rest of your code goes here!\n\n      }\n  ));\n</code></pre>\n\n<p>To read more about IIFEs, you can read my blog post titled, <a href=\"http://gregfranko.com/blog/i-love-my-iife/\">I Love My IIFE</a>.</p>\n\n<p><strong>jQuery Ready Event</strong></p>\n\n<p>Many developers wrap all of their code inside of the jQuery ready event like this:</p>\n\n<pre><code>   $(\"document\").ready(function() {\n      // The DOM is ready!\n      // The rest of your code goes here!\n  });\n</code></pre>\n\n<p>Or a shorter version like this:</p>\n\n<pre><code>   $(function() {\n      // The DOM is ready!\n      // The rest of your code goes here!\n  });\n</code></pre>\n\n<p>If you are doing either of the above patterns, then you should consider moving the pieces of your application (e.g. methods), that don\u2019t depend on the DOM, outside of the ready event handler. Like this:</p>\n\n<pre><code>   // IIFE - Immediately Invoked Function Expression\n  (function(yourcode) {\n\n      // The global jQuery object is passed as a parameter\n      yourcode(window.jQuery, window, document);\n\n      }(function($, window, document) {\n\n          // The $ is now locally scoped \n          $(function() {\n\n              // The DOM is ready!\n\n          });\n\n          // The rest of your code goes here!\n\n      }\n  ));\n</code></pre>\n\n<p>This pattern makes it <strong>easier to separate your logic</strong> (from a code design perspective) since not everything has to be wrapped inside of a single event handler callback function. It will also <strong>improve your application\u2019s page load performance</strong>, since not everything needs to initialized right away. A great example of this is <strong>lazy binding DOM event handlers</strong> that do not need to be bound when the DOM is ready.</p>\n\n<p>Adapted from my jQuery Best Practices blog post: <a href=\"http://gregfranko.com/blog/jquery-best-practices/\">http://gregfranko.com/blog/jquery-best-practices/</a></p>\n",
                    "is_accepted": true,
                    "score": 28
                }
            ],
            "body": "<p>I was researching on jQuery best practices and found <a href=\"http://gregfranko.com/jquery-best-practices/#/5\">this</a> article <a href=\"http://stackoverflow.com/users/1172750/greg-franko\">by Greg Franko</a> </p>\n\n<p>Normally, I do:</p>\n\n<pre><code>$(\"document\").ready(function() {\n    // The DOM is ready!\n    // The rest of the code goes here\n});\n</code></pre>\n\n<p>But the article recommends to use:</p>\n\n<pre><code>// IIFE - Immediately Invoked Function Expression\n(function($, window, document) {\n\n    // The $ is now locally scoped \n\n    // Listen for the jQuery ready event on the document\n    $(function() {\n\n        // The DOM is ready!\n\n    });\n\n    // The rest of the code goes here!\n\n}(window.jQuery, window, document));\n// The global jQuery object is passed as a parameter\n</code></pre>\n\n<p>I can see the comments there, but I couldn't figure out what it exactly saying.</p>\n\n<p>So, which is the better approach and why?</p>\n\n<p>I know that both methods will work, but how does the second one become the <em>better</em>? </p>\n",
            "last_activity_date": 1411415741,
            "question_id": 18307078,
            "score": 22,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery best practises in case of $(&#39;document&#39;).ready"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Have a look at <a href=\"http://www.php.net/manual/en/function.json-encode.php\">json_encode()</a> in PHP. You can get $.ajax to recognize this with the dataType: \"json\" parameter.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Use <a href=\"http://json.org/\">JSON</a> to transfer data types (arrays and objects) between client and server.</p>\n\n<p>In PHP:</p>\n\n<ul>\n<li><a href=\"http://www.php.net/manual/en/function.json-encode.php\"><code>json_encode</code></a></li>\n<li><a href=\"http://www.php.net/manual/en/function.json-decode.php\"><code>json_decode</code></a></li>\n</ul>\n\n<p>In JavaScript:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/En/Using_native_JSON\"><code>JSON.stringify</code></a></li>\n<li><a href=\"https://developer.mozilla.org/En/Using_native_JSON\"><code>JSON.parse</code></a></li>\n</ul>\n\n<p>PHP:</p>\n\n<pre><code>echo json_encode($id_numbers);\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>id_numbers = JSON.parse(msg);\n</code></pre>\n\n<p>As Wolfgang mentioned, you can give a fourth parameter to jQuery to automatically decode JSON for you.</p>\n\n<pre><code>id_numbers = new Array();\n$.ajax({\n    url:\"Example.php\",\n    type:\"POST\",\n    success:function(msg){\n        id_numbers = msg;\n    },\n    dataType:\"json\"\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<p>Have a look at <code>json_encode</code> (http://php.net/manual/en/function.json-encode.php). It is available as of PHP 5.2. Use the parameter <code>dataType: 'json'</code> to have it parsed for you. You'll have the Object as the first argument in success then. For further information have a look at the jQuery-documentation: <a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\">http://api.jquery.com/jQuery.ajax/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Php has a super sexy function for this, just pass the array to it:</p>\n\n<pre><code>$json = json_encode($var);\n\n$.ajax({\nurl:\"Example.php\",\ntype:\"POST\",\ndataType : \"json\",\nsuccess:function(msg){\n    console.info(msn);\n}\n});\n</code></pre>\n\n<p>simples :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>@Xeon06, nice but just as a fyi for those that read this thread and tried like me...\nwhen returning the array from php => <code>json_encode($theArray)</code>. converts to a string which to me isn't easy to manipulate esp for soft js users like myself.</p>\n\n<p>Inside js, you are trying to get the array values and/or keys of the array u r better off using JSON.parse as in <code>var jsArray = JSON.parse(data)</code> where data is return array from php. the json encoded string is converted to js object that can now be manipulated easily.</p>\n\n<p>e.g.\nfoo={one:1, two:2, three:3} - gotten after JSON.parse</p>\n\n<p><code>for (key in foo){ console.log(\"foo[\"+ key +\"]=\"+ foo[key]) }</code> - prints to ur firebug console. voila!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm searching for a better solution to making an AJAX call with jQuery, having the PHP file return an array, and have it come out client-side as a Javascript array. Here is what I have been doing this:</p>\n\n<p>PHP File (Example.php):  </p>\n\n<pre><code>&lt;?php\n    $id_numbers = array('NES-ZL','NES-AL','SNS-ZL');\n\n    for ($i=0; $i&lt;count($the_array); $i++){\n        echo $id_numbers[$i];\n        echo '|';\n    }\n?&gt;\n</code></pre>\n\n<p>JS File:  </p>\n\n<pre><code>id_numbers = new Array();\n$.ajax({\n    url:\"Example.php\",\n    type:\"POST\",\n    success:function(msg){\n        id_numbers = msg.split('|');\n    }\n});\n</code></pre>\n\n<p>My current method is just a little too convoluted for my taste.</p>\n\n<p>What I'd like to do is to be able to just</p>\n\n<pre><code>return $id_numbers;\n</code></pre>\n\n<p>on the PHP side and directly translate it to a Javascript array after the AJAX call.</p>\n\n<p>Ideas, anyone?</p>\n",
            "last_activity_date": 1411595699,
            "question_id": 8823925,
            "score": 22,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "ajax",
                "arrays"
            ],
            "title": "How to return an array from an AJAX call?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It has been reported to jQuery as a bug, but as doubletapping isn't the same as doubleclicking, it does not have a high priority. However, mastermind Raul Sanchez coded a jquery solution for doubletap which you can probably use!\n<a href=\"http://www.sanraul.com/2010/08/01/implementing-doubletap-on-iphones-and-ipads/\">Here's the link</a>, works on mobile Safari.</p>\n\n<p>It's easy to use:</p>\n\n<pre><code>$('selector').doubletap(function() {});\n</code></pre>\n\n<p>-edit-</p>\n\n<p>And there's a longtap plugin <a href=\"http://plugins.jquery.com/project/Touchable\">here</a>! You can see a demo on your iPad or iPhone <a href=\"http://dotmaster.github.com/Touchable-jQuery-Plugin/demo/demo.html\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Here's a pretty basic outline of a function you can extend upon for the longtap:</p>\n\n<pre><code>$('#myDiv').mousedown(function() {\n    var d = new Date;\n    a = d.getTime();\n});\n\n$('#myDiv').mouseup(function() {\n    var d = new Date;\n    b = d.getTime();\n\n    if (b-a &gt; 500) {\n        alert('This has been a longtouch!');\n    }\n});\n</code></pre>\n\n<p>The length of time can be defined by the <code>if</code> block in the mouseup function. This probably could be beefed up upon a good deal. I have a <a href=\"http://jsfiddle.net/eykanal/HjAFd/\" rel=\"nofollow\">jsFiddle</a> set up for those who want to play with it.</p>\n\n<p>EDIT: I just realized that this depends on <code>mousedown</code> and <code>mouseup</code> being fired with finger touches. If that isn't the case, then substitute whatever the appropriate method is... I'm not that familiar with mobile development.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>rsplak's answer is good. I checked out that link and it does work well.</p>\n\n<p>However, it only implements a doubletap jQuery <em>function</em></p>\n\n<p>I needed a custom doubletap <em>event</em> that I could bind/delegate to. i.e.</p>\n\n<pre><code>$('.myelement').bind('doubletap', function(event){\n    //...\n});\n</code></pre>\n\n<p>This is more important if you're writing a backbone.js style app, where there is a lot of event binding going on.</p>\n\n<p>So I took Raul Sanchez's work, and turned it into a \"jQuery special event\".</p>\n\n<p>Have a look here: <a href=\"https://gist.github.com/1652946\">https://gist.github.com/1652946</a>    Might be useful to someone.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Just use a <a href=\"http://eightmedia.github.com/hammer.js/\" rel=\"nofollow\">multitouch JavaScript library like Hammer.js</a>. Then you can write code like:</p>\n\n<pre><code>canvas\n    .hammer({prevent_default: true})\n    .bind('doubletap', function(e) { // Also fires on double click\n        // Generate a pony\n    })\n    .bind('hold', function(e) {\n        // Generate a unicorn\n    });\n</code></pre>\n\n<p>It supports tap, double tap, swipe, hold, transform (i.e., pinch) and drag. The touch events also fire when equivalent mouse actions happen, so you don't need to write two sets of event handlers. Oh, and you need the jQuery plugin if you want to be able to write in the jQueryish way as I did.</p>\n\n<p><em>I wrote a very similar answer to <a href=\"http://stackoverflow.com/a/12972558/120410\">this question</a> because it's also very popular but not very well answered.</em></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can also use <a href=\"https://github.com/ngryman/jquery.finger\" rel=\"nofollow\">jQuery Finger</a> which also supports event delegation:</p>\n\n<p>For <strong>longtap</strong>:</p>\n\n<pre><code>// direct event\n$('selector').on('press', function() { /* handle event */ });\n\n// delegated event\n$('ancestor').on('press', 'selector', function() { /* handle event */ });\n</code></pre>\n\n<p>For <strong>double tap</strong>:</p>\n\n<pre><code>// direct event\n$('selector').on('doubletap', function() { /* handle event */ });\n\n// delegated event\n$('ancestor').on('doubletap', 'selector', function() { /* handle event */ });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>based on latest jquery docs i've written doubletap event</p>\n\n<p><a href=\"https://gist.github.com/attenzione/7098476\" rel=\"nofollow\">https://gist.github.com/attenzione/7098476</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking for the best solution to adding both \"doubletap\" and \"longtap\" events for use with jQuery's live(), bind() and trigger(). I rolled my own quick solution, but it's a little buggy. Does anyone have plugins they would recommend, or implentations of their own they'd like to share?</p>\n",
            "last_activity_date": 1382438730,
            "question_id": 5507638,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "iphone",
                "events",
                "mobile"
            ],
            "title": "What&#39;s the best way to handle longtap and double-tap events on mobile devices using jQuery?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Jquery / UI would be the best way to do this to ensure cross browser compatibility. You don't even have to load the JS and CSS files from your server. Both jQuery and jQuery UI can be loaded from google CDN. In addition most users already have jQuery js files already cached from google, so most don't even have to reload them. </p>\n\n<pre><code>&lt;link rel=\"stylesheet\" href=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.9/themes/start/jquery-ui.css\" type=\"text/css\" media=\"all\" /&gt;\n\n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.5.1/jquery.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt; \n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.9/jquery-ui.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Also check out this link to learn why it's better to load jQuery from Google as i have mentioned above. <a href=\"http://encosia.com/2008/12/10/3-reasons-why-you-should-let-google-host-jquery-for-you/\" rel=\"nofollow\">http://encosia.com/2008/12/10/3-reasons-why-you-should-let-google-host-jquery-for-you/</a></p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>As I remember it is possible to choose only the features, which are required by you, while downloading jQuery UI. So you can download only the sortable with it's dependencies. </p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You can try javascriptmvc.com framework. It is build on top of jquery and it has powerful \"steal\" mechanism, which allows you to include only that parts of framework you are really using. </p>\n\n<p>Its mxui library provides sortable functionality, you can try it here:\n<a href=\"http://javascriptmvc.com/docs.html#!Mxui.Layout.Sortable\" rel=\"nofollow\">http://javascriptmvc.com/docs.html#!Mxui.Layout.Sortable</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm providing my answer after looking at the SO Answer provided by Samuel Hapak. The <code>steal.js</code> file is a Heavyweight at <code>18.7kb</code>. Then to \"<strong>steal</strong>\" <code>sortables.js</code> at <code>2.7kb</code> brings it to a hefty <strong><code>21.4kb</code></strong>. Adding in optional drop at <code>4kb</code> and drag at <code>5.5kb</code> brings the grand total to <code>30.9kb</code>. Reference demo page <a href=\"http://javascriptmvc.com/mxui/layout/sortable/sortable.html\" rel=\"nofollow\">here</a> and view source NET tab in dev tools.</p>\n\n<p>For comparison, the <strong>jQuery UI Sortable</strong> plugin weights in at <code>33.3Kb</code> (which includes necessary bare <code>UI Core</code> that you don't want).</p>\n\n<p><br />\nPlease consider the <a href=\"http://interface.eyecon.ro/docs/sort\" rel=\"nofollow\"><strong>Interface Element Sortables</strong></a> lightweight plugin which weights in at a mere <strong><code>18.9Kb</code></strong> and that's <strong>with</strong> three dependencies of <code>drag</code>, <code>drop</code>, and <code>util</code> included.</p>\n\n<p><strong>Interface Element Sortables</strong> also has a simple example page <a href=\"http://interface.eyecon.ro/demos/sort_lists.html\" rel=\"nofollow\">HERE</a> and <a href=\"http://interface.eyecon.ro/demos/sort_floats.html\" rel=\"nofollow\">HERE</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Ok, I was waiting for somebody else to get a better answer, but as that hasn't happened yet I will share my own research:</p>\n\n<ul>\n<li><a href=\"http://jqueryui.com/demos/sortable/\" rel=\"nofollow\">Jquery's sortable plugin</a> is by far the most popular and on the <a href=\"http://jqueryui.com/download\" rel=\"nofollow\">download page</a> only relevant parts can be checked (e.g. only the sortable plugin), still giving jquery's overhead. </li>\n<li>The <a href=\"http://www.tutorialspoint.com/script.aculo.us/scriptaculous_sorting.htm\" rel=\"nofollow\">same is possible with scrip.aculo.us</a> which is build on prototype.js</li>\n<li>And with <a href=\"http://developer.yahoo.com/yui/examples/dragdrop/dd-reorder.html\" rel=\"nofollow\">YUI</a></li>\n<li>An old 'DHTML' library provides <a href=\"http://tool-man.org/examples/sorting.html\" rel=\"nofollow\">a sortable list functionality</a> as well with <a href=\"http://tool-man.org/examples/\" rel=\"nofollow\">only 1 other feature besides it</a> (edit in place). This is the only 'dedicated' library I have been able to find (to my surprise).</li>\n<li>There are few other custom scripts which are all old as well such as <a href=\"http://www.java2s.com/Code/JavaScript/GUI-Components/DragandDroptosortlists.htm\" rel=\"nofollow\">this</a>. Searching for <a href=\"https://www.google.com/#q=related%3ahttp://tool-man.org/examples/sorting.html\" rel=\"nofollow\">this</a> will turn up a number of those.</li>\n</ul>\n\n<p>If I take the liberty to theorize about this lack I would guess this to be the case because drag and drop requires <strong>a lot</strong> of cross browser hacks and fixes in older browsers and thus anybody who plans on going through that trouble will depend on existing libraries which at least limit the amount of <em>pain</em>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As you said-\"jQuery UI (1.8+) is shaping up to be a great library\". Well if you think so why choose any other library, I think you want an alternative to it because the jQuery ui library is very heavy to load. If yes, <a href=\"http://jqueryui.com/download\" rel=\"nofollow\"><strong>select only the features you need by making a custom download.</strong></a> Once you have downloaded the custom library. Upload it on your server or Upload it on free JavaScript hosting website such as-<br> <strong>http://yourjavascript.com/</strong>.<br> Or choose a website from <a href=\"http://www.anshuldudeja.com/2009/05/where-upload-js-files-free-javascript.html\" rel=\"nofollow\"><strong>this list.</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The smallest and simplest code I found was <a href=\"https://github.com/voidberg/html5sortable\" rel=\"nofollow\">HTML5 Sortable</a>. It's a tiny JQuery plugin that works across a wide range of browsers, and is only 1.5 KB in size.</p>\n\n<p><a href=\"http://htmlpreview.github.io/?https://github.com/voidberg/html5sortable/blob/master/examples/examples.html\" rel=\"nofollow\">Demos of HTML5 sortable are here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p><a href=\"http://johnny.github.io/jquery-sortable/\" rel=\"nofollow\">jQuery sortable</a> at 8.4 Kb minified is another candidate. It's a jQuery plugin and seems to be actively maintained.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The answers posted before this one are surprisingly outdated.</p>\n\n<p><a href=\"http://rubaxa.github.io/Sortable/\" rel=\"nofollow\">Sortable</a> is a fast, no-dependencies, small reorderable lists widget with touch support that works with the HTML5 native drag&amp;drop API. You can use it with Bootstrap, Foundation, or any CSS library you want, and instantiating it only takes one line.</p>\n\n<p>It supports reordering within a list or across lists. You can define lists that can only receive elements, or lists from which you can drag, but onto which you cannot drop. It's also very actively maintained and <a href=\"https://github.com/RubaXa/Sortable\" rel=\"nofollow\">MIT licensed on GitHub</a>.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>new Sortable(document.getElementsByClassName('sortable')[0]);</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;!-- Latest compiled and minified CSS --&gt;\r\n&lt;link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css\"&gt;\r\n\r\n&lt;!-- Sortable --&gt;\r\n&lt;script src=\"https://rawgit.com/RubaXa/Sortable/master/Sortable.js\"&gt;&lt;/script&gt;\r\n\r\n&lt;ul class=\"list-group sortable\"&gt;\r\n  &lt;li class=\"list-group-item\"&gt;This is &lt;a href=\"http://rubaxa.github.io/Sortable/\"&gt;Sortable&lt;/a&gt;&lt;/li&gt;\r\n  &lt;li class=\"list-group-item\"&gt;It works with Bootstrap...&lt;/li&gt;\r\n  &lt;li class=\"list-group-item\"&gt;...out of the box.&lt;/li&gt;\r\n  &lt;li class=\"list-group-item\"&gt;It has support for touch devices.&lt;/li&gt;\r\n  &lt;li class=\"list-group-item\"&gt;Just drag some elements around.&lt;/li&gt;\r\n&lt;/ul&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>jQuery UI (1.8+) is shaping up to be a great library, but I find that it often does too much for me. Is there an alternative library for creating a sortable list that has a smaller footprint?<br>\nExcluding functionality like placeholders and cross list sort is acceptable.</p>\n\n<p>Edit:<br>\n(This has become an interesting discussion, thanks for all the replies.)<br>\nIt seems a few users are unaware what jQuery UI sortable is. It's <em>not</em> table sorting, but list arrangement. Think re-ordering your Netflix queue. See the demo here: <a href=\"http://jqueryui.com/demos/sortable/\">http://jqueryui.com/demos/sortable/</a></p>\n",
            "last_activity_date": 1417406616,
            "question_id": 5333077,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "sortable",
                "jquery-ui-sortable"
            ],
            "title": "Lightweight Alternative to jQuery UI&#39;s sortable()?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I don't think $httpBackend is what you're after here, you want the whole factory to be mocked without it having a dependency on $http?</p>\n\n<p>Take a look at <a href=\"http://docs.angularjs.org/api/ng.%24q\">$q</a>, in particular the code sample under the Testing header. Your issue might be resolved with code that looks like this:</p>\n\n<pre><code>'use strict';\n\ndescribe('mocking the factory response', function () {\n\n    beforeEach(module('myApp.controllers'));\n\n    var scope, fakeFactory, controller, q, deferred;\n\n    //Prepare the fake factory\n    beforeEach(function () {\n        fakeFactory = {\n            requestPeople: function () {\n                deferred = q.defer();\n                // Place the fake return object here\n                deferred.resolve({ \"one\": \"three\" });\n                return deferred.promise;\n            }\n        };\n        spyOn(fakeFactory, 'requestPeople').andCallThrough();\n    });\n\n    //Inject fake factory into controller\n    beforeEach(inject(function ($rootScope, $controller, $q) {\n        scope = $rootScope.$new();\n        q = $q;\n        controller = $controller('MyCtrl1', { $scope: scope, MyFactory: fakeFactory });\n    }));\n\n    it('The peopleList object is not defined yet', function () {\n        // Before $apply is called the promise hasn't resolved\n        expect(scope.peopleList).not.toBeDefined();\n    });\n\n    it('Applying the scope causes it to be defined', function () {\n        // This propagates the changes to the models\n        // This happens itself when you're on a web page, but not in a unit test framework\n        scope.$apply();\n        expect(scope.peopleList).toBeDefined();\n    });\n\n    it('Ensure that the method was invoked', function () {\n        scope.$apply();\n        expect(fakeFactory.requestPeople).toHaveBeenCalled();\n    });\n\n    it('Check the value returned', function () {\n        scope.$apply();\n        expect(scope.peopleList).toBe({ \"one\": \"three\" });\n    });\n});\n</code></pre>\n\n<p>I've added some tests around what $apply does, I didn't know that until I started playing with this!</p>\n\n<p>Gog</p>\n",
                    "is_accepted": true,
                    "score": 27
                }
            ],
            "body": "<p>After much reading, it seems that the recommended way to call a web service from an AngularJS controller is to use a factory and return a promise from that. </p>\n\n<p>Here I have a simple factory which calls a sample API.</p>\n\n<pre><code>myApp.factory('MyFactory', ['$http',function($http) {\nvar people = {\n        requestPeople: function(x) {\n            var url = 'js/test.json';\n            return $http.get(url);\n        }\n    };\nreturn people;\n}]);\n</code></pre>\n\n<p>And this is how I call it in the controller</p>\n\n<pre><code>myApp.controller('MyCtrl1', ['$scope', 'MyFactory', function ($scope, MyFactory) {\n        MyFactory.requestPeople(22).then(function(result) {\n             $scope.peopleList = result;\n        });\n}]);\n</code></pre>\n\n<p>While it works fine, I would like to be able to mock the <code>result</code> that is passed in when <code>then</code> is called.  Is this possible?  </p>\n\n<p>My attempt so far has produced nothing. This is my attempt:</p>\n\n<pre><code>//Fake service\nvar mockService = {\n    requestPeople: function () {\n        return {\n            then: function () {\n                return {\"one\":\"three\"};\n            }\n        }\n\n    }\n};\n\n\n//Some setup\nbeforeEach(module('myApp.controllers'));\nvar ctrl, scope;\n\nbeforeEach(inject(function ($rootScope, $controller) {\n    scope = $rootScope.$new();\n\n    ctrl = $controller('MyCtrl1', { $scope: scope, MyFactory: mockService });\n}));\n\n//Test\nit('Event Types Empty should default to false', inject(function () {\n    expect(scope.peopleList.one).toBe('three');\n}));\n</code></pre>\n\n<p>The error that I get when running this in karma runner, is</p>\n\n<p>TypeError: 'undefined' is not an object (evaluating 'scope.peopleList.one')</p>\n\n<p>How can I get this test working with my mocked data?</p>\n",
            "last_activity_date": 1405001838,
            "question_id": 17825798,
            "score": 18,
            "tags": [
                "javascript",
                "unit-testing",
                "angularjs",
                "mocking",
                "jasmine"
            ],
            "title": "How do I mock the result in a $http.get promise when testing my AngularJS controller?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>In Ruby On Rails world we have: <a href=\"http://asciicasts.com/episodes/180-finding-unused-css\" rel=\"nofollow\">http://asciicasts.com/episodes/180-finding-unused-css</a>\nJust try to find similar solution in your framework or technology.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One possible approach would be to use your browsers save-for-offline functionality and do an entire download of the site and all its resources to a local folder. Then run a little perl script that will slurp up all the *.{jpg,png,gif...etc} then do a diff on the list when you run it from your project source directory.</p>\n\n<p>Obviously there are some limitations to this approach but if its all you have it might be a good start!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Since Javascript is a dynamic language and called in dynamic ways, you wont fine a tool to find unused javascript.</p>\n\n<p>You can use a tool call <a href=\"http://siliconforks.com/jscoverage/\" rel=\"nofollow\">JSCoverage</a> which profiles your code and lists which methods are called. This should help you a bit.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I never had luck with any browser extensions that claim to do just that.</p>\n\n<p>I run a console app that relies on <a href=\"http://www.mythicsoft.com/agentransack/help/index.html?commandline.htm\" rel=\"nofollow\">AgentRansack</a> to find unused css classes in the project directory (i.e. declared but not referenced in ascx/js etc.) - then it merges the results into a usage report. I'm assuming this could be <em>fairly</em> easily adjusted to look for image srcs etc., as long as the project directory has unused pages removed.</p>\n\n<p>Is there demand for a properly distributed tool like that?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h1>Unused CSS</h1>\n\n<ol>\n<li><p>Take a look at the Firefox extension Dust-Me at <a href=\"http://www.sitepoint.com/dustmeselectors/\">http://www.sitepoint.com/dustmeselectors/</a>.</p></li>\n<li><p>Google Chrome has a <a href=\"http://code.google.com/chrome/devtools/\">website auditing tool</a> in their developer console.</p></li>\n<li><p>Also I found this site for removing unused css - <a href=\"http://unused-css.com/\">http://unused-css.com/</a> . \nType the url of a site and you will get a list of CSS selectors. For each selector, a number indicates how many times a selector is used. This service has a few limitations. The @import statement is not supported. You can't configure and download the new clean CSS file.</p></li>\n<li><p><a href=\"https://github.com/geuis/helium-css\">Helium</a> CSS is a javascript tool for discovering unused CSS across many pages on a web site. You first have to install the javascript file to the page you want to test. Then, you have to call a helium function to start the cleaning.</p></li>\n<li><p><a href=\"http://razorfast.com/2010/11/21/announcing-cssess-the-bookmarklet-that-finds-unused-css-selectors/\">CSSESS</a> is a bookmarklet that helps you find unused CSS selectors on any site. This tool is pretty easy to use but it won't let you configure and download clean CSS files. It will only list unused CSS files.  </p></li>\n<li><p><a href=\"http://stackoverflow.com/questions/33242/how-can-i-find-unused-images-and-css-styles-in-a-website/9572622#9572622\">How can I find unused images and CSS styles in a website?</a>  </p></li>\n</ol>\n\n<h1>Unused Images:</h1>\n\n<ol>\n<li><a href=\"http://wari.konem.net\">Web Application Resource Inspector.</a>\nIt finds unused images, unused and duplicate CSS/JS.</li>\n<li><a href=\"http://obsidience.blogspot.in/2008/06/using-powershell-to-find-unused-images.html\">http://obsidience.blogspot.in/2008/06/using-powershell-to-find-unused-images.html</a></li>\n<li><a href=\"http://stackoverflow.com/questions/8161259/how-do-i-make-a-bash-script-to-find-unused-images-in-a-project\">How Do I Make a Bash Script To Find Unused Images in a Project?</a></li>\n<li><a href=\"http://www.rsaunders.co.uk/2012/01/finding-unused-images-in-your-project.html\">http://www.rsaunders.co.uk/2012/01/finding-unused-images-in-your-project.html</a></li>\n</ol>\n\n<h1>Unused JS:</h1>\n\n<ol>\n<li><a href=\"http://stackoverflow.com/questions/6211967/find-unused-css-rule-and-js-script-in-a-web-project/6211979#6211979\">Find unused CSS rule and js script in a web project?</a> </li>\n<li><a href=\"http://stackoverflow.com/questions/53249/are-there-any-good-javascript-code-coverage-tools\">Are there any good JavaScript code coverage tools?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/1169889/find-unused-javascript-functions\">Find unused Javascript functions?</a></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>Server will not open unused files, so you can check last access time. Right?</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>We have a fairly large asp.net website. The images, css and javascripts are property organized in the website project but as we are changing the look and feel of the website, I would like to know if there is a tool/add-in that will help me identify which images are not being used in the website.  I would like to find the same thing with css and javascript as well.  I have looked at dustme firefox extension but that only does css.</p>\n\n<p>Thanks in advance.</p>\n",
            "last_activity_date": 1333013617,
            "question_id": 2224154,
            "score": 18,
            "tags": [
                "css",
                "image",
                "find",
                "javascript"
            ],
            "title": "find unused images, css rules, js script blocks"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You may be interested in <a href=\"http://audiojedit.herokuapp.com\">AudioJedit</a>. This is an open source project <a href=\"https://github.com/tsenart/audiojedit\">hosted at GitHub</a>. It have small server-side node.js script for loading audio files, but all interaction with audio implemented in client-side JavaScript. I think this is similar to what you are looking for.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Rolled out my own library after all: <strong><a href=\"http://www.wavesurfer.fm\">wavesurfer.js</a></strong>.</p>\n\n<p>It draws a waveform from PCM data and seeks regions of the audio by clicking on it.</p>\n\n<p><img src=\"http://i.imgur.com/iuQseCC.png\" alt=\"Imgur\"></p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>For a (<em>hopefully</em>) simple use and integration of a waveform with your app you might want to check what we are doing at IRCAM, specially the waveform-vis in this particular case.</p>\n\n<p>It's all open source and aimed for modularity (and work in progress)</p>\n\n<p>You can find a <a href=\"https://ircam-rnd.github.io/waveform-vis/\" rel=\"nofollow\">demo over here</a><br>\nAnd the corresponding <a href=\"https://github.com/ircam-rnd/waveform-vis\" rel=\"nofollow\">githug repository</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Looking for a library to create waveform graphics and navigate audio track by clicking on the waveform. Like <a href=\"http://soundcloud.com/groups/pretty-waveforms\">SoundCloud</a> only entirely client-side and Open Source. Any ideas?</p>\n\n<p><img src=\"http://i.stack.imgur.com/n1I3H.png\" alt=\"Waveform example\"></p>\n",
            "last_activity_date": 1403525537,
            "question_id": 9516324,
            "score": 17,
            "tags": [
                "javascript",
                "html5",
                "canvas",
                "soundcloud",
                "web-audio"
            ],
            "title": "WebAudio library to visualize and interact with waveforms"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Put that handler on the <code>document</code> element directly, not on the <code>body</code>.</p>\n\n<p>I've had success with the following:</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"user-scalable=1.0,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0\"&gt;\n&lt;meta name=\"apple-mobile-web-app-capable\" content=\"yes\"&gt;\n&lt;meta name=\"format-detection\" content=\"telephone=no\"&gt;\n</code></pre>\n\n<p>Then with jQuery:</p>\n\n<pre><code>$(document).bind('touchmove', false);\n</code></pre>\n\n<p>This will also be useful if you want to handle different orientations:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\" media=\"all\"&gt;\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/landscape.css\" media=\"all and (orientation:landscape)\"&gt;\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/portrait.css\" media=\"all and (orientation:portrait)\"&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 48
                }
            ],
            "body": "<p>The usual:</p>\n\n<pre><code>document.body.addEventListener('touchmove',function(event){event.preventDefault();},false); \n</code></pre>\n\n<p>isn't working for me. I am trying to make my iPad webapp feel as native as possible.\nAny answer is appreciated.</p>\n",
            "last_activity_date": 1322064860,
            "question_id": 7733703,
            "score": 17,
            "tags": [
                "javascript",
                "ipad",
                "web-applications",
                "scroll"
            ],
            "title": "How do I disable scrolling on an iPad webapp?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>According to the Mobile Safari docs drag and drop is not supported, but it can be simulated. Since basically dragging your finger along will scroll the browser you will have to disable this. That can be done like this:</p>\n\n<pre><code>$(document).bind('touchmove', function(e) {\n   e.preventDefault();\n}, false);\n</code></pre>\n\n<p>Otherwise the event you will have to handle are <code>touchstart</code>, <code>touchmove</code> and <code>touchend</code>.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>This is a demo of jquery ui 1.9pre:\n<a href=\"https://dl.dropbox.com/u/3872624/lab/touch/index.html\" rel=\"nofollow\">https://dl.dropbox.com/u/3872624/lab/touch/index.html</a></p>\n\n<p>The jquery.mouse.ui.js file is working great for me.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a page that uses JQuery UI; in particular the <a href=\"http://jqueryui.com/demos/sortable\" rel=\"nofollow\">Sortable</a> interaction.</p>\n\n<p>The page works fine for desktop web browsers with mice, however I can't get the drag-drop functionality to work on Mobile Safari on the iPhone.  Any dragging action simply scrolls the page.</p>\n\n<p>The functionality on my page is extremely similar to the <a href=\"http://jqueryui.com/demos/sortable/#empty-lists\" rel=\"nofollow\">Sortable Empty-Lists</a> demo on the JQuery UI site.  This page also doesn't work on the iPhone.</p>\n\n<p>Is there any way to get the drag-drop functions working on the iPhone?</p>\n",
            "last_activity_date": 1345650316,
            "question_id": 2870432,
            "score": 16,
            "tags": [
                "javascript",
                "iphone",
                "jquery-ui",
                "drag-and-drop",
                "mobile-safari"
            ],
            "title": "How can I get jQuery UI&#39;s Draggable and Sortable functions to work on the iPhone?"
        }
    ]
}
