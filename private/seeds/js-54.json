{
    "items": [
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use <code>.setRequestHeader( 'referer', 'foo' )</code>, but I'm not sure if the browser would just replace that with the proper one or not.</p>\n\n<p>via jQuery, the <code>.ajax()</code> method allows headers as well (<code>.get()</code> and <code>.post()</code> don't)</p>\n\n<p>Note that there's very little point to doing this as you can't do cross-domain AJAX and even attempting to do this could possibly trigger XHR security rules in some browsers and just stop the request altogether.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can always use this :</p>\n\n<pre><code>jQuery.ajaxSetup({\n    'beforeSend': function(xhr) {xhr.setRequestHeader(\"header key\", \"header value\")}\n})\n</code></pre>\n\n<p>But ofcourse, the browser can have a different opinion about the referer header.\nThis should be tested :)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The browser will overwrite the referrer always for the tests that I've done. Meaning you can't change the referrer of an ajax call.</p>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<p>Anyone knows if with jquery or general javascript, I can change the referrer from the header in an http ajax call?</p>\n\n<p>basically I want it to be sent from my page but have a referrer from another page. Any information would be great.</p>\n",
            "last_activity_date": 1402950478,
            "question_id": 8231366,
            "score": 10,
            "tags": [
                "javascript",
                "ajax",
                "jquery",
                "http-headers"
            ],
            "title": "changing the referrer of an Ajax POST"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Make sure it's not a cross-domain issue. I guess, for jQuery to be able to call other domain URLs, you need to specify the URL in some special format. I don't exactly remember, but maybe the \"?\" (question mark) appended in the end of URL?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Its called the <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\">Same Origin Policy</a>. In short: the domain that your code is on, is the only domain your javascript can communicate with (by default)</p>\n\n<p>You get an error like this:</p>\n\n<pre><code>XMLHttpRequest cannot load http://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&amp;sensor=false. Origin http://fiddle.jshell.net is not allowed by Access-Control-Allow-Origin.\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Try adding &amp;callback=? to your URL string. It may work.</p>\n\n<p>See this for details > <a href=\"http://stackoverflow.com/questions/3595515/xmlhttprequest-error-origin-null-is-not-allowed-by-access-control-allow-origin\">XmlHttpRequest error: Origin null is not allowed by Access-Control-Allow-Origin</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Yup, this is absolutely a Same Origin Policy bug.</p>\n\n<p>It seems that the latest version of the Google Maps API (v3) <a href=\"http://blog.futtta.be/2010/04/09/no-more-jsonp-for-google-geocoding-webservice/\">does not support jsonp</a>. As a result, if you want to geocode, you're going to need to use the maps api:</p>\n\n<pre><code>&lt;script src=\"http://code.jquery.com/jquery-latest.js\"&gt;&lt;/script&gt;\n&lt;script src=\"http://maps.google.com/maps/api/js?sensor=false\"&gt;&lt;/script&gt;\n\n&lt;script&gt;\n    $(document).ready(function(){\n        var loc = \"1600 Amphitheatre Parkway, Mountain View, CA\";\n        var geocoder = new google.maps.Geocoder();\n        geocoder.geocode( {'address': loc },\n            function(data, status) { console.log(data); });\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>Other alternatives:</p>\n\n<ul>\n<li>Use a 'proxy' service, <a href=\"http://stackoverflow.com/questions/5281039/jquery-wont-get-json/5281078#5281078\">as ctcherry pointed out</a>, to fetch the data for you.</li>\n<li>Use the old <a href=\"http://code.google.com/apis/maps/documentation/geocoding/v2/index.html\">V2 API</a> with JSONP, but you'll need a Maps API key.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I had the same issue. Trying to get json from a server to wich I dind't had access (=> no JSONP).</p>\n\n<p>I found <a href=\"http://benalman.com/projects/php-simple-proxy/\" rel=\"nofollow\">http://benalman.com/projects/php-simple-proxy/</a>\nAdd the php proxy to your server and do the ajax call to this file.</p>\n\n<pre><code>$.ajax({\n   type: 'GET',\n   url:'proxy.php?url=http://anyDomain.com?someid=thispage',\n   dataType: \"json\",\n   success: function(data){\n      // success_fn(data);\n   },\n   error: function(jqXHR, textStatus, errorThrown) {\n      // error_fn(jqXHR, textStatus, errorThrown);\n   }\n});\n</code></pre>\n\n<p>where proxy.php (the file from Ben Alman) is hosted in your domain</p>\n\n<hr>\n\n<p>Alternative (which I found to be second best to this):\n<a href=\"http://james.padolsey.com/javascript/cross-domain-requests-with-jquery/\" rel=\"nofollow\">http://james.padolsey.com/javascript/cross-domain-requests-with-jquery/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>So I'm trying to complete the simple task of getting json data from google, but this little bit of jquery code won't run. Will you please help me figure out why?</p>\n\n<pre><code>  &lt;script src=\"http://code.jquery.com/jquery-latest.js\"&gt;&lt;/script&gt;\n\n  &lt;script&gt;\n  $(document).ready(function(){\n    $.getJSON(\"http://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&amp;sensor=false\", function(jsondata) {\n            alert(jsondata.status);\n    });\n  });\n  &lt;/script&gt;\n</code></pre>\n\n<p>Best solution: add \"&amp;callback=?\" to the end of the url. Thank you so much for all your help guys!</p>\n",
            "last_activity_date": 1343002842,
            "question_id": 5281039,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "json"
            ],
            "title": "JQuery won&#39;t get json?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You need to use Ajax, which is basically sending a request to the server, then getting a JSON object, which you convert to a JavaScript object.</p>\n\n<p>Check this:</p>\n\n<p><a href=\"http://www.w3schools.com/ajax/tryit.asp?filename=tryajax_first\">http://www.w3schools.com/ajax/tryit.asp?filename=tryajax_first</a></p>\n\n<p>If you are using jQuery library, it can be even easier:</p>\n\n<p><a href=\"http://api.jquery.com/jQuery.ajax/\">http://api.jquery.com/jQuery.ajax/</a></p>\n\n<p>Having said this, I highly recommend you don't download a file of 3.5MB into JS! It is not a good idea. Do the processing on your server, then return the data after processing. Then if you want to get a new data, send a new Ajax request, process the request on server, then return the new data.</p>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>This is highly unrecommended!</p>\n\n<pre><code>&lt;html&gt;&lt;head&gt;\n&lt;script src=\"jquery.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\ngetTxt = function (){\n\n  $.ajax({\n  url:'text.txt',\n  success: function (data){\n  //parse ur data\n  //you can split into lines using data.split('\\n') \n  //use regex functions to effectivley parse\n  }\n  });\n}\n&lt;/script&gt;\n&lt;/head&gt;&lt;body&gt;&lt;button type=\"button\" id=\"btnGetTxt\" onclick=\"getTxt()\"&gt;Get Text&lt;/button&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use hidden frame, load the file in there and parse its contents.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;iframe id=\"frmFile\" src=\"test.txt\" onload=\"LoadFile();\" style=\"display: none;\"&gt;&lt;/iframe&gt;\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction LoadFile() {\n    var oFrame = document.getElementById(\"frmFile\");\n    var strRawContents = oFrame.contentWindow.document.body.childNodes[0].innerHTML;\n    while (strRawContents.indexOf(\"\\r\") &gt;= 0)\n        strRawContents = strRawContents.replace(\"\\r\", \"\");\n    var arrLines = strRawContents.split(\"\\n\");\n    alert(\"File \" + oFrame.src + \" has \" + arrLines.length + \" lines\");\n    for (var i = 0; i &lt; arrLines.length; i++) {\n        var curLine = arrLines[i];\n        alert(\"Line #\" + (i + 1) + \" is: '\" + curLine + \"'\");\n    }\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I really think your going about this in the wrong manner. Trying to download and parse a +3Mb text file is complete insanity. Why not parse the file on the server side, storing the results viva an ORM to a database(your choice, SQL is good but it also depends on the content key-value data works better on something like CouchDB) then use ajax to parse data on the client end.</p>\n\n<p>Plus, an even better idea would to skip the text file entirely for even better performance if at all possible.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The reason for parsing the file on the client instead of the server is that the file needs to be accessed several times. The \"parsing\" does not reduce the size of the file, so the same number of bytes would still need to be sent.</p>\n\n<p>I should also add that 3.5 MB is the worst case; typically files will be &lt; 1/10 that size. Maybe for the large files, I could use server-side processing to split into parts. I will have to experiment to see what the response times are for large files.</p>\n\n<p>Since I did the original post, I discovered XMLHttpRequest, which seems to do just what I'm looking for. However, I can't get that to work. Below is the code I'm using. When I run it locally (i e, by opening the HTML file in a browser), I get the alert 1 and an alert change of state to 1 (open has been called, but not send). I don't get alert 6 or any alerts from the function 'handler'. If I change from asynchronous read to synchronous, it just hangs, so it looks like the call to client.send is not working.</p>\n\n<p>Any help on this?</p>\n\n<pre><code>&lt;head&gt;\n&lt;script&gt;\nfunction test(data) {\n alert(data); // taking care of data\n}\n\nfunction handler()\n{\n    alert(\"readyState=\"+this.readyState);\n    if(this.readyState == 4 &amp;&amp; this.status == 200)\n    {\n        // so far so good\n       alert(\"point 6\");\n       if(this.responseXML != null &amp;&amp; this.responseXML.getElementById('test').firstChild.data)\n       // success!\n       {\n           alert(\"point 3\");\n           test(this.responseXML.getElementById('test').firstChild.data);\n       }\n       else\n       {\n           alert(\"point 4\");\n           test(null);\n       }\n    }\n    else if (this.readyState == 4 &amp;&amp; this.status != 200)\n    {\n        // fetched the wrong page or network error...\n       alert(\"point 5\");\n       test(null);\n    }\n}\n\n&lt;/script&gt;\n&lt;/head&gt;\n\nThis is the HTML test to be displayed.\n&lt;script&gt;\nvar client = new XMLHttpRequest();\nclient.onreadystatechange = handler;\nclient.open(\"GET\", \"test.txt\"); // asynchronous\nalert(\"point 1\");\nclient.send(null);\nalert(\"point 6\");\n&lt;/script&gt;\n... more HTML here\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I used Rafid's suggestion of using AJAX.</p>\n\n<p>This worked for me:</p>\n\n<pre><code>var url = \"http://www.example.com/file.json\";\n\nvar jsonFile = new XMLHttpRequest();\n    jsonFile.open(\"GET\",url,true);\n    jsonFile.send();\n\n    jsonFile.onreadystatechange =       function(){\n                                              if (jsonFile.readyState== 4 &amp;&amp; jsonFile.status == 200){\n                                                document.getElementById(\"id-of-element\").innerHTML = jsonFile.responseText;\n                                              }\n                                            }\n</code></pre>\n\n<p>I basically(almost literally) copied this code from <a href=\"http://www.w3schools.com/ajax/tryit.asp?filename=tryajax_get2\" rel=\"nofollow\">http://www.w3schools.com/ajax/tryit.asp?filename=tryajax_get2</a> so credit to them for everything.</p>\n\n<p>I dont have much knowledge of how this works but you don't have to know how your brakes work to use them ;)</p>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>On the server, there is a text file. Using JavaScript on the client, I want to be able to read this file and process it. The format of the file on the server cannot be changed.</p>\n\n<p>How can I get the contents of the file into JavaScript variables, so I can do this processing? The size of the file can be up to 3.5 MB, but it could easily be processed in chunks of, say, 100 lines (1 line is 50-100 chars).</p>\n\n<p>None of the contents of the file should be visible to the user; he will see the results of the processing of the data in the file.</p>\n",
            "last_activity_date": 1410985386,
            "question_id": 4533018,
            "score": 10,
            "tags": [
                "javascript",
                "ajax",
                "file-io"
            ],
            "title": "How to read a text file from server using JavaScript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You need this(<a href=\"http://www.asp.net/general/videos/how-do-i-add-javascript-to-an-aspnet-page\" rel=\"nofollow\">How Do I: Add JavaScript to An ASP.NET Page</a>), I guess? </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I recently used this <a href=\"http://weblogs.asp.net/scottgu/archive/2007/10/01/tip-trick-building-a-tojson-extension-method-using-net-3-5.aspx\" rel=\"nofollow\">ToJson()</a> extension method along with <a href=\"http://msdn.microsoft.com/en-us/library/system.web.ui.page.registerclientscriptblock.aspx\" rel=\"nofollow\">Page.RegisterClientScriptBlock</a> Method to pass down a multi-level mapping object that populates three levels of cascaded dropdowns.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Nevermind I think I figured it out. Assuming the code above, you can write in javascript:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt; var JavascriptBlah = '&lt;%=blah%&gt;'&lt;/script&gt;\n</code></pre>\n\n<p>This will pass the blah in c# to the JavascriptBlah on the client side. Then you can manipulate on client side.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>you can use asp:HiddenField variables to pass values between codebehind and js..\nthis accomplished with viewstate of page during postbacks...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use public properties on the code behind as well as the session. Here is a sample using public properties that can be read from a Javascript function.</p>\n\n<p><strong>Front End:</strong></p>\n\n<pre><code>function IsAgentInProgram()\n{\n    var optStatus = \"&lt;%=AgentOptInStatus%&gt;\";\n\n    if (optStatus == \"True\")\n        alert(\"You are opted in!\");\n    else\n        alert (\"You are opted OUT\");\n}\n</code></pre>\n\n<p>Code Behind:</p>\n\n<pre><code>public bool AgentOptInStatus;\n\nprivate void Page_Load(object sender, System.EventArgs e)\n{\n    this.AgentOptInStatus = true;\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Looking to pass variables from c# to javascript to use some jquery code. Passing doubles, ints, strings, arrays. Does anyone know how to do this?</p>\n\n<p>for example if I have this code snip in c#:</p>\n\n<pre><code>string blah = \"this is a blah string\";\n</code></pre>\n\n<p>I would like to pass this into javascript so that I could use a mouseover event in jquery:</p>\n\n<pre><code>$('#myDiv').mouseover(function(){ //do something with my 'blah' string });\n</code></pre>\n",
            "last_activity_date": 1353782967,
            "question_id": 3553680,
            "score": 10,
            "tags": [
                "c#",
                "javascript",
                "variables"
            ],
            "title": "How do you pass variables from c# to javascript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I hope this helps:</p>\n\n<p><a href=\"http://www.quirksmode.org/js/detect.html\">http://www.quirksmode.org/js/detect.html</a></p>\n\n<p>(it's a long script, so i don't want to post it here)</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>alert(navigator.appName);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><a href=\"http://www.w3schools.com/js/js_browser.asp\" rel=\"nofollow\">This is basic for browser type detection </a> but from this littel code its difficult to understand what going wrong.... Can u add body of isBrowser() that will help.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think jQuery got it right when they support <a href=\"http://api.jquery.com/jQuery.support/\" rel=\"nofollow\">testing for features</a> instead of just browser.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>A very good article on this comes from Quirksmode: <a href=\"http://www.quirksmode.org/js/support.html\" rel=\"nofollow\">http://www.quirksmode.org/js/support.html</a></p>\n\n<p>The script supplied by 'lajuette' is good but it doesn't make you much smarter. The same author explain his thinking behind the script in the above link and basically what he says is:</p>\n\n<ul>\n<li>It is <strong>not</strong> about browser detection</li>\n<li>It is about <strong><em>object detection</em></strong></li>\n<li>This leads to the knowledge of which browser is used.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>function whereUWantToDetectBrowser(){\n        if (navigator.appName == \"Microsoft Internet Explorer\")\n        intExp();\n        else\n        other();\n\n}\nfunction intExp(){\n        //do what you want to do for specifically Internet Explorer\n}\nfunction other(){\n        //do what you want to do for other browsers\n}\n</code></pre>\n\n<p>this code solves the problem. Instead of calling functions from <code>whereUWantToDetectBrowser()</code>, if you write your specific code there, this will cause an error. And code will not run. Because a browser detects the code which it has to run (specific to each browser). and if you are distinguishing the code means the code is not working in some browsers, so you want to write it specifically for those browsers. \nSo, <code>other()</code> will have not effect in IE, as <code>intExp()</code> has no effect in other browsers.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>For MSIE detection you may use JavaScript:</p>\n\n<pre><code>   // This function returns Internet Explorer's major version number,\n   // or 0 for others. It works by finding the \"MSIE \" string and\n   // extracting the version number following the space, up to the decimal\n   // point, ignoring the minor version number\n   &lt;SCRIPT LANGUAGE=\"JavaSCRIPT\"&gt;\n   function msieversion()\n   {\n      var ua = window.navigator.userAgent\n      var msie = ua.indexOf ( \"MSIE \" )\n\n      if ( msie &gt; 0 )      // If Internet Explorer, return version number\n         return parseInt (ua.substring (msie+5, ua.indexOf (\".\", msie )))\n      else                 // If another browser, return 0\n         return 0\n\n   }\n   &lt;/SCRIPT&gt;\n</code></pre>\n\n<p>Below is an example of how to call it anywhere in your html:</p>\n\n<pre><code>&lt;SCRIPT LANGUAGE=\"javascript\"&gt;\n   if ( msieversion() &gt;= 0 )\n\n      document.write ( \"This is Internet Explorer\" );\n\n   else\n\n      document.write ( \"This is another browser\" );\n\n   &lt;/SCRIPT&gt;\n</code></pre>\n\n<p><a href=\"http://support.microsoft.com/kb/167820\" rel=\"nofollow\">http://support.microsoft.com/kb/167820</a>\n<a href=\"http://support.microsoft.com/kb/167820\" rel=\"nofollow\">http://support.microsoft.com/kb/167820</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The best and shortest way to find the browser type for IE is.. U can do same for other browser types</p>\n\n<pre><code>if (navigator.appName == \"Microsoft Internet Explorer\"){\n\n// Ur piece of validation \n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I'm trying to use this line to detect browser type: IE or Firefox. </p>\n\n<pre><code>alert(isBrowser(\"Microsoft\"));\n</code></pre>\n\n<p>but I get absolutely nothing, the alert doesn't even pop up. Not sure what I'm doing wrong. </p>\n\n<p>What would be the best practice way to detect browser type?</p>\n",
            "last_activity_date": 1398301821,
            "question_id": 2490452,
            "score": 10,
            "tags": [
                "javascript",
                "internet-explorer",
                "firefox"
            ],
            "title": "Using javascript to detect browser type"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I had no issue in chromium using it, well not in this manner</p>\n\n<pre><code>&lt;a href=\"#\" id=\"remove\"&gt;Remove&lt;/a&gt;\n\nfunction remove() {\n    alert(\"Hi\");\n}\n\ndocument.getElementById(\"remove\").addEventListener(\"click\", remove, false);\n</code></pre>\n\n<p>on <a href=\"http://jsfiddle.net/Xotic750/FA8M4/\" rel=\"nofollow\">jsfiddle</a></p>\n\n<p>Inline javascript is considered bad practice.</p>\n\n<p>If you have more elements using the same function, just add more lines, like this</p>\n\n<pre><code>document.getElementById(\"remove1\").addEventListener(\"click\", remove, false);\ndocument.getElementById(\"remove2\").addEventListener(\"click\", remove, false);\ndocument.getElementById(\"remove3\").addEventListener(\"click\", remove, false);\ndocument.getElementById(\"remove4\").addEventListener(\"click\", remove, false);\n</code></pre>\n\n<p>or you could get a nodelist and loop through that</p>\n\n<pre><code>var nodelist = document.querySelectorAll(\"[id^=remove]\");\n\nArray.prototype.forEach.call(nodelist, function (element) {\n    element.addEventListener(\"click\", remove, false);\n}\n</code></pre>\n\n<p>You can take a look at another <a href=\"http://stackoverflow.com/questions/6348494/addeventlistener-vs-onclick\">answer here on SO</a> to find out more about the differences between event binding methods, also do a little G searching on the subject will give you further information. And of course, you would have avoided the issue that you were experiencing by doing it in this manner.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Elements in Chrome have a <code>.remove()</code> method which allows for self-removal of an element instead of having to do it from the parent.</p>\n\n<p>The trouble is that when using attribute handlers, you get a different scope chain. That scope chain includes the element itself, as well as the <code>document</code>. This means that all properties of the element and <code>document</code> show up as variables.</p>\n\n<p>Because you named your function <code>remove()</code>, and because it's a global function/variable, it is being shadowed by the <code>.remove</code> property <em>(now variable)</em> on the element itself. This can be seen with an alert. If you change your handler to:</p>\n\n<pre><code>onclick=\"alert(remove)\"\n</code></pre>\n\n<p>...you'll get something like:</p>\n\n<pre><code>function remove() { [native code] }\n</code></pre>\n\n<p>So it's not that it's reserved, but rather that it's used as a property which ends up shadowing the global.</p>\n\n<hr>\n\n<p>To fix it, either use the global directly:</p>\n\n<pre><code>onclick=\"window.remove()\"\n</code></pre>\n\n<p>Or change the function name.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>I can't find any documentation on it, but DOM  elements in Chrome have a native method <code>remove</code> that apparently removes them.  In <code>onclick</code>, <code>this</code> actually refers to the element itself so it ends up calling <code>this.remove()</code> which removes the element.  To get around this, you can just call <code>window.remove()</code> instead.</p>\n\n<p><a href=\"http://jsfiddle.net/3YkZH/1/\" rel=\"nofollow\">http://jsfiddle.net/3YkZH/1/</a></p>\n\n<p>It would also be better to use standard event binding via <code>addEventListener</code> which does not have this problem when simply calling <code>remove</code>:</p>\n\n<p><a href=\"http://jsfiddle.net/3YkZH/2/\" rel=\"nofollow\">http://jsfiddle.net/3YkZH/2/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an interesting problem, and I think I got to the root of it, but I wanted to be sure.  I have a link that calls a function called remove().  All browsers except Chrome had no issues with the function.  However, the link that is clicked disappeared in Chrome, even when I simplified the function as in the example below.  I have seen this question: <a href=\"http://stackoverflow.com/questions/7852237/cant-use-download-as-a-function-name-in-javascript\">Can&#39;t use &quot;download&quot; as a function name in javascript</a>. In the links, however, I did not see anything about \"remove\" as a reserved keyword.  My question is this, I am correct about this being a keyword?  If so, is there anywhere I can find a list of Google keywords?  I have searched and have not found this to be a problem anywhere else.</p>\n\n<pre><code>&lt;a href=\"javascript:void(0)\" onclick=\"remove()\"&gt;Remove&lt;/a&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>function remove(){\n alert(\"Hi\");\n}\n</code></pre>\n",
            "last_activity_date": 1366652417,
            "question_id": 16151295,
            "score": 9,
            "tags": [
                "javascript",
                "google-chrome",
                "reserved-words"
            ],
            "title": "Is &quot;remove&quot; a reserved keyword in Google Chrome?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>JS objects don't have destructors per se. </p>\n\n<p>JavaScript objects (and primitives) are garbage collected when they become <strong>inaccessible</strong>, meaning when there is no possible reference to them in the current execution context. The JavaScript runtime has to continuously monitor for this. So unless you use the <code>delete</code> keyword to remove something, then its destruction is sort of under the hood. Some browsers are bad at detecting references left in closure scope (I'm looking at you, Redmond) and that's why you often see objects being set to null at the end of functions--to make sure that memory is freed in IE.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>There is no dynamic memory managment in ECMAscript at all. A Garbage Collector will take care of anything that required memory in your script. So actually the question should be more like, </p>\n\n<blockquote>\n  <p>\"How does the Garbage Collector know when it can free memory for objects\"</p>\n</blockquote>\n\n<p>Simply spoken, most GC's look if there are any active references. That might be due to parent context object, prototype chains or any direct access to a given object. In your particular instance, anytime <code>setTimeout</code> gets executed, it'll call <code>next()</code> which closes over the <code>.fade()</code> parent context and the <code>.face()</code> function in turn holds a closure to the <code>Effects</code> function( context ).</p>\n\n<p>That means, as long as there are calls to <code>setTimeout</code>, that whole construct is held in memory.</p>\n\n<p>You can help old'ish GC implementations sometimes a little bit, by <code>null</code>ing variables-/references to it is able to collect some stuff earlier or at all, but modern implementatios are pretty smart about this stuff. You actually don't have to care about things like \"Object/Reference live times\".</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>In C++ I can define a constructor and destructor explicitly, and then cout &lt;&lt; \"C or D Called\" from with in the constructor/destructor function, to know exactly where.</p>\n\n<p>However in JavaScript how do I know when an object is destructed.  The example below is the case that concerns me.</p>\n\n<p>I'm calling an internal function on a timeout and I'm wondering if the object stays alive as long as the timer is running, waiting to call next again.</p>\n\n<p><strong>User Click calls Control</strong></p>\n\n<pre><code>// Calls  Control\n</code></pre>\n\n<p><strong>Control calls Message</strong></p>\n\n<pre><code>var message_object = new Message( response_element );\n</code></pre>\n\n<p><strong>Message calls Effects</strong></p>\n\n<pre><code>new Effects().fade( this.element, 'down', 4000 );\nmessage_object.display( 'empty' );\n</code></pre>\n\n<p><strong>Effects</strong></p>\n\n<pre><code>/**\n *Effects - build out as needed\n *  element - holds the element to fade\n *  direction - determines which way to fade the element\n *  max_time - length of the fade\n */\n\nvar Effects = function(  ) \n{\n    this.fade = function( element, direction, max_time ) \n    {\n        element.elapsed = 0;\n        clearTimeout( element.timeout_id );\n        function next() \n        {\n            element.elapsed += 10;\n            if ( direction === 'up' )\n            {\n                element.style.opacity = element.elapsed / max_time;\n            }\n            else if ( direction === 'down' )\n            {\n                element.style.opacity = ( max_time - element.elapsed ) / max_time;\n            }\n            if ( element.elapsed &lt;= max_time ) \n            {\n                element.timeout_id = setTimeout( next, 10 );\n            }\n        }\n        next();\n    }\n};\n</code></pre>\n",
            "last_activity_date": 1363963496,
            "question_id": 10112670,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "When are JavaScript objects destroyed?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Have you considered using <a href=\"http://en.wikipedia.org/wiki/JSON\" rel=\"nofollow\">JSON</a>? There are several libraries out there that can take a generic collection and output <a href=\"http://www.json.org/\" rel=\"nofollow\">JSON for Java and other languages</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var countries = new Array();\n&lt;c:forEach items=\"${countryList}\" var=\"country\" varStatus=\"status\"&gt; \n    countryDetails = new Object();\n    countryDetails.country = ${country.name}; \n    var provinces = new Array();\n\n        &lt;c:forEach items=\"${country.provinces}\" var=\"province\" varStatus=\"provinceStatus\"&gt; \n           provinces.push(${province.name});\n        &lt;/c:forEach&gt; \n    countryDetails.provinces = provinces;\n    countries.push(countryDetails);\n&lt;/c:forEach&gt; \n</code></pre>\n\n<p>now what you have is something like this in javascript</p>\n\n<pre><code>var countries = [\n  {country:\"USA\",\n  provinces: [\n    \"Ohio\",\n    \"New York\",\n    \"California\"\n  ]},\n  {country:\"Canada\",\n  provinces: [\n    \"Ontario\",\n    \"Northern Territory\",\n    \"Sascetchewan\"\n  ]},\n]\n</code></pre>\n\n<p>The other option would be to make your output look like the javascript I posted.</p>\n\n<pre><code>var countries = [\n&lt;c:forEach items=\"${countryList}\" var=\"country\" varStatus=\"status\"&gt;  \n    {country: '${country.name}',\n    provinces : [ \n        &lt;c:forEach items=\"${country.provinces}\" var=\"province\" varStatus=\"provinceStatus\"&gt;  \n           '${province.name}'\n           &lt;c:if test=\"${!provinceStatus.last}\"&gt;    \n             ,    \n           &lt;/c:if&gt;   \n        &lt;/c:forEach&gt;  \n    ]}\n    &lt;c:if test=\"${!status.last}\"&gt;    \n      ,    \n    &lt;/c:if&gt;  \n    &lt;/c:forEach&gt;  \n];\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>The primary problem in your code is that you forgot to put \"status.index\" inside <code>${ }</code>.</p>\n\n<pre><code>countries[${status.index}] = new Array();\n</code></pre>\n\n<p>Now, that said, that would be a pretty bad way to do things because you'd end up with a <strong>lot</strong> of Javascript code in your page.  Much much better to create the list using Javascript object notation as in the second of @John Hartsock's answers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Ok so perhaps someone can help me with a problem I'm trying to solve. Essentially I have a JSP page which gets a list of Country objects (from the method referenceData() from a Spring Portlet SimpleFormController, not entirely relevant but just mentioning in case it is). Each Country object has a Set of province objects and each province and country have a name field:</p>\n\n<pre><code>public class Country  {\n    private String name;\n    private Set&lt;Province&gt; provinces;\n\n    //Getters and setters\n}\n\npublic class Province {\n    private String name;\n\n    //Getters and setters\n}\n</code></pre>\n\n<p>Now I have two drop down menus in my JSP for countries and provinces and I want to filter the provinces by country. I've been following this <a href=\"http://bonrouge.com/~chain_select_js\">tutorial/guide</a> to make a chain select in JavaScript.</p>\n\n<p>Now I need a dynamic way to create the JavaScript array from my content. And before anyone mentions AJAX this is out of the question since our project uses portlets and we'd like to stay away from using frameworks like DWR or creating a servlet. Here is the JavaScript/JSP I have so far but it is not populating the Array with anything:</p>\n\n<pre><code>var countries = new Array();\n&lt;c:forEach items=\"${countryList}\" var=\"country\" varStatus=\"status\"&gt;\n    countries[status.index] = new Array();\n    countries[status.index]['country'] = ${country.name};\n    countries[status.index]['provinces'] =\n    [\n        &lt;c:forEach items=\"${country.provinces}\" var=\"province\" varStatus=\"provinceStatus\"&gt;\n            '${province.name}'\n            &lt;c:if test=\"${!provinceStatus.last}\"&gt;\n              ,\n            &lt;/c:if&gt;\n        &lt;/c:forEach&gt;\n    ];\n&lt;/c:forEach&gt;\n</code></pre>\n\n<p>Does anyone know how to create an JavaScript array in JSP in the case above or what the 'best-practice' would be considered in this case? Thanks in advance!</p>\n",
            "last_activity_date": 1276561548,
            "question_id": 3040645,
            "score": 9,
            "tags": [
                "javascript",
                "arrays",
                "jsp",
                "jstl"
            ],
            "title": "Populating JavaScript Array from JSP List"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><strong>Open JavaScript</strong></p>\n\n<p><a href=\"http://www.openjs.com/scripts/events/keyboard_shortcuts/\">http://www.openjs.com/scripts/events/keyboard_shortcuts/</a></p>\n\n<p>For certain keys (F1, F4), you have to open a new browser window without the address bar.</p>\n\n<p><strong>Example</strong></p>\n\n<p>Open a new window, without adornments:</p>\n\n<pre>\nwindow.open( 'webpage.html', 'TLA', \n'toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=800,height=665' );\n</pre>\n\n<p>JavaScript to use the library:</p>\n\n<pre><code>var FALSE_FUNCTION = new Function( \"return false\" );\n\n/**\n * Called to disable F1, F3, and F5.\n */\nfunction disableShortcuts() {\n  // Disable online help (the F1 key).\n  //\n  document.onhelp = FALSE_FUNCTION;\n  window.onhelp = FALSE_FUNCTION;\n\n  // Disable the F1, F3 and F5 keys. Without this, browsers that have these\n  // function keys assigned to a specific behaviour (i.e., opening a search\n  // tab, or refreshing the page) will continue to execute that behaviour.\n  //\n  document.onkeydown = function disableKeys() {\n    // Disable F1, F3 and F5 (112, 114 and 116, respectively).\n    //\n    if( typeof event != 'undefined' ) {\n      if( (event.keyCode == 112) ||\n          (event.keyCode == 114) ||\n          (event.keyCode == 116) ) {\n        event.keyCode = 0;\n        return false;\n      }\n    }\n  };\n\n  // For good measure, assign F1, F3, and F5 to functions that do nothing.\n  //\n  shortcut.add( \"f1\", FALSE_FUNCTION );\n  shortcut.add( \"f3\", FALSE_FUNCTION );\n  shortcut.add( \"f5\", FALSE_FUNCTION );\n}\n</code></pre>\n\n<p>Inside <code>webpage.html</code>:</p>\n\n<pre><code>&lt;body onload=\"disableShortcuts();\"&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>YUI has a key handler that will work across all browsers</p>\n\n<p><a href=\"http://developer.yahoo.com/yui/examples/container/keylistener.html\" rel=\"nofollow\">http://developer.yahoo.com/yui/examples/container/keylistener.html</a></p>\n\n<p>I think the problem with the above code is that IE doesn't pass the event to the function.  It puts it in a global variable called window.event.</p>\n\n<p>I suggest trying the YUI key listener, it will be a pretty clean solution and you don't need to use the whole library, just the pieces you need.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I beleave <code>document.body.onbeforeunload</code> is the way. You can even prevent user from leaving the page with that. Just not sure about how to detect if its a refresh or if he's actually surfing to somewhere else (document.location maybe?)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There's no solid way to override the function-keys in browsers.</p>\n\n<p><strong>Internet Explorer</strong> has certain keys that can't be overridden, and certain keys which - even when overridden - still executes default behavior--like the F11 key, which switches to full-screen mode, and the F1 key which opens up a help-window.</p>\n\n<p><strong>Chrome</strong> does not allow you to use key-events at all.</p>\n\n<p><strong>FireFox</strong> is the most benign, but still sketchy--like Internet Explorer; there are still some keys and default behavior you cant override.</p>\n\n<p>And finally.. <strong>Opera</strong>.. Which is about as difficult as Internet Explorer.</p>\n\n<p>And the default behavior is different from version to version. It's like walking into a mine-field.. Blindfolded.. :)  </p>\n\n<p>Trying to override <kbd>CTRL</kbd>+<kbd>R</kbd> / <kbd>F5</kbd> smells like bad design. </p>\n\n<p>What problem are you trying to solve?</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Since the \"how\" has already been covered, I thought I'd mention that you have to be aware of the limits of using Javascript for something like this. </p>\n\n<p>For example, in Safari (and possibly others), if you can get to the browser's <em>Search</em> input field, you can still issue shortcut key commands, but it's out of the scope of your Javascript. If the user does that, any key-event-eating code that you wrote will not be invoked, and the keypress will go through just fine. </p>\n\n<p>So the solutions you find may work, but will almost universally be defeatable in some way by just using basic browser functions.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>for <kbd>f11</kbd> on IE\nadd checkkey on onkeydown event for the body <code>(onkeydown='return checkKey(event)' )</code></p>\n\n<pre><code>function checkKey(e) {\n var alt =  e.altKey;\n var key = e.keyCode;\n var type = e.srcElement.type;\n ctrl = event.ctrlKey\n\n if ( alt || ((key == 8)&amp;&amp;(type != \"text\" &amp;&amp; type != \"textarea\" &amp;&amp; type != \"password\")) || (ctrl&amp;&amp;(key == 82)) || (key == 122) ) {\n     event.keyCode = 0;\n     e.keyCode = 0;\n  event.returnValue = false;\n                return false;\n            }\n\n        return true;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Have you tried <code>keyCode == 82</code>, not <code>114</code>? <a href=\"http://www.cambiaresearch.com/articles/15/javascript-char-codes-key-codes\" rel=\"nofollow\">Key codes</a> are not the same as ASCII/charCodes, so there's no upper/lower case consideration.</p>\n\n<p>This worked for me (well, technically I used it with a JQuery keydown handler, not <code>document.onkeypress</code>):</p>\n\n<pre><code>document.onkeypress = function(e){\n  if ((e.ctrlKey || e.metaKey) &amp;&amp; e.keyCode == 82) // Ctrl-R\n  e.preventDefault();\n}\n</code></pre>\n\n<p>And for all those crying \"bad design\" - I'm building a terminal emulator and want CTRL-R to match the Bash CTRL-R to search history, not refresh the page.  There are always use cases.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to capture the <kbd>Ctrl</kbd>-<kbd>R</kbd> or <kbd>F5</kbd> shortcut on the browser to prevent it from performing a browser refresh, but instead perform a custom refresh. </p>\n\n<p>I was able to capture <kbd>Ctrl</kbd>-<kbd>R</kbd> on Safari and FF using:</p>\n\n<pre><code>document.onkeypress = function(e){\n      if ((e.ctrlKey || e.metaKey) &amp;&amp; e.keyCode == 114) // Ctrl-R\n    e.preventDefault();\n}\n</code></pre>\n\n<p>But that doesn't work on IE. Is there any way to do this on IE?</p>\n\n<p><em>Update: For people who are asking why I am doing this in the first place: I just wanted to do a custom app refresh, but wanted to avoid having a \"refresh\" button because I kinda discourage using the refresh (We have a full page flex app). We ended up switching to F8 because F5 was just too hard to get working on all browsers.</em></p>\n",
            "last_activity_date": 1395847461,
            "question_id": 1400528,
            "score": 9,
            "tags": [
                "javascript",
                "internet-explorer"
            ],
            "title": "Is there a way to capture/override Ctrl-R or F5 on IE using Javascript?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>MSDN has an article about <a href=\"http://msdn.microsoft.com/en-us/library/cc488553.aspx\" rel=\"nofollow\">Managing Browser History in ASP.NET AJAX</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Many websites make use of a hidden iframe to do this, simply refresh the iframe with the new URL, which adds it to the browsing history.  Then all you have to do is handle how your application reacts to those 'back button' events - you'll either need to detect the state/location of the iframe, or refresh the page using that URL.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The 3.5 SP1 update has support for browser history and back button in ASP.NET ajax now.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For all solutions about the back button, none of them are \"automatic\". With every single one you are going to have to do some work to persist the state of the page. So no, there isn't a way to \"trick\" the browser, but there are some great libraries out there that help you with the back button.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><em>Info</em>: Ajax Navigation is a <a href=\"http://blogs.msdn.com/ie/archive/2008/07/14/ie8-ajax-navigation.aspx\" rel=\"nofollow\">regular feature</a> of the upcoming IE8.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Follow the article \"AJAX: How to Handle Bookmarks and Back Buttons\"\n<a href=\"http://www.onjava.com/pub/a/onjava/2005/10/26/ajax-handling-bookmarks-and-back-button.html\" rel=\"nofollow\">HERE</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Came across <a href=\"http://stephenwalther.com/blog/archive/2010/04/08/jquery-asp.net-and-browser-history.aspx\" rel=\"nofollow\">this</a> recently which solves the problem with four client side scripts.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Update: There is now the HTML5 History API (pushState, popState) which deprecates the HTML4 <code>hashchange</code> functionality. <a href=\"https://github.com/balupton/history.js\">History.js</a> provides cross-browser compatibility and an <a href=\"https://github.com/balupton/history.js/wiki/Intelligent-State-Handling\">optional</a> <code>hashchange</code> fallback for HTML4 browsers.</strong></p>\n\n<p>The answer for this question will be more or less the same as my answers for these questions:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/3205900/how-to-show-ajax-requests-in-url/3276206#3276206\">How to show Ajax requests in URL?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/3460041/how-does-gmail-handle-back-forward-in-rich-javascript/3460269#3460269\">How does Gmail handle back/forward in rich JavaScript?</a></li>\n</ul>\n\n<p>In summary, you'll definitely want to check out these two projects which explain the whole hashchange process and adding ajax to the mix:</p>\n\n<ul>\n<li><p><a href=\"http://www.balupton.com/projects/jquery-history\">jQuery History</a> (using hashes to manage your pages state and bind to changes to update your page).</p></li>\n<li><p><a href=\"http://www.balupton.com/projects/jquery-ajaxy\">jQuery Ajaxy</a> (ajax extension for jQuery History, to allow for complete ajax websites while being completely unobtrusive and gracefully degradable).</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>You can use simple &amp; lightweight <a href=\"https://github.com/mtrpcic/pathjs\" rel=\"nofollow\">PathJS</a> lib. </p>\n\n<p>Usage example:</p>\n\n<pre><code>Path.map(\"#/page1\").to(function(){\n    ...\n});\n\nPath.map(\"#/page2\").to(function(){\n    ...\n});\n\nPath.root(\"#/mainpage\");\nPath.listen();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are using Rails, then definitely try Wiselinks <a href=\"https://github.com/igor-alexandrov/wiselinks\" rel=\"nofollow\">https://github.com/igor-alexandrov/wiselinks</a>. It is a a Swiss Army knife for browser state management. Here are some details: <a href=\"http://igor-alexandrov.github.io/blog/2013/07/11/the-way-to-wiselinks-1-dot-0/\" rel=\"nofollow\">http://igor-alexandrov.github.io/blog/2013/07/11/the-way-to-wiselinks-1-dot-0/</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm writing a simple photo album app using ASP.NET Ajax.<br />\nThe app uses async Ajax calls to pre-load the next photo in the album, without changing the URL in the browser.</p>\n\n<p>The problem is that when the user clicks the <strong>back</strong> button in the browser, the app doesn't go back to the previous photo, instead, it navigates to the home page of the application.</p>\n\n<p>Is there a way to trick the browser into adding each Ajax call to the browsing history?</p>\n",
            "last_activity_date": 1373707311,
            "question_id": 29886,
            "score": 9,
            "tags": [
                "javascript",
                "asp.net",
                "ajax",
                "hashchange"
            ],
            "title": "How to keep the browser history in sync when using Ajax?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Python decides what a function's local variables are by defining that any variable a function contains an assignment for is local unless declared <code>nonlocal</code> or <code>global</code>. Thus,</p>\n\n<pre><code>current += 1\n</code></pre>\n\n<p>creates a local variable named <code>current</code> that hides the nonlocal variable. If you're on Python 2, the standard solution (besides trying not to do this) is to make <code>current</code> a 1-element list and use</p>\n\n<pre><code>current[0] += 1\n</code></pre>\n\n<p>For reference, \"trying not to do this\" might look something like the following:</p>\n\n<pre><code>class Counter(object):\n    def __init__(self):\n        self.count = 0\n    def __call__(self):\n        self.count += 1\n        return self.count\nc = Counter()\nc()  # Returns 1\nc()  # Returns 2\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Python assumes that all variables in a function are local.  This is to avoid accidental use of a global variable of the same name, or in an enclosing scope.  In some important way, this difference is consequence of the fact that in Python local variable declaration is automatic/implicit while in JavaScript it is not (you have to use <code>var</code>).  Solutions:</p>\n\n<h3>Use a <code>global</code> declaration</h3>\n\n<pre><code>def generateNextNumber(startNumber):\n    global current\n    current= startNumber\n    def tempFunction():\n        global current\n        current += 1\n        return current \n    return tempFunction\n</code></pre>\n\n<p>Valid in some cases, but in yours only one instance of <code>tempFunction</code> could be active at the same time.</p>\n\n<h3>Use a function attribute</h3>\n\n<pre><code>def generateNextNumber(startNumber):\n    def tempFunction():\n        tempFunction.current += 1\n        return tempFunction.current\n    tempFunction.current= startNumber\n    return tempFunction\n</code></pre>\n\n<p>Uses the fact that functions are objects (and thus can have attributes), that they are instantiated when they are declared, and that they become local to the enclosing function (or module, in which case they are really global).  This also works because the name <code>tempFunction</code> is used for the first time inside its own definition with a \"member access\" <code>.</code> operator and thus not assumed local.  Something similar happens with the \"call\" <code>()</code>, and \"element access\" <code>[]</code> operators.  The later case explains why your code works.</p>\n\n<h3>Force the name to be assumed non-local</h3>\n\n<pre><code>def generateNextNumber(startNumber):\n    current= type(\"OnTheFly\",(),{})()\n    current.value= startNumber\n    def tempFunction():\n        current.value += 1\n        return current.value\n    return tempFunction\n</code></pre>\n\n<p>This was already explained in the previous section.  By using the member access operator <code>.</code> we are saying \"<code>current</code> already exists\", and thus it's searched in the enclosing scope.  In this particular case, we are creating a class using the <code>type</code> function and immediately creating an instance of it (with the second set of parantheses).  Instead of a general object, we could have also used a list or a dictionary.  The second case was a very common solution.</p>\n\n<h3>Use a function object</h3>\n\n<pre><code>def generateNextNumber(startNumber):\n    class TempFunction:\n        def __call__(self):\n            self.current += 1\n            return self.current\n    tempFunction= TempFunction()\n    tempFunction.current= startNumber\n    return tempFunction\n</code></pre>\n\n<p>Any object whose class has a <strong>call</strong> method <strong>is</strong> a function and thus can be called with the function call operator <code>()</code>.  This is extremely related to the two previous cases.</p>\n\n<h3>Use a <code>nonlocal</code> declaration</h3>\n\n<pre><code>def generateNextNumber(startNumber):\n    current= startNumber\n    def tempFunction():\n        nonlocal current\n        current += 1\n        return current\n    return tempFunction\n</code></pre>\n\n<p>In the same way that <code>global</code> means... well, global, <code>nonlocal</code> means \"in the immediately preceding scope\".  Valid in Python 3 and maybe later versions of Python 2.</p>\n\n<h3>Use generators</h3>\n\n<pre><code>def generateNextNumber(current):\n    while True :\n        current+= 1\n        yield current\n</code></pre>\n\n<p>This is probably the most \"Pythonic\" way to approach not the general problem of nonlocal variable access, but the specific case you used to explain it.  I couldn't finish without mentioning it.  You need to call it with a minor change, though:</p>\n\n<pre><code>getNextNumber = generateNextNumber(10)\nfor i in range(10):\n    print (getNextNumber.next())\n</code></pre>\n\n<p>When driving a <code>for</code> the call to <code>next()</code> is implicit (but the generator can not be infinite as in my example).</p>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>The following closure function works fine in javascript.</p>\n\n<pre><code>function generateNextNumber(startNumber) {\n    var current = startNumber;\n    return function(){\n        return current += 1;\n    }\n}\n\nvar getNextNumber = generateNextNumber(10);\nfor (var i = 0; i &lt; 10; i++) {\n    console.log(getNextNumber());\n}\n</code></pre>\n\n<p>I tried to do the same in Python</p>\n\n<pre><code>def generateNextNumber(startNumber):\n    current = startNumber\n    def tempFunction():\n        current += 1\n        return current\n    return tempFunction\n\ngetNextNumber = generateNextNumber(10)\nfor i in range(10):\n    print (getNextNumber())\n</code></pre>\n\n<p>I get the following error</p>\n\n<pre><code>Traceback (most recent call last):\n  File \"/home/thefourtheye/Desktop/Test1.py\", line 10, in &lt;module&gt;\n    print (getNextNumber())\n  File \"/home/thefourtheye/Desktop/Test1.py\", line 4, in tempFunction\n    current += 1\nUnboundLocalError: local variable 'current' referenced before assignment\n</code></pre>\n\n<p>When I printed the <code>vars()</code> and <code>locals()</code> inside <code>tempFunction</code>, they confirm that <code>current</code> is present.</p>\n\n<pre><code>({'current': 10}, {'current': 10})\n</code></pre>\n\n<p>But when I modified the program a little like this</p>\n\n<pre><code>def generateNextNumber(startNumber):\n    current = {\"Number\" : startNumber}\n    def tempFunction():\n        current[\"Number\"] += 1\n        return current[\"Number\"]\n    return tempFunction\n</code></pre>\n\n<p>it works. I can't reason why this works. Can anyone explain please?</p>\n",
            "last_activity_date": 1377781377,
            "question_id": 18502095,
            "score": 8,
            "tags": [
                "javascript",
                "python",
                "closures"
            ],
            "title": "Python closure vs javascript closure"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>Edited 19-Sep-2012 per comments</strong> <em>with many thanks to nrabinowitz!</em></p>\n\n<p>You will need to do some sort of search of the data returned by <code>getPointAtLength</code>. (See <a href=\"https://developer.mozilla.org/en-US/docs/DOM/SVGPathElement\">https://developer.mozilla.org/en-US/docs/DOM/SVGPathElement</a>.)</p>\n\n<pre><code>// Line\nvar line = d3.svg.line()\n     .interpolate(\"basis\")\n     .x(function (d) { return i; })\n     .y(function(d, i) { return 100*Math.sin(i) + 100; });\n\n// Append the path to the DOM\nd3.select(\"svg#chart\") //or whatever your SVG container is\n     .append(\"svg:path\")\n     .attr(\"d\", line([0,10,20,30,40,50,60,70,80,90,100]))\n     .attr(\"id\", \"myline\");\n\n// Get the coordinates\nfunction findYatX(x, line) {\n     function getXY(len) {\n          var point = line.getPointAtLength(len);\n          return [point.x, point.y];\n     }\n     var curlen = 0;\n     while (getXY(curlen)[0] &lt; x) { curlen += 0.01; }\n     return getXY(curlen);\n}\n\nconsole.log(findYatX(5, document.getElementById(\"myline\")));\n</code></pre>\n\n<p>For me this returns [5.000403881072998, 140.6229248046875].</p>\n\n<p>This search function, <code>findYatX</code>, is far from efficient (runs in <em>O(n)</em> time), but illustrates the point.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>I Updated <a href=\"http://stackoverflow.com/a/12024554/1194327\">this answer</a> <em>findYbyX</em> function. Is should be quite efficient O(log(n)).</p>\n\n<pre><code>var findYatXbyBisection = function(x, path, error){\n  var length_end = path.getTotalLength()\n    , length_start = 0\n    , point = path.getPointAtLength((length_end + length_start) / 2) // get the middle point\n    , bisection_iterations_max = 50\n    , bisection_iterations = 0\n\n  error = error || 0.01\n\n  while (x &lt; point.x - error || x &gt; point.x + error) {\n    // get the middle point\n    point = path.getPointAtLength((length_end + length_start) / 2)\n\n    if (x &lt; point.x) {\n      length_end = (length_start + length_end)/2\n    } else {\n      length_start = (length_start + length_end)/2\n    }\n\n    // Increase iteration\n    if(bisection_iterations_max &lt; ++ bisection_iterations)\n      break;\n  }\n  return point.y\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have tried implementing findYatXbisection (as nicely suggested by bumbu), and I could not get it to work AS IS.</p>\n\n<p>Instead of modifying the length as a function of length_end and length_start, I just decreased the length by 50% (if x &lt; point.x) or increased by 50% (if x> point.x) but always relative to start length of zero.  I have also incorporated revXscale/revYscale to convert pixels to x/y values as set by my d3.scale functions.</p>\n\n<pre><code>function findYatX(x,path,error){\n    var length = apath.getTotalLength()\n        , point = path.getPointAtLength(length)\n        , bisection_iterations_max=50\n        , bisection_iterations = 0\n    error = error || 0.1\n    while (x &lt; revXscale(point.x) -error || x&gt; revXscale(point.x + error) {\n        point = path.getPointAtlength(length)\n        if (x &lt; revXscale(point.x)) {\n             length = length/2\n        } else {\n             length = 3/2*length\n        }\n        if (bisection_iterations_max &lt; ++ bisection_iterations) {\n              break;\n        }\n    }\nreturn revYscale(point.y)\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I display a line chart with D3 with roughly the following code (given the scale functions <code>x</code>, <code>y</code> and the float array <code>data</code>):</p>\n\n<pre><code> var line = d3.svg.line()\n         .interpolate(\"basis\")\n         .x(function (d, i) { return x(i); })\n         .y(function (d) { return y(d); });\n d3.select('.line').attr('d', line(data));\n</code></pre>\n\n<p>Now I want to know the <strong>vertical height of the line at a given horizontal pixel position</strong>. The <code>data</code> array has lesser data points than pixels and the displayed line is <strong>interpolated</strong>, so it is not straight-forward to deduce the height of the line at a given pixel just from the <code>data</code> array.</p>\n\n<p>Any hints?</p>\n",
            "last_activity_date": 1375210140,
            "question_id": 11503151,
            "score": 8,
            "tags": [
                "javascript",
                "graphics",
                "svg",
                "d3.js"
            ],
            "title": "In d3, how to get the interpolated line data from a SVG line?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It's not possible. You can either use <code>serialize()</code> or <code>serializeArray()</code> method for getting forms' data and post them to the server using Ajax: </p>\n\n<blockquote>\n  <p>Encode a set of form elements as a string for submission.</p>\n</blockquote>\n\n<pre><code>$('#send').click(function() {\n   var firstFormData  = $('form:eq(0)').serializeArray();\n   var fourthFormData = $('form:eq(3)').serializeArray();\n   $.ajax({\n        url  : '...',\n        type : 'post',\n        data : firstFormData.concat(fourthFormData)\n   }).done(function() {\n       // ...\n   });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Okay, I could not get .serialize() to work with checkbox array from form4 e.g. </p>\n\n<pre><code>&lt;input type=\"checkbox\" id=\"model[]\"&gt;\n</code></pre>\n\n<p>I tried to grab checked values but could not get them to serialize together with other input :</p>\n\n<pre><code>var vals = []\n    $('input:checkbox[name=\"model[]\"]').each(function() {\n        if (this.checked) {\n            vals.push(this.value);\n        }\n    });\n</code></pre>\n\n<p>So I went back and did the simpler thing : </p>\n\n<p>Removed form1, move the text input and the submit button within a <code>&lt;div id=\"searchbox\" style=\"position:abosulte;top:-100px;left:0px;\"&gt;My original form1&lt;/div&gt;</code> inside form4.</p>\n\n<p>Put a placeholder <code>&lt;div id=\"placeholder\" style=\"position:relative;\"&gt;&lt;/div&gt;</code> above form2 and 3 where form1 used to be.</p>\n\n<p>Place a javascript above :</p>\n\n<pre><code>$(document).ready(function(){\n    $(\"#searchbox\")\n    .appendTo(\"#placeholder\");\n});\n</code></pre>\n\n<p>to move the text input and submit button to position them absolute and relative to the placeholder div.</p>\n\n<p>This way I reduced them to 1 form (which is what its intention anyways), does not rely on javascript to manipulate any data, and does not require me to do the tandem serialization on both forms.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have 4 forms on a page. I know that forms cannot be nested.</p>\n\n<p><code>&lt;form id=\"form1\"&gt;&lt;/form&gt;</code></p>\n\n<p><code>&lt;form id=\"form2\"&gt;&lt;/form&gt;</code></p>\n\n<p><code>&lt;form id=\"form3\"&gt;&lt;/form&gt;</code></p>\n\n<p><code>&lt;form id=\"form4\"&gt;&lt;/form&gt;</code></p>\n\n<p>presented in that order.</p>\n\n<p>Form 1 and Form 4 post to same php page for processing.\nForm 1 have 1 input field\nForm 4 have multiple fields, checkboxes and selects.</p>\n\n<p>What is the best approach for both form 1 or form 4 sending the combined fields of both forms?</p>\n\n<p>I've tried jQuery, works great for text input and checkbox, but can't get it to work with Select.\nTried combining form 1 and form 4 and using css to repositioning form 1, but can't get the layout right.</p>\n\n<p>Is there something simpler to do this?</p>\n",
            "last_activity_date": 1415378054,
            "question_id": 11373361,
            "score": 8,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "html"
            ],
            "title": "jQuery Multiple Forms Submit"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The HTTP specification doesn't impose a specific size limit for posts. They will usually be limited by either the web server or the programming technology used to process the form submission.</p>\n\n<p>What kind of server do you use?</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>You have a limitation on the Apache server. Look for LimitRequestBody directive.</p>\n\n<p>This may be helpful:</p>\n\n<p><a href=\"http://gallery.menalto.com/node/14870\" rel=\"nofollow\">http://gallery.menalto.com/node/14870</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In theory the limits on AJAX requests are the same on all the other requests, so it depends on your web server/app setup. See also <a href=\"http://stackoverflow.com/questions/124742/max-length-of-send-data-param-on-xmlhttprequest-post\">Max length of send() data param on XMLHttpRequest Post</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There isn't any size limitation for POSTs in HTTP.</p>\n\n<p>Maybe you have an &amp; in your content variable. Then everything after that would be stripped after that.</p>\n\n<p>Other than that what type do you use for your data column in the database? Is it, by any chance, something like varchar(1000)? Then anything bigger would also get stripped.</p>\n\n<p>Check what you actually receive on the server end, so you know if you've got a problem with the code or the database.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm posting ckeditor content via Ajax to php. But getting 4-5 sentence of posted material in my db table.  I wonder, Is there any size limitation for ajax post? is there any way to post big text contents via ajax?</p>\n\n<p>My js looks like that</p>\n\n<pre><code>function postViaAjax(autosaveMode) {\n    var name = $(\"#name\").val();\n    var title = $(\"#title\").val();\n    var menu = $(\"#menu\").val();\n    var parentcheck = $(\".parentcheck:checked\").val();\n    var id = $(\"#id\").val();\n    if (parentcheck == 0) {\n        var parent = parentcheck;\n    } else {\n        var parent = $(\"#parent\").val();\n    }\n    var content = CKEDITOR.instances['content'].getData();\n    var dataString = 'name=' + name + '&amp;title=' + title + '&amp;menu=' + menu + '&amp;parentcheck=' + parentcheck + '&amp;id=' + id + '&amp;parent=' + parent + '&amp;content=' + content;\n    $.ajax({\n        type: \"POST\",\n        url: \"processor/dbadd.php\",\n        data: dataString,\n        dataType: \"json\",\n        success: function (result, status, xResponse) {\n            var message = result.msg;\n            var err = result.err;\n            var now = new Date();\n            if (message != null) {\n                if (autosaveMode) {\n                    $('#submit_btn').attr({\n                        'value': 'Yadda saxlan\u0131ld\u0131 ' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds()\n                    });\n                } else {\n                    $.notifyBar({\n                        cls: \"success\",\n                        html: message + ' ' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds()\n                    });\n                }\n            }\n            if (err != null) {\n                $.notifyBar({\n                    cls: \"error\",\n                    html: err\n                });\n            }\n        }\n    });\n};\n</code></pre>\n",
            "last_activity_date": 1317801132,
            "question_id": 7658193,
            "score": 8,
            "tags": [
                "javascript",
                "ajax",
                "jquery",
                "post"
            ],
            "title": "Is there any size limitation for ajax post?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You have to store all modifications in a datastructure. Then you can delete the latest modification if the user wants to <strong>undo</strong> it. Then you repaint all drawing operations from your datastructure again.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>On <a href=\"http://visiblearea.com/blog/Javascript_Undo_Manager\" rel=\"nofollow\">http://visiblearea.com/blog/Javascript_Undo_Manager</a> I have a working example of undo with a canvas element. When you make a modification, you feed the undo manager the undo and redo methods. Tracking of the position in the undo stack is done automatically. Source code is at Github.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The other option, if you need to manipulate objects is to convert your canvas to SVG using a library that preserves the Canvas API preventing a rewrite.</p>\n\n<p>At least one such library exists at this time (November 2011):\n<a href=\"http://svgkit.sourceforge.net/SVGCanvas.html\" rel=\"nofollow\">SVGKit</a></p>\n\n<p>Once you have SVG, it is much easier to remove objects and much more without the need to redraw the entire canvas.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is a solution that works for me. I have tried it in the latest versions of Firefox and Chrome and it works really well in those two browsers.</p>\n\n<pre><code>var isFirefox = typeof InstallTrigger !== 'undefined';\nvar ctx = document.getElementById('myCanvas').getContext(\"2d\");\nvar CanvasLogBook = function() {\n    this.index = 0;\n    this.logs = [];\n    this.logDrawing();\n};\nCanvasLogBook.prototype.sliceAndPush = function(imageObject) {\n    var array;\n    if (this.index == this.logs.length-1) {\n        this.logs.push(imageObject);\n        array = this.logs;\n    } else {\n        var tempArray = this.logs.slice(0, this.index+1);\n        tempArray.push(imageObject);\n        array = tempArray;\n    }\n    if (array.length &gt; 1) {\n        this.index++;\n    }\n    return array;\n};\nCanvasLogBook.prototype.logDrawing = function() { \n    if (isFirefox) {\n        var image = new Image();\n        image.src = document.getElementById('myCanvas').toDataURL();\n        this.logs = this.sliceAndPush(image);\n    } else {\n        var imageData = document.getElementById('myCanvas').toDataURL();\n        this.logs = this.sliceAndPush(imageData);\n    }\n};\nCanvasLogBook.prototype.undo = function() {\n    ctx.clearRect(0, 0, $('#myCanvas').width(), $('#myCanvas').height());\n    if (this.index &gt; 0) {\n        this.index--;\n        this.showLogAtIndex(this.index);\n    }\n};\nCanvasLogBook.prototype.redo = function() {\n    if (this.index &lt; this.logs.length-1) {\n        ctx.clearRect(0, 0, $('#myCanvas').width(), $('#myCanvas').height());\n        this.index++;\n        this.showLogAtIndex(this.index);\n    }\n};\nCanvasLogBook.prototype.showLogAtIndex = function(index) {\n    ctx.clearRect(0, 0, $('#myCanvas').width(), $('#myCanvas').height());\n    if (isFirefox) {\n        var image = this.logs[index];\n        ctx.drawImage(image, 0, 0);\n    } else {\n        var image = new Image();\n        image.src = this.logs[index];\n        ctx.drawImage(image, 0, 0);\n    }\n};\nvar canvasLogBook = new CanvasLogBook();\n</code></pre>\n\n<p>So every time you draw any thing you will there after run function canvasLogBook.logDrawing() to store a snapshot of the canvas and then you can call canvasLogBook.undo() to undo and canvasLogBook.redo() to redo.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a Sketching app done in all HTML5 and Javascript, and I was wondering how I would create an Undo Button, so you could undo the last thing you drew. Any idea?</p>\n",
            "last_activity_date": 1424864168,
            "question_id": 3099322,
            "score": 8,
            "tags": [
                "javascript",
                "html",
                "html5",
                "canvas",
                "undo"
            ],
            "title": "How to add undo-functionality to HTML5 Canvas?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It means that if the function was called without the <code>new</code> operator, it will automagically return a new instance.</p>\n\n<p>For example, if you didn't have this safeguard, and did this...</p>\n\n<pre><code>var t = Terminal();\n</code></pre>\n\n<p>...then the <code>this</code> while executing <code>Terminal()</code> would point to <code>window</code> (or your global object, fancy non-browser guy/gal), definitely <em>not</em> what you want.</p>\n\n<p>By determining that <code>this</code> is in fact an instance of <code>Terminal</code>, then we can proceed. Otherwise, the safeguard returns a new object.</p>\n\n<p>Then we can simply use both forms...</p>\n\n<pre><code>var t = Terminal(); // Will be same as `new Terminal()`\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>It's just to make sure it will work even if <code>F</code> is called without <code>new</code>.</p>\n\n<p>When you call <code>F</code> with <code>new</code>, in that function <code>this</code> is the new instance.</p>\n\n<p>Then, if <code>this</code> is not an instance of <code>F</code> (<code>!(this instanceof F)</code>), then that means that <code>F</code> was not called using <code>new</code>. In this case, <code>F</code> calls itself, now with <code>new</code>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>What is the usage of the construct: <code>function F() { if (!(this instanceof F)) { return new F() }; ... }</code>?</p>\n\n<p>I found this in a <code>pty.js</code> for Node. Here is the original code:</p>\n\n<pre><code>function Terminal(file, args, opt) {\n  if (!(this instanceof Terminal)) {\n     return new Terminal(file, args, opt);\n  }\n\n  var self = this\n     , env\n     , cwd\n     , name\n     , cols\n     , rows\n     , term;\n-------------------SKIP-----------------------------------\n  Terminal.total++;\n  this.socket.on('close', function() {\n     Terminal.total--;\n     self._close();\n     self.emit('exit', null);\n  });\n\n  env = null;\n}\n</code></pre>\n",
            "last_activity_date": 1411948897,
            "question_id": 22211755,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "function F() { if (!(this instanceof F)) { return new F() }; ... }"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It seems that the server does not allow a cross domain request. Nothing you can do.</p>\n\n<p>You can set up a PHP script that can curl that page and then you can just ajax the PHP script. Like what kuncajs said</p>\n\n<p>You can use this short PHP curl script on your server:</p>\n\n<pre><code>&lt;?php\n\n$ch = curl_init();\n// URL to grab\ncurl_setopt($ch, CURLOPT_URL, 'http://jquery-ui.googlecode.com/svn/tags/1.8.23/themes/');\ncurl_setopt($ch, CURLOPT_HEADER, 0);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n$output = curl_exec($ch);\ncurl_close($ch);\n\nprint_r($output);\n\n?&gt;\n</code></pre>\n\n<p>Then it is just a simple ajax script:</p>\n\n<pre><code>$.ajax({\n    url: \"linktoscript.php\",\n    dataType: \"html\",\n    success: function(data) {\n        console.log(data);\n    },\n    error: function (request, status, error) {\n        console.log(request);\n        console.log(status);\n        console.log(error);\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Have you tried using <a href=\"http://jqueryui.com/themeroller/themeswitchertool/\" rel=\"nofollow\">theme switcher</a> plugin used by JQuery:<br>\nIt will give all the ready made themes used by JQuery for demo purpose.</p>\n\n<pre><code>&lt;script src=\"jquery.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"themeSwitcher.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;       \n   $(document).ready(function(){\n       $('#switcher').themeswitcher();\n   });\n&lt;/script&gt;    \n\n&lt;div id=\"switcher\"&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found this service from <a href=\"http://developer.yahoo.com/yql/\" rel=\"nofollow\"><strong>yahoo(YQL)</strong></a> and <a href=\"http://james.padolsey.com/javascript/cross-domain-requests-with-jquery/\" rel=\"nofollow\"><strong>this Cross-domain requests with jQuery plugin</strong></a> that uses YQL to fetch cross domain content.</p>\n\n<p><a href=\"http://james.padolsey.com/javascript/cross-domain-requests-with-jquery/\" rel=\"nofollow\">http://james.padolsey.com/javascript/cross-domain-requests-with-jquery/</a></p>\n\n<p><strong>DEMO:</strong> <a href=\"http://jsfiddle.net/SXHrB/4/\" rel=\"nofollow\">http://jsfiddle.net/SXHrB/4/</a></p>\n\n<p>The below code simply fetched me the whole page which I parsed to get the required content.</p>\n\n<pre><code>$.ajax({\n    url: 'http://jquery-ui.googlecode.com/svn/tags/1.8.23/themes/',\n    type: 'GET',\n    success: function(data) {\n        alert(data.responseText.substring(data.responseText.indexOf('&lt;ul&gt;'), data.responseText.lastIndexOf('&lt;/ul&gt;') + 4));\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>you could have your site add a link to the style like this:</p>\n\n<p>\nwhen you click the new theme, javascript adds a link tag to the head\nyou can replace the ui-lightness part of the link with any of the names here: <a href=\"http://jquery-ui.googlecode.com/svn/tags/1.8.23/themes/\" rel=\"nofollow\">http://jquery-ui.googlecode.com/svn/tags/1.8.23/themes/</a>\nhope this helps</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Does anyone know a way to get list of jQuery themes from <a href=\"http://jquery-ui.googlecode.com/svn/tags/1.8.23/themes/\" rel=\"nofollow\">http://jquery-ui.googlecode.com/svn/tags/1.8.23/themes/</a> ?</p>\n\n<p>I am creating simple webpage with themes roller where the user can switch themes dynamically.</p>\n\n<p><a href=\"http://jsfiddle.net/SXHrB/2/embedded/result/\" rel=\"nofollow\"><strong>Working fiddle</strong></a> - Click on Themes on Right top corner and select a new theme.</p>\n\n<p>Right now the list is hard coded as below,</p>\n\n<pre><code>&lt;div id=\"theme-list\"&gt;    \n   &lt;ul&gt;\n      &lt;li class=\"themes-el ui-state-highlight\" data-theme=\"cupertino\"&gt;cupertino&lt;/li&gt;\n      &lt;li class=\"themes-el\" data-theme=\"hot-sneaks\"&gt;hot-sneaks&lt;/li&gt;\n      &lt;li class=\"themes-el\" data-theme=\"smoothness\"&gt;smoothness&lt;/li&gt;\n      &lt;li class=\"themes-el\" data-theme=\"pepper-grinder\"&gt;pepper-grinder&lt;/li&gt;\n      &lt;li class=\"themes-el\" data-theme=\"ui-lightness\"&gt;ui-lightness&lt;/li&gt;\n      &lt;li class=\"themes-el\" data-theme=\"ui-darkness\"&gt;ui-darkness&lt;/li&gt;\n      &lt;!-- and more --&gt;\n   &lt;/ul&gt;    \n&lt;/div&gt;\n</code></pre>\n\n<p>Is there a way to get this list of themes from URL <a href=\"http://jquery-ui.googlecode.com/svn/tags/1.8.23/themes/\" rel=\"nofollow\">http://jquery-ui.googlecode.com/svn/tags/1.8.23/themes/</a>? (crossDomain: <a href=\"http://www.w3.org/TR/cors/#access-control-allow-origin-response-hea\" rel=\"nofollow\">http://www.w3.org/TR/cors/#access-control-allow-origin-response-hea</a>)</p>\n\n<p>Tried, but failed with below code..</p>\n\n<pre><code>$.ajax({\n    url: 'http://jquery-ui.googlecode.com/svn/tags/1.8.23/themes/',\n    dataType: 'text',\n    beforeSend: function ( xhr ) {\n        xhr.setRequestHeader(\"Access-Control-Allow-Origin\", 'http://jquery-ui.googlecode.com');\n        xhr.setRequestHeader(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS\");\n    },\n    crossDomain: true,\n    success: function (data) {\n        alert(data);\n    }, \n    error: function (jqXHR, textStatus, errorThrown) {\n        alert(errorThrown + ' ' + textStatus + ' ' + jqXHR.responseText);\n    }\n});\n</code></pre>\n\n<p>It feels like I am missing a lot here.. any insight would really help.</p>\n",
            "last_activity_date": 1408285782,
            "question_id": 12611469,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "cross-domain",
                "same-origin-policy"
            ],
            "title": "Get List of jQuery UI themes - from an URL (same-origin-policy)"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You could have the background be transparent and check images for transparency at the clicked pixel. Here's some code from one of my game prototypes:</p>\n\n<pre><code>function getAlphaInImage(img, x, y) {\n    var tmp = document.createElement(\"CANVAS\");\n    tmp.setAttribute('width', img.width);\n    tmp.setAttribute('height', img.height);\n    var tmpCtx = tmp.getContext('2d');\n    tmpCtx.drawImage(img, 0, 0);\n    var imageData = tmpCtx.getImageData(x, y, 1, 1);\n    var alpha = imageData.data[3];\n    tmp = null;\n    imageData = null;\n    return alpha;\n}\n</code></pre>\n\n<p>Before calling this I first check if the mouseclick was within the whole image.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I have a tutorial that does almost exactly what you need for the hit-testing. See the code <a href=\"http://simonsarris.com/blog/140-canvas-moving-selectable-shapes\" rel=\"nofollow\">here.</a></p>\n\n<p>When you click, the code draws each shape (I use rectangles but it works beautifully with semi-transparent images) to a canvas in memory (ghostcanvas) and checks to see if the mouse pixel is on a pixel that is not-transparent.</p>\n\n<p>Relevant code pasted below:</p>\n\n<pre><code>function myDown(e){\n  getMouse(e);\n  clear(gctx); // clear the ghost canvas from its last use\n\n  // run through all the boxes\n  var l = boxes.length;\n  for (var i = l-1; i &gt;= 0; i--) {\n    // draw shape onto ghost context\n    drawshape(gctx, boxes[i], 'black');\n\n    // get image data at the mouse x,y pixel\n    var imageData = gctx.getImageData(mx, my, 1, 1);\n    var index = (mx + my * imageData.width) * 4;\n\n    // if the mouse pixel exists, select and break\n    if (imageData.data[3] &gt; 0) {\n      mySel = boxes[i];\n      offsetx = mx - mySel.x;\n      offsety = my - mySel.y;\n      mySel.x = mx - offsetx;\n      mySel.y = my - offsety;\n      isDrag = true;\n      canvas.onmousemove = myMove;\n      invalidate();\n      clear(gctx);\n      return;\n    }\n\n  }\n  // havent returned means we have selected nothing\n  mySel = null;\n  // clear the ghost canvas for next time\n  clear(gctx);\n  // invalidate because we might need the selection border to disappear\n  invalidate();\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>I'm creating a game in javascript. currently the sprites are div elements with a background image that is updated to create animation. I have heard that if i make the elements canvas and blit the sprite onto the canvas I can make the sprite clickable, omitting the transparent areas.</p>\n\n<p>I need a solution where my game sprites can be clicked but the clickable area is fitted to the shape of the sprite. It also needs the be automatic. I cannot do this with premade click maps.</p>\n",
            "last_activity_date": 1305035296,
            "question_id": 5948251,
            "score": 7,
            "tags": [
                "javascript",
                "javascript-events",
                "canvas",
                "sprite"
            ],
            "title": "Click area on sprite in canvas"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You don't necessarily need to recreate the Ember Data store.  Ember works just fine with POJOs, you can also wrap your POJOs in an Ember Object to give you some fun built in features.</p>\n\n<p>That being said creating a custom adapter which caches results could be convenient.</p>\n\n<p>Here's an example where I create an adapter that supports caching.  You can slowly build on the concept for all of the basic things you need.</p>\n\n<pre><code>App.FooAdapter = Ember.Object.extend({\n  cache:{},\n  find: function(id){\n    var self = this,\n        record;\n    if(record = this.cache[id]){\n      return Ember.RSVP.cast(record);\n    }\n    else\n    {\n      return new Ember.RSVP.Promise(function(resolve){\n        resolve($.getJSON('http://www.foolandia.com/foooo/' + id));\n      }).then(function(result){\n        record = self.cache[id] = App.Foo.create(result);\n        return record;\n      });\n    }\n  }\n});\n</code></pre>\n\n<p>In the examples below, I use the container to register the adapter on all of my routes/controllers so I had lazy easy access to it.</p>\n\n<p><a href=\"http://emberjs.jsbin.com/OxIDiVU/742/edit\">http://emberjs.jsbin.com/OxIDiVU/742/edit</a></p>\n\n<p>If you always want it to be a promise:</p>\n\n<p><a href=\"http://emberjs.jsbin.com/OxIDiVU/740/edit\">http://emberjs.jsbin.com/OxIDiVU/740/edit</a></p>\n\n<h1>Reusability</h1>\n\n<p>The example above may make it look like you'd have to do a ton of work, but don't forget, Ember is super reusable, take advantage of the magic.</p>\n\n<pre><code>App.MyRestAdapter = Em.Object.extend({\n  type: undefined,\n  find: function(id){\n    $.getJSON('http://www.foolandia.com/' + this.get('type') + '/' + id\n  }\n});\n\nApp.FooAdapter = App.MyRestAdapter.extend({\n  type: 'foo' // this would create calls to: http://www.foolandia.com/foo/1\n});\n\nApp.BarAdapter = App.MyRestAdapter.extend({\n  type: 'bar' // this would create calls to: http://www.foolandia.com/bar/1\n});\n</code></pre>\n\n<p>This is the basic idea of what Ember Data/Ember Model is.  They've tried to create a ton of defaults and built in coolness, but sometimes it's overkill, especially if you are just consuming data and not doing CRUD.</p>\n\n<p>Example: <a href=\"http://emberjs.jsbin.com/OxIDiVU/744/edit\">http://emberjs.jsbin.com/OxIDiVU/744/edit</a></p>\n\n<p>Also you can read this (says the same stuff):</p>\n\n<p><a href=\"http://stackoverflow.com/questions/17938294/how-do-you-create-a-custom-adapter-for-ember-js\">How do you create a custom adapter for ember.js?</a></p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Where I work we are using Ember Data and Ember CLI despite them being rather unstable. So far Ember Data hasn't caused too much pain and suffering here. The store is pretty easy to understand, and the documentation on Ember for that facet of the framework is rather good. The one issue that I have been having has to do with dynamically sorting models, and as I modify the content of them, they reshuffle according to the changes I make, and somewhere along the road some really weird stuff happens, not sure if that's Ember Data's fault though. </p>\n\n<p>In short, we've found some success using Ember Data, and can't complain about it if that's the route you wish to go.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you're familiar with Ruby, Rails is a great solution for a backend.</p>\n\n<p>The ember community has support for rails with the <a href=\"https://github.com/emberjs/ember-rails\" rel=\"nofollow\">ember-rails gem</a> which lets you use rails as a means to serve JSON.</p>\n\n<h2>Getting started</h2>\n\n<ul>\n<li><p>Add the gem to your application Gemfile:</p>\n\n<p>gem 'ember-rails'\ngem 'ember-source', '~> 1.9.0' # or the version you need</p></li>\n<li><p>Run <code>bundle install</code></p></li>\n<li><p>Next, generate the application structure:</p>\n\n<p>rails generate ember:bootstrap</p></li>\n<li><p>Restart your server (if it's running)</p></li>\n</ul>\n\n<h2>Building a new project from scratch</h2>\n\n<p>Rails supports the ability to build projects from a template source ruby file.</p>\n\n<p>To build an Ember centric Rails project you can simply type the following into your command line:</p>\n\n<pre><code>rails new my_app -m http://emberjs.com/edge_template.rb\n</code></pre>\n\n<p>To install the latest builds of ember and ember-data. It should be noted that the\nexamples in the <a href=\"http://emberjs.com/guides/getting-started/\" rel=\"nofollow\">getting started guide</a>\nhave been designed to use the released version of ember:</p>\n\n<pre><code>rails generate ember:install\n</code></pre>\n\n<p>Then all you need to do is render json in your controllers, like this</p>\n\n<pre><code>class ProjectsController &lt; ApplicationController\n    def index\n        respond_to do |format|\n            format.json { render json: Project.all }\n        end\n    end\n\n    def show\n        respond_to do |format|\n            format.json { render json: Project.where(name: params[:name])}\n        end\n    end\nend\n</code></pre>\n\n<p>make sure to update your serializers</p>\n\n<pre><code>class ProjectSerializer &lt; ApplicationSerializer\n  attributes :id, :name, :description, :imgUrl, :deployUrl\nend \n</code></pre>\n\n<p>setup your routes</p>\n\n<pre><code>EmberRailsBlog.ProjectsRoute = Ember.Route.extend({\n    model: function(){\n        return this.store.find('project');\n    }\n});\n</code></pre>\n\n<p>and finally your model</p>\n\n<pre><code>var attr = DS.attr;\n\nEmberRailsBlog.Project = DS.Model.extend({\n    name: attr(),\n    description: attr(),\n    imgUrl: attr(),\n    deployUrl: attr()\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Ember data is still not at version 1.0 and thus I decided to use Ember without Data models.</p>\n\n<p>I have my own models, and those are created by the route model function.</p>\n\n<p>However maintaining state between the frontend objects and the backend objects is a nightmare.\nEspecially when one route uses another routes models.</p>\n\n<ul>\n<li>How can this be achieved, should I write my own store and model find method?</li>\n<li>Should I use Ember Data (even though it's not at version 1.0 ?) perhaps an ETA on Ember Data 1.0 ?</li>\n<li>write code to update the models on the frontend each time I change a model?</li>\n<li>Another method?</li>\n</ul>\n\n<p>Is what I'm doing best practices or should I be doing it differently?\nMy gut feeling is that without using Ember Data I should write my own store. I'd love to get feedback from some of you guys.</p>\n\n<p>Example of a model:</p>\n\n<pre><code>App.Person = Ember.Object.extend(App.Serializable,Em.Copyable,{\n  user_email : null //used in routing dynamic segements and as old email when making changes to email\n  ,first_name: null\n  , last_name: null\n  , fullname : function () {\n    return this.first_name + ' ' + this.last_name;\n  }.property('first_name','last_name').cacheable()\n};\n\nApp.Person.reopenClass({\n  createRecord: function(data) {\n    return App.Person.create({\n      user_email : data.email\n      , first_name: data.first_name\n      , last_name : data.last_name\n}});\n</code></pre>\n\n<p>Example of how I load the class models:</p>\n\n<pre><code>App.UsersRoute = App.AuthenticatedRoute.extend( {\n  model : function () {\n    return new Ember.RSVP.Promise(function(resolve, reject) {\n      $.getJSON('/users').then(function(usersData) {\n        var userObjects = [];\n          usersData.forEach(function (data) {\n            userObjects.pushObject(App.Person.createRecord(data));\n          });\n        resolve( userObjects);\n        },function(error) {\n          reject(error);\n      });\n    })\n  },\n</code></pre>\n\n<p>Subroutes use the model:</p>\n\n<pre><code>App.UsersAvailableRoute = App.AuthenticatedRoute.extend( {\n     model : function () {\n        return {\n          allUsers :  Ember.ArrayController.create({\n            content : this.modelFor('users').filter( function (user) {\n                      return user.availablity === 100\n                      }),\n</code></pre>\n\n<p>Example of how I update the model in a controller:</p>\n\n<pre><code>App.UsersAvailableController = Ember.ArrayController.extend({\nneeds : ['users']\n    ,applyPersonAssign : function (person,need,project) {\n          need.set('allocated',person);\n          var updateObject = Ember.copy(project,true);\n          if (Ember.isEmpty(need.get('inProject'))) {\n            updateObject.projectNeeds.pushObject(need);\n          }\n\n          return $.ajax({\n            url: '/projects/' + updateObject.get('codename'),\n            \"type\": \"PUT\",\n            \"dataType\": \"json\",\n            data: updateObject.serialize()\n          })\n</code></pre>\n",
            "last_activity_date": 1422919114,
            "question_id": 24408892,
            "score": 6,
            "tags": [
                "javascript",
                "model-view-controller",
                "ember.js",
                "ember-data"
            ],
            "title": "Ember without Ember Data"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Then I came across another post, blog, stackoverflow example (you pick it I was probably there), and I saw the use of the $q library. Duh! Why set up a whole mock promise when we can just use the tool that Angular gives us. Our code looks nicer and makes more sense to look at - no ugly promise.then.mostRecent <em>thing</em>. </p>\n\n<p>Next in the iteration of unit testing was this:</p>\n\n<pre><code>describe('Controller: Products', function () {\n    var//iable declarations\n        $scope,\n        $rootScope,\n        $q,\n        $controller,\n        productService,\n        PROMISE = {\n            resolve: true,\n            reject: false\n        },\n        PRODUCTS = [{},{},{}] //constant for the products that are returned by the service\n    ;\n\n    beforeEach(function () {\n        module('App.Controllers.Products');\n        module('App.Services.Products');\n    });\n\n\n    beforeEach(inject(function (_$controller_, _$rootScope_, _$q_, _products_) {\n        $rootScope = _$rootScope_;\n        $q = _$q_;\n        $controller = _$controller_;\n        productService = _products_;\n        $scope = $rootScope.$new();\n    }));\n\n    function setupController(product, resolve) {\n        //Need a function so we can setup different instances of the controller\n        var getProducts = $q.defer();\n\n        //Set up our spies\n        spyOn(products, 'getProducts').andReturn(getProducts.promise);\n\n        //Initialise the controller\n        $controller('ProductsController', {\n            $scope: $scope,\n            products: productService\n        });\n\n        // Use $scope.$apply() to get the promise to resolve on nextTick().\n        // Angular only resolves promises following a digest cycle,\n        // so we manually fire one off to get the promise to resolve.\n        if(resolve) {\n            $scope.$apply(function() {\n                getProducts.resolve();\n            });\n        } else {\n            $scope.$apply(function() {\n                getProducts.reject();\n            });\n        }\n    }\n\n    describe('Resolving and Rejecting the Promise', function () {\n        it('should return the first PRODUCT when the promise is resolved', function () {\n            setupController(PRODUCTS[0], PROMISE.resolve); // Set up our controller to return the first product and resolve the promise. \n            expect('to return the first PRODUCT when the promise is resolved');\n        });\n\n        it('should return nothing when the promise is rejected', function () {\n            setupController(PRODUCTS[0], PROMISE.reject); // Set up our controller to return first product, but not to resolve the promise. \n            expect('to return nothing when the promise is rejected');\n        });\n    });\n});\n</code></pre>\n\n<p>This started to feel like the way it should be set up. We can mock what we need to mock we can set our promise to resolve and reject so we can truly test the two possible outcomes. This feels good...</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>The main point in your own answer about using <code>$q.defer</code> sounds good. My only additions would be that </p>\n\n<pre><code>setupController(0, true)\n</code></pre>\n\n<p>is not particularly clear, due to the parameters <code>0</code> and <code>true</code>, and then the <code>if</code> statement that uses this. Also, passing the mock of <code>products</code> into the <code>$controller</code> function itself seems unusual, and means you might have 2 different <code>products</code> services available. One directly injected into the controller, and one injected by the usual Angular DI system into other services. I think better to use <code>$provide</code> to inject mocks and then everywhere in Angular will have the same instance for any test.</p>\n\n<p>Putting this all together, something like the following seems better, which can be seen at <a href=\"http://plnkr.co/edit/p676TYnAIb9QlD7MPIHu?p=preview\" rel=\"nofollow\">http://plnkr.co/edit/p676TYnAIb9QlD7MPIHu?p=preview</a></p>\n\n<pre><code>describe('Controller: ProductsController', function() {\n\n  var PRODUCTS, productsMock,  $rootScope, $controller, $q;\n\n  beforeEach(module('plunker'));\n\n  beforeEach(module(function($provide){\n    PRODUCTS = [{},{},{}]; \n    productsMock = {};        \n    $provide.value('products', productsMock);\n  }));\n\n  beforeEach(inject(function (_$controller_, _$rootScope_, _$q_, _products_) {\n    $rootScope = _$rootScope_;\n    $q = _$q_;\n    $controller = _$controller_;\n    products = _products_;\n  }));\n\n  var createController = function() {\n    return $controller('ProductsController', {\n      $scope: $rootScope\n    })\n  };\n\n  describe('on init', function() {\n    var getProductsDeferred;\n\n    var resolve = function(results) {\n      getProductsDeferred.resolve(results);\n      $rootScope.$apply();\n    }\n\n    var reject = function(reason) {\n      getProductsDeferred.reject(reason);\n      $rootScope.$apply();\n    }\n\n    beforeEach(function() {\n      getProductsDeferred = $q.defer();\n      productsMock.getProducts = function() {\n        return getProductsDeferred.promise;\n      };\n      createController();\n    });\n\n    it('should set success to be true if resolved with product', function() {\n      resolve(PRODUCTS[0]);\n      expect($rootScope.success).toBe(true);\n    });\n\n    it('should set success to be false if rejected', function() {\n      reject();\n      expect($rootScope.success).toBe(false);\n    });\n  });\n});\n</code></pre>\n\n<p>Notice that lack of <code>if</code> statement, and the limitation of the <code>getProductsDeferred</code> object, and <code>getProducts</code> mock, to the scope of a <code>describe</code> block. Using this sort of pattern, means you can add other tests, on other methods of <code>products</code>, without polluting the mock <code>products</code> object, or the <code>setupController</code> function you have, with all the possible methods / combinations you need for the tests.</p>\n\n<p>As a sidebar, I notice:</p>\n\n<pre><code>module('App.Controllers.Products');\nmodule('App.Services.Products');\n</code></pre>\n\n<p>means you are separating your controllers and services into different Angular modules. I know certain blogs have recommended this, but I suspect this overcomplicated things, and a single module per app is ok. If you then refactor, and make services and directives completely separate reusable components, then it would be time to put them into a separate module, and use them as you would any other 3rd party module.</p>\n\n<p>Edit: Corrected <code>$provide.provide</code> to <code>$provide.value</code>, and fixed some of the ordering of instantiation of controller/services, and added a link to Plunkr</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In Angular everything seems to have a steep learning curve and unit testing an Angular app definitely doesn't escape this paradigm. </p>\n\n<p>When I started with TDD and Angular I felt that I was spending twice (maybe more) as much time figuring out just how to test and maybe even more just getting my tests set up correctly. But as <a href=\"http://www.bennadel.com/blog/2439-My-Experience-With-AngularJS-The-Super-heroic-JavaScript-MVW-Framework.htm\">Ben Nadel</a> put it in his blog there are ups and downs in the angular learning process. His graph is definitely my experience with Angular.</p>\n\n<p>However as I have progressed in learning Angular and unit testing as well, now i feel that I am spending much less time setting up tests and much more time making tests go from red to green - which is a good feeling. </p>\n\n<p>So I have come across different methods of setting up my unit test to mock services and promises and I thought I would share what I have learned and also ask the question of:</p>\n\n<blockquote>\n  <p>Are there any other or better ways of accomplishing this?</p>\n</blockquote>\n\n<p>So onto the code, that what we all come for here anyways - not to listen to some guy talk about his love, err accomplishments learning a framework. </p>\n\n<p>This is how I started out mocking my services and promises, I'll use a controller, but services and promises can be mocked in other places obviously. </p>\n\n<pre><code>describe('Controller: Products', function () {\n    var//iable declarations\n        $scope,\n        $rootScope,\n        ProductsMock = {\n            getProducts: function () {\n            } // There might be other methods as well but I'll stick to one for the sake of consiseness\n        },\n        PRODUCTS = [{},{},{}]\n    ;\n\n    beforeEach(function () {\n        module('App.Controllers.Products');\n    });\n\n    beforeEach(inject(function ($controller, _$rootScope_) {\n        //Set up our mocked promise\n        var promise = { then: jasmine.createSpy() };\n\n        //Set up our scope\n        $rootScope = _$rootScope_;\n        $scope = $rootScope.$new();\n\n        //Set up our spies\n        spyOn(ProductsMock, 'getProducts').andReturn(promise);\n\n        //Initialize the controller\n        $controller('ProductsController', {\n            $scope: $scope,\n            Products: ProductsMock\n        });\n\n        //Resolve the promise\n        promise.then.mostRecentCall.args[0](PRODUCTS);\n\n    }));\n\n    describe('Some Functionality', function () {\n        it('should do some stuff', function () {\n            expect('Stuff to happen');\n        });\n    });\n});\n</code></pre>\n\n<p>For us this worked, but as time went on I thought there must be a better way. For one I hated the</p>\n\n<pre><code>promise.then.mostRecentCall \n</code></pre>\n\n<p><em>thing</em>, and if we wanted to reinitialise the controller then we had to pull it out of the beforeEach block and inject it individually into each test. </p>\n\n<blockquote>\n  <p>There has to be a better way...</p>\n</blockquote>\n\n<p>Now I ask does anyone have other ways to set tests up, or and thoughts or feeling on the way I have chose to do it?</p>\n",
            "last_activity_date": 1412316092,
            "question_id": 22830391,
            "score": 6,
            "tags": [
                "javascript",
                "angularjs",
                "unit-testing",
                "testing",
                "jasmine"
            ],
            "title": "Unit testing in AngularJS - Mocking Services and Promises"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>gapi.client.drive.files</code> is <code>undefined</code> as stated in the error message. <code>gapi.client.drive.files</code> needs to hold a reference to an object for you to be able to perform operations on it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Using</p>\n\n<pre><code>var request = gapi.client.request({\n        'path': '/drive/v2/files',\n        'method': 'GET',\n        'params': {'maxResults': '1'}\n        });\n</code></pre>\n\n<p>instead of </p>\n\n<pre><code>var request = gapi.client.drive.files.list({'maxResults': 5 });\n</code></pre>\n\n<p>resolved the problem!</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Code looks OK and you're correctly waiting until gapi.client.load completes. Might just be an error with loading the Drive JS files or some other issue (maybe bad JS file cached?). I modified your example a little bit to run on jsfiddle, take a look at <a href=\"http://jsfiddle.net/Rbg44/4/\" rel=\"nofollow\">http://jsfiddle.net/Rbg44/4/</a> for the full example:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;button id=\"authorize-button\"&gt;Authorize&lt;/button&gt;\n&lt;div id=\"content\"&gt;Files:&lt;/div&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>var CLIENT_ID = '...';\nvar API_KEY = '...';\nvar SCOPES = '...';\n\nfunction handleClientLoad() {\n    gapi.client.setApiKey(API_KEY);\n    window.setTimeout(checkAuth,1);\n}\n\nfunction checkAuth() {\n    var options = {\n        client_id: CLIENT_ID,\n        scope: SCOPES,\n        immediate: true\n    };\n    gapi.auth.authorize(options, handleAuthResult);\n}\n\nfunction handleAuthResult(authResult) {\n    var authorizeButton = document.getElementById('authorize-button');\n\n    if (authResult &amp;&amp; !authResult.error) {\n        authorizeButton.style.visibility = 'hidden';\n        makeApiCall();\n    } else {\n        authorizeButton.style.visibility = '';\n        authorizeButton.onclick = handleAuthClick;\n    }\n}\n\nfunction handleAuthClick(event) {\n    var options = {\n        client_id: CLIENT_ID,\n        scope: SCOPES,\n        immediate: false\n    };\n    gapi.auth.authorize(options, handleAuthResult);\n    return false;\n}\n\nfunction makeApiCall() {  \n    gapi.client.load('drive', 'v2', makeRequest);   \n}\n\nfunction makeRequest() {\n    var request = gapi.client.drive.files.list({'maxResults': 5 });\n    request.execute(function(resp) {          \n        for (i=0; i&lt;resp.items.length; i++) {\n            var titulo = resp.items[i].title;\n            var fechaUpd = resp.items[i].modifiedDate;\n            var userUpd = resp.items[i].lastModifyingUserName;\n            var userEmbed = resp.items[i].embedLink;\n            var userAltLink = resp.items[i].alternateLink;\n\n            var fileInfo = document.createElement('li');\n            fileInfo.appendChild(document.createTextNode('TITLE: ' + titulo + \n                ' - LAST MODIF: ' + fechaUpd + ' - BY: ' + userUpd ));                \n            document.getElementById('content').appendChild(fileInfo);\n        }\n    });    \n}\n\n$(document).ready(function() {\n  $('#authorize-button').on('click', handleAuthClick);\n  $.getScript('//apis.google.com/js/api.js', function() {\n    gapi.load('auth:client', handleClientLoad);\n  });\n});\n</code></pre>\n\n<p>Can you check in your browsers dev tools if there is any sort of issue in the request made when you call gapi.client.load()?</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You need to write this :</p>\n\n<pre><code>gapi.client.load('drive', 'v2', null);  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm trying to use the Google drive to list files.</p>\n\n<p>Using the answer in <a href=\"http://stackoverflow.com/a/11280257\">http://stackoverflow.com/a/11280257</a> I found a problem that I can't discover the reason.</p>\n\n<pre><code>var clientId = '*********.apps.googleusercontent.com';\nvar apiKey = '##########';\nvar scopes = 'https://www.googleapis.com/auth/drive';\n\n\nfunction handleClientLoad() {\n    gapi.client.setApiKey(apiKey);\n    window.setTimeout(checkAuth,1);\n}\n\nfunction checkAuth() {\n    gapi.auth.authorize({client_id: clientId, scope: scopes, immediate: true},handleAuthResult);\n}\n\nfunction handleAuthResult(authResult) {\n    var authorizeButton = document.getElementById('authorize-button');\n\n    if (authResult &amp;&amp; !authResult.error) {\n        authorizeButton.style.visibility = 'hidden';\n        makeApiCall();\n    }  \n    else {\n        authorizeButton.style.visibility = '';\n        authorizeButton.onclick = handleAuthClick;\n    }\n}\n\nfunction handleAuthClick(event) {\n    gapi.auth.authorize({client_id: clientId, scope: [scopes], immediate: false}, handleAuthResult);\n    return false;\n}\n\nfunction makeApiCall() {  \n    gapi.client.load('drive', 'v2', makeRequest);   \n}\n\nfunction makeRequest()\n{\n    var request = gapi.client.drive.files.list({'maxResults': 5 });\n\n    request.execute(function(resp) {          \n        for (i=0; i&lt;resp.items.length; i++) {\n            var titulo = resp.items[i].title;\n            var fechaUpd = resp.items[i].modifiedDate;\n            var userUpd = resp.items[i].lastModifyingUserName;\n            var userEmbed = resp.items[i].embedLink;\n            var userAltLink = resp.items[i].alternateLink;\n\n            var fileInfo = document.createElement('li');\n            fileInfo.appendChild(document.createTextNode('TITLE: ' + titulo + ' - LAST MODIF: ' + fechaUpd + ' - BY: ' + userUpd ));                \n            document.getElementById('content').appendChild(fileInfo);\n        }\n    });    \n}\n</code></pre>\n\n<p>I have this error:</p>\n\n<pre><code>Uncaught TypeError: Cannot read property 'files' of undefined \n</code></pre>\n\n<p>in the line </p>\n\n<pre><code>var request = gapi.client.drive.files.list({'maxResults': 5 });\n</code></pre>\n",
            "last_activity_date": 1420823441,
            "question_id": 11315962,
            "score": 6,
            "tags": [
                "javascript",
                "google-drive-sdk"
            ],
            "title": "Google Drive API javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If your question is, is there some built-in thing that will do the search for you, then no, there isn't. You basically loop through the array using either <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/indexOf\"><code>String#indexOf</code></a> or a <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/RegExp\">regular expression</a> to test the strings.</p>\n\n<p>For the loop, you have at least three choices:</p>\n\n<ol>\n<li><p>A boring old <code>for</code> loop.</p></li>\n<li><p>On ES5-enabled environments (or with a shim), <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/filter\"><code>Array#filter</code></a>.</p></li>\n<li><p>Because you're using jQuery, <a href=\"http://api.jquery.com/jQuery.map/\"><code>jQuery.map</code></a>.</p></li>\n</ol>\n\n<p>Boring old <code>for</code> loop example:</p>\n\n<pre><code>function search(source, name) {\n    var results = [];\n    var index;\n    var entry;\n\n    name = name.toUpperCase();\n    for (index = 0; index &lt; source.length; ++index) {\n        entry = source[index];\n        if (entry &amp;&amp; entry.name &amp;&amp; entry.name.toUpperCase().indexOf(name) !== -1) {\n            results.push(entry);\n        }\n    }\n\n    return results;\n}\n</code></pre>\n\n<p>Where you'd call that with <code>obj.list</code> as <code>source</code> and the desired name fragment as <code>name</code>.</p>\n\n<p>Or if there's any chance there are blank entries or entries without names, change the <code>if</code> to:</p>\n\n<pre><code>        if (entry &amp;&amp; entry.name &amp;&amp; entry.name.toUpperCase().indexOf(name) !== -1) {\n</code></pre>\n\n<p><code>Array#filter</code> example:</p>\n\n<pre><code>function search(source, name) {\n    var results;\n\n    name = name.toUpperCase();\n    results = source.filter(function(entry) {\n        return entry.name.toUpperCase().indexOf(name) !== -1;\n    });\n    return results;\n}\n</code></pre>\n\n<p>And again, if any chance that there are blank entries (e.g., <code>undefined</code>, as opposed to missing; <code>filter</code> will skip <em>missing</em> entries), change the inner return to:</p>\n\n<pre><code>        return entry &amp;&amp; entry.name &amp;&amp; entry.name.toUpperCase().indexOf(name) !== -1;\n</code></pre>\n\n<p><code>jQuery.map</code> example (here I'm assuming <code>jQuery</code> = <code>$</code> as is usually the case; change <code>$</code> to <code>jQuery</code> if you're using <code>noConflict</code>):</p>\n\n<pre><code>function search(source, name) {\n    var results;\n\n    name = name.toUpperCase();\n    results = $.map(function(entry) {\n        var match = entry.name.toUpperCase().indexOf(name) !== -1;\n        return match ? entry : null;\n    });\n    return results;\n}\n</code></pre>\n\n<p>(And again, add <code>entry &amp;&amp; entry.name &amp;&amp;</code> in there if necessary.)</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>You could just loop through the array and find the matches:</p>\n\n<pre><code>var results = [];\nvar searchField = \"name\";\nvar searchVal = \"my Name\";\nfor (var i=0 ; i &lt; obj.list.length ; i++)\n{\n    if (obj.list[i][searchField] == searchVal) {\n        results.push(obj.list[i]);\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Use <a href=\"https://github.com/PaulGuo\" rel=\"nofollow\">PaulGuo</a>'s <a href=\"https://github.com/PaulGuo/jSQL\" rel=\"nofollow\">jSQL</a>, a SQL like database using javascript. For example:</p>\n\n<pre><code>var db = new jSQL();\ndb.create('dbname', testListData).use('dbname');\nvar data = db.select('*').where(function(o) {\n    return o.name == 'Jacking';\n}).listAll();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I had a JSON string / object in my application. </p>\n\n<pre><code>{\"list\": [\n    {\"name\":\"my Name\",\"id\":12,\"type\":\"car owner\"},\n    {\"name\":\"my Name2\",\"id\":13,\"type\":\"car owner2\"},\n    {\"name\":\"my Name4\",\"id\":14,\"type\":\"car owner3\"},\n    {\"name\":\"my Name4\",\"id\":15,\"type\":\"car owner5\"}\n]}\n</code></pre>\n\n<p>I had a filter box in my application, and when I type a name into that box, we have to filter the object and display the result.</p>\n\n<p>For example, if the user types \"name\" and hits search, then we have to search full names in the JSON object and return the array, just like a MySQL search ...</p>\n\n<p>My question is to filter the json object with string and return the array....</p>\n\n\n",
            "last_activity_date": 1337577176,
            "question_id": 10679580,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "jsonp",
                "json"
            ],
            "title": "Javascript search inside a JSON object"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>In your first example (window.foo) you are accessing a property of the window object. JavaScript returns \"undefined\" for when you are trying to access a non existent property of a object. It's designed that way.</p>\n\n<p>In the second example you are referencing a variable directly, and since it does not exists an error is raised.</p>\n\n<p>It's just the way JavaScript is designed and works.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Because with <code>window.foo</code> you are explicitly looking for <code>foo</code> property of <code>window</code> object which is not the case in latter option. In the latter option, if <code>foo</code> isn't defined, you should as developer be able to know that it isn't defined and get the clear error warning rather than interpreter setting it to <code>undefined</code> on its own (like first case) which will lead to <em>unexpected</em> results.</p>\n\n<p><strong><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/ReferenceError\">Reference Error</a>:</strong></p>\n\n<blockquote>\n  <p>Represents an error when a non-existent variable is referenced.\n  A ReferenceError is thrown when trying to dereference a variable that has not been declared.</p>\n</blockquote>\n\n<p>Take a look at this article for more info:</p>\n\n<ul>\n<li><a href=\"http://javascriptweblog.wordpress.com/2010/08/16/understanding-undefined-and-preventing-referenceerrors/\">Understanding JavaScript\u2019s \u2018undefined\u2019</a></li>\n</ul>\n\n<p>Quoting from above article:</p>\n\n<blockquote>\n  <p>A Reference is considered unresolvable <strong>if its base value is undefined</strong>. Therefore a property reference is unresolvable if the value before the dot is undefined. The following example would throw a ReferenceError but it doesn\u2019t because TypeError gets there first. This is because the base value of a property is subject to CheckObjectCoercible (ECMA 5 9.10 via 11.2.1) which throws a TypeError when trying to convert Undefined type to an Object. </p>\n</blockquote>\n\n<p><strong>Examples:</strong></p>\n\n<pre><code>var foo;\nfoo.bar; //TypeError (base value, foo, is undefined)\nbar.baz; //ReferenceError (bar is unersolvable)\nundefined.foo; //TypeError (base value is undefined)\n</code></pre>\n\n<p><strong>References which are neither properties or variables are by definition unresolvable and will throw a ReferenceError, So:</strong></p>\n\n<pre><code>foo; //ReferenceError\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>In JavaScript you can assign object fields on the fly like that, so <code>window.foo</code> is <em>nearly (see comments below)</em> equivalent to <code>var foo;</code> <em>when defined in the global context,</em> whereas just calling <code>foo</code> out of the blue makes the browser panic 'cause it down't even know which object to look in. Notice, if you do:</p>\n\n<pre><code>//when in global context, 'var' sets a property on the window object\nvar foo;\n\nconsole.log(foo);\n//it will then also log `undefined` instead of throwing the error.\n\n//if you then do:\nfoo = \"abbazabba\";\n\nconsole.log(window.foo);\n// it will return \"abbazabba\" \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In <code>javascript</code> <code>window</code> is the global object, which means every object in the global scope is a child of <code>window</code>.  So why I get this result:</p>\n\n<pre><code>console.log(window.foo); // No error, logs \"undefined\".\nconsole.log(foo);        // Uncaught ReferenceError: foo is not defined.\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/qYsh6/\">Fiddle</a>    </p>\n\n<p>Those two lines should be the same, shouldn't they?</p>\n",
            "last_activity_date": 1334138398,
            "question_id": 10102862,
            "score": 6,
            "tags": [
                "javascript",
                "window",
                "referenceerror",
                "global-object"
            ],
            "title": "ReferenceError and the global object"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Reset the height before Using <code>scrollHeight</code> to expand/shrink the textarea correctly. <code>Math.min()</code> can be used to set a limit on the textarea's height.</p>\n\n<p>Code:</p>\n\n<pre><code>var textarea = document.getElementById(\"textarea\");\nvar heightLimit = 200; /* Maximum height: 200px */\n\ntextarea.oninput = function() {\n  textarea.style.height = \"\"; /* Reset the height*/\n  textarea.style.height = Math.min(textarea.scrollHeight, heightLimit) + \"px\";\n};\n</code></pre>\n\n<p><strong>Fiddle: <a href=\"http://jsfiddle.net/gjqWy/155\" rel=\"nofollow\">http://jsfiddle.net/gjqWy/155</a></strong></p>\n\n<p>Note: The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers.oninput\" rel=\"nofollow\"><code>input</code> event</a> is not supported by IE8 and earlier. Use <code>keydown</code> or <code>keyup</code> with <code>onpaste</code> and/or <code>oncut</code> if you want to support this ancient browser as well.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I've wanted to have the auto-expanding area to be limited by rows number (e.g 5 rows). I've considered using \"em\" units, for <a href=\"http://stackoverflow.com/a/7745840/126574\">Rob's solution</a> however, this is <a href=\"http://stackoverflow.com/questions/2034544/textareas-rows-and-cols-attribute-in-css\">error-prone</a> and wouldn't take account stuff like padding, etc.</p>\n\n<p>So this is what I came up with:</p>\n\n<pre><code>var textarea = document.getElementById(\"textarea\");\nvar limitRows = 5;\nvar messageLastScrollHeight = textarea.scrollHeight;\n\ntextarea.oninput = function() {\n    var rows = parseInt(textarea.getAttribute(\"rows\"));\n    // If we don't decrease the amount of rows, the scrollHeight would show the scrollHeight for all the rows\n    // even if there is no text.\n    textarea.setAttribute(\"rows\", \"1\");\n\n    if (rows &lt; limitRows &amp;&amp; textarea.scrollHeight &gt; messageLastScrollHeight) {\n        rows++;\n    } else if (rows &gt; 1 &amp;&amp; textarea.scrollHeight &lt; messageLastScrollHeight) {\n        rows--;\n    }\n\n    messageLastScrollHeight = textarea.scrollHeight;\n    textarea.setAttribute(\"rows\", rows);\n};\n</code></pre>\n\n<p><strong>Fiddle: <a href=\"http://jsfiddle.net/cgSj3/\" rel=\"nofollow\">http://jsfiddle.net/cgSj3/</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to do a simple auto-expanding textarea. This is my code:</p>\n\n<pre><code>textarea.onkeyup = function () {\n  textarea.style.height = textarea.clientHeight + 'px';\n}\n</code></pre>\n\n<p>But the textarea just keeps growing indefinitely as you type... </p>\n\n<p>I know there is Dojo and a jQuery plugin for this, but would rather not have to use them. I looked at their implementation, and was initially using <code>scrollHeight</code> but that did the same thing. </p>\n\n<p>You can start answering and play with the textarea for your answer to play with. </p>\n",
            "last_activity_date": 1405685568,
            "question_id": 7745741,
            "score": 6,
            "tags": [
                "javascript"
            ],
            "title": "Auto-expanding textarea"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Everything is fine, try this:</p>\n\n<pre><code>new Date(Date.parse(\"2011-10-02T23:00+02:00\")).getUTCHours()  //21\n</code></pre>\n\n<p>The date is parsed correctly (taking the timezone into account as expected). However when you simply print <code>Date.toString()</code> it shows the date in current browser timezone (one of the sins of Java <code>Date</code> object shamelessly copied to JavaScript...)</p>\n\n<p>If you stick to <code>getUTC*()</code> family of methods you will get correct values (like in example above). The ordinary <code>get*()</code> methods are always affected by browser timezone (and not the timezone from the date you parsed, which is lost), hence often useless.</p>\n\n<p>Another example: the <em>2011-10-03 02:00+03:00</em> is actually 23:00 on 2nd of October. But when you parse it (my current browser time zone is +0200 (CEST)):</p>\n\n<pre><code>new Date(Date.parse(\"2011-10-03T02:00+03:00\"))  //Oct 03 01:00:00 GMT+0200\n</code></pre>\n\n<p>However current day of month in UTC is:</p>\n\n<pre><code>new Date(Date.parse(\"2011-10-03T02:00+03:00\")).getUTCDate()  //2 (2nd of Oct)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I have set up a JSON that fetches the current time from server. For example:</p>\n\n<pre><code>{\n  \"myservertime\": \"2011-10-02T23:00+02:00\"\n}\n</code></pre>\n\n<p>So this is the CET summer time right now.</p>\n\n<p>Now, I also have a jQuery code that parses that very well.</p>\n\n<pre><code>$.sysTime = function(success) {\n\n            $.ajax({\n                url: '/jsontimepath/',\n                dataType: 'json',\n                async: false,\n                success: function(json){\n                    sysDateTime = new Date(Date.parse(json.myservertime));\n                    console.log('The system time now is: ' + sysDateTime)\n                }\n            });\n\n            return sysDateTime;\n        };  \n</code></pre>\n\n<p>The problem is that when I check the console it still shows wrong time... It is still affected by the timezone of my computer... For example, for a user in Hong Kong, the time quoted above would result:</p>\n\n<p>Mon Oct 03 2011 05:00:00 GMT+0800 (HKT)</p>\n\n<p>I do give it a valid ISO8601 time string and it just adjusts it. The actual time is returns is correct (in that timezone)... But why does it adjust it like that??? I want it to return CET time not the local time...</p>\n",
            "last_activity_date": 1317591180,
            "question_id": 7629286,
            "score": 6,
            "tags": [
                "javascript",
                "ajax",
                "json",
                "iso8601"
            ],
            "title": "Annoying javascript timezone adjustment issue"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>Fiddle: <a href=\"http://jsfiddle.net/ATUEx/\">http://jsfiddle.net/ATUEx/</a></strong> </p>\n\n<p>Create a temporary cache to remember your key strokes.</p>\n\n<p>An implementation of handling two keys would follow this pattern:</p>\n\n<ol>\n<li><code>&lt;keydown&gt;</code><br />\n<ul>\n<li>Clear previous time-out.</li>\n<li>Check whether the a key code has been cached or not.<br />If yes, and valid combination:<br />\n<code>-</code> Delete all cached key codes<br />\n<code>-</code> Execute function for this combination<br />\nelse<br />\n<code>-</code> Delete all cached key codes<br />\n<code>-</code> Store the new key code<br />\n<code>-</code> Set a time out to clear the keycodes (see below), with a reasonable delay</li>\n</ul></li>\n<li><em>Repeat 1</em></li>\n</ol>\n\n<p>A reasonable delay: Experiment to know which timeout is sufficient for you. When the delay is too short, the next initiated event will not find a previously entered key code.</p>\n\n<p>When the delay is too long, the key strokes will stack when you don't want it.\n<hr /></p>\n\n<h2>Code</h2>\n\n<p>I have created an efficient function, keeping your code in mind. You should be able to implement it very easily.</p>\n\n<pre><code>(function(){ //Anonymous function, no leaks\n    /* Change the next variable if necessary */\n    var timeout = 200; /* Timeout in milliseconds*/\n\n    var lastKeyCode = -1;\n    var timer = null;\n    function keyCheck(ev){\n        var keyCode = typeof ev.which != \"undefined\" ? ev.which : event.keyCode;\n        /* An alternative way to check keyCodes:\n         * if(keyCode &gt;= 37 &amp;&amp; keyCode &lt;= 40) ..*/\n         /*37=Left  38=Up  39=Right  40=Down */\n        if([37, 38, 39, 40].indexOf(keyCode) != -1){\n\n            /* lastKeyCode == -1 = no saved key\n               Difference betwene keyCodes == opposite keys = no possible combi*/\n            if(lastKeyCode == -1 || Math.abs(lastKeyCode - keyCode) == 2){\n                refresh();\n                lastKeyCode = keyCode;\n            } else if(lastKeyCode == keyCode){\n                clear([lastKeyCode]);\n            } else {\n                /* lastKeyCode != -1 &amp;&amp; keyCode != lastKeyCode\n                   and no opposite key = possible combi*/\n                clear([lastKeyCode, keyCode]);\n                lastKeyCode = -1\n            }\n            ev.preventDefault(); //Stop default behaviour\n            ev.stopPropagation(); //Other event listeners won't get the event\n        }\n\n        /* Functions used above, grouped together for code readability */\n        function reset(){\n            keyCombi([lastKeyCode]);\n            lastKeyCode = -1;\n        }\n        function clear(array_keys){\n            clearTimeout(timer);\n            keyCombi(array_keys);\n        }\n        function refresh(){\n            clearTimeout(timer);\n            timer = setTimeout(reset, timeout);\n        }\n    }\n\n    var lastX = false;\n    var lastY = false;\n    function keyCombi(/*Array*/ keys){\n        /* Are the following keyCodes in array \"keys\"?*/\n        var left = keys.indexOf(37) != -1;\n        var up = keys.indexOf(38) != -1;\n        var right = keys.indexOf(39) != -1;\n        var down = keys.indexOf(40) != -1;\n\n        /* What direction? */\n        var x = left ? \"negative\" : right ? \"positive\" : false;\n        var y = up ? \"negative\" : down ? \"positive\" : false;\n        /* Are we heading to a different direction?*/\n        if(lastX != x || lastY != y) animation.move(x, y);\n        lastX = x;\n        lastY = y;\n    }\n\n    //Add event listener\n    var eventType = \"keydown\";window[\"on\"+eventType] = keyCheck;\n})();\n</code></pre>\n\n<p>At the end of the anonymous function, the <code>keydown</code> event listener is added. This event is fired only once (when the key is pressed down). When a second key is pressed fast enough, the code recognises two key strokes after each other, and calls <code>keyCombi()</code>.</p>\n\n<p>I have designed <code>keyCombi</code> to be intelligent, and only call <code>animation.move(x,y)</code> when the values are changed. Also, I've implemented the possiblity to deal with two directions at a time.</p>\n\n<p><strong>Note</strong>: I have contained the functions within an anonymous function wrapper, so that the variables are not defined in the global (<code>window</code>) scope. If you don't care about scoping, feel free to remove the first and last line.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Logically this sounds rather simple:</p>\n\n<ol>\n<li>the first key triggers a key down event, store this event in a stack</li>\n<li>then the second key triggers a key down event, store this event in a stack</li>\n<li>now you have two key downs and no key up</li>\n<li>if a key up fires you have three possibilities\n<ol>\n<li>you have only one event => go in that direction</li>\n<li>you have two events => go diagonally</li>\n<li>you have more than two events, or an invalid option (e.g. right and left) => do nothing, or whatever you feel like</li>\n</ol></li>\n<li>clear the stack</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is <em>your</em> code for you, slightly revised ... <a href=\"http://jsfiddle.net/w8uNz/\" rel=\"nofollow\">http://jsfiddle.net/w8uNz/</a> It just WORKS. Moves element across the parent element.</p>\n\n<p>Rob W is right, you should have a dynamic cache of keys being pressed down at a period of time. But for what ? if you are making a dynamic game - there must be much higher abstraction for that. And overall, you need to improve your level of coding if you want to do stuff like that. (Or it will just generate headaches for you.)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm trying to let a user move an element on the page using the arrow keys. So far, I have movement working for up/down/left/right, but not for diagonal (two arrow keys pressed simultaneously).</p>\n\n<p>My listener looks like this:</p>\n\n<pre><code>addEventListener('keydown', function(e){\n    move = false;\n    x = false;\n    y = false;\n    var keycode;\n    if (window.event) keycode = window.event.keyCode;\n    else if (e) keycode = e.which;\n    switch(keycode){\n        case 37:\n            move = true;\n            x = 'negative';\n            //prevent page scroll\n            e.preventDefault()\n        break;\n        case 38:\n            move = true;\n            y = 'negative'\n            //prevent page scroll\n            e.preventDefault()\n        break;\n        case 39:\n            move = true;\n            x = 'positive'\n            //prevent page scroll\n            e.preventDefault()\n        break;\n        case 40:\n            move = true;\n            y = 'positive'\n            //prevent page scroll\n            e.preventDefault()\n        break;\n    }\n    if(move){\n        animation.move(x,y);\n    }\n    return false;\n})\n</code></pre>\n\n<p>The idea was that if the user presses an arrow key, it sets <code>x</code> and <code>y</code> to either <code>negative</code> or <code>positive</code>, and fires off the move() function, which will move the element a preset number of pixels in the desired direction, and that if two keys were pressed, a second event would fire... I also hope to be able to have the user seemlessly change directions by releasing and pressing keys rapidly Neither of these are happening, however, if the user presses another direction key, they seem to need to wait a momment for movement to happen, unless they completely release the key and then press another one, and it won't respond to the second key at all until the first is released.</p>\n",
            "last_activity_date": 1317416550,
            "question_id": 7614340,
            "score": 6,
            "tags": [
                "javascript",
                "keydown",
                "addeventlistener"
            ],
            "title": "Listen to multiple keydowns"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can always put your initial loader script at the bottom, right before the closing body tag.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What you need is a simple <strong>queue</strong> of <code>onload</code> functions. Also please <strong>avoid browser sniffing</strong> as it is unstable and not future proof. For full source code see the <strong>[<a href=\"http://jsbin.com/odica4/4/edit\">Demo</a>]</strong></p>\n\n<pre><code>var onload_queue = [];\nvar dom_loaded = false;\n\nfunction loadScriptAsync(src, callback) {\n  var script = document.createElement('script'); \n  script.type = \"text/javascript\";\n  script.async = true;\n  script.src = src;\n  script.onload = script.onreadystatechange = function() {\n    if (dom_loaded) \n      callback();\n    else \n      onload_queue.push(callback);\n    // clean up for IE and Opera\n    script.onload = null;\n    script.onreadystatechange = null;\n  };\n  var head = document.getElementsByTagName('head')[0];\n  head.appendChild(script);\n}\n\nfunction domLoaded() {\n   dom_loaded = true;\n   var len = onload_queue.length;\n   for (var i = 0; i &lt; len; i++) {\n     onload_queue[i]();\n   }\n   onload_queue = null;\n};\n\n// Dean's dom:loaded code goes here\n// do stuff\ndomLoaded();\n</code></pre>\n\n<p><strong>Test usage</strong></p>\n\n<pre><code>loadScriptAsync(\n  \"http://code.jquery.com/jquery-1.4.4.js\", \n  function() {\n      alert(\"script has been loaded\");\n   }\n);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p><strong>Problem:</strong><br>\nLoad js files asynchronously, then check to see if the dom is loaded before the callback from loading the files is executed.   </p>\n\n<p><strong>edit:</strong> We do not use jQuery; we use Prototype.<br>\n<strong>edit:</strong> added more comments to the code example. </p>\n\n<p>Hey guys,</p>\n\n<p>I'm trying to load all of my js files asynchronously so as to keep them from blocking the rest of the page. But when the scripts load and the callback is called, I need to know if the DOM has been loaded or not, so I know how to structure the callback. See below:</p>\n\n<pre><code>//load asynchronously\n(function(){\n        var e = document.createElement('script'); \n        e.type = \"text/javascript\";\n        e.async = true;\n        e.src = srcstr; \n        // a little magic to make the callback happen\n        if(navigator.userAgent.indexOf(\"Opera\")){\n            e.text = \"initPage();\";\n        }else if(navigator.userAgent.indexOf(\"MSIE\")){\n            e.onreadystatechange = initPage;\n        }else{\n            e.innerHTML = \"initPage();\";\n        }\n        // attach the file to the document\n        document.getElementsByTagName('head')[0].appendChild(e);\n})();\n\ninitPageHelper = function(){ \n    //requires DOM be loaded\n}\n\ninitPage = function(){\n    if(domLoaded){ // if dom is already loaded, just call the function\n        initPageHelper();\n    }else{ //if dom is not loaded, attach the function to be run when it does load\n        document.observe(\"dom:loaded\", initPageHelper);\n    }\n}\n</code></pre>\n\n<p>The callback gets called properly due to some magic behind the scenes that you can learn about from this Google talk: <a href=\"http://www.youtube.com/watch?v=52gL93S3usU&amp;feature=related\" rel=\"nofollow\">http://www.youtube.com/watch?v=52gL93S3usU&amp;feature=related</a></p>\n\n<p>What's the easiest, cross-browser method for asking if the DOM has loaded already?</p>\n\n<p><strong>EDIT</strong><br>\nHere's the full solution I went with.<br>\nI included prototype and the asynchronous script loader using the normal method. Life is just so much easier with prototype, so I'm willing to block for that script. </p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"prototype/prototype.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"asyncLoader.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>And actually, in my code I minified the two files above and put them together into one file to minimize transfer time and http requests.  </p>\n\n<p>Then I define what I want to run when the DOM loads, and then call the function to load the other scripts. </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    initPage = function(){\n    ...\n    }\n&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    loadScriptAsync(\"scriptaculous/scriptaculous.js\", initPage);\n    loadScriptAsync(\"scriptaculous/effects.js\", initPage);\n    loadScriptAsync(\"scriptaculous/controls.js\", initPage);\n        ...\n    loadScriptAsync(\"mypage.js\", initPage);\n&lt;/script&gt;\n</code></pre>\n\n<p>Likewise, the requests above are actually compressed into one httpRequest using a minifier. They are left separate here for readability. There is a snippet at the bottom of this post showing what the code looks like with the minifier. </p>\n\n<p>The code for asyncLoader.js is the following:</p>\n\n<pre><code>/**\n * Allows you to load js files asynchronously, with a callback that can be \n * called immediately after the script loads, OR after the script loads and \n * after the DOM is loaded. \n * \n * Prototype.js must be loaded first. \n * \n * For best results, create a regular script tag that calls a minified, combined\n * file that contains Prototype.js, and this file. Then all subsequent scripts\n * should be loaded using this function. \n * \n */\nvar onload_queue = [];\nvar dom_loaded = false;\nfunction loadScriptAsync(src, callback, run_immediately) {\n      var script = document.createElement('script'); \n      script.type = \"text/javascript\";\n      script.async = true;\n      script.src = src;\n      if(\"undefined\" != typeof callback){\n          script.onload = function() {\n                if (dom_loaded || run_immediately) \n                  callback();\n                else \n                  onload_queue.push(callback);\n                // clean up for IE and Opera\n                script.onload = null;\n                script.onreadystatechange = null;\n          };\n\n          script.onreadystatechange = function() {\n            if (script.readyState == 'complete'){\n                if (dom_loaded || run_immediately) \n                  callback();\n                else \n                  onload_queue.push(callback);\n                // clean up for IE and Opera\n                script.onload = null;\n                script.onreadystatechange = null;\n            }else if(script.readyState == 'loaded'){\n                eval(script);\n                 if (dom_loaded || run_immediately) \n                      callback();\n                else \n                  onload_queue.push(callback);\n                // clean up for IE and Opera\n                script.onload = null;\n                script.onreadystatechange = null;\n            }\n          };\n      }\n      var head = document.getElementsByTagName('head')[0];\n      head.appendChild(script);\n}\ndocument.observe(\"dom:loaded\", function(){\n    dom_loaded = true;\n    var len = onload_queue.length;\n    for (var i = 0; i &lt; len; i++) {\n        onload_queue[i]();\n    }\n    onload_queue = null;\n});\n</code></pre>\n\n<p>I added the option to run a script immediately, if you have scripts that don't rely on the page DOM being fully loaded.  </p>\n\n<p>The minified requests actually look like:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"/min/?b=javascript/lib&amp;f=prototype/prototype.js,asyncLoader.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt; initPage = function(e){...}&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    srcstr = \"/min/?f=&lt;?=implode(',', $js_files)?&gt;\";\n    loadScriptAsync(srcstr, initPage);\n &lt;/script&gt;\n</code></pre>\n\n<p>They are using the plugin from: <a href=\"http://code.google.com/p/minify/\" rel=\"nofollow\">http://code.google.com/p/minify/</a></p>\n\n<p>Thanks for the help!!<br>\n-K</p>\n",
            "last_activity_date": 1325168454,
            "question_id": 4249030,
            "score": 6,
            "tags": [
                "javascript",
                "dom",
                "asynchronous",
                "callback",
                "prototypejs"
            ],
            "title": "Load javascript async, then check DOM loaded before executing callback"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>There is a special version of <code>getElementsByTagName</code> for namespaces: <a href=\"https://developer.mozilla.org/En/DOM/Element.getElementsByTagNameNS\"><code>getElementsByTagNameNS</code></a>.</p>\n\n<p>For example:</p>\n\n<pre><code>var response = transport.responseXML.getElementsByTagName(\"channel\");\nvar sunrise = response[0].getElementsByTagNameNS(\"[Namespace URI]\", \"astronomy\")[0].getAttribute(\"sunrise\");\n</code></pre>\n\n<p>...where <code>[Namespace URI]</code> is the URI of the <code>yweather</code> namespace.</p>\n\n<p>Steve</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Using JavaScript/Ajax?</p>\n\n<p>I'm trying to extract values from:</p>\n\n<pre><code>&lt;yweather:astronomy sunrise=\"6:34 am\"   sunset=\"8:38 pm\"/&gt;\n</code></pre>\n\n<p>Looking for something like:</p>\n\n<pre><code>var response = transport.responseXML.getElementsByTagName(\"channel\");\nsunrise = response[0].getElementsByTagName(\"yweather:astronomy\").item(0).Attributes[\"sunrise\"].Value;\n</code></pre>\n\n<p>But nothing works so far. :'( \nThanks.</p>\n",
            "last_activity_date": 1395070002,
            "question_id": 1083565,
            "score": 6,
            "tags": [
                "javascript",
                "xml",
                "ajax",
                "namespaces"
            ],
            "title": "Parsing XML namespaces?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>One cannot disable the browser back button functionality only thing that can be done is prevent them.</p>\n\n<p>Below JavaScript code needs to be placed in the head section of the page where you don\u2019t want the user to revisit using the back button:</p>\n\n<pre><code>&lt;script&gt;\n  function preventBack(){window.history.forward();}\n  setTimeout(\"preventBack()\", 0);\n  window.onunload=function(){null};\n&lt;/script&gt;\n</code></pre>\n\n<p>Suppose there are two pages <code>Page1.php</code> and <code>Page2.php</code> and <code>Page1.php</code> redirects to <code>Page2.php</code>.</p>\n\n<p>Hence to prevent user from visiting <code>Page1.php</code> using Back Button you will need to place the above script in the head section of <code>Page1.php</code>.</p>\n\n<p>For more info : <a href=\"http://www.aspsnippets.com/Articles/Disable-Browser-Back-Button-Functionality-using-JavaScript.aspx\"><b>Reference</b></a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You can't, and you shouldn't.</p>\n\n<p>every other approach / alternative will only cause really bad user engagement.</p>\n\n<p>that's my opinion.</p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>Our approach is simple, but WORKS! :)</p>\n\n<p>When a user clicks our LogOut button, we simply open the login page (or any page) and close the page we are one...simulating opening in new browser window w/ no history to go back to.  </p>\n\n<pre><code>&lt;input id=\"btnLogout\" onclick=\"logOut()\" class=\"btn btn-sm btn-warning\" value=\"Logout\" type=\"button\"/&gt;\n&lt;script&gt;\n    function logOut() {\n        window.close = function () { window.open('Default.aspx', '_blank'); };\n    }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Put This script on head of your page and change 'pagename' to your page name. </p>\n\n<pre><code>  &lt;script type = \"text/javascript\" &gt;\n    history.pushState(null, null, 'pagename');\n    window.addEventListener('popstate', function(event) {\n    history.pushState(null, null, 'pagename');\n    });\n    &lt;/script&gt;\n</code></pre>\n\n<p>This works like a charm </p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>Want to disable back button for a website</p>\n\n<p>whenever the person click on browser back button it should not be able to go on the page he visited before.</p>\n",
            "last_activity_date": 1416294579,
            "question_id": 19926641,
            "score": 5,
            "tags": [
                "javascript"
            ],
            "title": "How to disable back button in browser using javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><em>JSON</em> is just a <em>notation</em>; to make the change you want <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>parse</code></a> it so you can apply the changes to a native <em>JavaScript Object</em>, then <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>stringify</code></a> back to <em>JSON</em></p>\n\n<pre><code>var jsonStr = '{\"theTeam\":[{\"teamId\":\"1\",\"status\":\"pending\"},{\"teamId\":\"2\",\"status\":\"member\"},{\"teamId\":\"3\",\"status\":\"member\"}]}';\n\nvar obj = JSON.parse(jsonStr);\nobj['theTeam'].push({\"teamId\":\"4\",\"status\":\"pending\"});\njsonStr = JSON.stringify(obj);\n// \"{\"theTeam\":[{\"teamId\":\"1\",\"status\":\"pending\"},{\"teamId\":\"2\",\"status\":\"member\"},{\"teamId\":\"3\",\"status\":\"member\"},{\"teamId\":\"4\",\"status\":\"pending\"}]}\"\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<p>I have a JSON format object I read from a JSON file that I have in a variable called teamJSON, that looks like this:</p>\n\n<pre><code> {\"theTeam\":[{\"teamId\":\"1\",\"status\":\"pending\"},{\"teamId\":\"2\",\"status\":\"member\"},{\"teamId\":\"3\",\"status\":\"member\"}]}\n</code></pre>\n\n<p>I want to add a new item to the array, such as  </p>\n\n<pre><code>{\"teamId\":\"4\",\"status\":\"pending\"}\n</code></pre>\n\n<p>to end up with </p>\n\n<pre><code>{\"theTeam\":[{\"teamId\":\"1\",\"status\":\"pending\"},{\"teamId\":\"2\",\"status\":\"member\"},{\"teamId\":\"3\",\"status\":\"member\"},{\"teamId\":\"4\",\"status\":\"pending\"}]}\n</code></pre>\n\n<p>before writing back to the file. What is a good way to add to the new element? I got close but all the double quotes were escaped. I have looked for a good answer on SO but none quite cover this case. Any help is appreciated.</p>\n",
            "last_activity_date": 1379553635,
            "question_id": 18884840,
            "score": 5,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "Adding a new array element to a JSON object"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Is this maybe what you need?</p>\n\n<pre><code>switch(myInterval){\n\n    case 0:\n    case 1:\n    case 2:\n        //doStuff();\n        break;\n\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n        //doStuff();\n        break;\n\n    case 6:\n    case 7:\n        //doStuff();\n        break;\n\n    default:\n        //doStuff();\n}\n</code></pre>\n\n<p>If you know the range is going to be very high(for example <code>0-100</code>) you can also do this, which is surely easier, cleaner and simpler:</p>\n\n<pre><code>if (myInterval &gt;= 0 &amp;&amp; myInterval &lt;= 20) {\n    //doStuff();\n} else if (myInterval &gt; 20 &amp;&amp; myInterval &lt;= 60) {\n    //doStuff();\n} else if (myInterval &gt; 60 &amp;&amp; myInterval &lt;= 70) {\n    //doStuff();\n} else /* it is greater than 70 */ {\n    //doStuff();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Use case statement with defined string or value or use \"if else if\", in case range is higher</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You have at least four options:</p>\n\n<h2>1. List each <code>case</code></h2>\n\n<p>As <a href=\"http://stackoverflow.com/a/17145741/157247\">shown by LightStyle</a>, you can list each case explicitly:</p>\n\n<pre><code>switch(myInterval){\n\n    case 0:\n    case 1:\n    case 2:\n        doStuffWithFirstRange();\n        break;\n\n    case 3:\n    case 4:\n    case 5:\n        doStuffWithSecondRange();\n        break;\n\n    case 6:\n    case 7:\n        doStuffWithThirdRange();\n        break;\n\n    default:\n        doStuffWithAllOthers();\n}\n</code></pre>\n\n<h2>2. Use <code>if</code> / <code>else if</code> / <code>else</code></h2>\n\n<p>If the ranges are large, that gets unwieldy, so you'd want to do ranges. Note that with <code>if...else if...else if</code>, you don't get to the later ones if an earlier one matches, so you only have to specify the upper bound each time. I'll include the lower bound in <code>/*...*/</code> for clarity, but normally you would leave it off to avoid introducing a maintenance issue (if you include both boundaries, it's easy to change one and forget to change the other):</p>\n\n<pre><code>if (myInterval &lt; 0) {\n    // I'm guessing this is an error\n}\nelse if (/* myInterval &gt;= 0 &amp;&amp; */ myInterval &lt;= 2){\n    doStuffWithFirstRange();\n}\nelse if (/* myInterval &gt;= 3 &amp;&amp; */ myInterval &lt;= 5) {\n    doStuffWithSecondRange();\n}\nelse if (/* myInterval &gt;= 6 &amp;&amp; */ myInterval &lt;= 7) {\n    doStuffWithThirdRange();\n}\nelse {\n    doStuffWithAllOthers();\n}\n</code></pre>\n\n<h2>3. Use <code>case</code> with expressions:</h2>\n\n<p>JavaScript is unusual in that you can use expressions in the <code>case</code> statement, so we can write the <code>if...else if...else if</code> sequence above as a <code>switch</code> statement:</p>\n\n<pre><code>switch(true){\n\n    case myInterval &lt; 0:\n        // I'm guessing this is an error\n        break;    \n    case /* myInterval &gt;= 0 &amp;&amp; */ myInterval &lt;= 2:\n        doStuffWithFirstRange();\n        break;\n\n    case /* myInterval &gt;= 3 &amp;&amp; */ myInterval &lt;= 5:\n        doStuffWithSecondRange();\n        break;\n\n    case /* myInterval &gt;= 6 &amp;&amp; */ myInterval &lt;= 7:\n        doStuffWithThirdRange();\n        break;\n\n    default:\n        doStuffWithAllOthers();\n}\n</code></pre>\n\n<p>I'm not advocating that, but it <em>is</em> an option in JavaScript, and there are times it's useful. The <code>case</code> statements are checked <strong>in order</strong> against the value you give in the <code>switch</code>. <em>(And again, lower bounds could be omitted in many cases because they would have matched earlier.)</em></p>\n\n<h2>4. Use a dispatch map</h2>\n\n<p>If your functions all take the same arguments (and that could be no arguments, or just the same ones), another approach is a dispatch map:</p>\n\n<p>In some setup code:</p>\n\n<pre><code>var dispatcher = {\n    0: doStuffWithFirstRange,\n    1: doStuffWithFirstRange,\n    2: doStuffWithFirstRange,\n\n    3: doStuffWithSecondRange,\n    4: doStuffWithSecondRange,\n    5: doStuffWithSecondRange,\n\n    6: doStuffWithThirdRange,\n    7: doStuffWithThirdRange\n};\n</code></pre>\n\n<p>Then instead of the switch:</p>\n\n<pre><code>(dispatcher[myInterval] || doStuffWithAllOthers)();\n</code></pre>\n\n<p>That works by looking up the function to call on the <code>dispatcher</code> map, defaulting to <code>doStuffWithAllOthers</code> if there's no entry for that specific <code>myInterval</code> value using <a href=\"http://blog.niftysnippets.org/2008/02/javascripts-curiously-powerful-or.html\">the curiously-powerful <code>||</code> operator</a>, and then calling it.</p>\n\n<p>You can break that into two lines to make it a bit clearer:</p>\n\n<pre><code>var f = dispatcher[myInterval] || doStuffWithAllOthers;\nf();\n</code></pre>\n\n<p>I've used an object for maximum flexibility. You <em>could</em> define <code>dispatcher</code> like this with your specific example:</p>\n\n<pre><code>var dispatcher = [\n    /* 0-2 */\n    doStuffWithFirstRange,\n    doStuffWithFirstRange,\n    doStuffWithFirstRange,\n\n    /* 3-5 */\n    doStuffWithSecondRange,\n    doStuffWithSecondRange,\n    doStuffWithSecondRange,\n\n    /* 6-7 */\n    doStuffWithThirdRange,\n    doStuffWithThirdRange\n];\n</code></pre>\n\n<p>...but if the values aren't contiguous numbers, it's much clearer to use an object instead.</p>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<p>How can I use ranges in a switch case statement using JavaScript? So, instead of writing code for each and every single possibility, I'd like to group them in ranges, For example:</p>\n\n<pre><code>switch(myInterval){\n   case 0-2:\n      //doStuffWithFirstRange();\n      break;\n\n   case 3-6:\n      //doStuffWithSecondRange();\n      break;\n\n   case 6-7:\n      //doStuffWithThirdRange();\n      break;\n\n   default:\n      //doStuffWithAllOthers();\n}\n</code></pre>\n",
            "last_activity_date": 1409584834,
            "question_id": 17145723,
            "score": 5,
            "tags": [
                "javascript",
                "switch-statement",
                "intervals"
            ],
            "title": "How can I use ranges in a switch case statement using JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Just add it here</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  $(document).ready(function() {\n  $('#myModal1').click(function() {\n  $('#myModal').reveal();\n  google.maps.event.trigger(map, 'resize');\n       });\n          });\n &lt;/script&gt;\n</code></pre>\n\n<p>BUT you need to put the map as a global variable, so lose the var here</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n   function initialize() {\n     var mapOptions = {\n      center: new google.maps.LatLng(39.739318, -89.266507),\n      zoom: 5,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n     };\n --&gt; map = new google.maps.Map(document.getElementById(\"map_canvas\"),\n   mapOptions);\n }\n\n &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>There were actually a couple of problems with your source code.</p>\n\n<ul>\n<li>The <code>initialize()</code> function is created, but never called</li>\n<li>The <code>$(document).ready</code> should be called after jQuery us loaded</li>\n<li>The <code>map</code> should be a global variable (like @Cristiano Fontes said) and not a <code>var map</code></li>\n<li>(Important) The <code>click</code> event is never called. You're trying to combine the two methods <a href=\"http://foundation.zurb.com/docs/reveal.php\">Reveal from Zurb</a> provides to open a dialog (one with JS, one with only HTML). You need to use the only JS method.</li>\n<li>You're using the wrong ID (<code>#myModal1</code> is never located in the HTML).</li>\n</ul>\n\n<p>And now: <a href=\"https://dl.dropbox.com/s/ixphicc6bwmckhs/so_resize.rar?dl=1\">Download the solution</a> (Please provide us with a download/JSFiddle next time, so we don't need to create this ourselves).</p>\n\n<p>Hope it helped!</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Didn't found how to leave a comment for the last answer, but +1 for Cristiano Fontes help! It worked. In my case:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;    \n\n$('div.map-box').hide();\n$('li.map').mouseover(function(){\n    $('div.map-box').show();\n    google.maps.event.trigger(map, 'resize');\n});\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>google.maps.event.addListenerOnce(map, 'tilesloaded', function() {\n                google.maps.event.addListenerOnce(map, 'tilesloaded', function() {\n                    google.maps.event.trigger(map, 'resize');\n                });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am new to JS, and have found the answer to a previous question, which brought up a new question, which brought me here again.</p>\n\n<p>I have a Reveal Modal that contains a Google Map API.  When a button is clicked, the Reveal Modal pops up, and displays the Google Map.  My problem is that only a third of the map is displaying.  This is because a resize trigger needs to be implemented.  My question is how do I implement the google.maps.event.trigger(map, 'resize')?  Where do I place this little snippet of code?</p>\n\n<p>Here is my test site.  Click on the Google Map button to see the problem at hand.\n<a href=\"http://simplicitdesignanddevelopment.com/Fannie%20E%20Zurb/foundation/contact_us.html#\">http://simplicitdesignanddevelopment.com/Fannie%20E%20Zurb/foundation/contact_us.html#</a></p>\n\n<p>The Reveal Model script:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  $(document).ready(function() {\n  $('#myModal1').click(function() {\n  $('#myModal').reveal();\n       });\n          });\n &lt;/script&gt;\n</code></pre>\n\n<p>My Google Map Script:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n function initialize() {\n var mapOptions = {\n center: new google.maps.LatLng(39.739318, -89.266507),\n zoom: 5,\n mapTypeId: google.maps.MapTypeId.ROADMAP\n };\n var map = new google.maps.Map(document.getElementById(\"map_canvas\"),\n mapOptions);\n }\n\n &lt;/script&gt;\n</code></pre>\n\n<p>The div which holds the Google Map:</p>\n\n<pre><code>  &lt;div id=\"myModal\" class=\"reveal-modal large\"&gt;\n  &lt;h2&gt;How to get here&lt;/h2&gt;\n  &lt;div id=\"map_canvas\" style=\"width:600px; height:300px;\"&gt;&lt;/div&gt;\n  &lt;a class=\"close-reveal-modal\"&gt;&amp;#215;&lt;/a&gt;\n &lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1394008285,
            "question_id": 13059034,
            "score": 5,
            "tags": [
                "javascript",
                "html",
                "google-maps",
                "zurb-foundation"
            ],
            "title": "How to use google.maps.event.trigger(map, &#39;resize&#39;)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You are talking about what is known as <strong>Computed Style</strong>, check out these article on how to get it:</p>\n\n<ul>\n<li><a href=\"http://www.quirksmode.org/dom/getstyles.html\">Get Styles on QuirksMode</a></li>\n<li><a href=\"http://www.navioo.com/javascript/tutorials/Get_Computed_Style_1190.html\">Get Computed Style</a> </li>\n<li><a href=\"http://robertnyman.com/2006/04/24/get-the-rendered-style-of-an-element/\">Get the rendered style of an element</a></li>\n</ul>\n\n<p>From the last article, here is a function:</p>\n\n<pre><code>function getStyle(oElm, strCssRule){\n    var strValue = \"\";\n    if(document.defaultView &amp;&amp; document.defaultView.getComputedStyle){\n        strValue = document.defaultView.getComputedStyle(oElm, \"\").getPropertyValue(strCssRule);\n    }\n    else if(oElm.currentStyle){\n        strCssRule = strCssRule.replace(/\\-(\\w)/g, function (strMatch, p1){\n            return p1.toUpperCase();\n        });\n        strValue = oElm.currentStyle[strCssRule];\n    }\n    return strValue;\n}\n</code></pre>\n\n<p><strong>How to use it:</strong></p>\n\n<p>CSS:</p>\n\n<pre><code>/* Element CSS*/\ndiv#container{\n    font: 2em/2.25em Verdana, Geneva, Arial, Helvetica, sans-serif;\n}\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>var elementFontSize = getStyle(document.getElementById(\"container\"), \"font-size\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>You might use: </p>\n\n<pre><code>var ob = document.getElementById(\"myLayer\");\nvar pos = ob.style.position;\n</code></pre>\n\n<p>Every CSS property has it's own object model. Usually those css properties that contain '-' are written using java model.</p>\n\n<p>For example:</p>\n\n<pre><code>//getting background-color property\nvar ob = document.getElementById(\"myLayer\");\nvar color = ob.style.backgroundColor;\n</code></pre>\n\n<p>If you want to get all the css properties that are defined for an object, you will have to list them one by one, because even if you did not set the property in your style sheet, an object will have it with the default value.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Polyfill to get the current CSS style of element using javascript ... Visit the <a href=\"http://www.avlabz.com/2013/02/javascript-get-current-css-style-of-an-element/\" rel=\"nofollow\">link</a> for more info   </p>\n\n<pre><code>/**\n* @desc : polyfill for getting the current CSS style of the element\n* @param : elem - The Element for which to get the computed style.\n* @param : prop - The Property for which to get the value\n* @returns : The returned style value of the element\n**/\nvar getCurrentStyle = function (ele, prop) {\n\nvar currStyle;\nif (!window.getComputedStyle) {\n    currStyle = ele.currentStyle[prop];\n} else {\n    currStyle = window.getComputedStyle(ele).getPropertyValue(prop);\n}\n\nreturn currStyle;\n}\n\n\n/** How to use **/\nvar element = document.getElementById(\"myElement\");\ngetCurrentStyle(element, \"width\"); // returns the width value   \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is it possible to get ALL of the styles for an object using JavaScript? Something like:</p>\n\n<pre>\n<code>\nmain.css\n-------\n#myLayer {\n  position: absolute;\n  width: 200px;\n  height: 100px;\n  color: #0000ff;\n}\n\nmain.js\n-------\nvar ob = document.getElementById(\"myLayer\");\nvar pos = ob.(getPosition);\n// Pos should equal \"absolute\" but\n// ob.style.position would equal null\n// any way to get absolute?\n\n</code>\n</pre>\n",
            "last_activity_date": 1386336142,
            "question_id": 4172871,
            "score": 5,
            "tags": [
                "javascript",
                "css",
                "styling"
            ],
            "title": "JavaScript get Styles"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>In short, you cannot (and shouldn't) do this.  If a user closes the browser, it's closing...no <code>unload</code> style events are guaranteed to finish, and something doing AJAX with involves latency is <em>more</em> unlikely to finish.</p>\n\n<p>You should look at firing your events at another point, or change the approach altogether, but making an AJAX call in an <code>unload</code> event is going to unreliable, <em>at best</em>.</p>\n\n<p>As an addendum to the above on the <em>shouldn't</em> part, think about it this way, how many tabs do you usually have open on any given window?  I typically have 4-6 chrome windows open with 5-12 tabs each...should my browser window hang open because 1 of those tabs wants to make some AJAX request I don't care about?  I wouldn't want it to as a <em>user</em>, so I wouldn't try and do it as a <em>developer</em>.  This is just an opinion of course, but food for thought.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Edit</strong> Based on your comment below, a revised answer:</p>\n\n<p>If you want to block until a <em>previously-initiated</em> request completes, you can do it like this:</p>\n\n<pre><code>window.onbeforeunload = function(event) {\n    var s;\n    event = event || window.event;\n    if (requestsPending &gt; 0) {\n        s = \"Your most recent changes are still being saved. \" +\n            \"If you close the window now, they may not be saved.\";\n        event.returnValue = s;\n        return s;\n    }\n}\n</code></pre>\n\n<p>The browser will then prompt the user to ask whether they want to leave the page or stay on it, putting them in control. If they stay on the page and the request has completed while the prompt was up, the next time they go to close the page, it'll let them close it without asking.</p>\n\n<p>More on asking the user whether to cancel close events <a href=\"https://developer.mozilla.org/en/DOM/window.onbeforeunload\">here</a> and <a href=\"http://msdn.microsoft.com/en-us/library/ms536907%28VS.85%29.aspx\">here</a>.</p>\n\n<hr>\n\n<p><strong>Old answer</strong> :</p>\n\n<p>Ideally, if possible, you want to <em>avoid</em> doing this. :-)</p>\n\n<p>If you can't avoid it, it's possible to make an Ajax request <em>synchronous</em>, so that it blocks the <code>onbeforeunload</code> process until it completes. I don't know DWR, but I expect it has a flag to control whether the request is synchronous or not. In the raw XmlHTTPRequest API, this is the third parameter to <code>open</code>:</p>\n\n<pre><code>req.open('GET', 'http://www.mozilla.org/', false);\n                                            ^ false = synchronous\n</code></pre>\n\n<p>Most <a href=\"http://en.wikipedia.org/wiki/List_of_JavaScript_libraries\">libraries</a> will have an equivalent. For instance, in <a href=\"http://prototypejs.org\">Prototype</a>, it's the <code>asynchronous: false</code> flag in the options.</p>\n\n<p>But again, if you can possibly avoid firing off Ajax requests as part of the page unload, I would. There will be a <em>noticeable</em> delay while the request is set up, transmitted, and completed. Much better to have the server use a timeout to close down whatever it is that you're trying to close down with this. (It can be a fairly short timeout; you can keep the session alive by using <em>asynchronous</em> Ajax requests periodically in the page while it's open&nbsp;&mdash; say, one a minute, and time out after two minutes.)</p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I would like the browser to keep the page open until the ajax requests are sent. This is what I imagine it would look like</p>\n\n<pre><code>var requestsPending = 0;\n\nwindow.onbeforeunload = function() {\n    showPleaseWaitMessage();\n    while(requestsPending &gt; 0);\n}\n\n// called before making ajax request, atomic somehow\nfunction ajaxStarted() {\n    requestsPending++;\n}\n// called when ajax finishes, also atomic\nfunction ajaxFinished() {\n    requestsPending--;\n}\n</code></pre>\n\n<p>Unfortunately, JS doesn't do multi-threading. To my understanding, the callback (ajaxFinished) would never be executed because the browser would try to wait until the while loop finishes to execute it, and so the it would loop forever.</p>\n\n<p>What's the right way to do this? Is there maybe a way to force JS to evaluate the next thing in its to-do list and then come back to the while loop? Or some syntax to \"join\" with an ajax call? I'm using DWR for my ajax.</p>\n\n<p>Thanks,\n-Max</p>\n",
            "last_activity_date": 1275613415,
            "question_id": 2970782,
            "score": 5,
            "tags": [
                "javascript",
                "ajax",
                "dwr"
            ],
            "title": "Javascript: wait until ajax request finishes to close page"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Your code WILL work if you just fix a few typos there</p>\n\n<p><strong>JS</strong></p>\n\n<pre><code>    &lt;script src=\"http://crypto-js.googlecode.com/svn/tags/3.1.2/build/rollups/aes.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"http://crypto-js.googlecode.com/svn/tags/3.1.2/build/rollups/pbkdf2.js\"&gt;&lt;/script&gt;\n    &lt;script&gt;\n        var salt = CryptoJS.lib.WordArray.random(128/8); \n        var key256Bits500Iterations = CryptoJS.PBKDF2(\"Secret Passphrase\", salt, { keySize: 256/32, iterations: 500 });\n        var iv  = CryptoJS.enc.Hex.parse('101112131415161718191a1b1c1d1e1f'); // just chosen for an example, usually random as well\n\n        var encrypted = CryptoJS.AES.encrypt(\"Message\", key256Bits500Iterations, { iv: iv });  \n        var data_base64 = encrypted.ciphertext.toString(CryptoJS.enc.Base64); \n        var iv_base64   = encrypted.iv.toString(CryptoJS.enc.Base64);       \n        var key_base64  = encrypted.key.toString(CryptoJS.enc.Base64);\n    &lt;/script&gt;\n</code></pre>\n\n<p><strong>PHP</strong></p>\n\n<pre><code>    &lt;?php\n        $encrypted = base64_decode(\"data_base64\"); // data_base64 from JS\n        $iv        = base64_decode(\"iv_base64\");   // iv_base64 from JS\n        $key       = base64_decode(\"key_base64\");  // key_base64 from JS\n\n        $plaintext = rtrim( mcrypt_decrypt( MCRYPT_RIJNDAEL_128, $key, $encrypted, MCRYPT_MODE_CBC, $iv ), \"\\t\\0 \" );\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>I am trying to encrypt in Javascript with CryptoJS and decrypt in PHP. The JS code is:</p>\n\n<pre><code>var salt = CryptoJS.lib.WordArray.random(128/8); \nvar key256Bits500Iterations = CryptoJS.PBKDF2(\"Secret Passphrase\", salt, { keySize: 256/32, iterations: 500 });\nvar iv  = CryptoJS.enc.Hex.parse('101112131415161718191a1b1c1d1e1f'); // just chosen for an example, usually random as well\n\nencrypted = CryptoJS.AES.encrypt(\"Message\", key512Bits1000Iterations, { iv: iv });  \nvar data_base64 = crypted.ciphertext.toString(CryptoJS.enc.Base64);\nvar iv_base64   = crypted.iv.toString(CryptoJS.enc.Base64);\nvar key_base64  = crypted.key.toString(CryptoJS.enc.Base64);\n</code></pre>\n\n<p>And the PHP is as follows:</p>\n\n<pre><code>$encrypted = base64_decode($data_base64);\n$iv = base64_decode($iv_base64);\n$key = base64_decode($key_base64); \n\n    $plaintext = mcrypt_decrypt( MCRYPT_RIJNDAEL_128, $key, $encrypted, MCRYPT_MODE_CBC, $iv);\necho ($plaintext);  \n</code></pre>\n\n<p>This does not return the correct answer.</p>\n\n<p>I am unsure where things are going poorly! I need to do my own IV, but if I do just say:</p>\n\n<pre><code>CryptoJS.AES.Encrypt(\"Message\", \"Secret Passphrase\");\nvar data_base64 = crypted.ciphertext.toString(CryptoJS.enc.Base64);\nvar iv_base64   = crypted.iv.toString(CryptoJS.enc.Base64);\nvar key_base64  = crypted.key.toString(CryptoJS.enc.Base64);\n</code></pre>\n\n<p>It DOES successfully work in the PHP code -- only the key_base64 isn't something that can be changed, it has to be what the user remembers... And then it gives me a salt to get a key from the passphrase entered and IDK how it managed to get that using CryptoJS</p>\n",
            "last_activity_date": 1414459661,
            "question_id": 21180721,
            "score": 4,
            "tags": [
                "javascript",
                "php",
                "encryption",
                "aes",
                "cryptojs"
            ],
            "title": "AES-256-CBC Mcrypt-PHP decrypt and Crypto-JS Encrypt"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<ul>\n<li>download the <a href=\"http://phantomjs.org/download.html\">PhantomJS binary</a>, upload it somewhere and make it executable (<code>chmod +x</code>)</li>\n<li>if you are going to make screenshots, setup <a href=\"http://en.wikipedia.org/wiki/Fontconfig\">fontconfig</a> (this is pretty specific to my config but the goal is to make sure to have at least some fonts on your system)</li>\n<li>run the following in PHP:<br>\n<code>$response = exec('/path/to/phantomjs myscript.js');</code></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I want to execute PhantomJS from PHP on localhost.</p>\n\n<p>Can any body explain how to execute PhantomJS from PHP and what package I should download  from phantomjs.org?</p>\n",
            "last_activity_date": 1394223630,
            "question_id": 20202407,
            "score": 4,
            "tags": [
                "javascript",
                "php",
                "phantomjs"
            ],
            "title": "how to Execute PhantomJS from PHP"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>No</strong>,that would be a security issue.\n<hr>\nHowever, it's possible to clear the history in JavaScript within a Google chrome extension. <a href=\"http://code.google.com/chrome/extensions/history.html#method-deleteAll\" rel=\"nofollow\">chrome.history.deleteAll()</a>.\n<hr>\nUse</p>\n\n<pre><code>window.location.replace('pageName.html');\n</code></pre>\n\n<blockquote>\n  <p>similar behavior as an HTTP redirect</p>\n</blockquote>\n\n<p>Read <a href=\"http://stackoverflow.com/questions/503093/how-can-i-make-a-redirect-page-in-jquery-javascript/506004#506004\">How can I make a redirect page in jQuery/JavaScript?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You cannot clear the browser history. It belongs to the user, not the developer. Also have a look at the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/window.history?redirectlocale=en-US&amp;redirectslug=DOM/window.history\" rel=\"nofollow\">MDN documentation</a>.</p>\n\n<p>Update: The link you were posting all over does not actually clear your browser history. It just prevents using the back button. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Can you try using <code>document.location.replace()</code> it is used to clear the last entry in the history  and replace it with the address of a new url. <code>replace()</code> removes the URL of the current document from the document history, meaning that it is not possible to use the \"back\" button to navigate back to the original document.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function Navigate(){   \n         window.location.replace('your link');\n        return false;\n    }\n   &lt;/script&gt;\n</code></pre>\n\n<p>HTML: </p>\n\n<pre><code>   &lt;button onclick=\"Navigate()\"&gt;Replace document&lt;/button&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Its not possible to clear user history without plugins . And also it not the issue at developers perspective , its the burden of the user to clear his history. \nFor information refer <a href=\"http://stackoverflow.com/questions/2190808/how-to-clear-browsers-ie-firefox-opera-chrome-history-using-javascript-or-j\">How to clear browsers (IE, Firefox, Opera, Chrome) history using JavaScript or Java except from browser itself?</a></p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>As MDN <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/window.history\" rel=\"nofollow\">Window.history()</a> describes :</p>\n\n<blockquote>\n  <p>For top-level pages you can see the list of pages in the session history, accessible via the History object, in the browser's dropdowns next to the back and forward buttons.</p>\n  \n  <p>For security reasons the History object doesn't allow the non-privileged code to access the URLs of other pages in the session history, but it does allow it to navigate the session history.</p>\n  \n  <p>There is no way to clear the session history or to disable the back/forward navigation from unprivileged code. The closest available solution is the location.replace() method, which replaces the current item of the session history with the provided URL.</p>\n</blockquote>\n\n<p>So there is no javascript method to clear the session history , instead , if you want to block use to navigate back to certain page , you can use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Location.replace\" rel=\"nofollow\">localtion.replace()</a> method , and pass the page link as param , which will not push the page to browser's session history list.For example,there are three pages :</p>\n\n<p><strong>a.html:</strong></p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;a.html page&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n         &lt;p&gt;This is &lt;code style=\"color:red\"&gt;a.html&lt;/code&gt; page ! Go to &lt;a href=\"b.html\"&gt;b.html&lt;/a&gt; page !&lt;/p&gt;        \n    &lt;/body&gt;\n &lt;/html&gt;\n</code></pre>\n\n<p><strong>b.html:</strong></p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n    &lt;title&gt;b.html page&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;p&gt;This is &lt;code style=\"color:red\"&gt;b.html&lt;/code&gt; page ! Go to &lt;a id=\"jumper\" href=\"c.html\"&gt;c.html&lt;/a&gt; page !&lt;/p&gt;\n\n    &lt;script type=\"text/javascript\"&gt;\n\n        var jumper = document.getElementById(\"jumper\");\n\n        jumper.onclick = function(event){\n\n            var e = event || window.event ;\n            if(e.preventDefault){\n                e.preventDefault();\n            }else{\n                e.returnValue = true ;\n            }\n\n            location.replace(this.href);\n\n            jumper = null;\n        }\n    &lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>\n<strong>c.html:</strong></p>\n\n<pre><code> &lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;c.html page&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;p&gt;This is &lt;code style=\"color:red\"&gt;c.html&lt;/code&gt; page&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>and with href link , we can nav form <strong>a.html</strong>-><strong>b.html</strong>-><strong>c.html</strong>.In the <strong>b.html</strong> , we use <code>localtion.replace(c.html)</code> method to nav from <strong>b.html</strong>-> <strong>c.html</strong>.Finally when will go to c.html , and we click back button in the browser, then we will jump to <strong>a.html</strong>.</p>\n\n<p>So this is it ! May you be helpfull !</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am doing a simple project, let us take high secure website. I have 5 different jsp pages. If I started from first jsp page, it is redirecting to second jsp page and so on. In the meanwhile, it should not store those pages in my browser history.\nHow to clear those browsing history using JavaScript?</p>\n",
            "last_activity_date": 1414647521,
            "question_id": 20044554,
            "score": 4,
            "tags": [
                "javascript",
                "browser-history"
            ],
            "title": "How to clear browsing history using javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>HTML:</p>\n\n<pre><code>&lt;input production-qty type=\"text\" maxlength=\"3\" ng-model=\"qty1\"&gt;\n</code></pre>\n\n<p>Directive:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>app.directive('productionQty', function() {\n  return {\n    require: 'ngModel',\n    link: function (scope, element, attr, ngModelCtrl) {\n      function fromUser(text) {\n        var transformedInput = text.replace(/[^0-9]/g, '');\n        console.log(transformedInput);\n        if(transformedInput !== text) {\n            ngModelCtrl.$setViewValue(transformedInput);\n            ngModelCtrl.$render();\n        }\n        return transformedInput;  // or return Number(transformedInput)\n      }\n      ngModelCtrl.$parsers.push(fromUser);\n    }\n  }; \n});\n</code></pre>\n\n<p><a href=\"http://plnkr.co/edit/cXew2Ln3rOuSon23Mmuk?p=preview\">Plunker</a></p>\n\n<p>See also <a href=\"http://stackoverflow.com/questions/14419651/angularjs-filters-on-ng-model-in-an-input\">angularjs filters on ng-model in an input</a>.  My answer above is modeled off pkozlowski.opensource's answer.</p>\n\n<p>I looked at ng-pattern, but it does not filter what is shown in the textbox.  It sets <code>$scope.qty1</code> to <code>undefined</code>, but the undesired characters are visible in the textbox.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>First include this code in js file\n<kbd><a href=\"https://github.com/joshuadeleon/NumericInput/blob/master/numericInput.js\" rel=\"nofollow\">numericInput.js</a></kbd></p>\n\n<p><strong>Directive : -</strong></p>\n\n<pre><code>.directive('numeric', function() {\n    return function(scope, element, attrs) {\n\n        $(element[0]).numericInput({ allowFloat: true });\n\n    };\n})\n</code></pre>\n\n<p><strong>HTML : -</strong></p>\n\n<pre><code> &lt;input type=\"text\" numeric /&gt;\n</code></pre>\n\n<p><strong>DEMO</strong> <kbd><a href=\"http://jsfiddle.net/Nishchit14/46f4w/3/\" rel=\"nofollow\">Numeric Demo</a></kbd></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>not directive but I use just:</p>\n\n<p>controller:</p>\n\n<pre><code>    $scope.blockNonNumber = function (val, field){\n\n       $scope[field] = val.toString().replace(/[^0-9]/g, '');\n\n    }\n</code></pre>\n\n<p>html:</p>\n\n<pre><code>&lt;input type=\"text\" ng-model=\"price\" ng-change=\"blockNonNumber(price, 'price')\" pattern=\"[0-99]\"&gt;\n</code></pre>\n\n<p>it's not directive but can be used in directive as wellside</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>HTML: </p>\n\n<pre><code>&lt;input type=\"number\" name=\"graduationYear\" ng-model=\"gradYear\" only-num&gt;\n</code></pre>\n\n<p>Directive:</p>\n\n<pre><code>directive('onlyNum', function() {\n    return function(scope, element, attrs) {\n\n        var keyCode = [8, 9, 37, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110];\n        element.bind(\"keydown\", function(event) {\n            //console.log($.inArray(event.which,keyCode));\n            if ($.inArray(event.which, keyCode) === -1) {\n                scope.$apply(function() {\n                    scope.$eval(attrs.onlyNum);\n                    event.preventDefault();\n                });\n                event.preventDefault();\n            }\n\n        });\n    };\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have to write some code for IE8.  I have an ng-repeat creating a table filled with:</p>\n\n<pre><code>&lt;input production-qty type=\"text\" class=\"input-mini\" maxlength=\"3\" ng-model=\"day.qtyA\" ui-event=\"{ blur : 'updateProduction(day)' }\" ng-disabled=\"day.type=='H'\"&gt;\n</code></pre>\n\n<p>IE8 won't do type=number</p>\n\n<p>I want a directive that will ignore key strokes on that input field that are NOT numeric keys....ie....0 - 9</p>\n\n<p>I don't want to let the user type abc and pollute the model and then tell them the value is invalid.  I'd rather not let them enter any data that's not valid in the first place.</p>\n",
            "last_activity_date": 1422024293,
            "question_id": 15554915,
            "score": 4,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-directive"
            ],
            "title": "angular directive ignore non-numeric input"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If you have a counter, rather than increment it by 1 ever second, store the \"start time\" and then calculate the count since that start time instead. You would still do this every second, but it would recover from a period of pausing.</p>\n\n<pre><code>&lt;div id=\"counter\"&gt;&lt;/div&gt;\n&lt;script&gt;\nvar startTime = new Date();\n\nvar updateCounter = function () {\n    var displayArea = document.getElementById(\"counter\");\n    var currentTime = new Date.now();\n    var differenceInSeconds = Math.round((currentTime - startTime) / 1000);\n    displayArea.innerHTML = differenceInSeconds ;\n}\n\nwindow.setInterval(updateCounter, 1000);\n&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Sohnee/4HQYV/\" rel=\"nofollow\">See the working example on JS Fiddle</a></p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>I have just tested on an iPad2 running IOS5 and it definitely pauses execution of JavaScript in inactive tabs. You won't be able to prevent this behaviour, you will just have to work with it.</p>\n\n<p><a href=\"http://jsfiddle.net/Sohnee/EVctG/\" rel=\"nofollow\">View the test page on JS Fiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This is nothing new to iOS 5. Mobile Safari has <em>always</em> paused javascript execution for non-active tabs. I know this because of testing I did with keeping a running record of geolocation coordinates a year or two ago in a web page. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had an issue on iPad when new tab was opened I couldn't catch the 'focus' event so after looking for the right event I found that you can use: \"pageshow\"</p>\n\n<p>Good Luck!!!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Why cant you try- check the current browser tab is active or not and based on that condition do your stuff. see this is best solution </p>\n\n<p><a href=\"http://stackoverflow.com/questions/1060008/is-there-a-way-to-detect-if-a-browser-window-is-not-currently-active/1060034#1060034\">Is there a way to detect if a browser window is not currently active?</a></p>\n\n<p>but i am not sure whether it is usefull for ios browser.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>i have a problem specific to ios 5 and same code works in ios 4.X and other desktop browsers.</p>\n\n<p>i am using JavaScript to do some stuff every few seconds,now the problem is when i switch to other tab in ipad safari,this script stops working.</p>\n\n<p>when i switch back to this tab it starts working again.</p>\n\n<p>you can reproduce it on this page,\n<a href=\"http://www.w3schools.com/js/tryit.asp?filename=tryjs_timing_infinite\" rel=\"nofollow\">http://www.w3schools.com/js/tryit.asp?filename=tryjs_timing_infinite</a></p>\n\n<p>visit this link,click on start counting,and go to some other browser tab.when you come back to this tab after few seconds you will notice counter did not increased when tab was not active.</p>\n\n<p>i think apple has done this to improve performance,can someone suggest a solution to make it work,i am totally stuck in this issue.</p>\n",
            "last_activity_date": 1406759015,
            "question_id": 7977170,
            "score": 4,
            "tags": [
                "javascript",
                "ipad",
                "apple",
                "ios5",
                "mobile-safari"
            ],
            "title": "ios 5 pauses javascript when tab is not active"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Cross domain? not possible without a server process. If you are on windows and can use HTA you can use the iframe</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>With javascript, getting the file contents from another domain is not allowed in many browsers for security reasons. In php, you'd have to utilize <a href=\"http://php.net/manual/en/book.curl.php\" rel=\"nofollow\">curl</a>.</p>\n\n<p>For a workaround, you can make a php script with curl on your local domain and call that with javascript.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>i think using javascript xmlhttprequest with setRequestHeader('content-type','xml/text') and the url what u need it will return the responseText as the html of the page</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>In Javascript, you can try to use this:</p>\n\n<p><a href=\"https://github.com/padolsey/jQuery-Plugins/blob/master/cross-domain-ajax/jquery.xdomainajax.js\" rel=\"nofollow\">https://github.com/padolsey/jQuery-Plugins/blob/master/cross-domain-ajax/jquery.xdomainajax.js</a></p>\n\n<p>to bypass same-origin policy</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<h1>here is solution to get source of url  - <a href=\"http://stackoverflow.com/a/18447625/2657601\">http://stackoverflow.com/a/18447625/2657601</a></h1>\n\n<p>it works for external link. it uses <code>$.ajax()</code> function..</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I get html source code from an external web page? </p>\n\n<p>Something like: <code>getHtml('http://google.com');</code>.</p>\n\n<p>I've tried to get content of iframe using: <code>$(\"#frame\").contents().find(\"html\");</code>, but if in my case the webpage doesn't have html tags, just 1 line of text. I can't do it with php <code>file_get_contents()</code> because it doesn't keep session data.</p>\n",
            "last_activity_date": 1377531101,
            "question_id": 5289027,
            "score": 4,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to get html source code from external url"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><code>document.getElementById(\"string\").value = document.getElementById(\"string\").value + string;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>+=</code> works fine.</p>\n\n<pre><code>var str = \"stack\";\nstr += \"overflow\";\n\nconsole.log(str); //alert(str); Use firebug!!\n</code></pre>\n\n<blockquote>\n  <blockquote>\n    <p>stackoverflow</p>\n  </blockquote>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>If its a reference to an input text filed then you can use the value property</p>\n\n<pre><code>function addstring(string)\n{\n    document.getElementById(\"string\").value += string.value;\n\n}\n</code></pre>\n\n<p>See <strong><a href=\"https://developer.mozilla.org/en/XUL/Attribute/textbox.value\" rel=\"nofollow\">value</a></strong> </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Javascript does not support passing parameters by reference. </p>\n\n<p>This link offers a good breakdown and some workarounds- <a href=\"http://snook.ca/archives/javascript/javascript_pass\">Passing by Value or reference</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Your code example will work just fine with <code>+=</code>; complete example below. This suggests the problem you're having lies elsewhere.</p>\n\n<pre><code>&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-type\" content=\"text/html;charset=UTF-8\"&gt;\n&lt;title&gt;Test Page&lt;/title&gt;\n&lt;style type='text/css'&gt;\nbody {\n    font-family: sans-serif;\n}\n&lt;/style&gt;\n&lt;script type='text/javascript'&gt;\nfunction addstring(string)\n{\n    document.getElementById('string').value += string;\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;&lt;div&gt;\n&lt;input type='text' id='string' value=''&gt;\n&lt;br&gt;&lt;input type='button' value='One' onClick=\"addstring('one');\"&gt;\n&lt;input type='button' value='Two'     onClick=\"addstring('two');\"&gt;\n&lt;input type='button' value='Three'   onClick=\"addstring('three');\"&gt;\n&lt;/div&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><em>Javascript does not support passing parameters by reference - Not true</em></p>\n\n<p>Actually it does. Prototyping makes it possible to create true references to all kinds of javascript objects, including strings. </p>\n\n<p>By true reference I mean when:</p>\n\n<ul>\n<li>Changes made to a variable or object\npassed by reference is\nreflected on the actual variable\nbeeing passed</li>\n<li>The change is seen by all\nreferences to the same variable</li>\n<li>Everyone knowing the reference may\nchange the referenced variable</li>\n</ul>\n\n<p>To create a true reference to a variable:</p>\n\n<ul>\n<li>Create a constructor function</li>\n<li>Prototype your reference variables on\nthe constructor</li>\n<li>DO NOT declare variables with the\nsame name inside the constructor\nfunction!</li>\n<li>Create a change() function which\n<strong>changes the prototyped variable</strong> or do\nso directly</li>\n<li>Optional: Create a change() function-reference\ninside your constructor which is set\nto the ChangeRef() function uppon\ncreation</li>\n</ul>\n\n<p>Changes made this way will be seen and may be changed by all other TestRef() objects</p>\n\n<pre><code>function TestRef(s) {\n    this.string = 'Own test-string: ' + s;\n    this.change = ChangeRef;\n}\nfunction ChangeRef(s) {\n    TestRef.prototype.refStr = s;\n    return TestRef.prototype.refStr;\n}\nr = 'RefStr';\nTestRef.prototype.refStr = r; // PROTOTYPE =&gt; 'RefStr', copy of r\n\ns = new TestRef('s'); // Obj.string = Own test-string: s, Obj.refStr = RefStr\no = new TestRef('o'); // Obj.string = Own test-string: o, Obj.refStr = RefStr\nChangeRef('ChangedStr');  // Change referenced string!\nTestRef.prototype.refStr; // =&gt; ChangedStr, referenced string changed\nr; // =&gt; RefStr, original string intact\nx = new TestRef('x'); // Obj.string = Own test-string: x, Obj.refStr = ChangedStr. New sees changed string\ns; // =&gt; Obj.string = Own test-string: s, Obj.refStr = ChangedStr. Old sees changed string\no; // =&gt; Obj.string = Own test-string: o, Obj.refStr = ChangedStr. Old sees changed string\ns.change('Changed by local function');\nx; // =&gt; Obj.string = Own test-string: o, Obj.refStr = Changed by local function\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You can clone the object by first converting it to JSON (watch out for circular references) and then parse it back again.  Like so:</p>\n\n<pre><code>function clone(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n</code></pre>\n\n<p>This uses the internal browser's JSON routines (safer &amp; faster than using an external resource).  If you simply must have backwards compatibility you can download the core JSON routines from JSON.org.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Hey i dont know if that is possible but i want to set a given variable in js by <strong>reference</strong>.</p>\n\n<p>What i want to do is, that each time i pass a string to the function <code>addstring</code> that the value of the textfield is added like <strong>+=</strong></p>\n\n<pre><code>function addstring(string)\n{\n    document.getElementById(\"string\").value = string; // its a textfield\n\n}\n</code></pre>\n\n<p>How can i do that?</p>\n",
            "last_activity_date": 1347457512,
            "question_id": 2423868,
            "score": 4,
            "tags": [
                "javascript",
                "variable-assignment"
            ],
            "title": "How to append a string value during assignment in Javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>As far as I know, you won't be able to apply styling to regular text. You some sort of html element to operate on. You could try wrapping the selected text with a span and then style the span.</p>\n\n<pre><code>$().selectedText().wrap(\"&lt;span&gt;&lt;/span&gt;\").parent().addClass(\"wrapped\").css({backgroundColor: \"Yellow\"});\n</code></pre>\n\n<p>I added a class of \"wrapped\" as well, so that on subsequent attempts to highlight text, you can remove previous highlights.</p>\n\n<pre><code>$(\".wrapped\").each(function(){ ($(this).replaceWith( $(this).text() });\n</code></pre>\n\n<p>Code is untested.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The following should do what you want. In non-IE browsers it turns on <code>designMode</code>, applies a background colour and then switches <code>designMode</code> off again.</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Fixed to work in IE 9.</p>\n\n<pre><code>function makeEditableAndHighlight(colour) {\n    sel = window.getSelection();\n    if (sel.rangeCount &amp;&amp; sel.getRangeAt) {\n        range = sel.getRangeAt(0);\n    }\n    document.designMode = \"on\";\n    if (range) {\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    // Use HiliteColor since some browsers apply BackColor to the whole block\n    if (!document.execCommand(\"HiliteColor\", false, colour)) {\n        document.execCommand(\"BackColor\", false, colour);\n    }\n    document.designMode = \"off\";\n}\n\nfunction highlight(colour) {\n    var range, sel;\n    if (window.getSelection) {\n        // IE9 and non-IE\n        try {\n            if (!document.execCommand(\"BackColor\", false, colour)) {\n                makeEditableAndHighlight(colour);\n            }\n        } catch (ex) {\n            makeEditableAndHighlight(colour)\n        }\n    } else if (document.selection &amp;&amp; document.selection.createRange) {\n        // IE &lt;= 8 case\n        range = document.selection.createRange();\n        range.execCommand(\"BackColor\", false, colour);\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I'm attempting to create a study tool for a page that allows a user to select any text on the page and click a button.  This click then formats the selected text with a yellow background.  I can make this work inside of a single tag, but if the range of selection is across multiple tags (for instance, the first LI in an unordered list along with half of the second), I have difficulty applying the style.  I can't just wrap the selection with a span here unfortunately.</p>\n\n<p>Basically, I want the effects associated with <code>contentEditable</code> and <code>execCommand</code> without actually making anything editable on the page except to apply a background color to the selected text with the click of a button. </p>\n\n<p>I'm open to jQuery solutions, and found <a href=\"http://perplexed.co.uk/1020_text_selector_jquery_plugin.htm\" rel=\"nofollow\">this plug-in</a> that seems to simplify the ability to create ranges across browsers, but I was unable to use it to apply any formatting to the selected range.  I can see from the console that it's picking up on the selection, but using something like:</p>\n\n<pre><code>var selected = $().selectedText();\n$(selected).css(\"background-color\",\"yellow\");\n</code></pre>\n\n<p>has no effect.</p>\n\n<p>Any help pointing me in the right direction would be greatly appreciated.</p>\n",
            "last_activity_date": 1380774659,
            "question_id": 1622629,
            "score": 4,
            "tags": [
                "javascript",
                "jquery",
                "range",
                "highlighter"
            ],
            "title": "Javascript Highlight Selected Range Button"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I believe this is what you want</p>\n\n<pre><code>document.body.offsetWidth\ndocument.body.offsetHeight\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think you can use</p>\n\n<pre><code>width: window.outerWidth\nheight: window.outerHeight\n</code></pre>\n\n<p>you can use jquery so it wont be undefined in ie. You might try and figure out there screen size first and then using the dimensions of the browser figure out the precise size. </p>\n\n<p>doc:\n<a href=\"http://docs.jquery.com/Plugins/dimensions/outerHeight\" rel=\"nofollow\">http://docs.jquery.com/Plugins/dimensions/outerHeight</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This also could be helpful, depending on what exactly you're trying to accomplish:</p>\n\n<p>window.moveTo(0,0);\nwindow.resizeTo(screen.width,screen.height);\nvar navButtonsEtcHeight = screen.height - window.innerHeight;\nvar navButtonsEtcWidth = screen.width - window.innerWidth;</p>\n\n<p>Note: For browser-independent solution to \"window.innerHeight\" support, see <a href=\"http://www.howtocreate.co.uk/tutorials/javascript/browserwindow\" rel=\"nofollow\">this link</a></p>\n\n<p>Then you have the answer you're looking for -- mind you, with the downside of the non-fullscreen user seeing their window bounce around the screen first.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I don't think it is possible.</p>\n\n<p>It might be worth reviewing <a href=\"http://books.google.com/books?id=2weL0iAfrEMC&amp;lpg=PA275&amp;ots=_8ZBvAU3aH&amp;dq=window.outerwidth%20internet%20explorer&amp;pg=PA270\" rel=\"nofollow\">Chapter 14 of O'Reilly's: JavaScript - The Definitive Guide</a>, particularly section 14.3.1.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's a variation of DreadPirateShawn's answer. Tested on IE7 and Chrome8. Originally appearing on <a href=\"http://www.experts-exchange.com/Web/Web_Languages/JavaScript/Q_20917957.html\" rel=\"nofollow\">Experts Exchange</a>.</p>\n\n<pre><code>function getWindowSize() {\n    var wW, wH;\n    if (window.outerWidth) {\n        wW = window.outerWidth;\n        wH = window.outerHeight;\n    } else {\n        var cW = document.body.offsetWidth;\n        var cH = document.body.offsetHeight;\n        window.resizeTo(500,500);\n        var barsW = 500 - document.body.offsetWidth;\n        var barsH = 500 - document.body.offsetHeight;\n        wW = barsW + cW;\n        wH = barsH + cH;\n        window.resizeTo(wW,wH);\n    }\n    return { width: wW, height: wH };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Does anybody here know what the Javascript call is to get the width/height of the entire browser window (including nav, menu, etc?)</p>\n\n<p>I know there is <code>outerWidth</code>, <code>outerHeight</code> in FF, Safari and other browsers.</p>\n",
            "last_activity_date": 1326914774,
            "question_id": 1045050,
            "score": 4,
            "tags": [
                "javascript",
                "internet-explorer"
            ],
            "title": "Getting the width/height of the entire browser in IE?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You're so close!  When you append the <code>Document Fragment</code> to the temporary <code>span</code> element, you've turned them into a manageable group, accessible through the trusty <code>childNodes</code> array.</p>\n\n<pre><code>    var selnodes = tempspan.childNodes;\n</code></pre>\n\n<p>Additionally, you're setting yourself up for some trouble with that <code>for(i in selnodes)</code> loop, which would return the elements in the array, <strong>PLUS</strong> the <code>length</code> property, and the <code>__proto__</code>  property, and any other properties the object may have.  </p>\n\n<p>You should really only use those kinds of <code>for</code> loops when looping over the properties in an object, and then <em>always</em> with <code>if (obj.hasOwnProperty[i])</code> to filter out properties inherited from the prototype.  </p>\n\n<p>When looping through arrays, use:</p>\n\n<pre><code>    for(var i=0,u=selnodes.length;i&lt;u;i++)\n</code></pre>\n\n<p>Finally,  once you load that array, you'll actually need to check each element to see if it's a DOM node <em>or</em> a Text node before you can handle it.  We can do that by checking to see if it supports the <code>tagName</code> property.</p>\n\n<pre><code>    if (typeof selnodes[i].tagName !== 'undefined')\n</code></pre>\n\n<p>Here's the whole thing:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction getSelectedNodes(){\n    var sel = window.getSelection();\n    try{var frag=sel.getRangeAt(0).cloneContents()}catch(e){return(false);}\n    var tempspan = document.createElement(\"span\");\n    tempspan.appendChild(frag);\n    console.log(tempspan);\n    window.selnodes = tempspan.childNodes;\n    var output = ''\n    for(var i=0, u=selnodes.length;i&lt;u;i++){\n        if (typeof selnodes[i].tagName !== 'undefined'){\n          output += \"A \"+selnodes[i].tagName+\" was found\\n\"\n        }\n        else output += \"Some text was found: '\"+selnodes[i].textContent+\"'\\n\";\n        //do something cool with each element here...\n    }\n    return(output)\n}\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body contentEditable=\"true\" onkeypress=\"return(keypress(event))\"&gt;\n&lt;div&gt;This &lt;strong&gt;div&lt;/strong&gt; is &lt;em&gt;content&lt;/em&gt; &lt;span class='red'&gt;editable&lt;/span&gt; and has a couple of &lt;em&gt;&lt;strong&gt;child nodes&lt;/strong&gt;&lt;/em&gt; within it&lt;/div&gt;\n&lt;br /&gt;\n&lt;br /&gt;\n&lt;a href=\"#\" onmouseover=\"alert(getSelectedNodes())\"&gt;hover here&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's a version that gives you the actual selected and partially selected nodes rather than clones. Alternatively you could use my <a href=\"http://code.google.com/p/rangy\">Rangy</a> library, which has a <code>getNodes()</code> method of its Range objects and works in IE &lt; 9.</p>\n\n<pre><code>function nextNode(node) {\n    if (node.hasChildNodes()) {\n        return node.firstChild;\n    } else {\n        while (node &amp;&amp; !node.nextSibling) {\n            node = node.parentNode;\n        }\n        if (!node) {\n            return null;\n        }\n        return node.nextSibling;\n    }\n}\n\nfunction getRangeSelectedNodes(range) {\n    var node = range.startContainer;\n    var endNode = range.endContainer;\n\n    // Special case for a range that is contained within a single node\n    if (node == endNode) {\n        return [node];\n    }\n\n    // Iterate nodes until we hit the end container\n    var rangeNodes = [];\n    while (node &amp;&amp; node != endNode) {\n        rangeNodes.push( node = nextNode(node) );\n    }\n\n    // Add partially selected nodes at the start of the range\n    node = range.startContainer;\n    while (node &amp;&amp; node != range.commonAncestorContainer) {\n        rangeNodes.unshift(node);\n        node = node.parentNode;\n    }\n\n    return rangeNodes;\n}\n\nfunction getSelectedNodes() {\n    if (window.getSelection) {\n        var sel = window.getSelection();\n        if (!sel.isCollapsed) {\n            return getRangeSelectedNodes(sel.getRangeAt(0));\n        }\n    }\n    return [];\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Below Code is sample to solve your problem, below code return all selected node that in range</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n&lt;title&gt;payam jabbari&lt;/title&gt;\n&lt;script src=\"http://code.jquery.com/jquery-2.0.2.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n\n$(document).ready(function(){\n    var startNode = $('p.first').contents().get(0);\nvar endNode = $('span.second').contents().get(0);\nvar range = document.createRange();\nrange.setStart(startNode, 0);\nrange.setEnd(endNode, 5);\nvar selection = document.getSelection();\nselection.addRange(range);\n// below code return all nodes in selection range. this code work in all browser\nvar nodes = range.cloneContents().querySelectorAll(\"*\");\nfor(var i=0;i&lt;nodes.length;i++)\n{\n   alert(nodes[i].innerHTML);\n}\n});\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;div&gt;\n\n&lt;p class=\"first\"&gt;Even a week ago, the idea of a Russian military intervention in Ukraine seemed far-fetched if not totally alarmist. But the arrival of Russian troops in Crimea over the weekend has shown that he is not averse to reckless adventures, even ones that offer little gain. In the coming days and weeks&lt;/p&gt;\n\n&lt;ol&gt;\n    &lt;li&gt;China says military will respond to provocations.&lt;/li&gt;\n    &lt;li &gt;This Man Has Served 20 &lt;span class=\"second\"&gt; Years\u2014and May Die\u2014in &lt;/span&gt; Prison for Marijuana.&lt;/li&gt;\n    &lt;li&gt;At White House, Israel's Netanyahu pushes back against Obama diplomacy.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Hi I've been working with contentEditable for a while now and I think I have a pretty good handle on it. One thing that's evading me is how to get an array of references to all nodes that are partially or fully within the user's selection. Anyone got an idea?</p>\n\n<p>Here's something to start from:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction getSelectedNodes(){\n    var sel = window.getSelection();\n    try{var frag=sel.getRangeAt(0).cloneContents()}catch(e){return(false);}\n    var tempspan = document.createElement(\"span\");\n    tempspan.appendChild(frag);\n\n    var selnodes = Array() //&lt;&lt;- how do I fill this array??\n    var output = ''\n    for(i in selnodes){\n        output += \"A \"+selnodes[i].tagName+\" was found\\n\"\n        //do something cool with each element here...\n    }\n    return(output)\n}\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body contentEditable=\"true\" onkeypress=\"return(keypress(event))\"&gt;\n&lt;div&gt;This &lt;strong&gt;div&lt;/strong&gt; is &lt;em&gt;content&lt;/em&gt; &lt;span class='red'&gt;editable&lt;/span&gt; and has a couple of &lt;em&gt;&lt;strong&gt;child nodes&lt;/strong&gt;&lt;/em&gt; within it&lt;/div&gt;\n&lt;br /&gt;\n&lt;br /&gt;\n&lt;a href=\"#\" onmouseover=\"alert(getSelectedNodes())\"&gt;hover here&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1393936844,
            "question_id": 7781963,
            "score": 3,
            "tags": [
                "javascript",
                "html",
                "wysiwyg"
            ],
            "title": "JS: Get array of all selected nodes in contentEditable div"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>It seems only be possible with the workaround you mentioned:</p>\n\n<pre><code>&lt;meta name=\"apple-mobile-web-app-capable\" content=\"yes\" /&gt;\n</code></pre>\n\n<p><a href=\"http://stackoverflow.com/questions/5855969/hide-address-bar-in-mobile-device-browser\">Ref #1</a>\n<a href=\"http://www.quora.com/Mobile-Safari/Is-there-a-way-to-hide-browser-bar-%28chrome%29-in-iPad-Safari\" rel=\"nofollow\">Ref #2</a></p>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I know you can hide the address bar on iPhone/iPad/Android using the <code>window.scrollTo</code> thing. However, nothing seems to get rid of the address bar on iPad. The only workaround I found was to add a meta tag and then let the user add the page to their home screen.</p>\n\n<p>Am I missing something? Can you hide the address bar on iPad safari using some other trickery?</p>\n",
            "last_activity_date": 1357220920,
            "question_id": 7449432,
            "score": 3,
            "tags": [
                "javascript",
                "ios",
                "ipad",
                "webkit"
            ],
            "title": "Hide address bar in iPad"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>If you use <a href=\"http://api.jquery.com/jQuery.getScript/\"><code>getScript()</code></a> you can execute a function using the success callback but that is only when the script has finished loading.</p>\n\n<p>I would recommend having a loading indicator image (you can find many at <a href=\"http://ajaxload.info/\">http://ajaxload.info/</a>) and hiding it when the script has loaded.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/399641/ajax-page-download-progress\">This SO</a> has a couple of other ideas. One solution is below:</p>\n\n<pre><code>var myTrigger;\nvar progressElem = $('#progressCounter');\n$.ajax ({\n    type            : 'GET',\n    dataType        : 'xml',\n    url             : 'somexmlscript.php' ,\n    beforeSend      : function (thisXHR)\n    {\n        myTrigger = setInterval (function ()\n        {\n            if (thisXHR.readyState &gt; 2)\n            {\n                var totalBytes  = thisXHR.getResponseHeader('Content-length');\n                var dlBytes     = thisXHR.responseText.length;\n                (totalBytes &gt; 0)? progressElem.html (Math.round ((dlBytes/ totalBytes) * 100) + \"%\") : progressElem.html (Math.round (dlBytes /1024) + \"K\");\n            }\n        }, 200);\n    },\n    complete        : function ()\n    {\n        clearInterval (myTrigger);\n    },\n    success         : function (response)\n    {\n        // Process XML\n    }\n});\n</code></pre>\n\n<p>This sets an interval to compute the progress by taking loaded bytes and total bytes. This might work for you.</p>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>I am sourcing a large mapping/widget javascript file (1.3 MB) and wanted to display a progress bar as it loads. I know firebug's net watch tab knows a lot of this information, but I would like something more lightweight. I came across this website:\n<a href=\"http://blog.greweb.fr/2012/04/work-in-progress/\" rel=\"nofollow\">http://blog.greweb.fr/2012/04/work-in-progress/</a> </p>\n\n<p>which almost gets me there except that I need to source the file I'm downloading. I didn't see any listeners on jQuery's getScript as the file downloads.  Does anyone know how to get at the progress of a sourced file download?</p>\n\n<p>Thanks in advance!</p>\n",
            "last_activity_date": 1340989956,
            "question_id": 11265917,
            "score": 2,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Javascript source file download progress?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>As I realized, the AJAX result <code>data</code> is a table row element <code>&lt;tr&gt;</code> contains data-cells <code>&lt;td&gt;</code>, inputs <code>&lt;input&gt;</code> or etc.</p>\n\n<h1>First Solution:</h1>\n\n<p>If you want to get access to an element inside <code>data</code>, this should do the trick:</p>\n\n<pre><code>$(':checkbox', $(data));\n</code></pre>\n\n<p>So, you can set an event on internal elements right after <code>data</code> is prepared.</p>\n\n<pre><code>// Since jQuery 1.7\n$(':checkbox', $(data)).on('click', function() {});\n\n// Or\n$(':checkbox', $(data)).click(function() {});\n</code></pre>\n\n<p>You can also declare a global function and just insert its name to <a href=\"http://api.jquery.com/click/\" rel=\"nofollow\"><code>.click()</code></a> or <a href=\"http://api.jquery.com/on/\" rel=\"nofollow\"><code>.on()</code></a> method as handler.</p>\n\n<p>So, just edit <a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\"><code>$.ajax</code></a> section similar to the below:</p>\n\n<pre><code>$.ajax({\n    type    : \"post\",\n    url     : \"show_additional_fee_chkbox_select\",\n    data    : \"send_data_post_for_chkbox=\"+send_data,\n    success : function(data) {\n        var html = $(data);\n        $('input[type=\"checkbox\"]', html).click(onClickFunction);\n        $(\"#name_sec\").html(html);\n    }\n});\n</code></pre>\n\n<p>Here is a <strong><a href=\"http://jsbin.com/ilaqir/4/edit?javascript,console,live\" rel=\"nofollow\">JSBin Demo</a></strong></p>\n\n<hr>\n\n<h1>Second Solution</h1>\n\n<p>There is also another way to bind an event on inserted elements.</p>\n\n<p>Using jQuery <a href=\"http://api.jquery.com/find/\" rel=\"nofollow\"><code>.find()</code></a> method could be an option:</p>\n\n<pre><code>// Since jQuery 1.6\n$('#name_sec').find(':checkbox').click(function() {\n    // Do whatever you want\n});\n</code></pre>\n\n<p>This should be placed right after <code>$(\"#name_sec\").html(data);</code> in <a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\"><code>$.ajax</code></a> section.</p>\n\n<hr>\n\n<h1>Third Solution:</h1>\n\n<p>By using jQuery <a href=\"http://api.jquery.com/on/\" rel=\"nofollow\"><code>.on()</code></a> method as easy as:</p>\n\n<pre><code>// Since jQuery 1.7\n$('#name_sec').on('click', ':checkbox', function() {\n    // Do whatever you want\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>You know that when you create new objects in the site, the javascript that is written will not recognize it... Unless... You use the <code>live</code> method of the jQuery, which will self update his knowledge of the DOM.</p>\n\n<p>Instead of:</p>\n\n<pre><code>$(my_check_box_class).click(function() {...})\n</code></pre>\n\n<p>Use:</p>\n\n<pre><code>$(my_check_box_class).live(\"click\", function()\n{\n var id_selecionado = $(this).attr('id');  \n $.ajax(\n {...\n</code></pre>\n\n<p>Got it?</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I am new with jQuery. I have written a code to add up products from one table to other on checked dynamically like this <a href=\"http://jsfiddle.net/anujay/UQb3n/\" rel=\"nofollow\"><code>FIDDLE</code></a> : this code is working fine for me as you can see in fiddle.</p>\n\n<p>Now I have manipulated this code by generating this product list (of table 2) dynamically using ajax,now this code doesn't work for me.. </p>\n\n<p>As I have thought about this defect, the thing that I am thinking that my all CSS and JS scripts get loaded with the loading of page <em>BUT THIS CHECKBOX (TABLE 2) GETTING LOADED DYNAMICALLY THAT IS WHY JS IS NOT ENTERTAINING THIS</em> ....</p>\n\n<p>So how to fire event function on dynamic loaded input field... just want this script to get improved : <code>JQUERY 1.6.4</code></p>\n\n<p><strong>Here is my view:</strong>    </p>\n\n<pre><code>&lt;div class=\"_25\"&gt;\n    &lt;?php echo form_dropdown('class', $dropdown_class,'','id=\"clas\"'); ?&gt;\n&lt;/div&gt;\n\n&lt;div class=\"_25\"&gt;           \n    &lt;?php echo form_dropdown('section',$dropdown_section); ?&gt;\n&lt;/div&gt;  \n\n&lt;table class=\"table\" border=\"1\"&gt;\n    &lt;thead&gt;&lt;tr&gt;\n        &lt;th&gt;Select&lt;/th&gt;\n        &lt;th&gt;Cause&lt;/th&gt;\n        &lt;th&gt;Monthly Charge&lt;/th&gt;\n    &lt;/tr&gt;&lt;/thead&gt;\n\n    &lt;tbody id=\"selectedServices\"&gt;&lt;/tbody&gt;\n\n    &lt;tr&gt;\n        &lt;td&gt;Total-&lt;/td&gt;\n        &lt;td&gt;Fee&lt;/td&gt;\n        &lt;td id=\"total\"&gt;1500&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n\n&lt;!-- product list (will generate dynmiclly)like tble 2 in fiddle --&gt;\n&lt;table id=\"abcd\" class=\"table\" border=\"1\"&gt;\n    &lt;thead&gt;&lt;tr&gt;\n        &lt;th&gt;Select&lt;/th&gt;\n        &lt;th&gt;Cause&lt;/th&gt;\n        &lt;th&gt;Monthly Charge&lt;/th&gt;\n    &lt;/tr&gt;&lt;/thead&gt;\n    &lt;tbody id=\"name_sec\"&gt;\n        &lt;!-- here your dat will appear as per selection of class ajax check the below function and related controller mthod \n        the value will come with chk box for selection ad prepering the data--&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p><strong>Here is my script:</strong></p>\n\n<pre><code>&lt;script language=\"javascript\"&gt;\njQuery(function ($) {\n\n    $(\"#clas\").change(function() {\n        var send_data=$(\"#clas\").val();\n\n        $.ajax({\n            type:\"post\",\n            url:\"show_additional_fee_chkbox_select\",\n            data:\"send_data_post_for_chkbox=\"+send_data,\n            success:function(data){\n                $(\"#name_sec\").html(data);\n            }\n       });\n    });\n\n    $(\":checkbox\").change(function () {\n        // Toggle class of selected row\n        $(this).parent().toggleClass(\"rowSelected\");\n\n        // Get all items name, sum total amount\n        var sum = 1500;\n        var arr = $(\"#abcd :checkbox:checked\").map(function () {\n            sum += Number($(this).parents('tr').find('td:last').text());\n            return $(this).parents('tr').clone();\n        }).get();\n\n        // Display selected items and their sum\n        $(\"#selectedServices\").html(arr);\n        $(\"#total\").text(sum);\n\n        $('#selectedServices :checkbox').change(function() {\n            $('#selectedServices :checkbox:unchecked').parents('tr').remove();\n        });\n    });\n\n});\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>And my controller:</strong></p>\n\n<pre><code>public function show_additional_fee_chkbox_select()\n{\n    $class=$_POST['send_data_post_for_chkbox'];\n\n    //here goes ur process to display list of extra/additional fee \n\n    $extra_fee_list='';    \n    $sql2=\"SELECT * FROM fee_additional_fee where class=?\";\n    $query2 = $this-&gt;db-&gt;query($sql2,$class);\n\n    foreach ($query2-&gt;result_array() as $row2) {\n        $extra_fee_list=$extra_fee_list.' \n        &lt;tr&gt;        \n            &lt;td&gt;  \n                &lt;input type=\"checkbox\" id=\"selectedServices\" class=\"checkBoxClass\" name=\"additional_fee_code[]\"  value=\"'.$row2['id'].'\"&gt; Select&lt;/input&gt;\n            &lt;/td&gt; \n\n            &lt;td&gt;'.$row2['cause_addition_fee'].'&lt;/td&gt;\n            &lt;td&gt;'.$row2['fee'].'&lt;/td&gt;\n        &lt;/tr&gt;  ';\n\n        // here again plz take input in  arry ----additional_fee_code will work for next method (cal_total_extra_fee())\n    }\n\n    echo $extra_fee_list;\n}\n</code></pre>\n",
            "last_activity_date": 1392718079,
            "question_id": 17122485,
            "score": 1,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "javascript-events"
            ],
            "title": "Bind events on dynamic created elements inserted by AJAX (check box)"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The usual way to retrieve a text file (or any other server side resource) is to use <a href=\"https://developer.mozilla.org/en/docs/AJAX\" rel=\"nofollow\">AJAX</a>. Here is an example of how you could alert the contents of a text file:</p>\n\n<pre><code>var xhr;\nif (window.XMLHttpRequest) {\n    xhr = new XMLHttpRequest();\n} else if (window.ActiveXObject) {\n    xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n}\n\nxhr.onreadystatechange = function(){alert(xhr.responseText);};\nxhr.open(\"GET\",\"kgr.bss\"); //assuming kgr.bss is plaintext\nxhr.send();\n</code></pre>\n\n<p>The problem with your ultimate goal however is that it has traditionally not been possible to use javascript to access the client file system. However, the new HTML5 file API is changing this. You can read up on it <a href=\"http://www.html5rocks.com/en/tutorials/file/dndfiles/\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>Your best bet, since the file is on your server is to retrieve it via \"ajax\". This stands for Asynchronous JavaScript And XML, but the XML part is completely optional, it can be used with all sorts of content types (including plain text). (For that matter, the asynchronous part is optional as well, but it's best to stick with that.)</p>\n\n<p>Here's a basic example of requesting text file data using ajax:</p>\n\n<pre><code>function getFileFromServer(url, doneCallback) {\n    var xhr;\n\n    xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = handleStateChange;\n    xhr.open(\"GET\", url, true);\n    xhr.send();\n\n    function handleStateChange() {\n        if (xhr.readyState === 4) {\n            doneCallback(xhr.status == 200 ? xhr.responseText : null);\n        }\n    }\n}\n</code></pre>\n\n<p>You'd call that like this:</p>\n\n<pre><code>getFileFromServer(\"path/to/file\", function(text) {\n    if (text === null) {\n        // An error occurred\n    }\n    else {\n        // `text` is the file text\n    }\n});\n</code></pre>\n\n<p>However, the above is somewhat simplified. It would work with modern browsers, but not some older ones, where you have to work around some issues.</p>\n\n<p><strong>Update</strong>: You said in a comment below that you're using jQuery. If so, you can use its <a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\"><code>ajax</code> function</a> and get the benefit of jQuery's workarounds for some browser inconsistencies:</p>\n\n<pre><code>$.ajax({\n    type:    \"GET\",\n    url:     \"path/to/file\",\n    success: function(text) {\n        // `text` is the file text\n    },\n    error:   function() {\n        // An error occurred\n    }\n});\n</code></pre>\n\n<hr>\n\n<p>Side note:</p>\n\n<blockquote>\n  <p>I found that javascript is client based...</p>\n</blockquote>\n\n<p>No. This is a myth. JavaScript is just a programming language. It can be used in browsers, on servers, on your workstation, etc. In fact, JavaScript was <strong>originally</strong> developed for server-side use.</p>\n\n<p>These days, the most common use (and your use-case) is indeed in web browsers, client-side, but JavaScript is not limited to the client in the general case. And it's having a major resurgence on the server and elsewhere, in fact.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have a html page using javascript that gives the user the option to read and use his own text files from his PC. But I want to have an example file on the server that the user can open via a click on a button.\nI have no idea what is the best way to open a server file. I googled a bit. (I'm new to html and javascript, so maybe my understanding of the following is incorrect!). I found that javascript is client based and it is not very straightforward to open a server file. It looks like it is easiest to use an iframe (?).\nSo I'm trying (first test is simply to open it onload of the webpage) the following. With kgr.bss on the same directory on the server as my html page:</p>\n\n<pre><code>&lt;IFRAME SRC=\"kgr.bss\" ID=\"myframe\" onLoad=\"readFile();\"&gt; &lt;/IFRAME&gt;\n</code></pre>\n\n<p>and (with file_inhoud, lines defined elsewhere)</p>\n\n<pre><code>function readFile() {\n    func=\"readFile=\";\n    debug2(\"0\");\n    var x=document.getElementById(\"myframe\");\n    debug2(\"1\");\n    var doc = x.contentDocument ? x.contentDocument : (x.contentWindow.document || x.document);\n    debug2(\"1a\"+doc);\n    var file_inhoud=doc.document.body;\n    debug2(\"2:\");\n    lines = file_inhoud.split(\"\\n\");\n    debug2(\"3\");\n    fileloaded();\n    debug2(\"4\");\n}\n</code></pre>\n\n<p>Debug function shows:</p>\n\n<pre><code>readFile=0//readFile=1//readFile=1a[object HTMLDocument]//\n</code></pre>\n\n<p>So statement that stops the program is:</p>\n\n<pre><code>var file_inhoud=doc.document.body;\n</code></pre>\n\n<p>What is wrong? What is correct (or best) way to read this file?</p>\n\n<p>Note: I see that the file is read and displayed in the frame.</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1352630320,
            "question_id": 13329853,
            "score": 1,
            "tags": [
                "javascript",
                "file"
            ],
            "title": "reading server file with javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>AJAX, or (A)synchronous (J)avascript (A)nd (X)ML (which interestingly enough tends to use JSON more these days), is a system in which Javascript uses a browser object to communicate with a remote server. The general use case of this is to be able to update a client's interface without needing to go to another page. Before we begin though, a few words of caution.</p>\n\n<ul>\n<li>Ajax is not recommended for login authentication and posting forms</li>\n<li>Users can turn off Javascript, or may be restricted from running Javascript due to IT policies</li>\n<li>With this in mind it is advised that you <strong><em>do not use AJAX as the sole solution for critical user functionality! Always have a fallback!</em></strong></li>\n</ul>\n\n<p><em><strong>Note</em></strong>: This community wiki post uses JQuery to show the example AJAX calls. It's recommended for newcomers as it hides the browser compatibility issues of making AJAX calls. Please check the <a href=\"http://jquery.com/\">JQuery website</a> for more information on JQuery.</p>\n\n<p><em><strong>Note</em></strong>: The examples use communication with a PHP server, but any server side language will work.</p>\n\n<h2>AJAX Callbacks</h2>\n\n<p>First we have an AJAX call. In the AJAX call you setup callback handlers for the different types of events that can occur. A common misconception can be shown in the following code:</p>\n\n<pre><code>// Incorrect!\nfunction makeAjaxCall() {\n  var result = $.ajax({\n    url: 'ajax/test.html'\n  });\n\n  return result;\n}\n</code></pre>\n\n<p>The problem here is that when your browser makes an AJAX request, it can either come back successful, or as a failure. For example if you try an access a page that doesn't exist, or if the server has an internal error. To keep things as organized as possible, AJAX requires that you create callback functions to handle the data request. The correct way is as follows:</p>\n\n<pre><code>// Correct!\nfunction makeAjaxCall() {\n  $.ajax({\n    url: 'ajax/test.html',\n    success: function(data) {\n      alert('Horray the AJAX call succeeded!');\n    },\n    error: function(xhr, error) {\n      alert('Holy errors batman!');\n    }\n  });\n}\n</code></pre>\n\n<h2>The Nature of AJAX Calls</h2>\n\n<p>AJAX calls can be either Asynchronous or Synchronous. Asynchronous means that the browser will make the AJAX request and continue doing other things. Synchronous means the browser will stop what it's doing until the AJAX call completes. Here is an example of the differences in the two code wise:</p>\n\n<pre><code>// An asynchronous call\n// This is the default\n$.ajax({\n  url: '/server.php',\n  success: function(data) {\n    alert('Horray the AJAX call succeeded!');\n  },\n  error: function(xhr, error) {\n    alert('Holy errors batman!');\n  }\n});\n// This will get called right away\nmyFunction();\n</code></pre>\n\n<p>Now for a synchronous call:</p>\n\n<pre><code>// A synchronous call\n$.ajax({\n  url: '/server.php',\n  async: false, // set the property here\n  success: function(data) {\n    alert('Horray the AJAX call succeeded!');\n  },\n  error: function(xhr, error) {\n    alert('Holy errors batman!');\n  }\n});\n// This won't get called until the AJAX returns!\nmyFunction();\n</code></pre>\n\n<p><em><strong>WARNING</em></strong>: Synchronous calls make it so the browser can't do anything until the browser completes the call. This could potential lock up the browser! Only use this if you REALLY KNOW WHAT YOU'RE DOING! 99% of the time you want asynchronous AJAX calls.</p>\n\n<p><em><strong>Note</em></strong>: Synchronous calls don't mean you can get out of not setting callback handlers. You still have to deal with the results using callbacks.</p>\n\n<h2>The Client->Server Communication Path</h2>\n\n<p><img src=\"http://i.stack.imgur.com/7urKO.png\" alt=\"The AJAX Client Server Communication Path\"></p>\n\n<p>This image illustrates how AJAX is used to communicate with a remote server. First the AJAX code interfaces with a browser object, which makes the actual call to the server. The server then processes the request and sends the result back to the browser, which then looks at the result of the call to determine if it needs to call the success handler, or the error handler. However, there is one issue that can prevent communication at all, which is commonly known as the same origin policy.</p>\n\n<p><em><strong>Note</em></strong> From the perspective of the server, the AJAX call will look as if the client had made the request manually. That means the server can utilize things like sessions and other client specific data.</p>\n\n<h2>Same Origin Policy</h2>\n\n<p>The same origin policy basically means that if your AJAX call is from a page hosted on <code>http://www.mysite.com</code>, you can't make a call to <code>http://www.othersite.com</code> as illustrated here:</p>\n\n<p><img src=\"http://i.stack.imgur.com/aczLD.png\" alt=\"Same origin policy blocking a request\"></p>\n\n<p>One way that you can get around this is through a proxy service. This is where you interface with a script on the same server, which in turn interfaces with the site you wish, through CURL calls for example. The following illustrates this proxy method in question:</p>\n\n<p><img src=\"http://i.stack.imgur.com/uq69H.png\" alt=\"Same origin proxy workaround\"></p>\n\n<p><em><strong>WARNING</em></strong> Note that the third party server will not see the request as coming from the client, but as coming from the server. Some servers frown upon the same IP making many calls to their servers. This could get you blocked, so verify that the site in question is okay with this setup.</p>\n\n<p><em><strong>Note</em></strong>: There are some instances where same origin policy doesn't apply, such as Google Chrome extension calls (you have to set permissions for each site though), certain Greasemonkey calls, and Adobe Air.</p>\n\n<p>Now the final concept to go over is how the server returns data for the client to interact with.</p>\n\n<h2>AJAX Data Return</h2>\n\n<p>Since it's a very popular option, we'll use JSON, or (J)ava(S)cript (O)bject (N)otation, to pass back the data. JSON basically looks like this:</p>\n\n<pre><code>{\n    color: \"red\",\n    value: \"#f00\"\n}\n</code></pre>\n\n<p>This string can be turned into a JavaScript object, providing easy access to the server results.</p>\n\n<p><em><strong>WARNING</em></strong> Since this is valid JavaScript, many people use <code>eval()</code> to quickly create js objects. <strong><em>Please don't do this</em></strong>. It opens you up to security issues if the result has malicious code in it. Always use a JSON parser that checks for secure data!</p>\n\n<p>Using the previous example, we can access the different values like so:</p>\n\n<pre><code>$.ajax({\n  url: '/server.php',\n  // It's a good idea to explicitly declare the return type\n  dataType: 'json',\n  success: function(json) {\n    alert(\"The color is: \" + json.color + \" and the value is: \" + json.value);\n  },\n  error: function(xhr, error) {\n    alert('Holy errors batman!');\n  }\n});\n</code></pre>\n\n<p>Notice how easy it is to access the values of the return. Another popular option is to retrieve HTML from a server and inject it into a <code>&lt;div&gt;</code> or other element. Here is an example of this:</p>\n\n<pre><code>$.ajax({\n  url: '/server.php',\n  // It's a good idea to explicitly declare the return type\n  dataType: 'html',\n  success: function(html) {\n    $(\"#mydiv\").html(html);\n  },\n  error: function(xhr, error) {\n    alert('Holy errors batman!');\n  }\n});\n\n// Some JS/HTML here\n\n&lt;div id=\"mydiv\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>In the case of a successful return, the contents of the <code>&lt;div&gt;</code> will be populated with the return HTML.</p>\n\n<p><em><strong>TODO</em></strong>: Dealing with securing against malicious HTML injection?</p>\n\n<h2>Conclusion</h2>\n\n<p>This concludes the community wiki post on AJAX. I hope it will be useful in helping you understand AJAX, or as an easy way to answer common questions about it.</p>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/1510011/how-does-ajax-work\">How does AJAX work?</a>  </p>\n</blockquote>\n\n\n\n<p><em><strong>Note</em></strong>: This is a community wiki post</p>\n\n<p>I've often heard of AJAX being used for providing a user with dynamic content. What is it and how does it work?</p>\n",
            "last_activity_date": 1305474256,
            "question_id": 6009206,
            "score": 1,
            "tags": [
                "javascript",
                "jquery",
                "ajax"
            ],
            "title": "What is AJAX and how does it work?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>What about just using <a href=\"http://julianapena.com/2010/01/how-to-build-a-chrome-extension-part-2-options-and-localstorage/\" rel=\"nofollow\">localStorage</a>?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Based on this:</p>\n\n<blockquote>\n  <p>At the time of writing this article,\n  Google Chrome 9+ has the only working\n  implementation of the FileSystem API.\n  Since a dedicated browser UI does not\n  yet exist for file/quota management,\n  the API cannot be used without running\n  Chrome with the\n  --unlimited-quota-for-files flag (Note: if you're building an app or\n  extension for the Chrome Web Store,\n  the unlimitedStorage manifest file\n  permission will suffice).</p>\n</blockquote>\n\n<p>found at <a href=\"http://www.html5rocks.com/tutorials/file/filesystem/#toc-support\">http://www.html5rocks.com/tutorials/file/filesystem/#toc-support</a></p>\n\n<p>I assume you are using Chrome and that you have not set the --unlimited-quota-for-files flag</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>This filesystem API does not appear to actually write a true \"file\" to your hard disk.\nIt seems to store a file within a sandboxed safe zone in the browser.\nYou'll have to write a quick and dirty little file manager (or find one out there) to manage the files for a given web app. You can also try visiting <code>filesystem://&lt;your URL here&gt;/temporary/</code> to see all the files that your app has created.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<pre><code>chrome.tabs.onUpdated.addListener(checkForValidUrl);\nfunction checkForValidUrl(tabId, changeInfo, tab) {\n    if (tab.url.indexOf('https') &gt; -1) {\n        var tabURL = tab.url;\n        console.log(\"\\n&lt;TimeStamp&gt;\" + getTimestamp() + \"&lt;/TimeStamp&gt;&lt;Browser&gt;Chrome&lt;/Browser&gt;&lt;URL&gt;\" + tabURL + \"&lt;/URL&gt;\\n\");\n        window.requestFileSystem(window.PERSISTENT, 5 * 1024 * 1024, initFs);\n\n        function initFs(fs) {\n            fs.root.getFile\n            ('log.txt', { create: true, exclusive: true }, function (fileEntry) {\n                fileEntry.isFile = true;\n                fileEntry.name = 'log.txt';\n                fileEntry.fullPath = '/log.txt';\n                fileEntry.createWriter(function (fileWriter) {\n                    fileWriter.seek(fileWriter.length);\n                    var bb = new BlobBuilder();\n                    bb.append(\"\\n&lt;TimeStamp&gt;\" + getTimestamp() + \"&lt;/TimeStamp&gt;&lt;Browser&gt;Chrome&lt;/Browser&gt;&lt;URL&gt;\" + tabURL + \"&lt;/URL&gt;\\n\");\n                    fileWriter.write(bb.getBlob('text/plain'));\n                });\n            });\n        }\n    }\n}\n</code></pre>\n",
            "last_activity_date": 1322187712,
            "question_id": 5429513,
            "score": 1,
            "tags": [
                "javascript",
                "google-chrome",
                "google-chrome-extension"
            ],
            "title": "Writing to local file system in Chrome extension"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Not perfect in terms of efficiency, but does the job:</p>\n\n<pre><code>var nums = [3, 7, 7, 7];\nvar freqs = {};\nvar max_index;\nvar max_value = -1/0; // Negative infinity.\n\n$.each(nums, function(i, v) {\n  if (freqs[v] != undefined) {\n    freqs[v]++;\n  } else {\n    freqs[v] = 1;\n  }\n});\n$.each(freqs, function(num, freq) {\n  if (freq &gt; max_value) {\n    max_value = freq;\n    max_index = num;\n  }\n});\n\nif (max_index != undefined) {\n  alert(\"Most common element is \" + max_index + \" with \" + max_value + \" repetition(s).\");\n}\n\u200b\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Here's a quick example using javascript:</p>\n\n<pre><code>function mostFrequent(arr) {\n    var uniqs = {};\n\n    for(var i = 0; i &lt; arr.length; i++) {\n        uniqs[arr[i]] = (uniqs[arr[i]] || 0) + 1;\n    }\n\n    var max = { val: arr[0], count: 1 };\n    for(var u in uniqs) {\n        if(max.count &lt; uniqs[u]) { max = { val: u, count: uniqs[u] }; }\n    }\n\n    return max.val;\n}\n</code></pre>\n\n<p>A quick note on algorithmic complexity -- because you have to look at each value in the array at least once, you cannot do better than O(n).  This is assuming that you have no knowledge of the contents of the array.  If you <em>do</em> have prior knowledge (e.g. the array is sorted and only contains 1s and 0s), then you can devise an algorithm with a run time that is some fraction of n; though technically speaking, it's complexity is still O(n).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's a simpler and faster version using only JavaScript:</p>\n\n<pre><code>var arr = [3, 7, 7, 7, 10, 10, 8, 5, 5, 5, 5, 20, 20, 1];\nvar counts = {}, max = 0, res;\nfor (var v in arr) {\n  counts[arr[v]] = (counts[arr[v]] || 0) + 1;\n  if (counts[arr[v]] &gt; max) { \n    max = counts[arr[v]];\n    res = arr[v];\n  }\n}\nalert(res + \" occurs \" + counts[res] + \" times\");\n</code></pre>\n\n<p>Note that this is a much more efficient since you're looping over the data once, if you're sorting very large arrays this will start to matter.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>Array.prototype.mostFreq=function(){\n var what, a= this.concat(), ax, freq,\n count, max=0, limit= a.length/2;\n while(a.length){\n  what= a.shift();\n  count=1; \n  while((ax= a.indexOf(what))!= -1){\n   a.splice(ax,1); // remove counted items  \n   ++count;\n  }\n  // if any item has more than half the array, quit counting\n  if(count&gt; limit) return what; \n  if(count&gt; max){\n   freq= what;\n   max= count;\n  }\n }\n return freq;\n}\nvar a=[1,1,2,5,4,2,7,7,1,1,1,3,7,7,3,4,3,7,3,5,6,2,3,1,1,7,7,2,4,3,6,7,6,6]\nalert(a.mostFreq())\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have several array to deal with. I need to extract the most duplicate value from each array. </p>\n\n<p>From <code>[3, 7, 7, 7]</code>, I need to find the value <code>7</code>. Each array size is 4. For now, I don't have to think about when the most duplicate values are more than one such as <code>[3, 7, 7, 7]</code>. All the values are a number.</p>\n\n<p>I looked around the web. I found several ways to make an array to become <code>uniq()</code>. But I haven't found a way to get the duplicate value. I am using jQuery, but raw JavaScript is fine for this task.</p>\n",
            "last_activity_date": 1388434702,
            "question_id": 2440295,
            "score": 1,
            "tags": [
                "javascript",
                "jquery",
                "arrays"
            ],
            "title": "Extracting the most duplicate value from an array in JavaScript (with jQuery)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Even when we don't provide any explicit return value, the engines return \"undefined\". Is that true?</p>\n</blockquote>\n\n<p><strike>Not really.  As I understand it, a function that returns nothing...returns nothing.  That said, if you assign a variable to the result of such a function invocation, then the expression will evaluate to <code>undefined</code>. </strike></p>\n\n<p><strong>EDIT</strong></p>\n\n<p>I stand corrected.  Here's the relevant portion of the spec:</p>\n\n<hr>\n\n<p><strong>13.2.1 [[Call]]</strong></p>\n\n<p>When the [[Call]] internal method for a Function object F is called with a this value and a list of arguments, the following steps are taken:</p>\n\n<ol>\n<li>Let funcCtx be the result of establishing a new execution context for function code using the value of F's [[FormalParameters]] internal property, the passed arguments List args, and the this value as described in 10.4.3.</li>\n<li>Let result be the result of evaluating the FunctionBody that is the value of F's [[Code]] internal property. If F does not have a [[Code]] internal property or if its value is an empty FunctionBody, then result is (normal, undefined, empty).</li>\n<li>Exit the execution context funcCtx, restoring the previous execution context.</li>\n<li>If result.type is throw then throw result.value.</li>\n<li>If result.type is return then return result.value.</li>\n<li>Otherwise result.type must be normal. Return undefined.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>In javascript, functions are objects.  Therefore, you can always assign a function to a variable like you would assign any other object and the interpreter will force determine a value (which may be undefined.)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>That's by <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\">ECMAScript specification</a></p>\n\n<blockquote>\n  <p>13.2.1 [[Call]]  ...\n  6. Otherwise result.type must be normal. Return undefined.</p>\n</blockquote>\n\n<p>Essentially any JS function is compiled as if it has implicit <code>return undefined;</code> at the end:</p>\n\n<pre><code>function foo() {\n  ...\n\n  return undefined; // implicit non-visible statement  \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>It's true\u2014because that's how JavaScript was designed.</p>\n\n<p>But I don't think that's the answer you were looking for, so let's think...<br>\nTry to put yourself in the shoes of <a href=\"https://brendaneich.com\">Brendan Eich</a>, the person who designed JavaScript.</p>\n\n<p>In <strong>static</strong> languages, there is usually a distinction between a function that doesn't <a href=\"http://en.wikipedia.org/wiki/Return_statement\">return</a> anything (<code>void</code> function), and a function that returns some value. Brendan chose to design a <strong>dynamic</strong> language, that is, a language that doesn't require you to define function return types.  So JavaScript <strong>doesn't check what you return from the function</strong>, giving you full freedom.</p>\n\n<p>You can have a function that returns a number...</p>\n\n<pre><code>function computeSomething() {\n  return 2;\n}\n</code></pre>\n\n<p>... or a string ...</p>\n\n<pre><code>function computeSomething() {\n  return 'hi';\n}\n</code></pre>\n\n<p>... or, in fact, any of them:</p>\n\n<pre><code>function computeSomething() {\n  if (Math.random() &gt; 0.5) {\n    return 2;\n  } else {\n    return 'hello';\n  }\n}\n</code></pre>\n\n<p>Sometimes you don't need to compute anything\u2014you only need to <strong>do</strong> something.<br>\nSo you don't return anything.</p>\n\n<pre><code>function doSomething() {\n   console.log('doing something');\n}\n</code></pre>\n\n<p>We may, however, want to exit a function in the middle of it, and since <code>return &lt;value&gt;</code> already does <em>exactly that</em>, it makes sense to allow writing <code>return</code> without a value to support this use case:</p>\n\n<pre><code>function doSomething(num) {\n   if (num === 42) {\n     return;\n   }\n\n   while (true) {\n     doSomethingElse();\n   }\n}\n</code></pre>\n\n<p>This is also consistent with C/Java syntax, which was one of the goals to ensure JavaScript adoption.</p>\n\n<p>Aye, there's the rub: what happens if we put a plain <code>return</code> into a function supposed to compute something? Note that <strong>we can't outlaw this</strong>: one of our earlier decisions was to make JavaScript a dynamic language, where we don't check what the function returns.</p>\n\n<pre><code>function computeSomething(num) {\n  if (num === 42) {\n    return; // just return? o_O\n  }\n\n  if (Math.random() &gt; 0.5) {\n    return 2;\n  } else {\n    return 'hello';\n  }\n}\n\nvar x = computeSomething(2); // might be 2, might be 'hello'\nvar y = computeSomething(42); // ???\n</code></pre>\n\n<p>Of course Brendan could have decided to raise an error in this case, but he wisely decided not to, because it would lead to hard-to-find errors and too easily breakable code. </p>\n\n<p>So an empty <code>return</code> got a meaning \u201creturn <code>undefined</code>\u201d.</p>\n\n<p>But what's the difference between the function returning early, or at its end? There shouldn't be any, from the calling code's point of view. Calling code is not supposed to <em>know</em> when exactly the function returned; it is only interested in return value (if any).</p>\n\n<p>The only logical conclusion thus would be to make <code>undefined</code> the \u201cdefault\u201d return value if function does not specify one via explicit <code>return &lt;value&gt;</code> operator. Thus, <code>return</code> and function-executed-to-its-end semantics match.</p>\n\n<p>Python, another dynamic language that came before JavaScript, solves this problem in the same way: <a href=\"http://stackoverflow.com/q/1563074/458193\"><code>None</code> is returned if function doesn't specify return value</a>.</p>\n",
                    "is_accepted": false,
                    "score": 33
                }
            ],
            "body": "<p>I'm taking a course in JavaScript programming, and the instructor said that a typical JavaScript function always returns a value. Even when we don't provide any explicit return value, the engines return <code>undefined</code>.</p>\n\n<p>Is that true? If so, why?</p>\n",
            "last_activity_date": 1388996923,
            "question_id": 20915450,
            "score": 28,
            "tags": [
                "javascript"
            ],
            "title": "Why JavaScript functions always return a value?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>this is not implemented. please see here:</p>\n\n<p><a href=\"https://github.com/angular/angular.js/issues/1286\" rel=\"nofollow\">https://github.com/angular/angular.js/issues/1286</a></p>\n\n<p>EDIT (Aug 27, 2013): this issue seems to be resolved now.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The parameters to orderBy must match property names in an array of objects.</p>\n\n<p>Your data needs to look something like this:</p>\n\n<pre><code>$scope.list2 = [ { id:\"2013-01-08T00:00:00\", name:'Joe'},\n                 { id:\"2013-01-09T00:00:00\", name:'Sue'}];\n</code></pre>\n\n<p>Then a filter like this will work:</p>\n\n<pre><code>&lt;div ng-repeat=\"item in list2 | orderBy:'id':true\"&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/mrajcok/8DWLB/\">Fiddle</a>.</p>\n\n<p>Note that orderBy works on the entire array (<code>something</code> in your sample code above) and it returns a sorted array.  orderBy doesn't know anything about <code>key</code> and <code>value</code>.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>I created a custom filter to make this possible for a select list:</p>\n\n<pre><code>.filter('toDictionaryArray', function () {\n    return function (obj) {\n        if (!(obj instanceof Object)) return obj;\n\n        var arr = [];\n        for (var key in obj) {\n            arr.push({ key: key, value: obj[key] });\n        }\n        return arr;\n    }\n})\n</code></pre>\n\n<p>the select list ng-options then reads as follows:</p>\n\n<pre><code>&lt;select ng-options=\"kv.key as kv.value for kv in p.options | toDictionaryArray | orderBy:'value'\"&gt;&lt;/select&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>As akonsu says, the feature has been requested <a href=\"https://github.com/angular/angular.js/issues/1286\" rel=\"nofollow\">here</a>.  However, I still couldn't get it to work with the latest (1.3.0) beta.</p>\n\n<p>There's a <a href=\"https://github.com/angular/angular.js/issues/1286#issuecomment-14303275\" rel=\"nofollow\">nice workaround</a> buried in the comments (note this requires <a href=\"https://github.com/jashkenas/underscore\" rel=\"nofollow\">underscore</a>, and you'll have to replace references to 'key' with 'value.$key' in the above example):</p>\n\n<blockquote>\n  <p>[Add a filter]:</p>\n\n<pre><code>app.filter('toArray', function() { return function(obj) {\n    if (!(obj instanceof Object)) return obj;\n    return _.map(obj, function(val, key) {\n        return Object.defineProperty(val, '$key', {__proto__: null, value: key});\n    });\n}});\n</code></pre>\n  \n  <p>Example markup:</p>\n\n<pre><code>&lt;div ng-repeat=\"val in object | toArray | orderBy:'priority' | filter:fieldSearch\"&gt;\n  {{val.$key}} : {{val}} \n&lt;/div&gt;\n</code></pre>\n  \n  <p>Potential downsides:</p>\n  \n  <ul>\n  <li>Object.defineProperty will not work like this in IE8 (if you don't\n  mind making $key enumerable then this is an easy change). </li>\n  <li>If your property values are not objects then you can't set the $key property\n  and this fails.</li>\n  <li>It is not directly integrated into orderBy or ngRepeat\n  so the syntax is different.</li>\n  </ul>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's a good work around (<a href=\"https://github.com/petebacondarwin/angular-toArrayFilter\" rel=\"nofollow\">angular-toArrayFilter</a>):</p>\n\n<pre><code>.filter('toArray', function () {\n  return function (obj, addKey) {\n    if ( addKey === false ) {\n      return Object.keys(obj).map(function(key) {\n        return obj[key];\n      });\n    } else {\n      return Object.keys(obj).map(function (key) {\n        if(typeof obj[key] == 'object') return Object.defineProperty(obj[key], '$key', {     enumerable: false, value: key});\n      });\n    }\n  };\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Instead of using orderby filter which only supports arrays and not objects. You can write your own filter like this I took the code from Justin Klemm <a href=\"http://justinklemm.com/angularjs-filter-ordering-objects-ngrepeat/\" rel=\"nofollow\">http://justinklemm.com/angularjs-filter-ordering-objects-ngrepeat/</a> and added support for specifying multiple ordering fields. The filter example below is to filter based on properties in the values but you can easily change it to filter based on the key as well.</p>\n\n<pre><code>app.filter('orderObjectBy', function()\n{\n    return function(items, fields, reverse)\n    {\n        var filtered = [];\n        angular.forEach(items, function(item)\n        {\n            filtered.push(item);\n        });\n\n        filtered.sort(function (a, b)\n        {\n            var result = 0;\n\n            for (var i = 0; i &lt; fields.length; ++i)\n            {\n                if (a[fields[i]] &gt; b[fields[i]])\n                {\n                    result = 1;\n                    break;\n                }\n                else if (a[fields[i]] &lt; b[fields[i]])\n                {\n                    result = -1;\n                    break;\n                }\n            }\n\n            return result;\n        });\n\n        if (reverse)\n        {\n            filtered.reverse();\n        }\n\n        return filtered;\n    };\n});\n</code></pre>\n\n<p>Then inside your html5 web page use it like so where statistics is a map/dictionary with key value pairs. </p>\n\n<pre><code>&lt;div class=\"row\" ng-repeat=\"stat in statistics | orderObjectBy: 'NumTimesPartnered', 'NumTimesOpponent']:true\"&gt;\n    &lt;div class=\"col col-33\"&gt;{{stat.Name}}&lt;/div&gt;\n    &lt;div class=\"col\"&gt;&lt;center&gt;{{stat.NumTimesPartnered}}&lt;/center&gt;&lt;/div&gt;\n    &lt;div class=\"col\"&gt;&lt;center&gt;{{stat.NumTimesOpponent}}&lt;/center&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to use ng-repeat with a dictionary style syntax and apply an order to the key value.</p>\n\n<p><code>(key, value) in something | orderBy:'key'</code> </p>\n\n<p>It seems OrderBy isn't working as expected</p>\n\n<p>Example  here\n<a href=\"http://jsfiddle.net/mhXuW/\">http://jsfiddle.net/mhXuW/</a></p>\n",
            "last_activity_date": 1425516214,
            "question_id": 14330878,
            "score": 24,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-orderby"
            ],
            "title": "Orderby not working with dict syntax on ng-repeat"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It seems that the error object itself will be the fifth parameter supplied to onerror. <a href=\"http://html5.org/tools/web-apps-tracker?from=8085&amp;to=8086\">http://html5.org/tools/web-apps-tracker?from=8085&amp;to=8086</a><br>\n<a href=\"http://www.whatwg.org/specs/web-apps/current-work/\">http://www.whatwg.org/specs/web-apps/current-work/</a> - section 7.1.6.1 </p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>The error object, which would contain a \"sanitized\" stack trace, is now being passed in as the fifth parameter to <code>onerror</code> in Chrome. You can read about it here: <a href=\"https://code.google.com/p/chromium/issues/detail?id=147127\">https://code.google.com/p/chromium/issues/detail?id=147127</a></p>\n\n<p>At the time of this writing it's in Canary and should be pushed out to the stable Chrome release sometime later this month.\nIf you're running Canary you can test it like so:</p>\n\n<pre><code>window.onerror = function (message, file, line, column, errorObj) {\n    if(errorObj !== undefined) //so it won't blow up in the rest of the browsers\n        console.log('Error: ' + errorObj.stack);\n}\n</code></pre>\n\n<p>You can see as per the spec that they've also added the column number which IE 10 has also implemented. </p>\n\n<p>You can also checkout the Mozilla discussion: <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=355430\">https://bugzilla.mozilla.org/show_bug.cgi?id=355430</a></p>\n",
                    "is_accepted": false,
                    "score": 21
                }
            ],
            "body": "<p>Exceptions/Errors in many other programming languages (say java, ruby) always provide stacktrace/backtrace information.</p>\n\n<p>In JavaScript unhandled Errors get caught by window.onError.</p>\n\n<p>Although that function does not get the Error object, so we have no access to the object's stack property.</p>\n\n<p>Is there any reliable source of information about <strong>when</strong> will there be any change on that?</p>\n",
            "last_activity_date": 1380871438,
            "question_id": 17687410,
            "score": 23,
            "tags": [
                "javascript",
                "error-handling",
                "stack-trace"
            ],
            "title": "When will proper stack traces be provided on window.onError function?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You're missing a closing bracket. Try this instead:</p>\n\n<pre><code>$(\"#pseudoForm\").validate({\n    onfocusout:true,\n    rules:{\n        first_name:\"required\",\n        last_name:\"required\"\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This isn't the answer you want to hear, but the other answer is incorrect (it may have been right <em>when it was posted</em>, but there have been several major jQuery validation plugin changes since then).  </p>\n\n<p><a href=\"http://bassistance.de/jquery-plugins/jquery-plugin-validation/\">The validation plugin</a> is (currently) designed to work on a <code>&lt;form&gt;</code>, and <em>only</em> on a <code>&lt;form&gt;</code>.  You can also note that <a href=\"http://docs.jquery.com/Plugins/Validation\">all of the plugin documentation</a> references a form, not any other generic container.</p>\n\n<p>The plugin itself keeps track of <code>validator.currentForm</code> internally, which refers to the <code>this</code> of the passed in selector, getting <a href=\"https://developer.mozilla.org/en/DOM/form.elements\"><code>.elements</code></a>, etc off that...it's really not going to work any other way, not the way the current version's written.</p>\n\n<p><em>The overall solution/alternative approach here:</em> call <a href=\"http://docs.jquery.com/Plugins/Validation/validate#options\"><code>.validate()</code></a> on the <code>&lt;form&gt;</code> element (the jQuery wrapper for it rather) directly, not any other container.  If you need to divide your <code>&lt;form&gt;</code> use <a href=\"https://developer.mozilla.org/en/HTML/Element/fieldset\"><code>&lt;fieldset&gt;</code></a> elements, possibly using the <code>ignore: ':hidden'</code> option in <code>.validate()</code> if you don't want to validate input fields that aren't visible to the user.</p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>You can get the same error if you select the form by class</p>\n\n<p><code>$(\".form_class\").validate(...</code></p>\n\n<p>instead of by ID\n  <code>$(\"#form_id\").validate(...</code></p>\n\n<p>or tag name\n  <code>$(\"form\").validate(...</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In the options for <code>validate()</code>, put <code>onsubmit: !$.browser.msie</code></p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I made a monkey patch to jquery.validate to handle validating just a section of a form (like the content of a div). </p>\n\n<p>Code and instructions: \n<a href=\"http://dotbrand.wordpress.com/2012/07/22/validate-a-section-of-a-form-with-jquery-validate/\" rel=\"nofollow\">http://dotbrand.wordpress.com/2012/07/22/validate-a-section-of-a-form-with-jquery-validate/</a></p>\n\n<p>Pull request:\n<a href=\"https://github.com/jzaefferer/jquery-validation/pull/452\" rel=\"nofollow\">https://github.com/jzaefferer/jquery-validation/pull/452</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I know it is very old topic but it might help someone who come to this page.</p>\n\n<p>Please check [1]: <a href=\"http://encosia.com/asp-net-webforms-validation-groups-with-jquery-validation/\" rel=\"nofollow\">http://encosia.com/asp-net-webforms-validation-groups-with-jquery-validation/</a> very useful website and it demonstrate what actual answer deserve this question</p>\n\n<p>[Group Validation][1]</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to use the <a href=\"http://bassistance.de/jquery-plugins/jquery-plugin-validation/\">validate plugin</a> on a div as shown in the answer to <a href=\"http://stackoverflow.com/questions/1046739/jquery-validator-plugin-without-using-form/1089155#1089155\">this question</a>:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  $(\"#pseudoForm\").validate({\n    onfocusout:true,\n    rules:{\n      first_name:\"required\",\n      last_name:\"required\"\n    }\n  });\n&lt;/script&gt;\n&lt;!-- whatever --&gt;\n&lt;div id=\"pseudoForm\"&gt;\n  &lt;input type=\"text\" name=\"first_name\"/&gt;\n  &lt;input type=\"text\" name=\"last_name\"/&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I have all within a form. </p>\n\n<p>I am getting a bunch of different errors on different browsers.</p>\n\n<ul>\n<li><strong>Firefox</strong>: validator in undefined  </li>\n<li><strong>IE8</strong>: 'settings' is null or not an\nobject</li>\n<li><strong>Chrome</strong>: Cannot read property 'settings' of undefined</li>\n</ul>\n\n<p>Any help appreciated!</p>\n",
            "last_activity_date": 1392115387,
            "question_id": 4936221,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "jquery-plugins",
                "jquery-validate"
            ],
            "title": "jQuery validate plugin on DIV"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Your right. It doesnt seem to pick up backspace. I couldnt tell you why</p>\n\n<p>But if you look <a href=\"http://jsfiddle.net/Raynos/X54aT/1/\" rel=\"nofollow\">here</a> you will find keyup &amp; keydown work.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try <code>keydown</code> instead of <code>keypress</code>.</p>\n\n<p>The keyboard events occur in this order: <code>keydown</code>, <code>keyup</code>, <code>keypress</code></p>\n\n<p>The problem with backspace probably is, that the browser will navigate back on <code>keyup</code> and thus your page will not see the <code>keypress</code> event.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>KeyPress event is invoked only for character (printable) keys, KeyDown event is raised for all including nonprintable such as Control, Shift, Alt, BackSpace, etc.</p>\n\n<p>UPDATE:\n\"The keypress event is fired when a key is pressed down and that key normally produces a character value\" Ref: <a href=\"https://developer.mozilla.org/en-US/docs/Web/Events/keypress\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/Events/keypress</a></p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>Something I wrote up incase anyone comes accross and issue with people hitting backspace while thinking they are in a form field</p>\n\n<pre><code>window.addEventListener(\"keydown\", function(e){\n/*\nkeyCode: 8\nkeyIdentifier: \"U+0008\"\n*/\n    if(e.keyCode === 8 &amp;&amp; document.activeElement !== 'text') {\n        e.preventDefault();\n        alert('Prevent page from going back');\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm using a keypress listener eg.. </p>\n\n<pre><code>addEventListener(\"keypress\", function(event){\n\n  }\n</code></pre>\n\n<p>however, this doesn't seem to detect a backspace which erases text.. is there a different listener I can use to detect this?</p>\n",
            "last_activity_date": 1421359243,
            "question_id": 4843472,
            "score": 23,
            "tags": [
                "javascript",
                "addeventlistener"
            ],
            "title": "javascript listener, &quot;keypress&quot; doesn&#39;t detect backspace?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>That's not all, <code>window!==window.window</code>!</p>\n\n<p>I believe what we're probably seeing here is the difference between the \u2018inner window\u2019 and \u2018outer window\u2019 objects. Certainly other browsers have these (eg. <a href=\"https://developer.mozilla.org/En/SpiderMonkey/Split_object\">Moz</a>); they're typically used to present a different view of the <code>window</code> from inside and outside its own code.</p>\n\n<p>The inner window holds your global variables and document-specific members. The outer window is accessible to [cross-frame-] scripting via window-references like <code>frames[n]</code>, <code>parent</code>, <code>opener</code>, and apparently <code>self</code>. It is bound to the owner viewport (browser window/frame), so eg. when you navigate an iframe to a new document, the parent document still sees the same-identity <code>window</code> object in its iframe.</p>\n\n<p>In a sensible Browser Object Model design there would be separate objects for this, but when JavaScript was originally thrown together by Netscape there was very little consideration for elegance, resulting in this and many other interfaces where there is too much overload (<code>form</code> with an element called <code>submit</code>, anyone?).</p>\n\n<p>So for compatibility, the split window has to continue to <em>appear</em> to be a single object to scripts even though it isn't underneath. In IE, sometimes the mask slips: it seems like saying <code>window</code> gets you the inner window, and there's no hack to make it <code>===</code> against the outer window.</p>\n\n<p>ETA: Actually come to think of it, there's even some (poor) justification for this. The ECMAScript spec, which is not written with multiple global contexts in mind, defines <code>window</code>, and the unbound version of <code>this</code>, as retrieving the global variable scope object, which would be the inner window.</p>\n\n<p>The other properties, being part of the DOM/BOM, are not within the scope of the ECMA spec, so they can return something different (and must, for the sake of cross-frame scripting).</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Nice question. It does it with <code>document</code> and <code>document.parentWindow</code> too:</p>\n\n<pre><code>window == document; // true\nwindow === document; // false\n\nwindow == document.parentWindow; // true\nwindow === document.parentWindow; // false\n</code></pre>\n\n<p>The big wtf for me though is:</p>\n\n<pre><code>window == document; // true\ndocument == window; // false\n</code></pre>\n\n<p>You can swap out <code>window</code> with <code>this</code> in any of the above examples (and stay in the global context) with the same results. It makes the <code>==</code> operator even more suspect.</p>\n\n<p>Why it behaves this way is so beyond me.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>There's a convoluted backstory involving how I came across this, but why is the <code>self</code> property not exactly equal to the window itself?</p>\n\n<p>In Safari and Firefox and friends, the results are as I'd expect:</p>\n\n<pre><code>&gt; window == window.self\n  true\n&gt; window === window.self\n  true\n</code></pre>\n\n<p>The same isn't true in Internet Explorer, though:</p>\n\n<pre><code>&gt;&gt; window == window.self\n   true\n&gt;&gt; window === window.self\n   false\n</code></pre>\n\n<p>Can anybody account for the inconsistency? To exactly what is the <code>self</code> property of the window object pointing? It casts to something with equality, which is even more vexing.</p>\n",
            "last_activity_date": 1272407535,
            "question_id": 2725188,
            "score": 22,
            "tags": [
                "javascript",
                "internet-explorer",
                "dom",
                "cross-browser"
            ],
            "title": "Why is window not identical to window.self in Internet Explorer?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I <em>think</em> when you define a function with \"<code>var foo = function() {...};</code>\", the function is only defined <em>after</em> that line.  In other words, try this:</p>\n\n<pre><code>var replaceHtmlEntites = (function() {\n  var translate_re = /&amp;(nbsp|amp|quot|lt|gt);/g;\n  var translate = {\n    \"nbsp\": \" \",\n    \"amp\" : \"&amp;\",\n    \"quot\": \"\\\"\",\n    \"lt\"  : \"&lt;\",\n    \"gt\"  : \"&gt;\"\n  };\n  return function(s) {\n    return ( s.replace(translate_re, function(match, entity) {\n      return translate[entity];\n    }) );\n  }\n})();\n\nvar cleanText = text.replace(/^\\xa0*([^\\xa0]*)\\xa0*$/g,\"\");\ncleanText = replaceHtmlEntities(text);\n</code></pre>\n\n<p><strong>Edit</strong>: Also, only use \"<code>var</code>\" the first time you declare a variable (you're using it twice on the <code>cleanText</code> variable).</p>\n\n<p><strong>Edit 2</strong>:  The problem is the spelling of the function name.  You have \"var replaceHtml<i>Entites</i> =\".  It should be \"var replaceHtml<i>Entit<b>i</b>es</i> =\"</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you only need to replace <code>&amp;nbsp;</code> then you can use a far simpler regex:</p>\n\n<p><code>var textWithNBSpaceReplaced = originalText.replace(/&amp;nbsp;/g, ' ');</code></p>\n\n<p>Also, there is a typo in your div example, it says <code>&amp;nnbsp;</code> instead of <code>&amp;nbsp;</code>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This is much easier than you're making it. The text node will not have the literal string <code>\"&amp;nbsp;\"</code> in it, it'll have have the corresponding character with code 160.</p>\n\n<pre><code>function replaceNbsps(str) {\n  var re = new RegExp(String.fromCharCode(160), \"g\");\n  return str.replace(re, \" \");\n}\n\ntextNode.nodeValue = replaceNbsps(textNode.nodeValue);\n</code></pre>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Even easier:</p>\n\n<pre><code>textNode.nodeValue = textNode.nodeValue.replace(/\\u00a0/g, \" \");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>That first line is pretty messed up. It only needs to be:</p>\n\n<pre><code>var cleanText = text.replace(/\\xA0/g,' ');\n</code></pre>\n\n<p>That should be all you need.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>i used this, and it worked:</p>\n\n<pre><code>var cleanText = text.replace(/&amp;amp;nbsp;/g,\"\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var text = \"&amp;quot;&amp;nbsp;&amp;amp;&amp;lt;&amp;gt;\";\ntext = text.replaceHtmlEntites();\n\nString.prototype.replaceHtmlEntites = function() {\nvar s = this;\nvar translate_re = /&amp;(nbsp|amp|quot|lt|gt);/g;\nvar translate = {\"nbsp\": \" \",\"amp\" : \"&amp;\",\"quot\": \"\\\"\",\"lt\"  : \"&lt;\",\"gt\"  : \"&gt;\"};\nreturn ( s.replace(translate_re, function(match, entity) {\n  return translate[entity];\n}) );\n};\n</code></pre>\n\n<p>try this.....this worked for me</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am processing xhtml using javascript. I am getting the text content for a div node by concatenating the nodeValue of all child nodes where nodeType == Node.TEXT_NODE.</p>\n\n<p>The resulting string sometimes contains a non-breaking space entity. How do I replace this with a regular space character?</p>\n\n<p>My div looks like this...</p>\n\n<blockquote>\n  <p><code>&lt;div&gt;&lt;b&gt;Expires On&lt;/b&gt; Sep 30, 2009 06:30&amp;nbsp;AM&lt;/div&gt;</code></p>\n</blockquote>\n\n<p>The following suggestions found on the web did not work:</p>\n\n<pre><code>var cleanText = text.replace(/^\\xa0*([^\\xa0]*)\\xa0*$/g,\"\");\n\n\nvar cleanText = replaceHtmlEntities(text);\n\nvar replaceHtmlEntites = (function() {\n  var translate_re = /&amp;(nbsp|amp|quot|lt|gt);/g;\n  var translate = {\n    \"nbsp\": \" \",\n    \"amp\" : \"&amp;\",\n    \"quot\": \"\\\"\",\n    \"lt\"  : \"&lt;\",\n    \"gt\"  : \"&gt;\"\n  };\n  return function(s) {\n    return ( s.replace(translate_re, function(match, entity) {\n      return translate[entity];\n    }) );\n  }\n})();\n</code></pre>\n\n<p>Any suggestions?</p>\n",
            "last_activity_date": 1353747023,
            "question_id": 1495822,
            "score": 19,
            "tags": [
                "javascript",
                "regex",
                "html-entities"
            ],
            "title": "Replacing &amp;nbsp; from javascript dom text node"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>One solution is to use a list/array:</p>\n\n<pre><code>var first_json = {\"name\":\"joe\", \"age\":27};\nvar second_json = {\"name\":\"james\", \"age\":32};\n\nvar jsons = new Array();\njsons.push(first_json);\njsons.push(second_json);\n</code></pre>\n\n<p><strong>Result</strong></p>\n\n<pre><code>jsons = [\n    {\"name\":\"joe\", \"age\":27},\n    {\"name\":\"james\", \"age\":32}\n]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you'd rather copy the properties:</p>\n\n<pre><code>var json1 = { value1: '1', value2: '2' };\nvar json2 = { value2: '4', value3: '3' };\n\n\nfunction jsonConcat(o1, o2) {\n for (var key in o2) {\n  o1[key] = o2[key];\n }\n return o1;\n}\n\nvar output = {};\noutput = jsonConcat(output, json1);\noutput = jsonContat(output, json2);\n</code></pre>\n\n<p>Output = { value1: '1', value2: '4', value3: '3' };</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>okay, you can do this in one line of code. you'll need json2.js for this (you probably already have.). the two json objects here are unparsed strings.</p>\n\n<pre><code>json1 = '[{\"foo\":\"bar\"},{\"bar\":\"foo\"},{\"name\":\"craig\"}]';\n\njson2 = '[{\"foo\":\"baz\"},{\"bar\":\"fob\"},{\"name\":\"george\"}]';\n\nconcattedjson = JSON.stringify(JSON.parse(json1).concat(JSON.parse(json2)));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Based on your description in the comments, you'd simply do an array concat:</p>\n\n<pre><code>var jsonArray1 = [{'name': \"doug\", 'id':5}, {'name': \"dofug\", 'id':23}];\nvar jsonArray2 = [{'name': \"goud\", 'id':1}, {'name': \"doaaug\", 'id':52}];\njsonArray1 = jsonArray1.concat(jsonArray2);\n// jsonArray1 = [{'name': \"doug\", 'id':5}, {'name': \"dofug\", 'id':23}, \n//{'name': \"goud\", 'id':1}, {'name': \"doaaug\", 'id':52}];\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<pre><code>var baseArrayOfJsonObjects = [{},{}];\nfor (var i=0; i&lt;arrayOfJsonObjectsFromAjax.length; i++) {\n    baseArrayOfJsonObjects.push(arrayOfJsonObjectsFromAjax[i]);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have two JSON objects with the same structure and I want to concat them together using Javascript. Is there an easy way to do this?</p>\n",
            "last_activity_date": 1231951401,
            "question_id": 433627,
            "score": 19,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "Concat JSON objects"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If CORS is enabled, you have to do a pre-flight when encountering non-standard headers</p>\n\n<p>UPDATE: However according to <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.19\" rel=\"nofollow\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.19</a> ETAG seems to be a standard header.</p>\n\n<p>NOTE: Be sure that ALL request types set the Allow header INCLUDING ORIGIN! </p>\n\n<p>PS: For IE you need XDR </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Have you ever tried AJAX 2.0 (Cross domain sharing) is a methodology fairly recently brought out by W3C: <a href=\"http://www.w3.org/TR/XMLHttpRequest2/#ref-cors\" rel=\"nofollow\">http://www.w3.org/TR/XMLHttpRequest2/#ref-cors</a></p>\n\n<p>Also there is another way of doing this, which is called JSON-P, it's like a JSON request, but you can use it for cross-domains: <a href=\"http://en.wikipedia.org/wiki/JSONP\" rel=\"nofollow\">http://en.wikipedia.org/wiki/JSONP</a></p>\n\n<p>Both can be very dangerous to the site owners if not setup correctly though. So do be careful when using it.</p>\n\n<p>[PS]\nNot sure if this will help : <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html\" rel=\"nofollow\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Only simple response headers are exposed when using CORS.  Simple response headers are defined <a href=\"http://www.w3.org/TR/cors/#simple-response-header\">here</a>.  <code>ETag</code> is not a simple response headers.  If you want to expose non-simple headers, you need to set the <code>Access-Control-Expose-Headers</code> header, like so:</p>\n\n<pre><code>Access-Control-Expose-Headers: ETag\n</code></pre>\n\n<p>However, note that I've noticed bugs in Chrome, Safari and Firefox that prevent non-simple headers from being exposed correctly.  This may be fixed by now, I'm not sure.</p>\n\n<p>You shouldn't need to do a preflight request, since preflight is only required for non-GET/POST http methods or non-simple <em>request</em> headers (and you are asking about <em>response</em> headers).</p>\n",
                    "is_accepted": true,
                    "score": 28
                }
            ],
            "body": "<p>A simple GET request with no custom headers. The response is returned as expected. The data in the body is accessible, but not the headers.</p>\n\n<p>When I try to access the \"etag\" header, browsers raise an exception :</p>\n\n<blockquote>\n  <p>Refused to get unsafe header \"etag\"</p>\n</blockquote>\n\n<p>Chrome, Safari and Firefox all behave the same. I didn't test it on IE.</p>\n\n<p>What am I missing here?</p>\n",
            "last_activity_date": 1424720223,
            "question_id": 5822985,
            "score": 18,
            "tags": [
                "javascript",
                "ajax",
                "web-applications",
                "rest",
                "cors"
            ],
            "title": "Cross Domain Resource Sharing GET: &#39;refused to get unsafe header &quot;etag&quot;&#39; from Response"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Check out the <a href=\"http://api.jquery.com/jQuery.browser/\" rel=\"nofollow\"><code>$.browser</code></a> function.</p>\n\n<p>To detect IE, you can also and better go for <a href=\"http://www.quirksmode.org/css/condcom.html\" rel=\"nofollow\">IE conditional comments</a>.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>&lt;!--[if IE]&gt;\n  Special instructions for IE here\n&lt;![endif]--&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You <em>can</em> using <a href=\"http://api.jquery.com/jQuery.browser/\"><code>$.browser</code></a>, yes, but it's a bad idea to use browser detection:</p>\n\n<pre><code>if($.browser.msie) { /* IE */ }\n</code></pre>\n\n<p>A better option for instance would be <a href=\"http://api.jquery.com/jQuery.support/\"><code>$.support</code></a> which is <em>feature</em> detection, like this:</p>\n\n<pre><code>if(!$.support.opacity) { /* IE 6-8 */ }\n</code></pre>\n\n<p><code>$.support.opacity</code> is false in browsers that don't support <code>opacity</code> in styling (though IE 7-8 handle transparent PNGs file, so this still isn't ideal, depending on what you're after...personally I think you'd be giving IE 7/8 users a sub-optimal experience).</p>\n\n<p>What you should <em>really</em> do is target IE6 which <em>doesn't</em> support transparent PNGs (without an alpha filter), like this:</p>\n\n<pre><code>&lt;!--[if IE 6]&gt;\n  &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"IE6ImageStyles.css\"&gt;\n&lt;![endif]--&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<pre><code>&lt;script&gt;\n    jQuery.each(jQuery.browser, function(i, val) {\n      $(\"&lt;div&gt;\" + i + \" : &lt;span&gt;\" + val + \"&lt;/span&gt;\")\n                .appendTo(document.body);\n    });&lt;/script&gt;\n</code></pre>\n\n<p>$.browser.msie <br> for IE</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yes, you can, but they prefer you to use <code>jQuery.support</code>: <a href=\"http://api.jquery.com/jQuery.support/\">http://api.jquery.com/jQuery.support/</a>.</p>\n\n<p>In this case, use <code>jQuery.support.opacity</code>.</p>\n\n<p>Edit: assuming this is about opacity, of course.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I realise this isn't an answer  - but I can't really post this in a comment! </p>\n\n<p>If you're going to use javascript this code fixes the png issue with ie6. I haven't used it much, but afaik you need a transparent gif image called x.gif and it does the rest automatically.</p>\n\n<pre><code>// JavaScript Document\n\nvar supersleight    = function() {\n\n    var root = false;\n    var applyPositioning = true;\n\n    // Path to a transparent GIF image\n    var shim            = 'x.gif';\n\n    // RegExp to match above GIF image name\n    var shim_pattern    = /x\\.gif$/i;\n\n\n\n    var fnLoadPngs = function() { \n        if (root) {\n            root = document.getElementById(root);\n        }else{\n            root = document;\n        }\n        for (var i = root.all.length - 1, obj = null; (obj = root.all[i]); i--) {\n            // background pngs\n            if (obj.currentStyle.backgroundImage.match(/\\.png/i) !== null) {\n                bg_fnFixPng(obj);\n            }\n            // image elements\n            if (obj.tagName=='IMG' &amp;&amp; obj.src.match(/\\.png$/i) !== null){\n                el_fnFixPng(obj);\n            }\n            // apply position to 'active' elements\n            if (applyPositioning &amp;&amp; (obj.tagName=='A' || obj.tagName=='INPUT') &amp;&amp; obj.style.position === ''){\n                obj.style.position = 'relative';\n            }\n        }\n    };\n\n    var bg_fnFixPng = function(obj) {\n        var mode = 'scale';\n        var bg  = obj.currentStyle.backgroundImage;\n        var src = bg.substring(5,bg.length-2);\n        if (obj.currentStyle.backgroundRepeat == 'no-repeat') {\n            mode = 'crop';\n        }\n        obj.style.filter = \"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\" + src + \"', sizingMethod='\" + mode + \"')\";\n        obj.style.backgroundImage = 'url('+shim+')';\n    };\n\n    var el_fnFixPng = function(img) {\n        var src = img.src;\n        img.style.width = img.width + \"px\";\n        img.style.height = img.height + \"px\";\n        img.style.filter = \"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\" + src + \"', sizingMethod='scale')\";\n        img.src = shim;\n    };\n\n    var addLoadEvent = function(func) {\n        var oldonload = window.onload;\n        if (typeof window.onload != 'function') {\n            window.onload = func;\n        } else {\n            window.onload = function() {\n                if (oldonload) {\n                    oldonload();\n                }\n                func();\n            };\n        }\n    };\n\n    return {\n        init: function() { \n            addLoadEvent(fnLoadPngs);\n        },\n\n        limitTo: function(el) {\n            root = el;\n        },\n\n        run: function() {\n            fnLoadPngs();\n        }\n    };\n}();\n\n// limit to part of the page ... pass an ID to limitTo:\n// supersleight.limitTo('header');\n\nsupersleight.init();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>$.browser.webkit\n$.browser.safari\n$.browser.opera\n$.browser.msie\n$.browser.mozilla\n\nif ($.browser.msie) {\n        //do something\n}\nelse if ($.browser.mozilla) {\n        //do something else\n}\n</code></pre>\n\n<p>works with jQuery 1.3</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>$.browser has been removed in <strong>1.9</strong> as it's now suggested feature detection was preferred via $.support</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For better browser detection jQuery strongly recommend the use of an external library such as <a href=\"http://modernizr.com/docs/\" rel=\"nofollow\">Modernizr</a> instead of dependency on properties in <a href=\"http://api.jquery.com/jQuery.support/\" rel=\"nofollow\">jQuery.support</a> or the deprecated <a href=\"http://api.jquery.com/jQuery.browser/\" rel=\"nofollow\">jQuery.browser</a> (removed since v1.9)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there a good way to detect if the user's browser is Internet Explorer using jQuery?</p>\n\n<p>I have an issue with PNG graphics using IE and want to swap them for GIF's only if the user is viewing the site with IE.</p>\n",
            "last_activity_date": 1421104970,
            "question_id": 4498057,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "internet-explorer"
            ],
            "title": "jQuery browser detection?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>As per the API documentation, double quotes are considered valid JSON, single quotes aren't.</p>\n\n<p><a href=\"http://api.jquery.com/jQuery.parseJSON/\">http://api.jquery.com/jQuery.parseJSON/</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>That's because double quotes is considered standard while single quote is not. This is not really specific to JQuery, but its about <a href=\"http://www.json.org/\">JSON standard</a>. So irrespective of JS toolkit, you should expect same behaviour.</p>\n\n<blockquote>\n  <p>A value can be a string in double quotes, or a number, or true or false or null, or an object or an array. These structures can be nested.</p>\n</blockquote>\n\n<p><strong>Update</strong></p>\n\n<p>Or perhaps its a duplicate of <a href=\"http://stackoverflow.com/questions/2275359/jquery-single-quote-in-json-response\">jQuery single quote in JSON response</a></p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Go to <a href=\"http://jsonlint.com\" rel=\"nofollow\">www.Jsonlint.com</a> website and check your single quotes json string you will found that it  is not a valid json string.  Because double quotes json is standard json format.</p>\n\n<p>jsonlint.com is a website to check json format right or not.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>What actually the difference between this?</p>\n\n<p>This works fine:</p>\n\n<pre><code>var obj1 = jQuery.parseJSON('{\"orderedList\": \"true\"}');\ndocument.write(\"obj1 \"+ obj1.orderedList );\n</code></pre>\n\n<p>but it does not work:</p>\n\n<pre><code>var obj2 = jQuery.parseJSON(\"{'orderedList': 'true'}\");\ndocument.write(\"obj2 \"+ obj2.orderedList );\n</code></pre>\n\n<p>Why is that?</p>\n",
            "last_activity_date": 1367487584,
            "question_id": 14355655,
            "score": 17,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery.parseJSON single quote vs double quote"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The <a href=\"http://es5.github.com/#x11.4.3\" rel=\"nofollow\">ECMAScript specification</a> states that for host objects the return value of the <code>typeof</code> operator is:</p>\n\n<blockquote>\n  <p>Implementation-defined except may not be \"<code>undefined</code>\", \"<code>boolean</code>\",\n  \"<code>number</code>\", or \"<code>string</code>\".</p>\n</blockquote>\n\n<p>I believe the <code>unknown</code> value is only ever returned in Internet Explorer. Interestingly, <a href=\"http://msdn.microsoft.com/en-us/library/259s7zc1%28v=vs.94%29.aspx\" rel=\"nofollow\">MSDN</a> does not mention it:</p>\n\n<blockquote>\n  <p>There are six possible values that typeof returns: \"number,\" \"string,\"\n  \"boolean,\" \"object,\" \"function,\" and \"undefined.\"</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>According to a <a href=\"http://bytes.com/topic/javascript/answers/515951-typeof-operator-returns-unknown-instead-undefined#post2009988\">duplicate question at Bytes</a>, the typeof value <code>unknown</code> is added to JScript version 8, along with <code>date</code>.</p>\n\n<p>A <a href=\"http://robertnyman.com/2005/12/21/what-is-typeof-unknown/#comment-8001\">comment</a> to a blog by Robert Nyman can also be explanatory:</p>\n\n<blockquote>\n  <p>Internet Explorer displays \u201cunknown\u201d when the object in question is on\n  the other side of a COM+ bridge. You may not know this or realize\n  this, but MS\u2019s XMLHTTP object is part of a different COM+ object that\n  implements IUnknown; when you call methods on it, you\u2019re doing so over\n  a COM bridge and not calling native JavaScript.</p>\n  \n  <p>Basically that\u2019s MS\u2019s answer if you try to test or access something\n  that\u2019s not a true part of the JScript engine.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Try <code>in</code> operator. I had the same problem (with applet) and I solved it using <code>in</code>:</p>\n\n<pre><code>if(\"Refresh\" in opener) {\n    opener.Refresh();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I have a window, where before being closed I refresh the underlying page.</p>\n\n<pre><code>if(opener &amp;&amp; typeof(opener.Refresh) != 'undefined')\n{\n    opener.Refresh();\n}\n</code></pre>\n\n<p>If I moved away from the original opening page, this code would throw a <em>\"Permission Denied\"</em> error.</p>\n\n<p>Debugging the code revealed that <code>typeof(opener.Refresh)</code> was equal to <em>\"unknown\"</em> instead of the expected <em>\"undefined\"</em>.</p>\n\n<p>As far as I'm aware <em>\"unknown\"</em> is not one of the return values for <code>typeof</code>, <strong>so how and why would this value be returned?</strong></p>\n\n<p><em><strong>Further Information</em></strong></p>\n\n<p>I avoided the error by changing the check to:</p>\n\n<pre><code>if(opener &amp;&amp; typeof(opener.Refresh) == 'function')\n</code></pre>\n\n<p>However examples like this (<a href=\"http://stackoverflow.com/questions/27509/detecting-an-undefined-object-property-in-javascript\">detecting-an-undefined-object-property-in-javascript</a>) do not seem to factor \"unknown\" into the equation.</p>\n",
            "last_activity_date": 1362122770,
            "question_id": 10982739,
            "score": 17,
            "tags": [
                "javascript",
                "internet-explorer",
                "typeof"
            ],
            "title": "typeof returning &quot;unknown&quot; in IE"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Try This</p>\n\n<pre><code>var sessionValue = '&lt;%=Session[\"usedData\"]%&gt;'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You can't access <code>Session</code> directly in JavaScript.</p>\n\n<p>You can make a hidden field and pass it to your page and then use JavaScript to retrieve the object via <code>document.getElementById</code></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Assign value to a hidden field in the code-behind file. Access this value in your javascript like a normal HTML control.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Assuming you mean \"client side JavaScript\" - then you can't, at least not directly.</p>\n\n<p>The session data is stored on the server, so client side code can't see it without communicating with the server.</p>\n\n<p>To access it you must make an HTTP request and have a server side program modify / read &amp; return the data.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Accessing &amp; Assigning the Session Variable using Javascript:</strong></p>\n\n<p><strong>Assigning the ASP.NET Session Variable using Javascript:</strong></p>\n\n<pre><code> &lt;script type=\"text/javascript\"&gt;\nfunction SetUserName()\n{\n    var userName = \"Shekhar Shete\";\n    '&lt;%Session[\"UserName\"] = \"' + userName + '\"; %&gt;';\n     alert('&lt;%=Session[\"UserName\"] %&gt;');\n}\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>Accessing ASP.NET Session variable using Javascript:</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function GetUserName()\n    {\n\n        var username = '&lt;%= Session[\"UserName\"] %&gt;';\n        alert(username );\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"http://shekharshetemcts.wordpress.com/2013/11/27/how-to-access-session-variables-using-javascript-in-asp-net/\">See Here </a></p>\n\n<p>Hope this helped you...! :)</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Javascript can not directly set session values.\nFor setting session values from javascript I do ajax call as follows.</p>\n\n<p><a href=\"http://runnable.com/VCF-6-cvRENwlcfb/setsessionfromjs-for-net\" rel=\"nofollow\">Check Online</a></p>\n\n<p>At ASPx file or html,</p>\n\n<pre><code> &lt;script type=\"text/javascript\"&gt;\n $(function(){\n   //Getting values from session and saving in javascript variable.\n   // But this will be executed only at document.ready.\n   var firstName = '&lt;%= Session[\"FirstName\"] ?? \"\" %&gt;';\n   var lastName = '&lt;%= Session[\"LastName\"] ?? \"\" %&gt;';\n\n   $(\"#FirstName\").val(firstName);\n   $(\"#LastName\").val(lastName);\n\n   $('Button').click(function(){\n     //Posting values to save in session\n     $.post(document.URL+'?mode=ajax', \n     {'FirstName':$(\"#FirstName\").val(),\n     'LastName':$(\"#LastName\").val()\n     } );\n   });\n\n });\n</code></pre>\n\n<p>At Server side,</p>\n\n<pre><code>protected void Page_Load(object sender, EventArgs e)\n {\n      if(Request.QueryString[\"mode\"] != null &amp;&amp; Request.QueryString[\"mode\"] == \"ajax\")\n      {\n        //Saving the variables in session. Variables are posted by ajax.\n        Session[\"FirstName\"] = Request.Form[\"FirstName\"] ?? \"\";\n        Session[\"LastName\"] = Request.Form[\"LastName\"] ?? \"\";\n      }\n }\n</code></pre>\n\n<p>For getting session values, as said by Shekhar and Rajeev</p>\n\n<pre><code>var firstName = '&lt;%= Session[\"FirstName\"] ?? \"\" %&gt;';\n</code></pre>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>In code-behind I set <code>Session</code> with some data.</p>\n\n<pre><code>Session[\"usedData\"] = \"sample data\";\n</code></pre>\n\n<p>And the question is how can I get the Session value(in my example; \"sample data\") in javascript and set <code>Session[\"usedData\"]</code> with a new value?</p>\n",
            "last_activity_date": 1411481794,
            "question_id": 15519454,
            "score": 15,
            "tags": [
                "javascript",
                "session"
            ],
            "title": "How can I access Session variables and set them in javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>As with all css properties that contain hyphens, their corresponding names in JS is to remove the hyphen and make the following letter capital: <code>backgroundColor</code></p>\n\n<pre><code>alert(myDiv.style.backgroundColor);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>Using <a href=\"http://docs.jquery.com/CSS/css\" rel=\"nofollow\">JQuery</a>:</p>\n\n<pre><code>var color = $('#myDivID').css(\"background-color\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It depends which style from the div you need. Is this a background style which was defined in CSS or background style which was added through javascript(inline) to the current node?</p>\n\n<p>In Case of CSS style, you should use computed style. Like you do in <code>getStyle</code>.</p>\n\n<p>With inline style you should use <code>node.style</code> reference: <code>x.style.backgroundColor</code>;</p>\n\n<p>Also notice, that you pick the style by using CamelCase/non hyphen reference, so not <code>background-color</code>, but <code>backgroundColor</code>;</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><strong>With jQuery:</strong> </p>\n\n<pre><code>jQuery('#myDivID').css(\"background-color\");\n</code></pre>\n\n<p><strong>With prototype:</strong></p>\n\n<pre><code>$('myDivID').getStyle('backgroundColor'); \n</code></pre>\n\n<p><strong>With pure JS:</strong></p>\n\n<pre><code>document.getElementById(\"myDivID\").style.backgroundColor\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>btw, checkout the following getelementsbyclassname function implementation usage comparisons: <a href=\"http://ejohn.org/blog/getelementsbyclassname-in-firefox-3/\" rel=\"nofollow\">http://ejohn.org/blog/getelementsbyclassname-in-firefox-3/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Get at number:\n<strong>window.getComputedStyle( <em>Element</em> , null).getPropertyValue( <em>CSS</em> );</strong></p>\n\n<p>Example: window.getComputedStyle( document.body ,null).getPropertyValue('<strong>background-color</strong>');\n  window.getComputedStyle( document.body ,null).getPropertyValue('width') ~ document.body.clientWidth</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can i get the background color of any element, say Div, using javascript. I tried:-  </p>\n\n<pre><code>&lt;html&gt;\n    &lt;body&gt;\n    \t&lt;div id=\"myDivID\" style=\"background-color: red\"&gt;shit happens&lt;/div&gt;\n    \t&lt;input type=\"button\" value=\"click me\" onclick=\"getColor();\"&gt;\n    &lt;/body&gt;\n\n    &lt;script type=\"text/javascript\"&gt;\n    \tfunction getColor(){\n    \t\tmyDivObj = document.getElementById(\"myDivID\")\n    \t\tif ( myDivObj ){\n    \t\t\talert ( 'myDivObj.bgColor: ' + myDivObj.bgColor ); // shows: undefined\n    \t\t\talert ( 'myDivObj.backgroundcolor: ' + myDivObj.backgroundcolor ); // shows: undefined\n    \t\t\t//alert ( 'myDivObj.background-color: ' + myDivObj.background-color ); // this is not a valid property :)\n    \t\t\talert ( 'style:bgColor: ' + getStyle ( myDivObj, 'bgColor' ) ); //shows: undefined\n    \t\t\talert ( 'style:backgroundcolor: ' +  getStyle ( myDivObj, 'backgroundcolor' ) ); // shows:undefined:\n    \t\t\talert ( 'style:background-color: ' +  getStyle ( myDivObj, 'background-color' ) );  // shows: undefined\n    \t\t}else{\n    \t\t\talert ( 'damn' );\n    \t\t}\n    \t}\n    \t/* copied from `QuirksMode`  - http://www.quirksmode.org/dom/getstyles.html - */\n    \tfunction getStyle(x,styleProp)\n    \t{\n    \t\tif (x.currentStyle)\n    \t\t\tvar y = x.currentStyle[styleProp];\n    \t\telse if (window.getComputedStyle)\n    \t\t\tvar y = document.defaultView.getComputedStyle(x,null).getPropertyValue(styleProp);\n    \t\treturn y;\n    \t}\n    &lt;/script&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1411465443,
            "question_id": 1887104,
            "score": 15,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "How to get the background color of an element using javascript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Use <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Regular_Expressions#special-lookahead\">positive lookahead</a> so that the regular expression asserts that the special character exists, but does not actually match it:</p>\n\n<pre><code>string.split(/&lt;br \\/&gt;(?=&amp;#?[a-zA-Z0-9]+;)/g);\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/Ez3b3/\">See it in action</a></strong>.</p>\n\n<p><strong>Update:</strong> fixed typo (moved literal <code>;</code> inside lookahead parens)</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>If you wrap the delimiter in parantheses it will be part of the returned array.</p>\n\n<pre><code>string.split(/(&lt;br \\/&gt;&amp;#?[a-zA-Z0-9]+);/g);\n// returns [\"aaaaaa\", \"&lt;br /&gt;&amp;dagger;\", \"bbbb\", \"&lt;br /&gt;&amp;Dagger;\", \"cccc\"]\n</code></pre>\n\n<p>Depending on which part you want to keep change which subgroup you match</p>\n\n<pre><code>string.split(/(&lt;br \\/&gt;)&amp;#?[a-zA-Z0-9]+;/g);\n// returns [\"aaaaaa\", \"&lt;br /&gt;\", \"bbbb\", \"&lt;br /&gt;\", \"cccc\"]\n</code></pre>\n\n<p>You could improve the expression by ignoring the case of letters\n    string.split(/()&amp;#?[a-z0-9]+;/gi);</p>\n\n<p>And you can match for predefined groups like this: <code>\\d</code> equals <code>[0-9]</code> and <code>\\w</code> equals <code>[a-zA-Z0-9_]</code>. This means your expression could look like this.</p>\n\n<pre><code>string.split(/&lt;br \\/&gt;(&amp;#?[a-z\\d]+;)/gi);\n</code></pre>\n\n<p>There is a good <a href=\"http://www.javascriptkit.com/jsref/regexp.shtml\">Regular Expression Reference on JavaScriptKit</a>.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>An extension function splits string with substring or RegEx and the delimiter is putted according to second parameter ahead or behind.        </p>\n\n<pre><code>    String.prototype.splitKeep = function (splitter, ahead) {\n        var self = this;\n        var result = [];\n        if (splitter != '') {\n            var matches = [];\n            // Getting mached value and its index\n            var replaceName = splitter instanceof RegExp ? \"replace\" : \"replaceAll\";\n            var r = self[replaceName](splitter, function (m, i, e) {\n                matches.push({ value: m, index: i });\n                return getSubst(m);\n            });\n            // Finds split substrings\n            var lastIndex = 0;\n            for (var i = 0; i &lt; matches.length; i++) {\n                var m = matches[i];\n                var nextIndex = ahead == true ? m.index : m.index + m.value.length;\n                if (nextIndex != lastIndex) {\n                    var part = self.substring(lastIndex, nextIndex);\n                    result.push(part);\n                    lastIndex = nextIndex;\n                }\n            };\n            if (lastIndex &lt; self.length) {\n                var part = self.substring(lastIndex, self.length);\n                result.push(part);\n            };\n            // Substitution of matched string\n            function getSubst(value) {\n                var substChar = value[0] == '0' ? '1' : '0';\n                var subst = '';\n                for (var i = 0; i &lt; value.length; i++) {\n                    subst += substChar;\n                }\n                return subst;\n            };\n        }\n        else {\n            result.add(self);\n        };\n        return result;\n    };\n</code></pre>\n\n<p>The test:</p>\n\n<pre><code>    test('splitKeep', function () {\n        // String\n        deepEqual(\"1231451\".splitKeep('1'), [\"1\", \"231\", \"451\"]);\n        deepEqual(\"123145\".splitKeep('1', true), [\"123\", \"145\"]);\n        deepEqual(\"1231451\".splitKeep('1', true), [\"123\", \"145\", \"1\"]);\n        deepEqual(\"hello man how are you!\".splitKeep(' '), [\"hello \", \"man \", \"how \", \"are \", \"you!\"]);\n        deepEqual(\"hello man how are you!\".splitKeep(' ', true), [\"hello\", \" man\", \" how\", \" are\", \" you!\"]);\n        // Regex\n        deepEqual(\"mhellommhellommmhello\".splitKeep(/m+/g), [\"m\", \"hellomm\", \"hellommm\", \"hello\"]);\n        deepEqual(\"mhellommhellommmhello\".splitKeep(/m+/g, true), [\"mhello\", \"mmhello\", \"mmmhello\"]);\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I was having similar but slight different problem. Anyway, here are examples of three different scenarios for where to keep the deliminator.</p>\n\n<pre><code>\"1\u30012\u30013\".split(\"\u3001\") == [\"1\", \"2\", \"3\"]\n\"1\u30012\u30013\".split(/(\u3001)/g) == [\"1\", \"\u3001\", \"2\", \"\u3001\", \"3\"]\n\"1\u30012\u30013\".split(/(?=\u3001)/g) == [\"1\", \"\u30012\", \"\u30013\"]\n\"1\u30012\u30013\".split(/(?!\u3001)/g) == [\"1\u3001\", \"2\u3001\", \"3\"]\n\"1\u30012\u30013\".split(/(.*?\u3001)/g) == [\"\", \"1\u3001\", \"\", \"2\u3001\", \"3\"]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have a string: </p>\n\n<pre><code>var string = \"aaaaaa&lt;br /&gt;&amp;dagger; bbbb&lt;br /&gt;&amp;Dagger; cccc\"\n</code></pre>\n\n<p>And i vould like to split this string with the delimiter <code>&lt;br /&gt;</code> followed by a special character.</p>\n\n<p>To do that, I am using this:</p>\n\n<pre><code>string.split(/&lt;br \\/&gt;&amp;#?[a-zA-Z0-9]+;/g);\n</code></pre>\n\n<p>And I am getting what I need, except that I am loosing the delimiter, and I need it.\nHere is the example: <a href=\"http://jsfiddle.net/JwrZ6/1/\" rel=\"nofollow\">http://jsfiddle.net/JwrZ6/1/</a></p>\n\n<p>How can I keep the delimiter?</p>\n\n<p>Thank you very much for your help.</p>\n",
            "last_activity_date": 1425768088,
            "question_id": 12001953,
            "score": 14,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Javascript and regex: split string and keep the separator"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<ol>\n<li>Replace all of the \"d\" instances into \",d\"</li>\n<li>Split by \",\"</li>\n</ol>\n\n\n\n<pre><code>var string = \"abcdeabcde\";\nvar newstringreplaced = string.replace(/d/gi, \",d\");\nvar newstring = newstringreplaced.split(\",\");\nreturn newstring;\n</code></pre>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>var string = \"abcdeabcde\";\n    var delim = \"d\";\n    var newstring = string.split(delim);\n    var newArr = [];\n    var len=newstring.length;\n    for(i=0; i&lt;len;i++)\n    {\n        newArr.push(newstring[i]);\n        if(i != len-1)newArr.push(delim);\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>function split2(original){\n   var delimiter = \"d\", result = [], tmp;\n   tmp = original.split(delimiter);\n   tmp.forEach(function(x){result.push(x); result.push(delimiter); });\n   return result;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try:</p>\n\n<pre><code>\"abcdeabcde\".split(/(d)/);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Just override the <code>String.prototype.split</code> function with this one :</p>\n\n<pre><code>String.prototype._split = String.prototype.split;\nString.prototype.split = function(delimiter, keepDelimiters) {\n    if (!keepDelimiters) {\n        return this._split(delimiter);\n    } else {\n        var res = [];\n        var start = 0, index;\n        while ((index = this.indexOf(delimiter, start)) != -1) {\n            res.push(this.substr(start, index - start));\n            res.push(delimiter);\n            start = index + 1;\n        }\n        res.push(this.substr(start));\n        return res;\n    }\n};\n\n\nvar str = \"abcdeabcde\";\nalert(str.split(\"d\", true));\nalert(str.split(\"d\"));\n\n// output : \n//\n//  [ 'abc', 'd', 'eabc', 'd', 'e' ]\n//  [ 'abc', 'eabc', 'e' ]\n</code></pre>\n\n<p>This method will not fail, do not use regular expressions and is consistent with the original <code>String.split</code> function. It is also consistent with the <code>str.split(/(d)/);</code> solution, but will not fail in IE.</p>\n\n<p>The only restriction is that, if the second parameter is used (the <code>split</code> replacement drop-in function), then the delimiter cannot be a regular expression. But if you think about it a little, it's not a real restriction since you don't need the second parameter if using regular expression...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try this</p>\n\n<pre><code>var string = \"abcdeabcde\";\nvar res = string.replace( /d/g, 'd\\0' ).split(/(?=d)|\\0/);\nconsole.log( res );\n//[\"abc\", \"d\", \"eabc\", \"d\", \"e\"]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var parts= string.split('d');\nfor (var i= parts.length; i--&gt;1;)\n    parts.splice(i, 0, 'd');\n</code></pre>\n\n<p>(The reversed loop is necessary to avoid adding <code>d</code>s to parts of the list that have already had <code>d</code>s inserted.)</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>split - split is used to create separate lines not for searching.</p>\n\n<p>[^d] - find a group of substrings not containing \"d\"</p>\n\n<pre><code>var str = \"abcdeabcde\";\n\nstr.match(/[^d]+|d/g)         // [\"abc\", \"d\", \"eabc\", \"d\", \"e\"]\nor\nstr.match(/[^d]+/g)           // [\"abc\", \"eabc\", \"e\"]\nor\nstr.match(/[^d]*/g)           // [\"abc\", \"\", \"eabc\", \"\", \"e\", \"\"]\n</code></pre>\n\n<p>Read \"RegExp Object\" if you do not want problems with the \"javascript\".</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is my version for regexp delimiters. It has same interface with String.prototype.split; it will treat global and non global regexp with no difference. Returned value is an array that odd member of it are matched delimiters.</p>\n\n<pre><code>function split(text, regex) {\n    var token, index, result = [];\n    while (text !== '') {\n        regex.lastIndex = 0;\n        token = regex.exec(text);\n        if (token === null) {\n            break;\n        }\n        index = token.index;\n        if (token[0].length === 0) {\n            index = 1;\n        }\n        result.push(text.substr(0, index));\n        result.push(token[0]);\n        index = index + token[0].length;\n        text = text.slice(index);\n    }\n    result.push(text);\n    return result;\n}\n\n// Tests\nassertEquals(split(\"abcdeabcde\", /d/), [\"abc\", \"d\", \"eabc\", \"d\", \"e\"]);\nassertEquals(split(\"abcdeabcde\", /d/g), [\"abc\", \"d\", \"eabc\", \"d\", \"e\"]);\nassertEquals(split(\"1.2,3...4,5\", /[,\\.]/), [\"1\", \".\", \"2\", \",\", \"3\", \".\", \"\", \".\", \"\", \".\", \"4\", \",\", \"5\"]);\nassertEquals(split(\"1.2,3...4,5\", /[,\\.]+/), [\"1\", \".\", \"2\", \",\", \"3\", \"...\", \"4\", \",\", \"5\"]);\nassertEquals(split(\"1.2,3...4,5\", /[,\\.]*/), [\"1\", \"\", \"\", \".\", \"2\", \"\", \"\", \",\", \"3\", \"\", \"\", \"...\", \"4\", \"\", \"\", \",\", \"5\", \"\", \"\"]);\nassertEquals(split(\"1.2,3...4,5\", /[,\\.]/g), [\"1\", \".\", \"2\", \",\", \"3\", \".\", \"\", \".\", \"\", \".\", \"4\", \",\", \"5\"]);\nassertEquals(split(\"1.2,3...4,5\", /[,\\.]+/g), [\"1\", \".\", \"2\", \",\", \"3\", \"...\", \"4\", \",\", \"5\"]);\nassertEquals(split(\"1.2,3...4,5\", /[,\\.]*/g), [\"1\", \"\", \"\", \".\", \"2\", \"\", \"\", \",\", \"3\", \"\", \"\", \"...\", \"4\", \"\", \"\", \",\", \"5\", \"\", \"\"]);\nassertEquals(split(\"1.2,3...4,5.\", /[,\\.]/), [\"1\", \".\", \"2\", \",\", \"3\", \".\", \"\", \".\", \"\", \".\", \"4\", \",\", \"5\", \".\", \"\"]);\nassertEquals(split(\"1.2,3...4,5.\", /[,\\.]+/), [\"1\", \".\", \"2\", \",\", \"3\", \"...\", \"4\", \",\", \"5\", \".\", \"\"]);\nassertEquals(split(\"1.2,3...4,5.\", /[,\\.]*/), [\"1\", \"\", \"\", \".\", \"2\", \"\", \"\", \",\", \"3\", \"\", \"\", \"...\", \"4\", \"\", \"\", \",\", \"5\", \"\", \"\", \".\", \"\"]);\nassertEquals(split(\"1.2,3...4,5.\", /[,\\.]/g), [\"1\", \".\", \"2\", \",\", \"3\", \".\", \"\", \".\", \"\", \".\", \"4\", \",\", \"5\", \".\", \"\"]);\nassertEquals(split(\"1.2,3...4,5.\", /[,\\.]+/g), [\"1\", \".\", \"2\", \",\", \"3\", \"...\", \"4\", \",\", \"5\", \".\", \"\"]);\nassertEquals(split(\"1.2,3...4,5.\", /[,\\.]*/g), [\"1\", \"\", \"\", \".\", \"2\", \"\", \"\", \",\", \"3\", \"\", \"\", \"...\", \"4\", \"\", \"\", \",\", \"5\", \"\", \"\", \".\", \"\"]);\n\n// quick and dirty assert check\nfunction assertEquals(actual, expected) {\n  console.log(JSON.stringify(actual) === JSON.stringify(expected));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Can be done in one line:</p>\n\n<pre><code>var string = \"abcdeabcde\";    \nstring.split(/(d)/);\n[\"abc\", \"d\", \"eabc\", \"d\", \"e\"]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I split a string without removing the delimiters?</p>\n\n<p>Let's say I have a string:\n<code>var string = \"abcdeabcde\";</code></p>\n\n<p>When I do\n<code>var newstring = string.split(\"d\")</code>, I get something like this:</p>\n\n<p><code>[\"abc\",\"eabc\",\"e\"]</code></p>\n\n<p>But I want to get this:</p>\n\n<p><code>[\"abc\",\"d\",\"eabc\",\"d\",\"e\"]</code></p>\n\n<p>When I tried to do my \"split2\" function, I got all entangled in splice() and indexes and \"this\" vs \"that\" and ... aargh! Help! :D</p>\n",
            "last_activity_date": 1423760367,
            "question_id": 4514144,
            "score": 14,
            "tags": [
                "javascript",
                "split",
                "delimiter",
                "splice"
            ],
            "title": "JS string.split() without removing the delimiters"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Well, you can set <code>async: false</code> on your AJAX call to make the browser wait for the request to finish before doing anything else, but note that this will 'hang' the browser for the duration of the request.</p>\n\n<pre><code>$.ajax({\n    type: 'POST',\n    async: false,\n    url: '/clientarea/utils/record-time',\n    data: 'teid=' + teid + '&amp;t=' + t\n});\n</code></pre>\n\n<p>From the manual:</p>\n\n<blockquote>\n  <p><sup>By default, all requests are sent asynchronous (i.e. this is set to true by default). If you need synchronous requests, set this option to false. Cross-domain requests and dataType: \"jsonp\" requests do not support synchronous operation. Note that synchronous requests may temporarily lock the browser, disabling any actions while the request is active.</sup></p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>for me, yours is not a good idea for the browser to wait before closing...\n<br> simply because what if I really want to close it?... </p>\n\n<p>if a page bother a user, it's not good...</p>\n\n<p>my suggestion is, in the page, you wait for 2 minutes (if 2 minutes is the requirements), then send an ajax that the user has done his 2 minutes...</p>\n\n<p>you can then check it on the server side if one has his 2 minutes or not...</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The <code>jQuery.ajax()</code> method has the option <code>async</code>. If you set it to <code>false</code> the call will block until the response comes back (or it timed out). I'm pretty shure, that calling this, will yause the browser to weit in the unload handler.</p>\n\n<p>Side note: You can't rely on this to work. If the browser gives the user the option to cancel the unload handlers (which some browsers do after a while of waiting), the \"time spend on site\" will never be updated. You could add a timer to the site, which periodically calls a script on the server and which updates the time.  You won't have an accurate value, but in your case, this isn't needed.</p>\n\n<p>If you only need to know if the user was X seconds on the page You could simply set a timeout in the onload handler (using <code>setTimeout(function, ms)</code>) which makes a call if the user has spend the needed time. So there would be no need for a unload handler.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>use <code>onbeforeunload</code>:</p>\n\n<pre><code>$(document).ready(function(){\n  window.onbeforeunload = function(){\n     // $.ajax stuff here\n     return false;\n  }\n});\n</code></pre>\n\n<p>This will at least bring the user a <code>messagebox</code> which asks him if he wants to close the current window/tab.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think it would be much better to use a polling technique as you suggest, though it will cause some load on the web server.</p>\n\n<pre><code>$(document).ready(function() {\n\n    var teid = TEID;\n    var startTime = new Date().getTime();\n\n    var ajaxFunc = function() {\n        var timeSpentMilliseconds = new Date().getTime() - startTime;\n        var t = timeSpentMilliseconds / 1000 / 60;\n\n        $.ajax({\n            type: 'POST',\n            url: '/clientarea/utils/record-time',\n            data: 'teid=' + teid + '&amp;t=' + t\n        });\n    };\n\n    setInterval(ajaxFunc, 60000);\n\n})\n</code></pre>\n\n<p>You'll be glad when you can use websockets :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It is a bad idea to try and hijack your users' browser, since it will give them a bad feeling and send them away.</p>\n\n<p>If for some reason you want not to produce a new page until the user has spent a minimum time on the previous one, the best thing to do is to pilot server side, i.e. redirecting to the current page until the requested time has passed.</p>\n\n<p>You don't even need to make ajax calls, just store in the session the timestamp of when the page was served, and don't show the following page until a certain amount of time has passed.</p>\n\n<p>Be sure to tell the users they have to wait for a new page to be ready, maybe with a simple javascript countdown.</p>\n\n<p>If you want the user to actually have the page active for a certain amount of time (i.e. not to switch to another tab/window waiting for the two minutes to elapse), well, I cannot propose an effective solution.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>How about setting a cookie in the unload handler? The server should see it on the subsequent requests.</p>\n\n<pre><code>&lt;script&gt;\n    $(window).unload(function(){document.cookie='left_on='+(new Date())})\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Basically, once a user leaves a webpage in my application, I need to call a PHP script with AJAX, which will insert a time spent on the webpage to the database and then leave the page.</p>\n\n<p>It is important to wait for the AJAX request to finish because webpages in my application are not accessible to users unless they have spent a certain time on a previous page (let's say two minutes).</p>\n\n<p>Here is my jquery code:</p>\n\n<pre><code>$(document).ready(function() {\n\n    var teid = TEID;\n    var startTime = new Date().getTime();\n\n    $(window).unload(function() {\n        var timeSpentMilliseconds = new Date().getTime() - startTime;\n        var t = timeSpentMilliseconds / 1000 / 60;\n\n        $.ajax({\n            type: 'POST',\n            url: '/clientarea/utils/record-time',\n            data: 'teid=' + teid + '&amp;t=' + t\n        });\n    });\n\n});\n</code></pre>\n\n<p>How should I change it so it will wait for the AJAX request to end before leaving the webpage?</p>\n\n<p>EDIT:</p>\n\n<p>Or it might be better (easier) to just let the AJAX request be repeated every minute or so. Is that possible?</p>\n",
            "last_activity_date": 1296659525,
            "question_id": 3138498,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "ajax"
            ],
            "title": "$(window).unload wait for AJAX call to finish before leaving a webpage"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Check out my reply in this post;</p>\n\n<p><a href=\"http://stackoverflow.com/questions/1670415/mvc-how-to-return-instruction-to-run-javascipt-method/1670447#1670447\">MVC how to return instruction to run javascipt method? </a></p>\n\n<p>That will return a partial view to the page.  If you want to itterate through a json object then return a json object from your controller and use something like the following;</p>\n\n<pre><code>var obj = eval('(' + msg + ')');\n</code></pre>\n\n<p>msg above is the returned object from your controller;</p>\n\n<p>then,</p>\n\n<pre><code>$.each(obj.Objects, function() { do something with object });\n</code></pre>\n\n<p>\"Objects\" above is a property within the returned json object.</p>\n\n<p>So in c#</p>\n\n<pre><code>public class JsonObject()\n{\n  List&lt;MyObjectList&gt; Objects{get;set;}\n}\n</code></pre>\n\n<p>Return the above object to the view.</p>\n\n<p>Does this make sense or would you like a working sample?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h2>Avoid if possible</h2>\n\n<p>JavaScriptResult is considered an anti-pattern that Asp.net MVC introduced (complete separation of concerns), because it couples Controller and View back together to make them dependable on eachother. In a pure Asp.net MVC application where the UI is build on Asp.net MVC and server side serves this client implementation only it is thus <strong>advised</strong> to avoid this functionality.</p>\n\n<p>It may be useful in other scenarios. I can remember I've been reading something related to Ruby on Rails clients.</p>\n\n<p>Anyway.</p>\n\n<h2>An example that does make sense</h2>\n\n<p>An actual example would be to return javascript code to an Ajax request that would simply provide some functionality that will get executed immediately upon response without any data manipulation.</p>\n\n<p><strong>Where could you possibly benefit from it?</strong> Well think of an application that has huge amounts of various client classes used thoughout the application. But certain pages use only a small fraction (or even a dynamic fracion) of them. In this case you would have two possibilities:</p>\n\n<ol>\n<li><em>Load the whole client class tree upfront</em> - either in a huge single file or fragmented in separate files (this would be ok if views would use a small sub set of up-front known classes, because otherwise this would result in lots of server requests)</li>\n<li><em>Load classes on demand when they are needed</em> - or maybe even execute certain class functions on demand when and if they are needed.</li>\n</ol>\n\n<p>In this particular case, the second scenario would be much better and much more efficient in terms of network traffic, client memory resources and processor load.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Here's a practical case:\nI have a <strong>Global</strong> static class that contains static properties of values that are used through the whole system.</p>\n\n<p>Some of those values <strong>need to be shared with JS</strong> code. So I created an <strong>Action</strong> that returns <strong>JavaScriptResult</strong>.</p>\n\n<pre><code>[OutputCache(Duration = 999999)]\npublic virtual JavaScriptResult Global()\n{\n    var script = string.Format(@\"\n    MaxNotificaitonsToShow = {0};\n    ItemsPerPage = 25;\",\n    GlobalSettings.MaxNotificaitonsToShow);\n    return JavaScript(script);\n}\n</code></pre>\n\n<p>And in the page footer I load the page:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"/JS/Global\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Now I can get the values in any Javascript file:</p>\n\n<pre><code>if(ItemsPerPage == 25)\n{\n   alert('it works!');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                }
            ],
            "body": "<p>Can somebody provide a working example of JavaScriptResult in asp.net mvc. I understand that it returns javascript which is then executed on the client side and also that the content type of the response is set to text/javascript. I need some working example to see this thing in action.</p>\n",
            "last_activity_date": 1380637400,
            "question_id": 1677325,
            "score": 14,
            "tags": [
                "c#",
                "javascript",
                "jquery",
                "asp.net-mvc"
            ],
            "title": "Working example for JavaScriptResult in asp.net mvc"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<pre><code>var quit = false;\n\nfunction something() {\n    if(quit) {\n       return;\n    } \n    quit = true;\n    ... other code....\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>UnderscoreJs has a function that does that, <a href=\"http://underscorejs.org/#once\">underscorejs.org/#once</a></p>\n\n<pre><code>  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = function(func) {\n    var ran = false, memo;\n    return function() {\n      if (ran) return memo;\n      ran = true;\n      memo = func.apply(this, arguments);\n      func = null;\n      return memo;\n    };\n  };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Replace it with a reusable NOOP <em>(no operation)</em> function.</p>\n\n<pre><code>  // this function does nothing\nfunction noop() {};\n\nfunction foo() {\n    // do your thing\n\n    foo = noop; // swap the functions\n}\n\nfunction bar() {\n    // do your thing\n\n    bar = noop; // swap the functions\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>If by \"won't be executed\" you mean \"will do nothing when called more than once\", you can create a closure:</p>\n\n<pre><code>var something = (function() {\n    var executed = false;\n    return function () {\n        if (!executed) {\n            executed = true;\n            // do something\n        }\n    };\n})();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>try this </p>\n\n<pre><code>var fun = (function() {\n  var called = false;\n  return function() {\n    if (!called) {\n      console.log(\"I  called\");\n      called = true;\n    }\n  }\n})()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could simply have the function \"remove itself\"</p>\n\n<pre><code>\u200bfunction Once(){\n    console.log(\"run\");\n\n    Once = undefined;\n}\n\nOnce();  // run\nOnce();  // Uncaught TypeError: undefined is not a function \n</code></pre>\n\n<p>But this may not be the best answer if you don't want to be swallowing errors. </p>\n\n<p>You could also do this:</p>\n\n<pre><code>function Once(){\n    console.log(\"run\");\n\n    Once = function(){};\n}\n\nOnce(); // run\nOnce(); // nothing happens\n</code></pre>\n\n<p><em>I need it to work like smart pointer, if there no elements from type A it can be executed, if there is one or more A elements the function can't be executed.</em></p>\n\n<pre><code>function Conditional(){\n    if (!&lt;no elements from type A&gt;) return;\n\n    // do stuff\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>From some dude named Crockford... :)</p>\n\n<pre><code>function once(func) {\n    return function () {\n        var f = func;\n        func = null;\n        return f.apply(\n            this,\n            arguments\n        );\n    };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Trying to use underscore \"once\" function:</p>\n\n<pre><code>var initialize = _.once(createApplication);\ninitialize();\ninitialize();\n// Application is only created once.\n</code></pre>\n\n<p><a href=\"http://underscorejs.org/#once\" rel=\"nofollow\">http://underscorejs.org/#once</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just point to an empty function once it has been called.</p>\n\n<pre><code>var myFunc = function(){\n     myFunc = function(){}; // kill it as soon as it was called\n     console.log('call once and never again!'); // your stuff here\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is an example JSFiddle - <a href=\"http://jsfiddle.net/6yL6t/\" rel=\"nofollow\">http://jsfiddle.net/6yL6t/</a></p>\n\n<p>And the code:</p>\n\n<pre><code>function hashCode(str) {\n    var hash = 0, i, chr, len;\n    if (str.length == 0) return hash;\n    for (i = 0, len = str.length; i &lt; len; i++) {\n        chr   = str.charCodeAt(i);\n        hash  = ((hash &lt;&lt; 5) - hash) + chr;\n        hash |= 0; // Convert to 32bit integer\n    }\n    return hash;\n}\n\nvar onceHashes = {};\n\nfunction once(func) {\n    var unique = hashCode(func.toString().match(/function[^{]+\\{([\\s\\S]*)\\}$/)[1]);\n\n    if (!onceHashes[unique]) {\n        onceHashes[unique] = true;\n        func();\n    }\n}\n</code></pre>\n\n<p>You could do:</p>\n\n<pre><code>for (var i=0; i&lt;10; i++) {\n    once(function() {\n        alert(i);\n    });\n}\n</code></pre>\n\n<p>And it will run only once :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Initial setup:</p>\n\n<pre><code>var once = function( once_fn ) {\n    var ret, is_called;\n    // return new function which is our control function \n    // to make sure once_fn is only called once:\n    return function(arg1, arg2, arg3) {\n        if ( is_called ) return ret;\n        is_called = true;\n        // return the result from once_fn and store to so we can return it multiply times:\n        // you might wanna look at Function.prototype.apply:\n        ret = once_fn(arg1, arg2, arg3);\n        return ret;\n    };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If your using Node.js or writing JavaScript with browserify, consider the <a href=\"https://www.npmjs.org/package/once\" rel=\"nofollow\">\"once\" npm module</a>:</p>\n\n<pre><code>var once = require('once')\n\nfunction load (file, cb) {\n  cb = once(cb)\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to create a function which can be executed only once, in each time after the first it won't be executed. I know from C, C++ and Java about static variables that can do the work but I would like to know if there is more elegant way to do so?</p>\n",
            "last_activity_date": 1418126537,
            "question_id": 12713564,
            "score": 13,
            "tags": [
                "javascript",
                "function",
                "design-patterns"
            ],
            "title": "Function in javascript that can be called only once"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Using this within <code>blur</code> handler function will give you the <code>blured</code> element. </p>\n\n<pre><code>$(target).blur(function(e){\n   var bluredElement = this;  // dom element\n   // To make a jQuery object \n   var bluredElement = $(this);\n});\n</code></pre>\n\n<p>Within <code>blur</code> event you can't catch the clicked element. To get the <code>click</code>ed element you need <code>click</code> event. For example:</p>\n\n<pre><code>$(element).click(function() {\n  var clickedElement = this;\n});\n</code></pre>\n\n<p>And to get the focused element you can use <code>:focus</code> selector like: <code>$(':focus')</code> will returns you focused element in document.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Inside an event handler, <code>this</code> will be the element the event is bound to, and <code>e.target</code> will be the element that triggered the event (may or not be the same as <code>this</code>).</p>\n\n<p>You are handing a <code>blur</code> event, not a <code>click</code> event.  So, inside your event, you will have the element that you <code>blur</code>ed.  If you want the <code>click</code>ed element, you'd need another event to get that.</p>\n\n<p><code>blur</code> can be triggered by other events, such as focusing something; not just clicking on something.  So, there is no way to get the element that \"caused the blur\".</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The trick is to wait an extra tick</p>\n\n<pre><code>$(el).blur(function (e) {\n    // If we just hangout an extra tick, we'll find out which element got focus really\n    setTimeout(function(){\n       document.activeElement; // This is the element that has focus\n    }\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>If I understand your question correctly, this should do it:</p>\n\n<pre><code>$(function() {\n\n    var clicky;\n\n    $(document).mousedown(function(e) {\n        // The latest element clicked\n        clicky = $(e.target);\n    });\n\n    // when 'clicky == null' on blur, we know it was not caused by a click\n    // but maybe by pressing the tab key\n    $(document).mouseup(function(e) {\n        clicky = null;\n    });\n\n    $(target).blur(function(e) {\n        console.log(clicky);\n    });\u200b\u200b\n\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>suppose I do this</p>\n\n<pre><code>$(target).blur(function(e){\n  //do stuff\n});\n</code></pre>\n\n<p>is there a way to fetch the object that was clicked on in order to trigger the blur action?</p>\n\n<p>I tried using e.target, but that appears to be returning the object attached to the blur action rather than the clicked object... </p>\n",
            "last_activity_date": 1382979150,
            "question_id": 11544554,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "javascript-events",
                "blur"
            ],
            "title": "Get the clicked object that triggered jquery blur() event"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>In strict mode, the way to get a reference to the global object is to assign a variable in the global object referencing itself.</p>\n\n<p>That is <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/this\" rel=\"nofollow\"><code>this</code> means the global object when in the global context</a>, so the solution is simply:</p>\n\n<pre><code>\"use strict\";\nvar global = global || this;\n(function() { global.hello = \"world\"; })();\nconsole.log(hello); // Outputs 'world' as expected\n</code></pre>\n\n<p>This <em>does</em> mean that you have to pollute the global namespace with a reference to itself, but like you say, it should already have been there.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In ES5, you can get a reference to global object from within strict mode via indirect eval call:</p>\n\n<pre><code>\"use strict\";\nvar global = (1,eval)('this');\n</code></pre>\n\n<p>Take a look at <a href=\"http://perfectionkills.com/unnecessarily-comprehensive-look-into-a-rather-insignificant-issue-of-global-objects-creation\">my article</a>; particularly at this <a href=\"http://perfectionkills.com/unnecessarily-comprehensive-look-into-a-rather-insignificant-issue-of-global-objects-creation/#ecmascript_5_strict_mode\">section on strict mode</a>.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>In <a href=\"http://es5.github.io/x10.html#x10.4.1\" rel=\"nofollow\">global code</a>, the <code>thisBinding</code> is set to the global object regardless of strict mode. That means you can pass it from there into your module IEFE:</p>\n\n<pre><code>// \"use strict\"; or not\n(function(global) {\n    \"use strict\";\n    \u2026\n    console.log(global);\n    \u2026\n}(this));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>What is the recommended way to get a handle to the <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_15.1\">global object</a> in ES5 strict mode <em>in an unknown host environment</em>?</p>\n\n<p>ECMAScript doesn't provide a built-in way to reference the global object that I'm aware of. If it does, this is the answer I'm looking for.</p>\n\n<p>In a <em>known environment</em>, the global object usually has a self-referential property. Since the global object is the <a href=\"http://dmitrysoshnikov.com/ecmascript/chapter-2-variable-object/\">VO</a> for the global scope, properties of the global object are global variables, so we can use them get a handle to the global object from anywhere:</p>\n\n<ul>\n<li><p>In a web browser, we can use <code>window</code> or <code>self</code>.</p></li>\n<li><p>In node.js, we can use <code>global</code>. </p></li>\n</ul>\n\n<p>However, this is not necessarily the case in all host environments. As far as I know, Windows Script Host does not provide any way to access the global object. The recommended way to get the global object in WSH seems to be to use the <code>this</code> keyword in a context where it does not resolve to an object. For example:</p>\n\n<pre><code>var GLOBAL = (function(){return this}());\n</code></pre>\n\n<p>This technique will work for any host environment, but not in strict mode, because an undefined <code>this</code> does not reference the global object in <a href=\"http://es5.github.com/C.html\">strict mode</a>:</p>\n\n<blockquote>\n  <p>If this is evaluated within strict mode code, then the this value is not coerced to an object. <strong>A this value of null or undefined is not converted to the global object</strong> and primitive values are not converted to wrapper objects. The this value passed via a function call (including calls made using Function.prototype.apply and Function.prototype.call) do not coerce the passed this value to an object (10.4.3, 11.1.1, 15.3.4.3, 15.3.4.4).</p>\n</blockquote>\n\n<p>As expected, the following code results in <code>undefined</code>:</p>\n\n<pre><code>(function(){\n    \"use strict\";\n    var GLOBAL = (function(){return this}());\n    console.log(GLOBAL);\n}());\n</code></pre>\n\n<hr>\n\n<p>So, what is the proper way to <strong>get a handle to the global object in any environment, regardless of strict mode</strong>? </p>\n\n<p>By the way, my current approach is to sniff for global variables referencing the global object like this:</p>\n\n<pre><code>var self, window, global = global || window || self;\n</code></pre>\n\n<p>...and then just use <code>global</code>. I think this is a bad solution for a number of reasons, most of which are fairly obvious, and it doesn't address the WSH problem.</p>\n",
            "last_activity_date": 1370304192,
            "question_id": 9642491,
            "score": 13,
            "tags": [
                "javascript",
                "global",
                "ecmascript-5",
                "ecma262",
                "strict-mode"
            ],
            "title": "Getting a reference to the global object in an unknown environment in strict mode"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You haven't defined a div with id=\"map_canvas\", you only have id=\"map_canvas2\" and id=\"route2\".  The div ids need to match the argument in the GMap() constructor.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is how I have been able to generate multiple maps on the same page using <code>Google Map API V3</code>. Kindly note that this is an off the cuff code that addresses the issue above.</p>\n\n<p>The HTML bit</p>\n\n<pre><code>&lt;div id=\"map_canvas\" style=\"width:700px; height:500px; margin-left:80px;\" &gt;&lt;/div&gt;\n&lt;div id=\"map_canvas2\" style=\"width:700px; height:500px; margin-left:80px;\" &gt;&lt;/div&gt;\n</code></pre>\n\n<p>Javascript for map initialization</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt; \n var map,map2;\n\n  function initialize(condition) {\n  // create the map\n\nvar myOptions = {\n    zoom: 14,\n    center: new google.maps.LatLng(0.0, 0.0),\n    mapTypeId: google.maps.MapTypeId.ROADMAP\n  }\n    map = new google.maps.Map(document.getElementById(\"map_canvas\"),\n                                myOptions);\n\n    map2 = new google.maps.Map(document.getElementById(\"map_canvas2\"),\n                                   myOptions);  \n}\n\n\n\n&lt;/script&gt; \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I have just finished adding Google Maps to my company's CMS offering.  My code allows for more than one map in a page.</p>\n\n<p><strong>Notes:</strong></p>\n\n<ul>\n<li>I use jQuery</li>\n<li>I put the address in the content and then parse it out to dynamically generate the map</li>\n<li>I include a Marker and an InfoWindow in my map</li>\n</ul>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;div class=\"block maps first\"&gt;\n    &lt;div class=\"content\"&gt;\n        &lt;div class=\"map_canvas\"&gt;\n            &lt;div class=\"infotext\"&gt;\n                &lt;div class=\"location\"&gt;Middle East Bakery &amp; Grocery&lt;/div&gt;\n                &lt;div class=\"address\"&gt;327 5th St&lt;/div&gt;\n                &lt;div class=\"city\"&gt;West Palm Beach&lt;/div&gt;\n                &lt;div class=\"state\"&gt;FL&lt;/div&gt;\n                &lt;div class=\"zip\"&gt;33401-3995&lt;/div&gt;\n                &lt;div class=\"country\"&gt;USA&lt;/div&gt;\n                &lt;div class=\"phone\"&gt;(561) 659-4050&lt;/div&gt;\n                &lt;div class=\"zoom\"&gt;14&lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"block maps last\"&gt;\n    &lt;div class=\"content\"&gt;\n        &lt;div class=\"map_canvas\"&gt;\n            &lt;div class=\"infotext\"&gt;\n                &lt;div class=\"location\"&gt;Global Design, Inc&lt;/div&gt;\n                &lt;div class=\"address\"&gt;3434 SW Ash Pl&lt;/div&gt;\n                &lt;div class=\"city\"&gt;Palm City&lt;/div&gt;\n                &lt;div class=\"state\"&gt;FL&lt;/div&gt;\n                &lt;div class=\"zip\"&gt;34990&lt;/div&gt;\n                &lt;div class=\"country\"&gt;USA&lt;/div&gt;\n                &lt;div class=\"phone\"&gt;&lt;/div&gt;\n                &lt;div class=\"zoom\"&gt;17&lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>Code:</strong></p>\n\n<pre><code>$(document).ready(function() {\n    $maps = $('.block.maps .content .map_canvas');\n    $maps.each(function(index, Element) {\n        $infotext = $(Element).children('.infotext');\n\n        var myOptions = {\n            'zoom': parseInt($infotext.children('.zoom').text()),\n            'mapTypeId': google.maps.MapTypeId.ROADMAP\n        };\n        var map;\n        var geocoder;\n        var marker;\n        var infowindow;\n        var address = $infotext.children('.address').text() + ', '\n                + $infotext.children('.city').text() + ', '\n                + $infotext.children('.state').text() + ' '\n                + $infotext.children('.zip').text() + ', '\n                + $infotext.children('.country').text()\n        ;\n        var content = '&lt;strong&gt;' + $infotext.children('.location').text() + '&lt;/strong&gt;&lt;br /&gt;'\n                + $infotext.children('.address').text() + '&lt;br /&gt;'\n                + $infotext.children('.city').text() + ', '\n                + $infotext.children('.state').text() + ' '\n                + $infotext.children('.zip').text()\n        ;\n        if (0 &lt; $infotext.children('.phone').text().length) {\n            content += '&lt;br /&gt;' + $infotext.children('.phone').text();\n        }\n\n        geocoder = new google.maps.Geocoder();\n        geocoder.geocode({'address': address}, function(results, status) {\n            if (status == google.maps.GeocoderStatus.OK) {\n                myOptions.center = results[0].geometry.location;\n                map = new google.maps.Map(Element, myOptions);\n                marker = new google.maps.Marker({\n                    map: map,\n                    position: results[0].geometry.location,\n                    title: $infotext.children('.location').text()\n                });\n                infowindow = new google.maps.InfoWindow({'content': content});\n                google.maps.event.addListener(map, 'tilesloaded', function(event) {\n                    infowindow.open(map, marker);\n                });\n                google.maps.event.addListener(marker, 'click', function() {\n                    infowindow.open(map, marker);\n                });\n            } else {\n                alert('The address could not be found for the following reason: ' + status);\n            }\n        });\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Here's another example if you have the long and lat, in my case using Umbraco Google Map Datatype package and outputting a list of divs with class \"map\" eg.</p>\n\n<pre><code>&lt;div class=\"map\" id=\"UK\"&gt;52.21454000000001,0.14044490000003407,13&lt;/div&gt;\n</code></pre>\n\n<p>my JavaScript using Google Maps API v3 based on <a href=\"http://our.umbraco.org/projects/developer-tools/cultiv-razor-examples\" rel=\"nofollow\">Cultiv Razor examples</a></p>\n\n<pre><code>$('.map').each(function (index, Element) {\n    var coords = $(Element).text().split(\",\");\n    if (coords.length != 3) {\n        $(this).display = \"none\";\n        return;\n    }\n    var latlng = new google.maps.LatLng(parseFloat(coords[0]), parseFloat(coords[1]));\n    var myOptions = {\n        zoom: parseFloat(coords[2]),\n        center: latlng,\n        mapTypeId: google.maps.MapTypeId.ROADMAP,\n        disableDefaultUI: false,\n        mapTypeControl: true,\n        zoomControl: true,\n        zoomControlOptions: {\n            style: google.maps.ZoomControlStyle.SMALL\n        }\n    };\n    var map = new google.maps.Map(Element, myOptions);\n\n    var marker = new google.maps.Marker({\n        position: latlng,\n        map: map\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Take a Look at this Bundle (<strong>Class</strong>) for Laravel that I Made Recently ! \n<br><hr>\n<a href=\"https://github.com/Maghrooni/googlemap\" rel=\"nofollow\">https://github.com/Maghrooni/googlemap</a><br><hr>\nit helps you to create <strong>one</strong> or <strong>multiple</strong> maps in your page ! <br>\n<br>\nyou can <strong>find</strong> the <strong>class</strong> on </p>\n\n<pre><code>src/googlemap.php\n</code></pre>\n\n<p>Pls Read the <strong>README</strong> file first  and  don't forget to pass different <strong>ID</strong>  if you want to have multiple Maps in one page <strong>:)</strong></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>OP wanted two specific maps, but if you'd like to have a dynamic number of maps on one page (for instance a list of retailer locations) you need to go another route. The standard implementation of Google maps API defines the map as a global variable, this won't work with a dynamic number of maps. Here's my code to solve this without global variables:</p>\n\n<pre><code>function mapAddress(mapElement, address) {\nvar geocoder = new google.maps.Geocoder();\n\ngeocoder.geocode({ 'address': address }, function (results, status) {\n    if (status == google.maps.GeocoderStatus.OK) {\n        var mapOptions = {\n            zoom: 14,\n            center: results[0].geometry.location,\n            disableDefaultUI: true\n        };\n        var map = new google.maps.Map(document.getElementById(mapElement), mapOptions);\n        var marker = new google.maps.Marker({\n            map: map,\n            position: results[0].geometry.location\n        });\n    } else {\n        alert(\"Geocode was not successful for the following reason: \" + status);\n    }\n});\n}\n</code></pre>\n\n<p>Just pass the ID and address of each map to the function to plot the map and mark the address.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Taken from These examples - <a href=\"http://foundation.zurb.com/forum/posts/1957-displaying-multiple-google-maps-on-one-page\" rel=\"nofollow\">guide</a> , <a href=\"http://wccfl.com/f5x/maps.html\" rel=\"nofollow\">implementation</a> .</p>\n\n<ol>\n<li>set your <code>&lt;div&gt;</code>'s with the appropriate <code>id</code></li>\n<li>include the Google Map options with <code>foundation</code> calling.</li>\n<li>include <code>foundation</code> and <code>rem</code> js lib .</li>\n</ol>\n\n<p><strong>Example -</strong> </p>\n\n<p><strong>index.html -</strong></p>\n\n<pre><code>&lt;div class=\"row\"&gt;\n   &lt;div class=\"large-6 medium-6 \"&gt;\n      &lt;div id=\"map_canvas\" class=\"google-maps\"&gt;\n      &lt;/div&gt;\n   &lt;/div&gt;\n   &lt;br&gt;\n   &lt;div class=\"large-6 medium-6 \"&gt;\n      &lt;div id=\"map_canvas_2\" class=\"google-maps\"&gt;&lt;/div&gt;\n   &lt;/div&gt;\n&lt;/div&gt;\n&lt;script src=\"/js/foundation.js\"&gt;&lt;/script&gt;\n&lt;script src=\"/js/google_maps_options.js\"&gt;&lt;/script&gt;\n&lt;script src=\"/js/rem.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n   jQuery(function(){\n       setTimeout(initializeGoogleMap,700);\n   });\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>google_maps_options.js -</strong></p>\n\n<pre><code>function initializeGoogleMap()\n{\n    $(document).foundation();\n    var latlng = new google.maps.LatLng(28.561287,-81.444465);\n    var latlng2 = new google.maps.LatLng(28.507561,-81.482359);\n\n    var myOptions =\n    {\n        zoom: 13,\n        center: latlng,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n\n    var myOptions2 =\n    {\n        zoom: 13,\n        center: latlng2,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n\n\n    var map = new google.maps.Map(document.getElementById(\"map_canvas\"), myOptions);\n\n    var map2 = new google.maps.Map(document.getElementById(\"map_canvas_2\"), myOptions2);\n\n\n    var myMarker = new google.maps.Marker(\n    {\n        position: latlng,\n        map: map,\n        title:\"Barnett Park\"\n   });\n\n    var myMarker2 = new google.maps.Marker(\n    {\n        position: latlng2,\n        map: map2,\n        title:\"Bill Fredrick Park at Turkey Lake\"\n    });\n\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had one especific issue, i had a Single Page App and needed to show different maps, in diferent divs, one each time. I solved it in not a very beautiful way but a functionally way. Instead of hide the DOM elements with <strong>display</strong> property i used the <strong>visibility</strong> property to do it. With this approach Google Maps API had no trouble about know the dimensions of the divs where i had instantiated the maps.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have the following script. And I want to make both maps appear on the page, but no matter what I try I can only get the first map initialize() to display... the second one doesn't. Any suggestions? (also, I can't add it in the code, but the first map is being displayed in <code>&lt;div id=\"map_canvas\"&gt;&lt;/div&gt;&lt;div id=\"route\"&gt;&lt;/div&gt;</code>\nThanks!</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt; \n// Create a directions object and register a map and DIV to hold the \n// resulting computed directions\n\nvar map;\nvar directionsPanel;\nvar directions;\n\nfunction initialize() {\n  map = new GMap(document.getElementById(\"map_canvas\"));\n  map.setCenter(new GLatLng(41.1255275,-73.6964801), 15);\n  directionsPanel = document.getElementById(\"route\");\n  directions = new GDirections(map, directionsPanel);\n  directions.load(\"from: Armonk Fire Department, Armonk NY to: &lt;?php echo $LastCallGoogleAddress;?&gt; \");\n\n          map.addControl(new GSmallMapControl());\n    map.addControl(new GMapTypeControl());\n\n}\n\n&lt;/script&gt; \n\n\n&lt;div id=\"map_canvas2\" style=\"width:200px; height:200px;\"&gt;&lt;/div&gt;\n&lt;div id=\"route2\"&gt;&lt;/div&gt;\n\n&lt;script type=\"text/javascript\"&gt; \n// Create a directions object and register a map and DIV to hold the \n// resulting computed directions\n\nvar map2;\nvar directionsPanel2;\nvar directions2;\n\nfunction initialize2() {\n  map2 = new GMap(document.getElementById(\"map_canvas2\"));\n  map2.setCenter(new GLatLng(41.1255275,-73.6964801), 15);\n  directionsPanel2 = document.getElementById(\"route2\");\n  directions2 = new GDirections(map2, directionsPanel2);\n  directions2.load(\"from: ADDRESS1 to: ADDRESS2 \");\n\n          map2.addControl(new GSmallMapControl());\n    map2.addControl(new GMapTypeControl());\n\n\n\n}\n\n&lt;/script&gt; \n\n&lt;script type=\"text/javascript\"&gt;\nfunction loadmaps(){\n    initialize();\n    initialize2();  \n}\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1422921816,
            "question_id": 4074520,
            "score": 13,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3"
            ],
            "title": "How to Display Multiple Google Maps per page with API V3"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You're missing quotes around your string:</p>\n\n<pre><code>...\nvar htmlString=\"&lt;?php echo $htmlString; ?&gt;\";\n...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>you need quotes around the string in javascript</p>\n\n<pre><code>var htmlString=\"&lt;?php echo $htmlString; ?&gt;\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>&lt;?php $htmlString= 'testing'; ?&gt;\n&lt;html&gt;\n  &lt;body&gt;\n    &lt;script type=\"text/javascript\"&gt;  \n      // notice the quotes around the ?php tag         \n      var htmlString=\"&lt;?php echo $htmlString; ?&gt;\";\n      alert(htmlString);\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>When you run into problems like this one, a good idea is to check your browser for JavaScript errors. Different browsers have different ways of showing this, but look for a javascript console or something like that. Also, check the source of your page as viewed by the browser.</p>\n\n<p>Sometimes beginners are confused about the quotes in the string: In the PHP part, you assigned <code>'testing'</code> to <code>$htmlString</code>. This puts a string value inside that variable, but the value does not have the quotes in it: They are just for the interpreter, so he knows: <em>oh, now comes a string literal</em>.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>All the explanations above doesn't work if you work with .js files. If you want to parse PHP into .js files, you have to make changes on your server by modfiying the .htaccess in which the .js files reside using the following commands:</p>\n\n<pre><code>&lt;FilesMatch \"\\.(js)$\"&gt;\n    AddHandler application/x-httpd-php .js\n&lt;/FilesMatch&gt;\n</code></pre>\n\n<p>Then, a file test.js files containing the following code will execute .JS on client side with the parsed PHP on server-side:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script&gt;\nfunction myFunction(){\n   alert(\"Hello World!\");\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;button onclick=\"myFunction()\"&gt;&lt;?php echo \"My button\";?&gt;&lt;/button&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The only proper way to put server side data into generated javascript code:</p>\n\n<pre><code>&lt;?php $jsString= 'testing'; ?&gt;\n&lt;html&gt;\n  &lt;body&gt;\n    &lt;script type=\"text/javascript\"&gt;      \n      var jsStringFromPhp=&lt;?php echo json_encode($jsString); ?&gt;;\n      alert(jsStringFromPhp);\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>With simple quotes the content of your variable is not escaped against HTML and javascript, so it is vulnerable by XSS attacks...</p>\n\n<p>For similar reasons I recommend to use <code>document.createTextNode()</code> instead of setting the <code>innerHTML</code>. Ofc. it is slower, but more secure...</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p><strong>I've tried (but its not working):</strong></p>\n\n<pre><code>&lt;?php  \n  $htmlString= 'testing';\n?&gt;\n&lt;html&gt;\n  &lt;body&gt;\n    &lt;script type=\"text/javascript\"&gt;  \n      var htmlString=&lt;?php echo $htmlString; ?&gt;;\n      alert(htmlString);\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Here is the <a href=\"http://web-design.lovetoknow.com/Define_PHP_Variables_Inside_Javascript\">tutorial</a> that I've used for that purpose:</p>\n\n<p><strong>Thanks</strong></p>\n",
            "last_activity_date": 1415990359,
            "question_id": 3345457,
            "score": 13,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "How to put php inside javascript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It's not an issue with the application, but with the certificate which is signed by an intermediary CA.\nIf you accept that fact and still want to proceed, add the following to request options: </p>\n\n<pre><code>rejectUnauthorized: false\n</code></pre>\n\n<p>Full request:</p>\n\n<pre><code>request({\n    \"rejectUnauthorized\": false,\n    \"url\": domain+\"/api/orders/originator/\"+id,\n    \"method\": \"GET\",\n    \"headers\":{\n        \"X-API-VERSION\": 1,\n        \"X-API-KEY\": key\n    },\n}, function(err, response, body){\n    console.log(err);\n    console.log(response);\n    console.log(body);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>this also worked </p>\n\n<p><code>process.env['NODE_TLS_REJECT_UNAUTHORIZED'] = '0';</code></p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>The secure solution is to add the necessary certificates to the chain. First install <strong>ssl-root-cas</strong> package from npm:</p>\n\n<pre><code>npm install ssl-root-cas\n</code></pre>\n\n<p>This package contains many intermediary certificates that browsers trust but node doesn't.</p>\n\n<pre><code>var sslRootCAs = require('ssl-root-cas/latest')\nsslRootCAs.inject()\n</code></pre>\n\n<p>Will add the missing certificates. See here for more info:</p>\n\n<p><a href=\"https://github.com/coolaj86/node-ssl-root-cas\">https://github.com/coolaj86/node-ssl-root-cas</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>CoolAJ86's solution is correct and it does not compromise your security like disabling all checks using <code>rejectUnauthorized</code> or <code>NODE_TLS_REJECT_UNAUTHORIZED</code>.  Still, you may need to inject an additional CA's certificate explicitly.</p>\n\n<p>I tried first the root CAs included by the <a href=\"https://github.com/coolaj86/node-ssl-root-cas\" rel=\"nofollow\">ssl-root-cas</a> module:</p>\n\n<pre><code>require('ssl-root-cas/latest')\n  .inject();\n</code></pre>\n\n<p>I still ended up with the <code>UNABLE_TO_VERIFY_LEAF_SIGNATURE</code> error.  Then I found out who issued the certificate for the web site I was connecting to by the <a href=\"https://sslanalyzer.comodoca.com\" rel=\"nofollow\">COMODO SSL Analyzer</a>, downloaded the certificate of that authority and tried to add only that one:</p>\n\n<pre><code>require('ssl-root-cas/latest')\n  .addFile(__dirname + '/comodohigh-assurancesecureserverca.crt');\n</code></pre>\n\n<p>I ended up with another error: <code>CERT_UNTRUSTED</code>.  Finally, I injected the additional root CAs and included \"my\" (apparently intermediary) CA, which worked:</p>\n\n<pre><code>require('ssl-root-cas/latest')\n  .inject()\n  .addFile(__dirname + '/comodohigh-assurancesecureserverca.crt');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I'm using node.js request.js to reach an api. I'm getting this error</p>\n\n<p>[Error: UNABLE_TO_VERIFY_LEAF_SIGNATURE]</p>\n\n<p>All of my credentials are accurate and valid, and the server's fine. I made the same request with postman.</p>\n\n<pre><code>request({\n    \"url\": domain+\"/api/orders/originator/\"+id,\n    \"method\": \"GET\",\n    \"headers\":{\n        \"X-API-VERSION\": 1,\n        \"X-API-KEY\": key\n    },\n}, function(err, response, body){\n    console.log(err);\n    console.log(response);\n    console.log(body);\n});\n</code></pre>\n\n<p>This code is just running in an executable script ex. <code>node ./run_file.js</code>, Is that why? Does it need to run on a server?</p>\n",
            "last_activity_date": 1412110967,
            "question_id": 20082893,
            "score": 12,
            "tags": [
                "javascript",
                "node.js",
                "ssl",
                "request"
            ],
            "title": "Unable to verify leaf signature"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Well <code>$.each</code> is a library construct, whereas <code>for ... in</code> is native js, which should be better</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't see anything else than <code>for (var key in foo)</code>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is no way other than <code>for ... in</code>. If you don't want to use that (parhaps because it's marginally inefficient to have to test <code>hasOwnProperty</code> on each iteration?) then use a different construct, e.g. an array of kvp's:</p>\n\n<pre><code>[{ key: 'key', value: 'value'}, ...]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want to get all keys, <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_15.2.3.14\">ECMAScript 5 introduced <code>Object.keys</code></a>. This is only supported by newer browsers but the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys\">MDC documentation</a> provides an alternative implementation (which also uses <code>for...in</code> btw):</p>\n\n<pre><code>if(!Object.keys) Object.keys = function(o){\n     if (o !== Object(o))\n          throw new TypeError('Object.keys called on non-object');\n     var ret=[],p;\n     for(p in o) if(Object.prototype.hasOwnProperty.call(o,p)) ret.push(p);\n     return ret;\n}\n</code></pre>\n\n<p>Of course if you want both, key and value, then <code>for...in</code> is the only reasonable solution.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Since you mentioned <code>$.each()</code>, here's a handy approach that would work in jQuery 1.6+:</p>\n\n<pre><code>var foo = { key1: 'bar', key2: 'baz' };\n\n// keys will be: ['key1', 'key2']\nvar keys = $.map(foo, function(item, key) {\n  return key;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The easiest way is to just use Underscore.js:</p>\n\n<blockquote>\n  <p><strong>keys</strong></p>\n  \n  <p>_.keys(object) \n  Retrieve all the names of the object's properties.</p>\n  \n  <p>_.keys({one : 1, two : 2, three : 3});\n  => [\"one\", \"two\", \"three\"]</p>\n</blockquote>\n\n<p>Yes, you need an extra library, but it's so easy!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You would iterate inside the object with a for loop:</p>\n\n<pre><code>for(var i in foo){\n  alert(i); // alerts key\n  alert(foo[i]); //alerts key's value\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You can access each key individually without iterating as in:</p>\n\n<pre><code>var obj = { first: 'someVal', second: 'otherVal' };\nalert(Object.keys(obj)[0]); // returns first\nalert(Object.keys(obj)[1]); // returns second\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>If I have a JS object like:</p>\n\n<pre><code>var foo = { 'bar' : 'baz' }\n</code></pre>\n\n<p>If I know that <code>foo</code> has that basic key/value structure, but don't know the name of the key, what's the easiest way to get it? <code>for ... in</code>? <code>$.each()</code>? I hope there's something better....</p>\n",
            "last_activity_date": 1424683619,
            "question_id": 6268679,
            "score": 12,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "best way to get the key of a key/value javascript object"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>As a Mootools user, I notice that Mootools has replaced Dean Edwards' Packer by YUI Compressor.  I also remember there was a discussion on Ajaxian.com where Julien (Compressor author) pointed out the areas where YUI Compressor did better.  I used Compressor and have never seen any problem, but I have never studied to which produces fewer error when obfuscating.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Better is a bit subjective here, since there are multiple factors to consider (even beyond those you list): </p>\n\n<ol>\n<li>Compressed size doesn't tell the whole story, since an aggressive compressor can result in slower run-time performance due to the additional time needed to run unpacking code prior to browser interpretation. </li>\n<li>Errors are easiest to avoid when you control the input code - judicious use of semicolons goes a long way. Run JSLint over your code, and fix any problems reported. </li>\n<li>The style and size of the code itself will affect the results, of course. </li>\n<li>And finally, it's worth keeping in mind that server-side gzip compression will always result in a smaller download than any code compression, although some code compression tools will combine with gzip more effectively. </li>\n</ol>\n\n<p>My recommendation is to run the code you intend to compress through several compressors (an automated comparison tool such as <a href=\"http://compressorrater.thruhere.net/\" rel=\"nofollow\">CompressorRater</a> helps...), and choose based on the results - remembering to test, profile and compare the actual page load times afterward.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>YUI Compressor compresses more safely and compactly than Packer does. I believe Packer needs the JavaScript to be perfectly formed otherwise it will cause a JavaScript error when the script is loaded. Still, regardless of which you use, you'll get the biggest performance increase by Gzipping your file.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A great way to compare the best compressors is <a href=\"http://compressorrater.thruhere.net/\" rel=\"nofollow\">The JavaScript CompressorRater</a> by Arthur Blake.</p>\n\n<p>What you're usually interested in is the size after compressing with GZIP (you should configure your web server to perform the compression).</p>\n\n<p>The best results are usually from the <a href=\"http://developer.yahoo.com/yui/compressor/\" rel=\"nofollow\">YUI Compressor</a> or <a href=\"http://dojotoolkit.org/docs/shrinksafe\" rel=\"nofollow\">Dojo ShrinkSafe</a>. The differences were so small that after a while I stopped comparing and I just use the YUI Compressor.</p>\n\n<p><strong>EDIT:</strong>\nsince the original time this question was asked, 2 new minifiers have been released. They're both usually at least as good as, if not better than, the YUI Compressor.</p>\n\n<ul>\n<li>Google's <a href=\"http://code.google.com/closure/compiler/\" rel=\"nofollow\">Closure Compiler</a>. Includes an aggressive <a href=\"http://code.google.com/closure/compiler/docs/api-tutorial3.html\" rel=\"nofollow\">advanced optimization</a> mode that's sometimes applicable.</li>\n<li>Microsoft's Ajax Minifier (search <a href=\"http://aspnet.codeplex.com/releases\" rel=\"nofollow\">this page</a> for \"minifier\")</li>\n</ul>\n\n<p><strong>EDIT 2:</strong></p>\n\n<ul>\n<li><a href=\"https://github.com/mishoo/UglifyJS\" rel=\"nofollow\">UglifyJS</a>, chosen by the jQuery team for the official 1.5 release</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Definitely check out <a href=\"http://dojotoolkit.org/docs/shrinksafe\" rel=\"nofollow\">Dojo Shrinksafe</a>. It was reworked recently and apparently the performance has been improved.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There's also a port of the <a href=\"http://www.codeplex.com/YUICompressor\" rel=\"nofollow\" title=\"Go on - click me!\">YUICompress for .NET</a> (which includes a build task for TFS) on Codeplex.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is an old question and the <a href=\"http://code.google.com/closure/compiler/\" rel=\"nofollow\">Google Closure Compiler</a> didn't exist then. I haven't used it yet, but it looks <strong>really</strong> good.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Full disclosure, I'm behind this: <a href=\"http://www.toptensoftware.com/minime\" rel=\"nofollow\">http://www.toptensoftware.com/minime</a> which does minification, obfuscation and a reasonable set of lint style checks.  Currently it produces smaller output than Yui, not quite as good as Closure.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Between <a href=\"http://developer.yahoo.com/yui/compressor/\" rel=\"nofollow\">Yahoo! UI Compressor</a>, <a href=\"http://dean.edwards.name/packer/\" rel=\"nofollow\">Dean Edwards Packer</a> and <a href=\"http://www.crockford.com/javascript/jsmin.html\" rel=\"nofollow\">jsmin</a>, which produces better results, both in terms of resulting footprint and fewer errors when obfuscating.</p>\n",
            "last_activity_date": 1348126800,
            "question_id": 360818,
            "score": 12,
            "tags": [
                "javascript",
                "benchmarking",
                "jscompress",
                "minify"
            ],
            "title": "Which javascript minification library produces better results?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>try this</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction openWin()\n{\nmyWindow=window.open('','','width=200,height=100');\nmyWindow.document.write(\"&lt;p&gt;This is 'myWindow'&lt;/p&gt;\");\nmyWindow.focus();\nprint(myWindow);\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;input type=\"button\" value=\"Open window\" onclick=\"openWin()\" /&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>checkout: \n<a href=\"http://stackoverflow.com/questions/2555697/window-print-not-working-in-ie\">window.print() not working in IE</a></p>\n\n<p>Working sample:\n<a href=\"http://jsfiddle.net/Q5Xc9/1/\">http://jsfiddle.net/Q5Xc9/1/</a></p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Turgut gave the right solution. Just for clarity, you need to add close after writing.</p>\n\n<pre><code>function openWin()\n  {\n    myWindow=window.open('','','width=200,height=100');\n    myWindow.document.write(\"&lt;p&gt;This is 'myWindow'&lt;/p&gt;\");\n\n\n    myWindow.document.close(); //missing code\n\n\n    myWindow.focus();\n    myWindow.print(); \n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>print() doesn't work in IE after opening a new window.  It works in Chrome.\nHere's a <a href=\"http://www.w3schools.com/js/tryit.asp?filename=try_win_focus\">tester</a>:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\n  function openWin()\n  {\n    myWindow=window.open('','','width=200,height=100');\n    myWindow.document.write(\"&lt;p&gt;This is 'myWindow'&lt;/p&gt;\");\n    myWindow.focus();\n    myWindow.print(); //DOES NOT WORK\n  }\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;input type=\"button\" value=\"Open window\" onclick=\"openWin()\" /&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1411415577,
            "question_id": 9852190,
            "score": 11,
            "tags": [
                "javascript",
                "html",
                "printing",
                "window"
            ],
            "title": "js window.open then print()"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Also, for case insensitive attribute *= selector:</p>\n\n<pre><code>$(\"meta[name*=someKindOfId]\")\n</code></pre>\n\n<p>You can use:</p>\n\n<pre><code>$('meta').filter(function() {\n       return (/somekindofid/i).test($(this).attr('name'));\n}).attr(\"content\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could use the jquery filter function like so</p>\n\n<pre><code>var meta = $('meta[name]').filter(function() {\n    return this.name.toLowerCase() == 'somekindofid';\n});\n</code></pre>\n\n<p>Based upon <a href=\"http://stackoverflow.com/questions/5671238/css-selector-case-insensitive-for-attributes\">CSS selector case insensitive for attributes</a></p>\n\n<p><a href=\"http://jsfiddle.net/nickywaites/mkBvC/\">http://jsfiddle.net/nickywaites/mkBvC/</a></p>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>I need to get the value of the <code>content</code> attribute of a certain <code>meta</code> tag.</p>\n\n<pre><code>var someContent = $(\"meta[name=someKindOfId]\").attr(\"content\");\n</code></pre>\n\n<p>is how I usually do it. For business reasons, <code>someKindOfId</code> may be <code>somekindofid</code>. It could be other combinations of cases as well. I don't know.</p>\n\n<p>What is the best way to search for this meta tag? Adding an id or other identifier is out of the question.</p>\n",
            "last_activity_date": 1425141950,
            "question_id": 5755722,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "business-logic"
            ],
            "title": "Case-insensitive attribute-value selector with Jquery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Assigning event handlers with literal functions is tricky- not only is there no way to remove them, without cloning the node and replacing it with the clone- you also can inadvertantly assign the same handler multiple times, which can't happen if you use a reference to a handler. Two functions are always treated as two different objects, even if they are character identical.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could remove the event listener like this:</p>\n\n<pre><code>element.addEventListener(\"click\", function() {\n    element.removeEventListener(\"click\", arguments.callee, false);\n}, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>There is no way to cleanly remove an event handler unless you stored a reference to the event handler at creation.</p>\n\n<p>I will generally add these to the main object on that page, then you can iterate and cleanly dispose of them when done with that object.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>You may try to overwrite <code>element.addEventListener</code> and do whatever you want.<br />Something like:</p>\n\n<pre><code>var orig = element.addEventListener;\n\nelement.addEventListener = function (type, listener) {\n    if (/dontwant/.test(listener.toSource())) { // listener has something i dont want\n        // do nothing\n    } else {\n        orig.apply(this, Array.prototype.slice.apply(arguments));\n    }\n};\n</code></pre>\n\n<p>ps.: it is not recommended, but it will do the trick (haven't tested it)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can try to remove all listeners in this way:</p>\n\n<pre><code>allClicks = getEventListeners(element).click\nallClicks.forEach(function(el){el.remove()})\n</code></pre>\n\n<p>or you can remove (for example) only last added event</p>\n\n<pre><code>allClicks = getEventListeners(element).click\nallClicks[allClicks.length-1].remove()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there anyway to remove an event listener added like this:</p>\n\n<pre><code>element.addEventListener(event, function(){/* do work here */}, false);\n</code></pre>\n\n<p>without replacing the element?</p>\n",
            "last_activity_date": 1416841834,
            "question_id": 3106605,
            "score": 11,
            "tags": [
                "javascript",
                "greasemonkey",
                "userscripts"
            ],
            "title": "Removing an anonymous event listener"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>If you're avoiding Flash (and presumably Java?) the JS/HTML-only solution still requires single-file <code>input</code>s, but essentially you attach an <code>onchange</code> event to your <code>input</code>, adding a new <code>input</code> to the DOM whenever a file is selected.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This isn't a pure js/html solution. As EndangeredMassa has pointed out, it's not possible.  In fact, this idea is an IE/Windows only solution.  I don't recommend it, but it can work.</p>\n\n<p>So, all disclaimers aside ...  </p>\n\n<p>Many years and several employers ago, we used to do some client side stuff that instantiated the FileSystemObject. It would iterate through each of the files and pass them through to the server one at a time.  Can't remember the details of how we did that :o( </p>\n\n<p>Anyway, this usually meant that the client box would need to have to add the site to the list of trusted sites and give trusted sites a bunch of permissions that are turned off (for very good reasons).  Stuff like the ability to Initialize and script ActiveX controls not marked as safe.  That kind of thing.</p>\n\n<p>I know that this isn't a perfect answer, but it could point you in the right direction.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>FTP?  And if necs, wrap in Java Applet, ActiveX or whatever you want.</p>\n\n<p>If not, although you don't want flash, SWFUpload is quite cool, you may want to reconsider it as a decent option.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You won't be able to do it with just HTML and Javascript. I'd recommend trying <a href=\"http://digitarald.de/project/fancyupload/\">Fancy Upload</a>, a <a href=\"http://mootools.net/\">MooTools</a> plugin for multiple file uploads. It uses a mixture of JavaScript and Flash, but degrades gracefully. It works with all major browsers including IE6 and there is also a Flash 10 compatible release available for download (though the demo hasn't been updated yet).</p>\n\n<hr>\n\n<p>Update (2012-11-26):</p>\n\n<p><strong>Multiple file</strong> uploads are possible with <a href=\"https://github.com/valums/file-uploader\">valums</a> or <a href=\"https://github.com/blueimp/jQuery-File-Upload\">blueimp</a> file uploaders.</p>\n\n<p>For <strong>recursive directory</strong> uploads, your best solution is using <a href=\"http://stackoverflow.com/a/5849341/486547\">Chrome 11's new <strong>folder upload API</strong></a>.  It also seems to work on Firefox if you use a vendor prefix.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p><a href=\"http://filetree.extjs.eu/\" rel=\"nofollow\">Here</a> is pure JS solution using ExtJS library</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Multiple file</strong> uploads are possible with <a href=\"https://github.com/valums/file-uploader\" rel=\"nofollow\">valums</a> or <a href=\"https://github.com/blueimp/jQuery-File-Upload\" rel=\"nofollow\">blueimp</a> file uploaders.</p>\n\n<p>For <strong>recursive directory</strong> uploads, your options are more limited:</p>\n\n<ul>\n<li><p>Your best solution is using <a href=\"http://stackoverflow.com/a/5849341/486547\">Chrome 11's new <strong>folder upload API</strong></a>.  It also seems to work on Firefox if you use a vendor prefix.</p></li>\n<li><p>This is also possible cross-browser with a <a href=\"http://jumploader.com/\" rel=\"nofollow\">Java applet</a>. However the % of folks with a JRE installed has gotten pretty low these days (<a href=\"http://www.statowl.com/java.php\" rel=\"nofollow\">&lt; 70%</a>)</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I need an easy way to allow users to upload multiple files at once (ie I need to allow a user to upload a folder).  I do not wish to put the burden of zipping on the user.  </p>\n\n<p><em>I would prefer to avoid Flash or variants if possible.</em>  I'm looking for a straight javascript / HTML solution if it is possible.  Please note, this rules out the answers at: <a href=\"http://stackoverflow.com/questions/159600/multiple-file-upload\">http://stackoverflow.com/questions/159600/multiple-file-upload</a>.</p>\n",
            "last_activity_date": 1353915389,
            "question_id": 254251,
            "score": 11,
            "tags": [
                "javascript",
                "html",
                "file-upload"
            ],
            "title": "What is the best way to upload a folder to a website?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>On a page refresh, the javascript is also reloaded.  So couldn't you specify what you want to happen directly in jQuery's ready method?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A naive attempt of mine would be to simply store the current state into some cookie after each change and simply load them again on each page load.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Found this on the web for you...</p>\n\n<p>Has both a javascript clever method along with a cookies method.</p>\n\n<p><a href=\"http://www.tedpavlic.com/post_detect_refresh_with_javascript.php\" rel=\"nofollow\">http://www.tedpavlic.com/post_detect_refresh_with_javascript.php</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I was able to force the change event code to run on refresh by</p>\n\n<pre><code>  window.onload = $.address.update(function(){    \n...\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Along these lines, I had a page whose behavior I didn't want to repeat if refreshed, so I changed the hash programmatically as described in <a href=\"http://stackoverflow.com/a/6478682/449161\">this answer</a>.</p>\n\n<pre><code>checkRefresh: function() {\n    if (document.location.hash === '#visited') {\n        console.log('Refreshed');\n        return true;\n    } else {\n        document.location.hash = 'visited';\n        return false;\n    }\n}\n</code></pre>\n\n<p><strong>UPDATE</strong></p>\n\n<p>I found that at least Mobile Safari would ignore the hash if the refresh occurred automatically (e.g. page data expunged from cache before being viewed again). I ended up using a more complex solution <a href=\"http://stackoverflow.com/questions/12059464/preventing-unwanted-redirects-from-browser-to-app-store/12064615#12064615\">described here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I am curious if there is a way to detect the browser refresh event in javascript specifically. We are using the jQuery.address plugin to provide forward and back button functionality to AJAX functions. The problem I am facing is that this plugin does not seem to detect if the user has refreshed the page.</p>\n\n<p>This code is executed each time the user moves forward or back in the browser history. I would also like it to exexute when the user refreshes.</p>\n\n<pre><code> $.address.init(function(event) {\n}).change(function(event) {\n\n        SummaryDiv.SwapPanels(newPanelID);\n    }\n</code></pre>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1353719340,
            "question_id": 3247743,
            "score": 10,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Detect Browser Refresh in Javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Short answer: you can't.</p>\n\n<p>Daylight saving time make it impossible.  For example, there is no way to determine, solely from UTC offset, the difference between Arizona and California in the summer, or Arizona and New Mexico in the winter (since Arizona does not observe DST).</p>\n\n<p>There is also the issue of what time different countries observe DST.  For example, in the US DST starts earlier and ends later than in Europe.</p>\n\n<p>A close guess is possible (i.e. +/- an hour), but if you are using it to display time to users you will inevitably display the wrong time to some of them.</p>\n\n<hr>\n\n<p><strong>Update</strong>:  From the comments, it looks like your primary goal is to display a timestamp in the user's local timezone.  If that is what you want to do, you should send the time as a UTC timestamp, and then just rewrite it on the user's browser with Javascript.  In the case that they don't have Javascript enabled, they would still see a usable UTC timestamp.  Here is a function I came up with in <a href=\"http://stackoverflow.com/questions/1214234/javascript-date-parsing-bug-fails-for-dates-in-june\">this question</a>, which I used in <a href=\"http://meta.stackexchange.com/questions/12635/greasemonkey-script-to-display-absolute-timestamps-in-local-time\">this Greasemonkey script</a>.  You may want to tweak it to suit your needs.</p>\n\n<pre><code>//@param timestamp An ISO-8601 timestamp in the form YYYY-MM-DDTHH:MM:SS\u00b1HH:MM\n//Note: Some other valid ISO-8601 timestamps are not accepted by this function\nfunction parseISO8601(timestamp)\n{\n  var regex = new RegExp(\"^([\\\\d]{4})-([\\\\d]{2})-([\\\\d]{2})T([\\\\d]{2}):([\\\\d]{2}):([\\\\d]{2})([\\\\+\\\\-])([\\\\d]{2}):([\\\\d]{2})$\");\n  var matches = regex.exec(timestamp);\n  if(matches != null)\n  {\n    var offset = parseInt(matches[8], 10) * 60 + parseInt(matches[9], 10);\n    if(matches[7] == \"-\")\n      offset = -offset;\n\n    return new Date(\n      Date.UTC(\n        parseInt(matches[1], 10),\n        parseInt(matches[2], 10) - 1,\n        parseInt(matches[3], 10),\n        parseInt(matches[4], 10),\n        parseInt(matches[5], 10),\n        parseInt(matches[6], 10)\n      ) - offset*60*1000\n    );\n  }\n  return null;\n}\n</code></pre>\n\n<p>Here is a function I use on my blog to display a parsed timestamp in the user's local timezone.  Again, you can tweak it to the format you want.</p>\n\n<pre><code>var weekDays = new Array(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n        \"Thursday\", \"Friday\", \"Saturday\");\nvar months = new Array(\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\");\n\nfunction toLocalTime(date)\n{\n  var hour = date.getHours();\n  var ampm = (hour &lt; 12 ? \"am\" : \"pm\");\n  hour = (hour + 11)%12 + 1;\n\n  var minutes = date.getMinutes();\n  if(minutes &lt; 10)\n    minutes = \"0\" + minutes;\n\n  return weekDays[date.getDay()] + \", \"\n       + months[date.getMonth()] + \" \"\n       + date.getDate()          + \", \"\n       + date.getFullYear()      + \" at \"\n       + hour                    + \":\"\n       + minutes                 + \" \"\n       + ampm;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Knowing just the offset from UTC, you can't tell what timezone you are in, because of DST.  You could consider looking at the time part of the time to try to guess whether DST was in effect then or not, but political considerations make that nearly impossible, as different jurisdictions change the definition of DST.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have a scenario where I have a timezone offset (in minutes) and need to determine the timezone for it.  I know that all the data is not available (for example, there may be several timezones with an offset of -240 minutes) but a \"best guess\" is acceptable.</p>\n\n<p>My first pass looked like this:</p>\n\n<pre><code>foreach (var info in TimeZoneInfo.GetSystemTimeZones())\n{\n    if (info.BaseUtcOffset.TotalMinutes == timezoneOffset)\n    {\n         // do something here if this is a valid timezone\n    }\n}\n</code></pre>\n\n<p>This sorta works, but I need to account for daylight savings which is throwing me off somewhat.  I added this terrible hack:</p>\n\n<pre><code>foreach (var info in TimeZoneInfo.GetSystemTimeZones())\n{\n    var extra = info.IsDaylightSavingTime(DateTime.Now) ? 60 : 0;\n    if (info.BaseUtcOffset.TotalMinutes + extra == timezoneOffset)\n    {\n         // do something here if this is a valid timezone\n    }\n}\n</code></pre>\n\n<p>This works \"well enough\" in that I can show the user the correct time for them when daylight savings is not in effect and am about 70% correct during DST.  Still... this is some awful code to my eyeballs.</p>\n\n<p>Is there a better way to do this? More elegance would be good, and more accuracy would be better still. </p>\n\n<p><strong><em>Update</em></strong></p>\n\n<p>Technically I have access to any information Javascript can get regarding the date.  I have a page on which I've placed a hidden field called \"offset\".  I have a JQuery function that populates the offset field with the DateTime().getTimezoneOffset().  While I don't see anything on the DateTime object that will help, perhaps this will open other avenues for ideas.</p>\n",
            "last_activity_date": 1250264980,
            "question_id": 1274743,
            "score": 10,
            "tags": [
                "c#",
                "javascript",
                "timezone",
                "utc"
            ],
            "title": "How can I determine a timezone by the UTC offset?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Look at the <a href=\"http://msdn.microsoft.com/en-us/library/system.web.ui.scriptmanager.registerstartupscript.aspx\">ScriptManager.RegisterStartupScript</a> method if you're using a ScriptManager or any Ajax controls/asynchronous postbacks.</p>\n\n<p>Edit:</p>\n\n<p>Actually, the function you want is probably <a href=\"http://msdn.microsoft.com/en-us/library/system.web.ui.scriptmanager.registerclientscriptblock.aspx\">ScriptManager.RegisterClientScriptBlock</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You can use the <a href=\"http://msdn.microsoft.com/en-us/library/system.web.ui.clientscriptmanager.registerstartupscript.aspx\">Page.ClientScript.RegisterStartupScript</a> method.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>I think you want to execute the javascript serverside and not in the browser after post-back, right?</p>\n\n<p>That's not possible as far as I know</p>\n\n<p>If you just want to get it execute after postback, you can do something like this:</p>\n\n<pre><code>this.Page.ClientScript.RegisterClientScriptBlock(this.GetType(), \"xx\", \"&lt;script&gt;test(\"+x+\",\"+y+\");&lt;/script&gt;\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>Response.Write(\"&lt;scrip\" + \"t&gt;test(\" + x + \",\" + y + \");&lt;/script&gt;\");\n</code></pre>\n\n<p>breaking up the script keyword because VStudio / asp.net compiler doesn't like it</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Some other things I found out:</p>\n\n<p>You can't directly pass in an array like:</p>\n\n<pre><code>this.Page.ClientScript.RegisterClientScriptBlock(this.GetType(), \"xx\",   \n\"&lt;script&gt;test(\"+x+\",\"+y+\");&lt;/script&gt;\");\n</code></pre>\n\n<p>because that calls the ToString() methods of x and y, which returns \"System.Int32[]\", and obviously Javascript can't use that.  I had to pass in the arrays as strings, like \"[1,2,3,4,5]\", so I wrote a helper method to do the conversion.</p>\n\n<p>Also, there is a difference between this.Page.ClientScript.RegisterStartupScript() and this.Page.ClientScript.RegisterClientScriptBlock() - the former places the script at the bottom of the page, which I need in order to be able to access the controls (like with document.getElementByID).  RegisterClientScriptBlock() is executed before the tags are rendered, so I actually get a Javascript error if I use that method.</p>\n\n<p><a href=\"http://www.wrox.com/WileyCDA/Section/Manipulating-ASP-NET-Pages-and-Server-Controls-with-JavaScript.id-310803.html\">http://www.wrox.com/WileyCDA/Section/Manipulating-ASP-NET-Pages-and-Server-Controls-with-JavaScript.id-310803.html</a> covers the difference between the two pretty well.</p>\n\n<p>Here's the complete example I came up with:</p>\n\n<pre><code>// code behind\nprotected void Button1_Click(object sender, EventArgs e)\n{\n    int[] x = new int[] { 1, 2, 3, 4, 5 };\n    int[] y = new int[] { 1, 2, 3, 4, 5 };\n\n    string xStr = getArrayString(x); // converts {1,2,3,4,5} to [1,2,3,4,5]\n    string yStr = getArrayString(y);\n\n    string script = String.Format(\"test({0},{1})\", xStr, yStr);\n    this.Page.ClientScript.RegisterStartupScript(this.GetType(),\n    \"testFunction\", script, true);\n    //this.Page.ClientScript.RegisterClientScriptBlock(this.GetType(),\n    //\"testFunction\", script, true); // different result\n}\nprivate string getArrayString(int[] array)\n{\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i &lt; array.Length; i++)\n    {\n        sb.Append(array[i] + \",\");\n    }\n    string arrayStr = string.Format(\"[{0}]\", sb.ToString().TrimEnd(','));\n    return arrayStr;\n}\n\n//aspx page\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head runat=\"server\"&gt;\n    &lt;title&gt;Untitled Page&lt;/title&gt;\n    &lt;script type=\"text/javascript\"&gt;\n    function test(x, y)\n    {\n        var text1 = document.getElementById(\"text1\")\n        for(var i = 0; i&lt;x.length; i++)\n        {\n            text1.innerText += x[i]; // prints 12345\n        }\n        text1.innerText += \"\\ny: \" + y; // prints y: 1,2,3,4,5\n\n    }\n\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=\"form1\" runat=\"server\"&gt;\n    &lt;div&gt;\n        &lt;asp:Button ID=\"Button1\" runat=\"server\" Text=\"Button\"\n         onclick=\"Button1_Click\" /&gt;\n    &lt;/div&gt;\n    &lt;div id =\"text1\"&gt; \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you are interested in processing Javascript <strong><em>on the server</em></strong>, there is a new open source library called <a href=\"http://jint.codeplex.com/\" rel=\"nofollow\">Jint</a> that allows you to execute server side Javascript.  Basically it is a Javascript interpreter written in C#.  I have been testing it and so far it looks quite promising.</p>\n\n<p>Here's the description from the site:</p>\n\n<blockquote>\n  <p>Differences with other script engines:</p>\n  \n  <p>Jint is different as it doesn't use\n  CodeDomProvider technique which is\n  using compilation under the hood and\n  thus leads to memory leaks as the\n  compiled assemblies can't be unloaded.\n  Moreover, using this technique\n  prevents using dynamically types\n  variables the way JavaScript does,\n  allowing more flexibility in your\n  scripts. On the opposite, Jint embeds\n  it's own parsing logic, and really\n  interprets the scripts. Jint uses the\n  famous ANTLR (http://www.antlr.org)\n  library for this purpose. As it uses\n  Javascript as its language you don't\n  have to learn a new language, it has\n  proven to be very powerful for\n  scripting purposes, and you can use\n  several text editors for syntax\n  checking.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head runat=\"server\"&gt;\n    &lt;title&gt;Call java script function on Code behind&lt;/title&gt;\n    &lt;script  type=\"text/javascript\"&gt;\n    function abc()\n    {\n        var a=20;\n        var b=30;\n        alert(\"you enter\"+a+\":\"+b);\n    }\n    &lt;/script&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>cs code</p>\n\n<pre><code>protected void Page_Load(object sender, EventArgs e)\n{\n    TextBox2.Attributes.Add(\"onkeypress\", \"return abc();\");\n}\n</code></pre>\n\n<p>try this</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>include script manager</strong></p>\n\n<p><strong>code behind function</strong></p>\n\n<pre><code>ScriptManager.RegisterStartupScript(this, this.GetType(), \"HideConfirmBox\", \"javascript:HideAAConfirmBox(); \", true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code> &lt;head&gt;\n    &lt;script type=\"text/javascript\"&gt;\n\n        function test(x, y) \n        {\n            var cc = \"\";\n            for (var i = 0; i &lt; x.length; i++) \n            {\n                cc += x[i]; \n            }\n            cc += \"\\ny: \" + y; \n            return cc;\n        }\n\n    &lt;/script&gt;\n\n\n\n&lt;/head&gt;\n\n&lt;body&gt;\n\n    &lt;form id=\"form1\" runat=\"server\"&gt;\n\n        &lt;asp:Button ID=\"Button1\" runat=\"server\" Text=\"Button\"   /&gt;\n\n        &lt;p&gt;\n             &lt;asp:TextBox ID=\"TextBox1\"  Name=\"TextBox1\"  runat=\"server\" AutoPostBack=\"True\"  TextMode=\"MultiLine\"&gt;&lt;/asp:TextBox&gt;\n        &lt;/p&gt;\n\n\n\n    &lt;/form&gt;\n&lt;/body&gt;\n\nprotected void Page_Load(object sender, EventArgs e)\n{\n    int[] x = new int[] { 1, 2, 3, 4, 5 };\n    int[] y = new int[] { 1, 2, 3, 4, 5 };\n\n    string xStr = getArrayString(x); // converts {1,2,3,4,5} to [1,2,3,4,5]\n    string yStr = getArrayString(y);\n\n    string script = String.Format(\" var y = test({0},{1}) ; \", xStr, yStr);\n    script += String.Format(\"  document.getElementById(\\\"TextBox1\\\").value = y  \");\n\n    this.Page.ClientScript.RegisterStartupScript(this.GetType(),  \"testFunction\", script, true);\n  //  this.Page.ClientScript.RegisterClientScriptBlock(this.GetType(), \"testFunction\", script, true); // different result\n}\n\n\n\n\nprivate string getArrayString(int[] array)\n{\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i &lt; array.Length; i++)\n    {\n        sb.Append(array[i] + \",\");\n    }\n    string arrayStr = string.Format(\"[{0}]\", sb.ToString().TrimEnd(','));\n    return arrayStr;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I would like to call a javascript function from an aspx control.  For instance, suppose I had:</p>\n\n<pre><code>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n    &lt;head runat=\"server\"&gt;\n&lt;title&gt;Untitled Page&lt;/title&gt;\n&lt;script type=\"text/javascript\"&gt;\n    function test(x, y)\n    {\n\n    }\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=\"form1\" runat=\"server\"&gt;\n    &lt;div&gt;\n        &lt;asp:Button ID=\"Button1\" runat=\"server\" Text=\"Button\"\n         onclick=\"Button1_Click\"/&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>and in the code behind:</p>\n\n<pre><code>protected void Button1_Click(object sender, EventArgs e)\n{\n    // do stuff (really going to a database to fill x and y)\n    int[] x = new int[] { 1, 2, 3, 4, 5 };\n    int[] y = new int[] { 1, 2, 3, 4, 5 };\n\n    // call javascript function as test(x,y);\n}\n</code></pre>\n\n<p>Is there a way to do it?</p>\n",
            "last_activity_date": 1364141272,
            "question_id": 788330,
            "score": 10,
            "tags": [
                "c#",
                "javascript",
                ".net",
                "asp.net",
                "code-behind"
            ],
            "title": "Passing arguments to JavaScript function from code-behind"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The first one has a completely redundant <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/label\">label</a>.</p>\n\n<blockquote>\n  <p>When should i have to use the \"javascript:\" before the function call and what is the reason of use it?</p>\n</blockquote>\n\n<p>Never. (Well, almost. You do use it in <code>javascript:</code> scheme URIs, but you should only use those if you are writing a bookmarklet, and they wouldn't appear in an <code>onclick</code> attribute).</p>\n\n<p>(<code>javascript:</code> URIs are where the <a href=\"http://en.wikipedia.org/wiki/Cargo_cult\">cargo-cult</a> practice of prefixing <code>onclick</code> attribute values with a label came from.)</p>\n\n<blockquote>\n  <p>can i call the function without using \"javascript:\"??</p>\n</blockquote>\n\n<p>Yes.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>In an element's inline event handler, like <code>onclick</code>, <code>onchange</code>, <code>onsubmit</code>, etc., you do <em>not</em> need the <code>javascript:</code> prefix - the reason you often see it is because people confuse it with the <code>href</code> syntax that I explain below. It doesn't cause an error - I believe it is interpreted as a <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/label\">label</a> - but it is unnecessary.</p>\n\n<p>It doesn't matter whether you want to call a function or run a \"simple\" JS statement, either way don't include <code>javascript:</code> - that is, all three of these are valid:</p>\n\n<pre><code>onclick=\"doSomething('some val');\"\nonclick=\"return false;\"\nonclick=\"doSomething(); doSomethingElse(); return false;\"\n</code></pre>\n\n<p><strong>If you are using inline event attributes don't use the <code>javascript:</code> prefix.</strong></p>\n\n<p>(I say \"<em>if</em> you are using inline event attributes\" because this practice is really outdated: it is better to assign the event handlers using JS in a script block.)</p>\n\n<p>You only need the <code>javascript:</code> prefix when you want to run JavaScript from an <code>&lt;a&gt;</code> element's <code>href</code> attribute like this:</p>\n\n<pre><code>&lt;a href=\"javascript: someFunc();\"&gt;Whatever&lt;/a&gt;\n</code></pre>\n\n<p>That is because the browser normally expects the <code>href</code> to contain a URI, so the <code>javascript:</code> prefix tells it to expect JS code instead. However, I don't recommending doing that because the page won't work for people who have JS disabled. Better to include an <code>href</code> that directs the user to a page telling them to enable JS, and include an <code>onclick</code> to do the JS functionality:</p>\n\n<pre><code>&lt;a href=\"/enableJS.html\" onclick=\"doSomething(); return false;\"&gt;Whatever&lt;/a&gt;\n</code></pre>\n\n<p>That way the link does something useful for users whether they have JS enabled or not. The <code>return false</code> at the end of the click handler prevents the default behaviour for a click (which would be to navigate to the specified URL).</p>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>What is the difference between the following:</p>\n\n<pre><code>1)onClick=\"javascript: function('value');\" \n\n2)onClick=\"function('value');\"?\n</code></pre>\n\n<p>When do I use the \"javascript:\" before the function call and why?</p>\n\n<p>Can I call the function without using \"javascript:\"?</p>\n\n<p>Please help me to understood the difference.</p>\n\n<p>Thanks in advance.</p>\n",
            "last_activity_date": 1398361874,
            "question_id": 11823290,
            "score": 9,
            "tags": [
                "javascript",
                "function",
                "function-calls"
            ],
            "title": "what is the difference between calling a JavaScript function onClick=&quot;javascript: function(&#39;value&#39;) and onClick=&quot;function(&#39;value&#39;);?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>jquery <code>.on</code> works by monitoring events on a parent object and then calling the handler if the event originated from a matched child selector. In your case, however, the event you want to monitor is that the element changed</p>\n\n<p>Browsers fire the onchange event for input elements only (because they can be changed by a user).</p>\n\n<p>If any other element changes, it must be because of javascript, hence you can call functions after created new content.</p>\n\n<pre><code>$(\".child\", parentElementContext).hoverIntent( makeTall, makeShort )\n</code></pre>\n\n<p>There are 2 practical solutions</p>\n\n<p>1) What i typically do is create an init method that takes a context (such as the document).</p>\n\n<pre><code>MyPage.init = function(context) {\n    $('.selector', context).hoverIntent();\n    $('.other', context).dialog(); // any other plugins\n};\n</code></pre>\n\n<p>Then I manually call init when I update the DOM (because i dont always need to call init when I update the dom)</p>\n\n<pre><code>$.ajax({\n  url: url,\n  data: data,\n  success: function(data){ \n     var context = $('.parent'); \n     context.html(data);\n     MyPage.init(context); //calls hoverIntent and other plugins\n  }\n});\n</code></pre>\n\n<p>2) If you really need to monitor everything, you can use this plugin\n<a href=\"http://james.padolsey.com/javascript/monitoring-dom-properties/\">http://james.padolsey.com/javascript/monitoring-dom-properties/</a></p>\n\n<p>and then <code>$('.parent').on('valuechange', function() { /* init plugins*/}</code></p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>You can use live to attach event to element that will be in the DOM right now or in the future.</p>\n\n<pre><code>$(\".parent .child\").live(\"mouseover\", function(){\n    //Do fun stuff here\n}).live(\"mouseout\", function(){\n    //Undo fun stuff here\n});\n</code></pre>\n\n<p>so your plugin could look like this</p>\n\n<pre><code>$.fn.hoverIntent = function(mouseover, mouseout) {\n    this.live(\"mouseover\", mouseover).live(\"mouseout\", mouseout);\n    return this;\n};\n</code></pre>\n\n<p>and you can call this plugin</p>\n\n<pre><code>$(\".parent .child\").hoverIntent(makeTall, makeShort).load(\"other_page.php\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have used the <a href=\"http://archive.plugins.jquery.com/project/livequery\" rel=\"nofollow\">jQuery Livequery plugin</a> in the past to do this</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a portion of code that is dynamically loaded via an AJAX call by appending the result to a parent element, similar to this:</p>\n\n<pre><code>&lt;div class=\"parent\"&gt;\n     &lt;!-- Inner content loaded dynamically --&gt;\n     &lt;div class=\"child\"&gt;\n     &lt;/div&gt;\n     &lt;div class=\"child\"&gt;\n     &lt;/div&gt;\n     &lt;!-- ... --&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Now, in order to hook up a mouseover event, I would do something like this:</p>\n\n<pre><code>$(\".parent\").on(\"mouseenter\", \".child\", function(){\n //Do fun stuff here\n}\n\n$(\".parent\").on(\"mouseleave\", \".child\", function(){\n //Undo fun stuff here\n}\n</code></pre>\n\n<p>This works well enough for standard functions, but I want to attach this to a third-party plugin (in my case, <a href=\"http://cherne.net/brian/resources/jquery.hoverIntent.html\">HoverIntent</a>, but really any plugin) -</p>\n\n<p>The syntax for attaching the HoverIntent plugin is as so:</p>\n\n<pre><code>$(\".child\").hoverIntent( makeTall, makeShort )\n</code></pre>\n\n<p>... but I want this to work for my dynamic content that was not available at the time the document initially loaded, and something like <code>$(\".parent\").on(\"hoverIntent\", \".child\", function(){});</code> doesn't seem to be the right way to do this.</p>\n\n<p>What is the correct approach to applying a plugin to elements loaded after the initial <code>$(document).ready()</code>?</p>\n",
            "last_activity_date": 1331747051,
            "question_id": 8690739,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "jquery-plugins"
            ],
            "title": "Attaching jQuery plugin calls to dynamically loaded elements via jQuery,on()"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Sadly, most browsers drop any unsupported CSS declarations when they are rendering pages, meaning that if a browser doesn't support a given CSS feature, you won't be able to look at an element's <code>style</code> property and see that feature's stylesheet entry, even if it was in your CSS file.</p>\n\n<p>IE is the exception to this, which is why polyfills like CSS3Pie are able to work, but I don't believe any other browser gives you any visibility of CSS declarations which they've dropped, so a Javascript solution would also need to re-load the CSS file itself as plain text, and re-parse it, before it even began to actually implement the feature itself.</p>\n\n<p>The implications of this are that what you're asking for would probably be too heavy on the browser to be worth the effort (particularly since we're talking about older versions, which are slower anyway).</p>\n\n<p><a href=\"http://stackoverflow.com/questions/5344745/polyfill-shim-for-css-transitions-and-animations\">This question on SO</a> was asking pretty much the same thing, over a year ago. There wasn't an answer then, and I don't think there is still.</p>\n\n<p>There was a JQuery plugin mentioned in an answer, though, which does what you want, but in reverse (ie you need to run it as a script in all browsers, but it uses the CSS feature within the script, if it's available). That's the closest you're going to get, I think.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It is possible to detect supported CSS properties, provided you're aware in advance of what browser vendor prefixes you need to sniff for. I've written a gist for the mechanism:</p>\n\n<p><a href=\"https://gist.github.com/1096784\">https://gist.github.com/1096784</a></p>\n\n<p>cssSandpaper is a JS library that aims to parse CSS and dynamically implement polyfills for various CSS3 effects:</p>\n\n<p><a href=\"http://www.useragentman.com/blog/csssandpaper-a-css3-javascript-library/\">http://www.useragentman.com/blog/csssandpaper-a-css3-javascript-library/</a></p>\n\n<p>There is also a jQuery library that operates in reverse order, and silently implements transitions where possible when you call $.animate():</p>\n\n<p><a href=\"https://github.com/louisremi/jquery.transition.js\">https://github.com/louisremi/jquery.transition.js</a></p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Try eCSStender: <a href=\"http://ecsstender.org/extensions/css3-transitions/index.html\" rel=\"nofollow\">http://ecsstender.org/extensions/css3-transitions/index.html</a>  We used this for a relatively simple one to show/hide an element.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Alright, so most of you will be familiar with CSS3 Transitions, I prefer it above jQuery animations as it has the simplicity of CSS. My only regret is that it doesn't work in IE &lt; 9( As always ) as well as Firefox &lt; 4, Safari &lt; 4, etc. I do not mean writing separate animations in JavaScript just for IE. But I want a solution that will scan the CSS, grab the speed of the animations, which properties have to be animated, and animate them ( using jQuery, or something else ), is there such a solution if so what is it and where can I obtain it ?</p>\n",
            "last_activity_date": 1383515678,
            "question_id": 6974648,
            "score": 9,
            "tags": [
                "javascript",
                "css3",
                "progressive-enhancement",
                "css-transitions"
            ],
            "title": "CSS3 Transition Polyfill"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Yes, this is known as <a href=\"http://en.wikipedia.org/wiki/Short-circuit_evaluation\">short circuit evaluation</a>. </p>\n\n<p>With an <code>AND</code> logical operator, if the first evaluates to <code>false</code>, then the second is never evaluated, because the condition knows enough already to be met.</p>\n\n<p>With the <code>OR</code> logical operator, if the first one is <code>false</code>, it will evaluate the second one. Otherwise if the first is <code>true</code> it won't evaluate the second (no need to).</p>\n\n<p>This is also why you see...</p>\n\n<pre><code>var a = function(b) {\n   b = b || 7;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<p>Can I count on Javascript failing immediately when one condition in an expression results to false?</p>\n\n<pre><code>f = {'a':'b'};\nif (f.a !== undefined || f.a === 'b') {\n  // Is this OK to use, because the second condition will never be evaluated?\n}\n</code></pre>\n",
            "last_activity_date": 1304559704,
            "question_id": 5891754,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "Javascript conditional order evaluation"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I bet you are violating the same origin policy.</p>\n\n<p>For XHRs, you must have the same protocol, domain, port, etc.  So if you are running an app on localhost:8080/app, you CANNOT ajax to www.cnn.com.</p>\n\n<p>Different browsers handle this differently; I have seen FF do what you describe, which is the request appears to return normally but there is no data...</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Besides the cross-domain issues already mentioned, <code>responseXML</code> requires completely valid XML and probably the correct <code>Content-Type</code> in the response headers sent from the server. It is very unlikely that either of these requirements would be met by the average website.</p>\n\n<p>For the latter issue, you can use </p>\n\n<pre><code>xmlhttp.overrideMimeType('text/xml');\n</code></pre>\n\n<p>before you send the request to force the response to be interperted as XML. Still if the response is not valid XML, you will only get <code>null</code>.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If i recall correctly , this is a known problem with firefox ( i have had the same problem before ).</p>\n\n<p>The fix is to parse the responseText back to an XML document , and then use this.</p>\n\n<p>Something like this :</p>\n\n<pre><code>var parser = new DOMParser();\nvar xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Try to open the value of <code>url</code> directly in the browser. You should get some error information.<br/>\nIf you see a parsing error, chances are your encoding is wrong and you have a special character in your XML that makes it invalid.</p>\n\n<p>To avoid that, you need to be sure that all the chain is properly encoded.</p>\n\n<p>If it is a static XML file, you need to set correctly your editor encoding when saving it. The encoding that does it all(almost) is UTF-8, it is usually a property you can choose in your editor settings or in the save dialog.</p>\n\n<p>If it is dynamically generated. Your data, the page and the server response must be properly encoded too. And your XML starting with <code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</code></p>\n\n<p>You can try first with a very basic and static XML:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;root&gt;hi&lt;/root&gt;\n</code></pre>\n\n<p>And then add the steps, one by one to make it like yours, without breaking it.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Was fooling around with this for hours and finally figured out the stupid little error that was messing me up...</p>\n\n<p>If you are like me, you like to keep your JavaScript code in an external \".js\" file.</p>\n\n<p>Therefor, using xmlhttp.open(\"GET\",\"yourxmlfile.xml\",false) will always search for <b>the XML file RELATIVE to the HTML document</b>, even if the code is in an external JavaScript file.</p>\n\n<p>If the responseText returns null, the local file could not be found in the specified path location.\nAnd if async is set to true, the file will be created and the response text will carry the contents of an empty XML document.</p>\n\n<p>Example:</p>\n\n<p>xmlDoc = xmlhttp.responseText; //String data type</p>\n\n<pre><code>        or\n</code></pre>\n\n<p>xmlDoc = xmlhttp.responseXML; //XML data type</p>\n\n<ul>\n<li>folder1 = folder2, index.html.</li>\n<li>folder2 = index.js, yourxmlfile.xml.</li>\n<li>path to XML from HTML = \"folder2/yourxmlfile.xml\", not \"yourxmlfile.xml\".</li>\n</ul>\n\n<p>And remember to parse the XML doc into \"text/xml\", after opening and before sending request.</p>\n\n<p>Example:</p>\n\n<ul>\n<li>xhttp.overrideMimeType('text/xml');</li>\n<li>Chrome: xmlDoc = (new DOMParser()).parseFromString(xmlDoc,\"text/xml\");</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For me it was a simple problem. There was a syntax error in my xml/php file.\nWhen I viewed the file in my browser, the browser did not detect any errors.</p>\n\n<p><b>Make sure the elements within your XML document are properly closed!</b></p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>Im using firefox 3.6.10, and firebug to debug</p>\n\n<p>So, here is my code:</p>\n\n<pre><code>var xmlhttp = new XMLHttpRequest();\nxmlhttp.open(\"GET\", url,false);\nxmlhttp.setRequestHeader('Content-Type',  'text/xml');\nxmlhttp.send(null);\nalert(xmlhttp.responseXML);\n</code></pre>\n\n<p><strong>responseXML</strong> is always null, and i've tried it on several URLs from different domains. I have also tried it asynchronously, it's the same result. The <strong>responseText</strong> is always properly returned, no problems with it.</p>\n\n<p>My goal is to get the <strong>responseXML.documentElement</strong>.</p>\n\n<p>Thanks for your help.</p>\n\n<p>EDIT-----------<br>\nThis javascript code was executed from a Greasemonkey userscript, i made surte its the same origin as the requested url. Also i tried executing from firebug console, again ensuring the origin policy. Same error on both.<br>\nGotta hate javascript.</p>\n",
            "last_activity_date": 1412196457,
            "question_id": 3781387,
            "score": 9,
            "tags": [
                "javascript",
                "ajax",
                "xmlhttprequest"
            ],
            "title": "responseXML always null"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Take a look at your type attribute <code>type:'delete'</code></p>\n\n<p><a href=\"http://api.jquery.com/jQuery.ajax/\">jQuery documentation on type</a>:</p>\n\n<blockquote>\n  <p>The type of request to make (\"POST\" or \"GET\"), default is \"GET\". Note: Other HTTP request methods, such as PUT and DELETE, can also be used here, but they are not supported by all browsers.</p>\n</blockquote>\n\n<p>I would instead try and include this with your data and look for it on the server-side, like this:</p>\n\n<pre><code>data: {'action': 'delete'},\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>IE 7 and 8 do not support DELETE and PUT methods. I had a problem where IE7,8 would not follow a 302 redirect and IE would use the DELETE or PUT method for the location that it was supposed to redirect to (with a get.)</p>\n\n<p>To ensure that IE7 and 8 work properly, I would use a POST with the parameters:</p>\n\n<pre><code>data: {'_method': 'delete'}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I have a page where the user can edit various content using buttons and selects that trigger ajax calls.  In particular, one action causes a url to be called remotely, with some data and a 'put' request, which (as i'm using a restful rails backend) triggers my update action.  I also have a delete button which calls the same url but with a 'delete' request.  The 'update' ajax call works in all browsers but the 'delete' one doesn't work in IE.  I've got a vague memory of encountering something like this before...can anyone shed any light?  here's my ajax calls:</p>\n\n<pre><code>//update action - works in all browsers\njQuery.ajax({\n  async:true, \n  data:data, \n  dataType:'script', \n  type:'put', \n  url:\"/quizzes/\"+quizId+\"/quiz_questions/\"+quizQuestionId,\n  success: function(msg){ \n    initializeQuizQuestions();\n    setPublishButtonStatus();\n  }\n});  \n\n\n\n//delete action - fails in ie\n  function deleteQuizQuestion(quizQuestionId, quizId){\n    //send ajax call to back end to change the difficulty of the quiz question\n    //back end will then refresh the relevant parts of the page (progress bars, flashes, quiz status)\n    jQuery.ajax({\n      async:true, \n      dataType:'script', \n      type:'delete', \n      url:\"/quizzes/\"+quizId+\"/quiz_questions/\"+quizQuestionId,\n      success: function(msg){ \n        alert(\"success\");\n        initializeQuizQuestions();\n        setSelectStatus(quizQuestionId, true);\n        jQuery(\"tr[id*='quiz_question_\"+quizQuestionId+\"']\").removeClass('selected');        \n      },\n      error: function(msg){\n        alert(\"error:\" + msg);\n      }\n    });     \n  }\n</code></pre>\n\n<p>I put the alerts in success and error in the delete ajax just to see what happens, and the 'error' part of the ajax call is triggered, but WITH NO CALL BEING MADE TO THE BACK END (i know this by watching my back end server logs).  So, it fails before it even makes the call.  I can't work out why - the 'msg' i get back from the error block is blank.</p>\n\n<p>Any ideas anyone?  Is this a known problem?  I've tested it in ie6 and ie8 and it doesn't work in either.</p>\n\n<p>thanks - max</p>\n\n<p>EDIT - the solution - thanks to Nick Craver for pointing me in the right direction.  </p>\n\n<p>Rails (and maybe other frameworks?) has a subterfuge for the unsupported put and delete requests:  a post request with the parameter \"_method\" (note the underscore) set to 'put' or 'delete' will be treated as if the actual request type was that string.  So, in my case, i made this change - note the 'data' option':</p>\n\n<pre><code>   jQuery.ajax({\n      async:true, \n      data: {\"_method\":\"delete\"},\n      dataType:'script', \n      type:'post', \n      url:\"/quizzes/\"+quizId+\"/quiz_questions/\"+quizQuestionId,\n      success: function(msg){ \n        alert(\"success\");\n        initializeQuizQuestions();\n        setSelectStatus(quizQuestionId, true);\n        jQuery(\"tr[id*='quiz_question_\"+quizQuestionId+\"']\").removeClass('selected');        \n      },\n      error: function(msg){\n        alert(\"error:\" + msg);\n      }\n    });     \n  }\n</code></pre>\n\n<p>Rails will now treat this as if it were a delete request, preserving the REST system.  The reason my PUT example worked was just because in this particular case IE was happy to send a PUT request, but it officially does not support them so it's best to do this for PUT requests as well as DELETE requests.</p>\n",
            "last_activity_date": 1303866424,
            "question_id": 2456820,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "internet-explorer"
            ],
            "title": "Problem with jQuery.ajax with &#39;delete&#39; method in ie"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It has to be geometry.vertexColors instead of geometry.colors (push a colour per vertex).</p>\n\n<p>And the material:</p>\n\n<pre><code>material = new THREE.MeshBasicMaterial({ vertexColors: THREE.VertexColors });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>This code should work for three.js v49, creating an RGB color cube.</p>\n\n<p>(Related to <a href=\"http://stackoverflow.com/questions/11252592/how-to-change-face-color-in-three-js\">How to change face color in Three.js</a>)</p>\n\n<pre><code>// this material causes a mesh to use colors assigned to vertices\nvar vertexColorMaterial = new THREE.MeshBasicMaterial( { vertexColors: THREE.VertexColors } );\n\nvar color, point, face, numberOfSides, vertexIndex;\n\n// faces are indexed using characters\nvar faceIndices = [ 'a', 'b', 'c', 'd' ];\n\nvar size = 100;\nvar cubeGeometry = new THREE.CubeGeometry( size, size, size );\n\n// first, assign colors to vertices as desired\nfor ( var i = 0; i &lt; cubeGeometry.vertices.length; i++ ) \n{\n    point = cubeGeometry.vertices[ i ];\n    color = new THREE.Color( 0xffffff );\n    color.setRGB( 0.5 + point.x / size, 0.5 + point.y / size, 0.5 + point.z / size );\n    cubeGeometry.colors[i] = color; // use this array for convenience\n}\n\n// copy the colors to corresponding positions \n//     in each face's vertexColors array.\nfor ( var i = 0; i &lt; cubeGeometry.faces.length; i++ ) \n{\n    face = cubeGeometry.faces[ i ];\n    numberOfSides = ( face instanceof THREE.Face3 ) ? 3 : 4;\n    for( var j = 0; j &lt; numberOfSides; j++ ) \n    {\n        vertexIndex = face[ faceIndices[ j ] ];\n        face.vertexColors[ j ] = cubeGeometry.colors[ vertexIndex ];\n    }\n}\n\ncube = new THREE.Mesh( cubeGeometry, vertexColorMaterial );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I want to do picking via IdMapping in Three.js</p>\n\n<p>Because of performance issues I only have one huge geometry, computed like this:</p>\n\n<pre><code>for (var i = 0; i &lt; numberOfVertices; i += 9) {\n  p1  = new THREE.Vector3(graphData.triangles.vertices[i+0], graphData.triangles.vertices[i+1], graphData.triangles.vertices[i+2]);\n  p2  = new THREE.Vector3(graphData.triangles.vertices[i+3], graphData.triangles.vertices[i+4], graphData.triangles.vertices[i+5]);\n  p3  = new THREE.Vector3(graphData.triangles.vertices[i+6], graphData.triangles.vertices[i+7], graphData.triangles.vertices[i+8]);\n  geometry.vertices.push(new THREE.Vertex( p1.clone() ));\n  geometry.vertices.push(new THREE.Vertex( p2.clone() ));\n  geometry.vertices.push(new THREE.Vertex( p3.clone() ));\n  geometry.faces.push( new THREE.Face3( i/3, i/3+1, i/3+2 ) );\n\n  // i want to do something like this:\n  geometry.colors.push(new THREE.Color(0xFF0000));\n  geometry.colors.push(new THREE.Color(0xFF0000));\n  geometry.colors.push(new THREE.Color(0xFF0000)); \n}\n\ngeometry.computeFaceNormals();\nvar material = new THREE.MeshBasicMaterial({});\n\nvar triangles = new THREE.Mesh( geometry, material );\nscene.add(triangles);\n</code></pre>\n\n<p>How can I assign different colors to each vertex in my geometry?</p>\n",
            "last_activity_date": 1348780387,
            "question_id": 10330342,
            "score": 8,
            "tags": [
                "javascript",
                "webgl",
                "three.js",
                "picking"
            ],
            "title": "Threejs: assign different colors to each vertex in a geometry"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>onunload</code> is responsible for executing an instruction when the page is closed. It also causes issue with IE and AJAX. </p>\n\n<p><code>onbeforeunload</code> is more efficient because it does not run in competition with the actual closing of the window and is triggered before <code>onunload</code></p>\n\n<p>I know Opera used to not acknowledge <code>onbeforeunload</code> - not sure if they've fixed that, but I always register the listener for both to be safe: </p>\n\n<pre><code>window.onunload = window.onbeforeunload = (function(){...\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>To avoid dual calls at the browsers that support both the events,</p>\n\n<pre><code>var onBeforeUnLoadEvent = false;\n\nwindow.onunload = window.onbeforeunload= function(){\nif(!onBeforeUnLoadEvent){\n  onBeforeUnLoadEvent = true;\n  //your code here\n  }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><code>onbeforeunload</code>:</p>\n\n<ul>\n<li>Called before unloading begins</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.onbeforeunload\" rel=\"nofollow\">MDN tells me</a> you can cancel the closing of the page using <code>event.preventDefault();</code></li>\n<li>or by returning a non-void value (ie a value != 0), the page will pop up a confirmation dialog that allows the user to choose to cancel the close</li>\n<li>MDN also says Opera 12 and up support onbeforeunload - looks like its supported it for a while now</li>\n</ul>\n\n<p><code>onunload</code>:</p>\n\n<ul>\n<li>Called after unloading has begun, but before any resource deallocation (its not clear to me what exactly <em>is</em> done during this period)</li>\n<li>Its too late to cancel the page close at this point</li>\n</ul>\n\n<p>The only reason I can think of why you would want to use <code>onunload</code> over <code>onbeforeunload</code> would be where your <code>onunload</code> code could take some significant time, and don't want the user to see a window that hangs while closing.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What are the differences between onbeforeunload and onunload ?\nAlso I have a specific question related to it's use on the iPad...I have a page (myPage.html) where I am trying to show an alert when the page is closed (i.e. X is pressed to close the tab on iPad)</p>\n\n<p>Now I tried using both window.onunload and window.onbeforeunload\nBelow are my findings on the iPad;</p>\n\n<ol>\n<li><p>Using window.onunload , I am able to get an alert when user navigates to a different page from myPage.html (either by clicking on some link or doing a Google search while on myPage.html) . However nothing happens when the tab is closed from the minimized view (X)</p></li>\n<li><p>Using window.onbeforeunload, I neither get an alert even if the user navigates to a different page from myPage.html OR if he closes the tab (X) from the minimized view.</p></li>\n</ol>\n\n<p>I wanted to know if there is any alternate way to fix this issue ?</p>\n\n<p>Thank you. </p>\n",
            "last_activity_date": 1402617296,
            "question_id": 6895564,
            "score": 8,
            "tags": [
                "javascript",
                "ipad",
                "safari",
                "mobile-safari",
                "onbeforeunload"
            ],
            "title": "Difference between onbeforeunload and onunload"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>a) What's wrong with a simple a.b[0].c = 'After'?</p>\n\n<p>As for the method:</p>\n\n<pre><code>function setToValue(obj, value, path) {\n    path = path.split('.');\n    for (i = 0; i &lt; path.length - 1; i++)\n        obj = obj[path[i]];\n\n    obj[path[i]] = value;\n}\n</code></pre>\n\n<p>Here the JSFiddle: <a href=\"http://jsfiddle.net/QycBz/24/\" rel=\"nofollow\">http://jsfiddle.net/QycBz/24/</a></p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>FWIW, those of you wishing to the same in CoffeeScript might find these methods handy - it's a quite straight port of the above code. As an extra bonus, they make sure all the objects in the path exists (the getPropertyByPath doesn't throw exceptions if they don't, and the set method will create empty objects if any objects in the path happen to be null).</p>\n\n<pre><code>getPropertyByPath: (obj, path) -&gt;\n  path = path.split('.')\n  parent = obj\n\n  if path.length &gt; 1\n    parent = parent[path[i]] for i in [0..path.length - 2]\n\n  parent?[path[path.length - 1]]\n\nsetPropertyByPath: (obj, path, value) -&gt;\n  path = path.split('.')\n  parent = obj\n\n  if path.length &gt; 1\n    parent = (parent[path[i]] ||= {}) for i in [0..path.length - 2]\n\n  parent[path[path.length - 1]] = value\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is a full solution.</p>\n\n<p>Also creates objects if they don't exist.</p>\n\n<pre><code>        function setValue(object, path, value) {\n            var a = path.split('.');\n            var o = object;\n            for (var i = 0; i &lt; a.length - 1; i++) {\n                var n = a[i];\n                if (n in o) {\n                    o = o[n];\n                } else {\n                    o[n] = {};\n                    o = o[n];\n                }\n            }\n            o[a[a.length - 1]] = value;\n        }\n\n        function getValue(object, path) {\n            var o = object;\n            path = path.replace(/\\[(\\w+)\\]/g, '.$1');\n            path = path.replace(/^\\./, '');\n            var a = path.split('.');\n            while (a.length) {\n                var n = a.shift();\n                if (n in o) {\n                    o = o[n];\n                } else {\n                    return;\n                }\n            }\n            return o;\n        }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Given a string for a object property path, how do I set this property dynamically.</p>\n\n<p>Given this sample object:</p>\n\n<pre><code>var obj = {\n    a: {\n        b: [ { c: 'Before' } ]\n    }\n};\n</code></pre>\n\n<p>It should be able to set the value with a helper function like this:</p>\n\n<pre><code>setToValue(obj, 'After', 'a.b.0.c');\n</code></pre>\n\n<p>I tried it with the following code. But parent is a copy if the variable not a reference.</p>\n\n<pre><code>function setToValue(obj, value, path) {\n    var arrPath = path.split('.'),\n        parent = obj;\n\n    for (var i = 0, max = arrPath.length; i &lt; max; i++) {\n        parent = parent[arrPath[i]];\n    }\n\n    parent = value;\n}\n</code></pre>\n",
            "last_activity_date": 1411596111,
            "question_id": 6842795,
            "score": 8,
            "tags": [
                "javascript",
                "object",
                "deep"
            ],
            "title": "Dynamic deep setting for a JavaScript object"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Can I control the HTTP headers sent by window.open (cross browser)?</p>\n</blockquote>\n\n<p>No</p>\n\n<blockquote>\n  <p>If not, can I somehow window.open a page that then issues my request with custom headers inside its popped-up window?</p>\n</blockquote>\n\n<ul>\n<li>You can request a URL that triggers a server side program which makes the request with arbitrary headers and then returns the response</li>\n<li>You can run JavaScript (probably saying goodbye to Progressive Enhancement) that uses XHR to make the request with arbitrary headers (assuming the URL fits within the Same Origin Policy) and then process the result in JS.</li>\n</ul>\n\n<blockquote>\n  <p>I need some cunning hacks...</p>\n</blockquote>\n\n<p>It might help if you described the problem instead of asking if possible solutions would work.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>If you are in control of server side, it might be possible to set header value in query string and send it like that?\nThat way you could parse it from query string if it's not found in the headers.</p>\n\n<p>Just an idea... And you asked for a cunning hack :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Can I control the HTTP headers sent by <code>window.open</code> (cross browser)?</p>\n\n<p>If not, can I somehow <code>window.open</code> a page that then issues my request with custom headers inside its popped-up window?</p>\n\n<p>I need some cunning hacks.</p>\n",
            "last_activity_date": 1406558577,
            "question_id": 4325968,
            "score": 8,
            "tags": [
                "javascript",
                "window.open"
            ],
            "title": "window.open with headers"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>What you want is to load the data again but not reload the div.</p>\n\n<p>You need to make an Ajax query to get data from the server and fill the DIV.</p>\n\n<p><a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\">http://api.jquery.com/jQuery.ajax/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>While you haven't provided enough information to actually indicate WHERE you should be pulling data from, you do need to pull it from somewhere.  You can specify the URL in load, as well as define data parameters or a callback function.</p>\n\n<pre><code>$(\"#getCameraSerialNumbers\").click(function () {\n    $(\"#step1Content\").load('YourUrl');\n});\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/load/\" rel=\"nofollow\">http://api.jquery.com/load/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I always use this, works perfect.</p>\n\n<pre><code>$(document).ready(function(){\n        $(function(){\n        $('#ideal_form').submit(function(e){\n                e.preventDefault();\n                var form = $(this);\n                var post_url = form.attr('action');\n                var post_data = form.serialize();\n                $('#loader3', form).html('&lt;img src=\"../../images/ajax-loader.gif\" /&gt;       Please wait...');\n                $.ajax({\n                    type: 'POST',\n                    url: post_url, \n                    data: post_data,\n                    success: function(msg) {\n                        $(form).fadeOut(800, function(){\n                            form.html(msg).fadeIn().delay(2000);\n\n                        });\n                    }\n                });\n            });\n        });\n         });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<pre><code>$(\"#myDiv\").load(location.href+\" #myDiv&gt;*\",\"\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<pre><code>$(\"#mydiv\").load(location.href + \" #mydiv\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>Try this\n// html code   \n &lt;div id=\"refresh\"&gt;\n    &lt;input type=\"text\" /&gt;\n    &lt;input type=\"button\" id=\"click\" /&gt;\n    &lt;/div&gt;\n// jquery code\n    &lt;script&gt;\n    $('#click').click(function(){\n    var div=$('#refresh').html();\n    $.ajax({\n        url: '/path/to/file.php',\n        type: 'POST',\n        dataType: 'json',\n        data: {param1: 'value1'},\n    })\n    .done(function(data) {\nif(data.success=='ok'){\n        $('#refresh').html(div);\n}else{\n// show errors.\n}\n    })\n    .fail(function() {\n        console.log(\"error\");\n    })\n    .always(function() {\n        console.log(\"complete\");\n    });\n    });\n\n    &lt;/script&gt;\n// php page code path=/path/to/file.php\n&lt;?php\nheader('Content-Type: application/json');\n$done=true;\nif($done){\necho json_encode(['success'=&gt;'ok']);\n}\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to reload a div on click of a button. I do not want to reload the full page.</p>\n\n<p>Here is my code:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div role=\"button\" class=\"marginTop50 marginBottom\"&gt;\n    &lt;input type=\"button\" id=\"getCameraSerialNumbers\" value=\"Capture Again\" class=\"disabled\" /&gt;\n    &lt;input type=\"button\" id=\"confirmNext\"  value=\"Confirm &amp; Proceed\" class=\"disabled marginLeft50\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>On click of <code>&lt;input type=\"button\" id=\"getCameraSerialNumbers\" value=\"Capture Again\"&gt;</code> Button a <code>&lt;div id=\"list\"&gt;....&lt;/div&gt;</code> should reload without loading or refreshing full page.</p>\n\n<p>Below is the Jquery which I tried, but not working:-</p>\n\n<pre><code>$(\"#getCameraSerialNumbers\").click(function () {\n    $(\"#step1Content\").load();\n});\n</code></pre>\n\n<p>Please suggest.</p>\n\n<p>Here is the DIV on my page, which contains Pictures and Serial numbers of some products... Which will be coming from database 1st time on the Page Load. But Is User faces some issue he'll click tthe \"Capture Again\" button \"<code>&lt;input type=\"button\" id=\"getCameraSerialNumbers\" value=\"Capture Again\"&gt;</code>\" which will load those information again.</p>\n\n<p>The HTML Code of Div:-</p>\n\n<pre><code>&lt;div id=\"step1Content\" role=\"Step1ShowCameraCaptures\" class=\"marginLeft\"&gt;\n\n&lt;form&gt;\n    &lt;h1&gt;Camera Configuration&lt;/h1&gt;\n    &lt;!-- Step 1.1 - Image Captures Confirmation--&gt;\n    &lt;div id=\"list\"&gt;\n        &lt;div&gt;\n            &lt;p&gt;\n                &lt;a id=\"pickheadImageLightBox\" data-lightbox=\"image-1\" title=\"\" href=\"\"&gt;\n                    &lt;img alt=\"\" id=\"pickheadImage\" src=\"\" width=\"250\" height=\"200\" /&gt;\n                &lt;/a&gt;\n            &lt;/p&gt;\n            &lt;p&gt;\n                &lt;strong&gt;Pickhead Camera Serial No:&lt;/strong&gt;&lt;br /&gt;\n                &lt;span id=\"pickheadImageDetails\"&gt;&lt;/span&gt;\n            &lt;/p&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n            &lt;p&gt;\n                &lt;a id=\"processingStationSideImageLightBox\" data-lightbox=\"image-1\" title=\"\" href=\"\"&gt;\n                    &lt;img alt=\"\" id=\"processingStationSideImage\" src=\"\" width=\"250\" height=\"200\" /&gt;\n                &lt;/a&gt;\n            &lt;/p&gt;\n            &lt;p&gt;\n                &lt;strong&gt;Processing Station Top Camera Serial No:&lt;/strong&gt;&lt;br /&gt;\n                &lt;span id=\"processingStationSideImageDetails\"&gt;&lt;/span&gt;\n            &lt;/p&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n            &lt;p&gt;\n                &lt;a id=\"processingStationTopImageLightBox\" data-lightbox=\"image-1\" title=\"\" href=\"\"&gt;\n                    &lt;img alt=\"\" id=\"processingStationTopImage\" src=\"\" width=\"250\" height=\"200\" /&gt;\n                &lt;/a&gt;\n            &lt;/p&gt;\n            &lt;p&gt;\n                &lt;strong&gt;Processing Station Side Camera Serial No:&lt;/strong&gt;&lt;br /&gt;\n                &lt;span id=\"processingStationTopImageDetails\"&gt;&lt;/span&gt;\n            &lt;/p&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n            &lt;p&gt;\n                &lt;a id=\"cardScanImageLightBox\" data-lightbox=\"image-1\" title=\"\" href=\"\"&gt;\n                    &lt;img alt=\"\" id=\"cardScanImage\" src=\"\" width=\"250\" height=\"200\" /&gt;\n                &lt;/a&gt;\n            &lt;/p&gt;\n            &lt;p&gt;\n                &lt;strong&gt;Card Scan Camera Serial No:&lt;/strong&gt;&lt;br /&gt;\n                &lt;span id=\"cardScanImageDetails\"&gt;&lt;/span&gt;\n            &lt;/p&gt;\n\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"clearall\"&gt;&lt;/div&gt;\n\n    &lt;div class=\"marginTop50\"&gt;\n        &lt;p&gt;&lt;input type=\"radio\" name=\"radio1\" id=\"optionYes\" /&gt;Yes, the infomation captured is correct.&lt;/p&gt;\n        &lt;p&gt;&lt;input type=\"radio\" name=\"radio1\" id=\"optionNo\" /&gt;No, Please capture again.&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;div role=\"button\" class=\"marginTop50 marginBottom\"&gt;\n        &lt;input type=\"button\" id=\"getCameraSerialNumbers\" value=\"Capture Again\" class=\"disabled\" /&gt;\n        &lt;input type=\"button\" id=\"confirmNext\"  value=\"Confirm &amp; Proceed\" class=\"disabled marginLeft50\" /&gt;\n    &lt;/div&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p></p>\n\n<p>Now on click of <code>&lt;input type=\"button\" id=\"getCameraSerialNumbers\" value=\"Capture Again\" class=\"disabled\" /&gt;</code> button, the information which is in <code>&lt;div id=\"list\"&gt;... &lt;/div&gt;</code>  should be loaded again. </p>\n\n<p>Please let me know if you need some more information.</p>\n",
            "last_activity_date": 1424246381,
            "question_id": 18490026,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "ajax"
            ],
            "title": "Refresh/reload the content in Div using jquery/ajax"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Here is the procedure I use in this case: </p>\n\n<p>1) Inverse all Xs and Ys</p>\n\n<p>2) Remember that the 0 for y is on top, thus you will have to inverse lots of values as previous values for y will be inversed (you don't want your x axis to go from left to right) and the new y axis will be inversed too. </p>\n\n<p>3) Make sure the bars display correctly</p>\n\n<p>4) Adapt legends if there are problems</p>\n\n<p>This question may help in the sense that it shows how to go from horizontal bar charts to vertical: <a href=\"http://stackoverflow.com/questions/15388481/d3-js-histogram-with-positive-and-negative-values/15391554#15391554\">d3.js histogram with positive and negative values</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I just did the same thing last night, and I basically ended up rewriting the code as it was quicker than fixing all the bugs but here's the tips I can give you.</p>\n\n<p>The biggest issues with flipping the x and y axis will be with things like <code>return h - yScale(d.global)</code> because height is calculated from the \"top\" of the page not the bottom. </p>\n\n<p>Another key thing to remember is that when you set <code>.attr(\"x\", ..)</code> make sure you set it to 0 (plus any padding for the left side) so = <code>.attr(\"x\", 0)\"</code> </p>\n\n<p>I used this tutorial to help me think about my own code in terms of horizontal bars instead - it really helped </p>\n\n<p><a href=\"http://hdnrnzk.me/2012/07/04/creating-a-bar-graph-using-d3js/\" rel=\"nofollow\">http://hdnrnzk.me/2012/07/04/creating-a-bar-graph-using-d3js/</a></p>\n\n<p>here's my own code making it horizontal if it helps:</p>\n\n<pre><code>var w = 600;\nvar h = 600;\nvar padding = 30;\n\nvar xScale = d3.scale.linear()\n        .domain([0, d3.max(dataset, function(d){\n                                return d.values[0]; })]) //note I'm using an array here to grab the value hence the [0]\n        .range([padding, w - (padding*2)]);\n\n        var yScale = d3.scale.ordinal()\n            .domain(d3.range(dataset.length))\n            .rangeRoundBands([padding, h- padding], 0.05);\n\n        var svg = d3.select(\"body\")\n            .append(\"svg\")\n            .attr(\"width\", w)\n            .attr(\"height\", h)\n\n        svg.selectAll(\"rect\")\n            .data(dataset)\n            .enter()\n            .append(\"rect\")\n            .attr(\"x\", 0 + padding)\n            .attr(\"y\", function(d, i){\n            return yScale(i);\n            })\n            .attr(\"width\", function(d) {\n                return xScale(d.values[0]);\n            })\n            .attr(\"height\", yScale.rangeBand())\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>An alternative is to rotate the chart (see <a href=\"http://jsfiddle.net/jrideout/RWs67/\" rel=\"nofollow\"><strong>this</strong></a>). This is a bit hacky as then you need to maintain the swapped axes in your head (the height is actually the width etc), but it is arguably simpler if you already have a working vertical chart.</p>\n\n<p>An example of rotating the chart is below. You might need to rotate the text as well to make it nice.</p>\n\n<pre><code>_chart.select('g').attr(\"transform\",\"rotate(90 200 200)\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Another Interesting Horizontal Graph <a href=\"http://nvd3.org/examples/multiBarHorizontal.html\" rel=\"nofollow\">NVD3</a> which I found useful. Give it a Try. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a vertical bar chart that is grouped in pairs. I was trying to play around with how to flip it horizontally. In my case, the keywords would appear on the y axis, and the scale would appear on the x-axis.</p>\n\n<p>I tried switching various x/y variables, but that of course just produced funky results. Which areas of my code do I need to focus on in order to switch it from vertical bars to horizontal ones?</p>\n\n<p><strong><a href=\"http://jsfiddle.net/enigmarm/juY5E/11/\"><code>My JSFiddle: Full Code</code></a></strong></p>\n\n<pre><code>var xScale = d3.scale.ordinal()\n    .domain(d3.range(dataset.length))\n    .rangeRoundBands([0, w], 0.05);\n\n// ternary operator to determine if global or local has a larger scale\nvar yScale = d3.scale.linear()\n    .domain([0, d3.max(dataset, function (d) {\n    return (d.local &gt; d.global) ? d.local : d.global;\n})])\n    .range([h, 0]);\n\nvar xAxis = d3.svg.axis()\n    .scale(xScale)\n    .tickFormat(function (d) {\n        return dataset[d].keyword;\n    })\n    .orient(\"bottom\");\n\nvar yAxis = d3.svg.axis()\n    .scale(yScale)\n    .orient(\"left\")\n    .ticks(5);\n\nvar commaFormat = d3.format(',');\n\n//SVG element\nvar svg = d3.select(\"#searchVolume\")\n    .append(\"svg\")\n    .attr(\"width\", w + margin.left + margin.right)\n    .attr(\"height\", h + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n// Graph Bars\nvar sets = svg.selectAll(\".set\")\n    .data(dataset)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"set\")\n    .attr(\"transform\", function (d, i) {\n        return \"translate(\" + xScale(i) + \",0)\";\n    });\n\nsets.append(\"rect\")\n    .attr(\"class\", \"local\")\n    .attr(\"width\", xScale.rangeBand() / 2)\n    .attr(\"y\", function (d) {\n        return yScale(d.local);\n    })\n    .attr(\"x\", xScale.rangeBand() / 2)\n    .attr(\"height\", function (d) {\n        return h - yScale(d.local);\n    })\n    .attr(\"fill\", colors[0][1])\n    ;\n\nsets.append(\"rect\")\n    .attr(\"class\", \"global\")\n    .attr(\"width\", xScale.rangeBand() / 2)\n    .attr(\"y\", function (d) {\n        return yScale(d.global);\n    })\n    .attr(\"height\", function (d) {\n    return h - yScale(d.global);\n    })\n    .attr(\"fill\", colors[1][1])\n    ;\n\n    sets.append(\"rect\")\n        .attr(\"class\", \"global\")\n        .attr(\"width\", xScale.rangeBand() / 2)\n        .attr(\"y\", function (d) {\n        return yScale(d.global);\n    })\n        .attr(\"height\", function (d) {\n        return h - yScale(d.global);\n    })\n        .attr(\"fill\", colors[1][1])\n    ;\n</code></pre>\n",
            "last_activity_date": 1401880488,
            "question_id": 16202721,
            "score": 7,
            "tags": [
                "javascript",
                "d3.js",
                "bar-chart"
            ],
            "title": "D3js - change Vertical bar chart to Horizontal bar chart"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I can solve my problem by <a href=\"https://github.com/imaya/zlib.js\" rel=\"nofollow\">zlib</a> . I fix my code as below</p>\n\n<pre><code>var base64Data = \"eJztwTEBAAAAwqD1T20JT6AAAHgaCWAAAQ==\";\nvar compressData = atob(base64Data);\nvar compressData = compressData.split('').map(function(e) {\n    return e.charCodeAt(0);\n});\nvar inflate = new Zlib.Inflate(compressData);\nvar output = inflate.decompress();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"https://github.com/nodeca/pako\" rel=\"nofollow\">Pako</a> is a full and modern <code>Zlib</code> port.</p>\n\n<p>Here is a very simple example and you can work from there.</p>\n\n<p>Get <a href=\"https://raw.githubusercontent.com/nodeca/pako/master/dist/pako.js\" rel=\"nofollow\">pako.js</a> and you can decompress byteArray like so:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n  &lt;title&gt;Gunzipping binary gzipped string&lt;/title&gt;\n  &lt;script type=\"text/javascript\" src=\"pako.js\"&gt;&lt;/script&gt;\n  &lt;script type=\"text/javascript\"&gt;\n\n    // Get datastream as Array, for example:\n    var charData    = [31,139,8,0,0,0,0,0,0,3,5,193,219,13,0,16,16,4,192,86,214,151,102,52,33,110,35,66,108,226,60,218,55,147,164,238,24,173,19,143,241,18,85,27,58,203,57,46,29,25,198,34,163,193,247,106,179,134,15,50,167,173,148,48,0,0,0];\n\n    // Turn number array into byte-array\n    var binData     = new Uint8Array(charData);\n\n    // Pako magic\n    var data        = pako.inflate(binData);\n\n    // Convert gunzipped byteArray back to ascii string:\n    var strData     = String.fromCharCode.apply(null, new Uint16Array(data));\n\n    // Output to console\n    console.log(strData);\n\n  &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    Open up the developer console.\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Running example: <a href=\"http://jsfiddle.net/9yH7M/\" rel=\"nofollow\">http://jsfiddle.net/9yH7M/</a></p>\n\n<p>Alternatively you can base64 encode the array before you send it over as the Array takes up a lot of overhead when sending as JSON or XML. Decode likewise:</p>\n\n<pre><code>// Get some base64 encoded binary data from the server. Imagine we got this:\nvar b64Data     = 'H4sIAAAAAAAAAwXB2w0AEBAEwFbWl2Y0IW4jQmziPNo3k6TuGK0Tj/ESVRs6yzkuHRnGIqPB92qzhg8yp62UMAAAAA==';\n\n// Decode base64 (convert ascii to binary)\nvar strData     = atob(b64Data);\n\n// Convert binary string to character-number array\nvar charData    = strData.split('').map(function(x){return x.charCodeAt(0);});\n\n// Turn number array into byte-array\nvar binData     = new Uint8Array(charData);\n\n// Pako magic\nvar data        = pako.inflate(binData);\n\n// Convert gunzipped byteArray back to ascii string:\nvar strData     = String.fromCharCode.apply(null, new Uint16Array(data));\n\n// Output to console\nconsole.log(strData);\n</code></pre>\n\n<p>Running example: <a href=\"http://jsfiddle.net/9yH7M/1/\" rel=\"nofollow\">http://jsfiddle.net/9yH7M/1/</a></p>\n\n<p>To go more advanced, here is the <a href=\"http://nodeca.github.io/pako/\" rel=\"nofollow\"><code>pako</code> API documentation</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I want to get compress layer data from tmx file . Who knows libraries for decompress gzip and zlib string in javascript ? I try <a href=\"https://github.com/imaya/zlib.js\">zlib</a> but it doesn't work for me . Ex , layer data in tmx file is :</p>\n\n<pre><code>  &lt;data encoding=\"base64\" compression=\"zlib\"&gt;\n       eJztwTEBAAAAwqD1T20JT6AAAHgaCWAAAQ==\n  &lt;/data&gt;\n</code></pre>\n\n<p>My javascript code is </p>\n\n<pre><code>var base64Data = \"eJztwTEBAAAAwqD1T20JT6AAAHgaCWAAAQ==\";\nvar compressData = atob(base64Data);\nvar inflate = new Zlib.Inflate(compressData);\nvar output = inflate.decompress();\n</code></pre>\n\n<p>It runs with displays message error \"unsupported compression method\" . But I try decompress with online tool as <a href=\"http://i-tools.org/gzip\">http://i-tools.org/gzip</a> , it returns correct string.</p>\n",
            "last_activity_date": 1395877836,
            "question_id": 14620769,
            "score": 7,
            "tags": [
                "javascript",
                "gzip",
                "zlib",
                "decompress",
                "tmx"
            ],
            "title": "Decompress gzip and zlib string in javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Why not try the straight forward solution? Instead of extending Number prototype, just define toRad as a regular function:</p>\n\n<pre><code>function toRad(x) {\n   return x * Math.PI / 180;\n}\n</code></pre>\n\n<p>and then call <code>toRad</code> everywhere:</p>\n\n<pre><code>var dLat = toRad(lat2-lat1); \n</code></pre>\n\n<p>Extending the Number prototype does not always work as expected. For example calling 123.toRad() does not work. I think that if you do <code>var x1 = lat2 - lat1; x1.toRad();</code> works better than doing <code>(lat2-lat1).toRad()</code></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You need to extend the Number prototype, before calling those extensions in a function.</p>\n\n<p>So just ensure </p>\n\n<pre><code>Number.prototype.toRad = function() {\n  return this * Math.PI / 180;\n}\n</code></pre>\n\n<p>is called <em>before</em> your function is called.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>when I put this below the function</p>\n</blockquote>\n\n<p>You only need to put it above the point where you call <code>test()</code>. Where the <code>test</code> function itself is declared does not matter.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This code is working:</p>\n\n<pre><code>Number.prototype.toRad = function() {\n   return this * Math.PI / 180;\n}\n\nvar lat2 = 42.741; \nvar lon2 = -71.3161; \nvar lat1 = 42.806911; \nvar lon1 = -71.290611; \n\nvar R = 6371; // km \n//has a problem with the .toRad() method below.\nvar x1 = lat2-lat1;\nvar dLat = x1.toRad();  \nvar x2 = lon2-lon1;\nvar dLon = x2.toRad();  \nvar a = Math.sin(dLat/2) * Math.sin(dLat/2) + \n                Math.cos(lat1.toRad()) * Math.cos(lat2.toRad()) * \n                Math.sin(dLon/2) * Math.sin(dLon/2);  \nvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \nvar d = R * c; \n\nalert(d);\n</code></pre>\n\n<p>Notice how I defined x1 and x2.\nPlay with it at: <a href=\"https://tinker.io/3f794\">https://tinker.io/3f794</a></p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>This is a java implemetation of talkol's solution above.  His or her solution worked very well for us.  I'm not trying to answer the question, since the original question was for javascript.  I'm just sharing our java implementation of the given javascript solution in case others find it of use.</p>\n\n<pre><code>// this was a pojo class we used internally...\npublic class GisPostalCode {\n\n    private String country;\n    private String postalCode;\n    private double latitude;\n    private double longitude;\n\n    // getters/setters, etc.\n}\n\n\npublic static double distanceBetweenCoordinatesInMiles2(GisPostalCode c1, GisPostalCode c2) {\n\n    double lat2 = c2.getLatitude();\n    double lon2 = c2.getLongitude();\n    double lat1 = c1.getLatitude();\n    double lon1 = c1.getLongitude();\n\n    double R = 6371; // km\n    double x1 = lat2 - lat1;\n    double dLat = x1 * Math.PI / 180;\n    double x2 = lon2 - lon1;\n    double dLon = x2 * Math.PI / 180;\n\n    double a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n        Math.cos(lat1*Math.PI/180) * Math.cos(lat2*Math.PI/180) *\n        Math.sin(dLon/2) * Math.sin(dLon/2);\n\n    double c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    double d = R * c;\n\n    // convert to miles\n    return d / 1.60934;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to use the Haversine Distance Formula (as found here: <a href=\"http://www.movable-type.co.uk/scripts/latlong.html\">http://www.movable-type.co.uk/scripts/latlong.html</a>) but I can't get it to work, please see the following code</p>\n\n<pre><code>    function test() { \n    var lat2 = 42.741; \n    var lon2 = -71.3161; \n    var lat1 = 42.806911; \n    var lon1 = -71.290611; \n\n    var R = 6371; // km \n    //has a problem with the .toRad() method below.\n    var dLat = (lat2-lat1).toRad();  \n    var dLon = (lon2-lon1).toRad();  \n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) + \n                    Math.cos(lat1.toRad()) * Math.cos(lat2.toRad()) * \n                    Math.sin(dLon/2) * Math.sin(dLon/2);  \n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n    var d = R * c; \n\n    alert(d); \n}\n</code></pre>\n\n<p>And the error is:</p>\n\n<pre><code>Uncaught TypeError: Object -0.06591099999999983 has no method 'toRad' \n</code></pre>\n\n<p>Which I understand to be because it needs to do the following:</p>\n\n<pre><code>Number.prototype.toRad = function() {\nreturn this * Math.PI / 180;\n}\n</code></pre>\n\n<p>But when I put this below the function, it still comes back with the same error message. How do I make it use the helper method? Or is there an alternative way to code this to get it to work? Thanks!</p>\n",
            "last_activity_date": 1387290449,
            "question_id": 14560999,
            "score": 7,
            "tags": [
                "javascript",
                "haversine"
            ],
            "title": "Using the Haversine Formula in Javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>When you remove a dom element and then replace it (via javascript), it loses any and all event bindings that were added to it on page load.</p>\n\n<p>There are several possible solutions for this.</p>\n\n<p>1) Encapsulate your \"binding\" code and call it both on page load and immediately after the dom element in question gets added back to the page. For example:</p>\n\n<pre><code>$(document).ready(function(){\n    // bind event handlers when the page loads.\n    bindButtonClick();\n});\n\nfunction bindButtonClick(){\n    $('.myClickableElement').click(function(){\n        $.ajax({\n            url : '/ajax-endpoint.php',\n            data : {'onMyWay' : 'toServer'},\n            dataType : 'html',\n            type : 'post',\n            success : function(responseHtml){\n\n                // here your .myClickableElement dom object is replaced with new (unbound) elements\n                $('#container').html(responseHtml);\n\n                // re-bind event handlers to '.myClickableElement'\n                bindButtonClick();\n\n            }\n        });\n    });\n}\n</code></pre>\n\n<p>2) <strong>The more elegant way to handle this</strong>: use <a href=\"http://api.jquery.com/on/\">jQuery's .on() method</a>. With it, you are able to bind event handlers to dom elements other than the event target. This allows you to bind your event handler code to a dom element that does not ever get removed / replaced on the page, and delegate it from there. For example:</p>\n\n<pre><code>$(document).ready(function(){\n    $('body').on('click','.myClickableElement',function(){\n        ... event handler code ....\n    });\n});\n</code></pre>\n\n<p>Also, it is worth noting that because of the way events \"bubble up\" through the dom tree, the event target (2nd argument of .on() method) must be a descendant of the jQuery object's selector. For example, <strong>the following would NOT work</strong></p>\n\n<pre><code>&lt;div id=\"container-1\"&gt;\n    &lt;div&gt;\n        &lt;div id=\"another-div\"&gt;\n            Some Stuff\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;div id=\"container-2\"&gt;\n    &lt;a id=\"click-me\"&gt;Event Target!!!&lt;/a&gt;\n&lt;/div&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    $('#container-1').on('click','#click-me',function(){\n        ... event handler code ....\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>For this reason, <code>body</code> is usually a pretty safe choice.</p>\n",
                    "is_accepted": true,
                    "score": 25
                }
            ],
            "body": "<p>This is a rather strange issue with jquery. I am loading a div </p>\n\n<pre><code>&lt;div id=\"container\"&gt;\n</code></pre>\n\n<p>on page load. Each record is tabular data with a 'delete' ajax function associated with it. When the page loads and clicking the 'delete' link, the ajax call fires off just fine. \nHowever, once the event is fired, the data is returned from the ajax call, and the div is populated with data (but the page does not refresh or reload) \nWhen I click the link again, the ajax script will not fire. \nHere is my code:</p>\n\n<pre><code>$(document).ready(function() {\n    $(\"button.done\").button({\n    }).click(function() {\n        var BatchID = $(\"input#BatchID\").val();\n        var Amount = $(\"input#Amount\").val();\n        var Name = $(\"input#CheckName\").val();\n        var Check_Number = $(\"input#Check_Number\").val();\n        var Company = $(\"select#Company\").val();\n        var Department = $(\"select#Department\").val();\n        $.ajax({\n            type: 'GET',\n            url: '/app/usagCheckEntryWS.html',\n            data: {\n                \"BatchID\" : BatchID,\n                \"Amount\" : Amount,\n                \"Name\" : Name,\n                \"Check_Number\" : Check_Number,\n                \"Company\" : Company,\n                \"Department\" : Department\n            },\n            success: function (data) {\n                    var ang = '';\n                    var obj = $.parseJSON(data);\n                    $.each(obj, function() {\n                       ang += '&lt;table&gt;&lt;tr&gt;&lt;td width=\"45\"&gt;' + this[\"RefID\"] + '&lt;/td&gt;&lt;td width=\"140\"&gt;' + this[\"Name\"] + '&lt;/td&gt;&lt;td width=\"95\"&gt;' + this[\"CheckNumber\"] + '&lt;/td&gt;&lt;td align=\"right\" width=\"70\"&gt;$' + this[\"Amount\"] + '&lt;/td&gt;&lt;td width=\"220\" style=\"padding-left: 15px;\"&gt;' + this[\"Description\"] + '&lt;/td&gt;&lt;td&gt;&lt;div class=\"delete\" rel=\"' + this[\"RefID\"] + '\"&gt;&lt;span&gt;Delete&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;';\n                    });\n                    $('#container').html(ang);\n                    $(\"input#Amount\").val('');\n                    $(\"input#CheckName\").val('');\n                    $(\"input#Check_Number\").val('');\n                    $(\"select#Company\").val('MMS');\n                    $(\"th#dept\").hide();\n                    $('input#CheckName').focus();\n            }\n        });\n    });\n});\n</code></pre>\n\n<p></p>\n",
            "last_activity_date": 1417470927,
            "question_id": 13767919,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "dom-events"
            ],
            "title": "Jquery Event wont fire after ajax call"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><strong>First solution :</strong></p>\n\n<pre><code>function doClick(e) { \n   $('#modal').reveal({ \n     animation: 'fade',\n     animationspeed: 150,\n     closeonbackgroundclick: true, \n     dismissmodalclass: 'close'\n   });\n   return false;\n}\n$('#button1').click(doClick);\n$('#button2').click(doClick);\n</code></pre>\n\n<p><strong>Second solution :</strong></p>\n\n<p>Give a class \"someClass\" to all the involved buttons</p>\n\n<pre><code>&lt;input type=button class=someClass ...\n</code></pre>\n\n<p>and do </p>\n\n<pre><code>$('.someClass').click(function(e) { \n...\n});\n</code></pre>\n\n<p><strong>Third solution :</strong></p>\n\n<p>Use the comma to separate ids :</p>\n\n<pre><code>$('#button1, #button2').click(function(e) { \n...\n});\n</code></pre>\n\n<hr>\n\n<p>Generally, the best solution is the second one : it allows you to add buttons in your code without modifying the javascript part. If you add some of those buttons dynamically, you may even do </p>\n\n<pre><code>$(document).on('click', '.someClass', function(e) { \n...\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>IDs should be unique. Try using something like</p>\n\n<pre><code>$('input[type=\"button\"]')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you class can call them by class you using <code>,</code> seperated id</p>\n\n<pre><code>$(document).ready(function() {\n$('#button, #button1, #button2').click(function(e) { \n$('#modal').reveal({ \nanimation: 'fade',\nanimationspeed: 150,\ncloseonbackgroundclick: true, \ndismissmodalclass: 'close'\n});\nreturn false;\n});\n});\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;script type='text/javascript'&gt;\n$(document).ready(function() {\n$('#button1,#button2,#button3').click(function(e) { \n$('#modal').reveal({ \nanimation: 'fade',\nanimationspeed: 150,\ncloseonbackgroundclick: true, \ndismissmodalclass: 'close'\n});\nreturn false;\n});\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>or else use class as mentioned bt dystroy</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use <strong>css class name</strong> instead of <code>id</code> to achieve it like below</p>\n\n<pre><code>&lt;script type='text/javascript'&gt;\n$(document).ready(function() {\n    $('.fade').click(function(e) { \n        $('#modal').reveal({ \n            animation: 'fade',\n            animationspeed: 150,\n            closeonbackgroundclick: true, \n            dismissmodalclass: 'close'\n        });\n        return false;\n    });\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>and your html of the buttons</p>\n\n<pre><code>&lt;button class=\"fade\"&gt;Button1&lt;/button&gt;\n&lt;button class=\"fade\"&gt;Button2&lt;/button&gt;\n&lt;button class=\"fade\"&gt;Button3&lt;/button&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use different ids for buttons and change your function as below.</p>\n\n<blockquote>\n  <p>$('#button1, #button2, #button3').click(function(e) {\n  <br/>.....</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am not really familiar with jQuery. I have this code that I downloaded to create a fade in/fade out popup form. Here's the code:</p>\n\n<pre><code>&lt;script type='text/javascript'&gt;\n    $(document).ready(function() {\n        $('#button').click(function(e) { \n            $('#modal').reveal({ \n                animation: 'fade',\n                animationspeed: 150,\n                closeonbackgroundclick: true, \n                dismissmodalclass: 'close'\n            });\n            return false;\n        });\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>The code above executes when a button with an <code>id='button'</code> is clicked. Now I have multiple buttons, how can I call this function in all buttons? I tried setting the <code>id</code> of all buttons to <code>button</code> but only the first button works. Any help would be very much appreciated. \nBy the way I forgot to mention, in my .php file i have this codes:</p>\n\n<pre><code>for ($c=1;$c&lt;=5;$c++){\necho \"&lt;input type='button' id='button'\"&gt;\n};\n</code></pre>\n\n<p>This php code will display 5 buttons with the same id which is 'button'. What I want to happen is when I click any of the 5 buttons the jQuery function will execute which is popping up a fade in/fade out form.</p>\n",
            "last_activity_date": 1394351657,
            "question_id": 13083106,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "call the same jQuery function in multiple buttons"
        }
    ]
}
