{
    "items": [
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Your code works if its in mobile safari but NOT if its from a bookmark on the iOS desktop. Never tried it that way before, but thats the issue. If i just set your JS to </p>\n\n<pre><code>&lt;script type=\"text/javascript\" charset=\"utf-8\"&gt; \nwindow.location = \"myapp://myparam\";\n&lt;/script&gt;\n</code></pre>\n\n<p>It works in browser, but when bookmarked it fails. It might have to do something with how the url is loaded when its bookmarked since there is no chrome? My guess is that apple doesn't want booked mark pages to access local apps. Also, I've noticed that if I bookmark a locally hosted page, that works in mobile safari, I can't get it to load via bookmark. Its really odd....</p>\n\n<p>Best recommendation I have for you is to make it </p>\n\n<pre><code>&lt;meta name=\"apple-mobile-web-app-capable\" /&gt;\n</code></pre>\n\n<p>instead of </p>\n\n<pre><code>&lt;meta name=\"apple-mobile-web-app-capable\" content=\"yes\" /&gt;\n</code></pre>\n\n<p>This way it will be on the home screen, but will unfortunately load with the chrome. Thats the only solution I can think of.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>&lt;?php \n// Detect device type\n$iPod = stripos($_SERVER['HTTP_USER_AGENT'],\"iPod\");\n$iPhone = stripos($_SERVER['HTTP_USER_AGENT'],\"iPhone\");\n\n// Redirect if iPod/iPhone\nif( $iPod || $iPhone ){\n    header('Location:http://example.com');      \n}\n?&gt;\n</code></pre>\n\n<p>The above will redirect the browser to the inputted URL (http://example.com/) if the device is an iPod or iPhone. Add the script to the top of your web app, make sure you save it as a <code>.php</code> file rather than <code>.html</code>.</p>\n\n<p>Source:\n<a href=\"http://www.schiffner.com/programming-php-classes/php-mobile-device-detection/\" rel=\"nofollow\">http://www.schiffner.com/programming-php-classes/php-mobile-device-detection/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>While it's possible there's another way with some javascript I'm not aware of, to the best of my knowledge at this time it is not possible to do so :(</p>\n",
                    "is_accepted": true,
                    "score": -2
                },
                {
                    "body": "<p>If you need to open an iOS application if it is installed and also want to preserve your page's functionality, the <code>location.href = 'myapp://?params=...';</code> won't help since if <code>myapp://</code> is not registered, the redirect leads user to unreachable destination.</p>\n\n<p>The safest bet seems to be in using an <code>iframe</code>. The following code will open an iOS app if it is installed and will not cause a failure if it is not (though it may alert a user that the page could not be reached if the app is not installed):</p>\n\n<pre><code>var frame = document.createElement('iframe');\nframe.src = 'myapp://?params=...';\nframe.style.display = 'none';\ndocument.body.appendChild(frame);\n\n// the following is optional, just to avoid an unnecessary iframe on the page\nsetTimeout(function() { document.body.removeChild(frame); }, 4);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Try like this</strong>:\nThe index page</p>\n\n<pre><code>&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;\n&lt;?php\n$app_url = urlencode('YourApp://profile/blabla');\n$full_url = urlencode('http://yoursite.com/profile/bla');\n?&gt;   \n\n&lt;iframe src=\"receiver.php?mylink1=&lt;?php echo $app_url;?&gt;\" width=\"1px\" height=\"1px\" scrolling=\"no\" frameborder=\"0\"&gt;&lt;/iframe&gt;\n&lt;iframe src=\"receiver.php?mylink2=&lt;?php echo $full_url;?&gt;\" width=\"1px\" height=\"1px\" scrolling=\"no\" frameborder=\"0\"&gt;&lt;/iframe&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>the <strong>receiver.php</strong> page:</p>\n\n<pre><code>&lt;?php if ($first == $_GET['mylink1'])) { ?&gt;\n   &lt;script type=\"text/javascript\"&gt;\n   self.window.location = \"&lt;?php echo $first;?&gt;\"; \n   &lt;/script&gt;\n\n&lt;?php } if ($second == $_GET['mylink2'])) { ?&gt;\n   &lt;script type=\"text/javascript\"&gt;\n   window.parent.location.href = \"&lt;?php echo $second ;?&gt;\"; \n   //window.top.location.href=theLocation;\n   //window.top.location.replace(theLocation);\n   &lt;/script&gt;\n&lt;?php } ?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><strong>Summary</strong> I have an app with a correctly functioning URL scheme that I'd like to launch from a web app stored on the home screen, and the normal JavaScript redirect methods don't seem to work.</p>\n\n<p><strong>Details</strong> I'm trying to create an iOS web app, to be opened in full-screen mode from a link saved on the Home Screen. The web app needs to open a specific native app. I have already registered the url scheme for the native app, and verified that it works correctly - I can open the native app by typing the scheme directly into my Safari address bar, for instance. I can also open it from other applications using the <code>+openURL:</code> method of <code>UIApplication</code>. I would like to also open it with certain arguments from a native web app that can be added to the home screen.</p>\n\n<p>What I'm trying to do is use JavaScript like so inside the native app:</p>\n\n<pre><code>window.location = \"myapp://myparam\";\n</code></pre>\n\n<p>When using this code inside the web app I get an alert saying:</p>\n\n<blockquote>\n  <p>\"Cannot Open myWebAppName - myWebAppName could not be opened. The\n  error was \"This URL can't be shown\".\".</p>\n</blockquote>\n\n<p>This same javascript when executed within Safari works correctly. I get the same result using <code>window.location.replace(\"myapp://myparam\")</code>.</p>\n\n<p>The html for the web app is:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n   \"http://www.w3.org/TR/html4/strict.dtd\"&gt;\n\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;\n    &lt;title&gt;untitled&lt;/title&gt;\n    &lt;meta name=\"generator\" content=\"TextMate http://macromates.com/\"&gt;\n    &lt;meta name=\"author\" content=\"Carl Veazey\"&gt;\n    &lt;!-- Date: 2012-04-19 --&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\" /&gt;\n    &lt;meta name=\"apple-mobile-web-app-capable\" content=\"yes\" /&gt;\n    &lt;meta names=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n        if (window.navigator.userAgent.indexOf('iPhone') != -1) {\n            if (window.navigator.standalone == true) {\n                window.location = \"myapp://myparam\";\n            } else {\n                document.write(\"please save this to your home screen\");\n        };} else {\n                alert(\"Not iPhone!\");\n                document.location.href = 'please-open-from-an-iphone.html';\n        };\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>What am I doing wrong here? I'm pretty inexperienced with javascript and mobile web so I suspect I'm just missing something obvious.</p>\n",
            "last_activity_date": 1401822521,
            "question_id": 10237031,
            "score": 13,
            "tags": [
                "javascript",
                "ios",
                "mobile-safari"
            ],
            "title": "How to open a native iOS app from a web app"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>To ensure <strong>robust cross-browser support</strong>, <strong>use a library</strong> like <a href=\"http://jquery.com\" rel=\"nofollow\">jQuery</a>: see <a href=\"http://docs.jquery.com/Events/keypress\" rel=\"nofollow\">keyboard events</a></p>\n\n<p>Of course, there are other Javascript libraries out there:</p>\n\n<ul>\n<li><a href=\"http://www.prototypejs.org/\" rel=\"nofollow\">Prototype</a></li>\n<li><a href=\"http://mootools.net/\" rel=\"nofollow\">Motools</a></li>\n<li><a href=\"http://developer.yahoo.com/yui/\" rel=\"nofollow\">Yahoo UI</a></li>\n<li>etc</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Have a look at this site for cross browser inconsistencies \n<a href=\"http://www.quirksmode.org/js/keys.html\" rel=\"nofollow\">http://www.quirksmode.org/js/keys.html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use this one:</p>\n\n<pre><code>function onKeyPress(evt){\n  evt = (evt) ? evt : (window.event) ? event : null;\n  if (evt)\n  {\n    var charCode = (evt.charCode) ? evt.charCode :((evt.keyCode) ? evt.keyCode :((evt.which) ? evt.which : 0));\n    if (charCode == 13) \n        alert('User pressed Enter');\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>\"Clear\" JavaScript:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n        function myKeyPress(e){\n\n            var keynum;\n\n            if(window.event){ // IE\t\t\t\t\t\n            \tkeynum = e.keyCode;\n            }else\n                if(e.which){ // Netscape/Firefox/Opera\t\t\t\t\t\n            \t\tkeynum = e.which;\n                 }\n            alert(String.fromCharCode(keynum));\n        }\n&lt;/script&gt;\n\n\n&lt;form&gt;\n    &lt;input type=\"text\" onkeypress=\"return myKeyPress(event)\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>JQuery:</p>\n\n<pre><code>$(document).keypress(function(event){\n    alert(String.fromCharCode(event.which)); \n })\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>There's a million duplicates of this question on here, but here goes again anyway:</p>\n\n<pre><code>document.onkeypress = function(evt) {\n    evt = evt || window.event;\n    var charCode = evt.keyCode || evt.which;\n    var charStr = String.fromCharCode(charCode);\n    alert(charStr);\n};\n</code></pre>\n\n<p>The best reference on key events I've seen is <a href=\"http://unixpapa.com/js/key.html\" rel=\"nofollow\">http://unixpapa.com/js/key.html</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>**check this out** \n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n$(document).ready(function(){\n    $(document).keypress(function(e)\n        {\n\n            var keynum;\n            if(window.event)\n            { // IE                 \n                keynum = e.keyCode;\n            }\n                else if(e.which)\n                    { \n                    // Netscape/Firefox/Opera                   \n                    keynum = e.which;\n                    }\n                    alert(String.fromCharCode(keynum));\n                    var unicode=e.keyCode? e.keyCode : e.charCode;\n                    alert(unicode);\n        });\n});  \n\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;input type=\"text\"&gt;&lt;/input&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I would like to find out what character key is pressed in a cross-browser compatible way in pure javascript.</p>\n",
            "last_activity_date": 1418041881,
            "question_id": 1846599,
            "score": 13,
            "tags": [
                "javascript",
                "javascript-events",
                "keypress"
            ],
            "title": "How to find out what character key is pressed?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You're trying to use <code>render</code> from assets. Unfortunately, it isn't possible now, look at <a href=\"https://github.com/rails/rails/issues/1370\">this</a>.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>With the new asset pipeline, inside static assets (<code>/app|lib|vendor/assets/</code>) you can use some 'static' helpers (i.e. <code>&lt;%= asset_path \"/foo/bar\" %&gt;</code>), because you just compile them once (if you're on production i.e.) and not every time you make an http req. Therefore, it makes no sense to use methods like <code>render</code> (or general 'dynamic' stuff) inside a static asset.</p>\n\n<p>For your particular case, you could use both *.js.erb views (that will 'match' a particular action inside the controller) or javascript rendered directly inside the html.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can't use Rails render. But it's possible to still use partials using Erubis::Eruby rendering directly.</p>\n\n<pre><code>$(document).ready(function() {\n    $(\"#workout-week\").append(&lt;%= escape_javascript(\n        Erubis::Eruby.new(File.read(File.join(Rails.root, 'app/views',\n        '_show_training_period.html.erb'))).result(period: @period)) %&gt;);\n});\n</code></pre>\n\n<p>Or in Haml</p>\n\n<pre><code>$(document).ready(function() {\n    $(\"#workout-week\").append(&lt;%= escape_javascript(\n        Haml::Engine.new(File.read(File.join(Rails.root, 'app/views',\n        '_show_training_period.html.haml'))).render(Object.new, period: @period)) %&gt;);\n});\n</code></pre>\n\n<p>For some reason using ERB breaks the sprocket rendering.<br>\nAnd the binding way to pass locals variables is too ugly.</p>\n\n<p>It's a way around, but it's good to remember that using partials inside assets is not recommended. A better way is to place the partial code hidden somewhere in the HTML and use it in your javascripts. </p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I've got the following code in a Javascript ERB file:</p>\n\n<pre><code>$(document).ready(function() {\n  $(\"#workout-week\").append(\n    &lt;%= escape_javascript(render :partial =&gt; \"show_training_period\", :locals =&gt; { :period =&gt; @period }) %&gt;\n  );\n});\n</code></pre>\n\n<p>When I got to the view, I get the following error:</p>\n\n<pre><code>undefined method `render' for #&lt;#&lt;Class:0x00000004e21158&gt;:0x00000005dbfe98&gt;\n</code></pre>\n\n<p>The partial exists, and the local variable is non-nil. Any idea why this might happen?</p>\n\n<p>Stack trace:</p>\n\n<pre><code>app/assets/javascripts/slider.js.erb:2:in `evaluate_source'\ntilt (1.3.3) lib/tilt/template.rb:209:in `instance_eval'\ntilt (1.3.3) lib/tilt/template.rb:209:in `evaluate_source'\ntilt (1.3.3) lib/tilt/template.rb:144:in `cached_evaluate'\ntilt (1.3.3) lib/tilt/template.rb:127:in `evaluate'\ntilt (1.3.3) lib/tilt/template.rb:76:in `render'\nsprockets (2.0.3) lib/sprockets/context.rb:175:in `block in evaluate'\nsprockets (2.0.3) lib/sprockets/context.rb:172:in `each'\nsprockets (2.0.3) lib/sprockets/context.rb:172:in `evaluate'\nsprockets (2.0.3) lib/sprockets/bundled_asset.rb:171:in `build_dependency_context_and_body'\nsprockets (2.0.3) lib/sprockets/bundled_asset.rb:135:in `dependency_context'\nsprockets (2.0.3) lib/sprockets/bundled_asset.rb:194:in `build_dependencies_paths_and_assets'\nsprockets (2.0.3) lib/sprockets/bundled_asset.rb:141:in `dependency_paths'\nsprockets (2.0.3) lib/sprockets/bundled_asset.rb:61:in `mtime'\nsprockets (2.0.3) lib/sprockets/asset.rb:58:in `block in encode_with'\nsprockets (2.0.3) lib/sprockets/asset.rb:57:in `each'\nsprockets (2.0.3) lib/sprockets/asset.rb:57:in `encode_with'\nsprockets (2.0.3) lib/sprockets/bundled_asset.rb:43:in `encode_with'\nsprockets (2.0.3) lib/sprockets/caching.rb:52:in `cache_asset'\nsprockets (2.0.3) lib/sprockets/environment.rb:82:in `build_asset'\nsprockets (2.0.3) lib/sprockets/base.rb:99:in `find_asset'\nsprockets (2.0.3) lib/sprockets/environment.rb:72:in `find_asset'\nsprockets (2.0.3) lib/sprockets/base.rb:110:in `[]'\nsprockets (2.0.3) lib/sprockets/bundled_asset.rb:200:in `block in build_dependencies_paths_and_assets'\nsprockets (2.0.3) lib/sprockets/bundled_asset.rb:194:in `each'\nsprockets (2.0.3) lib/sprockets/bundled_asset.rb:194:in `build_dependencies_paths_and_assets'\nsprockets (2.0.3) lib/sprockets/bundled_asset.rb:141:in `dependency_paths'\nsprockets (2.0.3) lib/sprockets/bundled_asset.rb:61:in `mtime'\nsprockets (2.0.3) lib/sprockets/asset.rb:58:in `block in encode_with'\nsprockets (2.0.3) lib/sprockets/asset.rb:57:in `each'\nsprockets (2.0.3) lib/sprockets/asset.rb:57:in `encode_with'\nsprockets (2.0.3) lib/sprockets/bundled_asset.rb:43:in `encode_with'\nsprockets (2.0.3) lib/sprockets/caching.rb:52:in `cache_asset'\nsprockets (2.0.3) lib/sprockets/environment.rb:82:in `build_asset'\nsprockets (2.0.3) lib/sprockets/trail.rb:102:in `find_asset_in_path'\nsprockets (2.0.3) lib/sprockets/base.rb:101:in `find_asset'\nsprockets (2.0.3) lib/sprockets/environment.rb:72:in `find_asset'\nsprockets (2.0.3) lib/sprockets/base.rb:110:in `[]'\nactionpack (3.1.0) lib/sprockets/helpers/rails_helper.rb:124:in `asset_for'\nactionpack (3.1.0) lib/sprockets/helpers/rails_helper.rb:28:in `block in javascript_include_tag'\nactionpack (3.1.0) lib/sprockets/helpers/rails_helper.rb:27:in `collect'\nactionpack (3.1.0) lib/sprockets/helpers/rails_helper.rb:27:in `javascript_include_tag'\napp/views/layouts/application.html.haml:7:in `_app_views_layouts_application_html_haml__2778507683501201875_51020080'\nactionpack (3.1.0) lib/action_view/template.rb:144:in `block in render'\nactivesupport (3.1.0) lib/active_support/notifications.rb:55:in `instrument'\nactionpack (3.1.0) lib/action_view/template.rb:142:in `render'\nactionpack (3.1.0) lib/action_view/renderer/template_renderer.rb:52:in `render_with_layout'\nactionpack (3.1.0) lib/action_view/renderer/template_renderer.rb:38:in `render_template'\nactionpack (3.1.0) lib/action_view/renderer/template_renderer.rb:12:in `block in render'\nactionpack (3.1.0) lib/action_view/renderer/abstract_renderer.rb:22:in `wrap_formats'\nactionpack (3.1.0) lib/action_view/renderer/template_renderer.rb:9:in `render'\nactionpack (3.1.0) lib/action_view/renderer/renderer.rb:36:in `render_template'\nactionpack (3.1.0) lib/action_view/renderer/renderer.rb:17:in `render'\nactionpack (3.1.0) lib/abstract_controller/rendering.rb:120:in `_render_template'\nactionpack (3.1.0) lib/action_controller/metal/streaming.rb:250:in `_render_template'\nactionpack (3.1.0) lib/abstract_controller/rendering.rb:114:in `render_to_body'\nactionpack (3.1.0) lib/action_controller/metal/renderers.rb:30:in `render_to_body'\nactionpack (3.1.0) lib/action_controller/metal/compatibility.rb:43:in `render_to_body'\nactionpack (3.1.0) lib/abstract_controller/rendering.rb:99:in `render'\nactionpack (3.1.0) lib/action_controller/metal/rendering.rb:16:in `render'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:40:in `block (2 levels) in render'\nactivesupport (3.1.0) lib/active_support/core_ext/benchmark.rb:5:in `block in ms'\n/home/mike/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/benchmark.rb:310:in `realtime'\nactivesupport (3.1.0) lib/active_support/core_ext/benchmark.rb:5:in `ms'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:40:in `block in render'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:78:in `cleanup_view_runtime'\nactiverecord (3.1.0) lib/active_record/railties/controller_runtime.rb:24:in `cleanup_view_runtime'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:39:in `render'\nactionpack (3.1.0) lib/action_controller/metal/implicit_render.rb:10:in `default_render'\nactionpack (3.1.0) lib/action_controller/metal/implicit_render.rb:5:in `send_action'\nactionpack (3.1.0) lib/abstract_controller/base.rb:167:in `process_action'\nactionpack (3.1.0) lib/action_controller/metal/rendering.rb:10:in `process_action'\nactionpack (3.1.0) lib/abstract_controller/callbacks.rb:18:in `block in process_action'\nactivesupport (3.1.0) lib/active_support/callbacks.rb:425:in `_run__4540075312289376507__process_action__207230359584297735__callbacks'\nactivesupport (3.1.0) lib/active_support/callbacks.rb:386:in `_run_process_action_callbacks'\nactivesupport (3.1.0) lib/active_support/callbacks.rb:81:in `run_callbacks'\nactionpack (3.1.0) lib/abstract_controller/callbacks.rb:17:in `process_action'\nactionpack (3.1.0) lib/action_controller/metal/rescue.rb:17:in `process_action'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:30:in `block in process_action'\nactivesupport (3.1.0) lib/active_support/notifications.rb:53:in `block in instrument'\nactivesupport (3.1.0) lib/active_support/notifications/instrumenter.rb:21:in `instrument'\nactivesupport (3.1.0) lib/active_support/notifications.rb:53:in `instrument'\nactionpack (3.1.0) lib/action_controller/metal/instrumentation.rb:29:in `process_action'\nactionpack (3.1.0) lib/action_controller/metal/params_wrapper.rb:201:in `process_action'\nactiverecord (3.1.0) lib/active_record/railties/controller_runtime.rb:18:in `process_action'\nactionpack (3.1.0) lib/abstract_controller/base.rb:121:in `process'\nactionpack (3.1.0) lib/abstract_controller/rendering.rb:45:in `process'\nactionpack (3.1.0) lib/action_controller/metal.rb:193:in `dispatch'\nactionpack (3.1.0) lib/action_controller/metal/rack_delegation.rb:14:in `dispatch'\nactionpack (3.1.0) lib/action_controller/metal.rb:236:in `block in action'\nactionpack (3.1.0) lib/action_dispatch/routing/route_set.rb:65:in `call'\nactionpack (3.1.0) lib/action_dispatch/routing/route_set.rb:65:in `dispatch'\nactionpack (3.1.0) lib/action_dispatch/routing/route_set.rb:29:in `call'\nrack-mount (0.8.3) lib/rack/mount/route_set.rb:152:in `block in call'\nrack-mount (0.8.3) lib/rack/mount/code_generation.rb:96:in `block in recognize'\nrack-mount (0.8.3) lib/rack/mount/code_generation.rb:75:in `optimized_each'\nrack-mount (0.8.3) lib/rack/mount/code_generation.rb:95:in `recognize'\nrack-mount (0.8.3) lib/rack/mount/route_set.rb:141:in `call'\nactionpack (3.1.0) lib/action_dispatch/routing/route_set.rb:531:in `call'\nwarden (1.1.0) lib/warden/manager.rb:35:in `block in call'\nwarden (1.1.0) lib/warden/manager.rb:34:in `catch'\nwarden (1.1.0) lib/warden/manager.rb:34:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/best_standards_support.rb:17:in `call'\nrack (1.3.5) lib/rack/etag.rb:23:in `call'\nrack (1.3.5) lib/rack/conditionalget.rb:25:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/head.rb:14:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/params_parser.rb:21:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/flash.rb:243:in `call'\nrack (1.3.5) lib/rack/session/abstract/id.rb:195:in `context'\nrack (1.3.5) lib/rack/session/abstract/id.rb:190:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/cookies.rb:326:in `call'\nactiverecord (3.1.0) lib/active_record/query_cache.rb:62:in `call'\nactiverecord (3.1.0) lib/active_record/connection_adapters/abstract/connection_pool.rb:477:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'\nactivesupport (3.1.0) lib/active_support/callbacks.rb:392:in `_run_call_callbacks'\nactivesupport (3.1.0) lib/active_support/callbacks.rb:81:in `run_callbacks'\nactionpack (3.1.0) lib/action_dispatch/middleware/callbacks.rb:28:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/reloader.rb:68:in `call'\nrack (1.3.5) lib/rack/sendfile.rb:101:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/remote_ip.rb:48:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/show_exceptions.rb:47:in `call'\nrailties (3.1.0) lib/rails/rack/logger.rb:13:in `call'\nrack (1.3.5) lib/rack/methodoverride.rb:24:in `call'\nrack (1.3.5) lib/rack/runtime.rb:17:in `call'\nactivesupport (3.1.0) lib/active_support/cache/strategy/local_cache.rb:72:in `call'\nrack (1.3.5) lib/rack/lock.rb:15:in `call'\nactionpack (3.1.0) lib/action_dispatch/middleware/static.rb:53:in `call'\nrailties (3.1.0) lib/rails/engine.rb:455:in `call'\nrailties (3.1.0) lib/rails/rack/content_length.rb:16:in `call'\nrailties (3.1.0) lib/rails/rack/log_tailer.rb:14:in `call'\nrack (1.3.5) lib/rack/handler/webrick.rb:59:in `service'\n/home/mike/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/webrick/httpserver.rb:111:in `service'\n/home/mike/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/webrick/httpserver.rb:70:in `run'\n/home/mike/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/webrick/server.rb:183:in `block in start_thread'\n</code></pre>\n",
            "last_activity_date": 1384868220,
            "question_id": 8370399,
            "score": 12,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "ruby",
                "erb"
            ],
            "title": "Rails js.erb file cannot find method &quot;render&quot;"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>myObj.name=value\n</code></pre>\n\n<p>or</p>\n\n<pre><code>myObj['name']=value     (Quotes are required)\n</code></pre>\n\n<p>Both of these are interchangeable.</p>\n\n<p><strong>Edit:</strong> I'm guessing you meant <code>myObj[prop] = value</code>, instead of myObj[name] = value. Second syntax works fine: <a href=\"http://jsfiddle.net/waitinforatrain/dNjvb/1/\">http://jsfiddle.net/waitinforatrain/dNjvb/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>myObj[prop] = value;\n</code></pre>\n\n<p>That should work. You mixed up the name of the variable and its value. But indexing an object with strings to get at its properties works fine in JavaScript.</p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>simple as this\n<code>myObj.name = value;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Your question is flawed -- that <em>does</em> work, but you made a mistake. You wrote \"<code>myObj[name]</code>\" when I'm quite sure you meant to write \"<code>myObj[prop]</code>\".</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When you create an object <code>myObj</code> as you have, think of it more like a dictionary. In this case, it has two keys, <code>name</code>, and <code>age</code>.</p>\n\n<p>You can access these dictionaries in two ways:</p>\n\n<ul>\n<li>Like an array (e.g. <code>myObj[name]</code>); or</li>\n<li>Like a property (e.g. <code>myObj.name</code>); do note that some properties are reserved, so the first method is preferred.</li>\n</ul>\n\n<p>You should be able to access it as a property without any problems. However, to access it as an array, you'll need to treat the key like a string.</p>\n\n<pre><code>myObj[\"name\"]\n</code></pre>\n\n<p>Otherwise, javascript will assume that <code>name</code> is a variable, and since you haven't created  a variable called <code>name</code>, it won't be able to access the key you're expecting.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can get the property the same way as you set it.</p>\n\n<pre><code>foo = {\n bar: \"value\"\n}\n</code></pre>\n\n<p>You set the value\n<code>foo[\"bar\"] = \"baz\";</code></p>\n\n<p>To get the value\n<code>foo[\"bar\"]</code></p>\n\n<p>will return \"baz\".</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could also create something that would be similar to a value object (vo);</p>\n\n<p>SomeModelClassNameVO.js;</p>\n\n<pre><code>function SomeModelClassNameVO(name,id) {\n    this.name = name;\n    this.id = id;\n}\n</code></pre>\n\n<p>Than you can just do;</p>\n\n<pre><code>   var someModelClassNameVO = new someModelClassNameVO('name',1);\n   console.log(someModelClassNameVO.name);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>It's difficult to explain the case by words, let me give an example for this</p>\n\n<pre><code>myObj = {\n    'name': 'Umut',\n    'age' : 34\n}\n\nprop = 'name'\nvalue = 'Onur'\n\nmyObj[name] = value     (This doesnot work)\n\neval('myObj.'+name) = value;   (Bad coding ;) )\n</code></pre>\n\n<p>How can I set a variable property with variable value in Javascript object?</p>\n\n<p>What do you suggest?</p>\n\n<p>tHanks...</p>\n",
            "last_activity_date": 1367084113,
            "question_id": 6439915,
            "score": 12,
            "tags": [
                "javascript",
                "object",
                "properties",
                "set"
            ],
            "title": "How to set a Javascript object values dynamically?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>It's used to define an anonymous function and then call it. I haven't tried but my best guess for why there are parens around the block is because JavaScript needs them to understand the function call.</p>\n\n<p>It's useful if you want to define a one-off function in place and then immediately call it. The difference between using the anonymous function and just writing the code out is scope. All the variables in the anonymous function will go out of scope when the function's over with (unless the vars are told otherwise, of course). This can be used to keep the global or enclosing namespace clean, to use less memory long-term, or to get some \"privacy\".</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It is an \"anonymous self executing function\" or \"immediately-invoked-function-expression\". Nice explanation from Ben Alman <a href=\"http://benalman.com/news/2010/11/immediately-invoked-function-expression/\" rel=\"nofollow\">here</a>.</p>\n\n<p>I use the pattern when creating namespaces</p>\n\n<pre><code>var APP = {};\n\n(function(context){\n\n\n\n})(APP);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h2>This defines a function closure</h2>\n\n<p>This is used to create a function closure with private functionality and variables that aren't globally visible.</p>\n\n<p>Consider the following code:</p>\n\n<pre><code>(function(){\n    var test = true;\n})();\n</code></pre>\n\n<p>variable <code>test</code> is not visible anywhere else but within the function closure where it's defined.</p>\n\n<h2>What is a closure anyway?</h2>\n\n<p>Function closures make it possible for various scripts not to interfere with each other even though they define similarly named variables or private functions. Those privates are visible and accessible only within closure itself and not outside of it.</p>\n\n<p>Check this code and read comments along with it:</p>\n\n<pre><code>// public part\nvar publicVar = 111;\nvar publicFunc = function(value) { alert(value); };\nvar publicObject = {\n    // no functions whatsoever\n};\n\n    // closure part\n    (function(pubObj){\n        // private variables and functions\n        var closureVar = 222;\n        var closureFunc = function(value){\n            // call public func\n            publicFunc(value);\n            // alert private variable\n            alert(closureVar);\n        };\n\n        // add function to public object that accesses private functionality\n        pubObj.alertValues = closureFunc;\n\n        // mind the missing \"var\" which makes it a public variable\n        anotherPublic = 333;\n\n    })(publicObject);\n\n// alert 111 &amp; alert 222\npublicObject.alertValues(publicVar);\n\n// try to access varaibles\nalert(publicVar); // alert 111\nalert(anotherPublic); // alert 333\nalert(typeof(closureVar)); // alert \"undefined\"\n</code></pre>\n\n<p>Here's a <a href=\"http://jsfiddle.net/6LMcP/\">JSFiddle running code</a> that displays data as indicated by comments in the upper code.</p>\n\n<h2>What it actually does?</h2>\n\n<p>As you already know this</p>\n\n<ol>\n<li><p>creates a function:</p>\n\n<pre><code>function() { ... }\n</code></pre></li>\n<li><p>and immediately executes it:</p>\n\n<pre><code>(func)();\n</code></pre></li>\n<li><p>this function may or may not accept additional parameters.</p></li>\n</ol>\n\n<p>jQuery plugins are usually defined this way, by defining a function with one parameter that plugin manipulates within:</p>\n\n<pre><code>(function(paramName){ ... })(jQuery);\n</code></pre>\n\n<p>But the main idea is still the same: <strong>define a function closure with private definitions that can't directly be used outside of it.</strong></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Such a construct is useful when you want to make a closure - a construct helps create a private \"room\" for variables inaccessible from outside. See more in this chapter of \"JavaScript: the good parts\" book:\n<a href=\"http://books.google.com/books?id=PXa2bby0oQ0C&amp;pg=PA37&amp;lpg=PA37&amp;dq=crockford+closure+called+immediately&amp;source=bl&amp;ots=HIlku8x4jL&amp;sig=-T-T0jTmf7_p_6twzaCq5_5aj3A&amp;hl=lv&amp;ei=lSa5TaXeDMyRswa874nrAw&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBUQ6AEwAA#v=onepage&amp;q&amp;f=false\" rel=\"nofollow\">http://books.google.com/books?id=PXa2bby0oQ0C&amp;pg=PA37&amp;lpg=PA37&amp;dq=crockford+closure+called+immediately&amp;source=bl&amp;ots=HIlku8x4jL&amp;sig=-T-T0jTmf7_p_6twzaCq5_5aj3A&amp;hl=lv&amp;ei=lSa5TaXeDMyRswa874nrAw&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBUQ6AEwAA#v=onepage&amp;q&amp;f=false</a></p>\n\n<p>In the example shown on top of page 38, you see that the variable \"status\" is hidden within a closure and cannot be accessed anyway else than calling the <code>get_status()</code> method.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Read this > <a href=\"http://stackoverflow.com/questions/4484289/id-like-to-understand-the-jquery-plugin-syntax/4484336#4484336\">I&#39;d like to understand the jQuery plugin syntax</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm not sure if this question is answered already, so apologies if I'm just repeating stuff.</p>\n\n<p>In JavaScript, <strong>only functions</strong> introduce new <strong>scope</strong>. By wrapping your code in an immediate function, all variables you define exist only in this or lower scope, but <strong>not in global scope</strong>.</p>\n\n<p>So this is a good way to <strong>not pollute the global scope</strong>. </p>\n\n<p>There should be only a few global variables. Remember that every global is a property of the <code>window</code> object, which already has a lot of properties by default. Introducing a new scope also avoids collisions with default properties of the <code>window</code> object.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>That construct is known as a self-executing anonymous function, which is actually not a very good name for it, here is what happens (and why the name is not a good one). This:</p>\n\n<pre><code>function abc() {\n    //stuff\n}\n</code></pre>\n\n<p>Defines a function called <code>abc</code>, if we wanted an anonymous function (which is a very common pattern in javascript), it would be something along the lines of:</p>\n\n<pre><code>function() {\n    //stuff\n}\n</code></pre>\n\n<p>But, if you have this you either need to associate it with a variable so you can call it (which would make it not-so-anonymous) or you need to execute it straight away. We can try to execute it straight away by doing this:</p>\n\n<pre><code>function() {\n    //stuff\n}();\n</code></pre>\n\n<p>But this won't work as it will give you a syntax error. The reason you get a syntax error is as follows. When you create a function with a name (such as <strong>abc</strong> above), that name becomes a reference to a function <strong>expression</strong>, you can then execute the expression by putting () after the name e.g.: <code>abc()</code>. The act of declaring a function does not create an expression, the function declaration is infact a statement rather than an expression. Essentially, expression are executable and statements are not (as you may have guessed). So in order to execute an anonymous function you need to tell the parser that it is an expression rather than a statement. <strong>One</strong> way of doing this (not the only way, but it has become convention), is to wrap your anonymous function in a set of <code>()</code> and so you get your construct:</p>\n\n<pre><code>(function() {\n    //stuff\n})();\n</code></pre>\n\n<p>An anonymous function which is immediately executed (you can see how the name of the construct is a little off since it's not really an anonymous function that executes itself but is rather an anonymous function that is executed straight away).</p>\n\n<p>Ok, so why is all this useful, one reason is the fact that it lets you stop your code from polluting the global namespace. Because functions in javascript have their own scope any variable inside a function is not visible globally, so if we could somehow write all our code inside a function the global scope would be safe, well our self-executing anonymous function allows us to do just that. Let me borrow an example from John Resig's old book:</p>\n\n<pre><code>// Create a new anonymous function, to use as a wrapper\n(function(){\n  // The variable that would, normally, be global\n  var msg = \"Thanks for visiting!\";\n  // Binding a new function to a global object\n  window.onunload = function(){\n    // Which uses the 'hidden' variable\n    alert( msg );\n  };\n  // Close off the anonymous function and execute it\n})();\n</code></pre>\n\n<p>All our variables and functions are written within our self-executing anonymous function, our code is executed in the first place because it is inside a self-executing anonymous function. And due to the fact that javascript allows closures, i.e. essentially allows functions to access variables that are defined in an outer function, we can pretty much write whatever code we like inside the self-executing anonymous function and everything will still work as expected. </p>\n\n<p>But wait there is still more :). This construct allows us to solve a problem that sometimes occurs when using closures in javascript. I will once again let John Resig explain, I quote:</p>\n\n<p><em>Remember that closures allow you to reference variables that exist within the parent function. However, it does not provide the value of the variable at the time it is created; it provides the last value of the variable within the parent function. The most common issue under which you\u2019ll see this occur is during a for loop. There is one variable being used as the iterator (e.g., i). Inside of the for loop, new functions are being created that utilize the closure to reference the iterator again. The problem is that by the time the new closured functions are called, they will reference the last value of the iterator (i.e., the last position in an array), not the value that you\nwould expect. Listing 2-16 shows an example of using anonymous functions to induce scope, to create an instance where expected closure is possible.</em></p>\n\n<pre><code>// An element with an ID of main\nvar obj = document.getElementById(\"main\");\n\n// An array of items to bind to\nvar items = [ \"click\", \"keypress\" ];\n\n// Iterate through each of the items\nfor ( var i = 0; i &lt; items.length; i++ ) {\n  // Use a self-executed anonymous function to induce scope\n  (function(){\n    // Remember the value within this scope\n    var item = items[i];\n    // Bind a function to the element\n    obj[ \"on\" + item ] = function() {\n      // item refers to a parent variable that has been successfully\n      // scoped within the context of this for loop\n      alert( \"Thanks for your \" + item );\n    };\n  })();\n}\n</code></pre>\n\n<p>Essentially what all of that means is this, people often write naive javascript code like this (this is the naive version of the loop from above):</p>\n\n<pre><code>for ( var i = 0; i &lt; items.length; i++ ) {\n    var item = items[i];\n    // Bind a function to the elment\n    obj[ \"on\" + item ] = function() {\n      alert( \"Thanks for your \" + items[i] );\n    };\n}\n</code></pre>\n\n<p>The functions we create within the loop are closures, but unfortunately they will lock in the <strong>last</strong> value of <code>i</code> from the enclosing scope (in this case it will probably be 2 which is gonna cause trouble). What we likely want is for each function we create within the loop to lock in the value of i at the time we create it. This is where our self-executing anonymous function comes in, here is a similar but perhaps easier to understand way of rewriting that loop:</p>\n\n<pre><code>for ( var i = 0; i &lt; items.length; i++ ) {\n  (function(index){\n    obj[ \"on\" + item ] = function() {\n      alert( \"Thanks for your \" + items[index] );\n    };\n  })(i);\n}\n</code></pre>\n\n<p>Because we invoke our anonymous function on every iteration, the parameter we pass in is locked in to the value it was at the time it was passed in, so all the functions we create within the loop will work as expected.</p>\n\n<p>There you go, two good reasons to use the self-executing anonymous function construct and why it actually works in the first place.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I see this all the time in javascript sources but i've never really found out the real reason this construct is used. Why is this needed?</p>\n\n<pre><code>(function() {\n\n    //stuff\n\n})();\n</code></pre>\n\n<p>Why is this written like this? Why not just use <code>stuff</code> by itself and not in a function?</p>\n\n<p>EDIT: i know this is defining an anonymous function and then calling it, but <em>why</em>?</p>\n",
            "last_activity_date": 1404280170,
            "question_id": 5815757,
            "score": 12,
            "tags": [
                "javascript",
                "function"
            ],
            "title": "Why is this function wrapped in parentheses, followed by parentheses?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I have found that <strong><em>Firefox can only use window.close()</em></strong> when script has been called to open that window in the first place. </p>\n\n<p>Read <a href=\"https://developer.mozilla.org/en/window.close\" rel=\"nofollow\">here</a> for more info. </p>\n\n<p>So if you didn't use a script to open that window, it can't be done.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Ive been using something like this:</p>\n\n<pre><code>&lt;head&gt;\n&lt;script language=\"javascript\" &gt;\nfunction ddd() {\n\nnetscape.security.PrivilegeManager.enablePrivilege(\"UniversalBrowserWrite\");\n\nwindow.open('http://www.google.com','mywindow','width=400,height=200');\nwindow.close();\n}\n&lt;/script&gt; \n&lt;/head&gt;\n&lt;body&gt;\n&lt;input type= \"button\" name=\"new\" value=\"New Window\" onClick=\"ddd()\"&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Is seems that they are working on Chrome Kiosk ( Fullscreen ) mode. Tried successfully. Up to 19 as of now.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I tried to review all topics about window.close() and have found that:\nIE/Chrome/Safari(?) accept closure if we open something on _self, so generally</p>\n\n<blockquote>\n  <p>top.open('','_self',''); top.close();</p>\n</blockquote>\n\n<p>does the work.\nFF (r 19 when writing this) is more strict about this and somehow forbids any probe like above. The good answer was found in related thread, that user must manually allow FF to have solution above working</p>\n\n<blockquote>\n  <p>about.config -> dom.allow_scripts_to_close_windows = true;</p>\n</blockquote>\n\n<h2>I was quite desperated, as Customer requested window closure on completed operation.</h2>\n\n<p>Big bravo to FF dev team. This is exactly how it should work; pity only is that is hard to find it.</p>\n\n<p>Pawel.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I want to close window on logout. I have used </p>\n\n<ul>\n<li><code>window.close()</code>, </li>\n<li><code>self.close()</code>,</li>\n<li><code>var win = window.open(\"\",\"_self\"); win.close();</code></li>\n<li><code>window.parent.close();</code></li>\n</ul>\n\n<p>These all above i have used that all work in IE but in Mozilla Firefox not working.</p>\n\n<p>Please give me solution for that.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1405077698,
            "question_id": 3465191,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "window.close(), self.close() not working on mozilla firefox"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>In order to solve your problem, always keep a <strong>br</strong> element as the last element of your contenteditable div. This will ensure predictable behavior when injecting a br element vs. the browser default of injecting div elements. You can check the <strong>lastChild</strong> on keyup and mouseup to make sure it's a br element. Assuming you have a document like:</p>\n\n<pre><code>&lt;div id=\"editable\" contenteditable=\"true\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>You can use the following JavaScript (w/ jQuery 1.4+) to keep a br element as the last element and inject a br element instead of div div:</p>\n\n<pre><code>$(function(){\n\n  $(\"#editable\")\n\n    // make sure br is always the lastChild of contenteditable\n    .live(\"keyup mouseup\", function(){\n      if (!this.lastChild || this.lastChild.nodeName.toLowerCase() != \"br\") {\n        this.appendChild(document.createChild(\"br\"));\n      }\n    })\n\n    // use br instead of div div\n    .live(\"keypress\", function(e){\n      if (e.which == 13) {\n        if (window.getSelection) {\n          var selection = window.getSelection(),\n              range = selection.getRangeAt(0),\n              br = document.createElement(\"br\");\n          range.deleteContents();\n          range.insertNode(br);\n          range.setStartAfter(br);\n          range.setEndAfter(br);\n          range.collapse(false);\n          selection.removeAllRanges();\n          selection.addRange(range);\n          return false;\n        }\n      }\n    });\n\n});\n</code></pre>\n\n<p>Tested on Apple OS X w/ Google Chrome 7, Mozilla Firefox 3.6, Apple Safari 5). Try using <a href=\"http://code.google.com/p/ierange/\">ierange</a> to get this to work in Windows Internet Explorer.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I would bind a function to the keyup event to delete  and change  to <br> using regEx. So even if it creates strange markup, it will be fixed.</p>\n\n<p>Using jQuery:</p>\n\n<pre><code>$('.myEditable').keyup(function(){\n   var sanitazed = $(this).text().replace(/&lt;div[^&lt;]*?&gt;/g, '').replace(/&lt;\\/div[^&lt;]*?&gt;/g, '&lt;br&gt;');\n   $(this).text(sanitazed);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've written a bit of code in my keyboard event handler to insert a <code>&lt;br&gt;</code> in response to the press of the Enter key:</p>\n\n<pre><code>event.preventDefault();\ndocument.execCommand('InsertHTML', true, '&lt;br&gt;');\n</code></pre>\n\n<p>This only works if the cursor is between two Letters, if its on the end i need two <code>&lt;br&gt;</code>-Elements. Can i detect if i'm on the end of a Line? Or some other working idea for the Enter problem?</p>\n\n<p>I also tried to catch the normal key-event (wothout the ctrl-Key pressed) and create a keyboard-event with JS where the Enter Key is pressed together with the ctrl. But this dosn't work\u2026</p>\n\n<p>It only has to Work in Webkit/Safari\u2026</p>\n",
            "last_activity_date": 1405053524,
            "question_id": 3080529,
            "score": 12,
            "tags": [
                "javascript",
                "html5",
                "contenteditable"
            ],
            "title": "Make a &lt;br&gt; instead of &lt;div&gt;&lt;/div&gt; by pressing Enter on a contenteditable"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can send any response you want, being it plain text, HTML, an image... whatever! It's up to you how to handle it when you receive it.</p>\n\n<p>But... you cannot assign a binary image to the <code>&lt;IMG&gt;</code> src attribute. You'd better just return the URL to the image and assign that instead - well, to be honest, there are some encodings to embed images in the SRC, but they are not cross-browser so you'll want to stay away from them.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What you can do, if you are trying to generate an image on the fly, is to just do:</p>\n\n<pre><code>&lt;img src=\"http://myurl/myfile.php?id=3\" /&gt;\n</code></pre>\n\n<p>then you can send the data with the appropriate mimetype.</p>\n\n<p>If you really want to send an image, then you may want to look at the HTML5 canvas tag, but I am not certain how excanvas would work with this, for being cross-platform.</p>\n\n<p>You could write to the canvas, but it would be more efficient to just use the img tag.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It might not be possible to <strong>stream</strong> binary data, but you can use Ajax to retrieve binary data.</p>\n\n<p>This is possible using one of two methods: Javascript <a href=\"https://developer.mozilla.org/en/JavaScript_typed_arrays\" rel=\"nofollow\">Typed Arrays</a> or an XMLHttpResponse <a href=\"https://developer.mozilla.org/en/DOM/XMLHttpRequest#overrideMimeType%28%29\" rel=\"nofollow\">overrideMimeType</a> hack. Have a read of a good article on MDN \u2013 these examples are taken from there: <a href=\"http://developer.mozilla.org/en/DOM/XMLHttpRequest/Sending_and_Receiving_Binary_Data\" rel=\"nofollow\">Sending and Receiving Binary Data</a></p>\n\n<p>The Typed Array method looks like this:</p>\n\n<pre><code>var oReq = new XMLHttpRequest();\noReq.open(\"GET\", \"/myfile.png\", true);\noReq.responseType = \"arraybuffer\";\n\noReq.onload = function (oEvent) {\n  var arrayBuffer = oReq.response; // Note: not oReq.responseText\n  if (arrayBuffer) {\n    var byteArray = new Uint8Array(arrayBuffer);\n    for (var i = 0; i &lt; byteArray.byteLength; i++) {\n      // do something with each byte in the array\n    }\n  }\n};\n\noReq.send(null);\n</code></pre>\n\n<p>Typed Arrays are not supported in IE &lt; 10, Firefox &lt; 4, Chrome &lt; 7, Safari &lt; 5.1 and Opera &lt; 11.6, and <a href=\"http://caniuse.com/typedarrays\" rel=\"nofollow\">mobile support is shaky but improving</a>.</p>\n\n<p>The second method uses an XMLHttpRequest method called overrideMimeType to allow the binary data to be passed through unmodified.</p>\n\n<pre><code>var req = new XMLHttpRequest();\nreq.open('GET', '/myfile.png', false);\n// XHR binary charset opt by Marcus Granado 2006 [http://mgran.blogspot.com]\nreq.overrideMimeType('text\\/plain; charset=x-user-defined');\nreq.send(null);\nif (req.status != 200) return '';\n// do stuff with req.responseText;\n</code></pre>\n\n<p>You get an unparsed binary string, upon which you can use <code>var byte = filestream.charCodeAt(x) &amp; 0xff;</code> to retrieve a specific byte.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>This is an extension to Tom Ashworth's response (which helped to put me on the right track with the issue I was facing). This allows you to just get the filestream (FileStreamResult if you are using asp.net mvc) and set it to the img src, which is cool.</p>\n\n<pre><code>var oReq = new XMLHttpRequest();\noReq.open(\"post\", '/somelocation/getmypic', true );        \noReq.responseType = \"blob\";\noReq.onload = function ( oEvent )\n{\n    var blob = oReq.response;\n    var imgSrc = URL.createObjectURL( blob );                        \n    var $img = $( '&lt;img/&gt;', {                \n        \"alt\": \"test image\",\n        \"src\": imgSrc\n    } ).appendTo( $( '#bb_theImageContainer' ) );\n    window.URL.revokeObjectURL( imgSrc );\n};\noReq.send( null );\n</code></pre>\n\n<p>The basic idea is that the data is returned untampered with, it is placed in a blob and then a url is created to that object in memory. See <a href=\"http://stackoverflow.com/a/10646659/746754\">here</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data\" rel=\"nofollow\">here</a>. Note supported browsers. </p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Hi I'm wondering if there's anyway to stream a binary response in AJAX?  This would be an ultimate solution otherwise I would need to realize the binary image to a file then stream that file to the user with a different URL.</p>\n\n<pre><code>new Ajax.Request('/viewImage?id=123', {\n  // request returns a binary image inputstream\n  onSuccess: function(transport) {\n      // text example\n      // alert(transport.responseText)\n\n      // QUESTION: is there a streaming binary response?\n      $('imgElem').src = transport.responseBinary;\n  },\n  onFailure: function(transport) {\n      // handle failure\n  }\n});\n</code></pre>\n",
            "last_activity_date": 1426086547,
            "question_id": 1645847,
            "score": 11,
            "tags": [
                "javascript",
                "ajax",
                "prototypejs"
            ],
            "title": "Ajax Binary Response"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>To detect whether your server is down or not, you can include an empty script file from your own domain. When the server is down, the <code>onerror</code> event handler will fire:</p>\n\n<pre><code>var el = document.createElement('script');\nel.onerror = errorFunction;\nel.src = \"somebogusscript.js?\" + new Date().getTime();\ndocument.body.appendChild(el);\n</code></pre>\n\n<p>Note: don't forget to add a random string to the <code>src</code> attribute to avoid the client using a cached version (which could stop a look at the server at all).</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Perhaps you could try <code>onErrorUpdate</code> for the event handler? I couldn't see an <code>onError</code> handler for iFrames. If that doesn't work, you could try <code>onLoad</code> and then check the source of the iframe or the title of it for a 404 message.</p>\n\n<p>Such as:\n<code>if (frameDoc.title == 'title the server sends for 404') {</code></p>\n\n<hr>\n\n<p>Source:</p>\n\n<p><a href=\"http://bytes.com/topic/javascript/answers/166288-catch-404-when-using-iframe\" rel=\"nofollow\">http://bytes.com/topic/javascript/answers/166288-catch-404-when-using-iframe</a></p>\n\n<p>iFrame Methods: <a href=\"http://www.java2s.com/Code/HTMLCSSReference/HTML-Tag-Reference/iframeJavaScriptMethods.htm\" rel=\"nofollow\">http://www.java2s.com/Code/HTMLCSSReference/HTML-Tag-Reference/iframeJavaScriptMethods.htm</a></p>\n\n<p>iFrame Properties: <a href=\"http://www.java2s.com/Code/HTMLCSSReference/HTML-Tag-Reference/iframeJavaScriptProperties.htm\" rel=\"nofollow\">http://www.java2s.com/Code/HTMLCSSReference/HTML-Tag-Reference/iframeJavaScriptProperties.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One technique is to set a JavaScript timeout when you make the request.  If your timeout fires before the iframe onload event, the content didn't load.  You could then set iframe.src to about:blank, delete, or reuse the iframe.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an <code>&lt;iframe&gt;</code> that other sites can include so their users can <code>POST</code> a form back to my site. I'd like to handle gracefully the cases where my site is down or my server can't serve the <code>&lt;iframe&gt;</code> contents (that is, a response timeout or a 4xx or 5xx error).  I tried adding an <code>onError</code> to the <code>&lt;iframe&gt;</code> object, but that didn't seem to do anything:</p>\n\n<pre><code>showIFrame = function() {\n  var iframe = document.createElement('iframe');\n  iframe.id = 'myIFrame';\n  iframe.src = 'http://myserver.com/someURLThatFailsToLoad';\n  iframe.onError = iframe.onerror = myHandler;\n  document.body.appendChild(iframe);\n};\n\nmyHandler = function(error) {\n  document.getElementById('myIFrame').style.display = 'none';\n  console.error('Error loading iframe contents: ' + error);\n  return true;\n};\n</code></pre>\n\n<p>If my server returns a <code>404</code> I just get the contents of the not-found page in my <code>&lt;iframe&gt;</code>. In fact, that error handler isn't ever triggered. Is there a way to make this work?</p>\n\n<p>(I'm currently testing in Chrome, but I'd like it to also work for FF and IE >= 7.)</p>\n",
            "last_activity_date": 1334568111,
            "question_id": 3705083,
            "score": 9,
            "tags": [
                "javascript",
                "html",
                "iframe",
                "error-handling"
            ],
            "title": "How can I handle errors in loading an iframe?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You could use a class selector. <a href=\"http://jquery.com/\" rel=\"nofollow\">jquery</a> might greatly simplify your life here. So you could apply a special class to the control:</p>\n\n<pre><code>&lt;asp:LinkButton ID=\"foo\" CssClass=\"foo\" runat=\"server\" Text=\"foo\" /&gt;\n</code></pre>\n\n<p>and in your external javascript file once the DOM is ready you could reference the button using a class selector:</p>\n\n<pre><code>$(function() {\n    var fooButton = $('.foo');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I can suggest 2 ways.</p>\n\n<h2>First way</h2>\n\n<p>define your variables before call the javascript.</p>\n\n<pre><code>var ButtonXXXID = &lt;%=buttonXXX.ClientID%&gt;\n// and now include your javascript and use the variable ButtonXXXID\n</code></pre>\n\n<h2>Second way</h2>\n\n<p>in the external javascript file, write your code as:</p>\n\n<pre><code>function oNameCls(ControlId1) {\n\n    this.ControlId1 = ControlId1;\n\n    this.DoYourWork1 = function() {\n        // use the control id.\n        // this.ControlId1\n    }   \n}\n</code></pre>\n\n<p>And call your actions like. </p>\n\n<pre><code>&lt;script&gt;\n    // init - create\n    var &lt;%=this.ClientID%&gt;MyCls = new oNameCls(&lt;%=Control1.ClientID%&gt;);\n    // do your work\n    &lt;%=this.ClientID%&gt;MyCls.DoYourWork1();\n&lt;/script&gt;\n</code></pre>\n\n<p>calling the action this way you prevent overwrite one action from one control with the same action from other controls on the same page.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>in script file (<code>test.js</code>)</p>\n\n<pre><code>function test(ControlID1) {\n  var controlId = document.getElementById(ControlID1);\n  controlId.onchange = function () {        \n    alert(controlId.value);\n    }\n  }\n</code></pre>\n\n<p>in <code>.aspx</code> file</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n   var callTest = test('&lt;%=txtSelected.ClientID%&gt;');\n   window.onload = callTest;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I use the following in my .js file when I have no other better choice.</p>\n\n<p>$(\"[id$='buttonXXX'])</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>when i use embedded javascript functions i can get client id of elements with this code</p>\n\n<p>for example : document.getElementById('&lt;%=buttonXXX.ClientID%>' )</p>\n\n<p>but now i am using external javascript file for caching and faster rendering</p>\n\n<p>but this code does not work any more for getting client id's of elements</p>\n\n<p>it gives error</p>\n\n<p>how can i get client ids of elements at external javascript file</p>\n\n<p>using</p>\n\n<p>asp.net 2.0 , netframework 3.5 , c# , iis 7.5</p>\n\n<p>any help is appreciated</p>\n\n<p>thank you</p>\n",
            "last_activity_date": 1411271694,
            "question_id": 3845900,
            "score": 7,
            "tags": [
                "javascript",
                "asp.net",
                "client",
                "element"
            ],
            "title": "How to get asp.net client id at external javascript file"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>First, I want to note that the approach I mentionned in my question is bad according to almost tutorials talking about AJAX in wordpress. So I decided to change it based on the advice of <code>hakre</code> and his link : <a href=\"http://codex.wordpress.org/AJAX_in_Plugins#Ajax_on_the_Viewer-Facing_Side\" rel=\"nofollow\">http://codex.wordpress.org/AJAX_in_Plugins#Ajax_on_the_Viewer-Facing_Side</a>.</p>\n\n<p>In other words, the best way for my situation is to use the built-in AJAX in Wordpress, using the wp-admin/admin-ajax.php. AJAX requests should be directed to this file. I know the \u201cadmin\u201d part of the file name is a bit misleading. but all requests in the front-end (the viewing side) as well as the admin panel can be processed in admin-ajax.php, with a lot of benefits, especially for security.</p>\n\n<p>The steps are:</p>\n\n<p><strong>1.The JavaScript code that submits the AJAX request should look something like this:</strong></p>\n\n<pre><code>    $(document).ready(function() {\n        $('.select2').change(function(e) {\n    e.preventDefault();\n\n    var v = $('.select2 option:selected').val(); \n\n\n            $.ajax({\n                type: \"GET\",\n                url: \"wp-admin/admin-ajax.php\", // check the exact URL for your situation\n                dataType: 'html',\n                data: ({ action: 'nextPrevious', id: v}),\n                success: function(data){\n\n                $('#nav-above').html(data);\n\n                },\n                error: function(data)  \n                {  \n                alert(\"Your browser broke!\");\n                return false;\n                }  \n\n            }); \n\n    }); \n}); \n</code></pre>\n\n<p>Note that you should respect the requeriements of Wordpress in putting the JS script (generally in footer.php before wp-footer() )</p>\n\n<p><strong>2- Handling the action:</strong></p>\n\n<p>in <code>functions.php</code> of your theme (or directly in your plugin file), add:</p>\n\n<pre><code>add_action('wp_ajax_nextPrevious', 'nextPrevious');\nadd_action('wp_ajax_nopriv_nextPrevious', 'nextPrevious');\n</code></pre>\n\n<p>and define in the same file <code>nextPrevious</code> callback function like this:</p>\n\n<pre><code>function nextPrevious() {\n\n$p= $_GET['id'];\n$my_query = new WP_Query();\n\n$my_query-&gt;query(array( 'post__in' =&gt; array($p)));\n\nif ($my_query-&gt;have_posts()) : while ($my_query-&gt;have_posts()) : $my_query-&gt;the_post(); ?&gt;\n\n\n\n &lt;div class=\"nav-previous\"&gt;&lt;?php previous_post_link( '%link', '&lt;img height=\"34\" src=\"' . get_bloginfo(\"template_directory\") . '/images/previous.png\" /&gt;' ); ?&gt;&lt;/div&gt;\n\n&lt;div class=\"nav-next\"&gt;&lt;?php next_post_link( '%link', '&lt;img height=\"34\" src=\"' . get_bloginfo(\"template_directory\") . '/images/next.png\" /&gt;' ); ?&gt;&lt;/div&gt;\n\n&lt;?php endwhile;\nendif;                  \n\nwp_reset_query();\n\ndie();\n\n}\n</code></pre>\n\n<p>Do not forget the die function, it is mandatory.</p>\n\n<p>For more details about AJAX in Wordpress, Google first page tutorials are good.</p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>In my wordpress site, I have inside the loop of single.php , a select tag in which the options are the posts of the current category returned via a custom query.</p>\n\n<p>On changing selected option, I have many javascript functions that are working well, but the last function among them (<code>function f_next-previous</code>), doesnt seem to work.</p>\n\n<p>The aim of this function is to update the next and previous links without reloading the page.</p>\n\n<p>The code relative to navigation links (next and previous) in my template is working well and is above:</p>\n\n<pre><code>&lt;div id=\"nav-above\" class=\"navigation\"&gt;\n\n&lt;div class=\"nav-previous\"&gt;&lt;?php previous_post_link( '%link', '&lt;img height=\"34\" src=\"' . get_bloginfo(\"template_directory\") . '/images/previous.png\" /&gt;' ); ?&gt;&lt;/div&gt;\n\n&lt;div class=\"nav-next\"&gt;&lt;?php next_post_link( '%link', '&lt;img height=\"34\" src=\"' . get_bloginfo(\"template_directory\") . '/images/next.png\" /&gt;' ); ?&gt;&lt;/div&gt;\n\n&lt;/div&gt;&lt;!-- #nav-above --&gt;   \n</code></pre>\n\n<p>The javascript code of this function is:</p>\n\n<pre><code>function f_next-previous(id)\n{\n       $.ajax({  \n       cache: true,  \n       type: \"GET\",  \n       timeout: 5000,   \n       url: 'wp-content/themes/twentyten/pages/next-previous.php?p='+id,  \n       success: function(msg)  \n        {  \n\n    $('#nav-above').html(msg);\n\n        },  \n        error: function(msg)  \n        {  \n           alert(\"Your browser broke!\");\n                return false;\n        }  \n});\n\n}\n</code></pre>\n\n<p>The file <code>next-previous.php</code> content is :</p>\n\n<pre><code>&lt;?php\n$p=$_GET['p']; \nrequire( '../../../wp-load.php' );\n\n\n\n$my_query = new WP_Query();\n$my_query-&gt;query(array( 'post__in' =&gt; array($p)));\n\nif ($my_query-&gt;have_posts()) : while ($my_query-&gt;have_posts()) : $my_query-&gt;the_post();  ?&gt;\n\n\n&lt;div class=\"nav-previous\"&gt;&lt;?php previous_post_link( '%link', '&lt;img height=\"34\" src=\"' . get_bloginfo(\"template_directory\") . '/images/previous.png\" /&gt;' ); ?&gt;&lt;/div&gt;\n&lt;div class=\"nav-next\"&gt;&lt;?php next_post_link( '%link', '&lt;img height=\"34\" src=\"' . get_bloginfo(\"template_directory\") . '/images/next.png\" /&gt;' ); ?&gt;&lt;/div&gt;\n\n&lt;?php\n\nendwhile;\nendif;\n\n?&gt;\n</code></pre>\n\n<p>While testing this php file by giving it a value to the p parameter, it gives logical result in the browser. Jquery and function scripts are well included and all AJAX in my website is ok. What am I missing in this work????</p>\n\n<p><strong>UPDATE:</strong>\nNote that the part of my single.php file responsible of triggering the AJAX call is:</p>\n\n<pre><code>   &lt;form method=\"post\" action=\"\"&gt;  \n\n    &lt;select class=\"select2\"  name=\"\" id=\"\" &gt;\n    &lt;option value=\"&lt;?php the_ID();?&gt;\"&gt;&lt;?php the_title();?&gt;&lt;/option&gt;\n\n    &lt;?php \nglobal $post;\n$paged = get_query_var( 'paged' ) ? get_query_var( 'paged' ) : 1;\n$myposts = get_posts(\"paged=$paged&amp;category=4\");\n\nforeach($myposts as $post) :?&gt;\n\n        &lt;option value=\"&lt;?php the_ID();?&gt;\"&gt;&lt;?php the_title();?&gt;&lt;/option&gt;\n\n        &lt;?php endforeach;\n        wp_reset_postdata(); ?&gt; \n\n        &lt;/select&gt;\n        &lt;/form&gt;\n</code></pre>\n",
            "last_activity_date": 1423571557,
            "question_id": 15175020,
            "score": 5,
            "tags": [
                "javascript",
                "ajax",
                "wordpress"
            ],
            "title": "Dynamically changing navigation links (next and previous) in Wordpress via AJAX"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Here is what you can try</p>\n\n<ul>\n<li>Write a function say init() inside mypage.html that do the html thing ( append or what ever) </li>\n<li>instead of <code>OpenWindow.document.write(output);</code> call <code>OpenWindow.init()</code> when the dom is ready </li>\n</ul>\n\n<p>So the parent window will have </p>\n\n<pre><code>    OpenWindow.onload = function(){\n       OpenWindow.init('test');\n    }\n</code></pre>\n\n<p>and in the child </p>\n\n<pre><code>    function init(txt){\n        $('#test').text(txt);\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>When you call <code>document.write</code> after a page has loaded it will eliminate all content and replace it with the parameter you provide.  Instead use DOM methods to add content, for example:</p>\n\n<pre><code>var OpenWindow = window.open('mypage.html','_blank','width=335,height=330,resizable=1');\nvar text = document.createTextNode('hi');\nOpenWindow.document.body.appendChild(text);\n</code></pre>\n\n<p>If you want to use jQuery you get some better APIs to deal with.  For example:</p>\n\n<pre><code>var OpenWindow = window.open('mypage.html','_blank','width=335,height=330,resizable=1');\n$(OpenWindow.document.body).append('&lt;p&gt;hi&lt;/p&gt;');\n</code></pre>\n\n<p>If you need the code to run after the new window's DOM is ready try:</p>\n\n<pre><code>var OpenWindow = window.open('mypage.html','_blank','width=335,height=330,resizable=1');\n$(OpenWindow.document.body).ready(function() {\n    $(OpenWindow.document.body).append('&lt;p&gt;hi&lt;/p&gt;');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>in <code>parent</code>.html:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function () {\n        var output = \"data\";\n        var OpenWindow = window.open(\"child.html\", \"mywin\", '');\n        OpenWindow.dataFromParent = output; // dataFromParent is a variable in child.html\n        OpenWindow.init();\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>in <code>child.html</code>:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var dataFromParent;    \n    function init() {\n        document.write(dataFromParent);\n    }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>When You want to open new tab/window (depends on Your browser configuration defaults):</p>\n\n<pre><code>output = 'Hello, World!';\nwindow.open().document.write(output);\n</code></pre>\n\n<p>When output is an <code>Object</code> and You want get JSON, for example (also can generate any type of document, even image encoded in Base64)</p>\n\n<pre><code>output = ({a:1,b:'2'});\nwindow.open('data:application/json;' + (window.btoa?'base64,'+btoa(JSON.stringify(output)):JSON.stringify(output)));\n</code></pre>\n\n<p>When You want to append some data to existing page</p>\n\n<pre><code>output = '&lt;h1&gt;Hello, World!&lt;/h1&gt;';\nwindow.open('output.html').document.body.innerHTML += output;\n\noutput = 'Hello, World!';\nwindow.open('about:blank').document.body.innerText += output;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>I don't know how to solve this issue, I've trying reading many post but no one answer to it.</p>\n\n<p>I need to open a new window with a page already coded (inside the same domain) and add some content.</p>\n\n<p>The problem is that if I use <code>OpenWindow.write()</code> the page is not loaded yet or it overrides everything and only the code added through write appears.</p>\n\n<pre><code>var OpenWindow = window.open('mypage.html','_blank','width=335,height=330,resizable=1');\nOpenWindow.document.write(output);\n</code></pre>\n\n<p><code>output</code> is the code I need to append.</p>\n\n<p>I need it to work at least on Firefox, IE and GC.</p>\n\n<p>Thanks in advance. It is not a problem if I need to use JQuery.</p>\n",
            "last_activity_date": 1422314454,
            "question_id": 10472927,
            "score": 5,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Add content to a new open window"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>you can do this. Have a public array of keys that you have used and check against them with this function:</p>\n\n<pre><code>function in_array(needle, haystack)\n{\n    for(var key in haystack)\n    {\n        if(needle === haystack[key])\n        {\n            return true;\n        }\n    }\n\n    return false;\n}\n</code></pre>\n\n<p>(function from: <a href=\"http://stackoverflow.com/questions/890782/javascript-function-inarray\">javascript function inArray</a>)</p>\n\n<p>So what you can do is:</p>\n\n<pre><code>var done = [];\nsetInterval(function() {\n    var m = null;\n    while(m == null || in_array(m, done)){\n       m = Math.floor(Math.random()*7);\n    }\n    done.push(m);\n    $('.foo:nth-of-type('+m+')').fadeIn(300);\n}, 300);\n</code></pre>\n\n<p>This code will get stuck after getting all seven numbers so you need to make sure it exists after it fins them all.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>could you try that,</p>\n\n<pre><code>setInterval(function() {\n    m = Math.floor(Math.random()*7);\n    $('.foo:nth-of-type(' + m + ')').fadeIn(300);\n}, 300);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Generally my approach is to make an array containing all of the possible values and to:</p>\n\n<ol>\n<li>Pick a random number &lt;= the size of the array</li>\n<li>Remove the chosen element from the array</li>\n<li>Repeat steps 1-2 until the array is empty</li>\n</ol>\n\n<p>The resulting set of numbers will contain all of your indices without repetition.</p>\n\n<p>Even better, maybe something like this:</p>\n\n<pre><code>var numArray = [0,1,2,3,4,5,6];\nnumArray.shuffle();\n</code></pre>\n\n<p>Then just go through the items because shuffle will have randomized them and pop them off one at a time.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are a number of ways you could achieve this.</p>\n\n<p>Solution A:\nIf the range of numbers isn't large (let's say less than 10), you could just keep track of the numbers you've already generated. Then if you generate a duplicate, discard it and generate another number.</p>\n\n<p>Solution B:\nPre-generate the random numbers, store them into an array and then go through the array. You could accomplish this by taking the numbers <code>1,2,...,n</code> and then shuffle them. See <a href=\"http://snippets.dzone.com/posts/show/849\">http://snippets.dzone.com/posts/show/849</a></p>\n\n<pre><code>var randorder = shuffle([0,1,2,3,4,5,6]);\nvar index = 0;\n\nsetInterval(function() {\n    $('.foo:nth-of-type('+(randorder[index++])+')').fadeIn(300);\n}, 300);\n</code></pre>\n\n<p>Solution C:\nKeep track of the numbers available in an array. Randomly pick a number. Remove number from said array.</p>\n\n<pre><code>var randnums = [0,1,2,3,4,5,6];\n\nsetInterval(function() {\n    var m = Math.floor(Math.random()*randnums.length);\n    $('.foo:nth-of-type('+(randnums[m])+')').fadeIn(300);\n    randnums = randnums.splice(m,1);\n}, 300);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>I like Neal's answer although this is begging for some recursion.  Here it is in java, you'll still get the general idea.  Note that you'll hit an infinite loop if you pull out more numbers than MAX, I could have fixed that but left it as is for clarity.  </p>\n\n<p>edit: saw neal added a while loop so that works great.  </p>\n\n<pre><code>public class RandCheck {\n    private List&lt;Integer&gt; numbers;\n    private Random rand;\n    private int MAX = 100;\n\n    public RandCheck(){\n        numbers = new ArrayList&lt;Integer&gt;();\n        rand = new Random();\n    }\n\n    public int getRandomNum(){\n        return getRandomNumRecursive(getRand());\n    }\n\n    private int getRandomNumRecursive(int num){\n        if(numbers.contains(num)){\n            return getRandomNumRecursive(getRand());\n        } else {\n            return num;\n        }\n    }\n\n    private int getRand(){\n        return rand.nextInt(MAX);\n    }\n\n    public static void main(String[] args){\n        RandCheck randCheck = new RandCheck();\n\n        for(int i = 0; i &lt; 100; i++){\n            System.out.println(randCheck.getRandomNum());\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You seem to want a non-repeating random number from 0 to 6, so similar to tskuzzy's answer:</p>\n\n<pre><code>var getRand = (function() {\n    var nums = [0,1,2,3,4,5,6];\n    var current = [];\n    function rand(n) {\n        return (Math.random() * n)|0;\n    }\n    return function() {\n      if (!current.length) current = nums.slice();\n      return current.splice(rand(current.length), 1);\n    }\n}());\n</code></pre>\n\n<p>It will return the numbers 0 to 6 in random order. When each has been drawn once, it will start again.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>not sure if its too late, but would still like to add--</p>\n\n<pre><code>var RecordKeeper = {};\n\nSRandom = function () {\n    currTimeStamp = new Date().getTime();\n    if (RecordKeeper.hasOwnProperty(currTimeStamp)) {\n        RecordKeeper[currTimeStamp] = RecordKeeper[currTimeStamp] + 1;\n        return currTimeStamp.toString() + RecordKeeper[currTimeStamp];\n    }\n    else {\n        RecordKeeper[currTimeStamp] = 1;\n        return currTimeStamp.toString() + RecordKeeper[currTimeStamp];\n    }\n}\n</code></pre>\n\n<p>this basically uses timestamp (every millisecond) to always generate a unique number.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a simple fix, if a little rudimentary:</p>\n\n<pre><code>if(nextNum == lastNum){\n    if (nextNum == 0){nextNum = 7;} \n    else {nextNum = nextNum-1;}\n}\n</code></pre>\n\n<p>If the next number is the same as the last simply minus 1 unless the number is 0 (zero) and set it to any other number within your set (I chose 7, the highest index).</p>\n\n<p>I used this method within the cycle function because the only stipulation on selecting a number was that is musn't be the same as the last one.</p>\n\n<p>Not the most elegant or technically gifted solution, but it works :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Can't seem to find an answer to this, say I have this:</p>\n\n<pre><code>setInterval(function() {\n    m = Math.floor(Math.random()*7);\n    $('.foo:nth-of-type('+m+')').fadeIn(300);\n}, 300);\n</code></pre>\n\n<p>How do I make it so that random number doesn't repeat itself. For example if the random number is 2, I don't want 2 to come out again.</p>\n",
            "last_activity_date": 1379767369,
            "question_id": 6625551,
            "score": 5,
            "tags": [
                "javascript",
                "random",
                "repetition"
            ],
            "title": "math random number without repeating a previous number"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No pre-built, but writing such function is possible.. here is one relatively simple way using two functions:</p>\n\n<pre><code>function FindAllPermutations(str, index, buffer) {\n    if (typeof str == \"string\")\n        str = str.split(\"\");\n    if (typeof index == \"undefined\")\n        index = 0;\n    if (typeof buffer == \"undefined\")\n        buffer = [];\n    if (index &gt;= str.length)\n        return buffer;\n    for (var i = index; i &lt; str.length; i++)\n        buffer.push(ToggleLetters(str, index, i));\n    return FindAllPermutations(str, index + 1, buffer);\n}\n\nfunction ToggleLetters(str, index1, index2) {\n    if (index1 != index2) {\n        var temp = str[index1];\n        str[index1] = str[index2];\n        str[index2] = temp;\n    }\n    return str.join(\"\");\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var arrAllPermutations = FindAllPermutations(\"the\");\n</code></pre>\n\n<p>Live test case: <a href=\"http://jsfiddle.net/yahavbr/X79vz/1/\" rel=\"nofollow\">http://jsfiddle.net/yahavbr/X79vz/1/</a></p>\n\n<p>This is just basic implementation, it won't remove duplicates and has no optimization. However for small strings you won't have any problem, add time measure like in the above test case and see what's your reasonable limit.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>Assuming a large string to search, you could use a regular expression </p>\n\n<p>to examine a set of possibles that first matches the letters and the total number of letters, </p>\n\n<p>and return the matches that use the same letter set as the pattern.</p>\n\n<p>//(case-insensitive)</p>\n\n<pre><code>function lettersets(str, pat){\n    var A= [], M, tem,\n    rx= RegExp('\\\\b(['+pat+']{'+pat.length+'})\\\\b', 'gi'),\n    pattern= pat.toLowerCase().split('').sort().join('');\n    while((M= rx.exec(str))!= null){\n        tem= M[1].toLowerCase().split('').sort();\n        if(tem.join('')=== pattern) A.push(M[1]);\n    };\n    return A;\n}\n</code></pre>\n\n<p><strong>lettersets(s, 'the').sort();</strong></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;pre&gt;\n&lt;script&gt;\n\nvar count = 0;\nvar duplicate = false;\n\nfunction FindAllPermutations(str, index) {\n    for (var i = index; i &lt; str.length; i++) {\n        var newstr;\n\n        if (index == i) newstr = str;\n            else newstr = SwapLetters(str, index, i);\n\n        if (!duplicate) {\n            count++;\n            document.write(newstr + \"\\n\");\n            if (i == index) duplicate = true;\n        } else if (i != index) duplicate = false;\n\n        FindAllPermutations(newstr, index + 1);\n      }\n  }\n\nfunction SwapLetters(str, index1, index2) {\n    if (index1 == index2) return str;\n    str = str.split(\"\");\n    var temp = str[index1];\n    str[index1] = str[index2];\n    str[index2] = temp;\n    return str.join(\"\");\n}\n\nFindAllPermutations(\"ABCD\", 0); // will output all 24 permutations with no duplicates\ndocument.write(\"Count: \" + count);\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>//string permutation\n\nfunction permutation(start, string) {\n\n    //base case\n    if ( string.length == 1 ) {\n        return [ start + string ];\n    } else {\n\n        var returnResult = [];\n        for (var i=0; i &lt; string.length; i++) {\n            var result = permutation (string[i], string.substr(0, i) + string.substr(i+1));\n            for (var j=0; j&lt;result.length; j++) {\n                returnResult.push(start + result[j]);\n            }\n        }\n\n        return returnResult;\n    }\n}\n</code></pre>\n\n<p>permutation('','123') will return </p>\n\n<p>[\"123\", \"132\", \"213\", \"231\", \"312\", \"321\"]</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is similar but finds all anagrams/permutations from an array of words. I had this question in an interview. Given an array of words ['cat', 'dog', 'tac', 'god', 'act'], return an array with all the anagrams grouped together. Makes sure the anagrams are unique.</p>\n\n<pre><code>var arr = ['cat', 'dog', 'tac', 'god', 'act'];\n\nvar allAnagrams = function(arr) {\n    var anagrams = {};\n    arr.forEach(function(str) {\n        var recurse = function(ana, str) {\n            if (str === '') \n                anagrams[ana] = 1;\n            for (var i = 0; i &lt; str.length; i++)\n                recurse(ana + str[i], str.slice(0, i) + str.slice(i + 1));\n        };\n        recurse('', str);\n    });\n    return Object.keys(anagrams);\n}\n\nconsole.log(allAnagrams(arr));\n//[\"cat\", \"cta\", \"act\", \"atc\", \"tca\", \"tac\", \"dog\", \"dgo\", \"odg\", \"ogd\", \"gdo\", \"god\"]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm a newbie to the JavaScript world. As the title mentions, I want to know  whether there is any pre-built method in JavaScript to find all possible permutations of a given string.</p>\n\n<p><strong>For example</strong>, given the input:</p>\n\n<pre><code>the\n</code></pre>\n\n<p>Desired output:</p>\n\n<pre><code>the\nteh\neht\neth\nhet\nhte\n</code></pre>\n",
            "last_activity_date": 1423602215,
            "question_id": 5232295,
            "score": 5,
            "tags": [
                "javascript"
            ],
            "title": "Is there any pre-built method for finding all permutations of a given string in JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Can you try: </p>\n\n<pre><code>new Date(2001,0,1,12,0,0)\n</code></pre>\n\n<p>This means:</p>\n\n<pre><code>new Date(year,month,day,hour,minutes,seconds) \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This works in all browsers on my box</p>\n\n<p>javascript:alert(new Date('2001/01/31 12:00:00'))</p>\n\n<p>so </p>\n\n<pre><code>new Date('2001-01-01T12:00:00Z'.replace(/\\-/g,'\\/').replace(/[T|Z]/g,' '))\n</code></pre>\n\n<p>IE8, FF3.6, Safari4, Chrome</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>You could also try using <a href=\"http://www.datejs.com/\" rel=\"nofollow\">Date.js</a> - an open source javascript date manipulation library.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This works on all of the major 5 browsers and causes all browsers to recognize the time as GMT/UTC rather than local time (the Z suffix means the time is UTC):</p>\n\n<pre><code>new Date('2001-01-01T12:00:00Z'.replace(/\\-/g,'\\/').replace(/T/,' ').replace(/Z/,' -0'))\n</code></pre>\n\n<p>I thank mplungjan for his answer.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am working with dates in an RSS feed, but am finding differing results when using the code below in IE, Chrome and Firefox:</p>\n\n<pre><code>new Date('2001-01-01T12:00:00Z')\n</code></pre>\n\n<p>Firefox is happy with that, but Chrome and IE return Invalid Date.</p>\n\n<p>I thought I'd try replacing the T and Z as follows:</p>\n\n<pre><code>new Date('2001-01-01 12:00:00')\n</code></pre>\n\n<p>This time Chrome is happy with that, but Firefox and IE return Invalid Date.</p>\n\n<p>Any ideas what I should do to get a date object in all browsers with this format?!</p>\n\n<p>Many thanks,\nTim</p>\n",
            "last_activity_date": 1282747510,
            "question_id": 3566125,
            "score": 5,
            "tags": [
                "javascript",
                "datetime",
                "date-format",
                "date-parsing"
            ],
            "title": "Problem with date formats in JavaScript with different browsers"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Arrays are not primitives in Javascript, they are objects.  The key difference is that as a result, when you pass an array to a function it is passed by reference, not by value.</p>\n\n<p>So yes! Arrays are objects in javascript, with a full blown Array.prototype and everything (don't touch that though...)</p>\n\n<p>The confusion comes from the fact that javascripts lets you access object attributes in two ways:</p>\n\n<p>myObj.attribute\nor\nmyObj[\"attribute\"]</p>\n\n<p>Really what makes an array an array has nothing to do with the way you store data -- any object can store values using the syntax you use to store the array -- what makes an array an array is the fact that array methods (e.g. shift() and sort()) are defined for Array.prototype.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Objects are an unordered map from string keys to values, arrays are an ordered list of values (with integer keys). That's the main difference. They're both non-primitive, as they're composed of multiple values, which also implies pass-by-reference in JavaScript.</p>\n\n<p>Arrays are also a kind of object, though, so you can attach extra properties to them, access their prototype and so on.</p>\n\n<p>In your revised example, you're only taking advantage of the fact that an array is actually an object, i.e. you can set any property on them. You shouldn't do that. If you don't need an ordered list of values, use a plain object.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Trying to be brief with what I believe to be of the most significance: arrays have a number of methods that objects do not. Including:</p>\n\n<ul>\n<li>length</li>\n<li>push</li>\n<li>pop</li>\n</ul>\n\n<p>An object declared as <code>var x = {foo:bar}</code> has no access to a .length() method. They are both objects but with the array as a sort of superset with methods mentioned as above.</p>\n\n<p>I don't feel I this is even close to being of Crockford standard in terms of explanation but I'm trying to be succinct.</p>\n\n<p>If you want to get some quick results, open up Firebug or your javascript Console and try Array.prototype and Object.prototype to see some details</p>\n\n<p><strong>Update:</strong> In your example you declare an array and then do:</p>\n\n<pre><code>foo['bar'] = 'unexpectedbehaviour';\n</code></pre>\n\n<p>will produce unexpected results and won't be available in simple loops such as:</p>\n\n<pre><code>var foo=[0,1];\nfoo['bar'] = 2;\n\nfor(var i=0;i&lt;foo.length;i++){\n    console.log(foo[i]);\n}\n\n//outputs: \n//0\n//1\n</code></pre>\n\n<p>An array can accept <code>foo['bar']=x</code> or <code>foo.bar=y</code> like an object but won't necessarily be available to be looped through as highlighted above.</p>\n\n<p>Not that I'm saying that you can't iterate through the properties of an object, just that when working with an Array, you're utilising that unique functionality and should remember not to get confused.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Strings can be either primitive or objects, depending on how they were declared.</p>\n\n<pre><code>var str = 'yes';\n</code></pre>\n\n<p>Gives you a primitive, while,</p>\n\n<pre><code>var str = new String('yes');\n</code></pre>\n\n<p>will give you a String object.</p>\n\n<hr>\n\n<p>All arrays are the same (Whether or not they were defined with [] or new Array()), are of the type object and inherit from the \"Array\" object's prototype. There aren't real classes in Javascript, everything is an object, and there's a system defined object called Array. It has a property called 'prototype' (of type object), and when you use the new keyword on an object with a prototype property, it creates an instance with a reference to the contents of the prototype and stores it in your variable. So all arrays you've ever used in Javascript are objects and instances of Array's prototype property.</p>\n\n<p>In any case, although arrays really are objects, they behave like arrays because of their useful properties and functions (Such as length, slice, push etc).</p>\n\n<p>Another note, although I said there are no classes, when you do this:</p>\n\n<pre><code>console.log(Object.prototype.toString.call(your_object));\n</code></pre>\n\n<p>it will give you a string in the form [object Object]. But what's useful is that when you call it with an array, you get [object Array] same with functions which give [object Function] and a number of other system defined types, which assists in differentiating between normal objects and arrays (Since the typeof operator will always just return the string 'object').</p>\n\n<p>Try this</p>\n\n<pre><code>var a = Array;\n</code></pre>\n\n<p>and go into firebug and examine the contents of a, especially it's 'prototype' property.</p>\n\n<p><strong>Edit:</strong> Changed the wording a bit, to be more correct. In fact when you use the new keyword, it creates an instance which <strong>references</strong> the prototype object. So any changes made to the prototype after the instance's declaration, will still affect the instance.</p>\n\n<p><strong>Edit:</strong> In answer to your latest revised question (are arrays/objects actually strings in disguise): No. They are objects, as I've explained. Strings are either a primitive type, or an object type (An instance of the String object) which contains the primitive equivalent as one of it's properties.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Arrays are objects.</p>\n\n<p>However, unlike regular objects, arrays have certain special features. </p>\n\n<ol>\n<li><p>Arrays have an additional object in their prototype chain - namely <code>Array.prototype</code>. This object contains so-called Array methods which can be called on array instances. (List of methods is here: <a href=\"http://es5.github.com/#x15.4.4\" rel=\"nofollow\">http://es5.github.com/#x15.4.4</a>)</p></li>\n<li><p>Arrays have a <code>length</code> property (which is live, ergo, it auto-updates) (Read here: <a href=\"http://es5.github.com/#x15.4.5.2\" rel=\"nofollow\">http://es5.github.com/#x15.4.5.2</a>)</p></li>\n<li><p>Arrays have a special algorithm regarding defining new properties (Read here: <a href=\"http://es5.github.com/#x15.4.5.1\" rel=\"nofollow\">http://es5.github.com/#x15.4.5.1</a>). If you set a new property to an array and that property's name is a sting which can be coerced to an integer number (like <code>'1'</code>, <code>'2'</code>, <code>'3'</code>, etc.) then the special algorithm applies (it is defined on p. 123 in the spec)</p></li>\n</ol>\n\n<p>Other than these 3 things, arrays are just like regular objects.</p>\n\n<p>Read about arrays in the spec: <a href=\"http://es5.github.com/#x15.4\" rel=\"nofollow\">http://es5.github.com/#x15.4</a></p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Arrays are Objects, but of a specialized nature. Objects are collections of values indexed by keys (in Javascript notation, <code>{'key': 'value'}</code>), whereas Arrays are Objects whose keys are numeric (with a few functions and properties). The key difference between them is obvious when you use a <code>for each</code> loop--an Object will iterate over all the values in its properties, whereas an Array will return the keys instead. <a href=\"http://jsfiddle.net/GFtrL/\" rel=\"nofollow\">Here's</a> a link to a JSFiddle demonstrating the difference--notice that the first <code>for each</code>, which uses an array, returns the indexes, not the values; in contrast, the second <code>for each</code> returns the actual values at those keys.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In JavaScript you have a few types, <em>everything</em> else is an object. The types in JavaScript are: boolean, number, and string. There are also two special values, \"null\" and \"undefined\".</p>\n\n<p>So the quest \"is a JavaScript array an object?\" is slightly ambiguous. Yes, a JavaScript array is an \"object\" but it is not an instance of \"Object\". A JavaScript array is an instance of \"Array\". Although, all objects inherit from Object; you can view the inheritance chain on <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/prototype\" rel=\"nofollow\">the MDC</a>. Additionally, arrays have slightly different properties than an object. Arrays have the <code>.length</code> property. They also have the <code>.slice()</code>, <code>.join()</code>, etc methods.</p>\n\n<p>Douglas Crockford provides a nice <a href=\"http://javascript.crockford.com/survey.html\" rel=\"nofollow\">survey</a> of the language's features. His survey discusses the differences you are asking about. Additionally, you can read more about the <a href=\"http://stackoverflow.com/questions/4559207/difference-between-a-constructor-and-an-object\">difference between literals and constructors</a> in question #4559207.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Are arrays merely objects in disguise? Why/why not? In what way(s) are they (such/not)?</p>\n\n<p>I have always thought of arrays and objects in JS as essentially the same, primarily because accessing them is identical.</p>\n\n<pre><code>var obj = {'I': 'me'};\nvar arr = new Array();\narr['you'] = 'them';\n\nconsole.log(obj.I);\nconsole.log(arr.you);\nconsole.log(obj['I']);\nconsole.log(arr['you']);\n</code></pre>\n\n<p>Am I mislead/mistaken/wrong? What do I need to know about JS literals, primitives, and strings/objects/arrays/etc...?</p>\n\n<p>Are arrays/objects merely strings in disguise? Why/why not? In what way(s) are they (such/not)?</p>\n",
            "last_activity_date": 1404169393,
            "question_id": 5048371,
            "score": 4,
            "tags": [
                "javascript",
                "arrays",
                "javascript-objects"
            ],
            "title": "Are Javascript arrays primitives? Strings? Objects?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can change anything after the hash mark (<code>#</code>) as this is frequently used in Ajax applications such as Google search and the new Twitter. (That's why everything appears after the hash mark in those apps.) But if you change anything else, the page will have to be reloaded.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm going to assume you are talking about the visible URL in the URL bar.</p>\n\n<p>The answer is No, it is a major security vulnerability when an application tries trick users into thinking that are at another site.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>In older browsers, you can <strong>not</strong> change the url in the address bar without leaving the page. But you can change the hash portion of the url without leaving the page. That is to say you can change <code>www.example.com</code> to <code>www.example.com#new_text</code> with JavaScript <code>window.location.hash = \"new_text\"</code>; everything after the <code>#</code> can be changed.</p>\n\n<p>However, in HTML5 there is a new History API which allows you to change the part of the URL after the domain. So you still cannot change <code>www.example.com</code> to <code>www.BankOfAmerica.com</code> (for security reasons), but you can change <code>www.example.com/foo</code> to <code>www.example.com/bar</code>.</p>\n\n<pre><code>history.pushState(\"object or string representing the state of the page\", \"new title\", \"newURL\");\n</code></pre>\n\n<p>Check <a href=\"http://caniuse.com/#feat=history\" rel=\"nofollow\">When can I use...</a> to see which browsers support HTML5 session history management and support the new <code>pushState</code> method.</p>\n\n<p>In addition there is a JavaScript library which will normalizes the history API across browsers and changes the URL in new browsers and uses the hash portion for old browsers. See <a href=\"https://github.com/balupton/history.js\" rel=\"nofollow\">history.js</a> .</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>No, it's not possible. And, whenever it is possible, that is a browser bug (I know about previous security bugs related to this behavior, and they were fixed in past).</p>\n\n<p>Actually... You can change the last portion of the URL, anything after the <code>#</code> character. But the hostname and path can't be changed without leaving the page.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible with JavaScript to change the browser's URL, but not leave the page?</p>\n",
            "last_activity_date": 1316197123,
            "question_id": 4089178,
            "score": 3,
            "tags": [
                "javascript",
                "url",
                "browser-history"
            ],
            "title": "How to change the URL displayed in the browser without leaving the page"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The <code>attr()</code> function is also a setter function. You can just pass it an empty string.</p>\n\n<pre><code>$('body').attr('data-body','');\n</code></pre>\n\n<p>An empty string will simply create the attribute with no value.</p>\n\n<pre><code>&lt;body data-body&gt;\n</code></pre>\n\n<blockquote>\n  <p>Reference - <a href=\"http://api.jquery.com/attr/#attr2\">http://api.jquery.com/attr/#attr2</a></p>\n  \n  <p>attr( attributeName , value  )</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>Perhaps try:</p>\n\n<pre><code>var body = document.getElementsByTagName('body')[0];\nbody.setAttribute(\"data-body\",\"\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>How do I set a data attribute without adding a value in jQuery? I want this:</p>\n\n<pre><code>&lt;body data-body&gt;\n</code></pre>\n\n<p>I tried:</p>\n\n<pre><code>$('body').attr('data-body'); // this is a getter, not working\n$('body').attr('data-body', null); // not adding anything\n</code></pre>\n\n<p>Everything else seems to add the second arguments as a string. Is it possible to just set an attribute without value?</p>\n",
            "last_activity_date": 1390403202,
            "question_id": 13159180,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "data",
                "attributes",
                "attr"
            ],
            "title": "Set attribute without value"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Try:</p>\n\n<pre><code>alert($(\"#something\\\\[\"+id+\"\\\\]\").parent().parent().attr(\"id\"));\n</code></pre>\n\n<p><a href=\"http://docs.jquery.com/Selectors\">See Special Characters In Selectors</a> (in the second paragraph).</p>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>alert($(\"#something\\\\[\"+id+\"\\\\]\").parent()[0].parent()[0].attr(\"id\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Square brackets have special meaning to <a href=\"http://docs.jquery.com/Selectors\">jQuery selectors</a>, the attribute filters specifically.</p>\n\n<p>Just escape these and it will find your element fine</p>\n\n<pre><code>$( \"#something\\\\[\" + id + \"\\\\]\" )\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>An id <strong>cannot</strong> include square brackets. It is <a href=\"http://www.w3.org/TR/html4/types.html#type-name\">forbidden by the spec</a>. </p>\n\n<p>Some browsers might error correct and cope, but you should fix you data instead of trying to deal with bad data.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can escape them using <code>\\\\</code> or you could do something like this...</p>\n\n<pre><code>$(document.getElementById(\"something[\" + id + \"]\"))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Let's say your DOM element is a span.  You can also do</p>\n\n<pre><code>$('span[id=\"something['+id+']\"')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>\"Any of the meta-characters </p>\n\n<pre><code>!\"#$%&amp;'()*+,./:;&lt;=&gt;?@[\\]^`{|}~\n</code></pre>\n\n<p>as a literal part of a name, it must be escaped with with two backslashes: <code>\\\\</code>. </p>\n\n<p>For example, an element with id=\"foo.bar\", can use the selector </p>\n\n<pre><code>$(\"#foo\\\\.bar\")\n</code></pre>\n\n<p>\" [source: <a href=\"http://api.jquery.com/category/selectors/\" rel=\"nofollow\">jquery doc</a>], and an element with id=\"foo[bar]\" (even though not valid for W3C but recognised by JQuery), can use the selector </p>\n\n<pre><code>$(\"#foo\\\\[bar\\\\]\")\n</code></pre>\n\n<p>(Just an asnwer like the many others, but all together :))</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a DOM element with an ID similar to:</p>\n\n<pre><code>something[500]\n</code></pre>\n\n<p>which was built by my Ruby on Rails application.  I need to be able to get this element via jQuery so that I can traverse my way up the DOM to delete the parent of it's parent, which has a variable ID that I don't have access to beforehand.</p>\n\n<p>Does anyone know how I could go about this?  The following code doesn't seem to be working:</p>\n\n<pre><code>alert($(\"#something[\"+id+\"]\").parent().parent().attr(\"id\"));\n</code></pre>\n\n<p>Upon further inspection, the following:</p>\n\n<pre><code>$(\"#something[\"+id+\"]\")\n</code></pre>\n\n<p>returns an object, but when I run \".html()\" or \".text()\" on it, the result is always null or just an empty string.</p>\n\n<p>Any help would be greatly appreciated.</p>\n",
            "last_activity_date": 1377259739,
            "question_id": 1239095,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "ruby-on-rails",
                "dom"
            ],
            "title": "Find DOM element by ID when ID contains square brackets?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<h3>Markup</h3>\n\n<pre><code>&lt;select id=\"my_select\"&gt;\n    &lt;option value=\"1\"&gt;First&lt;/option&gt;\n    &lt;option value=\"2\"&gt;Second&lt;/option&gt;\n    &lt;option value=\"3\"&gt;Third&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<h3>jQuery</h3>\n\n<pre><code>var my_value = 2;\n$('#my_select option').each(function(){\n    var $this = $(this); // cache this jQuery object to avoid overhead\n\n    if ($this.val() == my_value) { // if this option's value is equal to our value\n        $this.prop('selected', true); // select this option\n        return false; // break the loop, no need to look further\n    }\n});\n</code></pre>\n\n<h2><a href=\"http://jsfiddle.net/Shef/yU6uT/\">Demo</a></h2>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<h2>Vanilla JavaScript</h2>\n\n<p>Using plain old JavaScript:</p>\n\n<pre><code>&lt;select id=\"sel\"&gt;\n    &lt;option&gt;Cat&lt;/option&gt;\n    &lt;option&gt;Dog&lt;/option&gt;\n    &lt;option&gt;Fish&lt;/option&gt;\n&lt;/select&gt;\n&lt;script&gt;\n    var val = \"Fish\";\n    var sel = document.getElementById('sel');\n    var opts = sel.options;\n    for(var opt, j = 0; opt = opts[j]; j++) {\n        if(opt.value == val) {\n            sel.selectedIndex = j;\n            break;\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n\n<h3><a href=\"http://jsfiddle.net/kaleb/GFS2f/\">Demo</a></h3>\n\n<h2>jQuery</h2>\n\n<p>But if you <em>really</em> want to use jQuery:</p>\n\n<pre><code>var val = 'Fish';\n$('#sel').val(val);\n</code></pre>\n\n<h3><a href=\"http://jsfiddle.net/kaleb/GFS2f/164/\">Demo</a></h3>\n\n<h2>jQuery - Using Value Attributes</h2>\n\n<p>In case your options have value attributes which differ from their text content and you want to select via text content:</p>\n\n<pre><code>&lt;select id=\"sel\"&gt;\n    &lt;option value=\"1\"&gt;Cat&lt;/option&gt;\n    &lt;option value=\"2\"&gt;Dog&lt;/option&gt;\n    &lt;option value=\"3\"&gt;Fish&lt;/option&gt;\n&lt;/select&gt;\n&lt;script&gt;\n    var val = 'Fish';\n    $('#sel option:contains(' + val + ')').prop({selected: true});\n&lt;/script&gt;\n</code></pre>\n\n<h3><a href=\"http://jsfiddle.net/kaleb/GFS2f/165/\">Demo</a></h3>\n\n<p>But if you do have the above set up and want to select by value using jQuery, you can do as before:</p>\n\n<pre><code>var val = 3;\n$('#sel').val(val);\n</code></pre>\n\n<h2>Modern DOM</h2>\n\n<p>For the browsers that support <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element.querySelector\"><code>document.querySelector</code></a> and the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement#Properties\"><code>HTMLOptionElement::selected</code></a> property, this is a more succinct way of accomplishing this task:</p>\n\n<pre><code>var val = 3;    \ndocument.querySelector('#sel [value=\"' + val + '\"]').selected = true;\n</code></pre>\n\n<h3><a href=\"http://jsfiddle.net/kaleb/GFS2f/518/\">Demo</a></h3>\n\n<h2><a href=\"http://knockoutjs.com/\">Knockout.js</a></h2>\n\n<pre><code>&lt;select data-bind=\"value: val\"&gt;\n    &lt;option value=\"1\"&gt;Cat&lt;/option&gt;\n    &lt;option value=\"2\"&gt;Dog&lt;/option&gt;\n    &lt;option value=\"3\"&gt;Fish&lt;/option&gt;\n&lt;/select&gt;\n&lt;script&gt;\n    var viewModel = {\n        val: ko.observable()\n    };\n    ko.applyBindings(viewModel);\n    viewModel.val(3);\n&lt;/script&gt;\n</code></pre>\n\n<h3><a href=\"http://jsfiddle.net/GFS2f/577/\">Demo</a></h3>\n\n<h2><a href=\"https://www.polymer-project.org/\">Polymer</a></h2>\n\n<pre><code>&lt;template id=\"template\" bind&gt;\n    &lt;select value=\"{{ val }}\"&gt;\n        &lt;option value=\"1\"&gt;Cat&lt;/option&gt;\n        &lt;option value=\"2\"&gt;Dog&lt;/option&gt;\n        &lt;option value=\"3\"&gt;Fish&lt;/option&gt;\n    &lt;/select&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    template.model = {};\n    template.model.val = 3;\n&lt;/script&gt;\n</code></pre>\n\n<h3><a href=\"http://jsfiddle.net/kaleb/GFS2f/580/\">Demo</a></h3>\n",
                    "is_accepted": false,
                    "score": 80
                },
                {
                    "body": "<p><a href=\"http://jsfiddle.net/yT5qW/2/\" rel=\"nofollow\">Test this Demo</a></p>\n\n<ol>\n<li><h3>Selecting Option based on its <em>value</em></h3>\n\n<pre><code>var vals = [2,'c'];\n\n$('option').each(function(){\n   var $t = $(this);\n\n   for (var n=vals.length; n--; )\n      if ($t.val() == vals[n]){\n         $t.prop('selected', true);\n         return;\n      }\n});\n</code></pre></li>\n<li><h3>Selecting Option based on its <em>text</em></h3>\n\n<pre><code>var vals = ['Two','CCC'];                   // what we're looking for is different\n\n$('option').each(function(){\n   var $t = $(this);\n\n   for (var n=vals.length; n--; )\n      if ($t.text() == vals[n]){            // method used is different\n         $t.prop('selected', true);\n         return;\n      }\n});\n</code></pre></li>\n</ol>\n\n<hr>\n\n<h3>Supporting HTML</h3>\n\n<pre><code>&lt;select&gt;\n   &lt;option value=\"\"&gt;&lt;/option&gt;\n   &lt;option value=\"1\"&gt;One&lt;/option&gt;\n   &lt;option value=\"2\"&gt;Two&lt;/option&gt;\n   &lt;option value=\"3\"&gt;Three&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;select&gt;\n   &lt;option value=\"\"&gt;&lt;/option&gt;\n   &lt;option value=\"a\"&gt;AAA&lt;/option&gt;\n   &lt;option value=\"b\"&gt;BBB&lt;/option&gt;\n   &lt;option value=\"c\"&gt;CCC&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Slightly neater Vanilla.JS version. Assuming you've already run:</p>\n\n<pre><code>NodeList.prototype.forEach = Array.prototype.forEach\n</code></pre>\n\n<p>Just:</p>\n\n<pre><code>var requiredValue = 'i-50332a31',   \n  selectBox = document.querySelector('select')\n\nselectBox.childNodes.forEach(function(element, index){\n  if ( element.value === requiredValue ) {\n    selectBox.selectedIndex = index\n  }\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>None of the examples using jquery in here are actually correct as they will leave the select displaying the first entry even though value has been changed.</p>\n\n<p>The right way to select Alaska and have the select show the right item as selected using:</p>\n\n<pre><code>&lt;select id=\"state\"&gt;\n    &lt;option value=\"AL\"&gt;Alabama&lt;/option&gt;\n    &lt;option value=\"AK\"&gt;Alaska&lt;/option&gt;\n    &lt;option value=\"AZ\"&gt;Arizona&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>With jquery would be:</p>\n\n<pre><code>$('#state').val('AK').change();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In my html I have a select with three option elements.  I want to use jquery to check the value of each option against a js var.  If one matches I want to set the selected attribute of that option .  How would I do that?</p>\n",
            "last_activity_date": 1418229929,
            "question_id": 7373058,
            "score": 27,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "How to Change The Selected Option of HTML Select Element?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can get it by <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\"><code>XMLHttpRequest.responseText</code></a>. </p>\n\n<p>Here's an example (not compatible with IE6/7).</p>\n\n<pre><code>var xhr = new XMLHttpRequest();\nxhr.onreadystatechange = function() {\n    if (xhr.readyState == 4) {\n        alert(xhr.responseText);\n    }\n}\nxhr.open('GET', 'http://example.com', true);\nxhr.send(null);\n</code></pre>\n\n<p>For better crossbrowser compatibility, not only with IE6/7, but also to cover some browser-specific memory leaks or bugs, and also for less verbosity with firing ajaxical requests, you could use <a href=\"http://jquery.com\">jQuery</a>.</p>\n\n<pre><code>$.get('http://example.com', function(responseText) {\n    alert(responseText);\n});\n</code></pre>\n\n<p>Note that you've to take the <a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy\">Same origin policy for JavaScript</a> into account when not running at localhost. You may want to consider to create a proxy script at your domain.</p>\n",
                    "is_accepted": true,
                    "score": 49
                }
            ],
            "body": "<p>I'd like to know how to use XMLHttpRequest to load the content of a remote URL and have the HTML of the accessed site stored in a JS variable.</p>\n\n<p>Say, if I wanted to load and alert() the HTML of <a href=\"http://foo.com/bar.php\">http://foo.com/bar.php</a>, how would I do that?</p>\n",
            "last_activity_date": 1420148496,
            "question_id": 3038901,
            "score": 26,
            "tags": [
                "javascript",
                "xmlhttprequest"
            ],
            "title": "How to get the response of XMLHttpRequest?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<pre><code>function addLeadingZeros (n, length)\n{\n    var str = (n &gt; 0 ? n : -n) + \"\";\n    var zeros = \"\";\n    for (var i = length - str.length; i &gt; 0; i--)\n        zeros += \"0\";\n    zeros += str;\n    return n &gt;= 0 ? zeros : \"-\" + zeros;\n}\n\n//addLeadingZeros (1, 3) =   \"001\"\n//addLeadingZeros (12, 3) =  \"012\"\n//addLeadingZeros (123, 3) = \"123\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you split on the space, you can add leading zeros using a simple function like:</p>\n\n<pre><code>function addZeros(n) {\n  return (n &lt; 10)? '00' + n : (n &lt; 100)? '0' + n : '' + n;\n}\n</code></pre>\n\n<p>So you can test the length of the string and if it's less than 6, split on the space, add zeros to the number, then join it back together.</p>\n\n<p>Or as a regular expression:</p>\n\n<pre><code>function addZeros(s) {\n  return s.replace(/ (\\d$)/,' 00$1').replace(/ (\\d\\d)$/,' 0$1');\n}\n</code></pre>\n\n<p>I'm sure someone can do it with one replace, not two.</p>\n\n<h3>Edit - examples</h3>\n\n<pre><code>alert(addZeros('MR 3'));    // MR 003\nalert(addZeros('MR 23'));   // MR 023\nalert(addZeros('MR 123'));  // MR 123\nalert(addZeros('foo bar 23'));  // foo bar 023\n</code></pre>\n\n<p>It will put one or two zeros infront of a number at the end of a string with a space in front of it. It doesn't care what bit before the space is.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Assuming you have those values stored in some strings, try this:</p>\n\n<pre><code>function pad (str, max) {\n  str = str.toString();\n  return str.length &lt; max ? pad(\"0\" + str, max) : str;\n}\n\npad(\"3\", 3);    // =&gt; \"003\"\npad(\"123\", 3);  // =&gt; \"123\"\npad(\"1234\", 3); // =&gt; \"1234\"\n\nvar test = \"MR 2\";\nvar parts = test.split(\" \");\nparts[1] = pad(parts[1], 3);\nparts.join(\" \"); // =&gt; \"MR 002\"\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 75
                },
                {
                    "body": "<p>This is the function that I generally use in my code to prepend zeros to a number or string.</p>\n\n<p>The inputs are the string or number (str), and the desired length of the output (len).</p>\n\n<pre><code>var PrependZeros = function (str, len) {\n    if(typeof str === 'number' || Number(str)){\n    str = str.toString();\n    return (len - str.length &gt; 0) ? new Array(len + 1 - str.length).join('0') + str: str;\n}\nelse{\n    for(var i = 0,spl = str.split(' '); i &lt; spl.length; spl[i] = (Number(spl[i])&amp;&amp; spl[i].length &lt; len)?PrependZeros(spl[i],len):spl[i],str = (i == spl.length -1)?spl.join(' '):str,i++);\n    return str;\n}\n</code></pre>\n\n<p>};</p>\n\n<p>Examples:</p>\n\n<pre><code>PrependZeros('MR 3',3);    // MR 003\nPrependZeros('MR 23',3);   // MR 023\nPrependZeros('MR 123',3);  // MR 123\nPrependZeros('foo bar 23',3);  // foo bar 023\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I have a potential solution which I guess is relevent, I posted about it here: </p>\n\n<p><a href=\"https://www.facebook.com/antimatterstudios/posts/10150752380719364\">https://www.facebook.com/antimatterstudios/posts/10150752380719364</a></p>\n\n<p>basically, you want a minimum length of 2 or 3, you can adjust how many 0's you put in this piece of code</p>\n\n<pre><code>var d = new Date();\nvar h = (\"0\"+d.getHours()).slice(-2);\nvar m = (\"0\"+d.getMinutes()).slice(-2);\nvar s = (\"0\"+d.getSeconds()).slice(-2);\n</code></pre>\n\n<p>I knew I would always get a single integer as a minimum (cause hour 1, hour 2) etc, but if you can't be sure of getting anything but an empty string, you can just do \"000\"+d.getHours() to make sure you get the minimum.</p>\n\n<p>then you want 3 numbers? just use -3 instead of -2 in my code, I'm just writing this because I wanted to construct a 24 hour clock in a super easy fashion.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>In simple terms we can written as follows,</p>\n\n<pre><code>for(var i=1;i&lt;=31;i++)\n    i=(i&lt;10) ? '0'+i : i;\n</code></pre>\n\n<p>//Because most of the time we need this for day, month or amount matters.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just for a laugh do it the long nasty way....:<br>\n(NOTE: ive not used this, and i would not advise using this.!)</p>\n\n<pre><code>function pad(str, new_length) {\n    ('00000000000000000000000000000000000000000000000000' + str).\n    substr((50 + str.toString().length) - new_length, new_length)\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I needed something like this myself the other day, Pud instead of always a 0, I wanted to be able to tell it what I wanted padded ing the front.  Here's what I came up with for code:</p>\n\n<pre><code>function lpad(n, e, d) {\n  var o = ''; if(typeof(d) === 'undefined'){ d='0'; } if(typeof(e) === 'undefined'){ e=2; }\n  if(n.length &lt; e){ for(var r=0; r &lt; e - n.length; r++){ o += d; } o += n; } else { o=n; }\n  return o; }\n</code></pre>\n\n<p>Where n is what you want padded, e is the power you want it padded to (number of characters long it should be), and d is what you want it to be padded with.  Seems to work well for what I needed it for, but it would fail if \"d\" was more than one character long is some cases.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Know this is an old post, but here's another short, effective way:\n<img src=\"http://i.stack.imgur.com/Au3Bf.jpg\" alt=\"zeros\"></p>\n\n<h1>edit: dur. if num isn't string, you'd add:</h1>\n\n<p><code>len -= String(num).length;</code></p>\n\n<p>else, it's all good</p>\n\n<pre><code>function addLeadingZeros(sNum, len) {\n    len -= sNum.length;\n    while (len--) sNum = '0' + sNum;\n    return sNum;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have file that are uploaded which are formatted like so</p>\n\n<blockquote>\n  <p>MR 1</p>\n  \n  <p>MR 2</p>\n  \n  <p>MR 100</p>\n  \n  <p>MR 200</p>\n  \n  <p>MR 300 </p>\n  \n  <p>ETC.</p>\n</blockquote>\n\n<p>What i need to do is add extra two 00s before anything before MR 10 and add one extra 0 before MR10-99</p>\n\n<p>So files are formatted</p>\n\n<blockquote>\n  <p>MR 001</p>\n  \n  <p>MR 010</p>\n  \n  <p>MR 076</p>\n  \n  <p>ETC.</p>\n</blockquote>\n\n<p>Any help would be great!</p>\n",
            "last_activity_date": 1421772600,
            "question_id": 6466135,
            "score": 25,
            "tags": [
                "javascript"
            ],
            "title": "Adding extra zeros in front of a number using jQuery?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>1). You can use onmouseover and onmouseout events</p>\n\n<p>2). You can use jQuery.hover() method</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>If you bind events to the onmouseover and onmouseout events in Jquery, you can then trigger that effect using mouseenter().</p>\n\n<p>What are you trying to accomplish?</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I don't think what your asking is possible.</p>\n\n<p>See: <a href=\"http://stackoverflow.com/questions/1983169/hover-item-with-jquery\">Hover Item with JQuery</a></p>\n\n<p>Basically, adding a class is the only way to accomplish this that I am aware of.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I know what you're trying to do, but why not simply do this:</p>\n\n<pre><code>$('div').addClass('hover');\n</code></pre>\n\n<p>The class is already defined in your CSS...</p>\n\n<p>As for you original question, this has been asked before and it is not possible unfortunately.\ne.g. <a href=\"http://forum.jquery.com/topic/jquery-triggering-css-pseudo-selectors-like-hover\">http://forum.jquery.com/topic/jquery-triggering-css-pseudo-selectors-like-hover</a></p>\n\n<p>However, your desired functionality may be possible if your Stylesheet is defined is Javascript. see:\n<a href=\"http://www.4pmp.com/2009/11/dynamic-css-pseudo-class-styles-with-jquery/\">http://www.4pmp.com/2009/11/dynamic-css-pseudo-class-styles-with-jquery/</a></p>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>You can't. It's not a <a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#trusted-events\" rel=\"nofollow\">trusted event</a>.</p>\n\n<blockquote>\n  <p>Events that are generated by the user agent, either as a result of user interaction, or as a direct result of changes to the DOM, are trusted by the user agent with privileges that are not afforded to events generated by script through the DocumentEvent.createEvent(\"Event\") method, modified using the Event.initEvent() method, or dispatched via the EventTarget.dispatchEvent() method. The isTrusted attribute of trusted events has a value of true, while untrusted events have a isTrusted attribute value of false.</p>\n  \n  <p>Most <strong>untrusted events should not trigger default actions</strong>, with the exception of click or DOMActivate events. </p>\n</blockquote>\n\n<p>You have to add a class and add/remove that on the mouseover/mouseout events manually.</p>\n\n<hr>\n\n<p>Side note, I'm answering this here after I marked <a href=\"http://stackoverflow.com/questions/17226676/\">this</a> as a duplicate since no answer here really covers the issue from what I see. Hopefully, one day it'll be merged.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I would know if it is possible somehow to trigger the CSS HOVER effect with JS, without having to use a additional class...</p>\n\n<p>Here is an example of what i want to do:\n<a href=\"http://jsfiddle.net/pXbMZ/2/\">http://jsfiddle.net/pXbMZ/2/</a></p>\n\n<p>i have tried fireing the effect using <code>mouseenter()</code> but this does not trigger the CSS hover effect.</p>\n\n<p>PS: I have made a function that helps a user using a online CMS. The help function shows you how to do stuff by moving a image around that shows you how to use stuff. The virtual cursor can click stuff, show elements etc.. But i would like this virtual cursor to tigger the :hover effects set in the CSS as well.</p>\n",
            "last_activity_date": 1371849790,
            "question_id": 4347116,
            "score": 25,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Trigger css hover with JS"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Even if it's declared outside of the for loop, each of the anonymous functions will still be referring to the same variable, so after the loop, they'll all still point to the final value of item.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Its because at the time <code>item.help</code> is evaluated, the loop would have completed in its entirety. Instead, you can do this with a closure:</p>\n\n<pre><code>for (var i = 0; i &lt; helpText.length; i++) {\n   document.getElementById(helpText[i].id).onfocus = function(item) {\n           return function() {showHelp(item.help);};\n         }(helpText[i]);\n}\n</code></pre>\n\n<p>JavaScript doesn't have block scope but it does have function-scope. By creating a closure, we are capturing the reference to <code>helpText[i]</code> permanently.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>New scopes are <em>only</em> created in <code>function</code> blocks (and <code>with</code>, but don't use that). Loops like <code>for</code> don't create new scopes.</p>\n\n<p>So even if you declared the variable outside the loop, you would run into the exact same problem.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A closure is a function and the scoped environment of that function.</p>\n\n<p>It helps to understand how Javascript implements scope in this case. It is, in fact, just a series of nested dictionaries. Consider this code:</p>\n\n<pre><code>var global1 = \"foo\";\n\nfunction myFunc() {\n    var x = 0;\n    global1 = \"bar\";\n}\n\nmyFunc();\n</code></pre>\n\n<p>When the program starts running, you have a single scope dictionary, the global dictionary, which might have a number of things defined in it:</p>\n\n<pre><code>{ global1: \"foo\", myFunc:&lt;function code&gt; }\n</code></pre>\n\n<p>Say you call myFunc, which has a local variable x. A new scope is created for this function's execution. The function's local scope looks like this:</p>\n\n<pre><code>{ x: 0 }\n</code></pre>\n\n<p>It also contains a reference to its parent scope. So the entire scope of the function looks like this:</p>\n\n<pre><code>{ x: 0, parentScope: { global1: \"foo\", myFunc:&lt;function code&gt; } }\n</code></pre>\n\n<p>This allows myFunc to modify global1. In Javascript, whenever you attempt to assign a value to a variable, it first checks the local scope for the variable name. If it isn't found, it checks the parentScope, and that scope's parentScope, etc. until the variable is found.</p>\n\n<p>A closure is literally a function plus a pointer to that function's scope (which contains a pointer to its parent scope, and so on). So, in your example, after the <code>for</code> loop has finished executing, the scope might look like this:</p>\n\n<pre><code>setupHelpScope = {\n  helpText:&lt;...&gt;,\n  i: 3, \n  item: {'id': 'age', 'help': 'Your age (you must be over 16)'},\n  parentScope: &lt;...&gt;\n}\n</code></pre>\n\n<p>Every closure you create will point to this single scope object. If we were to list every closure that you created, it would look something like this:</p>\n\n<pre><code>[anonymousFunction1, setupHelpScope]\n[anonymousFunction2, setupHelpScope]\n[anonymousFunction3, setupHelpScope]\n</code></pre>\n\n<p>When any of these functions executes, it uses the scope object that it was passed - in this case, it's the same scope object for each function! Each one will look at the same <code>item</code> variable and see the same value, which is the last one set by your <code>for</code> loop.</p>\n\n<p>To answer your question, it doesn't matter whether you add <code>var item</code> above the <code>for</code> loop or inside it. Because <code>for</code> loops do not create their own scope, <code>item</code> will be stored in the current function's scope dictionary, which is <code>setupHelpScope</code>. Enclosures generated inside the <code>for</code> loop will always point to <code>setupHelpScope</code>.</p>\n\n<p>Some important notes:</p>\n\n<ul>\n<li>This behavior occurs because, in Javascript, <code>for</code> loops do not have their own scope - they just use the enclosing function's scope. This is also true of <code>if</code>, <code>while</code>, <code>switch</code>, etc. If this were C#, on the other hand, a new scope object would be created for each loop, and each closure would contain a pointer to its own unique scope.</li>\n<li>Notice that if <code>anonymousFunction1</code> modifies a variable in its scope, it modifies that variable for the other anonymous functions. This can lead to some really bizarre interactions.</li>\n<li>Scopes are just objects, like the ones you program with. Specifically, they're dictionaries. The JS virtual machine manages their deletion from memory just like anything else - with the garbage collector. For this reason, overuse of closures can create a real memory bloat. Since a closure contains a pointer to a scope object (which in turn contains a pointer to its parent scope object and on and on), the entire scope chain cannot be garbage collected, and has to stick around in memory.</li>\n</ul>\n\n<p>Further reading:</p>\n\n<ul>\n<li><a href=\"http://jibbering.com/faq/notes/closures/\">Javascript Closures</a> - the full nitty-gritty details if you're interested. Kind of mind-melting.</li>\n<li><a href=\"http://www.crockford.com/javascript/private.html\">Crockford's simulation of private members using closures</a> - if you can understand how he managed it, then you now understand closures.</li>\n<li><a href=\"http://javascript.crockford.com/\">Crockford's page on Javascript</a> - general good stuff</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>I'm reading the Mozilla developer's site on closures, and I noticed in their example for common mistakes, they had this code:</p>\n\n<pre><code>&lt;p id=\"help\"&gt;Helpful notes will appear here&lt;/p&gt;  \n&lt;p&gt;E-mail: &lt;input type=\"text\" id=\"email\" name=\"email\"&gt;&lt;/p&gt;  \n&lt;p&gt;Name: &lt;input type=\"text\" id=\"name\" name=\"name\"&gt;&lt;/p&gt;  \n&lt;p&gt;Age: &lt;input type=\"text\" id=\"age\" name=\"age\"&gt;&lt;/p&gt;  \n</code></pre>\n\n<p>and</p>\n\n<pre><code>function showHelp(help) {\n  document.getElementById('help').innerHTML = help;\n}\n\nfunction setupHelp() {\n  var helpText = [\n      {'id': 'email', 'help': 'Your e-mail address'},\n      {'id': 'name', 'help': 'Your full name'},\n      {'id': 'age', 'help': 'Your age (you must be over 16)'}\n    ];\n\n  for (var i = 0; i &lt; helpText.length; i++) {\n    var item = helpText[i];\n    document.getElementById(item.id).onfocus = function() {\n      showHelp(item.help);\n    }\n  }\n}\n</code></pre>\n\n<p>and they said that for the onFocus event, the code would only show help for the last item because all of the anonymous functions assigned to the onFocus event have a closure around the 'item' variable, which makes sense because in JavaScript variables do not have block scope.  The solution was to use 'let item = ...' instead, for then it has block scope.</p>\n\n<p>However, what I wonder is why couldn't you declare 'var item' right above the for loop?  Then it has the scope of setupHelp(), and each iteration you are assigning it a different value, which would then be captured as its current value in the closure... right?</p>\n",
            "last_activity_date": 1279403993,
            "question_id": 3273210,
            "score": 20,
            "tags": [
                "javascript",
                "loops",
                "closures"
            ],
            "title": "Javascript closures - variable scope question"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I'm sorry to say you that I've tried during weeks to solve this issue (I needed it for a project) and my conclusion is that it's not possible. </p>\n\n<p>There are a lot of problems arround local access through javascript with chrome, and some of them can be solved using <code>--allow-file-access-from-files</code> and <code>--disable-web-security</code>, including some HTML5 offline features, but I definitely think there's no way to access local files.</p>\n\n<p>I recomend you not to lose your time trying to circunvend this and to try to post messages wich you can interpret into the inner pages, so you can do the DOM modifications there.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Per our discussion in my cube just a minute ago :)</p>\n\n<p>I hit this same problem (<a href=\"http://stackoverflow.com/questions/16070725/ajax-post-response-from-express-js-keeps-throwing-error\">Ajax post response from express js keeps throwing error</a>) trying to get an AJAX post request to work correctly.</p>\n\n<p>What got me around it is not running the file directly off the file system but instead running it from a local server.  I used node to run express.js.  You can install express with the following command:  <code>npm install -g express</code></p>\n\n<p>Once that is accomplished, you can create an express project with the following command:  <strong>express -s -e expressTestApp</strong></p>\n\n<p>Now, in that folder, you should see a file named app.js and a folder named public.  Put the html files you wish to work with in the public folder.  I replaced the file app.js with the following code:</p>\n\n<pre><code>var express = require('/usr/lib/node_modules/express');\nvar app = express();\n\napp.use(function(err, req, res, next){\n  console.error(err.stack);\n  res.send(500, 'Something broke!');\n});\n\napp.use(express.bodyParser());\napp.use(express.static('public'));\n\napp.listen(5555, function() { console.log(\"Server is up and running\");  });\n</code></pre>\n\n<p>Note, the require line may be different.  You have to find where your system actually put express.  You can do that with the following command:  <strong>sudo find / -name express</strong></p>\n\n<p>Now, start the express web server with the following command:  <strong>node app.js</strong></p>\n\n<p>At this time, the webserver is up and running.  Go ahead and open a browswer and navigate to your ip address (or if you're on the same machine as your server, 127.0.0.1).  Use the ip address:portnumber\\filename.html where port number is the 5555 in the app.js file we created.</p>\n\n<p>Now in that browser, you shouldn't (and didn't when we tested it) have any of these same problems anymore.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>file:// protocol and http:// protocol make things to behave very differently in regards to iframes. I had the same issues you describe with an app on PhoneGap which uses file protocol to access all local files within the local assets/www folder. </p>\n\n<p>If seems that modern browsers prevent the display of \"local\" files using the file protocol in iframes for security reasons. </p>\n\n<p>We ended up dumping iframes and just using divs as \"viewports\". Fortunately the overall size of our app was not that big so we managed to load everything in a single page. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am having a tough time figuring out how to access a page loaded in an iframe from the outer page.  Both pages are local files, and I'm using Chrome.</p>\n\n<p>I have an outer page, and many inner pages.  The outer page should always display the page title for the inner page (it makes sense in my application, perhaps less so in this stripped-down example).  This works without any problem in AppJS, but I've been requested to make this app work directly in the browser.  I'm getting the error \"<em>Blocked a frame with origin \"null\" from accessing a frame with origin \"null\". Protocols, domains, and ports must match.</em>\".</p>\n\n<p>I think this is due to Chrome's same origin policy regarding local files, but that hasn't helped me fix the problem directly.  I can work around the issue in this stripped-down example by using the window.postMessage method per <a href=\"http://stackoverflow.com/questions/3076414/ways-to-circumvent-the-same-origin-policy\">Ways to circumvent the same-origin policy</a>.  However, going beyond this example, I also want to manipulate the DOM of the inner page from the outer page, since this will make my code much cleaner - so posting messages won't quite do the job.</p>\n\n<p>Outer Page</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt; \n        &lt;meta name=\"viewport\"&gt;\n    &lt;/head&gt; \n    &lt;body&gt;\n        This text is in the outer page\n        &lt;iframe src=\"html/Home.html\" seamless id=\"PageContent_Iframe\"&gt;&lt;/iframe&gt;\n        &lt;script src=\"./js/LoadNewPage.js\"&gt;&lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Inner Page</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title id=\"Page_Title\"&gt;Home&lt;/title&gt; \n        &lt;meta name=\"viewport\"&gt;\n    &lt;/head&gt; \n    &lt;body&gt;\n        This text is in the inner page\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>JavaScript</p>\n\n<pre><code>var iFrameWindow = document.getElementById(\"PageContent_Iframe\").contentWindow;\nvar pageTitleElement = iFrameWindow.$(\"#Page_Title\");\n</code></pre>\n\n<p>Per <a href=\"http://stackoverflow.com/questions/10415759/is-it-likely-that-future-releases-of-chrome-support-contentwindow-contentdocumen/15684469#15684469\">Is it likely that future releases of Chrome support contentWindow/contentDocument when iFrame loads a local html file from local html file?</a>, I tried launching Chrome with the flag</p>\n\n<pre><code>--allow-file-access-from-files\n</code></pre>\n\n<p>But there was no change in the results.</p>\n\n<p>Per <a href=\"http://stackoverflow.com/questions/3102819/chrome-disable-same-origin-policy\">Chrome: Disable same origin policy</a>, I tried launching Chrome with the flag </p>\n\n<pre><code>--disable-web-security\n</code></pre>\n\n<p>But again there was no change in the results.</p>\n\n<p>Per <a href=\"http://stackoverflow.com/questions/1481251/what-does-document-domain-document-domain-do\">What does document.domain = document.domain do?</a>, I had both pages run the command</p>\n\n<pre><code>document.domain = document.domain;\n</code></pre>\n\n<p>This resulted in the error \"<em>Blocked a frame with origin \"null\" from accessing a frame with origin \"null\". The frame requesting access set \"document.domain\" to \"\", but the frame being accessed did not. Both must set \"document.domain\" to the same value to allow access.</em>\"</p>\n\n<p>For fun, I had both pages run the command </p>\n\n<pre><code>document.domain = \"foo.com\";\n</code></pre>\n\n<p>This resulted in the error \"<em>Uncaught Error: SecurityError: DOM Exception 18</em>\".</p>\n\n<p>I'm floundering.  Any help from more knowledgeable people would be fantastic!  Thanks!</p>\n",
            "last_activity_date": 1387931852,
            "question_id": 17950598,
            "score": 18,
            "tags": [
                "javascript",
                "google-chrome",
                "iframe",
                "same-origin-policy",
                "appjs"
            ],
            "title": "Using iframe with local files in Chrome"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It comes as no help to you but the last poster in <a href=\"http://discussion.forum.nokia.com/forum/showthread.php?t=127724\" rel=\"nofollow\">this</a> thread wrote that its a bug of the webkit engine.<br />\nI can't tell if its a verified bug or not...</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>It will only show the keyboard if you fire focus from a click event, so put a button on the page with a onclick that does the focus and it will show the keyboard.  Completely useless except for validation (on click of submit validation code focuses on invalid element)</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I have a similar issue, only my issue is that the focus will not occur on a 'touchend' event.</p>\n\n<p><a href=\"http://jsfiddle.net/milosdakic/FNVm5/\" rel=\"nofollow\">http://jsfiddle.net/milosdakic/FNVm5/</a></p>\n\n<p>The following code will work in Chrome/Safari etc. but will fail on Mobile Safari. The only way to get it to work is to make the event on 'click', but seeing as the code is made for an iOS device, it would benefit for it to work with touch events.</p>\n\n<p>It seems to be a bug with the Webkit engine.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is a workround:</p>\n\n<pre><code>setTimeout(function(){\n    input.focus();\n},500);//milliseconds\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>You can't do it (at least not on iOS4, iOS5, iOS6, iOS7).</p>\n\n<p>The HTML5 spec for doing this is the <a href=\"http://stackoverflow.com/questions/4166423/default-html-form-focus-without-javascript\">autofocus property of the input tag</a>. But iOS ignores that, presumably for a cleaner UI that doesn't pop up the touch keyboard when navigating to a page. <a href=\"http://www.w3schools.com/tags/tryit.asp?filename=tryhtml5_input_autofocus\" rel=\"nofollow\">Here</a> is a page that demonstrates the autofocus property.</p>\n\n<p>Before HTML5 you would call element.focus() in the window.onload event. However focus() calls are not supported on iOS except during the handler of an onclick event.</p>\n\n<p>Edit: The autofocus property can work <em>if</em> you are using a UIWebView, or if you are using a home screen link. However beware of strange bugs in zoom, or the field not being centered to the screen.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<hr>\n\n<p>A bit late maybe but for future person maybe. In our webapp running on iOS iPad (6 and more recent), we do it with a set interval:</p>\n\n<pre><code>startFocusOnTextField: function() {\n        this.intervalIDForTextFieldFocus = window.setInterval(function() {\n            document.getElementById(page.textInputFieldObj.id).focus();\n        }, 150);\n    },\n</code></pre>\n\n<p>Which is called on page load (jQuery mobile environment)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm writing an iPhone web app, and I want to automatically focus a text field when the page is loaded, bringing up the keyboard. The usual Javascript:</p>\n\n<pre><code>input.focus();\n</code></pre>\n\n<p>doesn't seem to be working. Any ideas?</p>\n",
            "last_activity_date": 1423531489,
            "question_id": 979309,
            "score": 18,
            "tags": [
                "javascript",
                "iphone",
                "html"
            ],
            "title": "How do I focus an HTML text field on an iPhone (causing the keyboard to come up)?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Mark,</p>\n\n<p>Try this example:</p>\n\n<pre><code>    \t$(document).ready(function(){\n\t\t$(\".objectDrag\").draggable({helper:'clone'});  \n\n\t\t$(\"#garbageCollector\").droppable({\n\t\t\taccept: \".objectDrag\",\n\t\t\tdrop: function(event,ui){\n\t\t\t\t\tconsole.log(\"Item was Dropped\");\n\t\t\t\t\t$(this).append($(ui.draggable).clone());\n\t\t\t\t}\n\t\t});\n\n\t});\n</code></pre>\n\n<p>And the Html looks like this</p>\n\n<pre><code>    \t&lt;div class=\"objectDrag\" \n\t\tstyle=\"width:10%; color:white;border:black 1px solid; background-color:#00A\"&gt;Drag me&lt;/div&gt;\n\n\t&lt;div id=\"garbageCollector\" style=\"width:100%; height:400px; background-color:#333; color:white;\"&gt; Drop items on me&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>To re-drag the clone/copy, set the <code>withDataAndEvents</code> argument to <em>true</em>:</p>\n\n<pre><code>$(this).append($(ui.draggable).clone(*true*));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Since I'm not able to comment (yet) I'll leave this as a separate answer - in case someone, like me, will find this question:</p>\n\n<p>For the question from comment</p>\n\n<p>\"But I want the cloned/dropped element to be in the same position it was dropped. do you know how i can do it?\"</p>\n\n<p>I've found solution in different SO question, and the answer is to change this line:</p>\n\n<pre><code>   $(this).append($(ui.draggable).clone());\n</code></pre>\n\n<p>to</p>\n\n<pre><code>   $(this).append($(ui.helper).clone());\n</code></pre>\n\n<p>(change ui.draggable to ui.helper)</p>\n\n<p>Hope it helps.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>i want to be able to create a copy of the element that i want to drag. im using the standard ui draggable and droppable. i know about the helper clone option. but that does not create a copy. the dragged item gets reverted back to the original position.</p>\n",
            "last_activity_date": 1360354453,
            "question_id": 623703,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "clone",
                "draggable"
            ],
            "title": "clone node on drag"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>here's something that works:</p>\n\n<pre><code>\"23||45||45||56||67\".replace(/^((?:[0-9]+\\|\\|){n})([0-9]+)\\|\\|/,\"$1$2&amp;&amp;\")\n</code></pre>\n\n<p>where n is the one less than the nth pipe, (of course you don't need that first subexpression if n = 0)</p>\n\n<p>And if you'd like a function to do this:</p>\n\n<pre><code>function pipe_replace(str,n) {\n   var RE = new RegExp(\"^((?:[0-9]+\\\\|\\\\|){\" + (n-1) + \"})([0-9]+)\\|\\|\");\n   return str.replace(RE,\"$1$2&amp;&amp;\");\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<pre><code>function pipe_replace(str,n) {\n    m = 0;\n    return str.replace(/\\|\\|/g, function (x) {\n        //was n++ should have been m++\n        m++;\n        if (n==m) {\n            return \"&amp;&amp;\";\n        } else {\n            return x;\n        }\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h1>A more general-purpose function</h1>\n\n<p>I came across this question and, although the title is very general, the accepted answer handles only the question's specific use case.</p>\n\n<p>I needed a more general-purpose solution, so I wrote one and thought I'd share it here.</p>\n\n<h2>Usage</h2>\n\n<p>This function requires that you pass it the following arguments:</p>\n\n<ul>\n<li><code>original</code>: the string you're searching in</li>\n<li><code>pattern</code>: either a string to search for, or a RegExp <strong>with a capture group</strong>. Without a capture group, it will throw an error. This is because the function calls <code>split</code> on the original string, and <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/split#Example%3a_Capturing_parentheses\">only if the supplied RegExp contains a capture group will the resulting array contain the matches</a>.</li>\n<li><code>n</code>: the ordinal occurrence to find; eg, if you want the 2nd match, pass in <code>2</code></li>\n<li><code>replace</code>: Either a string to replace the match with, or a function which will take in the match and return a replacement string.</li>\n</ul>\n\n<h2>Examples</h2>\n\n<pre><code>// Pipe examples like the OP's\nreplaceNthMatch(\"12||34||56\", /(\\|\\|)/, 2, '&amp;&amp;') // \"12||34&amp;&amp;56\"\nreplaceNthMatch(\"23||45||45||56||67\", /(\\|\\|)/, 1, '&amp;&amp;') // \"23&amp;&amp;45||45||56||67\"\n\n// Replace groups of digits\nreplaceNthMatch(\"foo-1-bar-23-stuff-45\", /(\\d+)/, 3, 'NEW') // \"foo-1-bar-23-stuff-NEW\"\n\n// Search value can be a string\nreplaceNthMatch(\"foo-stuff-foo-stuff-foo\", \"foo\", 2, 'bar') // \"foo-stuff-bar-stuff-foo\"\n\n// No change if there is no match for the search\nreplaceNthMatch(\"hello-world\", \"goodbye\", 2, \"adios\") // \"hello-world\"\n\n// No change if there is no Nth match for the search\nreplaceNthMatch(\"foo-1-bar-23-stuff-45\", /(\\d+)/, 6, 'NEW') // \"foo-1-bar-23-stuff-45\"\n\n// Passing in a function to make the replacement\nreplaceNthMatch(\"foo-1-bar-23-stuff-45\", /(\\d+)/, 2, function(val){\n  //increment the given value\n  return parseInt(val, 10) + 1;\n}); // \"foo-1-bar-24-stuff-45\"\n</code></pre>\n\n<h2>The Code</h2>\n\n<pre><code>  var replaceNthMatch = function (original, pattern, n, replace) {\n    var parts, tempParts;\n\n    if (pattern.constructor === RegExp) {\n\n      // If there's no match, bail\n      if (original.search(pattern) === -1) {\n        return original;\n      }\n\n      // Every other item should be a matched capture group;\n      // between will be non-matching portions of the substring\n      parts = original.split(pattern);\n\n      // If there was a capture group, index 1 will be\n      // an item that matches the RegExp\n      if (parts[1].search(pattern) !== 0) {\n        throw {name: \"ArgumentError\", message: \"RegExp must have a capture group\"};\n      }\n    } else if (pattern.constructor === String) {\n      parts = original.split(pattern);\n      // Need every other item to be the matched string\n      tempParts = [];\n\n      for (var i=0; i &lt; parts.length; i++) {\n        tempParts.push(parts[i]);\n\n        // Insert between, but don't tack one onto the end\n        if (i &lt; parts.length - 1) {\n          tempParts.push(pattern);\n        }\n      }\n      parts = tempParts;\n    }  else {\n      throw {name: \"ArgumentError\", message: \"Must provide either a RegExp or String\"};\n    }\n\n    // Parens are unnecessary, but explicit. :)\n    indexOfNthMatch = (n * 2) - 1;\n\n  if (parts[indexOfNthMatch] === undefined) {\n    // There IS no Nth match\n    return original;\n  }\n\n  if (typeof(replace) === \"function\") {\n    // Call it. After this, we don't need it anymore.\n    replace = replace(parts[indexOfNthMatch]);\n  }\n\n  // Update our parts array with the new value\n  parts[indexOfNthMatch] = replace;\n\n  // Put it back together and return\n  return parts.join('');\n\n  }\n</code></pre>\n\n<h2>An Alternate Way To Define It</h2>\n\n<p>The least appealing part of this function is that it takes 4 arguments. It could be simplified to need only 3 arguments by adding it as a method to the String prototype, like this:</p>\n\n<pre><code>String.prototype.replaceNthMatch = function(pattern, n, replace) {\n  // Same code as above, replacing \"original\" with \"this\"\n};\n</code></pre>\n\n<p>If you do that, you can call the method on any string, like this:</p>\n\n<pre><code>\"foo-bar-foo\".replaceNthMatch(\"foo\", 2, \"baz\"); // \"foo-bar-baz\"\n</code></pre>\n\n<h2>Passing Tests</h2>\n\n<p>The following are the Jasmine tests that this function passes.</p>\n\n<pre><code>describe(\"replaceNthMatch\", function() {\n\n  describe(\"when there is no match\", function() {\n\n    it(\"should return the unmodified original string\", function() {\n      var str = replaceNthMatch(\"hello-there\", /(\\d+)/, 3, 'NEW');\n      expect(str).toEqual(\"hello-there\");\n    });\n\n  });\n\n  describe(\"when there is no Nth match\", function() {\n\n    it(\"should return the unmodified original string\", function() {\n      var str = replaceNthMatch(\"blah45stuff68hey\", /(\\d+)/, 3, 'NEW');\n      expect(str).toEqual(\"blah45stuff68hey\");\n    });\n\n  });\n\n  describe(\"when the search argument is a RegExp\", function() {\n\n    describe(\"when it has a capture group\", function () {\n\n      it(\"should replace correctly when the match is in the middle\", function(){\n        var str = replaceNthMatch(\"this_937_thing_38_has_21_numbers\", /(\\d+)/, 2, 'NEW');\n        expect(str).toEqual(\"this_937_thing_NEW_has_21_numbers\");\n      });\n\n      it(\"should replace correctly when the match is at the beginning\", function(){\n        var str = replaceNthMatch(\"123_this_937_thing_38_has_21_numbers\", /(\\d+)/, 2, 'NEW');\n        expect(str).toEqual(\"123_this_NEW_thing_38_has_21_numbers\");\n      });\n\n    });\n\n    describe(\"when it has no capture group\", function() {\n\n      it(\"should throw an error\", function(){\n        expect(function(){\n          replaceNthMatch(\"one_1_two_2\", /\\d+/, 2, 'NEW');\n        }).toThrow('RegExp must have a capture group');\n      });\n\n    });\n\n\n  });\n\n  describe(\"when the search argument is a string\", function() {\n\n    it(\"should should match and replace correctly\", function(){\n      var str = replaceNthMatch(\"blah45stuff68hey\", 'stuff', 1, 'NEW');\n      expect(str).toEqual(\"blah45NEW68hey\");\n    });\n\n  });\n\n  describe(\"when the replacement argument is a function\", function() {\n\n    it(\"should call it on the Nth match and replace with the return value\", function(){\n\n      // Look for the second number surrounded by brackets\n      var str = replaceNthMatch(\"foo[1][2]\", /(\\[\\d+\\])/, 2, function(val) {\n\n        // Get the number without the [ and ]\n        var number = val.slice(1,-1);\n\n        // Add 1\n        number = parseInt(number,10) + 1;\n\n        // Re-format and return\n        return '[' + number + ']';\n      });\n      expect(str).toEqual(\"foo[1][3]\");\n\n    });\n\n  });\n\n});\n</code></pre>\n\n<h2>May not work in IE7</h2>\n\n<p>This code may fail in IE7 because that browser incorrectly splits strings using a regex, as discussed <a href=\"http://stackoverflow.com/questions/4417931/javascript-split-regex-bug-in-ie7\">here</a>. [shakes fist at IE7]. I believe that <a href=\"http://blog.stevenlevithan.com/archives/cross-browser-split\">this</a> is the solution; if you need to support IE7, good luck. :)</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>This answer is out of scope for this question. </p>\n\n<p>But here is how you can do this in perl where you want to replace the nth occurence.  </p>\n\n<pre><code>perl -pe  's/(((.*?\\|\\|){1}){n-1})(.*?)\\|\\|/\\1\\4&amp;\\&amp;/' \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to write a regex function that will identify and replace a single instance of a match within a string without affecting the other instances.  For example, I have this string:</p>\n\n<pre><code>12||34||56\n</code></pre>\n\n<p>I want to replace the second set of pipes with ampersands to get this string:</p>\n\n<pre><code>12||34&amp;&amp;56\n</code></pre>\n\n<p>The regex function needs to be able to handle x amount of pipes and allow me to replace the nth set of pipes, so I could use the same function to make these replacements:</p>\n\n<pre><code>23||45||45||56||67 -&gt; 23&amp;&amp;45||45||56||67\n\n23||34||98||87 -&gt; 23||34||98&amp;&amp;87\n</code></pre>\n\n<p>I know that I could just split/replace/concat the string at the pipes, and I also know that I can match on <code>/\\|\\|/</code> and iterate through the resulting array, but I'm interested to know if it's possible to write a single expression that can do this.  Note that this would be for Javascript, so it's possible to generate a regex at runtime using <code>eval()</code>, but it's not possible to use any Perl-specific regex instructions.</p>\n",
            "last_activity_date": 1390563496,
            "question_id": 36183,
            "score": 18,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Replacing the nth instance of a regex match in Javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It's impossible. <code>document.cookie</code> contains information in string like this:</p>\n\n<pre><code>key1=value1;key2=value2;...\n</code></pre>\n\n<p>So there isn't any information about dates.</p>\n\n<p>You can store these dates in separate cookie variable:</p>\n\n<pre><code>auth_user=Riateche;auth_expire=01/01/2012\n</code></pre>\n\n<p>But user can change this variable.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>The information is not available through document.cookie, but if you're really desperate for it, you could try performing a request through the XmlHttpRequest object to the current page and access the cookie header using getResponseHeader().</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>One possibility is to delete to cookie you are looking for the expiration date from and rewrite it. Then you'll know the expiration date.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>you can't get the expiration date of a cookie through javascript because when you try to read the cookie from javascript the document.cookie return just the name and the value of the cookie as pairs </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yes, It is possible. I've separated the code in two files: </p>\n\n<p><strong>index.php</strong></p>\n\n<pre><code>&lt;?php\n\n    $time = time()+(60*60*24*10);\n    $timeMemo = (string)$time;\n    setcookie(\"cookie\", \"\" . $timeMemo . \"\", $time);\n\n?&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;\n            Get cookie expiration date from JS\n        &lt;/title&gt;\n        &lt;script type=\"text/javascript\"&gt;\n\n            function cookieExpirationDate(){\n\n                var infodiv = document.getElementById(\"info\");\n\n                var xmlhttp;\n                if (window.XMLHttpRequest){ \n                    xmlhttp = new XMLHttpRequest;\n                }else{\n                    xmlhttp = new ActiveXObject(Microsoft.XMLHTTP);\n                }\n\n                xmlhttp.onreadystatechange = function (){\n                    if(xmlhttp.readyState == 4 &amp;&amp; xmlhttp.status == 200){\n                        infodiv.innerHTML = xmlhttp.responseText;\n                    }\n                }\n\n                xmlhttp.open(\"GET\", \"cookie.php\", true);\n                xmlhttp.send();\n\n            }\n\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;input type=\"button\" onclick=\"javascript:cookieExpirationDate();\" value=\"Get Cookie expire date\" /&gt;\n        &lt;hr /&gt;\n        &lt;div id=\"info\"&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>cookie.php</strong></p>\n\n<pre><code>&lt;?php\n\n    function secToDays($sec){\n        return ($sec / 60 / 60 / 24);\n    }\n\n    if(isset($_COOKIE['cookie'])){\n\n        if(round(secToDays((intval($_COOKIE['cookie']) - time())),1) &lt; 1){\n            echo \"Cookie will expire today\";\n        }else{\n            echo \"Cookie will expire in \" . round(secToDays((intval($_COOKIE['cookie']) - time())),1) . \" day(s)\";\n        }\n    }else{\n        echo \"Cookie not set...\";\n    }\n\n?&gt;\n</code></pre>\n\n<p>Now, index.php must be loaded once. The button \"Get Cookie expire date\", thru an AJAX request, will always get you an updated \"time left\" for cookie expiration, in this case in days.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are using Chrome you can goto the \"Resources\" tab and find the item \"Cookies\" in the left sidebar. From there select the domain you are checking the set cookie for and it will give you a list of cookies associated with that domain, along with their expiration date.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to retrieve the creation or expiration date of an existing cookie from javascript? If so how?</p>\n",
            "last_activity_date": 1414495107,
            "question_id": 3274875,
            "score": 16,
            "tags": [
                "javascript",
                "cookies"
            ],
            "title": "How to get cookie expiration date / creation date from javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>{} != {}</code> is true because both <code>{}</code>'s are completely different objects. However, variables that are referencing the same object hold equality:</p>\n\n<pre><code>\u200bvar a = {},\n    b = a;\n\nassert( a == b )\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>{} != ({})\n</code></pre>\n\n<p>This is a syntax error.</p>\n\n<blockquote>\n  <p>SyntaxError: Unexpected token !=</p>\n</blockquote>\n\n<p><code>{}</code> is ambigious like that. Is it an empty block, or an empty object literal? It's failing because a comparison operator can not follow a block.</p>\n\n<p>Wrapping it with parenthesis makes the parser treat it as an expression. An expression can't contain a block, so it knows it's an object.</p>\n\n<p>However, if you wrap that comparison in an expression...</p>\n\n<pre><code>({} != ({}))\n</code></pre>\n\n<p>...it's still true because variables which have an object assigned to them's values are a <em>pointer</em> to them and as a consequence, they are never copied around by their contents (though this is irrelevant to your example). Because of this, their pointer is always different and the comparison fails.</p>\n\n<p>This also implies that comparing two variables which point to the same object will work as expected, as their pointers will be the same.</p>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>It's commonly known that <code>{}</code> is shorter way to define an object like <code>[]</code> is for an array.</p>\n\n<p>But now I am wondering why:</p>\n\n<pre><code>{} != ({})\n</code></pre>\n\n<ul>\n<li><code>{}</code> evaluates to undefined</li>\n<li><code>({})</code> evaluates to \"correct\" Object</li>\n</ul>\n\n<p>Why is JavaScript behaving like this ?</p>\n\n<p>For example <code>1</code> equals to <code>(1)</code>, so why <code>{}</code> not equals to <code>({})</code> ?</p>\n",
            "last_activity_date": 1357196512,
            "question_id": 14115902,
            "score": 15,
            "tags": [
                "javascript"
            ],
            "title": "Why {} != ( {} ) in JavaScript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Use the <a href=\"http://docs.jquery.com/Core/jQuery.noConflict\">noConflict</a> method for jQuery and assign it to a new (short) variable.  Use the new variable wherever you would have used the $ for jQuery.</p>\n\n<pre><code>var $j = jQuery.noConflict();\n\n$j(function() {\n    $j('#selector').each( .... );\n});\n</code></pre>\n\n<p>or, if you don't need to mix Prototype/jQuery you can wrap all of your jQuery code in an anonymous function.</p>\n\n<pre><code>(function($) {\n    // $ sign here is a parameter, which is set to jQuery \n\n    $(function() {\n        $('#selector').each( .... );\n    });\n})(jQuery);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                }
            ],
            "body": "<p>If a page has both JQuery and Prototype then I got conflict. There is a option to disable $ sign for JQuery so there is no conflict but, I have to use keyword JQuery instead of $.</p>\n\n<p>I wonder if there is any option for Prototype to solve this conflict. Is there any way to use both libraries without compromising their benefit or short keyword?</p>\n\n<p>As far as I know, it is not a good idea to use multiple JS library for same page; but it may be helpful for sometimes.</p>\n",
            "last_activity_date": 1325067095,
            "question_id": 1401349,
            "score": 15,
            "tags": [
                "javascript",
                "jquery",
                "prototypejs",
                "conflict"
            ],
            "title": "How to avoid conflict between JQuery and Prototype"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>This article (<a href=\"http://stackoverflow.com/questions/20733962/why-is-window-showmodaldialog-deprecated-what-to-use-instead\">Why is window.showModalDialog deprecated? What to use instead?</a>) seems to suggest that showModalDialog has been deprecated.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<blockquote>\n  <p>The window.showModalDialog is deprecated (Intent to Remove:\n  window.showModalDialog(), Removing showModalDialog from the Web\n  platform). [...]The latest plan is to land the showModalDialog removal\n  in Chromium 37. This means the feature will be gone in Opera 24 and\n  Chrome 37, both of which should be released in September.[...]</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>From <a href=\"http://codecorner.galanter.net/2014/09/02/reenable-showmodaldialog-in-chrome/\">http://codecorner.galanter.net/2014/09/02/reenable-showmodaldialog-in-chrome/</a> </p>\n\n<p>It's deprecated by design. You can re-enable showModalDialog support, but only temporarily \u2013 until May of 2015. Use this time to create alternative solutions.</p>\n\n<p>Here\u2019s how to do it in Chrome for Windows. Open Registry Editor (regedit) and create following key:</p>\n\n<p><code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Google\\Chrome\\EnableDeprecatedWebPlatformFeatures</code></p>\n\n<p>Under the <code>EnableDeprecatedWebPlatformFeatures</code> key create a string value with name <code>1</code> and value of <code>ShowModalDialog_EffectiveUntil20150430</code>. To verify that the policy is enabled, visit chrome://policy URL.\n<hr>\n<strong><em>UPDATE:</em></strong> If the above didn\u2019t work for you here\u2019s another method to try.</p>\n\n<ol>\n<li>Download Chrome ADM templates from <a href=\"http://www.chromium.org/administrators/policy-templates\">http://www.chromium.org/administrators/policy-templates</a></li>\n<li>Extract and import policy relevant to your locale (e.g. windows\\adm\\en-US\\chrome.adm. You can import either via <code>gpedit.msc</code>or using these utilities on Home editions of windows: <a href=\"http://blogs.technet.com/b/fdcc/archive/2008/05/07/lgpo-utilities.aspx\">http://blogs.technet.com/b/fdcc/archive/2008/05/07/lgpo-utilities.aspx</a>)</li>\n<li>Under \u201cAdminstrative Templates\u201d locate Google Chrome template and enable \u201cEnable Deprecated Web Platform Feautes\u201d.</li>\n<li>Open the feature and add \u201cShowModalDialog_EffectiveUntil20150430\u2033 key.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Yes, It's deprecated. Spent yesterday rewriting code to use Window.open and PostMessage instead. </p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I put the following javascript in the page header and it seems to work. It detects when the browser does not support showModalDialog and attaches a custom method that uses window.open, parses the dialog specs (height, width, scroll, etc.), centers on opener and sets focus back to the window (if focus is lost). Also, it uses the URL as the window name so that a new window is not opened each time. If you are passing window args to the modal you will need to write some additional code to fix that. The popup is not modal but at least you don't have to change a lot of code. Might need some work for your circumstances.</p>\n\n<pre><code>   &lt;script type=\"text/javascript\"&gt;\n\n  // fix for deprecated method in Chrome 37\n  if (!window.showModalDialog) {\n     window.showModalDialog = function (arg1, arg2, arg3) {\n\n        var w;\n        var h;\n        var resizable = \"no\";\n        var scroll = \"no\";\n        var status = \"no\";\n\n        // get the modal specs\n        var mdattrs = arg3.split(\";\");\n        for (i = 0; i &lt; mdattrs.length; i++) {\n           var mdattr = mdattrs[i].split(\":\");\n\n           var n = mdattr[0];\n           var v = mdattr[1];\n           if (n) { n = n.trim().toLowerCase(); }\n           if (v) { v = v.trim().toLowerCase(); }\n\n           if (n == \"dialogheight\") {\n              h = v.replace(\"px\", \"\");\n           } else if (n == \"dialogwidth\") {\n              w = v.replace(\"px\", \"\");\n           } else if (n == \"resizable\") {\n              resizable = v;\n           } else if (n == \"scroll\") {\n              scroll = v;\n           } else if (n == \"status\") {\n              status = v;\n           }\n        }\n\n        var left = window.screenX + (window.outerWidth / 2) - (w / 2);\n        var top = window.screenY + (window.outerHeight / 2) - (h / 2);\n        var targetWin = window.open(arg1, arg1, 'toolbar=no, location=no, directories=no, status=' + status + ', menubar=no, scrollbars=' + scroll + ', resizable=' + resizable + ', copyhistory=no, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);\n        targetWin.focus();\n     };\n  }\n</code></pre>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I wouldn't try to temporarily enable a deprecated feature. According to the MDN documentation for <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.showModalDialog\" rel=\"nofollow\">showModalDialog</a>, there's already a polyfill <a href=\"https://github.com/niutech/showModalDialog\" rel=\"nofollow\">available on Github</a>.</p>\n\n<p>I just used that to add <code>windows.showModalDialog</code> to a legacy enterprise application as a userscript, but you can obviously also add it in the head of the HTML if you have access to the source.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A very good, and working, javascript solution is provided here :\n<a href=\"https://github.com/niutech/showModalDialog\" rel=\"nofollow\">https://github.com/niutech/showModalDialog</a></p>\n\n<p>I personnally used it, works like before for other browser and it creates a new dialog for chrome browser.</p>\n\n<p>Here is an example on how to use it :</p>\n\n<pre><code>function handleReturnValue(returnValue) {\n    if (returnValue !== undefined) {\n        // do what you want\n    }\n}\n\nvar myCallback = function (returnValue) { // callback for chrome usage\n    handleReturnValue(returnValue);\n};\n\nvar returnValue = window.showModalDialog('someUrl', 'someDialogTitle', 'someDialogParams', myCallback); \nhandleReturnValue(returnValue); // for other browsers except Chrome\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>We have a huge web application where we use <code>window.showmodaldialog</code> for alerts, confirmations and popups. Since Chrome version 37 this call has been disabled.</p>\n\n<p>Is there any quick workaround to make <code>window.showmodaldialog</code> work in the latest version of Chrome?</p>\n\n<p><strong><em>I am adding here a workaround for window.showmodaldialog, although this is not a perfect workaround because this will not break the code execution as showmodaldialog was doing,  instead this will open the popups.</em></strong></p>\n\n<pre><code>window.showModalDialog = function (url, arg, feature) {\n        var opFeature = feature.split(\";\");\n       var featuresArray = new Array()\n        if (document.all) {\n           for (var i = 0; i &lt; opFeature.length - 1; i++) {\n                var f = opFeature[i].split(\"=\");\n               featuresArray[f[0]] = f[1];\n            }\n       }\n        else {\n\n            for (var i = 0; i &lt; opFeature.length - 1; i++) {\n                var f = opFeature[i].split(\":\");\n               featuresArray[f[0].toString().trim().toLowerCase()] = f[1].toString().trim();\n            }\n       }\n\n\n\n       var h = \"200px\", w = \"400px\", l = \"100px\", t = \"100px\", r = \"yes\", c = \"yes\", s = \"no\";\n       if (featuresArray[\"dialogheight\"]) h = featuresArray[\"dialogheight\"];\n        if (featuresArray[\"dialogwidth\"]) w = featuresArray[\"dialogwidth\"];\n       if (featuresArray[\"dialogleft\"]) l = featuresArray[\"dialogleft\"];\n        if (featuresArray[\"dialogtop\"]) t = featuresArray[\"dialogtop\"];\n        if (featuresArray[\"resizable\"]) r = featuresArray[\"resizable\"];\n       if (featuresArray[\"center\"]) c = featuresArray[\"center\"];\n      if (featuresArray[\"status\"]) s = featuresArray[\"status\"];\n        var modelFeature = \"height = \" + h + \",width = \" + w + \",left=\" + l + \",top=\" + t + \",model=yes,alwaysRaised=yes\" + \",resizable= \" + r + \",celter=\" + c + \",status=\" + s;\n\n        var model = window.open(url, \"\", modelFeature, null);\n\n       model.dialogArguments = arg;\n\n    }\n</code></pre>\n\n<p><strong><em>Just put this code in the head section of page.</em></strong></p>\n",
            "last_activity_date": 1424441406,
            "question_id": 25663053,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "asp.net",
                "google-chrome",
                "cross-browser"
            ],
            "title": "How can I make window.showmodaldialog work in chrome 37?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can read it, but you can't <strong>set</strong> it. <code>value=\"123\"</code> will be ignored, so it won't have a value until you click on it and pick a file.</p>\n\n<p>Even then, the value will likely be mangled with something like <code>c:\\fakepath\\</code> to keep the details of the user's filesystem private.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<pre><code>$('input[type=file]').val()\n</code></pre>\n\n<p>That'll get you the file selected. </p>\n\n<p>However, you can't set the value yourself.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can't set the <code>value</code> of a <code>file</code> input in the markup, like you did with <code>value=\"123\"</code>.</p>\n\n<p>This example shows that it really works:\n<a href=\"http://jsfiddle.net/marcosfromero/7bUba/\" rel=\"nofollow\">http://jsfiddle.net/marcosfromero/7bUba/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can get it by using document.getElementById();</p>\n\n<pre><code>var fileVal=document.getElementById(\"some Id\");\nalert(fileVal.value);\n</code></pre>\n\n<p>will give the value of file,but it gives with fakepath as follows</p>\n\n<pre><code>c:\\fakepath\\filename\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Remove value=\"123\" thing will look great. Then try:</p>\n\n<pre><code>$(\"file_selector\").val();\n</code></pre>\n\n<p>Still one issue. You will get one c:\\fakepath\\yourfile.extension.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a <code>&lt;input type=\"file\" id=\"uploadPicture\" value=\"123\"&gt;</code></p>\n\n<p>When i'm using: <code>alert($(\"#uploadPicture\").val());</code></p>\n\n<p>It alerts an empty dialog...</p>\n\n<p>What am i doing wrong?</p>\n",
            "last_activity_date": 1367676082,
            "question_id": 5903323,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "file",
                "input"
            ],
            "title": "Cant get value of input type=&quot;file&quot;?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can use <a href=\"https://developer.mozilla.org/en/NsIEnvironment\" rel=\"nofollow\">nsIEnvironment</a> interface to get <code>USERNAME</code> environmnet variable.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;script language=\"javascript\"&gt;\n        function GetUserName()\n        {\n            var wshell = new ActiveXObject(\"WScript.Shell\");\n            alert(wshell.ExpandEnvironmentStrings(\"%USERNAME%\"));\n        }\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body OnLoad=\"GetUserName();\"&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This does the trick on Windows:</p>\n\n<pre><code>function getUser() {\n   return Components.classes[\"@mozilla.org/process/environment;1\"].getService(Components.interfaces.nsIEnvironment).get('USERNAME');\n}      \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Firefox already has Integrated Authentication built-in (many people don't know that).<br>\nSee: <a href=\"https://developer.mozilla.org/en-US/docs/Integrated_Authentication\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Integrated_Authentication</a></p>\n\n<p>Here is a Popular Firefox addon that eases the configuration: \n<a href=\"https://addons.mozilla.org/nl/firefox/addon/integrated-auth-for-firefox/\" rel=\"nofollow\">https://addons.mozilla.org/nl/firefox/addon/integrated-auth-for-firefox/</a></p>\n\n<p>Here is some extra explanation:<br>\n<a href=\"http://justgeeks.blogspot.nl/2011/01/firefox-supports-integrated-windows.html\" rel=\"nofollow\">http://justgeeks.blogspot.nl/2011/01/firefox-supports-integrated-windows.html</a></p>\n\n<p>Good luck!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Following code works for me instead of onload event with function calling:</p>\n\n<pre><code>var objUserInfo = new ActiveXObject(\"WScript.network\");\ndocument.write(objUserInfo.ComputerName+\"&lt;br&gt;\"); \ndocument.write(objUserInfo.UserDomain+\"&lt;br&gt;\"); \ndocument.write(objUserInfo.UserName+\"&lt;br&gt;\");  \nvar uname =  objUserInfo.UserName;\nalert(uname);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am working a Firefox addon (which is written in JavaScript) and need to determine the Windows user currently logged on. Is there a way to do this? </p>\n",
            "last_activity_date": 1365249286,
            "question_id": 2968690,
            "score": 14,
            "tags": [
                "javascript",
                "firefox",
                "firefox-addon",
                "username"
            ],
            "title": "Get Windows username with JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It's just like you did. And I'll give you a small tip for these kind of silly things: just use the browser url box to try js syntax. for example, write this: <code>javascript:alert(\"test\"+5)</code> and you have your answer.\nThe problem in your code is probably that this element does not exist in your document... maybe it's inside a form or something. You can test this too by writing in the url: <code>javascript:alert(document.horseThumb_5)</code> to check where your mistake is.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In javascript the \"+\" operator is used to add numbers or to concatenate strings.\nif one of the operands is a string \"+\" concatenates, and if it is only numbers it adds them.</p>\n\n<p>example:</p>\n\n<pre><code>1+2+3 == 6\n\"1\"+2+3 == \"123\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Your code is correct. Perhaps your problem is that you are not passing an ID to the <code>AddBorder</code> function, or that an element with that ID does not exist. Or you might be running your function before the element in question is accessible through the browser's DOM.</p>\n\n<p>To identify the first case or determine the cause of the second case, add these as the first lines inside the function:</p>\n\n<pre><code>alert('ID number: ' + id);\nalert('Return value of gEBI: ' + document.getElementById('horseThumb_' + id));\n</code></pre>\n\n<p>That will open pop-up windows each time the function is called, with the value of <code>id</code> and the return value of <code>document.getElementById</code>. If you get <code>undefined</code> for the ID number pop-up, you are not passing an argument to the function. If the ID does not exist, you would get your (incorrect?) ID number in the first pop-up but get <code>null</code> in the second.</p>\n\n<p>The third case would happen if your web page looks like this, trying to run <code>AddBorder</code> while the page is still loading:</p>\n\n<pre><code>&lt;head&gt;\n&lt;title&gt;My Web Page&lt;/title&gt;\n&lt;script&gt;\n    function AddBorder(id) {\n        ...\n    }\n    AddBorder(42);    // Won't work; the page hasn't completely loaded yet!\n&lt;/script&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>To fix this, put all the code that uses AddBorder inside an <code>onload</code> event handler:</p>\n\n<pre><code>// Can only have one of these per page\nwindow.onload = function() {\n    ...\n    AddBorder(42);\n    ...\n} \n\n// Or can have any number of these on a page\nfunction doWhatever() {\n   ...\n   AddBorder(42);\n   ...\n}\n\nif(window.addEventListener) window.addEventListener('load', doWhatever, false);\nelse window.attachEvent('onload', doWhatever);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>This can happen because java script allows white spaces sometimes if a string is concatenated with a number. try removing the spaces and create a string and then pass it into getElementById.</p>\n\n<p>example:</p>\n\n<pre><code>var str = 'horseThumb_'+id;\n\nstr = str.replace(/^\\s+|\\s+$/g,\"\");\n\nfunction AddBorder(id){\n\n    document.getElementById(str).className='hand positionLeft'\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>So I am trying to make a string out of a string and a passed variable(which is a number).\nHow do I do that?</p>\n\n<p>I have something like this:</p>\n\n<pre><code>function AddBorder(id){\n    document.getElementById('horseThumb_'+id).className='hand positionLeft'\n}\n</code></pre>\n\n<p>So how do I get that 'horseThumb' and an id into one string?</p>\n\n<p>I tried all the various options, I also googled and besides learning that I can insert a variable in string like this getElementById(\"horseThumb_{$id}\") (&lt;-- didn't work for me don' t know why) I found nothing useful. So any help would be very appreciated.</p>\n",
            "last_activity_date": 1373027045,
            "question_id": 4234533,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "how do i concatenate a string with a variable - javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Is window really global in Javascript?</p>\n</blockquote>\n\n<p>Yes. Unless you create a new variable called window in a narrower scope</p>\n\n<pre><code>function foo() {\n    var window;\n}\n</code></pre>\n\n<blockquote>\n  <p>Inside foo we can access window, we all know that, but why exactly?</p>\n</blockquote>\n\n<p>Any function can access variables declared in a wider scope. There is nothing special about window there.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>It has to do with the <em>scope chain</em>.</p>\n\n<p>Have a look at the following <a href=\"http://www.youtube.com/watch?v=mHtdZgou0qU#t=5m\" rel=\"nofollow\">presentation of Nicholas C. Zakas</a>.  (starting around min 5)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>In the book <a href=\"http://oreilly.com/catalog/9780596517748\" rel=\"nofollow\">Javascript: The Good Parts</a>, as I understand, Douglas Crockford explains that <code>window</code> is the global object of the web browser that contains all the global variables. It is like the One Ring...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The reason why you can access <em>\"out of scope\"</em> or <em>\"free\"</em> variables in ECMAscript is the such called <em>Scope chain</em>. The scope chain is a special property from each <em>Execution context</em>. As mentioned several times before, a context object looks at least like:</p>\n\n<ul>\n<li>[[scope]]</li>\n<li>Variable / Activation Object</li>\n<li>\"this\" context value</li>\n</ul>\n\n<p>each time you access a variable(-name) within a context (a function for instance), the lookup process always starts in it's own <code>Activation Object</code>. All formal parameters, function declarations and locally defined variables (var) are stored in that special object. If the variablename was not found in that object, the search goes into the <code>[[Scope]]</code>-chain. Each time a function(-context) is initialized, it'll copy all <strong>parent context variable/activation objects</strong> into its internal <code>[[Scope]]</code> property. That is what we call, a <em>lexical scope</em>. That is the reason why <em>Closures</em> work in ECMAscript. Since the <code>Global context</code> also has an <code>Variable Object</code> (more precisely, **the variable object for the global object is the global object itself) it also gets copied into the functions <em>[[Scope]]</em> property.</p>\n\n<p>That is the reason why you can access <code>window</code> from within any function :-)</p>\n\n<p>The above explanation has one important conceptional conclusion: Any function in ECMAscript is a <em>Closure</em>, which is true. Since every function will at least copy the <em>global context VO</em> in its <em>[[Scope]]</em> property.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>It's all defined in ECMAScript.</p>\n\n<p>The global is a Lexical environment that doesn't have an outer lexical environment. All other environments are nested within it, and is bound to a global object with properties specified by the spec.</p>\n\n<p>This places the properties of the global object at the start of the scope chain, from which all other environments inherit.</p>\n\n<p><a href=\"http://es5.github.com/#x10.2.3\">ES 10.2.3 The Global Environment</a>:</p>\n\n<blockquote>\n  <p>The global environment is a unique Lexical Environment which is created before any ECMAScript code is executed. The global environment\u2019s Environment Record is an object environment record whose binding object is the global object (15.1). The global environment\u2019s outer environment reference is null.</p>\n  \n  <p>As ECMAScript code is executed, additional properties may be added to the global object and the initial properties may be modified.</p>\n</blockquote>\n\n<p><a href=\"http://es5.github.com/#x15.1\">ES 15.1 The Global Object</a></p>\n\n<blockquote>\n  <p>The unique global object is created before control enters any execution context.</p>\n  \n  <p>Unless otherwise specified, the standard built-in properties of the global object have attributes {[[Writable]]: true, [[Enumerable]]: false, [[Configurable]]: true}.</p>\n  \n  <p>The global object does not have a [[Construct]] internal property; it is not possible to use the global object as a constructor with the new operator.</p>\n  \n  <p>The global object does not have a [[Call]] internal property; it is not possible to invoke the global object as a function.</p>\n  \n  <p>The values of the [[Prototype]] and [[Class]] internal properties of the global object are implementation-dependent.</p>\n  \n  <p>In addition to the properties defined in this specification the global object may have additional host defined properties. This may include a property whose value is the global object itself; for example, in the HTML document object model the window property of the global object is the global object itself.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>window is the base scope of all javascript objects, and it's automatically \"attached\" to each variables you define, unless you use \"var\" before the declaration, in this case the scope of the variable it's local (that means that it's contained inside the parent function, or is otherwise global too, if you are declaring your variable outside a function block). Moreover <strong>window is defined as a constant</strong>, that is <strong>you can't redefine the window object</strong> (you will get an error saying \"type error: redeclaration of const window\").</p>\n\n<p>so:</p>\n\n<pre><code>window.foo = 5;\n</code></pre>\n\n<p>it's the same as:</p>\n\n<pre><code>var foo = 5;\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>function() {\nfoo = 5;\n}\n</code></pre>\n\n<p>but:</p>\n\n<pre><code>function() {\nvar foo = 5;\n}\n</code></pre>\n\n<p>in this case \"foo\" is local (window.foo === undefined)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Take this piece of Javascript in a browser:</p>\n\n<pre><code>&lt;script&gt;\n\nconsole.log(window.someThing);\nvar x = 12;\n\nfunction foo() {\n   window.otherThing = x;\n}\n\n&lt;/script&gt;\n</code></pre>\n\n<p>Inside <code>foo</code> we can access <code>window</code>, we all know that, but why exactly?</p>\n\n<ul>\n<li>Is it some kind of special global variable?</li>\n<li>Or does the \"root scope\" (inside the <code>script</code> tag) have it as an implicit local variable and is it simply \"closure-inherited\" as any other local variable (like <code>x</code> above) can be?</li>\n</ul>\n\n<p>And how does that concur with variables declared directly inside the <code>script</code> tag being set as properties of <code>window</code>? (Or is that not so?)</p>\n\n<pre><code>&lt;script&gt;\nvar x = 12;\nfunction() {\n   console.log(window.x);\n}\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1310584003,
            "question_id": 6679635,
            "score": 12,
            "tags": [
                "javascript",
                "scope",
                "closures",
                "theory"
            ],
            "title": "Is window really global in Javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>try this,</p>\n\n<pre><code>(\\/\\*[\\w\\'\\s\\r\\n\\*]*\\*\\/)|(\\/\\/[\\w\\s\\']*)|(\\&lt;![\\-\\-\\s\\w\\&gt;\\/]*\\&gt;)\n</code></pre>\n\n<p>should work :)\n<img src=\"http://i.stack.imgur.com/EAMRT.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>None of the other posted solutions helped me.  I had pretty complex block comments going on with nested asterisks, slashes, etc.  The regular expression at the following site worked like a charm:</p>\n\n<p><a href=\"http://upshots.org/javascript/javascript-regexp-to-remove-comments\">http://upshots.org/javascript/javascript-regexp-to-remove-comments</a></p>\n\n<p>I recommend adding <code>?:</code> inside of every open parenthesis to enhance performance (unless you really need a back reference).  Below is my modified version of the regex:</p>\n\n<p><strong>UPDATED</strong> (to allow urls in code)<br>\n<strong>NOTE:</strong> this will strip the semicolons preceding single line comments and save it in back-reference <code>$1</code>:</p>\n\n<pre><code>/(?:\\/\\*(?:[\\s\\S]*?)\\*\\/)|(?:([\\s;])+\\/\\/(?:.*)$)/gm\n\n// PHP: \n// preg_replace(\"/(?:\\/\\*(?:[\\s\\S]*?)\\*\\/)|(?:([\\s;])+\\/\\/(?:.*)$)/m\", \"$1\", $source_string);\n\n// JavaScript: \n// source_string.replace(/(?:\\/\\*(?:[\\s\\S]*?)\\*\\/)|(?:([\\s;])+\\/\\/(?:.*)$)/gm, '$1');\n</code></pre>\n\n<p>(original - for historical reference only)</p>\n\n<pre><code>/(?:\\/\\*(?:[\\s\\S]*?)\\*\\/)|(?:\\/\\/(?:.*)$)/gm\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>Based on above attempts and using UltraEdit , mostly Abhishek Simon, I found this to work for inline comments and handles all of the characters within the comment.</p>\n\n<pre><code>(\\s\\/\\/|$\\/\\/)[\\w\\s\\W\\S.]*\n</code></pre>\n\n<p>This matches comments at the start of the line or with a space before //</p>\n\n<blockquote>\n  <p>//public static final String LETTERS_WORK_FOLDER =\n  \"/Letters/Generated/Work\";</p>\n</blockquote>\n\n<p>but not </p>\n\n<blockquote>\n  <p>\"http://schemas.us.com.au/hub/'>\" +</p>\n</blockquote>\n\n<p>so it is only not good for something like</p>\n\n<blockquote>\n  <p>if(x){f(x)}//where f is some function</p>\n</blockquote>\n\n<p>it just needs to be </p>\n\n<blockquote>\n  <p>if(x){f(x)} //where f is function</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have been putting togethor an expression that needs to do something similar.<br>\nthe finished product is: </p>\n\n<pre><code>/(?:(([\"'])(?:(?:\\\\\\\\)|\\\\\\2|(?!\\\\\\2)\\\\|(?!\\2).|[\\n\\r])*\\2)|(\\/\\*(?:(?!\\*\\/).|[\\n\\r])*\\*\\/)|(\\/\\/[^\\n\\r]*(?:[\\n\\r]+|$))|((?:=|:)\\s*(?:\\/(?:(?:(?!\\\\*\\/).)|\\\\\\\\|\\\\\\/|[^\\\\]\\[(?:\\\\\\\\|\\\\\\]|[^]])+\\])+\\/))|((?:\\/(?:(?:(?!\\\\*\\/).)|\\\\\\\\|\\\\\\/|[^\\\\]\\[(?:\\\\\\\\|\\\\\\]|[^]])+\\])+\\/)[gimy]?\\.(?:exec|test|match|search|replace|split)\\()|(\\.(?:exec|test|match|search|replace|split)\\((?:\\/(?:(?:(?!\\\\*\\/).)|\\\\\\\\|\\\\\\/|[^\\\\]\\[(?:\\\\\\\\|\\\\\\]|[^]])+\\])+\\/))|(&lt;!--(?:(?!--&gt;).)*--&gt;))/g\n</code></pre>\n\n<p>Scary right?</p>\n\n<p>To break it down, the first part matches anything within single or double quotation marks<br />\nThis is necessary to avoid matching quoted strings</p>\n\n<pre><code>(([\"'])(?:(?:\\\\\\\\)|\\\\\\2|(?!\\\\\\2)\\\\|(?!\\2).|[\\n\\r])*\\2)\n</code></pre>\n\n<p>the second part matches multiline comments delimited by /* */</p>\n\n<pre><code>(\\/\\*(?:(?!\\*\\/).|[\\n\\r])*\\*\\/)\n</code></pre>\n\n<p>The third part matches single line comments starting anywhere in the line</p>\n\n<pre><code>(\\/\\/[^\\n\\r]*(?:[\\n\\r]+|$))\n</code></pre>\n\n<p>The fourth through sixth parts matchs anything within a regex literal<br />\nThis relies on a preceding equals sign or the literal being before or after a regex call</p>\n\n<pre><code>((?:=|:)\\s*(?:\\/(?:(?:(?!\\\\*\\/).)|\\\\\\\\|\\\\\\/|[^\\\\]\\[(?:\\\\\\\\|\\\\\\]|[^]])+\\])+\\/))\n((?:\\/(?:(?:(?!\\\\*\\/).)|\\\\\\\\|\\\\\\/|[^\\\\]\\[(?:\\\\\\\\|\\\\\\]|[^]])+\\])+\\/)[gimy]?\\.(?:exec|test|match|search|replace|split)\\()\n(\\.(?:exec|test|match|search|replace|split)\\((?:\\/(?:(?:(?!\\\\*\\/).)|\\\\\\\\|\\\\\\/|[^\\\\]\\[(?:\\\\\\\\|\\\\\\]|[^]])+\\])+\\/))\n</code></pre>\n\n<p>and the seventh which I originally forgot removes the html comments</p>\n\n<pre><code>(&lt;!--(?:(?!--&gt;).)*--&gt;)\n</code></pre>\n\n<p>I had an issue with my dev environment issuing errors for a regex that broke a line, so I used the following solution</p>\n\n<pre><code>var ADW_GLOBALS = new Object\nADW_GLOBALS = {\n  quotations : /(([\"'])(?:(?:\\\\\\\\)|\\\\\\2|(?!\\\\\\2)\\\\|(?!\\2).|[\\n\\r])*\\2)/,\n  multiline_comment : /(\\/\\*(?:(?!\\*\\/).|[\\n\\r])*\\*\\/)/,\n  single_line_comment : /(\\/\\/[^\\n\\r]*[\\n\\r]+)/,\n  regex_literal : /(?:\\/(?:(?:(?!\\\\*\\/).)|\\\\\\\\|\\\\\\/|[^\\\\]\\[(?:\\\\\\\\|\\\\\\]|[^]])+\\])+\\/)/,\n  html_comments : /(&lt;!--(?:(?!--&gt;).)*--&gt;)/,\n  regex_of_doom : ''\n}\nADW_GLOBALS.regex_of_doom = new RegExp(\n  '(?:' + ADW_GLOBALS.quotations.source + '|' + \n  ADW_GLOBALS.multiline_comment.source + '|' + \n  ADW_GLOBALS.single_line_comment.source + '|' + \n  '((?:=|:)\\\\s*' + ADW_GLOBALS.regex_literal.source + ')|(' + \n  ADW_GLOBALS.regex_literal.source + '[gimy]?\\\\.(?:exec|test|match|search|replace|split)\\\\(' + ')|(' + \n  '\\\\.(?:exec|test|match|search|replace|split)\\\\(' + ADW_GLOBALS.regex_literal.source + ')|' +\n  ADW_GLOBALS.html_comments.source + ')' , 'g'\n);\n\nchanged_text = code_to_test.replace(ADW_GLOBALS.regex_of_doom, function(match, $1, $2, $3, $4, $5, $6, $7, $8, offset, original){\n  if (typeof $1 != 'undefined') return $1;\n  if (typeof $5 != 'undefined') return $5;\n  if (typeof $6 != 'undefined') return $6;\n  if (typeof $7 != 'undefined') return $7;\n  return '';\n}\n</code></pre>\n\n<p>This returns anything captured by the quoted string text and anything found in a regex literal intact but returns an empty string for all the comment captures.</p>\n\n<p>I know this is excessive and rather difficult to maintain but it does appear to work for me so far.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/questions/19509863/how-to-remove-js-comments-using-php\">How to remove JS comments using PHP?</a></p>\n\n<p>If you are looking for regex to remove all comments  from javascript and maybe want to compress it go to the link above. There is a regexsniplet that may help you. I have writen it without a solid plan just on the fly with a POD aproace but it seams to work. First time I used regex.. and it worked for my...</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to remove all JavaScript comments from a JavaScript source using the JavaScript RegExp object.</p>\n\n<p>What I need is the pattern for the RegExp.</p>\n\n<p>So far, I've found this:</p>\n\n<pre><code>compressed = compressed.replace(/\\/\\*.+?\\*\\/|\\/\\/.*(?=[\\n\\r])/g, '');\n</code></pre>\n\n<p>This pattern works OK for:</p>\n\n<pre><code>/* I'm a comment */\n</code></pre>\n\n<p>or for:</p>\n\n<pre><code>/*\n * I'm a comment aswell\n*/\n</code></pre>\n\n<p>But doesn't seem to work for the inline:</p>\n\n<pre><code>// I'm an inline comment\n</code></pre>\n\n<p>I'm not quite an expert for RegEx and it's patterns, so I need help.</p>\n\n<p>Also, I' would like to have a RegEx pattern witch would remove all those HTML-like comments.</p>\n\n<pre><code>&lt;!-- HTML Comment //--&gt; or &lt;!-- HTML Comment --&gt;\n</code></pre>\n\n<p>And also those conditional HTML comments witch can be found in various JavaScript sources.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1423143218,
            "question_id": 5989315,
            "score": 11,
            "tags": [
                "javascript",
                "regex",
                "comments",
                "replace"
            ],
            "title": "RegEx for match/replacing JavaScript comments (both multiline and inline)"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>This can be done using php cUrl lib.</p>\n\n<p>Check this <a href=\"http://www.askapache.com/htaccess/sending-post-form-data-with-php-curl.html\" rel=\"nofollow\">http://www.askapache.com/htaccess/sending-post-form-data-with-php-curl.html</a></p>\n\n<p>Thanks,\nSourabh</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Store your data in a session and then use GET.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>No. You can't do header redirect with POST. You have 2 options,</p>\n\n<ol>\n<li>You can use GET instead if the destination accepts either POST or GET.</li>\n<li>We add a button in rare cases that the Javascript is turned off.</li>\n</ol>\n\n<p>Here is an example,</p>\n\n<pre><code>&lt;noscript&gt;\n&lt;div&gt;\n&lt;input type=\"submit\" value=\"Continue\"/&gt;\n&lt;/div&gt;\n&lt;/noscript&gt;\n</code></pre>\n\n<p>This will show a continue button if Javascript is off so user can click to continue.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>No possibility to do this directly from server, as POST data should be sent by the browser. </p>\n\n<p>But you can choose an alternative :</p>\n\n<ul>\n<li>The prefilled form autommatically submited ini your example could work, but as you wrote it's not really good practice and can leave users on a blank page</li>\n<li>Receive GET arguments and POST them with curl (or any decent http client) to second site, then transfer result to browser. This is called a proxy and may be a good solution imho.</li>\n<li>Do session sharing across domain, this can not be possible on all setups and can be complex. \nOnce setup is done, session sharing is almost transparent to php code. If you have more than one need of communication between the 2 domains it can be worth doing this.</li>\n</ul>\n\n<p>Example with curl solution, code to run on domain 1 :</p>\n\n<pre><code>//retrieve GET parameters as a string like arg1=0&amp;arg1=56&amp;argn=zz\n$data = $_SERVER['QUERY_STRING']; \n\n// Create a curl handle to domain 2\n$ch = curl_init('http://www.domain2.com/target_script.php'); \n\n//configure a POST request with some options\ncurl_setopt($ch, CURLOPT_POST, true);\n//put data to send\ncurl_setopt($ch, CURLOPT_POSTFIELDS, $data);    \n//this option avoid retrieving HTTP response headers in answer\ncurl_setopt($ch, CURLOPT_HEADER, 0);\n//we want to get result as a string\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n//if servers support is and you want result faster, allow compressed response\ncurl_setopt($ch, CURLOPT_ENCODING, 'gzip,deflate'); \n\n//execute request\n$result = curl_exec($ch);\n\n//show response form domain 2 to client if needed\necho $result;\n</code></pre>\n\n<p>That's it, your client's browser won't even see domain 2 server, it will get only result from it. know if you want to redirect client to domain, do it with classic http header.</p>\n\n<pre><code>header('Location: http://www.domain2.com');\n</code></pre>\n\n<p>Of course, this is demo code with hardcoded values, and there are 2 point left to you  : </p>\n\n<ul>\n<li>Security : query string should be filtered or recreated to transmit only needed parameters, and you should assert the server on domain 2 returned a 200 HTTP code.</li>\n<li>Application logic should need little adjustement on this part : if domain 2 app expects to get post data in the same request as visitor is coming it won't do it. From domain 2 point of view, the client doing POST request will be server hosting domain 1 not the client browser, it's important if client IP matters or other client checks are done on domain 2.\nIf the POST request serves to display client specific content you also had to do some server-side tracking to combine previously posted data with the visitor being redirected.</li>\n</ul>\n\n<p>Hope it's more clear now and will help you</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>It is possible. In this situation I would use cURL:</p>\n\n<pre><code>$url = 'http://domain.com/get-post.php';\n\n\nforeach($_GET as $key=&gt;$value) { \n  $fields_string .= $key.'='.$value.'&amp;'; \n}\nrtrim($fields_string,'&amp;');\n\n//open connection\n$ch = curl_init();\n\n//set the url, number of POST vars, POST data\ncurl_setopt($ch,CURLOPT_URL,$url);\ncurl_setopt($ch,CURLOPT_POST,count($fields));\ncurl_setopt($ch,CURLOPT_POSTFIELDS,$fields_string);\n\n//execute post\n$result = curl_exec($ch);\n\n//close connection\ncurl_close($ch);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You CAN header redirect a POST request, and include the POST information. However, you need to explicitly return HTTP status code 307. Browsers treat 302 as a redirect with for GET, ignoring the original method. This is noted explicitly in the HTTP documentation:</p>\n\n<pre><code>    http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\n</code></pre>\n\n<p>Practically, this means in PHP you need to set the status code before the redirect location:</p>\n\n<pre><code>    header('HTTP/1.1 307 Temporary Redirect');\n    header('Location: anotherpage.php');\n</code></pre>\n\n<p>However, note that according to the HTTP specification, the user agent MUST ask user if they are ok resubmitting the POST information to the new URL. In practical terms, Chrome doesn't ask, and neither does Safari, but Firefox will present the user with a popup box confirming the redirection. Depending on your operating constraints, maybe this is ok, although in a general usage case it certainly has the potential to cause confusion for end users.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have a webpage. This webpage redirects the user to another webpage, more or less the following way:</p>\n\n<pre><code>&lt;form method=\"post\" action=\"anotherpage.php\" id=\"myform\"&gt;\n\n    &lt;?php foreach($_GET as $key =&gt; $value){\n    echo \"&lt;input type='hidden' name='{$key}' value='{$value}' /&gt;\";\n    } ?&gt;\n\n&lt;/form&gt;\n&lt;script&gt;\n\n    document.getElementById('myform').submit();\n\n&lt;/script&gt;\n</code></pre>\n\n<p>Well, you see, what I do is transferring the GET params into POST params. Do not tell me it is bad, I know that myself, and it is not exactly what I really do, what is important is that I collect data from an array and try submitting it to another page via POST. But if the user has JavaScript turned off, it won't work. What I need to know: Is there a way to transfer POST parameters by means of PHP so the redirection can be done the PHP way (<code>header('Location: anotherpage.php');</code>), too?</p>\n\n<p>It is very important for me to pass the params via POST. I cannot use the $_SESSION variable because the webpage is on another domain, thus, the $_SESSION variables differ.</p>\n\n<p>Anyway, I simply need a way to transfer POST variables with PHP ^^</p>\n\n<p>Thanks in advance!</p>\n",
            "last_activity_date": 1387387488,
            "question_id": 2865289,
            "score": 11,
            "tags": [
                "php",
                "javascript",
                "post",
                "redirect",
                "parameters"
            ],
            "title": "PHP Redirection with Post Parameters"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I believe what you are looking to do is done with the <a href=\"http://jqueryui.com/demos/sortable/#method-serialize\" rel=\"nofollow\">serialize method</a>. Serialize is get the new order of the list.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <ul>\n  <li><strong>demo:</strong> <a href=\"http://so.devilmaycode.it/getting-the-position-of-the-element-in-a-list-when-its-drag-dropped-ui-sortable/\" rel=\"nofollow\">http://so.devilmaycode.it/getting-the-position-of-the-element-in-a-list-when-its-drag-dropped-ui-sortable/</a></li>\n  </ul>\n</blockquote>\n\n<p>SOLUTION:</p>\n\n<pre><code>$(function() {\n    $('ul#sortable').sortable({\n        start: function(event, ui) {\n            var start_pos = ui.item.index();\n            ui.item.data('start_pos', start_pos);\n        },\n        update: function(event, ui) {\n            var start_pos = ui.item.data('start_pos');\n            var end_pos = ui.item.index();\n            alert(start_pos + ' - ' + end_pos);\n        }\n    });\n});\n</code></pre>\n\n<blockquote>\n  <ul>\n  <li><strong>NOTE:</strong> Updated to make use of jQuery <a href=\"http://api.jquery.com/jQuery.data/\" rel=\"nofollow\">data()</a> method under advice of <a href=\"http://stackoverflow.com/users/68727/alconja\">Alconja</a></li>\n  </ul>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>For some reason <code>ui.item.index()</code> did not work for me.</p>\n\n<p>This did:</p>\n\n<pre><code>update: function (event, ui) \n{\n    var index = $('li', $(ui.item).parent()).index(ui.item);\n    alert(index);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a sortable list like this one: <a href=\"http://jqueryui.com/demos/sortable\">http://jqueryui.com/demos/sortable</a></p>\n\n<p>Is it possible to get the start and end position of the element in the list, when it has been moved? I'm talking about their position number, in the list.</p>\n\n<p>For example, if I move element 2 to position 5 in the list, I'd like to assign those two numbers to variables.</p>\n\n<p>I'm new to jQuery - any help would be much appreciated.</p>\n",
            "last_activity_date": 1413797878,
            "question_id": 2442232,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "drag-and-drop",
                "position",
                "sortable"
            ],
            "title": "Getting the position of the element in a list when it&#39;s drag/dropped (ui.sortable)"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>A common practice to disable browser caching is to set an expiration to a date in the past in the HTTP header.  Different browsers utilize HTTP header values differently so it is important to use many if not all of the following settings:</p>\n\n<pre><code>&lt;?php\nheader(\"Expires: Tue, 01 Jan 2000 00:00:00 GMT\");\nheader(\"Last-Modified: \" . gmdate(\"D, d M Y H:i:s\") . \" GMT\");\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\nheader(\"Cache-Control: post-check=0, pre-check=0\", false);\nheader(\"Pragma: no-cache\");\n?&gt;\n</code></pre>\n\n<p>Read more about <a href=\"http://www.php.net/header\">the <code>header</code> function on the PHP website</a>.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Try loading the movie with a query string, that should disable the cache. Note that the query string should be different every time.</p>\n\n<pre><code>&lt;parm name='movie' value='movie.swf?ran=sfkjfsdkf23123'&gt;\n</code></pre>\n\n<p>You could for example use php to create a random query string.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>We are developing flash site with php.the problem is ...\nIt storeing the cache ,but we have to disable the cache using javascript or php script.</p>\n\n<p>help  me how to disable</p>\n",
            "last_activity_date": 1230813170,
            "question_id": 404617,
            "score": 11,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "disabling the browser cache in php or using javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>you could load the content with a simple ajax <code>get</code> call, if stylesheet is included from the same domain</p>\n\n<p><strong>Edit</strong> after your update: <br>I tried this code (on FX10) as a <em>proof of concept</em> that use only one request to the CSS but it seems a bit hacky to me and should be tested and verified. it also should be improved with some fallback if javascript is not available.</p>\n\n<p>CSS (external file <em>test.css</em>)</p>\n\n<pre><code>div { border: 3px solid red;}\n</code></pre>\n\n<p>HTML/jQuery</p>\n\n<pre><code>&lt;!doctype html &gt;\n&lt;html&gt;\n    &lt;head&gt;\n       &lt;!-- provide a fallback if js not available --&gt;\n       &lt;noscript&gt;\n          &lt;link rel=\"stylesheet\" href=\"test.css\" /&gt;\n       &lt;/noscript&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n\n        &lt;div&gt;&lt;/div&gt;\n\n        &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.0/jquery.js\"&gt;&lt;/script&gt;\n        &lt;script&gt;\n        $(document).ready(function() {\n\n            $.when($.get(\"test.css\"))\n            .done(function(response) {\n                $('&lt;style /&gt;').text(response).appendTo($('head'));\n                $('div').html(response);\n            });\n        })\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>You should see the CSS code inside the div with a red border all around :)<br>\nEnjoy.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>I think your best bet would be to load it with ajax with something like:</p>\n\n<pre><code>$.get(\"/path/to/file.css\", function(cssContent){\n    alert(\"My CSS = \" + cssContent);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Yep, you can use $.get.</p>\n\n<p>Example:</p>\n\n<pre><code>$.get('/path/to/css/file.css', function (resp) {\n    // resp now should contain your CSS file content.\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>With that <em>specific</em> example (where the CSS is on the same domain as the page), you could read the file as text via <code>ajax</code>:</p>\n\n<pre><code>$.ajax({\n    url: \"/path/to/file.css\",\n    dataType: \"text\",\n    success: function(cssText) {\n        // cssText will be a string containing the text of the file\n    }\n});\n</code></pre>\n\n<p>If you want to access the information in a more structured way, <code>document.styleSheets</code> is an array of the style sheets associated with the document. Each style sheet has a property called <code>cssRules</code> (or just <code>rules</code> on some browsers), which is an array of the text of each rule in the style sheet. Each rule has a <code>cssText</code> property. So you could loop through those, e.g.:</p>\n\n<pre><code>$.each(document.styleSheets, function(sheetIndex, sheet) {\n    console.log(\"Looking at styleSheet[\" + sheetIndex + \"]:\");\n    $.each(sheet.cssRules || sheet.rules, function(ruleIndex, rule) {\n        console.log(\"rule[\" + ruleIndex + \"]: \" + rule.cssText);\n    });\n});\n</code></pre>\n\n<p><a href=\"http://jsbin.com/apunuc/46\" rel=\"nofollow\">Live example</a> - That example has one stylesheet with two rules.</p>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>Is it possible to get the entire text content of a CSS file in a document? F.ex:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" id=\"css\" href=\"/path/to/file.css\"&gt;\n&lt;script&gt;\n    var cssFile = document.getElementById('css');\n    // get text contents of cssFile\n&lt;/script&gt;\n</code></pre>\n\n<p>I\u2019m not really into getting all the CSS rules via document.styleSheets, is there another way?</p>\n\n<p><strong>Update:</strong> There is the ajax option of course, I appreciate the answers given. But it seems rather unnecessary to reload a file using ajax that is already loaded in the browser. So if anyone knows another way to extract the text contents of a present CSS file (NOT the CSS rules), please post!</p>\n",
            "last_activity_date": 1412283969,
            "question_id": 9180184,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "stylesheet"
            ],
            "title": "Access CSS file contents via JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>With the 2nd solution, you have to manually call the previous functions, making it hard to remove specific listeners (which, to me, sounds like something you'd rather want than clearing all listeners), while on the first solution, you can only clear them all at the same time, unless you want to emulate the first functionality.</p>\n\n<p>Personally, I always use the first solution, because it has the advantage of not having to worry about clearing possible other event listeners.</p>\n\n<p>The <a href=\"https://developer.mozilla.org/en/DOM/element.addEventListener\">mozilla wiki</a> also lists the advantages that the first solution works on any DOM element, not just HTML elements, and that it allows finer grained control over the phase when the listener gets activated (capturing vs. bubbling) with the third argument.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>i would use both codes like this </p>\n\n<pre><code>function addEvent(html_element, event_name, event_function) {\n    if (html_element.addEventListener) { // Modern\n        html_element.addEventListener(event_name, event_function, false);\n    } else if (html_element.attachEvent) { // Internet Explorer\n        html_element.attachEvent(\"on\" + event_name, event_function);\n    } else { // others\n        html_element[\"on\" + event_name] = event_function;\n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In order to add events we could use this simple <strong>1st solution</strong>:</p>\n\n<pre><code>function AddEvent(html_element, event_name, event_function) \n{       \n   if(html_element.attachEvent) //Internet Explorer\n      html_element.attachEvent(\"on\" + event_name, function() {event_function.call(html_element);}); \n   else if(html_element.addEventListener) //Firefox &amp; company\n      html_element.addEventListener(event_name, event_function, false); //don't need the 'call' trick because in FF everything already works in the right way          \n} \n</code></pre>\n\n<p>or this <strong>2nd solution</strong> (that adds inline events):</p>\n\n<pre><code>function AddEvent(html_element, event_name, event_function) \n{       \n   var old_event = html_element['on' + event_name];\n   if(typeof old_event !== 'function')\n      html_element['on' + event_name] = function() { event_function.call(html_element); };\n   else\n      html_element['on' + event_name] = function() { old_event(); event_function.call(html_element); };\n}\n</code></pre>\n\n<p>These are <strong>both cross-browsers</strong> and can be used in this way:</p>\n\n<pre><code>AddEvent(document.getElementById('some_div_id'), 'click', function() \n{             \n   alert(this.tagName); //shows 'DIV'\n});  \n</code></pre>\n\n<p>Since I have the feeling <code>attachEvent/addEventListener</code> are used more around in events handling implementations, I'm wondering: </p>\n\n<p><strong>Are there any disadvantages/drawbacks against using the 2nd solution that I might better be aware of?</strong></p>\n\n<p>I can see two, but I'm interested in more (if any):</p>\n\n<ol>\n<li>the 2nd solution screws up innerHTML of elements by adding events inline</li>\n<li>Using 2nd solution I can easily remove all functions associated with a certain event type (<code>html_element['on' + event_name] = null</code>), but I can not use <code>detachEvent/removeEventListener</code> to remove exactly a specific function.</li>\n</ol>\n\n<p>Any answers like: \"use jQuery\" or any other FW are pointless!</p>\n",
            "last_activity_date": 1389797135,
            "question_id": 3763080,
            "score": 10,
            "tags": [
                "javascript",
                "events",
                "javascript-events",
                "event-handling"
            ],
            "title": "Javascript add events cross-browser function implementation: use attachEvent/addEventListener vs inline events"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>As a quick hack you can just do this:</p>\n\n<pre><code>textArea.scrollTop = 99999;\n</code></pre>\n\n<p>Another option is to try it in a timer:</p>\n\n<pre><code>setTimeout(function()\n{\n    var textArea = document.getElementById('outputTextResultsArea');\n    textArea.scrollTop = textArea.scrollHeight;\n}, 10);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Instead of using the timeout, call that function on every AJAX response - provided you can tweak it.</p>\n\n<p>That would free your browser from unnecessary timeouts.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Using jQuery, $(\"textarea\").scrollHeight(99999) works great on Firefox and Chrome but not on IE.  It appears to set it to the max number of lines in the textarea, whereas scrollHeight is supposed to be the number of pixels.  (Awesome show great job IE).  This appears to work though:</p>\n\n<pre><code>      $(\"textarea\").scrollTop(99999)\n      $(\"textarea\").scrollTop($(\"textarea\").scrollTop()*12)\n</code></pre>\n\n<p>I think this assumes a 12px font-height.  I would love to find a more robust/straightforward way to do this.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I ended up using this for Internet Explorer:</p>\n\n<pre><code>textArea.createTextRange().scrollIntoView(false);\n</code></pre>\n\n<p>and this for other browsers:</p>\n\n<pre><code>textArea.scrollTop = textArea.scrollHeight;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a textarea html element on my page that gets reloaded via ajax. The whole textarea is returned each time not just its content, and the content grows over time. Along with the textarea i return the following piece of javascript:  </p>\n\n<pre><code>&lt;script type=\"text/javascript\" &gt;\n\nvar textArea = document.getElementById('outputTextResultsArea');\ntextArea.scrollTop = textArea.scrollHeight;\n&lt;/script&gt;\n</code></pre>\n\n<p>In firefox 3.0.7 this places the scroll bar at the bottom of the textArea, allowing me to see the latest of the output. However in IE 7 i see different behaviour. The scrollbar moves down with the content as intended, but once the content is greater then the textarea height the scroll bar no longer moves down. It seems as if IE is remembering the original scroll height of the element, not the new height.</p>\n\n<p>I am using the xhtml transitional doctype if that helps. Also if this can be achieved with jQuery that would be fine as I have access to that.</p>\n\n<p>Thanks in advance </p>\n\n<p>Neil</p>\n",
            "last_activity_date": 1370434394,
            "question_id": 642353,
            "score": 10,
            "tags": [
                "javascript",
                "ajax",
                "xhtml",
                "textarea"
            ],
            "title": "Dynamically Scrolling a Textarea"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>It is XSS and it is forbidden. You should really not do things that way. </p>\n\n<p>If you really need to, make your AJAX code call the local code (PHP, ASP, whatever) on blah.com and make it behave like client and fetch whatever you need from foo.com and return that back to the client. If you use PHP, you can do this with fopen('www.foo.com/blah.html', 'r') and then reading the contents as if it was a regular file. </p>\n\n<p>Of course, allow_remote_url_fopen (or whatever it is called exactly) needs to be enabled in your php.ini.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>One option is to implement a proxy page which takes the needed url as a parameter. e.g. <a href=\"http://blah.com/proxy?uri=http://foo.com/actualRequest\" rel=\"nofollow\">http://blah.com/proxy?uri=http://foo.com/actualRequest</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The method shown above could become a large security hole.\nSuggest you verify the site name against a white list and build the actual URI being proxied on the server side.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a <a href=\"http://www.w3.org/TR/access-control/\">w3c proposal</a> for allowing sites to specify other sites which are allowed to make cross site queries to them. (Wikipedia might want to allow all request for articles, say, but google mail wouldn't want to allow requests - since this might allow any website open when you are logged into google mail to read your mail).</p>\n\n<p>This might be available at some point in the future.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>For cross domain hits this is a good working example and now is considered as some what \"standard\" <a href=\"http://www.xml.com/pub/a/2005/12/21/json-dynamic-script-tag.html\" rel=\"nofollow\">http://www.xml.com/pub/a/2005/12/21/json-dynamic-script-tag.html</a>.</p>\n\n<p>there are other ways as well, for eg injecting iframes with document.domain altered </p>\n\n<p><a href=\"http://fettig.net/weblog/2005/11/28/how-to-make-xmlhttprequest-connections-to-another-server-in-your-domain/\" rel=\"nofollow\">http://fettig.net/weblog/2005/11/28/how-to-make-xmlhttprequest-connections-to-another-server-in-your-domain/</a></p>\n\n<p>I still agre that the easy way is calling a proxy in same domain but then it's not truly client side WS call. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>JSONP was partially designed to get around the problem you are having</p>\n\n<p><a href=\"http://ajaxian.com/archives/jsonp-json-with-padding\" rel=\"nofollow\">http://ajaxian.com/archives/jsonp-json-with-padding</a></p>\n\n<p>JQuery has it in their $.getJSON method</p>\n\n<p><a href=\"http://docs.jquery.com/Ajax/jQuery.getJSON\" rel=\"nofollow\">http://docs.jquery.com/Ajax/jQuery.getJSON</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As mentioned above JSONP is a way around this.  However, the site that you are requesting the data from needs to support JSONP in order for you to use on the client. (JSONP essentially injects a script tag into the page, and provides a callback function that should be called with the results)</p>\n\n<p>If the site you are making a request to does not support JSONP you will have to proxy the request on your server.  As mentioned above you can do this on your own server or what I have done in the past is use a <a href=\"http://www.jsonpit.com\" rel=\"nofollow\">http://www.jsonpit.com</a>, which will proxy the request for you.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Here's the problem:</p>\n\n<p>1.) We have page here... www.blah.com/mypage.html</p>\n\n<p>2.) That page requests a js file www.foo.com like this...</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://www.foo.com/jsfile.js\" /&gt;\n</code></pre>\n\n<p>3.) \"jsfile.js\" uses Prototype to make an Ajax request back to www.foo.com.</p>\n\n<p>4.) The ajax request calls www.foo.com/blah.html. The callback function gets the html response and throws it into a div.</p>\n\n<p>This doesn't seem to work though, I guess it is XSS. Is that correct?</p>\n\n<p>If so, how can I solve this problem? Is there any other way to get my html from www.foo.com to www.blah.com on the client without using an iframe?</p>\n",
            "last_activity_date": 1353552277,
            "question_id": 319065,
            "score": 10,
            "tags": [
                "javascript",
                "html",
                "ajax"
            ],
            "title": "Cross domain Ajax request from within js file"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The best way in my mind to communicate with the iframe is using window.top. If you want your iframe to get your parent's scope, you can set <code>window.scopeToShare = $scope;</code> within your controller and it becomes accessible for the iframe page at <code>window.top.scopeToShare</code>.</p>\n\n<p>If you want your parent to get the iframe scope, you can use</p>\n\n<pre><code>window.receiveScope = function(scope) {\n  scope.$on('event', function() {\n    /* Treat the event */\n  }\n};\n</code></pre>\n\n<p>and within the iframe controller call <code>window.top.giveRootScope($rootScope);</code></p>\n\n<p>WARNING: If you are using this controller multiple times, make sure to use an additional ID to identify which scope you want.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To access and communicate in two directions (parent to iFrame, iFrame to parent), in case they are both in the same domain, with access to the angular scope, try following those steps: </p>\n\n<p>*You don\u2019t need the parent to have reference to angularJS library\u2026</p>\n\n<p><strong>Calling to child iFrame from parent</strong></p>\n\n<p>1.Get child iFrame element from the parent (<a href=\"http://stackoverflow.com/questions/251420/invoking-javascript-code-in-an-iframe-from-the-parent-page\">link to answer</a>): </p>\n\n<blockquote>\n  <p>document.getElementById(\"myIframe\").contentWindow</p>\n</blockquote>\n\n<p>2.Access the scope of the element: </p>\n\n<blockquote>\n  <p>document.getElementById(\"myIframe\").contentWindow.angular.element(\"#someDiv\").scope()</p>\n</blockquote>\n\n<p>3.Call the scope\u2019s function or property: </p>\n\n<blockquote>\n  <p>document.getElementById(\"myIframe\").contentWindow.angular.element(\"#someDiv\").scope().someAngularFunction(data);</p>\n</blockquote>\n\n<p>4.Call $scope.$apply after running the logic of the function/updating the property (<a href=\"http://stackoverflow.com/questions/10490570/call-angular-js-from-legacy-code/10508731#10508731\">link to Mishko\u2019s answer</a>): </p>\n\n<blockquote>\n  <p>$scope.$apply(function () { });</p>\n</blockquote>\n\n<ul>\n<li>Another solution is to share the scope between the iFrames, but then you need angular in both sides: (<a href=\"http://stackoverflow.com/questions/19125910/is-it-possible-to-update-angularjs-expressions-inside-of-an-iframe/19126316#19126316\">link to answer and example</a>)</li>\n</ul>\n\n<p><strong>Calling parent from child iFrame</strong></p>\n\n<ol>\n<li>Calling the parent function: </li>\n</ol>\n\n<blockquote>\n  <p>parent.someChildsFunction();</p>\n</blockquote>\n\n<p>Will update also on how to do it cross domain if it is necessary..</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>You should be able to get parent scope from iFrame:</p>\n\n<pre><code>var parentScope = $window.parent.angular.element($window.frameElement).scope();\n</code></pre>\n\n<p>Then you can call parent method or change parent variable( but remember to call <code>parentScope.$apply</code> to sync the changes)</p>\n\n<p>Tested on Angular 1.3.4</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>In my test, given 2 document, A and B. In A document, there is an iframe, the iframe source is B document. My question is how to modify B document certain scope of variable?</p>\n\n<p>Here is my code: A document</p>\n\n<p></p>\n\n<pre><code>&lt;html lang=\"en\" ng-app=\"\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;Google Phone Gallery&lt;/title&gt;\n  &lt;script type='text/javascript' src=\"js/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script type='text/javascript' src=\"js/angular1.0.2.min.js\"&gt;&lt;/script&gt;\n  &lt;script&gt;\n  var g ;\nfunction test($scope,$http,$compile)\n{\n    $scope.tryget = function(){\n\n        var iframeContentWindow = $(\"#iframe\")[0].contentWindow;\n        var iframeDOM = $(\"#iframe\")[0].contentWindow.document;\n        var target = $(iframeDOM).find(\"#test2\");\n        var iframeAngular = iframeContentWindow.angular;\n        var iframeScope = iframeAngular.element(\"#test2\").scope();\n        iframeScope.parentcall();\n        iframeContentWindow.angular.element(\"#test2\").scope().tempvalue = 66 ;\n        iframeScope.tempvalue = 66;\n        iframeContentWindow.tt = 22;\n        iframeScope.parentcall();\n        console.log(iframeScope.tempvalue);\n        console.log(angular.element(\"#cont\").scope());\n    }\n}\n\n  &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;div ng-controller=\"test\"&gt;\n        &lt;div id=\"cont\" &gt;\n            &lt;button ng-click=\"tryget()\"&gt;try&lt;/button&gt;\n        &lt;/div&gt;\n&lt;/div&gt;\n&lt;iframe src=\"test2.html\" id=\"iframe\"&gt;&lt;/iframe&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>My B document:</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"en\" ng-app=\"\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;Google Phone Gallery&lt;/title&gt;\n  &lt;script type='text/javascript' src=\"js/jquery-1.10.2.js\"&gt;&lt;/script&gt;\n  &lt;script type='text/javascript' src=\"js/angular1.0.2.min.js\"&gt;&lt;/script&gt;\n  &lt;script&gt;\nvar tt =11;\nfunction test2($scope,$http,$compile)\n{\n    console.log(\"test2 controller initialize\");\n    $scope.tempvalue=0;\n    $scope.parentcall = function()\n    {\n        $scope.tempvalue = 99 ;\n        console.log($scope.tempvalue);\n        console.log(tt);\n    }\n}\n\n  &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;div ng-controller=\"test2\" id=\"test2\"&gt;\n        &lt;div id=\"cont\" &gt;\n            &lt;button ng-click=\"parentcall()\"&gt;get script&lt;/button&gt;\n        &lt;/div&gt;\n        {{tempvalue}}\n&lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Note: Actually there is some way to do it, which i feel it like a hack instead of proper way to get it done:\nthat is create a button in b Document, and then bind with angularjs ng-click. After that A document jquery \"trigger\" click on button.</p>\n",
            "last_activity_date": 1417541242,
            "question_id": 18437594,
            "score": 9,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-scope"
            ],
            "title": "Angularjs: call other scope which in iframe"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>There are various BigInteger Javascript libraries that you can find through googling. e.g. <a href=\"http://www.leemon.com/crypto/BigInt.html\" rel=\"nofollow\">http://www.leemon.com/crypto/BigInt.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>No. Javascript only has one numeric type. You've to code yourself or use a large integer library (and you cannot even overload arithmetic operators).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Javascript uses floating point internally.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/307179/what-is-javascripts-max-int-whats-the-highest-integer-value-a-number-can-go-to\">What is JavaScript&#39;s Max Int? What&#39;s the highest Integer value a Number can go to without losing precision?</a></p>\n\n<p>In other words you can't use more than 53 bits. In some implementations you may be limited to 31. </p>\n\n<p>Try storing the bits in more than one variable, use a string, or get a <a href=\"http://jsfromhell.com/classes/bignumber\" rel=\"nofollow\">bignum library</a>, or if you only need to deal with integers, a <a href=\"https://github.com/peterolson/BigInteger.js\" rel=\"nofollow\">biginteger library</a>.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>you're probably running into a byte length limit on your system. i'd take the array of booleans, convert it to an array of binary digits ([true, false, true] => [1,0,1]), then join this array into a string \"101\", then use parseInt('101',2), and you'll have your answer.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's <a href=\"http://www.cjandia.com/2012/06/x-calc/libs/bigint.js.txt\" rel=\"nofollow\">(yet another) wrapper around Leemon Baird's BigInt.js</a></p>\n\n<p>It is used in this <a href=\"http://www.cjandia.com/2012/06/x-calc/\" rel=\"nofollow\">online demo of a big integer calculator in JavaScript</a> which implements the usual four operations + - * /, the modulus (%), and four builtin functions : the square root (sqrt), the power (pow), the recursive factorial (fact) and a memoizing Fibonacci (fibo).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Another implementation of large integer arithmetic (also using BigInt.js) is available at <a href=\"http://www.javascripter.net/math/calculators/100digitbigintcalculator.htm\" rel=\"nofollow\">www.javascripter.net/math/calculators/100digitbigintcalculator.htm</a>. Supports the operations + - * / as well as remainder, GCD, LCM, factorial, primality test, next prime, previous prime. </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In javascript I would like to create the binary hash of a large boolean array (54 elements) with the following method:</p>\n\n<pre><code>function bhash(arr) {\n   for (var i = 0, L = arr.length, sum = 0; i &lt; L; sum += Math.pow(2,i)*arr[i++]); \n   return sum;\n}\n</code></pre>\n\n<p>In short: it creates the smallest integer to store an array of booleans in. Now my problem is that javascript apparently uses <strong>floats</strong> as default. The maximum number I have to create is 2^54-1 but once javascript reaches 2^53 it starts doing weird things: </p>\n\n<pre><code>9007199254740992+1 = 9007199254740994\n</code></pre>\n\n<p>Is there any way of using integers instead of floats in javascript? Or large integer summations?</p>\n",
            "last_activity_date": 1357787790,
            "question_id": 4557509,
            "score": 9,
            "tags": [
                "javascript",
                "biginteger"
            ],
            "title": "Javascript summing large integers"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<pre><code>$('#my_select').get(0).selectedIndex = 1;\n</code></pre>\n\n<hr />\n\n<p>But, In my opinion, the better way is using HTML only (with <code>&lt;input type=\"reset\" /&gt;</code>):</p>\n\n<pre><code>&lt;form&gt;\n    &lt;select id=\"my_select\"&gt;\n        &lt;option value=\"a\"&gt;a&lt;/option&gt;\n        &lt;option value=\"b\" selected=\"selected\"&gt;b&lt;/option&gt;\n        &lt;option value=\"c\"&gt;c&lt;/option&gt;\n    &lt;/select&gt;\n    &lt;input type=\"reset\" value=\"reset\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<ul>\n<li>Check the <a href=\"http://jsfiddle.net/T8sCf/11/\" rel=\"nofollow\">jsFiddle Demo</a>.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>$(\"#reset\").on(\"click\", function () {\n    $('#my_select').prop('selectedIndex',0);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>$(\"#reset\").on(\"click\", function () {\n    $(\"#my_select\").val('b');//Setting the value as 'b'\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>One nice clean way is to add a <code>data-default</code> attribute to the select</p>\n\n<pre><code>&lt;select id=\"my_select\" data-default=\"b\"&gt;\n...\n&lt;/select&gt;\n</code></pre>\n\n<p>An then the code is really simple:</p>\n\n<pre><code>$(\"#reset\").on(\"click\", function () {\n    var $select = $('#my_select');\n    $select.val($select.data('default'));\n});\n</code></pre>\n\n<p>Live example: <a href=\"http://jsfiddle.net/T8sCf/7/\" rel=\"nofollow\">http://jsfiddle.net/T8sCf/7/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use the <code>data</code> attribute of the <code>select</code> element</p>\n\n<pre><code>&lt;select id=\"my_select\" data-default-value=\"b\"&gt;\n    &lt;option value=\"a\"&gt;a&lt;/option&gt;\n    &lt;option value=\"b\" selected=\"selected\"&gt;b&lt;/option&gt;\n    &lt;option value=\"c\"&gt;c&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>Your JavaScript,</p>\n\n<pre><code>$(\"#reset\").on(\"click\", function () {\n    $(\"#my_select\").val($(\"#my_select\").data(\"default-value\"));\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/T8sCf/10/\" rel=\"nofollow\">http://jsfiddle.net/T8sCf/10/</a></p>\n\n<p><strong><em>UPDATE</em></strong></p>\n\n<hr>\n\n<p>If you don't know the default selection and if you cannot update the html,\nadd following code in the dom ready ,</p>\n\n<pre><code>$(\"#my_select\").data(\"default-value\",$(\"#my_select\").val());\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/T8sCf/24/\" rel=\"nofollow\">http://jsfiddle.net/T8sCf/24/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Bind an event handler to the focus event of the <code>select</code> to capture the previous value.  Then set the value of the <code>select</code> to the previous value when reset is clicked.</p>\n\n<pre><code>var previousValue = \"\";\n$(\"#my_select\").on(\"focus\",function(){\n    previousValue = $(this).val();\n});\n\n$(\"#reset\").on(\"click\", function () {\n   $(\"#my_select\").val(previousValue);\n});\n</code></pre>\n\n<p><strong>Working Example:</strong> <a href=\"http://jsfiddle.net/T8sCf/17/\" rel=\"nofollow\">http://jsfiddle.net/T8sCf/17/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can do this way:</p>\n\n<pre><code>var preval = $('#my_select').val(); // get the def value\n\n$(\"#reset\").on(\"click\", function () {\n   $('#my_select option[value*=\"' + preval + '\"]').prop('selected', true);\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/T8sCf/16/\" rel=\"nofollow\"><strong>checkout this fiddle</strong></a></p>\n\n<p>take a <code>var</code> which holds the default loaded value before change event then get the option with the attribute selector of value with holds the <code>var</code> value set the property to selected.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can make use of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\" rel=\"nofollow\"><code>defaultSelected</code> property of an option element</a>:</p>\n\n<blockquote>\n  <p>Contains the initial value of the <code>selected</code> HTML attribute, indicating whether the option is selected by default or not.</p>\n</blockquote>\n\n<p>So, the DOM interface already keeps track which option was selected initially.</p>\n\n<pre><code>$(\"#reset\").on(\"click\", function () {\n    $('#my_select option').prop('selected', function() {\n        return this.defaultSelected;\n    });\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/T8sCf/26/\" rel=\"nofollow\"><strong>DEMO</strong></a></p>\n\n<p>This would even work for multi-select elements.</p>\n\n<p>If you don't want to iterate over all options, but \"break\" after you found the originally selected one, you can use <code>.each</code> instead:</p>\n\n<pre><code>$('#my_select option').each(function () {\n    if (this.defaultSelected) {\n        this.selected = true;\n        return false;\n    }\n});\n</code></pre>\n\n<hr>\n\n<p>Without jQuery:</p>\n\n<pre><code>var options = document.querySelector('#my_select option options');\nfor (var i = 0, l = options.length; i &lt; l; i++) {\n    options[i].selected = options[i].defaultSelected;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>This code will help you out.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;script type=\"text/JavaScript\" src=\"jquery-2.0.2.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/JavaScript\"&gt;\n        $(function(){\n            var defaultValue = $(\"#my_select\").val();\n            $(\"#reset\").click(function () {\n                $(\"#my_select\").val(defaultValue);\n            });\n        });\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;select id=\"my_select\"&gt;\n        &lt;option value=\"a\"&gt;a&lt;/option&gt;\n        &lt;option value=\"b\" selected=\"selected\"&gt;b&lt;/option&gt;\n        &lt;option value=\"c\"&gt;c&lt;/option&gt;\n    &lt;/select&gt;\n    &lt;div id=\"reset\"&gt;\n        &lt;input type=\"button\" value=\"reset\"/&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What about this? DEMO <a href=\"http://jsfiddle.net/T8sCf/25/\" rel=\"nofollow\">http://jsfiddle.net/T8sCf/25/</a></p>\n\n<h1>JQUERY</h1>\n\n<pre><code>var defaultValue = $(\"#my_select option:selected\").val();  \n$(\"#reset\").on(\"click\", function () {\n     $('#my_select').val(defaultValue).attr(\"selected\",\"selected\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This works for me:</p>\n\n<pre><code>$(\"#reset\").on(\"click\", function () {\n    $(\"#my_select option[selected]\").prop('selected', true);\n}\n</code></pre>\n\n<p>You find for the default option that has the select attribute and you change the selection to that option.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Why not use a simple javascript function and call it on onclick event?</p>\n\n<pre><code>function reset(){\ndocument.getElementById(\"my_select\").selectedIndex = 1; //1 = option 2\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have select box</p>\n\n<pre><code>&lt;select id=\"my_select\"&gt;\n    &lt;option value=\"a\"&gt;a&lt;/option&gt;\n    &lt;option value=\"b\" selected=\"selected\"&gt;b&lt;/option&gt;\n    &lt;option value=\"c\"&gt;c&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;div id=\"reset\"&gt;\n    reset\n&lt;/div&gt;\n</code></pre>\n\n<p>I have also reset button, here default (selected) value is \"b\", suppose I select \"c\" and after I need resert select box value to default, how to make this using jquery?</p>\n\n<pre><code>$(\"#reset\").on(\"click\", function () {\n    // What do here?\n});\n</code></pre>\n\n<p>jsfiddle: <a href=\"http://jsfiddle.net/T8sCf/1/\">http://jsfiddle.net/T8sCf/1/</a></p>\n",
            "last_activity_date": 1414597472,
            "question_id": 16913094,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Reset select value to default"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>To get client-side sorting to work, I needed to call <code>reloadGrid</code> after the grid was loaded:</p>\n\n<pre><code>loadComplete: function() {\n    jQuery(\"#myGridID\").trigger(\"reloadGrid\"); // Call to fix client-side sorting\n}\n</code></pre>\n\n<p>I did not have to do this on another grid in my application because it was configured to use data retrieved via another AJAX call, instead of data retrieved directly by the grid:</p>\n\n<pre><code>editurl: \"clientArray\"\ndatatype: \"local\"\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>I'm using client-side sorting on jqGrid and retrieving a new set of json data when a select list changes. You need to set rowTotal to an amount higher or equal to the number of rows returned, and then set the data type to 'json' just before reloading the grid.</p>\n\n<pre><code>// Select list value changed\n$('#alertType').change(function () {\n        var val = $('#alertType').val();\n        var newurl = '/Data/GetGridData/' + val;\n        $(\"#list\").jqGrid().setGridParam({ url: newurl, datatype: 'json' }).trigger(\"reloadGrid\");        \n});\n\n// jqGrid setup\n$(function () {\n        $(\"#list\").jqGrid({\n            url: '/Data/GetGridData/-1',\n            datatype: 'json',\n            rowTotal: 2000,\n            autowidth: true,\n            height:'500px',\n            mtype: 'GET',\n            loadonce: true,\n            sortable:true,\n            ...\n            viewrecords: true,\n            caption: 'Overview',\n            jsonReader : { \n                root: \"rows\", \n                total: \"total\", \n                repeatitems: false, \n                id: \"0\"\n            },\n            loadtext: \"Loading data...\",\n        });\n    }); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>$(function () {\n        $(\"#list\").jqGrid({\n            url: '/Data/GetGridData/-1',\n            datatype: 'json',\n            rowTotal: 2000,\n            autowidth: true,\n            height:'500px',\n            mtype: 'GET',\n            loadonce: true,\n            sortable:true,\n            ...\n            viewrecords: true,\n            caption: 'Overview',\n            jsonReader : { \n                root: \"rows\", \n                total: \"total\", \n                repeatitems: false, \n                id: \"0\"\n            },\n            loadtext: \"Loading data...\",\n        });\n    }); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a tree-grid with autoloading nows. The goal is to sort the grid by tree column, right on <strong>client side</strong>.</p>\n\n<p>But each time I click on sort column header, it <em>issues</em> an Ajax call for sorting, but all I need is on-place sorting using the local data.</p>\n\n<p>Do I have incorrect grid parameters or doesn't tree work with client-side sorting on tree column?</p>\n\n<p>Current jqGrid params for sorting are are:</p>\n\n<pre><code>loadonce: true, // to enable sorting on client side\nsortable: true //to enable sorting\n</code></pre>\n",
            "last_activity_date": 1392711601,
            "question_id": 2131280,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "sorting",
                "jqgrid"
            ],
            "title": "jqGrid sorting on client side"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>jQuery Address provides strong cross-browser support for browser history and Ajax crawling:</p>\n\n<p><a href=\"http://www.asual.com/jquery/address\" rel=\"nofollow\">http://www.asual.com/jquery/address</a></p>\n\n<p><a href=\"http://github.com/asual/jquery-address\" rel=\"nofollow\">http://github.com/asual/jquery-address</a></p>\n\n<p>see: <a href=\"http://stackoverflow.com/questions/116446/what-is-the-best-back-button-jquery-plugin\">What is the best back button jQuery plugin?</a></p>\n\n<p>Greetings</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>you can find a good sample right here:</p>\n\n<p><a href=\"http://jsfiddle.net/5L6Ur/10/\" rel=\"nofollow\">http://jsfiddle.net/5L6Ur/10/</a></p>\n\n<p>some code in short:</p>\n\n<pre><code> $(function() {\n    $('a').click(function(e) {\n        e.preventDefault();\n        $.address.value($(this).attr('href'));\n    });\n    var changecount = 0;\n    $.address.change(function(e) {\n        if (typeof e !== 'function') {\n            $('span').html(changecount++);\n        }\n    });\n });\u200b\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>You should:</p>\n\n<ol>\n<li>Set <code>location.hash</code> when page state changes.  </li>\n<li>When <code>location.hash</code>\nchanged by user (for example, by pressing back button) render\nappropriate page contents.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try using JQuery history plugin from here <a href=\"http://tkyk.github.com/jquery-history-plugin/\" rel=\"nofollow\">http://tkyk.github.com/jquery-history-plugin/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a website that is on a slide show and when the user presses the back button I would like it to go back to the album view not the prior and prevent page. Is there a way of doing this? thanks for any help or advice.</p>\n",
            "last_activity_date": 1367944997,
            "question_id": 10462511,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Is there a way using Jquery to detect the back button being pressed cross browsers"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Have you seen this <a href=\"http://www.digitaldarknet.net/flash/index.php?selector=meter\" rel=\"nofollow\">Open Source Gauge Component</a>? There are about 10 different styles you can use.</p>\n\n<p><img src=\"http://i.stack.imgur.com/DlNKH.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I recommend looking into the <a href=\"http://raphaeljs.com/\">Raphael</a> Javascript graphics library. It works in all browsers (including old versions of IE!), and uses vector graphics, so the graphics it produces are scalable and rotatable without loss of image quality, and it even includes animation features.</p>\n\n<p>Here's a link to a guy who's used Raphael to produce some very good-looking gauges: \n<a href=\"http://techoctave.com/c7/posts/17-jquery-dashboard-gauges-using-raphael-xhtml-and-css\">http://techoctave.com/c7/posts/17-jquery-dashboard-gauges-using-raphael-xhtml-and-css</a></p>\n\n<p>But if you want to draw your own, it shouldn't be hard to do using Raphael: It has the ability to draw cicles and shapes, and to animate them. Something that looks like your example shouldn't be hard to achieve.</p>\n\n<p>Here's some code I've knocked together quickly as an example:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"raphael.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n  var gauge = Raphael('mydiv', 200, 100);\n  var semicircle = gauge.circle(100, 100, 100).attr({\"fill\": \"#FF0000\"});\n  var indicator = gauge.rect(0, 99, 100, 2);\n  indicator.animate({rotation: \"30 100 100\"}, 1000, \"&lt;&gt;\");\n&lt;/script&gt;\n....\n&lt;div id='mydiv'&gt;&lt;/div&gt;\n</code></pre>\n\n<p>I've tested that code, and it produces a working dial. It's not as pretty as, say, the other example I linked above, but it doesn't use any external graphics, and it's done entirely using Javascript. The only external dependancy is the Raphael library.</p>\n\n<p>It'll obviously need some work to improve it to make it usable for your scenario, but it should be a fairly good start for you.</p>\n\n<p>Hope that helps.</p>\n\n<p>[EDIT]</p>\n\n<p>The above script works for Raphael v1.5. However, Raphael v2 changes the syntax slightly.</p>\n\n<p>The line to do the animation needs to use the new <code>transform</code> syntax rather than the deprecated <code>rotate</code> syntax. So the edited line would look as follows:</p>\n\n<pre><code>indicator.animate({transform: \"r30,100,100\"}, 1000, \"&lt;&gt;\");\n</code></pre>\n\n<p>The rest of the code remains the same as above.</p>\n\n<p>See the <a href=\"http://raphaeljs.com/reference.html#Element.transform\">Raphael manual</a> for more information on the syntax of the <code>transform</code> function.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>If you want a simple JavaScript canvas based gauge you can use a little lib that I've created myself. It is easy to use and has a wyswig configurator for easy gauge customization. I've pushed it to the GitHub at <a href=\"http://bernii.github.com/gauge.js\">http://bernii.github.com/gauge.js</a></p>\n\n<p>A little preview of what you can get:</p>\n\n<p><img src=\"http://i.stack.imgur.com/hZeHh.jpg\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>For Swing, have a look at the open source <a href=\"http://harmoniccode.blogspot.de/search/label/swing\" rel=\"nofollow\">SteelSeries</a> (developed by Gerrit Grunwald, alias @hansolo). It contains many types of nice looking gauges (and other fun components).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>this gauge lib look's good and run well</p>\n\n<p><a href=\"http://justgage.com/\" rel=\"nofollow\">http://justgage.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>has anyone a javascript canvas or java swing example?</p>\n\n<p>Something like this:\n<a href=\"http://www.fmsinc.com/microsoftaccess/controls/components/gauges/gauge-half.gif\">http://www.fmsinc.com/microsoftaccess/controls/components/gauges/gauge-half.gif</a></p>\n\n<p>How should i draw the \"separator\" lines?</p>\n",
            "last_activity_date": 1389754638,
            "question_id": 5083221,
            "score": 7,
            "tags": [
                "javascript",
                "swing",
                "canvas"
            ],
            "title": "Drawing a half gauge/speedometer (JavaScript Canvas or Java Swing Example needed)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>First of all: In JavaScript you don't have classes like in C++, Java or C#. So you cannot really have a typed array.</p>\n\n<p>What you are doing should basically work for variables, but not for functions. So you would have to add the functions first. Have a look at the following code to get an idea.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\nfunction Person() {\n      var self = this;\n\n      self.personName=\"\";\n      self.animals=[];\n}\n\nfunction Animal(){\n     var self=this;\n\n     self.animalName=\"\";\n     self.run=function(meters){\n         7/... do something\n     }\n}\n\nvar persons = [{personName:\"John\",animals:[{animalName:\"cheetah\"},{animalName:\"giraffe\"}]} , {personName:\"Smith\",animals:[{animalName:\"cat\"},{animalName:\"dog\"}]} ];\n\n//use this to assign run-function\nvar a = new Animal();\n\n//assign run-function to received data\npersons[0].animals[0].run = a.run;\n\n//now this works\npersons[0].animals[0].run();\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>How about creating a Static method on Person Class, which will accept your server response and create required variables.</p>\n\n<p>This is just an idea. Please see if this fits in your problem.</p>\n\n<pre><code>//Static method\nPerson.createObjects = function( response ) {\n    var persons = [];\n    for ( var p = 0; p &lt; response.length; p++ ) {\n        //Create Person\n        var person = new Person( response[p].personName );\n        //Create Animals\n        for ( var a = 0; a &lt; response[p].animals.length; a++ ) {\n           var animal = new Animal( response[p].animals[a].animalName );\n           //Push this animal into Person\n           person.animals.push ( animal );\n        }\n        //Push this person in persons\n        persons.push ( person );\n    }\n    //Return persons\n    return persons;\n}\n\n//Now Create required persons by passing the server response\nvar persons = Person.createObjects ( response );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It seems like you have classes that have some prototype methods and you'd just like to be able to make your objects use those methods. <a href=\"http://jsfiddle.net/6CrQL/3/\" rel=\"nofollow\">http://jsfiddle.net/6CrQL/3/</a></p>\n\n<pre><code>function Person() {}\n\nPerson.prototype.speak = function() {\n   console.log(\"I am \" + this.personName);\n};\n\nPerson.prototype.runAnimals = function() {\n    this.animals.each(function(animal){\n       animal.run();\n    })\n};\n\nfunction Animal() {}\n\nAnimal.prototype.run = function() {\n    console.log(\"My Animal \" + this.animalName+ \"  is running\");\n}\n\nvar untypedPersons =  [{personName:\"John\",animals:[{animalName:\"cheetah\"},{animalName:\"giraffe\"}]} , {personName:\"Smith\",animals:[{animalName:\"cat\"},{animalName:\"dog\"}]} ];   \n\nfunction fromArray(arr, constructor) {\n   return arr.map(function(obj){\n       var typed = Object.create(constructor.prototype);\n       // Now copy properties from the given object\n       for (var prop in obj)  {\n           typed[prop] = obj[prop];\n       }\n       return typed;\n   });\n}\n\nvar persons = fromArray(untypedPersons, Person);\n// Attach prototype to each animals list in person\npersons.each(function(person){\n    person.animals = fromArray(person.animals, Animal);\n});\n\npersons.each(function(person){\n    person.speak();\n    person.runAnimals();  \n});\n</code></pre>\n\n<p>\u200bThis could all be a lot easier (and we could avoid all the copying) if everybody supported the <code>__proto__</code> property <a href=\"http://jsfiddle.net/6CrQL/2/\" rel=\"nofollow\">http://jsfiddle.net/6CrQL/2/</a></p>\n\n<pre><code>persons.each(function(person){\n  person.__proto__ = Person.prototype;\n  person.animals.each(function(animal){\n    animal.__proto__ = Animal.prototype;\n  });\n});\n\npersons.each(function(person){\n  person.speak();\n  person.runAnimals();  \n});\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Creating an object in JavaScript requires the invocation of its constructor. So, at first you will need to find the correct arguments, which may not always be just properties. After that, you can reassign all public properties from the JSON-parsed object to the created instances.</p>\n\n<p>A general solution would be that every constructor accepts any objects that look like instances (including real instances) and clones them. All the internal logic needed to create proper instances will be located in the right place then.</p>\n\n<hr>\n\n<p>Your case is very simple, as you don't have any arguments and only public properties. To change <code>{personName:John,animals:[]}</code> to an object instance, use this:</p>\n\n<pre><code>var personLiteral = ... // JSON.parse(\"...\");\nvar personInstance = new Person();\nfor (var prop in personLiteral)\n    personInstance[prop] = personLiteral[prop];\n</code></pre>\n\n<p>You can also use <code>Object.extend</code> functionality for this, should you have one available (e.g. jQuery):</p>\n\n<pre><code>var personInstance = $.extend(new Person(), personLiteral);\n</code></pre>\n\n<p>The creation of the <code>Animal</code> instances works analogous.</p>\n\n<p>As JSON does not transport any information about the classes, you must know the structure before. In your case it will be:</p>\n\n<pre><code>var persons = JSON.parse(serverResponse);\nfor (var i=0; i&lt;persons.length; i++) {\n    persons[i] = $.extend(new Person, persons[i]);\n    for (var j=0; j&lt;persons[i].animals; j++) {\n        persons[i].animals[j] = $.extend(new Animal, persons[i].animals[j]);\n    }\n}\n</code></pre>\n\n<p>Btw, your <code>run</code> methods seems likely to be added on the <code>Animal.prototype</code> object instead of each instance.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<pre><code>function Person() {\n      var self = this;\n\n      self.personName=\"\";\n      self.animals=[];\n}\n\nfunction Animal(){\n     var self=this;\n\n     self.animalName=\"\";\n     self.run=function(meters){\n         .....\n     }\n}\n</code></pre>\n\n<p>Server response:</p>\n\n<pre><code> [{personName:John,animals:[{animalName:cheetah},{animalName:giraffe}]} , {personName:Smith,animals:[{animalName:cat},{animalName:dog}]} ]\n</code></pre>\n\n<p>I'm getting Person array from server. I want to cast generic Person array to typed Person array. So I can use</p>\n\n<pre><code> persons[0].Animals[2].Run();\n</code></pre>\n\n<p>I founded Javascript's </p>\n\n<pre><code> Object.create(Person,person1);\n</code></pre>\n\n<p>But I want cross-browser version of it with array support</p>\n\n<pre><code>  ObjectArray.create(Person,persons);\n</code></pre>\n\n<p>or </p>\n\n<pre><code> Object.create(Person[],persons);\n</code></pre>\n",
            "last_activity_date": 1344110129,
            "question_id": 11810028,
            "score": 6,
            "tags": [
                "javascript",
                "casting"
            ],
            "title": "Casting plain objects to function instances (&quot;classes&quot;) in javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There is nothing built in, but there are many libraries that have been written to do this.</p>\n\n<p><a href=\"http://www.strictly-software.com/htmlencode\" rel=\"nofollow\">Here</a> is one.</p>\n\n<p>And <a href=\"http://www.prodevtips.com/2008/10/21/jquery-plugin-html-decode-and-encode/\" rel=\"nofollow\">here</a> one that is a jQuery plugin.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could do something like this:</p>\n\n<pre><code>String.prototype.decodeHTML = function() {\n    var map = {\"gt\":\"&gt;\" /* , \u2026 */};\n    return this.replace(/&amp;(#(?:x[0-9a-f]+|\\d+)|[a-z]+);?/gi, function($0, $1) {\n        if ($1[0] === \"#\") {\n            return String.fromCharCode($1[1].toLowerCase() === \"x\" ? parseInt($1.substr(2), 16)  : parseInt($1.substr(1), 10));\n        } else {\n            return map.hasOwnProperty($1) ? map[$1] : $0;\n        }\n    });\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<pre><code>function decodeEntities(s){\n    var str, temp= document.createElement('p');\n    temp.innerHTML= s;\n    str= temp.textContent || temp.innerText;\n    temp=null;\n    return str;\n}\n\nalert(decodeEntities('&amp;lt;'))\n\n/*  returned value: (String)\n&lt;\n*/\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I know there are libraries out there, but here are a couple of solutions for browsers. These work well when placing html entity data strings into human editable areas where you want the characters to be shown, such as textarea's or input[type=text]. </p>\n\n<p>I add this answer as I have to support older versions of IE and I feel that it wraps up a few days worth of research and testing. I hope somebody finds this useful.</p>\n\n<p>First this is for more modern browsers using jQuery, Please note that this should NOT be used if you have to support versions of IE before 10 (7, 8, or 9) as it will strip out the newlines leaving you with just one long line of text.</p>\n\n<pre><code>if (!String.prototype.HTMLDecode) {\n    String.prototype.HTMLDecode = function () {\n            var str = this.toString(),\n            $decoderEl = $('&lt;textarea /&gt;');\n\n        str = $decoderEl.html(str)\n            .text()\n            .replace(/&lt;br((\\/)|( \\/))?&gt;/gi, \"\\r\\n\");\n\n        $decoderEl.remove();\n\n        return str;\n    };\n}\n</code></pre>\n\n<p>This next one is based on kennebec's work above, with some differences which are mostly for the sake of older IE versions. This does not require jQuery, but does still require a browser.</p>\n\n<pre><code>if (!String.prototype.HTMLDecode) {\n    String.prototype.HTMLDecode = function () {\n        var str = this.toString(),\n            //Create an element for decoding            \n            decoderEl = document.createElement('p');\n\n        //Bail if empty, otherwise IE7 will return undefined when \n        //OR-ing the 2 empty strings from innerText and textContent\n        if (str.length == 0) {\n            return str;\n        }\n\n        //convert newlines to &lt;br's&gt; to save them\n        str = str.replace(/((\\r\\n)|(\\r)|(\\n))/gi, \" &lt;br/&gt;\");            \n\n        decoderEl.innerHTML = str;\n        /*\n        We use innerText first as IE strips newlines out with textContent.\n        There is said to be a performance hit for this, but sometimes\n        correctness of data (keeping newlines) must take precedence.\n        */\n        str = decoderEl.innerText || decoderEl.textContent;\n\n        //clean up the decoding element\n        decoderEl = null;\n\n        //replace back in the newlines\n        return str.replace(/&lt;br((\\/)|( \\/))?&gt;/gi, \"\\r\\n\");\n    };\n}\n\n/* \nUsage: \n    var str = \"&amp;gt;\";\n    return str.HTMLDecode();\n\nreturned value: \n    (String) &gt;    \n*/\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is a \"class\" for decoding whole HTML document.</p>\n\n<pre><code>HTMLDecoder = {\n    tempElement: document.createElement('span'),\n    decode: function(html) {\n        var _self = this;\n        html.replace(/&amp;(#(?:x[0-9a-f]+|\\d+)|[a-z]+);/gi,\n            function(str) {\n                _self.tempElement.innerHTML= str;\n                str = _self.tempElement.textContent || _self.tempElement.innerText;\n                return str;\n            }\n        );\n    }\n}\n</code></pre>\n\n<p>Note that I used Gumbo's regexp for catching entities but for fully valid HTML documents (or XHTML) you could simpy use <code>/&amp;[^;]+;/g</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>the questions says it all :)</p>\n\n<p>eg. we have <code>&amp;gt;</code>, we need <code>&gt;</code> using only javascript</p>\n\n<p><strong>Update</strong>: It seems jquery is the easy way out. But, it would be nice to have a lightweight solution. More like a function which is capable to do this by itself.</p>\n",
            "last_activity_date": 1415183964,
            "question_id": 4338963,
            "score": 6,
            "tags": [
                "javascript",
                "character-entities"
            ],
            "title": "Convert HTML Character Entities back to regular text using javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Look at </p>\n\n<pre><code>window.location.search\n</code></pre>\n\n<p>It will contain a string like this: <code>?foo=1&amp;bar=2</code></p>\n\n<p>To get from that into an object, some splitting is all you need to do:</p>\n\n<pre><code>var parts = window.location.search.substr(1).split(\"&amp;\");\nvar $_GET = {};\nfor (var i = 0; i &lt; parts.length; i++) {\n    var temp = parts[i].split(\"=\");\n    $_GET[decodeURIComponent(temp[0])] = decodeURIComponent(temp[1]);\n}\n\nalert($_GET['foo']); // 1\nalert($_GET.bar);    // 2\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>As others have explained you can parse page URL from JS to get the variables.</p>\n\n<p>You could also use <a href=\"http://en.wikipedia.org/wiki/Ajax%5F%28programming%29\" rel=\"nofollow\">AJAX</a> in the page which submits the values. It really depends on what kind of information you're passing and then returning back to the user. (It's definitely not simpler or more direct way of doing it, just an alternative approach)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I suppose you were thinking this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    var to = \"&lt;?= $_GET['to']; ?&gt;\";\n    var from = \"&lt;?= $_GET['from']; ?&gt;\";\n\n&lt;/script&gt;\n</code></pre>\n\n<p>...this would just be syntax-correction of your idea :)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's another idea:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\nvar $_GET = &lt;?php echo json_encode($_GET); ?&gt;;\n\nalert($_GET['some_key']);\n// or\nalert($_GET.some_key);\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>i use this one for Get request (like $_GET in php):</p>\n\n<pre><code>  var urlParams;\n  (window.onpopstate = function () {\n    var match,\n          pl     = /\\+/g,  Regex for replacing addition symbol with a space\n           search = /([^&amp;=]+)=?([^&amp;]*)/g,\n          decode = function (s) { return decodeURIComponent(s.replace(pl, \" \")); },\n           query  = window.location.search.substring(1);\n       urlParams = {};\n       while (match = search.exec(query))\n        urlParams[decode(match[1])] = decode(match[2]);\n    })();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>document.get = function (d1,d2,d3) {\nvar divider1 = (d1 === undefined ? \"?\" : d1);\nvar divider2 = (d2 === undefined ? \"&amp;\" : d2);\nvar divider3 = (d3 === undefined ? \"=\" : d3);\nvar url = window.location.href; //the current url\nvar pget = url.split(divider1)[1]; //slit the url and assign only the part after the divider 1\nvar pppget = {}; //define the contenitor object\nif (pget.search(divider2) &gt; -1) { //control if there is variable other than the first (?var1=a&amp;var2=b) the var2 in this example\n    var ppget = pget.split(divider2); //split the divider2 \n    for (i = 0;i==ppget.lenght; i++) { //start a for and stop it when i == at object length\n        if (ppget[i].search(divider3) &gt; -1) { //control if is an empty var \n            psget = ppget[i].split(divider3);//if is split in 2 part using divider 3\n            pppget[psget[0]] = psget[1];//assign to the object the value of first element and for value the second value  ex {var1=a,...}  \n        } else {//if is a empty var (?var1&amp;...)\n            pppget[ppget[i]] = \"\";//assign only the value of first element with value a blank string\n        }\n    }\n} else {//if the url don't contain other variable \n    if (pget.search(divider3) &gt; -1) { //control if is an empty var \n        var ppget = pget.split(divider3);//if is split in 2 part using divider 3\n        pppget[ppget[0]] = ppget[1];//assign to the object the value of first element and for value the second value  ex {var1=a}  \n    } else {//if is a empty var (?var1)\n        pppget[pget] = \"\";//assign only the value of first element with value a blank string\n    }\n}\nreturn pppget;\n/* return the object \n * the use of the function is like this $_GET=document.get()\n * echo $_GET[var]\n * or use custom divider the default is setted for php standard divider\n */};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I suppose I could use PHP to access <code>$_GET</code> variables from JavaScript:</p>\n\n<pre><code>&lt;script&gt;\nvar to = $_GET['to'];\nvar from = $_GET['from'];\n&lt;/script&gt;\n&lt;script src=\"realScript\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>But perhaps it's even simpler. Is there a way to do it directly from JS?</p>\n",
            "last_activity_date": 1421259281,
            "question_id": 1586330,
            "score": 6,
            "tags": [
                "php",
                "javascript",
                "get"
            ],
            "title": "Access GET directly from JavaScript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Using jQuery, like this (followed by a solution that doesn't use jQuery except for the event; lots fewer function calls, if that's important):</p>\n\n<pre><code>$(\".rightArrow\").click(function() {\n    var rightArrowParents = [];\n    $(this).parents().not('html').each(function() {\n        var entry = this.tagName.toLowerCase();\n        if (this.className) {\n            entry += \".\" + this.className.replace(/ /g, '.');\n        }\n        rightArrowParents.push(entry);\n    });\n    rightArrowParents.reverse();\n    alert(rightArrowParents.join(\" \"));\n});\n</code></pre>\n\n<p><a href=\"http://jsbin.com/uhude3/3\">Live example</a></p>\n\n<p>That uses <a href=\"http://api.jquery.com/parents/\"><code>parents</code></a> to get the ancestors of the element that was clicked, removes the <code>html</code> element from that via <a href=\"http://api.jquery.com/not/\"><code>not</code></a> (since you started at <code>body</code>), then loops through creating entries for each parent and pushing them on an array. Then it reverses the array because <code>parents</code> gives us the list in the opposite order to what you wanted, and uses <code>Array#join</code> to create the space-delimited string.</p>\n\n<p>When creating the entry, if there's anything on <code>className</code> we replace spaces with <code>.</code> to support elements that have more than one class (<code>&lt;p class='foo bar'&gt;</code> has <code>className</code> = <code>\"foo bar\"</code>, so that entry ends up being <code>p.foo.bar</code>).</p>\n\n<p>Just for completeness, this is one of those places where jQuery may be overkill, you can readily do this just by walking up the DOM:</p>\n\n<pre><code>$(\".rightArrow\").click(function() {\n    var rightArrowParents = [],\n        elm,\n        entry;\n\n    for (elm = this.parentNode; elm; elm = elm.parentNode) {\n        entry = elm.tagName.toLowerCase();\n        if (entry === \"html\") {\n            break;\n        }\n        if (elm.className) {\n            entry += \".\" + elm.className.replace(/ /g, '.');\n        }\n        rightArrowParents.push(entry);\n    }\n    rightArrowParents.reverse();\n    alert(rightArrowParents.join(\" \"));\n});\n</code></pre>\n\n<p><a href=\"http://jsbin.com/uhude3/4\">Live example</a></p>\n\n<p>There we just use the standard <a href=\"http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1060184317\"><code>parentNode</code> property</a> of the element repeatedly to walk up the tree until either we run out of parents or we see the <code>html</code> element.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<pre><code>$(\".rightArrow\")\n  .parents()\n  .map(function () { \n      var value = this.tagName.toLowerCase();\n      if (this.className) {\n          value += this.className.replace(' ', '.', 'g');\n      }\n  })\n  .get().join(\", \");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I moved the snippet from T.J. Crowder to a tiny jQuery Plugin. I used the jQuery version of him even if he's right that this is totally unnecessary overhead, but i only use it for debugging purpose so i don't care.</p>\n\n<p>Usage:</p>\n\n<p><strong>Html</strong></p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n    &lt;!-- Two spans, the first will be chosen --&gt;\n    &lt;div&gt;\n        &lt;span&gt;Nested span&lt;/span&gt;\n    &lt;/div&gt;\n    &lt;span&gt;Simple span&lt;/span&gt;\n\n    &lt;!-- Pre element --&gt;\n    &lt;pre&gt;Pre&lt;/pre&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>Javascript</strong></p>\n\n<pre><code>// result (array): [\"body\", \"div.sampleClass\"]\n$('span').getDomPath(false)\n\n// result (string): body &gt; div.sampleClass\n$('span').getDomPath()\n\n// result (array): [\"body\", \"div#test\"]\n$('pre').getDomPath(false)\n\n// result (string): body &gt; div#test\n$('pre').getDomPath()\n</code></pre>\n\n<p><strong>Repository</strong></p>\n\n<p><a href=\"https://bitbucket.org/tehrengruber/jquery.dom.path\" rel=\"nofollow\">https://bitbucket.org/tehrengruber/jquery.dom.path</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is a native JS version that returns a jQuery path.  I'm also adding IDs for elements if they have them.  This would give you the opportunity to do the shortest path if you see an id in the array.  </p>\n\n<pre><code>var path = getDomPath(element);\nconsole.log(path.join(' &gt; '));\n</code></pre>\n\n<p>Outputs</p>\n\n<pre><code>body &gt; section:eq(0) &gt; div:eq(3) &gt; section#content &gt; section#firehose &gt; div#firehoselist &gt; article#firehose-46813651 &gt; header &gt; h2 &gt; span#title-46813651\n</code></pre>\n\n<p>Here is the function.</p>\n\n<pre><code>function getDomPath(el) {\n  var stack = [];\n  while ( el.parentNode != null ) {\n    console.log(el.nodeName);\n    var sibCount = 0;\n    var sibIndex = 0;\n    for ( var i = 0; i &lt; el.parentNode.childNodes.length; i++ ) {\n      var sib = el.parentNode.childNodes[i];\n      if ( sib.nodeName == el.nodeName ) {\n        if ( sib === el ) {\n          sibIndex = sibCount;\n        }\n        sibCount++;\n      }\n    }\n    if ( el.hasAttribute('id') &amp;&amp; el.id != '' ) {\n      stack.unshift(el.nodeName.toLowerCase() + '#' + el.id);\n    } else if ( sibCount &gt; 1 ) {\n      stack.unshift(el.nodeName.toLowerCase() + ':eq(' + sibIndex + ')');\n    } else {\n      stack.unshift(el.nodeName.toLowerCase());\n    }\n    el = el.parentNode;\n  }\n\n  return stack.slice(1); // removes the html element\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>    var obj = $('#show-editor-button'),\n       path = '';\n    while (typeof obj.prop('tagName') != \"undefined\"){\n        if (obj.attr('class')){\n            path = '.'+obj.attr('class').replace(/\\s/g , \".\") + path;\n        }\n        if (obj.attr('id')){\n            path = '#'+obj.attr('id') + path;\n        }\n        path = ' ' +obj.prop('tagName').toLowerCase() + path;\n        obj = obj.parent();\n    }\n    console.log(path);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is a solution for exact matching of an element.</p>\n\n<p>It is important to understand that the <em>selector</em> (<em>it is not a real one</em>) that the chrome tools show do not uniquely identify an element in the DOM. (<em>for example it will not distinguish between a list of consecutive <code>span</code> elements. there is no positioning/indexing info</em>)</p>\n\n<p>An adaptation from a <a href=\"http://stackoverflow.com/questions/4404454/return-xpath-location-with-jquery-need-some-feedback-on-a-function/4404471#4404471\">similar (<em>about xpath</em>) answer</a></p>\n\n<pre><code>$.fn.fullSelector = function () {\n    var path = this.parents().addBack();\n    var quickCss = path.get().map(function (item) {\n        var self = $(item),\n            id = item.id ? '#' + item.id : '',\n            clss = item.classList.length ? item.classList.toString().split(' ').map(function (c) {\n                return '.' + c;\n            }).join('') : '',\n            name = item.nodeName.toLowerCase(),\n            index = self.siblings(name).length ? ':nth-child(' + (self.index() + 1) + ')' : '';\n\n        if (name === 'html' || name === 'body') {\n            return name;\n        }\n        return name + index + id + clss;\n\n    }).join(' &gt; ');\n\n    return quickCss;\n};\n</code></pre>\n\n<p>And you can use it like this </p>\n\n<pre><code>console.log( $('some-selector').fullSelector() );\n</code></pre>\n\n<p>Demo at <a href=\"http://jsfiddle.net/gaby/zhnr198y/\" rel=\"nofollow\">http://jsfiddle.net/gaby/zhnr198y/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>HTML</p>\n\n<pre><code>&lt;body&gt;\n&lt;div class=\"lol\"&gt;\n&lt;a class=\"rightArrow\" href=\"javascriptVoid:(0);\" title\"Next image\"&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>Pseudo Code</p>\n\n<pre><code>$(\".rightArrow\").click(function() {\nrightArrowParents = this.dom(); //.dom(); is the pseudo function ... it should show the whole\nalert(rightArrowParents);\n});\n</code></pre>\n\n<p>Alert message would be:</p>\n\n<p><strong>body div.lol a.rightArrow</strong></p>\n\n<p>How can I get this with javascript/jquery?</p>\n",
            "last_activity_date": 1423527100,
            "question_id": 5728558,
            "score": 5,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "dom",
                "css-selectors"
            ],
            "title": "Get the DOM path of the clicked &lt;a&gt;"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>No, it is not possible and thanks God it isn't. Otherwise I leave you to the imagination of what kind of files could be stored on your computer when you visit a web site without you knowing it.</p>\n\n<p>As @Paul D. White pointed out in the comments section if you want to open the file inline (inside the browser) with the default program associated with it you could have the server send the Content-Disposition HTTP header. For example:</p>\n\n<pre><code>Content-Disposition: inline; filename=foo.pdf\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>No this is not possible with JQuery/JavaScript only.</p>\n\n<p>You will need a server side script which returns you the file with a <code>Content-Type</code> (HTTP Header) which will force the browser to download your requested file. An possible value for <code>Content-Type</code> would be <code>application/force-download</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can not force that behavior from JavaScript, the HTTP Headers need to be set on the server side:</p>\n\n<pre><code>Content-disposition=attachment; filename=some.file.name\n</code></pre>\n\n<p>The way you can solve the problem is to let your AJAX method redirect the user to the URL of the PDF:</p>\n\n<pre><code>location.replace('path/to.pdf');\n</code></pre>\n\n<p>(The above HTTP headers must be set for the PDF)</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>With the advent of HTML5 you could just use the new property download in the anchor tag. </p>\n\n<p>The code will look something like </p>\n\n<pre><code>&lt;a download=\"name_of_downloaded_file\" href=\"path/to/the/download/file\"&gt; Clicking on this link will force download the file&lt;/a&gt;\n</code></pre>\n\n<p>It works on firefox and chrome latest version. Should I mention that I didn't check it in IE? :P</p>\n\n<p>Edited the download attribute after comment from sstur</p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>Is it possible to force a download through JS or Javascript i-e the web page should not open the file in new tab in the browser but to pop up to let the user to choose eith \"save as\" or open with ???</p>\n",
            "last_activity_date": 1382532207,
            "question_id": 5192917,
            "score": 5,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Force download through js or query"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>There's a technique called \"unobtrusive javascript\". Here's a Railscast about it: <a href=\"http://railscasts.com/episodes/205-unobtrusive-javascript\" rel=\"nofollow\">link text</a> . It works both with prototype an jQuery. There are also plugins that can help simplify some of the tasks described in the article.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>- content_for :javascripts_vars do\n  = \"var costs_data = #{@records[:cost_mode][:data].to_json}\".html_safe\n  = \"var graph_data = #{@records[:cost_mode][:graph].to_json}\".html_safe\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I found that gem <a href=\"https://github.com/coffa/client_variable\" rel=\"nofollow\">client variable</a>, it helps you to do it easily.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A few options:</p>\n\n<p><strong>escape_javascript</strong></p>\n\n<p>Alias: <code>j</code>.</p>\n\n<p>Works only on strings.</p>\n\n<p>Escapes characters that can have special meanings in Javascript strings,\nlike backslash escapes, into a format suitable to put inside Javascript string literal quotes.</p>\n\n<p>Maintains <code>html_safe</code> status of input,\nso needs <code>html_safe</code> otherwise special HTML chars like <code>&lt;</code> would get escaped into <code>&amp;lt;</code>.</p>\n\n<pre><code>&lt;% a = \"\\\\n&lt;\" %&gt;\n&lt;%= javascript_tag do %&gt;\n  '&lt;%= j(a)           %&gt;' === '\\\\n&amp;lt;'\n  '&lt;%= j(a).html_safe %&gt;' === '\\\\n&lt;'\n&lt;% end %&gt;\n</code></pre>\n\n<p><strong>to_json + html_safe</strong></p>\n\n<p>As mentioned by Vyacheslav, go upvote him.</p>\n\n<p>Works because JSON is <a href=\"http://timelessrepo.com/json-isnt-a-javascript-subset\" rel=\"nofollow\">almost a subset of Javascript object literal notation</a>.</p>\n\n<p>Works not only on hash objects, but also on strings, arrays and integers which are\nconverted to JSON fragments of the corresponding data type.</p>\n\n<pre><code>&lt;% data = { key1: 'val1', key2: 'val2' } %&gt;\n&lt;%= javascript_tag do %&gt;\n  var data = &lt;%= data.to_json.html_safe %&gt;\n  data.key1 === 'val1'\n  data.key2 === 'val2'\n&lt;% end %&gt;\n</code></pre>\n\n<p><strong>data- attributes</strong></p>\n\n<p>Add values to attributes, retrieve them with Javascript DOM operations.</p>\n\n<p>Better with the <code>content_tag</code> helper:</p>\n\n<pre><code>&lt;%= content_tag 'div', '', id: 'data', data: {key1: 'val1', key2: 'val2'} %&gt;\n&lt;%= javascript_tag do %&gt;\n  $('#data').data('key1') === 'val1'\n  $('#data').data('key2') === 'val2'\n&lt;% end %&gt;\n</code></pre>\n\n<p>Sometimes called \"unobtrusive Javascript\".</p>\n\n<p><strong>gon</strong></p>\n\n<p>Library specialized for the job: <a href=\"https://github.com/gazay/gon\" rel=\"nofollow\">https://github.com/gazay/gon</a></p>\n\n<p>Probably the most robust solution.</p>\n\n<p>Gemfile:</p>\n\n<pre><code>gem 'gon'\n</code></pre>\n\n<p>Controller:</p>\n\n<pre><code>gon.key1 = 'val1'\ngon.key2 = 'val2'\n</code></pre>\n\n<p>Layout <code>app/views/layouts/application.html.erb</code>:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"/&gt;\n  &lt;%= include_gon %&gt;\n</code></pre>\n\n<p>View:</p>\n\n<pre><code>&lt;%= javascript_tag do %&gt;\n  gon.key1 === 'val1'\n  gon.key2 === 'val2'\n&lt;% end %&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>I'm wondering what the best practice is for passing variables to JavaScript functions in a rails view.  Right now I'm doing something like:</p>\n\n<pre><code>&lt;% content_for :javascript do %&gt; \n  &lt;script type=\"text/javascript\"&gt;\n    Event.observe(window, 'load', function(){          \n        js_function(&lt;%= @ruby_array.to_json %&gt;, &lt;%= @ruby_var %&gt;); )}\n  &lt;/script&gt;\n&lt;% end %&gt;\n</code></pre>\n\n<p>Is this the right way to go about it?</p>\n",
            "last_activity_date": 1404398666,
            "question_id": 2464966,
            "score": 5,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "prototypejs"
            ],
            "title": "Passing ruby variables to javascript function in rails view"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I dont think you can force the select box to <code>drop down</code> using any code. But still you can change the selected option using the code. Pls see this</p>\n\n<p><a href=\"http://www.mredkj.com/tutorials/tutorial003.html\" rel=\"nofollow\">http://www.mredkj.com/tutorials/tutorial003.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This should work:</p>\n\n<pre><code>var element = $(\"select\")[0], worked = false;\nif (document.createEvent) { // all browsers\n    var e = document.createEvent(\"MouseEvents\");\n    e.initMouseEvent(\"mousedown\", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n    worked = element.dispatchEvent(e);\n} else if (element.fireEvent) { // ie\n    worked = element.fireEvent(\"onmousedown\");\n}\nif (!worked) { // unknown browser / error\n    alert(\"It didn't worked in your browser.\");\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/FVZkX/\">Example</a></p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>So I can see the options of the select element but I need to click on it. What if I want to use a function? When something happens this select element should be selected, means the list is open and I can see the options. I don't want the user to click on the select element, I want something else to open it.</p>\n\n<p><strong>What I've tried</strong></p>\n\n<pre><code>$(\"select\").select();\n$(\"select\").click();\n$(\"select\").focus();\n</code></pre>\n\n<p>There is a select element, usually if you want it to open (the drop down list), you click on it. What I want is to open it if I click on a <code>DIV</code> or anything else. I want this drop down list to to open, without having the user clicking on the select element.</p>\n",
            "last_activity_date": 1390445966,
            "question_id": 10453393,
            "score": 4,
            "tags": [
                "javascript",
                "jquery",
                "select"
            ],
            "title": "How to open the select input using jquery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>There are numerous ways that you can accomplish this depending on what your end goal is.  Here are the 2 most common ones.</p>\n\n<p>This is the basic process:</p>\n\n<ol>\n<li>Page loads with the initial dropdown populated with options, let's say Category (Car, Truck, SUV) and the item drop-down disabled.</li>\n<li>User selects a value from the first drop-down, there are a few ways to handle this:</li>\n</ol>\n\n<p>AJAX (the most seamless experience with fewest page loads):</p>\n\n<ol>\n<li>Using Javascript send an ajax request to a PHP script (or any other handler) containing the value of the selected option from the category drop-down as either a post or request parameter.</li>\n<li>Retrieve the values for the item drop-down based on our category, these could be from our database, a variable, a static file, or any other means that you can come up with</li>\n<li>Return our values as a response to the AJAX request (json, xml, plaintext, whatever fits best for you and you're most comfortable using)</li>\n<li>Using Javascript (or you could use a library like jQuery) we insert the returned options from our AJAX request into the item drop-down and enable it so the user can make a selection.</li>\n<li>From here we can either continue using AJAX requests and responses or POST the form a return a final page, or whatever your particular usage calls for.</li>\n</ol>\n\n<p>If you don't want to use AJAX, you could very easily POST the form to a Server-side handler, get the value from the category drop-down, locate your values for the item drop-down and then render your HTML response in which you set a value for the category drop-down and disable it (so the user would have to use the back button if they would wanted to change the category) and populate the item drop-down.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>WORKING DEMO <a href=\"http://jsfiddle.net/kasperfish/r7MN9/3/\" rel=\"nofollow\">http://jsfiddle.net/kasperfish/r7MN9/3/</a>  (with jquery)</p>\n\n<pre><code>cars=new Array(\"Mercedes\",\"Volvo\",\"BMW\",\"porche\");\nphones=new Array('Samsung','Nokia','Iphone');\n\npopulateSelect();\n\n$(function() {\n\n      $('#cat').change(function(){\n        populateSelect();\n    });\n\n});\n\n\nfunction populateSelect(){\n    cat=$('#cat').val();\n    $('#item').html('');\n\n\n    if(cat=='car'){\n        cars.forEach(function(t) { \n            $('#item').append('&lt;option&gt;'+t+'&lt;/option&gt;');\n        });\n    }\n\n    if(cat=='phone'){\n        phones.forEach(function(t) {\n            $('#item').append('&lt;option&gt;'+t+'&lt;/option&gt;');\n        });\n    }\n\n} \n</code></pre>\n\n<blockquote>\n  <p><strong>UPDATED</strong>: using eval() to be able to add as much arrays as you want.\n  <a href=\"http://jsfiddle.net/kasperfish/r7MN9/4/\" rel=\"nofollow\"><strong>JSFIDDLE DEMO</strong></a></p>\n</blockquote>\n\n<pre><code>cars=new Array(\"Mercedes\",\"Volvo\",\"BMW\",\"porche\");\nphones=new Array('Samsung','Nokia','Iphone');\nnames=new Array('Kasper','Elke','Fred','Bobby','Frits');\ncolors=new Array('blue','green','yellow');\n\npopulateSelect();\n\n$(function() {\n\n      $('#cat').change(function(){\n        populateSelect();\n    });\n\n});\n\n\nfunction populateSelect(){\n    cat=$('#cat').val();\n    $('#item').html('');\n\n       eval(cat).forEach(function(t) { \n            $('#item').append('&lt;option&gt;'+t+'&lt;/option&gt;');\n        });\n    }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>I want to create two drop down lists, category and item.</p>\n\n<p>If I select one of the categories named car, then item drop down list should have Honda, Volvo, Nissan.</p>\n\n<p>If I select one of the categories named phone, then item drop down list should have this iPhone, Samsung, Nokia.</p>\n\n<p>How can I do this?\nI know that I can't do it with plain HTML.</p>\n",
            "last_activity_date": 1404130325,
            "question_id": 19039740,
            "score": 3,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Populate one dropdown list based on the selection of other dropdown list"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You have got two options:</p>\n\n<ol>\n<li>Manually enumerating and parsing the <a href=\"https://developer.mozilla.org/en/DOM/document.styleSheets\"><code>document.styleSheets</code></a> object (not recommended, unless you want to get all specific style properties defined by a certain selector).</li>\n<li>Create an element matching the selector, and use the <code>getComputedStyle</code> or <code>currentStyle</code> (IE) method to get the property value.</li>\n</ol>\n\n<p>In your example, attempt to get a certain property (let's say: <code>color</code>) of a div with <code>class=\"layout\"</code>:</p>\n\n<pre><code>function getStyleProp(elem, prop){\n    if(window.getComputedStyle)\n        return window.getComputedStyle(elem, null).getPropertyValue(prop);\n    else if(elem.currentStyle) return elem.currentStyle[prop]; //IE\n}\nwindow.onload = function(){\n    var d = document.createElement(\"div\"); //Create div\n    d.className = \"layout\";                //Set class = \"layout\"\n    alert(getStyleProp(d, \"color\"));       //Get property value\n}\n</code></pre>\n\n<p><strong>Regarding comment at your question</strong>, another function:<br />\nThe function below will ignore inline style definitions of the current element. If you want to know the style definitions inherited from a stylesheet (without inherited style definitions of the parent elements), traverse the tree, and temporary wipe the <code>.cssText</code> property, as shown in the funcion below:</p>\n\n<pre><code>function getNonInlineStyle(elem, prop){\n    var style = elem.cssText; //Cache the inline style\n    elem.cssText = \"\";        //Remove all inline styles\n    var inheritedPropValue = getStyle(elem, prop); //Get inherited value\n    elem.cssText = style;     //Add the inline style back\n    return inheritedPropValue;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>So if there is a css file linked to a webpage like:</p>\n\n<pre><code>&lt;link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\"&gt;\n</code></pre>\n\n<p>and i want to read a certain property, e.g a div has className='layout' and i want to read the details of this property using JavaScript, how can i do that?</p>\n\n<p>I have searched a lot but almost have no luck, please suggest.</p>\n",
            "last_activity_date": 1319573411,
            "question_id": 7894577,
            "score": 3,
            "tags": [
                "javascript",
                "css"
            ],
            "title": "Read CSS property of an element using JavaScript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><a href=\"http://download.oracle.com/javase/7/docs/api/java/awt/image/BufferedImage.html\" rel=\"nofollow\"><code>BufferedImage</code></a> is probably the most flexible choice. You can use it as an <code>Icon</code> or override <code>paintComponent()</code> for the full generality of <a href=\"http://java.sun.com/products/java-media/2D/index.jsp\" rel=\"nofollow\">Java2D</a>. </p>\n\n<p><img src=\"http://i.stack.imgur.com/0eF14.png\" alt=\"PiRaster\"></p>\n\n<pre><code>package overflow;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Dimension;\nimport java.awt.Graphics;\nimport java.awt.GridLayout;\nimport java.awt.image.BufferedImage;\nimport java.util.ArrayList;\nimport java.util.List;\nimport javax.swing.Icon;\nimport javax.swing.ImageIcon;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JPanel;\nimport javax.swing.SwingUtilities;\n\n/** @see http://stackoverflow.com/questions/7298492 */\npublic class PiRaster extends JPanel {\n\n    private static final int W = 30;\n    private static final int H = 30;\n    private static List&lt;Integer&gt; pi = new ArrayList&lt;Integer&gt;();\n    private final List&lt;Integer&gt; clut = new ArrayList&lt;Integer&gt;();\n    private BufferedImage image;\n\n    public PiRaster() {\n        this.setPreferredSize(new Dimension(W * 16, H * 10));\n        String s = \"\"\n            + \"31415926535897932384626433832795028841971693993751\"\n            + \"05820974944592307816406286208998628034825342117067\"\n            + \"98214808651328230664709384460955058223172535940812\"\n            + \"84811174502841027019385211055596446229489549303819\"\n            + \"64428810975665933446128475648233786783165271201909\"\n            + \"14564856692346034861045432664821339360726024914127\";\n        for (int i = 0; i &lt; s.length(); i++) {\n            pi.add(s.charAt(i) - '0');\n        }\n        for (int i = 0; i &lt; 10; i++) {\n            clut.add(Color.getHSBColor(0.6f, i / 10f, 1).getRGB());\n        }\n        image = new BufferedImage(W, H, BufferedImage.TYPE_INT_ARGB);\n        int i = 0;\n        for (int row = 0; row &lt; H; row++) {\n            for (int col = 0; col &lt; W; col++) {\n                image.setRGB(col, row, clut.get(pi.get(i)));\n                if (++i == pi.size()) {\n                    i = 0;\n                }\n            }\n        }\n    }\n\n    private static class ClutPanel extends JPanel {\n\n        private int i;\n\n        public ClutPanel(List&lt;Integer&gt; rgbList) {\n            this.setLayout(new GridLayout(1, 0));\n            for (Integer rgb : rgbList) {\n                JLabel label = new JLabel(String.valueOf(i++), JLabel.CENTER);\n                label.setOpaque(true);\n                label.setBackground(new Color(rgb));\n                this.add(label);\n            }\n        }\n    }\n\n    @Override\n    public void paintComponent(Graphics g) {\n        super.paintComponent(g);\n        g.drawImage(image, 0, 0, getWidth(), getHeight(), null);\n    }\n\n    public static void main(String[] args) {\n        SwingUtilities.invokeLater(new Runnable() {\n\n            @Override\n            public void run() {\n                JFrame frame = new JFrame();\n                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n                PiRaster pr = new PiRaster();\n                Icon icon = new ImageIcon(pr.image);\n                frame.add(new JLabel(icon), BorderLayout.WEST);\n                frame.add(pr, BorderLayout.CENTER);\n                frame.add(new ClutPanel(pr.clut), BorderLayout.SOUTH);\n                frame.pack();\n                frame.setVisible(true);\n            }\n        });\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I have some Javascript code that acts on an pixel array defined like so: </p>\n\n<pre><code>screen = {'width':160, 'height':144, 'data':new Array(160*144*4)};\n...\ncanvas.putImageData(GPU._scrn, 0,0);\n</code></pre>\n\n<p>Where screen is 1D array of width * height * 4 values representing the colors as detailed here: <a href=\"https://developer.mozilla.org/En/HTML/Canvas/Pixel_manipulation_with_canvas\" rel=\"nofollow\">https://developer.mozilla.org/En/HTML/Canvas/Pixel_manipulation_with_canvas</a></p>\n\n<p>Is there a convenience method to paint this array to the screen as is? If not, what's the easiest way to paint this array using Swing?</p>\n",
            "last_activity_date": 1320728191,
            "question_id": 7297950,
            "score": 3,
            "tags": [
                "java",
                "javascript",
                "swing",
                "canvas"
            ],
            "title": "Swing method akin to HTML5&#39;s canvas.putImageData(arrayOfPixels, 0,0)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><a href=\"http://api.jquery.com/jQuery.parseJSON/\">According to jQuery</a></p>\n\n<blockquote>\n  <p>Where the browser provides a native implementation of JSON.parse, jQuery uses it to parse the string.</p>\n</blockquote>\n\n<p>thus it means that jQuery provides a JSON parser if no native implementation exists on the browser. <a href=\"http://caniuse.com/#search=json\">here's a comparison chart</a> of browsers that have (and don't have) JSON functionality</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I don't know about performance, but it's definitely safer to use the jQuery method because some browsers like ie7 and lower might not have any JSON functionalities natively.<br>\nIt's all about compatibility, just like you use jQuery's each method instead of the array's native <code>forEach</code> method for iteration.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here is an extract <a href=\"https://github.com/jquery/jquery/blob/28d946384799abcd7608c3beda898a0a11ac88d7/src/core.js#L518-L546\">from jQuery 1.9.1</a>:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>parseJSON: function( data ) {\n    // Attempt to parse using the native JSON parser first\n    if ( window.JSON &amp;&amp; window.JSON.parse ) {\n        return window.JSON.parse( data );\n    }\n\n    if ( data === null ) {\n        return data;\n    }\n\n    if ( typeof data === \"string\" ) {\n\n        // Make sure leading/trailing whitespace is removed (IE can't handle it)\n        data = jQuery.trim( data );\n\n        if ( data ) {\n            // Make sure the incoming data is actual JSON\n            // Logic borrowed from http://json.org/json2.js\n            if ( rvalidchars.test( data.replace( rvalidescape, \"@\" )\n                .replace( rvalidtokens, \"]\" )\n                .replace( rvalidbraces, \"\")) ) {\n\n                return ( new Function( \"return \" + data ) )();\n            }\n        }\n    }\n\n    jQuery.error( \"Invalid JSON: \" + data );\n},\n</code></pre>\n\n<p>As you can see, jQuery will use the native <code>JSON.parse</code> method if it is available, and otherwise it will try to evaluate the data with <code>new Function</code>, which is kind of like <code>eval</code>.</p>\n\n<p>So yes, you should definitely use <code>jQuery.parseJSON</code>.</p>\n",
                    "is_accepted": true,
                    "score": 65
                },
                {
                    "body": "<p>JSON.parse() is natively available on some browsers, not on others, so it's safer to use a library. The JQuery implementation works well, as other respondents have noted. There's also <a href=\"https://github.com/douglascrockford/JSON-js\">Douglas Crockford's JSON library</a>, which uses the native implementation if available.</p>\n\n<p>The JSON library has the advantage that it has a method to turn a JavaScript object into a JSON string, which is missing from jQuery at the moment..</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p><a href=\"http://api.jquery.com/jQuery.parseJSON/\"><code>jQuery.parseJSON</code></a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse</code></a> are two functions that perform the same task. If the jQuery library is already loaded, would using <code>jQuery.parseJSON</code> be better than using <code>JSON.parse</code>, in terms of performance?</p>\n\n<p>If yes, why? If no, why not?</p>\n",
            "last_activity_date": 1420791986,
            "question_id": 10362277,
            "score": 45,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery.parseJSON vs JSON.parse"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Firefox interprets function statements differently and apparently they broke declaration hoisting for the function declaration. ( <a href=\"http://kangax.github.com/nfe/\">A good read about named functions / declaration vs expression</a> )</p>\n\n<p>Why does Firefox interpret statements differently is because of the following code:</p>\n\n<pre><code>if ( true ) {\n    function test(){alert(\"YAY\");}\n} else {\n    function test(){alert(\"FAIL\");}\n}\ntest(); // should alert FAIL\n</code></pre>\n\n<p>Due to declaration hoisting, function <code>test</code> should always alert \"fail\", but not in Firefox. The above code actually alerts \"YAY\" in Firefox and I suspect the code that makes that happen finally broke declaration hoisting altogether.</p>\n\n<p>I assume Firefox turns function declarations into var declarations when they are located in if/else or try/catch statements. Like so:</p>\n\n<pre><code>// firefox interpretted code\nvar test; // hoisted\nif (true) {\n   test = function(){alert(\"yay\")}\n} else {\n   test = function(){alert(\"fail\")}\n}\n</code></pre>\n\n<p>After a brief debate with \u0160ime Vidas, I have to say that Firefox's dealing with function declarations is non-standard, because of:</p>\n\n<blockquote>\n  <p>The production SourceElement :\n  Statement is processed for function\n  declarations <strong>by taking no action</strong>.<br>\n  The production SourceElement : Statement\n  is evaluated as follows:</p>\n  \n  <ol>\n  <li>Evaluate Statement.</li>\n  <li>Return Result(1).</li>\n  </ol>\n</blockquote>\n\n<p>Both FunctionDeclaration and Statement are SourceElements, ergo, there should be no FunctionDeclarations inside a statement (if/else, try/catch). Give \u0160ime Vidas a brownie!</p>\n\n<p>Try/catch is basically another form of if/else and probably uses the same exception code.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Given that a function block establishes a local scope with forward function referencing, wrapping the contents of the try block in an immediate function seems to restore that behavior.</p>\n\n<p>This works in Firefox, IE, Chrome:</p>\n\n<pre><code>try {\n  (function(){\n    hello();\n    function hello() { alert(\"Hello world\"); }\n  }())\n} catch (err) {\n  alert(err);\n}\n</code></pre>\n\n<p>Of course functions and variables defined within the try-function are no longer visible in the catch block, as they would be without the immediate function wrapper. But this is a possible workaround for try/catch script wrapping.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>You can always do it this way and get the best of both worlds:</p>\n\n<pre><code>function hello() {\n  alert(\"Hello world\");\n}\n\ntry {\n  hello();\n}\ncatch (err) {\n  alert(err);\n}\n</code></pre>\n\n<p>You will still get your exceptions in the catch block, but the function will be available. It should be easier to maintain as well, and there is no functional benefit to hoisting functions anyway.</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>To demonstrate that this is just as durable as enveloping the entire code in a try catch, I'm providing a more detailed example.</p>\n\n<pre><code>function hello(str) {\n  alert(\"Hello, \" + str);\n}\n\nfunction greet() {\n  asdf\n}\n\ntry {\n  var user = \"Bob\";\n  hello(user);\n  greet();\n  asdf\n}\ncatch (e) {\n  alert(e);\n}\n</code></pre>\n\n<p>This will work as expected, no parsing issues. The only locations where it could fail at load time are outside of the function defs and the try catch. You will also get exceptions on any garbage inside of the function defs.</p>\n\n<p>I guess it's a style preference, but it seems to be more readable and maintainable to me than other options.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>As discussed <a href=\"http://stackoverflow.com/questions/261599/why-can-i-use-a-function-before-its-defined-in-javascript\">here</a>, function definitions can be used before they're defined. But as soon as a section of code is wrapped in a try block, this ceases to be the case.</p>\n\n<p>This displays \"Hello world\":</p>\n\n<pre><code>hello();\nfunction hello() { alert(\"Hello world\"); }\n</code></pre>\n\n<p>But this displays \"ReferenceError: hello is not defined\":</p>\n\n<pre><code>try {\n  hello();\n  function hello() { alert(\"Hello world\"); }\n} catch (err) {\n  alert(err);\n}\n</code></pre>\n\n<p>So there is clearly something \"special\" about a try block with respect to function declarations. Is there any way to get around this behavior?</p>\n",
            "last_activity_date": 1405819771,
            "question_id": 4069100,
            "score": 23,
            "tags": [
                "javascript",
                "firefox",
                "function",
                "try-catch",
                "forward-declaration"
            ],
            "title": "Why can&#39;t I use a Javascript function before its definition inside a try block?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I believe this will only appear when running the page locally in this particular case, i.e. you should not see this when loading the apge from a web server.</p>\n\n<p>However <strong>if</strong> you have permission to do so, you could turn off the prompt for Internet Explorer by following <em>Tools</em> (menu) &rarr; <em>Internet Options</em> &rarr; <em>Security</em> (tab) &rarr; <em>Custom Level</em> (button) &rarr; and <strong>Disable</strong> <em>Automatic prompting for ActiveX controls</em>.</p>\n\n<p>This will of course, only affect your browser.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>That's something I'm not sure that you can change through the HTML of the webpage itself, it's a client-side setting to tell their browser if they want security to be high. Most other browsers will not do this but from what I'm aware of this is not possible to stop unless the user disables the feature.</p>\n\n<p>Does it still do what you want it to do after you click on 'Allow'? If so then it shouldn't be too much of a problem</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a code solution too. I saw it in a training video. You can add a line to tell IE that the local file is safe. I tested on IE8 and it works. That line is <code>&lt;!-- saved from url=(0014)about:internet --&gt;</code></p>\n\n<pre><code>&lt;!-- saved from url=(0014)about:internet --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n    &lt;title&gt;&lt;/title&gt;\n    &lt;script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-latest.js\"&gt;&lt;/script&gt;\n    &lt;script&gt;\n        $(document).ready(function () {\n            alert('hi');\n\n        });\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p>You have two options:</p>\n\n<ol>\n<li><p>Use a Mark of the Web.  This will enable a single html page to load.  It See <a href=\"http://msdn.microsoft.com/en-us/library/ms537628%28v=VS.85%29.aspx\">here</a> for details.  To do this, add the following to your web page below the doctype and above the html tag:</p>\n\n<p>&lt;!-- saved from url=(0014)about:internet --></p></li>\n<li><p>Disable this feature.  To do so go to Internet Options->Advanced->Security->Allow Active Content...  Then close IE.  When you restart IE, it will not give you this error.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>If you are to use the</p>\n\n<pre><code>&lt;!-- saved from url=(0014)about:internet --&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;!-- saved from url=(0016)http://localhost --&gt;\n</code></pre>\n\n<p>make sure the HTML file is saved in windows/dos format with \"\\r\\n\" as line breaks after the statement.\nOtherwise I couldn't make it work.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I am using below code for sample menu.</p>\n\n<pre><code>    &lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Tree Demo&lt;/title&gt;\n&lt;script type=\"text/javascript\" src=\"jquery.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"jquery.jstree.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function() {\n/*       $(\"#main\").jstree({\n                \"themes\" : {\n                    \"theme\" : \"default\",\n                    \"dots\" : false,\n                    \"icons\" : false\n                },\n                \"plugins\" : [ \"themes\", \"json_data\", \"ui\"],\n                \"json_data\" : {\n                    \"ajax\" : {\n                        \"url\" : \"jsondata.json\",\n                        \"data\" : function (n) {\n                            return { id : n.attr ? n.attr(\"id\") : 0 };\n                        }\n                    }\n                }\n        });\n\n         $(\"#main\").bind(\"open_node.jstree\", function (e, data) {\n                     // data.inst is the instance which triggered this event\n                     console.log(data);\n                     console.log($.data(data.rslt.obj[0],\"folder_name\"));\n        });\n        $(\"#main\").bind(\"select_node.jstree\", function (e, data) {\n             // data.inst is the instance which triggered this event\n             console.log(data);\n             console.log($.data(data.rslt.obj[0],\"folder_name\"));\n        }); */\n\n         $(\"#main1\").jstree({\n                \"themes\" : {\n                    \"theme\" : \"default\",\n                    \"dots\" : false,\n                    \"icons\" : false\n                },\n                \"plugins\" : [ \"themes\", \"html_data\"]\n        });\n\n    });\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"main1\"&gt;\n        &lt;ul&gt;\n            &lt;li&gt;&lt;a href=\"javascript:void(0)\"&gt;Home Folder&lt;/a&gt;\n                &lt;ul&gt;\n                    &lt;li&gt;&lt;a href=\"javascript:void(0)\"&gt;Sub Folder1&lt;/a&gt;&lt;/li&gt;\n                    &lt;li&gt;&lt;a href=\"javascript:void(0)\"&gt;Sub Folder2&lt;/a&gt;&lt;/li&gt;\n                &lt;/ul&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"javascript:void(0)\"&gt;Shared Folders&lt;/a&gt;\n                &lt;ul&gt;\n                    &lt;li&gt;&lt;a href=\"javascript:void(0)\"&gt;Shared Folder1&lt;/a&gt;&lt;/li&gt;\n                    &lt;li&gt;&lt;a href=\"javascript:void(0)\"&gt;Shared Folder2&lt;/a&gt;&lt;/li&gt;\n                &lt;/ul&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n    &lt;div id=\"main\"&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>when i run the above code in IE browsers it shows top of the page(below the URL bar) like</p>\n\n<p>\" To help protect your security , internet explorer has restricted this webpage from running scripts or Activex controls that could access your computer. click for options.. \"</p>\n\n<p>when i rightclick and click allowed blocked content, it runs.but i want without this popup message i need to run the code...how can i automatically run this one?...</p>\n\n<p>Thanks </p>\n\n<p>Ravi</p>\n",
            "last_activity_date": 1359559554,
            "question_id": 7038724,
            "score": 21,
            "tags": [
                "javascript",
                "html",
                "internet-explorer"
            ],
            "title": "How to automaticaly allow blocked content in IE?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try this instead:</p>\n\n<pre><code>$.fn.tagName = function() {\n    return this.get(0).tagName;\n}\nalert($('#testElement').tagName());\n</code></pre>\n\n<p>To explain a little bit more of why your original example didn't work, the <code>each()</code> method  will always return the original jQuery object (unless the jQuery object itself was modified). To see what is happening in each with your code, here is some pseudocode that shows how the <code>each()</code> method works:</p>\n\n<pre><code>function each(action) {\n    for(var e in jQueryElements) {\n        action();\n    }\n    return jQueryObject;\n}\n</code></pre>\n\n<p>This is not how <code>each()</code> really gets implemented (by a long shot probably), but it is to show that the return value of your <code>action()</code> function is ignored.</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Why create a plugin at all? Seems a bit unnecessary...</p>\n\n<pre><code>alert( $('div')[0].tagName );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You may wish to add a toLowerCase() to make it more consistent (and XHTML compliant).</p>\n\n<pre><code>$.fn.tagName = function() {\n    return this.get(0).tagName.toLowerCase();\n}\n\nalert($('#testElement').tagName());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>This one will return the lower case tagname of the matched element.</p>\n\n<p>for example, </p>\n\n<pre><code>jQuery(\"#test_div\").tagName();\n</code></pre>\n\n<p>would return <code>div</code> (assuming that element was a div).</p>\n\n<p>If you pass an element collection, it returns an array of all the tagnames, where each array entry corresponds to the matched element.</p>\n\n<p>for example if we run</p>\n\n<pre><code>jQuery(\".classname\").tagName();\n</code></pre>\n\n<p>on the following (X)HTML:</p>\n\n<pre><code>&lt;div&gt;\n&lt;p class=\"classname\"&gt;test text&lt;/p&gt;\n&lt;div class=\"anotherClass\"&gt;\n\t&lt;ul&gt;\n\t\t&lt;li class=\"classname\"&gt;&lt;a href=\"test\"&gt;Test link&lt;/a&gt;&lt;/li&gt;\n\t&lt;/ul&gt;\n\t&lt;p class=\"classname\"&gt;Some more text&lt;/p&gt;\n&lt;/div&gt;\n&lt;div&gt;\n</code></pre>\n\n<p>would an array of tagnames:</p>\n\n<pre><code>[\"p\", \"li\", \"p\"]\n</code></pre>\n\n<p>This is the function - it's basically the same as above but it supports multiple elements, which may or may not be useful to your project.</p>\n\n<pre><code>jQuery.fn.tagName = function(){\n\tif(1 === this.length){\n\t\treturn this[0].tagName.toLowerCase();\n\t} else{\n\t\tvar tagNames = [];\n\t\tthis.each(function(i, el){\n\t\t\ttagNames[i] = el.tagName.toLowerCase();\n\t\t});\n\t\treturn tagNames;\n\t}\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am looking to extend jQuery so I can easily retrieve the tagName of the first element in a jQuery object. This is what I have come up with, but it doesn't seem to work:</p>\n\n<pre><code>$.fn.tagName = function() {\n    return this.each(function() {\n        return this.tagName;\n    });\n}\nalert($('#testElement').tagName());\n</code></pre>\n\n<p>Any ideas what's wrong?</p>\n\n<p>BTW, I'm looking to use this more for testing than in production.</p>\n",
            "last_activity_date": 1259088143,
            "question_id": 411688,
            "score": 19,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to extend jQuery to make it easier to retrieve the tagName"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><strong>This is just how jQuery works.</strong></p>\n\n<p><code>$(\"#something\")</code></p>\n\n<p>Object 0=div#something length=1 jquery=1.2.6</p>\n\n<p><code>$(\"#nothing\")</code></p>\n\n<p>Object length=0 jquery=1.2.6</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can come close to doing what you want by accessing the length the element, and combine with the ternary operator:</p>\n\n<pre><code>console.log(!!$('#notfound').length);  // false\nconsole.log(!!$('#exists').length);    // true\nvar element= $('#notfound').length ? $('#notfound') : $('#exists');\nconsole.log(element.attr('id'));  // outputs 'exists'\n</code></pre>\n\n<p><strong>As to the heart of the question:</strong></p>\n\n<blockquote>\n  <p>Wouldnt it be more logical if the ID\n  selector returned null if not found?</p>\n</blockquote>\n\n<p>No, not for the JQuery way of doing things - namely, to support chaining of JQuery statements:</p>\n\n<pre><code>    $('#notfound').hide(\"slow\", function(){\n      jQuery(this)\n        .addClass(\"done\")\n        .find(\"span\")\n          .addClass(\"done\")\n        .end()\n        .show(\"slow\", function(){\n          jQuery(this).removeClass(\"done\");\n        });\n    });\n</code></pre>\n\n<p>Even though <code>notfound</code> doesn't exist this code will run without stopping script execution. If the initial selector returns null, you'll have to add in an if/then block to check for the null. If the addClass, find, end and show methods return null, you'll have to add an if/then block to check the return status of each. Chaining is an excellent way to handle program flow in a dynamically typed language like Javascript.  </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You could check the <code>.length</code> property of the jQuery object. Like this:</p>\n\n<pre><code>if($(\"#two\").length &gt; 0) { // exists...\n\n} else { // doesn't exist\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>This behaviour was chosen because otherwise jQuery would regularly throw NullReference Exceptions</strong></p>\n\n<p>Almost all jQuery functions return a jQuery object as a wrapper around the Dom elements in question, so you can use dot notation.</p>\n\n<pre><code>$(\"#balloon\").css({\"color\":\"red\"});\n</code></pre>\n\n<p>Now imagine <code>$(\"#balloon\")</code> returned <em>null</em>. That means that <code>$(\"#balloon\").css({\"color\":\"red\"});</code>\nwould throw an error, rather than silently doing nothing as you would expect.</p>\n\n<p>Hence, you just gotta use <code>.length</code> or <code>.size()</code>.</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>In short, you could think of the jQuery selector return value as a group containing 0..n elements, but never being null.</p>\n\n<p>What you're probably really interested in is <code>$(\"#two\")[0]</code>, which will give you the first actual element returned by the selector.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It returns true because to Javascript it is a defined object therefore not false, and jQuery will always give you a new object regardless of whether the element is found or not - however the array length will be zero, e.g.</p>\n\n<p><code>$(\"span\").length</code></p>\n\n<p>If you have no <code>&lt;span&gt;</code>, this will be zero, but it could be 1 or more.</p>\n\n<p>You can write your own plugin to avoid repeated if statements as a Jquery plugin, like I did for <a href=\"http://code.google.com/p/jquery-form-extensions\" rel=\"nofollow\">this one</a>. It's fairly easy to do:</p>\n\n<pre><code>(function($)\n{\n        /* Checks if a jQuery object exists in the DOM, by checking the length of its child elements. */\n        $.fn.elementExists = function()\n        {\n                ///     &lt;summary&gt;\n                ///     Checks if a jQuery object exists in the DOM, by checking the length of its child elements.\n                ///     &lt;/summary&gt;\n                ///     &lt;returns type=\"Boolean\" /&gt;\n                return jQuery(this).length &gt; 0;\n        };\n})(jQuery);\n</code></pre>\n\n<p><strong>Usage:</strong></p>\n\n<pre><code>if ($(\"#someid\").elementExists())\n{\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I always wondered why jQuery returns true if I'm trying to find elements by id selector that doesnt exist in the DOM structure.</p>\n\n<p>Like this:</p>\n\n<pre><code>&lt;div id=\"one\"&gt;one&lt;/div&gt;\n\n&lt;script&gt;\n    console.log( !!$('#one') ) // prints true\n    console.log( !!$('#two') ) // is also true! (empty jQuery object)\n    console.log( !!document.getElementById('two') ) // prints false\n&lt;/script&gt;\n</code></pre>\n\n<p>I know I can use <code>!!$('#two').length</code> since length === 0 if the object is empty, but it seems logical to me that a selector would return the element if found, otherwise <code>null</code> (like the native <code>document.getElementById</code> does).</p>\n\n<p>F.ex, this logic can't be done in jQuery:</p>\n\n<pre><code>var div = $('#two') || $('&lt;div id=\"two\"&gt;&lt;/div&gt;');\n</code></pre>\n\n<p>Wouldnt it be more logical if the ID selector returned null if not found?</p>\n\n<p>anyone?</p>\n",
            "last_activity_date": 1412610013,
            "question_id": 2076988,
            "score": 18,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Why does $(&#39;#id&#39;) return true if id doesn&#39;t exist?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Closure?</p>\n\n<pre><code>var metric = new function() {\n    var _value = \"count\";\n\n    this.setValue = function(s) { _value = s; };\n    this.toString = function() { return _value; };\n};\n\n// snip ...\na.ShowMe();\n\nmetric.setValue(\"avg\");\nb.ShowMe();\nc.ShowMe();\n</code></pre>\n\n<p>or making it a little more generic and performant:</p>\n\n<pre><code>function RefString(s) {\n    this.value = s;\n}\n\nRefString.prototype.toString = function() { return this.value; }\nRefString.prototype.charAt = String.prototype.charAt;\n\nvar metric = new RefString(\"count\");\n\n// snip ...\n\na.ShowMe();\n\nmetric.value = \"avg\";\nb.ShowMe();\nc.ShowMe();\n</code></pre>\n\n<p>If you don't close on the desired string variable, then I suppose the only other way would be to modify the ShowMe function, as in @John Millikin's answer or re-architect the codebase.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can wrap the string in an object  and modify the field the string is stored in.\nThis is similar to what you are doing in the last example only without needing to change the functions.</p>\n\n<pre><code>var metric = { str : \"count\" } \nmetric.str = \"avg\";\n</code></pre>\n\n<p>Now metric.str will contain \"avg\"</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>In JavaScript, strings are immutable. You can't change the string itself one the <code>Report</code> instances have a handle to it.</p>\n\n<p>your solution works, but this may be simpler:</p>\n\n<pre><code>function Report(a, b) {\n  this.showMe = function() { alert(a.str + \" of \" + b); }\n}\n\nvar metric = {};\nmetric.str = \"count\";\n\na.Showme();\nmetric.str = \"avg\";\nb.ShowMe();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you pass the variable as an object it will work, since objects are passed by reference in Javascript. </p>\n\n<p><a href=\"http://sirdarckcat.blogspot.com/2007/07/passing-reference-to-javascript.html\" rel=\"nofollow\">http://sirdarckcat.blogspot.com/2007/07/passing-reference-to-javascript.html</a></p>\n\n<pre><code>function modifyVar(obj,newVal){\nobj.value=newVal;\n}\nvar m={value: 1};\nalert(x);\nmodifyVar(\"x\",321);\nalert(x);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Strings in Javascript are already passed \"by reference\" -- calling a procedure with a string does not involve copying the string's contents. There are two issues at hand:</p>\n\n<ul>\n<li>Strings are immutable. In contrast to C++ strings, once a JavaScript string has been created it cannot be modified.</li>\n<li>In JavaScript, variables are not statically assigned slots like in C++. In your code, <code>metric</code> is a label which applies to two entirely separate string variables.</li>\n</ul>\n\n<p>Here's one way to achieve what you want, using closures to implement dynamic scoping of <code>metric</code>:</p>\n\n<pre><code>function Report(a, b) {\n    this.ShowMe = function() { alert(a() + \" of \" + b); }\n}\n\nvar metric = \"count\";\nvar metric_fnc = function() { return metric; }\nvar a = new Report(metric_fnc, \"a\"); \nvar b = new Report(metric_fnc, \"b\"); \na.ShowMe();  // outputs:  \"count of a\";\nmetric = \"avg\";\nb.ShowMe();  // outputs:  \"avg of b\";\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 28
                }
            ],
            "body": "<p>I want to create a string and pass it by reference such that I can change a single variable and have that propagate to any other object that references it.</p>\n\n<p>Take this example:</p>\n\n<pre><code>function Report(a, b) {\n    this.ShowMe = function() { alert(a + \" of \" + b); }\n}\n\nvar metric = new String(\"count\");\nvar a = new Report(metric, \"a\"); \nvar b = new Report(metric, \"b\"); \nvar c = new Report(metric, \"c\"); \na.ShowMe();  // outputs:  \"count of a\";\nb.ShowMe();  // outputs:  \"count of b\";\nc.ShowMe();  // outputs:  \"count of c\";\n</code></pre>\n\n<p>I want to be able to have this happen:</p>\n\n<pre><code>var metric = new String(\"count\");\nvar a = new Report(metric, \"a\"); \nvar b = new Report(metric, \"b\"); \nvar c = new Report(metric, \"c\"); \na.ShowMe();  // outputs:  \"count of a\";\nmetric = new String(\"avg\");\nb.ShowMe();  // outputs:  \"avg of b\";\nc.ShowMe();  // outputs:  \"avg of c\";\n</code></pre>\n\n<p>Why doesn't this work?</p>\n\n<p>The <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Global%5FObjects/String\">MDC reference on strings</a> says metric is an object.</p>\n\n<p>I've tried this, which is not what I want, but is very close:</p>\n\n<pre><code>var metric = {toString:function(){ return \"count\";}};\nvar a = new Report(metric, \"a\"); \nvar b = new Report(metric, \"b\"); \nvar c = new Report(metric, \"c\"); \na.ShowMe();  // outputs:  \"count of a\";\nmetric.toString = function(){ return \"avg\";}; // notice I had to change the function\nb.ShowMe();  // outputs:  \"avg of b\";\nc.ShowMe();  // outputs:  \"avg of c\";\n\nalert(String(metric).charAt(1)); // notice I had to use the String constructor\n// I want to be able to call this: \n// metric.charAt(1)\n</code></pre>\n\n<p>The important points here:</p>\n\n<ol>\n<li>I want to be able to use <strong>metric</strong> like it's a normal string object</li>\n<li>I want each report to reference the same object.</li>\n</ol>\n",
            "last_activity_date": 1250804384,
            "question_id": 1308624,
            "score": 17,
            "tags": [
                "javascript",
                "string",
                "pass-by-reference"
            ],
            "title": "Pass a string by reference in Javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"http://api.jquery.com/find/\" rel=\"nofollow\"><code>.find</code></a> in the third example, searches children in each matched element. Inside your <code>div</code>s there are no <code>div</code> children (they don't have any children), so <code>.find(anything)</code> will not return any element.</p>\n\n<p><a href=\"http://api.jquery.com/each/\" rel=\"nofollow\"><code>.each</code></a>, on the other hand, iterates over the current elements in the set, which does include the <code>div</code>s (there are two matched elements - the <code>div</code>s).</p>\n\n<p>As for <code>&lt;html&gt;</code> in your first example, I'm not sure - perhaps you're not allowed to create a second <code>&lt;html&gt;</code> element after the page has loaded. <code>$('&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"bar\"&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;');</code> only returns the <code>div</code> so <code>.find</code> does not return anything.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Let's split this question into two parts.</p>\n\n<p>First:</p>\n\n<pre><code>var html= '&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"bar\"&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;';\nconsole.log($(html).find('div'));\n</code></pre>\n\n<p>and </p>\n\n<pre><code>var html= '&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;div&gt;&lt;div class=\"bar\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;';\nconsole.log($(html).find('div'));\n</code></pre>\n\n<p>do not work because according to the <a href=\"http://api.jquery.com/jQuery/\"><code>jQuery()</code> docs</a>:</p>\n\n<blockquote>\n  <p>When passing in complex HTML, some browsers may not generate a DOM\n  that exactly replicates the HTML source provided. As mentioned, we use\n  the browser's .innerHTML property to parse the passed HTML and insert\n  it into the current document. During this process, some browsers\n  filter out certain elements such as <code>&lt;html&gt;</code>, <code>&lt;title&gt;</code>, or <code>&lt;head&gt;</code>\n  elements. As a result, the elements inserted may not be representative\n  of the original string passed.</p>\n</blockquote>\n\n<ul>\n<li>In the first code block, your <code>&lt;html&gt;</code>, <code>&lt;head&gt;</code>, and <code>&lt;body&gt;</code> tags are getting stripped out, and <code>&lt;div class=\"bar\"&gt;&lt;/div&gt;</code> remains. <a href=\"http://api.jquery.com/find/\"><code>find</code></a> only searches inside the resulting <code>&lt;div&gt;</code>, and cannot find anything.</li>\n<li>In the second code block, your <code>&lt;html&gt;</code>, <code>&lt;head&gt;</code>, and <code>&lt;body&gt;</code> tags are getting stripped out, and <code>&lt;div&gt;&lt;div class=\"bar\"&gt;&lt;/div&gt;&lt;/div&gt;</code> remains. <code>find</code> searches inside the result, and finds a single <code>&lt;div&gt;</code>.</li>\n</ul>\n\n<hr>\n\n<p>As for your second part:</p>\n\n<pre><code>var code = $(\"&lt;div id='foo'&gt;1&lt;/div&gt;&lt;div id='bar'&gt;2&lt;/div&gt;\");\nconsole.log(code.find('div'));\n</code></pre>\n\n<p>You first give jQuery a string, which it takes and makes into a jQuery object with the two <code>&lt;div&gt;</code>'s. Then, <code>find</code> searches in each <code>&lt;div&gt;</code>, finds nothing and returns no results.</p>\n\n<p>Next, in</p>\n\n<pre><code>var code = $(\"&lt;div id='foo'&gt;1&lt;/div&gt;&lt;div id='bar'&gt;2&lt;/div&gt;\");\ncode.each(function() {\n    alert( this.nodeName );\n})\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/each/\"><code>each</code></a> loops through the jQuery object, taking each of the two created <code>&lt;div&gt;</code>'s, and alerts their node name. Therefore, you get two alerts.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>the answer is very simple. when you make object using jQuery(html) then it make an hierarchy of nodes, and when you find some node like 'div', it searches in whole hierachy except root elements, and in your first example, you dont have child 'div' nodes. And in your second example you have only one child 'div' node.</p>\n\n<p>so if you keep one extra root node in whole hierarchy, then you can find all your nodes easily. like</p>\n\n<pre><code>var html= '&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"bar\"&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;';\nconsole.log($('&lt;div&gt;&lt;/div&gt;').append(html).find('div'));\n\nvar html= '&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;div&gt;&lt;div class=\"bar\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;';\nconsole.log($('&lt;div&gt;&lt;/div&gt;').append(html).find('div'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>If I run this code -</p>\n\n<pre><code>var html= '&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"bar\"&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;';\nconsole.log($(html).find('div'));\n</code></pre>\n\n<p>I get no results returned, if I run this code -</p>\n\n<pre><code>var html= '&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;div&gt;&lt;div class=\"bar\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;';\nconsole.log($(html).find('div'));\n</code></pre>\n\n<p>Then I get a single result returned - the inner div (<code>&lt;div class=\"bar\"&gt;&lt;/div&gt;</code>). I would have expected the first code snippet to return a single result and the second snippet two results.</p>\n\n<p>Similarly, this code returns no results -</p>\n\n<pre><code>var code = $(\"&lt;div id='foo'&gt;1&lt;/div&gt;&lt;div id='bar'&gt;2&lt;/div&gt;\");\nconsole.log(code.find('div'));\n</code></pre>\n\n<p>but this code alerts 'div' twice -</p>\n\n<pre><code>var code = $(\"&lt;div id='foo'&gt;1&lt;/div&gt;&lt;div id='bar'&gt;2&lt;/div&gt;\");\ncode.each(function() {\n    alert( this.nodeName );\n})\n</code></pre>\n\n<p>Given the result of the second snippet, I would have expected the first code snippet to return two results. Could someone please explain why I'm getting the results I'm getting?</p>\n\n<p><a href=\"http://jsfiddle.net/ipr101/GTCuv/\">http://jsfiddle.net/ipr101/GTCuv/</a></p>\n",
            "last_activity_date": 1314100861,
            "question_id": 7159426,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors"
            ],
            "title": "Using jQuery to search a string of HTML"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en-US/docs/DOM/window.alert\">You can't</a>, this is determined by the browser, for the user's safety and security.  For example you can't make it say \"Virus detected\" with a message of \"Would you like to quarantine it now?\"...at least not as an <code>alert()</code>.</p>\n\n<p><a href=\"https://www.google.com/search?q=javascript+modal+dialog\">There are plenty of JavaScript Modal Dialogs out there though</a>, that are <em>far</em> more customizable than <code>alert()</code>.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>Simple: you can't.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can't. The alert is a simple popup where you only can affect the content text.</p>\n\n<p>If you want to change anything else, you have to use a different way of creating a popup.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>you cant do this. Use a custom popup. Something like with the help of jQuery UI or jQuery BOXY.</p>\n\n<p>for jQuery UI <a href=\"http://jqueryui.com/demos/dialog/\" rel=\"nofollow\">http://jqueryui.com/demos/dialog/</a></p>\n\n<p>for jQuery BOXY <a href=\"http://onehackoranother.com/projects/jquery/boxy/\" rel=\"nofollow\">http://onehackoranother.com/projects/jquery/boxy/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As others have said, you can't do that either using <code>alert()</code>or <code>confirm()</code>.</p>\n\n<p>You can, however, create an external HTML document containing your error message and an <code>OK</code> button, set its <code>&lt;title&gt;</code> element to whatever you want, then display it in a modal dialog box using <a href=\"http://www.roseindia.net/javascript/javascript-showmodaldialog.shtml\" rel=\"nofollow\">showModalDialog()</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It's not possible, sorry.\nIf really needed, you could use a jQuery plugin to have a custom alert.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can i change the title of javascript alert popup ?</p>\n",
            "last_activity_date": 1366863079,
            "question_id": 4172022,
            "score": 16,
            "tags": [
                "javascript"
            ],
            "title": "Change Title of Javascript Alert"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Use a Javascript object literal:</p>\n\n<pre><code>var obj = {\n    a: 1,\n    b: 2,\n    c: 'hello'\n};\n</code></pre>\n\n<p>You can then traverse it like this:</p>\n\n<pre><code>for (var name in obj){\n    alert(name);\n    alert(obj[name]);\n}\n</code></pre>\n\n<p>And access properties on the object like this:</p>\n\n<pre><code>alert(obj.a);\nalert(obj.c);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>What you could do is something like:</p>\n\n<pre><code>var hash = {};\nhash.a = 1;\nhash.b = 2;\nhash.c = 'hello';\nfor(key in hash) {\n    // key would be 'a' and hash[key] would be 1, and so on.\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Goint off of Triptych's stuff (Which Thanks)...</p>\n\n<pre><code>(function(){\n    (createSingleton = function(name){  // global\n        this[name] = (function(params){\n            for(var i in params){\n                this[i] = params[i];\n                console.log('params[i]: ' + i + ' = ' + params[i]);\n            }\n            return this;\n        })({key: 'val', name: 'param'});\n    })('singleton');\n    console.log(singleton.key);\n})();\n</code></pre>\n\n<p>Just thought this was a nice little autonomous pattern...hope it helps!  Thanks Triptych!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to convert variable names to strings in javascript? To be more specific:</p>\n\n<pre><code>var a = 1, b = 2, c = 'hello';\nvar array = [a, b, c];\n</code></pre>\n\n<p>Now at some point as I go through the array, I need to get variable names (instead of their values) as strings - that would be 'a' or 'b' or 'c'. And I really need it to be a string so it is writeable. How can I do that?</p>\n",
            "last_activity_date": 1383692057,
            "question_id": 417645,
            "score": 16,
            "tags": [
                "javascript"
            ],
            "title": "How to convert variable name to string in JavaScript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Not pretty, but check the first two char codes. If all equal parse and compare the numbers:</p>\n\n<pre><code>var arr = [\"IL0 Foo\", \"IL10 Baz\", \"IL3 Bob says hello\", \"PI0 Bar\"];\narr.sort(function (a1, b1) {\n    var a = parseInt(a1.match(/\\d+/g)[0], 10),\n        b = parseInt(b1.match(/\\d+/g)[0], 10),\n        letterA = a1.charCodeAt(0),\n        letterB = b1.charCodeAt(0),\n        letterA1 = a1.charCodeAt(1),\n        letterB1 = b1.charCodeAt(1);\n    if (letterA &gt; letterB) {\n        return 1;\n    } else if (letterB &gt; letterA) {\n        return -1;\n    } else {\n        if (letterA1 &gt; letterB1) {\n            return 1;\n        } else if (letterB1 &gt; letterA1) {\n            return -1;\n        }\n        if (a &lt; b) return -1;\n        if (a &gt; b) return 1;\n        return 0;\n    }\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/JmwZG/\" rel=\"nofollow\"><strong>Example</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var re = /([a-z]+)(\\d+)(.+)/i;\nvar arr = [\"IL0 Foo\", \"PI0 Bar\", \"IL10 Baz\", \"IL3 Bob says hello\"];\nvar order = arr.sort( function(a,b){\n    var ma = a.match(re),\n        mb = b.match(re),\n        a_str = ma[1],\n        b_str = mb[1],\n        a_num = parseInt(ma[2],10),\n        b_num = parseInt(mb[2],10),\n        a_rem = ma[3],\n        b_rem = mb[3];\n    return a_str &gt; b_str ? 1 : a_str &lt; b_str ? -1 : a_num &gt; b_num ? 1 : a_num &lt; b_num ? -1 : a_rem &gt; b_rem;  \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You could do a regex like this to get non-numeric and numeric parts of the string:</p>\n\n<pre><code>var s = \"foo124bar23\";\ns.match(/[^\\d]+|\\d+/g)\n</code></pre>\n\n<p>returns: <code>[\"foo\", \"124\" , \"bar\" , \"23\"]</code></p>\n\n<p>Then in your compare function you can iterate through the parts of the two strings comparing them part-by-part.  The first non-matching part determines the result of the overall comparison.  For each part, check if the part starts with a digit and if so parse it as a number before doing the comparison.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is called \"natural sort\" and can be implemented in JS like this:</p>\n\n<pre><code>function strcmp(a, b) {\n    return a &gt; b ? 1 : a &lt; b ? -1 : 0;\n}\n\nfunction natcmp(a, b) {\n    var x = [], y = [];\n\n    a.replace(/(\\d+)|(\\D+)/g, function($0, $1, $2) { x.push([$1 || 0, $2]) })\n    b.replace(/(\\d+)|(\\D+)/g, function($0, $1, $2) { y.push([$1 || 0, $2]) })\n\n    while(x.length &amp;&amp; y.length) {\n        var xx = x.shift();\n        var yy = y.shift();\n        var nn = (xx[0] - yy[0]) || strcmp(xx[1], yy[1]);\n        if(nn) return nn;\n    }\n\n    if(x.length) return -1;\n    if(y.length) return +1;\n\n    return 0;\n}\n\nary = [\"IL0 Foo\", \"PI0 Bar\", \"IL10 Baz\", \"IL3 Bob says hello\"]\nary.sort(natcmp)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Add one more alternative (why not):</p>\n\n<pre><code>var ary = [\"IL0 Foo\", \"PI0 Bar\", \"IL10 Hello\", \"IL10 Baz\", \"IL3 Bob says hello\"];\n\n// break out the three components in to an array\n// \"IL10 Bar\" =&gt; ['IL', 10, 'Bar']\nfunction getParts(i){\n    i = i || '';\n    var parts = i.match(/^([a-z]+)([0-9]+)(\\s.*)$/i);\n    if (parts){\n        return [\n            parts[1],\n            parseInt(parts[2], 10),\n            parts[3]\n        ];\n    }\n    return []; // erroneous\n}\nary.sort(function(a,b){\n    // grab the parts\n    var _a = getParts(a),\n        _b = getParts(b);\n\n    // trouble parsing (both fail = no shift, otherwise\n    // move the troubles element to end of the array)\n    if(_a.length == 0 &amp;&amp; _b.length == 0) return 0;\n    if(_a.length == 0) return -1;\n    if(_b.length == 0) return 1;\n\n    // Compare letter portion\n    if (_a[0] &lt; _b[0]) return -1;\n    if (_a[0] &gt; _b[0]) return 1;\n    // letters are equal, continue...\n\n    // compare number portion\n    if (_a[1] &lt; _b[1]) return -1;\n    if (_a[1] &gt; _b[1]) return 1;\n    // numbers are equal, continue...\n\n    // compare remaining string\n    if (_a[2] &lt; _b[2]) return -1;\n    if (_a[2] &gt; _b[2]) return 1;\n    // strings are equal, continue...\n\n    // exact match\n    return 0;\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/eHNH7/\" rel=\"nofollow\">jsfiddle example</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an array like;</p>\n\n<pre><code>[\"IL0 Foo\", \"PI0 Bar\", \"IL10 Baz\", \"IL3 Bob says hello\"]\n</code></pre>\n\n<p>And need to sort it so it appears like;</p>\n\n<pre><code>[\"IL0 Foo\", \"IL3 Bob says hello\", \"IL10 Baz\", \"PI0 Bar\"]\n</code></pre>\n\n<p>I have tried a sort function;</p>\n\n<pre><code>function compare(a,b) {\n  if (a &lt; b)\n     return -1;\n  if (a &gt; b)\n    return 1;\n  return 0;\n}\n</code></pre>\n\n<p>but this gives the order</p>\n\n<pre><code>[\"IL0 Foo\", \"IL10 Baz\", \"IL3 Bob says hello\", \"PI0 Bar\"]\n</code></pre>\n\n<p>I have tried to think of a regex that will work but can't get my head around it.<br />\nIf it helps the format will always be 2 letters, x amount of numbers, then any number of characters.</p>\n",
            "last_activity_date": 1397049542,
            "question_id": 15478954,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "sorting"
            ],
            "title": "Sort Array Elements (string with numbers), natural sort"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>This is still some kind of hack, but a look at the specs suggests this:</p>\n\n<pre><code>Math.atan2(0, -0) === Math.PI // true\nMath.atan2(0,  0) === 0       // true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This returns +0:</p>\n\n<pre><code>-0 + 0\n</code></pre>\n\n<p>This doesn't help to differenciate -0 and +0, but this helps in ensuring that some value is not -0.</p>\n\n<pre><code>1 / -0       =&gt; -Infinity  \n1 / (-0 + 0) =&gt; Infinity\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>According to <a href=\"http://www.amazon.com/s/ref=nb_sb_ss_i_5_14?url=search-alias%3Dstripbooks&amp;field-keywords=javascript+the+definitive+guide+6th+edition&amp;sprefix=javascript+the%2Cstripbooks%2C147\" rel=\"nofollow\">David Flanagan's book, p. 34</a>, dividing 1 by your zero will produce the corresponding infinity, which can then be used in an equality check:</p>\n\n<pre><code>1 / 0\n&gt; Infinity\n1 / -0\n&gt; -Infinity\n</code></pre>\n\n<p>And here's the behavior of the equality comparisons of infinities:</p>\n\n<pre><code>Infinity === -Infinity\n&gt; false\nInfinity === Infinity\n&gt; true\n-Infinity === Infinity\n&gt; false\n-Infinity === -Infinity\n&gt; true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In ECMAScript 6, there is <code>Object.is</code> which is like <code>===</code> except that it distinguishes positive and negative zeroes, and <code>Object.is(NaN, NaN)</code> evaluates to <code>true</code>. (See <a href=\"http://addyosmani.com/blog/a-few-new-things-coming-to-javascript/\" rel=\"nofollow\">here</a> for a writeup.)</p>\n\n<p>Chrome 24 has native support for <code>Object.is</code> without a flag.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>As people seem stumped as to what the practical need for this would be: here is my use case...</p>\n\n<p>I needed a solution to sort the columns of a table by their index. Click the <code>&lt;th&gt;</code> and invoke the sorter with [ordinal] for ascending and -[ordinal] for descending. The first column would give <code>-0</code> for descending or <code>0</code> for ascending.</p>\n\n<p>So I need to differentiate between <code>+0</code> and <code>-0</code> and ended up here. The solution that worked for me is in the comment by  @\u0160ime Vidas, but is hidden away somewhat.</p>\n\n<pre><code>// This comparison works for all negatives including -0\nif ( 1 / x &gt; 0 ) { }\n\n1 / -0 &gt; 0  // false\n1 / 0 &gt; 0  // true\n1 / -99 &gt; 0 // false\n1 / 99 &gt; 0 // true\n\n// WRONG: this naive comparison might give unexpected results\nif ( x &gt; 0 ) { }\n\n-0 &gt; 0 // true\n// Gotcha\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>It turns out <code>+0 === -0</code> evaluates to <code>true</code> despite <code>+0</code> and <code>-0</code> being <em>different</em> entities. So, how do you differentiate <code>+0</code> from <code>-0</code>?</p>\n\n<p>There is a hack:</p>\n\n<pre><code>if (1 / myZero &gt; 0) {\n   // myZero is +0\n} else {\n   // myZero is -0\n}\n</code></pre>\n\n<p>Can I do better?</p>\n",
            "last_activity_date": 1421586138,
            "question_id": 7223717,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "Differentiating +0 and -0"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The for loop is getting one extra run. Change</p>\n\n<pre><code>for (x=0;x&lt;=InvForm.SelBranch.length;x++)\n</code></pre>\n\n<p>to</p>\n\n<pre><code>for (x=0; x &lt; InvForm.SelBranch.length; x++)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Also, change this:</p>\n\n<pre><code>    SelBranchVal = SelBranchVal + \",\" + InvForm.SelBranch[x].value;\n</code></pre>\n\n<p>to </p>\n\n<pre><code>    SelBranchVal = SelBranchVal + InvForm.SelBranch[x].value+ \",\" ;\n</code></pre>\n\n<p>The reason is that for the first time the variable <code>SelBranchVal</code> will be empty</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here i am posting the answer just for reference which may become useful.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;script&gt;\nfunction show()\n{\n     var InvForm = document.forms.form;\n     var SelBranchVal = \"\";\n     var x = 0;\n     for (x=0;x&lt;InvForm.kb.length;x++)\n         {\n            if(InvForm.kb[x].selected)\n            {\n             //alert(InvForm.kb[x].value);\n             SelBranchVal = InvForm.kb[x].value + \",\" + SelBranchVal ;\n            }\n         }\n         alert(SelBranchVal);\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;form name=\"form\"&gt;\n&lt;select name=\"kb\" id=\"kb\" onclick=\"show();\" multiple&gt;\n&lt;option value=\"India\"&gt;India&lt;/option&gt;\n&lt;option selected=\"selected\" value=\"US\"&gt;US&lt;/option&gt;\n&lt;option value=\"UK\"&gt;UK&lt;/option&gt;\n&lt;option value=\"Japan\"&gt;Japan&lt;/option&gt;\n&lt;/select&gt;\n&lt;!--input type=\"submit\" name=\"cmdShow\" value=\"Customize Fields\"\n onclick=\"show();\" id=\"cmdShow\" /--&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Take a look at <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\" rel=\"nofollow\">HTMLSelectElement.selectedOptions</a>.</p>\n\n<p>HTML</p>\n\n<pre><code>&lt;select name=\"north-america\" multiple&gt;\n  &lt;option valud=\"ca\" selected&gt;Canada&lt;/a&gt;\n  &lt;option value=\"mx\" selected&gt;Mexico&lt;/a&gt;\n  &lt;option value=\"us\"&gt;USA&lt;/a&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>JavaScript</p>\n\n<pre><code>var elem = document.querySelector(\"select\");\n\nconsole.log(elem.selectedOptions);\n//=&gt; HTMLCollection [&lt;option value=\"ca\"&gt;Canada&lt;/option&gt;, &lt;option value=\"mx\"&gt;Mexico&lt;/option&gt;]\n</code></pre>\n\n<p>This would also work on non-<code>multiple</code> <code>&lt;select&gt;</code> elements</p>\n\n<hr>\n\n<p><strong>Warning:</strong> Support for this <code>selectedOptions</code> seems pretty unknown at this point</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>This one is driving me nuts. It\u2019s got to be something simple and stupid that I am overlooking. \nI have a multiple select box in a form. I am just trying to get the values that are selected. In my loop, if I use alert then I have no problem. As soon as try to concatenate the values I get the error \u2018SelBranch[...].selected' is null or not an object</p>\n\n<pre><code>      &lt;form name=\"InventoryList\" method=\"post\" action=\"InventoryList.asp\"&gt;\n          &lt;select name=\"SelBranch\" class=\"bnotes\" size=\"5\" multiple=\"multiple\"&gt;\n          &lt;option value=\"All\"&gt;All&lt;/option&gt;\n          &lt;option value=\"001 Renton\"&gt;001 Renton&lt;/option&gt;\n          &lt;option value=\"002 Spokane\"&gt;002 Spokane&lt;/option&gt;\n          &lt;option value=\"003 Missoula\"&gt;003 Missoula&lt;/option&gt;\n          &lt;option value=\"004 Chehalis\"&gt;004 Chehalis&lt;/option&gt;\n          &lt;option value=\"005 Portland\"&gt;005 Portland&lt;/option&gt;\n          &lt;option value=\"006 Anchorage\"&gt;006 Anchorage&lt;/option&gt;\n          &lt;option value=\"018 PDC\"&gt;018 PDC&lt;/option&gt;\n          &lt;/select&gt;\n\n         &lt;input type=\"button\" name=\"ViewReport\" value=\"View\" class=\"bnotes\" onclick=\"GetInventory();\"&gt;\n\n   &lt;/form&gt;\n\n\n   &lt;script language=\"JavaScript\"&gt;\n       function GetInventory()\n       {\n         var InvForm = document.forms.InventoryList;\n         var SelBranchVal = \"\";\n         var x = 0;\n\n         for (x=0;x&lt;=InvForm.SelBranch.length;x++)\n         {\n            if (InvForm.SelBranch[x].selected)\n            {\n             //alert(InvForm.SelBranch[x].value);\n             SelBranchVal = SelBranchVal + \",\" + InvForm.SelBranch[x].value;\n            }\n         }\n         alert(SelBranchVal);\n       }\n\n\n  &lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1410981932,
            "question_id": 5330030,
            "score": 14,
            "tags": [
                "javascript",
                "drop-down-menu",
                "multiple-select"
            ],
            "title": "Javascript Get Values from Multiple Select Option Box"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>For FF and the like: <code>window.home();</code></p>\n\n<p>For IE: <code>location = \"about:home\";</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Not sure if there is a cross-browser solution.  In IE you can use the HomePage behavior and call <a href=\"http://msdn.microsoft.com/en-us/library/ms531398%28VS.85%29.aspx\" rel=\"nofollow\">navigateHomePage</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>EDIT: simplified answer</p>\n\n<p>Identify browsers and:</p>\n\n<ul>\n<li><p>Call  window.home(); for all browsers</p></li>\n<li><p>Call window.location.href =\n\"about:home\"; for IE</p></li>\n</ul>\n\n<p>To do so you can use <a href=\"http://jquery.thewikies.com/browser/\">http://jquery.thewikies.com/browser/</a> </p>\n\n<blockquote>\n  <p>The jQuery Browser Plugin is an addon\n  for jQuery that makes it easy to\n  uniquely identify your visitors'\n  browsers.</p>\n</blockquote>\n\n<p><hr /></p>\n\n<p>Other solutions:</p>\n\n<pre><code> &lt;script language=\"javascript\"&gt;\n    function gohome(){\n      if (typeof window.home == 'function'){ // The rest of the world\n        window.home();\n      } else if (document.all) { // For IE \n        window.location.href = \"about:home\";\n      } else {\n        document.write(\"&lt;p&gt;Please click on your browser's Home\nbutton.&lt;/p&gt;\");\n      }\n    }\n  &lt;/script&gt;\n</code></pre>\n\n<p>This is <a href=\"http://www.mail-archive.com/jquery-en@googlegroups.com/msg35006.html\">via this website</a>. The poster states that there are issues to target Safari. This can be fixed using <a href=\"http://www.evotech.net/blog/2007/06/targeting-safari-30-with-css/\">this other website</a>.</p>\n\n<p>Using the CSS tricks explained there you can then do:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n   isSafari3 = false;\n   if(window.devicePixelRatio) isSafari3 = true;\n&lt;/script&gt;\n</code></pre>\n\n<p>and use this in the script above to call the correct function:</p>\n\n<pre><code>if (typeof window.home == 'function' || isSafari3)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>Is it possible to get a browser's home page using Javascript?  </p>\n\n<p>I'd like to place a link on a page that goes to the home page set in the browser.</p>\n",
            "last_activity_date": 1251917962,
            "question_id": 1369450,
            "score": 14,
            "tags": [
                "javascript",
                "url",
                "browser"
            ],
            "title": "Sending user to their browser&#39;s Home Page using Javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The plus converts a string to a float. The code you provided is equivalent to the following:</p>\n\n<pre><code>if ( obj.length === Number(obj.length) ) {\n    // ...\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>Just saw this in underscore's source:</p>\n\n<pre><code>if (obj.length === +obj.length) {\n    ...\n}\n</code></pre>\n\n<p>What does the <code>plus</code> do? I never saw this before.</p>\n\n<p>Is it considered a good practice among developers?</p>\n",
            "last_activity_date": 1415113255,
            "question_id": 14470973,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "Single plus operator in javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>That would be the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Arithmetic_Operators#.25_%28Modulus%29\" rel=\"nofollow\">modulo operator</a>.</p>\n\n<p>It returns the remainder of a division operation:</p>\n\n<pre><code>var remainder = 3 % 2; // equals 1\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It's a <strong><a href=\"http://en.wikipedia.org/wiki/Modulo_operation\">modulo operator</a></strong>. See this <strong><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Arithmetic_Operators\">documentation</a></strong> for more information on JavaScript arithmetic operators.</p>\n\n<blockquote>\n  <p><strong>% (Modulus)</strong></p>\n  \n  <p>The modulus operator is used as follows:</p>\n  \n  <p>var1 % var2</p>\n  \n  <p>The modulus operator returns the first operand modulo the second\n  operand, that is, var1 modulo var2, in the preceding statement, where\n  var1 and var2 are variables. The modulo function is the integer\n  remainder of dividing var1 by var2. For example, 12 % 5 returns 2. The\n  result will have the same sign as var1; that is, \u22121 % 2 returns \u22121.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Modulus (%) operator returns the remainder.</p>\n\n<p>If either value is a string, an attempt is made to convert the string to a number.</p>\n\n<p><code>alert(5%3)</code> will alert <code>2</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It returns the remainder of a division operation.   <code>5%2</code> returns <code>1</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It is a <strong>modulo operator</strong>.<br>\nIt calculates the remainder. </p>\n\n<blockquote>\n  <p>If we do 23 % 10,<br>\n  first, we divide 23 by 10 which equals 2.3<br>\n  then take .3 * (the divisor) 10<br>\n  = 3 </p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>% performs as modular operator ,return division reminder.Example:</p>\n\n<pre><code>&lt;script&gt;\nvar x = 5;\nvar y = 2;\nvar z = x % y;\nalert(z);\n&lt;/script&gt;\n</code></pre>\n\n<p>This will alert 1.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What does the % do in javascript?</p>\n\n<p>A definition of what it is and what it does would be much appreciated. </p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1422811289,
            "question_id": 8900652,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "What does % do in javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Asp.net is pretty good at automatically converting .net objects to json. Your List object if returned in your webmethod should return a json/javascript array. What I mean by this is that you shouldn't change the return type to string (because that's what you think the client is expecting) when returning data from a method. If you return a .net array from a webmethod a javaScript array will be returned to the client. It doesn't actually work too well for more complicated objects, but for simple array data its fine. </p>\n\n<p>Of course, it's then up to you to do what you need to do on the client side.</p>\n\n<p>I would be thinking something like this:</p>\n\n<pre><code>[WebMethod]\npublic static List GetProducts()\n{\n   var products  = context.GetProducts().ToList();   \n   return products;\n}\n</code></pre>\n\n<p>There shouldn't really be any need to initialise any custom converters unless your data is more complicated than simple row/col data</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You're not far; you need to do something like this:   </p>\n\n<pre><code>[WebMethod]\npublic static string GetProducts()\n{\n  // instantiate a serializer\n  JavaScriptSerializer TheSerializer = new JavaScriptSerializer();\n\n  //optional: you can create your own custom converter\n  TheSerializer.RegisterConverters(new JavaScriptConverter[] {new MyCustomJson()});\n\n  var products = context.GetProducts().ToList();   \n\n  var TheJson = TheSerializer.Serialize(products);\n\n  return TheJson;\n}\n</code></pre>\n\n<p>You can reduce this code further but I left it like that for clarity. In fact, you could even write this:</p>\n\n<pre><code>return context.GetProducts().ToList();\n</code></pre>\n\n<p>and this would return a json string. I prefer to be more explicit because I use custom converters. There's also Json.net but the framework's <code>JavaScriptSerializer</code> works just fine out of the box.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Try to use this , it works perfectly for me   </p>\n\n<pre><code>  // \n\n   varb = new List&lt;object&gt;();\n\n // Example \n\n   varb.Add(new[] { float.Parse(GridView1.Rows[1].Cells[2].Text )});\n\n // JSON  + Serializ\n\npublic string Json()\n        {  \n            return (new JavaScriptSerializer()).Serialize(varb);\n        }\n\n\n//  Jquery SIDE \n\n  var datasets = {\n            \"Products\": {\n                label: \"Products\",\n                data: &lt;%= getJson() %&gt; \n            }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                }
            ],
            "body": "<p>I cannot get how I can return JSON data with my code.</p>\n\n<p><strong>JS</strong></p>\n\n<pre><code>$(function () {\n$.ajax({\n        type: \"POST\",\n        url: \"Default.aspx/GetProducts\",\n        data: \"{}\",\n        contentType: \"application/json; charset=utf-8\",\n        dataType: \"json\",\n        success: function (msg) {\n            // How to return data here like a table???  \n            $(\"#Second\").text(msg.d);\n            //alert(msg.d);\n        }\n    }); \n});\n</code></pre>\n\n<p><strong>C# of Default.aspx.cs</strong></p>\n\n<pre><code>[WebMethod]\npublic static string GetProducts()\n{\n   var products  = context.GetProducts().ToList();   \n   return What do I have to return ????\n}\n</code></pre>\n\n<p>Thanks in advance!</p>\n",
            "last_activity_date": 1376688022,
            "question_id": 18244696,
            "score": 12,
            "tags": [
                "c#",
                "javascript",
                "jquery",
                "asp.net",
                "ajax"
            ],
            "title": "How to return JSON with ASP.NET &amp; jQuery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Yes.  In general any literal string, identifier, or other constant string in JS source is interned.  However implementation details (exactly what is interned for instance) varies, as well as when the interning occurs.</p>\n\n<p>Note that a string value is not the same as a String Object though, String Objects are not interned because that would be fundamentally incorrect behaviour.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p><a href=\"http://jsperf.com/strinterning\" rel=\"nofollow\">http://jsperf.com/strinterning</a></p>\n\n<p>Yes in Chrome, no in Aurora 15 and FF 13!\nComparing two strings is 85% slower than comparing two pointers in Firefox.\nHowever it's the same speed in Chrome, which is an indication that it is comparing two pointers.</p>\n\n<p>Maybe the JS engine team at Mozilla should check their code...</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Do common JavaScript engines, such as V8 and WebKit's JavaScriptCore, use <a href=\"http://en.wikipedia.org/wiki/String_interning\">string interning</a> for JavaScript strings? Or do they actually keep multiple instances of identical strings in memory?</p>\n",
            "last_activity_date": 1341487976,
            "question_id": 5276915,
            "score": 12,
            "tags": [
                "javascript",
                "programming-languages",
                "webkit",
                "v8",
                "string-interning"
            ],
            "title": "Do common JavaScript implementations use string interning?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You are trying to read the value of your checkbox before it is loaded.  The script runs before the checkbox exists.  You need to call your script when the page loads:</p>\n\n<p><code>&lt;body onload=\"dosomething()\"&gt;</code></p>\n\n<p>Example:</p>\n\n<p><a href=\"http://jsfiddle.net/jtbowden/6dx6A/\" rel=\"nofollow\">http://jsfiddle.net/jtbowden/6dx6A/</a></p>\n\n<p>You are also missing a semi-colon after your first assignment.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Place the <code>var lfckv</code> inside the function. When that line is executed, the body isn't parsed yet and the element <code>\"lifecheck\"</code> doesn't exist. This works perfectly fine:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;script language=\"javascript\" type=\"text/javascript\"&gt;\n            function exefunction(){\n                var lfckv = document.getElementById(\"lifecheck\").checked;\n                alert(lfckv);\n            }\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;label&gt;&lt;input id=\"lifecheck\" type=\"checkbox\" &gt;Lives&lt;/label&gt;\n        &lt;button onclick=\"exefunction()\"&gt;Check value&lt;/button&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>The line where you define lfckv is run whenever the browser finds it. When you put it into the head of your document, the browser tries to find lifecheck id before the lifecheck element is created. You must add your script below the lifecheck input in order for your code to work.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>try learning <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a> it's a great place to start with javascript and it really simplifies your code and help separate your js from your html. include the js file from google's CDN (https://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js)</p>\n\n<p>then in your script tag (still in the <code>&lt;head&gt;</code>) use:</p>\n\n<pre><code>$(function() {//code inside this function will run when the document is ready\n    alert($('#lifecheck').is(':checked'));\n\n    $('#lifecheck').change(function() {//do something when the user clicks the box\n        alert(this.checked);\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>****HTML****</p>\n\n<pre><code>&lt;input type=\"checkbox\" id=\"isSelected\"/&gt;\n&lt;div id=\"myDiv\"&gt;Is Checked&lt;/div&gt;\n</code></pre>\n\n<p>****JQuery****</p>\n\n<pre><code>$('#isSelected').click(function() {\n    $(\"#myDiv\").toggle(this.checked);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>For some reason, my form does not want to get the value of a checkbox... I am not sure if it is my coding or not, but when I try and <code>alert()</code> the value, I get <code>undefined</code> as a result. What do I have wrong?</p>\n\n<pre><code>&lt;head&gt;\n  &lt;script&gt;\n    var lfckv = document.getElementById(\"lifecheck\").checked\n    function exefunction(){\n      alert(lfckv);\n    }\n  &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;label&gt;&lt;input id=\"lifecheck\" type=\"checkbox\" &gt;Lives&lt;/label&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p><strong>EDIT</strong></p>\n\n<p>I tried changing it to this</p>\n\n<pre><code>function exefunction() {\n    alert(document.getElementById(\"lifecheck\").checked);\n}\n</code></pre>\n\n<p>But now it doesn't even want to <code>execute</code>. What's going wrong?</p>\n",
            "last_activity_date": 1424944936,
            "question_id": 4754699,
            "score": 12,
            "tags": [
                "javascript",
                "html",
                "checkbox"
            ],
            "title": "How do I get if a checkbox is checked or not?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Let's make shure we understand each other. Your erb template (<code>new_daily.js.erb</code>) will be processed on the server side, ruby code will be evaluated (within <code>&lt;% %&gt;</code>), substitution made, and then resulting javascript will be sent to browser. On the client side the browser will then evaluate this javascript code and variable <code>i</code> will be assigned a value.<br>\nNow when do you want to pass this variable and to what partial?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Simple answer is you can't.  Partials are expanded at server side, and JavaScript variables are set later at client side.  You could make <code>i</code> (as a variable name) a parameter of the partial and use it there.</p>\n\n<pre><code>render :partial =&gt; 'xx', :locals =&gt; { :variable =&gt; 'i' }\n</code></pre>\n\n<p>And in partial</p>\n\n<pre><code>alert(&lt;%= variable %&gt;);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As far as i know there is no way to do it directly and the reason is fairly simple too, html is executed at the server side and javascript is a client side language which means its executed in your local browser, thats why if you even try to pass a variable between the two you'll have to make a request to the server, \nHowever this problem is tackled by calling an AJAX request, this AJAX request does the same thing as sending a new request to the server however it does that without refreshing or reloading the page to it gives the users the illusion that no request was made.</p>\n\n<p><strong>a guy asks a similar question here:</strong></p>\n\n<p><em>http://www.quora.com/Ruby-on-Rails/Can-I-pass-a-JavaScript-variable-to-a-Rails-method</em></p>\n\n<p><strong>and you can learn more about AJAX here:</strong></p>\n\n<p><em>http://www.w3schools.com/ajax/default.asp</em> </p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Here's a few different options on how to do it:</p>\n\n<p><a href=\"http://jing.io/t/pass-javascript-variables-to-rails-controller.html\" rel=\"nofollow\">http://jing.io/t/pass-javascript-variables-to-rails-controller.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Check out the gon gem. <a href=\"https://github.com/gazay/gon\" rel=\"nofollow\">https://github.com/gazay/gon</a></p>\n\n<p>It gives you a simple object you can pass variables to that will be available to your scripts via <code>window.gon</code></p>\n\n<p>Also referenced here\n<a href=\"http://railscasts.com/episodes/324-passing-data-to-javascript\" rel=\"nofollow\">http://railscasts.com/episodes/324-passing-data-to-javascript</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes you can pass the value by using jquery;</p>\n\n<pre><code>&lt;%=f.text_field :email ,:id=&gt;\"email_field\" %&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n   var my_email= \"my@email.com\"\n   $(document).ready(function(){\n        $(\"#email_field\").val(my_email);\n   });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I have this Javascript view in my Rails 3 project:</p>\n\n<p>app/views/expenses/new_daily.js.erb</p>\n\n<pre><code>var i = parseInt($('#daily').attr('data-num')) + 1;\n//$('#daily').append('agrego fila ' + i + ' &lt;br /&gt;');\n\n$('#daily').append('&lt;%= escape_javascript(render(partial: 'new_expense', locals: { i: i })) %&gt;');\n\n$('#daily').attr('data-num', i);\n</code></pre>\n\n<p>I want to pass my 'i' javascript variable to a ruby partial through locals, How I can accomplish this?</p>\n",
            "last_activity_date": 1405585931,
            "question_id": 4959770,
            "score": 11,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "view",
                "erb"
            ],
            "title": "How to pass a javascript variable into a erb code in a js view?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<h2>Since 1.3.0-rc.5</h2>\n\n<p>Since <a href=\"https://github.com/angular/angular.js/commit/607f016a0ba705ce40df0164360fb96a9d7f5912\">AngularJS 1.3.0-rc.5</a>, the <code>orderBy</code> filter (see the <a href=\"https://docs.angularjs.org/api/ng/filter/orderBy\">documentation</a>) will automatically sort the array using its items if no additional parameters are provided.</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;li ng-repeat=\"item in items | orderBy\"&gt;{{item}}&lt;/li&gt;\n</code></pre>\n\n<p><kbd><a href=\"http://jsbin.com/okatur/59/edit\">JS Bin</a></kbd></p>\n\n<h2>Before 1.3.0-rc.5</h2>\n\n<p>The <code>orderBy</code> filter (see the <a href=\"https://code.angularjs.org/1.3.0-rc.4/docs/api/ng/filter/orderBy\">historical documentation</a>) can also take a function as second parameter, whose return value will be compared using the <code>&lt;</code>, <code>=</code> and <code>&gt;</code> operator.\nYou can simply use the <code>angular.identity</code> (see the <a href=\"https://docs.angularjs.org/api/angular.identity\">documentation</a>) for that purpose:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$scope.identity = angular.identity;\n</code></pre>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;li ng-repeat=\"item in items | orderBy:identity\"&gt;{{item}}&lt;/li&gt;\n</code></pre>\n\n<p><kbd><a href=\"http://jsbin.com/okatur/6/edit\">JS Bin</a></kbd></p>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<p>How can I get Angular's <code>ng-repeat</code> directive to sort a list by each item's actual value, rather than by the value of a property on each item?</p>\n\n<p>eg:</p>\n\n<pre><code>&lt;ul&gt;\n    &lt;li ng-repeat=\"item in items | orderBy:'WHAT_GOES_HERE??'\"&gt;{{item}}&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>Here's a fiddle to play with: <a href=\"http://jsbin.com/okatur/1/edit\">http://jsbin.com/okatur/1/edit</a></p>\n\n<p>I realize I could just do <code>.sort()</code> on the array, but is that my only option?</p>\n",
            "last_activity_date": 1412850490,
            "question_id": 17936078,
            "score": 10,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "orderBy array item value in Angular ng-repeat"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>In short, you can't.</p>\n\n<p>You might want to consider looking into using something like a <a href=\"http://jqueryui.com/demos/dialog/\">jQuery UI dialog</a> instead.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>You can't.\nUse some javascript UI (jQuery UI, YUI, Mootools) library and mimic a dialog you need.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could ask the user for an answer using:</p>\n\n<pre><code>var userChoice = prompt(\"Question\");\n</code></pre>\n\n<p>You could loop that sentence until the user enters an answer within the valid ones.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The easiest way is to use the bootbox library:</p>\n\n<p><a href=\"http://bootboxjs.com/\" rel=\"nofollow\">Bootbox javascript library</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to write a confirm dialog in javascript with custom choices?</p>\n\n<p>Instead of just \"Ok\" and \"Cancel\", I would like to have for example \"This\" \"That\" and \"Other\".</p>\n",
            "last_activity_date": 1389793176,
            "question_id": 1800033,
            "score": 10,
            "tags": [
                "javascript",
                "dialog",
                "confirm"
            ],
            "title": "custom choices in javascript confirm dialog"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can't avoid polling, there isn't any event for href change.</p>\n\n<p>Using intervals is quite light anyways if you don't go overboard. Checking the href every 50ms or so will not have any significant effect on performance if you're worried about that.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Have you tried beforeUnload?\nThis event fires immediately before the page responds to a navigation request, and this should include the modification of the href.</p>\n\n<pre><code>    &lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"&gt;\n    &lt;HTML&gt;\n    &lt;HEAD&gt;\n    &lt;TITLE&gt;&lt;/TITLE&gt;\n    &lt;META NAME=\"Generator\" CONTENT=\"TextPad 4.6\"&gt;\n    &lt;META NAME=\"Author\" CONTENT=\"?\"&gt;\n    &lt;META NAME=\"Keywords\" CONTENT=\"?\"&gt;\n    &lt;META NAME=\"Description\" CONTENT=\"?\"&gt;\n    &lt;/HEAD&gt;\n\n         &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3/jquery.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n            &lt;script type=\"text/javascript\"&gt;\n            $(document).ready(function(){\n                $(window).unload(\n                        function(event) {\n                            alert(\"navigating\");\n                        }\n                );\n                $(\"#theButton\").click(\n                    function(event){\n                        alert(\"Starting navigation\");\n                        window.location.href = \"http://www.bbc.co.uk\";\n                    }\n                );\n\n            });\n            &lt;/script&gt;\n\n\n    &lt;BODY BGCOLOR=\"#FFFFFF\" TEXT=\"#000000\" LINK=\"#FF0000\" VLINK=\"#800000\" ALINK=\"#FF00FF\" BACKGROUND=\"?\"&gt;\n\n        &lt;button id=\"theButton\"&gt;Click to navigate&lt;/button&gt;\n\n        &lt;a href=\"http://www.google.co.uk\"&gt; Google&lt;/a&gt;\n    &lt;/BODY&gt;\n    &lt;/HTML&gt;\n</code></pre>\n\n<p>Beware, however, that your event will fire <strong><em>whenever</em></strong> you navigate away from the page, whether this is because of the script, or somebody clicking on a link.\nYour real challenge, is detecting the different reasons for the event being fired. (If this is important to your logic)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm writing a greasemonkey extension for a site which at some point modifies location.href.</p>\n\n<p>How can I get an event (via window.addEventListener or so) when window.location.href changes on a page? I also need access to the DOM of the document pointing to the new/modified url.</p>\n\n<p>I've seen other solutions which involves timeouts and polling, it'd like to avoid that - if possible.</p>\n",
            "last_activity_date": 1282224772,
            "question_id": 3522090,
            "score": 9,
            "tags": [
                "javascript",
                "dom",
                "greasemonkey"
            ],
            "title": "Event when window.location.href changes"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You can create an image tag from JavaScript but not the actual image in it: JS has no commands to allocate memory for the bitmap and it has no commands to render anything on it.</p>\n\n<p>The usual solution is to have a report generator on the server which creates the image on request. Look at <a href=\"http://www.eclipse.org/birt/phoenix/\" rel=\"nofollow\">BIRT</a> or <a href=\"http://jasperforge.org/projects/jasperreports\" rel=\"nofollow\">JasperReports</a>.</p>\n\n<p>[EDIT] Based on your comment, the solution is simple: Examine the DIV, find the URL for the background image and replace the DIV with an IMG element. Put the URL into the SRC attribute and then print.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I really don't think this is possible on the browser, certainly not without some kind of plugin. </p>\n\n<p>Could you send some coordinate info or something to the web server and that way have the web server request the same map image from the image server?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Generating images was only possible in IE5 :( Then due to security reasons it was dropped. I'm still missing it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Maybe it's possible with the <code>Canvas</code>:</p>\n\n<p><a href=\"https://developer.mozilla.org/en/drawing_graphics_with_canvas\" rel=\"nofollow\">MDN - Drawing Graphics with Canvas</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I think I've worked out a way to do it.</p>\n\n<p>1) When the user presses Print, interrogate the DIV <BR>\n2) Images on that DIV are being generated by the OpenLayers API<BR>\n3) Grab the URL of each Image<BR>\n4) Grab the location on screen of each image<BR>\n5) Translate the screen location into a Real-World location (I have API for this)<BR>\n6) As part of the print send up all the image URL's along with their real-world extents<BR>\n7) Allow the server to re-request the Images and draw them into their appropriate locations.</p>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>Does it have to be done on the browser side?  I have seen where you can do a server side call and the MIME type on the server response is the image type.  I think the example I'm thinking of was for b64 encoded jpegs in a db, but the process should be the same.  The response would be the data that is currently in your DIV.  Sorry if I'm way off base.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Very interesting question.</p>\n\n<p>Actually I solve this problem using ajax (transfer images' positions to the server, server creates one image from pieces, save it and send url to the client). I don't very like this solution but I don't know other yet.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm wondering is there a JavaScript library available that would allow me to generate an Image from the contents of a DIV.</p>\n\n<p>Basically this is required for some Server-Side Printing code, which needs to print a background from the Browser.</p>\n\n<p>What I'd ultimately like to do would be encode the DIV contents into PNG format and post up the encoded data with the print operation.</p>\n\n<p>Any ideas if this is possible ?</p>\n\n<p>[EDIT] What I have is a mapping application where background data is coming from an image server straight into a browser DIV (Think Google Maps). That div is background to me main data. When Print is pressed the server generates a PDF from the data it knows about, but knows nothing about the browser's background data. What I'd really like is to be able to provide the server with the browsers background image in some way!</p>\n\n<p>Cheers,\nRo</p>\n",
            "last_activity_date": 1347941552,
            "question_id": 839216,
            "score": 8,
            "tags": [
                "javascript",
                "image"
            ],
            "title": "Create an Image of a DIV in JavaScript (GIF/PNG)"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You're getting your error right here:</p>\n\n<pre><code>template: _.template($('#tmpl_sourcelist').html()),\n</code></pre>\n\n<p>Part of <code>_.template</code>'s internals involves calling <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace\"><code>String#replace</code></a> on the uncompiled template text on the way to producing the compiled template function. That particular error usually means that you're effectively saying this:</p>\n\n<pre><code>_.template(undefined)\n</code></pre>\n\n<p>That can happen if there is no <code>#tmpl_sourcelist</code> in the DOM when you say <code>$('#tmpl_sourcelist').html()</code>.</p>\n\n<p>There are a few simple solutions:</p>\n\n<ol>\n<li>Adjust your <code>&lt;script&gt;</code> order so that your <code>#tmpl_sourcelist</code> comes before you try to load your view.</li>\n<li><p>Create the compiled template function in your view's <code>initialize</code> instead of in the view's \"class\" definition:</p>\n\n<pre><code>window.SourceListView = Backbone.View.extend({\n    tagName:\"li\",\n    initialize:function () {\n        this.template = _.template($('#tmpl_sourcelist').html());\n        //...\n</code></pre></li>\n</ol>\n\n<p>As far as <code>tagName</code> goes, the <a href=\"http://backbonejs.org/#View-el\">fine manual</a> has this to say:</p>\n\n<blockquote>\n  <p><strong>el</strong> <code>view.el</code></p>\n  \n  <p>[...] <code>this.el</code> is created from the view's <code>tagName</code>, <code>className</code>, <code>id</code> and <code>attributes</code> properties, if specified. If not, <strong>el</strong> is an empty <code>div</code>.</p>\n</blockquote>\n\n<p>So having this in your view:</p>\n\n<pre><code>tagName: 'li'\n</code></pre>\n\n<p>means that Backbone will automatically create a new <code>&lt;li&gt;</code> element as your view's <code>el</code>.</p>\n",
                    "is_accepted": true,
                    "score": 31
                }
            ],
            "body": "<p>I 'm trying to develop a simple RSS app using backbone.js. I 'm using this backbone.js <a href=\"http://coenraets.org/blog/2011/12/backbone-js-wine-cellar-tutorial-part-2-crud/\" rel=\"nofollow\">tutorial</a>. I 'm getting the following error, on line 2(template), when defining the template. \nCan someone also tell me why is tagName: \"li\" defined in the tutorial?</p>\n\n<blockquote>\n  <p>uncaught TypeError: Cannot call method 'replace' of undefined\n  backbone.js</p>\n</blockquote>\n\n<p><strong>Javscript</strong></p>\n\n<pre><code>window.SourceListView = Backbone.View.extend({\n    tagName:\"li\",\n    template: _.template($('#tmpl_sourcelist').html()),\n\n    initialize:function () {\n        this.model.bind(\"change\", this.render, this);\n        this.model.bind(\"destroy\", this.close, this);\n    },\n\n    render:function (eventName) {\n        $(this.$el).html(this.template(this.model.toJSON()));\n        return this;\n    },\n\n    close:function () {\n        $(this.el).unbind();\n        $(this.el).remove();\n    }\n});\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code> &lt;script type=\"text/template\" id=\"tmpl_sourcelist\"&gt;\n                        &lt;div id=\"source\"&gt;\n                        &lt;a href='#Source/&lt;%=id%&gt;'&lt;%=name%&gt;&lt;/a&gt;\n                        &lt;/div&gt;\n                &lt;/script&gt;\n</code></pre>\n\n<p>thanks</p>\n",
            "last_activity_date": 1378839247,
            "question_id": 14826149,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "templates",
                "backbone.js",
                "underscore.js"
            ],
            "title": "uncaught TypeError: Cannot call method &#39;replace&#39; of undefined backbone.js"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>There is an <code>unselectable=\"on\"</code> attribute.</p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/ms537840%28VS.85%29.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/ms537840%28VS.85%29.aspx</a></p>\n\n<p>And related SO thread: <a href=\"http://stackoverflow.com/questions/69430/is-there-a-way-to-make-text-unselectable-on-an-html-page\">Is there a way to make text unselectable on an html page?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use Javascript to make text unselectable in all browsers:</p>\n\n<pre><code>document.onselectstart=new Function('return false');\nfunction noselect(e){return false;}\nfunction click(){return true;}\ndocument.onmousedown=noselect;\ndocument.onclick=click;\n</code></pre>\n\n<p>Another way is described in this SO thread: <a href=\"http://stackoverflow.com/questions/69430/is-there-a-way-to-make-text-unselectable-on-an-html-page\">Is there a way to make text unselectable on an html page?</a></p>\n\n<p>The cheapest way probably is <code>&lt;body onselectstart=\"return false\"&gt;</code></p>\n\n<p>The best way though is possibly using the following CSS:</p>\n\n<pre><code>[unselectable=on] { -moz-user-select: none; -khtml-user-select: none; user-select: none; }\n</code></pre>\n\n<p>and add the <a href=\"http://msdn.microsoft.com/en-us/library/ms537840%28VS.85%29.aspx\" rel=\"nofollow\">IE unselectable property</a> to the elements you want to make unselectable (<code>unselectable=\"on\"</code> in HTML; <code>element.setAttribute(\"unselectable\",\"on\")</code> in javascript)</p>\n\n<p>Check out this nice <a href=\"http://www.benweaver.com/blog/unselectable-text.html\" rel=\"nofollow\">small article about unselectable text</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>In IE, you need the <code>unselectable</code> attribute in HTML:</p>\n\n<pre><code>&lt;div id=\"foo\" unselectable=\"on\"&gt;...&lt;/div&gt;\n</code></pre>\n\n<p>... or set it via JavaScript:</p>\n\n<pre><code>document.getElementById(\"foo\").setAttribute(\"unselectable\", \"on\");\n</code></pre>\n\n<p>The thing to be aware of is that the unselectableness is not inherited by children of an unselectable element. This means you either have to put an attribute in the start tag of every element inside the <code>&lt;div&gt;</code> or use JavaScript to do this recursively for an element's descendants:</p>\n\n<pre><code>function makeUnselectable(node) {\n    if (node.nodeType == 1) {\n        node.setAttribute(\"unselectable\", \"on\");\n    }\n    var child = node.firstChild;\n    while (child) {\n        makeUnselectable(child);\n        child = child.nextSibling;\n    }\n}\n\nmakeUnselectable(document.getElementById(\"foo\"));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>This seems to work well in Chrome and IE11 so far, using JQuery...</p>\n\n<pre><code>function fMakeNodeUnselectable(node){      \n    $(node).css({\"cursor\":\"default\",\"-moz-user-select\":\"-moz-none\",\"-khtml-user-select\":\"none\",\"-webkit-user-select\":\"none\",\"-o-user-select\":\"none\",\"user-select\":\"none\"});\n    $(node).attr(\"unselectable\",\"on\");\n}   \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Here is my chart I've been writing in JS:</p>\n\n<p><a href=\"http://jsfiddle.net/49FVb/\">http://jsfiddle.net/49FVb/</a></p>\n\n<p>The css:</p>\n\n<pre><code>-moz-user-select:none;\n-khtml-user-select: none;\n</code></pre>\n\n<p>Works fine for Chrome/FF, but in IE all the elements are still selectable which looks weird when dragging the bars around.</p>\n\n<p>How can I make this unselectable in IE?  </p>\n",
            "last_activity_date": 1394297588,
            "question_id": 4448671,
            "score": 7,
            "tags": [
                "javascript",
                "cross-browser",
                "selectable"
            ],
            "title": "Making things unselectable in IE"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Maybe someone else can help you converting this function into JQuery's framework...</p>\n\n<p>In raw javascript i will use:</p>\n\n<p><a href=\"http://jsbin.com/ufoze4\">Live Demo</a>  </p>\n\n<pre><code> &lt;script&gt;\n        function calcBusinessDays(dDate1, dDate2) { // input given as Date objects\n        var iWeeks, iDateDiff, iAdjust = 0;\n        if (dDate2 &lt; dDate1) return -1; // error code if dates transposed\n        var iWeekday1 = dDate1.getDay(); // day of week\n        var iWeekday2 = dDate2.getDay();\n        iWeekday1 = (iWeekday1 == 0) ? 7 : iWeekday1; // change Sunday from 0 to 7\n        iWeekday2 = (iWeekday2 == 0) ? 7 : iWeekday2;\n        if ((iWeekday1 &gt; 5) &amp;&amp; (iWeekday2 &gt; 5)) iAdjust = 1; // adjustment if both days on weekend\n        iWeekday1 = (iWeekday1 &gt; 5) ? 5 : iWeekday1; // only count weekdays\n        iWeekday2 = (iWeekday2 &gt; 5) ? 5 : iWeekday2;\n\n        // calculate differnece in weeks (1000mS * 60sec * 60min * 24hrs * 7 days = 604800000)\n        iWeeks = Math.floor((dDate2.getTime() - dDate1.getTime()) / 604800000)\n\n        if (iWeekday1 &lt;= iWeekday2) {\n          iDateDiff = (iWeeks * 5) + (iWeekday2 - iWeekday1)\n        } else {\n          iDateDiff = ((iWeeks + 1) * 5) - (iWeekday1 - iWeekday2)\n        }\n\n        iDateDiff -= iAdjust // take into account both days on weekend\n\n        return (iDateDiff + 1); // add 1 because dates are inclusive\n    }\n &lt;/script&gt;\n</code></pre>\n\n<p>found <a href=\"http://snipplr.com/view/4086/calculate-business-days-between-two-dates/\">here</a></p>\n\n<p>and to call that function, for example, something like:</p>\n\n<pre><code>  &lt;script&gt;\n    alert(calcBusinessDays(new Date(\"August 11, 2010 11:13:00\"),new Date(\"August 16, 2010 11:13:00\")));\n  &lt;/script&gt;\n</code></pre>\n\n<h2>## EDITED ##</h2>\n\n<p>If you want to use it with your that format just:</p>\n\n<p>Your code will look like:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    $(\"#startdate, #enddate\").change(function() {       \n\n    var d1 = $(\"#startdate\").val();\n    var d2 = $(\"#enddate\").val();\n\n            var minutes = 1000*60;\n            var hours = minutes*60;\n            var day = hours*24;\n\n            var startdate1 = getDateFromFormat(d1, \"d-m-y\");\n            var enddate1 = getDateFromFormat(d2, \"d-m-y\");\n\n\n            var newstartdate=new Date();\n            newstartdate.setFullYear(startdate1.getYear(),startdate1.getMonth(),startdate1.getDay());\n            var newenddate=new Date();\n            newenddate.setFullYear(enddate1.getYear(),enddate1.getMonth(),enddate1.getDay());\n            var days = calcBusinessDays(newstartdate,newenddate);\n      if(days&gt;0)\n      { $(\"#noofdays\").val(days);}\n      else\n      { $(\"#noofdays\").val(0);}\n    });\n\n &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>I get it work with this code. Note that the function is from <a href=\"http://mattkruse.com/javascript/date/date.js\" rel=\"nofollow\">date.js</a> and businessday js (thanks to Garis Suero). Start Date 11-08-2010 End Date 16-08-2010 will result 4 days of leave.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    $(\"#startdate, #enddate\").change(function() {       \n\n    var d1 = $(\"#startdate\").val();\n    var d2 = $(\"#enddate\").val();\n\n            var minutes = 1000*60;\n            var hours = minutes*60;\n            var day = hours*24;\n\n            var startdate1 = getDateFromFormat(d1, \"d-m-y\");\n            var enddate1 = getDateFromFormat(d2, \"d-m-y\");\n\n            var days = calcBusinessDays(new Date(startdate1),new Date(enddate1));             \n\n    if(days&gt;0)\n    { $(\"#noofdays\").val(days);}\n    else\n    { $(\"#noofdays\").val(0);}\n\n\n    });\n\n    &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>That looks like too much work to me. I'd rather let the computer do the heavy lifting-\n//</p>\n\n<pre><code>Date.bizdays= function(d1, d2){\n    var bd= 0, dd, incr=d1.getDate();\n    while(d1&lt;d2){\n        d1.setDate(++incr);\n        dd= d1.getDay();\n        if(dd%6)++bd;\n    }\n    return bd;\n}\n\n//test\n\nvar day1= new Date(2010, 7, 11), day2= new Date(2010, 7, 31);\n\nalert(Date.bizdays(day1, day2))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is how I would do it</p>\n\n<pre><code>function getDays(d1, d2) {\n    var one_day=1000*60*60*24;\n    var d1_days = parseInt(d1.getTime()/one_day) - 1;\n    var d2_days = parseInt(d2.getTime()/one_day);\n    var days = (d2_days - d1_days);\n    var weeks = (d2_days - d1_days) / 7;\n    var day1 = d1.getDay();\n    var day2 = d2.getDay();\n    if (day1 == 0) {\n        days--;\n    } else if (day1 == 6) {\n        days-=2;\n    }\n    if (day2 == 0) {\n       days-=2;\n    } else if (day2 == 6) {\n       days--;\n    }\n    days -= parseInt(weeks) * 2;\n    alert(days);\n}\n\ngetDays(new Date(\"June 8, 2004\"),new Date(\"February 6, 2010\"));\n</code></pre>\n\n<p><strong>EDIT</strong><br>\nTo clarify my comment to @keenebec...<br>\nThat solution will work for small date differences quite nicely and is easy to understand.  But take something as \"short\" as a 6 year span and you can see a remarkable difference in speed.  </p>\n\n<p><a href=\"http://jsfiddle.net/aSvxv/\" rel=\"nofollow\">http://jsfiddle.net/aSvxv/</a></p>\n\n<p>I included all 3 answers and the original answer is indeed the fastest, but not by much and the trade off for a few microseconds of execution is somewhat trivial to me in favor of readability.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Hi i am using jquery-ui datepicker to select date and <a href=\"http://mattkruse.com/javascript/date/date.js\">date.js</a> to find difference between 2 dates. </p>\n\n<p>Right now the problem is I want to exclude weekend days from calculation (saturday and sunday). How should i do that? </p>\n\n<p>For example the user select start date (13/8/2010) and end date (16/8/2010). Since 14/8/2010 and 15/8/2010 is in week days, instead of 4 days total, i want it to be only 2 days.</p>\n\n<p>This is the code im using right now:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    $(\"#startdate, #enddate\").change(function() {       \n\n    var d1 = $(\"#startdate\").val();\n    var d2 = $(\"#enddate\").val();\n\n            var minutes = 1000*60;\n            var hours = minutes*60;\n            var day = hours*24;\n\n            var startdate1 = getDateFromFormat(d1, \"d-m-y\");\n            var enddate1 = getDateFromFormat(d2, \"d-m-y\");\n\n            var days = 1 + Math.round((enddate1 - startdate1)/day);             \n\n    if(days&gt;0)\n    { $(\"#noofdays\").val(days);}\n    else\n    { $(\"#noofdays\").val(0);}\n\n\n    });\n\n    &lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1391511769,
            "question_id": 3464268,
            "score": 7,
            "tags": [
                "javascript",
                "jquery-ui"
            ],
            "title": "Find day difference between two dates (excluding weekend days)"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You could do something like this.</p>\n\n<pre><code>var marker = new google.maps.Marker({\n  url: 'http://www.google.com/',\n  map: map\n});\n\ngoogle.maps.event.addListener(marker, 'click', function() {\n  window.location.href = marker.url;\n});\n</code></pre>\n\n<p>Code untested... just thinking out loud!</p>\n\n<p>To fit it in with your existing code...</p>\n\n<pre><code>        function dodajMarker(opcjeMarkera)\n        {\n            opcjeMarkera.map = mapa;\n            var marker = new google.maps.Marker(opcjeMarkera);\n            google.maps.event.addListener(marker, 'click', function() {\n                window.location.href = marker.url;\n            });\n\n        }\n</code></pre>\n\n<p>The main thing to note is the <strong>marker</strong> variable is referenced again in the addListener function.</p>\n\n<pre><code>dodajMarker({position: new google.maps.LatLng(57.951087,16.55972),  icon: ikona6, shadow: cien1, url:'http://www.google.com'});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<p>how to add links to the markers to open new pages with target=\"_self\", i found some examples but i dont know how to use it in my code, do help me pls</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;   \n\n            var mapa; // obiekt globalny\n\n            function dodajMarker(opcjeMarkera)\n            {\n                opcjeMarkera.map = mapa;\n                var marker = new google.maps.Marker(opcjeMarkera);\n            }\n\n            function mapaStart()  \n            {  \n                var wspolrzedne = new google.maps.LatLng(58.699776,16.984863);\n                var opcjeMapy = {\n                    zoom: 6,\n                    center: wspolrzedne,\n                    mapTypeId: google.maps.MapTypeId.TERRAIN,\n                    disableDefaultUI: true,\n                    navigationControl: true, // kontrolka nawigacji\n    navigationControlOptions:\n    {\n        style: google.maps.NavigationControlStyle.SMALL \n    }\n                };\n                mapa = new google.maps.Map(document.getElementById(\"mapka\"), opcjeMapy);\n\n                // wsp\u00f3lne cechy ikon\n                var rozmiar = new google.maps.Size(32,32);\n                var rozmiar_cien = new google.maps.Size(59,32);\n                var punkt_startowy = new google.maps.Point(0,0);\n                var punkt_zaczepienia = new google.maps.Point(16,16);\n\n                // ikonki\n                var ikona1 = new google.maps.MarkerImage(\"markers/marker1.png\", rozmiar, punkt_startowy, punkt_zaczepienia);\n                var ikona2 = new google.maps.MarkerImage(\"markers/marker2.png\", rozmiar, punkt_startowy, punkt_zaczepienia);\n                var ikona3 = new google.maps.MarkerImage(\"markers/marker3.png\", rozmiar, punkt_startowy, punkt_zaczepienia);\n                var ikona4 = new google.maps.MarkerImage(\"markers/marker4.png\", rozmiar, punkt_startowy, punkt_zaczepienia);\n                var ikona5 = new google.maps.MarkerImage(\"markers/marker5.png\", rozmiar, punkt_startowy, punkt_zaczepienia);\n                var ikona6 = new google.maps.MarkerImage(\"markers/marker6.png\", rozmiar, punkt_startowy, punkt_zaczepienia);\n\n\n                var cien1 = new google.maps.MarkerImage(\"http://www.google.com/intl/en_ALL/mapfiles/shadow50.png\", rozmiar_cien, punkt_startowy, punkt_zaczepienia);\n\n                dodajMarker({position: new google.maps.LatLng(58.203148,16.601637), icon: ikona1, shadow: cien1});\n                dodajMarker({position: new google.maps.LatLng(58.3902,16.7202),  icon: ikona2, shadow: cien1});\n                dodajMarker({position: new google.maps.LatLng(58.566667,15.166667),  icon: ikona3, shadow: cien1});\n                dodajMarker({position: new google.maps.LatLng(58.488553,16.928773), icon: ikona4, shadow: cien1 });\n                dodajMarker({position: new google.maps.LatLng(57.899804,16.408064),  icon: ikona5, shadow: cien1});\n                dodajMarker({position: new google.maps.LatLng(57.951087,16.55972),  icon: ikona6, shadow: cien1});\n                }\n\n\n\n        &lt;/script&gt; \n</code></pre>\n\n<p>does the first marker should look like this ?? where to put url ??</p>\n\n<pre><code>function dodajMarker({position: new google.maps.LatLng(58.203148,16.601637), icon: ikona1, shadow: cien1})\n                {\n                    opcjeMarkera.map = mapa;\n                    var marker = new google.maps.Marker({position: new google.maps.LatLng(58.203148,16.601637), icon: ikona1, shadow: cien1});\n                    google.maps.event.addListener(marker, 'click', function() {\n                        window.location.href = marker.url;\n                    });\n\n                }\n</code></pre>\n\n<p>this is my code and it dosent work</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;   \n        &lt;!-- \n            var mapa; // obiekt globalny\n\n            function dodajMarker(opcjeMarkera)\n            {\n                opcjeMarkera.map = mapa;\n                var marker = new google.maps.Marker(opcjeMarkera);\n            }\n\n            function mapaStart()  \n            {  \n                var wspolrzedne = new google.maps.LatLng(58.699776,16.984863);\n                var opcjeMapy = {\n                    zoom: 6,\n                    center: wspolrzedne,\n                    mapTypeId: google.maps.MapTypeId.TERRAIN,\n                    disableDefaultUI: true,\n                    navigationControl: true, // kontrolka nawigacji\n    navigationControlOptions:\n    {\n        style: google.maps.NavigationControlStyle.SMALL \n    }\n                };\n                mapa = new google.maps.Map(document.getElementById(\"mapka\"), opcjeMapy);\n\n                // wsp\u00f3lne cechy ikon\n                var rozmiar = new google.maps.Size(32,32);\n                var rozmiar_cien = new google.maps.Size(59,32);\n                var punkt_startowy = new google.maps.Point(0,0);\n                var punkt_zaczepienia = new google.maps.Point(16,16);\n\n                // ikonki\n                var ikona1 = new google.maps.MarkerImage(\"markers/marker1.png\", rozmiar, punkt_startowy, punkt_zaczepienia);\n                var ikona2 = new google.maps.MarkerImage(\"markers/marker2.png\", rozmiar, punkt_startowy, punkt_zaczepienia);\n                var ikona3 = new google.maps.MarkerImage(\"markers/marker3.png\", rozmiar, punkt_startowy, punkt_zaczepienia);\n                var ikona4 = new google.maps.MarkerImage(\"markers/marker4.png\", rozmiar, punkt_startowy, punkt_zaczepienia);\n                var ikona5 = new google.maps.MarkerImage(\"markers/marker5.png\", rozmiar, punkt_startowy, punkt_zaczepienia);\n                var ikona6 = new google.maps.MarkerImage(\"markers/marker6.png\", rozmiar, punkt_startowy, punkt_zaczepienia);\n\n\n                var cien1 = new google.maps.MarkerImage(\"http://www.google.com/intl/en_ALL/mapfiles/shadow50.png\", rozmiar_cien, punkt_startowy, punkt_zaczepienia);\n\n                dodajMarker({position: new google.maps.LatLng(58.203148,16.601637), icon: ikona1, shadow: cien1, url:'http://www.google.com'});\n                dodajMarker({position: new google.maps.LatLng(58.3902,16.7202),  icon: ikona2, shadow: cien1, url:'http://www.google.com'});\n                dodajMarker({position: new google.maps.LatLng(58.566667,15.166667),  icon: ikona3, shadow: cien1, url:'http://www.google.com'});\n                dodajMarker({position: new google.maps.LatLng(58.488553,16.928773), icon: ikona4, shadow: cien1, url:'http://www.google.com' });\n                dodajMarker({position: new google.maps.LatLng(57.899804,16.408064),  icon: ikona5, shadow: cien1, url:'http://www.google.com'});\n                dodajMarker({position: new google.maps.LatLng(57.951087,16.55972),  icon: ikona6, shadow: cien1, url:'http://www.google.com'});\n                }\n        --&gt;\n        &lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1349181182,
            "question_id": 5837345,
            "score": 6,
            "tags": [
                "javascript",
                "google-maps-api-3"
            ],
            "title": "google maps marker as link api v3"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>One of the consequences of <code>\"manifest_version\": 2</code> is that <a href=\"http://www.w3.org/TR/CSP/\">Content Security Policy</a> is enabled by default. And Chrome developers chose to be strict about it and always disallow inline JavaScript code - only code placed in an external JavaScript file is allowed to execute (to prevent <a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\">Cross-Site Scripting vulnerabilities</a> in extensions). So instead of defining <code>getPageandSelectedTextIndex()</code> function in <code>popup.html</code> you should put it into a <code>popup.js</code> file and include it in <code>popup.html</code>:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;script type=\"text/javascript\" src=\"popup.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>And <code>&lt;button onclick=\"getPageandSelectedTextIndex()\"&gt;</code> has to be changed as well, <code>onclick</code> attribute is also an inline script. You should assign an ID attribute instead: <code>&lt;button id=\"button\"&gt;</code>. Then in <code>popup.js</code> you can attach an event handler to that button:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>window.addEventListener(\"load\", function()\n{\n  document.getElementById(\"button\")\n          .addEventListener(\"click\", getPageandSelectedTextIndex, false);\n}, false);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I am making a chrome extension that will open all links on a page in new tabs.</p>\n\n<p>Here are my code files:</p>\n\n<p>manifest.json</p>\n\n<pre><code>{\n  \"name\": \"A browser action which changes its icon when clicked.\",\n  \"version\": \"1.1\",\n    \"permissions\": [\n    \"tabs\", \"&lt;all_urls&gt;\"\n  ],\n \"browser_action\": {     \n    \"default_title\": \"links\",      // optional; shown in tooltip\n    \"default_popup\": \"popup.html\"        // optional\n  },\n \"content_scripts\": [\n    {\n    \"matches\": [ \"&lt;all_urls&gt;\" ],\n      \"js\": [\"background.js\"]\n    }\n  ],\n  \"manifest_version\": 2\n}\n</code></pre>\n\n<p>popup.html</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;My Awesome Popup!&lt;/title&gt;\n    &lt;script&gt;\nfunction getPageandSelectedTextIndex() \n  { \n    chrome.tabs.getSelected(null, function(tab) { \n    chrome.tabs.sendRequest(tab.id, {greeting: \"hello\"}, function (response) \n    { \n        console.log(response.farewell); \n    }); \n   }); \n        } \nchrome.browserAction.onClicked.addListener(function(tab) { \n        getPageandSelectedTextIndex(); \n});\n         &lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;button onclick=\"getPageandSelectedTextIndex()\"&gt;\n      &lt;/button&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>background.js</p>\n\n<pre><code>chrome.extension.onRequest.addListener(\n  function(request, sender, sendResponse) {\n    console.log(sender.tab ?\n                \"from a content script:\" + sender.tab.url :\n                \"from the extension\");\n    if (request.greeting == \"hello\")\n    updateIcon();  \n\n});\nfunction updateIcon() {\n  var allLinks = document.links;\n  for (var i=0; i&lt;allLinks.length; i++) {\n    alllinks[i].style.backgroundColor='#ffff00';\n\n}\n}\n</code></pre>\n\n<p>Initially I wanted to highlight all the links on the page or mark them in some way; but I get the error \"Refused to execute inline script because of Content-Security-Policy\".</p>\n\n<p>When I press the button inside the popup, I get this error: <code>Refused to execute inline event handler because of Content-Security-Policy</code>. </p>\n\n<p>Please help me fix these errors, so I can open all links in new tabs using my chrome extension.</p>\n",
            "last_activity_date": 1367774320,
            "question_id": 11045653,
            "score": 5,
            "tags": [
                "javascript",
                "google-chrome",
                "google-chrome-extension",
                "content-security-policy"
            ],
            "title": "Content-Security-Policy error in google chrome extension making"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Make sure you define <code>event</code> as a formal parameter to the handler.</p>\n\n<p><code>IE</code> defines it globally, and <code>Chrome</code> defines it both in both places, so it works either way, but <code>Firefox</code> only defines it as a function parameter.</p>\n\n<pre><code>function up( e ) {\n    //       ^-----------------------------------------------------+\n    if( !e ) e = window.event; // &lt;---needed this --- and this -&gt;--+\n\n    dragok = false;\n    document.onmousemove = null;\n    var x = e.target||e.srcElement; // &lt;--- and these\n    document.getElementById(x.id).style.left= 200 + \"px\" ;\n    document.getElementById(x.id).style.top= 100 + \"px\" ;\n} \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I solved my problem using Jquery. For example to get the id of a element you can use:</p>\n\n<pre><code>var x = $(this).attr('id');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code> var x = event.target||event.srcElement;\n document.getElementById(x.id).style.left =  200 + \"px\" ;\n document.getElementById(x.id).style.top  =  100 + \"px\" ;\n</code></pre>\n\n<p>Works fine on google chrome and IE but not on firefox. Tried it on google. google says  event.srcElement(works on IE but not on firefox) so i have added  event.target but still not working. Is there anymore changes I need to do to work on firefox? By the way Im using 3.5 version of firefox.</p>\n\n<pre><code>       function up()\n           {\n                dragok = false;\n                document.onmousemove = null;\n                var x = event.target||event.srcElement;\n                document.getElementById(x.id).style.left= 200 + \"px\" ;\n                document.getElementById(x.id).style.top= 100 + \"px\" ;\n           } \n</code></pre>\n\n<p>Please help me to make it work on firefox</p>\n",
            "last_activity_date": 1421937174,
            "question_id": 7457260,
            "score": 5,
            "tags": [
                "javascript",
                "firefox",
                "javascript-events",
                "firefox3.5"
            ],
            "title": "event.target not working on Firefox"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>getElementsByClassName()</code> returns a <s><code>nodeList</code></s> <code>HTMLCollection</code>*. You are trying to operate directly on the result; you need to iterate through the results.</p>\n\n<pre><code>function change_boxes() {\n    var boxes = document.getElementsByClassName('boxes'),\n        i = boxes.length;\n\n    while(i--) {\n        boxes[i].style.backgroundColor = \"green\";\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>* <em>updated to reflect change in interface</em></p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p><em>getElementsByClassName</em> Returns a set of elements which have all the given class names</p>\n\n<pre><code>var elements = document.getElementsByClassName('boxes');\nfor(var i=0, l=elements.length; i&lt;l; i++){\n elements[i].style.backgroundColor = \"green\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>getElementsByClassName returns a list of elements so you would need to iterate through them and set the styles on each item one by one.  It also has limited support in IE, so you might be better off using jQuery:</p>\n\n<pre><code>$(\".boxes\").css(\"backgroundColor\", \"green\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I cant figure out how to use multiple IDs in javascript. No problem with single ID and getElementById, but as soon as i change IDs to class and try using getElementsByClassName the function stops working. Ive read about a 100 post about the topic; still havent found the answer so i hope someone here know how to make getElementsByClassName work.</p>\n\n<p>Heres some simple code that i have used for testing:</p>\n\n<pre><code>function change(){\n    document.getElementById('box_one').style.backgroundColor = \"blue\";\n}\n\nfunction change_boxes(){\n    document.getElementsByClassName ('boxes').style.backgroundColor = \"green\";\n}\n\n\n&lt;input name=\"\" type=\"button\" onClick=\"change(document.getElementById('box_one')); change_boxes(document.getElementsByClassName('boxes'))\" value=\"Click\" /&gt;   \n\n&lt;div id=\"box_one\"&gt;&lt;/div&gt;\n&lt;div class=\"boxes\" &gt;&lt;/div&gt;\n&lt;div class=\"boxes\" &gt;&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1422301995,
            "question_id": 14142677,
            "score": 4,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "How to use getElementsByClassName in javascript-function?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The error seems to be a security feature of the <a href=\"http://en.wikipedia.org/wiki/Same%5Forigin%5Fpolicy\">Same Origin Policy</a>: to simplify, you can only make AJAX requests for stuff on the originating server (<code>http://foobar.com</code>). One way around this is to make a simple facade on the originating server, e.g.:</p>\n\n<pre><code> &lt;?php\n // this file resides at http://foobar.com/getstuff.php\n echo file_get_contents('http://www.boobar.com/script.php?callback=?'\n          . $possibly_some_other_GET_parameters );\n ?&gt;\n</code></pre>\n\n<p>Then, from foobar.com, you can make an AJAX request for <code>http://foobar.com/getstuff.php</code> (which in turn makes a HTTP GET request <em>from your web server</em> to <code>boobar.com</code> and sends it back to the browser).</p>\n\n<p>To the browser, the request goes to the origin server, and is allowed (the browser has no way of knowing that the response comes from somewhere else behind the scene).</p>\n\n<p>Caveats: </p>\n\n<ul>\n<li>the PHP config at foobar.com must have <code>allow_url_fopen</code> set to \"1\". Although this is the default setting, some servers have it disabled.</li>\n<li>the request to www.boobar.com is made from foobar.com <strong>server</strong>, not from the browser. That means no cookies or user authentication data are sent to www.boobar.com, just whatever you put into the request URL (\"<code>$possibly_some_other_GET_parameters</code>\").</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>You can get data from another server asynchronously using script tags and json:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://somesite.com/path/to/page/\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>You can use this to dynamically load a remote javascript (by created a new script element and setting the src attribute, then loading into the DOM), which could set a variable. However, you need to really <strong>trust</strong> the remote site, because the JS will be evaluated <em>without any precondition</em>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There is a method called \"window.name transport\" or \"window.name method\" which uses a general browser bug(not sure if this is a bug actually). You make the request through an iFrame and the loaded page puts the information you need to the \"name\" property of the JavaScript window object of itself.</p>\n\n<p>This method uses a \"blank.htm\" since it first navigates to the target page and then goes back to the blank.htm page to overcome the \"same origin policy\" restriction.</p>\n\n<p>Dojo have implemented this and you can find a more detailed explanation here: <a href=\"http://www.sitepen.com/blog/2008/07/22/windowname-transport/\" rel=\"nofollow\">http://www.sitepen.com/blog/2008/07/22/windowname-transport/</a></p>\n\n<p>Also I have implemented a cross-domain XMLHttpRequest object based on this method in the library I have written which can be found here: <a href=\"http://jslib-test.amplio-vita.net/JSLib/js/aV.main.ajax.js\" rel=\"nofollow\">http://jslib-test.amplio-vita.net/JSLib/js/aV.main.ajax.js</a></p>\n\n<p>You may not be able to use the library since it will need 1 or 2 additional libraries which can be found here: <a href=\"http://jslib-test.amplio-vita.net/JSLib/js\" rel=\"nofollow\">http://jslib-test.amplio-vita.net/JSLib/js</a></p>\n\n<p>If you need further help in implementing it in your style, I'll try to do my best.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>So what I ended up doing, since it was just a GET - no data need to be retrieved - I used JQuery to create a hidden iframe with the URL including the variables I wanted to pass set as the source. Worked like a charm. To all who provded feedback - Thanks!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>How about this !! Using a php proxy.</p>\n\n<p>Cross-Domain AJAX calls using PHP\n<a href=\"http://www.phpfour.com/blog/2008/03/cross-domain-ajax-using-php/\" rel=\"nofollow\">http://www.phpfour.com/blog/2008/03/cross-domain-ajax-using-php/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>jQuery .ajax also has a setting 'crossDomain'.</p>\n\n<p><a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\">http://api.jquery.com/jQuery.ajax/</a></p>\n\n<pre>\ncrossDomain (default: false for same-domain requests, true for cross-domain requests)\nType: Boolean\nIf you wish to force a crossDomain request (such as JSONP) on the same domain, set the value of crossDomain to true. This allows, for example, server-side redirection to another domain. (version added: 1.5)\n</pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Help, if you can-</p>\n\n<p>The situation:</p>\n\n<p><a href=\"http://foobar.com\" rel=\"nofollow\">http://foobar.com</a> includes a remotely hosted javacript file (http://boobar.com/stuff.js).</p>\n\n<p>The goal is to just get an alert from the remotely hosted php script on foobar.com</p>\n\n<p>I have tried the following code in stuff.js:</p>\n\n<pre><code>$.ajax({\n  type: \"GET\",\n  url: \"http://www.boobar.com/script.php?callback=?\",\n  dataType: 'jsonp',\n  success: function(result) { alert(result); }\n});\n</code></pre>\n\n<p>No luck.</p>\n\n<pre><code>$.getJSON(\"http://www.boobar.com/script.php?jsonp=?\",\n  function(data) { alert(data); }\n);\n</code></pre>\n\n<p>Also no luck.</p>\n\n<p>On the php side I have tried both the following:</p>\n\n<pre><code>return json_encode(array(0 =&gt; 'test'));\n\necho json_encode(array(0 =&gt; 'test'));\n</code></pre>\n\n<p>In Firefox I get a security error. I understand that it thinks I'm violating the security model. However, according to the jquery documentation, I should be able to accomplish this.</p>\n",
            "last_activity_date": 1365533966,
            "question_id": 752319,
            "score": 4,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "ajax"
            ],
            "title": "Cross Domain Ajax Request with JQuery/PHP"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You can use a switch:</p>\n\n<pre><code>switch (foobar) {\n  case foo:\n  case bar:\n    // do something\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>What i use to do, is put those multiple values in an array like</p>\n\n<pre><code>var options = [foo, bar];\n</code></pre>\n\n<p>and then, use indexOf()</p>\n\n<pre><code>if(options.indexOf(foobar) &gt; -1){\n   //do something\n}\n</code></pre>\n\n<p>for prettiness:</p>\n\n<pre><code>if([foo, bar].indexOf(foobar) +1){\n   //you can't get any more pretty than this :)\n}\n</code></pre>\n\n<p>and for the older browsers:<br>\n( <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/IndexOf\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/IndexOf</a> )</p>\n\n<pre><code>if (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n        \"use strict\";\n        if (this == null) {\n            throw new TypeError();\n        }\n        var t = Object(this);\n        var len = t.length &gt;&gt;&gt; 0;\n        if (len === 0) {\n            return -1;\n        }\n        var n = 0;\n        if (arguments.length &gt; 0) {\n            n = Number(arguments[1]);\n            if (n != n) { // shortcut for verifying if it's NaN\n                n = 0;\n            } else if (n != 0 &amp;&amp; n != Infinity &amp;&amp; n != -Infinity) {\n                n = (n &gt; 0 || -1) * Math.floor(Math.abs(n));\n            }\n        }\n        if (n &gt;= len) {\n            return -1;\n        }\n        var k = n &gt;= 0 ? n : Math.max(len - Math.abs(n), 0);\n        for (; k &lt; len; k++) {\n            if (k in t &amp;&amp; t[k] === searchElement) {\n                return k;\n            }\n        }\n        return -1;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Since nobody has added the obvious solution yet which works fine for two comparisons, I'll offer it:</p>\n\n<pre><code>if (foobar == foo || foobar == bar) {\n     //do something\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>(foobar == foo || foobar == bar)</code> otherwise if you are comparing expressions based only on a single integer, enumerated value, or String object you can use switch. See <a href=\"http://docs.oracle.com/javase/tutorial/java/nutsandbolts/switch.html\" rel=\"nofollow\">The switch Statement</a>. You can also use the method suggested by Andr\u00e9 Al\u00e7ada Padez. Ultimately what you select will need to depend on the details of what you are doing.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Don't try to be too sneaky, especially when it needlessly affects performance.\nIf you really have a whole heap of comparisons to do, just format it nicely.</p>\n\n<pre><code>if (foobar == foo ||\n    foobar == bar ||\n    foobar == baz ||\n    foobar == pew) {\n     //do something\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Just for kicks, since this Q&amp;A does seem to be about syntax microanalysis, a tiny tiny modification of Andr\u00e9 Al\u00e7ada Padez's suggestion(s):</p>\n\n<p><em>(and of course accounting for the pre-IE9 shim/shiv/polyfill he's included)</em></p>\n\n<pre><code>if (~[foo, bar].indexOf(foobar)) {\n    // pretty\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Why not using <code>indexOf</code> from array like bellow?</p>\n\n<pre><code>if ([foo, bar].indexOf(foobar) !== -1) {\n    // do something\n}\n</code></pre>\n\n<p>Just plain Javascript, no frameworks or libraries but it will <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2FindexOf#Browser_compatibility\" rel=\"nofollow\"><strong>not</strong> work on IE &lt; 9</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The switch method (as mentioned by Guffa) works very nicely indeed. However, the default warning settings in most linters will alert you about the use of fall-through. It's one of the main reasons I use switches at all, so I pretty much ignore this warning, but you should be aware that the using the fall-through feature of the switch statement can be tricky. In cases like this, though - I'd go for it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Whats the <em>prettiest</em> way to compare one value against multiples options?</p>\n\n<p>I know there are loads of ways of doing this, but I'm looking for the neatest.</p>\n\n<p>i ask because i'd hoped this was workable (it isn't, quite obviously when you look at it):</p>\n\n<pre><code>if (foobar == (foo||bar) ) {\n     //do something\n}\n</code></pre>\n",
            "last_activity_date": 1393329973,
            "question_id": 9121395,
            "score": 3,
            "tags": [
                "javascript",
                "comparison"
            ],
            "title": "Javascript: The prettiest way to compare one value against multiple values"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You could <a href=\"http://flesler.blogspot.com/2007/10/jquerylisten.html\" rel=\"nofollow\">constantly check</a> if the <a href=\"http://www.nabble.com/How-can-we-find-out-scrollbar-position-has--reached-at-the-bottom-in--js-td19391055s27240.html\" rel=\"nofollow\">scroll position</a> changes...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could try storing the offset top of your element and matching it against the scrollTop when you step inside onScroll:</p>\n\n<pre><code>function onScroll(){\n    var scrollTop = (document.documentElement.scrollTop || document.body.scrollTop),\n    offsetTop = $('selector').offset().top;\n    if(offsetTop &gt; scrollTop){\n      //user has not scrolled to element so do auto scrolling\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Easiest generic method? Just reset the flag in the event handler. You'll want to check first if you're actually changing the value, as otherwise an event won't be fired - as <a href=\"http://stackoverflow.com/questions/1386696/make-scrollleft-scrolltop-changes-not-trigger-scroll-event/1386755#1386755\">Rodrigo notes</a>, a good practice here is to factor this out into so-called \"setter\" functions:</p>\n\n<pre><code>function setScrollLeft(x)\n{\n  if ( element.scrollLeft != x )\n  {\n    ignoreScrollEvents = true;\n    element.scrollLeft = x;\n  }\n} \n\n...\n\nfunction onScroll() \n{\n  var ignore = ignoreScrollEvents;\n  ignoreScrollEvents = false;\n\n  if (ignore) return false;\n\n  ...\n}\n</code></pre>\n\n<p>But, depending on your needs, you may already be storing the scroll position somewhere; if so, just update and check that as your flag. Something like:</p>\n\n<pre><code>element.scrollLeft = currentScrollLeft = x;\n\n...\n\nfunction onScroll() \n{\n  // retrieve element, etc... \n\n  if (element.scrollLeft == currentScrollLeft) return false;\n\n  ...\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>How about a setter?</p>\n\n<pre><code>var _preventEvent = false;\nfunction setScrollTop(amount) {\n  _preventEvent = true;\n  window.scrollTop = amount;\n}\n\nfunction setScrollLeft(amount) {\n  _preventEvent = true;\n  window.scrollLeft = amount;\n}\n\nwindow.onscroll = function () {\n  if (_preventEvent) {\n    _preventEvent = false;\n    return;\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>All right, my final solution, building off of Shog9 (not my real code, but my approach):</p>\n\n<pre><code>var oldScrollLeft = element.scrollLeft;\nelement.scrollLeft = x;\nif(element.scrollLeft != oldScrollLeft) {\n  ignoreScrollEvents = true;\n}\n\nfunction onScroll() {\n  if(!ignoreScrollEvents) performGreatActions();\n  ignoreScrollEvents = false;\n}\n</code></pre>\n\n<p>The if statement only sets the ignore flag when the scrollLeft value actually ends up changing, so cases like setting from 0 to 0 don't set the flag incorrectly.</p>\n\n<p>Thanks, all!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Currently my program is in a spot where it both listens for the user to scroll a certain element, but also, at times, automatically scrolls this element by itself. (Not a gradual, pretty scroll, but an instant jump. It makes sense in context, I swear.)</p>\n\n<p>Is there a way to make the scroll event not trigger if the scrolling was done by setting scrollLeft or scrollTop? My first thought was a basic switch, like:</p>\n\n<pre><code>ignoreScrollEvents = true;\nelement.scrollLeft = x;\nignoreScrollEvents = false;\n\nfunction onScroll() {\n  if(ignoreScrollEvents) return false;\n}\n</code></pre>\n\n<p>but since events don't trigger immediately (oops, duhh), that's not a workable solution. What other sort of answers could I try? I'm also using jQuery, if that helps anything.</p>\n",
            "last_activity_date": 1418171473,
            "question_id": 1386696,
            "score": 3,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Make scrollLeft, scrollTop changes not trigger scroll event"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>To use Greasemonkey's <code>GM_</code> functions from code that must run in the page scope (Such as your <code>timeBtn</code> click handler), do the following:</p>\n\n<ol>\n<li>Have the page-scope code use <code>postMessage</code> to send the data in string format.</li>\n<li>Have the Greasemonkey script listen for the appropriate messages and call the desired <code>GM_</code> function(s) with the message data.</li>\n<li>Use JSON to safely package data in strings.</li>\n</ol>\n\n<p>Adding <code>window.postMessage ()</code> and <code>window.addEventListener (\"message\"...</code> to your code, it becomes:</p>\n\n<pre><code>... ...\n\n//-- Only run in the top page, not the various iframes.\nif (window.top === window.self) {\n    var timeBtn         = document.createElement ('a');\n    timeBtn.id          = \"gmTimeBtn\";\n    timeBtn.textContent = \"Time\";\n    //-- Button is styled using CSS, in GM_addStyle, below.\n\n    document.body.appendChild (timeBtn);\n\n    addJS_Node (null, null, activateTimeButton);\n\n    window.addEventListener (\"message\", receiveTimeMessage, false);\n}\n\nfunction activateTimeButton () {\n    var timeBtn = document.getElementById (\"gmTimeBtn\");\n    if (timeBtn) {\n        timeBtn.addEventListener ('click',\n            function () {\n                var ytplayer = document.getElementById (\"movie_player\");\n                /*-- GM_functions will not work here, so send the data\n                    back to the GM script scope.\n                */\n                //-- Tag the message, we may not be the only ones sending.\n                var messageTxt  = JSON.stringify (\n                    {currentVidTime: ytplayer.getCurrentTime ()}\n                );\n                window.postMessage (messageTxt, \"*\");\n            },\n            false\n        );\n    }\n    else {\n        alert (\"Time button not found!\");\n    }\n}\n\nfunction receiveTimeMessage (event) {\n    var messageJSON;\n    try {\n        messageJSON     = JSON.parse (event.data);\n    }\n    catch (zError) {\n        // Do nothing\n    }\n\n    if ( ! messageJSON  ||  ! messageJSON.currentVidTime)\n        return; //-- Message is not for us.\n\n    /*--- We have a time value, set it with GM_setValue ()\n        But, WARNING: First make sure that the stored value is\n        a safe string.  GM_setValue() crashes on just about anything else.\n    */\n    var safeValue       = JSON.stringify (messageJSON.currentVidTime);\n    GM_setValue (\"videoMarkedTime\", safeValue);\n    console.log (\"Video time recorded with GM_setValue ().\");\n}\n\n... ...\n</code></pre>\n\n<p><br>\nYou can see the stored value by opening <code>about:config</code> and searching for <code>videoMarkedTime</code>.</p>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>I asked a question and got an answer here: <a href=\"http://stackoverflow.com/questions/14220250/how-to-call-this-youtube-function-from-greasemonkey\">How to call this YouTube function from Greasemonkey?</a></p>\n\n<p>That code works and adds a button to the page, which captures the video time.<br>\nBut, the key part must run in the target-page scope -- where Greasemonkey's <code>GM_</code> functions are not available.</p>\n\n<p>I want to use <code>GM_setValue()</code> to record the video time.  How do I call <code>GM_setValue()</code> from my button's <code>click</code> handler?</p>\n\n<p>Here is the relevant part of <a href=\"http://userscripts.org/scripts/version/156005/541247.user.js\" rel=\"nofollow\">the complete script (right-click to save)</a>:</p>\n\n<pre><code>... ...\n\n//-- Only run in the top page, not the various iframes.\nif (window.top === window.self) {\n    var timeBtn         = document.createElement ('a');\n    timeBtn.id          = \"gmTimeBtn\";\n    timeBtn.textContent = \"Time\";\n    //-- Button is styled using CSS, in GM_addStyle, below.\n\n    document.body.appendChild (timeBtn);\n\n    addJS_Node (null, null, activateTimeButton);\n}\n\nfunction activateTimeButton () {\n    var timeBtn = document.getElementById (\"gmTimeBtn\");\n    if (timeBtn) {\n        timeBtn.addEventListener ('click',\n            function () {\n                var ytplayer = document.getElementById (\"movie_player\");\n                //-- IMPORTANT:  GM_functions will not work here.\n\n                console.log (\"getCurrentTime(): \", ytplayer.getCurrentTime() );\n                alert (ytplayer.getCurrentTime() );\n            },\n            false\n        );\n    }\n    else {\n        alert (\"Time button not found!\");\n    }\n}\n\n... ...\n</code></pre>\n\n<p><br>\nThank you :-)</p>\n",
            "last_activity_date": 1357813961,
            "question_id": 14229539,
            "score": 2,
            "tags": [
                "javascript",
                "youtube",
                "youtube-api",
                "greasemonkey"
            ],
            "title": "How to call Greasemonkey&#39;s GM_ functions from code that must run in the target page scope?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The <a href=\"https://developer.chrome.com/extensions/contentSecurityPolicy\" rel=\"nofollow\">CSP</a> cannot cause the problem you've described. It's very likely that you're using JSONP instead of plain JSON. JSONP does not work in Chrome, because JSONP works by inserting a <code>&lt;script&gt;</code> tag in the document, whose <code>src</code> attribute is set to the URL of the webservice. <a href=\"https://developer.chrome.com/extensions/contentSecurityPolicy#resourceLoading\" rel=\"nofollow\">This is disallowed by the CSP</a>.</p>\n\n<p>Provided that you've set the correct permission in the manifest file (e.g. <code>\"permissions\": [\"http://domain/getjson*\"]</code>, you will always be able to get and parse the JSON:</p>\n\n<pre><code>var xhr = new XMLHttpRequest();\nxhr.onload = function() {\n    var json = xhr.responseText;                         // Response\n    json = json.replace(/^[^(]*\\(([\\S\\s]+)\\);?$/, '$1'); // Turn JSONP in JSON\n    json = JSON.parse(json);                             // Parse JSON\n    // ... enjoy your parsed json...\n};\n// Example:\ndata = 'Example: appended to the query string..';\nxhr.open('GET', 'http://domain/getjson?data=' + encodeURIComponent(data));\nxhr.send();\n</code></pre>\n\n<p>When using jQuery for ajax, make sure that JSONP is not requested by using <code>jsonp: false</code>:</p>\n\n<pre><code>$.ajax({url:'...',\n        jsonp: false ... });\n</code></pre>\n\n<p>Or, when using <a href=\"http://api.jquery.com/jQuery.getJSON/\" rel=\"nofollow\"><code>$.getJSON</code></a>:</p>\n\n<pre><code>$.getJSON('URL which does NOT contain callback=?', ...);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>Small problem with my chrome extension.</p>\n\n<p>I just wanted to get a JSON array from another server. But manifest 2 doesn't allow me to do it. I tried specify <code>content_security_policy</code>, but the JSON array is stored on a server without SSL cert.</p>\n\n<p>So, what should I do without using manifest 1?</p>\n",
            "last_activity_date": 1422695728,
            "question_id": 11842954,
            "score": 2,
            "tags": [
                "javascript",
                "ajax",
                "json",
                "google-chrome-extension",
                "content-security-policy"
            ],
            "title": "Get JSON in a Chrome extension"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can do so using Javascript:</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"javascripot:void(0)\" ondblclick=\"javascript:DoMyWorkFunction()\"&gt;a:x&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Try using span instead of a link. Something like this:</p>\n\n<pre><code>&lt;span ondblclick=\"window.location='http://www.google.com'\" style=\"color:blue;text-decoration: underline;\"&gt;Click Here&lt;/span&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Okay, so, you <strong>can</strong> do this:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;a id='golink' href='gosomewhere.html'&gt;Go Somewhere&lt;/a&gt;\n</code></pre>\n\n<p>JavaScript using jQuery:</p>\n\n<pre><code>jQuery(function($) {\n    $('#golink').click(function() {\n        return false;\n    }).dblclick(function() {\n        window.location = this.href;\n        return false;\n    });\n});\n</code></pre>\n\n<p><a href=\"http://jsbin.com/obeyu4/2\">Live copy</a></p>\n\n<p><em>(It doesn't have to be an ID; you can do this with a class or anything else that lets you form a selector that jQuery can process to hook things up.)</em></p>\n\n<p>If the user has JavaScript disabled, the link will work normally. Crawlers will find the link normally, etc. If a user has JavaScript enabled, the event handlers will get hooked up and it will require a double click.</p>\n\n<p>The above blows away keyboard navigation, though, so then you have to handle that:</p>\n\n<pre><code>jQuery(function($) {\n    $('#golink').click(function() {\n        return false;\n    }).dblclick(function() {\n        window.location = this.href;\n        return false;\n    }).keydown(function(event) {\n        switch (event.which) {\n            case 13: // Enter\n            case 32: // Space\n                window.location = this.href;\n                return false;\n        }\n    });\n});\u200b\n</code></pre>\n\n<p><a href=\"http://jsbin.com/obeyu4/3\">Live copy</a></p>\n\n<p>I can't imagine this is good for accessibility, and I bet there are other things not catered for above. Which all feeds into:</p>\n\n<p>But I'd <strong>strongly recommend against doing it</strong> without a <strong><em>really good</em></strong> use case.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>try this:</p>\n\n<pre><code>&lt;a ondblclick= \"openLink('your_link')\"&gt;Link&lt;/a&gt;\n\n&lt;script&gt;\nfunction openLink(link)\n{\n   location.href = link;\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>OR</p>\n\n<pre><code>&lt;a ondblclick=\"location.href='your_link'\"&gt;Double click on me&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>How to make hyper link <code>&lt;a&gt;Link&lt;/a&gt;</code> a double click link: i:e link should open on double click and single click should do nothing.</p>\n",
            "last_activity_date": 1293708076,
            "question_id": 4562012,
            "score": 2,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Make a link open on double click"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>it always better to use setTimeout in a loop so you know exactly when to continue timing:</p>\n\n<pre><code>foo();\nfunction foo(){\n\n   setTimeout (function(){\n      foo = 'bar_' + i++;\n      foo();\n     }, 1 );\n\n} \n</code></pre>\n\n<p>otherwise as you said above, the browser will have to <code>catch up</code> and since ur loop is in infinitum, it might not. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The reason <code>setInterval</code> is bad is because it will try to execute the code every X MS regardless of what's going on in the thread.  So if you have:</p>\n\n<pre><code>setInterval( complexFunction, 1 ); // complexFunction takes &gt;1 MS to complete\n</code></pre>\n\n<p>...you may end up with <code>setInterval</code> trying to re-execute several times before even its own code is complete!  However, you can use <code>setTimeout</code> similarly and avoid this problem:</p>\n\n<pre><code>setTimeout( complexFunction, 1 );\n\nfunction complexFunction() {\n  // complex code\n  setTimeout( complexFunction, 1 );\n}\n</code></pre>\n\n<p>...now <code>complexFunction</code> will only call itself again once its own code is complete, so if its own code takes longer than 1 MS to complete you won't have any backlog to deal with like you would with <code>setInterval</code></p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>A couple years ago I was warned against using <code>setInterval</code> for long periods of time as it supposedly would cause the browser to hang if the called function ran longer than the designated interval, and would then not be able to catch up:</p>\n\n<pre><code>setInterval( function(){\n  foo = 'bar_' + i++;\n}, 1 );\n</code></pre>\n\n<p>Now, I'm aware that adding lots of code in a loop could cause the browser to hang <em>anyway</em>, and that blocking code like <code>alert</code>, <code>prompt</code>, and <code>confirm</code> will stop the code in it's tracks, but is there any good reason to avoid <code>setInterval</code>?</p>\n\n<p>Note: I am aware of how to do recursive <code>setTimeout</code> calls (as that's what I've been using), this question is my trying to figure out if it's still worth using them, or whether <code>setInterval</code> can be used safely.</p>\n",
            "last_activity_date": 1301440367,
            "question_id": 5479762,
            "score": 0,
            "tags": [
                "javascript",
                "settimeout",
                "setinterval"
            ],
            "title": "Will setInterval cause browsers to hang?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Square brackets:</p>\n\n<pre><code>jsObj['key' + i] = 'example' + 1;\n</code></pre>\n\n<p>In JavaScript, all arrays are objects, but not all objects are arrays. The primary difference (and one that's pretty hard to mimic with straight JavaScript and plain objects) is that array instances maintain the <code>length</code> property so that it reflects the numeric value of the property whose name is numeric and whose value, when converted to a number, is the largest of all such properties. That sounds really weird, but it just means that given an array instance, the properties with names like <code>\"0\"</code>, <code>\"5\"</code>, <code>\"207\"</code>, and so on, are all treated specially in that their existence determines the value of <code>length</code>. And, on top of that, the value of <code>length</code> can be <em>set</em> to <em>remove</em> such properties. Setting the <code>length</code> of an array to <code>0</code> effectively removes all properties whose names look like whole numbers.</p>\n\n<p>OK, so that's what makes an array special. All of that, however, has nothing at all to do with how the JavaScript <code>[ ]</code> operator works. That operator is an object property access mechanism which works on any object. It's important to note in that regard that numeric array property names are not special as far as simple property access goes.  They're just strings that happen to look like numbers, but JavaScript object property names can be any sort of string you like.</p>\n\n<p>Thus, the way the <code>[ ]</code> operator works in a <code>for</code> loop iterating through an array:</p>\n\n<pre><code>for (var i = 0; i &lt; myArray.length; ++i) {\n  var value = myArray[i]; // property access\n  // ...\n}\n</code></pre>\n\n<p>is really no different from the way <code>[ ]</code> works when accessing a property whose name is some computed string:</p>\n\n<pre><code>var value = jsObj[\"key\" + i];\n</code></pre>\n\n<p>The <code>[ ]</code> operator there is doing <em>precisely</em> the same thing in both instances. The fact that in one case the object involved happens to be an array is unimportant, in other words.</p>\n\n<p>When <em>setting</em> property values using <code>[ ]</code>, the story is the same <em>except</em> for the special behavior around maintaining the <code>length</code> property. If you set a property with a numeric key on an array instance:</p>\n\n<pre><code>myArray[200] = 5;\n</code></pre>\n\n<p>then (assuming that \"200\" is the biggest numeric property name) the <code>length</code> property will be updated to <code>201</code> as a side-effect of the property assignment. If the same thing is done to a plain object, however:</p>\n\n<pre><code>myObj[200] = 5;\n</code></pre>\n\n<p>there's no such side-effect.  The property called \"200\" of both the array and the object will be set to the value <code>5</code> in otherwise the exact same way.</p>\n\n<p>One might think that because that <code>length</code> behavior is kind-of handy, you might as well make <em>all</em> objects instances of the Array constructor instead of plain objects.  There's nothing directly wrong about that (though it can be confusing, especially for people familiar with some other languages, for some properties to be included in the <code>length</code> but not others).  However, if you're working with JSON serialization (a fairly common thing), understand that array instances are serialized to JSON in a way that <em>only</em> involves the numerically-named properties. Other properties added to the array will never appear in the serialized JSON form. So for example:</p>\n\n<pre><code>var obj = [];\nobj[0] = \"hello world\";\nobj[\"something\"] = 5000;\n\nvar objJSON = JSON.stringify(obj);\n</code></pre>\n\n<p>the value of \"objJSON\" will be a string containing just <code>[\"hello world\"]</code>; the \"something\" property will be lost.</p>\n",
                    "is_accepted": true,
                    "score": 67
                },
                {
                    "body": "<p>Associative Arrays in JavaScript don't really work the same as they do in other languages.  <code>for each</code> statements are complicated (because they enumerate inherited prototype properties).  You could declare properties on an object/associative array as Pointy mentioned, but really for this sort of thing you should use an array with the <code>push</code> method:</p>\n\n<pre><code>jsArr = []; \n\nfor (var i = 1; i &lt;= 10; i++) { \n    jsArr.push('example ' + 1); \n} \n</code></pre>\n\n<p>Just don't forget that indexed arrays are zero-based so the first element will be jsArr[0], not jsArr[1].</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm trying something like this, but this example does not work.</p>\n\n<pre><code>jsObj = {};\n\nfor (var i = 1; i &lt;= 10; i++) {\n    jsObj{'key' + i} = 'example ' + 1;\n}\n</code></pre>\n\n<p>What can I do to make a dynamic key like this?</p>\n",
            "last_activity_date": 1415896320,
            "question_id": 2462800,
            "score": 23,
            "tags": [
                "javascript",
                "object"
            ],
            "title": "How to create a dynamic key to be added to a javascript object variable"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>That seems to be Chrome's new way of displaying uninitialized indexes  in arrays (and <em>array-like</em> objects):</p>\n\n<pre><code>&gt; Array(100)\n[undefined \u00d7 100]\n</code></pre>\n\n<p>Which is certainly better than printing <code>[undefined, undefined, undefined,...]</code> or however it was before.</p>\n\n<p>Although, if there is only one <code>undefined</code> value, they could drop the <code>x 1</code>.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>It just happened to me too. Open the same thing in another browser and output/log the array to the console. As long as it works in both crome and in firefox the same way (as in accessing the elements works fine even if the output has the undefinedx1), I consider it some kind of bug in Chrome not refreshing something internally. You can actually test it this way:</p>\n\n<ol>\n<li>I was adding elements to an array, and firing console.log() to log the element, to check if it was undefined or not. They were all defined.</li>\n<li>After push() I logged the array and it seemed that when this happened, it was always the last one being undefined x 1 on Chrome.</li>\n<li>Then I tried logging it more times and also later, but with the same result.</li>\n<li>However when I accessed (for the sake of output), the element by its index, it returned the proper value (funny).</li>\n<li>After that I logged the array again and it said the last index was undefined x 1 (the very one I just accessed directly with success!).</li>\n<li>Then I did a for loop on the array, logging or using each element, all showed up fine.</li>\n<li><p>Then another log on the array, still buggy.</p>\n\n<p>The code I'm originally using has checks for undefined and they didn't fire, but I was seeing all these undefineds in the console and it was bugging me (no pun intended).</p></li>\n</ol>\n\n<p>Also worth reading: <a href=\"http://stackoverflow.com/questions/10763274/unitialized-variables-in-an-array-when-using-only-array-push\">Unitialized variables in an array when using only Array.push?</a> I'm using pop() too in my code and it's a reasonable explanation that the console log actually represents a different state in time (when the code is 'halted').</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Google Chrome seems to choose to display <a href=\"http://books.google.com/books?id=6TAODdEIxrgC&amp;pg=PA144&amp;lpg=PA144&amp;dq=sparse%20array%20definitive&amp;source=bl&amp;ots=obbpIWPuUG&amp;sig=16mc9YQ6QNeaTFZ9YP704Mf5xSA&amp;hl=en&amp;sa=X&amp;ei=NDFxUPPrDJOo8AS3s4GoDg&amp;ved=0CC4Q6AEwAA#v=onepage&amp;q=sparse%20array%20definitive&amp;f=false\" rel=\"nofollow\">sparse array</a> using this <code>undefined x n</code> notation.  It will show <code>[undefined, undefined]</code> if it is not a sparse array:</p>\n\n<pre><code>var arr = new Array(2);\nconsole.log(arr);\n\nvar arr2 = [];\narr2[3] = 123;\nconsole.log(arr2);\n\nvar arr3 = [,,,];\nconsole.log(arr3)\n\nvar arr4 = [,];\nconsole.log(arr4)\n\nvar arr5 = [undefined, undefined]\nconsole.log(arr5)\n\nvar arr6 = [undefined]\nconsole.log(arr6)\n</code></pre>\n\n<p>arr1 to arr4 are all sparse arrays, while arr5 and arr6 are not.  Chrome will show them as:</p>\n\n<pre><code>[undefined \u00d7 2] \n[undefined \u00d7 3, 123] \n[undefined \u00d7 3] \n[undefined \u00d7 1] \n[undefined, undefined] \n[undefined] \n</code></pre>\n\n<p>note the <code>[undefined x 1]</code> for the sparse array.</p>\n\n<p>Since you deleted an element, it follows that: <a href=\"http://books.google.com/books?id=6TAODdEIxrgC&amp;lpg=PA144&amp;ots=obbpIWPuUG&amp;dq=sparse%20array%20definitive&amp;pg=PA146#v=onepage&amp;q=sparse%20array%20definitive&amp;f=false\" rel=\"nofollow\">If you delete an element from an array, the array becomes sparse.</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm doing some small experiments based on <a href=\"http://perfectionkills.com/understanding-delete/\"><strong><em>this blog entry</em></strong></a>.</p>\n\n<p>I am doing this research in Google Chrome's debugger and here comes the hard part.</p>\n\n<p><img src=\"http://i.stack.imgur.com/asltc.jpg\" alt=\"What the heck is this?!\"></p>\n\n<p>I get the fact that I can't delete local variables (since they are not object attributes). I get that I can 'read out' all of the parameters passed to a function from the array called 'arguments'. I even get it that I can't delete and array's element, only achieve to have <strong><code>array[0]</code></strong> have a value of undefined.</p>\n\n<p>Can somebody explain to me what <strong><code>undefined x 1</code></strong> means on the embedded image?</p>\n\n<p>And when I overwrite the function <strong><code>foo</code></strong> to return the <strong><code>arguments[0]</code></strong>, then I get the usual and 'normal' undefined.</p>\n\n<p>This is only an experiment, but seems interresting, does anybody know what <strong><code>undefined x 1</code></strong> refers to?</p>\n",
            "last_activity_date": 1349596146,
            "question_id": 10683773,
            "score": 18,
            "tags": [
                "javascript",
                "arrays",
                "oop",
                "arguments"
            ],
            "title": "What is &quot;undefined x 1&quot; in JavaScript?"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>set your for loop counter to 0.... you're getting element 9 and then you're done as you have it now. The other answers are basic math. Use a variable to store your sum (need to cast the strings to ints), and divide by your array length.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var sum = 0;\nfor( var i = 0; i &lt; elmt.length; i++ ){\n    sum += parseInt( elmt[i], 10 ); //don't forget to add the base\n}\n\nvar avg = sum/elmt.length;\n\ndocument.write( \"The sum of all the elements is: \" + sum + \" The average is: \" + avg );\n</code></pre>\n\n<p>Just iterate through the array, since your values are strings, they have to be converted to an integer first. And average is just the sum of values divided by the number of values.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Start by defining all of the variables we plan on using. You'll note that for the <code>numbers</code> array, I'm using the literal notation of <code>[]</code> as opposed to the constructor method <code>array()</code>. Additionally, I'm using a shorter method to set multiple variables to 0.</p>\n\n<pre><code>var numbers = [], count = sum = avg = 0;\n</code></pre>\n\n<p>Next I'm populating my empty numbers array with the values 0 through 11. This is to get me to your original starting point. Note how I'm pushing onto the array <code>count++</code>. This pushing the current value of count, and then increments it for the next time around.</p>\n\n<pre><code>while ( count &lt; 12 )\n    numbers.push( count++ );\n</code></pre>\n\n<p>Lastly, I'm performing a function \"for each\" of the numbers in the numbers array. This function will handle one number at a time, which I'm identifying as \"n\" within the function body.</p>\n\n<pre><code>numbers.forEach(function(n){\n  sum += n; \n  avg = sum / numbers.length;\n});\n</code></pre>\n\n<p>In the end, we can output both the <code>sum</code> value, and the <code>avg</code> value to our console in order to see the result:</p>\n\n<pre><code>// Sum: 66, Avg: 5.5\nconsole.log( 'Sum: ' + sum + ', Avg: ' + avg );\n</code></pre>\n\n<p>See it in action online at <a href=\"http://jsbin.com/unukoj/3/edit\" rel=\"nofollow\">http://jsbin.com/unukoj/3/edit</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A solution I consider more elegant:</p>\n\n<pre><code>var sum = times.reduce(function(a, b) { return a + b; });\nvar avg = sum / times.length;\n\ndocument.write(\"The sum is: \" + sum + \". The average is: \" + avg + \"&lt;br/&gt;\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 115
                },
                {
                    "body": "<p>One sneaky way you could do it although it does require the use of (the much hated) eval().</p>\n\n<pre><code>var sum = eval(elmt.join('+')), avg = sum / elmt.length;\ndocument.write(\"The sum of all the elements is: \" + sum + \" The average of all the elements is: \" + avg + \"&lt;br/&gt;\");\n</code></pre>\n\n<p>Just thought I'd post this as one of those 'outside the box' options. You never know, the slyness might grant you (or taketh away) a point.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Add extension to Array Class: </p>\n\n<pre><code>Array.prototype.average=function(){\n    var sum=0;\n    var j=0;\n    for(var i=0;i&lt;this.length;i++){\n        if(isFinite(this[i])){\n          sum=sum+parseFloat(this[i]);\n           j++;\n        }\n    }\n    if(j===0){\n        return 0;\n    }else{\n        return sum/j;\n    }\n\n}\n</code></pre>\n\n<p>Then , do your tests : </p>\n\n<pre><code>[3,5].average();\n</code></pre>\n\n<p>== 4</p>\n\n<pre><code>[\"4\",\"5\"].average();\n</code></pre>\n\n<p>== 4.5\nIf it is String and can be converted to number , it will be included in average</p>\n\n<pre><code>[\"RER\",\"4\",\"3re\",5,new Object()].average();\n</code></pre>\n\n<p>== 4.5 </p>\n\n<p>Because only \"4\" &amp; 5 can be included in  average . </p>\n\n<p><strong>UPDATE:</strong></p>\n\n<pre><code>Array.prototype.average = function () {\n    var sum = 0, j = 0; \n   for (var i = 0; i &lt; this.length, isFinite(this[i]); i++) { \n          sum += parseFloat(this[i]); ++j; \n    } \n   return j ? sum / j : 0; \n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Just for kicks:</p>\n\n<pre><code>var elmt = [0, 1, 2,3, 4, 7, 8, 9, 10, 11], l = elmt.length, i = -1, sum = 0;\nfor (; ++i &lt; l; sum += elmt[i])\n    ;\ndocument.body.appendChild(document.createTextNode('The sum of all the elements is: ' + sum + ' The average of all the elements is: ' + (sum / l)));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Simple code may looks like:</p>\n\n<pre><code>var sum = eval(\"parseInt(\" + elmt.join(\") + parseInt(\") + \");\");\nvar avg = sum / elmt.length;\n\ndocument.write(\"The sum of all the elements is: \" + sum + \" The average of all the elements is: \" + avg + \"&lt;br/&gt;\");\n</code></pre>\n\n<p>If you need summary of floating point numbers use <code>parseFloat</code> instead <code>parseInt</code>.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Not the fastest, but the shortest and in one line is using map() &amp; reduce():</p>\n\n<pre><code>var average = [7,14,21].map(function(x,i,arr){return x/arr.length}).reduce(function(a,b){return a + b})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>generally average using one-liner reduce is like this</p>\n\n<pre><code>elements.reduce(function(sum, a,i,ar) { sum += a;  return i==ar.length-1?(ar.length==0?0:sum/ar.length):sum},0);\n</code></pre>\n\n<p>specifically to question asked</p>\n\n<pre><code>elements.reduce(function(sum, a,i,ar) { sum += parseFloat(a);  return i==ar.length-1?(ar.length==0?0:sum/ar.length):sum},0);\n</code></pre>\n\n<p>an efficient version is like</p>\n\n<pre><code>elements.reduce(function(sum, a) { return sum + a },0)/(elements.length!=0?elements.length:1);\n</code></pre>\n\n<p>Understand Javascript Array Reduce in 1 Minute\n<a href=\"http://www.airpair.com/javascript/javascript-array-reduce\" rel=\"nofollow\">http://www.airpair.com/javascript/javascript-array-reduce</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<h2>Average of HTML content itens</h2>\n\n<p>With jQuery or Javascript's <code>querySelector</code> you have direct acess to formated data...  Example:</p>\n\n<pre><code>&lt;p&gt;Elements for an average: &lt;span class=\"m\"&gt;2&lt;/span&gt;, &lt;span class=\"m\"&gt;4&lt;/span&gt;,\n   &lt;span class=\"m\"&gt;2&lt;/span&gt;, &lt;span class=\"m\"&gt;3&lt;/span&gt;.\n&lt;/p&gt;\n</code></pre>\n\n<p>So, with jQuery you have </p>\n\n<pre><code>var A = $('.m')\n  .map(function(idx) { return  parseInt($(this).html()) })\n  .get();\nvar AVG = A.reduce(function(a,b){return a+b}) / A5.length;\n</code></pre>\n\n<p>See other more 4 ways (!) to access itens and average it: <a href=\"http://jsfiddle.net/4fLWB/\" rel=\"nofollow\">http://jsfiddle.net/4fLWB/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is an elegant little solution for the average of an array it is very inefficient but has very specific applications:</p>\n\n<pre><code>var average = elmt.reduce(function(x,y,z){\n   return ((x * z) + y) / (z + 1);  \n});\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\" rel=\"nofollow\">Docs for the \"reduce\" method</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I am just building on Abdennour TOUMI's answer.  here are the reasons why:</p>\n\n<p>1.) I agree with Brad, I do not think it is a good idea to extend object that we did not create.</p>\n\n<p>2.) <code>array.length</code> is exactly reliable in javascript, I prefer <code>Array.reduce</code> beacuse <code>a=[1,3];a[1000]=5;</code> , now <code>a.length</code> would return <code>1001</code>.</p>\n\n<pre><code>function getAverage(arry){\n    // check if array\n    if(!(Object.prototype.toString.call(arry) === '[object Array]')){\n        return 0;\n    }\n    var sum = 0, count = 0; \n    sum = arry.reduce(function(previousValue, currentValue, index, array) {\n        if(isFinite(currentValue)){\n            count++;\n            return previousValue+ parseFloat(currentValue);\n        }\n        return previousValue;\n    }, sum);\n    return count ? sum / count : 0; \n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I use these methods in my personal library:</p>\n\n<pre><code>Array.prototype.sum = Array.prototype.sum || function() {\n  return this.reduce(function(sum, a) { return sum + Number(a) }, 0);\n}\n\nArray.prototype.average = Array.prototype.average || function() {\n  return this.sum() / (this.length || 1);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am having problems adding all the elements of an array as well as averaging them out. How would I do this and implement it with the code I currently have? The elements are supposed to be defined as I have it below. </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n//&lt;![CDATA[\n\nvar i;\nvar elmt = new Array();\n\nelmt[0] = \"0\";\nelmt[1] = \"1\";\nelmt[2] = \"2\";\nelmt[3] = \"3\";\nelmt[4] = \"4\";\nelmt[5] = \"7\";\nelmt[6] = \"8\";\nelmt[7] = \"9\";\nelmt[8] = \"10\";\nelmt[9] = \"11\";\n\n// problem here\nfor (i = 9; i &lt; 10; i++)\n{\n    document.write(\"The sum of all the elements is: \" + /* problem here */ + \" The average of all the elements is: \" + /* problem here */ + \"&lt;br/&gt;\");\n}   \n\n//]]&gt;\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1424660052,
            "question_id": 10359907,
            "score": 18,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "Array Sum and Average"
        }
    ]
}
