{
    "items": [
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If your date format is fixed as <code>M/D/YYYY</code>, you could re-format the parsed date and see if it matches the input:</p>\n\n<pre><code>var d = new Date(Date.parse(str))\nreturn str === (d.getMonth()+1)+'/'+d.getDate()+'/'+d.getYear();\n</code></pre>\n\n<p>However, that won't tolerate whitespace or zero-padded numbers.</p>\n\n<p>If you don't need to keep the user's input exactly, you could just reformat the date anyway and pretend that was what they typed.</p>\n\n<p>But if you can't do that either, I'd parse out the components myself using a RegExp and then compare them to values from the <code>Date</code> methods.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To check if a date is valid you can parse the components of the date, create a <code>Date</code> object from it, and check if the components in the data is the same as the parsed components. If you create a <code>Date</code> object from compnents that are out of range, the values will flow over to the next/previous period to create a valid date.</p>\n\n<p>For example, <code>new Date(2011,0,42)</code> will create an object that contains the date 2/11/2011 instead of 1/42/2011.</p>\n\n<p>By parsing the components instead of the full date you will also get around the problem with different date formats. My browser will for example expect a date format like <code>y-m-d</code> rather than <code>d/m/y</code>.</p>\n\n<p>Example:</p>\n\n<pre><code>var text = '2/30/2011';\nvar comp = text.split('/');\nvar m = parseInt(comp[0], 10);\nvar d = parseInt(comp[1], 10);\nvar y = parseInt(comp[2], 10);\nvar date = new Date(y,m-1,d);\nif (date.getFullYear() == y &amp;&amp; date.getMonth() + 1 == m &amp;&amp; date.getDate() == d) {\n  alert('Valid date');\n} else {\n  alert('Invalid date');\n}\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/Guffa/UeQAK/\">http://jsfiddle.net/Guffa/UeQAK/</a></p>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>You could write a script to do this manually:</p>\n\n<pre><code>function checkDate(day, month) {\n   if (month = 4 || month = 6 || month = 9 || month = 11 &amp;&amp; day &lt; 30) {\n       alert(\"Date is valid\")\n   }\n   else if (month = 2 &amp;&amp; day =&lt; 28) {\n       alert(\"Date is valid\")\n   }\n   else if (month = 1 || month = 3 || month = 5 || month = 7 || month = 8 || month = 10 || month = 12 &amp;&amp; day =&lt; 31) {\n       alert(\"Date is valid\")\n   }\n   else {\n       alert(\"Date is in-valid\")\n   }\n}\n</code></pre>\n\n<p>OFC you would also need something to look out for leap years, but just remember that any year divisible by 4 and not by 100 is a leap year unless the first two digits of the year are divisible by 4. That should be easy to include in this function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/1353684/detecting-an-invalid-date-date-instance-in-javascript\">Detecting an &ldquo;invalid date&rdquo; Date instance in JavaScript</a>  </p>\n</blockquote>\n\n\n\n<p>I was using the following to detect a valid date:</p>\n\n<pre><code>var text = $('#Date').val();\nvar date = Date.parse(text);\n\nif (isNaN(date)) {\n      // Invalid date\n}\n</code></pre>\n\n<p>But found that Date.parse thinks the following are valid dates (mm/dd/yyyy)</p>\n\n<ul>\n<li>2/30/2011 </li>\n<li>11/31/2011</li>\n</ul>\n\n<p>Any other way to detect invalid dates when the number of days surpasses the total number of \ndays in the month?</p>\n\n<p>UPDATE: An even larger problem is that the jQuery validation plugin doesn't detect this as an invalid date either!</p>\n\n<p>SOLUTION:</p>\n\n<p>Based on @Guffa's comments I have created the following function to validate dates:</p>\n\n<pre><code>function validDate(text) {\n\n    var date = Date.parse(text);\n\n    if (isNaN(date)) {\n        return false;\n    }\n\n    var comp = text.split('/');\n\n    if (comp.length !== 3) {\n        return false;\n    }\n\n    var m = parseInt(comp[0], 10);\n    var d = parseInt(comp[1], 10);\n    var y = parseInt(comp[2], 10);\n    var date = new Date(y, m - 1, d);\n    return (date.getFullYear() == y &amp;&amp; date.getMonth() + 1 == m &amp;&amp; date.getDate() == d);\n}\n</code></pre>\n",
            "last_activity_date": 1382347160,
            "question_id": 8098202,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "date",
                "jquery-validate"
            ],
            "title": "JavaScript Detecting Valid Dates"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>For those who do not understand the recursion problem the OP presents, here is an example:</p>\n\n<pre><code>function A () {}\nA.prototype.foo = function (n) {\n    return n;\n};\n\nfunction B () {}\nB.prototype = new A();\nB.prototype.constructor = B;\nB.prototype.$super = A.prototype;\nB.prototype.foo = function (n) {\n    if (n &gt; 100) return -1;\n    return this.$super.foo.call(this, n+1);\n};\n\nfunction C () {}\nC.prototype = new B();\nC.prototype.constructor = C;\nC.prototype.$super = B.prototype;\nC.prototype.foo = function (n) {\n    return this.$super.foo.call(this, n+2);\n};\n\n\nalert(new C().foo(0)); // alerts -1, not 3\n</code></pre>\n\n<p>The reason: <code>this</code> in Javascript is dynamically bound. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>John Resig posted an ineherence mechanism with simple but great <code>super</code> support.\nThe only difference is that <code>super</code> points to the base method from where you are calling it.</p>\n\n<p>Take a look at <a href=\"http://ejohn.org/blog/simple-javascript-inheritance/\">http://ejohn.org/blog/simple-javascript-inheritance/</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Have a look at the <a href=\"http://classy.pocoo.org/\" rel=\"nofollow\"><em>Classy</em></a> library; it provides classes and inheritance and access to an overridden method using <code>this.$super</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>I don't think there is a \"free\" way out of the \"recursive super\" problem you mention.</strong></p>\n\n<p>We can't mess with the <code>this</code> because doing so would either force us to change prototypes in a nonstandard way, or move us up the proto chain, losing instance variables. Therefore the \"current class\" and \"super class\" must be known when we do the super-ing, without passing that responsibility to <code>this</code> or one of its properties.</p>\n\n<p>There are many some things we could try doing but all I can think have some undesireable consequences:</p>\n\n<ul>\n<li>Add super info to the functions at creation time, access it using arguments.calee or similar evilness.</li>\n<li><p>Add extra info when calling the super method</p>\n\n<pre><code>$super(CurrentClass).method.call(this, 1,2,3)\n</code></pre>\n\n<p>This forces us to duplicate the current class name (so we can look up its superclass in some super dictionary) but at least it isn't as bad as having to duplicate the superclass name, (since coupling against the inheritance relationships if worse then the inner coupling with a class' own name)</p>\n\n<pre><code>//Normal Javascript needs the superclass name\nSuperClass.prototype.method.call(this, 1,2,3);\n</code></pre>\n\n<p>While this is far from ideal, there is at least some historical precedent from <a href=\"http://docs.python.org/library/functions.html#super\">2.x Python</a>. (They \"fixed\" super for 3.0 so it doesn't require arguments anymore, but I am not sure how much magic that involved and how portable it would be to JS)</p></li>\n</ul>\n\n<hr>\n\n<p>Edit: Working <a href=\"http://jsfiddle.net/missingno/wAHqd/\">fiddle</a></p>\n\n<pre><code>var superPairs = [];\n// An association list of baseClass -&gt; parentClass\n\nvar injectSuper = function (parent, child) {\n    superPairs.push({\n        parent: parent,\n        child: child\n    });\n};\n\nfunction $super(baseClass, obj){\n    for(var i=0; i &lt; superPairs.length; i++){\n        var p = superPairs[i];\n        if(p.child === baseClass){\n            return p.parent;\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Note that for the following implementation, when you are inside a method that is invoked via <code>$super</code>, access to properties while working in the parent class never resolve to the child class's methods or variables, unless you access a member that is stored directly on the object itself (as opposed to attached to the prototype). This avoids a slew of confusion (read as subtle bugs).</p>\n\n<p>Update:\nHere is an implementation that works without <code>__proto__</code>. The catch is that using <code>$super</code> is linear in the number of properties the parent object has.</p>\n\n<pre><code>function extend (Child, prototype, /*optional*/Parent) {\n    if (!Parent) {\n        Parent = Object;\n    }\n    Child.prototype = Object.create(Parent.prototype);\n    Child.prototype.constructor = Child;\n    for (var x in prototype) {\n        if (prototype.hasOwnProperty(x)) {\n            Child.prototype[x] = prototype[x];\n        }\n    }\n    Child.prototype.$super = function (propName) {\n        var prop = Parent.prototype[propName];\n        if (typeof prop !== \"function\") {\n            return prop;\n        }\n        var self = this;\n        return function () {\n            var selfPrototype = self.constructor.prototype;\n            var pp = Parent.prototype;\n            for (var x in pp) {\n                self[x] = pp[x];\n            }\n            try {\n                return prop.apply(self, arguments);\n            }\n            finally {\n                for (var x in selfPrototype) {\n                    self[x] = selfPrototype[x];\n                }\n            }\n        };\n    };\n}\n</code></pre>\n\n<p>The following implementation is for browsers that support the <code>__proto__</code> property:</p>\n\n<pre><code>function extend (Child, prototype, /*optional*/Parent) {\n    if (!Parent) {\n        Parent = Object;\n    }\n    Child.prototype = Object.create(Parent.prototype);\n    Child.prototype.constructor = Child;\n    for (var x in prototype) {\n        if (prototype.hasOwnProperty(x)) {\n            Child.prototype[x] = prototype[x];\n        }\n    }\n    Child.prototype.$super = function (propName) {\n        var prop = Parent.prototype[propName];\n        if (typeof prop !== \"function\") {\n            return prop;\n        }\n        var self = this;\n        return function (/*arg1, arg2, ...*/) {\n            var selfProto = self.__proto__;\n            self.__proto__ = Parent.prototype;\n            try {\n                return prop.apply(self, arguments);\n            }\n            finally {\n                self.__proto__ = selfProto;\n            }\n        };\n    };\n}\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>function A () {}\nextend(A, {\n    foo: function () {\n        return \"A1\";\n    }\n});\n\nfunction B () {}\nextend(B, {\n    foo: function () {\n        return this.$super(\"foo\")() + \"_B1\";\n    }\n}, A);\n\nfunction C () {}\nextend(C, {\n    foo: function () {\n        return this.$super(\"foo\")() + \"_C1\";\n    }\n}, B);\n\n\nvar c = new C();\nvar res1 = c.foo();\nB.prototype.foo = function () {\n    return this.$super(\"foo\")() + \"_B2\";\n};\nvar res2 = c.foo();\n\nalert(res1 + \"\\n\" + res2);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The main difficulty with <code>super</code> is that you need to find what I call <code>here</code>: the object that contains the method that makes the super reference. That is absolutely necessary to get the semantics right. Obviously, having the prototype of <code>here</code> is just as good, but that doesn\u2019t make much of a difference. The following is a static solution:</p>\n\n<pre><code>// Simulated static super references (as proposed by Allen Wirfs-Brock)\n// http://wiki.ecmascript.org/doku.php?id=harmony:object_initialiser_super\n\n//------------------ Library\n\nfunction addSuperReferencesTo(obj) {\n    Object.getOwnPropertyNames(obj).forEach(function(key) {\n        var value = obj[key];\n        if (typeof value === \"function\" &amp;&amp; value.name === \"me\") {\n            value.super = Object.getPrototypeOf(obj);\n        }\n    });\n}\n\nfunction copyOwnFrom(target, source) {\n    Object.getOwnPropertyNames(source).forEach(function(propName) {\n        Object.defineProperty(target, propName,\n            Object.getOwnPropertyDescriptor(source, propName));\n    });\n    return target;\n};\n\nfunction extends(subC, superC) {\n    var subProto = Object.create(superC.prototype);\n    // At the very least, we keep the \"constructor\" property\n    // At most, we preserve additions that have already been made\n    copyOwnFrom(subProto, subC.prototype);\n    addSuperReferencesTo(subProto);\n    subC.prototype = subProto;\n};\n\n//------------------ Example\n\nfunction A(name) {\n    this.name = name;\n}\nA.prototype.method = function () {\n    return \"A:\"+this.name;\n}\n\nfunction B(name) {\n    A.call(this, name);\n}\n// A named function expression allows a function to refer to itself\nB.prototype.method = function me() {\n    return \"B\"+me.super.method.call(this);\n}\nextends(B, A);\n\nvar b = new B(\"hello\");\nconsole.log(b.method()); // BA:hello\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://jsfiddle.net/8W8Pe/2/\" rel=\"nofollow\">JsFiddle</a>:</p>\n\n<p>What is wrong with this?</p>\n\n<pre><code>'use strict';\n\nfunction Class() {}\nClass.extend = function (constructor, definition) {\n    var key, hasOwn = {}.hasOwnProperty, proto = this.prototype, temp, Extended;\n\n    if (typeof constructor !== 'function') {\n        temp = constructor;\n        constructor = definition || function () {};\n        definition = temp;\n    }\n    definition = definition || {};\n\n    Extended = constructor;\n    Extended.prototype = new this();\n\n    for (key in definition) {\n        if (hasOwn.call(definition, key)) {\n            Extended.prototype[key] = definition[key];\n        }\n    }\n\n    Extended.prototype.constructor = Extended;\n\n    for (key in this) {\n        if (hasOwn.call(this, key)) {\n            Extended[key] = this[key];\n        }\n    }\n\n    Extended.$super = proto;\n    return Extended;\n};\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var A = Class.extend(function A () {}, {\n    foo: function (n) { return n;}\n});\nvar B = A.extend(function B () {}, {\n    foo: function (n) {\n        if (n &gt; 100) return -1;\n        return B.$super.foo.call(this, n+1);\n    }\n});\nvar C = B.extend(function C () {}, {\n    foo: function (n) {\n        return C.$super.foo.call(this, n+2);\n    }\n});\n\nvar c = new C();\ndocument.write(c.foo(0) + '&lt;br&gt;'); //3\nA.prototype.foo = function(n) { return -n; };\ndocument.write(c.foo(0)); //-3\n</code></pre>\n\n<p>Example usage with privileged methods instead of public methods.</p>\n\n<pre><code>var A2 = Class.extend(function A2 () {\n    this.foo = function (n) {\n        return n;\n    };\n});\nvar B2 = A2.extend(function B2 () {\n    B2.$super.constructor();\n    this.foo = function (n) {\n        if (n &gt; 100) return -1;\n        return B2.$super.foo.call(this, n+1);\n    };\n});\nvar C2 = B2.extend(function C2 () {\n    C2.$super.constructor();\n    this.foo = function (n) {\n        return C2.$super.foo.call(this, n+2);\n    };\n});\n\n//you must remember to constructor chain\n//if you don't then C2.$super.foo === A2.prototype.foo\n\nvar c = new C2();\ndocument.write(c.foo(0) + '&lt;br&gt;'); //3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think I have a more simple way....</p>\n\n<pre><code>function Father(){\n  this.word = \"I'm the Father\";\n\n  this.say = function(){\n     return this.word; // I'm the Father;\n  }\n}\n\nfunction Sun(){\n  Father.call(this); // Extend the Father\n\n  this.word = \"I'm the sun\"; // Override I'm the Father;\n\n  this.say = function(){ // Override I'm the Father;\n    this.word = \"I was changed\"; // Change the word;\n    return new Father().say.apply(this); // Call the super.say()\n  }\n}\n\nvar a = new Father();\nvar b = new Sun();\n\na.say() // I'm the father\nb.ay() // I'm the sun\nb.say() // I was changed\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>In the spirit of completeness (also thank you everyone for this thread it has been an excellent point of reference!) I wanted to toss in this implementation.</p>\n\n<p>If we are admitting that there is no good way of meeting all of the above criteria, then I think this is  a valiant effort by the Salsify team (I just found it) <a href=\"http://blog.salsify.com/engineering/super-methods-in-javascript\" rel=\"nofollow\">found here</a>. This is the only implementation I've seen that avoids the recursion problem but also lets <code>.super</code> be a reference to the correct prototype, without pre-compilation.</p>\n\n<p>So instead of breaking criteria 1, we break 5.</p>\n\n<p>the technique hinges on using <code>Function.caller</code> (not es5 compliant, though it is extensively supported in browsers and es6 removes future need), but it gives really elegant solution to all the other issues (I think). <code>.caller</code> lets us get the method reference which lets us locate where we are in the prototype chain, and uses a <code>getter</code> to return the correct prototype. Its not perfect but it is widely different solution than what I've seen in this space</p>\n\n<pre><code>var Base = function() {};\n\nBase.extend = function(props) {\n  var parent = this, Subclass = function(){ parent.apply(this, arguments) };\n\n    Subclass.prototype = Object.create(parent.prototype);\n\n    for(var k in props) {\n        if( props.hasOwnProperty(k) ){\n            Subclass.prototype[k] = props[k]\n            if(typeof props[k] === 'function')\n                Subclass.prototype[k]._name = k\n        }\n    }\n\n    for(var k in parent) \n        if( parent.hasOwnProperty(k)) Subclass[k] = parent[k]        \n\n    Subclass.prototype.constructor = Subclass\n    return Subclass;\n};\n\nObject.defineProperty(Base.prototype, \"super\", {\n  get: function get() {\n    var impl = get.caller,\n        name = impl._name,\n        foundImpl = this[name] === impl,\n        proto = this;\n\n    while (proto = Object.getPrototypeOf(proto)) {\n      if (!proto[name]) break;\n      else if (proto[name] === impl) foundImpl = true;\n      else if (foundImpl)            return proto;\n    }\n\n    if (!foundImpl) throw \"`super` may not be called outside a method implementation\";\n  }\n});\n\nvar Parent = Base.extend({\n  greet: function(x) {\n    return x + \" 2\";\n  }\n})\n\nvar Child = Parent.extend({\n  greet: function(x) {\n    return this.super.greet.call(this, x + \" 1\" );\n  }\n});\n\nvar c = new Child\nc.greet('start ') // =&gt; 'start 1 2'\n</code></pre>\n\n<p>you can also adjust this to return the correct method (as in the original post) or you can remove the need to annotate each method with the name, by passing in the name to a super function (instead of using a getter)</p>\n\n<p>here is a working fiddle demonstrating the technique: <a href=\"http://jsfiddle.net/pfxP5/919/\" rel=\"nofollow\">jsfiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Basically is there a good elegant mechanism to emulate <code>super</code> with syntax that is as simple as one of the following</p>\n\n<ul>\n<li><code>this.$super.prop()</code> </li>\n<li><code>this.$super.prop.apply(this, arguments);</code></li>\n</ul>\n\n<p>Criteria to uphold are :</p>\n\n<ol>\n<li><code>this.$super</code> must be a reference to the prototype. i.e. if I change the super prototype at run-time this change will be reflected. This basically means it the parent has a new property then this should be shown at run-time on all children through <code>super</code> just like a hard coded reference to the parent would reflect changes</li>\n<li><code>this.$super.f.apply(this, arguments);</code> must work for recursive calls. For any chained set of inheritance where multiple super calls are made as you go up the inheritance chain, you must not hit the recursive problem.</li>\n<li>You must not hardcode references to super objects in your children. I.e. <code>Base.prototype.f.apply(this, arguments);</code> defeats the point.</li>\n<li>You must not use a X to JavaScript compiler or JavaScript preprocessor.</li>\n<li>Must be ES5 compliant</li>\n</ol>\n\n<p>The naive implementation would be something like this.</p>\n\n<pre><code>var injectSuper = function (parent, child) {\n  child.prototype.$super = parent.prototype;\n};\n</code></pre>\n\n<p>But this <a href=\"http://jsfiddle.net/cMJ6D/3/\">breaks condition 2</a>.</p>\n\n<p>The most elegant mechanism I've seen to date is <a href=\"https://github.com/BonsaiDen/Project-Iar/blob/master/Class.js\">IvoWetzel's <code>eval</code> hack</a>, which is pretty much a JavaScript preprocessor and thus fails criteria 4.</p>\n",
            "last_activity_date": 1417115897,
            "question_id": 8032566,
            "score": 22,
            "tags": [
                "javascript",
                "oop",
                "super"
            ],
            "title": "Emulate super in javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Yes, JavaScript has \"short-circuit\" evaluation.</p>\n\n<pre><code>if (true == true || foo.foo){\n    // Passes, no errors because foo isn't defined.\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/NLvbY/\"><strong>Live DEMO</strong></a></p>\n\n<pre><code>if (false &amp;&amp; foo.foo){\n    // Passes, no errors because foo isn't defined.\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/NLvbY/1/\"><strong>Live DEMO</strong></a></p>\n",
                    "is_accepted": true,
                    "score": 30
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/5049006/using-s-short-circuiting-as-an-if-statement\">Using &amp;&amp;&#39;s short-circuiting as an if statement?</a><br>\n  <a href=\"http://stackoverflow.com/questions/7858787/does-javascript-use-optimization-in-boolean-expressions\">Does javascript use optimization in boolean expressions?</a>  </p>\n</blockquote>\n\n\n\n<p>I would like to know if <code>JavaScript</code> has <em>\"Short-circuit\" evaluation</em> like &amp;&amp; Operator in C#.   If not I would like to know if there is a workaround that makes sense to adopt.</p>\n",
            "last_activity_date": 1395355175,
            "question_id": 12554578,
            "score": 21,
            "tags": [
                "javascript",
                "short-circuiting"
            ],
            "title": "Does JavaScript have &quot;Short-circuit&quot; evaluation"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No. Search engines (at least Google) don't run javascript. In fact, a way of seeing how the search engines see your page is by disabling javascript and images.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The answer is <strong>No</strong>. Having less JavaScript DOM Manipulation and less flash contents at your site is something that is encourages. AMAIK when a robot visits your a page of your site, it doesn't execute the script of that page and indexes what it get at first shot :)\nAnyway, there is a good article about SEO at <a href=\"http://thoughtresults.com/seo\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Google Site Search isn't able to index content contained in JavaScript.\nsource \n<a href=\"http://www.google.com/support/customsearch/bin/answer.py?answer=72366\" rel=\"nofollow\">http://www.google.com/support/customsearch/bin/answer.py?answer=72366</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Search Engine Spiders are basic browsers, which have functionality just to parse your html content. So basically if you add links or content using JavaScript than SES wont be able to get it.</p>\n\n<p>It's known that JavaScript is unfriendly to SES.</p>\n\n<p>There are SES which use JavaScript parser and they are able to execute just simple javascript.</p>\n\n<p>SES - Search Engine Spider.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Despite what is being stated here in other answers and totally <a href=\"http://www.google.com/support/customsearch/bin/answer.py?answer=72366\">contrary to Google's own FAQ</a>, a Google employee named JohnMu answered a question recently in Google Groups about how the GoogleBot came to follow a non-existent URL.  (The actual URL was contained within the jQuery code itself and the <strong>GoogleBot DID try to follow it</strong>.)</p>\n\n<p><a href=\"http://stackoverflow.com/questions/5749348/jquery-causing-404-errors-in-webmaster-tools-on-a-directory\">jQuery causing 404 errors in Google Webmaster Tools</a></p>\n\n<p><a href=\"http://www.google.com/support/forum/p/Webmasters/thread?fid=3102f0a5f6e219ac0004a1f75422344b&amp;hl=en\">Google Employee explains how JavaScript and jQuery are indexed</a></p>\n\n<p>Apparently, Google does attempt to index your JavaScript.</p>\n\n<p><strong>Quote Google's JohnMu:</strong></p>\n\n<blockquote>\n  <p>\"I would also recommend not explicitly\n  disallowing crawling of the jQuery\n  file. While we generally wouldn't\n  index it on its own, <strong>we may need to\n  access it to generate good Instant\n  Previews</strong> for your site.\"</p>\n</blockquote>\n\n<p>JohnMu later in the same thread...</p>\n\n<blockquote>\n  <p>\"Additionally, we're constantly <strong>working\n  on improving processing of JavaScript\n  for web-search in general</strong>, so if you\n  use jQuery to pull in content, and the\n  jQuery script is disallowed for\n  Googlebot, then we would not be able\n  to look at that at all.\"</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>I currently have something like this</p>\n\n<pre><code>&lt;p class=\"test\"&gt;&lt;/p&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function() {\n          $(\".test\").html(\"hey\");\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>Will search engines be able to spider the \"hey\" text? and if yes, what method can I use to prevent that.</p>\n",
            "last_activity_date": 1351696448,
            "question_id": 6586934,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "search-engine"
            ],
            "title": "Can search engine spiders see content I add using jQuery?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>focus and blur events do not bubble</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I can't list all the events that do not bubble. </p>\n\n<p>But I find a good site that can help you to check if the events can bubble or not.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/event.bubbles\">@MDN event.bubbles</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Any events specific to one element do not bubble: submit, focus, blur, load, unload, change, reset, scroll, most of the DOM events (DOMFocusIn, DOMFocusOut, DOMNodeRemoved, etc), mouseenter, mouseleave, etc</p>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>Most events bubble in all browsers. However, I know that in Internet Explorer \"submit\" events do not bubble. What are the other events that do not bubble?</p>\n",
            "last_activity_date": 1423544992,
            "question_id": 5574207,
            "score": 21,
            "tags": [
                "javascript",
                "html",
                "dom",
                "javascript-events"
            ],
            "title": "HTML DOM: Which events do not bubble?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Here was his solution:</p>\n\n<pre><code>$(\".box-clone\").live('mouseover', function() {\n    $(this).draggable({ \n        axis: 'y',\n        containment: 'html'\n    });\n});\n$(\".box\").draggable({ \n    axis: 'y',\n    containment: 'html',\n    helper: 'clone'\n    stop: function(event, ui) {\n        $(ui.helper).clone(true).removeClass('box ui-draggable ui-draggable-dragging').addClass('box-clone').appendTo('body');\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is what I finally did that worked: </p>\n\n<pre><code>$(\".box-clone\").live('mouseover', function() {\n    $(this).draggable({ \n        axis: 'y',\n        containment: 'html'\n    });\n});\n$(\".box\").draggable({ \n    axis: 'y',\n    containment: 'html',\n    helper: 'clone',\n    stop: function(event, ui) {\n        $(ui.helper).clone(true).removeClass('box ui-draggable ui-draggable-dragging').addClass('box-clone').appendTo('body');\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>If you're tring to move elements (say &lt;li/&gt;) from a #source &lt;ul/&gt; to a #destination &lt;ul/&gt;, and you'd like them to clone (as opposed to move), and still be sortable on the right, I found this solution:</p>\n\n<pre><code>$(function() {\n\n    $(\"#source li\").draggable({\n        connectToSortable: '#destination',\n        helper: 'clone'\n    })\n\n    $(\"#destination\").sortable();\n\n  });\n</code></pre>\n\n<p>I know it seems ultra simple, but it worked for me! :)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here is how I got it working:\nPS: 'marker' is the object to drag and 'map' is the destination container.</p>\n\n<pre><code>$(document).ready(function() {\n    //source flag whether the drag is on the marker tool template\n    var template = 0;\n    //variable index\n    var j = 0;\n    $(\".marker\").draggable({\n        helper: 'clone',\n        snap: '.map',\n        start: function(event, ui) {\n            //set the marker tool template\n            template = 1;\n        }\n    });\n    $(\".map\").droppable({\n        accept: \".marker\",\n        drop: function(event, ui) {\n            $(this).find('.map').remove();\n            var item = $(ui.helper);\n            var objectid = item.attr('id');\n            //if the drag is on the marker tool template\n            if (template == 1) {\n                var cloned = $(item.clone());\n                cloned.attr('id', 'marker' + j++);\n                objectid = cloned.attr('id');\n                cloned.draggable({\n                    containment: '.map',\n                    cursor: 'move',\n                    snap: '.map',\n                    start: function(event, ui) {\n                        //Reset the drag source flag \n                        template = 0;\n                    }\n                });\n                cloned.bind(\"contextmenu\", function(e) {\n                    cloned.remove();\n                    return false;\n                });\n                $(this).append(cloned);\n            }\n            i++;\n            var offsetXPos = parseInt(ui.offset.left - $(this).offset().left);\n            var offsetYPos = parseInt(ui.offset.top - $(this).offset().top);\n            alert(\"Dragged \" + objectid + \" to (\" + offsetXPos + \",\" + offsetYPos + \")\");\n        }\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a div, which has jQuery UI Draggable applied.  What I want to do, is click and drag that, and create a clone that is kept in the dom and not removed when dropped. </p>\n\n<p>Think of a deck of cards, my box element is the deck, and I want to pull cards/divs off that deck and have them laying around my page, but they would be clones of the original div.  I just want to make sure that you cannot create another clone of one of the cloned divs.</p>\n\n<p>I have used the following, which didn't work like I wanted:</p>\n\n<pre><code>$(\".box\").draggable({ \n        axis: 'y',\n        containment: 'html',\n        start: function(event, ui) {\n            $(this).clone().appendTo('body');\n        }\n});\n</code></pre>\n\n<p>I figured out my solution:</p>\n\n<pre><code>$(\".box-clone\").live('mouseover', function() {\n    $(this).draggable({ \n        axis: 'y',\n        containment: 'html'\n    });\n});\n$(\".box\").draggable({ \n    axis: 'y',\n    containment: 'html',\n    helper: 'clone'\n    stop: function(event, ui) {\n        $(ui.helper).clone(true).removeClass('box ui-draggable ui-draggable-dragging').addClass('box-clone').appendTo('body');\n    }\n});\n</code></pre>\n",
            "last_activity_date": 1363740351,
            "question_id": 2458817,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "interface",
                "clone"
            ],
            "title": "jQuery UI: Drag and clone from original div, but keep clones"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Move the function outside the loop:</p>\n\n<pre><code>function dummy() {\n    return this.name_;\n}\n// Or: var dummy = function() {return this.name;};\nfor (var i = 0; i&lt;processorList.length; ++i) {\n   result[i] = {\n       processor_: timestampsToDateTime(processorList[i]),\n       name_: processorList[i].processorName,\n       getLabel: dummy\n   };\n}\n</code></pre>\n\n<p>... Or just ignore the message by using the <a href=\"http://www.jshint.com/docs/options/#loopfunc\"><code>loopfunc</code> option</a>:</p>\n\n<pre><code>/* jshint loopfunc:true */\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                }
            ],
            "body": "<p>What would be the correct way to solve the jslint error in this case? I'm adding a getter function to an object which uses this. I don't know how to do this without creating the function inside the loop.</p>\n\n<pre><code>for (var i = 0; i&lt;processorList.length; ++i) {\n   result[i] = {\n       processor_: timestampsToDateTime(processorList[i]),\n       name_: processorList[i].processorName,\n       getLabel: function() { // TODO solve function in loop.\n            return this.name_;\n       }\n   };\n}\n</code></pre>\n",
            "last_activity_date": 1403892183,
            "question_id": 10320343,
            "score": 20,
            "tags": [
                "javascript",
                "jslint"
            ],
            "title": "Don&#39;t make functions within a loop"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Use jQuery ajax:</p>\n\n<pre><code>  function AddToCart(id)\n  {\n    $.ajax({\n      url: 'urlToController',\n      data: { id: id },\n      success: function(){\n        alert('Added');      \n      }\n    });\n  }\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/jQuery.ajax/\">http://api.jquery.com/jQuery.ajax/</a></p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>If you want to call an action from your JavaScript, one way is to embed your JavaScript code, inside your view (<code>.cshtml</code> file for example), and then, use Razor, to create a URL of that action:</p>\n\n<pre><code>$(function(){\n    $('#sampleDiv').click(function(){\n        /*\n         While this code is JavaScript, but because it's embedded inside\n         a cshtml file, we can use Razor, and create the URL of the action\n         */\n        var url = @Url.Action(\"ActionName\", \"Controller\");\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>jQuery post is the short version of jQuery ajax.</p>\n\n<pre><code>function addToCart(id)\n{\n  $.post('cartController',{id:id } function(data) {\n    //do whatever with the result.\n  });\n}\n</code></pre>\n\n<p>If you want more options like success callbacks and error handling, use jQuery ajax,</p>\n\n<pre><code>function addToCart(id)\n{\n  $.ajax({\n  url: \"cartController\",\n  data: { id: id },\n  success: function(data){\n    //call is successfully completed and we got result in data\n  },\n  error:function (xhr, ajaxOptions, thrownError){\n                  //some errror, some show err msg to user and log the error  \n                  alert(xhr.responseText);\n\n                }    \n  });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you do not need much customization and seek for simpleness, you can do it with built-in way - <a href=\"http://msdn.microsoft.com/en-us/library/dd493106.aspx\" rel=\"nofollow\">AjaxExtensions.ActionLink method</a>.</p>\n\n<pre><code>&lt;div class=\"cart\"&gt;\n      @Ajax.ActionLink(\"Add To Cart\", \"AddToCart\", new { productId = Model.productId }, new AjaxOptions() { HttpMethod = \"Post\" });\n&lt;/div&gt;\n</code></pre>\n\n<p>That MSDN link is must-read for all the possible overloads of this method and parameters of <a href=\"http://msdn.microsoft.com/en-us/library/system.web.mvc.ajax.ajaxoptions.aspx\" rel=\"nofollow\">AjaxOptions class</a>. Actually, you can use confirmation, change http method, set OnSuccess and OnFailure clients scripts and so on</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can set up your <code>element</code> with</p>\n\n<p><code>value=\"@model.productId\"</code> </p>\n\n<p>and </p>\n\n<p><code>onclick= addToWishList(this.value);</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have sample code like this:</p>\n\n<pre><code> &lt;div class=\"cart\"&gt;\n      &lt;a onclick=\"addToCart('@Model.productId');\" class=\"button\"&gt;&lt;span&gt;Add to Cart&lt;/span&gt;&lt;/a&gt;\n &lt;/div&gt;\n &lt;div class=\"wishlist\"&gt;\n      &lt;a onclick=\"addToWishList('@Model.productId');\"&gt;Add to Wish List&lt;/a&gt;\n &lt;/div&gt;\n &lt;div class=\"compare\"&gt;\n      &lt;a onclick=\"addToCompare('@Model.productId');\"&gt;Add to Compare&lt;/a&gt;\n &lt;/div&gt;    \n</code></pre>\n\n<p>How can I write JavaScript code to call the controller action method?</p>\n",
            "last_activity_date": 1411642298,
            "question_id": 8952953,
            "score": 20,
            "tags": [
                "javascript",
                "asp.net-mvc",
                "asp.net-mvc-3",
                "razor"
            ],
            "title": "Calling ASP.NET MVC Action Methods from JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It's all about performance - but it does not really matters I guess <a href=\"http://www.scottlogic.co.uk/2010/10/javascript-array-performance/\">http://www.scottlogic.co.uk/2010/10/javascript-array-performance/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I actually asked myself the same question at the start of this year. <em>UPDATED with new test cases</em> <a href=\"http://jsperf.com/array-push-vs-unshift-vs-direct-assignment/2\">http://jsperf.com/array-push-vs-unshift-vs-direct-assignment/2</a></p>\n\n<p>It appears that <code>push</code> is much faster in chrome, and about equal in FF. Also direct is faster in IE9, but I would be interested to see how it performs in IE10.</p>\n\n<p>I would say that most developers would assume setting the length of the array, and then using direct assignment is faster, as is the case with most programming languages. But JavaScript is different. <a href=\"http://blog.niftysnippets.org/2011/01/myth-of-arrays.html\">Javascript arrays aren't really arrays</a>, they're just key/value maps just like all other JavaScript objects. So the pre-allocation is essentially falling on deaf ears.</p>\n\n<p>Personally I prefer <code>push</code> (:</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>I believe that it's mostly habit.</p>\n\n<p>Some developers use it simply because it's the way they are used to do it, and haven't considered that <code>push</code> would be an alternative.</p>\n\n<p>Some developers have learned once upon a time that one method is much faster than another, and haven't reviewed this in light of the recent performance improvements of the Javascript engines.</p>\n\n<p>Personally I use <code>push</code> frequently. Most of the time readability and maintainability is more important than performance, at least when the performance impact is small enough. The performance tests posted in the answers here show that the performance difference between various methods isn't very big.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It's a way to limit nested braclets. If you have enough of them you cant see howmany there are or howmany you need (when later looking at the code). I would use a var, one should only have to count things one time.</p>\n\n<pre><code>bar = foo.length;\nfoo[ bar++ ] = \"new item 0\";\nfoo[ bar++ ] = \"new item 1\";\nfoo[ bar++ ] = \"new item 2\";\nfoo[ bar++ ] = \"new item 3\";\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/vEUU3/\" rel=\"nofollow\">http://jsfiddle.net/vEUU3/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I commonly see developers use an expression like the following in JavaScript:</p>\n\n<pre><code>arr = []\narr[arr.length] = \"Something\"\narr[arr.length] = \"Another thing\"\n</code></pre>\n\n<p>Wouldn't <code>push</code> be more appropriate?</p>\n\n<pre><code>arr = []\narr.push(\"Something\")\narr.push(\"Another thing\")\n</code></pre>\n",
            "last_activity_date": 1385343872,
            "question_id": 15649899,
            "score": 19,
            "tags": [
                "javascript"
            ],
            "title": "Is there a reason JavaScript developers don&#39;t use Array.push()?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<h1>Summary</h1>\n\n<p>Simply <a href=\"https://developer.mozilla.org/en-US/docs/DOM/event.preventDefault\">prevent the default</a> browser action:</p>\n\n<pre><code>window.addEventListener(\"keydown\", function(e) {\n    // space and arrow keys\n    if([32, 37, 38, 39, 40].indexOf(e.keyCode) &gt; -1) {\n        e.preventDefault();\n    }\n}, false);\n</code></pre>\n\n<h1>Original answer</h1>\n\n<p>I used the following function in my own game:</p>\n\n<pre><code>var keys = {};\nwindow.addEventListener(\"keydown\",\n    function(e){\n        keys[e.keyCode] = true;\n        switch(e.keyCode){\n            case 37: case 39: case 38:  case 40: // Arrow keys\n            case 32: e.preventDefault(); break; // Space\n            default: break; // do not block other keys\n        }\n    },\nfalse);\nwindow.addEventListener('keyup',\n    function(e){\n        keys[e.keyCode] = false;\n    },\nfalse);\n</code></pre>\n\n<p>The magic happens in <a href=\"https://developer.mozilla.org/en-US/docs/DOM/event.preventDefault\"><code>e.preventDefault();</code></a>. This will block the default action of the event, in this case moving the viewpoint of the browser.</p>\n\n<p>If you don't need the current button states you can simply drop <code>keys</code> and just discard the default action on the arrow keys:</p>\n\n<pre><code>var arrow_keys_handler = function(e) {\n    switch(e.keyCode){\n        case 37: case 39: case 38:  case 40: // Arrow keys\n        case 32: e.preventDefault(); break; // Space\n        default: break; // do not block other keys\n    }\n};\nwindow.addEventListener(\"keydown\", arrow_keys_handler, false);\n</code></pre>\n\n<p>Note that this approach also enables you to remove the event handler later if you need to re-enable arrow key scrolling:</p>\n\n<pre><code>window.removeEventListener(\"keydown\", arrow_keys_handler, false);\n</code></pre>\n\n<h3>References</h3>\n\n<ul>\n<li>MDN: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/element.addEventListener\"><code>window.addEventListener</code></a></li>\n<li>MDN: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/element.removeEventListener\"><code>window.removeEventListener</code></a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 40
                }
            ],
            "body": "<p>I'm making a game using canvas, and javascript.</p>\n\n<p>When the page is longer than the screen (comments, etc.) pressing the down arrow scrolls the page down, and makes the game impossible to play.</p>\n\n<p>What can I do to prevent the window from scrolling when the player just wants to move down?</p>\n\n<p>I guess with Java games, and such, this is not a problem, as long as the user clicks on the game. </p>\n\n<p>I tried the solution from: <a href=\"http://stackoverflow.com/questions/2020414/how-to-disable-page-scrolling-in-ff-with-arrow-keys\">how to disable page scrolling in FF with arrow keys</a> ,but I couldn't get it to work.</p>\n",
            "last_activity_date": 1372093516,
            "question_id": 8916620,
            "score": 19,
            "tags": [
                "javascript",
                "canvas",
                "scroll",
                "arrow-keys"
            ],
            "title": "Disable arrow key scrolling in users browser"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>@Adam; If you want to edit text then check this <a href=\"http://code.google.com/apis/ajax/playground/?type=visualization#pie_chart\" rel=\"nofollow\">http://code.google.com/apis/ajax/playground/?type=visualization#pie_chart</a></p>\n\n<p>you can change your code from here </p>\n\n<pre><code>function drawVisualization() {\n  // Create and populate the data table.\n  var data = new google.visualization.DataTable();\n  data.addColumn('string', 'Task');\n  data.addColumn('number', 'Hours per Day');\n  data.addRows(5);\n  data.setValue(0, 0, 'Work');\n  data.setValue(0, 1, 11);\n  data.setValue(1, 0, 'Eat');\n  data.setValue(1, 1, 2);\n  data.setValue(2, 0, 'Commute');\n  data.setValue(2, 1, 2);\n  data.setValue(3, 0, 'Watch TV');\n  data.setValue(3, 1, 2);\n  data.setValue(4, 0, 'Sleep');\n  data.setValue(4, 1, 7);\n</code></pre>\n\n<p>and if you want your <code>custom tooltip</code> you have to use <code>javascript</code> for these</p>\n\n<p><a href=\"http://code.google.com/p/gvtooltip/\" rel=\"nofollow\">http://code.google.com/p/gvtooltip/</a></p>\n\n<p><a href=\"http://informationandvisualization.de/blog/tooltips-google-chart-api\" rel=\"nofollow\">http://informationandvisualization.de/blog/tooltips-google-chart-api</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For custom tooltips, add the tooltip as an extra column:</p>\n\n<pre><code>function drawVisualization() {\n    data = new google.visualization.DataTable()\n    data.addColumn('string', 'Date');\n    data.addColumn('number');\n    data.addColumn({type:'string',role:'tooltip'});\n    data.addRow();\n    base = 10;\n    data.setValue(0, 0, 'Datapoint1');\n    data.setValue(0, 1, base++);\n    data.setValue(0, 2, \" This is my tooltip1 \");\n\n    data.addRow();\n    data.setValue(1, 0, 'Datapoint2');\n    data.setValue(1, 1, base++);\n    data.setValue(1, 2, \"This is my second tooltip2\");\n\n    // Draw the chart.\n    var chart = new google.visualization.BarChart(document.getElementById('visualization'));\n    chart.draw(data, {legend:'none', width:600, height:400});\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I found this link <a href=\"https://gist.github.com/alexrainman/bb8d49357250df0859c0\" rel=\"nofollow\">https://gist.github.com/alexrainman/bb8d49357250df0859c0</a> to customize pie chart tooltip... Hope this helps.. it worked perfectly for me :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><a href=\"http://code.google.com/apis/chart/\">http://code.google.com/apis/chart/</a></p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"https://www.google.com/jsapi\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n\n  // Load the Visualization API and the piechart package.\n  google.load('visualization', '1', {'packages':['corechart']});\n\n  // Set a callback to run when the Google Visualization API is loaded.\n  google.setOnLoadCallback(drawChart);\n\n  // Callback that creates and populates a data table, \n  // instantiates the pie chart, passes in the data and\n  // draws it.\n  function drawChart() {\n\n  // Create our data table.\n  var data = new google.visualization.DataTable();\n  data.addColumn('string', 'date');\n  data.addColumn('number', 'Views');\n  data.addColumn('number', 'People');\n  data.addRows([\n    &lt;?php echo $analytics; ?&gt;\n  ]);\n  // Instantiate and draw our chart, passing in some options.\n  var chart = new google.visualization.AreaChart(document.getElementById('Analytics-Visualization'));\n  chart.draw(data, {lineWidth:3, pointSize:8, width: 745, height: 240,chartArea:{left:20,top:20,width:640}});\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>lets say when we do this it does this\n<img src=\"http://i.stack.imgur.com/y6q92.png\" alt=\"enter image description here\"></p>\n\n<p>to</p>\n\n<p><img src=\"http://i.stack.imgur.com/vm7wt.png\" alt=\"enter image description here\"></p>\n\n<p>maybe using the listener stuff ? </p>\n",
            "last_activity_date": 1417503531,
            "question_id": 6013053,
            "score": 19,
            "tags": [
                "javascript",
                "css",
                "api",
                "tooltip",
                "google-visualization"
            ],
            "title": "How to change tooltip text for google chart api?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It's a browser feature to stop websites that show annoying alert boxes over and over again.</p>\n\n<p>As a web developer, you can't disable it.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<blockquote>\n  <p>What does this mean ?</p>\n</blockquote>\n\n<p>This is a security measure on the browser's end to prevent a page from freezing the browser (or the current page) by showing modal (alert / confirm) messages in an infinite loop. See e.g. <a href=\"http://support.mozilla.com/en-US/questions/690130\">here</a> for Firefox.</p>\n\n<p>You can not turn this off. The only way around it is to use custom dialogs like <a href=\"http://jqueryui.com/demos/dialog/\">JQuery UI's dialogs</a>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Using <a href=\"http://jqueryui.com/demos/dialog/\" rel=\"nofollow\">JQuery UI's dialogs</a> is not always a solution. As far as I know alert and confirm is the only way to stop the execution of a script at a certain point. As a workaround we can provide a mechanism to let the user know that an application needs to call alert and confirm. This can be done like this for example (where showError uses a jQuery dialog or some other means to communicate with the user):</p>\n\n<pre><code>var f_confirm;\nfunction setConfirm() {\n  f_confirm = confirm;\n  confirm = function(s) {\n    try {\n      return f_confirm(s);\n    } catch(e) {\n      showError(\"Please do not check 'Prevent this page from creating additional dialogs'\");\n    }\n    return false;\n  };\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I designed this function to hopefully circumvent the checkbox in my web apps.</p>\n\n<p>It blocks all functionality on the page while executing (assuming fewer than three seconds has passed since the user closed the last dialog), but I prefer it to a recursive or setTimeout function since I don't have to code for the possibility of something else being clicked or triggered while waiting for the dialog to appear.</p>\n\n<p>I require it most when displaying errors/prompts/confirms on reports that are already contained within Modalbox.  I could add a div for additional dialogs, but that just seems too messy and unnecessary if built-in dialogs can be used.</p>\n\n<p>Note that this would probably break if dom.successive_dialog_time_limit is changed to a value greater than 3, nor do I know if Chrome has the the same default as Firefox.  But at least it's an option.</p>\n\n<p>Also, if anyone can improve upon it, please do!</p>\n\n<pre><code>// note that these should not be in the global namespace\nvar dlgRslt,\n    lastTimeDialogClosed = 0;\n\nfunction dialog(msg) {\n    var defaultValue,\n        lenIsThree,\n        type;\n\n    while (lastTimeDialogClosed &amp;&amp; new Date() - lastTimeDialogClosed &lt; 3001) {\n        // timer\n    }\n\n    lenIsThree = 3 === arguments.length;\n    type = lenIsThree ? arguments[2] : (arguments[1] || alert);\n    defaultValue = lenIsThree &amp;&amp; type === prompt ? arguments[1] : '';\n\n    // store result of confirm() or prompt()\n    dlgRslt = type(msg, defaultValue);\n    lastTimeDialogClosed = new Date();\n} \n</code></pre>\n\n<p>usage: </p>\n\n<pre><code>dialog('This is an alert.');\n\ndialog( 'This is a prompt', prompt );\ndialog('You entered ' + dlgRslt);\n\ndialog( 'Is this a prompt?', 'maybe', prompt );\ndialog('You entered ' + dlgRslt);\n\ndialog( 'OK/Cancel?', confirm );\nif (dlgRslt) {\n    // code if true\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is a browser feature.</p>\n\n<p>If you could, try to employ <a href=\"http://bootboxjs.com/\" rel=\"nofollow\">http://bootboxjs.com/</a>, whit this library you can do the same of </p>\n\n<pre><code>alert(\"Empty message sent\");\n</code></pre>\n\n<p>by writing:</p>\n\n<pre><code>bootbox.alert(\"Empty message sent\", function(result) {\n    // do something whit result\n });\n</code></pre>\n\n<p>You'll get a nice user interface too!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can create a custom alert box using java script, below code will override default alert function</p>\n\n<pre><code>window.alert = function(message) { $(document.createElement('div'))\n    .attr({\n      title: 'Alert',\n      'class': 'alert'\n    })\n    .html(message)\n    .dialog({\n      buttons: {\n        OK: function() {\n          $(this).dialog('close');\n        }\n      },\n      close: function() {\n        $(this).remove();\n      },\n      modal: true,\n      resizable: false,\n      width: 'auto'\n    });\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In my Rails 3 application I do:</p>\n\n<pre><code>render :js =&gt; \"alert(\\\"Error!\\\\nEmpty message sent.\\\");\" if ...\n</code></pre>\n\n<p>Sometimes, below this error message (in the same alert box) I see: \"Prevent this page from creating additional dialogs\" and a checkbox.</p>\n\n<p>What does this mean ?</p>\n\n<p>Is that possible not to display this additional text and checkbox ?</p>\n\n<p>I use Firefox 4.</p>\n",
            "last_activity_date": 1418648145,
            "question_id": 5848381,
            "score": 19,
            "tags": [
                "javascript",
                "html",
                "ruby-on-rails",
                "alert",
                "firefox4"
            ],
            "title": "Why &quot;Prevent this page from creating additional dialogs&quot; appears in the alert box?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>This is close to correct. Observable array subscriptions are only for when items are added or removed, not modified. So if you want to subscribe to an item itself, you'll need to, well, subscribe to the item itself:</p>\n\n<blockquote>\n  <p><strong>Key point: An observableArray tracks which objects are in the array, not the state of those objects</strong></p>\n  \n  <p>Simply putting an object into an observableArray doesn\u2019t make all of that object\u2019s properties themselves observable. Of course, you can make those properties observable if you wish, but that\u2019s an independent choice. An observableArray just tracks which objects it holds, and notifies listeners when objects are added or removed.</p>\n</blockquote>\n\n<p>(<a href=\"http://knockoutjs.com/documentation/observableArrays.html\">from Knockout documentation</a>)</p>\n\n<hr>\n\n<p>I say \"close to correct\" since you will want to remove all the old subscriptions. Currently, if the observable array starts as <code>[a, b]</code> you are subscribing to <code>[a, b]</code>, but then if <code>c</code> gets added you have two subscriptions for <code>a</code> and <code>b</code> plus one for <code>c</code>.</p>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>I have a view model with an <code>observableArray</code> (named 'all') of objects. One of the properties of that object is an <code>observable</code> name selected. I want some code to execute whenever the selected property of the of the child object in the array changes. I tried manually subscribing to <code>all</code> via <code>all.subscribe()</code> but that code only fires when items are added or removed. I updated the code to do it like this:</p>\n\n<pre><code>all.subscribe(function () {\n    ko.utils.arrayForEach(all(), function (item) {\n        item.selected.subscribe(function () {\n            //code to fire when selected changes\n        });\n    });\n});\n</code></pre>\n\n<p>Is this the right way to do this or is there a better way?</p>\n",
            "last_activity_date": 1331837564,
            "question_id": 9726172,
            "score": 18,
            "tags": [
                "javascript",
                "knockout.js"
            ],
            "title": "Knockout.JS Observable Array Changes to Individual Observable Items"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Call the functions and add their return values to an array. Then call <code>$.when</code> passing the array as argument like so:</p>\n\n<pre><code>$.when.apply($, array)\n</code></pre>\n\n<p>See <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply</code> <em><sup>[MDN]</sup></em></a> for more information and <a href=\"http://stackoverflow.com/questions/6647527/jquery-deferred-do-i-need-pipes-or-chains-to-achieve-this-pattern/6648219#6648219\">my answer here</a> for an extended example.</p>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>I want to send [1, n) AJAX-requests to the server and after all have returned a result a modal dialog should be closed. <code>$.when(a(), b(), c())</code> would be perfect, but I don't know how to pass the variable count of functions to <code>$.when</code> as parameter. Any ideas how to solve this problem?</p>\n",
            "last_activity_date": 1320420507,
            "question_id": 8011652,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "jquery-deferred"
            ],
            "title": "jQuery $.when() with variable arguments"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can do this:</p>\n\n<pre><code>if('draggable' in document.createElement('span')) {\n  alert(\"Drag support detected\");\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/cDmVF/\">You can see a quick demo test using the above check here</a>.</p>\n\n<p>Also, <a href=\"http://diveintohtml5.info/everything.html\">there's a nice feature detection (not browser detection, yay!) list that's fairly well maintained here</a> in case you're looking for other HTML5 features as well.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>Detecting \"draggable' in document.createElement('span') seems like a good idea, but in practice it doesn't work. </p>\n\n<p>iOS claims that draggable is in the element but doesn't allow drag and drop. (Reference: <a href=\"http://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html#//apple_ref/doc/uid/TP40006511-SW19\">Safari Web Content Guide: Handling Events</a>)</p>\n\n<p>IE9 claims that draggable is NOT in the element, but does allow drag and drop. (Reference: my testing HTML5 drag and drop in IE.)</p>\n\n<p><a href=\"http://www.modernizr.com/\">Modernizr</a> is a better choice because it doesn't confuse IE. However, it states that HTML5 drag and drop is available on iOS. </p>\n\n<p>Here's how I detect HTML5 drag and drop:</p>\n\n<pre><code>var iOS = !!navigator.userAgent.match('iPhone OS') || !!navigator.userAgent.match('iPad');\nif (Modernizr.draganddrop &amp;&amp; !iOS) {\n    HTML5 drag and drop solution\n} else if (Modernizr.draganddrop &amp;&amp; iOS) {\n    iOS drag and drop solution \n} else {\n    non-HTML5 drag and drop solution\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Check if \"dragstart\" and \"drop\" are supported, using the \"isEventSupported\" method in Modernizr. See <a href=\"http://stackoverflow.com/questions/6518033/how-to-detect-browser-support-file-api-drag-n-drop\">How to detect browser support File API drag n drop</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is how it's implemented in Modernizr</p>\n\n<pre><code>function() {\n    var div = document.createElement('div');\n    return ('draggable' in div) || ('ondragstart' in div &amp;&amp; 'ondrop' in div);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm trying to detect the HTML5 Drag And Drop support in JavaScript. Modernizr seems to not handle this test case.</p>\n",
            "last_activity_date": 1395411347,
            "question_id": 2856262,
            "score": 18,
            "tags": [
                "javascript",
                "html5",
                "drag-and-drop",
                "standards"
            ],
            "title": "Detecting HTML5 Drag And Drop support in javascript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Unfortunately, unless you're happy with supporting only specific browsers (IE7/Win, Safari, Firefox 3.5), there's no pure CSS solution to your problem.</p>\n\n<p><strong>word-wrap: break-word;</strong> works, but only in IE.</p>\n\n<p>If you're able to alter the text, either server-side (PHP, ASP) or possibly client-side (Javascript), you could write a small function that inserts 'shy hyphens' (<strong>&amp;shy;</strong>) into your text. That way, text can be broken up at every instance of the hyphen, and shy hyphens will not be displayed if the word is not broken up.</p>\n\n<p>Edit, an example:</p>\n\n<pre><code>bla&amp;shy;bla&amp;shy;bla&amp;shy;bla&amp;shy;bla&amp;shy;bla&amp;shy;bla&amp;shy;bla&amp;shy;bla&amp;shy; (etc)\n</code></pre>\n\n<p>will display as follows in your browser:</p>\n\n<pre><code>blablabla-\nblablabla-\nblabla\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You have to resort to JavaScript and use a function like this:</p>\n\n<pre><code>&lt;script language=\"javascript\"&gt;\nfunction wrap() {\n    var data = document.getElementsByTagName('yourtaghere'); \n    var  desiredLength = 40 ;\n    var delimiter = \"&lt;br /&gt;\";\n    for( var i=0; i &lt; data.length; ++i ) {\n    \tcellLength=data[i].innerHTML.length\n    \tif( desiredLength &lt; cellLength ) {\n    \t\tvar counter=0;\n    \t\tvar output=\"\";\n    \t\twhile( counter &lt; cellLength ) {\n    \t\t\toutput += data[i].innerHTML.substr(counter,desiredLength) + delimiter;\n    \t\t\tcounter+= desiredLength;\n    \t\t}\n    \t\tdata[i].innerHTML=output;\n    \t}\n    }\n}\nwindow.onload=wrap;\n&lt;/script&gt;\n</code></pre>\n\n<p>Or you could use the <a href=\"http://code.google.com/p/hyphenator/\" rel=\"nofollow\">hyphenator</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I use the combination</p>\n\n<pre><code>word-wrap: break-word;\noverflow: hidden;\n</code></pre>\n\n<p>to deal with this.  The <code>word-wrap</code> setting will allow the word to be wrapped despite its length in browsers which support that property, while the <code>overflow</code> setting will cause it to be cut off at the end of the available space in browsers which don't recognize <code>word-wrap</code>.  That's about as graceful of degradation as you're likely to get without going to javascript.</p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>A new answer, since you've changed your question:</p>\n\n<p>This is a very simplistic PHP solution:</p>\n\n<pre><code>&lt;?php\n$string = \"AnExtremelyLongStringWithoutWhitespacesOrBreakpointsOfAnyKindThatWillCompletelyAndUtterlyRuinYourWebsiteDesign\";\nfor($i=0; $i&lt;strlen($string); $i++) {\n  $newString .= $string[$i] . '&amp;shy;';\n}\necho $newString;\n</code></pre>\n\n<p>The same can be achieved in any language ofcourse.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In extension to the answer of Duroth, you can use the following php code to insert the shy-hyphens\n\n\n<pre><code>$longest_length = 15;\n\n$string_with_long_word = 'short lonngerrrrr lonnnnnnnggeeeeeeeeeeeeeeeeeessssssssssssssssstttttttttttttt and another looooooooooooonnnnnnnnngwwooooooooororoooorrrrrd';\n$string = preg_replace_callback(\"/[a-z0-9]{{$longest_length},}/\", 'putShyHyphen', $string_with_long_word);\n\nfunction putShyHyphen($matches) {\n $string = $matches[0];\n $newstring = '';\n for ($i=0; $i&lt;strlen($string); $i++) {\n  $newstring .= $string[$i] . '&amp;shy;';\n }\n\n return $newstring;\n}\necho $string_with_long_word . '&lt;hr /&gt;';\necho $string;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>simple css. Try this:\nPut your text in <code>&lt; pre&gt;...&lt; /pre&gt;</code></p>\n\n<p>css rule</p>\n\n<pre><code>pre {\n   overflow-x: auto; /* Use horizontal scroller if needed; for Firefox 2, not needed in Firefox 3 */\n   white-space: pre-wrap; /* css-3 */\n   white-space: -moz-pre-wrap !important; /* Mozilla, since 1999 */\n   white-space: -pre-wrap; /* Opera 4-6 */\n   white-space: -o-pre-wrap; /* Opera 7 */\n   /* width: 99%; */\n   word-wrap: break-word; /* Internet Explorer 5.5+ */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The suggested tags work to break really long words (or URLs) but you'll get mixed results from browser to browser trying to flow text in narrow divs.  For example a 200px div:</p>\n\n<p><code>&lt;div style=\"font-size:12px;font-family:monospace;width:200px;word-break:break-all;word-wrap:break-word;\"&gt;1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890 1234567890&lt;/div&gt;</code></p>\n\n<p>In Chrome the numbers break, in Firefox they do not--you get two columns of numbers!  It seems Firefox doesn't consider how much space is available on the previous line of a \"long\" word--it doesn't break at every opportunity.  If this behavior is ever corrected, I hope Firefox also considers how this affects text justification.  </p>\n\n<p>The \"shy\" tags help Firefox but you still get \"ragged\" text.  I haven't done extensive tests but it appears the shy tags create unpredictable results (divs lose their style) when used in short words (less than 8 characters) in Firefox.  I personally prefer Chrome's more aggressive breaks!</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>According to <a href=\"http://www.w3.org/TR/css3-text/#word-break0\" rel=\"nofollow\">http://www.w3.org/TR/css3-text/#word-break0</a></p>\n\n<p><code>word-break: break-all;</code></p>\n\n<p>...does not do the same as word-wrap (which is now renamed to <code>overflow-wrap</code>) because even small words may be broken when they are at the end of the line. But it works.</p>\n\n<p>In some rare cases <code>hyphen: auto;</code> may bring you better results, but only if your long word is included in a dictionary the browser uses.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>As <code>word-wrap: break-word</code> does not work well when the width is not fixed (and even less in <code>&lt;table&gt;</code>), Stack Exchange adds some invisible Unicode markers, which browsers use to find possible positions for line breaks. But: those invisible markers are still there when the visitor copies the text, which might be bad. More details on Meta, in <a href=\"http://meta.stackexchange.com/questions/170970/occasionally-the-unicode-character-sequence-u200c-u200b-zwnj-zwsp-is-insert/\">http://meta.stackexchange.com/questions/170970/occasionally-the-unicode-character-sequence-u200c-u200b-zwnj-zwsp-is-insert/</a>.</p>\n\n<p>Instead of Unicode magic, inserting <code>&lt;span style=\"display: inline-block\"&gt;&lt;/span&gt;</code> every few characters seems <em>not</em> to have a bad effect when copying the resulting text. This works for me in Chrome 25, Firefox 19, Safari 6, Internet Explorer 9 (in Windows 7 on Parallels on a Mac; simulating IE8 and IE7 works too), stock browser and Chrome on Android 4.1, and Safari on iOS 6.1.2, and is <a href=\"http://quirksmode.org/css/css2/display.html\" rel=\"nofollow\">probably also supported in Opera</a>. See <a href=\"http://jsbin.com/epejel/8/\" rel=\"nofollow\">this JS Bin example</a>.</p>\n\n<p>Some day, <code>&lt;wbr&gt;</code> will be the solution, but <a href=\"http://www.quirksmode.org/oddsandends/wbr.html\" rel=\"nofollow\">not today</a>: though IE7 supported it, IE8 and IE9 don't.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have text like</p>\n\n<pre><code>&lt;div style=\"float:left; width: 250px\"&gt; PellentesquePellentesquePellentesquePellentesquePellentesquePellentesquePellentesquePellentesquePellentesquePellentesquePellentesquePellentesquePellentesquePellentesquePellentesque  feugiat tempor elit. \nUt mollis lacinia quam. Sed pharetra, augue aliquam   ornare vestibulum, metus massalaoreet tellus, eget iaculis lacus ipsum et diam. &lt;/div&gt;\n</code></pre>\n\n<p>I do not want horizontal scrolling. Is it possible to wrap the text (auto-line break). I know there are some IE specific properties. </p>\n\n<p>Thank you for your time.</p>\n\n<p>UPDATE: I can use jQuery, Javascript, PHP to do this also. but how? I mean the letters (font) are not fixed width or whatever you call that.</p>\n",
            "last_activity_date": 1362857875,
            "question_id": 1470810,
            "score": 18,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "css"
            ],
            "title": "Wrapping long text in CSS"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The problem is that AutoMapper turns nullables unto null when string is empty. This other question was answered with something that I believe suffices your needs: <a href=\"http://stackoverflow.com/questions/7641298/automapper-null-string-to-empty\">Automapper null string to empty</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When posting data with <code>$.ajax</code>, <code>null</code> is not a possible value for a property of the <code>data</code> option. If you look at the request with an http debugger, you will see that it's converted to an empty string.</p>\n\n<p>So I guess that your MVC controller is applying the opposite conversion.</p>\n\n<p>What I do in an ajax application to workaroung this issue is that I don't use the <code>data</code> option of <code>$.ajax()</code>, but I serialize everything in JSON and put it into a single field \"data\" of the data option. Like that you don't have problems with null values. Of course, you have to deserialize on the server side.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is a MVC feature which binds empty strings to <code>null</code>s. </p>\n\n<p>This logic is controlled with the <a href=\"http://msdn.microsoft.com/en-us/library/system.web.mvc.modelmetadata.convertemptystringtonull%28v=vs.108%29.aspx\">ModelMetadata.ConvertEmptyStringToNull</a> property which is used by the <code>DefaultModelBinder</code>.</p>\n\n<p>You can set the <code>ConvertEmptyStringToNull</code> with the <code>DisplayFormat</code> attribute</p>\n\n<pre><code>public class OrderDetailsModel\n{\n    [DisplayFormat(ConvertEmptyStringToNull = false)]\n    public string Comment { get; set; }\n\n    //...\n}\n</code></pre>\n\n<p>However if you don't want to annotate all the properties you can create a custom model binder where you set it to false:</p>\n\n<pre><code>public class EmptyStringModelBinder : DefaultModelBinder \n{\n    public override object BindModel(ControllerContext controllerContext,\n                                     ModelBindingContext bindingContext)\n    {\n        bindingContext.ModelMetadata.ConvertEmptyStringToNull = false;\n        Binders = new ModelBinderDictionary() { DefaultBinder = this };\n        return base.BindModel(controllerContext, bindingContext);\n    }\n}\n</code></pre>\n\n<p>And you can use the <a href=\"http://msdn.microsoft.com/en-us/library/system.web.mvc.modelbinderattribute%28v=vs.108%29.aspx\">ModelBinderAttribute</a> in your action:</p>\n\n<pre><code>public ActionResult SaveOrderDetails([ModelBinder(typeof(EmptyStringModelBinder))] \n       OrderDetailsModel orderDetailsModel)\n{\n}\n</code></pre>\n\n<p>Or you can set it as the Default ModelBinder globally in your Global.asax:</p>\n\n<pre><code>ModelBinders.Binders.DefaultBinder = new EmptyStringModelBinder();\n</code></pre>\n\n<p>You can read more about this feature <a href=\"http://brianreiter.org/2010/09/16/asp-net-mvc-2-0-undocumented-model-string-property-breaking-change/\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>The accepted answer did not work for me using MVC4. However, the following workaround does and I thought it would help others.</p>\n\n<pre><code>public class CustomModelBinder : DefaultModelBinder\n{\n    public bool ConvertEmptyStringToNull { get; set; }\n\n    public CustomModelBinder ()\n    {\n    }\n\n    public CustomModelBinder (bool convertEmptyStringToNull)\n    {\n        this.ConvertEmptyStringToNull = convertEmptyStringToNull;\n    }\n\n    protected override bool OnModelUpdating(ControllerContext controllerContext, ModelBindingContext bindingContext)\n    {\n        // this little bit is required to override the ConvertEmptyStringToNull functionality that we do not want!\n\n        foreach (string propertyKey in bindingContext.PropertyMetadata.Keys)\n        {\n            if(bindingContext.PropertyMetadata[propertyKey] != null)\n                    bindingContext.PropertyMetadata[propertyKey].ConvertEmptyStringToNull = this.ConvertEmptyStringToNull;\n        }\n        return base.OnModelUpdating(controllerContext, bindingContext);\n    }\n\n\n}\n</code></pre>\n\n<p>This will fix the issue under MVC4+. It would seem that bindingContext.ModelMetadata.ConvertEmptyStringToNull is completely ignored, and this is because the setting exists in the PropertyMetadata object for each property being bound. PropertyMetadata is recreated in BindProperty() so if you set it before that method call it will get overwritten unless it exists as an attribute on the property of your object being bound (such as [DisplayFormat(ConvertEmptyStringToNull=false)]). No one wants to do this on every property as that's silly.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Instead of creating a ModelBinder which modifies the ModelMetadata as some answers suggested, a cleaner alternative is to provide a custom ModelMetadataProvider.</p>\n\n<pre><code>public class EmptyStringDataAnnotationsModelMetadataProvider : System.Web.Mvc.DataAnnotationsModelMetadataProvider \n{\n    protected override ModelMetadata CreateMetadata(IEnumerable&lt;Attribute&gt; attributes, Type containerType, Func&lt;object&gt; modelAccessor, Type modelType, string propertyName)\n    {\n        var modelMetadata = base.CreateMetadata(attributes, containerType, modelAccessor, modelType, propertyName);\n        modelMetadata.ConvertEmptyStringToNull = false;\n        return modelMetadata;\n    }\n}\n</code></pre>\n\n<p>Then in Application_Start()</p>\n\n<pre><code>ModelMetadataProviders.Current = new EmptyStringDataAnnotationsModelMetadataProvider();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm passing an object from client to server. Properties of the object which are represented as string.empty are being converted to null during this process. I was wondering how to prevent this when the objects type supports string.empty.</p>\n\n<p><img src=\"http://i.stack.imgur.com/sXUIT.png\" alt=\"enter image description here\"></p>\n\n<pre><code>console.log(\"DataToPost:\", dataToPost);\n\n$.ajax({\n    type: \"POST\",\n    contentType: 'application/json'\n    url: \"../../csweb/Orders/SaveOrderDetails/\",\n    data: dataToPost,\n    success: function (result) {\n        console.log(result);\n    },\n    error: function (e) {\n        console.error(e);\n    }\n});\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/a9q4a.png\" alt=\"enter image description here\"></p>\n\n<p>My model includes nullable DateTime objects. I cannot force all nulls to string.empty on the server.</p>\n\n<p>I am using AutoMapper, so I would prefer not to have to inspect properties individually on the server.</p>\n",
            "last_activity_date": 1385909401,
            "question_id": 12734083,
            "score": 17,
            "tags": [
                "c#",
                "javascript",
                "jquery",
                "asp.net-mvc"
            ],
            "title": "string.empty converted to null when passing JSON object to MVC Controller"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I don't think so, as the browser is going to re-render/reload the iframe when it's put back in the DOM.</p>\n\n<p><a href=\"http://polisick.com/moveNode.php\" rel=\"nofollow\">http://polisick.com/moveNode.php</a> better explains it.</p>\n\n<p>To move a node you call removeNode to take it out of the tree and into memory, then appendNode to 'paste' it back where you want it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you're trying to move it visually, you can try modifying the CSS to use absolute positioning or some other adjustments.</p>\n\n<p>However, if you're trying to actually pull it out of the DOM and insert it somewhere else, you won't be able to avoid a reload.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>you need to save the 'Html' node under the iframe and after you moved the iframe, add it back</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had a similar problem with an iFrame in a jQueryUI dialog box.  jQuery moves the div (containing my iFrame) out of the DOM and because I still wanted postbacks (duh), I had to move it back.  After reading this and several other posts, I came up with a solution.</p>\n\n<p>The simple idea that I noticed is that the iFrame reloads when it is moved.  So, I added the iFrame into the dialog container (div) after moving the div back into the DOM.  This works because jQuery doesn't care about what's in the container.  Here is some sample code:</p>\n\n<p>Dialog open/close functions:</p>\n\n<p>open: </p>\n\n<pre><code>function () {\n    $(this).parent().appendTo(\"form\").css(\"z-index\", \"9000\"); //Move the div first\n    $(this).append('&lt;iframe id=\"iFrame\" allowtransparency=\"true\" frameborder=\"0\" width=\"100%\" height=\"100%\" src=\"somePage.aspx\"&gt;&lt;/iframe&gt;');}, //then add the iframe\n}\n</code></pre>\n\n<p>close: </p>\n\n<pre><code>function() {\n    $(this).empty(); //clear the iframe out because it is added on open, \n    //if you don't clear it out, you will get multiple posts\n    $(this).parent().appendTo(\"divHidden\"); //move the dialog div back (good house-keeping)\n}\n</code></pre>\n\n<p>html:</p>\n\n<pre><code>&lt;div id=\"divHidden\" style=\"display: none\"&gt;\n    &lt;div id=\"dialog\" style=\"display: none\"&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an iframe loaded with some content. I would like to move it inside the DOM without causing a refresh (I like the content inside it, I want to keep it).</p>\n\n<p>I'm doing some basic <code>node.appendChild(iframe)</code> to do the job.</p>\n\n<p>Is that possible?</p>\n\n<p>Thanks in advance for your help.</p>\n",
            "last_activity_date": 1404939370,
            "question_id": 7434230,
            "score": 17,
            "tags": [
                "javascript",
                "dom",
                "iframe",
                "reload"
            ],
            "title": "How to prevent an iframe from reloading when moving it in the DOM"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If you want to select based on the <code>value</code> attribute of the options, you need to use the <a href=\"http://api.jquery.com/attribute-equals-selector/\" rel=\"nofollow\">attribute equals selector</a> to select elements with a specific value for their <code>value</code> attribute:</p>\n\n<pre><code>var likeComperssionOption = $('select[id*=ComparisionType]').eq(0)\n                           .find(\"option[value='LIKE']\")\n</code></pre>\n\n<p>Otherwise, to select based on the display text of the options, use:</p>\n\n<pre><code>var likeComperssionOption = $('select[id*=ComparisionType]').eq(0)\n                           .find(\"option\").filter(function() {\n                               return $(this).text() == 'LIKE';\n                           });\n</code></pre>\n\n<p><strong>Update:</strong> You might be having some problems with your initial selector, it looks very strange. You should probably change</p>\n\n<pre><code>$('select[id*=ComparisionType]').eq(0)\n</code></pre>\n\n<p>to something simple like</p>\n\n<pre><code>$('#ComparisionType')\n</code></pre>\n\n<p>The concept of this answer works fine, you can <a href=\"http://jsfiddle.net/MsTsb/\" rel=\"nofollow\">see it in action here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just select all the options from the <code>select</code> and filter them by <code>text()</code> value:</p>\n\n<pre><code>var likeComperssionOption = $('select[id*=ComparisionType]:first option').filter(function() { return $(this).text() == \"LIKE\" });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<p>I have the folowing selector</p>\n\n<pre><code>    var likeComperssionOption = $('select[id*=ComparisionType]').eq(0)\n                                            .find(\"option:contains('LIKE')\");\n</code></pre>\n\n<p>this checks for an option which <strong>contains</strong> the word 'like' right?</p>\n\n<p>How do i find an option which is <strong>exactly</strong> with the word 'like'?</p>\n\n<p>Somthing like this:</p>\n\n<pre><code>     var likeComperssionOption = $('select[id*=ComparisionType]').eq(0)\n                                            .find(\"option:equals('LIKE')\");\n</code></pre>\n",
            "last_activity_date": 1400519222,
            "question_id": 7344220,
            "score": 17,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors"
            ],
            "title": "jQuery selector, contains to equals"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You don't need jQuery, just use javascript's <a href=\"http://www.w3schools.com/jsref/jsref_random.asp\"><code>Math.random</code></a> function.</p>\n\n<p><strong>edit</strong>:\nIf you want to have a number from 1 to 6 show randomly every second, you can do something like this:</p>\n\n<pre><code>&lt;span id=\"number\"&gt;&lt;/span&gt;\n\n&lt;script language=\"javascript\"&gt;\n  function generate() {\n    $('#number').text(Math.floor(Math.random() * 6) + 1);\n  }\n  setInterval(generate, 1000);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>function rollDice(){\n   return (Math.floor(Math.random()*6)+1);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Javascript has a <code>random()</code> available.  Take a look at <a href=\"http://www.w3schools.com/jsref/jsref_random.asp\" rel=\"nofollow\">Math.random()</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This doesn't require jQuery. The JavaScript <a href=\"http://www.w3schools.com/jsref/jsref_random.asp\"><code>Math.random</code></a> function returns a random number between 0 and 1, so if you want a number between 1 and 6, you can do:</p>\n\n<pre><code>var number = 1 + Math.floor(Math.random() * 6);\n</code></pre>\n\n<p><strong>Update:</strong> (as per comment) If you want to display a random number that changes every so often, you can use <a href=\"https://developer.mozilla.org/en/DOM/window.setInterval\"><code>setInterval</code></a> to create a timer:</p>\n\n<pre><code>setInterval(function() {\n  var number = 1 + Math.floor(Math.random() * 6);\n  $('#my_div').text(number);\n},\n1000); // every 1 second\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 57
                },
                {
                    "body": "<p>Others have answered the question, <em>but just for the fun of it</em>, here is a visual dice throwing example, using the <code>Math.random</code> javascript method, a background image and some recursive timeouts. </p>\n\n<p><a href=\"http://www.jsfiddle.net/zZUgF/3/\">http://www.jsfiddle.net/zZUgF/3/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Is there a simple jQuery way to create numbers randomly showing then a number 1 -6 is choosing after a few seconds? [Like dice]</p>\n",
            "last_activity_date": 1362741754,
            "question_id": 4306105,
            "score": 17,
            "tags": [
                "javascript",
                "jquery",
                "random"
            ],
            "title": "Randomize numbers with jQuery?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This is most probably because of <code>async : false</code>. As your call is synchronous,\nafter your call to the <code>$.ajax()</code> function begins, nothing happens until the response is received, and the next thing as far as your code goes will be the <code>success</code> handler</p>\n\n<p>To make it work, You can do something like this</p>\n\n<pre><code>$.blockUI({\n        fadeIn : 0,\n        fadeOut : 0,\n        showOverlay : false\n});\n// and here goes your synchronous ajax call\n$.ajax({\n            type : 'POST',\n            url : url,\n            async : false,\n            data : postData,\n            success : function (returnData) {\n                //stuff\n            },\n            error : function (xhr, textStatus, errorThrown) {\n                //other stuff\n            },\n            complete : function (){\n                $.unblockUI();\n            }\n     });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Your problem is the <code>async:false</code> flag. Besides the fact that it is bad practice (and really only makes sense in a very limited number of cases), it actually messes with the order of execution of the rest of the code. Here is why:</p>\n\n<p>It seems that somewhere in the <code>blockUI</code> code they are setting a <code>setTimeout</code>.  As a result, the <code>blockUI</code> code waits a very short amount of time.  Since the next instruction in the queue is the <code>ajax()</code> call, the <code>blockUI</code> execution gets placed right behind that.  And since you are using <code>async:false</code>, it has to wait until the complete <code>ajax</code> call is completed before it can be run.</p>\n\n<p>In detail, here is what happens:</p>\n\n<ul>\n<li>You call <code>blockUI</code></li>\n<li><code>blockUI</code> has a setTimeout and gets executed after the timeout is done (even if the timeout length is 0, the next line, <code>ajax()</code> will be run first) </li>\n<li><code>ajax()</code> is called with <code>async:false</code>, which means JS stops everything until the request returns</li>\n<li><code>ajax()</code> returns successfully and JS execution can continue</li>\n<li>the setTimeout inside <code>blockUI</code> code is probably over, so it will be executed next</li>\n<li>it looks like <code>blockUI</code> runs as part of <code>success</code>, but in reality, it has just been queued up because of a timeout</li>\n</ul>\n\n<p>If you would NOT use <code>async:false</code>, the execution would go as followed:</p>\n\n<ul>\n<li>You call <code>blockUI</code></li>\n<li><code>blockUI</code> has a setTimeout and gets executed after the timeout is done (even if the timeout length is 0, the next line, <code>ajax()</code> will be run first) </li>\n<li><code>ajax()</code> is called and sends of a request to the server.</li>\n<li>while it is connecting to the server, normal JS execution continues</li>\n<li>the setTimeout inside <code>blockUI</code> code is probably over, so it will be executed next</li>\n<li>the <code>blockUI</code> text shows up</li>\n<li>unless there is more JS code somewhere, JS execution is done until the AJAX <code>success</code> and <code>complete</code> callbacks are executed</li>\n</ul>\n\n<p>Here are some jsFiddle examples to demonstrate the problem:</p>\n\n<p><a href=\"http://jsfiddle.net/sSzjR/1/\">Example 1</a>: This is the situation you are experiencing.  The <code>blockUI</code> text doesn't show until after the <code>ajax</code> call executes.</p>\n\n<p><a href=\"http://jsfiddle.net/sSzjR/2/\">Example 2</a>: This is the exact same situation as yours, but with an <code>alert</code> before the <code>ajax</code> call. Because there is an <code>alert</code>, the timeout inside <code>blockUI</code> places the appearance of the <code>blockUI</code> text after the <code>alert</code> instead of after the <code>ajax</code>.</p>\n\n<p><a href=\"http://jsfiddle.net/sSzjR/3/\">Example 3</a>: This is how it is supposed to work without <code>async:false</code></p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<pre><code>$.blockUI({\n        fadeIn : 0,\n        fadeOut : 0,\n        showOverlay : false\n});\nsetTimeout(function() {\n     $.ajax({\n            type : 'POST',\n            url : url,\n            async : false,\n            data : postData,\n            success : function (returnData) {\n                //stuff\n            },\n            error : function (xhr, textStatus, errorThrown) {\n                //other stuff\n            }\n     });\n},100);\n$.unblockUI();\n</code></pre>\n\n<p><a href=\"http://bugs.jquery.com/ticket/7464\" rel=\"nofollow\">http://bugs.jquery.com/ticket/7464</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a simple ajax call that is executing a function on the beforeSend and on complete.  They execute fine but the beforeSend is \"seemingly\" not executed until after the success.  On the before send there is a \"Please wait\" notification.  If I put a break after the function in the beforeSend then it will show that notification and then hit the success.  Without the break point then it will sit there and think while waiting for the response and then my please wait notification will appear for a fraction of a second after the success is hit.  The desired functionality is to have the notification appear as soon as the request is sent so it displays while it is waiting for the response.</p>\n\n<pre><code>        $.ajax({\n            type : 'POST',\n            url : url,\n            async : false,\n            data : postData,\n            beforeSend : function (){\n                $.blockUI({\n                    fadeIn : 0,\n                    fadeOut : 0,\n                    showOverlay : false\n                });\n            },\n            success : function (returnData) {\n                //stuff\n            },\n            error : function (xhr, textStatus, errorThrown) {\n                //other stuff\n            },\n            complete : function (){\n                $.unblockUI();\n            }\n        });\n</code></pre>\n",
            "last_activity_date": 1392330931,
            "question_id": 16046387,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "jquery-blockui"
            ],
            "title": "jquery ajax beforesend"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You need to create a <code>instance</code> by using the <strong>new</strong> keyword.</p>\n\n<pre><code>function myFunction() {\n    this.value = 0;\n}\n\nvar inst1 = new myFunction();\n\nalert(inst1.value);  // this works\n</code></pre>\n\n<p>Now this corresponds to the current object , and it gets you the corresponding value of the property.</p>\n\n<p><strong><a href=\"http://jsfiddle.net/sushanth009/7WMFU/\" rel=\"nofollow\">Check Fiddle</a></strong></p>\n\n<p>At end of the day .. functions are still <strong>objects</strong>.. So it does not complain when you assign <code>myFunction.value = 0</code> .. It might be confusing as you are using the <strong>value (key)</strong> both inside and outside the function..\n Replace it with </p>\n\n<pre><code>myFunction.abc = 'Hello' \nalert(myFunction.abc) still works\n</code></pre>\n\n<p>But it won't be reflected inside the actual myFunction as you have not called the function yet.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Not sure I can clear up all of the nuances for you, but this may shed some light:</p>\n\n<pre><code>function myFunction() {\n    this.value = 0;\n}\nalert( (new myFunction).value);\n</code></pre>\n\n<p>Using the <code>new</code> keyword creates a new 'instance' of <code>myFunction</code> allowing <code>this</code> to be used to assign a value from inside the function.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You misunderstood the javascript prototype/object concepts.</p>\n\n<p>For the first example you are right, the variable has a function scope</p>\n\n<p>The second example is wrong. If you want to use a function as 'class' you have to create an object from it</p>\n\n<pre><code>function myFunction() { this.value = 0; }\nvar test = new myFunction;\n</code></pre>\n\n<p>only then you can access the 'value' property of it. for every 'new' statement a new object is created.</p>\n\n<p>In third example you add a static property to function which can be accessed without creating an object. Different technique that's</p>\n\n<p>Hope it helped</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><code>myFunction</code> is a <em>function object</em>. You can pass it around, assigned it to variables, assign properties to it and you can <em>call</em> it. </p>\n\n<p>Assigning properties works like with any other object:</p>\n\n<pre><code>myFunction.value = 0;\n</code></pre>\n\n<p>But note that at this point, you have <strong>not called</strong> the function yet, so the code <em>inside</em> the function (<code>var value = 0;</code> or <code>this.value = 0;</code>) was not even executed yet. Consider this:</p>\n\n<pre><code>function someFunction() {\n    window.foo = 'foo'; // create a global variable\n}\n\nsomeFunction.bar = 'bar';\n\nconsole.log(someFunction.bar); // 'bar'\nconsole.log(window.foo); // undefined\n\nsomeFunction(); // execute the function\n\nconsole.log(someFunction.bar); // 'bar'\nconsole.log(window.foo); // 'foo'\n</code></pre>\n\n<p>When you execute the function with <code>myFunction()</code>, only then the local variable is created / a property is set on <code>this</code>. What <code>this</code> refers to depends on <em>how</em> the function is called and is well explained in the <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/this\" rel=\"nofollow\">MDN documentation</a>. <code>this</code> <strong>never</strong> refers to the function itself unless you <em>explicitly</em> set it so.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Let's look at all three cases individually: </p>\n\n<pre><code>function myFunction()\n{\n    var value = 0;\n}\n</code></pre>\n\n<p>Here, you're declaring a variable in the function's scope. Each time the function is called, the variable will be created (and memory will be allocated). When the function returns, the variable goes out of scope - the variable <code>value</code> is flagged and will be GC'ed. The scope can't be accessed from a scope <em>\"higher\"</em> than this function's scope... if this function defined a function within its scope, that function will have access to the variable <code>value</code> (look into closures for more details). Bottom line: the variable only exists as when the function is called, and won't exist after the function returns.</p>\n\n<pre><code>function myFunction()\n{\n    this.value = 0;\n}\n</code></pre>\n\n<p>Here, you're defining a function that could be a constructor, a method, an event handler or a combination of all of the above. <code>this</code> is a reference that will point to the context in which the function is called. This contexted is determined <em>\"ad hoc\"</em> and may vary:</p>\n\n<pre><code>myFunction();// global scope, this points to window\nvar anObject = {method: myFunction};\nanObject.method();//called in the object's context, this points to object\nconsole.log(abObject.value);//logs 0\nvar instance = new myFunction();//as constructor\nconsole.log(instance.value);//logs 0\ndocument.getElementById('anInputField').onclick = myFunction;//on click, value will be set to 0\n</code></pre>\n\n<p>In the last case:</p>\n\n<pre><code>function myFunction()\n{\n    this.value = 0;\n}\nmyFunction.value = 0;\n</code></pre>\n\n<p>It wouldn't have made any difference if you'd have written this:</p>\n\n<pre><code>function myFunction()\n{}\nmyFunction.value = 0;\n</code></pre>\n\n<p>Because, as I explained above: <code>this</code> references whatever the context is at the time the function is called. This needn't be <code>myFunction</code>, in fact: more often than not it won't be:</p>\n\n<pre><code>var anObject = {method: myFunction};\nmyFunction.value = 101;//myFunction.value is changed\nanObject.method();\nconsole.log(anObject.value);//0 -&gt; the function still sets the value property to 0\n</code></pre>\n\n<p>If you want to access a function's properties inside that function, the easiest way is to reference that function like any other object:</p>\n\n<pre><code>function myFunction()\n{\n    this.value = myFunction.value;\n}\nmyFunction.value = 101;\n</code></pre>\n\n<p><em>Caution:</em><br/>\nJust a friendly warning: it's not very safe to use <code>this</code> in functions without checking for globals... If a function is called without an explicit context, JS uses the global (<code>window</code>) object <em>by default</em>. This means that every line that assigns a property to whatever object <code>this</code> happens to be pointing too will set a global variable:</p>\n\n<pre><code>function myFunction()\n{\n    this.foo = 'bar';\n}\nmyFunction();\nconsole.log(window.foo);//logs bar EVIL GLOBAL\n</code></pre>\n\n<p>A few ways to prevent the global object from being cluttered with globals:</p>\n\n<pre><code>function mySafeFunction()\n{\n    'use strict';//throws errors, check MDN\n    //this defaults to null, instead of window\n    impliedGlobal = 'Error';//doesn't work\n    this.onGlobal = 'Error';//null.property doesn't work\n}\n//same goes for constructors, but a more precise check can be used, too (and works on older browsers)\nfunction SafeConstructor()\n{\n    if (!(this instanceof SafeConstructor))\n    {//this doesn't point to SafeConstructor if new keyword wasn't used\n        throw new Error('Constructor wasn\\'t called with new keyword');\n        //or \"correct\" the error:\n        return new SafeConstructor();\n    }\n    console.log(this);// will always point to the SafeConstructor object\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>In javascript, any function is also an object, they are objects of <code>Function</code>, just as <code>Number, Object, Array</code></p>\n\n<p>One tricky thing is the <code>new</code> word, then it prefix before a function, it create a new object, and make <code>this</code> keyword pointer to that new object (one more, it assign that <strong>function prototype</strong> to the new object __ proto __).<br>\nIn function, </p>\n\n<pre><code>this.value = 0;\n</code></pre>\n\n<p>would create a new property <code>value</code> to the new object, and assign 0 to it.</p>\n\n<p>If there is <strong>no</strong> <code>new</code> before function, it's function call, and <code>this</code> will pointer to <strong>Window</strong> object.</p>\n\n<p>Try to <code>console.dir(this);</code> in the function, you will see the difference.</p>\n\n<pre><code>myFunction.value = 0;\n</code></pre>\n\n<p>would create property <code>value</code> to <code>myFunction</code>, and assign 0 to it. Because myFunction is just an object (of <strong>Function</strong>).</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/13418669/javascript-do-i-need-to-put-this-var-for-every-variable-in-an-object\">Javascript: Do I need to put this.var for every variable in an object?</a>  </p>\n</blockquote>\n\n\n\n<p>I'm struggling to understand functions and objects in javascript. It is said that also functions are objects and objects are kind of \"associative arrays\" i.e. collections of key-value pairs. I understand that if I write</p>\n\n<pre><code>function myFunction() {\n    var value = 0;\n}\nalert(myFunction.value); //then this gives me \"undefined\"\n</code></pre>\n\n<p>because variables have function scope. But if I write</p>\n\n<pre><code>function myFunction() {\n    this.value = 0;\n}\nalert(myFunction.value); //then this gives me \"undefined\" too.\n</code></pre>\n\n<p>But finally, If I write</p>\n\n<pre><code>function myFunction() {\n    this.value = 0;\n}\nmyFunction.value = 0;\nalert(myFunction.value); //then this gives me 0\n</code></pre>\n\n<p>So I can give myFunction property \"value\" but from \"outside\". Can someone explain what is going on and why this.value = 0; doesnt create property \"value\".</p>\n",
            "last_activity_date": 1367883441,
            "question_id": 13500101,
            "score": 16,
            "tags": [
                "javascript",
                "scope"
            ],
            "title": "Objects and functions in javascript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Well, if I understand you correctly, you want 366 on a leap year, 365 otherwise, right? A year is a leap year if it's evenly divisible by 4 but not by 100 unless it's also divisible by 400:</p>\n\n<pre><code>function daysInYear(year) {\n    if(year % 4 === 0 &amp;&amp; (year % 100 !== 0 || year % 400 === 0)) {\n        // Leap year\n        return 366;\n    } else {\n        // Not a leap year\n        return 365;\n    }\n}\n</code></pre>\n\n<hr>\n\n<h3>Edit after update:</h3>\n\n<p>In that case, I don't think there's a built-in method; you'll need to do this:</p>\n\n<pre><code>function daysInFebruary(year) {\n    if(year % 4 === 0 &amp;&amp; (year % 100 !== 0 || year % 400 === 0)) {\n        // Leap year\n        return 29;\n    } else {\n        // Not a leap year\n        return 28;\n    }\n}\n\nfunction dateToDay(date) {\n    var feb = daysInFebruary(date.getFullYear());\n    var aggregateMonths = [0, // January\n                           31, // February\n                           31 + feb, // March\n                           31 + feb + 31, // April\n                           31 + feb + 31 + 30, // May\n                           31 + feb + 31 + 30 + 31, // June\n                           31 + feb + 31 + 30 + 31 + 30, // July\n                           31 + feb + 31 + 30 + 31 + 30 + 31, // August\n                           31 + feb + 31 + 30 + 31 + 30 + 31 + 31, // September\n                           31 + feb + 31 + 30 + 31 + 30 + 31 + 31 + 30, // October\n                           31 + feb + 31 + 30 + 31 + 30 + 31 + 31 + 30 + 31, // November\n                           31 + feb + 31 + 30 + 31 + 30 + 31 + 31 + 30 + 31 + 30, // December\n                         ];\n    return aggregateMonths[date.getMonth()] + date.getDate();\n}\n</code></pre>\n\n<p>(Yes, I actually did that without copying or pasting. If there's an easy way I'll be mad)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Following OP's edit:</p>\n\n<pre><code>var now = new Date();\nvar start = new Date(now.getFullYear(), 0, 0);\nvar diff = now - start;\nvar oneDay = 1000 * 60 * 60 * 24;\nvar day = Math.floor(diff / oneDay);\nalert(day);\n</code></pre>\n\n<p>You might want to replace <code>Math.floor</code> with <code>Math.ceil</code> to get the result you want.</p>\n\n<p><a href=\"http://jsfiddle.net/Bm7GJ/\"><strong>Live example</strong></a></p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<pre><code>Date.prototype.dayOfYear= function(){\n    var j1= new Date(this);\n    j1.setMonth(0, 0);\n    return Math.round((this-j1)/8.64e7);\n}\n\nalert(new Date().dayofYear())\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>This method takes into account timezone issue and daylight saving time</p>\n\n<pre><code>function dayofyear(d) {   // d is a Date object\n    var yn = d.getFullYear();\n    var mn = d.getMonth();\n    var dn = d.getDate();\n    var d1 = new Date(yn,0,1,12,0,0); // noon on Jan. 1\n    var d2 = new Date(yn,mn,dn,12,0,0); // noon on input date\n    var ddiff = Math.round((d2-d1)/864e5);\n    return ddiff+1; \n}\n</code></pre>\n\n<p>(took from <a href=\"http://www.webdeveloper.com/forum/showthread.php?125428-Does-javascript-have-a-simple-get-day-of-the-year-type-function&amp;s=c861682810aa4f057153413df2f8d56e&amp;p=657040#post657040\" rel=\"nofollow\">here</a>)</p>\n\n<p>See also this <a href=\"http://jsfiddle.net/3znxbr18/\" rel=\"nofollow\">fiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This works across Daylight Savings Time changes in all countries (the \"noon\" one above doesn't work in Australia):</p>\n\n<pre><code>Date.prototype.isLeapYear = function() {\n    var year = this.getFullYear();\n    if((year &amp; 3) != 0) return false;\n    return ((year % 100) != 0 || (year % 400) == 0);\n};\n\n// Get Day of Year\nDate.prototype.getDOY = function() {\n    var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n    var mn = this.getMonth();\n    var dn = this.getDate();\n    var dayOfYear = dayCount[mn] + dn;\n    if(mn &gt; 1 &amp;&amp; this.isLeapYear()) dayOfYear++;\n    return dayOfYear;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Luckily this question doesn't specify if the number of the <em>current</em> day is required, leaving room for this answer.<br>\nAlso some answers (also on other questions) had leap-year problems or used the Date-object. Although javascript's <code>Date object</code> covers approximately 285616 years (100,000,000 days) on either side of January 1 1970, I was fed up with all kinds of unexpected date <a href=\"http://www.merlyn.demon.co.uk/js-datex.htm\" rel=\"nofollow\">inconsistencies</a> across different browsers (most notably year 0 to 99). I was also curious how to calculate it.</p>\n\n<p>So I wrote a simple and above all, <em>small</em> algorithm to calculate the <em>correct</em> (<a href=\"http://en.wikipedia.org/wiki/Proleptic_Gregorian_calendarhttp://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar\" rel=\"nofollow\">Proleptic</a> <a href=\"http://en.wikipedia.org/wiki/Gregorian_calendar\" rel=\"nofollow\">Gregorian</a> / Astronomical / ISO 8601:2004 (clause 4.3.2.1), so <a href=\"http://en.wikipedia.org/wiki/0_%28year%29\" rel=\"nofollow\">year <code>0</code></a> exists and is a leap year and <em>negative years are supported</em>) day of the year based on <em>year</em>, <em>month</em> and <em>day</em>.<br>\nNote that in <code>AD/BC</code> notation, year 0 AD/BC does not exist: instead year <code>1 BC</code> is the leap-year! IF you need to account for BC notation then simply subtract one year of the (otherwise positive) year-value first!!</p>\n\n<p>I modified (for javascript) the <a href=\"http://stackoverflow.com/a/11595914/588079\">short-circuit bitmask-modulo leapYear algorithm</a> and came up with a magic number to do a bit-wise lookup of <em>offsets</em> (that excludes jan and feb, thus needing 10 * 3 bits (30 bits is less than 31 bits, so we can safely save another character on the bitshift instead of <code>&gt;&gt;&gt;</code>)).</p>\n\n<p>Note that neither month or day may be <code>0</code>. That means that if you need this equation just for the <em>current</em> day (feeding it using <code>.getMonth()</code>) you just need to remove the <code>--</code> from <code>--m</code>.</p>\n\n<p>Note this assumes a valid date (although error-checking is just some characters more).</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function dayNo(y,m,d){\r\n  return --m*31-(m&gt;1?(1054267675&gt;&gt;m*3-6&amp;7)-(y&amp;3||!(y%25)&amp;&amp;y&amp;15?0:1):0)+d;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;!-- some examples for the snippet --&gt;\r\n&lt;input type=text value=\"(-)Y-M-D\" onblur=\"\r\n  var d=this.value.match(/(-?\\d+)[^\\d]+(\\d\\d?)[^\\d]+(\\d\\d?)/)||[];\r\n  this.nextSibling.innerHTML=' Day: ' + dayNo(+d[1], +d[2], +d[3]);\r\n\" /&gt;&lt;span&gt;&lt;/span&gt;\r\n\r\n&lt;br&gt;&lt;hr&gt;&lt;br&gt;\r\n\r\n&lt;button onclick=\"\r\n  var d=new Date();\r\n  this.nextSibling.innerHTML=dayNo(d.getFullYear(), d.getMonth()+1, d.getDate()) + ' Day(s)';\r\n\"&gt;get current dayno:&lt;/button&gt;&lt;span&gt;&lt;/span&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<hr>\n\n<p>Here is the version with <em>correct</em> range-validation.     </p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function dayNo(y,m,d){\r\n  return --m&gt;=0 &amp;&amp; m&lt;12 &amp;&amp; d&gt;0 &amp;&amp; d&lt;29+(  \r\n           4*(y=y&amp;3||!(y%25)&amp;&amp;y&amp;15?0:1)+15662003&gt;&gt;m*2&amp;3  \r\n         ) &amp;&amp; m*31-(m&gt;1?(1054267675&gt;&gt;m*3-6&amp;7)-y:0)+d;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;!-- some examples for the snippet --&gt;\r\n&lt;input type=text value=\"(-)Y-M-D\" onblur=\"\r\n  var d=this.value.match(/(-?\\d+)[^\\d]+(\\d\\d?)[^\\d]+(\\d\\d?)/)||[];\r\n  this.nextSibling.innerHTML=' Day: ' + dayNo(+d[1], +d[2], +d[3]);\r\n\" /&gt;&lt;span&gt;&lt;/span&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Again, one line, but I split it into 3 lines for readability (and following explanation).     </p>\n\n<p>The last line is identical to the function above, however the (identical) leapYear algorithm is moved to a previous short-circuit section (before the day-number calculation), because it is also needed to know how much days a month has in a given (leap) year.     </p>\n\n<p>The middle line calculates the correct <em>offset</em> number (for max number of days) for a given month in a given (leap)year using another magic number: since <code>31-28=3</code> and <code>3</code> is just 2 bits, then <code>12*2=24</code> bits, we can store all 12 months. Since addition can be faster then subtraction, we add the offset (instead of subtract it from <code>31</code>). To avoid a leap-year decision-branch for February, we modify that magic lookup-number on the fly.</p>\n\n<p>That leaves us with the (pretty obvious) first line: it checks that month and date are within valid bounds and ensures us with a <em><code>false</code> return value on range error</em> (note that this function also should not be able to return 0, because 1 jan 0000 is still day 1.), providing easy error-checking: <code>if(r=dayNo(/*y, m, d*/)){}</code>.<br>\nIf used this way (where month and day may not be <code>0</code>), then one can change <code>--m&gt;=0 &amp;&amp; m&lt;12</code> to <code>m&gt;0 &amp;&amp; --m&lt;12</code> (saving another char).<br>\nThe reason I typed the snippet in it's current form is that for 0-based month values, one just needs to remove the <code>--</code> from <code>--m</code>.</p>\n\n<p>Extra:<br>\nNote, don't use this day's per month algorithm if you need just max day's per month. In that case there is a more efficient algorithm (because we only need leepYear when the month is February) I posted as answer this question: <a href=\"http://stackoverflow.com/a/27810609/588079\">What is the best way to determine the number of days in a month with javascript?</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It always get's me worried when mixing maths with date functions (it's so easy to miss some leap year other detail). Say you have:</p>\n\n<pre><code>var d = new Date();\n</code></pre>\n\n<p>I would suggest using the following, days will be saved in <code>day</code>:</p>\n\n<pre><code>for(var day = d.getDate(); d.getMonth(); day += d.getDate())\n    d.setDate(0);\n</code></pre>\n\n<p>Can't see any reason why this wouldn't work just fine (and I wouldn't be so worried about the few iterations since this will not be used so intensively).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is a simple way to find the current day in the year, and it should account for leap years without a problem:</p>\n\n<p><strong>Javascript:</strong></p>\n\n<p><code>Math.round((new Date().setHours(23) - new Date(new Date().getYear()+1900, 0, 1, 0, 0, 0))/1000/60/60/24);</code></p>\n\n<p><strong>Javascript in Google Apps Script:</strong></p>\n\n<p><code>Math.round((new Date().setHours(23) - new Date(new Date().getYear(), 0, 1, 0, 0, 0))/1000/60/60/24);</code></p>\n\n<p>The primary action of this code is to find the number of milliseconds that have elapsed in the current year and then convert this number into days. The number of milliseconds that have elapsed in the current year can be found by subtracting the number of milliseconds of the first second of the first day of the current year, which is obtained with <code>new Date(new Date().getYear()+1900, 0, 1, 0, 0, 0)</code> (Javascript) or <code>new Date(new Date().getYear(), 0, 1, 0, 0, 0)</code> (Google Apps Script), from the milliseconds of the 23rd hour of the current day, which was found with <code>new Date().setHours(23)</code>. The purpose of setting the current date to the 23rd hour is to ensure that the day of year is rounded correctly by <code>Math.round()</code>.</p>\n\n<p>Once you have the number of milliseconds of the current year, then you can convert this time into days by dividing by 1000 to convert milliseconds to seconds, then dividing by 60 to convert seconds to minutes, then dividing by 60 to convert minutes to hours, and finally dividing by 24 to convert hours to days.</p>\n\n<p><em>Note: This post was edited to account for differences between JavaScript and JavaScript implemented in Google Apps Script. Also, more context was added for the answer.</em></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I use javascript to calculate the day of the year, from 1 - 366?  For example: </p>\n\n<ul>\n<li><strong>January 3</strong> should be <strong>3</strong>.  </li>\n<li><strong>February 1</strong> should be <strong>32</strong>.</li>\n</ul>\n",
            "last_activity_date": 1425830244,
            "question_id": 8619879,
            "score": 16,
            "tags": [
                "javascript"
            ],
            "title": "Javascript calculate the day of the year (1 - 366)"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Did you specify your own tabIndex values for each element you want to cycle through?\nif so, you can try this:</p>\n\n<pre><code>var lasTabIndex = 10; //Set this to the highest tabIndex you have\nfunction OnFocusOut()\n{\n    var currentElement = $get(currentElementId); // ID set by OnFocusIn \n\n    var curIndex = $(currentElement).attr('tabindex'); //get the tab index of the current element\n    if(curIndex == lastTabIndex) { //if we are on the last tabindex, go back to the beginning\n        curIndex = 0;\n    }\n    $('[tabindex=' + (curIndex + 1) + ']').focus(); //set focus on the element that has a tab index one greater than the current tab index\n}\n</code></pre>\n\n<p>You are using jquery, right?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Without jquery:\nFirst of all, on your tab-able elements, add <code>name=\"tabable\"</code> this will let us select them later.</p>\n\n<pre><code>var lastTabIndex = 10;\nfunction OnFocusOut()\n{\n    var currentElement = $get(currentElementId); // ID set by OnFOcusIn\n    var curIndex = currentElement.tabIndex; //get current elements tab index\n    if(curIndex == lastTabIndex) { //if we are on the last tabindex, go back to the beginning\n        curIndex = 0;\n    }\n    var tabbables = document.getElementsByName(\"tabable\"); //get all tabable elements\n    for(var i=0; i&lt;tabbables.length; i++) { //loop through each element\n        if(tabbables[i].tabIndex == (curIndex+1)) { //check the tabindex to see if it's the element we want\n            tabbables[i].focus(); //if it's the one we want, focus it and exit the loop\n            break;\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>As mentioned in a comment above, I don't think that any browsers expose tab order information. Here a simplified approximation of what the browser does to get the next element in tab order:</p>\n\n<pre><code>var allowedTags = {input: true, textarea: true, button: true};\n\nvar walker = document.createTreeWalker(\n  document.body,\n  NodeFilter.SHOW_ELEMENT,\n  {\n    acceptNode: function(node)\n    {\n      if (node.localName in allowedTags)\n        return NodeFilter.FILTER_ACCEPT;\n      else\n        NodeFilter.FILTER_SKIP;\n    }\n  },\n  false\n);\nwalker.currentNode = currentElement;\nif (!walker.nextNode())\n{\n  // Restart search from the start of the document\n  walker.currentNode = walker.root;\n  walker.nextNode();\n}\nif (walker.currentNode &amp;&amp; walker.currentNode != walker.root)\n  walker.currentNode.focus();\n</code></pre>\n\n<p>This only considers some tags and ignores <code>tabindex</code> attribute but might be enough depending on what you are trying to achieve.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've never implemented this, but I've looked into a similar problem, and here's what I would try.</p>\n\n<p>First, I would see if you could simply <a href=\"http://stackoverflow.com/a/5920206/101869\">fire a <code>keypress</code> event</a> for the Tab key on the element that currently has focus. There may be a different way of doing this for different browsers. If that doesn't work for you, you'll have to work harder. Referencing the jQuery implementation, you must:</p>\n\n<ol>\n<li>Listen for Tab and Shift+Tab</li>\n<li>Know which elements are tab-able</li>\n<li>Understand how tab order works</li>\n</ol>\n\n<h2>Listen for Tab and Shift+Tab</h2>\n\n<p>Listening for Tab and Shift+Tab are probably well-covered elsewhere on the web, so I'll skip that part.</p>\n\n<h2>Know which elements are tab-able</h2>\n\n<p>Knowing which element are tab-able is trickier. Basically, an element is tab-able if it is focusable and does not have the attribute <code>tabindex=\"-1\"</code> set. So then we must ask which elements are focusable. The following elements are focusable:</p>\n\n<ul>\n<li><code>input</code>, <code>select</code>, <code>textarea</code>, <code>button</code>, and <code>object</code> elements that aren't disabled.</li>\n<li><code>a</code> and <code>area</code> elements that have an <code>href</code> or have a numerical value for <code>tabindex</code> set.</li>\n<li>any element that has a numerical value for <code>tabindex</code> set.</li>\n</ul>\n\n<p>Furthermore, an element is focusable only if:</p>\n\n<ul>\n<li>None of its ancestors are <code>display: none</code>.</li>\n<li>The computed value of <code>visibility</code> is <code>visible</code>. This means that the nearest ancestor to have <code>visibility</code> set must have a value of <code>visible</code>. If no ancestor has <code>visibility</code> set, then the computed value is <code>visible</code>.</li>\n</ul>\n\n<p>More details are in another <a href=\"http://stackoverflow.com/a/7871725/101869\">Stack Overflow answer</a>. </p>\n\n<h2>Understand how tab order works</h2>\n\n<p>The tab order of elements in a document is controlled by the <code>tabindex</code> attribute. If no value is set, the <code>tabindex</code> is effectively <code>0</code>. Initially, when the <code>body</code> element (or no element) has focus, the first element in the tab order is the one with the highest <code>tabindex</code>. If multiple elements have the same <code>tabindex</code>, you then go in document order until you reach the last element with that <code>tabindex</code>. Then you move to the next highest <code>tabindex</code> and the process continues.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I created a <a href=\"https://github.com/marklagendijk/jQuery.tabbable\" rel=\"nofollow\">simple jQuery plugin</a> which does just this. It uses the ':tabbable' selector of jQuery UI to find the next 'tabbable' element and selects it.</p>\n\n<p>Example usage:</p>\n\n<pre><code>// Simulate tab key when element is clicked \n$('.myElement').bind('click', function(event){\n    $.tabNext();\n    return false;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It seems that you can check the <code>tabIndex</code> property of an element to determine if it is focusable. An element that is not focusable has a <code>tabindex</code> of \"-1\".</p>\n\n<p>Then you just need to know the rules for tab stops:</p>\n\n<ul>\n<li><code>tabIndex=\"1\"</code> has the highest priorty.</li>\n<li><code>tabIndex=\"2\"</code> has the next highest priority.</li>\n<li><code>tabIndex=\"3\"</code> is next, and so on.</li>\n<li><code>tabIndex=\"0\"</code> (or tabbable by default) has the lowest priority.</li>\n<li><code>tabIndex=\"-1\"</code> (or not tabbable by default) does not act as a tab stop.</li>\n<li>For two elements that have the same tabIndex, the one that appears first in the DOM has the higher priority.</li>\n</ul>\n\n<p>Here is an example of how to build the list of tab stops, in sequence, using pure Javascript:</p>\n\n<pre><code>function getTabStops(o, a, el) {\n    // Check if this element is a tab stop\n    if (el.tabIndex &gt; 0) {\n        if (o[el.tabIndex]) {\n            o[el.tabIndex].push(el);\n        } else {\n            o[el.tabIndex] = [el];\n        }\n    } else if (el.tabIndex === 0) {\n        // Tab index \"0\" comes last so we accumulate it seperately\n        a.push(el);\n    }\n    // Check if children are tab stops\n    for (var i = 0, l = el.children.length; i &lt; l; i++) {\n        getTabStops(o, a, el.children[i]);\n    }\n}\n\nvar o = [],\n    a = [],\n    stops = [],\n    active = document.activeElement;\n\ngetTabStops(o, a, document.body);\n\n// Use simple loops for maximum browser support\nfor (var i = 0, l = o.length; i &lt; l; i++) {\n    if (o[i]) {\n        for (var j = 0, m = o[i].length; j &lt; m; j++) {\n            stops.push(o[i][j]);\n        }\n    }\n}\nfor (var i = 0, l = a.length; i &lt; l; i++) {\n    stops.push(a[i]);\n}\n</code></pre>\n\n<p>We first walk the DOM, collecting up all tab stops in sequence with their index. We then assemble the final list. Notice that we add the items with <code>tabIndex=\"0\"</code> at the very end of the list, after the items with a <code>tabIndex</code> of 1, 2, 3, etc.</p>\n\n<p>For a fully working example, where you can tab around using the \"enter\" key, check out this <a href=\"http://jsfiddle.net/n67rF/2/\" rel=\"nofollow\">fiddle</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Hope this is helpful.</p>\n\n<pre><code>&lt;input size=\"2\" tabindex=\"1\" id=\"one\"\n  maxlength=\"2\" onkeyup=\"toUnicode(this)\" /&gt;\n\n&lt;input size=\"2\" tabindex=\"2\" id=\"two\"\n  maxlength=\"2\" onkeyup=\"toUnicode(this)\" /&gt;\n\n&lt;input size=\"2\" tabindex=\"3\" id=\"three\"\n maxlength=\"2\" onkeyup=\"toUnicode(this)\" /&gt;\n</code></pre>\n\n<p>then use simple javascript</p>\n\n<pre><code>function toUnicode(elmnt)\n{\n  var next;\n if (elmnt.value.length==elmnt.maxLength)\n{\nnext=elmnt.tabIndex + 1;\n//look for the fields with the next tabIndex\nvar f = elmnt.form;\nfor (var i = 0; i &lt; f.elements.length; i++)\n{\n  if (next&lt;=f.elements[i].tabIndex)\n  {\n    f.elements[i].focus();\n    break;\n    }\n   }\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to move the focus to the next element in the tab sequence based upon the current element which has focus. Thus far I have not turned up anything in my searches.</p>\n\n<pre><code>function OnFocusOut()\n{\n    var currentElement = $get(currentElementId); // ID set by OnFocusIn \n\n    currentElementId = \"\";\n    currentElement.nextElementByTabIndex.focus();\n}\n</code></pre>\n\n<p>Of course the nextElementByTabIndex is the key part for this to work. How do I find the next element in the tab sequence? The solution would need to be based using JScript and not something like JQuery.</p>\n",
            "last_activity_date": 1408573277,
            "question_id": 7208161,
            "score": 16,
            "tags": [
                "javascript",
                "jscript.net"
            ],
            "title": "Focus Next Element In Tab Index"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Yeah the issue is as you described.  The 'mobilization' is fired when the document is ready.  But since your offline DB queries are asynchronous it ends after the document.ready is fired.  So the DOM is updated later in the process and doesn't have the extra CSS added to all the divs and list items.</p>\n\n<p>I think you would have to change the source of the mobile js to not run on document ready but run when you tell it to run.  Then you would have to call that function in your database callback. </p>\n\n<p>Looks like that is the only option at the moment.</p>\n\n<p>Traditionally I used jqtouch and now sencha.  I haven't played much with jQuery mobile.</p>\n\n<p>ALTERNATIVELY - you could write out your HTML after querying it out of the database with the necessary CSS styles on it.  If you use Firebug plugin for Firefox you can see what styles / classes are getting applied when the mobilization runs.  You could just write out your HTML using those conventions.  Not ideal, but would work.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>After your AJAX call finishes and you insert the form elements try calling:</p>\n\n<pre><code>$(\"#the-page-id\").page();\n</code></pre>\n\n<p>I believe the jquery-mobile team will be adding a .refresh() method on the various UI elements to solve this issue in the future.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is messing around in undocumented internals, but the following is working for me:</p>\n\n<pre><code>$(\"#some-div\").load(\"/html/fragment/\", \n                    function() { \n                      $(this).find(\"input\").customTextInput();  \n                    });\n</code></pre>\n\n<p>There are equivalent methods for buttons, checkboxes etc.</p>\n\n<p>Have a look at the <code>_enchanceControls</code> [sic] method in <a href=\"http://code.jquery.com/mobile/1.0a1/jquery.mobile-1.0a1.js\" rel=\"nofollow\">http://code.jquery.com/mobile/1.0a1/jquery.mobile-1.0a1.js</a>.</p>\n\n<p><strong>Update for 1.0Alpha2</strong>: As can be expected when playing around with the internals of a library, this no longer works in the latest version. Changing <code>customTextInput()</code> to <code>textinput()</code> fixes it a bit, but the theme isn't fully applied for some reason. We were warned...</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p><strong>UPDATE</strong></p>\n\n<p>Beta2 has a <code>create</code> event. I will update my faq when the beta2 gets released. See <a href=\"http://jquerymobile.com/blog/2011/07/22/jquery-mobile-team-update-week-of-july-18th/\">http://jquerymobile.com/blog/2011/07/22/jquery-mobile-team-update-week-of-july-18th/</a></p>\n\n<p>Updated faq:  <a href=\"http://jquerymobiledictionary.pl/faq.html\">http://jquerymobiledictionary.pl/faq.html</a></p>\n\n<hr>\n\n<p>As CaffeineFueled proposed - <code>.page()</code> is the way to make JQM work with any part of HTML</p>\n\n<p><code>.page()</code> can be called only once for an element. Call it on a wrapping element you add to the page. It should handle everything.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>naugtur is right, you have to call .page() on any element that you add to the dom, then it works out nicely:</p>\n\n<pre><code>var el = $('&lt;input type=\"text\"/&gt;')\nel.page();\n$('#something').append(el);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's a link to the docs for this feature that Tom talked about. Not sure exactly when they were added, but I'm using it and it works for me!</p>\n\n<p><a href=\"http://jquerymobile.com/test/docs/forms/plugin-eventsmethods.html\" rel=\"nofollow\">http://jquerymobile.com/test/docs/forms/plugin-eventsmethods.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The current selected answer is slightly out of date. Use 'refresh', not 'page', for styling dynamically added content (lists or forms).</p>\n\n<blockquote>\n  <p>If you add items to a listview, you'll\n  need to call the refresh() method on\n  it to update the styles and create any\n  nested lists that are added. For\n  example, <code>$('ul').listview('refresh');</code></p>\n</blockquote>\n\n<p>via the <a href=\"http://jquerymobile.com/demos/1.0a4.1/docs/lists/docs-lists.html\" rel=\"nofollow\">jQuery Mobile docs, 1.0.4a</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This worked for me (jquerymobile1.7.0):</p>\n\n<pre><code>$('#formular').append('&lt;div data-role=\"fieldcontain\" class=\"ui-hide-label\"&gt;' +\n'&lt;label for=\"name\" class=\"ui-hidden-accessible\"&gt;Name:&lt;/label&gt;' +\n'&lt;input type=\"text\" name=\"name\" size=\"25\" id=\"name\" placeholder=\"Name\"/&gt;' +\n'&lt;/div&gt;');  \n$('#name').textinput();\n</code></pre>\n\n<p>There are currently so called plugin functions for all kind of form elements (e.g. slider, textinput etc.) to create them.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm creating a web-database driven offline web-app targeted at iOS devices.  I'm trying to use jQuery Mobile, but I have a problem in creating the various forms.</p>\n\n<p>The form options are taken from a database query, so they are inserted into the page after it has loaded, so the \"jQuery-Mobilification\" doesn't happen.  Taking a quick look through the source, there doesn't seem to be any obvious way to call into this at this stage (of course it's an alpha release, and I think this would be a reasonably common request, so I'm hopeful it will come).  Is there some kind of workaround I can put in to do this?  I'm particularly interested in radio buttons, check boxes and select lists.</p>\n",
            "last_activity_date": 1325754320,
            "question_id": 4039428,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "jquery-mobile"
            ],
            "title": "jQuery Mobile - Dynamically creating form elements"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The easiest way is:</p>\n\n<pre><code>// DOM Level 0 way\nwindow.onload = function () {\n  document.getElementById(\"someButton\").onclick = function() {\n    alert(\"Hello\");\n  };\n};\n</code></pre>\n\n<p>This will work on all browsers but note that with this approach only <em>one</em> event handler can be attached to an event.</p>\n\n<p>Also notice that the <code>onload</code> event is not completely equivalent to the jQuery's <code>ready</code> event, <code>onload</code> will be fired when all the resources of the page are completely loaded (images, sub-frames, etc...), while <code>ready</code> fires as soon the DOM has been parsed.</p>\n\n<p>If you want to attach multiple event handlers, you can use the <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html\">DOM Level 2</a> Standard <a href=\"https://developer.mozilla.org/en/DOM/element.addEventListener\"><code>element.addEventListerner</code></a> method (or <a href=\"http://msdn.microsoft.com/en-us/library/ms536343%28VS.85%29.aspx\"><code>element.attachEvent</code></a> for IE)</p>\n\n<p>The simplest abstraction to get a cross-browser way to bind events is:</p>\n\n<pre><code>function addEvent(el, eventType, handler) {\n  if (el.addEventListener) { // DOM Level 2 browsers\n    el.addEventListener(eventType, handler, false);\n  } else if (el.attachEvent) { // IE &lt;= 8\n    el.attachEvent('on' + eventType, handler);\n  } else { // ancient browsers\n    el['on' + eventType] = handler;\n  }\n}\n</code></pre>\n\n<p>Then you can:</p>\n\n<pre><code>var button = document.getElementById(\"someButton\");\naddEvent(button, 'click', function () {\n  alert(\"Hello\");\n});\n\naddEvent(button, 'click', function () {\n  alert(\"world!\");\n});\n</code></pre>\n\n<p>Be aware also that the <code>addEventListener</code> and the IE's <code>attachEvent</code> methods have their differences, when you attach multiple handlers to an event with <code>addEventListener</code> they will be fired in the same order, as the handlers were bound (FIFO), <code>attachEvent</code> will trigger the handlers in the contrary order (LIFO).</p>\n\n<p>Check an example <a href=\"http://jsbin.com/udate/2/edit\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>How about something like this?</p>\n\n<p><code>document.getElementById('someButton').onclick = function () { alert('Hello');}</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>try this: </p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"&gt;\n&lt;title&gt;Test clicks&lt;/title&gt;\n\n\n&lt;script type=\"text/javascript\"&gt;\nfunction setClicks(){\n    var element = document.getElementById('test');\n    element.onclick =  function (){\n            alert('test');\n    } \n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body onload = \"setClicks();\"&gt;\n&lt;div id=\"test\" name=\"test\" &gt;\ntest\n&lt;/div&gt;\n\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This answer isn't so simple without jQuery, because there are two major styles (depending on which browser you are using) for hooking up events.  If you don't use one of those two styles, then your events can overwrite each other.  Here's the simpler/overwriting style:</p>\n\n<pre><code>window.onload = function() {\n    document.getElementById(\"someButton\").onclick = function() {\n        alert(\"Hello\");\n    }\n}\n</code></pre>\n\n<p>But if you try and to the above twice, you'll only get one alert, because the second time will overwrite the first one.  Alternatively you can do some browser/feature detection and then use the specific event mechanisms for specific browsers; for more info on that style check out QuirksMode.com:</p>\n\n<p><a href=\"http://www.quirksmode.org/js/events_advanced.html\" rel=\"nofollow\">http://www.quirksmode.org/js/events_advanced.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As far as I know, onLoad is NOT same as On DOM Ready.</p>\n\n<p>On Load waits for all the assets to be loaded (images, other external files).\nwhereas On DOM Ready only waits for HTML to be rendered and doesn't wait for assets to be loaded.</p>\n\n<p>Correct me if I'm wrong.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to correctly do something like the following without using jQuery.</p>\n\n<pre><code>   $(document).ready(function(){\n      $(\"#someButton\").click(function(){\n        alert(\"Hello\");\n      });\n   });\n</code></pre>\n\n<p><em>Thanks.</em></p>\n",
            "last_activity_date": 1277009945,
            "question_id": 3076679,
            "score": 16,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "JavaScript event registering without using jQuery"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>If when you set disabled=\"disabled\" immediately after the user clicks the button, and the form doesn't submit because of that, you could try two things:</p>\n\n<pre><code>//First choice [given myForm = your form]:\nmyInputButton.disabled = \"disabled\";\nmyForm.submit()\n\n//Second choice:\nsetTimeout(disableFunction, 1);  \n//so the form will submit and then almost instantly, the button will be disabled  \n</code></pre>\n\n<p>Although I honestly bet there will be a better way to do this, than that.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>My guess is that your problem is because you are using asynchronous postback. While a go I had the same problem too. I created a base class for all pages, after that in load event register this function</p>\n\n<pre><code>string script = \"\\n&lt;script language=JavaScript id='PreventButtonDoubleSubmiting'&gt;\\n\";\n            script += \"function preventDoubleSubmiting(e){ \\n\";\n            script += \"if(typeof(Sys) == 'undefined') return; \\n\";\n            script += \"var prm = Sys.WebForms.PageRequestManager.getInstance();\\n\";\n            script += \"if (prm &amp;&amp; prm.get_isInAsyncPostBack()){e.processOnServer = false;return true;}\\n\";\n            script += \"return false;\\n\";\n            script += \"}\\n\";\n            script += \"&lt;/script&gt;\";\n\n\n            ClientScript.RegisterStartupScript(this.GetType(), \"PreventButtonDoubleSubmiting\", script);\n</code></pre>\n\n<p>and  for each button click I call this function onlick event. this function checks if postback is going on, prevents button click. and after postback done, buttons will work how expected. Note that I am using Dev Express ASPxButton, and e is the instance of that button, but it can easily be modified for standard asp.net button.<br/>\n<br/>\nHope this helps</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$(\"selectorbyclassorbyIDorbyName\").click(function () {\n  $(\"selectorbyclassorbyIDorbyName\").attr(\"disabled\", true).delay(2000).attr(\"disabled\", false);\n});\n</code></pre>\n\n<p>select the button and by its id or text or class ... it just disables after 1st click and enables after 20 Milli sec</p>\n\n<p>Works very well for post backs n place it in Master page, applies to all buttons without calling implicitly like <code>onclientClick</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>jQuery now has the <a href=\"http://api.jquery.com/one/\" rel=\"nofollow\"><code>.one()</code></a> function that limits any given event (such as \"submit\") to one occurrence.</p>\n\n<p>Example:</p>\n\n<pre><code>$('#myForm').one('submit', function() {\n    $(this).find('input[type=\"submit\"]').attr('disabled','disabled');\n});\n</code></pre>\n\n<p>This code will let you submit the form once, then disable the button. Change the selector in the find() function to whatever button you'd like to disable.</p>\n\n<p><strong>Note:</strong> Per Francisco Goldenstein, I've changed the selector to the form and the event type to submit. This allows you to submit the form from anywhere (places other than the button) while still disabling the button on submit.</p>\n\n<p><strong>Note 2:</strong> Per gorelog, using <code>attr('disabled','disabled')</code> will prevent your form from sending the value of the submit button. If you want to pass the button value, use <code>attr('onclick','this.style.opacity = \"0.6\"; return false;')</code> instead.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>jQuery <code>.one()</code> should not be used with the click event but with the <code>submit</code> event as described below.</p>\n\n<pre><code> $('input[type=submit]').one('submit', function() {\n     $(this).attr('disabled','disabled');\n });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>protected void Page_Load(object sender, EventArgs e)\n    {\n        // prevent user from making operation twice\n        btnSave.Attributes.Add(\"onclick\", \n                               \"this.disabled=true;\" + GetPostBackEventReference(btnSave).ToString() + \";\");\n\n        // ... etc. \n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to disable a button once it's clicked so the user can't click it more than once. (My application is written in MVC ASP.NET, I've done this in a normal ASP.NET application.)</p>\n\n<p>I tried using JavaScript and jQuery and it's not working. The button is getting disabled but the form is not being submitted.</p>\n\n<p>jQuery:</p>\n\n<pre><code>$(\"#ClickMe\").attr(\"disabled\", \"disabled\"); \n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>function DisableNextButton(btnId) {\n    document.getElementById(btnId).disabled = 'true';\n}\n</code></pre>\n\n<p>Both methods work great, but now the form won't submit.</p>\n",
            "last_activity_date": 1425157840,
            "question_id": 2323948,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "asp.net-mvc"
            ],
            "title": "Disabling the button after once click"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>You can't set value to a table's innerHTML, you should access to child cells or rows and change them like that : </p>\n\n<pre><code>document.getElementById(tabid).rows[0].cells.innerHTML = 'blah blah';\n</code></pre>\n\n<p>For more info/example : <a href=\"http://www.w3schools.com/JS/js_examples_3.asp\">Table, TableHeader, TableRow, TableData Objects</a></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>This is not a Big issue, since i faced same problem few days ago and the reason this error\noccurs in ie is that - There exists an error in our html format or you are using an element other than <code>&lt;td&gt;</code> to replace innerHTML ie use only, dont use tables,divs to replace innerHTML.</p>\n\n<ul>\n<li>SwapnilK</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>In IE8, you cannot change the innerHTML of an object when the code that attempts that is fired from within the object.</p>\n\n<p>For example:</p>\n\n<pre><code>&lt;span id='n1'&gt;\n  &lt;input type=button value='test' onclick='DoSomething(this);'&gt;\n&lt;/span&gt;\n</code></pre>\n\n<p>with the following code tucked in some remote corner of your document:</p>\n\n<pre><code>&lt;script type='text/javascript'&gt;\n  function DoSomething(element)\n  {\n    document.getElementById(\"n1\").innerHTML = \"This is a test\"\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>This will fail with the error unknown runtime error.  I believe it has to do with the fact that you're trying to replace the HTML code which fired the current line of execution.  The onclick event is part of the code being replaced by the DoSomething function.  IE8 doesn't like that.</p>\n\n<p>I resolved my issue by setting a timer event for 250 milliseconds, such that the function called at the end of the 250 milliseconds replaces the span's innerHTML.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Great, I had the same situation with setting the <code>innerHTML</code>. When I read this I realised that one of the elements was a <code>TR</code> and one was a <code>TD</code> and the <code>TD</code> was working.</p>\n\n<p>Changing the code so that they're both <code>TD</code>s fixes it, which means that it is a rather non-obvious problem caused by the structure of tables.</p>\n\n<p>Presumably it throws the DOM awry when I start changing table rows since it can't store the table as an array any more.</p>\n\n<p>I'm sure IE could give a more informative error message since it can't be that uncommon for the DOM to change on the fly and it seems strange that this would only throw an error for tables.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I had the same issue but my error was because I was inserting a <code>p</code> tag directly underneath a <code>p</code> element as in:</p>\n\n<pre><code>document.getElementById('p-element').innerHTML = '&lt;p&gt;some description&lt;/p&gt;';\n</code></pre>\n\n<p>I don't really see how this is HTML format error; seems more like another IE8 bug.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Ohh yes - remember that the HTML structure has to be valid.</p>\n\n<p>I tried loading an entire page into a <code>&lt;p&gt;</code> tag - it failed (obviously), changing it to a <code>&lt;div&gt;</code> tag solved my problem!</p>\n\n<p>So remember the HTML structure!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I find out that in IE8 some elements are in readonly: COL, COLGROUP, FRAMESET, HEAD, HTML, STYLE, TABLE, TBODY, TFOOT, THEAD, TITLE, TR.</p>\n\n<p>Therefore if you try to set innerHTML for these elements IE8 notify alter with Unknown Runtime Error.</p>\n\n<p>More details here: <a href=\"http://msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\">http://msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx</a>.</p>\n\n<p>The simplest way is to convert read-only elements to div element.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>why it happend in IE...</p>\n\n<p>case scenario:</p>\n\n<p>Javascript  unknown runtime error  in IE while accessing Div inside Div to add ajax contents. </p>\n\n<p>solution:</p>\n\n<p>dont ever place nested divs in between the form tags to play with there contents .. :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When using YUI try to use </p>\n\n<pre><code>Y.one('#'+data.id).setContent(html); \n</code></pre>\n\n<p>instead of:</p>\n\n<pre><code>Y.one('#'+data.id).set('innerHTML' , html);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you need to set innerHTML to \"\" (empty string) then you can use removeChild instead</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code>function DeleteData(ID)\n{\n var ctrlId=ID.id;\n\n var divcontents=document.getElementById(ctrlId).innerHTML;\n var tabid=ctrlId.replace(/div/,'tab');\n var tabcontents=document.getElementById(tabid).innerHTML;\n alert(document.getElementById(tabid).innerHTML);\n document.getElementById(tabid).innerHTML=\"&lt;TBody&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/TBody&gt;\";\n document.getElementById(ctrlId).innerHTML='';\n\n}\n</code></pre>\n\n<p>I am trying to replace the Table with empty table but </p>\n\n<pre><code>document.getElementById(tabid).innerHTML=\"&lt;TBody&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/TBody&gt;\";\n</code></pre>\n\n<p>this line is causing <code>Unknown Runtime Error</code></p>\n",
            "last_activity_date": 1385537479,
            "question_id": 555965,
            "score": 16,
            "tags": [
                "javascript",
                "debugging",
                "innerhtml"
            ],
            "title": "Debugging IE8 Javascript Replace innerHTML Runtime Error"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>$http.defaults.headers.common['Auth-Token'] = 'token';\n</code></pre>\n\n<p>It seems <code>headers()</code> normalizes the key names.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>You can use default headers for angular <strong>1.0.x</strong>:</p>\n\n<pre><code>$http.defaults.headers.common['Authentication'] = 'authentication';\n</code></pre>\n\n<p>or request interceptor for angular <strong>1.1.x+</strong>:</p>\n\n<pre><code>myapp.factory('httpRequestInterceptor', function () {\n  return {\n    request: function (config) {\n\n      // use this to destroying other existing headers\n      config.headers = {'Authentication':'authentication'}\n\n      // use this to prevent destroying other existing headers\n      // config.headers['Authorization'] = 'authentication;\n\n      return config;\n    }\n  };\n});\n\nmyapp.config(function ($httpProvider) {\n  $httpProvider.interceptors.push('httpRequestInterceptor');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                }
            ],
            "body": "<p>Is there a way to set the <code>$httpProvider</code> headers outside of <code>angular.module('myApp', []).config()</code>?</p>\n\n<p>I'm getting an Auth-Token from the server after I login the user, and I need to add it as a HTTP Header to all following requests.</p>\n",
            "last_activity_date": 1414280069,
            "question_id": 14183025,
            "score": 15,
            "tags": [
                "javascript",
                "mvvm",
                "angularjs"
            ],
            "title": "Setting application wide HTTP headers in AngularJS"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><code>new Date</code> creates a new Date object that you can modify or initialize with a different date while <code>Date</code> returns a string of the current date/time, ignoring its arguments.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>From the <a href=\"http://es5.github.com/#x15.9\">specs</a>:</p>\n\n<blockquote>\n  <p>When <code>Date</code> is called as a function rather than as a constructor, it returns a String representing the current time (UTC).</p>\n</blockquote>\n\n<p>and:</p>\n\n<blockquote>\n  <p>When <code>Date</code> is called as part of a <code>new</code> expression, it is a constructor: it initialises the newly created object.</p>\n</blockquote>\n\n<p>So, <code>new Date(...)</code> returns an object such that <code>obj instanceof Date</code> is true, whereas <code>Date(...)</code> basically returns the same as <code>new Date().toString()</code>.</p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p><code>new Date()</code> returns the date based on the input parameter and <code>Date()</code> returns todays date on the browser.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Date lets you create objects that represent date/time. It's NOT meant to be called like a function. You can get more information here: <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date\" rel=\"nofollow\">Date - MDN</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Check out <a href=\"http://www.javascripture.com/Date\">JavaScript Date</a> for a quick API reference and code test bed.  You can see the <code>Date()</code> function called without <code>new</code> does not take any parameters and always returns a <code>string</code> representation of the current date/time.  If you modify the sample to be:</p>\n\n<pre><code>console.log(Date());\nconsole.log(Date(1329429600000));\n</code></pre>\n\n<p>You'll find the results for both are the same (because JavaScript ignores extra arguments passed to functions):</p>\n\n<pre><code>Wed Apr 11 2012 09:58:11 GMT-0700 (PDT)\nWed Apr 11 2012 09:58:11 GMT-0700 (PDT)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Calling a constructor as a Function is plain wrong it'll do (probably) unexpected things with your app scope and before very long you'll be the focus of attention in a group bug fixing session.</p>\n\n<p>Create a Date Object as intended by the designers of the spec, don't code to the workarounds implemented as safeguards by engineers that think JS programmers are stupid. (worked in the lab, was in the next chair during the conversation, dealt with it and moved on)</p>\n\n<p>If you are madly against new you can try object.create but at time of writing it's slower and unless you are planning to implement polymorphic inheritance then it is extra effort for less reward.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>Date</code>  class can be called as <strong>constructor</strong> or as <strong>method</strong> to have a built-in code like : </p>\n\n<pre><code>function Date(args){\n   if (this.constructor == Date){\n        // if you call : new Date(args)\n    }else{\n        // if you call as method : Date()\n      return new Date()\n   }\n\n}\n</code></pre>\n\n<p>Thus , if you called it like method , it re-call the constructor to return the current date&amp;time .  </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><code>new Date()</code> takes an ordinal and returns a <code>Date</code> object.<br>\nWhat does <code>Date()</code> do, and how come it gives a different time?</p>\n\n<pre><code>&gt;&gt;&gt; new Date(1329429600000)\nDate {Fri Feb 17 2012 00:00:00 GMT+0200 (Jerusalem Standard Time)}\n&gt;&gt;&gt; Date(1329429600000)\n\"Tue Mar 06 2012 15:29:58 GMT+0200 (Jerusalem Standard Time)\"\n</code></pre>\n",
            "last_activity_date": 1417611606,
            "question_id": 9584719,
            "score": 15,
            "tags": [
                "javascript"
            ],
            "title": "Date vs new Date in JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The problem with editing JavaScript like you can CSS and HTML is that there is no clean way to propagate the changes. JavaScript can modify the DOM, send Ajax requests, and dynamically modify existing objects and functions at runtime. So, once you have loaded a page with JavaScript, it might be completely different after the JavaScript has run. The browser would have to keep track of every modification your JavaScript code performs so that when you edit the JS, it rolls back the changes to a clean page. </p>\n\n<p>But, you can modify JavaScript dynamically a few other ways:</p>\n\n<ul>\n<li>JavaScript injections in the URL bar: <code>javascript: alert (1);</code></li>\n<li>Via a JavaScript console (there's one built into Firefox, Chrome, and newer versions of IE</li>\n<li>If you want to modify the JavaScript files as they are served to your browser (i.e. grabbing them in transit and modifying them), then I can't offer much help. I would suggest using a debugging proxy: <a href=\"http://www.fiddler2.com/fiddler2/\">http://www.fiddler2.com/fiddler2/</a></li>\n</ul>\n\n<p>The first two options are great because you can modify any JavaScript variables and functions currently in scope. However, you won't be able to modify the code and run it with a \"just-served\" page like you can with the third option.</p>\n\n<p>Other than that, as far as I know, there is no edit-and-run JavaScript editor in the browser. Hope this helps,</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>I would still recommend Firebug. Not only it can debug JS within your JSP files, it can enhance debugging experience with addons like <code>JS Deminifier</code> (if your production JS is minified), <code>FireQuery</code>, <code>FireRainbow</code> and more.</p>\n\n<p>There is also Firebug lite which is nothing but a bookmarklet. It lets you do limited things but still is useful.</p>\n\n<p>Chrome as a developer console built-in that would let you modify javascript.</p>\n\n<p>Using these tools, you should be able to inject your own JS too.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know that you can modify a javascript file when using Google Chrome. </p>\n\n<ol>\n<li>Open up Chrome Inspector, go to the \"Scripts\" tab.</li>\n<li>Press the drop-down menu and select the javascript file that you want to edit.</li>\n<li>Double click in the text field, type in what ever you want and delete whatever you want.</li>\n<li>Then all you have to do is press Ctrl + S to save the file.</li>\n</ol>\n\n<p>Warning: If you refresh the page, all changes will go back to original file.\nI recommend to copy/paste the code somewhere else if you want to use it again.</p>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I'd like to get back to <em>Fiddler</em>. After having played with that for a while, it is clearly the best way to edit any web requests on-the-fly. Being JavaScript, POST, GET, HTML, XML whatever and anything. It's free, but a little tricky to implement. Here's my HOW-TO:</p>\n\n<p>To use Fiddler to manipulate JavaScript (on-the-fly) with Firefox, do the following:</p>\n\n<p>1) Download and install <a href=\"http://fiddler2.com/get-fiddler\" rel=\"nofollow\">Fiddler</a></p>\n\n<p>2) Download and install the Fiddler extension:\n   \"<a href=\"http://fiddler2.com/add-ons\" rel=\"nofollow\">3 Syntax-Highlighting add-ons</a>\"             </p>\n\n<p>3) Restart Firefox and enable the \"<a href=\"http://fiddler2.com/documentation/KnowledgeBase/FiddlerHook\" rel=\"nofollow\">FiddlerHook</a>\" extension</p>\n\n<p>4) Open Firefox and enable the FiddlerHook <a href=\"http://fiddler2.com/blog/blog/2013/04/01/configuring-firefox-for-fiddler\" rel=\"nofollow\">toolbar button</a>:\n    <code>View &gt; Toolbars &gt; Customize...</code></p>\n\n<p>5) Click the Fiddler tool button and wait for fiddler to start.</p>\n\n<p>6) Point your browser to Fiddler's test URLs:</p>\n\n<pre><code>Echo Service:  http://127.0.0.1:8888/\nDNS Lookup:    http://www.localhost.fiddler:8888/\n</code></pre>\n\n<p>7) Add <a href=\"http://fiddler2.com/documentation/Extend-Fiddler/AddRules\" rel=\"nofollow\">Fiddler Rules</a> in order to intercept and edit JavaScript\n   before reaching the browser/server. In Fiddler click:\n    <code>Rules &gt; Customize Rules...</code>. <strong>[CTRL-R]</strong>\n   This will start the ScriptEditor.</p>\n\n<p>8) Edit and Add the <a href=\"http://fiddler2.com/documentation/KnowledgeBase/FiddlerScript/PauseSessions\" rel=\"nofollow\">following rules</a>:</p>\n\n<hr>\n\n<p><strong>a)</strong> To pause JavaScript to allow editing, add under the function \"<em>OnBeforeResponse</em>\":</p>\n\n<pre><code>if (oSession.oResponse.headers.ExistsAndContains(\"Content-Type\", \"javascript\")){\n  oSession[\"x-breakresponse\"]=\"reason is JScript\"; \n}\n</code></pre>\n\n<p><strong>b)</strong> To pause HTTP POSTs to allow editing when using the POST verb, edit \"<em>OnBeforeRequest</em>\":</p>\n\n<pre><code>if (oSession.HTTPMethodIs(\"POST\")){\n  oSession[\"x-breakrequest\"]=\"breaking for POST\";\n}\n</code></pre>\n\n<p><strong>c)</strong> To pause a request for an XML file to allow editing, edit \"<em>OnBeforeRequest</em>\":</p>\n\n<pre><code>if (oSession.url.toLowerCase().indexOf(\".xml\")&gt;-1){\n  oSession[\"x-breakrequest\"]=\"reason_XML\"; \n}\n</code></pre>\n\n<hr>\n\n<p>[9] TODO: Edit the above <code>CustomRules.js</code> to allow for disabling <strong>(a-c)</strong>.</p>\n\n<p>10) The browser loading will now stop on every JavaScript found and display a red pause \n    mark for every script. In order to continue loading the page you need to click\n    the green \"Run to Completion\" button for every script. (Which is why we'd like\n    to implement [9].)</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Within JSP files, I have some pretty complicated Javascript.  On a production machine, we're seeing a very weird bug that we have not been able to understand.  We have never been able to replicate it in a local or development environment.  It might be related to the javascript, but I haven't found a good way to do this: use my browser to visit the page (on the production website) and then use browser tools to edit the javascript that runs on that page, including on reloads of the page.</p>\n\n<p>I'm always able to do this to tweak CSS etc, but as these questions point out, it's not obvious how to tweak JS client-side:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/3701225/best-way-to-capture-javascript-errors-in-production\">Best way to capture javascript errors in production</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2558346/how-to-edit-javascript-in-browser\">How to edit javascript in browser?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/3203779/how-to-edit-javascript-in-firebug-in-mozilla\">How to edit javascript in firebug in Mozilla?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2725669/how-can-i-edit-a-js-file-sent-by-the-server-before-it-gets-to-my-browser\">How can I edit a js file sent by the server before it gets to my browser?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/3936490/how-to-replace-javascript-of-production-website-with-local-javascript\">How to replace Javascript of production website with local Javascript?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/5082844/with-firefox-w-firebug-how-can-i-write-javascript-in-the-browser-and-use-the-js\">with firefox w/firebug, how can I write javascript in the browser and use the .js file objects also?</a></li>\n</ul>\n\n<p>However, those answers don't help me because:</p>\n\n<ul>\n<li>\"Execute JS\" (Firefox addon) doesn't seem to work (doesn't do more than the console in Chrome already can do), </li>\n<li>\"Charles\" might work if I'd used separated js files, but my javascript is embedded in JSP</li>\n</ul>\n\n<p>It seems like <a href=\"http://stackoverflow.com/questions/5191284/how-to-modify-javascript-code-on-the-fly-in-browser-in-debugging-mode/5281401#5281401\">How to modify javascript code on the fly in browser in debugging mode?</a> is the closest thing to what I'm talking about, but that guy isn't able to talk about what he did because it was for his employer.</p>\n\n<p>Thanks for your help!\nRyan</p>\n",
            "last_activity_date": 1389880115,
            "question_id": 6657229,
            "score": 15,
            "tags": [
                "javascript",
                "browser",
                "firebug"
            ],
            "title": "How can I edit javascript in my browser like I can use Firebug to edit CSS/HTML?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The <code>this</code> keyword refers to the object the function belongs to, or the <code>window</code> object if the function belongs to no object.</p>\n\n<p>It's used in OOP code, to refer to the class/object the function belongs to\nFor example:</p>\n\n<pre><code>function foo() {\n    this.value = 'Hello, world';\n\n    this.bar = function() {\n        alert(this.value);\n    }\n}\n\nvar inst = new foo();\ninst.bar();\n</code></pre>\n\n<p>This alerts: <code>Hello, world</code></p>\n\n<p>You can manipulate which object <code>this</code> refers to by using the <code>apply()</code> or <code>call()</code> functions. <em>(A very very handy feature at times)</em>  </p>\n\n<pre><code>var bar1 = new function() {\n    this.value = '#1';\n}\nvar bar2 = new function() {\n    this.value = '#2';\n}\n\nfunction foo() {\n    alert(this.value);\n}\n\nfoo.call(bar1); // Output: #1\nfoo.apply(bar2, []); // Output: #2\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>In JavaScript everything is object even functions. When you say <code>this.foo</code> in following code</p>\n\n<pre><code>function Foo()\n{\n   this.foo = \"bar\"; // &lt;- What is \"this\" here?\n}\n</code></pre>\n\n<p><code>foo</code> becomes member variable of <code>Foo</code> object</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Read what Douglas Crockford has to say on the matter, to quote him from <a href=\"http://javascript.crockford.com/survey.html\">A Survey of the JavaScript Programming Language</a>:</p>\n\n<blockquote>\n  <p>A function is an object. It can contain members just as other objects. This allows a function to contain its own data tables. It also allows an object to act as a class, containing a constructor and a set of related methods.</p>\n  \n  <p>A function can be a member of an object. When a function is a member of an object, it is called a method. There is a special variable, called this that is set to the object when a method of the object is called.</p>\n  \n  <p>For example, in the expression foo.bar(), the this variable is set to the object foo as a sort of extra argument for the function bar. The function bar can then refer to this to access the object of interest.</p>\n  \n  <p>In a deeper expression like do.re.mi.fa(), the this variable is set to the object do.re.mi, not to the object do. In a simple function call, this is set to the Global Object (aka window), which is not very useful. The correct behavior should have been to preserve the current value of this, particularly when calling inner functions.</p>\n</blockquote>\n\n<p>Also 'this' can change depending on how your function is invoked, read on <a href=\"https://developer.mozilla.org/En/Core%5FJavaScript%5F1.5%5FReference/Objects/Function/Apply\">apply function</a> and <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference%3aGlobal%5FObjects%3aFunction%3acall\">call function</a>.</p>\n\n<p>I would recommend that you spend time learning form one of JavaScript's greatest minds in his (free) presentations, linked from <a href=\"http://www.metafilter.com/61049/Douglas-Crockford-Teaches-JavaScript\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>In JavaScript, the convention (and this is only a convention) is that any function that begins with a capital letter is to be used as a constructor.  Then, one would call</p>\n\n<p><code>var foo = new Foo()</code> and <code>this</code> would refer to the newly created object that is about to be referenced by <code>foo</code>.</p>\n\n<p>Of course, there is nothing stopping you from calling <code>Foo()</code> on its own, in which case <code>this</code> would then refer to the object from which the function was called.  To avoid confusion, that is not recommended.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>My question is:</p>\n\n<pre><code>function Foo()\n{\n   this.foo = \"bar\"; // &lt;- What is \"this\" here?\n}\n</code></pre>\n\n<p>From what I can tell it depends on how <code>Foo</code> is used, i.e. as a constructor or as a function. What can <code>this</code> be in different circumstances?</p>\n",
            "last_activity_date": 1261866763,
            "question_id": 1963357,
            "score": 15,
            "tags": [
                "javascript",
                "function",
                "this"
            ],
            "title": "this inside function"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Try nulling elements variable array in the end of the initialize function</p>\n\n<pre><code>    ...\n\n    if (ads.length &gt; 0)\n        {\n        this.imagesFx = new Fx.Elements(elements,\n            {\n            wait: false,\n            duration: 1000\n            });\n        this.moveNext.periodical(2500, this);\n        }\n\n    elements = null; //Add THIS!\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A way to track memory leaks in Firefox is with the <a href=\"https://addons.mozilla.org/de/firefox/addon/2490\">Leak Monitor Addon</a>. It shows memory leaks of javascript (including extension-scripts).</p>\n\n<p>Please remind that the plugin will sometimes show leaked objects that will get cleaned up later by the garbage collection. If that is the case the plugin will launch a new window showing you the new status.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Update to MooTools 1.2.1, we've improved garbage collection and leak handling.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've been trying to track this one for literally a month now without any success. I have this piece of code on an car advertising website which basically allows thumbnails to rotate in search results given that a car has multiple pictures. You can see it in action at the following:</p>\n\n<blockquote>\n  <p><a href=\"http://www.abcavendre.com/4506691919/\" title=\"Inventaire\"><code>http://www.abcavendre.com/4506691919/</code></a></p>\n</blockquote>\n\n<p>It is built on the <a href=\"http://www.mootools.net/\" title=\"Mootools\">mootools 1.2</a> framework. The problem is that this script, under Firefox 3, consumes a rather large amount of memory overtime when a page is full of those rotating pictures, such as this inventory page:</p>\n\n<blockquote>\n  <p><a href=\"http://www.abcavendre.com/Vitrine/Israel_Huttman/\" title=\"Inventaire\"><code>http://www.abcavendre.com/Vitrine/Israel_Huttman/</code></a></p>\n</blockquote>\n\n<p>You can see the source of the script in question here:</p>\n\n<blockquote>\n  <p><a href=\"http://www.abcavendre.com/scripts/showcase_small.js\" title=\"Javascript Source\"><code>http://www.abcavendre.com/scripts/showcase_small.js</code></a></p>\n</blockquote>\n\n<p>Any ideas as to what is causing the memory leak? The weird thing is this code behaves properly under IE7.</p>\n",
            "last_activity_date": 1300451836,
            "question_id": 200822,
            "score": 15,
            "tags": [
                "javascript",
                "memory-leaks",
                "mootools"
            ],
            "title": "How do I track and debug JavaScript memory leaks in Firefox?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It's up to the package authors to specify what files to exclude from the package using the <a href=\"https://github.com/twitter/bower#defining-a-package\"><code>ignore</code></a> property. For now just include the files you want in the your app/website and ignore the rest.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>You can check out <a href=\"https://github.com/blittle/bower-installer\" rel=\"nofollow\">bower-installer</a>. </p>\n\n<p><code>bower list --path</code> usually tells about the main js file in the package, which <code>bower-installer</code> conveniently picks up and exports only those files to your asset directories. You can then use this directory instead and ignore the <code>bower_components</code> dir.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I recently <a href=\"http://joshbranchaud.com/blog/2014/02/19/Managing-Single-Files-With-Bower.html\">wrote up a possible solution</a> to this problem and will highlight the main points below.</p>\n\n<p>If you know you want a specific file from a particular package, it is easy enough to tell bower to only grab that file. For instance, with <code>normalize.css</code>, the only file that I care about is, well, <code>normalize.css</code>. So instead of typing:</p>\n\n<pre><code>bower install --save normalize-css\n</code></pre>\n\n<p>I can be more specific and tell bower to just download the <code>css</code> file:</p>\n\n<pre><code>bower install --save https://raw.github.com/necolas/normalize.css/master/normalize.css\n</code></pre>\n\n<p>That, of course, will always grab the latest version of normalize from the repository's master branch when <code>bower install</code> is invoked for your project. If, however, I want to make sure I always get the <code>3.0.0</code> version of normalize, then I can dig through the releases/history to find the appropriate URL and viola:</p>\n\n<pre><code>bower install --save http://necolas.github.io/normalize.css/3.0.0/normalize.css\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I am using bower to install dependencies for my project(I know there is yeoman but I am using bower). After setting up component.json file, when I do bower install it installs dependencies to correct directory but it install lots of other unnecessary files with it too. Now I want bower to install the specific file which is needed for example <code>jquery.js, backbone.js and underscore.js</code> and nothing else. <strong>How can I do it with bower?</strong></p>\n",
            "last_activity_date": 1401110159,
            "question_id": 16129503,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "bower"
            ],
            "title": "bower installs several files. why and how can I change it?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>In node, the main processing cost is I/O operations, not the actual JavaScript itself. So for example:</p>\n\n<pre><code>fs.readFile(myFile, function (err, data) {\n    processTheFile(data);\n});\n</code></pre>\n\n<p>Here, the gap between calling <code>readFile</code> and the callback being fired will be several times longer than the length of time the callback takes. (If it's the other way round, you probably shouldn't be using node.)</p>\n\n<p>So optimising the <code>processTheFile</code> function for speed is pointless, because you're saving a small percentage of a very very small number.</p>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>I was wondering, since Clojure Compiler and UglifyJS not only optimize code for size but also for performance (although I think size is the main priority), would my node.js app run faster if it was minified ? I know it may depend from app, but I'm asking this in general.</p>\n",
            "last_activity_date": 1345623978,
            "question_id": 12068971,
            "score": 14,
            "tags": [
                "javascript",
                "node.js",
                "minify",
                "google-closure-compiler",
                "uglifyjs"
            ],
            "title": "Does it make sense to minify code used in NodeJS?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>just use</p>\n\n<pre><code>$('#tblOne &gt; tbody  &gt; tr').each(function() {...code...});\n</code></pre>\n\n<p>using <code>&gt;</code> selector you will walk through immediate descendents (and not all descendents)</p>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>Use <a href=\"http://api.jquery.com/child-selector/\">immediate children selector</a> <code>&gt;</code>:</p>\n\n<pre><code>$('#tblOne &gt; tbody  &gt; tr')\n</code></pre>\n\n<blockquote>\n  <p>Description: Selects all <strong>direct child elements</strong> specified by \"child\" of\n  elements specified by \"parent\".</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Just a recommendation:</p>\n\n<p>I'd recommend using the DOM table implementation, it's very straight forward and easy to use, you really don't need jQuery for this task.</p>\n\n<pre><code>var table = document.getElementById('tblOne');\n\nvar rowLength = table.rows.length;\n\nfor(var i=0; i&lt;rowLength; i+=1){\n  var row = table.rows[i];\n\n  //your code goes here, looping over every row.\n  //cells are accessed as easy\n\n  var cellLength = row.cells.length;\n  for(var y=0; y&lt;cellLength; y+=1){\n    var cell = row.cells[y];\n\n    //do something with every cell here\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/1891357/how-to-iterate-a-table-rows-with-jquery-and-access-some-cell-values\">How to iterate a table rows with JQuery and access some cell values?</a>  </p>\n</blockquote>\n\n\n\n<p>I am having something like:</p>\n\n<pre><code>&lt;table id=\"tblOne\"&gt;\n            &lt;tbody&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;\n                        &lt;table id=\"tblTwo\"&gt;\n                            &lt;tbody&gt;\n                                &lt;tr&gt;\n                                    &lt;td&gt;\n                                        Items\n                                    &lt;/td&gt;\n                                &lt;/tr&gt;\n                                &lt;tr&gt;\n                                    &lt;td&gt;\n                                        Prod\n                                    &lt;/td&gt;\n                                &lt;/tr&gt;\n                            &lt;/tbody&gt;\n                        &lt;/table&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;\n                        Item 1\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;\n                        Item 2\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n</code></pre>\n\n<p>I have written jQuery to loop through each tr like:</p>\n\n<pre><code>$('#tblOne tr').each(function() {...code...});\n</code></pre>\n\n<p>But problem is that it loops through the \"tr\" of \"tblTwo\" also which I don't want.\nCan anyone please suggest something to solve this?</p>\n",
            "last_activity_date": 1361391744,
            "question_id": 10431987,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "table",
                "each",
                "tablerow"
            ],
            "title": "jQuery each loop in table row"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Pixels and ems are fundamentally different types of unit.  You can't simply convert between them.</p>\n\n<p>For instance, a user with a default font size of 16px on a site where top-level headings are styled at 200% font size, 1em may be equal to 32px.  Move the heading elsewhere in the document, it could be 64px or 16px.  Give the same document to a different user, it might be 30/60/15px.  Start talking about a different element, and it can change again.</p>\n\n<p>The closest you can come to what you want is to convert from pixels to ems+document+context+settings.  But if somebody has asked you to lay out your project with ems, they will probably not be pleased that you are trying to do it in pixels then \"converting\".</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Ems don't equal pixels in anyway.  They are a relative measurement.</p>\n\n<pre><code>&lt;span style=\"font-size: 1em;\"&gt;This is 1em font size, which means the text is the same size as the parent&lt;/span&gt;\n\n&lt;span style=\"font-size: 1.5em;\"&gt;This is 1.5em font size, which means the text is 150% the size as the parent&lt;/span&gt;\n</code></pre>\n\n<p>The base size is determined by the user-agent (browser).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The following seems to do as you require, though it's based on the <code>font-size</code> of the parent, and of the element itself, being returned in <code>px</code>:</p>\n\n<pre><code>function px2em(elem) {\n    var W = window,\n        D = document;\n    if (!elem || elem.parentNode.tagName.toLowerCase() == 'body') {\n        return false;\n    }\n    else {\n        var parentFontSize = parseInt(W.getComputedStyle(elem.parentNode, null).fontSize, 10),\n            elemFontSize = parseInt(W.getComputedStyle(elem, null).fontSize, 10);\n\n        var pxInEms = Math.floor((elemFontSize / parentFontSize) * 100) / 100;\n        elem.style.fontSize = pxInEms + 'em';\n    }\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/davidThomas/nEnNC/2\">JS Fiddle proof of concept</a>.</p>\n\n<p>Notes:</p>\n\n<ul>\n<li><p>The function returns false, if the element you're trying to convert to <code>em</code> is the <code>body</code>, though that's because I couldn't work out whether it was sensible to set the value to <code>1em</code> or simply leave it alone.</p></li>\n<li><p>It uses <code>window.getComputedStyle()</code>, so it's not going to work with IE, without some adjustments.</p></li>\n</ul>\n\n<p>References:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Math/floor\"><code>Math.floor()</code></a>.</li>\n<li><a href=\"https://developer.mozilla.org/en/DOM/Node.parentNode\"><code>parentNode</code></a>.</li>\n<li><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\"><code>parseInt()</code></a>.</li>\n<li><a href=\"https://developer.mozilla.org/en/DOM/element.tagName\"><code>tagName</code></a>.</li>\n<li><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/toLowerCase\"><code>toLowerCase()</code></a>.</li>\n<li><a href=\"https://developer.mozilla.org/en/DOM/window.getComputedStyle\"><code>window.getComputedStyle()</code></a>.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I think your question is very important. Since the classes of display resolutions are rapidly increasing, using em positioning to support wide range of screen resolutions is a really appealing approach. But no matter how hard you try to keep everything in em -- sometimes you get a pixel value maybe from JQuery drag and drop or from another library, and you would want to convert this value to em before sending it back to server for persistence. That way next time user looks at the page, item would be in correct position -- regardless of screen resolution of the device they are using. </p>\n\n<p>JQuery plugins are not very scary when you can review the code, specially if they are short and sweet like <a href=\"https://raw.github.com/arasbm/jQuery-Pixel-Em-Converter/master/pxem.jQuery.js\">this plugin to convert pixel values to em</a> as you want. In fact it is so short I will paste the whole thing here. For copyright notice see the link.</p>\n\n<pre><code>$.fn.toEm = function(settings){\n    settings = jQuery.extend({\n        scope: 'body'\n    }, settings);\n    var that = parseInt(this[0],10),\n        scopeTest = jQuery('&lt;div style=\"display: none; font-size: 1em; margin: 0; padding:0; height: auto; line-height: 1; border:0;\"&gt;&amp;nbsp;&lt;/div&gt;').appendTo(settings.scope),\n        scopeVal = scopeTest.height();\n    scopeTest.remove();\n    return (that / scopeVal).toFixed(8) + 'em';\n};\n\n\n$.fn.toPx = function(settings){\n    settings = jQuery.extend({\n        scope: 'body'\n    }, settings);\n    var that = parseFloat(this[0]),\n        scopeTest = jQuery('&lt;div style=\"display: none; font-size: 1em; margin: 0; padding:0; height: auto; line-height: 1; border:0;\"&gt;&amp;nbsp;&lt;/div&gt;').appendTo(settings.scope),\n        scopeVal = scopeTest.height();\n    scopeTest.remove();\n    return Math.round(that * scopeVal) + 'px';\n};\n</code></pre>\n\n<p>I just tested this in my application, it works great. So I thought I share.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Old question, but for reference, here is something I cobbled together, scope and suffix are optional. Pass it a rem or em value as string, eg. '4em' [ you can use spaces and upper/lowercase ] and it will return the px value. Unless you give it a scope, which would be the target element for finding the local EM value, it will default to body, effectively giving you the rem value. Lastly, the optional suffix parameter [ boolean ] will add 'px' to the returned value such that 48 becomes 48px for example. </p>\n\n<p>ex: <code>emRemToPx( '3em', '#content' )</code></p>\n\n<p>return 48 on a font-size 16px / 100% document</p>\n\n<pre><code>/**\n* emRemToPx.js | @whatsnewsisyphus \n* To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to this software to the public domain worldwide. This software is distributed without any warranty.\n* see CC0 Public Domain Dedication &lt;http://creativecommons.org/publicdomain/zero/1.0/&gt;.\n*/\n  var emRemToPx = function( value, scope, suffix ) {\n    if (!scope || value.toLowerCase().indexOf(\"rem\") &gt;= 0) {\n      scope = 'body';\n    }\n    if (suffix === true) {\n      suffix = 'px';\n    } else {\n      suffix = null;\n    }\n    var multiplier = parseFloat(value);\n    var scopeTest = $('&lt;div style=\"display: none; font-size: 1em; margin: 0; padding:0; height: auto; line-height: 1; border:0;\"&gt;&amp;nbsp;&lt;/div&gt;').appendTo(scope);\n    var scopeVal = scopeTest.height();\n    scopeTest.remove();\n    return Math.round(multiplier * scopeVal) + suffix;\n  };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Check this small script out:\n<a href=\"https://github.com/normanzb/size\" rel=\"nofollow\">https://github.com/normanzb/size</a></p>\n\n<p>it helps you converting the units as long as you pass in a reference dom element</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am looking for a easy way to add a line of code to a plugin of my to convert a couple of  pixels values into em values, this because the layout of my project need to be in em's. Is there an easy way to do this because i dont want to add a thirdparty plugin to the site.</p>\n\n<p>Wont post the code here as it has nothing to do with the plugin it self.</p>\n\n<p>Thanks.</p>\n\n<p>Example:   13px -> ??em</p>\n",
            "last_activity_date": 1417025017,
            "question_id": 10305993,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "pixel",
                "em"
            ],
            "title": "jQuery/JavaScript: convert pixels to em in a easy way"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Yes, modern browsers (eventually) release the memory used by event handlers in DOM nodes. However, old versions of Internet Explorer don't, so it's always good practice to remove event listeners before removing the nodes from the DOM.</p>\n\n<p>This is a good article for understanding what's going on: <a href=\"http://msdn.microsoft.com/en-us/library/bb250448(v=vs.85).aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/bb250448(v=vs.85).aspx</a></p>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>If I attached a bunch of events to some DOM elements - and then remove them - will the memory used for their event handlers or other attributes still be used?</p>\n\n<p>I ask because I want to know if I will use a bunch of memory if I keep refilling an area of a page with new elements from AJAX requests and binding events to them - only to delete them and repeat the process when a new AJAX result comes in.</p>\n",
            "last_activity_date": 1324160167,
            "question_id": 8547363,
            "score": 14,
            "tags": [
                "javascript",
                "dom",
                "memory-leaks"
            ],
            "title": "Does Javascript remove event handlers of deleted DOM elements?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I don't believe you can, unless you know the windows' names, which I'm guessing you don't. (If you know their names, you can use <code>window.open(\"\", \"name\")</code> to get a reference to them.)</p>\n\n<p>The better option is, of course, to remember the reference returned from <code>window.open</code> in the first place&nbsp;&mdash; but you know that. :-)</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>If you don't want to change your current code, you can simply override <code>window.open()</code> function:</p>\n\n<pre><code>var openedWindows = [];\nwindow._open = window.open; // saving original function\nwindow.open = function(url,name,params){\n    openedWindows.push(window._open(url,name,params));\n    // you can store names also...\n}\n</code></pre>\n\n<p>Run this code before calling <code>window.open()</code>. All the references to the opened windows will be stored in <code>openedWindows</code> array. You can access them anywhere you want</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>Ok, I used the answers to this question in Oracle CRM onDemand to disable a select in a popup window executing the script from the parent window, and it worked! (I have no control over the generation of popup windows, they are opened by the application framework)</p>\n\n<p>Let's see how I did it:</p>\n\n<p><strong>Context</strong>: In a detail page the user can add some info by clicking in a magnifying glass icon >>> a new window opens containing a search form, but a select is disturbing the administrator: If the user change its default value he/she will gain access to forbidden records!! Oh my God!</p>\n\n<p><strong>First Approach</strong>: Disable that select now!!</p>\n\n<p><strong>Attempt</strong>: I found the image's onclick attrib with my browser's dev tools (F12). There was a openAssocPopup method, and then i knew the name of the child window: 'OccamPopup1' :)</p>\n\n<p>Okay! So let's do some magic (executed at the parent window): </p>\n\n<blockquote>\n<pre><code>window.open(\"\",\"OccamPopup1\").document.getElementById(\"frmSearch.AQ\").setAttribute(\"disabled\", true);\n</code></pre>\n</blockquote>\n\n<p>I think this may help, as this question helped to me too. You were right. Now i'm trying to wrap the child's document object within the parent's jQuery object so i can gain access to the entire child's DOM... but this is another story...</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to get the references of all already opened child windows. is there any way? I am not using <code>child = window.open(....)</code> just using <code>window.open(....)</code> and opening multiple child windows.</p>\n",
            "last_activity_date": 1390404227,
            "question_id": 6340160,
            "score": 14,
            "tags": [
                "javascript",
                "window.open"
            ],
            "title": "How to get the references of all already opened child windows"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can do how ever you want it to do. They don't have to be together, it depends on the context of the code. Of course, if you can put them together, then you should, as this probably makes the structure of your code more clear (in the sense of \"now we are adding all the event handlers\").</p>\n\n<p>But sometimes you have to add event listeners dynamically. However, it is unnecessary to test multiple times whether you are dealing with IE or not. </p>\n\n<p>Better would be to abstract from this and test only once which method is available when the page is loaded. Something like this:</p>\n\n<pre><code>var addEventListener = (function() {\n    if(document.addEventListener) {\n        return function(element, event, handler) {\n            element.addEventListener(event, handler, false);\n        };\n    }\n    else {\n        return function(element, event, handler) {\n            element.attachEvent('on' + event, handler);\n        };\n    }\n}());\n</code></pre>\n\n<p>This will test <em>once</em> which method to use. Then you can attach events throughout your script with:</p>\n\n<pre><code>addEventListener(window, 'load',videoPlayer);\naddEventListener(window, 'load',somethingelse);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>I use this function:</p>\n\n<pre><code>function addEvent (obj, type, fn) {\n  if (obj.addEventListener) {\n\n    obj.addEventListener(type, fn, false);\n\n  } else if (obj.attachEvent) {\n\n    obj.attachEvent('on' + type, function () {\n\n      return fn.call(obj, window.event);\n\n    });\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I was wondering how to add multiple event handlers to the same object. I have this below:</p>\n\n<pre><code>if (window.addEventListener) {\nwindow.addEventListener('load',videoPlayer,false);\n}\nelse if (window.attachEvent) { \nwindow.attachEvent('onload',videoPlayer);\n}\n</code></pre>\n\n<p>and then later in my javascript I have:</p>\n\n<pre><code>if (window.addEventListener) {\nwindow.addEventListener('load',somethingelse,false);\n}\nelse if (window.attachEvent) { \nwindow.attachEvent('onload',somethingelse);\n}\n</code></pre>\n\n<p>Is it preferred/functional to have them all together?</p>\n\n<p>Like:</p>\n\n<pre><code>if (window.addEventListener) {\nwindow.addEventListener('load',videoPlayer,false);\nwindow.addEventListener('load',somethingelse,false);\n}\nelse if (window.attachEvent) { \nwindow.attachEvent('onload',videoPlayer,false);\nwindow.attachEvent('onload',somethingelse);\n}\n</code></pre>\n\n<p>Any help is appreciated</p>\n\n<p>Thanks,\nBryan</p>\n",
            "last_activity_date": 1350646445,
            "question_id": 5411055,
            "score": 14,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "Javascript - multiple event listeners/handlers on the same element"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Built-in, yes and no. There is <code>Number.toLocaleString()</code> but it is dependent on the system's locale.</p>\n\n<p>However, there are some libraries which have modules for this. <a href=\"http://mootools.net\" rel=\"nofollow\">MooTools</a>'s <a href=\"http://mootools.net/docs/more/Locale/Number\" rel=\"nofollow\">Locale.Number</a> for example allows you to convert a number into different locales (adding your own locale is trivial).</p>\n\n<pre><code>Locale.use(\"EU\");\nvar inEuros = (50).formatCurrency(); // \u20ac 50,00\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/N3AqM/\" rel=\"nofollow\">jsFiddle Demo</a></p>\n\n<hr>\n\n<p>If you want the \u20ac sign to be printed after, you can simply create your own locale:</p>\n\n<pre><code>Locale.define('EU-suffix', 'Number', {\n    currency: {\n        suffix: ' \u20ac'\n    }\n}).inherit('EU', 'Number');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>50.00</code> is a unit-less value. The best you can do is convert <code>50.00</code> to <code>50,00</code> and then append the <code>\u20ac</code> yourself. Therefore, just use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number/ToLocaleString\" rel=\"nofollow\"><code>Number.toLocaleString()</code></a>.</p>\n\n<pre><code>var i = 50.00;\nalert(i.toFixed(2).toLocaleString() + ' \u20ac'); // alerts '50.00 \u20ac' or '50,00 \u20ac'\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/mattball/NcvbA/\" rel=\"nofollow\">Demo &#x2192;</a></p>\n\n<h3>Lots of relevant questions:</h3>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/149055/how-can-i-format-numbers-as-money-in-javascript\">How can I format numbers as money in JavaScript?</a> (the big one; ~70k views)</li>\n<li><a href=\"http://stackoverflow.com/questions/1718878/javascript-convert-to-currency-format\">Convert to currency format</a></li>\n<li><a href=\"http://stackoverflow.com/questions/4682789/format-currency-using-javascript\">Format currency using javascript</a></li>\n<li><a href=\"http://stackoverflow.com/questions/4022171/how-do-i-print-currency-format-in-javascript\">how do i print currency format in javascript</a></li>\n<li><a href=\"http://stackoverflow.com/questions/1615869/javascript-format-number-currency-w-regards-to-culture-like-nets-string-format\">JavaScript: Format number/currency w/regards to culture like .NET&#39;s String.Format()?</a> (possibly useful, if you're using ASP.NET)</li>\n<li><a href=\"http://stackoverflow.com/questions/4175720/format-number-to-price\">format number to price</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>I am working on an international site which deals with multiple currencies.</p>\n\n<p>I didn't want to deal with setting the Locale every time I wanted to display a currency, so instead I made a prototype which formats the currency to the appropriate locale.  It is transparent in its conversions so you can customize it to your needs as well.</p>\n\n<pre><code>Number.prototype.formatMoney = function(moneySymbol, decimalCharacter, thousandsCharacter, decimalPlaces, symbolLocation)\n{\n    var symbolLocation = (symbolLocation == undefined || symbolLocation &lt; 1 || symbolLocation == \"begin\")?\"begin\":\"end\";\n    var decimalPlaces = isNaN(decimalPlaces = Math.abs(decimalPlaces)) ? 2 : decimalPlaces;\n    var thisNumber = parseFloat(this, decimalPlaces);\n    var decimalCharacter = decimalCharacter == undefined ? \".\" : decimalCharacter;\n    var thousandsCharacter = thousandsCharacter == undefined ? \",\" : thousandsCharacter;\n    //var pm = thisNumber &lt; 0 ? \"-\" : \"\";\n    var pm = \"\";\n    var pmB = thisNumber &lt; 0 ? \"(\" : \"\";\n    var pmE = thisNumber &lt; 0 ? \")\" : \"\";\n    var i = parseInt(thisNumber = Math.abs(+thisNumber || 0)) + \"\";\n    var j = (j = i.length) &gt; 3 ? j % 3 : 0;\n    var retString = pmB;\n    retString += ((symbolLocation == \"begin\")?((moneySymbol)?moneySymbol+\"\":\"\"):\"\");\n    retString += pm;\n    retString += (j ? i.substr(0, j) + thousandsCharacter : \"\")\n    retString += i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousandsCharacter);\n    //alert((decimalPlaces ? decimalCharacter + (Math.ceil(Math.abs(thisNumber - i)*Math.pow(10, decimalPlaces))/Math.pow(10, decimalPlaces)).toFixed(decimalPlaces).slice(decimalPlaces) : \"\") + '\\n' + Math.abs(thisNumber - i).toFixed(6));\n    retString += (decimalPlaces ? decimalCharacter + (Math.ceil(Math.abs(thisNumber - i).toFixed(6)*Math.pow(10, decimalPlaces))/Math.pow(10, decimalPlaces)).toFixed(decimalPlaces).slice(decimalPlaces) : \"\");\n    retString += ((symbolLocation == \"end\")?((moneySymbol)?moneySymbol+\"\":\"\"):\"\");\n    retString += pmE;\n    return  retString;\n};\nNumber.prototype.formatMoneyInternational = function(languageCode, inputCode)\n{\n    var languageCode = languageCode == undefined ? 'en_us' : languageCode;\n    var inputCode = inputCode == undefined ? languageCode : inputCode;\n    var currencies = {\n        'float':    {'symbol':null,         'symbolPosition': 'end',        'decimal':'.',  'comma': ''},       //Float\n        //Arabic - Saudi Arabia ?(1025): Sorry, the server does not support this locale \n        //Arabic - Iraq ?(2049): Sorry, the server does not support this locale \n        //Arabic - Egypt ?(3073): Sorry, the server does not support this locale \n        //Arabic - Algeria ?(5121): Sorry, the server does not support this locale \n        'bg':       {'symbol':' BGN',       'symbolPosition': 'end',        'decimal':',',  'comma': ' '},      //Bulgarian \n        'ca':       {'symbol':' \u20ac',         'symbolPosition': 'end',        'decimal':',',  'comma': '.'},      //Catalan \n        //Chinese - Traditional (1028): Sorry, the server does not support this locale \n        //Chinese - Simplified (2052): Sorry, the server does not support this locale \n        'cs':       {'symbol':' Kc',        'symbolPosition': 'end',        'decimal':',',  'comma': ' '},      //Czech \n        'da':       {'symbol':'kr ',        'symbolPosition': 'begin',      'decimal':',',  'comma': '.'},      //Danish \n        'de':       {'symbol':' \u20ac',         'symbolPosition': 'end',        'decimal':',',  'comma': '.'},      //German - Germany \n        'de_au':    {'symbol':' \u20ac',         'symbolPosition': 'end',        'decimal':',',  'comma': '.'},      //German - Austrian \n        'de_lu':    {'symbol':' \u20ac',         'symbolPosition': 'end',        'decimal':',',  'comma': '.'},      //German - Luxembourg \n        'el':       {'symbol':' \u20ac',         'symbolPosition': 'end',        'decimal':',',  'comma': '.'},      //Greek \n        'en_us':    {'symbol':'$',          'symbolPosition': 'begin',      'decimal':'.',  'comma': ','},      //English - United States \n        'en_gb':    {'symbol':'\u00a3 ',         'symbolPosition': 'begin',      'decimal':'.',  'comma': ','},      //English - United Kingdom \n        'en_au':    {'symbol':'$ ',         'symbolPosition': 'begin',      'decimal':'.',  'comma': ','},      //English - Australia \n        'en_ca':    {'symbol':'$',          'symbolPosition': 'begin',      'decimal':'.',  'comma': ','},      //English - Canadian \n        'en_ie':    {'symbol':'\u20ac ',         'symbolPosition': 'begin',      'decimal':'.',  'comma': ','},      //English - Irish \n        'es_mx':    {'symbol':'$ ',         'symbolPosition': 'begin',      'decimal':'.',  'comma': ','},      //Spanish - Mexico \n        'es':       {'symbol':' \u20ac',         'symbolPosition': 'end',        'decimal':',',  'comma': '.'},      //Spanish - International \n        'fi':       {'symbol':' \u20ac',         'symbolPosition': 'end',        'decimal':',',  'comma': ' '},      //Finnish \n        'fr':       {'symbol':' \u20ac',         'symbolPosition': 'end',        'decimal':',',  'comma': ' '},      //French - France \n        'fr_ca':    {'symbol':' $',         'symbolPosition': 'end',        'decimal':',',  'comma': ' '},      //French - Canadian \n        'fr_ch':    {'symbol':'SFr. ',      'symbolPosition': 'begin',      'decimal':'.',  'comma': '\\''}, //French - Swiss \n        //Hebrew ?(1037): Sorry, the server does not support this locale \n        'hu':       {'symbol':' Ft',        'symbolPosition': 'end',        'decimal':',',  'comma': ' '},      //Hungarian \n        'it':       {'symbol':'\u20ac ',         'symbolPosition': 'begin',      'decimal':',',  'comma': '.'},      //Italian - Italy \n        'it_ch':    {'symbol':'&amp;#8355; ',       'symbolPosition': 'begin',      'decimal':'.',  'comma': '\\''}, //Italian - Swiss \n        'ja':       {'symbol':'\u00a5 ',         'symbolPosition': 'begin',      'decimal':'.',  'comma': '\\''}, //Japanese \n        //Korean (1042): Sorry, the server does not support this locale \n        'nl':       {'symbol':'\u20ac ',         'symbolPosition': 'begin',      'decimal':',',  'comma': '.'},      //Dutch - Netherlands \n        'no':       {'symbol':'kr ',        'symbolPosition': 'begin',      'decimal':',',  'comma': ' '},      //Norwegian \n        'pl':       {'symbol':' zl',        'symbolPosition': 'end',        'decimal':',',  'comma': ' '},      //Polish \n        'pt_br':    {'symbol':'R$ ',        'symbolPosition': 'begin',      'decimal':',',  'comma': '.'},      //Portuguese - Brazil \n        'pt':       {'symbol':' \u20ac',         'symbolPosition': 'end',        'decimal':',',  'comma': '.'},      //Portuguese - Standard \n        'ro':       {'symbol':' lei',       'symbolPosition': 'end',        'decimal':',',  'comma': '.'},      //Romanian \n        'ru':       {'symbol':' p.',        'symbolPosition': 'end',        'decimal':',',  'comma': ' '},      //Russian \n        'hr':       {'symbol':' kn',        'symbolPosition': 'end',        'decimal':',',  'comma': '.'},      //Croatian \n        'sr':       {'symbol':' Din.',      'symbolPosition': 'end',        'decimal':',',  'comma': '.'},          //Serbian - Latin \n        //'sr': {'symbol':' ???. ', 'symbolPosition': 'end',    'decimal':',',  'comma': '.'},          //Serbian - Cyrillic \n        'sv':       {'symbol':' kr',        'symbolPosition': 'end',        'decimal':',',  'comma': '.'},      //Swedish \n        //Thai (1054): Sorry, the server does not support this locale \n        'tr':       {'symbol':' TL',        'symbolPosition': 'end',        'decimal':',',  'comma': '.'},      //Turkish \n        'id':       {'symbol':' Rp.',       'symbolPosition': 'begin',      'decimal':' ',  'comma': '.'},      //Indonesian \n        'uk':       {'symbol':' rpH.',      'symbolPosition': 'end',        'decimal':',',  'comma': ' '},          //Ukranian \n        'be':       {'symbol':' p.',        'symbolPosition': 'end',        'decimal':',',  'comma': ' '},      //Belausian \n        'sl':       {'symbol':' SIT',       'symbolPosition': 'end',        'decimal':',',  'comma': '.'},          //Slovenian \n        'et':       {'symbol':' kr',        'symbolPosition': 'end',        'decimal':'.',  'comma': ' '},      //Estonian \n        'lv':       {'symbol':'Ls ',        'symbolPosition': 'begin',      'decimal':',',  'comma': ' '},      //Latvian \n        'lt':       {'symbol':' Lt',        'symbolPosition': 'end',        'decimal':',',  'comma': '.'},      //Lithuanian \n        //Farsi ?(1065): Sorry, the server does not support this locale \n        //Vietnamese (1066): Sorry, the server does not support this locale \n        'af':       {'symbol':'R ',         'symbolPosition': 'begin',      'decimal':'.',  'comma': ','},      //Afrikaans \n        'fo':       {'symbol':'kr ',        'symbolPosition': 'begin',      'decimal':',',  'comma': '.'}       //Faeroese\n    };\n    var currencyString = this+\"\";\n    if(currencies[languageCode])\n    {\n        //alert(currencyString.replace(currencies[inputCode].comma, '').replace(currencies[inputCode].decimal, '.').replace(/[^\\d\\.\\,\\-]/g, ''));\n        var currencyNumber = parseFloat(currencyString.replace(currencies[inputCode].comma, '').replace(currencies[inputCode].decimal, '.').replace(/[^\\d\\.\\,\\-]/g, ''));\n        return currencyNumber.formatMoney(currencies[languageCode].symbol, currencies[languageCode].decimal, currencies[languageCode].comma, 2, currencies[languageCode].symbolPosition);\n    }\n    else\n    {\n        var currencyNumber = parseFloat(currencyString.replace(currencies['en_us'].decimal, '.').replace(currencies['en_us'].comma, '').replace(/[^\\d\\.\\,\\-]/g, ''));\n        alert('Error: '  + languageCode + ' country code unknown.');\n        return currencyNumber.formatMoney(currencies['en_us'].symbol, currencies['en_us'].decimal, currencies['en_us'].comma, 2, currencies['en_us'].symbolPosition);\n    }\n}\nString.prototype.formatMoneyInternational = Number.prototype.formatMoneyInternational;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The accepted answer from Matt Ball is <strong>wrong</strong> - dunno why nobody haven't noticed. <strong>There is no such function as <code>String.toLocaleString()</code> <a href=\"http://www.w3schools.com/jsref/jsref_obj_string.asp\">[ref]</a>!</strong> Therefore when <code>Number.toFixed()</code> returns String, the consequent <code>toLocaleString()</code> does nothing. So you won't get localized number, just the product of <code>toFixed()</code> function.</p>\n\n<p><strong>WRONG (don't do it like this):</strong></p>\n\n<pre><code>var i = 1234.123;\nalert(i.toFixed(2).toLocaleString() + ' \u20ac'); // ALWAYS alerts '1234.12 \u20ac' (no locale formatting)\n</code></pre>\n\n<p><strong>Suggestion how to do it right:</strong></p>\n\n<p>You may use jQuery plugin like <a href=\"http://code.google.com/p/jquery-numberformatter/\">NumberFormatter</a>. </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I found a way to do this at <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\">this page</a>.</p>\n\n<p>You can you <code>toLocaleString</code> without using <code>toFixed</code> before it. <code>toFixed</code> returns a string, <code>toLocaleString</code> should get a number. But you can pass an options object with <code>toLocaleString</code>, the option <code>minimumFractionDigits</code> could help you with the functionality <code>toFixed</code> has.</p>\n\n<pre><code>50.toLocaleString('de-DE', {\n    style: 'currency', \n    currency: 'EUR', \n    minimumFractionDigits: 2 \n});\n</code></pre>\n\n<p>Checkout all the other options you can pass with this function. </p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Some of the other answers are okay but I would recommend a different library, <a href=\"http://numeraljs.com/\" rel=\"nofollow\">NumeralJS</a> over Number.toLocaleString because the latter is not supported widely in all browsers (it breaks on even new versions of safari).  NumeralJS is really powerful and supports anything you would want to do with converting numbers to strings.  </p>\n\n<p>First, set the language (I chose french) and then format it:</p>\n\n<pre><code>numeral.language('fr');\nnumeral(50.00).format('0.00 $');\n</code></pre>\n\n<p>Outputs:</p>\n\n<pre><code>\"50,00 \u20ac\"\n</code></pre>\n\n<p>The website explains it quite well and has tons of examples.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are locale related features described within the <a href=\"http://www.ecma-international.org/ecma-402/1.0/\" rel=\"nofollow\">ECMAScript Internationalization API</a>.</p>\n\n<p>To get the float <code>50.0</code> converted to the string <code>50,00 \u20ac</code> (using the 'de-DE' locale) you need to write this:</p>\n\n<pre><code>new Intl.NumberFormat(\"de-DE\", {style: \"currency\", currency: \"EUR\"}).format(50.0)\n</code></pre>\n\n<p>This API is available in all current major browsers.</p>\n\n<p>For more info about the number formatting features of the Internationalization API you should read the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\" rel=\"nofollow\">article at the Mozilla Developer Network</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a built in function of JavaScript to convert a string into a particular locale (Euro in my case)?</p>\n\n<p>E.g. <code>50.00</code> should get converted to <code>50,00 \u20ac</code>.</p>\n",
            "last_activity_date": 1424558429,
            "question_id": 5314237,
            "score": 14,
            "tags": [
                "javascript",
                "numbers",
                "currency"
            ],
            "title": "Is there a functionality in JavaScript to convert values into specific locale formats?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Well, assuming you can target it with jQuery it should be just as simple as calling <code>remove()</code> on the element:</p>\n\n<pre><code>$('link[rel=stylesheet]').remove();\n</code></pre>\n\n<p>That will remove <em>all</em> external stylesheets on the page. If you know part of the url then you can remove just the one you're looking for:</p>\n\n<pre><code>$('link[rel=stylesheet][href~=\"foo.com\"]').remove();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>If you know the ID of the stylesheet, use the following.  Any other method of getting the stylesheet works as well, of course.  This is straight DOM and doesn't require using any libraries.</p>\n\n<pre><code>sheet = document.getElementById(styleSheetId)\nsheet.parentNode.removeChild(sheet)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>Is there a way to dynamically remove the current stylesheet from the page?</p>\n\n<p>For example, if a page contains:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"http://...\" /&gt;\n</code></pre>\n\n<p>...is there a way to later disable it with JavaScript?</p>\n\n<p><em>Oh, and there are extra points for using jQuery to accomplish it!</em></p>\n",
            "last_activity_date": 1297971834,
            "question_id": 5033650,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "stylesheet"
            ],
            "title": "How to dynamically remove a stylesheet from the current page"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>window.location.href = \"webpage.htm\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Definitely the second method is preferred because you don't have the overhead of another function invocation:</p>\n\n<pre><code>window.location.href = \"webpage.htm\";\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>As others have said, the second approach is usually preferred.</p>\n\n<p>The two code snippets are not exactly equivalent however: the first one actually sets <code>window.opener</code> to the window object itself, whereas the second will leave it as it is, at least under Firefox.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You can omit <code>window</code> and just use <code>location.href</code>. For example:</p>\n\n<pre><code>location.href = 'http://google.im/';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Hopefully someone else is saved by reading this. </p>\n\n<p>We encountered an issue with webkit based browsers doing:</p>\n\n<pre><code>window.open(\"webpage.htm\", \"_self\");\n</code></pre>\n\n<p>The browser would lockup and die if we had too many DOM nodes.  When we switched our code to following the accepted answer of:</p>\n\n<pre><code>location.href = \"webpage.html\";\n</code></pre>\n\n<p>all was good.  It took us awhile to figure out what was causing the issue, since it wasn't obvious what made our page periodically fail to load. </p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I need to redirect the user using JavaScript. Which is the preferred method?</p>\n\n<pre><code>window.open(\"webpage.htm\", \"_self\");\n</code></pre>\n\n<p>or</p>\n\n<pre><code>window.location.href = \"webpage.htm\";\n</code></pre>\n",
            "last_activity_date": 1413810357,
            "question_id": 4813879,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "window.open target _self v window.location.href?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<ul>\n<li><code>$()</code> is the <code>jQuery constructor</code> function</li>\n<li><code>this</code> is a reference to the <code>DOM element of invocation</code></li>\n</ul>\n\n<p>So basically, you're turning a <code>DOM reference</code> into a <code>jQuery object</code></p>\n\n<p>In your example, you could also use</p>\n\n<pre><code>listItems.each(function(index, element){\n   $(element).css({\n   });\n});\n</code></pre>\n\n<p>..since <code>.each()</code> will pass both, index + element in its callback.</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p><code>this</code> is the native DOM element. <code>$(this)</code> is a jQuery object that allows you to call functions such as <a href=\"http://api.jquery.com/css/\"><code>.css()</code></a> on it.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><code>this</code> is typically a DOM object by default, which means it only has the methods on normal DOM objects.</p>\n\n<p>If you want to invoke a library-specific function (such as jQuery's <code>.css</code> function), you have to convert it to a full jQuery object first, which is what <code>$()</code> does by default if you pass it a DOM object.</p>\n\n<p>(You can also pass other things to <code>$()</code>, such as an HTML string (to construct a new jQuery-wrapped DOM object) or a CSS selector (to get a set of jQuery objects that correspond to DOM objects matching the selector).</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I know I'm a bit late to this thread but I just wanted to bring up the fact that redundant wrapping of DOM objects is one of the most frequently committed crimes against jQuery. Taking care with your jQuery-instance constructing can have tremendous effects performance-wise and it's so easy to do that you have no excuse not to. </p>\n\n<p>Typically, when people have a DOM object (whether it be referenced as <code>this</code> or <code>element</code>) they'll try to wrap it each time they need access to a jQuery method:</p>\n\n<pre><code>jQuery(this).css('a', 'b');\n</code></pre>\n\n<p>The problem is when you're doing this multiple times:</p>\n\n<pre><code>jQuery(this).css('a', 'b');\njQuery(this).find('span').attr(...);\njQuery(this)....\n</code></pre>\n\n<p>Every time <code>jQuery()</code> is called, a new jQuery instance is constructed. That kind of operation is expensive and should be avoided if at all possible -- especially in loops!</p>\n\n<p>To avoid this, for one, you could utilise chaining with all methods that return a jQuery instance <code>$(this).css(a,b).attr(a,b)...</code>). The rest of the time you should have a locally declared variable that refers to the jQuery instance and then just use that:</p>\n\n<pre><code>var self = jQuery(this);\nself.css(...);\nself.attr(...);\n</code></pre>\n\n<p>If you're doing this within an <code>.each()</code> callback function, there is still a new jQuery object being constructed on every single iteration. You can avoid this by having one generic jQuery object which you continually mutate and then you can run jQuery methods off that single instance:</p>\n\n<p>Look at this:</p>\n\n<pre><code>jQuery.single = function(a){\n    return function(b){\n        a[0] = b;\n        return a\n    }\n}(jQuery([1]));\n</code></pre>\n\n<p>Now look at this:</p>\n\n<pre><code>$('a').each(function(i){\n    $.single(this).append('Anchor number ' + i);\n});\n</code></pre>\n\n<p>Only one jQuery object is being used. You can make it even faster by avoiding the identifier resolution:</p>\n\n<pre><code>$_ = $.single;\n$('a').each(function(i){\n    $_(this).append('Anchor number ' + i);\n});\n</code></pre>\n\n<p><em>Food for thought</em>. <strong>More info here</strong>: <a href=\"http://james.padolsey.com/javascript/76-bytes-for-faster-jquery/\" rel=\"nofollow\">http://james.padolsey.com/javascript/76-bytes-for-faster-jquery/</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>If you are using Firefox, try console.log($(this)) and console.log(this) to see the difference.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/1051782/jquery-this-vs-this\">jQuery $(this) vs this</a>  </p>\n</blockquote>\n\n\n\n<p>In jquery sometimes I find that within a function I have to use <code>$(this)</code> because <code>this</code> won't work:</p>\n\n<pre><code>var listItems = $('li');\nlistItems.each(function(index) {\n    $(this).css({ \n\n    })\n})\n</code></pre>\n\n<p>Any ideas as to the reason why? </p>\n",
            "last_activity_date": 1333056863,
            "question_id": 3316113,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "this"
            ],
            "title": "Why do I have to use $(this)?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can call <a href=\"https://developer.mozilla.org/en/DOM/window.clearInterval\"><code>clearInterval()</code></a> after <em>x</em> calls:</p>\n\n<pre><code>var x = 0;\nvar intervalID = setInterval(function () {\n\n   // Your logic here\n\n   if (++x === 5) {\n       window.clearInterval(intervalID);\n   }\n}, 1000);\n</code></pre>\n\n<p>To avoid global variables, an improvement of the above would be:</p>\n\n<pre><code>function setIntervalX(callback, delay, repetitions) {\n    var x = 0;\n    var intervalID = window.setInterval(function () {\n\n       callback();\n\n       if (++x === repetitions) {\n           window.clearInterval(intervalID);\n       }\n    }, delay);\n}\n</code></pre>\n\n<p>Then you can call the new <code>setInvervalX()</code> function as follows:</p>\n\n<pre><code>// This will be repeated every for 5 times with 1 second intervals:\nsetIntervalX(function () {\n    // Your logic here\n}, 1000, 5);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>No you have to set a timeout that call a clearInterval.\nThis should works:</p>\n\n<pre><code>function setTimedInterval(callback, delay, timeout){\n    var id=window.setInterval(callback, delay);\n    window.setTimeout(function(){\n        window.clearInterval(id);\n    }, timeout);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This will clear the interval after 10 calls</p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n\n&lt;input type=\"text\" id=\"clock\" /&gt;\n&lt;script language=javascript&gt;\nvar numOfCalls = 0;\nvar int=self.setInterval(\"clock()\",1000);\nfunction clock()\n  {\n  var d=new Date();\n  var t=d.toLocaleTimeString();\n  document.getElementById(\"clock\").value=t;\n  numOfCalls++;\n  if(numOfCalls == 10)\n     window.clearInterval(int);\n  }\n&lt;/script&gt;\n&lt;/form&gt;\n\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to limit the amount of times that setInterval will fire in javascript?</p>\n",
            "last_activity_date": 1275479835,
            "question_id": 2956966,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "Javascript - telling setInterval to only fire x amount of times?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>In the <a href=\"https://github.com/angular/protractor/blob/master/docs/referenceConf.js\">referenceConf.js</a> this section can be interesting:</p>\n\n<pre><code>  // The params object will be passed directly to the protractor instance,\n  // and can be accessed from your test. It is an arbitrary object and can\n  // contain anything you may need in your test.\n  // This can be changed via the command line as:\n  //   --params.login.user 'Joe'\n  params: {\n    login: {\n      user: 'Jane',\n      password: '1234'\n    }\n  },\n</code></pre>\n\n<p>And you can access the params object like this in your code: <code>browser.params.login.user</code></p>\n\n<p>So in your case if you call protractor like this:</p>\n\n<pre><code>protractor ... --params.login.user=abc --params.login.password=123\n</code></pre>\n\n<p>You can access these variables in your code like this:</p>\n\n<p><code>browser.params.login.user</code> and <code>browser.params.login.password</code></p>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p>I'm using Protractor to perform some end to end tests, and I'd like to pass in login credentials through the command line instead of storing them in a spec file.  I found one post where someone used <code>process.argv.forEach</code>, but how can I store those values and use them in another spec file? I have a file called <code>login-spec.js</code> where I'd like to use the command-line arguments. </p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1421833506,
            "question_id": 23135649,
            "score": 13,
            "tags": [
                "javascript",
                "angularjs",
                "selenium",
                "webdriver",
                "protractor"
            ],
            "title": "How can I use command line arguments in Angularjs Protractor?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If you are always only looking for attributes that start with \"data-\" then you could use</p>\n\n<pre><code>$('tag').data();\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/FloydPink/eXWnh/\" rel=\"nofollow\">jsFiddle</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Well, I guess I'm reading your question differently.</p>\n\n<p>The way I read it, you want to create a custom selector that selects elements that have a given attribute name (or the start of that name).</p>\n\n<p>If so, I think you'd need to iterate of the <code>attributes</code> collection for each element.</p>\n\n<p><strong>DEMO:</strong> <a href=\"http://jsfiddle.net/GgmM7/\">http://jsfiddle.net/GgmM7/</a></p>\n\n<pre><code>$.extend($.expr[':'],{\n    attrNameStart: function(el,i,props) {\n\n        var hasAttribute = false;\n\n        $.each( el.attributes, function(i,attr) {\n            if( attr.name.indexOf( props[3] ) !== -1 ) {\n                hasAttribute = true;\n                return false;  // to halt the iteration\n            }\n        });\n\n        return hasAttribute;\n    }\n});\n</code></pre>\n\n<hr>\n\n<pre><code>$('img:attrNameStart(data-plugin)')\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>I'm want to create a selector to find elements which have attributes starting with a string. At this point, I'm assuming this selector does not exist.\nDo I need to extend the selector capabilities? <a href=\"http://james.padolsey.com/javascript/extending-jquerys-selector-capabilities/\">Extending jQuery\u2019s selector capabilities</a> by James Padolsey</p>\n\n<p>I need to express something like the Attribute Contains Prefix Selector [name|=\"value\"], but instead of matching \"value\", I need to match against the name of the attribute, and not the value of the attribute.</p>\n\n<p><code>&lt;tag data-plugin-option1=\"val1\" data-plugin-option2=\"val2\" /&gt;</code></p>\n\n<p>I'd like to end up with a syntax like this:\n<code>$('tag(:attr|=\"data-plugin\")')</code> which should find the element <code>tag</code> because it has at least one element that starts with <code>data-plugin</code></p>\n",
            "last_activity_date": 1317328532,
            "question_id": 7602410,
            "score": 13,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "how do I find elements that contain a data-* attribute matching a prefix using jquery"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I'm not sure how you're doing it or what you define as \"works\", but the below kind of works:</p>\n\n<p>Go to the javascript test console here: <a href=\"https://developers.facebook.com/tools/console/\">https://developers.facebook.com/tools/console/</a>\nAnd type in the following, and hit run, it will bring up a send dialog with two names prepopulated. Unfortunately, when you hit send, it goes to an error page (still trying to figure that one out). But still, it does populate the dialog with two names :P</p>\n\n<pre><code>&lt;script&gt;\n    FB.ui(\n     { \n      method: 'send', \n      to: [5,6],\n      link: \"https://developers.facebook.com\",\n      picture: \"https://fbcdn-profile-a.akamaihd.net/hprofile-ak-snc4/174597_20531316728_2866555_q.jpg\"\n     }, \n     function(param){\n            // If they cancel params will show: \n            //    {action:false, ...}\n            // and if they send the friend request it'll have:\n            //    {action:true, ...}\n            // and if they closed the pop-up window then:\n            //    param is undefined\n     }\n    );\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>It seems that currently the sdk only takes the first element from the array that is passed to \"To\" parameter. This is really annoying and no formal explanation is given to this design decision. I'd wish it can take more than one uids or emails, group names etc.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I tried with a comma separated list of IDs, in the 'TO' field, and it worked ;)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Seems both ways, direct URL and Javascript don't allow to use a list of ID's , just checked and verified it today</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>The Facebook new Send Dialog lets people to send content to specific friends. But the API @ <a href=\"https://developers.facebook.com/docs/reference/dialogs/send/\">https://developers.facebook.com/docs/reference/dialogs/send/</a> said the parameter 'TO' means \"A user ID or username\".</p>\n\n<p>I wonder is there a method to send message to multiple friends at one time. I tried to set the 'to' as a javascript arrays, but that does not work.</p>\n",
            "last_activity_date": 1333377017,
            "question_id": 6469748,
            "score": 13,
            "tags": [
                "javascript",
                "arrays",
                "facebook"
            ],
            "title": "Facebook send dialog to multiple friends using a recipients arrays"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can open the script view and search for \".style\" in the searchbox.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you're sure it's being set on the inline <code>style</code> and not as a consequence of a stylesheet rule, you can detect changes using the non-standard Mozilla <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Object/watch\">watch()</a> method:</p>\n\n<pre><code>document.body.style.watch('color', function(name, v0, v1) {\n    alert(name+': '+v0+'-&gt;'+v1);\n});\ndocument.body.style.color= 'red';\n</code></pre>\n\n<p>You can put <code>debugger;</code> in the watcher function and look up the call stack in Firebug to see where the change was triggered.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>You can also right click on the element in the HTML panel before the style is set and select break on Attribute Change.  Script panel must be enabled.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>On request from <a href=\"http://stackoverflow.com/questions/15094744/how-to-determine-which-javascript-class-sets-an-inline-style/15094821#15094821\">this question</a>:</p>\n\n<blockquote>\n  <p>If you have firefox you can check the \"Break on Attribute Change\" option in the HTML tab. Just right click the target element and the menu will pop up. After that, resize the window and it will break in the script line where the attribute is changed.\n  <img src=\"http://i.stack.imgur.com/g9onG.png\" alt=\"use firebug\"></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have an element that's getting styles applied via JavaScript. I'm not sure exactly where; is there a way to check Firebug to show where the \"element.style\" is actually coming from?</p>\n",
            "last_activity_date": 1424867250,
            "question_id": 3401298,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "debugging",
                "firebug"
            ],
            "title": "How do I find which JavaScript is changing an element&#39;s style?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>IMO this is not possible using the postMessage. How about using sessionStorage? Writing to it should generate a storage event that should be propagated to all windows sharing the same session storage.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>I wrote a library to do just this: <strong><a href=\"https://github.com/diy/intercom.js\">intercom.js</a></strong> (for the same reasons you outlined).</p>\n\n<p>We're currently using it to broadcast notifications to all windows, so only one window needs to maintain a socket connection to the server. As some others suggested, it uses the localStorage API. </p>\n\n<p><strong>Usage is really simple:</strong></p>\n\n<pre><code>var intercom = Intercom.getInstance();\n\n$('a').on('click', function() {\n     intercom.emit('notice', {message: 'Something just happened!');\n});\n</code></pre>\n\n<p>To catch the message,</p>\n\n<pre><code>intercom.on('notice', function(notice) {\n    console.log(notice.message);\n});\n</code></pre>\n\n<p>The interface is designed to mimic <a href=\"http://socket.io/\">socket.io</a>.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I recommend to use <a href=\"https://github.com/studentIvan/dueljs\" rel=\"nofollow\">https://github.com/studentIvan/dueljs</a> \nBrief look: <a href=\"http://dueljs.studentivan.ru\" rel=\"nofollow\">http://dueljs.studentivan.ru</a> and docs: <a href=\"https://dueljs.readthedocs.org/en/latest/\" rel=\"nofollow\">https://dueljs.readthedocs.org/en/latest/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I hear HTML5 has <code>window.postMessage()</code>, but it seems to require having a handle on the window (or tab, throughout this question) you're posting the message to.  What if I want to broadcast to all open windows?  Is this possible?</p>\n\n<p>(What I'm trying to do is warn other windows without any server round-trips when a user does something in one window that affects the others, so that they can update their content.  However, while some windows may be opened from existing ones--allowing me to intercept and store references to them--some fresh windows may be opened manually by the user and then a bookmark selected or URL typed in.  In this case there doesn't seem to be a way to intercept and store references.)</p>\n",
            "last_activity_date": 1421370908,
            "question_id": 1100336,
            "score": 13,
            "tags": [
                "javascript",
                "html5",
                "cross-window-scripting"
            ],
            "title": "Sending a message to all open windows/tabs using JavaScript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Because if you get it wrong, you may accidentally cut off features to future browsers that support them.</p>\n\n<p>I often find it useful. I <em>know</em> IE6 doesn't support alpha transparency, so I use browser sniffing to detect IE6 and hide/change elements that use them.</p>\n\n<p>Also for running the mouse over quickly numerous times, try <a href=\"http://cherne.net/brian/resources/jquery.hoverIntent.html\" rel=\"nofollow\">HoverIntent</a>. It users setTimeout() I believe to only fire events when the mouse has been over an element for a brief period of time, saving cycles and avoiding queuing up of events and potentially freezing the browser.</p>\n\n<p>Personally, I preferred jQuery with the browser version/type methods. It could be used to show a friendly hello message based on browser. Maybe jQuery deprecated it due to pressure that 'browser sniffing is evil'.</p>\n\n<h2>Update</h2>\n\n<p>This is what John Resig (creator of jQuery) says:</p>\n\n<blockquote>\n  <p>We're keeping jQuery.browser for the\n  foreseeable future but we want\n  developers to move away from using it\n  - and the best way to get developers to do that is to become a good example\n  of proper development patterns.</p>\n  \n  <p>To be clear: The points included in\n  $.support are mostly browser bug\n  specific (IE bugs that can't be tested\n  with normal object detection) - and\n  they don't encompass every possible\n  bug (only about a dozen or so). It's\n  expected that other developers will\n  add their own testing points in the\n  future.</p>\n  \n  <p>Also, in that commit I forgot to land\n  the actual support.js file - it can be\n  found here:\n  <a href=\"http://dev.jquery.com/browser/trunk/jquery/src/support.js?rev=5986\" rel=\"nofollow\">http://dev.jquery.com/browser/trunk/jquery/src/support.js?rev=5986</a></p>\n</blockquote>\n\n<p>Source: <a href=\"http://www.reddit.com/r/programming/comments/7l2mr/jquery_removes_all_browser_sniffing/\" rel=\"nofollow\">http://www.reddit.com/r/programming/comments/7l2mr/jquery_removes_all_browser_sniffing/</a></p>\n\n<p>Also see: <a href=\"http://dev.jquery.com/changeset/5985\" rel=\"nofollow\">http://dev.jquery.com/changeset/5985</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Because just sniffing the user agent (which is what jquery does to populate the $.browser object) doesn't tell you the whole truth. </p>\n\n<p>The user agent string can be easily changed in many browsers, so if you for example disable some features that don't work in IE from everybody who <em>seems</em> to be using IE, you might accidentally disable those features from some future browsers or users who just, for some reason (like for example to get around limitations based on browser sniffing), <em>pretend</em> to be using IE.</p>\n\n<p>This might not seem too big of a problem, but it is still <strong>bad practice</strong>. </p>\n\n<p>And yes, I am a IE sniffer too. I use</p>\n\n<pre><code>$.browser.msie &amp;&amp; document.all\n</code></pre>\n\n<p>just to be sure.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>As well as the issues about browser-sniffing being inferior to capability-sniffing, handling navigator.userAgent as a string is in itself a very unreliable way of browser-sniffing.</p>\n\n<p>It might work better if every browser stuck to the \u201cName/version\u201d scheme of identifying themselves, but they don't. Most browsers claim to be \u201cMozilla/some.version\u201d regardless of what they are. And that bit at the start is the only readily parsable part of the string; the rest is completely unstandardised. So scripts started searching the whole string for characterists substrings like \u201cMSIE\u201d. This is a disaster.</p>\n\n<ul>\n<li><p>Some browsers deliberately spoof each other, including substrings like \u201cMSIE\u201d, \u201cGecko\u201d and \u201cSafari\u201d in their user agent strings when they're not those browsers, mostly to defeat ill-conceived string sniffers.</p></li>\n<li><p>Some browsers allow the entire user agent string to be spoofed under user control.</p></li>\n<li><p>Some browser variants aren't. For example IE Mobile is nothing at all like regular IE, but \u201cMSIE\u201d will still match it.</p></li>\n<li><p>Some browsers allow add-ons to write extra tokens to the user agent string including arbitrary text. Just one registry change by a rogue add-on can make MSIE look like Firefox.</p></li>\n<li><p>String matching is just inherently unreliable. For example a new browser called \u201cCLUMSIERbrowser\u201d would match MSIE.</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This first thing to note is that user agent sniffing does not just mean looking at <code>navigator.userAgent</code>, it is a general term to describe the large array of methods that people use to change behaviour based on what they believe the browser is.</p>\n\n<p>So the problem is <em>not</em> looking at the user agent string, the problem is deciding what your site should do based on what you think the browser is.  This means you may unavoidably limit or break your site in the future;  For instance I have seen multiple canvas demos which block IE.  They aren't checking to see whether canvas is supported, they are explicitly looking for IE, and if they see it they say IE is broken, this means that even if IE did eventually support canvas these sites still wouldn't work.</p>\n\n<p>Rather than browser sniffing you should always attempt to detect the feature or bug you are interested in.  The most common example of these tests is \"object detection\", eg. <code>document.createElement(\"canvas\").getContext</code> is how the existence of canvas should be detected, and will correctly pick up canvas in any browser, even if current versions don't support it.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I use a combination of stuff I learned from the HTML5 boilerplate and jquery, so using the IE conditional comments to determine IE version, then test for the existance of these classes. Therefore the HTML would have this at the top:</p>\n\n<pre><code>&lt;!--[if lt IE 7 ]&gt; &lt;html class=\"no-js ie6\" lang=\"en\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 7 ]&gt;    &lt;html class=\"no-js ie7\" lang=\"en\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 8 ]&gt;    &lt;html class=\"no-js ie8\" lang=\"en\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 9 ]&gt;    &lt;html class=\"no-js ie9\" lang=\"en\"&gt; &lt;![endif]--&gt;\n&lt;!--[if (gte IE 9)|!(IE)]&gt;&lt;!--&gt; &lt;html class=\"no-js\" lang=\"en\"&gt; &lt;!--&lt;![endif]--&gt;\n</code></pre>\n\n<p>Then I would go on to test for the existance of .ie6, .ie7 etc in jquery like this:</p>\n\n<pre><code>if($('.ie6, .ie7').length &gt; 0){\n    // your conditional stuff here\n}\n</code></pre>\n\n<p>Works well for me.</p>\n\n<p>NOTE: Obviously this only tests for IE versions but most other browsers don't cause the issues that IE always does these days and it's much safer than testing the user agent!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's not recommended because browsers lie about who they are.  See <a href=\"http://farukat.es/journal/2011/02/499-lest-we-forget-or-how-i-learned-whats-so-bad-about-browser-sniffing\" rel=\"nofollow\">http://farukat.es/journal/2011/02/499-lest-we-forget-or-how-i-learned-whats-so-bad-about-browser-sniffing</a> (an article by the author of the modernizr library).</p>\n\n<p>Also, it is inherently not future-proof.  From the article:</p>\n\n<blockquote>\n  <p>Browser sniffing is a technique in which you make assumptions about\n  how a piece of code will work in the future. Generally this means\n  making an assumption that a specific browser bug will always be there\n  - which frequently leads to code breaking when browsers make changes and fix bugs.</p>\n</blockquote>\n\n<p>Feature detection is recommended as it's much simpler, makes for clearer intent in code, and avoids the issue entirely of browsers lying about who they are.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Sniff for features, not for useragents. Pseudocode:</p>\n\n<pre><code>if (browser.supports('feature')){\n    //execute feature\n}\n\nelse{\n    //fallback\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>You hear it all over the place: using javascript to sniff the user agent string to detect browser versions is a Very Bad Thing. The latest version of jQuery has now deprecated its <code>$.browser</code> object in place of <code>$.support</code>. But what should I do if there's a bug or problem which is only affecting IE and not the other browsers, and I'm not sure why?</p>\n\n<p>In my case, some jQuery code makes a tooltip appear and disappear with an animation on mouseover and mouseout. In Internet Explorer, it looks awful, and jittery, with the tooltip div changing to a really large size before hiding, and if you run your mouse over a heap of items with the tip it really kills the browser. I have no idea what particular feature IE doesn't \"support\" that I should be testing against, so it's much easier to just sniff for IE and use a different method. What could/should I do instead?</p>\n",
            "last_activity_date": 1384287166,
            "question_id": 661213,
            "score": 13,
            "tags": [
                "javascript",
                "browser",
                "sniffing"
            ],
            "title": "Why is browser sniffing not a recommended practice?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>var number = new Number(3);\nalert(typeof number); // gives \"object\"\n</code></pre>\n\n<p>Making the variable <code>number</code> have a type of <code>Object</code> is probably not the most desired outcome. Whereas:</p>\n\n<pre><code>var number = Number(3);\nalert(typeof number); // gives \"number\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Unfortunately, the <a href=\"http://jslint.com/lint.html\" rel=\"nofollow\">JSLint docs</a> don't go into any further detail than \"does not expect to see\", so we're left to guess.  My own suspicion is that this is to make type-checking easier:</p>\n\n<pre><code>assert(typeof 3             === \"number\");\nassert(typeof new Number(3) === \"object\");\n</code></pre>\n\n<p>If you mix the two in your code, your type checks become more complex:</p>\n\n<pre><code>if (typeof foo === \"number\" || foo instanceof Number) { \u2026 }\n</code></pre>\n\n<p>However, JSLint also takes issue with the Object and Array constructors, which do not make this distinction, so it may simply be the author's coding-style preference:</p>\n\n<pre><code>assert(typeof []           === \"object\");\nassert(typeof new Array()  === \"object\");\nassert(typeof {}           === \"object\");\nassert(typeof new Object() === \"object\");\n</code></pre>\n\n<p><strong>Edit:</strong> <a href=\"#369275\" rel=\"nofollow\">Steven's answer</a> raises an excellent point \u2014 the non-typecasting equality operator (===).  Number objects and number primitives will never be considered equal by this operator, even if their values are the same:</p>\n\n<pre><code>assert(3 !== new Number(3));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>new Number() does not return the same object as a number literal. This means that using new Number() breaks ===, which is the best way to check for exact equality in Javascript.</p>\n\n<pre><code>&gt;&gt;&gt; 3 == 1 + 2\ntrue\n&gt;&gt;&gt; 3 === 1 + 2\ntrue\n&gt;&gt;&gt; new Number(3) == 1 + 2\ntrue\n&gt;&gt;&gt; new Number(3) === 1 + 2\nfalse\n</code></pre>\n\n<p>You can find the rationale for JSLint's behavior in the author's book, <a href=\"http://www.worldcat.org/oclc/192027457\" rel=\"nofollow\">JavaScript: The Good Parts</a>, in Appendix C.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>In addition to breaking === and typeof returning \"object\", using the Number constructor also changes the way the value is used in boolean contexts. Since \"new Number(0)\" is an object, not a literal value, it evaluates as \"true\" because it is not null. So for example:</p>\n\n<pre><code>var n1 = 0;\nvar n2 = new Number(0);\n\nn1 == n2  // true\nn1 === n2 // false\nif (n1) {\n    // Doesn't execute\n}\nif (n2) {\n    // Does execute, because n2 is an object that is not null\n}\n</code></pre>\n\n<p><strong>Edit:</strong> Even worse than breaking === between number literals and Number objects, == doesn't even work between two Number objects (at least not in the intuitive way -- they test for identity, not equality).</p>\n\n<pre><code>var n1 = new Number(3);\nvar n2 = new Number(3);\n\nalert(n1 == n2); // false\nalert(n1 === n2); // false\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>It's slower, and requires more memory. The runtime can treat immutable literals as immutable literals. That means that when it encounters <code>3</code> somewhere in code, it can optimize that into a shared object. When you use the <code>Number</code> constructor, new memory is allocated for each instance.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I entered this statement in JSLint:</p>\n\n<pre><code>var number = new Number(3);\n</code></pre>\n\n<p>And received the following message:</p>\n\n<blockquote>\n  <p>Do not use Number as a constructor.</p>\n</blockquote>\n\n<p>Why is that? The statement is creating a number object, not a primitive value, so I don't see why using <code>new</code> is a problem.</p>\n\n<p><strong>EDIT:</strong> Thanks for all the responses. They've got me thinking further, so I posted a follow-up question <a href=\"http://stackoverflow.com/questions/369424/question-about-objectmethod-in-javascript\">here</a>.</p>\n\n<p><strong>UPDATE:</strong> Thanks again for all the responses! They've been very helpful. I guess to sum up, in JavaScript, an Object type is not equal to another Object type, even when they have the exact same value, unless they are both the EXACT SAME object.</p>\n\n<p>In other words, in Matthew's example below, n1 == n2 is false because you are comparing two REFERENCES to two SEPARATE objects, but n1 == n1 is true because you are comparing references to the EXACT SAME object.</p>\n\n<p>So, while I now understand why using Number as a constructor can cause problems, I found you can use the valueOf property when comparing Number objects. </p>\n\n<p>In other words, n1.valueOf == n2.valueOf is true! (This is because you're comparing the return values of the valueOf FUNCTION, not the REFERENCES to the objects themselves.)</p>\n",
            "last_activity_date": 1229447335,
            "question_id": 369220,
            "score": 13,
            "tags": [
                "javascript",
                "oop",
                "constructor",
                "jslint"
            ],
            "title": "Why should you not use Number as a constructor?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Javascript is interpreted.  Eval isn't any more costly that anything else in Javascript.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>As much as it might be considered overhead by some, the best approach is to use functions, shorthand and ternary conditions as a replacement for macros. Most of the JavaScript libraries do that these days. For example:</p>\n\n<p>1.)</p>\n\n<pre><code>var a, b;\nif ( !a ) {\n    a = b;\n}\n\n// shorthand approach:\n\nvar a, b;\na = a || b;\n</code></pre>\n\n<p>2.)</p>\n\n<pre><code>var a, b, c;\nif ( true ) {\n    a = b;\n} else {\n    a = c;\n}\n\n// shorthand approach:\n\nvar a, b, c;\na = ( true ) ? b : c;\n</code></pre>\n\n<p>3.)</p>\n\n<pre><code>var a, b, c, d;\nb = a;\nc = b;\nd = c;\n\n// shorthand approach:\n\nvar a, b, c, d;\nd = c = b = a;\n</code></pre>\n\n<p>Several methods in jQuery are all essentially macros, although you have to define them as functions first, since the browser does not automatically interpret them. For example, some of the more popular of these are each(), next() and filter().</p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>You could use <a href=\"http://common-lisp.net/project/parenscript/\">parenscript</a>. That'll give you macros for Javascript.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>I've written a gameboy emulator in javascript and I simulate macros for cpu emulation this way:</p>\n\n<p>macro code (the function returns a string with the macro code):</p>\n\n<pre><code>function CPU_CP_A(R,C) { // this function simulates the CP instruction, \n  return ''+             // sets CPU flags and stores in CCC the number\n  'FZ=(RA=='+R+');'+     // of cpu cycles needed\n  'FN=1;'+\n  'FC=RA&lt;'+R+';'+\n  'FH=(RA&amp;0x0F)&lt;('+R+'&amp;0x0F);'+\n  'ICC='+C+';';\n}\n</code></pre>\n\n<p>Using the \"macro\", so the code is generated \"on the fly\" and we don't need to make function calls to it or write lots of repeated code for each istruction...</p>\n\n<pre><code>OP[0xB8]=new Function(CPU_CP_A('RB',4)); // CP B\nOP[0xB9]=new Function(CPU_CP_A('RC',4)); // CP C\nOP[0xBA]=new Function(CPU_CP_A('RD',4)); // CP D\nOP[0xBB]=new Function(CPU_CP_A('RE',4)); // CP E\nOP[0xBC]=new Function('T1=HL&gt;&gt;8;'+CPU_CP_A('T1',4)); // CP H\nOP[0xBD]=new Function('T1=HL&amp;0xFF;'+CPU_CP_A('T1',4)); // CP L\nOP[0xBE]=new Function('T1=MEM[HL];'+CPU_CP_A('T1',8)); // CP (HL)\nOP[0xBF]=new Function(CPU_CP_A('RA',4)); // CP A\n</code></pre>\n\n<p>Now we can execute emulated code like this:</p>\n\n<pre><code>OP[MEM[PC]](); // MEM is an array of bytes and PC the program counter\n</code></pre>\n\n<p>Hope it helps...</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>function unless(condition,body) {\n    return 'if(! '+condition.toSource()+'() ) {' + body.toSource()+'(); }';\n}\n\n\neval(unless( function() {\n    return false;\n  }, function() {\n    alert(\"OK\");\n}));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>One can also now use <a href=\"https://github.com/clojure/clojurescript/\">ClojureScript</a> to compile clojure to javascript and get macros that way. Note ClojureScript uses Google Closure.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p><a href=\"https://github.com/santoshrajan/lispyscript\">LispyScript</a> is the latest language that compiles to Javascript, that supports macros. It has a Lisp like tree syntax, but also maintains the same Javascript semantics.\nDisclaimer: I am the author of <a href=\"https://github.com/santoshrajan/lispyscript\">LispyScript</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>A library by Mozilla (called <a href=\"http://sweetjs.org/\">SweetJS</a>) is designed to simulate macros in JavaScript. For example, you can use SweetJS to replace the <code>function</code> keyword with <code>def</code>.</p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I know that JavaScript doesn't support macros (Lisp-style ones) but I was wondering if anyone had a solution to maybe simulate macros? I Googled it, and one of the solutions suggested using eval(), but as he said, would be quite costly. </p>\n\n<p>They don't really have to be very fancy. I just want to do simple stuff with them. And it shouldn't make debugging significantly harder :)</p>\n",
            "last_activity_date": 1389447069,
            "question_id": 193536,
            "score": 13,
            "tags": [
                "javascript",
                "browser",
                "macros",
                "lisp"
            ],
            "title": "How can I simulate macros in JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The <a href=\"http://getbootstrap.com/javascript/#buttons\">bootstrap buttons</a> and the <a href=\"http://knockoutjs.com/documentation/checked-binding.html\">knockout <code>checked</code></a> binding are still not playing nice:</p>\n\n<ul>\n<li>knockout uses the <code>click</code> event inside the  <code>checked</code> binding to tigger the underlaying observable to change</li>\n<li>bootstrap subscribes on the click event to do the toggling but calls <code>e.preventDefault()</code> so KO won't be notified about the click.</li>\n</ul>\n\n<p>One possible solution is to create a custom binding handler where you subscribe on the <code>change</code> event (this is fired by bootstrap on toogle) and set your observables value there:</p>\n\n<pre><code>ko.bindingHandlers.bsChecked = {\n    init: function (element, valueAccessor, allBindingsAccessor,\n    viewModel, bindingContext) {\n        var value = valueAccessor();\n        var newValueAccessor = function () {\n            return {\n                change: function () {\n                    value(element.value);\n                }\n            }\n        };\n        ko.bindingHandlers.event.init(element, newValueAccessor,\n        allBindingsAccessor, viewModel, bindingContext);\n    },\n    update: function (element, valueAccessor, allBindingsAccessor,\n    viewModel, bindingContext) {\n        if ($(element).val() == ko.unwrap(valueAccessor())) {\n            $(element).closest('.btn').button('toggle');\n        }\n    }\n}\n</code></pre>\n\n<p>And use it in your view with:</p>\n\n<pre><code>&lt;label class=\"btn btn-primary\"&gt;\n    &lt;input type=\"radio\" name=\"options\" id=\"option1\" value=\"1\" \n           data-bind=\"bsChecked: optionsValue\"&gt; Option 1\n&lt;/label&gt;\n</code></pre>\n\n<p>Demo <a href=\"http://jsfiddle.net/hd89y/\">JSFiddle</a>.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>I can't take credit for this since once on my coworkers came up with it but it works really well.</p>\n\n<pre><code>&lt;div class=\"btn-group\" data-toggle=\"buttons\"&gt;\n    &lt;label data-bind=\"css: { active: !HideInLeaderboards() }, click: function () { HideInLeaderboards(false); }, clickBubble: false\" class=\"btn btn-default\"&gt;\n        Show Name\n    &lt;/label&gt;\n    &lt;label data-bind=\"css: { active: HideInLeaderboards() }, click: function () { HideInLeaderboards(true); }, clickBubble: false\" class=\"btn btn-default\"&gt;\n        Hide Name\n    &lt;/label&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>change the handler @nemesv proposed to be this: and it worked in my app just fine.</p>\n\n<pre><code>ko.bindingHandlers.bsChecked = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var value = valueAccessor();\n        var newValueAccessor = function () {\n            return {\n                change: function () {\n                    value(element.value);\n                }\n            }\n        };\n        if ($(element).val() == ko.unwrap(valueAccessor())) {\n            $(element).closest('.btn').button('toggle');\n        }\n        ko.bindingHandlers.event.init(element, newValueAccessor, allBindingsAccessor, viewModel, bindingContext);\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Related to: <a href=\"http://stackoverflow.com/questions/15790524/use-twitter-bootstrap-button-group-as-radio-select-with-knockout-bindings\">Bootstrap Radio Button Group</a> </p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;div class=\"btn-group\" data-toggle=\"buttons\"&gt;\n    &lt;label class=\"btn btn-primary\"&gt;\n        &lt;input type=\"radio\" name=\"options\" id=\"option1\" value=\"1\" data-bind=\"checked: optionsValue\"&gt; Option 1\n    &lt;/label&gt;\n    &lt;label class=\"btn btn-primary\"&gt;\n        &lt;input type=\"radio\" name=\"options\" id=\"option2\" value=\"2\" data-bind=\"checked: optionsValue\"&gt; Option 2\n    &lt;/label&gt;\n    &lt;label class=\"btn btn-primary\"&gt;\n        &lt;input type=\"radio\" name=\"options\" id=\"option3\" value=\"3\" data-bind=\"checked: optionsValue\"&gt; Option 3\n    &lt;/label&gt;\n&lt;/div&gt;\n&lt;br /&gt;\n&lt;span data-bind=\"text: optionsValue\"&gt;&lt;/span&gt;\n</code></pre>\n\n<p><strong>Javascript:</strong></p>\n\n<pre><code>var ViewModel = function() {\n    this.optionsValue = ko.observable()\n};\n\nko.applyBindings(new ViewModel());\n</code></pre>\n\n<p><strong>JsFiddle:</strong></p>\n\n<ul>\n<li>Without data-toggle: <a href=\"http://jsfiddle.net/fDMM2/\">http://jsfiddle.net/fDMM2/</a></li>\n<li>With data-toggle: <a href=\"http://jsfiddle.net/Kf3tj/1/\">http://jsfiddle.net/Kf3tj/1/</a></li>\n</ul>\n\n<hr>\n\n<p>I have the above code which I'm trying to get working as I expect it to. The problem is that when <code>data-toggle=\"buttons\"</code> is added to the btn-group div (as in the <a href=\"http://getbootstrap.com/javascript/#buttons-examples\">Bootstrap 3 example</a>) the knockout binding stops working. If I leave the data-toggle off of the buttons group then the binding works as expected but the button group looks awful. I know that this didn't work in Bootstrap 2 because they didn't actually use the radio input for their radio styling. How come it refuses to work now even though they do?</p>\n",
            "last_activity_date": 1418734243,
            "question_id": 20077475,
            "score": 12,
            "tags": [
                "javascript",
                "html",
                "twitter-bootstrap",
                "knockout.js",
                "twitter-bootstrap-3"
            ],
            "title": "Knockout + Bootstrap 3 Radio Buttons"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You cannot really set it optional, but you can catch the error and unload the module using <code>undef</code>:</p>\n\n<pre><code>require(['jquery'], function ($) {\n    //Do something with $ here\n}, function (err) {\n    //The errback, error callback\n    //The error has a list of modules that failed\n    var failedId = err.requireModules &amp;&amp; err.requireModules[0],\n    if (failedId === 'jquery') {\n        //undef is function only on the global requirejs object.\n        //Use it to clear internal knowledge of jQuery. Any modules\n        //that were dependent on jQuery and in the middle of loading\n        //will not be loaded yet, they will wait until a valid jQuery\n        //does load.\n        requirejs.undef(failedId);\n        ...\n     }\n}\n</code></pre>\n\n<p>Full example <a href=\"http://requirejs.org/docs/api.html#errors\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I've had exactly the same problem recently, and here's how I fixed it. I defined a RequireJS plugin called <code>optional</code> which ignores modules that fail to load by explicitly defining them as an empty object (but I suppose you could also define it as null or anything else if you wanted).</p>\n\n<p>Here is the code (tested with RequireJS 2.1.15):</p>\n\n<pre><code>define(\"optional\", [], {\n    load : function (moduleName, parentRequire, onload, config){\n\n        var onLoadSuccess = function(moduleInstance){\n            // Module successfully loaded, call the onload callback so that\n            // requirejs can work its internal magic.\n            onload(moduleInstance);\n        }\n\n        var onLoadFailure = function(err){\n            // optional module failed to load.\n            var failedId = err.requireModules &amp;&amp; err.requireModules[0];\n            console.warn(\"Could not load optional module: \" + failedId);\n\n            // Undefine the module to cleanup internal stuff in requireJS\n            requirejs.undef(failedId);\n\n            // Now define the module instance as a simple empty object\n            // (NOTE: you can return any other value you want here)\n            define(failedId, [], function(){return {};});\n\n            // Now require the module make sure that requireJS thinks \n            // that is it loaded. Since we've just defined it, requirejs \n            // will not attempt to download any more script files and\n            // will just call the onLoadSuccess handler immediately\n            parentRequire([failedId], onLoadSuccess);\n        }\n\n        parentRequire([moduleName], onLoadSuccess, onLoadFailure);\n    }\n});\n</code></pre>\n\n<p>You can then require a module optionally using simply</p>\n\n<pre><code>require(['optional!jquery'], function(jquery){...});\n</code></pre>\n\n<p>knowing that if the jquery module could not be loaded, the parameter passed to your callback function will be an empty object.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm adding AMD support to a javascript library I develop.</p>\n\n<p>This library may use jquery but it will still work if jquery isn't loaded.</p>\n\n<p>When defining the module dependency there's a way to set a dependency as 'optional' so that if that library is missing the module will still work?</p>\n",
            "last_activity_date": 1418299217,
            "question_id": 14164610,
            "score": 12,
            "tags": [
                "javascript",
                "requirejs",
                "amd"
            ],
            "title": "requireJS optional dependency"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The <code>&amp;&amp;</code> operator in JavaScript is somewhat different than in C or Java or etc.  It always returns the last evaluated subexpression value (whether the overall expression is true &mdash; \"truthy\" &mdash; or false &mdash; \"falsy\") and doesn't force a boolean result. When it fails (when one of the values is \"falsy\"), then similarly the result is the raw value, and not the value's boolean interpretation.</p>\n\n<p>So it's like this: given <code>A &amp;&amp; B</code>, the interpreter does the following:</p>\n\n<ol>\n<li>Evaluate expression A, giving A<sub>V</sub> &mdash; the value of A</li>\n<li>Let A<sub>B</sub> be the result of casting A<sub>V</sub> to boolean</li>\n<li>If A<sub>B</sub> is <code>false</code>, then the value of the <code>&amp;&amp;</code> expression is A<sub>V</sub></li>\n<li>Evaluate expression B, giving B<sub>V</sub></li>\n<li>Return B<sub>V</sub> as the value of the <code>&amp;&amp;</code> expression.</li>\n</ol>\n\n<p>Thus in an <code>if</code> statement, the <code>&amp;&amp;</code> expression has the same <em>effect</em> as the boolean-casting operators in C or Java, because the <code>if</code> statement itself performs a truthy/falsy test on the overall result of the expression. When used by itself however, it's more like, \"give me the value of the second expression if it the first is truthy, otherwise give me the value of the first expression\".</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><code>&amp;&amp;</code> returns the left hand side if the left hand side evaluates as <code>false</code>, otherwise it returns the right hand size.</p>\n\n<p><code>true</code> is not <code>false</code>, so it returns the right hand side, which is your string.</p>\n\n<pre><code>&gt; 0 &amp;&amp; true // LHS is false, return LHS\n0\n&gt; 1 &amp;&amp; true // LHS is true, return RHS\ntrue\n&gt; false &amp;&amp; 0 // LHS is false, return LHS\nfalse\n&gt; true &amp;&amp; false // LHS is true, return RHS\nfalse\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can somewhat \"fix\" that by wrapping the expression into <code>!!()</code>:</p>\n\n<pre><code>!!(true &amp;&amp; 'abc');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>From <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Logical_Operators\">MDN (Logical Operators) - Logical And (&amp;&amp;)</a>:</p>\n\n<blockquote>\n  <p>Returns expr1 if it can be converted to false; otherwise, returns\n  expr2. Thus, when used with Boolean values, &amp;&amp; returns true if both\n  operands are true; otherwise, returns false.</p>\n</blockquote>\n\n<p><code>true</code> obviously cannot be evaluated to false, so the second value is returned which is \"abc\".</p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>test code is:</p>\n\n<pre><code>console.log(true &amp;&amp; \"abc\");//abc\n</code></pre>\n\n<p>who can tell me why the result is <code>abc</code>?</p>\n",
            "last_activity_date": 1342622535,
            "question_id": 11543735,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "Why the result of bool(true) &amp;&amp; string is string in javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>In Chrome dev tools, you have the option of breaking execution when the DOM changes. <img src=\"http://i.stack.imgur.com/ab9F5.png\" alt=\"enter image description here\"></p>\n\n<p>Also a screenshot to illustrate Wolfram's answer (+1)</p>\n\n<p><img src=\"http://i.stack.imgur.com/TIOaV.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>A minor addition to Jayraj's answer: <a href=\"https://developers.google.com/chrome-developer-tools/docs/scripts-breakpoints#dom\" rel=\"nofollow\">Breakpoints on DOM Mutation Events</a>. Right click on any element and you can select <code>Break on Subtree Modifications</code> and <code>Break on Attributes Modifications</code> and <code>Break on Node Removal</code>.</p>\n\n<p>This is also possible using <a href=\"http://getfirebug.com/wiki/index.php/Script_Panel#Types\" rel=\"nofollow\">Firebug</a>: right click an element and you have some options to monitor it for changes.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I've been working with a ton of other's JS recently, and am starting to really hate trying to debug it.  Even with Chrome's dev tools I can't track down a lot of the DOM changes that are taking place during page load.</p>\n\n<p>Are there any tools that will show me what part of the DOM (say an added attribute) was done by what JS?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1415206178,
            "question_id": 11268457,
            "score": 12,
            "tags": [
                "javascript",
                "debugging"
            ],
            "title": "Find what javascript changes the DOM?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>A good choice for this situation is to create a quick custom binding that let's your \"hand-made\" options behave in the same way as options created by the <code>options</code> binding (attaches the object as meta-data).  The binding could simply look like:</p>\n\n<pre><code>ko.bindingHandlers.option = {\n    update: function(element, valueAccessor) {\n       var value = ko.utils.unwrapObservable(valueAccessor());\n       ko.selectExtensions.writeValue(element, value);   \n    }        \n};\n</code></pre>\n\n<p>You would use it like:</p>\n\n<pre><code>&lt;select data-bind=\"foreach: groups, value: selectedOption\"&gt;\n    &lt;optgroup data-bind=\"attr: {label: label}, foreach: children\"&gt;\n        &lt;option data-bind=\"text: label, option: $data\"&gt;&lt;/option&gt;\n    &lt;/optgroup&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>Sample here: <a href=\"http://jsfiddle.net/rniemeyer/aCS7D/\">http://jsfiddle.net/rniemeyer/aCS7D/</a></p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>This version with caption and if you want to have parent item selected: </p>\n\n<pre><code>&lt;select data-bind=\"value: selectedOption \"&gt;\n    &lt;option data-bind=\"value:'', text:'Select'\"&gt;&lt;/option&gt;\n    &lt;!-- ko foreach: groups --&gt;\n        &lt;optgroup data-bind=\"attr:{label: label}\"&gt;\n            &lt;option data-bind=\"value: $data, text:label\"&gt;&lt;/option&gt;\n            &lt;!-- ko foreach: children --&gt;\n                &lt;option data-bind=\"value: $data, text:label\"&gt;&lt;/option&gt;\n            &lt;!-- /ko --&gt;\n        &lt;/optgroup&gt;\n    &lt;!-- /ko --&gt;\n&lt;/select&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I found an example <a href=\"http://jsfiddle.net/HPhmB/3/\">here</a> to create a select list with optgroups using KnockoutJS. This works fine, but I want to bind the value of the dropdown to my own javascript object, then access a particular property of that object:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;select data-bind=\"foreach: groups, value:selectedOption\"&gt;\n    &lt;optgroup data-bind=\"attr: {label: label}, foreach: children\"&gt;\n        &lt;option data-bind=\"text: label\"&gt;&lt;/option&gt;\n    &lt;/optgroup&gt;\n&lt;/select&gt;\n</code></pre>\n\n<pre class=\"lang-js prettyprint-override\"><code>function Group(label, children) {\n    this.label = ko.observable(label);\n    this.children = ko.observableArray(children);\n}\n\nfunction Option(label, property) {\n    this.label = ko.observable(label);\n    this.someOtherProperty = ko.observable(property);\n}\n\nvar viewModel = {\n    groups: ko.observableArray([\n        new Group(\"Group 1\", [\n            new Option(\"Option 1\", \"A\"),\n            new Option(\"Option 2\", \"B\"),\n            new Option(\"Option 3\", \"C\")\n        ]),\n        new Group(\"Group 2\", [\n            new Option(\"Option 4\", \"D\"),\n            new Option(\"Option 5\", \"E\"),\n            new Option(\"Option 6\", \"F\")\n        ])\n    ]),\n    selectedOption: ko.observable(),\n    specialProperty: ko.computed(function(){\n       this.selectedOption().someOtherProperty();\n    })\n};\n\nko.applyBindings(viewModel);\n</code></pre>\n\n<p>\u200b</p>\n",
            "last_activity_date": 1419274382,
            "question_id": 11189660,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "knockout.js"
            ],
            "title": "KnockoutJS - Binding value of select with optgroup and javascript objects"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I don't understand exactly what your code is trying to do, but you can make variables available in any event handler using the advantages of function closures:</p>\n\n<pre><code>function addClickHandler(elem, arg1, arg2) {\n    elem.addEventListener('click', function(e) {\n        // in the event handler function here, you can directly refer\n        // to arg1 and arg2 from the parent function arguments\n    }, false);\n}\n</code></pre>\n\n<p>Depending upon your exact coding situation, you can pretty much always make some sort of closure preserve access to the variables for you.</p>\n\n<p>From your comments, if what you're trying to accomplish is this:</p>\n\n<pre><code>element.addEventListener('click', func(event, this.elements[i]))\n</code></pre>\n\n<p>Then, you could do this with a self executing function that captures the arguments you want in a closure as it executes and returns the actual event handler function:</p>\n\n<pre><code>element.addEventListener('click', function(passedInElement) {\n    return function(e) {func(e, passedInElement); };\n} (this.elements[i]) , false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p><code>this</code> inside of <code>doThings</code> is the window object. Try this instead:</p>\n\n<pre><code>var doThings = function (element) {\n    var eventHandler = function(ev, func){\n        if (element[ev] == undefined) {\n            return;\n        }\n\n        element[ev] = function(e){\n            func(e, element);\n        }\n    };\n\n    return {\n        eventHandler: eventHandler\n    };\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Something you can try is using the bind method, I think this achieves what you were asking for. If nothing else, it's still very useful.</p>\n\n<pre><code>function doClick(elem, func) {\n  var diffElem = document.getElementById('some_element'); //could be the same or different element than the element in the doClick argument\n  diffElem.addEventListener('click', func.bind(diffElem, elem))\n}\n\nfunction clickEvent(elem, evt) {\n  console.log(this);\n  console.log(elem); \n  // 'this' and elem can be the same thing if the first parameter \n  // of the bind method is the element the event is being attached to from the argument passed to doClick\n  console.log(evt);\n}\n\nvar elem = document.getElementById('elem_to_do_stuff_with');\ndoClick(elem, clickEvent);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to make an eventHandler that passes the event and some parameters. The problem is that the function doesn't get the element. Here is an example:</p>\n\n<pre><code>doClick = function(func){\n    var elem = .. // the element where it is all about\n    elem.onclick = function(e){\n        func(e, elem);\n    }\n}\ndoClick(function(e, element){\n    // do stuff with element and the event\n});\n</code></pre>\n\n<p>The 'elem' must be defined outside of anonymous function. How can i get the passed element to use within the anonymous function? Is there a way to do this?</p>\n\n<p>And what about addEventListener? I don't seem to be able to pass the event through an addEventListener at all do I ?</p>\n\n<p><strong>Update</strong></p>\n\n<p>I seemed to fix the problem with 'this'</p>\n\n<pre><code>doClick = function(func){\n    var that = this;\n    this.element.onclick = function(e){\n        func(e, that);\n    }\n}\n</code></pre>\n\n<p>Where this contains this.element that i can access in the function.</p>\n\n<p><strong>The addEventListener</strong></p>\n\n<p>But i'm wondering about the addEventListener:</p>\n\n<pre><code>function doClick(elem, func){\n    element.addEventListener('click', func(event, elem), false);\n}\n</code></pre>\n",
            "last_activity_date": 1420466091,
            "question_id": 10000083,
            "score": 12,
            "tags": [
                "javascript",
                "events",
                "event-handling",
                "handler"
            ],
            "title": "Javascript event handler with parameters"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Nope, there is no way to access index or direction.</p>\n\n<p><a href=\"https://github.com/twitter/bootstrap/pull/2404#issuecomment-4589229\">See here</a></p>\n\n<p>// EDIT</p>\n\n<p>Bootstrap changed repos, new <a href=\"https://github.com/twbs/bootstrap/pull/2404#issuecomment-4589229\">link</a></p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>I'm doing it like that, that works sort of very well ;)</p>\n\n<pre><code>var slider = $(\"#slider-wrapper\")\n    .carousel({\n        interval: 4000\n    })\n    .bind('slid', function() {\n        var index = $(this).find(\".active\").index();\n        $(this).find(\"a\").removeClass('pager-active').eq(index).addClass('pager-active');\n    });\n\n$(\"#slider-wrapper a\").click(function(e){\n    var index = $(this).index();\n    slider.carousel(index);\n    e.preventDefault();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Instead of adding and subtracting from the current slide, try this on the 'slide' event:</p>\n\n<pre><code>$('.carousel').on('slide',function(e){\n    var slideFrom = $(this).find('.active').index();\n    var slideTo = $(e.relatedTarget).index();\n    console.log(slideFrom+' =&gt; '+slideTo);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Here's what I came up with after reading fat's comment in @Quelltextfabrik's answer.</p>\n\n<pre><code>var carousel = $(\"#myCarousel\");\n\ncarousel.on(\"slid\", function () {\n    var all = carousel.find('.item'),\n        active = carousel.find('.active'),\n        slidTo = all.index(active);\n\n    console.log(\"Slid - Slid To: \" + slidTo);\n    });\n\ncarousel.on(\"slide\", function () {\n    var all = carousel.find('.item'),\n        active = carousel.find('.active'),\n        slidFrom = all.index(active);\n\n    console.log(\"Slide - Slid From: \" + slidFrom);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>$(\".active\", e.target).index()</code> works. Where e from:</p>\n\n<p>carousel.on(\"slid\", function (e) {\n   $(\".active\", e.target).index();\n    });</p>\n\n<p>Found on: <a href=\"https://github.com/twitter/bootstrap/pull/2404#issuecomment-4589229\" rel=\"nofollow\">https://github.com/twitter/bootstrap/pull/2404#issuecomment-4589229</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This worked for me (Bootstrap 3)</p>\n\n<pre><code>$(\"#myCarousel\").on('slide.bs.carousel', function(evt) {\n  console.debug(\"slide transition started\")\n  console.debug('current slide = ', $(this).find('.active').index())\n  console.debug('next slide = ', $(evt.relatedTarget).index())\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For bootstrap 3 it's</p>\n\n<pre><code>$('#myCarousel').on('slide.bs.carousel', function (e) {\n  var active = $(e.target).find('.carousel-inner &gt; .item.active');\n  var from = active.index();\n  var next = $(e.relatedTarget);\n  var to = next.index();\n  console.log(from + ' =&gt; ' + to);\n})\n</code></pre>\n\n<p>from <a href=\"https://github.com/twbs/bootstrap/pull/2404#issuecomment-22362366\" rel=\"nofollow\">https://github.com/twbs/bootstrap/pull/2404#issuecomment-22362366</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How do I get the current index from the carousel?</p>\n\n<p>In this case I am using an unordered list. I know I could search through the list items to find the one with the 'active' CSS class, but I want to know if I can ask the carousel object directly.</p>\n\n<p>Additional: being able to access the target index (on 'slide' event) would be handy also. Again, I can do this by searching with:</p>\n\n<pre><code>var idx = $('.carousel-inner li.active').index();\n</code></pre>\n\n<p>...and then adding/subtracting based on direction, but I am hoping for something cleaner.</p>\n",
            "last_activity_date": 1396094177,
            "question_id": 9860436,
            "score": 12,
            "tags": [
                "javascript",
                "jquery-plugins",
                "twitter-bootstrap"
            ],
            "title": "Twitter Bootstrap Carousel - access current index"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Apparently Math.random() in V8 <a href=\"http://code.google.com/p/v8/issues/detail?id=558\">only works with 32 bit values</a> (and didn't even correctly randomize all of those in the past). And with 32 bits, the probability of a collision reaches 50% around 2^16 = 65k values...</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Other answers have explained the issue. If you're after better pseudo-random number generation in JavaScript, I'd recommend this page as a good place to start:</p>\n\n<p><a href=\"http://baagoe.com/en/RandomMusings/javascript/\" rel=\"nofollow\">http://baagoe.com/en/RandomMusings/javascript/</a></p>\n\n<p>I adapted <a href=\"http://baagoe.com/en/RandomMusings/javascript/Alea.js\" rel=\"nofollow\">one of the algorithms on this page</a> for a script I'm using to generate UUIDs in the browser and had no collisions in my tests.</p>\n\n<h2>UPDATE 22 October 2013</h2>\n\n<p>The pages linked to above are no longer live. Here's a link to a snapshot from the Wayback Machine:</p>\n\n<p><a href=\"http://web.archive.org/web/20120502223108/http://baagoe.com/en/RandomMusings/javascript/\" rel=\"nofollow\">http://web.archive.org/web/20120502223108/http://baagoe.com/en/RandomMusings/javascript/</a></p>\n\n<p>And here's a link to a Node.js module that includes Alea.js:</p>\n\n<p><a href=\"https://npmjs.org/package/alea\" rel=\"nofollow\">https://npmjs.org/package/alea</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I ran into an odd \"bug\" today when I was running some unit tests in various browsers. I had run the tests in Firefox many times before today, and even IE but apparently not Chrome (v19-dev) yet. When I ran them in Chrome it consistently failed one test because two values I was calculating did not match.</p>\n\n<p>When I really dug into what was happening I realized that the issue was that I was assuming that if I filled an array with 100,000 <code>Math.random()</code> values that they would all be unique (there wouldn't be any collisions). Turned out that in Chrome that is not true.</p>\n\n<p>In Chrome I was consistently getting at least <em>two</em> pairs of values that matched out of 100,000. Firefox and IE9 never experience a collision. Here is a jsfiddle I wrote just for testing this that creates 1M <code>Math.random()</code> entries in an array: <a href=\"http://jsfiddle.net/pseudosavant/bcduj/\">http://jsfiddle.net/pseudosavant/bcduj/</a></p>\n\n<p>Does anyone know why the Chrome pseudo-random number generator that is used for <code>Math.random</code> is really not <em>that</em> random? It seems like this could have implications for any client-side js encryption routines that ever use <code>Math.random</code>.</p>\n",
            "last_activity_date": 1382430981,
            "question_id": 9550796,
            "score": 12,
            "tags": [
                "javascript",
                "google-chrome",
                "random"
            ],
            "title": "Why is Google Chrome&#39;s Math.random number generator not *that* random?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You're not adding items to the array; you're adding properties to the <code>Array</code> object.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>\"string keyed\" indexes are not indexes at all, but properties. <code>array2[\"a\"]</code> is the same as saying <code>array2.a</code>. Remember that you can set properties on any kind of variable in javascript, which is exactly what you're doing here.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Because the length is <a href=\"http://es5.github.com/#x15.4.5.2\">defined to be</a> one plus the largest numeric index in the array.</p>\n\n<pre><code>var xs = [];\nxs[10] = 17;\nconsole.log( xs.length ); //11\n</code></pre>\n\n<p>For this reason, you should only use arrays for storing things indexed by numbers, using plain objects instead if you want to use strings as keys. Also, as a sidenote, it is a better practice to use literals like <code>[]</code> or <code>{}</code> instead of <code>new Array</code> and <code>new Object</code>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Javascript arrays cannot have \"string indexes\". A Javascript <code>Array</code> is exclusively numerically indexed. When you set a \"string index\", you're setting a property of the object. These are equivalent:</p>\n\n<pre><code>array.a = 'foo';\narray['a'] = 'foo';\n</code></pre>\n\n<p>Those properties are not part of the \"data storage\" of the array.</p>\n\n<p>If you want \"associative arrays\", you need to use an object:</p>\n\n<pre><code>var obj = {};\nobj['a'] = 'foo';\n</code></pre>\n\n<p>Maybe the simplest visualization is using the literal notation instead of <code>new Array</code>:</p>\n\n<pre><code>// numerically indexed Array\nvar array = ['foo', 'bar', 'baz'];\n\n// associative Object\nvar dict = { foo : 42, bar : 'baz' };\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>As said above, use object for associative arrays. </p>\n\n<p>If you don't you won't necessarily notice you're doing it wrong, until you innocently use \"length\" as an array index :</p>\n\n<pre><code>var myArray = [];\nmyArray[\"foo\"] = \"bar\"; //works\nconsole.log(myArray[\"foo\"]) //print \"bar\"\nmyArray[\"length\"] = \"baz\" //crash with a \"RangeError: Invalid array length\"\n</code></pre>\n\n<p>That is because you are replacing the <code>length</code> attribute of an array with a String, which is invalid.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In the example below, the array2.length is only ten, when in my mind, it should be 13. Why does the \"string keyed\" indexes not increase the length of the array? I can store things and still access it, and the VS debugger shows that those arrays are being stored properly. So why is the length not increased?</p>\n\n<pre><code>var array2 = new Array();\narray2[\"a\"] = new Array();\narray2[\"b\"] = new Array();\narray2[\"c\"] = new Array();\nfor (var i = 0; i &lt; 10; ++i)\n    array2[i] = new Array();\n\nvar nothing = \"\";\nfor (var i = 0; i &lt; array2.length; ++i)\n    nothing = \"\";\n</code></pre>\n",
            "last_activity_date": 1411637270,
            "question_id": 9526860,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "Why does a string index in a javascript array not increase the length size?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Here is the code</p>\n\n<p>HTML</p>\n\n<pre><code>&lt;input type=\"text\" align=\"MIDDLE\" size=\"30\" maxlength=\"20\" onkeyup=\"validatephone(this);\" name=\"contact\"/&gt;\n</code></pre>\n\n<p>Javascript</p>\n\n<pre><code>function validatephone(xxxxx) \n{\n    var maintainplus = '';\n    var numval = xxxxx.value\n    if ( numval.charAt(0)=='+' )\n    {\n        var maintainplus = '';\n    }\n    curphonevar = numval.replace(/[\\\\A-Za-z!\"\u00a3$%^&amp;\\-\\)\\(*+_={};:'@#~,.\u0160\\/&lt;&gt;\\\" \"\\?|`\u00ac\\]\\[]/g,'');\n    xxxxx.value = maintainplus + curphonevar;\n    var maintainplus = '';\n    xxxxx.focus;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use the <code>input</code> (FF) and <code>propertychange</code> (all others) events to catch all forms of input including keyboard and rmb cut paste. </p>\n\n<p><a href=\"http://jsfiddle.net/dFBzW/\">http://jsfiddle.net/dFBzW/</a></p>\n\n<pre><code>$('input').bind('input propertychange', function() {\n    $('#output').html($(this).val());\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<blockquote>\n  <p>A good argument against this practice is also welcome, in case there are new problems that would rise if this validation were implemented; however, that seems a common thing in other languages, so I doubt it is a bad thing to want.</p>\n</blockquote>\n\n<p>If by \"validate\" you mean \"prevent invalid characters from being entered at all\", I think this is a bad practice. It's confusing for users, who may not be paying close attention and who perhaps aren't even looking at the field while they type (e.g., if they're entering account or phone numbers that they're reading from a piece of paper). The value that actually gets saved/used may be slightly different to the value they thought they'd entered.</p>\n\n<p>If by \"validate\" you mean \"test the current value and draw the user's attention to any problems\" by e.g., displaying an error next to the field or changing the background colour, then there is no problem using a combination of several events including keyup, change, blur, paste, click:</p>\n\n<pre><code>$(\"field selector\").on(\"keyup change blur paste cut click\", function() { ... });\n</code></pre>\n\n<p>This will catch most normal cases as the user types, and for the clipboard or drag'n'drop cases you at least know that at worst the field will still be validated when the user leaves it. (Obviously you don't allow submit until all errors have been corrected.)</p>\n\n<p>If you process keyup <em>and</em> keydown that covers cases where the user held a key down, because most browsers will send repeated keydown events for that.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In the jQuery world, it's common to leverage plug-ins for these validation tasks. Plug-ins can be relatively easy to use, and their popularity usually reflects in less bugs than code written from scratch.</p>\n\n<p>Input validation is usually split into categories, including:</p>\n\n<p><strong>1)</strong> Correct input format / Input mask. for example, only A-Z, or say, 10 digit numbers.</p>\n\n<p><strong>2)</strong> Content existence in a domain. For example, airport code or postal codes.</p>\n\n<p>For <strong>(1)</strong> you can use these relatively popular plug-ins:</p>\n\n<p><a href=\"http://digitalbush.com/projects/masked-input-plugin/\" rel=\"nofollow\">Digital Bush's Masked Input Plugin for Jquery</a>. It has many options for customisation including spaces, eg:</p>\n\n<p><em>from Digital Bush website:</em></p>\n\n<pre><code>$(\"#phone\").mask(\"(999) 999-9999\");\n</code></pre>\n\n<p>The <a href=\"http://www.decorplanit.com/plugin/\" rel=\"nofollow\">autoNumeric from decorplanit.com</a> . They have a nice support for numeric, as well as currency, rounding, etc.</p>\n\n<p><em>adapted from autoNumeric website:</em></p>\n\n<pre><code>$('#amountPaid').autoNumeric({aSep: '.', aDec: ','}); // eg, 9.000,00\n</code></pre>\n\n<p>For <strong>(2)</strong>, you can use, for example, <a href=\"http://jqueryui.com/demos/autocomplete/\" rel=\"nofollow\">jQuery UI's autocomplete</a>, combined with server resource data, in a format like JSON. These are likely to require custom code to lock input, but you can still leverage plug-ins for the basic functionality, and focus on the specific business logic you are creating.</p>\n\n<p>Some text above adapted from  two answers in other posts <a href=\"http://stackoverflow.com/a/9156636/449024\">here</a> and <a href=\"http://stackoverflow.com/a/9185724/449024\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This also may be helpful </p>\n\n<pre><code>$(\".cssclass\").live(\"input propertychange\", function () {\n    //Validate goes here\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just for another solution to prevent certain characters, without JQuery...</p>\n\n<pre><code>&lt;input type=\"text\" onkeypress=\"checkInput(event)\" /&gt;\n\n...\n\nfunction checkInput(e)\n{\n    //only alpha-numeric characters\n    var ok = /[A-Za-z0-9]/.test(String.fromCharCode(e.charCode));\n    if (!ok)\n        e.preventDefault();\n}\n</code></pre>\n\n<p>I don't know if this requires new versions of things or only works on some browsers. Please comment.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What's the best way of validating an HTML text input as it's typed? All ways I know of doing it has some drawbacks:</p>\n\n<ol>\n<li><p>Using <code>$.keypress</code> you only have access to the input's old value, not the new one. Also, some events (like cutting/pasting using the mouse) won't be detected.</p></li>\n<li><p>Using <code>$.change</code> only works when the input loses focus.</p></li>\n<li><p><a href=\"http://stackoverflow.com/q/1546348/520779\">This question</a> proposes a solution, where you use polling to watch for property changes. In principle, it's possible to validate the new value in the callback, then revert to the old one if invalid. However, besides requiring polling, I'm not sure it's free from race conditions.</p></li>\n<li><p><a href=\"http://darcyclarke.me/development/detect-attribute-changes-with-jquery/\">This article</a> suggests using browser specific features when present, falling back to polling if none is available. Looks like the best approach so far.</p></li>\n<li><p><strong>[Update]</strong> as pointed in the answers, <code>$.keyup</code> give access to the value after update. However, not only it doesn't work for mouse cut/paste, but also fails if you press and hold a key, only releasing after a lot has been entered. Or, if combining <code>keydown</code> and <code>keyup</code> to save/restore the old value, it breaks if the user types too fast.</p></li>\n</ol>\n\n<p>None of the solutions above are error free or really safe cross-browsers. Are there better solutions out there, either ready-to-use or in-the-making? Seems to be a common problem, I've attempted to answer <a href=\"http://stackoverflow.com/q/9108878/520779\">similar</a> <a href=\"http://stackoverflow.com/q/9204783/520779\">questions</a> recently, with no success, and I'm interested in an answer as well.</p>\n\n<p>(A good argument <strong>against</strong> this practice is also welcome, in case there are new problems that would rise if this validation were implemented; however, that seems a common thing in other languages, so I doubt it is a bad thing to want)</p>\n",
            "last_activity_date": 1387182232,
            "question_id": 9205164,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "validation"
            ],
            "title": "Validate html text input as it&#39;s typed"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You should look here: <a href=\"http://www.javascriptkit.com/javatutors/setcss3properties.shtml\">http://www.javascriptkit.com/javatutors/setcss3properties.shtml</a></p>\n\n<p>As you can see setting CSS Properties with \"-\" just results in the next character to be capital:</p>\n\n<pre><code>document.getElementById('fade').style.WebkitTransition = 'opacity 1s';\ndocument.getElementById('fade').style.MozTransition = 'opacity 1s';\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<pre><code>var vendors = ['-moz-','-webkit-','-o-','-ms-','-khtml-',''];\nfunction toCamelCase(str){\nreturn str.toLowerCase().replace(/(\\-[a-z])/g, function($1){\n            return $1.toUpperCase().replace('-','');\n        });\n    };\nfunction setCss3Style(el,prop,val){\n    for(var i=0,l=vendors.length;i&lt;l;i++)\n        {\n            var p = toCamelCase(vendors[i] + prop);\n            if(p in el.style)\n                el.style[p] = val;\n        }\n};\n</code></pre>\n\n<p>usage : </p>\n\n<pre><code>setCss3Style(document.getElementById('fade'),'transition','opacity 1s');\n</code></pre>\n\n<h3>Here's a <a href=\"http://jsfiddle.net/gion_13/PFZ94/\" rel=\"nofollow\">live demo</a></h3>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>you should use the camelCase notation like so: </p>\n\n<pre><code>document.getElementById('fade').style.webkitTransition = 'opacity 1s';\n</code></pre>\n\n<p>like every property composed by more than one word and hyphen-separated (e.g. css <code>background-position</code> turns into js <code>backgroundPosition</code>. </p>\n\n<p>Probably at this time not every browser adopted this notation in properties involving browser specific prefixes, so there are some browser like firefox still accepting <code>Moz</code> instead of <code>moz</code> (see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=607381\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=607381</a>)</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>How can I set CSS using javascript (I don't have access to the CSS file)?</p>\n\n<pre><code>#fade div {\n  -webkit-transition: opacity 1s;\n  -moz-transition: opacity 1s;\n  -o-transition: opacity 1s;\n  -ms-transition: opacity 1s;       \n  transition: opacity 1s;\n  opacity: 0;\n  position: absolute;\n  height: 500px;\n  width: 960px;\n}\n</code></pre>\n\n<p>For example:</p>\n\n<pre><code>document.getElementById('fade').HOW-TO-TYPE-webkit-transition = 'opacity 1s';\n</code></pre>\n",
            "last_activity_date": 1325767866,
            "question_id": 8742249,
            "score": 12,
            "tags": [
                "javascript",
                "css3"
            ],
            "title": "How to set CSS3 transition using javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Check this fiddle: <a href=\"http://jsfiddle.net/techfoobar/xQqbR/\">http://jsfiddle.net/techfoobar/xQqbR/</a></p>\n\n<p>You basically need to over ride the <code>mousedown</code> event for each <code>&lt;option&gt;</code> and toggle the <code>selected</code> property there.</p>\n\n<pre><code>$('option').mousedown(function(e) {\n    e.preventDefault();\n    $(this).prop('selected', !$(this).prop('selected'));\n    return false;\n});\n</code></pre>\n\n<p>For simplicity, I've given 'option' as the selector above. You can fine tune it to match <code>&lt;option&gt;s</code> under specific <code>&lt;select&gt;</code> element(s). For ex: <code>$('#mymultiselect option')</code></p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>I had same problem today, generally the advice is to use a list of hidden checkboxes and emulate the behavior via css, in this way is more easy to manage but in my case i don't want to modify html.</p>\n\n<p>At the moment i've tested this code only with google chrome, i don't know if works with other browser but it should:</p>\n\n<pre><code>var changed;\n$('select[multiple=\"multiple\"]').change(function(e) {\n    var select = $(this);\n    var list = select.data('prevstate');\n    var val = select.val();\n    if (list == null) {\n        list = val;\n    } else if (val.length == 1) {\n        val = val.pop();\n        var pos = list.indexOf(val);\n        if (pos == -1)\n            list.push(val);\n        else\n            list.splice(pos, 1);\n    } else {\n        list = val;\n    }\n    select.val(list);\n    select.data('prevstate', list);\n    changed = true;\n}).find('option').click(function() {\n    if (!changed){\n        $(this).parent().change();\n    }\n    changed = false;\n});\n</code></pre>\n\n<p>Of course suggestions are welcome but I have not found another way</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Had to solve this problem myself and noticed the <a href=\"http://jsfiddle.net/7n8nnjus/1/\" rel=\"nofollow\">bugged behavior a simple interception of the <code>mousedown</code></a> and setting the attribute would have, so made a override of the select element and it works good.</p>\n\n<h3>jsFiddle: <a href=\"http://jsfiddle.net/51p7ocLw/\" rel=\"nofollow\">http://jsfiddle.net/51p7ocLw/</a></h3>\n\n<p><strong>Note:</strong> This code does fix buggy behavior by replacing the select element in the DOM. This is a bit agressive and will break event handlers you might have attached to the element.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>window.onmousedown = function (e) {\r\n    var el = e.target;\r\n    if (el.tagName.toLowerCase() == 'option' &amp;&amp; el.parentNode.hasAttribute('multiple')) {\r\n        e.preventDefault();\r\n\r\n        // toggle selection\r\n        if (el.hasAttribute('selected')) el.removeAttribute('selected');\r\n        else el.setAttribute('selected', '');\r\n\r\n        // hack to correct buggy behavior\r\n        var select = el.parentNode.cloneNode(true);\r\n        el.parentNode.parentNode.replaceChild(select, el.parentNode);\r\n    }\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;h4&gt;From&lt;/h4&gt;\r\n\r\n&lt;div&gt;\r\n    &lt;select name=\"sites-list\" size=\"7\" multiple&gt;\r\n        &lt;option value=\"site-1\"&gt;SITE&lt;/option&gt;\r\n        &lt;option value=\"site-2\" selected&gt;SITE&lt;/option&gt;\r\n        &lt;option value=\"site-3\"&gt;SITE&lt;/option&gt;\r\n        &lt;option value=\"site-4\"&gt;SITE&lt;/option&gt;\r\n        &lt;option value=\"site-5\"&gt;SITE&lt;/option&gt;\r\n        &lt;option value=\"site-6\" selected&gt;SITE&lt;/option&gt;\r\n        &lt;option value=\"site-7\"&gt;SITE&lt;/option&gt;\r\n        &lt;option value=\"site-8\"&gt;SITE&lt;/option&gt;\r\n        &lt;option value=\"site-9\"&gt;SITE&lt;/option&gt;\r\n    &lt;/select&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I thought this would be a simple hack, but I've now been searching for hours and can't seen to find the right search term. I want to have an ordinary multiple select box (<code>&lt;select multiple=\"multiple\"&gt;</code>) except I don't want the user to have to hold down the control key to make multiple selections. </p>\n\n<p>In other words, I want a left click to toggle the <code>&lt;option&gt;</code> element that's under the cursor without changing any of the others. In other other words, I want something that looks like a combo list box but behaves like a group of check boxes.</p>\n\n<p>Can anybody suggest a simple way to do this in Javascript? Thanks.</p>\n",
            "last_activity_date": 1419065928,
            "question_id": 8641729,
            "score": 12,
            "tags": [
                "javascript",
                "forms",
                "dom"
            ],
            "title": "How to avoid the need for ctrl-click in a multi-select box using Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>The DOM storage data is stored in the <code>webappsstore.sqlite</code> file in the profile \n  folder.</p>\n</blockquote>\n\n<p><a href=\"http://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Storage#localStorage\"><code>&sect; localStorage</code></a></p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>On Windows, you can find it in here</p>\n\n<pre>\n%appdata%\\Mozilla\\Firefox\\Profiles\\xxxxxxx.default\\webappsstore.sqlite\n</pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>On Mac OS X, the <code>webappsstore.sqlite</code> is located under <code>~/Library/Application Support/Firefox/Profiles/xxxxxxxx.default/</code> (where xxxxxxxx is random according to <a href=\"http://www.borngeek.com/firefox/profile-tutorial/\" rel=\"nofollow\">Firefox Profile Tutorial</a> ).</p>\n\n<p>I used the <a href=\"http://www.sqlite.org/sqlite.html\" rel=\"nofollow\">Command Line Shell For SQLite</a> to look around.  Assuming www.example.com was a real site and the only site using localstorage, you can run these commands:</p>\n\n<pre><code>$ sqlite3 webappsstore.sqlite\nsqlite&gt; .tables\nwebappsstore2\nsqlite&gt; .schema\nCREATE TABLE webappsstore2 (scope TEXT, key TEXT, value TEXT, secure INTEGER, owner TEXT);\nCREATE UNIQUE INDEX scope_key_index ON webappsstore2(scope, key);\nsqlite&gt; select * from webappsstore2;\nmoc.elpmaxe.www.:http:80|stringkey|value|0|\nmoc.elpmaxe.www.:http:80|jsonkey|{\"key\",\"value\"}|0|\nsqlite&gt; .exit\n</code></pre>\n\n<p>See <a href=\"http://stackoverflow.com/questions/9669184/how-is-html5-webstorage-data-physically-stored/14887525#14887525\">How is HTML5 WebStorage data physically stored?</a> for the Chrome storage location.  Chrome uses individual sqlite files per hostname and protocol, where Firefox uses the reversed hostname and protocol in the scope column.</p>\n\n<p>See <a href=\"http://stackoverflow.com/questions/8634058/where-the-sessionstorage-and-localstorage-stored/15711210#15711210\">Where the sessionStorage and localStorage stored?</a> for the Opera storage location.  Opera uses an XML index file and individual XML files for the Base64 encoded data.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have made an advance functional prototype of a simple web application, and delays have pushed this into the position of going \"live\".</p>\n\n<p>At the moment, it just uses HTML5's <code>localStorage</code> facility to keep track of what's happening, but due to paranoia, we don't want it corrupted and losing data (it certainly feels a bit sketchy never talking to a server...)</p>\n\n<p>Where does Firefox keep it's <code>localstorage</code> database (I think it's sqlite, but I just can't find it...)</p>\n",
            "last_activity_date": 1409868792,
            "question_id": 7079075,
            "score": 12,
            "tags": [
                "javascript",
                "html5",
                "firefox",
                "local-storage",
                "web-storage"
            ],
            "title": "Where does Firefox store javascript/HTML localStorage?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>If you need to send it over ajax, then there's no need to use a <code>File</code> object, only <code>Blob</code> and <code>FormData</code> objects are needed.</p>\n\n<p>As I sidenote, why don't you just send the base64 string to the server over ajax and convert it to binary server-side, using PHP's <code>base64_decode</code> for example? Anyway, the standard-compliant code from <a href=\"http://stackoverflow.com/questions/4998908/convert-data-uri-to-file-then-append-to-formdata\">this answer</a> works in Chrome 13 and WebKit nightlies:</p>\n\n<pre><code>function dataURItoBlob(dataURI) {\n    // convert base64 to raw binary data held in a string\n    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n    var byteString = atob(dataURI.split(',')[1]);\n\n    // separate out the mime component\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n    // write the bytes of the string to an ArrayBuffer\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n    for (var i = 0; i &lt; byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n\n    // write the ArrayBuffer to a blob, and you're done\n    var bb = new BlobBuilder();\n    bb.append(ab);\n    return bb.getBlob(mimeString);\n}\n</code></pre>\n\n<p>Then just append the blob to a new FormData object and post it to your server using ajax:</p>\n\n<pre><code>var blob = dataURItoBlob(someDataUrl);\nvar fd = new FormData(document.forms[0]);\nvar xhr = new XMLHttpRequest();\n\nfd.append(\"myFile\", blob);\nxhr.open('POST', '/', true);\nxhr.send(fd);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>I have deleted my previous question as i singled out the problem thanks to scrappedcola's comment. I need to convert dataURL to file object in javascript in order to send it over using ajax. Is it possible? if yes, please tell me how. Thanks</p>\n",
            "last_activity_date": 1371067250,
            "question_id": 6850276,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "fileapi"
            ],
            "title": "How to convert dataURL to file object in javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can change the labels by using a <a href=\"http://www.highcharts.com/ref/#yAxis-labels\">label formatter</a>. Assuming your data is formed appropriately, you can do something like the following:</p>\n\n<pre><code>var yourLabels = [\"Very Low\", \"Low\", \"Medium\", \"High\", \"Very High\"];\nvar yourChart = new Highcharts.Chart({\n    //...\n    yAxis: {        \n        labels: {\n            formatter: function() {\n                return yourLabels[this.value];\n            }\n        }\n    }\n    //...\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>Declare an object which will be used to switch the values you want to change, like the following.</p>\n\n<pre><code>var change = {\n    0: 'Very Low',\n    5: 'Low',\n    10: 'Medium',\n    15: 'High',\n    20: 'Very High'\n};\n</code></pre>\n\n<p>Then on your chart options use labels formatter to switch it.</p>\n\n<pre><code>yAxis: {\n    labels: {\n        formatter: function() {\n            var value = change[this.value];\n            return value !== 'undefined' ? value : this.value;\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm using Highcharts and would like to display a simple column graph, but instead of using numeric values for the y-axis, I would like to use text values.<br>\nFor example, instead of <code>[0,5,10,15,20]</code> I would like to use <code>[Very Low,Low,Medium,High,Very High]</code>.</p>\n\n<p>I noticed it's somewhat possible to do this with plot bands, but that still shows the numeric y-axis labels and just puts the text beside them. I want to only show the text labels.</p>\n",
            "last_activity_date": 1360910912,
            "question_id": 4987457,
            "score": 12,
            "tags": [
                "javascript",
                "highcharts"
            ],
            "title": "Highcharts text labels for y-axis"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>If it's not throwing compiler errors, you should be fine. It's better that you do remember to use them all the time however, as some languages that you might get into such as objective-c are adamant about their use.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The concept is known as <em>JavaScript Semicolon Insertion</em> or \"<em>Automatic Semicolon Insertion</em>\". This blog post: <a href=\"http://inimino.org/~inimino/blog/javascript_semicolons\"><strong>JavaScript Semicolon Insertion: Everything you need to know</strong></a>  outlines the concept well in an understandable manner using examples under the headings:  </p>\n\n<ul>\n<li>Where Semicolons are Allowed</li>\n<li>Where Semicolons May be Omitted</li>\n<li>The rules</li>\n</ul>\n\n<p>It even digs into the <a href=\"http://bclary.com/2004/11/07/#a-7.9\">official ECMAScript specification</a> about the topic. </p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Javascript does something called \"semicolon insertion\" which means you can actually write code that omits the semicolon in certain places, and they'll basically be added for you when the code is parsed.</p>\n\n<p>The rules around when this happens a little complex.  For simplicity's sake, many developers simply pretend semicolon insertion doesn't exist.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Semicolons are not required for JavaScript programming, nevertheless I advice you to use it. It makes your code more readable and is actually a good practice, and almost all cool programming languages uses it.</p>\n\n<p>Take a stand and use it, it's up to you now!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You <em>can</em> write javascript without semiconon, you only need to insert them if you start a line with a parantesis ( or a bracket [.</p>\n\n<p>The <a href=\"http://sugarjs.com/api/Number/times\" rel=\"nofollow\">sugarjs</a> times() function is a good example:</p>\n\n<pre><code>&lt;script&gt;\n    var somthing = 1 + 3\n     ;(5).times(function(n){\n         console.log(n + \" line\") //prints \"X line\" 5 times\n     })\n&lt;/script&gt;\n</code></pre>\n\n<p>This article debunks most of the myths surounding javascript and semicolons: <a href=\"http://mislav.uniqpath.com/2010/05/semicolons/\" rel=\"nofollow\">link</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To say that writing code with semicolons makes it more readable is absurd. It makes your code more CLUTTERED. Look at the code on this page without the semicolons and tell me it's less readable. It's more readable, less cluttered, cleaner and more elegant. Semicolons are ugly and unnecessary. See this article: <a href=\"http://mislav.uniqpath.com/2010/05/semicolons/\" rel=\"nofollow\">http://mislav.uniqpath.com/2010/05/semicolons/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I missed semicolons in some of the places in my javascript , but its not throwing error in any of the browsers. Is the ; at the end needed?</p>\n",
            "last_activity_date": 1394823525,
            "question_id": 4002234,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "Do we need semicolon at the end?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>No, you cannot do this. Functions cannot be JSON serialized. Instead of converting the object into JSON you could directly pass it to the other function without calling JSON.stringify.</p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>Yes.   Simply use javascript's <code>eval</code> function:</p>\n\n<pre><code>var functionName;\nvar result = eval(functionName + \"()\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes, you can convert a function to a string with it's <code>toString()</code> method.</p>\n\n<p><a href=\"http://jsfiddle.net/xWHss/\">Here's an example</a> to show converting a function to a string and back to a function:</p>\n\n<pre><code>var myfunc = function () {\n    alert('It works!');\n}\n\nvar as_string = myfunc.toString();\n\nas_string = as_string.replace('It works', 'It really works');\n\nvar as_func = eval('(' + as_string + ')');\n\nas_func();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Here's a working <a href=\"http://jsfiddle.net/rahilwazir/gfbAg/110/\" rel=\"nofollow\">example</a></p>\n\n<p>Basically, you have to be careful with this sort of thing. If you take an extant javascript function, turn it to a string, and eval it, you might run into function redeclaration issues. If you are simply taking a function string from the server and you want to run it, you can do as I did on that jsfiddle:</p>\n\n<p><strong>Javascript</strong></p>\n\n<pre><code>var myFunc = \"function test() {alert('test');}\";\n\n$(document).ready(function() {\n    var data = new Object();\n    data.func = myFunc;\n    var jsonVal = $.toJSON(data);\n    var newObj = $.evalJSON(jsonVal);\n    eval(newObj.func);\n    test();\n});\u200b\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Yes, you can. There are tons of ways to do it. </p>\n\n<p>And there is no need to use the \"evil\" eval function (please yahoogle why it should be avoided) as pointed out here: <a href=\"http://javascript.about.com/library/bleval.htm\">http://javascript.about.com/library/bleval.htm</a></p>\n\n<pre><code>var tmpFunc = new Function(codeToRun);\ntmpFunc(); \n</code></pre>\n\n<p>Whether it was JSON at any stage should be irrelevant.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>take a look at the <strong>JSONfn</strong> plugin.</p>\n\n<p><a href=\"http://www.eslinstructor.net/jsonfn/\" rel=\"nofollow\">http://www.eslinstructor.net/jsonfn/</a></p>\n\n<p>it does exactly what you're asking for.</p>\n\n<p>-Vadim</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I created a fork of JSONfn which enables you to stringify and parse objects and their prototypes. In my basic tests it worked fine.</p>\n\n<p><a href=\"https://github.com/cgarciae/jsonfn\" rel=\"nofollow\">https://github.com/cgarciae/jsonfn</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there any way that I can pass a function as a json string (conversion with JSON.stringify), send it to another function, parse the json and then execute the function that was in the json? I am using jquery and javascript.</p>\n",
            "last_activity_date": 1407490749,
            "question_id": 3946958,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "observer-pattern"
            ],
            "title": "pass function in json and execute"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Never, unless I wanted to create a <code>self</code> variable in the scope of a function referring to the context for later reference,</p>\n\n<pre><code>function Constructor() {\n    var self = this;\n}\n</code></pre>\n\n<p>You should use <code>this</code> to refer to the element at hand, not <code>self</code>. In global scope though <code>this</code> is a reference to <code>window</code>, and <code>self</code> is also <code>window</code>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<blockquote>\n  <p>For all windows, the <code>self</code> and <code>window</code>\n  properties of a <code>window</code> object are\n  synonyms for the current window, and\n  you can optionally use them to refer\n  to the current window. For example,\n  you can close the current window by\n  calling the <code>close</code> method of either\n  <code>window</code> or <code>self</code>. You can use these\n  properties to make your code more\n  readable or to disambiguate the\n  property reference <code>self.status</code> from a\n  form called <code>status</code>.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p><code>self</code> is not a reserved keyword or standard type, but has become a defacto standard name when for keeping reference to an object for closures.</p>\n\n<p>Here we create a closure to pass to <code>setTimeout()</code>. When that closure is executed, <code>this</code> will refer to the global object. To keep a reference to the <code>foo</code> object <code>doLater</code> was originally called on, a var named <code>self</code> is used. It could be anything but 'self' has meaningful semantics.</p>\n\n<pre><code>Foo.prototype.doLater = function() {\n  var self = this; // current object\n\n  window.setTimeout(function() { self.doSomething(); }, 1000);\n}\n\nnew Foo().doLater();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Other replies have pointed out that <code>self</code> is not going to refer to the <code>FORM</code> and that <code>self</code> is <code>window</code>. They're right; <code>self</code> <em>is</em> <code>window</code>. Well, except when it isn't. In either IE6 or IE7 (forgot), <code>self.onload</code> would not fire, though <code>window.onload</code> would.</p>\n\n<p>All official versions of IE (and even IE9pr3) have an odd, intransitive implementation of <code>==</code> with these host objects. Using <code>==</code> to compare either <code>window</code> or <code>self</code> to a node in the document, the result is <code>true</code>. </p>\n\n<p><b>IE Oddities</b><pre>alert(self == document.body); // true\nalert(document.body == self); // false\nalert(window == self); // true\nalert(window === self); //false\nvar b = document.createElement(\"b\");\nalert(window == b); // false\nalert(window == document.body.appendChild(b)); // true\nalert(window == document.body.removeChild(b)); // false\n</pre></p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I read <a href=\"http://www.htmlgoodies.com/beyond/javascript/js-ref/article.php/3471031/Special-Edition-Using-HTML-4-JavaScript-Keyword-Reference.htm\">here</a> that \"<em>self  Refers to the current window or form</em>\". </p>\n\n<p>Self does not seem to refer to the current form in this case:</p>\n\n<pre><code>&lt;form&gt;&lt;input type=\"text\" onkeyup=\"alert(self.foo.value)\" name=\"foo\"&gt;&lt;/form&gt;\n</code></pre>\n\n<p>However in this case it works (referring to the window):</p>\n\n<pre><code>&lt;form&gt;&lt;input type=\"text\" onkeyup=\"alert(self.document.forms[0].foo.value)\" name=\"foo\"&gt;&lt;/form&gt;\n</code></pre>\n\n<p>So when would you use the <code>self</code> DOM property over just <code>window</code>?</p>\n",
            "last_activity_date": 1413875913,
            "question_id": 3216428,
            "score": 12,
            "tags": [
                "javascript",
                "dom",
                "keyword",
                "self"
            ],
            "title": "self property in javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The jQuery \"Dirty Form\" plugin may help you out here:</p>\n\n<p><a href=\"http://plugins.jquery.com/project/dirtyform\">http://plugins.jquery.com/project/dirtyform</a></p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>The <strong><a href=\"http://plugins.jquery.com/project/formwizard\" rel=\"nofollow\">jQuery Form Wizard plugin</a></strong> should be useful in this case.</p>\n\n<p><strong><a href=\"http://thecodemine.org/\" rel=\"nofollow\">See Demo Here</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is not entirely easy without JQuery because the <code>onchange</code> event for forms is not consistently supported across browsers.</p>\n\n<p>I'd say if you can, use one of the jQuery plugins presented in the other answers. </p>\n\n<p>If jQuery is out of the question, consider adding a simple <code>onchange='if (this.value != this.defaultValue) dirty_flag = true;'</code> to each input element. If you want a clean approach, do this in a <code>&lt;script&gt;</code> section:</p>\n\n<pre><code>document.getElementById(\"formid\").onchange = \n function() { if (this.value ....) }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Since you mentioned you're posting back between steps, I'd have a hidden field that stores what the next step is. By default this would be the next step of the form. The \"Save and Continue\" button just submits the form.</p>\n\n<p>Each menu entry then would then set the value of this hidden form to the appropriate step, and then it would submit the form. Something like:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction goToStep(step) {\ndocument.getElementById(\"hiddenFieldID\").value = step;\ndocument.getElementById(\"formID\").submit();\n}\n&lt;/script&gt;\n\n&lt;ul id=\"menu\"&gt;\n  &lt;li&gt;&lt;a href=\"javascript:goToStep(1);\"&gt;Step 1&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=\"javascript:goToStep(2);\"&gt;Step 2&lt;/a&gt;&lt;/li&gt;\n  etc...\n&lt;/ul&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try to check the form values like this.\nThe call of initFormChangeCheck() copies all values into an mirror object and sets the events mousedown and keydown on each form element what are calling the checkChange routine.\nYou also could check by an interval.</p>\n\n<pre><code>var fList = new Object();\nfunction initFormChangeCheck() {\n  for (var fOi = 0; fOi &lt; document.forms[0].elements.length; fOi++) {\n    el = document.forms[0].elements[fOi];\n    fList[el.name] = el.value;\n    el.onmousedown = checkChange;\n    el.onkeydown = checkChange;\n  }\n}\nfunction checkChange() {\n  var changed = false;\n  for (var fOi = 0; fOi &lt; document.forms[0].elements.length; fOi++) {\n    el = document.forms[0].elements[fOi];\n    if (fList[el.name] != el.value) {\n      changed = true;\n    }\n  }\n  document.forms[0].show_invoice.disabled = changed;\n}\n</code></pre>\n\n<p>Peter\n<a href=\"http://www.gotrendy.de\">Gotrendy News</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have a multi-step form and user can navigate to any page to modify or add information. There is a menu that shows the current progress, the steps the user has completed, and allows to navigate to any completed or pending step.</p>\n\n<p>In spite of a big button \"Save and Continue\" some users click this menu to navigate further. I have to check - if values have changed in a form and ask: \"Save changes? Yes/No\". </p>\n\n<p>What is the best way (with minimum client-side JavaScript code) you suggest me to check if form values have changed?</p>\n\n<p><strong>Edited a bit later:</strong></p>\n\n<p>I forgot to tell that the multi-step form uses postback between steps.</p>\n",
            "last_activity_date": 1403081467,
            "question_id": 2847831,
            "score": 12,
            "tags": [
                "javascript",
                "html",
                "webforms"
            ],
            "title": "Check if web form values have changed"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>try</p>\n\n<pre><code>$('your-form').bind('reset', function() {\n  alert('hi');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>would this help</p>\n\n<pre><code>  $(\"input[type='reset']\").on(\"click\", function(){\n    alert(\"the form has been reset\");\n  });\n</code></pre>\n\n<p>link to jsfiddle: <a href=\"http://jsfiddle.net/sdkTz/1/\" rel=\"nofollow\">http://jsfiddle.net/sdkTz/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Add a <code>click</code> event to the reset button, and have it look like this:</p>\n\n<pre><code>function(e) {\n    setTimeout(function() {\n        // your actual code here\n    },1);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>Try:</p>\n\n<pre><code>$(\"input[type='reset']\").on(\"click\", function(event){\n\n     alert('before reset: ' + $(\"input[type='text']\").val());\n     // executes before the form has been reset\n\n     event.preventDefault();\n     // stops the form from resetting after this function\n\n     $(this).closest('form').get(0).reset();\n     // resets the form before continuing the function\n\n     alert('after reset: ' + $(\"input[type='text']\").val());\n     // executes after the form has been reset\n\n });\u200b\n</code></pre>\n\n<p>You might want to narrow that form selector down to the specific form involved with an id.</p>\n\n<p>Fiddle Proof: <a href=\"http://jsfiddle.net/iambriansreed/Zh5cd/\">http://jsfiddle.net/iambriansreed/Zh5cd/</a></p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Update: use <code>preventDefault</code> instead of <code>return false</code>.</p>\n\n<pre><code>$('input[type=\"reset\"]').click(function(evt) {\n    // Prevent the reset button from firing the form's reset event again\n    evt.preventDefault();\n    $(this).closest('form').get(0).reset();\n    // At this point your form's inputs should have their values reset\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/EYqrX/1/\" rel=\"nofollow\">http://jsfiddle.net/EYqrX/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I don't particularly like the idea of binding the reset event to the reset button instead of the form. A form can be reset by other means and in those cases your event will not trigger.</p>\n\n<p>Instead, bind the function to the reset event but place it within an instantaneous setTimeout. It will ensure the form is actually reset prior to calling the function.</p>\n\n<pre><code>$('form').on('reset', function(e)\n{\n    setTimeout(function() { /* ... */ });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;input type=\"button\" value=\"Limpiar\" onclick=\"resetForm(this);\"/&gt;\n</code></pre>\n\n<hr>\n\n<p><strong>JavaScript:</strong></p>\n\n<pre><code>function resetForm(element) {\n    //Do what you need before reset the form\n    element.form.reset(); //Reset manually the form\n    //Do what you need after reset the form\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>After click an html reset button,</p>\n\n<pre><code>&lt;input type=\"reset\" /&gt;\n</code></pre>\n\n<p>I would like to execute some code.  How can I do this and ensure that the form was reset prior to doing so?</p>\n",
            "last_activity_date": 1421259922,
            "question_id": 10319289,
            "score": 11,
            "tags": [
                "javascript",
                "html",
                "jquery"
            ],
            "title": "How to execute code after html form reset with jquery?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Key pressed goes to the focused element on the page. If you have nothing in your view and the view does not have any focus, then you will not have any key press events.</p>\n\n<p>( btw if you want to do key press event for this.el, do \"keypress\" : \"showKey\" )</p>\n\n<p>In you above code the body will most likely receive all keypress events.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>You can do this in the view initialize() function:</p>\n\n<pre><code>_.bindAll(this, 'on_keypress');\n$(document).bind('keypress', this.on_keypress);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I'm trying to capture the key event from a view as follows:</p>\n\n<pre><code>myView = Backbone.View.extend({\n\n  el: $('#someDiv'),\n  initialize: function(){\n    // initialize some subviews\n  },\n  render: function(){\n    return this;\n  },\n  events:{\n   'keypress #someDiv': 'showKey'\n  },\n  showKey: function(e){\n    console.log(e.keyCode);\n  }\n})\n</code></pre>\n\n<p>That does not work ?</p>\n\n<p>ps: There a no [input] elements in the view or its subviews.  I just need to know if the user presses any key and then do something on the view.</p>\n",
            "last_activity_date": 1341089278,
            "question_id": 6033010,
            "score": 11,
            "tags": [
                "javascript",
                "javascript-events",
                "backbone.js"
            ],
            "title": "how to capture the key event from a view ?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>PROBLEM SOLVED: so in the html markup the form that holds the fields of data should have an</p>\n\n<pre><code>onsubmit=\"return false;\"\n</code></pre>\n\n<p>in it!</p>\n\n<p>Thanks for all the help guys, I have implemented all your suggestions and my code is now soooo much smaller and easier to manage!</p>\n\n<p>Cheers</p>\n\n<p>Simon</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>Thx for posting the solution. Similarly banged my head for a while trying to solve a similar problem with NS_ERROR_NOT_AVAILABLE without luck. Useful for for people using Django &lt;--> Javascript to do XMLHttpRequests as well.  On the Django side, there is an </p>\n\n<pre><code>   error: [Errno 32] Broken pipe \n</code></pre>\n\n<p>...that corresponds with the NS_ERROR that appears in the firebug console for the JS failure.(googleBait)  It's hard to know where to start tracing the problem - server side or client side. </p>\n\n<p>Thx again.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>So I've been banging my head against my desk for a few hours on this one and i'm not getting anywhere so help would really be appreciated.</p>\n\n<p>The code below has two jquery event handlers which fire off an ajax request. The first one uses GET and the data it gets back from the server is JSON encoded - it works fine. The second one ( \"button#addTx\" ) returns causes Firebug to produce this error:</p>\n\n<blockquote>\n  <p>uncaught exception: [Exception...\n  \"prompt aborted by user\"  nsresult:\n  \"0x80040111 (NS_ERROR_NOT_AVAILABLE)\" \n  location: \"JS frame ::\n  resource://gre/components/nsPrompter.js\n  :: openTabPrompt :: line 468\"  data:\n  no]</p>\n  \n  <p>Line 0</p>\n</blockquote>\n\n<p>which is no help to at all. The server side script is printing raw html to the screen and the aim is that a jquery html replace will be used to update to the page which initiates the request. The data is POSTed correctly as the database updates but beyond that I have no clue. I have rewritten it to try a GET and still produce the same error :-(</p>\n\n<p>Help would be amazing - thank you, Simon</p>\n\n<pre><code>$(document).ready(function(){\n$(\"button.delete\").click(function(){\n    var txid = this.id;\n    var amountID = \"#amount\" + txid;\n    var amount = $(amountID).html();\n    // &lt;![CDATA[\n\n    var url = \"delete.php?txid=\" + txid + \"&amp;am=\" + amount;\n    $.ajax({\n        type: \"GET\",\n        url: url,\n        success: function(msg){\n            txid = \"ul#\" + txid;\n            $(txid).hide();\n\n            var values = msg;\n            var e = \"#\" + values.category + \"AmountLeft\";\n            var a = values.amount;\n\n            $(e).html(a);\n        }\n    });\n});\n$(\"button#addTx\").click(function(){\n\n    // &lt;![CDATA[\n\n\n    var url = \"addTran.php\";\n    //var dataV = var data = \"category=\" + document.getElementById(\"category\").value + \"&amp;what=\" + document.getElementById(\"what\").value + \"&amp;amount=\" + document.getElementById(\"amount\").value + \"&amp;date=\" + document.getElementById(\"date\").value;\n    $.ajax({\n        type: \"POST\",\n        url: \"addTran.php\",\n        //async: false,\n        data: \"category=Groceries&amp;what=Food&amp;amount=2.33&amp;date=2/3/2011\",\n        success: function(msg){\n            $(\"transList\").replaceWith(msg);\n        }\n    });\n});\n});\n</code></pre>\n\n<p>and here is the server side script</p>\n\n<pre><code>&lt;?php\nsession_start();\ninclude('functions.php');\n//if the user has not logged in\nif(!isLoggedIn())\n{\n    header('Location: index.php');\n    die();\n}\n\n\n$category = $_POST['category'];\n$what = $_POST['what'];\n$amount = $_POST['amount'];\n$date = $_POST['date'];\n\n$category = mysql_real_escape_string($category);\n$what = mysql_real_escape_string($what);\n$amount = mysql_real_escape_string($amount);\n$date = mysql_real_escape_string($date);\n\n$date = convertDate($date);\n\n//add trans to db\ninclude('dbcon.php');\n$query = \"INSERT INTO transactions ( category, what, amount, date) VALUES ( '$category','$what','$amount','$date');\";\nmysql_query($query);\n\n//grab the remaining amount from that budget\n$query = \"SELECT amount_left FROM cards WHERE category = '$category';\";\n$result = mysql_query($query);\n$row = mysql_fetch_array($result, MYSQL_ASSOC);\n$oldAmountLeft =  $row[\"amount_left\"];\n\n//update the amount left\n$amountLeft = $oldAmountLeft - $amount;\n\nmysql_free_result($result);\n\n//add new value to db\n$query = \"UPDATE cards SET amount_left = '$amountLeft' WHERE category = '$category';\";\nmysql_query($query);\n\n\n\n//generate the list of remaining transactions, print to screen to send back to main page\n\n$query = \"SELECT txid, what, amount, date FROM transactions WHERE category = ('$category');\";\n$result = mysql_query($query);\n\nwhile ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {\n    $d = convertDateReverse($row[\"date\"]);\n    $what = $row[\"what\"];\n    $amount = $row[\"amount\"];\n    $txid = $row[\"txid\"];\n    ?&gt;\n        &lt;li&gt;&lt;ul class=\"trans\" id=\"&lt;? echo $txid; ?&gt;\"&gt;&lt;li class=\"date\"&gt;&lt;? echo $d; ?&gt;&lt;/li&gt;&lt;li class=\"what\"&gt;&lt;? echo $what; ?&gt;&lt;/li&gt;&lt;li class=\"amount\" id=\"amount&lt;? echo $txid; ?&gt;\"&gt;&lt;? echo $amount; ?&gt;&lt;/li&gt;&lt;button class=\"delete\" id=\"&lt;? echo $txid; ?&gt;\"&gt;Delete&lt;/button&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;\n    &lt;?\n}\nmysql_free_result($result);\n\n\n\nmysql_close();\n\nheader(\"Content-type: application/x-www-form-urlencoded\"); //do I need this? I have a \" header(\"Content-type: application/json\"); \" in the working one\n\n?&gt;\n</code></pre>\n",
            "last_activity_date": 1395253160,
            "question_id": 5545577,
            "score": 11,
            "tags": [
                "php",
                "javascript",
                "ajax",
                "post"
            ],
            "title": "AJAX POST handler causing &quot;uncaught exception&quot;"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>While I'm unsure on why, you can always import JavaScript files through JS Script.</p>\n\n<p>The following links give some information on this.</p>\n\n<ul>\n<li><a href=\"http://www.kevinleary.net/loadexternal-javascript-jquery-getscript/\" rel=\"nofollow\">http://www.kevinleary.net/loadexternal-javascript-jquery-getscript/</a></li>\n<li><a href=\"http://www.stackoverflow.com/questions/1140402/how-to-add-jquery-in-js-file\">http://www.stackoverflow.com/questions/1140402/how-to-add-jquery-in-js-file</a></li>\n<li><a href=\"http://www.javascriptkit.com/javatutors/loadjavascriptcss.shtml\" rel=\"nofollow\">http://www.javascriptkit.com/javatutors/loadjavascriptcss.shtml</a></li>\n</ul>\n\n<p>ON a side note - Why are you looking at doing this? Surely you can get the resolution of the screen and then adjust calculations / content based on those variables without the need to change JS files. There are so many different resolutions (mobile devises, multiple monitors, wide screen, projectors etc.).  A user can also re-size the browsers effectively making this not worth it.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<pre><code>var scriptSrc = 'js/defaults.js';\nif (screen.width &lt;= 800)\n  scriptSrc = 'js/defaults-800.js';\nelse if (screen.width &lt;= 1024)\n  scriptSrc = 'js/defaults-1024.js';\nvar script = document.createElement('script');\nscript.src = scriptSrc;\nvar head = document.getElementsByTagName('head')[0];\nhead.appendChild(script);\n</code></pre>\n\n<p>Perhaps? Dynamic-load them based on screen resolution. Could also use document size, browser size, etc. Though I'm not positive you really want to be doing this. <strong>Ideally though you should be dealing with relative metrics (like % or em) in your design and avoid this.</strong></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>var fileref=document.createElement('script')\nfileref.setAttribute(\"type\",\"text/javascript\")\n\nif (window.document.body.clientWidth == XXX) {\n    fileref.setAttribute(\"src\", \"script1.js\")\n} else {\n    fileref.setAttribute(\"src\", \"script2.js\")\n</code></pre>\n\n<p>}</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Media queries are a good solution for providing alternative styles for different window widths. Unfortunately, there is no <code>media</code> attribute for the <code>&lt;script&gt;</code> element to proceed similarly.</p>\n\n<p>You can, however, provide a script-loading script which will load desired <code>.js</code> file depending on the style sheet selected by the browser on the basis of your media query. I don't know how to do this in a direct, elegant way but there is a nice hack for that. You have to \"mark\" each <code>.css</code> with a unique declaration (dummy, unimportant or different by design) and check it from within JS after the page has loaded to determine which style sheet has been applied by the browser.</p>\n\n<p>The HTML could look like this:</p>\n\n<pre><code>&lt;style media=\"handheld, screen and (max-width:1023px)\"&gt;\n    body { margin-top: 0px }\n&lt;/style&gt;\n&lt;style media=\"screen and (min-width:1024px)\"&gt;\n    body { margin-top: 1px }\n&lt;/style&gt;\n</code></pre>\n\n<p>And the accompanying JS as follows:</p>\n\n<pre><code>function onLoad() {\n    var head = document.getElementsByTagName('head')[0];\n    var body = document.getElementsByTagName('body')[0];\n    var mark = window.getComputedStyle(body).getPropertyValue('margin-top');\n\n    var script = document.createElement('script');\n    script.setAttribute('src', mark=='0px' ? 'handheld.js' : 'screen.js');\n    head.appendChild(script);\n}\n</code></pre>\n\n<p>This does the job, but only on a per-load basis. To get a responsive reaction to resizing the browser's window by the user, you should keep track on the widow's width and reload the page when necessary.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since 2011 the world has shifted into the mobile era.</p>\n\n<p>You might wanna try with: <code>document.documentElement.clientWidth</code>, as it will tell you the visible area of your page - it reacts to zoom but not to pitch.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>So I want certain Javascript files for certain browser widths.  I know that @media serves up specific CSS per browser width and some devices.\nHow would I do something similar for Javascript files, WITHOUT using server side calls?</p>\n\n<p>Is is possible with Javascript to call other Javascript files based on browser width?\nIf so, How?</p>\n\n<p>Thanks in advance.</p>\n",
            "last_activity_date": 1393532825,
            "question_id": 4811238,
            "score": 11,
            "tags": [
                "javascript",
                "browser",
                "width"
            ],
            "title": "How to serve up different javascript files by browser width"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It will not be executed on different thread.  You do not have to worry about thread synchronization in this case.</p>\n\n<p>At some point later, after your current call stack unwinds, the download of myfile.js will complete.  The browser and js framework will execute your script at some point after that.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Usually, when you add an external script to an HTML document, the script will need to be downloaded and executed before anything else can be done on the page. In other words, the script blocks. This can take a lot of time if there are several scripts to download.</p>\n\n<p>But when you load a script asynchronously, it doesn't block. The rest of the page can be loaded and other scripts can be executed while the async script is downloading. This makes pages load faster, but this also means that you can't be sure when the async script will be executed. So you can't just start using functions and objects from the async script. You have to wait and check for the async script to load.</p>\n\n<p>Example:</p>\n\n<p><em>script1.js</em></p>\n\n<pre><code>var foo = \"bar\";\n</code></pre>\n\n<p><em>script2.js</em></p>\n\n<pre><code>alert(foo);\n</code></pre>\n\n<p><em>doc1.html</em></p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"script1.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"script2.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Result: \"bar\"</p>\n\n<p><em>doc2.html</em></p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"script1.js\" async=\"true\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"script2.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Result: \"bar\" or undefined, depending on whether or not script1.js has loaded yet.</p>\n\n<p>No threads to worry about, though. One script executes after the other, but never both at the same time. It's just the order of execution that becomes unpredictable.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p><em>Downloaded</em> asynchronously, not <em>executed</em> asynchronously. Also, it's not necessarily executed when the download finishes.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In this post, <a href=\"http://stackoverflow.com/questions/2774373/asynchronous-js-file-loading-syntax\">asynchronous .js file loading syntax</a>, someone said, \"If the async attribute is present, then the script will be executed asynchronously, as soon as it is available.\" </p>\n\n<pre><code>(function() {\n  var d=document,\n  h=d.getElementsByTagName('head')[0],\n  s=d.createElement('script');\n  s.type='text/javascript';\n  s.async=true;\n  s.src='/js/myfile.js';\n  h.appendChild(s);\n}()); /* note ending parenthesis and curly brace */\n</code></pre>\n\n<p>My question is, what does \"the script will be executed asynchronously\" mean? Will this script be executed in a different thread from other javascripts in the page? If yes, should we worry about synchronization issue in the two threads?</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1409668101,
            "question_id": 4631845,
            "score": 11,
            "tags": [
                "javascript"
            ],
            "title": "asynchronous javascript loading/executing"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>$('selector').css('line-height');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<pre><code>$('selector').css('line-height');\n</code></pre>\n\n<p>Returns line height as a decimal value in pixels, with unit, e.g. \"22.5px\"</p>\n\n<p>Care should be taken with this solution, as different browsers will report different results.\nI have found that you cannot use unitless measures with line-height (eg 2.2) in your CSS, as IE6 will report an incorrect result (eg 2px instead of, eg 36px).\nSo I recommend using unit-based line-heights with this measure.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can't be assured to get a calculated line height in pixels cross-browser. Sometimes the value is 'normal' or 'inherit', which gets calculated in Firefox, but not in IE, for example.  One workaround for this (depending of course on your use case) is to get the calculated font-size (which you <em>can</em> see), and multiply it by 1.5, which is fairly <a href=\"http://www.smashingmagazine.com/2009/08/20/typographic-design-survey-best-practices-from-the-best-blogs/#optimal\">standard</a>:</p>\n\n<pre><code>var fontSize = $(el).css('font-size');\nvar lineHeight = Math.floor(parseInt(fontSize.replace('px','')) * 1.5);\n</code></pre>\n\n<p>Yeah, it's a bit gross, but it will work just fine for things like determining the correct height of an element based on some number of text lines, for example.  Keep in mind, that you can/should replace 1.5 with any standard line-height/font-size ratio you may already be using on your site.  If you don't know, you can find out by inspecting any copy element in firebug and looking at the calculated a)font-size and b)line-height.  Then, replace 1.5 with b/a. :-) </p>\n\n<p>Hope this is helpful!</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<pre><code>$('selector').css('line-height');\n</code></pre>\n\n<p>If this returns a number with px, you can use the number.\nIf it returns a % or a number with no units, you can multiply it by the font size and use that.\nIf it returns normal, I managed to work this up:</p>\n\n<pre><code>var height = $element.height();\nvar font_size = functionThatMakesThisANumber($element.css('font-size'));\nvar num = Math.floor(height / font_size);\nfor(; height % (height / num) != 0; --num)\n    ;\nreturn height / num;\n</code></pre>\n\n<p>This only works with \"normal\" because you can assume that the line height will always be greater than the font size.</p>\n\n<p>It is based off the idea <code>height % line_height == 0</code>.<br>\nTechnically <code>num == height / line_height</code> which makes it unknowable. Fortunately the floor of <code>height / font_size</code> is a good heuristic because it and <code>height / line_height</code> are usually the same or close, and if you're off you always overshot - again because \"normal\" guarantees the line height is greater than the font size - so you can test and try again.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Get and store text, set text temporarily to one line of value (like \"x\" or \"&amp;nbsp\"), get and store .height (or .inner, or .outer, whatever you need), replace text with stored value.  Show if necessary (eg, the element is hidden), then hide again if necessary.</p>\n\n<p>This (.height) will give you the total line height (font size plus line height adjustment) in a numeral (like 15 for font size 12 and line height 1.25).</p>\n\n<p>Use a hidden div to do all this if necessary, show, get height, hide.</p>\n\n<p>This alert shows the numeral value 15, all browsers:</p>\n\n<pre><code>&lt;div id=\"TestDiv\"&gt;\n    Any text you want.\n&lt;/div&gt;\n\n    jQuery(document).ready(function()\n{\n    var TestText = $(\"#TestDiv\").text();\n    var TestDivLineHeight = $(\"#TestDiv\")\n        .css(\"font-size\", \"12px\").css(\"line-height\", \"1.25\").text(\"x\").height();\n    alert(TestDivLineHeight);\n    $(\"#TestDiv\").text(TestText);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Well, encountered the need of a line-height coding a plugin, so, can you give an advice, please?\nThanks)</p>\n",
            "last_activity_date": 1352815544,
            "question_id": 1185151,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "dom"
            ],
            "title": "How to determine a &#39;line-height&#39; using Javascript (jQuery)?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Using the JS SDK is the only feasible way to know a user\u2019s status in \u201creal-time\u201d. (\u201creal time\u201d in quotes, because the result of FB.getLoginStatus gets cached as well \u2013 if one wants it to be accurate at all times, one must use the second parameter set to true.)</p>\n\n<p>If you have the JS SDK set up to set cookies under your domain, then the PHP SDK is able to determine the login status of the user without any API lookups over HTTP \u2013 it just reads the user ID from cookie, so Facebook::getUser() will get you the user ID. That would be enough to display the picture \u2013 but for the user name, that\u2019ll still require an API request.</p>\n\n<p>Here you could opt for requesting the name <em>once</em> \u2013 and then saving it into your session. If, on the next request, the JS SDK indicates that the user is not connected any more, you could erase the login info from the page and/or force a reload (and on that, clear the session), to return to the not logged in state.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Actually it's totally incorrect to say that \"in order to be real-time, you need to use JS SDK\"!\nFacebook has \"Realtime Updates Graph API\" and every time some data gets updated, your local db gets updated automatically, then you don't need to use JS SDK</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>My project uses Node.js and Express, but the question is about generic approach.</p>\n\n<p>Our users are all from FB and we don't have any auth other than FB. We need to associate some actions with specific FB users and also need their tokens to communicate with FB.</p>\n\n<p><strong>Currently</strong> we do it like that:</p>\n\n<ul>\n<li>user comes to the page</li>\n<li>there are <em>invisible</em> blocks: one with placeholders for user's avatar and name ('logged-in'), the other with button triggering FB login ('logged-out')</li>\n<li>using FB JS SDK we check user's login status. If <strong>connected</strong> (which actually means: logged into FB, authenticated our app and provided all the permissions we need), we get user's name and FB ID and show the 'logged-in' block. Otherwise the 'logged-out' block is shown</li>\n<li>for logged-in user on some actions user's access_token is passed to the server via AJAX (no worries, HTTPS here) and used by the server code for actions like posting to user's wall or whatever</li>\n<li>the FB login button is handled by JS and calls for FB.login()</li>\n<li>on JS authResponseChanged event obvious actions are taken (show/hide logged in/out blocks)</li>\n</ul>\n\n<p><strong>What's good</strong>: we always know that user's status is effective (token's TTL is more than normal page's lifetime, so we are good here).</p>\n\n<p><strong>What we don't like much</strong>:\n* client-side tokens are short-lived (yes, we can exchange them, but don't want to if we can find any alternative)\n* it normally takes several requests to FB (1 - load JS SDK, 2 - get login status) until we can show something. Till that the 'login' block of our site is empty.</p>\n\n<p><strong>What's the question?</strong></p>\n\n<p>We are looking for an optimal way to use some server-side code here and at least render user's name and avatar when we're sure the user is logged in.</p>\n\n<p>I can imagine some scheme like this:</p>\n\n<ul>\n<li>use server-side auth (with redirects) to get the long-living token and persist it on the server</li>\n<li>save user's status (logged in / out, FB ID, name) in session</li>\n<li>if session has the logged in state, render name and avatar when processing templates on the server</li>\n</ul>\n\n<p><strong>Concerns</strong>:</p>\n\n<ul>\n<li>if the user logged our from FB or revoked App permission, how should we know it and when should we check for it (check every N requests? every X hours? check only when token is going to expire in Y hours?)</li>\n<li>if we alternatively check for user's status from the server before rendering any template (which is the case in an <a href=\"https://developers.facebook.com/docs/guides/web/#insights\">official example</a>) this will slow things down, right? Cause I think FB API calls can be rather slow in hot hours.</li>\n</ul>\n",
            "last_activity_date": 1353058459,
            "question_id": 13351235,
            "score": 10,
            "tags": [
                "javascript",
                "facebook",
                "node.js"
            ],
            "title": "A proper approach to FB auth"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This is really hacky, but this should work. I suggest doing as the other users have suggested in the comments; find a pre-existing library that will do this for you.</p>\n\n<pre><code>for(var key in user1){  \n   var temp = User[key]\n   User[key] = user1[key];   \n   for(var key1 in temp){\n      if(User[key][key1] == null){\n         User[key][key1] = temp[key1];\n      }\n   }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Grabbed jQuery's extend method, and made it library agnostic.</p>\n\n<p>Gist: <a href=\"https://gist.github.com/jonjaques/3036701\" rel=\"nofollow\">Library agnostic version of jQuery's Extend</a></p>\n\n<p>Its wrapped in an Extender constructor, so you don't have to instantiate\nall of its internal methods each time you call the extend method.</p>\n\n<p>Disclaimer: I have not tested this extensively. It's basically a 1:1 clone of jQuery's extend(), however your mileage may vary.</p>\n\n<p>Use it like this.</p>\n\n<pre><code>var user1 = {\n  name: \"user1\",\n  settings: {\n    first: \"1\",\n      second: {bar: 'foo'}\n  }\n};\nvar user2 = {\n  name: \"user2\",\n  settings: {\n    second: {foo:'bar'}\n  }\n};\n\n/* merge user1 into User */\n__extend(true, user1, user2);\n\n// Modifies the User object\nuser1.settings.second.foo == 'bar'; // true\n\n// note, you can do assignment too.\nvar newUser = __extend(true, user1, user2);\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/jQuery.extend/\" rel=\"nofollow\">See here for more documentation</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've found that the best way to go is this:</p>\n\n<p><a href=\"http://andrewdupont.net/2009/08/28/deep-extending-objects-in-javascript/\" rel=\"nofollow\">http://andrewdupont.net/2009/08/28/deep-extending-objects-in-javascript/</a></p>\n\n<pre><code>Object.deepExtend = function(destination, source) {\n  for (var property in source) {\n    if (typeof source[property] === \"object\" &amp;&amp;\n     source[property] !== null ) {\n      destination[property] = destination[property] || {};\n      arguments.callee(destination[property], source[property]);\n    } else {\n      destination[property] = source[property];\n    }\n  }\n  return destination;\n};\n\n\nObject.extend(destination, source);\n</code></pre>\n\n<p>What about this?</p>\n\n<pre><code>    function clone(destination, source) {\n        for (var property in source) {\n            if (typeof source[property] === \"object\" &amp;&amp; source[property] !== null &amp;&amp; destination[property]) { \n                clone(destination[property], source[property]);\n            } else {\n                destination[property] = source[property];\n            }\n        }\n    };\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-clone-a-javascript-object\">What is the most efficient way to clone a JavaScript object?</a>  </p>\n</blockquote>\n\n\n\n<p>I have an object like this:</p>\n\n<pre><code>User = {    \n  name: \"user\",\n  settings: {\n    first: \"1\",\n    second: \"2\"    \n  }    \n}\n</code></pre>\n\n<p>and a second one:</p>\n\n<pre><code>user1 = {\n  name: \"user1\",\n  settings: {\n    second: \"3\"\n  }\n}\n</code></pre>\n\n<p>now I want to copy user1's custom values into User, using:</p>\n\n<pre><code>    for(var key in user1){\n        User[key] = user1[key];\n    }\n</code></pre>\n\n<p>the result User will be:</p>\n\n<pre><code>User = {\n  name: \"user1\",\n  settings: {\n    second: \"3\"\n  }\n}\n</code></pre>\n\n<p>User.settings has been entirely replace while I wanted only settings.second to be replaced.</p>\n\n<p>How to achieve this, without knowing how much child object the main object have?</p>\n",
            "last_activity_date": 1388698848,
            "question_id": 11299284,
            "score": 10,
            "tags": [
                "javascript",
                "object"
            ],
            "title": "Javascript deep copying object"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>jQuery('#sender_container input.required[value=\"\"]').addClass(\"error\");\n</code></pre>\n\n<p>You can try this:</p>\n\n<pre><code>$('input:not([value!=\"\"])').addClass('error');\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/thecodeparadox/5aFuY/3/\" rel=\"nofollow\">DEMO</a></strong></p>\n\n<p><em>Note:  This answer should not be used, and the only reason it wasn't deleted is so it can be learned from.</em></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$('#sender_container input.required[value=\"\"]').addClass('error')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>jQuery(\"#sender_container input.required\").filter(function() {\n    return !this.value;\n}).addClass(\"error\");\u200b\n</code></pre>\n\n<hr>\n\n<p>Why you have to use <code>filter</code> and not <code>[value=\"\"]</code> you can see in <a href=\"http://jsfiddle.net/KGgaB/3\"><strong>this DEMO</strong></a></p>\n\n<p>The reason is: attribute selectors check the initial state of the element, not the current state. (note that you can change the \"initial\" state with the <code>attr</code> function, but it's bad practice, you should always use <code>prop</code>)</p>\n\n<p>So if you change the input value, the current value won't effect the attribute selector. not wise... <code>:)</code></p>\n\n<p>Notes:</p>\n\n<ul>\n<li><p><code>.val()</code> <strong>get</strong> the value of the form element, and break the jQuery chain,\n<code>$('selector').val().addClass('foo')</code> <strong>Error</strong>, the return value is a string\\ <a href=\"http://stackoverflow.com/q/9227268/601179\"><strong>number</strong></a></p></li>\n<li><p><code>.val(valueToSet)</code> <strong>set</strong> the value to the form element and doesn't break the jQuery chain..<br>\n<code>$('selector').val(\"some value\").addClass('foo')</code> - <strong>Valid</strong>, the returned value is a jQuery</p></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<pre><code>$field = $(\"#sender_container input.required\");\nif( ! $field.val())\n{\n    $field.addClass(\"error\");\n}\n</code></pre>\n\n<p>this simple way may work. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$('input:text[value=]','#sender_container').addClass('error');\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/NE4vu/1/\" rel=\"nofollow\">DEMO</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I check for empty values of (<code>required</code>) input fields within a section, and then add a class to them on an event, using jQuery? So far, I have tried:</p>\n\n<pre><code>jQuery(\"#sender_container input.required\").val(\"\").addClass(\"error\");\n</code></pre>\n\n<p>But that seems to <strong>SET</strong> the value, rather than checking it. Any ideas?</p>\n",
            "last_activity_date": 1398587396,
            "question_id": 10651349,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors"
            ],
            "title": "How to select empty inputs (value=&quot;&quot;) using jQuery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can set the screen orientation from you code using for example <code>setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);</code> see <a href=\"http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation%28int%29\" rel=\"nofollow\">http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation%28int%29</a> . In the AndroidManifest.xml you can set it only as a global option.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use this PhoneGap Plugin for Android:</p>\n\n<p><a href=\"https://github.com/champierre/pg-plugin-screen-orientation\">https://github.com/champierre/pg-plugin-screen-orientation</a></p>\n\n<p>And add to your index.html page onload:</p>\n\n<pre><code>navigator.screenOrientation.set('portrait');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I am having an issue with fixing the screen orientation for my index.html page only. I want to allow the app to rotate except on the home page. I understand that adding the following into you activity - android:screenOrientation=\"portrait\" stops the screen from rotating.</p>\n\n<p>However, I need to set this so it is page specific. I am using phonegap and therefore, need to stop my web view pages.</p>\n\n<p>I tried calling the following activity within my manifest - com.phonegap.droidgap.index.html, however this did not work.</p>\n\n<p>Could someone please advice me as to how I can define the fixed orientation for 1 page only?</p>\n\n<p>Thanks in advance</p>\n",
            "last_activity_date": 1335522593,
            "question_id": 10348538,
            "score": 10,
            "tags": [
                "java",
                "javascript",
                "android",
                "cordova",
                "orientation"
            ],
            "title": "Android - Fix screen orientation for 1 page only (phonegap)"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>In the <code>image.onload</code> event listener, check whether <code>image.width</code> and <code>image.height</code> are both zero (preferably <code>image.naturalWidth</code> and <code>image.naturalHeight</code>, when they are supported).</p>\n\n<p>If the width and height are both zero, the image is considered invalid.</p>\n\n<h2>Demo: <a href=\"http://jsfiddle.net/RbNeG/\">http://jsfiddle.net/RbNeG/</a></h2>\n\n<pre><code>// Usage:\nloadImage('notexist.png');\n\nfunction loadImage(src) {\n    var image = new Image;\n    image.onload = function() {\n        if ('naturalHeight' in this) {\n            if (this.naturalHeight + this.naturalWidth === 0) {\n                this.onerror();\n                return;\n            }\n        } else if (this.width + this.height == 0) {\n            this.onerror();\n            return;\n        }\n        // At this point, there's no error.\n        document.body.appendChild(image);\n    };\n    image.onerror = function() {\n        //display error\n        document.body.appendChild(\n            document.createTextNode('\\nError loading as image: ' + this.src)\n        );\n    };\n    image.src = src;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>I am trying to append an image to a page using javascript:</p>\n\n<pre><code>image = document.createElement('img');\nimage.onload = function(){\n    document.body.appendChild(image);\n}\nimage.onerror = function(){\n//diplsay error\n}\nimage.src = 'http://example.com/image.png';\n</code></pre>\n\n<p>The user must be authenticated to see this image, and if they are not, I want to display an error message. Unfortunately, the server is not returning an HTTP error message, but rather redirect the request to a (mostly) empty page, so I am getting an <code>http 200</code>, but the warning <code>Resource interpreted as Image but transferred with MIME type text/html</code> and nothing is displaying.</p>\n\n<p>How can I handle this case? I don't have the ability to change what the webserver serves up if the user isn't validated.</p>\n",
            "last_activity_date": 1332349502,
            "question_id": 9809015,
            "score": 10,
            "tags": [
                "javascript",
                "error-handling",
                "mime-types"
            ],
            "title": "image.onError event never fires, but image isn&#39;t valid data - need a work around"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>One of the best patterns to use here is to use <code>addEventListener</code> to listen for a custom event such as \"MyScriptLoaded\". Then, modify your included script to fire this event as its last action. This will ensure that you take action only after the new script has fully loaded.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you have control over the source of the javascript that gets loaded, your best bet would be to have that code execute a pseudo-callback function that exists within your page context.  This is something like the method used for JSONP.  So, imagine on your calling page, you have this:</p>\n\n<pre><code>function createScript(src, id) {\n    if (document.getElementById(id) == null) {\n        var newScript = document.createElement('script');\n        newScript.setAttribute(\"type\", \"text/javascript\");\n        newScript.setAttribute(\"src\", src);\n        newScript.setAttribute(\"id\", id);\n        document.getElementsByTagName(\"head\")[0].appendChild(newScript);\n    }\n}\n\nfunction callbackFunc()\n{\n  // make use of new functions here....\n}\n</code></pre>\n\n<p>And each of your source files might end with this line:</p>\n\n<pre><code>callbackFunc();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>from jQuery guts and requires no dependancies</strong></p>\n\n<pre><code>&lt;script&gt;\nfunction loadJS(src, callback) {\n    var s = document.createElement('script');\n    s.src = src;\n    s.async = true;\n    s.onreadystatechange = s.onload = function() {\n        var state = s.readyState;\n        if (!callback.done &amp;&amp; (!state || /loaded|complete/.test(state))) {\n            callback.done = true;\n            callback();\n        }\n    };\n    document.getElementsByTagName('head')[0].appendChild(s);\n}\nloadJS('/script/script.js', function() { \n    // put your code here to run after script is loaded\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>I still think its better to load in jQuery and use $.getScript instead as you have lots of goodies there.</p>\n",
                    "is_accepted": true,
                    "score": 29
                }
            ],
            "body": "<p>I'm trying to dynamically load an external .js file (according to an input I get from the user).\nCurrently my code looks like this:</p>\n\n<pre><code>function createScript(src, id) {\n    if (document.getElementById(id) == null) {\n        var newScript = document.createElement('script');\n        newScript.setAttribute(\"type\", \"text/javascript\");\n        newScript.setAttribute(\"src\", src);\n        newScript.setAttribute(\"id\", id);\n        document.getElementsByTagName(\"head\")[0].appendChild(newScript);\n    }\n}\n</code></pre>\n\n<p>This kind of work. It does load the script, but if I try to call a function that is defined inside the new script it won't work. The weird thing is if I wait for a second (using an <code>alert(\"test\")</code> or something like that) the script does work.</p>\n\n<p>I guess its because the browser adds the <code>&lt;script&gt;</code> tag immediately, but it takes it a little longer to \"read\" the script inside of the .js file.\nI tried playing with <code>\"typeof testfunction === 'function'\"</code> with a few variations but no luck.</p>\n\n<p>Any good way of doing this?</p>\n",
            "last_activity_date": 1386786601,
            "question_id": 8586446,
            "score": 10,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "Dynamically load external javascript file, and wait for it to load - without using JQuery"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You have added the add marker method call outside the function and that causes it to execute before the initialize method which will be called when google maps script loads and thus the marker is not added because map is not initialized\nDo as below....\nCreate separate method <em>TestMarker</em> and call it from <em>initialize</em>.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    // Standard google maps function\n    function initialize() {\n        var myLatlng = new google.maps.LatLng(40.779502, -73.967857);\n        var myOptions = {\n            zoom: 12,\n            center: myLatlng,\n            mapTypeId: google.maps.MapTypeId.ROADMAP\n        }\n        map = new google.maps.Map(document.getElementById(\"map_canvas\"), myOptions);\n        TestMarker();\n    }\n\n    // Function for adding a marker to the page.\n    function addMarker(location) {\n        marker = new google.maps.Marker({\n            position: location,\n            map: map\n        });\n    }\n\n    // Testing the addMarker function\n    function TestMarker() {\n           CentralPark = new google.maps.LatLng(37.7699298, -122.4469157);\n           addMarker(CentralPark);\n    }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<pre><code>function initialize() {\n    var location = new google.maps.LatLng(44.5403, -78.5463);\n    var mapCanvas = document.getElementById('map_canvas');\n    var map_options = {\n      center: location,\n      zoom: 15,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    }\n    var map = new google.maps.Map(map_canvas, map_options);\n\n    new google.maps.Marker({\n        position: location,\n        map: map\n    });\n}\ngoogle.maps.event.addDomListener(window, 'load', initialize);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>THis is other method <br/>\nYou can also use <code>setCenter</code> method with add new marker <br/><br/>\ncheck below code <br/><br/></p>\n\n<pre><code>$('#my_map').gmap3({\n      action: 'setCenter',\n      map:{\n         options:{\n          zoom: 10\n         }\n      },\n      marker:{\n         values:\n          [\n            {latLng:[position.coords.latitude, position.coords.longitude], data:\"Netherlands !\"}\n          ]\n      }\n   });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have written the following code :</p>\n\n<pre><code>       function checking(lat,long){\n\n            var map = new GMap2(document.getElementById(\"map_canvas\"));\n            map.setCenter(new GLatLng(lat,long),2.2);\n        }\n\n        function initialize() {\n            if (GBrowserIsCompatible()) {\n                var lat=51.4778;\n                var long=0.0;\n                checking(lat,long);\n            }\n\n            var marker = new google.maps.Marker({\n                    position: new GLatLng(45.45,23.65),\n                    map: map,\n                    title: 'Hello World!'\n            });\n        }\n</code></pre>\n\n<p>The marker does not display on the map. What changes should I make?</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have the following Javascript that includes both the standard Google Maps API <code>initialize()</code> function and custom <code>addMarker()</code> function. The map will load fine however the marker does not get added to the map. </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    // Standard google maps function\n    function initialize() {\n        var myLatlng = new google.maps.LatLng(40.779502, -73.967857);\n        var myOptions = {\n            zoom: 12,\n            center: myLatlng,\n            mapTypeId: google.maps.MapTypeId.ROADMAP\n        }\n        map = new google.maps.Map(document.getElementById(\"map_canvas\"), myOptions);\n    }\n\n    // Function for adding a marker to the page.\n    function addMarker(location) {\n        marker = new google.maps.Marker({\n            position: location,\n            map: map\n        });\n    }\n\n    // Testing the addMarker function\n    CentralPark = new google.maps.LatLng(37.7699298, -122.4469157);\n    addMarker(CentralPark);\n\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1425303740,
            "question_id": 7701077,
            "score": 10,
            "tags": [
                "javascript",
                "google-maps-api-3",
                "google-maps-api-2"
            ],
            "title": "Add Marker function with Google Maps API"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Classic problem. Put the contents of the for loop in another function and call it in the loop. Pass the path as a parameter.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This is a perfect reason to use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach\"><code>.forEach()</code></a> instead of a for loop to iterate values.</p>\n\n<pre><code>paths.forEach(function( path ) {\n  fs.lstat( path, function(err, stat) {\n    console.log( path, stat );\n  });\n});\n</code></pre>\n\n<p>Also, you could use a closure like @Aadit suggests:</p>\n\n<pre><code>for (var i = 0, c = paths.length; i &lt; c; i++)\n{\n  // creating an Immiedately Invoked Function Expression\n  (function( path ) {\n    fs.lstat(path, function (error, stat) {\n      console.log(path, stat);\n    });\n  })( paths[i] );\n  // passing paths[i] in as \"path\" in the closure\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>Recursion works nicely here (especially if you have some i/o that must be executed in a synchronous manner):</p>\n\n<pre><code>(function outputFileStat(i) {\n    var path = paths[i];\n\n    fs.lstat(path, function(err, stat) {\n         console.log(path, stat);\n         i++;\n         if(i &lt; paths.length) outputFileStat(i);\n    });\n})(0)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<pre><code>var path;\n\nfor (var i = 0, c = paths.length; i &lt; c; i++)\n{\n    path = paths[i];\n\n    fs.lstat(path, function (error, stat)\n    {\n        console.log(path); // this outputs always the last element\n    });\n}\n</code></pre>\n\n<p>How can I access the <code>path</code> variable, that was passed to fs.lstat function?</p>\n",
            "last_activity_date": 1339700098,
            "question_id": 7696747,
            "score": 10,
            "tags": [
                "javascript",
                "node.js",
                "asynchronous",
                "for-loop",
                "scope"
            ],
            "title": "Call asynchronous function inside for loop"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>remoteCommandFunctionName({name1:'value1', name2:'value2'});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Page:</p>\n\n<pre><code>&lt;p:remoteCommand name=\"command\" action=\"#{bean.method}\" /&gt;\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>command({param: 'value'});\n</code></pre>\n\n<p>Bean:</p>\n\n<pre><code>public void method() {\n    String value = FacesContext.getCurrentInstance().getExternalContext().getRequestParameterMap().get(\"param\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>When you need to pass more than one parameter from javascript, the syntax is:</p>\n\n<p><code><br />var <b>param1</b> = ...;<br />var <b>param2</b> = ...;<br />var <b>param3</b> = ...;</p>\n\n<p>remoteCommandFunction([{name:'param1', value:<b>param1</b>}, {name:'param2',value:<b>param2</b>}, {name:'param3',value:<b>param3</b>}]);</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes, it is possible. How to do that depends on the PrimeFaces version. You can see it in <a href=\"http://www.primefaces.org/documentation.html\">PrimeFaces users guide</a>. <strong>Before</strong> PrimeFaces version 3.3 the syntax is as follows (copypasted from 3.2 users guide):</p>\n\n<blockquote>\n  <h1>3.80 RemoteCommand</h1>\n  \n  <p>...</p>\n  \n  <h3>Passing Parameters</h3>\n  \n  <p>Remote command can send dynamic parameters in the following way;</p>\n  \n  <p><code>increment({param1:'val1', param2:'val2'});</code></p>\n</blockquote>\n\n<p>It's available in the backing bean by usual means. E.g. in a request scoped bean:</p>\n\n<pre><code>@ManagedProperty(\"#{param.param1}\")\nprivate String param1;\n\n@ManagedProperty(\"#{param.param2}\")\nprivate String param2;\n</code></pre>\n\n<p>or in method of a broader scoped bean:</p>\n\n<pre><code>Map&lt;String, String&gt; params = FacesContext.getCurrentInstance().getExternalContext().getRequestParameterMap();\nString param1 = params.get(\"param1\");\nString param2 = params.get(\"param2\");\n</code></pre>\n\n<p>This approach had however the disadvantage that you can't specify a single parameter with multiple values like as possible with normal HTML forms and HTTP request parameters (which is in real world used on e.g. multiple select dropdownlist and multiple select checkboxgroup).</p>\n\n<hr>\n\n<p><strong>Since</strong> PrimeFaces version 3.3 the syntax is as follows (copypasted from 3.3 users guide):</p>\n\n<blockquote>\n  <h1>3.81 RemoteCommand</h1>\n  \n  <p>...</p>\n  \n  <h3>Passing Parameters</h3>\n  \n  <p>Remote command can send dynamic parameters in the following way;</p>\n  \n  <p><code>increment([{name:'x', value:10}, {name:'y', value:20}]);</code></p>\n</blockquote>\n\n<p>This way offers the possibility to specify multiple values on a single parameter name. Parameters with single values like above are available the same way as the old way:</p>\n\n<pre><code>@ManagedProperty(\"#{param.x}\")\nprivate int x;\n\n@ManagedProperty(\"#{param.y}\")\nprivate int y;\n</code></pre>\n\n<p><em>(note: you can use <code>Integer</code> in Mojarra, but not in MyFaces, this is further completely unrelated to <code>&lt;p:remoteCommand&gt;</code>)</em></p>\n\n<p>or in method of a broader scoped bean:</p>\n\n<pre><code>Map&lt;String, String&gt; params = FacesContext.getCurrentInstance().getExternalContext().getRequestParameterMap();\nint x = Integer.valueOf(params.get(\"x\"));\nint y = Integer.valueOf(params.get(\"y\"));\n</code></pre>\n\n<p>If you need to specify a parameter with multiple values, then you could do it as follows:</p>\n\n<pre><code>functionName([{name:'foo', value:'one'}, {name:'foo', value:'two'}, {name:'foo', value:'three'}]);`\n</code></pre>\n\n<p>with in a request scoped bean:</p>\n\n<pre><code>@ManagedProperty(\"#{paramValues.foo}\")\nprivate String[] foos;\n</code></pre>\n\n<p>or in method of a broader scoped bean:</p>\n\n<pre><code>Map&lt;String, String[]&gt; paramValues = FacesContext.getCurrentInstance().getExternalContext().getRequestParameterValuesMap();\nString[] foos = paramValues.get(\"foo\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>If you want to call your own function, eg. a confirm dialog, your custom function must be compliant to the passing parameter style.\neg:</p>\n\n<pre><code>   &lt;p:commandLink id=\"myId\" onclick=\"confirmDelete([{name:'Id', value: '#{my.id}'}]);\" immediate=\"true\"&gt;\n</code></pre>\n\n<p>The java script function</p>\n\n<pre><code>            function confirmDelete(id) {\n            if (confirm('Do you really want to delete?')) {\n                remoteDeleteDemand(id);\n                return true;\n            }\n</code></pre>\n\n<p>The remoteCommand tag</p>\n\n<pre><code>&lt;p:remoteCommand name=\"remoteDelete\" actionListener=\"#{myController.doDelete}\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to pass value to <code>remoteCommand</code> from javascript. If this is possible, how can I do that and how can I receive them in the backing bean?</p>\n",
            "last_activity_date": 1425407290,
            "question_id": 7221495,
            "score": 10,
            "tags": [
                "javascript",
                "jsf",
                "primefaces",
                "parameters",
                "remotecommand"
            ],
            "title": "Pass parameter to p:remoteCommand from JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The checked binding expects to be passed a structure that it can read/write against.  This could be a variable, an observable, or a writable dependentObservable.</p>\n\n<p>When passed an array or observableArray, the checked binding does know how to add and remove simple values from the array.</p>\n\n<p>Here is a sample that also includes a computed observable that contains the array as comma delimited values.  <a href=\"http://jsfiddle.net/rniemeyer/Jm2Mh/\" rel=\"nofollow\">http://jsfiddle.net/rniemeyer/Jm2Mh/</a></p>\n\n<pre><code>var viewModel = {\n    choices: [\"one\", \"two\", \"three\", \"four\", \"five\"],\n    selectedChoices: ko.observableArray([\"two\", \"four\"])\n};\n\nviewModel.selectedChoicesDelimited = ko.computed(function() {\n    return this.selectedChoices().join(\",\");\n}, viewModel);\n\nko.applyBindings(viewModel);\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;ul data-bind=\"template: { name: 'choiceTmpl', foreach: choices, templateOptions: { selections: selectedChoices } }\"&gt;&lt;/ul&gt;\n\n&lt;script id=\"choiceTmpl\" type=\"text/html\"&gt;\n    &lt;li&gt;\n        &lt;input type=\"checkbox\" data-bind=\"attr: { value: $data }, checked: $item.selections\" /&gt;\n        &lt;span data-bind=\"text: $data\"&gt;&lt;/span&gt;\n    &lt;/li&gt;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p><strong>Why isn't there a Mutually exclusive checkboxes example Online somewhere</strong></p>\n\n<p>Since this link came up first whilst I was searching for mutually exclusive checkboxes I will share my answer here. I was banging my head against the wall with all my attempts. By the way, when you handle the click event in a binding in-line knockoutjs it seems to disconnect the bindings(maybe only because I tried to call my resetIllnesses function as defined below) even if you return true from the function. Maybe there is a better way but until then follow my lead.</p>\n\n<p><strong>Here is the type I needed to bind.</strong></p>\n\n<pre><code>var IllnessType = function (name,title) {\n    this.Title = ko.observable(title);\n    this.Name = ko.observable(name);\n    this.IsSelected = ko.observable(false);\n};\n</code></pre>\n\n<p><strong>The array to bind with.</strong> </p>\n\n<pre><code>model.IllnessTypes = ko.observableArray(\n    [new IllnessType('IsSkinDisorder', 'Skin Disorder'),\n        new IllnessType('IsRespiratoryProblem', 'Respiratory Problem'),\n        new IllnessType('IsPoisoning', 'Poisoning'),\n        new IllnessType('IsHearingLoss', 'Hearing Loss'),\n        new IllnessType('IsOtherIllness', 'All Other Illness')]\n);\n</code></pre>\n\n<p><strong>The reset illness function to clear them all.</strong>         </p>\n\n<pre><code>model.resetIllnesses = function () {\n    ko.utils.arrayForEach(model.IllnessTypes(), function (type) {\n        type.IsSelected(false);\n    });\n};\n</code></pre>\n\n<p><strong>The markup</strong></p>\n\n<pre><code>&lt;ul data-bind=\"foreach:IllnessTypes,visible: model.IsIllness()\"&gt;\n    &lt;li&gt;&lt;label data-bind=\"html: Title\"&gt;&lt;/label&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;input class=\"checkgroup2\" type=\"checkbox\" \ndata-bind=\"attr:{name: Name },checked:IsSelected\" /&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p><strong>This just doesn't work</strong> </p>\n\n<p>If you have been struggling with trying to call the resetIllness function as I below, you will feel my pain.</p>\n\n<pre><code>&lt;input type='checkbox' data-bind=\"checked:IsSelected, \n  click: function() { model.resetIllnesses(); return true; }\" /&gt;\n</code></pre>\n\n<p>you have been sharing my pain. Well, it works! when you call it from following example.\nNotice that there is a class that I added above so that I can add the click function.</p>\n\n<p><strong>The script that makes all your problems go away.</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $(function() {\n        $(\".checkgroup2\").on('click', function() {\n            model.resetIllnesses();\n            var data = ko.dataFor(this);\n            data.IsSelected(true);\n        });\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>Send info to the server</strong> </p>\n\n<p>Also, in my case I had to send the information up to the server differently than the default html format so I changed the inputs a little.</p>\n\n<pre><code>&lt;input class=\"checkgroup2\" type=\"checkbox\" data-bind=\"checked:IsSelected\" /&gt;\n&lt;input type=\"hidden\" data-bind=\"attr:{name: Name },value:IsSelected\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to get my head around Knockout.js and I'm quite stuck when it comes to checkboxes.</p>\n\n<p>Server side I'm populating a set of checkboxes with their corresponding values. Now, when any of the unchecked checkboxes are checked, I need to store it's value in a comma-seperated string. When they're unchecked, the value needs to be deleted from the string.</p>\n\n<p>Have anyone got a hint on how to achieve this with knockoutjs?</p>\n\n<p>I have the following code so far:</p>\n\n<p>ViewModel:</p>\n\n<pre><code>$().ready(function() {\n   function classPreValue(preValue)\n   {\n       return {\n            preValue : ko.observable(preValue)\n       } \n   }\n\n   var editOfferViewModel = {\n   maxNumOfVisitors : ko.observable(\"\"),\n   goals : ko.observable(\"\"),\n   description : ko.observable(\"\"),\n   contact : ko.observable(\"\"),\n   comments : ko.observable(\"\"),\n   classPreValues : ko.observableArray([]),\n   addPreValue : function(element) {\n      alert($(element).val());\n      this.classPreValues.push(new classPreValue(element.val()));\n   }\n };\n\n ko.applyBindings(editOfferViewModel);\n});\n</code></pre>\n\n<p>And my checkboxes are populated with a foreach loop:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;input data-bind=\"checked: function() { editOfferViewModel.addPreValue(this) }\"\n       type=\"checkbox\" checked=\"yes\" value='@s'&gt;\n    @s\n&lt;/input&gt;\n</code></pre>\n\n<p>I try to pass the checkbox element as the parameter to my <code>addPreValue()</code> function, but nothing seems to happen when I check the checkbox?</p>\n\n<p>Any help/hints on this is greatly appreciated!</p>\n",
            "last_activity_date": 1421084993,
            "question_id": 6736136,
            "score": 10,
            "tags": [
                "javascript",
                "html",
                "mvvm",
                "checkbox",
                "knockout.js"
            ],
            "title": "Working with a list of checkboxes in knockoutjs"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Can't be done with CSS.</p>\n\n<p>100% is in relation to the computed <code>font-size</code> of the parent element.</p>\n\n<p>reference: <a href=\"http://www.w3.org/TR/CSS2/fonts.html#font-size-props\" rel=\"nofollow\">http://www.w3.org/TR/CSS2/fonts.html#font-size-props</a></p>\n\n<p>For a jQuery solution look at <a href=\"http://stackoverflow.com/questions/687998/auto-size-dynamic-text-to-fill-fixed-size-container\">Auto-size dynamic text to fill fixed size container.</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This question might help you out but I warn you though this solves it through jQuery:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/687998/auto-size-dynamic-text-to-fill-fixed-size-container\">Auto-size dynamic text to fill fixed size container</a></p>\n\n<p>Good luck.</p>\n\n<p>The OP of that question made a plugin, <a href=\"http://plugins.jquery.com/project/TextFill\" rel=\"nofollow\">here is the link to it</a> (&amp; <a href=\"http://plugins.jquery.com/files/jQuery-TextFill-0.1.zip\" rel=\"nofollow\">download</a>)</p>\n\n<p>BTW I'm suggesting jQuery because as <a href=\"http://stackoverflow.com/questions/4408937/font-size-auto-adjust-to-fit/4408978#4408978\">Gaby pointed out</a> this can't be done though CSS only and you said you were willing to use js...</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>here  I have a mootools solution:</p>\n\n<pre><code>Element.implement(\"fitText\", function() {\n                var e = this.getParent();\n                var maxWidth = e.getSize().x;\n                var maxHeight = e.getSize().y;\n                console.log(maxWidth);\n                var sizeX = this.getSize().x;\n                var sizeY = this.getSize().y;\n                if (sizeY &lt;= maxHeight &amp;&amp; sizeX &lt;= maxWidth)\n                    return;\n\n                var fontSize = this.getStyle(\"font-size\").toInt();\n                while( (sizeX &gt; maxWidth || sizeY &gt; maxHeight) &amp;&amp; fontSize &gt; 4 ) {\n                    fontSize -= .5;\n                    this.setStyle(\"font-size\", fontSize + \"px\");\n                    sizeX = this.getSize().x;\n                    sizeY = this.getSize().y;\n                }\n                return this;\n            });\n\n            $$(\"span\").fitText();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A bit late but this is how I approach this problem:</p>\n\n<pre><code>document.body.setScaledFont = function() {\n    var f = 0.35, s = this.offsetWidth, fs = s * f;\n    this.style.fontSize = fs + '%';\n    return this\n}\ndocument.body.setScaledFont();\n</code></pre>\n\n<p>The base document font is now set.</p>\n\n<p>For the rest of your elements in the dom set font sizes as % or em and they will scale proportionately.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I was looking into this for work and I liked tnt-rox's answer, but I couldn't help but notice that it had some extra overhead that could be cut out.\n</p>\n\n<pre><code>document.body.setScaledFont = function(){\n    this.style.fontSize = (this.offsetWidth*0.35)+'%';\n    return this;\n}\ndocument.body.setScaledFont();\n</code></pre>\n\n<p>Cutting out the overhead makes it run a little bit quicker if you add it to an onresize event.</p>\n\n<p>If you are only looking to have the font inside a specific element set to resize to fit, you could also do something like the following\n</p>\n\n<pre><code>window.onload = function(){\n    var scaledFont = function(el){\n            if(el.style !== undefined){\n                el.style.fontSize = (el.offsetWidth*0.35)+'%';\n            }\n            return el;\n        }\n        navs = document.querySelectorAll('.container&gt;nav'),\n        i;\n    window.onresize = function(){\n        for(i in navs){\n            scaledFont(navs[i]);\n        }\n    };\n    window.onresize();\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm trying to do what the title says. I've seen that <code>font-size</code> can be a percentage. So my guess was that <code>font-size: 100%;</code> would do it, but no.</p>\n\n<p>Here is an example: <a href=\"http://jsfiddle.net/xVB3t/\">http://jsfiddle.net/xVB3t/</a></p>\n\n<p>Can I get some help please?</p>\n\n<p>(If is necesary to do it programatically with js there is no problem)</p>\n",
            "last_activity_date": 1418145492,
            "question_id": 4408937,
            "score": 10,
            "tags": [
                "javascript",
                "html",
                "css",
                "fonts",
                "font-size"
            ],
            "title": "Font size auto adjust to fit"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There's no simple, straightforward way to do this with a constructor function. This is because special things happen when you use the <code>new</code> keyword to call a constructor function, and so if you're not going to do that, you have to emulate all of those special things. They are:</p>\n\n<ol>\n<li>Creating a new object instance (you're doing that).</li>\n<li>Setting that object's internal prototype to constructor function's <code>prototype</code> property.</li>\n<li>Setting that object's <code>constructor</code> property.</li>\n<li>Calling the constructor function with that object instance as the <code>this</code> value (you're doing that).</li>\n<li>Handling the special return value from the constructor function.</li>\n</ol>\n\n<p>I <em>think</em> that's about it, but worth double-checking in <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">the spec</a>.</p>\n\n<p>So if you can avoid it and just use the constructor function directly, I'd do that. :-) If you can't, though, you can still do it, it's just awkward and involves workarounds. (See also <a href=\"http://stackoverflow.com/questions/3853978/are-these-two-ways-of-constructing-an-object-in-javascript-equivalent/3853998#3853998\">this related answer</a> here on StackOverflow, although I cover all of the ground here [and then some] as well.)</p>\n\n<p>Your biggest issue is #2 above: Setting the internal prototype of the object. For a long time, there was no standard way to do this. Some browsers supported a <code>__proto__</code> property that did it, so you can use that if it's there. The good news is that ECMAScript 5 introduces a way to do this explicitly: <code>Object.create</code>. So cutting-edge browsers like Chrome will have that. But if you're dealing with a browser that has neither <code>Object.create</code> nor <code>__proto__</code>, it gets a bit ugly:</p>\n\n<p>1) Define a custom constructor function.</p>\n\n<p>2) Set its <code>prototype</code> property to the <code>prototype</code> property of the real constructor function</p>\n\n<p>3) Use it to create a blank object instance.</p>\n\n<p>That handles the prototype for you. Then you continue with:</p>\n\n<p>4) Replace the <code>constructor</code> property on that instance with the real constructor function.</p>\n\n<p>5) Call the real constructor function via <code>apply</code>.</p>\n\n<p>6) If the return value of the real constructor function is an object, use it instead of the one you created; otherwise, use the one you created.</p>\n\n<p>Something like this (<a href=\"http://jsbin.com/ibusi3/3\">live example</a>):</p>\n\n<pre><code>function applyConstruct(ctor, params) {\n    var obj, newobj;\n\n    // Use a fake constructor function with the target constructor's\n    // `prototype` property to create the object with the right prototype\n    function fakeCtor() {\n    }\n    fakeCtor.prototype = ctor.prototype;\n    obj = new fakeCtor();\n\n    // Set the object's `constructor`\n    obj.constructor = ctor;\n\n    // Call the constructor function\n    newobj = ctor.apply(obj, params);\n\n    // Use the returned object if there is one.\n    // Note that we handle the funky edge case of the `Function` constructor,\n    // thanks to Mike's comment below. Double-checked the spec, that should be\n    // the lot.\n    if (newobj !== null\n        &amp;&amp; (typeof newobj === \"object\" || typeof newobj === \"function\")\n       ) {\n        obj = newobj;\n    }\n\n    // Done\n    return obj;\n}\n</code></pre>\n\n<p>You could take it a step further and only use the fake constructor if necessary, looking to see if <code>Object.create</code> or <code>__proto__</code> are supported first, like this (<a href=\"http://jsbin.com/ibusi3/4\">live example</a>):</p>\n\n<pre><code>function applyConstruct(ctor, params) {\n    var obj, newobj;\n\n    // Create the object with the desired prototype\n    if (typeof Object.create === \"function\") {\n        // ECMAScript 5 \n        obj = Object.create(ctor.prototype);\n    }\n    else if ({}.__proto__) {\n        // Non-standard __proto__, supported by some browsers\n        obj = {};\n        obj.__proto__ = ctor.prototype;\n        if (obj.__proto__ !== ctor.prototype) {\n            // Setting it didn't work\n            obj = makeObjectWithFakeCtor();\n        }\n    }\n    else {\n        // Fallback\n        obj = makeObjectWithFakeCtor();\n    }\n\n    // Set the object's constructor\n    obj.constructor = ctor;\n\n    // Apply the constructor function\n    newobj = ctor.apply(obj, params);\n\n    // If a constructor function returns an object, that\n    // becomes the return value of `new`, so we handle\n    // that here.\n    if (typeof newobj === \"object\") {\n        obj = newobj;\n    }\n\n    // Done!\n    return obj;\n\n    // Subroutine for building objects with specific prototypes\n    function makeObjectWithFakeCtor() {\n        function fakeCtor() {\n        }\n        fakeCtor.prototype = ctor.prototype;\n        return new fakeCtor();\n    }\n}\n</code></pre>\n\n<p>On Chrome 6, the above uses <code>Object.create</code>; on Firefox 3.6 and Opera, it uses <code>__proto__</code>. On IE8, it uses the fake constructor function.</p>\n\n<p>The above is fairly off-the-cuff, but it mostly handles the issues I'm aware of in this area.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>I think another way of achieving this could be to extend the Ext Template class so that the constructor of the new object takes your array and does the stuff you want to do. This way all the constructing stuff would be done for you and you could just call the constructor of your superclass with your arguments.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>From <a href=\"http://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\" rel=\"nofollow\">developer.mozilla</a>:\nBound functions are automatically suitable for use with the new operator to construct new instances created by the target function. When a bound function is used to construct a value, the provided this is ignored. However, provided arguments are still prepended to the constructor call.</p>\n\n<p>That said, we still need to use apply to get the arguments out of an array and into the bind call. Further, we need to also reset bind's function as the this argument of the apply function. This gives us a very succinct one-liner that does exactly as needed.</p>\n\n<pre><code>function constructorApply(ctor, args){\n    return new (ctor.bind.apply(ctor, [null].concat(args)))();\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>When I want to call a function in javascript with arguments supplied from elsewhere I can use the <code>apply</code> method of the function like:</p>\n\n<pre><code>array = [\"arg1\", 5, \"arg3\"] \n...\nsomeFunc.apply(null, array);\n</code></pre>\n\n<p>but what if I need to call a constructor in a similar fashion? This does not seem to work:</p>\n\n<pre><code>array = [\"arg1\", 5, \"arg3\"] \n...\nsomeConstructor.apply({}, array);\n</code></pre>\n\n<p>at least not as I am attempting:</p>\n\n<pre><code>template = ['string1', string2, 'etc'];\nvar resultTpl = Ext.XTemplate.apply({}, template);\n</code></pre>\n\n<p>this does not work wither:</p>\n\n<pre><code>Ext.XTemplate.prototype.constructor.apply({}, template);\n</code></pre>\n\n<p>Any way to make that one work? (In this particular case I found that <code>new Ext.XTemplate(template)</code> will work, but I am interested in the general case)</p>\n\n<p>similar question but specific to built-in types and without an answer I can use:\n<a href=\"http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototypeconstructorapply\">http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototypeconstructorapply</a></p>\n\n<p>Thank you.</p>\n",
            "last_activity_date": 1422651465,
            "question_id": 3871731,
            "score": 10,
            "tags": [
                "javascript",
                "dynamic-languages"
            ],
            "title": "dynamic object construction in javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>you need to escape the characters using the \\ </p>\n\n<p>so your code should look like</p>\n\n<pre><code>&lt;p onclick=\"exampleFunc('&lt;div id=\\\"divId\\\"&gt;&lt;/div&gt;');\"&gt;Some Text&lt;/p&gt;\n</code></pre>\n\n<p>Here is some info on <a href=\"http://www.c-point.com/javascript_tutorial/special_characters.htm\" rel=\"nofollow\">Special Characters</a></p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>You need to use proper escaping/encoding. Either in HTML using character references:</p>\n\n<pre><code>&lt;p onclick=\"exampleFunc('&amp;lt;div id=&amp;quot;divId&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;');\"&gt;Some Text&lt;/p&gt;\n</code></pre>\n\n<p>Or in JavaScript using string escape sequences:</p>\n\n<pre><code>&lt;p onclick=\"exampleFunc('\\x3Cdiv\\x20id\\x3D\\x22divId\\x22\\x3E\\x3C/div\\x3E');\"&gt;Some Text&lt;/p&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Edit: this is not a solution for JavaScript in HTML, but for JavaScript only. My bad...</p>\n\n<pre><code>eval('eval(\\\"eval(\\\\\\\"alert(\\\\\\\\\\\\\\\"Now I\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'m confused!\\\\\\\\\\\\\\\")\\\\\\\")\\\")');\n</code></pre>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Nested_quotation#In_JavaScript_programming\" rel=\"nofollow\">Link</a>. It's \"recursive escaping\". </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do you nest quotes in HTML beyond the second level? As far as I know, there are only 2 types of quotes - single(') and double(\"). I am aware of escaping using slashes - you have to escape in the code but that escaping won't work at the browser level. What is the accepted method to get around something like the following?     </p>\n\n<pre><code>&lt;p onclick=\"exampleFunc('&lt;div id=\"divId\"&gt;&lt;/div&gt;');\"&gt;Some Text&lt;/p&gt;\n</code></pre>\n\n<p>That code prints to the browser:</p>\n\n<blockquote>\n  <p>');\">Some Text</p>\n</blockquote>\n",
            "last_activity_date": 1397264345,
            "question_id": 3039765,
            "score": 10,
            "tags": [
                "javascript",
                "html",
                "quotes"
            ],
            "title": "Nesting quotes in JavaScript/HTML"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>JavaScript is always pass by value, never pass by reference.  A lot of people confuse this because of the way objects work.</p>\n\n<p>There is no \"pass by reference\" for any variable in JavaScript (no, not even if an object is assigned to that variable).  All variables and arguments are assigned by value.  If the assigned value is an object, then the value of the new variable is a reference to that object, but assigning a new value/object to the new variable will not affect the original variable. </p>\n\n<p>Some people term this behaviour passing <em>\"value by reference\"</em>.</p>\n\n<p>A comparison - PHP</p>\n\n<pre><code>$foo = \"foo\";\n$bar = &amp;$foo;  // assign by reference\n$bar = \"bar\";\necho $foo; // -&gt; output: \"bar\"\n</code></pre>\n\n<p>JavaScript</p>\n\n<pre><code>foo = {\"foo\": true};\nbar = foo;     // assign value by reference\nbar = {\"bar\": true};\nalert(JSON.stringify(foo)); // -&gt; output: '{\"foo\": true}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Other answers to this question are correct - all variables are passed by value in JavaScript, and sometimes that value points to an object.</p>\n\n<p>When a programming language supports passing by reference, it's possible to change <em>where the variable points</em> from inside a function.  This is never possible in JavaScript.</p>\n\n<p>For example, consider this code which attempts to reassign the passed variable to a new value:</p>\n\n<pre><code>function changeCaller( x ) {\n    x = \"bar\";  // Ha ha!\n}\n\nfunction testChangeCaller() {\n\n    var x = \"foo\";\n\n    changeCaller(x);\n\n    alert(x); // still \"foo\"\n\n}\n\ntestChangeCaller();\n</code></pre>\n\n<p>Attempts to point variables at new objects fails in the same way the above example fails to reassign a primitive string:</p>\n\n<pre><code>function changeCaller( x ) {\n    x = new Object(); // no longer pointing to the same object\n    x.a = \"bar\";\n}\n\nfunction testChangeCaller() {\n\n    var x = new Object();\n    x.a = \"foo\";\n\n    changeCaller(x);\n\n    alert(x.a); // still \"foo\"\n\n}\n\ntestChangeCaller();\n</code></pre>\n\n<p>The feature which leads people to believe they're dealing with a pass-by-reference scenario is when modifying objects.  You can make changes to an object or array, because the local variable <em>points to the same object</em>:</p>\n\n<pre><code>function changeCaller( x ) {\n    x.a = \"bar\";\n}\n\nfunction testChangeCaller() {\n\n    var x = new Object();\n    x.a = \"foo\";\n\n    changeCaller(x);\n\n    alert(x.a); // now \"bar\", since changeCaller worked on the same object\n\n}\n\ntestChangeCaller();\n</code></pre>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Regard the discussion, the considerations about \"value\" and \"reference\" are wrong on the exception of the Pointy comment.\nJavascript like other reference laguages like c# or java, don't pass a referece to the variable itself to the method, but the reference of the object referenced by the variable. \nWhat the people here is expecting, is passing a pointer to the variable which is referencing the object, pass by pointer is not the same as pass by reference, and sure is not the same as pass by value.</p>\n\n<p>The behavior expected here is pass by pointer.\nPass by reference sends the reference to the object.\nPass by value copy the object stored in the variable and pass the copy\nto the method.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The pass by value, pass by reference discussion is an evil meme. This evil meme crops up in Java discussions too.</p>\n\n<p>It's simple: The bit pattern of the value is copied to the parameter. It doesn't matter if the bit pattern is an int or if it's the address of an object -- it's just copied, bit by bit, into the parameter. It couldn't be simpler. The run-time isn't doing something special for primitives versus references. It simply, and always, just makes a copy of the value.</p>\n\n<p>The computer science term for this is \"pass by value.\"</p>\n\n<p>Pass by reference just isn't used in programming any more. In older languages, like Pascal, you could code a function to directly alter the value in the calling routine. So, for example, an int variable in the calling routine could be altered in the called function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>When i started learning function in C++ its all around pass by value and reference. \nIs there something similar we have in javascript ?</p>\n\n<p>If yes/not how it works in case of javascript?</p>\n\n<p>Thanks all.</p>\n",
            "last_activity_date": 1373391124,
            "question_id": 2835070,
            "score": 10,
            "tags": [
                "javascript"
            ],
            "title": "Is there thing like pass by value pass by reference in JavaScript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Yes, it is:</p>\n\n<pre><code>&lt;div id=\"myid\"&gt;Some Content........&lt;/div&gt;\n\ndocument.getElementById('#myid').style.width = '50%';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>document.getElementById('header').style.width = '50%';\n</code></pre>\n\n<p>If you are using Firebug or the Chrome/Safari Developer tools, execute the above in the console, and you'll see the Stack Overflow header shrink by 50%.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>jQuery way - </p>\n\n<pre><code>$(\"#id\").width('30%');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>The question is what do you want the div's height/width to be a percent of?</p>\n\n<p>By default, if you assign a percentage value to a height/width it will be relative to it's direct parent dimensions. If the parent doesn't have a defined height, then it won't work.</p>\n\n<p>So simply, remember to set the height of the parent, then a percentage height will work via the css attribute:</p>\n\n<pre><code>obj.style.width = '50%';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I always do it like this:</p>\n\n<pre><code>$(\"#id\").css(\"width\", \"50%\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Is it possible to set the height/width of an element in percent using JavaScript or jQuery?</p>\n",
            "last_activity_date": 1403739705,
            "question_id": 2460662,
            "score": 10,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to set width of a div in percent in JavaScript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It would seem that jquery is fetching the second instance of js_test2 using XmlHttpRequest.</p>\n\n<p>Why I don't know but its the behaviour of JQuery you need to investigate.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've seen that behavior happening on other versions of IE under similar circumstances (such as cloning of <code>&lt;script&gt;</code> nodes) and I never got to know how to stop the script from executing twice, so what I ended up doing was adding a guard on the script code for it not to run twice. It was something like:</p>\n\n<pre><code>if (typeof(loaded) == 'undefined') {\n    // the whole code goes in here\n    var loaded = true;\n}\n</code></pre>\n\n<p>If you can't find a way of preventing the script to execute twice, you may want to try that approach instead.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can check to see if a script is already in the document before loading it-</p>\n\n<pre><code>function fetchscript(url, callback){\n var S= document.getElementsByTagName('script'), L= S.length;\n while(L){\n  if(S[--L].src== url) return true;\n }\n //create and append script and any callbacks\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The root difference is that IE executes a script element the first time it is added to a parent element's childNodes, regardless of whether the parent element is actually in the document. Other browsers only execute script when it is added to a node inside the document's tree of childNodes.</p>\n\n<p>jQuery's <code>domManip</code> function (line 524 of jQuery 1.3.2), which is called by <code>append</code> and other similar jQuery methods, tries to be clever and calls <code>evalScript</code> for any <code>&lt;script&gt;</code> elements it finds in the final parsed HTML, to execute the script (by doing AJAX requests if necessary for external scripts). (The actual script elements have been removed from the parsed childNodes to stop them getting executed on insertion into the document, presumably so that scripts are only executed once when content containing them is appended into multiple elements at once.)</p>\n\n<p>However, because the previous <code>clean</code> function, whilst parsing the HTML, appended the script element to a wrapper div, IE will have already executed the script. So you get two executions.</p>\n\n<p>The best thing to do is avoid using <code>domManip</code> functions like <code>append</code> with HTML strings when you're doing anything with scripts.</p>\n\n<p>In fact, forget putting your content in a serialised HTML string and getting jQuery to parse it; just do it the much more reliable plain DOM way:</p>\n\n<pre><code>var s= document.createElement('script');\ns.type= 'text/javascript';\ns.charset= 'UTF-8';\ns.src= 'js_test2.js';\ndocument.getElementById('some_container').appendChild(s);\n</code></pre>\n\n<p>(To be honest, after viewing the stomach-churning source code of the <code>clean</code> function, I'm having serious doubts about using jQuery's HTML-string-based DOM manipulations for anything at all. It's supposed to fix up browser bugs, but the dumb-regex processing seems to me likely to cause as many problems as it solves.)</p>\n\n<p>Incidentally with this initial call:</p>\n\n<pre><code>document.write(unescape(\"%3Cscript src='js_test1.js' type='text/javascript'%3E%3C/script%3E\"));\n</code></pre>\n\n<p>You don't need to unescape here; I don't know why so many people do. The sequence <code>&lt;/</code> needs to be avoided in an inline script as it would end the <code>&lt;script&gt;</code> tag, and if you're doing XHTML <code>&lt;</code> and <code>&amp;</code> should be avoided too (or <code>]]&gt;</code> if you're using a CDATA wrapper), but there's an easier way of doing all that with just JavaScript string literals:</p>\n\n<pre><code>document.write('\\x3Cscript src=\"js_test1.js\" type=\"text/javascript\"&gt;\\x3C/script&gt;\"));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>It's possible that this is because you use <code>document.write</code> when you're already in a <code>&lt;script&gt;</code> element. Have you tried appending to <code>&lt;head&gt;</code> instead of <code>document.write</code>?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I find the same problem\uff0conly happen in IE.</p>\n\n<p>jQuery\u2018s <code>html()</code> method chains is: <code>html&gt;append&gt;domManip&gt;clean</code></p>\n\n<p><code>clean()</code> method use <code>innerHTML</code> make string to DOM, <code>innerHTML</code> in IE has a bug that <code>script</code> tag will immediately load(first load), jQuery <code>evalScript</code> script tags at the end of <code>domManip</code> method(ajax load).then script file load twice in IE.</p>\n\n<p>I think jQuery should fix this problem,update the clean() method</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am including some related content on misc. web pages by adding a <code>&lt;script&gt;</code> tag near the end of the <code>&lt;body&gt;</code> tag, which then loads other javascript files. The flow is a little convoluted, so I\u2019ll try to explain it before asking my question:</p>\n\n<ul>\n<li>A browser loads a page with our <code>&lt;script&gt;</code> element near the end of the <code>&lt;body&gt;</code> element</li>\n<li>The src attribute of the script tag points to a javascript file which (in some cases) injects a second <code>&lt;script&gt;</code> element</li>\n<li>The src attribute of the injected <code>&lt;script&gt;</code> element points to yet another javascript file, which finally injects some content on the appropriate part of the page.</li>\n</ul>\n\n<p>We are using this two-stage approach to be able to do some basic processing before deciding whether to include the final content, which could take some time to load.</p>\n\n<p>The problem is that IE8 (and maybe older versions) loads the last javascript twice. It appears that the act of setting the src attribute will trigger a load, but so will appending the script tag to the DOM. Is there any way to avoid this?</p>\n\n<p>I have created a <a href=\"http://tmp.grytoyr.net/iejs/\">bare-bones demo</a> of the problem. If you have some way of tracing the HTTP requests, you will see that IE8 loads js_test2.js twice.</p>\n",
            "last_activity_date": 1339146984,
            "question_id": 1661224,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "internet-explorer"
            ],
            "title": "Stop IE from loading dynamically included script twice"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>JavaScript lacks the sort of access controls you get in more rigid languages. You can simulate private access for objects' data using <a href=\"http://www.crockford.com/javascript/private.html\">closures</a>, but your example is an object literal - a simple data structure - rather than a constructed object. </p>\n\n<p>It rather depends what you want to do with the object - the normal technique for 'private' members means they are accessible only by member functions, and requires that you use a constructor to create the object. The literal syntax is used for data structures or light weight objects with public data and functions.</p>\n\n<p>The problem with using the private closure pattern is that the fields within a literal are in public scope, but the privacy given by the closure is because the variable is defined in a function, so is scoped locally. You could either create a function which clones the literal and adds private fields, or add a public field which has private data. You also can add closures as members, so create private fields which are method private rather than object private.</p>\n\n<pre><code>dataset = {\n    secretCounter: ( \n      function () {\n      var c = 0;\n      return function () { return ++c; }\n    })(),      \n   ...\n</code></pre>\n\n<p>So <code>dataset.secretCounter()</code> has a varable <code>c</code> which is private to that function only.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You can't have \"private\" variables without a function involved.  Functions are the only way to introduce a new scope in javascript.</p>\n\n<p>But never fear, you <em>can</em> add functions in the right place to gain this sort of functionality with your object</p>\n\n<pre><code>var dataset = {\n  tables: {\n    customers:(function(){\n      var privateVar = 'foo';\n      return { \n        cols:[ /*here*/ ],\n        rows:[ /*here*/ ]\n      }\n    }()),\n    orders:{\n      cols:[ /*here*/ ],\n      rows:[ /*here*/ ]\n    }\n  },\n  relations: [{\n    parent:'customers', \n    child:'orders', \n    keyparent:'custid', \n    keychild:'orderid',\n    onetomany:true\n  }]\n};\n</code></pre>\n\n<p>But this doesn't gain us much. This is still mostly just a bunch of literal objects.  These types of \"Private\" variables have zero meaning since there are no methods - nothing that would actually read or otherwise use the variables in the scope we created by adding a function (a closure).</p>\n\n<p>But if we had a method, that might actually start to become useful.</p>\n\n<pre><code>var dataset = {\n  tables: {\n    customers:(function(){\n      var privateVar = 'foo';\n      return { \n        cols:[ /*here*/ ],\n        rows:[ /*here*/ ],\n        getPrivateVar: function()\n        {\n          return privateVar;\n        }\n      };\n    }()),\n    orders:{\n      cols:[ /*here*/ ],\n      rows:[ /*here*/ ]\n    }\n  },\n  relations: [{\n    parent:'customers', \n    child:'orders', \n    keyparent:'custid', \n    keychild:'orderid',\n    onetomany:true\n  }]\n};\n\nalert( dataset.tables.customers.getPrivateVar() );\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>Private variables in javascript are done using the var keyword inside a closure.\nOnly priviliged methods and attributes can access it.\nHere's the way to do it:</p>\n\n<pre><code>function dataset()\n{\nvar private_stuff = 10; // private\nthis.foo = new function() { alert(private_stuff); } // priviliged\nreturn {\n    tables:{\n        customers:{\n                cols:[  ],\n                rows:[  ]\n        },\n        orders:{\n                cols:[  ],\n                rows:[  ]\n        }\n    },\n    relations:{\n        0:{\n                parent:'customers', \n                child:'orders', \n                keyparent:'custid', \n                keychild:'orderid',\n                onetomany:true\n        }\n    }\n}; // public\n}\n\nvar d = new dataset;\nalert(d.foo());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Found this at MDC but how if I'd wanted to add a private variable to the</p>\n\n<pre><code>var dataset = {\n    tables:{\n        customers:{\n            cols:[ /*here*/ ],\n            rows:[ /*here*/ ]\n        },\n        orders:{\n            cols:[ /*here*/ ],\n            rows:[ /*here*/ ]\n        }\n    },\n    relations:{\n        0:{\n            parent:'customers', \n            child:'orders', \n            keyparent:'custid', \n            keychild:'orderid',\n            onetomany:true\n        }\n    }\n}\n</code></pre>\n\n<p>The way I understand OOP in Javascript, I'd have access to dataset.tables.customers.cols[0] if such an item exists.<br>\nBut if I wanted to place a private variable into customers, what would that look like?<br>\nAdding <code>var index = 0;</code> results in a runtime error.</p>\n",
            "last_activity_date": 1404912825,
            "question_id": 1396294,
            "score": 10,
            "tags": [
                "javascript",
                "object-literal"
            ],
            "title": "How to add private variable to this Javascript object literal snippet?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The tricky bit is getting the message to show up spread across the columns.  I don't think there's a simple way to do that; you'd have to, say, hide all the columns except the first one, set the first column's width to fill the grid, and put the message in the first column.  Then when you reload you'd have to undo all that.  It should work, but it's kind of messy.</p>\n\n<p>However, let's say you just want to put the message into the first column and leave the rest empty.  Basically, you implement the \"loadComplete\" event function and manipulate the grid's contents.</p>\n\n<p>Add a property to your grid object like so:</p>\n\n<pre><code>//Various other grid properties...\nloadComplete: function() {\n     if (jQuery(\"#grid_id\").getGridParam(\"records\")==0) {\n          jQuery(\"#grid_id\").addRowData(\n                \"blankRow\", {\"firstCol\":\"No data was found\". \"secondCol\":\"\", \"thirdCol\":\"\"\n          );\n     }\n}\n</code></pre>\n\n<p>Where \"#grid_id\" is the ID of your grid container, \"blankRow\" is an arbitrary ID you've given to the new row you've added, and \"firstCol\", \"secondCol\" and so forth are the names of the columns.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Place your message inside a div with style: hidden. Place this within your pager div.</p>\n\n<p>In loadComplete  event do something like:</p>\n\n<pre><code>if($('#results').getGridParam(\"records\")==0) { \n $(\"#noResultsDiv\").show();   \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I was looking for answer to this one and came up with the following solution, but I'm not talking to the server, so I have to using something besides the 'loadComplete' event.  I hooked into the 'gridComplete' event and check to see if there are any records.  If not, display your empty text, otherwise hide it.</p>\n\n<p><code></p>\n\n<pre>\njQuery('#test').jqGrid({\n        ... // some settings\n        gridComplete: loadCompleteFunction,\n        emptyDataText:'There are no records. If you would like to add one, click the \"Add New ...\" button below.', // you can name this parameter whatever you want.\n        ... // more settings\n\n});\n\nfunction LoadComplete()\n{\n    if ($('test').getGridParam('records') == 0) // are there any records?\n        DisplayEmptyText(true);\n    else\n        DisplayEmptyText(false);\n}\n\nfunction DisplayEmptyText( display)\n{\n    var grid = $('#test');\n    var emptyText = grid.getGridParam('emptyDataText'); // get the empty text\n    var container = grid.parents('.ui-jqgrid-view'); // find the grid's container\n    if (display) {\n        container.find('.ui-jqgrid-hdiv, .ui-jqgrid-bdiv').hide(); // hide the column headers and the cells below\n        container.find('.ui-jqgrid-titlebar').after('' + emptyText + ''); // insert the empty data text\n    }\n    else {\n        container.find('.ui-jqgrid-hdiv, .ui-jqgrid-bdiv').show(); // show the column headers\n        container.find('#EmptyData' + dataObject).remove(); // remove the empty data text\n    }\n}\n</pre>\n\n<p></code></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I found the best way to do this and allow the grid to handle it is to return the default parameters with no rows. For example, I'm using JSON data, so this would be the return JSON. </p>\n\n<pre><code>{\"d\":\"{\"page\":\"1\",\"total\":\"0\",\"records\":\"0\",\"rows\":[]}\"}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I implemented it as follows (although this does depend on the fact I was using the provided pager functionality).  All that is displayed when no records are returned is the Caption bar and one Pager bar displaying \"No records to view\".</p>\n\n<p>Snippet of my code from setting jqGrid default options early (before grid is even loaded on my page):</p>\n\n<pre><code>// jQuery jqGrid default options\n$.extend($.jgrid.defaults, {\n    pager: '#gridPager',\n    emptyrecords: \"No records to view\", // Unnecessary (default in grid.locale-en.js)\n    recordpos: 'left',\n    recordtext: \"Viewing {0} - {1} of {2}\", // Overriding value in grid.locale-en.js\n    viewrecords: true\n});\n</code></pre>\n\n<p>Snippet of my code from loading jqGrid:</p>\n\n<pre><code>$('#grid').jqGrid({\n    loadComplete: function () {\n        // Hide column headers and top pager if no records were returned\n        if ($('#grid').getGridParam('records') === 0) {\n            $('#grid_toppager').hide();  // I used top &amp; bottom pagers, so I hid one\n            $('.ui-jqgrid-htable').hide();\n        }\n    }\n});\n</code></pre>\n\n<p>EDIT: You could also reference this answer <a href=\"http://stackoverflow.com/questions/1167477/how-can-i-hide-the-jqgrid-completely-when-no-data-returned\">How can I hide the jqgrid completely when no data returned?</a> and do one of two things:</p>\n\n<p>1) Put your message in one div and the grid in another.  Hide the grid and show the message.</p>\n\n<p>2) Put your message in a div directly below the grid.  Follow my approach above, but hide all pagers (not just one).  Show your div in the same event handler.  All you should see is the Caption bar and your message div.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<ol>\n<li>Set <strong>\"rows\":[]</strong> for json array</li>\n<li><p>Append your error container on success as</p>\n\n<pre><code>onLoadSuccess: function() {\n    **var rows = $(this).datagrid(\"getRows\");**\nif(rows.length == 0)\n{\n\n  $(\"#errordiv\").show();\n  $(\".datagrid-view\").append('&lt;div class=\"errordiv\" id=\"errordiv\"&gt;Ur Message&lt;/div&gt;');\n}\nelse\n $(\"#errordiv\").hide();\n\n\n }\n</code></pre></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I know this question is a little bit old, but for me this worked fine:</p>\n\n<pre><code>$('#tableid').jqGrid({\n  ...\n  datatype: dataLoad,\n  ...\n})\n\nfunction dataLoad(postdata, sid) {\n  var id = sid.replace('load_', '');\n  var result = loadDataFromServer('/my/server/url', postdata);\n\n  if (result) {\n    if (result.records &gt; 0) {\n      var thegrid = $(\"#\"+id)[0];\n      thegrid.addJSONData(result);\n    }\n    else\n      $(\"#\"+id+\" tbody\")\n       .empty()\n       .append('&lt;tr&gt;&lt;td class=\"emptyDataMsg\"&gt;This table is empty&lt;/td&gt;&lt;/tr&gt;');\n  }\n}\n</code></pre>\n\n<p>Basically what I do is to load the data from the server, check if I get some records and if not just empty all the rows in the table and adding a single one width only a row with my custom text. With some CSS, the result is quite neat:</p>\n\n<pre><code>.emptyDataMsg {\n  background-color: #EEEEEE;\n  border-bottom: 1px solid #CCCCCC;\n  color: #666666;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 5px;\n  text-align: center;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>When jqGrid is empty I want to display single empty row inside the grid with information message that there are not any data. How is this possible? Thanks</p>\n",
            "last_activity_date": 1423745813,
            "question_id": 1019155,
            "score": 10,
            "tags": [
                "javascript",
                "jqgrid"
            ],
            "title": "How to display information in jqGrid that there are not any data?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Page A can be a Javascript that loads page B via AJAX and displays it with\ndocument.write or in a pop up window or however.</p>\n\n<p>In such a strategy, you can check return code for success/failure in the AJAX handler and send different things to the output window depending on status.</p>\n\n<p>Most Ajax libraries provide a way to examine the return code....</p>\n\n<p>See for instance \"transport.status\" with Ajax.Request in Prototype.js</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Why does the javascript need to know this?  Sounds like it would make more sense just to embed it on a custom 404 page.  No need to detect HTTP status of the parent page (I don't think it's possible - maybe doing an ajax call to itself after each load, but that's just silly).  if the code is being executed, its guaranteed to be a 404</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I recently found how to do it (credits to : <a href=\"http://www.hunlock.com/blogs/AJAX%5Ffor%5Fn00bs\" rel=\"nofollow\">hunlock</a>)</p>\n\n<p>AJAX.getAllResponseHeaders() -- returns as a string all current\nheaders in use.\nAJAX.getResponseHeader(\"headerLabel\") -- returns value of the\nrequested header. </p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Have the page make a XMLHttpRequest to itself (using <code>location.href</code> or <code>document.URL</code>) and check the HTTP status you get. Seems to be pretty portable way to me. Why you would do a thing like this is beyond my understanding though ;)</p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I want to detect in a script, which could be deployed beyond my control, whether the page was delivered with a HTTP status of 200, 404 or 500 etc.</p>\n\n<p>This can't be done, right?</p>\n",
            "last_activity_date": 1399905865,
            "question_id": 837064,
            "score": 10,
            "tags": [
                "javascript",
                "http",
                "dom"
            ],
            "title": "How to detect HTTP status from JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Who said that it doesn't let you do it?</p>\n\n<p>It does, the code -</p>\n\n<pre><code>setTimeout(function() { myFunction(); }, 1000);\n</code></pre>\n\n<p>is perfectly valid.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>If you don't need to call <code>myGreatFunction</code> with any arguments, you should be able to pass <code>setTimeout</code> a function reference:</p>\n\n<pre><code>setTimeout(myGreatFunction, 1000);\n</code></pre>\n\n<p>Also, you should always avoid passing <code>setTimeout</code> code that it needs to evaluate (which is what happens when you wrap the code in quotes). Instead, wrap the code in an anonymous function:</p>\n\n<pre><code>setTimeout(function() {\n    // Code here...\n}, 1000);\n</code></pre>\n\n<p>See the <a href=\"https://developer.mozilla.org/en/DOM/window.setTimeout#Syntax\">setTimeout page at the Mozilla Development Centre</a> for more information.</p>\n\n<p>Steve</p>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<p>When using <code>setTimeout</code>, you have to put the code you want to execute into a string:</p>\n\n<pre><code>setTimeout('alert(\"foobar!\");', 1000);\n</code></pre>\n\n<p>However, I want to execute a function to which I have a reference in a variable. I want to be able to do this:</p>\n\n<pre><code>var myGreatFunction = function() { alert(\"foobar!\"); };\n// ...\nsetTimeout('myGreatFunction();', 1000);\n</code></pre>\n\n<p>(Though in real life, the alert is a lengthier bit of code and <code>myGreatFunction</code> gets passed around as a parameter to other functions, within which the <code>setTimeout</code> is called.)</p>\n\n<p>Of course, when the timeout triggers, <code>myGreatFunction</code> isn't a recognised function so it doesn't execute.</p>\n\n<p>I wish javascript let me do this, but it doesn't:</p>\n\n<pre><code>setTimeout(function() { myGreatFunction(); }, 1000);\n</code></pre>\n\n<p>Is there a nice way round this?</p>\n",
            "last_activity_date": 1323588110,
            "question_id": 797115,
            "score": 10,
            "tags": [
                "javascript",
                "settimeout"
            ],
            "title": "setTimeout - how to avoid using string for callback?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>There's nothing to stop you from adding arbitrary properties to a function, eg.</p>\n\n<pre><code>function bar(o) {\n    var f = function() { return \"Hello World!\"; }\n    o.__proto__ = f.__proto__;\n    f.__proto__ = o;\n    return f;\n}\n\nvar o = { x: 5 };\nvar foo = bar(o);\nassert(foo() === \"Hello World!\");\ndelete foo.x;\nassert(foo.x === 5);\n</code></pre>\n\n<p>I believe that should do what you want.</p>\n\n<p>This works by injecting the object <code>o</code> into the prototype chain, however there are a few things to note:</p>\n\n<ul>\n<li>I don't know if IE supports <code>__proto__</code>, or even has an equivalent, frome some's comments this looks to only work in firefox and safari based browsers (so camino, chrome, etc work as well).</li>\n<li><code>o.__proto__ = f.__proto__;</code> is only really necessary for function prototype functions like function.toString, so you might want to just skip it, especially if you expect <code>o</code> to have a meaningful prototype.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>The closest cross browser thing I have come is this (tested in FF, IE, Crome and Opera):</p>\n\n<pre><code>function create(fun,proto){\n    var f=function(){};\n    //Copy the object since it is going to be changed.\n    for (var x in proto)\n    \tf.prototype[x] = proto[x];\n    f.prototype.toString = fun;\n    return new f;\n}\nvar fun=function(){return \"Hello world\";}\nvar obj={x:5}\n\nvar foo=create(fun,obj);\nfoo.x=8;\nalert(foo); //Hello world\nalert(foo.x); // 8\ndelete foo.x;\nalert(foo.x); // 5\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>I'm looking to make a callable JavaScript object, with an arbitrary prototype chain, but without modifying Function.prototype.</p>\n</blockquote>\n\n<p>I don't think there's a portable way to do this:</p>\n\n<p>You must either set a function object's [[Prototype]] property or add a [[Call]] property to a regular object. The first one can be done via the non-standard <code>__proto__</code> property (see <a href=\"http://stackoverflow.com/questions/548487/how-do-i-make-a-callable-js-object-with-an-arbitrary-prototype/548589#548589\">olliej's answer</a>), the second one is impossible as far as I know.</p>\n\n<p>The [[Prototype]] can only portably be set during object creation via a constructor function's <code>prototype</code> property. Unfortunately, as far as I know there's no JavaScript implementation which would allow to temporarily reassign <code>Function.prototype</code>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You cannot do it in a portable way. However if you think about it, if the purpose of <code>delete foo.x;</code> is to reset the value of <code>x</code>, you could provide a <code>reset()</code> method on <code>foo</code> that will restore missing properties to their default values.</p>\n\n<pre><code>// Object creation and initialisation\n(foo=function()\n{\n    alert(\"called\");\n}).reset = function()\n{\n    if(!(\"x\"in this)) this.x=42;\n};\nfoo.reset();\n\n// Using our callable object\n                           alert(foo.x); // 42\nfoo();                     alert(foo.x); // called; 42\nfoo.x=3;      foo.reset(); alert(foo.x); // 3 [*]\ndelete foo.x; foo.reset(); alert(foo.x); // 42\n</code></pre>\n\n<p>(Tested in Chromium and Internet Explorer, but this should work in all browsers.)</p>\n\n<p>In the line marked with <code>[*]</code> the call to <code>reset</code> is really not necessary, but it's there to demonstrate that it doesn't matter if you call it accidentally, and that this generalises to more than one property easily.</p>\n\n<p>Note that in the function body of our callable object <code>this</code> will refer to the containing scope, which will probably not be that useful to us since we'll want the function body to access the object members. To mitigate this, wrap it in a closure like this:</p>\n\n<pre><code>foo = (function()\n{\n    var self = function()\n    {\n        self.x = 42;\n    };\n    return self;\n})();\nfoo(); alert(foo.x); // 42\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/340383/can-a-javascript-object-have-a-prototype-chain-but-also-be-a-function\">Can a JavaScript object have a prototype chain, but also be a function?</a>  </p>\n</blockquote>\n\n\n\n<p>I'm looking to make a callable JavaScript object, with an arbitrary prototype chain, but without modifying Function.prototype.</p>\n\n<p>In other words, this has to work:</p>\n\n<pre><code>var o = { x: 5 };\nvar foo = bar(o);\nassert(foo() === \"Hello World!\");\ndelete foo.x;\nassert(foo.x === 5);\n</code></pre>\n\n<p>Without making any globally changes.</p>\n",
            "last_activity_date": 1335087560,
            "question_id": 548487,
            "score": 10,
            "tags": [
                "javascript",
                "functional-programming"
            ],
            "title": "How do I make a callable JS object with an arbitrary prototype?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You need to animate the <code>html, body</code></p>\n\n<p>DEMO <a href=\"http://jsfiddle.net/kevinPHPkevin/8tLdq/1/\">http://jsfiddle.net/kevinPHPkevin/8tLdq/1/</a></p>\n\n<pre><code>$(\"#button\").click(function() {\n    $('html, body').animate({\n        scrollTop: $(\"#myDiv\").offset().top\n    }, 2000);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>are you sure you are loading the jQuery scrollTo Plugin file?</p>\n\n<p>you might be getting a object: method not found \"scrollTo\" error in the console. </p>\n\n<p>the scrollTO method is not a native jquery method. to use it you need to include the jquery scroll To plugin file. </p>\n\n<p>ref: \n<a href=\"http://flesler.blogspot.in/2009/05/jqueryscrollto-142-released.html\" rel=\"nofollow\">http://flesler.blogspot.in/2009/05/jqueryscrollto-142-released.html</a>\n<a href=\"http://flesler.blogspot.in/2007/10/jqueryscrollto.html\" rel=\"nofollow\">http://flesler.blogspot.in/2007/10/jqueryscrollto.html</a></p>\n\n<p>soln: \nadd this in the head section.</p>\n\n<pre><code>&lt;script src=\"\\\\path\\to\\the\\jquery.scrollTo.js file\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>here is my 2 cents:</p>\n\n<p>Javascript: </p>\n\n<pre><code>$('.scroll').click(function() {\n    $('body').animate({\n        scrollTop: eval($('#' + $(this).attr('target')).offset().top - 70)\n    }, 1000);\n});\n</code></pre>\n\n<p>Html:</p>\n\n<pre><code>&lt;a class=\"scroll\" target=\"contact\"&gt;Contact&lt;/a&gt;\n</code></pre>\n\n<p>and the target:</p>\n\n<pre><code>&lt;h2 id=\"contact\"&gt;Contact&lt;/h2&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want to override standard <strong>href-id navigation</strong> on page without change HTML markup for <strong>smooth scrolling</strong>, use this (<a href=\"http://jsfiddle.net/dizel3d/1eamwt4e/\" rel=\"nofollow\">example</a>):</p>\n\n<pre><code>// handle links with @href started with '#' only\n$(document).on('click', 'a[href^=\"#\"]', function(e) {\n    // target element id\n    var id = $(this).attr('href');\n\n    // target element\n    var $id = $(id);\n    if ($id.length === 0) {\n        return;\n    }\n\n    // prevent standard hash navigation (avoid blinking in IE)\n    e.preventDefault();\n\n    // top position relative to the document\n    var pos = $(id).offset().top;\n\n    // animated top scrolling\n    $('body, html').animate({scrollTop: pos});\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's what I use: </p>\n\n<pre><code>&lt;!-- jquery smooth scroll to id's --&gt;   \n&lt;script&gt;\n$(function() {\n  $('a[href*=#]:not([href=#])').click(function() {\n    if (location.pathname.replace(/^\\//,'') == this.pathname.replace(/^\\//,'') &amp;&amp; location.hostname == this.hostname) {\n      var target = $(this.hash);\n      target = target.length ? target : $('[name=' + this.hash.slice(1) +']');\n      if (target.length) {\n        $('html,body').animate({\n          scrollTop: target.offset().top\n        }, 500);\n        return false;\n      }\n    }\n  });\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>The beauty with this one is you can use an unlimited number of hash-links and corresponding ids without having to execute a new script for each. </p>\n\n<p>If you\u2019re using WordPress, insert the code in your theme\u2019s <code>footer.php</code> file right before the closing body tag <code>&lt;/body&gt;</code>.</p>\n\n<p>If you have no access to the theme files, you can embed the code right inside the post/page editor (you must be editing the post in Text mode) or on a Text widget that will load up on all pages.</p>\n\n<p>If you\u2019re using any other CMS or just HTML, you can insert the code in a section that loads up on all pages right before the closing body tag <code>&lt;/body&gt;</code>. </p>\n\n<p>If you need more details on this, check out my quick post here: <a href=\"http://bibiano.io/jquery-smooth-scroll/\" rel=\"nofollow\">jQuery smooth scroll to id</a></p>\n\n<p>Hope that helps, and let me know if you have questions about it. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been trying to get a scroll to div id jquery code to work correctly. Based on another stack overflow question i tried the following</p>\n\n<p>DEMO <a href=\"http://jsfiddle.net/kevinPHPkevin/8tLdq/\">http://jsfiddle.net/kevinPHPkevin/8tLdq/</a></p>\n\n<pre><code>$('#myButton').click(function() {\n   $.scrollTo($('#myDiv'), 1000);\n});\n</code></pre>\n\n<p>But it didn't work. It just snaps to the div. I also tried</p>\n\n<pre><code>$('#myButton').click(function(event) {\n     event.preventDefault();\n   $.scrollTo($('#myDiv'), 1000);\n});\n</code></pre>\n\n<p>With no progress.</p>\n",
            "last_activity_date": 1425017751,
            "question_id": 19012495,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "scroll"
            ],
            "title": "Smooth scroll to div id jQuery"
        }
    ]
}
