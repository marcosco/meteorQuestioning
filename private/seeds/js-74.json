{
    "items": [
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<ul>\n<li><code>this</code> is the object upon which a method was called</li>\n<li><code>$this</code> is a poorly named variable with no special meaning</li>\n<li><code>$(this)</code> calls the poorly named function <code>$</code> with <code>this</code> as its only argument</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>In the context of jQuery, 'this' is the object upon which a method was called.  '$this' is indeed a poorly named variable with no special meaning.  '$(this)' passes 'this' to jQuery, which will return a jQuery object associated with whatever 'this' is, as long as 'this' is a DOM object.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In <em>typical</em> usage you'll usually see them like this (the <code>$this</code> usage may vary):</p>\n\n<ul>\n<li><code>this</code> - Refers to the DOM element in the handler you're currently on, but this may be another object entirely in other situations, but it's always the context.</li>\n<li><code>$this</code> - Usually created by <code>var $this = $(this)</code> a cached version of the jQuery wrapped version for efficiency (or chain off <code>$(this)</code> to get the same in many cases).</li>\n<li><code>$(this)</code> - The jQuery wrapped version of the element, so you have access to <a href=\"http://api.jquery.com/\">all its methods</a> (the ones in <code>$.fn</code> specifically).</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>Your question would be better served with more context.</p>\n\n<p>However I assume you're asking about variables within the context of a callback on an element's event (<code>click</code> for example).</p>\n\n<ul>\n<li><code>this</code> is the context of your handler (normally the DOM element, in the case of a DOM event handler)</li>\n<li><code>$this</code> is usually used to store the result of <code>$(this)</code> </li>\n<li><code>$(this)</code> returns the jQuery object that wraps <code>this</code> - see the <a href=\"http://api.jquery.com/jQuery/#jQuery1\" rel=\"nofollow\">jQuery documentation</a> for more information.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Expanding on what David said:</p>\n\n<ul>\n<li><p><code>$this</code> is usually used to have a copy of the <code>this</code> object in the current scope. For example with <code>var $this = this;</code> you can use the variable <code>$this</code> anywhere in the current scope and always be able to reference that object that would otherwise change if simply referenced with <code>this</code>... I personally dislike the <code>$this</code> naming convention and prefer something like <code>var parentScope</code></p></li>\n<li><p><code>$(this)</code> is a function (<code>var $ = function(){}</code>) used by some frameworks like jQuery or PrototypeJs. The reason it is used is because <code>$</code> is very easy to type instead of <code>someLongFunctionName</code> and because it is usually called <strong>many</strong> times in the code it's easier to have it be as short as possible</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>In jQuery event handler:</strong></p>\n\n<ul>\n<li><code>this</code> - is a DOM element you assigned the event handler to</li>\n<li><code>$(this)</code> - is a jQuery object created from that element</li>\n<li><code>$this</code> - typically, a variable holding the result of <code>$(this)</code></li>\n</ul>\n\n<p><strong>More generally:</strong></p>\n\n<ul>\n<li><p><strong>this</strong> inside a function refers to the object or primitive the function is called on. When a function is used as a constructor, it refers to the new object being constructed. Outside of any function <code>this</code> refers to the global object (<code>window</code> in non-strict mode).</p>\n\n<p>You can find a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this\" rel=\"nofollow\">good detailed explanation on MDN</a>.</p></li>\n<li><p><strong>$this</strong> is a variable name. In JavaScript variable names can start with <code>$</code>. Some like to use it as a prefix for variables containing jQuery objects:</p>\n\n<pre><code>var body = document.body;   // no prefix for a plain DOM object\nvar $body = jQuery('body'); // prefix for the same object wrapped in jQuery\nvar $this = $(this);\n</code></pre></li>\n<li><p><strong>$(this)</strong> is a function call, where <code>$</code> is a function name, and <code>this</code> is its argument:</p>\n\n<pre><code>var $ = alert;\n$(this); // [object Window]\n</code></pre>\n\n<p><code>$</code> doesn't have any special meaning per se. But jQuery defines the <code>$()</code> function as a shorthand for <code>jQuery()</code>. Depending on its arguments, this function can do <a href=\"http://api.jquery.com/jQuery/\" rel=\"nofollow\">many different things</a>.</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>What is the difference between these three forms:</p>\n\n<pre><code>this\n$this\n$(this)\n</code></pre>\n",
            "last_activity_date": 1386451836,
            "question_id": 3889570,
            "score": 29,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "What is the difference between \u201cthis\u201d, \u201c$this\u201d and \u201c$(this)\u201d?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>To have a better control of the caching of your website you can use the HTML5 cache manifest. See:</p>\n\n<ul>\n<li><a href=\"http://www.html5rocks.com/en/tutorials/appcache/beginner/\">A Beginner's Guide to Using the Application Cache</a> on HTML5 Rocks</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/HTML/Using_the_application_cache\">Using the application cache</a> on Mozilla Developer Network</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Cache_manifest_in_HTML5\">Cache manifest in HTML5</a> on Wikipedia</li>\n<li><a href=\"http://www.w3.org/TR/offline-webapps/\">Offline Web Applications</a> W3C Working Group Note</li>\n<li><a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/offline.html\">Offline Web applications</a> at WHATWG</li>\n</ul>\n\n<p>You can use the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/offline.html#dom-appcache-swapcache\"><code>window.applicationCache.swapCache()</code></a> to update the cached version of your website without the need for manually reloading the page.</p>\n\n<p>This is a code example from <a href=\"http://www.html5rocks.com/en/\">HTML5 Rocks</a> explaining how to update users to the newest version of your site:</p>\n\n<pre><code>// Check if a new cache is available on page load.\nwindow.addEventListener('load', function(e) {\n\n  window.applicationCache.addEventListener('updateready', function(e) {\n    if (window.applicationCache.status == window.applicationCache.UPDATEREADY) {\n      // Browser downloaded a new app cache.\n      // Swap it in and reload the page to get the new hotness.\n      window.applicationCache.swapCache();\n      if (confirm('A new version of this site is available. Load it?')) {\n        window.location.reload();\n      }\n    } else {\n      // Manifest didn't changed. Nothing new to server.\n    }\n  }, false);\n\n}, false);\n</code></pre>\n\n<p>To avoid some confusion I'll add that GitHub sets the correct HTTP headers for cache.manifest files:</p>\n\n<pre><code>Content-Type: text/cache-manifest\nCache-Control: max-age=0\nExpires: [CURRENT TIME]\n</code></pre>\n\n<p>so your browser knows that it's a cache manifest and that it should always be checked for new versions.</p>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<p><a href=\"http://pages.github.com/\">Github pages</a> sets very aggressive cache headers (<code>Cache-Control: max-age=86400</code> 1 day, <code>Expires</code> 1 month ahead) on all served content.</p>\n\n<p>If you update your pages and push to github, people revisiting the pages who have already got cached copies will not get the new pages without actually cleaning their browser cache.</p>\n\n<p>How can a script running in a page determine that it is stale and force an update?</p>\n\n<p>The steps might be:</p>\n\n<ol>\n<li>determine you are running on github pages: <em>easy</em>, parse <code>window.location</code> for <code>github.com/</code></li>\n<li>determine current version of page: <em>hard</em>, git doesn't let you embed the sha1 <em>in</em> a commited page; no RCS <code>$id$</code>.  So how do you know what version you are?</li>\n<li>get the current version in github; <em>hard</em>, github got rid of non-authenticated v2 API.  And there's a time disconnect between pushing to github and github getting around to publishing too.  So how do you know what version you could get?</li>\n<li>having determined you're stale, how do invalidate a page and force reload?  <em>hard</em>, <code>window.location.reload(true)</code> doesn't work in Safari/Chrome, for example...</li>\n</ol>\n\n<p>So its solve-these-steps; of course there may be another way?</p>\n",
            "last_activity_date": 1351758659,
            "question_id": 12556593,
            "score": 27,
            "tags": [
                "javascript",
                "github",
                "browser-cache"
            ],
            "title": "Determining a page is outdated on github pages"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Use your curiosity to motivate you to just open up the source code in your favorite editor and start exploring. Since these editors are written in JavaScript the answers are free for the looking.</p>\n\n<p>I realize you are looking for something more easily digested, but reading the source code can be very rewarding. </p>\n\n<p>Starting to build an editor could be as simple as taking an existing open source editor and modifying it to meet your own special needs.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>After more research I found the following. The functionality for building a rich-text-editor is already implemented at the browser. IE was the first to create such an API and Firefox replicated it.</p>\n\n<h2>Overview</h2>\n\n<p>The main point is that the javascript object \"document\" has a property called designMode which can be set to \"on\". This converts all the page to to a textarea-like component. Imagine that the browser opens the page the same way that MS-Word would: the user can see the formatting but he can also type in the page (normally the browser opens a page as readonly).</p>\n\n<pre><code>window.document.designMode = \"On\";\n</code></pre>\n\n<p>Because the above affects all the web page, most editors use iFrames so that the editable area is only the iFrame which has it's own document object.</p>\n\n<p>On top of that, there is an API that allows easy javascript access to styling. This is exposed throw the execCommand() method. For example you can call from Javascript </p>\n\n<pre><code>document.execCommand('bold', false, '');\n</code></pre>\n\n<p>and the selected text will become bold. </p>\n\n<h2>Tutorials</h2>\n\n<p>I have found the following:</p>\n\n<p>A brief step by step <a href=\"http://www.bewebmaster.com/55.php\">guide</a>.</p>\n\n<p>A mozilla <a href=\"http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla\">guide</a>. It has the most convenient API reference I have found and also some more links.</p>\n\n<p>A guide by <a href=\"http://msdn.microsoft.com/en-us/library/ms537834(VS.85).aspx\">microsoft</a>.</p>\n",
                    "is_accepted": true,
                    "score": 34
                }
            ],
            "body": "<p>There are several (very good) rich text web editors written in Javascript (eg FCKeditor, YUI Texteditor and many many others).</p>\n\n<p>However I couldn't find any tutorial on how to build such a component. Something that would explain both high-level considerations (architecture) and/or more details in low-level \"critical\" points (ie why do most of the editors out there use iFrame, how do you handle keyboard input like Ctrl-B, Ctrl-C when the text is selected and when it is not etc)</p>\n\n<p>My main motivation is curiosity; if I had to develop such an editor today I wouldn't know where to start from. </p>\n\n<p>Does anyone know of any tutorial that covers the above issues (ideally, something that explains how to build a wysiwyg editor from scratch)?</p>\n",
            "last_activity_date": 1359449417,
            "question_id": 299577,
            "score": 26,
            "tags": [
                "javascript",
                "wysiwyg",
                "richtext",
                "rte",
                "rich-text-editor"
            ],
            "title": "javascript Rich Text Editors"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<h3>Deploying on a custom domain name</h3>\n\n<p>Deploy meteor to your domain name:</p>\n\n<pre><code>meteor deploy mydomain.com\n</code></pre>\n\n<p>Set your CNAME record for *.mydomain.com or www.mydomain.com (if you only want to set the www subdomain) and mydomain.com to : <code>origin.meteor.com</code> </p>\n\n<p>OR</p>\n\n<p>point your 'A' record for *.mydomain.com and mydomain.com to : <code>107.22.210.133</code>.</p>\n\n<p><strong>To remove an exising one you might have typed by accident:</strong></p>\n\n<pre><code>meteor deploy www.mydomain.com --delete\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>When people go to your page, do you want them to see <strong>mydomain.com</strong> or <strong>www.mydomain.com</strong>? </p>\n\n<p>If it's <em>mydomain.com</em>, then you want to set your DNS zone file with an <code>A</code> record for the domain that points to the IP of <code>origin.meteor.com</code></p>\n\n<p>If it's <em>www.mydomain.com</em>, then you want to set your DNS zone file with a <code>CNAME</code> for the subdomain \"www\" that points to <code>origin.meteor.com</code></p>\n\n<p>Then, you want to set \"domain forwarding\" from one of those choices to the other. For example, I've set up <a href=\"http://playlistparty.net\">http://playlistparty.net</a> to forward to <a href=\"http://www.playlistparty.net\">http://www.playlistparty.net</a>.</p>\n\n<p>After this, you just run:</p>\n\n<pre><code>meteor deploy www.playlistparty.net\n</code></pre>\n\n<p><br>\nYou can delete the deployment you won't be using with the --delete option.</p>\n\n<pre><code>meteor deploy www.playlistparty.net --delete\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Okay guys, I found a simple way :</p>\n\n<p>If you want www to redirect to non-www you can use this method. You can also modify the code a little to do it other way around.</p>\n\n<p>Simply set</p>\n\n<pre><code>@ (CNAME) : origin.meteor.comm\nwww (CNAME) : origin.meteor.com\n</code></pre>\n\n<p>Then, deploy your main app (without www).</p>\n\n<pre><code>meteor deploy yourapp.com\n</code></pre>\n\n<p>Now, create a new meteor app called redirect with</p>\n\n<pre><code>meteor create redirect\ncd redirect\n</code></pre>\n\n<p>Set the generated js file contents like this :</p>\n\n<pre><code>if (Meteor.isClient) {\n  var url = document.URL;\n  url = url.replace(\"www.\", \"\");\n  window.location.href = url;\n}\n</code></pre>\n\n<p>Then deploy your redirect app (with www)</p>\n\n<pre><code>meteor deploy www.yourapp.com\n</code></pre>\n\n<p>What you did is, you deployed two different applications to www and non-www of your domain. All the meteor app at www does is to redirect you to non-www domain. It will also redirect <strong>www.yourapp.com/some/path</strong> to <strong>yourapp.com/some/path</strong>. Simple yet powerfull solution :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I recently deployed a meteor app using the following command:</p>\n\n<pre><code>$ meteor deploy example.com\n</code></pre>\n\n<p>and later (thinking that it was the same) using the following:</p>\n\n<pre><code>$ meteor deploy www.example.com\n</code></pre>\n\n<p>It end up serving two different versions of the app, one hosted in \"example.com\" and other hosted in \"www.example.com\".</p>\n\n<p>Can I revert one of the deploys? Which one should I revert?</p>\n\n<p>If not, what kind of configs should I set on my domain provider?</p>\n\n<p>Thank you,\nJoao</p>\n",
            "last_activity_date": 1419773603,
            "question_id": 15704266,
            "score": 14,
            "tags": [
                "javascript",
                "mongodb",
                "dns",
                "meteor",
                "web-deployment"
            ],
            "title": "Meteor.js deploy to &quot;example.com&quot; or &quot;www.example.com&quot;?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You're initializing an array, but then you're using it like an object (there is no \"associative array\" in js). </p>\n\n<p>Use the syntax for iterating over objects (something like): </p>\n\n<pre><code>for key, val of arr\n  console.log key + ': ' + val \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use <code>for x,y of L</code>. <a href=\"http://coffeescript.org/#loops\">Relevant documentation</a>.</p>\n\n<pre><code>ages = {}\nages[\"jim\"] = 12\nages[\"john\"] = 7\n\nfor k,v of ages\n  console.log k + \" is \" + v\n</code></pre>\n\n<p>Outputs</p>\n\n<pre><code>jim is 12\njohn is 7\n</code></pre>\n\n<p>You may also want to consider the variant <code>for own k,v of ages</code> as mentioned by Aaron Dufour in the comments. This adds a check to exclude properties inherited from the prototype, which is probably not an issue in this example but may be if you are building on top of other stuff.</p>\n",
                    "is_accepted": true,
                    "score": 184
                },
                {
                    "body": "<p>The short hand version using array comprehension, which can be used as a one-line loop.</p>\n\n<pre><code>console.log index + \": \" + elm for index, elm of array\n</code></pre>\n\n<p>Array comprehension are:</p>\n\n<blockquote>\n  <p>\"Comprehensions replace (and compile into) for loops, with optional\n  guard clauses and the value of the current array index. Unlike for\n  loops, array comprehensions are expressions, and can be returned and\n  assigned.\", \n  <a href=\"http://coffeescript.org/#loops\" rel=\"nofollow\">http://coffeescript.org/#loops</a></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>with your convention, arr is an array, but \"foo\" is a property of this array, it is not an indexed value.\nIf you want to store your data the indexed values of an array, you should have written :</p>\n\n<pre><code>arr1 = []\narr1[0] = \"Bar\"\narr1[1] = \"Foo\"\n</code></pre>\n\n<p>or if you want an associative array, just use an object :</p>\n\n<pre><code>arr2 = {}\narr2[\"Foo\"] = \"Bar\" // equivalent to arr2.foo=\"Bar\"\narr2[\"bar\"] = \"Foo\" // equivalent to arr2.bar=\"Foo\"\n</code></pre>\n\n<p>if you want to loop over arr1 :</p>\n\n<pre><code>str = \"values are : \"\nfor val in arr2\n  str += val + \" |\"\nconsole.log key + ': ' + val\n</code></pre>\n\n<p>returns : </p>\n\n<pre><code>values are : Bar | Foo |\n</code></pre>\n\n<p>and to loop over arr2 : \"for value in array\"</p>\n\n<pre><code>for key, val of arr\n  console.log key + ': ' + val\n</code></pre>\n\n<p>which returns :</p>\n\n<pre><code>Foo : Bar\nBar : Foo\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an object (an \"associate array\", also known as a plain Javascript object):</p>\n\n<pre><code>obj = {}\nobj[\"Foo\"] = \"Bar\"\narr[\"bar\"] = \"Foo\"\n</code></pre>\n\n<p>and I need to iterate over it using coffeescript. Now, doing like this:</p>\n\n<pre><code>for elem in obj\n</code></pre>\n\n<p>does not work because obj.length is 0, which the compile js code uses. In normal Javascript I would just do</p>\n\n<pre><code>for(var key in obj)\n</code></pre>\n\n<p>but now I'm wondering: how can I do this in coffeescript?</p>\n",
            "last_activity_date": 1402705282,
            "question_id": 6408726,
            "score": 88,
            "tags": [
                "javascript",
                "coffeescript"
            ],
            "title": "Iterate over Object in coffeescript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><strong><em>Is this actually possible? Are there black magicks in RequireJS that looks for calls to require() without actually triggering the doStuff route?</em></strong></p>\n\n<p>When you use the 'sugar' syntax <a href=\"https://github.com/jrburke/requirejs/blob/42dba3d9814bf3e901917dd31e464fa5145394fd/require.js#L1926-1947\" rel=\"nofollow\">it uses <code>Function.prototype.toString</code> and a regex</a> to extract your references to <code>require</code> and then lists them as dependencies before running the function. Basically it becomes the normal style of define with an array of deps as the first argument.  </p>\n\n<p>Because of this, it doesn't care where your require calls are and that's why conditional statements are ignored (it also explains why those <code>require</code> calls have to use a string literal, and not a variable).</p>\n\n<p><strong><em>Is this the theoretically correct way of going about 'on-demand', lazy loading of RequireJS modules and resources?</em></strong> </p>\n\n<p>Using the sugar syntax won't allow conditional loading as you've seen. The only way I can think of off the top of my head is to use a <code>require</code> call with an array of deps and a callback:</p>\n\n<pre><code>define(function(require) {\n    var module1 = require('module1');\n\n    // This will only load if the condition is true\n    if (true) {\n        require(['module2'], function(module2) {\n\n        });\n    }\n\n    return {};\n});\n</code></pre>\n\n<p>Only downside is another nested function but if you're after performance then this is a valid route.</p>\n\n<p><strong><em>Does the r.js optimizer still work as advertised if you use this notation?</em></strong></p>\n\n<p>If you're using the 'sugar' syntax then yes, the optimiser will work fine. An example:</p>\n\n<p><strong>modules/test.js</strong></p>\n\n<pre><code>define(function(require) {\n    var $ = require('jquery');\n    var _ = require('underscore');\n\n    return {\n        bla: true\n    }\n});\n</code></pre>\n\n<p>Once compiled by r.js this looks like:</p>\n\n<pre><code>define('modules/test', ['require', 'jquery', 'underscore'], function(require) {\n    var $ = require('jquery');\n    var _ = require('underscore');\n\n    return {\n        bla: true\n    }\n});\n</code></pre>\n\n<p>In conclusion you can load stuff conditionally, but as you mentioned, if you intend to optimise the project with r.js then there isn't a huge overhead in just using the sugar syntax.</p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>You may also want to check out <a href=\"https://github.com/nikospara/require-lazy\" rel=\"nofollow\">require-lazy</a>.</p>\n\n<p>It has a runtime component and a build time component. The runtime component allows you to lazily require a module as (note the <code>lazy!</code> plugin):</p>\n\n<pre><code>define([\"lazy!mymodule\"], function(mymodule) {\n    ...\n});\n</code></pre>\n\n<p>In the previous context, <code>mymodule</code> is a <a href=\"http://promises-aplus.github.io/promises-spec/\" rel=\"nofollow\">promise</a>, the real module will be loaded with <code>get()</code> and will be made available in the <code>then()</code> callback:</p>\n\n<pre><code>mymodule.get().then(function(m) {\n    // here m is the real mymodule\n});\n</code></pre>\n\n<p>Require-lazy integrates with r.js to automatically create \"bundles\" of Javascript files. It also handles automatically cache-busting for the bundles. There are several examples to get an idea. There is also <a href=\"https://github.com/nikospara/require-lazy-grunt\" rel=\"nofollow\">Grunt</a> and <a href=\"https://github.com/nikospara/require-lazy-bower\" rel=\"nofollow\">Bower</a> integration.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>We're building a non-trival web application using Backbone, RequireJS and Handlebars, and well, I'm just curious. At the moment, each of our models sorta looks like this:</p>\n\n<pre><code>define(['Backbone', 'js/thing/a', 'js/thing/b', 'js/lib/bob'], function(a, b, bob) {\n  return Backbone.Router.extend({\n    // stuff here\n  });\n});\n</code></pre>\n\n<p>where thing/a, thing/b both have their own dependencies, for example on Handlebars templates, etc. What happens now is that in my main.js, all of the 'top-level' routers are loaded and initialized; each top-level router has a set of dependencies (models, views, etc) which each have their own dependencies (templates, helpers, utils, etc). Basically, a big tree structure.</p>\n\n<p>The problem in this case is that this entire tree is resolved and loaded on page load. I don't mind that per s\u00e9, as we'll run it through the optimizer eventually and end up with one big single file (reducing RequireJS to basically a modularization framework). However, I am curious whether you can load stuff like views and templates 'on demand'.</p>\n\n<p>There is the \"simplified CommonJS wrapping\" explained <a href=\"http://requirejs.org/docs/whyamd.html#sugar\">here</a>, so I tried that:</p>\n\n<pre><code>define(function(require) {\n  Backbone = require('Backbone');\n  return Backbone.Router.extend({\n    doStuff: function() {\n      var MyView = require('js/myView');\n      new MyView().render();\n    }\n  });\n});\n</code></pre>\n\n<p>However, looking at Chrome's network inspector, it seems that RequireJS - somehow, even without triggering the route that triggers the doStuff handler - still loads the <code>myView</code> dependency. Questions:</p>\n\n<ul>\n<li>Is this actually possible? Are there black magicks in RequireJS that looks for calls to <code>require()</code> without actually triggering the <code>doStuff</code> route?</li>\n<li>Is this the theoretically correct way of going about 'on-demand', lazy loading of RequireJS modules and resources?</li>\n<li>Does the r.js optimizer still work as advertised if you use this notation?</li>\n</ul>\n",
            "last_activity_date": 1407251090,
            "question_id": 10911044,
            "score": 44,
            "tags": [
                "javascript",
                "backbone.js",
                "requirejs",
                "js-amd"
            ],
            "title": "How to achieve lazy loading with RequireJS?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Use the CSS property <a href=\"http://www.w3schools.com/CSS/pr%5Ftext%5Fwhite-space.asp\">white-space: nowrap</a> and <a href=\"http://www.w3schools.com/Css/pr%5Fpos%5Foverflow.asp\">overflow: hidden</a> on your td.</p>\n\n<h2>Update</h2>\n\n<p>Just saw your comment, not sure what I was thinking, I've done this so many times I forgot how I do it. This is approach that works well in most browsers for me... rather than trying to constrain the td, I use a div inside the td that will handle the overflow instance. This has a nice side effect of being able to add your padding, margins, background colors, etc. to your div rather than trying to style the td.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;style&gt;\n.hideextra { white-space: nowrap; overflow: hidden; text-overflow:ellipsis; }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;table style=\"width: 300px\"&gt;\n&lt;tr&gt;\n    &lt;td&gt;Column 1&lt;/td&gt;&lt;td&gt;Column 2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n   &lt;td&gt;\n    &lt;div class=\"hideextra\" style=\"width:200px\"&gt;\n\t\tthis is the text in column one which wraps&lt;/div&gt;&lt;/td&gt;\n   &lt;td&gt;\n\t&lt;div class=\"hideextra\" style=\"width:100px\"&gt;\n\t\tthis is the column two test&lt;/div&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>As a bonus, IE will place an ellipsis in the case of an overflow using the browser-specific text-overflow:ellipsis style. There is a way to <a href=\"http://www.jide.fr/emulate-text-overflowellipsis-in-firefox-with-css\">do the same in FireFox</a> automatically too, but I have not tested it myself.</p>\n\n<h2>Update 2</h2>\n\n<p>I started using <a href=\"http://mattsnider.com/css/css-string-truncation-with-ellipsis/\">this truncation code</a> by Justin Maxwell for several months now which works properly in FireFox too.</p>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<p>Try:</p>\n\n<pre><code>td, th {\n  white-space: nowrap;\n  overflow: hidden;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As <a href=\"#426406\" rel=\"nofollow\">cletus said</a>, you should use <code>white-space: nowrap</code> to avoid the line wrapping, and <code>overflow:hidden</code> to hide the overflow. However, in order for a text to be considered overflow, you should set the td/th width, so in case the text requires more than the specified width, it will be considered an overflow, and will be hidden.</p>\n\n<p>Also, if you give a sample web page, responders can provide an updated page with the fix you like.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you hide the overflow and there is a long word, you risk loosing that word, so you could go one step further and use the \"word-wrap\" css attribute.</p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/ms531186\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/ms531186</a>(VS.85).aspx</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I wonder if it might be worth using PHP (or another server-side scripting language) or Javascript to truncate the strings to the right length (although calculating the right length is tricky, unless you use a fixed-width font)?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This trick here is using the esoteric <code>table-layout:fixed</code> rule</p>\n\n<p>This CSS ought to work against your sample HTML:</p>\n\n<pre><code>table {table-layout:fixed}\ntd {overflow:hidden; white-space:nowrap}\n</code></pre>\n\n<p>You also ought to specify explicit column widths for the <code>&lt;td&gt;</code>s.</p>\n\n<p>The <code>table-layout:fixed</code> rule says \"The cell widths of this table depend on what I say, not on the actual content in the cells\".  This is useful normally because the browser can begin displaying the table after it has received the first <code>&lt;tr&gt;</code>.  Otherwise, the browser has to receive the entire table before it can compute the column widths.  </p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>If you don't want the text to wrap and you don't want the size of the column to get bigger then set a width and height on the column and set \"overflow: hidden\" in your stylesheet. </p>\n\n<p>To do this on only one column you will want to add a class to that column on each row. Otherwise you can set it on all columns, that is up to you.</p>\n\n<p>Html:</p>\n\n<pre><code>&lt;table width=\"300px\"&gt;\n&lt;tr&gt;\n    &lt;td&gt;Column 1&lt;/td&gt;&lt;td&gt;Column 2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n   &lt;td class=\"column-1\"&gt;this is the text in column one which wraps&lt;/td&gt;\n   &lt;td&gt;this is the column two test&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>stylsheet:</p>\n\n<pre><code>.column-1\n{\n  overflow: hidden;\n  width: 150px;\n  height: 1.2ex; \n}\n</code></pre>\n\n<p>An ex unit is the relative font size for height, if you are using pixels to set the font size you may wish to use that instead.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For those further interested: </p>\n\n<p>Existing Dynamic Table Cells: ## Long text with NO SPACES i.e. email addresses ## </p>\n\n<p>It appears a full replication of the MS (and others) use of <code>text-overflow:ellipsis</code> cannot be duped in FireFox so far as adding the internally appended <code>\u2026</code> to clipped text is concerned; especially without javascript which is often user switched off these days. </p>\n\n<p>All ideas I have found to help me have failed to address dynamic resizing and long text without spaces. </p>\n\n<p>However, I had a need for clipping in a dynamic width table in one of my progs admin windows. So with a little fiddling an acceptable all browser answer can be hacked from the supplied samples at \u201cMSDN\u201d. </p>\n\n<p>i.e. </p>\n\n<pre><code>&lt;table width=\"20%\" border=\"1\" STYLE=\"position: absolute; top: 100;\"&gt;\n&lt;tr&gt;\n\n&lt;td width=\"100%\"&gt;&lt;DIV STYLE=\"position: relative; height: 14px; top: 0px; width:100%;\"&gt;\n&lt;DIV STYLE=\"position: absolute; left: 0px; top: 0px; color: black; width: 100%; height: 14px;\n    font: 12px Verdana, Arial, Geneva, sans-serif; overflow: hidden; text-overflow:ellipsis;\"&gt;\n&lt;NOBR&gt;fasfasfasfasfsfsffsdafffsafsfsfsfsfasfsfsfsafsfsfsfWe hold these truths to be self-evident, that all people are created equal.&lt;/NOBR&gt;&lt;/DIV&gt;\n&lt;/DIV&gt;\n\n&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>Only small shortcoming is Firefox users don\u2019t see the \u201c\u2026\u201d bit; which is summink I don\u2019t really mind at this stage. </p>\n\n<p>Future FF should, hopefully, resolve gracefully if implementing this very important useful option. So now I don\u2019t need to rewrite using less favorable futuristic non tabled content either (don\u2019t argue; there\u2019s plenty of broken web sites around \u2019cause of it these days). </p>\n\n<p>Thanks to: \n<a href=\"http://msdn.microsoft.com/en-us/library/ms531174%28VS.85%29.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/ms531174(VS.85).aspx</a> </p>\n\n<p>Hope it helps some bod. </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have an HTML table that looks like this:</p>\n\n<pre><code>-------------------------------------------------\n|Column 1                   |Column 2           |\n-------------------------------------------------\n|this is the text in column |this is the column |\n|one which wraps            |two test           |\n-------------------------------------------------\n</code></pre>\n\n<p>But I want it to hide the overflow. The reason here is that the text contains a link to more details, and having the \"wrapping\" wastes lots of space in my layout. It should like this (without increasing the widths of the columns or the table, because they'll go off the screen/create a horizontal scrollbar otherwise):</p>\n\n<pre><code>-------------------------------------------------\n|Column 1                   |Column 2           |\n-------------------------------------------------\n|this is the text in column |this is the column |\n-------------------------------------------------\n</code></pre>\n\n<p>I've tried lots of different CSS techniques to try to get this, but I can't get it to turn out right. Mootables is the only thing I've found that does this: <a href=\"http://joomlicious.com/mootable/\">http://joomlicious.com/mootable/</a>, but I can't figure out how they do it. Does anyone know how I can do this with my own table using CSS and/or Javascript, or how Mootables does it?</p>\n\n<p>Sample HTML:</p>\n\n<pre><code>&lt;html&gt;&lt;body&gt;\n&lt;table width=\"300px\"&gt;\n&lt;tr&gt;\n    &lt;td&gt;Column 1&lt;/td&gt;&lt;td&gt;Column 2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n   &lt;td&gt;this is the text in column one which wraps&lt;/td&gt;\n   &lt;td&gt;this is the column two test&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1399606009,
            "question_id": 426398,
            "score": 38,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "CSS/Javascript to force html table row on a single line"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Are you allowed to use a framework? <a href=\"http://jquery.com/\">jQuery</a> and <a href=\"http://prototypejs.org\">Prototype</a> make this sort of thing pretty easy. Here's a sample in Prototype:</p>\n\n<pre><code>var elem = new Element('img', { 'class': 'foo', src: 'pic.jpg', alt: 'alternate text' });\n$(document).insert(elem);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>var img = new Image(1,1); // width, height values are optional params \nimg.src = 'http://www.testtrackinglink.com';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<pre><code>var img = document.createElement('img');\nimg.src = 'my_image.jpg';\ndocument.getElementById('container').appendChild(img);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>jQuery:</p>\n\n<pre><code>$('#container').append('&lt;img src=\"/path/to/image.jpg\" width=\"16\" height=\"16\" alt=\"Test Image\" title=\"Test Image\" /&gt;');\n</code></pre>\n\n<p>I've found that this works even better because you don't have to worry about HTML escaping anything (which should be done in the above code, if the values weren't hard coded). It's also easier to read (from a JS perspective):</p>\n\n<pre><code>$('#container').append($('&lt;img&gt;', { \n    src : \"/path/to/image.jpg\", \n    width : 16, \n    height : 16, \n    alt : \"Test Image\", \n    title : \"Test Image\"\n}));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<pre><code>oImg.setAttribute('width', '1px');\n</code></pre>\n\n<p><code>px</code> is for CSS only. Use either:</p>\n\n<pre><code>oImg.width= '1';\n</code></pre>\n\n<p>to set a width through HTML, or:</p>\n\n<pre><code>oImg.style.width= '1px';\n</code></pre>\n\n<p>to set it through CSS.</p>\n\n<p>Note that old versions of IE don't create a proper image with <code>document.createElement()</code>, and old versions of KHTML don't create a proper DOM Node with <code>new Image()</code>, so if you want to be fully backwards compatible use something like:</p>\n\n<pre><code>// IEWIN boolean previously sniffed through eg. conditional comments\n\nfunction img_create(src, alt, title) {\n    var img= IEWIN? new Image() : document.createElement('img');\n    img.src= src;\n    if (alt!=null) img.alt= alt;\n    if (title!=null) img.title= title;\n    return img;\n}\n</code></pre>\n\n<p>Also be slightly wary of <code>document.body.appendChild</code> if the script may execute as the page is in the middle of loading. You can end up with the image in an unexpected place, or a weird JavaScript error on IE. If you need to be able to add it at load-time (but after the <code>&lt;body&gt;</code> element has started), you could try inserting it at the start of the body using <code>body.insertBefore(body.firstChild)</code>.</p>\n\n<p>To do this invisibly but still have the image actually load in all browsers, you could insert an absolutely-positioned-off-the-page <code>&lt;div&gt;</code> as the body's first child and put any tracking/preload images you don't want to be visible in there.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>Shortest way: </p>\n\n<pre><code>(new Image()).src = \"http:/track.me/image.gif\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As others pointed out if you are allowed to use a framework like jQuery the best thing to do is use it, as it high likely will do it in the best possible way. If you are not allowed to use a framework then I guess manipulating the DOM is the best way to do it (and in my opinion, the right way to do it).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just for the sake of completeness, I would suggest using the InnerHTML way as well - even though I would not call it the best way...</p>\n\n<pre><code>document.getElementById(\"image-holder\").innerHTML = \"&lt;img src='image.png' alt='The Image' /&gt;\";\n</code></pre>\n\n<p>By the way, <a href=\"http://www.quirksmode.org/blog/archives/2006/01/the_ajax_respon_1.html#link5\">innerHTML is not that bad</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>you could simply do:</p>\n\n<pre><code>var newImage = new Image();\nnewImage.src = \"someImg.jpg\";\n\nif(document.images)\n{\n  document.images.yourImageElementName.src = newImage.src;\n}\n</code></pre>\n\n<p>Simple :)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I want to create a simple bit of JS code that creates an image element in the background and doesn't display anything.  The image element will call a tracking URL (such as Omniture) and needs to be simple and robust and work in IE 6 =&lt; only.  Here is the code I have:</p>\n\n<pre><code>var oImg=document.createElement(\"img\");\noImg.setAttribute('src', 'http://www.testtrackinglink.com');\noImg.setAttribute('alt', 'na');\noImg.setAttribute('height', '1px');\noImg.setAttribute('width', '1px');\ndocument.body.appendChild(oImg);\n</code></pre>\n\n<p>Is this the simplest but most robust (error free) way to do it?</p>\n\n<p>I cannot use a framework like jQuery.  It needs to be in plain JavaScript.</p>\n",
            "last_activity_date": 1377071788,
            "question_id": 226847,
            "score": 38,
            "tags": [
                "javascript",
                "dhtml"
            ],
            "title": "What is the best JavaScript code to create an img element"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The algorithm used behind the scenes for merging collaborative edits from multiple peers is called <a href=\"http://en.wikipedia.org/wiki/Operational_transformation\">operational transformation</a>. It's not trivial to implement though.</p>\n\n<p>See also <a href=\"http://stackoverflow.com/questions/2043165/operational-transformation-library\">this question</a> for useful links.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>The Google Docs team did a little bit of a case study around how the real time collaboration worked, but I can't find the blog entry.</p>\n\n<p>There is some decent stuff on the wikipedia page, though:\n<a href=\"http://en.wikipedia.org/wiki/Collaborative_real-time_editor\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Collaborative_real-time_editor</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As Gintautas pointed out, this is done by Operational Transformation. As I understand it, the bulk of the research and development on this feature was done as part of the now-defunct Google Wave project, and is known as the Wave Protocol. Fortunately, Google Wave is open-sourced, so you can get some good code samples at <a href=\"http://code.google.com/p/wave-protocol/\" rel=\"nofollow\">http://code.google.com/p/wave-protocol/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You don't need xmpp or wave for this necessarily. Most of the work on an opensource implementation called infinote already have been done with jinfinote ( <a href=\"https://github.com/sveith/jinfinote\">https://github.com/sveith/jinfinote</a>). Jinfinote was recently also ported to python ( <a href=\"https://github.com/phrearch/py-infinote\">https://github.com/phrearch/py-infinote</a>) to handle concurrency and document state centrally. I currently use both within the hwios project ( <a href=\"https://github.com/phrearch/hwios\">https://github.com/phrearch/hwios</a>), which relies on websockets and json transport. You don't want really want to use polling for these kind of applications. Also xmpp seems to complicate things unnecessarily imo.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>After coming upon this question and doing a more careful search, I think the best standalone application to check out would be <a href=\"http://etherpad.org/\" rel=\"nofollow\">Etherpad</a>, which runs as a JS browser app and using Node.js on the server side. The technology behind this is known as <a href=\"http://en.wikipedia.org/wiki/Operational_transformation\" rel=\"nofollow\">operational transformation</a>.</p>\n\n<p>Etherpad was originally a pretty heavyweight application that was bought by Google and incorporated into Google Wave, which failed. The code was released as open source and the technology was rewritten in Javascript for Etherpad Lite, now renamed just \"Etherpad\". Some of the Etherpad technology was probably also incorporated into Google Docs.</p>\n\n<p>Since Etherpad, there have been various versions to this technology, notably some Javascript libraries that allow for integrating this directly into your web app:</p>\n\n<ul>\n<li><a href=\"https://github.com/share/ShareJS\" rel=\"nofollow\">ShareJS</a></li>\n<li><a href=\"https://github.com/Operational-Transformation/ot.js/\" rel=\"nofollow\">ot.js</a></li>\n</ul>\n\n<p>I am the maintainer of the <a href=\"https://github.com/mizzao/meteor-sharejs\" rel=\"nofollow\">meteor-sharejs</a> package for adding realtime editors directly to a <a href=\"https://www.meteor.com/\" rel=\"nofollow\">Meteor</a> app, which IMHO is the best of both worlds :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm writing an application in which I'd like to have near real time collaborative editing features for documents (Very similar to Google Documents style editing).</p>\n\n<p>I'm aware of how to keep track of cursor position, that's simple. Just poll the server ever half second or second with the current user id, filename, line number and row number which can be stored in a database, and the return value of this polling request is the position of other user's cursors.</p>\n\n<p>What I don't know how to do is update the document in such a way that it won't throw your cursor off and force a full reload as that would be far to slow for my purposes.</p>\n\n<p>This really only has to work in Google Chrome, preferably Firefox as well. I don't need to support any other browser.</p>\n",
            "last_activity_date": 1422689946,
            "question_id": 5086699,
            "score": 34,
            "tags": [
                "javascript",
                "ajax"
            ],
            "title": "Real time collaborative editing - how does it work?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Returning the function name without <code>()</code> returns a reference to the function, which can be assigned as you've done with <code>var s = a()</code>. <code>s</code> now contains a reference to the function <code>b()</code>, and calling <code>s()</code> is functionally equivalent to calling <code>b()</code>.</p>\n\n<pre><code>// Return a reference to the function b().\n// In your example, the reference is assigned to var s\nreturn b;\n</code></pre>\n\n<p>Calling the function with <code>()</code> in a return statement executes the function, and returns whatever value was returned by the function.  It is similar to calling <code>var x = b();</code>, but instead of assigning the return value of <code>b()</code> you are returning it from the calling function <code>a()</code>.  If the function <code>b()</code> itself does not return a value, the call returns <code>undefined</code> after whatever other work is done by <code>b()</code>.</p>\n\n<pre><code>// Execute function b() and return its value\nreturn b();\n// If b() has no return value, this is equivalent to calling b(), followed by\n// return undefined;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>When you return <code>b</code>, it is just a reference to function b, but not being executed at this time.</p>\n\n<p>When you return <code>b()</code>, you're executing the function and returning its value.</p>\n\n<p>Try <code>alert</code>ing <code>typeof(s)</code> in your examples. Snippet b will give you 'function'. What will snippet a give you?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>return b();</code> calls the function b(), and returns its result.</p>\n\n<p><code>return b;</code> returns a reference to the function b, which you can store in a variable to call later.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Returning <code>b</code> is returning a function object.  In Javascript, functions are just objects, like any other object.  If you find that not helpful, just replace the word \"object\" with \"thing\".  You can return any object from a function.  You can return a true/false value. An integer (1,2,3,4...).  You can return  a string.  You can return a complex object with multiple properties.  And you can return a function.  a function is just a thing. </p>\n\n<p>In your case, returning <code>b</code> returns the thing, the thing is a callable function. Returning <code>b()</code> returns the value returned by the callable function.  </p>\n\n<p>Consider this code:</p>\n\n<pre><code>function b() {\n   return 42;\n}\n</code></pre>\n\n<p>Using the above definition, <code>return b();</code> returns the value 42.  On the other hand <code>return b;</code> returns a function, that itself returns the value of 42.  They are two different things. </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Imagine the function as a type, like an int. You can return ints in a function.\nYou can return functions too, they are object of type \"function\".</p>\n\n<p>Now the syntax problem: because functions returns values, how can you return a function and not it's returning value?</p>\n\n<p>by omitting brackets! Because without brackets, the function won't be executed! So:</p>\n\n<pre><code>return b;\n</code></pre>\n\n<p>Will return the \"function\" (imagine it like if you are returning a number), while:</p>\n\n<pre><code>return b();\n</code></pre>\n\n<p>First executes the function <strong>then</strong> return the value obtained by executing it, it's a big difference!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Create a <strong>variable</strong>:</p>\n\n<pre><code>var thing1 = undefined;\n</code></pre>\n\n<p>Declare a <strong>Function</strong>:</p>\n\n<pre><code>function something1 () {\n    return \"Hi there, I'm number 1!\";\n}\n</code></pre>\n\n<p>Alert the <strong>value</strong> of <code>thing1</code> (our first variable):</p>\n\n<pre><code>alert(thing1); // Outputs: \"undefined\".\n</code></pre>\n\n<p>Now, if we wanted <code>thing1</code> to be a <strong>reference</strong> to the function <code>something1</code>, meaning it would be the same thing as our created function, we would do:</p>\n\n<pre><code>thing1 = something1;\n</code></pre>\n\n<p>However, if we wanted the <code>return</code> <strong>value</strong> of the function then we must assign it the return value of the executed function. You execute the function by using parenthesis:</p>\n\n<pre><code>thing1 = something1(); // Value of thing1: \"Hi there, I'm number 1!\" \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Assigning a variable to a function (without the parenthesis) copies the reference to the function. Putting the parenthesis at the end of a function name, calls the function, returning the functions return value.</p>\n\n<h2><a href=\"http://jsfiddle.net/kaleb/Las6w/\">Demo</a></h2>\n\n<pre><code>function a() {\n    alert('A');\n}\n//alerts 'A', returns undefined\n\nfunction b() {\n    alert('B');\n    return a;\n}\n//alerts 'B', returns function a\n\nfunction c() {\n    alert('C');\n    return a();\n}\n//alerts 'C', alerts 'A', returns undefined\n\nalert(\"Function 'a' returns \" + a());\nalert(\"Function 'b' returns \" + b());\nalert(\"Function 'c' returns \" + c());\n</code></pre>\n\n<p>In your example, you are also defining functions within a function. Such as:</p>\n\n<pre><code>function d() {\n    function e() {\n        alert('E');\n    }\n    return e;\n}\nd()();\n//alerts 'E'\n</code></pre>\n\n<p>The function is still callable. It still exists. This is used in JavaScript all the time. Functions can be passed around <em>just</em> like other values. Consider the following:</p>\n\n<pre><code>function counter() {\n    var count = 0;\n    return function() {\n        alert(count++);\n    }\n}\nvar count = counter();\ncount();\ncount();\ncount();\n</code></pre>\n\n<p>The function count can keep the variables that were defined outside of it. This is called a closure. It's also used a lot in JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 35
                }
            ],
            "body": "<p>I' started learning JavaScript recently and I'm stuck up with this concept of 'Functions that return functions'. I'm referring the book 'Object Oriented Javascript' by Stoyan Stefanov. I have prior programming experience in Java, C and C++ and also 2 years of work experience applying my knowledge on the same.</p>\n\n<p><strong>Snippet One:</strong>  </p>\n\n<pre><code>function a() {\n\n    alert('A!');\n\n    function b(){\n        alert('B!'); \n    }\n\n    return b();\n}\n\nvar s = a();\nalert('break');\ns();\n</code></pre>\n\n<p><strong>Output:</strong></p>\n\n<pre><code>A!\nB!\nbreak\n</code></pre>\n\n<p><strong>Snippet Two</strong></p>\n\n<pre><code>function a() {\n\n    alert('A!');\n\n    function b(){\n        alert('B!'); \n    }\n\n    return b;\n}\n\nvar s = a();\nalert('break');\ns();\n</code></pre>\n\n<p><strong>Output:</strong></p>\n\n<pre><code>A!\nbreak\nB!\n</code></pre>\n\n<p>Can someone please tell me the difference between returning <code>b</code> and <code>b()</code> in the above snippets? I tried searching for stuff on google but couldn't get any worthy links. I'd be glad if someone also provided me some links explaining the concept. Thanks and Regards.</p>\n",
            "last_activity_date": 1317644194,
            "question_id": 7629891,
            "score": 31,
            "tags": [
                "javascript"
            ],
            "title": "Functions that return a function - Javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Fluxxor has <a href=\"http://fluxxor.com/guides/async-data.html\" rel=\"nofollow\">an exemple</a> of async communication with an API.</p>\n\n<p>This <a href=\"http://www.code-experience.com/async-requests-with-react-js-and-flux-revisited/\" rel=\"nofollow\">blog post</a> has talks about it and has been featured on React's blog.</p>\n\n<hr>\n\n<p>I find this a very important and difficult question that is not clearly answered yet, as frontend software synchronization with the backend is still a pain.</p>\n\n<p>Should API requests be made in JSX components? Stores? Other place?</p>\n\n<p>Performing requests in stores mean that if 2 stores need the same data for a given action, they will issue 2 similar requets (unless you introduce dependencies between stores, <a href=\"http://stackoverflow.com/questions/25791034/om-but-in-javascript\">which I really don't like</a>)</p>\n\n<p>In my case, I have found this very handy to put Q promises as payload of actions because:</p>\n\n<ul>\n<li>My actions do not need to be serializable (I do not keep an event log, I don't need event replay feature of event sourcing)</li>\n<li>It removes the need to have different actions/events (request fired/request completed/request failed) and have to match them using correlation ids when concurrent requests can be fired.</li>\n<li>It permits to multiple store to listen to the completion of the same request, without introducing any dependency between the stores (however it may be better to introduce a caching layer?)</li>\n</ul>\n\n<hr>\n\n<p><strong>Ajax is EVIL</strong></p>\n\n<p>I think Ajax will be less and less used in the near future because it is very hard to reason about.\nThe right way? Considering devices as part of the distributed system\nI don't know where I first came across this idea (maybe in this <a href=\"http://a16z.com/2014/10/17/the-future-of-software-development-eves-chris-granger-plots-a-course/\" rel=\"nofollow\">inspiring Chris Granger video</a>).</p>\n\n<p>Think about it. Now for scalability we use distributed systems with eventual consistency as storage engines (because we can't beat the <a href=\"http://en.wikipedia.org/wiki/CAP_theorem\" rel=\"nofollow\">CAP theorem</a> and often we want to be available). These systems do not sync through polling each others (except maybe for consensus operations?) but rather use structures like CRDT and event logs to make all the members of the distributed system eventually consistent (members will converge to the same data, given enough time).</p>\n\n<p><strong>Now think about what is a mobile device or a browser. It is just a member of the distributed system that may suffer of network latency and network partitionning.</strong> (ie you are using your smartphone on the subway)</p>\n\n<p>If we can build network partition and network speed tolerant databases (I mean we can still perform write operations to an isolated node), we can probably build frontend softwares (mobile or desktop) inspired by these concepts, that work well with offline mode supported out of the box without app features unavailability.</p>\n\n<p>I think we should really inspire ourselves of how databases are working to architecture our frontend applications. One thing to notice is that these apps do not perform POST and PUT and GET ajax requests to send data to each others, but rather use event logs and CRDT to ensure eventual consistency. </p>\n\n<p>So why not do that on the frontend?\nNotice that the backend is already moving in that direction, with tools like Kafka massively adopted by big players. This is somehow related to Event Sourcing / CQRS / DDD too.</p>\n\n<p>Check these awesome articles from Kafka authors to convince yourself:</p>\n\n<ul>\n<li><a href=\"http://blog.confluent.io/2015/01/29/making-sense-of-stream-processing/\" rel=\"nofollow\">STREAM PROCESSING, EVENT SOURCING, REACTIVE, CEP\u2026 AND MAKING SENSE OF IT ALL</a></li>\n<li><a href=\"http://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying\" rel=\"nofollow\">The Log: What every software engineer should know about real-time data's unifying abstraction</a>. </li>\n</ul>\n\n<p>Maybe we can start by sending commands to the server, and receiving a stream of server events (through websockets for exemple), instead of firing Ajax requests.</p>\n\n<p>I have never been very comfortable with Ajax requests. As we React developpers tend to be functional programmers. I think it's hard to reason about local data that is supposed to be your \"source of truth\" of your frontend application, while the real source of truth is actually on the server database, and your \"local\" source of truth may already be outdated when you receive it, and will never converge to the real source of truth value unless you press some lame Refresh button... Is this engineering?</p>\n\n<p>However it's still a bit hard to design such a thing for some obvious reasons:</p>\n\n<ul>\n<li>Your mobile/browser client has limited resources and can not necessarily store all the data locally (thus sometimes requiring polling with an ajax request heavy content)</li>\n<li>Your client should not see all the data of the distributed system so it requires somehow to filter the events that it receives for security reasons</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "\n\n<p>[<strong>Update:</strong> I've taken a strong liking to the second technique listed here, where the store initiates the async fetch if necessary, and would probably recommend it for the generic case.]</p>\n\n<p>I'm a big proponent of putting async operations in the action creators. As in <a href=\"http://fluxxor.com/guides/async-data.html\" rel=\"nofollow\">my async example on the Fluxxor site</a>, I try to keep action handling in the stores 100% synchronous; this makes them simple to reason about and simple to unit test. In order to prevent multiple simultaneous requests to the same endpoint (for example, double-reading), I'll move the actual request processing into a separate module that uses promises to prevent the multiple requests; for example:</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>class MyResourceDAO {\n  get(id) {\n    if (!this.promises[id]) {\n      this.promises[id] = new Promise((resolve, reject) =&gt; {\n        // ajax handling here...\n      });\n    } \n    return this.promises[id];\n  }\n}\n</code></pre>\n\n<p>An alternative to doing all async ops in the action creators, which I believe someone from the FB team has mentioned, is putting async <em>writes</em> in the action creators and <em>reads</em> in the stores\u2014with the important caveat that the stores don't update themselves asynchronously, but instead fire an action when the async request completes.</p>\n\n<p>For example, a component might do:</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>getInitialState() {\n  return { data: myStore.getSomeData(this.props.id) };\n}\n</code></pre>\n\n<p>The store would have a method implemented, perhaps, something like this:</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>class Store {\n  getSomeData(primaryKey) {\n    if (!this.cache[primaryKey]) {\n      MyResurceDAO.get(primaryKey).then(this.updateFromServer);\n      this.cache[primaryKey] = LOADING_TOKEN;\n      // LOADING_TOKEN is a unique value of some kind\n      // that the component can use to know that the\n      // value is not yet available.\n    } else {\n      return this.cache[primaryKey];\n    }\n  }\n\n  updateFromServer(data) {\n    fluxDispatcher.dispatch({\n      type: \"DATA_FROM_SERVER\",\n      payload: {id: primaryKey, data: data}\n    });\n  }\n\n  // this handles the \"DATA_FROM_SERVER\" action\n  handleDataFromServer(action) {\n    this.cache[action.payload.id] = action.payload.data;\n    this.emit(\"change\"); // or whatever you do to re-render your app\n  }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>You can call for data in either the action creators or the stores.  The important thing is to not handle the response directly, but to create an action in the error/success callback.  Handling the response directly in the store leads to a more brittle design.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm creating a react.js application with flux architecture and I am trying  figure out where and when a request for data from the server should be made. Is there a any example for this. (Not TODO app!)</p>\n",
            "last_activity_date": 1426091704,
            "question_id": 26632415,
            "score": 23,
            "tags": [
                "javascript",
                "reactjs",
                "reactjs-flux"
            ],
            "title": "Where should ajax request be made in Flux app?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You could loop over all paths and scale() them acording to the new scale of the paper after resizing it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could add a <a href=\"http://www.w3.org/TR/SVG11/coords.html#ViewBoxAttribute\" rel=\"nofollow\">'viewBox'</a> attribute on the svg root element to define the coordinate system, the shapes will then scale to whatever the size of the container is. Not sure how to deal with the VML side of things though. I'd suggest reporting an issue for it, <a href=\"https://github.com/DmitryBaranovskiy/raphael/issues\" rel=\"nofollow\">https://github.com/DmitryBaranovskiy/raphael/issues</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It took me awhile but I finally came up with a solution to this problem. I've wrapped the solution in a small js file that can be used with Raphael. You can get the js file along with some simple documentation <a href=\"http://www.shapevent.com/scaleraphael/\">here</a>. <a href=\"http://www.shapevent.com/scaleraphael/demo1.html\">See it in action</a>.</p>\n\n<p><strong>How it works:</strong></p>\n\n<ol>\n<li>use viewBox for svg</li>\n<li>wrap all vml nodes in a group node</li>\n<li>wrap the Raphael constructor up so that the vml group node is passed to the Raphael constructor</li>\n<li>alter a few css properties when the paper is resized to deal with centering, clipping and maintaining the correct aspect ratio.</li>\n</ol>\n\n<p>Any feedback would be greatly appreciated.</p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>Well hello Z\u00e9van,</p>\n\n<p>I found a nice answer, made by a guy called Zevan. However, I found the code overcomplicated for my liking (Required jquery, did wierd stuff like \"$(this)\" etc).</p>\n\n<p>So I simplified it. It's now short enough to fit into stackoverflow ;):</p>\n\n<pre><code>var paper;\n\nwindow.ScaleRaphael = function(container, width, height) {\n    var wrapper = document.getElementById(container);\n    wrapper.style.width = width + \"px\";\n    wrapper.style.height = height + \"px\";\n    wrapper.style.overflow = \"hidden\";\n\n    wrapper.innerHTML = \"&lt;div id='svggroup'&gt;&lt;\\/div&gt;\";\n    var nestedWrapper = document.getElementById(\"svggroup\");\n\n    paper = new Raphael(nestedWrapper, width, height);\n    paper.w = width;\n    paper.h = height;\n    paper.canvas.setAttribute(\"viewBox\", \"0 0 \"+width+\" \"+height);\n    paper.changeSize = function() {\n        var w = window.innerWidth\n        var h = window.innerHeight\n        var ratioW = w / width;\n        var ratioH = h / height;\n        var scale = ratioW &lt; ratioH ? ratioW : ratioH;\n\n        var newHeight = Math.floor(height * scale);\n        var newWidth = Math.floor(width * scale);\n\n        wrapper.style.width = newWidth + \"px\";\n        wrapper.style.height = newHeight + \"px\";\n        paper.setSize(newWidth, newHeight);\n    }\n    window.onresize = function() {\n        paper.changeSize();\n    }\n\n    paper.changeSize();\n\n    return paper;\n}\n</code></pre>\n\n<p>The only drawback from your version is that it requires SVG, it doesn't do VML. Is this a problem?</p>\n\n<p>I'm using it with a simplified version of your demo page:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt; \n&lt;html lang=\"en\"&gt; \n&lt;head&gt;\n&lt;title&gt;ScaleRapha\u00ebl Demo 1&lt;/title&gt;\n&lt;meta charset=\"utf-8\"&gt; \n\n&lt;script type=\"text/javascript\" src=\"raphael.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"scale.raphael.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n\n    window.onload = function() {\n        var paper = new ScaleRaphael(\"wrap\", 600, 400);\n\n        // draw some random vectors:\n        var path = \"M \" + paper.w / 2 + \" \" + paper.h / 2;\n        for (var i = 0; i &lt; 100; i++){\n            var x = Math.random() * paper.w;\n            var y = Math.random() * paper.h;\n            paper.circle(x, y,\n                Math.random() * 60 + 2).\n                attr(\"fill\", \"rgb(\"+Math.random() * 255+\",0,0)\").\n                attr(\"opacity\", 0.5);\n            path += \"L \" + x + \" \" + y + \" \";\n        }\n\n        paper.path(path).attr(\"stroke\",\"#ffffff\").attr(\"stroke-opacity\", 0.2);\n\n        paper.text(200,100,\"Resize the window\").attr(\"font\",\"30px Arial\").attr(\"fill\",\"#ffffff\");\n    }\n\n      &lt;/script&gt;\n&lt;style type=\"text/css\"&gt;\n    body, html {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n    }\n\n    #wrap{\n        background-color: orange;\n    }\n&lt;/style&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n</code></pre>\n\n\n\n<p>\n</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This might just be too old of a thread, but Raphael 2.0 at least has a <code>setViewBox</code> method -- <a href=\"http://raphaeljs.com/reference.html#Paper.setViewBox\" rel=\"nofollow\">http://raphaeljs.com/reference.html#Paper.setViewBox</a></p>\n\n<p>You'll still need to set the actual canvas size to 100%, so the <em>container</em> scales to the window, but calling <code>setViewBox</code> with appropriate w/h in your window.resize callback should do the trick.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I started using Raphael.js a few days ago and I'm really enjoying it. The only thing I haven't been able to figure out is how to get the \"paper\" or svg/vml tag to fill the browser window like an swf. <a href=\"http://www.shapevent.com/1/entit/chair.swf\">See this example.</a></p>\n\n<p><em>Note the way the above example resizes with the browser window</em></p>\n\n<p>I was able to get the \"paper\" to resize with the browser window, but no luck getting all the vector graphics to adjust their size. Any feedback would be greatly appreciated.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>I tried a bunch of different routes with this. viewBox worked great but its SVG only. I just figured out how to do it using Raphael sets and a little code on the window.onresize event. I'll post my findings later tonight or tomorrow. I'd still really like to see other solutions to the question if there are any.</p>\n",
            "last_activity_date": 1403004081,
            "question_id": 4322660,
            "score": 21,
            "tags": [
                "javascript",
                "swf",
                "svg",
                "raphael",
                "vml"
            ],
            "title": "Scaling SVG (Raphael.js) like an SWF"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Yes we can always break the script file based on different criteria such as functionality, module, page where used.\nWe have been following an approach where all script specific to a page are within a single script file for the page\nWhat we do is for a page\\view such as <code>users</code> we create <code>users.js</code>, this contains all </p>\n\n<ul>\n<li>Controllers</li>\n<li>Services</li>\n<li>Directives </li>\n</ul>\n\n<p>specific to this page only. So finding where a functionality resides for a page becomes easy and self contained.</p>\n\n<p>We still have common </p>\n\n<ul>\n<li>directives.js</li>\n<li>filters.js</li>\n<li>services.js</li>\n</ul>\n\n<p>But these are reusable elements used by more than one page\\view. Also during the deployment phase we combine\\minify all these script file for better performance</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There are lot's of ways to organize your code. You can look in the following links </p>\n\n<ul>\n<li><a href=\"http://briantford.com/blog/huuuuuge-angular-apps.html\">Building Huuuuuge Apps with AngularJS</a></li>\n<li><a href=\"http://cliffmeyers.com/blog/2013/4/21/code-organization-angularjs-javascript\">Code Organization in Large AngularJS and JavaScript Applications</a></li>\n<li><a href=\"http://tech-blog.maddyzone.com/javascript/code-organization-angularjs\">Code organization in all type project in angularjs</a> </li>\n</ul>\n\n<p>You can follow their standard or you can make your own. </p>\n\n<p>Try to follow the following guidelines:</p>\n\n<ul>\n<li>Contollers shouldn't be too long, if it's too long then it is handling multiple responsibilities </li>\n<li>Try to use Directives and Services in your system to reuse your code/logic </li>\n<li>Directives are the most powerful things in Angualrjs, try to get maximum advantage of it.</li>\n<li>Write Tests; even better you can try to practice TDD with AngularJS  </li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>See how these two starter projects organize files for a larger-scale application:</p>\n\n<ul>\n<li><a href=\"https://github.com/angular-app/angular-app/\" rel=\"nofollow\">https://github.com/angular-app/angular-app/</a></li>\n<li><a href=\"https://github.com/joshdmiller/ng-boilerplate\" rel=\"nofollow\">https://github.com/joshdmiller/ng-boilerplate</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You may wish to have a look at <a href=\"https://github.com/mgechev/angularjs-style-guide\" rel=\"nofollow\">this community-driven guide</a>.</p>\n\n<p>The guide describes best practices for organizing the directory structure of a large AngularJS application.</p>\n\n<p>It also makes recommendations on naming and structuring AngularJS modules, controllers, directives, filters and services.</p>\n\n<p>It's also worth it to check out a tool like <a href=\"http://www.linemanjs.com\" rel=\"nofollow\">Lineman.js</a> with the <a href=\"https://github.com/linemanjs/lineman-angular-template\" rel=\"nofollow\">AngularJS application template</a>.</p>\n\n<p>For enterprise AngularJS projects, you may wish to look at this <a href=\"https://github.com/kvindasAB/angular-enterprise-kickstart\" rel=\"nofollow\">kickstarter</a> which is based on <a href=\"http://joshdmiller.github.io/ng-boilerplate\" rel=\"nofollow\">ng-boilerplate</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can manage it like module wise!! </p>\n\n<p>For example , take user view , you make one directory, here its name is user!!</p>\n\n<pre><code>user // directory , now put all controller ,service and directive file into it !! \n\n-- userController.js    //  controller file \n\n-- userService.js       // service file\n\n-- userDirective.js     // directive file\n\n-- views                // make directory, and put all html file regarding that module into this\n\n  --users.html          // html file\n</code></pre>\n\n<p>Hope this will help you!!</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>There's a nice document out there from Google's own team that back up Shivali's example:\n<a href=\"https://docs.google.com/document/d/1XXMvReO8-Awi1EZXAXS4PzDzdNvV6pGcuaF4Q9821Es/pub\" rel=\"nofollow\">https://docs.google.com/document/d/1XXMvReO8-Awi1EZXAXS4PzDzdNvV6pGcuaF4Q9821Es/pub</a></p>\n\n<p>Something like this:</p>\n\n<pre><code>sampleapp/\n    app.css\n    app.js                top-level configuration, route def\u2019ns for the app\n    app-controller.js\n    app-controller_test.js\n    components/\n    adminlogin/                                \n            adminlogin.css                styles only used by this component\n            adminlogin.js              optional file for module definition\n            adminlogin-directive.js\n            adminlogin-directive_test.js        \n                    private-export-filter/\n                            private-export-filter.js\n                            private-export-filter_test.js\n    userlogin/\n    somefilter.js\n    somefilter_test.js\n    userlogin.js\n    userlogin.css                \n    userlogin.html                \n    userlogin-directive.js\n    userlogin-directive_test.js\n    userlogin-service.js\n    userlogin-service_test.js                \n            index.html\n    subsection1/\n    subsection1.js\n    subsection1-controller.js\n                    subsection1-controller_test.js\n                    subsection1_test.js                         \n                    subsection1-1/                        \n                            subsection1-1.css\n                            subsection1-1.html\n                            subsection1-1.js\n                            subsection1-1-controller.js\n    subsection1-1-controller_test.js\n                    subsection1-2/                        \n            subsection2/\n    subsection2.css\n    subsection2.html\n    subsection2.js\n    subsection2-controller.js\n    subsection2-controller_test.js\n            subsection3/\n                    subsection3-1/\n    etc...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Check this, build your angular app with CoffeeScript, SCSS.</p>\n\n<p><a href=\"https://github.com/nhim175/modular-angular-skeleton/\" rel=\"nofollow\">https://github.com/nhim175/modular-angular-skeleton/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>On a large AngularJS application having all my controllers in a single \"controllers.js\" file seems a little un-maintainable to me. Is there a better way to do this such as:</p>\n\n<pre><code>\\js\\controllers\\myController.js\n\\js\\controllers\\yourController.js\n\\js\\controllers\\ourController.js\n</code></pre>\n\n<p>and that also applies for filters, services, directives etc...</p>\n",
            "last_activity_date": 1417795031,
            "question_id": 17461242,
            "score": 19,
            "tags": [
                "javascript",
                "angularjs",
                "directory-structure"
            ],
            "title": "AngularJS application file structure"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p><strong>My Answer from suggested duplicate</strong>  </p>\n\n<p><strong>Read</strong>  </p>\n\n<ol>\n<li>Mastering Regular Expressions -\nO'Reilly (I can't count the times I needed this)</li>\n<li>SQL Pocket Guide - O'Reilly (Always on my desk)</li>\n<li>Foundations of Ajax - APress ( A good read )</li>\n<li>Database in Depth (for later, made me rethink my poor DB design)</li>\n<li>Dive into Python - <a href=\"http://www.diveintopython.org/\" rel=\"nofollow\">http://www.diveintopython.org/</a> (IT'S FREE!) I changed from PHP to Python and now love it.</li>\n<li>JavaScript: The definitive Guide - O'Reilly (Just finished it, 9/10, bit dated but seems like a stable reference)</li>\n<li>Pro JavaScript (comparable to 6, but a bit more related to the real-world)</li>\n</ol>\n\n<p>And would suggest starting with <strong>.NET/Mono</strong> if you know C# (mod_mono is great if you are on Linux with Apache)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The biggest bridge to cross is understand the stateless nature of web apps. After that you have plenty of options of which ASP.NET MVC seems to be the most popular, and for good reason. Javascript is a must, as well as concepts of Ajax.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>First - understand how the Web works: basis of protocols (IP, HTTP...) and then standards (*HTML, CSS). Then you should be able to apply you existing C# skills to Web development (using something like ASP.NET). Then I'd go on to JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I suggest you take a look at <a href=\"http://www.php.net/manual/en/\" rel=\"nofollow\">PHP</a>.<br>\nIf you are completely green on web programming/design, you should take a look at <a href=\"http://www.w3schools.com/htmL/\" rel=\"nofollow\">W3Schools</a>, for instance.<br>\nOther than this, just get your hands dirty and start coding a few small pages - you'll probably be amazed how quick (and possibly dirty) PHP programming can be!<br>\nYou do NOT have to master databases, AJAX or Javascript to get going - even though you'll most probably need them soon enough.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can try learning PHP from <a href=\"http://www.tuxradar.com/practicalphp\" rel=\"nofollow\">http://www.tuxradar.com/practicalphp</a> .\nAlso, remember that (excepting the front-end - CSS, HTML &amp; Javascript), the back-end is pure programming (my combination of choice is PHP and MySQL database).</p>\n\n<p>And don't forget the main documentation source: <a href=\"http://php.net/\" rel=\"nofollow\">http://php.net/</a> .</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you already know C# then asp.net would seem the most obvious answer. WebForms has lot of similarities with traditional application development, but it hides many things involved in web development such as statelessness of HTTP. It still might be good starting point and from there you could move on to ASP.NET MVC. <a href=\"http://www.asp.net\" rel=\"nofollow\">Here are some resources</a></p>\n\n<p>If you choose to go with some other language, I suggest that you learn some framework like Django for Python or Ruby on Rails</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You should start with the basics in my opinion. First with (X)HTML and CSS to do simple static pages (<a href=\"http://www.w3schools.com/\" rel=\"nofollow\">W3school</a> is a great place for this). Second you should go with simple JavaScript to learn how to modify stuff in your page (<a href=\"http://jquery.com/\" rel=\"nofollow\">Jquery</a> would be very nice to learn too!). </p>\n\n<p>Then, when you'll feel you're able to get where you want with those language, go with the server side language for client/server interaction. To reuse your C# skill, you should probably go with .NET as your server side language as you can reuse many elements of the framework.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I'd suggest you try out both PHP and ASP.net and see what fits. The ASP.NET MVC Framework might be especially interesting though since you're already bewildered in C#.</p>\n\n<p>That is however the server-side of web development. I concur with others here that you should start of with the basics first, and w3schools is perfect for that:</p>\n\n<ul>\n<li><a href=\"http://www.w3schools.com/html/default.asp\" rel=\"nofollow\">HTML</a></li>\n<li><a href=\"http://www.w3schools.com/css/default.asp\" rel=\"nofollow\">CSS</a></li>\n<li><a href=\"http://www.w3schools.com/js/default.asp\" rel=\"nofollow\">JavaScript</a></li>\n</ul>\n\n<p>When you are ready for server-side-development and if you are willing to check out PHP, here are three resources that were absolutely invaluable when I began web development:</p>\n\n<ul>\n<li><a href=\"http://nettuts.com\" rel=\"nofollow\">http://nettuts.com</a></li>\n<li><a href=\"http://woork.blogspot.com/2007/10/table-of-contents.html\" rel=\"nofollow\">http://woork.blogspot.com</a></li>\n<li><a href=\"http://www.php.net/manual/en/\" rel=\"nofollow\">http://www.php.net/manual/en/</a></li>\n</ul>\n\n<p>woork has got an amazing introduction for beginners that introduces things like includes and site structure. He's also compiled most of his tutorials to an e-book format which is fantastic.</p>\n\n<p>If you however decide to continue the .NET path, you can't go wrong with:</p>\n\n<ul>\n<li><a href=\"http://www.asp.net/mvc/learn/\" rel=\"nofollow\">http://www.asp.net/mvc/learn/</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you know C# then you should definitely use ASP.Net and Web Forms to start.  Why add another thing you have to learn my adding a new language to the mix. ASP.Net is a very solid platform and easy to get started using.  In addition, sharpen your skills in the areas below.</p>\n\n<ol>\n<li>JavaScript and JQuery (since it is part of VS now).</li>\n<li>HTML/XHTML / CSS</li>\n<li>Ajax</li>\n<li>Silverlight</li>\n<li>LINQ</li>\n</ol>\n\n<p>I would also advise you to take a look on Codeplex (<a href=\"http://www.codeplex.com\" rel=\"nofollow\">http://www.codeplex.com</a>) and look at some of the web-based projects posted there.  In addition to learning from what other have done you might find a project you can get involved in.  You could also check out DotNetNuke (http:/wwww.dotnetnuke.com), which is a great VB.Net web application framework.  I use this to host all my sites and to add functionality I just need to write custom modules to plug into the framework.  By doing this all the \"stuff\" that most sites need are part of the core (authentication, logging, etc).  This leaves you free to concentrate on adding the specific functionality you need for your site(s).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a C++ library with which you can create web applications using C++ .\n  It fast , VERY well designed , and relies on <strong>boost</strong> heavily  .</p>\n\n<p>It is called <strong>Wt</strong> ( pronounced <em>witty</em> )</p>\n\n<p><a href=\"http://www.webtoolkit.eu/\" rel=\"nofollow\">http://www.webtoolkit.eu/</a></p>\n\n<p>Cheers!\nDushan</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Actually, I just recently moved from application side development in C# to web development. I found it simpler to stay with c# for server side work (ie ASP.net). But to get the same responsive and rich user interface that you're used to on the desktop I had to get into javascript. A lot of ASP.net programmers don't like javascript - mainly because of problems with the visual studio IDE (better nowadays). Anyway, I jumped for the <a href=\"http://www.extjs.com/\" rel=\"nofollow\">ExtJS</a> javascript framework for that desktop feel and rich user interface - and they have a lot of documentation, examples and tutorials to help you learn from.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To begin with, you should learn XHTML and CSS. They are the foundations of web development and it is important to note that XHTML should be used for structure and CSS for design. XHTML should be rather easy and straightforward. On another hand, CSS can be rather tricky since every browser interprets CSS in a different way.</p>\n\n<p>Next, you should learn Javascript (which is not related to Java). In my opinion, learning Javascript is essential with libraries such as <a href=\"http://jquery.org\" rel=\"nofollow\">jQuery</a> and <a href=\"http://www.prototypejs.org/\" rel=\"nofollow\">Protoype</a>.</p>\n\n<p>Afterwards, you should learn server side web development. PHP would be better to start off with than ASP.NET. Why? PHP is free! Also, there are a bunch of free web hosting solutions for you to test your PHP sites. If you do not want to test on servers you can download free software that will emulate the server on your computer so you can test on your computer. Other languages/technologies are becoming very popular like <a href=\"http://wiki.python.org/moin/WebProgramming\" rel=\"nofollow\">Python</a>, Ruby and <a href=\"http://nodejs.org\" rel=\"nofollow\">Node.js</a>.</p>\n\n<p>One last thing that could eventually become really handy: SQL for databases!</p>\n\n<h2>Important links:</h2>\n\n<p><strong>XHTML:</strong></p>\n\n<ul>\n<li>Tutorial: <a href=\"http://www.w3schools.com/html/default.asp\" rel=\"nofollow\">http://www.w3schools.com/html/default.asp</a></li>\n</ul>\n\n<p><strong>CSS:</strong></p>\n\n<ul>\n<li>Tutorial: <a href=\"http://www.w3schools.com/css/default.asp\" rel=\"nofollow\">http://www.w3schools.com/css/default.asp</a></li>\n<li>Design: <a href=\"http://tutsplus.com/\" rel=\"nofollow\">http://tutsplus.com/</a></li>\n<li>Design inspiration: <a href=\"http://www.cssheaven.com/\" rel=\"nofollow\">http://www.cssheaven.com/</a></li>\n<li>Design inspiration: <a href=\"http://cssline.com/\" rel=\"nofollow\">http://cssline.com/</a></li>\n<li>Pure CSS menus: <a href=\"http://www.seoconsultants.com/css/menus/horizontal/\" rel=\"nofollow\">http://www.seoconsultants.com/css/menus/horizontal/</a></li>\n</ul>\n\n<p><strong>Javascript:</strong></p>\n\n<ul>\n<li>Tutorial: <a href=\"http://www.w3schools.com/js/default.asp\" rel=\"nofollow\">http://www.w3schools.com/js/default.asp</a></li>\n</ul>\n\n<p><strong>PHP:</strong></p>\n\n<ul>\n<li>Tutorial: <a href=\"http://www.w3schools.com/php/default.asp\" rel=\"nofollow\">http://www.w3schools.com/php/default.asp</a></li>\n<li>Free hosting: <a href=\"http://www.000webhost.com/\" rel=\"nofollow\">http://www.000webhost.com/</a></li>\n<li>Server emulation (Windows): <a href=\"http://www.wampserver.com/\" rel=\"nofollow\">http://www.wampserver.com/</a></li>\n<li>Server emulation (Mac): <a href=\"http://www.mamp.info/\" rel=\"nofollow\">http://www.mamp.info/</a></li>\n<li>Server emulation (Linux): <a href=\"http://lamphowto.com/\" rel=\"nofollow\">http://lamphowto.com/</a></li>\n</ul>\n\n<p><strong>SQL</strong></p>\n\n<ul>\n<li>Tutorial: <a href=\"http://www.w3schools.com/sql/default.asp\" rel=\"nofollow\">http://www.w3schools.com/sql/default.asp</a></li>\n<li>MySQL: <a href=\"http://www.mysql.com/\" rel=\"nofollow\">http://www.mysql.com/</a></li>\n<li>Oracle: <a href=\"http://www.oracle.com/\" rel=\"nofollow\">http://www.oracle.com/</a></li>\n<li>OLE DB: <a href=\"http://msdn.microsoft.com/en-us/library/ms722784(VS.85).aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/ms722784(VS.85).aspx</a></li>\n</ul>\n\n<p><strong>ASP.NET:</strong></p>\n\n<ul>\n<li>Tutorial: <a href=\"http://www.w3schools.com/asp/default.asp\" rel=\"nofollow\">http://www.w3schools.com/asp/default.asp</a></li>\n<li>Documentation: <a href=\"http://www.asp.net/\" rel=\"nofollow\">http://www.asp.net/</a></li>\n</ul>\n\n<p><strong>Servlets:</strong> </p>\n\n<ul>\n<li>Java:\n<a href=\"http://java.sun.com/docs/books/tutorial/\" rel=\"nofollow\">http://java.sun.com/docs/books/tutorial/</a></li>\n<li>Servlets:\n<a href=\"http://java.sun.com/products/servlet/\" rel=\"nofollow\">http://java.sun.com/products/servlet/</a></li>\n<li>Servlets:\n<a href=\"http://www.novocode.com/doc/servlet-essentials/\" rel=\"nofollow\">http://www.novocode.com/doc/servlet-essentials/</a></li>\n</ul>\n\n<p><strong>Other:</strong></p>\n\n<ul>\n<li>Silverlight: <a href=\"http://silverlight.net/\" rel=\"nofollow\">http://silverlight.net/</a></li>\n<li>Moonlight: <a href=\"http://www.mono-project.com/Moonlight\" rel=\"nofollow\">http://www.mono-project.com/Moonlight</a></li>\n<li>JavaFX: <a href=\"http://javafx.com/\" rel=\"nofollow\">http://javafx.com/</a></li>\n</ul>\n\n<p>*If anyone has the knowledge of other sites, please feel free to comment and post them!</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Experienced programmers should not start with beginner XHTML/CSS/Javascript/SQL/etc books; instead, find books that teach you by building a \"real\" website as an example. I mean, basic books, IMO, waste your time because they just teach you small stuff--that's not what you are going to end up building in end. They also teach stuff in parts (e.g. a book on HTML and another book on SQL) Instead, challenge yourself to really learn it by diving straight into building a real website.</p>\n\n<p>The experience that you had as a developer will kick in and help you see the difference. Try it; bang your head. </p>\n\n<p>If you run into basic problem (like what does <p> mean in HTML, or what is SELECT in SQL), sites like Stackoverflow / Google are your friends. </p>\n\n<p>Examples of good books can be found <a href=\"http://www.amazon.com/s/ref=nb_sb_noss?url=search-alias%3Daps&amp;field-keywords=practical+web+projects\" rel=\"nofollow\">here</a>. A lot of \"Practical ... Projects\" books are good. See the reviews. Pick one technology you want (Rails, Django, ASP MVC, etc), and start building. Once you are finished with one book, pick another framework. You want to broaden your mind before picking <em>the</em> technology you want to build upon. Also, this book is good: <a href=\"http://www.webdesignfordevelopers.com/\" rel=\"nofollow\">Web Design for Developers</a>. It speaks our language. Try it out for yourself.</p>\n\n<p>Just keep building sites after sites without worrying about <strong>the</strong> site you want to build. Once you have built enough sites, eventually you will know how to build one without having to rely on a book.</p>\n\n<p>If you see a good site you like, try Googling for it with the word \"clone.\" For example, here's a <a href=\"http://dotnetslackers.com/projects/StackOverflowInspiredKnowledgeExchange/\" rel=\"nofollow\">series of articles</a> on how to build a StackOverflow clone.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>So what's your best advice for someone who knows application side development (C++/C#) and wants to start developing web applications and websites?</p>\n\n<p>What languages should i start with? (php/javascript/other)</p>\n\n<p>What kind of tips do you have for me?</p>\n",
            "last_activity_date": 1334878215,
            "question_id": 1032245,
            "score": 14,
            "tags": [
                "c#",
                "php",
                "javascript",
                "c++"
            ],
            "title": "Application developers wanting to start web development?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Unfortunately, Chrome doesn't support that functionality yet, although there was talk in December 2010 about adding in the next major release...</p>\n\n<p><em>This answer is no longer valid</em></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If anyone's still looking for this, I'm on Chrome 15.0.874.58 beta-m and I have a checkbox in <em>Developer Tools > Settings</em> labelled \"Console: Preserve log on navigation\". Does the job nicely.</p>\n\n<p><img src=\"http://i.stack.imgur.com/nin4N.png\" alt=\"image of setting\"></p>\n",
                    "is_accepted": true,
                    "score": 126
                },
                {
                    "body": "<p>Use firebug to track it. It is great way to get your consoles and track your whole project.</p>\n\n<p>more details - <a href=\"http://getfirebug.com/\" rel=\"nofollow\">http://getfirebug.com/</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Since I'm building a dynamic site, I need to track the changes between pages, ie. Ajax calls, POST, GET stuff and similar stuff.</p>\n\n<p>I'm looking for the same functionality like in Firebug (where you can enable \"persistent\" and the console is not cleared every time you reload a page or submit a form.</p>\n\n<p>So, my questions is: <strong>is there a way to make Google Chrome JavaScript console persistent?</strong>\n(And if yes, how?)</p>\n\n<p><strong>Update</strong>: Copying the answer here, if anyone's still looking for this, Chrome 14+ has a setting in Developer Tools > Settings labelled \"Console: Preserve log on navigation\". </p>\n\n<p><strong>Update 2</strong>: the latest versions of Chrome (33+) have this option by right-clicking in the console.</p>\n",
            "last_activity_date": 1417079551,
            "question_id": 5327955,
            "score": 101,
            "tags": [
                "javascript",
                "google-chrome",
                "console",
                "debugging"
            ],
            "title": "How to make Google Chrome JavaScript console persistent?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>With jQuery:</p>\n\n<pre><code>$(\"#fileRequest\").click(function() {\n    // // hope the server sets Content-Disposition: attachment!\n    window.location = 'file.doc';\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>For the button you can do</p>\n\n<pre><code>&lt;form method=\"get\" action=\"file.doc\"&gt;\n&lt;button type=\"submit\"&gt;Download!&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>If you use the  tag - do not forget to use the entire url which leads to the file - i.e. <code>&lt;a href=\"http://www.example.com/folder1/file.doc\"&gt;Download&lt;/a&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use a normal link and style it to look like a button, using CSS.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is how you can make a good looking button instead of standard, boring HTML button.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;a href=\"file.doc\" class=\"button\"&gt;\n  Download!\n&lt;/a&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.button\n{\n  /*Make your button look cool.*/\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>what about that:\n<code>&lt;input type=\"button\" value=\"Download Now!\" onclick=\"window.location = 'file.doc';\"&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>HTML:</p>\n\n<pre><code>&lt;button type=\"submit\" onclick=\"window.open('file.doc')\"&gt;Download!&lt;/button&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>function Download(){\n  window.open('file.doc');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I have done some reasearch and found the best answer. You can trigger a download by using the new HTML5 <code>download</code> attribute.</p>\n\n<pre><code>&lt;a href=\"path_to_file\" download=\"proposed_file_name\"&gt;Download&lt;/a&gt;\n</code></pre>\n\n<p>Where :</p>\n\n<ul>\n<li><code>path_to_file</code> is either an absolute or relative path,</li>\n<li><code>proposed_file_name</code> the filename to save to (can be blank, then defaults to the actual filename).</li>\n</ul>\n\n<p>Hope this is helpful.</p>\n\n<p><a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/links.html#downloading-resources\">Whatwg</a> <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/links.html#attr-hyperlink-download\">documentation</a>. <a href=\"http://caniuse.com/#feat=download\">Caniuse</a>.</p>\n",
                    "is_accepted": false,
                    "score": 50
                },
                {
                    "body": "<p>You can do it with \"trick\" with invisible iframe. When you set \"src\" to it, browser reacts as if you would click a link with the same \"href\". As opposite to solution with form, it enables you to embed additional logic, for example activating download after timeout, when some conditions are met etc. </p>\n\n<p>It is also very silient, there's no blinking new window/tab like when using <code>window.open</code>.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;iframe id=\"invisible\" style=\"display:none;\"&gt;&lt;/iframe&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>function download() {\n    var iframe = document.getElementById('invisible');\n    iframe.src = \"file.doc\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>This is crazy but I don't know how to do this, and because of how common the words are, it's hard to find what I need on search engines. I'm thinking this should be an easy one to answer.</p>\n\n<p>I want a simple file download, that would do the same as this:</p>\n\n<pre><code>&lt;a href=\"file.doc\"&gt;Download!&lt;/a&gt;\n</code></pre>\n\n<p>But I want to use an HTML button, e.g. either of these:</p>\n\n<pre><code>&lt;input type=\"button\" value=\"Download!\"&gt;\n&lt;button&gt;Download!&lt;/button&gt;\n</code></pre>\n\n<p>Likewise, is it possible to trigger a simple download via Javascript?</p>\n\n<pre><code>$(\"#fileRequest\").click(function(){ /* code to download? */ });\n</code></pre>\n\n<p>I'm definitely <em>not</em> looking for a way to create an anchor that looks like a button, use any back-end scripts, or mess with server headers or mime types.</p>\n",
            "last_activity_date": 1416418963,
            "question_id": 11620698,
            "score": 61,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "How to trigger a file download when clicking an html button or javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>apply</code> calls a function with a set of arguments. It's not part of jQuery, it's part of core Javascript. However, there is mention of it in the jQuery docs:</p>\n\n<p><a href=\"http://docs.jquery.com/Types#Context.2C_Call_and_Apply\">http://docs.jquery.com/Types#Context.2C_Call_and_Apply</a></p>\n\n<p>Syntax:</p>\n\n<pre><code>somefunction.apply(thisObj[, argsArray])\n</code></pre>\n\n<p>The above calls the function <code>somefunction</code>, setting <code>this</code> to <code>thisObj</code> within the function's scope, and passing in the arguments from <code>argsArray</code> as the arguments to the function.</p>\n",
                    "is_accepted": true,
                    "score": 84
                },
                {
                    "body": "<p>Essentially, apply will call a function with the context being set to the object you apply the function to. This means that within the function, referencing <code>this</code> will refer to that object.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I see that in different plugins and codes, but I don't understand what does that function... In the jQuery api isn't referenced!</p>\n",
            "last_activity_date": 1385475419,
            "question_id": 3796788,
            "score": 59,
            "tags": [
                "javascript",
                "jquery",
                "plugins",
                "apply"
            ],
            "title": "What&#39;s the .apply jQuery function?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>If you want to do this solely using javascript, I would do the following. Give the span an id attribute (so that it can easily be retrieved from the DOM) and place all the content in an attribute named 'content':</p>\n\n<pre><code>&lt;span id='myDataId' style='text-overflow: ellipsis; overflow : hidden;\n white-space: nowrap; width: 71;' content='{$myData}'&gt;${myData}&lt;/span&gt;\n</code></pre>\n\n<p>Then, in your javascript, you can do the following after the element has been inserted into the DOM.</p>\n\n<pre><code>var elemInnerText, elemContent;\nelemInnerText = document.getElementById(\"myDataId\").innerText;\nelemContent = document.getElementById(\"myDataId\").getAttribute('content')\nif(elemInnerText.length &lt;= elemContent.length)\n{\n   document.getElementById(\"myDataId\").setAttribute('title', elemContent); \n}\n</code></pre>\n\n<p>Of course, if you're using javascript to insert the span into the DOM, you could just keep the content in a variable before inserting it. This way you don't need a content attribute on the span.</p>\n\n<p>There are more elegant solutions than this if you want to use jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>spiderman! i'm having the same problem myself. the browser doesn't seem to know it's text gets truncated. All DOM attributes show no trace of it.<br>\nof course you could change the overflow to visible, measure the width, then return to overflow hidden then compare. this is an ugly solution and for me it's not realistic because i have loads of data on the screen and i'm not going to loop through them all.\nsketchy code: (loopy and wasteful)</p>\n\n<pre><code>for(elem in group){\n   elem.style.overflow = 'visible';\n   var originalWidth = elem.offsetWidth;\n   elem.style.overflow = 'hidden';\n   if(elem.offsetWidth &gt; originalWidth)\n       elem.title = elem.innerHTML;\n}\n</code></pre>\n\n<p>if you got something more substantial and less 'patchy' please let know.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a way that does it using the built-in ellipsis setting, and adds the <code>title</code> attribute on-demand (with jQuery) building on Martin Smith's comment:</p>\n\n<pre><code>$('.mightOverflow').bind('mouseenter', function(){\n    var $this = $(this);\n\n    if(this.offsetWidth &lt; this.scrollWidth &amp;&amp; !$this.attr('title')){\n        $this.attr('title', $this.text());\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 60
                },
                {
                    "body": "<p>uos\u0250\u017f's answer is fundamentally correct, but you probably don't want to do it in the mouseenter event. That's going to cause it to do the calculation to determine if it's needed, each time you mouse over the element. Unless the size of the element is changing, there's no reason to do that.</p>\n\n<p>It would be better to just call this code immediately after the element is added to the DOM:</p>\n\n<pre><code>var $ele = $('#mightOverflow');\nvar ele = $ele.eq(0);\nif (ele.offsetWidth &lt; ele.scrollWidth)\n    $ele.attr('title', $ele.text());\n</code></pre>\n\n<p>Or, if you don't know when exactly it's added, then call that code after the page is finished loading.</p>\n\n<p>if you have more than a single element that you need to do this with, then you can give them all the same class (such as \"mightOverflow\"), and use this code to update them all:</p>\n\n<pre><code>$('.mightOverflow').each(function() {\n    var $ele = $(this);\n    if (this.offsetWidth &lt; this.scrollWidth)\n        $ele.attr('title', $ele.text());\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>This is what I did.  Most tooltip scripts require you to execute a function that stores the tooltips.  This is a jQuery example:</p>\n\n<pre><code>$.when($('*').filter(function() {\n   return $(this).css('text-overflow') == 'ellipsis';\n}).each(function() {\n   if (this.offsetWidth &lt; this.scrollWidth &amp;&amp; !$(this).attr('title')) {\n      $(this).attr('title', $(this).text());\n   }\n})).done(function(){ \n   setupTooltip();\n});\n</code></pre>\n\n<p>If you didn't want to check for ellipsis css, you could simplify like:</p>\n\n<pre><code>$.when($('*').filter(function() {\n   return (this.offsetWidth &lt; this.scrollWidth &amp;&amp; !$(this).attr('title'));\n}).each(function() {\n   $(this).attr('title', $(this).text());\n})).done(function(){ \n   setupTooltip();\n});\n</code></pre>\n\n<p>I have the \"when\" around it, so that the \"setupTooltip\" function doesn't execute until all titles have been updated.  Replace the \"setupTooltip\", with your tooltip function and the * with the elements you want to check.  * will go through them all if you leave it.</p>\n\n<p>If you simply want to just update the title attributes with the browsers tooltip, you can simply like:</p>\n\n<pre><code>$('*').filter(function() {\n   return $(this).css('text-overflow') == 'ellipsis';\n}).each(function() {\n   if (this.offsetWidth &lt; this.scrollWidth &amp;&amp; !$(this).attr('title')) {\n      $(this).attr('title', $(this).text());\n   }\n});\n</code></pre>\n\n<p>Or without check for ellipsis:</p>\n\n<pre><code>$.when($('*').filter(function() {\n   return (this.offsetWidth &lt; this.scrollWidth &amp;&amp; !$(this).attr('title'));\n}).each(function() {\n   $(this).attr('title', $(this).text());\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>None of the solutions above worked for me, but I figured out a great solution. The biggest mistake people are making is having all the 3 CSS properties declared on the element upon pageload. You have to add those styles+tooltip dynamically IF and ONLY IF the span you want an ellipses on is wider than its parent.</p>\n\n<pre><code>    $('table').each(function(){\n        var content = $(this).find('span').text();\n        var span = $(this).find('span');\n        var td = $(this).find('td');\n        var styles = {\n            'text-overflow':'ellipsis',\n            'white-space':'nowrap',\n            'overflow':'hidden',\n            'display':'block',\n            'width': 'auto'\n        };\n        if (span.width() &gt; td.width()){\n            span.css(styles)\n                .tooltip({\n                trigger: 'hover',\n                html: true,\n                title: content,\n                placement: 'bottom'\n            });\n        }\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>We need detect whether ellipsis is really applied, then to show a tooltip to reveal full text. It is not enough by only comparing \"<code>this.offsetWidth &lt; this.scrollWidth</code>\" when the element nearly holding its content but only lacking one or two more pixels in width, especially for text of full-width Chinese/Japanese/Korean characters.</p>\n\n<p>Here is a example: <a href=\"http://jsfiddle.net/28r5D/5/\" rel=\"nofollow\">http://jsfiddle.net/28r5D/5/</a></p>\n\n<p>I found a way to improve ellipsis detection:</p>\n\n<ol>\n<li>Compare \"<code>this.offsetWidth &lt; this.scrollWidth</code>\" first, continue step #2 if failed.</li>\n<li>Switch css style temporally to {'overflow': 'visible', 'white-space': 'normal', 'word-break': 'break-all'}.</li>\n<li>Let browser do relayout. If word-wrap happening, the element will expands its height which also means ellipsis is required.</li>\n<li>Restore css style.</li>\n</ol>\n\n<p>Here is my improvement: <a href=\"http://jsfiddle.net/28r5D/6/\" rel=\"nofollow\">http://jsfiddle.net/28r5D/6/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is my jQuery plugin:</p>\n\n<pre><code>(function($) {\n    'use strict';\n    $.fn.tooltipOnOverflow = function() {\n        $(this).on(\"mouseenter\", function() {\n            if (this.offsetWidth &lt; this.scrollWidth) {\n                $(this).attr('title', $(this).text());\n            } else {\n                $(this).removeAttr(\"title\");\n            }\n        });\n    };\n})(jQuery);\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>$(\"td, th\").tooltipOnOverflow();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have got a span with dynamic data in my page that contain ellipsis. Meaning:</p>\n\n<pre><code>&lt;span style='text-overflow: ellipsis; overflow : hidden; white-space: nowrap;  \n width: 71;'&gt;${myData}&lt;/span&gt;\n</code></pre>\n\n<p>and I'd like to add to this element tooltip with the same content (title='${myData}') but I want it to appear only when the content is long and the ellipsis appear on screen.\n<br> \nIs There any way to do it?</p>\n\n<p>one direction - when the browser (IE in my case) draw ellipsis- does it throw an event about it?</p>\n",
            "last_activity_date": 1405354537,
            "question_id": 5474871,
            "score": 43,
            "tags": [
                "javascript",
                "html",
                "css",
                "tooltip",
                "ellipsis"
            ],
            "title": "HTML - how can I show tooltip ONLY when ellipsis is activated"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Looks like there is an issue with the code you posted. Your function to display the T&amp;C is referencing the wrong div id. You should consider assigning the showTOC function to the onclick attribute once the document is loaded as well:</p>\n\n<pre><code>$(document).ready({\n    $('a.TOClink').click(function(){\n        showTOC();\n    });\n});\n\nfunction showTOC() {\n    $('#example').dialog({modal:true});\n}\n</code></pre>\n\n<p>A more concise example which accomplishes the desired effect using the jQuery UI dialog is:</p>\n\n<pre><code>   &lt;div id=\"terms\" style=\"display:none;\"&gt;\n       Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n   &lt;/div&gt;\n   &lt;a id=\"showTerms\" href=\"#\"&gt;Show Terms &amp;amp; Conditions&lt;/a&gt;\t   \n   &lt;script type=\"text/javascript\"&gt;\n       $(document).ready(function(){\n           $('#showTerms').click(function(){\n               $('#terms').dialog({modal:true});   \n           });\n       });\n   &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>I encountered the same issue (dialog would only open once, after closing, it wouldn't open again), and tried the solutions above which did not fix my problem. I went back to the docs and realized I had a fundamental misunderstanding of how the dialog works.</p>\n\n<p>The $('#myDiv').dialog() command creates/instantiates the dialog, but is not necessarily the proper way to <strong>open</strong> it. The proper way to open it is to instantiate the dialog with dialog(), then use dialog('open') to display it, and dialog('close') to close/hide it. This means you'll probably want to set the autoOpen option to false.</p>\n\n<p>So the process is: instantiate the dialog on document ready, then listen for the click or whatever action you want to show the dialog. Then it will work, time after time!</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt; \n        jQuery(document).ready( function(){ \t  \n            jQuery(\"#myButton\").click( showDialog );\n\n        \t//variable to reference window\n        \t$myWindow = jQuery('#myDiv');\n\n    \t\t//instantiate the dialog\n        \t$myWindow.dialog({ height: 350,\n           \t\twidth: 400,\n           \t\tmodal: true,\n           \t\tposition: 'center',\n           \t\tautoOpen:false,\n           \t\ttitle:'Hello World',\n           \t\toverlay: { opacity: 0.5, background: 'black'}\n           \t\t});\n        \t}\n\n        );\n    //function to show dialog   \n    var showDialog = function() {\n    \t//if the contents have been hidden with css, you need this\n    \t$myWindow.show(); \n    \t//open the dialog\n    \t$myWindow.dialog(\"open\");\n    \t}\n\n    //function to close dialog, probably called by a button in the dialog\n    var closeDialog = function() {\n    \t$myWindow.dialog(\"close\");\n    }\n\n\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n&lt;input id=\"myButton\" name=\"myButton\" value=\"Click Me\" type=\"button\" /&gt;\n&lt;div id=\"myDiv\" style=\"display:none\"&gt;\n    &lt;p&gt;I am a modal dialog&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 63
                },
                {
                    "body": "<p>I had the same problem and was looking for a way to solve it which brought me here. After reviewing the suggestion made from RaeLehman it led me to the solution. Here's my implementation.</p>\n\n<p>In my $(document).ready event I initialize my dialog with the autoOpen set to false. I also chose to bind a click event to an element, like a button, which will open my dialog. </p>\n\n<pre><code>$(document).ready(function(){\n\n\t// Initialize my dialog\n\t$(\"#dialog\").dialog({\n\t\tautoOpen: false,\n\t\tmodal: true,\n\t\tbuttons: {\n\t\t\"OK\":function() { // do something },\n\t\t\"Cancel\": function() { $(this).dialog(\"close\"); }\n\t}\n\t});\n\n    // Bind to the click event for my button and execute my function\n    $(\"#x-button\").click(function(){\n        Foo.DoSomething();\n    });\n});\n</code></pre>\n\n<p>Next, I make sure that the function is defined and that is where I implement the dialog open method.</p>\n\n<pre><code>var Foo = {\n    DoSomething: function(){\n        $(\"#dialog\").dialog(\"open\");\n    }\n}\n</code></pre>\n\n<p>By the way, I tested this in IE7 and Firefox and it works fine. Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>If you need to use multiple dialog boxes on one page and open, close and reopen them the following works well: </p>\n\n<pre><code> JS CODE:\n    $(\".sectionHelp\").click(function(){\n        $(\"#dialog_\"+$(this).attr('id')).dialog({autoOpen: false});\n        $(\"#dialog_\"+$(this).attr('id')).dialog(\"open\");\n    });\n\n HTML: \n    &lt;div class=\"dialog\" id=\"dialog_help1\" title=\"Dialog Title 1\"&gt;\n        &lt;p&gt;Dialog 1&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;div class=\"dialog\" id=\"dialog_help2\" title=\"Dialog Title 2\"&gt;\n        &lt;p&gt;Dialog 2 &lt;/p&gt;\n    &lt;/div&gt;\n\n    &lt;a href=\"#\" id=\"help1\" class=\"sectionHelp\"&gt;&lt;/a&gt;\n    &lt;a href=\"#\" id=\"help2\" class=\"sectionHelp\"&gt;&lt;/a&gt;\n\n CSS:\n    div.dialog{\n      display:none;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\n// Increase the default animation speed to exaggerate the effect\n$.fx.speeds._default = 1000;\n$(function() {\n    $('#dialog1').dialog({\n        autoOpen: false,\n        show: 'blind',\n        hide: 'explode'\n    });\n\n    $('#Wizard1_txtEmailID').click(function() {\n        $('#dialog1').dialog('open');\n        return false;\n    });\n    $('#Wizard1_txtEmailID').click(function() {\n        $('#dialog2').dialog('close');\n        return false;\n    });\n    //mouseover\n    $('#Wizard1_txtPassword').click(function() {\n        $('#dialog1').dialog('close');\n        return false;\n    });\n\n});\n\n\n\n/////////////////////////////////////////////////////\n &lt;div id=\"dialog1\" title=\"Email ID\"&gt;\n                                                                                                                &lt;p&gt;\n                                                                                                                    (Enter your Email ID here.)\n                                                                                                                    &lt;br /&gt;\n                                                                                                                &lt;/p&gt;\n                                                                                             &lt;/div&gt;\n ////////////////////////////////////////////////////////\n\n&lt;div id=\"dialog2\" title=\"Password\"&gt;\n                                                                                                                &lt;p&gt;\n                                                                                                                    (Enter your Passowrd here.)\n                                                                                                                    &lt;br /&gt;\n                                                                                                                &lt;/p&gt;\n                                                                                              &lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is a little more concise and also allows you to have different dialog values etc based on different click events:</p>\n\n<pre><code>$('#click_link').live(\"click\",function() {\n    $(\"#popup\").dialog({modal:true, width:500, height:800});\n\n    $(\"#popup\").dialog(\"open\");\n\n    return false;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>RaeLehman's solution works if you only want to generate the dialog's content once (or only modify it using javascript). If you actually want to regenerate the dialog each time (e.g., using a view model class and Razor), then you can close all dialogs with $(\".ui-dialog-titlebar-close\").click(); and leave autoOpen set to its default value of true.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>My solution: remove some init options (ex. show), because constructor doesnt yield if something is not working (ex slide effect).\nMy function without  dynamic html insertion:</p>\n\n<pre><code>function ySearch(){ console.log('ysearch');\n    $( \"#aaa\" ).dialog({autoOpen: true,closeOnEscape: true, dialogClass: \"ysearch-dialog\",modal: false,height: 510, width:860\n    });\n    $('#aaa').dialog(\"open\");\n\n    console.log($('#aaa').dialog(\"isOpen\"));\n    return false;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Even I faced similar issues. This is how I was able to solve the same </p>\n\n<pre><code>    $(\"#lnkDetails\").live('click', function (e) {\n\n        //Create dynamic element after the element that raised the event. In my case a &lt;a id=\"lnkDetails\" href=\"/Attendance/Details/2012-07-01\" /&gt;\n        $(this).after('&lt;div id=\\\"dialog-confirm\\\" /&gt;');\n\n        //Optional : Load data from an external URL. The attr('href') is the href of the &lt;a&gt; tag.\n        $('#dialog-confirm').load($(this).attr('href'));\n\n        //Copied from jQueryUI site . Do we need this?\n        $(\"#dialog:ui-dialog\").dialog(\"destroy\");\n\n        //Transform the dynamic DOM element into a dialog\n        $('#dialog-confirm').dialog({\n            modal: true,\n            title: 'Details'\n        });\n\n        //Prevent Bubbling up to other elements.\n        return false;\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>if You want to change opacity for all dialog then change in jquery-ui.css</p>\n\n<pre><code>/* Overlays */\n.ui-widget-overlay\n{\n    background: #5c5c5c url(images/ui-bg_flat_50_5c5c5c_40x100.png) 50% 50% repeat-x;\n    opacity: .50;\n    filter: Alpha(Opacity=80);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Im trying to do a dialog box with jquery. In this dialog box Im going to have terms and conditions. The problem is that the dialog box is only displayed for the FIRST TIME.</p>\n\n<p>This is the code.</p>\n\n<p>JavaScript:</p>\n\n<pre><code>function showTOC()\n{\n    $(\"#TOC\").dialog({ \n        modal: true, \n        overlay: { \n            opacity: 0.7, \n            background: \"black\" \n        } \n    })\n}\n</code></pre>\n\n<p>HTML (a href):</p>\n\n<pre><code>&lt;a class=\"TOClink\" href=\"javascript:showTOC();\"&gt;View Terms &amp; Conditions&lt;/a&gt;\n\n&lt;div id=\"example\" title=\"Terms &amp; Conditions\"&gt;1..2..&lt;/div&gt;\n</code></pre>\n\n<p>The problem I think is that when you close the dialog box the DIV is destroyed from the html code therfore it can never be displayed again on screen.</p>\n\n<p>Can you please help!</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1351946864,
            "question_id": 366696,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "dialogbox"
            ],
            "title": "jQuery Dialog Box"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I think you need to use a database. MongoDB is a good choice in this case because it is JSON compatible.</p>\n\n<p><strong>UPDATE</strong>:\nYou can use <a href=\"http://docs.mongodb.org/manual/administration/import-export/\" rel=\"nofollow\">mongoimport</a> tool to import JSON data into MongoDB.</p>\n\n<pre><code>mongoimport --collection collection --file collection.json\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just as I was thinking that it would be fun to write a streaming JSON parser, I also thought that maybe I should do a quick search to see if there's one already available.</p>\n\n<p>Turns out there is.</p>\n\n<ul>\n<li><a href=\"https://github.com/dominictarr/JSONStream\">JSONStream</a> <em>\"streaming JSON.parse and stringify\"</em></li>\n</ul>\n\n<p>Since I just found it, I've obviously not used it, so I can't comment on its quality, but I'll be interested to hear if it works.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>To process a file line-by-line, you simply need to decouple the reading of the file and the code that acts upon that input.  You can accomplish this by buffering your input until you hit a newline.  Assuming we have one JSON object per line (basically, format B):</p>\n\n<pre><code>var stream = fs.createReadStream(filePath, {flags: 'r', encoding: 'utf-8'});\nvar buf = '';\n\nstream.on('data', function(d) {\n    buf += d.toString(); // when data is read, stash it in a string buffer\n    pump(); // then process the buffer\n});\n\nfunction pump() {\n    var pos;\n\n    while ((pos = buf.indexOf('\\n')) &gt;= 0) { // keep going while there's a newline somewhere in the buffer\n        if (pos == 0) { // if there's more than one newline in a row, the buffer will now start with a newline\n            buf = buf.slice(1); // discard it\n            continue; // so that the next iteration will start with data\n        }\n        process(buf.slice(0,pos)); // hand off the line\n        buf = buf.slice(pos+1); // and slice the processed data off the buffer\n    }\n}\n\nfunction process(line) { // here's where we do something with a line\n\n    if (line[line.length-1] == '\\r') line=line.substr(0,line.length-1); // discard CR (0x0D)\n\n    if (line.length &gt; 0) { // ignore empty lines\n        var obj = JSON.parse(line); // parse the JSON\n        console.log(obj); // do something with the data here!\n    }\n}\n</code></pre>\n\n<p>Each time the file stream receives data from the file system, it's stashed in a buffer, and then <code>pump</code> is called.</p>\n\n<p>If there's no newline in the buffer, <code>pump</code> simply returns without doing anything.  More data (and potentially a newline) will be added to the buffer the next time the stream gets data, and then we'll have a complete object.</p>\n\n<p>If there is a newline, <code>pump</code> slices off the buffer from the beginning to the newline and hands it off to <code>process</code>.  It then checks again if there's another newline in the buffer (the <code>while</code> loop).  In this way, we can process all of the lines that were read in the current chunk.</p>\n\n<p>Finally, <code>process</code> is called once per input line.  If present, it strips off the carriage return character (to avoid issues with line endings &ndash; LF vs CRLF), and then calls <code>JSON.parse</code> one the line.  At this point, you can do whatever you need to with your object.</p>\n\n<p>Note that <code>JSON.parse</code> is strict about what it accepts as input; you must quote your identifiers and string values <em>with double quotes</em>.  In other words, <code>{name:'thing1'}</code> will throw an error; you must use <code>{\"name\":\"thing1\"}</code>.</p>\n\n<p>Because no more than a chunk of data will ever be in memory at a time, this will be extremely memory efficient.  It will also be extremely fast.  A quick test showed I processed 10,000 rows in under 15ms.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p><strong>As of October 2014</strong>, you can just do something like the following (using JSONStream) - <a href=\"https://www.npmjs.org/package/JSONStream\" rel=\"nofollow\">https://www.npmjs.org/package/JSONStream</a></p>\n\n<pre><code> var fs = require('fs'),\n         JSONStream = require('JSONStream'),\n\n    var getStream() = function () {\n        var jsonData = 'myData.json',\n            stream = fs.createReadStream(jsonData, {encoding: 'utf8'}),\n            parser = JSONStream.parse('*');\n            return stream.pipe(parser);\n     }\n\n     getStream().pipe(MyTransformToDoWhateverProcessingAsNeeded).on('error', function (err){\n        // handle any errors\n     });\n</code></pre>\n\n<p><strong>Update:</strong></p>\n\n<p>To demonstrate with a working example:</p>\n\n<p>npm install JSONStream event-stream</p>\n\n<p><em>data.json:</em></p>\n\n<pre><code>{\n  \"greeting\": \"hello world\"\n}\n</code></pre>\n\n<p><em>hello.js:</em></p>\n\n<pre><code>var fs = require('fs'),\n  JSONStream = require('JSONStream'),\n  es = require('event-stream');\n\nvar getStream = function () {\n    var jsonData = 'data.json',\n        stream = fs.createReadStream(jsonData, {encoding: 'utf8'}),\n        parser = JSONStream.parse('*');\n        return stream.pipe(parser);\n};\n\n getStream()\n  .pipe(es.mapSync(function (data) {\n    console.log(data);\n  }));\n</code></pre>\n\n<p><em>node hello.js</em></p>\n\n<blockquote>\n  <p>hello world</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a file which stores many JavaScript objects in JSON form and I need to read the file, create each of the objects, and do something with them (insert them into a db in my case). The JavaScript objects can be represented a format:</p>\n\n<p><strong>Format A:</strong></p>\n\n<pre><code>[{name: 'thing1'},\n....\n{name: 'thing999999999'}]\n</code></pre>\n\n<p>or <strong>Format B:</strong></p>\n\n<pre><code>{name: 'thing1'}         // &lt;== My choice.\n...\n{name: 'thing999999999'}\n</code></pre>\n\n<p>Note that the <code>...</code> indicates a lot of JSON objects. I am aware I could read the entire file into memory and then use <code>JSON.parse()</code> like this:</p>\n\n<pre><code>fs.readFile(filePath, 'utf-8', function (err, fileContents) {\n  if (err) throw err;\n  console.log(JSON.parse(fileContents));\n});\n</code></pre>\n\n<p>However, the file could be really large, I would prefer to use a stream to accomplish this. The problem I see with a stream is that the file contents could be broken into data chunks at any point, so how can I use <code>JSON.parse()</code> on such objects? </p>\n\n<p>Ideally, each object would be read as a separate data chunk, but I am not sure on <em>how to do that</em>.</p>\n\n<pre><code>var importStream = fs.createReadStream(filePath, {flags: 'r', encoding: 'utf-8'});\nimportStream.on('data', function(chunk) {\n\n    var pleaseBeAJSObject = JSON.parse(chunk);           \n    // insert pleaseBeAJSObject in a database\n});\nimportStream.on('end', function(item) {\n   console.log(\"Woot, imported objects into the database!\");\n});*/\n</code></pre>\n\n<p>Note, I wish to prevent reading the entire file into memory. Time efficiency does not matter to me. Yes, I could try to read a number of objects at once and insert them all at once, but that's a performance tweak - I need a way that is guaranteed not to cause a memory overload, not matter how many objects are contained in the file. </p>\n\n<p>I can choose to use <code>FormatA</code> or <code>FormatB</code> or maybe something else, just please specify in your answer. Thanks!</p>\n",
            "last_activity_date": 1420037265,
            "question_id": 11874096,
            "score": 24,
            "tags": [
                "javascript",
                "json",
                "file",
                "node.js"
            ],
            "title": "Parse large JSON file in Nodejs"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>// Return today's date and time\nvar currentTime = new Date()\n\n// returns the month (from 0 to 11)\nvar month = currentTime.getMonth() + 1\n\n// returns the day of the month (from 1 to 31)\nvar day = currentTime.getDate()\n\n// returns the year (four digits)\nvar year = currentTime.getFullYear()\n\n// write output MM/dd/yyyy\ndocument.write(month + \"/\" + day + \"/\" + year)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 56
                },
                {
                    "body": "<p>Create a new Date object and call <code>getFullYear</code></p>\n\n<pre><code>new Date().getFullYear()\n// returns the current year\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 378
                }
            ],
            "body": "<p>How do I get the current year in JavaScript?</p>\n",
            "last_activity_date": 1413107472,
            "question_id": 6002254,
            "score": 191,
            "tags": [
                "javascript"
            ],
            "title": "Get the Current Year in JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I've found a solution so I'd like to share with you.</p>\n\n<p>I'm using grunt under node so, to call terminal commands you need to require 'child_process' module.</p>\n\n<p>For example,</p>\n\n<pre><code>var myTerminal = require(\"child_process\").exec,\n    commandToBeExecuted = \"sh myCommand.sh\";\n\nmyTerminal(commandToBeExecuted, function(error, stdout, stderr) {\n    if (!error) {\n         //do something\n    }\n});\n</code></pre>\n\n<p>I hope it helps you!</p>\n\n<p>Cheers!</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Alternatively you could load in grunt plugins to help this:</p>\n\n<p><a href=\"https://github.com/sindresorhus/grunt-shell\">grunt-shell</a> example:</p>\n\n<pre><code>shell: {\n  make_directory: {\n    command: 'mkdir test'\n  }\n}\n</code></pre>\n\n<p>or <a href=\"https://github.com/jharding/grunt-exec\">grunt-exec</a> example:</p>\n\n<pre><code>exec: {\n  remove_logs: {\n    command: 'rm -f *.log'\n  },\n  list_files: {\n    command: 'ls -l **',\n    stdout: true\n  },\n  echo_grunt_version: {\n    command: function(grunt) { return 'echo ' + grunt.version; },\n    stdout: true\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 74
                },
                {
                    "body": "<p>If you are using the latest grunt version (0.4.0rc7 at the time of this writing) both grunt-exec and grunt-shell fail (they don't seem to be updated to handle the latest grunt). On the other hand, child_process's exec is async, which is a hassle.</p>\n\n<p>I ended up using <a href=\"http://jaketrent.com/post/impressions-of-grunt/\">Jake Trent's solution</a>, and adding <a href=\"http://documentup.com/arturadib/shelljs\">shelljs</a> as a dev dependency on my project so I could just run tests easily and synchronously:</p>\n\n<pre><code>var shell = require('shelljs');\n\n...\n\ngrunt.registerTask('jquery', \"download jquery bundle\", function() {\n  shell.exec('wget http://jqueryui.com/download/jquery-ui-1.7.3.custom.zip');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Check out <code>grunt.util.spawn</code>:</p>\n\n<pre><code>grunt.util.spawn({\n  cmd: ['rm'],\n  args: ['-rf', '/tmp'],\n}, function done() {\n  grunt.log.ok('/tmp deleted');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>For async shell commands working with Grunt 0.4.x use <a href=\"https://github.com/rma4ok/grunt-bg-shell\" rel=\"nofollow\">https://github.com/rma4ok/grunt-bg-shell</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm using <a href=\"https://github.com/cowboy/grunt\">Grunt</a> (task-based command line build tool for JavaScript projects) in my project. I've created a custom tag and I am wondering if it is possible to run a command into it.</p>\n\n<p>To clarify, I'm trying to use Closure Templates and \"the task\" should call the jar file to pre-compile the Soy file to a javascript file.</p>\n\n<p>I'm running this jar from command line, but I want to set it as a task.</p>\n\n<p>Thanks!!</p>\n",
            "last_activity_date": 1362957048,
            "question_id": 10456865,
            "score": 66,
            "tags": [
                "javascript",
                "templates",
                "continuous-integration",
                "google-closure-compiler"
            ],
            "title": "Running a command in a Grunt Task"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>When nested scopes are involved, do not bind <code>&lt;input&gt;</code>s directly to members of the scope:</p>\n\n<pre><code>&lt;input ng-model=\"name\" /&gt; &lt;!-- NO --&gt;\n</code></pre>\n\n<p>Bind them to at least a level deeper:</p>\n\n<pre><code>&lt;input ng-model=\"form.name\" /&gt; &lt;!-- YES --&gt;\n</code></pre>\n\n<p>The reason is that scopes prototypically inherit their parent scope. So when setting 1st level members, these are set directly on the child scope, without affecting the parent. In contrast to that, when binding to nested fields (<code>form.name</code>) the member <code>form</code> is read from the parent scope, so accessing the <code>name</code> property accesses the correct target.</p>\n\n<p>Read a more detailed description <a href=\"https://github.com/angular/angular.js/wiki/Understanding-Scopes\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p><strong>Update Nov 2014</strong>:</p>\n\n<p>Actually your code should work after upgrading to ui-bootstrap 0.12.0. Transcluded scope is merged with controller's scope so no more need for <code>$parent</code> or <code>form.</code> stuff.</p>\n\n<p><strong>Before 0.12.0</strong>:</p>\n\n<p>The modal uses transclusion to insert its contents. Thanks to <code>ngForm</code> you can control the scope by <code>name</code> attribute. So to escape transcluded scope just modify the form this way:</p>\n\n<pre><code>&lt;form name=\"$parent\"&gt;\n</code></pre>\n\n<p>or </p>\n\n<pre><code>&lt;form name=\"$parent.myFormData\"&gt;\n</code></pre>\n\n<p>The model data will be available in controller scope.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I'm having trouble understanding/using the scopes for an angular UI modal. I've searched high and low, and read the docs over and over. Now, I'm turning to the community.</p>\n\n<p>I'm hoping that I'm just overlooking something simple. I'm fairly new to Angular but am very familiar with Javascript.</p>\n\n<p>While not immediately apparent here, I have the modules and everything set up correctly (as far as I can tell), but these code samples in particular are where I'm finding the bug.</p>\n\n<p>index.html (the important part of it)</p>\n\n<pre><code>&lt;div class=\"btn-group\"&gt;\n    &lt;button class=\"btn dropdown-toggle btn-mini\" data-toggle=\"dropdown\"&gt;\n        Actions\n        &lt;span class=\"caret\"&gt;&lt;/span&gt;\n    &lt;/button&gt;\n    &lt;ul class=\"dropdown-menu pull-right text-left\"&gt;\n        &lt;li&gt;&lt;a ng-click=\"addSimpleGroup()\"&gt;Add Simple&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a ng-click=\"open()\"&gt;Add Custom&lt;/a&gt;&lt;/li&gt;\n        &lt;li class=\"divider\"&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a ng-click=\"doBulkDelete()\"&gt;Remove Selected&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Controller.js (again, the important part)</p>\n\n<pre><code>MyApp.controller('AppListCtrl', function($scope, $modal){\n    $scope.name = 'New Name';\n    $scope.groupType = 'New Type';\n\n    $scope.open = function(){\n        var modalInstance = $modal.open({\n            templateUrl: 'partials/create.html',\n            controller: 'AppCreateCtrl'\n        });\n        modalInstance.result.then(function(response){\n\n            // outputs an object {name: 'Custom Name', groupType: 'Custom Type'}\n            // despite the user entering customized values\n            console.log('response', response);\n\n            // outputs \"New Name\", which is fine, makes sense to me.                \n            console.log('name', $scope.name);\n\n        });\n    };\n});\n\nMyApp.controller('AppCreateCtrl', function($scope, $modalInstance){\n    $scope.name = 'Custom Name';\n    $scope.groupType = 'Custom Type';\n\n    $scope.ok = function(){\n\n        // outputs 'Custom Name' despite user entering \"TEST 1\"\n        console.log('create name', $scope.name);\n\n        // outputs 'Custom Type' despite user entering \"TEST 2\"\n        console.log('create type', $scope.groupType);\n\n        // outputs the $scope for AppCreateCtrl but name and groupType\n        // still show as \"Custom Name\" and \"Custom Type\"\n        // $scope.$id is \"007\"\n        console.log('scope', $scope);\n\n        // outputs what looks like the scope, but in this object the\n        // values for name and groupType are \"TEST 1\" and \"TEST 2\" as expected.\n        // this.$id is set to \"009\" so this != $scope\n        console.log('this', this);\n\n        // based on what modalInstance.result.then() is saying,\n        // the values that are in this object are the original $scope ones\n        // not the ones the user has just entered in the UI. no data binding?\n        $modalInstance.close({\n            name: $scope.name,\n            groupType: $scope.groupType\n        });\n    };\n});\n</code></pre>\n\n<p>create.html (in its entirety)</p>\n\n<pre><code>&lt;div class=\"modal-header\"&gt;\n    &lt;button type=\"button\" class=\"close\" ng-click=\"cancel()\"&gt;x&lt;/button&gt;\n    &lt;h3 id=\"myModalLabel\"&gt;Add Template Group&lt;/h3&gt;\n&lt;/div&gt;\n&lt;div class=\"modal-body\"&gt;\n    &lt;form&gt;\n        &lt;fieldset&gt;\n            &lt;label for=\"name\"&gt;Group Name:&lt;/label&gt;\n            &lt;input type=\"text\" name=\"name\" ng-model=\"name\" /&gt;           \n            &lt;label for=\"groupType\"&gt;Group Type:&lt;/label&gt;\n            &lt;input type=\"text\" name=\"groupType\" ng-model=\"groupType\" /&gt;\n        &lt;/fieldset&gt;\n    &lt;/form&gt;\n&lt;/div&gt;\n&lt;div class=\"modal-footer\"&gt;\n    &lt;button class=\"btn\" ng-click=\"cancel()\"&gt;Cancel&lt;/button&gt;\n    &lt;button class=\"btn btn-primary\" ng-click=\"ok()\"&gt;Add&lt;/button&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>So, my question stands: why is the scope not being double-bound to the UI? and why does 'this' have the customized values, but $scope does not?</p>\n\n<p>I have tried to add ng-controller=\"AppCreateCtrl\" to the body div in create.html, but that threw an error: \"Unknown provider: $modalInstanceProvider &lt;- $modalInstance\" so no luck there.</p>\n\n<p>At this point, my only option is to pass back an object with this.name and this.groupType instead of using $scope; but that feels wrong.</p>\n\n<p>Thanks in advance! :)</p>\n\n<p>UPDATE:\nIn addition to the reading suggested by Nikos, there is also <a href=\"http://thenittygritty.co/angularjs-pitfalls-using-scopes\">this list</a> of pitfalls that can help. This problem is an example of pitfall #5.</p>\n",
            "last_activity_date": 1416955504,
            "question_id": 18924577,
            "score": 49,
            "tags": [
                "javascript",
                "angularjs",
                "scope",
                "modal-dialog",
                "angularjs-scope"
            ],
            "title": "Scope issues with Angular UI modal"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><del>Just time several iterations of each function. One iteration probably won't be enough, but (depending on how complex your functions are) somewhere closer to 100 or even 1,000 iterations should do the job.</del></p>\n\n<p><del>Firebug also has a <a href=\"http://getfirebug.com/js.html\">profiler</a> if you want to see which parts of your function are slowing it down.</del></p>\n\n<p><strong>Edit:</strong> To future readers, the below answer recommending JSPerf should be the correct answer. I would delete mine, but I can't because it has been selected by the OP. There is much more to benchmarking than just running many iterations, and JSPerf takes care of that for you.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p><a href=\"http://jsperf.com\">jsperf.com</a> is the go-to site for testing JS performance.  Start there.  If you need a framework for running your own tests from the command line or scripts use <a href=\"http://benchmarkjs.com/\">Benchmark.js</a>, the library upon which jsperf.com is built.</p>\n\n<p><strong>Note:</strong> Anyone testing Javascript code should educate themselves on the pitfalls of \"microbenchmarks\" (small tests that target a specific feature or operation, rather than more complex tests based on real-world code patterns).  Such tests can be useful but are prone to inaccuracy due to how modern JS runtimes operate.  <a href=\"https://www.youtube.com/watch?v=65-RbBwZQdU\">Vyacheslav Egorov's presentation on performance and benchmarking</a> is worth watching to get a feel for the nature of the problem(s).</p>\n\n<p><strong>Edit:</strong> Removed references to my JSLitmus work as it's just no longer relevant or useful.</p>\n",
                    "is_accepted": false,
                    "score": 55
                },
                {
                    "body": "<p>I have been using this simple implementation of @musicfreaks answer. There are no features, but it is really easy to use. This <code>bench(function(){return 1/2;}, 10000, [], this)</code> will calculate 1/2 10,000 times.</p>\n\n<pre><code>/**\n * Figure out how long it takes for a method to execute.\n * \n * @param {Function} method to test \n * @param {number} iterations number of executions.\n * @param {Array} args to pass in. \n * @param {T} context the context to call the method in.\n * @return {number} the time it took, in milliseconds to execute.\n */\nvar bench = function (method, iterations, args, context) {\n\n    var time = 0;\n    var timer = function (action) {\n        var d = Date.now();\n        if (time &lt; 1 || action === 'start') {\n            time = d;\n            return 0;\n        } else if (action === 'stop') {\n            var t = d - time;\n            time = 0;    \n            return t;\n        } else {\n            return d - time;    \n        }\n    };\n\n    var result = [];\n    var i = 0;\n    timer('start');\n    while (i &lt; iterations) {\n        result.push(method.apply(context, args));\n        i++;\n    }\n\n    var execTime = timer('stop');\n\n    if ( typeof console === \"object\") {\n        console.log(\"Mean execution time was: \", execTime / iterations);\n        console.log(\"Sum execution time was: \", execTime);\n        console.log(\"Result of the method call was:\", result[0]);\n    }\n\n    return execTime;  \n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>It\u2019s really hard to write decent cross-browser benchmarks. Simply timing a pre-defined number of iterations of your code is <a href=\"http://calendar.perfplanet.com/2010/bulletproof-javascript-benchmarks/\">not bulletproof at all</a>.</p>\n\n<p>As @broofa already suggested, check out <a href=\"http://jsperf.com/\">jsPerf</a>. It uses <a href=\"http://benchmarkjs.com/\">Benchmark.js</a> behind the scenes.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>if writing a custom benchmark script be sure to note that some browsers apply dom manipulations only after function in which they are defined is ended. More details here\n<a href=\"http://www.quirksmode.org/blog/archives/2009/08/when_to_read_ou.html\" rel=\"nofollow\">http://www.quirksmode.org/blog/archives/2009/08/when_to_read_ou.html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just adding a quick timer to the mix, which someone may find useful:</p>\n\n<pre><code>var timer = function(name) {\n    var start = new Date();\n    return {\n        stop: function() {\n            var end  = new Date();\n            var time = end.getTime() - start.getTime();\n            console.log('Timer:', name, 'finished in', time, 'ms');\n        }\n    }\n};\n</code></pre>\n\n<p>Ideally it would be placed in a class, and not used as a global like I did for example purposes above. Using it would be pretty simple:</p>\n\n<pre><code>var t = timer('Some label');\n// code to benchmark\nt.stop(); // prints the time elapsed to the js console\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Is there a package that helps me benchmark JS code ? Im not referring the Firebug and such tools.</p>\n\n<p>I need to compare 2 different JS functions that I have implemented. Im very familiar with perl's Benchmark (<a href=\"https://metacpan.org/pod/Benchmark\">Benchmark.pm</a>) module and Im looking for something similar in javascript.</p>\n\n<p>Is the emphasis on benchmarking the JS code overboard ? Can I get away with timing just one run of the functions ?</p>\n",
            "last_activity_date": 1410900347,
            "question_id": 1003855,
            "score": 44,
            "tags": [
                "javascript",
                "benchmarking"
            ],
            "title": "howto benchmark javascript code?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Just define it as a regular function at the top of your script: </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function getlist(url, gkey){  \n        ...\n    }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You have two options, add it to the <code>window</code> object to make it global:</p>\n\n<pre><code>window.getList = function(url, gkey){ \n    // etc...\n}\n</code></pre>\n\n<p>or move it from inside the document ready event handler into the global scope:</p>\n\n<pre><code>$(document).ready(function() {  \n    alert(getList('http://www.youtube.com/watch?v=dm4J5dAUnR4', \"v\"));\n});  \nvar getList = function(url, gkey){  \n\n    var returned = null;  \n    if (url.indexOf(\"?\") != -1){  \n      var list = url.split(\"?\")[1].split(\"&amp;\"),  \n              gets = [];  \n\n      for (var ind in list){  \n        var kv = list[ind].split(\"=\");  \n        if (kv.length&gt;0)  \n            gets[kv[0]] = kv[1];  \n    }  \n\n    returned = gets;  \n\n    if (typeof gkey != \"undefined\")  \n        if (typeof gets[gkey] != \"undefined\")  \n            returned = gets[gkey];  \n\n    }  \n\n        return returned;  \n\n};  \n</code></pre>\n\n<p>You might also want to read <a href=\"http://stackoverflow.com/questions/336859/javascript-var-functionname-function-vs-function-functionname\">this question</a> about using <code>var functionName = function () {}</code> vs <code>function functionName() {}</code>, and <a href=\"http://javascript.about.com/library/bltut07.htm\">this article</a> about variable scope.</p>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p>declare getList() outside the ready() function..</p>\n\n<pre><code>var getList = function(url, gkey){\n        var returned = null;\n        if (url.indexOf(\"?\") != \n....\n....\n...\n};\n</code></pre>\n\n<p>Now the getList will work anywhere in the code:</p>\n\n<pre><code>$(document).ready( function() {\nalert(getList('http://www.youtube.com/watch?v=dm4J5dAUnR4', \"v\"));\n});\n</code></pre>\n\n<p>The problem was, scope of the getList(.) function.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Yet another option is to hang the function off the jQuery object itself. That way you avoid polluting the global name space any further:</p>\n\n<pre><code>jQuery.getlist = function getlist(url, gkey) {\n  // ...\n}\n</code></pre>\n\n<p>Then you can get at it with \"$.getlist(url, key)\" </p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>To declare it as a global function, just get rid of all the jQuery specific bits. Something like this:</p>\n\n<pre><code>function getList(url, gkey) {\n    var returned = null;\n    if (url.indexOf(\"?\") != -1){\n    var list = url.split(\"?\")[1].split(\"&amp;\"), gets = [];\n    for (var ind in list){\n        var kv = list[ind].split(\"=\");\n        if (kv.length&gt;0) {\n            gets[kv[0]] = kv[1];\n        }\n    }\n\n    returned = gets;\n\n    if (typeof gkey != \"undefined\") {\n        if (typeof gets[gkey] != \"undefined\") {\n            returned = gets[gkey];\n        }\n    }\n\n    return returned;\n}\n</code></pre>\n\n<p>And then you should be able to call it from anywhere.</p>\n",
                    "is_accepted": false,
                    "score": -3
                }
            ],
            "body": "<p>I have a function that strips the youtube id off a url. I then want to use this function 10 time per page (in the wordpress loop).</p>\n\n<p>The function works great when I feed it the url within my function script tags, but when I start a new set of script tags within the loop, it does not work.</p>\n\n<p>I need to know how I can use my function without declaring it all first.</p>\n\n<p>So this is the code I have in the header:</p>\n\n<pre><code> &lt;script type=\"text/javascript\"&gt; \n$(document).ready(function() {\nvar getList = function(url, gkey){\n        var returned = null;\n        if (url.indexOf(\"?\") != -1){\n          var list = url.split(\"?\")[1].split(\"&amp;\"),\n                  gets = [];\n\n          for (var ind in list){\n            var kv = list[ind].split(\"=\");\n            if (kv.length&gt;0)\n                gets[kv[0]] = kv[1];\n        }\n\n        returned = gets;\n\n        if (typeof gkey != \"undefined\")\n            if (typeof gets[gkey] != \"undefined\")\n                returned = gets[gkey];\n\n        }\n\n            return returned;\n\n    };\n\n\n        // THIS WORKS\n\n    alert(getList('http://www.youtube.com/watch?v=dm4J5dAUnR4', \"v\"));\n\n\n      });\n</code></pre>\n\n<p>But when I try use this somewhere else on the page, it doesnt work.</p>\n\n<pre><code> &lt;script type=\"text/javascript\"&gt; \n\n      $(document).ready(function() {\n              alert(getList('http://www.youtube.com/watch?v=dm4J5dAUnR4', \"v\"));\n      };\n      &lt;/script&gt;\n</code></pre>\n\n<p>Firebug gives me <strong>getList is not defined</strong> which makes sense, because its not. Am I able to 'globally' declare this function?</p>\n",
            "last_activity_date": 1400959048,
            "question_id": 2223305,
            "score": 32,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How can I make a function defined in jQuery.ready available globally?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Slides 25/26 of <a href=\"http://sites.google.com/site/io/even-faster-web-sites\" rel=\"nofollow\">this presentation</a> talk about the characteristics of different methods for inserting scripts.  It suggests that IE is the only browser that will execute those scripts in order.  All other browsers will execute them in the order that they finish loading.  Even IE won't execute them in order if one or more have inline js instead of a src.</p>\n\n<p>One of the methods suggested is to insert a new DOM element:</p>\n\n<pre><code>var se1 = document.createElement('script');\nse1.src = 'a.js';\n\nvar se2 = document.createElement('script');\nse2.src = 'b.js';\n\nvar se3 = document.createElement('script');\nse3.src = 'c.js';\n\nvar head = document.getElementsByTagName('head')[0]\nhead.appendChild(se1);\nhead.appendChild(se2);\nhead.appendChild(se3);\n</code></pre>\n\n<p>To make the second script section generated you could use a script to generate that content and pass the parameters:</p>\n\n<pre><code>se2.src = 'generateScript.php?params=' + someParam;\n</code></pre>\n\n<p>EDIT: In spite of what the article I sited says, my testing suggests that most browsers will execute your document.write scripts in order if they each have a src, so while I think the method above is preferred, you could do this as well:</p>\n\n<pre><code>&lt;script language=\"javascript\" type=\"text/javascript\"&gt;\ndocument.write(\"&lt;script type='text/javascript' src='before.js'&gt;&lt;\\/sc\" + \"ript&gt;\");\ndocument.write(\"&lt;script type='text/javascript' src='during.php?params=\" + params + \"'&gt;&lt;\\/sc\" + \"ript&gt;\");\ndocument.write(\"&lt;script type='text/javascript' src='after.js'&gt;&lt;\\/sc\" + \"ript&gt;\");\n&lt;/script&gt;\n</code></pre>\n\n<p>EDIT AGAIN (response to comments to myself and others): You are already generating the script on your page.  Whatever you are doing can be moved to another server-side script that generates the same block of code.  If you need parameters on your page then pass them to the script in the query string.</p>\n\n<p>Also, you can use this same method if, as you suggest, you are generating the inline script multiple times:</p>\n\n<pre><code>&lt;script language=\"javascript\" type=\"text/javascript\"&gt;\ndocument.write(\"&lt;script type='text/javascript' src='before.js'&gt;&lt;\\/sc\" + \"ript&gt;\");\ndocument.write(\"&lt;script type='text/javascript' src='during.php?params=\" + params1 + \"'&gt;&lt;\\/sc\" + \"ript&gt;\");\ndocument.write(\"&lt;script type='text/javascript' src='during.php?params=\" + params2 + \"'&gt;&lt;\\/sc\" + \"ript&gt;\");\ndocument.write(\"&lt;script type='text/javascript' src='during.php?params=\" + params3 + \"'&gt;&lt;\\/sc\" + \"ript&gt;\");\ndocument.write(\"&lt;script type='text/javascript' src='after.js'&gt;&lt;\\/sc\" + \"ript&gt;\");\n&lt;/script&gt;\n</code></pre>\n\n<p>However, this is starting to look as though you are approaching this the wrong way.  If you are generating a large block of code multiple times then you should probably be replacing it with a single js function and calling it with different params instead...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Okay...during...</p>\n\n<pre><code>// During.js\nduring[fish]();\n</code></pre>\n\n<p>after...</p>\n\n<pre><code>// After.js\nalert(\"After\");\nfish++\n</code></pre>\n\n<p>HTML</p>\n\n<pre><code>&lt;!-- some html --&gt;\n&lt;script language=\"javascript\" type=\"text/javascript\"&gt;\ndocument.write(\"&lt;script language='javascript' type='text/javascript' src='before.js'&gt;&lt;/sc\" + \"ript&gt;\");\ndocument.write(\"&lt;script language='javascript' type='text/javascript'&gt;during[\" + fish + \"] = function(){alert('During!' + fish);}&lt;/sc\" + \"ript&gt;\");\ndocument.write(\"&lt;script language='javascript' type='text/javascript' src='during.js'&gt;&lt;/sc\" + \"ript&gt;\");\ndocument.write(\"&lt;script language='javascript' type='text/javascript' src='after.js'&gt;&lt;/sc\" + \"ript&gt;\");\n&lt;/script&gt;\n&lt;!-- some other html --&gt;\n&lt;script language=\"javascript\" type=\"text/javascript\"&gt;\ndocument.write(\"&lt;script language='javascript' type='text/javascript' src='before.js'&gt;&lt;/sc\" + \"ript&gt;\");\ndocument.write(\"&lt;script language='javascript' type='text/javascript'&gt;during[\" + fish + \"] = function(){alert('During!' + fish);}&lt;/sc\" + \"ript&gt;\");\ndocument.write(\"&lt;script language='javascript' type='text/javascript' src='during.js'&gt;&lt;/sc\" + \"ript&gt;\");\ndocument.write(\"&lt;script language='javascript' type='text/javascript' src='after.js'&gt;&lt;/sc\" + \"ript&gt;\");\n&lt;/script&gt;\n</code></pre>\n\n<p>I'm inclined to agree about the way this is starting to smell, though. In particular, why couldn't you codegen the \"during\" into a dynamically created js file, and insert that?</p>\n\n<p>Note that the dynamically generated script goes <strong>inside</strong> the function in the <strong>second</strong> document.write.<br />\nTested in FF2, IE7</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>No, this is the behavior of Internet Explorer.</p>\n\n<p>If you attach scripts dynamically, IE, Firefox, and Chrome will all download the scripts in an asynchronous manner.</p>\n\n<p>Firefox and Chrome will wait till all of the async requests return and then will execute the scripts in the order that they are attached in the DOM but IE executes the scripts in the order that they are returned over the wire.</p>\n\n<p>Since the alert takes less time to \"retrieve\" than an external javascript file, that likely explains the behavior that you are seeing.</p>\n\n<p>From Kristoffer Henriksson's <a href=\"http://blogs.msdn.com/kristoffer/archive/2006/12/22/loading-javascript-files-in-parallel.aspx\">post on the subject of asynchronous script loading</a>:</p>\n\n<blockquote>\n  <p>In this scenario IE and Firefox will\n  download both scripts but Internet\n  Explorer will also execute them in the\n  order they finish downloading in\n  whereas Firefox downloads them\n  asynchronously but still executes them\n  in the order they are attached in the\n  DOM.</p>\n  \n  <p>In Internet Explorer this means your\n  scripts cannot have dependancies on\n  one another as the execution order\n  will vary depending on network\n  traffic, caches, etc.</p>\n</blockquote>\n\n<p>Consider using a Javascript loader.  It will let you specify script dependencies and order of execution while also loading your scripts asynchronously for speed as well as smoothing out some of the browser differences.</p>\n\n<p>This is a pretty good overview of a few of them: <a href=\"http://www.netmagazine.com/features/essential-javascript-top-five-script-loaders\">Essential JavaScript: the top five script loaders</a>.</p>\n\n<p>I've used both RequireJS and LabJS.  In my opinion, LabJS is a little less opinionated.</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>Code to provide:</p>\n\n<pre><code>&lt;script language=\"javascript\" type=\"text/javascript\"&gt;\ndocument.write(\"&lt;script language='javascript' type='text/javascript'&gt;function callGeneratedContent() { alert('during'); }&lt;\\x2Fscript&gt;\");\ndocument.write(\"&lt;script language='javascript' type='text/javascript' src='before.js'&gt;&lt;\\x2Fscript&gt;\");\ndocument.write(\"&lt;script language='javascript' type='text/javascript' src='after.js'&gt;&lt;\\x2Fscript&gt;\");\n&lt;/script&gt;\n</code></pre>\n\n<p>In before.js:</p>\n\n<pre><code>alert(\"Before\");\ncallGeneratedContent();\n</code></pre>\n\n<p>In after.js:</p>\n\n<pre><code>alert(\"After\");\n</code></pre>\n\n<p>You have to put the generated line first, otherwise FF will complain because it executes before.js before seeing the function definition.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can force secuential execution by defining \"onload\" (or similar) events on the scripts and inject the next one in the event function.\nIt is not trivial, but there are plenty of examples out there, here is one.</p>\n\n<p><a href=\"http://www.phpied.com/javascript-include-ready-onload/\" rel=\"nofollow\">http://www.phpied.com/javascript-include-ready-onload/</a></p>\n\n<p>I think popular libraries like jQuery or prototype can help with this.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've found an answer more to my liking:</p>\n\n<pre><code>&lt;script language=\"javascript\" type=\"text/javascript\"&gt;\ndocument.write(\"&lt;script language='javascript' type='text/javascript' src='before.js'&gt;&lt;\\/sc\" + \"ript&gt;\");\ndocument.write(\"&lt;script defer language='javascript' type='text/javascript'&gt;alert('during');&lt;\\/sc\" + \"ript&gt;\");\ndocument.write(\"&lt;script defer language='javascript' type='text/javascript' src='after.js'&gt;&lt;\\/sc\" + \"ript&gt;\");\n&lt;/script&gt;\n</code></pre>\n\n<p>This will defer the loading of both <em>during</em> and <em>after</em> until the page has finished loading.</p>\n\n<p>I think this is as good as I can get. Hopefully, someone will be able to give a better answer.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>How about that:</p>\n\n<pre><code>&lt;script&gt;\ndocument.write(\"&lt;script src='before.js'&gt;&lt;\\/script&gt;\");\n&lt;/script&gt;\n\n&lt;script &gt;\ndocument.write(\"&lt;script&gt;alert('during');&lt;\\/script&gt;\");\n&lt;/script&gt;\n\n&lt;script&gt;\ndocument.write(\"&lt;script src='after.js'&gt;&lt;\\/script&gt;\");\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have the following script, where the first and third <code>document.writeline</code> are static and <strong>the second is generated</strong>:</p>\n\n<pre><code>&lt;script language=\"javascript\" type=\"text/javascript\"&gt;\ndocument.write(\"&lt;script language='javascript' type='text/javascript' src='before.js'&gt;&lt;\\/sc\" + \"ript&gt;\");\ndocument.write(\"&lt;script language='javascript' type='text/javascript'&gt;alert('during');&lt;\\/sc\" + \"ript&gt;\");\ndocument.write(\"&lt;script language='javascript' type='text/javascript' src='after.js'&gt;&lt;\\/sc\" + \"ript&gt;\");\n&lt;/script&gt;\n</code></pre>\n\n<p>Firefox and Chrome will display <em>before</em>, <em>during</em> and <em>after</em>, while Internet Explorer first shows <em>during</em> and only then does it show <em>before</em> and <em>after</em>.</p>\n\n<p>I've come across <a href=\"http://www.elctech.com/blog/nesting-document-write\">an article that states</a> that I'm not the first to encounter this, but that hardly makes me feel any better.</p>\n\n<p><strong>Does anyone know how I can set the order to be deterministic in all browsers, or hack IE to work like all the other, sane browsers do?</strong></p>\n\n<p><strong>Caveats</strong>: The code snippet is a very simple repro. It is generated on the server and the second script is the only thing that changes. It's a long script and the reason there are two scripts before and after it are so that the browser will cache them and the dynamic part of the code will be as small as possible. It may also appears many times in the same page with different generated code.</p>\n",
            "last_activity_date": 1376966352,
            "question_id": 94141,
            "score": 32,
            "tags": [
                "javascript",
                "cross-browser",
                "browser"
            ],
            "title": "JavaScript&#39;s document.write Inline Script Execution Order"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Yes you can create a binary format. V8 allows you to pre-compile JavaScript. Note that this might have a bunch of weird side-effects on assumptions made by node core.</p>\n\n<blockquote>\n  <p>Distributing source code means clients can easily steal our solution and stop paying licensing fees.</p>\n</blockquote>\n\n<p>Just because you distribute the binary doesn't protect you againsts theft. They can still steal the binary code or disassemble it. This is protection through obscurity which is no protection at all.</p>\n\n<p>It's better to give them a thin client app that talks to your server and keep your server code secure by not giving it away.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Yes it is possible, use this <a href=\"https://github.com/tarruda/node/tree/custom-v8-dist\">branch</a>(based on 0.8.18) and any js code you put in 'deps/v8/src/extra-snapshot.js' will be ahead-of-time compiled to machine code and embedded in v8 as part of the normal builtin object initialization. You will need to build nodejs for each platform you intend to deploy your product.</p>\n\n<p>The snapshotted  code runs very early in the v8 initialization and you cannot access builtin objects in the 'module body'. What you can do is put all your code inside a global initialization function to be called later. Ex:</p>\n\n<pre><code>// 'this' points to the same as the object referenced by \n// 'global' in normal nodejs code.\n// at this point it has nothing defined in it, so in order to use\n// global objects a reference to it is needed.\nvar global = this;\nglobal.initialize = function() {\n  // You have to define all global objects you use in your code here;\n  var Array = global.Array;\n  var RegExp = global.RegExp;\n  var Date = global.Date;\n  // See ECMAScript v5 standard global objects for more\n  // Also define nodejs global objects:\n  var console = global.console;\n  var process = global.process;\n  // Your code goes embedded here\n};\n</code></pre>\n\n<p>Also, this assumes your entire code is defined in a single file, so if your project uses nodejs module system(require) you need to write a script that will combine all your files in one and wrap each file in a closure that will trick your code into thinking it is a normal nodejs module. Probably each module closure would expose a require function, and this function would have to decide when to delegate to the standard 'global.require' or return exports from your other embedded modules. See how javascript module systems are implemented for ideas(requirejs is a good example).</p>\n\n<p>This will make your code harder to debug since you wont see stack traces for native code.</p>\n\n<p>UPDATE:</p>\n\n<p>Even using v8 snapshots the code gets embedded in the node.js binary because v8 prefers lazy compilation. See <a href=\"http://stackoverflow.com/questions/12653479/why-does-v8-saves-the-source-code-of-native-javascript-in-generated-binaries\">this</a> for more information.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>I'm currently investigating the same thing and am looking at <a href=\"https://github.com/crcn/nexe\" rel=\"nofollow\">nexe</a> which claims to be able to \"create a single executable out of your node.js apps\". </p>\n\n<p>Can't tell you if it's any good just yet, but thought it'd be worth to share already.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>V8 generates native machine code internally and executes it. Look here: <a href=\"https://github.com/v8/v8-git-mirror/blob/master/src/compiler.cc#L1178\" rel=\"nofollow\">https://github.com/v8/v8-git-mirror/blob/master/src/compiler.cc#L1178</a> . This feature is used in <a href=\"http://enclosejs.com\" rel=\"nofollow\">EncloseJS</a>. EncloseJS parses the sources of your node.js project, bundles dependencies, and makes an executable binary. The sources are not included in the binary - only compiled machine code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><strong>What:</strong> Can NodeJS apps be distributed as binary? ie. you compile the .js app via V8 into its native binary, and distribute the binary to clients? (if you had total access to the NodeJS server)... or is minifying the code all you can do?</p>\n\n<p><strong>Why:</strong> We build serverside applications in NodeJS for clients, that have often to be hosted on the client's servers. Distributing source code means clients can easily steal our solution and stop paying licensing fees. This opens up the possibility of easy reverse-engineering or reuse of our apps without our awareness.</p>\n",
            "last_activity_date": 1424108802,
            "question_id": 9413123,
            "score": 29,
            "tags": [
                "javascript",
                "security",
                "node.js",
                "deployment",
                "obfuscation"
            ],
            "title": "Secure distribution of NodeJS applications"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I do this with <a href=\"https://github.com/janl/mustache.js/\" rel=\"nofollow\">mustache.js</a> and templates (you could use any JavaScript templating library).</p>\n\n<p>In my view, I have something like this:</p>\n\n<pre><code>&lt;script type=\"text/x-mustache-template\" id=\"modalTemplate\"&gt;\n    &lt;%Html.RenderPartial(\"Modal\");%&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>...which lets me keep my templates in a partial view called <code>Modal.ascx</code>:</p>\n\n<pre><code>&lt;%@ Control Language=\"C#\" Inherits=\"System.Web.Mvc.ViewUserControl\" %&gt;\n    &lt;div&gt;\n        &lt;div class=\"modal-header\"&gt;\n            &lt;a class=\"close\" data-dismiss=\"modal\"&gt;&amp;times;&lt;/a&gt;\n            &lt;h3&gt;{{Name}}&lt;/h3&gt;\n        &lt;/div&gt;\n        &lt;div class=\"modal-body\"&gt;\n            &lt;table class=\"table table-striped table-condensed\"&gt;\n                &lt;tbody&gt;\n                    &lt;tr&gt;&lt;td&gt;ID&lt;/td&gt;&lt;td&gt;{{Id}}&lt;/td&gt;&lt;/tr&gt;\n                    &lt;tr&gt;&lt;td&gt;Name&lt;/td&gt;&lt;td&gt;{{Name}}&lt;/td&gt;&lt;/tr&gt;\n                &lt;/tbody&gt;\n            &lt;/table&gt;\n        &lt;/div&gt;\n        &lt;div class=\"modal-footer\"&gt;\n            &lt;a class=\"btn\" data-dismiss=\"modal\"&gt;Close&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n</code></pre>\n\n<p>I create placeholders for each modal in my view:</p>\n\n<pre><code>&lt;%foreach (var item in Model) {%&gt;\n    &lt;div data-id=\"&lt;%=Html.Encode(item.Id)%&gt;\"\n         id=\"modelModal&lt;%=Html.Encode(item.Id)%&gt;\" \n         class=\"modal hide fade\"&gt;\n    &lt;/div&gt;\n&lt;%}%&gt;\n</code></pre>\n\n<p>...and make ajax calls with jQuery:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var modalTemplate = $(\"#modalTemplate\").html()\n    $(\".modal[data-id]\").each(function() {\n        var $this = $(this)\n        var id = $this.attr(\"data-id\")\n        $this.on(\"show\", function() {\n            if ($this.html()) return\n            $.ajax({\n                type: \"POST\",\n                url: \"&lt;%=Url.Action(\"SomeAction\")%&gt;\",\n                data: { id: id },\n                success: function(data) {\n                    $this.append(Mustache.to_html(modalTemplate, data))\n                }\n            })\n        })\n    })\n&lt;/script&gt;\n</code></pre>\n\n<p>Then, you just need a trigger somewhere:</p>\n\n<pre><code>&lt;%foreach (var item in Model) {%&gt;\n    &lt;a data-toggle=\"modal\" href=\"#modelModal&lt;%=Html.Encode(item.Id)%&gt;\"&gt;\n        &lt;%=Html.Encode(item.DutModel.Name)%&gt;\n    &lt;/a&gt;\n&lt;%}%&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Yes we have done this.  </p>\n\n<p>In your Index.cshtml you'll have something like..</p>\n\n<pre><code>&lt;div id='gameModal' class='modal hide fade in' data-url='@Url.Action(\"GetGameListing\")'&gt;\n   &lt;div id='gameContainer'&gt;\n   &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;button id='showGame'&gt;Show Game Listing&lt;/button&gt;\n</code></pre>\n\n<p>Then in JS for the same page (inlined or in a separate file you'll have something like this..</p>\n\n<pre><code>$(document).ready(function() {\n   $('#showGame').click(function() {\n        var url = $('#gameModal').data('url');\n\n        $.get(url, function(data) {\n            $('#gameContainer').html(data);\n\n            $('#gameModal').modal('show');\n        });\n   });\n});\n</code></pre>\n\n<p>With a method on your controller that looks like this..</p>\n\n<pre><code>[HttpGet]\npublic ActionResult GetGameListing()\n{\n   var model = // do whatever you need to get your model\n   return PartialView(model);\n}\n</code></pre>\n\n<p>You will of course need a view called GetGameListing.cshtml inside of your Views folder.. </p>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>I have achieved this by using one nice example i have found <a href=\"http://ricardocovo.com/2012/04/06/asp-mvc3-editing-records-with-jqueryui-dialogs-and-ajaxforms-razor-version/\" rel=\"nofollow\">here</a>.\nI have replaced the jquery dialog used in that example with the Twitter Bootstrap Modal windows.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I was looking to using the <a href=\"http://twitter.github.com/bootstrap/javascript.html\">Twitter Bootstrap Modal windows</a> as a partial view.  However, I do not really think that it was designed to be used in this fashion; it seems like it was meant to be used in a fairly static fashion.  Nevertheless, I think it'd be cool to be able to use it as a partial view.</p>\n\n<p>So for example, let's say I have a list of Games.  Upon clicking on a link for a given game, I'd like to request data from the server and then display information about that game in a modal window \"over the top of\" the present page.</p>\n\n<p>I've done a little bit of research and found <a href=\"http://stackoverflow.com/questions/10626885/passing-data-to-a-bootstrap-modal\">this post</a> which is similar but not quite the same.  </p>\n\n<p>Has anyone tried this with success or failure?  Anyone have something on jsFiddle or some source they'd be willing to share?</p>\n\n<p>Thanks for your help.</p>\n",
            "last_activity_date": 1406152986,
            "question_id": 11231862,
            "score": 25,
            "tags": [
                "javascript",
                "asp.net-mvc",
                "twitter-bootstrap",
                "modal-dialog"
            ],
            "title": "Using Bootstrap Modal window as PartialView"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You could use the navigator object: <a href=\"http://www.w3schools.com/js/js_browser.asp\" rel=\"nofollow\">http://www.w3schools.com/js/js_browser.asp</a> and then use if statements based on the properties of navigator.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would use the <code>navigator.useragent</code> property to get the useragent-string, parse it, and detect the OS.</p>\n\n<p><strike><a href=\"http://www.quirksmode.org/js/detect.html\">Here</a> is one example of how you can do it.</strike></p>\n\n<p><strong>Update:</strong></p>\n\n<p>Due to the popularity of this question, I thought I would add some additional information to my answer.</p>\n\n<p>In general, browser sniffing is almost never the best way to go. Why? Well, there are many reasons, but here are two good ones:</p>\n\n<ol>\n<li>In almost all cases when people turn to browser sniffing, <strong>feature detection would be a better option</strong>. There are rare edge cases where it might be appropriate to act depending on what OS/browser the user might be using, but for the most part, using a library like <a href=\"http://modernizr.com/\">Modernizr</a> to detect support for a specific feature is a better way to go. Trying to adapt your site/application to specific browsers rather than the features they support is a slippery slope. Instead check if the browser support the features you need, and polyfill or provide nice fallbacks when support is lacking.</li>\n<li><strong>Browser sniffing is extremely complicated</strong>. Why? Because almost every browser lie in their user agent string or lack sufficient information to allow a certain identification.</li>\n</ol>\n\n<p>With that said, if you really really need to use browser/OS detection, then don't reinvent the wheel, and don't try to do it on your own - you will be in for a world of pain and obscure caveats! I would suggest you use a library like <a href=\"https://github.com/NielsLeenheer/WhichBrowser\">WhichBrowser</a>, that will provide you with a handy JavaScript object containing information about the os, browser, rendering engine and device.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>var isMobile = {\n    Android: function() {\n        return /Android/i.test(navigator.userAgent);\n    },\n    BlackBerry: function() {\n        return /BlackBerry/i.test(navigator.userAgent);\n    },\n    iOS: function() {\n        return /iPhone|iPad|iPod/i.test(navigator.userAgent);\n    },\n    Windows: function() {\n        return /IEMobile/i.test(navigator.userAgent);\n    },\n    any: function() {\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Windows());\n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 75
                }
            ],
            "body": "<p>I need to change out some buttons and text on a mobile website depending on whether the user is viewing it on an Android or iOS browser. Is there a reliable way to perform the check?</p>\n",
            "last_activity_date": 1397248200,
            "question_id": 12606245,
            "score": 24,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "browser"
            ],
            "title": "Detect if browser is running on an Android or iOS device"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Yup, it's a sticky problem --- kind of like the quoting problems in shell scripts which become a rats' nest of quoted quotes.</p>\n\n<p>My solution is to use jade (a la haml) in expressjs (server-side) to output handlebars based templates for the client.  This way, the server uses one syntax (jade), and the client uses another (handlebars).  I am at the same crossroads as you, so I have the same challenge.</p>\n\n<p>Of course, jade is not essential (though it's ready-made for expressjs).  You could choose any (non-handlebars) template engine for the server, and/or you could use handlebars on the server with your non-handlebars templating on the client --- as long as the two syntaxes of your chosen templating engines do not collide.  Since I'm using emberjs on the client and it uses handlebars syntax (by default), I prefer using emberjs + handlebars syntax on the client.  So expressjs + jade became a natural fit for the server.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p><strong>Shameless self-promotion!</strong></p>\n\n<p>I wanted to do this same client/server sharing thing, so I wrote a little npm package to assist:</p>\n\n<p><strong><a href=\"https://github.com/jwietelmann/node-handlebars-precompiler\" rel=\"nofollow\">node-handlebars-precompiler</a></strong></p>\n\n<p>I whipped it up in a couple hours based on the command-line compiler in wycats' handlebars repo. It's not the greatest code in the world, but it's been getting the job done for me very well.</p>\n\n<p><strong>EDIT: I am no longer maintaining this package. If you would like to take over, please contact me via Github. I mainly use Jade templates now, so it doesn't make sense for me to continue as the maintainer.</strong></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I have worked around this by passing client-side templates through server-side templates.</p>\n\n<p>So on the server-side read all your client-side templates to an array and pass it to your render function on the server-side</p>\n\n<p>In your route handler do something like:</p>\n\n<pre><code>readTemplates(function(err, clientTemplates) {\n  res.render(\"page\", {\n    clientTemplates: clientTemplates;   \n  });\n});\n</code></pre>\n\n<p>And then in layout.hbs:</p>\n\n<pre><code>{{#each clientTemplates}}\n&lt;script type=\"text/handlebars id=\"{{this.filename}}\" &gt;\n{{{this.template}}}\n&lt;/script&gt;\n{{/each}}\n</code></pre>\n\n<p>Here I'm using file names without extensions as the template id so that they can be referenced from Backbone views. Oh, and remember to implement caching for production mode.</p>\n\n<p>Yeah, this sucks.</p>\n\n<p>I think we should write a Handlebars/Express/Connect helper for this.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You should use pre-compiled client templates.  They are faster executing and allow you to use the same template language on the server and client.</p>\n\n<ol>\n<li>Install handlebars globally <code>npm install handlebars -g</code></li>\n<li>Precompile your templates <code>handlebars client-template1.handlebars -f templates.js</code></li>\n<li>Include templates.js <code>&lt;script src=\"templates.js\"&gt;&lt;/script&gt;</code></li>\n<li>Execute the template <code>var html = Handlebars.templates[\"client-template1\"](context);</code></li>\n</ol>\n\n<p><a href=\"http://stackoverflow.com/a/13884587/8360\">http://stackoverflow.com/a/13884587/8360</a></p>\n",
                    "is_accepted": false,
                    "score": 51
                },
                {
                    "body": "<p>An easy way to do this is to just append a <code>\\</code> before the <code>{{</code> in a Handlebars file. For example: </p>\n\n<pre><code>&lt;script type=\"text/x-template\" id=\"todo-item-template\"&gt;\n&lt;div class=\"todo-view\"&gt;\n    &lt;input type=\"checkbox\" class=\"todo-checkbox\" \\{{checked}}&gt;\n    &lt;span class=\"todo-content\" tabindex=\"0\"&gt;\\{{text}}&lt;/span&gt;\n&lt;/div&gt;\n\n&lt;div class=\"todo-edit\"&gt;\n    &lt;input type=\"text\" class=\"todo-input\" value=\"\\{{text}}\"&gt;\n&lt;/div&gt;\n\n&lt;a href=\"#\" class=\"todo-remove\" title=\"Remove this task\"&gt;\n    &lt;span class=\"todo-remove-icon\"&gt;&lt;/span&gt;\n&lt;/a&gt;\n</code></pre>\n\n<p></p>\n\n<p>The above code will be rendered on the client with the {{..}} tags preserved. </p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>You have 2 options. The second is THE best way to go:</p>\n\n<p>1) Escape the mustaches</p>\n\n<pre><code>&lt;script type=\"text/x-handlebars\" data-hbs=\"example\"&gt;\n  &lt;p&gt;\\{{name}}&lt;/p&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>2) Precompile</strong></p>\n\n<p>This will compile the template on the server before it goes to the client. This will make the template ready to use and reduces the burden on the browser.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an app in Node.js using Expressjs and Handlebars as the template engine.</p>\n\n<p>Expressjs uses layouts and then renders views.  The layout (layout.hbs) looks like this:</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n    &lt;head&gt;\n    &lt;/head&gt;\n  &lt;body&gt;\n    {{{body}}}\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>The <code>{{{body}}}</code> is replaced server-side, within node.js when you access a route.  For example:</p>\n\n<pre><code>app.get('/', function(req, res){\n   res.render('index'})\n})\n</code></pre>\n\n<p>Will replace the <code>{{{body}}}</code> tag with the contents of index.hbs.</p>\n\n<p>Now, on the client side I'm using Backbone.js and want to use Handlebars for the views controlled via Backbone.  The problem is that because these pages are already rendered through Handlebars, when I attempt to use Handlebars within it (or Handlebars within Handlebars) it doesn't work.  There are no errors, it simply just doesn't replace tags with data.  </p>\n\n<p>Has anyone encountered this before or have any idea a work around?</p>\n\n<p>Thank you!</p>\n",
            "last_activity_date": 1407532348,
            "question_id": 10037936,
            "score": 21,
            "tags": [
                "javascript",
                "node.js",
                "handlebars.js",
                "express"
            ],
            "title": "Node.js with Handlebars.js on server and client"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>As indicated here <a href=\"http://stackoverflow.com/a/1632004/330867\">http://stackoverflow.com/a/1632004/330867</a>, you can implement it by \"filtering\" what is originating the exit of this page.</p>\n\n<p>As mentionned in the comments, here's a <strong>new version</strong> of the code in the other question, which also include the ajax request you make in your question :</p>\n\n<pre><code>var canExit = true;\n\n// For every function that will call an ajax query, you need to set the var \"canExit\" to false, then set it to false once the ajax is finished.\n\nfunction checkCart() {\n  canExit = false;\n  $.ajax({\n    url : 'index.php?route=module/cart/check',\n    type : 'POST',\n    dataType : 'json',\n    success : function (result) {\n       if (result) {\n        canExit = true;\n       }\n    }\n  })\n}\n\n$(document).on('click', 'a', function() {canExit = true;}); // can exit if it's a link\n$(window).on('beforeunload', function() {\n    if (canExit) return null; // null will allow exit without a question\n    // Else, just return the message you want to display\n    return \"Do you really want to close?\";\n});\n</code></pre>\n\n<p><strong>Important</strong>: You shouldn't have a global variable defined (here <code>canExit</code>), this is here for simpler version.</p>\n\n<p>Note that you can't override completely the confirm message (at least in chrome). The message you return will only be prepended to the one given by Chrome. Here's the reason : <a href=\"http://stackoverflow.com/questions/276660/how-can-i-override-the-onbeforeunload-dialog-and-replace-it-with-my-own\">How can I override the OnBeforeUnload dialog and replace it with my own?</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try javascript into your Ajax</p>\n\n<pre><code>window.onbeforeunload = function(){\n  return 'Are you sure you want to leave?';\n};\n</code></pre>\n\n<p>Reference <a href=\"https://developer.mozilla.org/en/DOM/window.onbeforeunload\" rel=\"nofollow\">link</a></p>\n\n<p>Example 2:</p>\n\n<pre><code>document.getElementsByClassName('eStore_buy_now_button')[0].onclick = function(){\n    window.btn_clicked = true;\n};\nwindow.onbeforeunload = function(){\n    if(!window.btn_clicked){\n        return 'You must click \"Buy Now\" to make payment and finish your order. If you leave now your order will be canceled.';\n    }\n};\n</code></pre>\n\n<p>Here it will alert the user every time he leaves the page, until he clicks on the button.</p>\n\n<p>DEMO: <a href=\"http://jsfiddle.net/DerekL/GSWbB/show/\" rel=\"nofollow\">http://jsfiddle.net/DerekL/GSWbB/show/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><strong>jQuery Solution:</strong></p>\n\n<p>With <code>'beforeunload'</code> event attached, when you close the page, hits the back button or reload the page, a confirmation box will prompt to ask you whether you really want to go, choose ok to exit the page: cancel to stop the page from exit and stay on the same page.</p>\n\n<p>In addition, you are allow to add your own message inside the confirmation box :</p>\n\n<pre><code>$(window).bind('beforeunload', function(){\n    return '&gt;&gt;&gt;&gt;&gt;Before You Go&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; \\n Your custom message go here';\n});\n</code></pre>\n\n<p><strong>P.S:</strong> The <code>'beforeunload'</code> event is supported since jQuery 1.4.</p>\n\n<p><strong>Javascript:</strong></p>\n\n<p>For IE and FF &lt; 4, set <code>window.event.returnValue</code> to the string you wish to display, and then return it for Safari (use <code>null</code> instead to allow normal behavior):</p>\n\n<pre><code>window.onbeforeunload = function (e) {\n    var e = e || window.event;\n\n    // For IE and Firefox prior to version 4\n    if (e) {\n        e.returnValue = 'Any string';\n    }\n\n    // For Safari\n    return 'Any string';\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try this, loading data via <code>ajax</code> and displaying through return statement.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction closeWindow(){\n\n    var Data = $.ajax({\n        type : \"POST\",\n        url : \"file.txt\",  //loading a simple text file for sample.\n        cache : false,\n        global : false,\n        async : false,\n        success : function(data) {\n            return data;\n        }\n\n    }).responseText;\n\n\n    return \"Are you sure you want to leave the page? You still have \"+Data+\" items in your shopping cart\";\n}\n\nwindow.onbeforeunload = closeWindow;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can do this by using  in <strong>JQuery</strong>.</p>\n\n<p>For <strong>example</strong> , </p>\n\n<pre><code>&lt;a href=\"your URL\" id=\"navigate\"&gt; click here &lt;/a&gt;\n</code></pre>\n\n<p>Your <code>JQuery</code> will be,</p>\n\n<pre><code>$(document).ready(function(){\n\n    $('a').on('mousedown', stopNavigate);\n\n    $('a').on('mouseleave', function () {\n           $(window).on('beforeunload', function(){\n                  return 'Are you sure you want to leave?';\n           });\n    });\n});\n\nfunction stopNavigate(){    \n    $(window).off('beforeunload');\n}\n</code></pre>\n\n<p>And to get the <strong>Leave message alert</strong> will be,</p>\n\n<pre><code>$(window).on('beforeunload', function(){\n      return 'Are you sure you want to leave?';\n});\n\n$(window).on('unload', function(){\n\n         logout();\n\n});\n</code></pre>\n\n<p>This solution works in all browsers and I have tested it.</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>You can try '<code>onbeforeunload</code>' event. </p>\n\n<p>Also take a look at this-</p>\n\n<p><a href=\"http://stackoverflow.com/questions/6063522/jquery-beforeunload\">jQuery - beforeunload</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Credit should go here:\n<a href=\"http://stackoverflow.com/questions/15277403/how-to-detect-if-a-link-was-clicked-when-window-onbeforeunload-is-triggered\">how to detect if a link was clicked when window.onbeforeunload is triggered?</a></p>\n\n<p>Basically, the solution adds a listener to detect if a link or window caused the unload event to fire.</p>\n\n<pre><code>var link_was_clicked = false;\ndocument.addEventListener(\"click\", function(e) {\n   if (e.target.nodeName.toLowerCase() === 'a') {\n      link_was_clicked = true;\n   }\n}, true);\n\nwindow.onbeforeunload = function(e) {\n    if(link_was_clicked) {\n        return;\n    }\n    return confirm('Are you sure?');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>How can I display \"Are you sure you want to leave the page?\" when the user actually tries to close the page (click the X button on the browser window or tab) not when he tries to navigate away from the page (click on another link).</p>\n\n<p>My client wants a message to appear when the user tries to close the page \"Are you sure you want to leave the page? You still have items in your shopping cart.\"</p>\n\n<p>Unfortunately <code>$(window).bind('beforeunload')</code> doesn't fire only when the user closes the page.</p>\n\n<p><strong>jQuery:</strong></p>\n\n<pre><code>function checkCart() { \n  $.ajax({\n    url : 'index.php?route=module/cart/check',\n    type : 'POST',\n    dataType : 'json',\n    success : function (result) {\n       if (result) {\n        $(window).bind('beforeunload', function(){\n          return 'leave?';\n        });\n       }\n    }\n  })\n}\n</code></pre>\n",
            "last_activity_date": 1379886999,
            "question_id": 18783535,
            "score": 17,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jquery beforeunload when closing (not leaving) the page?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Looks like you should use the <code>Q.all</code> function to create a master promise corresponding to when all the getSizeSettings promises are fufilled.</p>\n\n<p><a href=\"https://github.com/kriskowal/q#combination\" rel=\"nofollow\">https://github.com/kriskowal/q#combination</a></p>\n\n<pre><code>var ps = [];\nfor (var i=0, l=pages.length; i&lt;l; i++) {\n   ps[i] = getSizeSettingsFromPage(pages[i], calculateRatio);   \n}\n\nQ.all(ps).then(function(){ callWhenReady() })\n</code></pre>\n\n<p>Most promise libraries should provide a similar method to do this kind of synchronization. If you ever come across one that does not what you could do is hook each individual promise to a callback that increments a shared counter when its called. When your counter reaches <code>n</code> you know that you already resolved all promises so you can have the incrementor callback call the \"real\" callback as well.</p>\n\n<pre><code>//If you did not have Q.all available\n//Or had to code this without a promise library\n\nvar to_go = pages.length;\nfor (var i=0, l=pages.length; i&lt;l; i++) {\n   getSizeSettingsFromPage(pages[i], calculateRatio)\n   .then(function(){\n       to_go--;\n       if(to_go == 0){\n           callWhenReady()\n       }\n   });\n}\n</code></pre>\n\n<p>Note that in these cases until now the async calls are allowed to run parallel. If you need them to run sequentially then usually the only way is to rewrite the for loop as a recursive function</p>\n\n<pre><code>var go = function(i){\n    if(i&gt;=pages.length){\n        return call_next_step()\n    }else{\n        return do_ith_calculation(i)\n        .then(function(){\n            return go(i+1)\n        })\n    }\n};\ngo(0);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>My suggestions to get this working with Q.js are below. The key is that anytime you want to do something asynchronously, you should return a promise, and once the task is completed you should resolve that promise. That allows the callers of the function to listen for the task to be completed and then do something else.</p>\n\n<p>As before, I have commented my changes with <code>// ***</code>. Let me know if you have any further questions.</p>\n\n<pre><code>        function traverseFiles() {\n            // *** Create an array to hold our promises\n            var promises = [ ];\n            for (var i=0, l=pages.length; i&lt;l; i++) {\n                // *** Store the promise returned by getSizeSettingsFromPage in a variable\n                promise = getSizeSettingsFromPage(pages[i]);\n                promise.then(function(values) {\n                    var width = values[0],\n                        height = values[1],\n                        filename = values[2];\n                    // *** When the promise is resolved, call calculateRatio\n                    calculateRatio(width, height, filename);\n                });\n                // *** Add the promise returned by getSizeSettingsFromPage to the array\n                promises.push(promise);\n            }\n            // *** Call checkWhenReady after all promises have been resolved\n            Q.all(promises).then(checkWhenReady);\n        }\n\n        function getSizeSettingsFromPage(file) {\n            // *** Create a Deferred\n            var deferred = Q.defer();\n            reader = new FileReader();\n            reader.onload = function(evt) {\n                var image = new Image();\n                image.onload = function(evt) {\n                    var width = this.width;\n                    var height = this.height;\n                    var filename = file.name;\n                    // *** Resolve the Deferred\n                    deferred.resolve([ width, height, filename ]);\n                };\n                image.src = evt.target.result;\n            };\n            reader.readAsDataURL(file);\n            // *** Return a Promise\n            return deferred.promise;\n        }\n</code></pre>\n\n<hr>\n\n<h2>Edit</h2>\n\n<p><code>defer</code> creates a <strong>Deferred</strong>, which contains two parts, a <code>promise</code> and the <code>resolve</code> function. The <code>promise</code> is returned by <code>getSizeSettingsFromPage</code>. Basically returning a promise is a way for a function to say \"I'll get back to you later.\" Once the function has completed it's task (in this case once the <code>image.onload</code> event has fired) the <code>resolve</code> function is used to resolve the promise. That indicates to anything waiting on the promise that the task has been completed.</p>\n\n<p>Here's a simpler example:</p>\n\n<pre><code>function addAsync(a, b) {\n    var deferred = Q.defer();\n    // Wait 2 seconds and then add a + b\n    setTimeout(function() {\n        deferred.resolve(a + b);\n    }, 2000);\n    return deferred.promise;\n}\n\naddAsync(3, 4).then(function(result) {\n    console.log(result);\n});\n// logs 7 after 2 seconds\n</code></pre>\n\n<p>The <code>addAsync</code> function adds two numbers but it waits 2 seconds before adding them. Since it's asynchronous, it returns a promise (<code>deferred.promse</code>) and resolves the promise after the 2 second wait (<code>deferred.resolve</code>). The <code>then</code> method can be called on a promise and passed a callback function to be executed after the promise has been resolved. The callback function is passed in the resolution value of the promise.</p>\n\n<p>In your case, we had an array of promises and we needed to wait for <em>all</em> of them to be done before executing a function, so we used <strong>Q.all</strong>. Here's an example:</p>\n\n<pre><code>function addAsync(a, b) {\n    var deferred = Q.defer();\n    // Wait 2 seconds and then add a + b\n    setTimeout(function() {\n        deferred.resolve(a + b);\n    }, 2000);\n    return deferred.promise;\n}\n\nQ.all([\n    addAsync(1, 1),\n    addAsync(2, 2),\n    addAsync(3, 3)\n]).spread(function(result1, result2, result3) {\n    console.log(result1, result2, result3);\n});\n// logs \"2 4 6\" after approximately 2 seconds\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 33
                }
            ],
            "body": "<p>Note: This question is also cross-posted in Q.js mailing list over <a href=\"https://groups.google.com/forum/#!topic/q-continuum/nY0R3010GM4\">here</a>.</p>\n\n<hr>\n\n<p>i had a situation with multiple asynchronous operations and the <a href=\"http://stackoverflow.com/a/13585086/80353\">answer I accepted</a> pointed out that using Promises using a library such as q.js would be more beneficial.</p>\n\n<p>I am convinced to refactor my code to use Promises but because the code is pretty long, i have trimmed the irrelevant portions and exported the crucial parts into a separate repo.</p>\n\n<p>The repo is <a href=\"https://github.com/simkimsia/learn-promises-javascript\">here</a> and the most important file is <a href=\"https://github.com/simkimsia/learn-promises-javascript/blob/master/testqjs.html\">this</a>.</p>\n\n<p>The requirement is that I want <strong>pageSizes</strong> to be non-empty after traversing all the dragged'n dropped files.</p>\n\n<p>The problem is that the FileAPI operations inside <strong>getSizeSettingsFromPage</strong> function causes <strong>getSizeSettingsFromPage</strong> to be async.</p>\n\n<p>So I cannot place <strong>checkWhenReady();</strong> like this.</p>\n\n<pre><code>function traverseFiles() {\n  for (var i=0, l=pages.length; i&lt;l; i++) {\n    getSizeSettingsFromPage(pages[i], calculateRatio);   \n  }\n  checkWhenReady(); // this always returns 0.\n}\n</code></pre>\n\n<p>This works, but it is not ideal. I prefer to call checkWhenReady just ONCE after all the <code>pages</code> have undergone this function calculateRatio successfully.</p>\n\n<pre><code>function calculateRatio(width, height, filename) {\n  // .... code \n  pageSizes.add(filename, object);\n  checkWhenReady(); // this works but it is not ideal. I prefer to call this method AFTER all the `pages` have undergone calculateRatio\n  // ..... more code...\n}\n</code></pre>\n\n<p><strong>How do I refactor the code to make use of Promises in Q.js?</strong></p>\n",
            "last_activity_date": 1394488653,
            "question_id": 13597909,
            "score": 16,
            "tags": [
                "javascript",
                "asynchronous",
                "callback",
                "task-queue"
            ],
            "title": "how to use q.js promises to work with multiple asynchronous operations"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can try to create frame buster buster, everything is described by Jeff Atwood in his blog post: <a href=\"http://www.codinghorror.com/blog/archives/001277.html\" rel=\"nofollow\">We Done Been ... Framed! - coddinghorror.com</a></p>\n\n<p>In short, you should implement something like this:</p>\n\n<pre><code>var prevent_bust = 0  \nwindow.onbeforeunload = function() { prevent_bust++ }  \nsetInterval(function() {  \n  if (prevent_bust &gt; 0) {  \n    prevent_bust -= 2\n    window.top.location = 'http://server-which-responds-with-204.com' \n    // replace your iframe with link to it\n  }  \n}, 1)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The problem with the above solution is that it can be removed using a simple:</p>\n\n<pre><code>if( top != self )\n    delete top.onbeforeunload;\n</code></pre>\n\n<p>Once that has been called, then the <code>prevent_bust</code> will never be incremented, and that means that the website will be freely re-directed without your consent or knowledge.  Bad deal.</p>\n\n<p>If you wanted a consistently functional version of that solution, I would recommend doing this instead:</p>\n\n<pre><code>// Create a random seed value, making it almost impossible to \n// determine what is being tested for.\nvar prevent_bust = Math.random() * 3000; \n\n// enclose everything in a function, so that it cannot be addressed\nfunction iniFunc ( init ) { \n    // The function is no longer in scope of the main window.\n    function onbeforeunload() { prevent_bust++ }\n    window.onbeforeunload = onbeforeunload;\n    setInterval( function() {\n        // make sure the function was not deleted.\n        if( window.onbeforeunload != onbeforeunload )\n        {\n            prevent_bust = init + 1;\n            window.onbeforeunload = onbeforeunload;\n        }\n        if (prevent_bust &gt; init ) {  // All comparison is to the random seed.\n            prevent_bust -= 2\n            window.top.location = 'http://server-which-responds-with-204.com/' \n            // Unfortunately, you have absolutely no idea which website caused\n            // the incrementation, so you cannot replace it with a link!\n            //\n            // You might try to simply ignore it and just use the iframe as is -- \n            // theoretically, they are no longer able to bust this frame. \n            // (this theory will be disproved below).\n       }\n   }, 1 );\n};\niniFunc( prevent_bust );\n</code></pre>\n\n<p>Unfortunately, this does cause leave one problem -- it is a trivial thing to retrieve the interval which has been set, unset it, and then re-direct the page:</p>\n\n<pre><code>// setTimeout will return the highest timeout which is not \"in use\", in this case,\n// it will be the original setInterval (from the above function) + 1.\n// Event if there are 1,000 intervals already set, it will be rather trivial to \n// clear them all.\nvar currentInterval = 10000;\n// window.setTimeout( gotoHREF, 100 );\n\n// clearInterval will not interfere with setTimeout, so we can clear all\n// of the Intervals already set.\nfor( var i = 0; i &lt; currentInterval; i++ ) top.clearInterval( i );\n\nfunction gotoHREF(){\n    top.location.href = \"http://&lt;my-url/&gt;\";\n}\n</code></pre>\n\n<p>Your best bet is actually to solve this issue server side (if you can).  If you have access to the server for the website which will hold iframes, create an interim, proxy location where you pull in the website's data and then strip the script tags:</p>\n\n<pre><code>// In php\n$dd = new DOMDocument();\n// file_get_contents will simply convert the entire web address into a String\n$dd-&gt;loadXML( file_get_contents( \"http://\" . $_GET[ 'loadedURL' ] ) );\n$scripts = $dd-&gt;getElementsByTagName( \"script\" );\n\n// iterate through the website and remove all script tags.\nfor( $i = 0; $i &lt; $scripts-&gt;length; $i++ )\n{\n    $current = $scripts-&gt;item( $i );\n    $current-&gt;parentNode-&gt;removeChild( $current );\n}\n\n// output it to the dummy page.\necho $dd-&gt;saveXML();\n</code></pre>\n\n<p>You would then use the tag:</p>\n\n<pre><code>&lt;iframe src=\"redirect.php?loadedURL=http://www.google.com\"&gt;&lt;/iframe&gt;\n</code></pre>\n\n<p>Unfortunately, this will mean that your iframe will be running without JavaScript which might cripple, if not completely lobotomize the website in question.  You'll also need to make sure that all of the src attributes are correctly modified for descendant nodes in the foreign site's HTML.</p>\n\n<p>On the other hand, you could have your server check the framed site and all of its JS pages to see if the RegExp top(.|[\\s*(\"|'))location (this will match top.location, top[\"location, and top[ 'location) exists (or if there are any references to top at all), and then use a link if it does exist and the site proper if it does not.  The detriment here is that then you are forcing the user to wait for the secondary site to load twice -- once on the server and once in their browser. (unless everything is done through JS, but that is generally more annoying, in my opinion).</p>\n\n<p>Personally, I'm of the opinion that the \"don't frame my site\" crowd can generally win most battles which involves the iframe directly.  On the other hand, if code is used to process the HTML before it is appended to a web page, then the other side stands more than a fighting chance.\n<br/>\n<br/>\n<br/>\n<br/>\nAs a side note, all of these can be accomplished through JavaScript and AJAX, but that will generally be a bit slower.  Use the server, if you can.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>If you are using HTML5 I would suggest making use of the new \"sandbox\" property BUT it is not yet compatible with all the browsers. <a href=\"http://www.w3schools.com/tags/att_iframe_sandbox.asp\" rel=\"nofollow\">http://www.w3schools.com/tags/att_iframe_sandbox.asp</a></p>\n\n<p>In my case I just added \"allow-forms\" and \"allow-scripts\" as the sandbox property values and the embedded site no longer redirect and still can run JavaScript </p>\n\n<p>using \"allow-top-navigation\" as value made the site redirect again!</p>\n\n<p>ex: <code>&lt;iframe sandbox=\"allow-forms allow-scripts\" ... /&gt;&lt;/iframe&gt;</code></p>\n\n<p>If anyone knows any Cons to using this approach I would love to know about it.</p>\n\n<p><em>Someone else with same answer: <a href=\"http://stackoverflow.com/a/9880360/1404129\">http://stackoverflow.com/a/9880360/1404129</a> (I ran into this answer later)</em></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Many sites have scripts similar to the one below. These are put to stop other people from framing the sites. </p>\n\n<pre><code>if (top.location != location) {\n  top.location.href = document.location.href;\n}\n</code></pre>\n\n<p>I need some way to realize that the iframe is trying to redirect, and if it is , I will remove the iFrame and instead place a link to the site. This way, I don't violate the usage policy of the framed website and also link to the site. I understand you can use the onbeforeunload event as discussed <a href=\"http://stackoverflow.com/questions/752465/preventing-child-iframe-from-breaking-out-of-frame\">here</a> and <a href=\"http://stackoverflow.com/questions/958997/frame-buster-buster-buster-code-needed\">here</a> but both seem really unethical. I remember reading somewhere about a library that does the exact same thing (digg does the same thing). Any leads? </p>\n",
            "last_activity_date": 1359500102,
            "question_id": 1794974,
            "score": 13,
            "tags": [
                "javascript",
                "iframe",
                "redirect"
            ],
            "title": "Using JS how can I stop child Iframes from redirecting or at least prompt users about the redirect"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>How about (within the plugin's scope):</p>\n\n<pre><code>var fill = function ()\n{\n    (function (color) \n    {\n        this.css ('backgrorund-color', color);\n        //.. your stuff here ...\n    }).apply (this, arguments);\n}\n\n$.fn.myplugin = function ()\n{\n    fill ('green');\n}\n</code></pre>\n\n<p>That way, fill will retain the jQuery context you're in, and is still private to your plugin</p>\n\n<hr>\n\n<p>Amended: the above is incorrect w.r.t. scoping, Try the following instead:</p>\n\n<pre><code>var fill = function (color)\n{\n    if (!$this) return; // break if not within correct context\n\n    $this.css ('backgrorund-color', color);\n    //.. your stuff here ...\n}\n\n$.fn.myplugin = function ()\n{\n    var $this = $(this); // local ref to current context\n    fill ('green');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Unfortunately, \"private\" methods (or any property for that matter) can <em>never</em> be called with a \"this\" prefix in javascript. Anything which is called like <code>this.myFunc(myArgs)</code> must be publicly available.</p>\n\n<p>And \"private\" methods can only be called from within the scope in which they were defined.</p>\n\n<p>Your original solution is the only one that will work. Yes, it's a pain having to pass in <code>this</code>, but there's no more verbosity than there would be if your impossible request was possible:</p>\n\n<pre><code>this.fill('green');\n//or\nfill(this,'green');\n</code></pre>\n\n<p>As you can see, they both take up exactly the same number of characters in your code.</p>\n\n<p>Sorry to say, but you're stuck with this as a solution, unless you want to create a new namespace and make them <em>not</em> private - which is simply going to add to the amount of code you need to write, i.e. what you indirectly called \"not directly exposed\":</p>\n\n<pre><code>this.myplugin.fill('green');\n</code></pre>\n\n<p>...is more verbose, thus kind of defeats the purpose.</p>\n\n<p>Javascript is not like other languages, there are no \"private\" members per-se, only members accessible within closures, which can sometimes be used in a similar way to private members, but is more of a \"workaround\", and not the \"real-deal\" private members you are looking for.</p>\n\n<p>It can be difficult to come to terms with this (I often struggle), but <em>don't</em> try to mould javascript into what you understand from other languages, take it for what it is...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>One thing first</strong>: if you would like to call something like <code>this.fill('red');</code> where <strong>this</strong> is an instance of jQuery, you have to extend the jQuery prototype and make <code>fill()</code> \"public\". jQuery provides guidelines for extending it's prototype using so called \"plugins\" that can be added using <code>$.fn.fill</code>, which is the same as <code>jQuery.prototype.fill</code>.</p>\n\n<p>In jQuery callbacks, <strong>this</strong> is often a reference to the HTML Element, and you can't add prototypes to those (yet). That is one of the reason why jQuery wraps elements and return jQuery instances that can be easily extended.</p>\n\n<p>Using the <code>(function(){})();</code> syntax, you can create and execute \"private\" javascript on the fly, and it all disappears when it's done. Using this technique, you can create your own jQuery-like syntax that wraps jQuery into your own private chainable object.</p>\n\n<pre><code>(function(){\n    var P = function(elem) {\n        return new Private(elem);\n    };\n    var Private = function(elem) {\n        this.elem = jQuery(elem);\n    }\n    Private.prototype = {\n        elem: null,\n        fill: function(col) {\n            this.elem.css('background',col);\n            return this;\n        },\n        color: function(col) {\n            this.elem.css('color', col);\n            return this;\n        }\n    }\n\n    $.fn.myplugin = function() {\n        P(this).fill('red');\n    };\n    $.fn.myotherplugin = function() {\n        P(this).fill('yellow').color('green');\n    };\n\n})();\n\n$('.foo').myplugin();\n$('.bar').myotherplugin();\n\nconsole.log(typeof P === 'undefined') // should print 'true'\n</code></pre>\n\n<p>This way, the P stands for your own toolbox of \"private\" functions. They won't be available anywhere else in the code or in the jQuery namespace unless you attach them somewhere. You can add as many methods as you like in the Private object, and as long as you return <strong>this</strong>, you can also chain them jQuery-style as I did in the example.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You might want to take a look at how the <a href=\"http://jqueryui.com/docs/Developer_Guide\" rel=\"nofollow\">jQuery UI Widget Factory</a> is implemented.</p>\n\n<p>The basic approach is like this:</p>\n\n<pre><code>(function($){\n    $.fn.myplugin = function(method)\n    {\n        if (mp[method]) // map $('foo').myplugin('bar', 'baz') to mp.bar('baz')\n        {\n            return mp[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        }\n        else if (typeof method === 'object' || ! method)\n        {\n            return mp.init.apply(this, arguments); // if called without arguments, init\n        }\n        else\n        {\n            $.error('Method ' +  method + ' does not exist on $.myplugin');\n        }\n    };\n\n    // private methods, internally accessible via this.foo, this.bar\n    var foo = function() { \u2026 };\n    var bar = function() { \u2026 };\n\n    var private = { // alternative approach to private methods, accessible via this.private.foo\n        foo : function() { \u2026 },\n        bar : function() { \u2026 }\n    }\n\n    var mp = { // public methods, externally accessible via $.myplugin('foo', 'bar')\n        init : function( options )\n        {\n            return this.each(function()\n            {\n                // do init stuff\n            }\n        },\n        foo : function() { \u2026 },\n        bar : function() { \u2026 }\n    };\n})(jQuery);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I've been developing jQuery plugins for quite some time now, and I like to think I know how to design one well by now. One issue keeps nagging me though, and that is how to deal with private functions in a powerful yet elegant manner.</p>\n\n<p>My plugins generally look something like this:</p>\n\n<pre><code>(function($) {\n\n  $.fn.myplugin = function(...) {\n    ...\n    // some shared functionality, for example:\n    this.css('background-color', 'green');\n    ...\n  };\n  $.fn.mypluginAnotherPublicMethod = function(...) {\n    ...\n    // some shared functionality, for example:\n    this.css('background-color', 'red');\n    ...\n  };\n\n}(jQuery));\n</code></pre>\n\n<p>Now my question is: how to neatly DRY up that shared functionality? An obvious solution would be to put it in a function within the plugin's namespace:</p>\n\n<pre><code>var fill = function($obj, color) {\n  $obj.css('background-color', color);\n};\n</code></pre>\n\n<p>Although this solution is effective and nicely namespaced, I really dislike it. For one simple reason: I have to pass it the jQuery object. I.e. I have to call it like this: <code>fill(this, 'red');</code>, while I would like to call it like this: <code>this.fill('red');</code></p>\n\n<p>Of course we could achieve this result by simply putting <code>fill</code> into <code>jQuery.fn</code>. But that feels very uncomfortable. Imagine having ten plugins developed based on this approach and each plugin putting five of those 'private' functions into the jQuery function namespace. It ends up in a big mess. We could mitigate by prefixing each of these functions with the name of the plugin they belong to, but that doesn't really make it more attractive. These functions are supposed to be private to the plugin, so we do not want to expose them to the outside world at all (at least not directly).</p>\n\n<p>So there's my question: does anyone of you have suggestions for how to get the best of both worlds. That is; plugin code being able to call 'private' plugin functions in a way similar to <code>this.fill('red')</code> (or <code>this.myplugin.fill('red')</code> or even <code>this.myplugin().fill('red')</code> etc.), while preventing jQuery function namespace pollution. And of course it should be light-weight, as these private functions might be called very frequently.</p>\n\n<hr>\n\n<p><strong>UPDATE</strong>: Thanks for your suggestions.</p>\n\n<p>I especially like David's idea of defining an object type that holds the 'private' functions and wraps a jQuery object. The only problem with it is that it still disallows me from chaining 'private' and 'public' functions. Which was big reason to want a syntax like <code>this.fill('red')</code> to begin with.</p>\n\n<p>I ended up with a solution which I consider not tremendously elegant, but appealing to the 'best of both worlds' cause:</p>\n\n<pre><code>$.fn.chain = function(func) {\n    return func.apply(this, Array.prototype.slice.call(arguments, 1));\n};\n</code></pre>\n\n<p>Which allows for constructs like:</p>\n\n<pre><code>this.\n    find('.acertainclass').\n    chain(fill, 'red').\n    click(function() {\n        alert(\"I'm red\");\n    });\n</code></pre>\n\n<p>I cross-posted my question in other places, which also collected some interesting responses:</p>\n\n<ul>\n<li><a href=\"http://forum.jquery.com/topic/jquery-plugin-design-pattern-common-practice-for-dealing-with-private-functions\">http://forum.jquery.com/topic/jquery-plugin-design-pattern-common-practice-for-dealing-with-private-functions</a></li>\n<li><a href=\"http://groups.google.com/group/jquery-en/browse_thread/thread/fa8ccef21ccc589a\">http://groups.google.com/group/jquery-en/browse_thread/thread/fa8ccef21ccc589a</a></li>\n</ul>\n",
            "last_activity_date": 1343163159,
            "question_id": 2061501,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "design-patterns",
                "design",
                "plugins"
            ],
            "title": "jQuery plugin design pattern (common practice?) for dealing with private functions"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Should just be something like:</p>\n\n<pre><code>// Gets the number of elements with class yourClass\nvar numItems = $('.yourclass').length\n</code></pre>\n\n<p><br /></p>\n\n<hr>\n\n<p><br />\nAs a side-note, it is often beneficial to check the length property before chaining a lot of functions calls on a jQuery object, to ensure that we actually have some work to perform. See below:</p>\n\n<pre><code>var $items = $('.myclass');\n// Ensure we have at least one element in $items before setting up animations\n// and other resource intensive tasks.\nif($items.length)\n{\n  $items.animate(/* */)\n    // It might also be appropriate to check that we have 2 or more\n    // elements returned by the filter-call before animating this subset of \n    // items.\n    .filter(':odd')\n      .animate(/* */)\n      .end()\n    .promise()\n    .then(function () { \n       $items.addClass('all-done');\n    });\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 260
                },
                {
                    "body": "<pre><code>var count = $('.' + myclassname).length;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>for counting:</p>\n\n<p><code>$('.yourClass').length;</code></p>\n\n<p>should work fine.</p>\n\n<p>storing in a variable is as easy as:</p>\n\n<p><code>var count = $('.yourClass').length;</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Getting a count of the number of elements that refer to the same class is as simple as this</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;script src=\"http://code.jquery.com/jquery-1.4.2.min.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\"&gt;\n\n            $(document).ready(function() {\n                alert( $(\".red\").length );\n            });\n\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n\n        &lt;p class=\"red\"&gt;Test&lt;/p&gt;\n        &lt;p class=\"red\"&gt;Test&lt;/p&gt;\n        &lt;p class=\"red anotherclass\"&gt;Test&lt;/p&gt;\n        &lt;p class=\"red\"&gt;Test&lt;/p&gt;\n        &lt;p class=\"red\"&gt;Test&lt;/p&gt;\n        &lt;p class=\"red anotherclass\"&gt;Test&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>HTML:</p>\n\n<pre><code>&lt;div&gt;\n    &lt;img src='' class='class' /&gt;\n    &lt;img src='' class='class' /&gt;\n    &lt;img src='' class='class' /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>var numItems = $('.class').length; \n\nalert(numItems);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/NileshDarade/6cjxg654/2\" rel=\"nofollow\">Fiddle demo for inside only div</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Ok what i'm trying to do is to count all of the elements in the current page with the same class and then i'm going to use it to be added onto a name for a input form. Basically i'm allowing users to click on a  <code>&lt;span&gt;</code>and then by doing so add another one for more of the same type of items. But i can't think of a way to count all of these simply with jquery/javascript.</p>\n\n<p>I was going to then name the item as something like <code>name=\"whatever(total+1)\"</code>, if anyone has a simple way to do this i'd be extremely grateful as javascript isn't exactly my native tongue and stack overflow usually has a ton of great answers and a great community so i'm hoping my query will not go unheard.</p>\n",
            "last_activity_date": 1419848365,
            "question_id": 2727303,
            "score": 123,
            "tags": [
                "javascript",
                "jquery",
                "count",
                "element"
            ],
            "title": "Jquery counting elements by class what is the best way to implement this?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>return false;</code> at the end of the onclick handler will do the job. However, it's be better to simply add <code>type=\"button\"</code> to the <code>&lt;button&gt;</code> - that way it behaves properly even without any JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I think this is the most annoying little peculiarity of HTML... That button needs to be of type \"button\" in order to not submit.  </p>\n\n<pre><code>&lt;button type='button'&gt;My Button&lt;/button&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 256
                },
                {
                    "body": "<p>It's recommended not to use the <code>&lt;Button&gt;</code> tag. Use the <code>&lt;Input type='Button' onclick='return false;'&gt;</code> tag instead. (Using the \"return false\" should indeed not send the form.)</p>\n\n<p>Some reference material: <a href=\"http://www.htmlcodetutorial.com/forms/_BUTTON.html\" rel=\"nofollow\">http://www.htmlcodetutorial.com/forms/_BUTTON.html</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Dave Markle is correct. From <a href=\"http://www.w3schools.com/tags/tag_button.asp\" rel=\"nofollow\">W3School's website</a>:</p>\n\n<blockquote>\n  <p>Always specify the type attribute for\n  the button. The default type for\n  Internet Explorer is \"button\", while\n  in other browsers (and in the W3C\n  specification) it is \"submit\".</p>\n</blockquote>\n\n<p>In other words, the browser you're using is following W3C's specification.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a form. Outside that form, I have a button. A simple button, like this:</p>\n\n<pre><code>&lt;button&gt;My Button&lt;/button&gt;\n</code></pre>\n\n<p>Nevertheless, when I click it, it submits the form. Here's the code:</p>\n\n<pre><code>&lt;form id=\"myform\"&gt;\n    &lt;input /&gt;\n&lt;/form&gt;\n&lt;button&gt;My Button&lt;/button&gt;\n</code></pre>\n\n<p>All this button should do is some JavaScript. But even when it looks just like in the code above, it submits the form. When I change the tag button to span, it works perfectly. But unfortunately, it needs to be a button. Is there any way to block that button from submitting the form? Like e. g.</p>\n\n<pre><code>&lt;button onclick=\"document.getElementById('myform').doNotSubmit();\"&gt;My Button&lt;/button&gt;\n</code></pre>\n\n<p>Thanks in advance!</p>\n",
            "last_activity_date": 1410447498,
            "question_id": 2825856,
            "score": 97,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "HTML button to NOT submit form"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><code>\"foo\"</code> is a string <em>primitive</em>.  (this concept does not exist in C# or Java)</p>\n\n<p><code>new String(\"foo\")</code> is boxed string object.</p>\n\n<p>The <code>===</code> operator <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-11.9.6\">behaves differently on primitives and objects</a>.<br>\nWhen comparing primitives (of the same type), <code>===</code> will return true if they both have the same value.</p>\n\n<p>When comparing objects, <code>===</code> will return true only if they refer to the same object (comparing by reference).  Thus, <code>new String(\"a\") !== new String(\"a\")</code>.</p>\n\n<p>In your case, <code>===</code> returns false because the operands are of different types (one is a primitive and the other is an object).</p>\n\n<hr>\n\n<p>Primitives are not objects at all.<br>\nThe <code>typeof</code> operator will not return <code>\"object\"</code> for primitives.</p>\n\n<p>When you try to access a property of a primitive (using it as an object), the Javascript language will box it to an object, creating a new object every time.  This is described in the <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-8.7.1\">specification</a>.</p>\n\n<p>This is why you cannot put properties on primitives:</p>\n\n<pre><code>var x = \"a\";\nx.property = 2;\nalert(x.property) //undefined\n</code></pre>\n\n<p>Each time you write <code>x.property</code>, a <em>different</em> boxed <code>String</code> object is created.</p>\n",
                    "is_accepted": true,
                    "score": 120
                },
                {
                    "body": "<p><code>foo</code> is the pure string and <code>new String(\"foo\")</code> is the Object String </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Using <code>===</code>, </p>\n\n<ul>\n<li><p>an Object is never equal to anything except another reference to itself.</p></li>\n<li><p>a primitive is equal when compared to another primitive if their type and value are the same.</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>The <code>new</code> word is a criminal here (<em>as usual</em>, may I say)... </p>\n\n<p>When you use <code>new</code>, you explicitly express your desire to work with <em>object</em>. It might be surprising for you, but this:</p>\n\n<pre><code>var x = new String('foo');\nvar y = new String('foo');\nx === y; \n</code></pre>\n\n<p>... will give you a mighty <code>false</code>. It's simple: compared are not the objects' insides, but the objects' references. And they, of course, are not equal, as two different objects were created.</p>\n\n<p>What you probably want to use is <em>conversion</em>:</p>\n\n<pre><code>var x = String('foo');\nvar y = String('foo');\nx === y;\n</code></pre>\n\n<p>... and that will give you, as expected, <code>true</code> as result, so you can rejoice and prosper with your equal <code>foos</code> forever. )</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>From the node.js REPL (\"node\" on the command-line if installed):</p>\n\n<pre><code>> \"foo\" === (new String(\"foo\")).valueOf()\ntrue\n> \"foo\" === new String(\"foo\")\nfalse\n> typeof(\"foo\")\n'string'\n> typeof(new String(\"foo\"))\n'object'\n> typeof((new String(\"foo\")).valueOf())\n'string'</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I was going to start using === (triple equals, strict comparison) all the time when comparing string values, but now I find that </p>\n\n<pre><code>\"foo\" === new String(\"foo\")\n</code></pre>\n\n<p>is false, and same with this:</p>\n\n<pre><code>var f = \"foo\", g = new String(\"foo\");\nf === g; // false\n</code></pre>\n\n<p>Of course:</p>\n\n<pre><code>f == g; // true\n</code></pre>\n\n<p>So is it recommended to always use == for string comparison, or always convert variables to strings before comparing?</p>\n",
            "last_activity_date": 1343677641,
            "question_id": 10951906,
            "score": 86,
            "tags": [
                "javascript",
                "object",
                "equality"
            ],
            "title": "Why does (&quot;foo&quot; === new String(&quot;foo&quot;)) evaluate to false in JavaScript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can use jQuery and the <a href=\"http://bassistance.de/jquery-plugins/jquery-plugin-validation/\" rel=\"nofollow\">Validation</a> plugin to perform client side validation.  This will work with both html tags and asp.net server controls.  <a href=\"http://haacked.com/archive/2008/11/21/combining-jquery-form-validation-and-ajax-submission-with-asp.net.aspx\" rel=\"nofollow\">Phil Haack has a good sample project</a> that will show you the basics.</p>\n\n<p>This <a href=\"http://stackoverflow.com/questions/203844/jquery-validation-plugin-disable-validation-for-specified-submit-buttons\">SO question</a> has an in depth review of this approach as well.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The ASP.NET validation controls expose a client side API you can use with javascript: <a href=\"http://msdn.microsoft.com/en-us/library/aa479045.aspx\">http://msdn.microsoft.com/en-us/library/aa479045.aspx</a></p>\n\n<p>You should be able to check the Page_IsValid object to see if any of the validation controls are invalid.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If I have a page that is using a bunch of ASP.NET validation controls I will use code similar to the following to validate the page.  Make the call on an input submit.  Hopefully this code sample will get you started!</p>\n\n<pre><code>    &lt;input type=\"submit\" value=\"Submit\" onclick\"ValidatePage();\" /&gt;\n\n    &lt;script type=\"text/javascript\"&gt;\n\n    function ValidatePage() {\n\n        if (typeof (Page_ClientValidate) == 'function') {\n            Page_ClientValidate();\n        }\n\n        if (Page_IsValid) {\n            // do something\n            alert('Page is valid!');                \n        }\n        else {\n            // do something else\n            alert('Page is not valid!');\n        }\n    }\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 118
                },
                {
                    "body": "<p>You are checking for <code>Page.IsValid</code> where you should be checking for <code>Page_IsValid</code> (it's a variable exposed by the .NET validators) :)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>$(\"input[id$=Button2]\").click(function () {\n    var validated = Page_ClientValidate('repo');\n    if (validated) {\n        // JavaScript code.\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Set <code>ValidationGroup</code> property for each <code>asp.net</code> validator control in your page, you have to provide same name to <code>ValidationGroup</code> in a page.</p>\n\n<p>For example:</p>\n\n<pre><code>&lt;asp:RequiredFieldValidator ID=\"RequiredFieldValidator1\" runat=\"server\" ErrorMessage=\"Required\" ValidationGroup=\"Validate\"&gt;&lt;/asp:RequiredFieldValidator&gt;\n    &lt;asp:RangeValidator ID=\"RangeValidator1\" runat=\"server\" ErrorMessage=\"RangeValidator\" ValidationGroup=\"Validate\"&gt;&lt;/asp:RangeValidator&gt;\n    &lt;asp:CustomValidator ID=\"CustomValidator1\" runat=\"server\" ErrorMessage=\"CustomValidator\" ValidationGroup=\"Validate\"&gt;&lt;/asp:CustomValidator&gt;\n</code></pre>\n\n<p>After that in your javascript call like <code>Page_ClientValidate(\"ValidationGroup\")</code> </p>\n\n<p>For example:</p>\n\n<pre><code>function ValidatePage(){\nif(Page_ClientValidate(\"Validate\")){ //validate using above validation controls group\n      //validation return true section\n}\nelse{\n      //validation return false section\n}\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is the best way to determine if a form on an ASPX page is valid in JavaScript?  </p>\n\n<p>I am trying to check the validation of an user control that was opened using the JavaScript <code>window.showModalDialog()</code> and checking the 'Page.IsValid' property on the server side does not work.  I am using ASP.NET validation controls for page validation. </p>\n",
            "last_activity_date": 1391756797,
            "question_id": 1066857,
            "score": 55,
            "tags": [
                "asp.net",
                "javascript",
                "validation"
            ],
            "title": "Determine if page is valid in JavaScript - ASP.NET"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If you're targeting Webkit specifically (iPad and all), you can rely on normal event handler code (add/removeEventListener). With that in mind, you probably need to just branch on a few events - e.g, 'ontouchstart' becomes 'onclick' based on the environment.</p>\n\n<p>Offhand I don't know of any libraries providing this level of branching, though. Pretty easy to do yourself.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>We use this script: <a href=\"http://code.google.com/p/jquery-ui-for-ipad-and-iphone/\" rel=\"nofollow\">http://code.google.com/p/jquery-ui-for-ipad-and-iphone/</a>\nIt will allow all mouse events in your application to be triggered by touch events instead. So, since we already had a web application that used right-clicking, drag-n-drop etc. it allowed us to perform all of the same functionality with touch.</p>\n\n<p>I know it's almost the reverse of the simulation you were looking for (you will have to script your application to primarily be used by a mouse) but I hope it helps anyway.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The desktop browser can simulate touch events by importing additional JS + CSS.\nTake a look at:</p>\n\n<ol>\n<li><a href=\"http://attrakt.se/label/projects/addtouch/\">addTouch</a></li>\n<li><a href=\"http://www.vodori.com/blog/phantom-limb.html\">Phantom Limb</a></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p><strong>As of April 13th 2012</strong></p>\n\n<p>In Google Chrome developer and canary builds there is now a checkbox for \"Emulate touch events\"</p>\n\n<p>You can find it by opening the F12 developer tools and clicking on the gear at the bottom right of the screen.</p>\n\n<p><img src=\"http://i.stack.imgur.com/VqZOJ.png\" alt=\"on Chrome v22 Mac OS X\"></p>\n\n<p>For now (Chrome ver.36.0.1985.125) you can find it here: F12 => Esc => Emulation.\n<img src=\"http://i.stack.imgur.com/mNZQN.png\" alt=\"console\"></p>\n",
                    "is_accepted": true,
                    "score": 85
                },
                {
                    "body": "<p>I came across this little library based on the JQ UI lib. Pretty nifty:</p>\n\n<p><a href=\"http://touchpunch.furf.com/\" rel=\"nofollow\">http://touchpunch.furf.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am developing an HTML application for the iPad. As such it utilizes touch events and webkit-CSS animations.</p>\n\n<p>Up until now I have used chrome as my debugging environment because of it's awesome developer mode.</p>\n\n<p>What I would like is to be able to debug my Html/Javacript using Google-Chrome's debugger on my PC while simulating touch events with my mouse.</p>\n\n<p>My site does not have any multi-touch events and no mouse events (no mouse on iPad).</p>\n\n<p>I am not actually interested in seeing the applications layout, but more in debugging it's behavior.</p>\n\n<p>Is there some plugin to get mouse events translated into touch events on a desktop browser?</p>\n",
            "last_activity_date": 1407501392,
            "question_id": 4919191,
            "score": 51,
            "tags": [
                "javascript",
                "ipad",
                "html5",
                "google-chrome",
                "touch"
            ],
            "title": "Simulating touch events on a PC browser"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>John Resig (author of jQuery) <a href=\"http://ejohn.org/blog/dictionary-lookups-in-javascript/\">posted recently</a> on dictionary lookups in javascript.</p>\n\n<p>His solution is to assign the dictionary values as properties of an object. Code pasted verbatim from above article:</p>\n\n<pre><code>// The dictionary lookup object\nvar dict = {};\n// Do a jQuery Ajax request for the text dictionary\n$.get( \"dict/dict.txt\", function( txt ) {\n  // Get an array of all the words\n  var words = txt.split( \"\\n\" );\n\n  // And add them as properties to the dictionary lookup\n  // This will allow for fast lookups later\n  for ( var i = 0; i &lt; words.length; i++ ) {\n    dict[ words[i] ] = true;\n  }\n\n  // The game would start after the dictionary was loaded\n  // startGame();\n});\n\n// Takes in an array of letters and finds the longest\n// possible word at the front of the letters\nfunction findWord( letters ) {\n  // Clone the array for manipulation\n  var curLetters = letters.slice( 0 ), word = \"\";\n\n  // Make sure the word is at least 3 letters long\n  while ( curLetters.length &gt; 2 ) {\n    // Get a word out of the existing letters\n    word = curLetters.join(\"\");\n\n    // And see if it's in the dictionary\n    if ( dict[ word ] ) {\n      // If it is, return that word\n      return word;\n    }\n\n    // Otherwise remove another letter from the end\n    curLetters.pop();\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Technically not, but you can use a regular JavaScript object like a dictionary:</p>\n\n<pre><code>var a = {\"a\":\"wohoo\", 2:\"hello2\", \"d\":\"hello\"};\nalert(a[\"a\"]);\nalert(a[2]);\nalert(a[\"d\"]);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 88
                },
                {
                    "body": "<p>In JS, {\"index\":anyValue} is just a dictionary. Your can also refer to definition of JSON (http://www.json.org/)</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The nearest implementation that I have used to a .Net dictionary in Javascript is a hash object (see link: <a href=\"http://www.mojavelinux.com/articles/javascript_hashes.html\" rel=\"nofollow\">http://www.mojavelinux.com/articles/javascript_hashes.html</a>). It implements an array under the hood and has similarly named methods to those of a .Net dictionary.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use an object as other people write. If you are storing something other than strings as key then just jsonize them. See this <a href=\"http://people.iola.dk/arj/2012/05/30/hashtables-in-javascript/\" rel=\"nofollow\">blog post</a> for performance considurations of different dictionary implementations in javascript.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can try <a href=\"https://github.com/mauriciosantos/buckets\">buckets</a>, is a javascript data structure library, it allows you to use any type of object in a dictionary.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>In my last project, I was tasked with creating a browser client application that would read 10 of thousands of rows of data, then group and aggregate the data for display in grids and for charting. The target technologies were HTML 5, CSS 3 and EMCS 5.(modern browser in Jun 2013). Because older browser compatibility was not a concern the external libraries were limited to D3 (no JQuery).</p>\n\n<p>I needed to build a data model. I had built one before in C# and relied on custom dictionary objects to quickly access the data, groups, and aggregates. I had not worked in JavaScript in years so I started searching for a dictionary. I found JavaScript still did not have a true native dictionary. I found a few sample implementations but nothing that really met my expectation. So I built one.</p>\n\n<p>As I mentioned, I had not worked in JavaScript for years. The advancements (or maybe just the web availability of information) were quite impressive. All my previous work was with class based languages so the prototype base language took some time to get used to (and I still have a long way to go).</p>\n\n<p>This project, like most, was due before it started so I learned as I went making many of the newb mistakes that would be expected when transitioning from a class based to a prototype based language. The dictionary created was functional but after a time, I realized some improvements I could make by making it less newbish. The project ran out of funding before I had time to rework the dictionary. Oh, and my position lost funding at the same time (amazing how that can happen). So I decide to recreate the dictionary using what I had learned and determine if the dictionary was actually a performance improvement over an array.</p>\n\n<pre><code>/*\n* Dictionary Factory Object\n* Holds common object functions. similar to V-Table\n* this.New() used to create new dictionary objects\n* Uses Object.defineProperties so won't work on older browsers.\n* Browser Compatibility (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties)\n*      Firefox (Gecko) 4.0 (2), Chrome 5, IE 9, Opera 11.60, Safari 5\n*/\nfunction Dict() {\n\n    /*\n    * Create a new Dictionary\n    */\n    this.New = function () {\n        return new dict();\n    };\n\n    /*\n    * Return argument f if it is a function otherwise return undefined\n    */\n    function ensureF(f) {\n        if (isFunct(f)) {\n            return f;\n        }\n    }\n\n    function isFunct(f) {\n        return (typeof f == \"function\");\n    }\n\n    /*\n    * Add a \"_\" as first character just to be sure valid property name\n    */\n    function makeKey(k) {\n        return \"_\" + k;\n    };\n\n    /*\n    * Key Value Pair object - held in array\n    */\n    function newkvp(key, value) {\n        return {\n            key: key,\n            value: value,\n            toString: function () { return this.key; },\n            valueOf: function () { return this.key; }\n        };\n    };\n\n    /*\n    * Return the current set of keys. \n    */\n    function keys(a) {\n        // remove the leading \"-\" character from the keys\n        return a.map(function (e) { return e.key.substr(1); });\n        // Alternative: Requires Opera 12 vs. 11.60\n        // -- Must pass the internal object instead of the array\n        // -- Still need to remove the leading \"-\" to return user key values\n        //    Object.keys(o).map(function (e) { return e.key.substr(1); });\n    };\n\n    /*\n    * Return the current set of values. \n    */\n    function values(a) {\n        return a.map(function(e) { return e.value; } );\n    };\n\n    /*\n    * Return the current set of key value pairs. \n    */\n    function kvPs(a) {\n        // remove the leading \"-\" character from the keys\n        return a.map(function (e) { return newkvp(e.key.substr(1), e.value); });\n    }\n\n    /*\n    * Returns true if key exists in the dictionary.\n    * k - Key to check (with the leading \"_\" character) \n    */\n    function exists(k, o) {\n        return o.hasOwnProperty(k);\n    }\n\n    /*\n    * Array Map implementation\n    */\n    function map(a, f) {\n        if (!isFunct(f)) { return; }\n        return a.map(function (e, i) { return f(e.value, i); });\n    }\n\n    /*\n    * Array Every implementation\n    */\n    function every(a, f) {\n        if (!isFunct(f)) { return; }\n        return a.every(function (e, i) { return f(e.value, i) });\n    }\n\n    /*\n    * Returns subset of \"values\" where function \"f\" returns true for the \"value\"\n    */\n    function filter(a, f) {\n        if (!isFunct(f)) {return; }\n        var ret = a.filter(function (e, i) { return f(e.value, i); });\n        // if anything returned by array.filter, then get the \"values\" from the key value pairs\n        if (ret &amp;&amp; ret.length &gt; 0) {\n            ret = values(ret);\n        }\n        return ret;\n    }\n\n    /*\n    * Array Reverse implementation\n    */\n    function reverse(a, o) {\n        a.reverse();\n        reindex(a, o, 0);\n    }\n\n    /**\n    * Randomize array element order in-place.\n    * Using Fisher-Yates shuffle algorithm.\n    * (Added just because:-)\n    */\n    function shuffle(a, o) {\n        var j, t;\n        for (var i = a.length - 1; i &gt; 0; i--) {\n            j = Math.floor(Math.random() * (i + 1));\n            t = a[i];\n            a[i] = a[j];\n            a[j] = t;\n        }\n        reindex(a, o, 0);\n        return a;\n    }\n    /*\n    * Array Some implementation\n    */\n    function some(a, f) {\n        if (!isFunct(f)) { return; }\n        return a.some(function (e, i) { return f(e.value, i) });\n    }\n\n    /*\n    * Sort the dictionary. Sorts the array and reindexes the object.\n    * a - dictionary array\n    * o - dictionary object\n    * sf - dictionary default sort function (can be undefined)\n    * f - sort method sort function argument (can be undefined)\n    */\n    function sort(a, o, sf, f) {\n        var sf1 = f || sf; // sort function  method used if not undefined\n        // if there is a customer sort function, use it\n        if (isFunct(sf1)) {\n            a.sort(function (e1, e2) { return sf1(e1.value, e2.value); });\n        }\n        else {\n            // sort by key values\n            a.sort();\n        }\n        // reindex - adds O(n) to perf\n        reindex(a, o, 0);\n        // return sorted values (not entire array)\n        // adds O(n) to perf\n        return values(a);\n    };\n\n    /*\n    * forEach iteration of \"values\"\n    *   uses \"for\" loop to allow exiting iteration when function returns true \n    */\n    function forEach(a, f) {\n        if (!isFunct(f)) { return; }\n        // use for loop to allow exiting early and not iterating all items\n        for(var i = 0; i &lt; a.length; i++) {\n            if (f(a[i].value, i)) { break; }\n        }\n    };\n\n    /*\n    * forEachR iteration of \"values\" in reverse order\n    *   uses \"for\" loop to allow exiting iteration when function returns true \n    */\n    function forEachR(a, f) {\n        if (!isFunct(f)) { return; }\n        // use for loop to allow exiting early and not iterating all items\n        for (var i = a.length - 1; i &gt; -1; i--) {\n            if (f(a[i].value, i)) { break; }\n        }\n    }\n\n    /*\n    * Add a new Key Value Pair, or update the value of an existing key value pair\n    */\n    function add(key, value, a, o, resort, sf) {\n        var k = makeKey(key);\n        // Update value if key exists\n        if (exists(k, o)) {\n            a[o[k]].value = value;\n        }\n        else {\n            // Add a new Key value Pair\n            var kvp = newkvp(k, value);\n            o[kvp.key] = a.length;\n            a.push(kvp);\n        }\n        // resort if requested\n        if (resort) { sort(a, o, sf); }\n    };\n\n    /*\n    * Removes an existing key value pair and returns the \"value\" If the key does not exists, returns undefined\n    */\n    function remove(key, a, o) {\n        var k = makeKey(key);\n        // return undefined if the key does not exist\n        if (!exists(k, o)) { return; }\n        // get the array index\n        var i = o[k];\n        // get the key value pair\n        var ret = a[i];\n        // remove the array element\n        a.splice(i, 1);\n        // remove the object property\n        delete o[k];\n        // reindex the object properties from the remove element to end of the array\n        reindex(a, o, i);\n        // return the removed value\n        return ret.value;\n    };\n\n    /*\n    * Returns true if key exists in the dictionary.\n    * k - Key to check (without the leading \"_\" character) \n    */\n    function keyExists(k, o) {\n        return exists(makeKey(k), o);\n    };\n\n    /*\n    * Returns value assocated with \"key\". Returns undefined if key not found\n    */\n    function item(key, a, o) {\n        var k = makeKey(key);\n        if (exists(k, o)) {\n            return a[o[k]].value;\n        }\n    }\n\n    /*\n    * changes index values held by object properties to match the array index location\n    * Called after sorting or removing\n    */\n    function reindex(a, o, i){\n        for (var j = i; j &lt; a.length; j++) {\n            o[a[j].key] = j;\n        }\n    }\n\n    /*\n    * The \"real dictionary\"\n    */\n    function dict() {\n        var _a = [];\n        var _o = {};\n        var _sortF;\n\n        Object.defineProperties(this, {\n            \"length\": { get: function () { return _a.length; }, enumerable: true },\n            \"keys\": { get: function() { return keys(_a); }, enumerable: true },\n            \"values\": { get: function() { return values(_a); }, enumerable: true },\n            \"keyValuePairs\": { get: function() { return kvPs(_a); }, enumerable: true},\n            \"sortFunction\": { get: function() { return _sortF; }, set: function(funct) { _sortF = ensureF(funct); }, enumerable: true }\n        });\n\n        // Array Methods - Only modification to not pass the actual array to the callback function\n        this.map = function(funct) { return map(_a, funct); };\n        this.every = function(funct) { return every(_a, funct); };\n        this.filter = function(funct) { return filter(_a, funct); };\n        this.reverse = function() { reverse(_a, _o); };\n        this.shuffle = function () { return shuffle(_a, _o); };\n        this.some = function(funct) { return some(_a, funct); };\n        this.sort = function(funct) { return sort(_a, _o, _sortF, funct); };\n\n        // Array Methods - Modified aborts when funct returns true.\n        this.forEach = function (funct) { forEach(_a, funct) };\n\n        // forEach in reverse order\n        this.forEachRev = function (funct) { forEachR(_a, funct) };\n\n        // Dictionary Methods\n        this.addOrUpdate = function(key, value, resort) { return add(key, value, _a, _o, resort, _sortF); };\n        this.remove = function(key) { return remove(key, _a, _o); };\n        this.exists = function(key) { return keyExists(key, _o); };\n        this.item = function(key) { return item(key, _a, _o); };\n        this.get = function (index) { if (index &gt; -1 &amp;&amp; index &lt; _a.length) { return _a[index].value; } } ,\n        this.clear = function() { _a = []; _o = {}; };\n\n        return this;\n    }\n\n\n    return this;\n}\n</code></pre>\n\n<p>One of the epiphanies I had while trying to mentally reconcile class vs. prototype objects is that the prototype is basically a v-table for the created objects. Additionally functions in an enclosure can also act like v-table entries. As the project progressed, I started using Object Factories where a top level object contained common functions for the object type and included a \u201cthis.New(args)\u201d method that was used to create the actual objects used in the solution. This is the style I used for the dictionary.</p>\n\n<p>The core of the dictionary is an Array, an Object and a KeyValuePair object. The \u201caddOrUpdate\u201d method takes a key and a value and:</p>\n\n<ol>\n<li>Creates a KeyValuePair</li>\n<li>Adds a new property to the object using the key as the property name\nand the array length as the property value</li>\n<li>Add the KeyValuePair to the Array, making the object new property\nvalue the index in the array</li>\n</ol>\n\n<p><strong>NOTE:</strong> I read the object property names can start with \u201calmost any\u201d Unicode character. The project would be dealing with customer data which can start with \u201cany\u201d Unicode character. To ensure the dictionary did not blowup due to an invalid property name, I prefix an underscore (_) to the key and strip off that underscore when returning  keys external to the dictionary.</p>\n\n<p>For the dictionary to be functional, the internal Array and Object must be kept in sync. To ensure this neither the Array nor the Object are exposed externally. I wanted to avoid accidental changes such as those that can happen when a \u201cIf\u201d test has only one equal sign and the left have value is set by mistake. </p>\n\n<pre><code>If(dict.KeyObj[\u201cSomeKey\u201d] = \u201coops\u201d) { alert(\u201cgood luck tracing this down:-)\u201d); }\n</code></pre>\n\n<p>This typical error with the dictionary might be very hard to track down when bugs (the symptoms) start showing up in calculation, display, etc. Consequently the \u201cthis\u201d property would not have access to either one. This protectionism is one of the reasons I did not dig more into prototypes. It had crossed my mind to use an internal object with the Array and Object exposed and pass that internal object when using the \u201ccall\u201d or \u201capply\u201d methods and I may look at that later as I\u2019m still not sure I wouldn\u2019t have to expose that internal object which would defeat the purpose of protecting the core Array and Object.</p>\n\n<p>I fixed some of the newb mistakes I made with the first dictionary object I created.</p>\n\n<ul>\n<li>The \"Dict()\" function contains most of the working code for each\ndictionary object. The criteria I used to determine whether an\nenclosed function should be used vs. functionality in the actual\ndictionary object:\n<ul>\n<li>More than one line of code</li>\n<li>Used by other enclosed functions</li>\n<li>May be subject to change causing growth as I discover bugs/issues</li>\n</ul></li>\n<li>Used Array method and property names where it made sense. Coming \nfrom C# I did things that made my dictionary less usable as using\n\"Count\" instead of \"length\" or \"ForEach\" instead of \"forEach\". By\nusing Array names, the dictionary can now be use as an Array in most\ncases. Unfortunately I was not able to find a way to create a bracket\naccessor (e.g. val = dict[key]) and that may be a good thing anyway.\nWhen thinking about it I had difficulty being sure that things like\nval = dict[12] worked correctly. The number 12 could easily have been\nused as a key so I could not think of a good way of knowing the\n\"intention\" of such a call.</li>\n<li>Fully enclosed the underscore prefix handling.  In the project I was\nworking, I had this spread out and repeated in various data model\nobjects. It was ugly!</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>ECMAScript 6 (aka the 2015 JavaScript spec), <a href=\"https://people.mozilla.org/~jorendorff/es6-draft.html#sec-map-objects\" rel=\"nofollow\">specifies a dictionary interface, named Map</a>. It supports arbitrary keys of any type, has a read-only <code>size</code> property, is not cluttered with prototypes related stuff like objects, and can be iterated over using the new <code>for...of...</code> construct or <code>Map.forEach</code>. Check the documentation on the MDN <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\" rel=\"nofollow\">here</a>, and the browser compatibility table <a href=\"http://kangax.github.io/compat-table/es6/\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var nDictionary = Object.create(null);\n\nfunction setDictionary(index, value) {\n    nDictionary[index] = value;\n}\n\nfunction getDictionary(index) {\n    return nDictionary[index];\n}\n\nsetDictionary(81403, \"test 1\");\nsetDictionary(81404, \"test 2\");\nsetDictionary(81405, \"test 3\");\nsetDictionary(81406, \"test 4\");\nsetDictionary(81407, \"test 5\");\n\nalert(getDictionary(81403));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I implement an array with an indexer in JavaScript? Is there something like a dictionary in .Net?</p>\n",
            "last_activity_date": 1414442097,
            "question_id": 5594850,
            "score": 49,
            "tags": [
                "javascript",
                ".net",
                "arrays",
                "dictionary"
            ],
            "title": "Is there a dictionary implementation in JavaScript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Instead of filtering with <code>a</code> inside <code>#foo</code>  elements, simply attach a class to <code>a</code> elements and get <code>a</code> elements with class like <code>$(\"a.class\");</code>. This would be more efficient.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>That is correct - Sizzle (jQuery's selector engine) behaves the <a href=\"http://css-tricks.com/efficiently-rendering-css/\">same way as CSS selectors</a>. CSS and Sizzle selectors are <a href=\"http://net.tutsplus.com/tutorials/javascript-ajax/quick-tip-think-right-to-left-with-jquery/\">evaluated right-to-left</a>, and so <code>#foo a</code> will find all <code>a</code> nodes, then filter those by nodes that descend from <code>#foo</code>.</p>\n\n<p>You improve this by ensuring that your leaf selectors have a high specificity, usually by giving them a class or ID.</p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<blockquote>\n  <p>how should we do that in a better way?</p>\n</blockquote>\n\n<p>Use the context parameter from jQuery.</p>\n\n<pre><code>$('a', '#foo');\n</code></pre>\n\n<p>Now jQuery will search all anchors within the context of the element with id: foo. </p>\n\n<p>In your query the context is defaulted to document when omitted:</p>\n\n<pre><code>$('#foo a'); == $('#foo a', document); \n</code></pre>\n\n<p>In this case, your query is indeed not efficient.</p>\n\n<p>You might take a look <a href=\"http://techblog.chegg.com/2011/10/07/using-jquery-selectors-efficiently/\">at this article</a>.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>This example will retrieve the all anchors elements <code>a</code> in an element called <code>foo</code>, to Find every a in the page and then filter a inside #foo as you want u should select <code>a #foo</code></p>\n\n<pre><code>$(\"a #foo\");\n</code></pre>\n\n<p>this will retrieve all the <code>foo</code> elements inside <code>a</code> elements.</p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>You can use find() for more granular control on your selector order:</p>\n\n<pre><code>$('#foo').find('a');\n</code></pre>\n\n<p>This will of course be more impressive with more complex selectors, where you can chain find() and filter().</p>\n\n<p>For the record <code>$('#foo').find('a') === $('a','#foo')</code></p>\n\n<p>[Update] ok, I realized later that it's exactly what your link says...</p>\n\n<p>The jQuery selector engine (Sizzle) has been refactored last year, you'll find detailed explanations here:\n<a href=\"http://www.wordsbyf.at/2011/11/23/selectors-selectoring/\" rel=\"nofollow\">http://www.wordsbyf.at/2011/11/23/selectors-selectoring/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>While it is true that Sizzle is a right-to-left engine (which is the same way css is interpreted), it is not true that the specific selector in your example would select all anchor elements on the page and then filter their parents to match the id of \"foo\". Sizzle actually optimizes any selector that starts with an ID and uses that as the context for the entire selection, rather than using the document. In other words, the selector you've chosen basically translates to:</p>\n\n<pre><code>document.getElementById(\"foo\").getElementsByTagName(\"a\")\n</code></pre>\n\n<p>Really, that's not a bad selector at all.</p>\n\n<p>However, given the other things jQuery needs to do (which includes looping over the elements to merge them onto the jQuery instance), jQuery(\"#foo\").find(\"a\") will always be the fastest because jQuery implements a jQuery object creation shortcut for id-only selectors, and then it does the find rooted from #foo.</p>\n\n<p>In other words, Sizzle itself is not much different when doing <code>Sizzle(\"#foo a\")</code> and <code>Sizzle(\"a\", document.getElementById(\"foo\"))</code>, but <code>jQuery(\"#foo\").find...</code> will be faster because of jQuery's own ID shortcut.</p>\n\n<p>By the way, my remarks on Sizzle is assuming querySelectorAll is not being used. If it is, Sizzle just passes it on to qsa, which still isn't as fast as using jQuery's ID shortcut.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Yet another \"try it for yourself\":</p>\n\n<ol>\n<li><a href=\"http://jsperf.com/jquery-context-or-no-context/4\" rel=\"nofollow\">jsperf for various selectors on 10000 elements</a></li>\n<li><a href=\"http://jsperf.com/jquery-context-or-no-context/6\" rel=\"nofollow\">jsperf for various selectors on 300 elements</a></li>\n<li><a href=\"http://jsperf.com/jquery-context-or-no-context/7\" rel=\"nofollow\">jsperf for various selectors on a \"more representative DOM\"</a></li>\n</ol>\n\n<p>Doesn't seem to be much difference with a \"flat\" DOM (1 &amp; 2), but the performance varies much more with a nested DOM.</p>\n\n<p>Also note that some of the test cases aren't selecting the correct elements (i.e. <code>$('.a')</code> vs <code>$('.a', context)</code>), but I left them from the original tests just for comparison.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>As a example of jQuery code (<a href=\"https://coderwall.com/p/7uchvg\">https://coderwall.com/p/7uchvg</a>), I read that the expression <code>$('#foo a');</code> behaves like this:  </p>\n\n<blockquote>\n  <p>Find every <code>a</code> in the page and then filter <code>a</code> inside <code>#foo</code>.</p>\n</blockquote>\n\n<p>And it does not look  efficient.</p>\n\n<p>Is that correct? And if yes, how should we do that in a better way?</p>\n",
            "last_activity_date": 1400518441,
            "question_id": 13678702,
            "score": 43,
            "tags": [
                "javascript",
                "jquery",
                "performance",
                "jquery-selectors",
                "sizzle"
            ],
            "title": "How is the jQuery selector $(&#39;#foo a&#39;) evaluated?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>exec</code> with a global regular expression is meant to be used in a loop, as it will still retrieve all matched subexpressions. So:</p>\n\n<pre><code>var re = /[^\\/]+/g;\nvar match;\n\nwhile (match = re.exec('/a/b/c/d')) {\n    // match is now the next match, in array form.\n}\n\n// No more matches.\n</code></pre>\n\n<p><code>String.match</code> does this for you and discards the subexpressions' results.</p>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p><code>/regex/.exec()</code> returns only the first match found, while <code>\"string\".match()</code> returns all of them if you use the <code>g</code> flag in the regex.</p>\n\n<p>See here: <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/RegExp/exec\">exec</a>, <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/match\">match</a>.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>One picture is better, you know...</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>re_once = /([a-z])([A-Z])/\r\nre_glob = /([a-z])([A-Z])/g\r\n\r\nst = \"aAbBcC\"\r\n    \r\ndocument.write(\"&lt;pre&gt;\")\r\ndocument.write(\"&lt;br&gt;match once=\"+ st.match(re_once)+ \"  match glob=\"+ st.match(re_glob))\r\ndocument.write(\"&lt;br&gt; exec once=\"+ re_once.exec(st) + \"   exec glob=\"+ re_glob.exec(st))\r\ndocument.write(\"&lt;br&gt; exec once=\"+ re_once.exec(st) + \"   exec glob=\"+ re_glob.exec(st))\r\ndocument.write(\"&lt;br&gt; exec once=\"+ re_once.exec(st) + \"   exec glob=\"+ re_glob.exec(st))</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>See the difference?</p>\n",
                    "is_accepted": false,
                    "score": 28
                }
            ],
            "body": "<p>If I run this:</p>\n\n<pre><code>/([^\\/]+)+/g.exec('/a/b/c/d');\n</code></pre>\n\n<p>I get this:</p>\n\n<pre><code>[\"a\", \"a\"]\n</code></pre>\n\n<p>But if I run this:</p>\n\n<pre><code>'/a/b/c/d'.match(/([^\\/]+)+/g);\n</code></pre>\n\n<p>Then I get the expected result of this:</p>\n\n<pre><code>[\"a\", \"b\", \"c\", \"d\"]\n</code></pre>\n\n<p>What's the difference?</p>\n",
            "last_activity_date": 1422029275,
            "question_id": 9214754,
            "score": 43,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "What is the difference between RegExp\u2019s exec() function and String\u2019s match() function?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>There isn't one right now and I would go on to say that there <em>may never be one</em> in the same way that there is jQuery, for the simple fact that most (commercial) games are going to want to be mercilessly performant, which means using as little extra cruft as possible, and many of these libraries add unnecessary things or performance hits where it may not be desired.</p>\n\n<p>That is not to say they won't be used at all, all of the above libraries are probably good for a great deal of small(er) games.</p>\n\n<p>But I imagine on large projects many studios will find themselves starting with a library until they hit a performance wall, and then writing all the components they used in the library themselves in order to keep only the thin bits that they need.</p>\n\n<p>If there is one that becomes popular it will almost certainly be be modular like MooTools (second most popular JS library), where it tries to be compact and <a href=\"http://mootools.net/core/\">lets you select only the components you want to use</a>. I imagine you'll find a lot of games in the future that have a very small engine <em>just</em> for handling sound or <em>just</em> for handling images or a 2D isomorphic board, instead of games that have a (large) library that attempts to handle every possible kind of 2D game.</p>\n\n<p>Anyway, if you simply want to find the most popular javascript engine then your best bet over the coming months is to use Google (page rank) to determine most popular. Searching for \"2D game engines Javascript/Canvas\" will give you a pretty good idea of which is the most linked-to (popular) library at any given time.</p>\n\n<p>(After all, try searching Google for \"JavaScript Library\". You can guess the first result I bet!)</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>I agree with the others, there just isn't a standard, and there might not be for a while. Yet, I'm just starting out myself - and really digging the ThreeJS framework : </p>\n\n<p><a href=\"http://learningthreejs.com/\" rel=\"nofollow\">http://learningthreejs.com/</a>\nhttps://github.com/mrdoob/three.js/</p>\n\n<p>Sure, it's a WebGL 3D framework - but I suspect you can strip out the 3D elements to make it 2D? At least that's my hope as I dig into this world of WebGL - which could end up being the standard moving forward?*</p>\n\n<p>What helps is relying on Chrome Canary for development! :) <a href=\"https://tools.google.com/dlpage/chromesxs\" rel=\"nofollow\">https://tools.google.com/dlpage/chromesxs</a></p>\n\n<p>If you're going this route - don't forget to set about:flags in Chrome, to enable \"Override software rendering list\" flag.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Found this question while searching for an engine of my own. I just want to add this site here  because it offers a good overview over a lot of HTML5 game engines:</p>\n\n<p><a href=\"http://html5gameengine.com/\" rel=\"nofollow\">http://html5gameengine.com/</a></p>\n\n<p>There are also some nice filters like licences/costs, release date and user rating.</p>\n\n<p>(p.s.: I'm not related to this site in any way)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://martindrapeau.github.io/backbone-game-engine/\" rel=\"nofollow\">Backbone Game Engine</a> is a 2d framework that was written on top of already popular and large community driven Backbone. Objects, inheritance, events, persistence and so forth come defacto with Backbone. The engine borrows from MelonJS with sprites (Backbone Models) that implement update and draw methods. Super Mario Bros Level 1-1 was written as an example. May be worth your time checking. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm attempting to build a tile-based game in javascript, using HTML5 canvas. There are -many- engines to choose from, such as;</p>\n\n<ul>\n<li><a href=\"http://jawsjs.com/\">JawsJS</a></li>\n<li><a href=\"http://gamejs.org/\">GameJS</a></li>\n<li><a href=\"http://cocos2d-javascript.org/\">Cocos2D</a> </li>\n<li><a href=\"http://www.melonjs.org/\">MelonJS</a></li>\n<li><a href=\"http://craftyjs.com/\">CraftyJS</a></li>\n<li><a href=\"http://impactjs.com/\">ImpactJS</a> (commercial)</li>\n</ul>\n\n<p>... and the list goes on and on.</p>\n\n<p>However, there does not seem to be one de facto standard among all these different implementations. Essentially I am looking for the 'jQuery' of javascript game engines. One that is backed by a (larger) community, has excellent documentation and is actively maintained. Most of these just seem like one-man projects to me. </p>\n\n<p>To phrase this into a real question; what is the de facto standard for 2d game engines in javascript?</p>\n\n<p>Additionally I would be very interested in experiences with actual implementations (other than demo pong / pacman games).</p>\n",
            "last_activity_date": 1400939967,
            "question_id": 10172191,
            "score": 33,
            "tags": [
                "javascript",
                "html5",
                "canvas",
                "2d"
            ],
            "title": "2D Engines for Javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Here is the code I used for Firefox, which is <em>not</em> portable, but <del>works</del>:</p>\n\n<p>As OP commented, <code>enablePrivilege()</code> has been deprecated, this should be considered usable. But as my Firefox using previous profile still work with my code, so I dig a little into the <code>prefs.js</code> (as <code>about:config</code> is hiding these settings,) And here is the settings you need you get it work.</p>\n\n<pre><code>user_pref(\"capability.principal.codebase.p0.granted\", \"UniversalXPConnect\");\nuser_pref(\"capability.principal.codebase.p0.id\", \"file://\");  // path to the html file.\nuser_pref(\"capability.principal.codebase.p0.subjectName\", \"\");\n</code></pre>\n\n<p>And here goes the code:</p>\n\n<pre><code>var File = function(file) {\n  netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');\n  var ios = Components.classes[\"@mozilla.org/network/io-service;1\"]\n                            .getService(Components.interfaces.nsIIOService);\n  if (!File.baseURI) {\n    File.baseURI = ios.newURI(location.href.substring(0, location.href.lastIndexOf('/')+1), null, null);\n    File.baseFolder = File.baseURI.QueryInterface(Components.interfaces.nsIFileURL).file.path;\n  }\n  var URL = ios.newURI(file, null, File.baseURI);\n  this.fptr = URL.QueryInterface(Components.interfaces.nsIFileURL).file;\n}\n\nFile.prototype = {\n  write: function(data) {\n    netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');\n    var foStream = Components.classes[\"@mozilla.org/network/file-output-stream;1\"]\n                             .createInstance(Components.interfaces.nsIFileOutputStream);\n    foStream.init(this.fptr, 0x02 | 0x08 | 0x20, 0666, 0);\n    var converter = Components.classes[\"@mozilla.org/intl/converter-output-stream;1\"]\n                              .createInstance(Components.interfaces.nsIConverterOutputStream);\n    converter.init(foStream, null, 0, 0);\n    converter.writeString(data);\n    converter.close();\n  },\n  read: function() {\n    netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');\n    var fstream = Components.classes[\"@mozilla.org/network/file-input-stream;1\"]\n                            .createInstance(Components.interfaces.nsIFileInputStream);\n    var cstream = Components.classes[\"@mozilla.org/intl/converter-input-stream;1\"]\n                            .createInstance(Components.interfaces.nsIConverterInputStream);\n    fstream.init(this.fptr, -1, 0, 0);\n    cstream.init(fstream, null, 0, 0);\n    var data = \"\";\n    // let (str = {}) { // use this only when using javascript 1.8\n    var str = {};\n      cstream.readString(0xffffffff, str);\n      data = str.value;\n    // }\n    cstream.close();\n    return data;\n  }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>As I understand, the content of the file is completely under your control, and it doesn't have to be a specific format?\nAnd you only need a way to read?</p>\n\n<p>You could declare a global function \"handleFile\".\nIn your external file the content would have to be like this:</p>\n\n<pre><code>handleFile('Mark Rodgers,mark.rodgers@company.com,Accounting');\n</code></pre>\n\n<p>To \"read\" the file, just add a script element with a corresponding src attribute.\nIn your function \"handleFile\", you get your contents.</p>\n\n<p>The location of the file would probably initally have to be set by the user, but after that you can save the location in localStorage or something like that.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is an example that uses JSON data in an external file that works locally or on a server.   This example just uses the browser's language setting to load a &lt; script > with localized html and then processes its json object to reset the data in the indicated tags with localized content</p>\n\n<pre><code>&lt;html&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;\n&lt;head&gt;\n&lt;script&gt;\n    function setLang(){\n        for (var i=0;i&lt;items.length;i++){\n            term=document.getElementById(items[i].id)\n            if (term) term.innerHTML=items[i].value\n        }\n    }\n    var lang=navigator.userLanguage || navigator.language;\n    var script=document.createElement(\"script\");\n    script.src=document.URL+\"-\"+lang.substring(0,2)+\".js\"\n    var head = document.getElementsByTagName('head')[0]\n    head.insertBefore(script,head.firstChild)\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body onload='setLang()'&gt;\n&lt;div id=\"string1\" class=\"txt\"&gt;This is the default text of string1.&lt;/div&gt; \n&lt;div id=\"string2\" class=\"txt\"&gt;This is the default text of string2.&lt;/div&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>The data files for this look like:</p>\n\n<pre><code>items=[\n{\"id\":\"string1\",\"value\":\"Localized text of string1.\"},\n{\"id\":\"string2\", \"value\":\"Localized text of string2.\"}\n];\n</code></pre>\n\n<p>but you can use any parameter to conditionally load the appropriate file (it will be inserted as the first tag in &lt; head >, so it will be usable in anywhere) and the JSON format is capable of handling a large variety of data.  You may want to rename the function setLang to something more appropriate and modify it to meet your needs such as ... for each i add a row, then add fields with the data (it looks like you already have a handle on that part) and your JSON would look like:</p>\n\n<pre><code>items=[\n{\"fname\":\"john\",\"lname\":\"smith\",\"address\":\"1 1st St\",\"phone\":\"555-1212\"},\n{\"fname\":\"jane\",\"lname\":\"smith\",\"address\":\"1 1st St\",\"phone\":\"555-1212\"}\n];\n</code></pre>\n\n<p>if you need to preprocess your data, awk is pretty handy - it would be something like: (untested guestimate)</p>\n\n<pre><code>awk 'BEGIN{FS=\",\";print \"items=[\\n\"}\n{printf \"{\\\"fname\\\":\\\"%s\\\",\\\"lname\\\":\\\"smith\\\",\\\"address\\\":\\\"1 1st St\\\",\\\"phone\\\":\\\"555-1212\\\"},\\n\", $1, $2, $3, $4}\nEND{print \"];\"}' file.csv &gt; file.js\n</code></pre>\n\n<p>Edit: now that OP is more clear, only mozilla browsers allow XMLHttpRequest on file:// out of the box and chrome (possibly other webkit based browsers) <em>can</em> be configured to allow it.  Knowing that it may <em>NOT</em> work on IE&lt;10, you can:</p>\n\n<pre><code>var filePath = \"your_file.txt\";\nxmlhttp = new XMLHttpRequest();\nxmlhttp.open(\"GET\",filePath,false);\nxmlhttp.overrideMimeType('text/plain');\nxmlhttp.send(null);\n//maybe check status !=404 here\nvar fileContent = xmlhttp.responseText;\nvar fileArray = fileContent.split('\\n')\nvar n = fileArray.length;\n//process your data from here probably using split again for ','\n</code></pre>\n\n<p>I'm leaving the initial json-p variation for others that may have a similar issue, but have some control of their data format, since it will work on all javascript capable browsers.  However, if anyone knows a way to make it work for IE (other than running a small web server), please edit.</p>\n\n<p>Edit 2:</p>\n\n<p>With mozilla browsers you can also use iframes</p>\n\n<pre><code>&lt;html&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;\n&lt;head&gt;\n&lt;script&gt;\nfunction showContents(frameObject){\n    alert(frameObject.contentDocument.body.innerHTML);\n    //replace with your code\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body onload='showContents()'&gt;\n&lt;iframe id=\"frametest\" src=\"data.txt\" onload=\"showContents(this);\" \n    style=\"visibility:hidden;display:none\"&gt;&lt;/iframe&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Ensuring that the file is in the same directory or in a sub directory, load the file with AJAX.  </p>\n\n<p>Unlike a script tag, you will get access to the contents.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Assuming the csv file is in the same directory as the app, I would load the file with AJAX. As far as I know, one can get the file in text format, and then parse it. This should work in IE and Firefox, but does not work in Chrome (unless one runs chrome with the <code>--allow-file-access-from-files</code> command line setting).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This can be done quite easily using javascript XMLHttpRequest() class:</p>\n\n<pre><code>function FileHelper()\n{}\n{\n    FileHelper.readStringFromFileAtPath = function(pathOfFileToReadFrom)\n    {\n        var request = new XMLHttpRequest();\n        request.open(\"GET\", pathOfFileToReadFrom, false);\n        request.send(null);\n        var returnValue = request.responseText;\n\n        return returnValue;\n    }\n}\n\n...\n\nvar text = FileHelper.readStringFromFileAtPath ( \"mytext.txt\" );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><strong>Background:</strong> </p>\n\n<p>I want to make an \"app\" that uses JavaScript/HTML <em>only</em> and can be opened by a browser directly from the filesystem. This app <strong>must</strong> be able to read data from another file. I'll then use JS to parse it and render pages. As a simplified example, imagine I have a CSV file <a href=\"http://ablazex.com/demos/csv.txt\">(download here)</a>:</p>\n\n<pre><code>Mark Rodgers,mark.rodgers@company.com,Accounting\n[...]\nMelissa Jones,melissa@company.com,CEO\n</code></pre>\n\n<p>I want to be able to read the file using JS and use data in it to generate my page. </p>\n\n<p><strong>What I've accomplished so far:</strong></p>\n\n<p><strong><a href=\"http://ablazex.com/demos/load.html\">Demo</a></strong> (right-click -> \"Save As\" to save HTML to your computer). It's also available on <a href=\"http://jsfiddle.net/ZqZ4r/\"><strong>jsfiddle</strong></a> in semi-broken fashion (layout is broken, but it should still be functionally correct).</p>\n\n<p>Simply drag and drop the CSV text file into the drag and drop box, or select the text file using the file menu, and JavaScript will read, parse the file and populate the table.</p>\n\n<p>This relies on the FileReader API; most of the heavy lifting is done by this function:</p>\n\n<pre><code>function handleFileSelect(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    var files = evt.target.files || evt.dataTransfer.files; // FileList object.\n    var file = files[0];\n\n    // this creates the FileReader and reads stuff as text\n    var fr = new FileReader();\n    fr.onload = parse;\n    fr.readAsText(file);\n\n    // this is the function that actually parses the file\n    // and populates the table\n    function parse()\n    {\n        var table = document.getElementById('emps');\n        var employees = fr.result.split('\\n'); var c = 0;\n        for (var i in employees)\n        {\n            var employee = employees[i].split(',');\n            if (employee.length == 3)\n            {\n                var row = document.createElement('tr');\n                row.innerHTML = \"&lt;td&gt;\" + employee.join(\"&lt;/td&gt;&lt;td&gt;\") + \"&lt;/td&gt;\";\n                table.appendChild(row);\n                c++;\n            }\n        }\n        document.getElementById('result').innerHTML = '&lt;span&gt;Added ' + c + ' employees from file: ' + file.name + '&lt;/span&gt;';\n    }\n}\n</code></pre>\n\n<p>This is <em>almost</em> OK, but it inconveniences the user into manually loading a file. Ideally it should be able to load it automatically, but for security reasons no browser will allow that... yet.</p>\n\n<p><strong>Solution Requirements:</strong></p>\n\n<ul>\n<li><p>Must work offline; ie: it can't rely on any online service. This also includes HTTP servers running on the local machine. The idea is to have this run on any computer with just a browser installed.</p></li>\n<li><p>Must work when the page is opened using the <code>file:///</code> protocol (ie: a HTML page on the hard drive). </p></li>\n<li><p>Should <strong>not</strong> rely on third party add ons (eg: Flash, Java, <em>shudders</em> ActiveX). I'm pretty sure these probably wouldn't work anyways if the page is in <code>file:///</code></p></li>\n<li><p>It must be able to accept <strong>arbitrary</strong> data. This rules out loading a file in a well-behaved format that's ready for consumption \nlike JSON.</p></li>\n<li><p>If it works on either (ideally both) Firefox or Chrome it's fine. It's also OK to rely on experimental APIs </p></li>\n</ul>\n\n<p>I know what the file name is beforehand, so it could be coded in the HTML itself. <em>Any</em> solution that enables me to read a file from disk is fine, it doesn't have to use the FileReader API.</p>\n\n<p>So if there's a clever hack to load a file into a page that's fine too (maybe load it into an invisible iframe and have JS retrieve the contents); that's OK too. </p>\n",
            "last_activity_date": 1393863722,
            "question_id": 13428532,
            "score": 26,
            "tags": [
                "javascript",
                "html5",
                "file",
                "filereader"
            ],
            "title": "Using a local file as a data source in JavaScript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>So I figured it out myself.</p>\n\n<p>I got the necessary files and instructions from this repo: <a href=\"https://github.com/philix/jsx-requirejs-plugin\">jsx-requirejs-plugin</a>.</p>\n\n<p>Once I had <a href=\"https://raw.github.com/philix/jsx-requirejs-plugin/master/js/jsx.js\">jsx plugin</a> and modified version of <a href=\"https://raw.github.com/alirussell/jsx-requirejs-plugin/master/js/JSXTransformer-0.10.0.js\">JSXTransformer</a>, I changed my code as instructed in the repository :</p>\n\n<pre><code>require.config({\n  // ...\n\n  paths: {\n    \"react\": \"path/to/react\",\n    \"JSXTransformer\": \"path/to/JSXTransformer\",\n    \"jsx\": \"path/to/jsx plugin\"\n    ...\n  }\n\n  // ...\n});\n</code></pre>\n\n<p>Then, I could reference JSX files via the <code>jsx!</code> plugin syntax. For example, to load the Timer.jsx file that is in a components directory:</p>\n\n<pre><code>require(['react', 'jsx!components/Timer'], function (React, Timer) {\n   ...\n   React.renderComponent(&lt;Timer /&gt;, document.getElementById('timer'));\n   ...\n});\n</code></pre>\n\n<p>I could also access <code>.js</code> files that had <code>jsx</code> syntax in them using the same code:</p>\n\n<pre><code>require(['react', 'jsx!components/Timer'], function (React, Timer) {\n   ...\n   React.renderComponent(&lt;Timer /&gt;, document.getElementById('timer'));\n   ...\n});\n</code></pre>\n\n<p>Also, I did not need to put <code>/** @jsx React.DOM */</code> at the top of files using <code>jsx</code> syntax.</p>\n\n<p>Hope it helps.</p>\n",
                    "is_accepted": true,
                    "score": 49
                }
            ],
            "body": "<p>Recently, I started using <code>reactjs</code> along with a <code>backbonejs</code> router to build an application.</p>\n\n<p>I usually use use <code>requirejs</code> for dependency and code management. But, problem arises when I try to include files that contain <code>jsx</code> syntax.</p>\n\n<p>This is what I have so far as my <code>router.js</code>:</p>\n\n<pre><code>define([\"backbone\", \"react\"], function(Backbone, React) {\n\n  var IndexComponent = React.createClass({\n    render : function() {\n      return (\n        &lt;div&gt;\n        Some Stuff goes here\n        &lt;/div&gt;\n        );\n    }\n  });\n\n\n\n  return Backbone.Router.extend({\n    routes : {\n      \"\": \"index\"\n    },\n    index : function() {\n      React.renderComponent(&lt;IndexComponent /&gt;, document.getElementById('index'));\n    }\n  });\n});\n</code></pre>\n\n<p>How do I put IndexComponent in its own file and call it in this file ? I have tried the usual method (the same that I have used with backbone and react) but got an error due to <code>jsx</code> syntax.</p>\n",
            "last_activity_date": 1399273683,
            "question_id": 23381561,
            "score": 25,
            "tags": [
                "javascript",
                "requirejs",
                "frontend",
                "reactjs"
            ],
            "title": "Using reactjs with requirejs"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Move your map variable into a scope where the event listener can use it.  You are creating the map inside your initialize() function and nothing else can use it when created that way.</p>\n\n<pre><code>var map; //&lt;-- This is now available to both event listeners and the initialize() function\nfunction initialize() {\n  var mapOptions = {\n   center: new google.maps.LatLng(40.5472,12.282715),\n   zoom: 6,\n   mapTypeId: google.maps.MapTypeId.ROADMAP\n  };\n  map = new google.maps.Map(document.getElementById(\"map-canvas\"),\n            mapOptions);\n}\ngoogle.maps.event.addDomListener(window, 'load', initialize);\ngoogle.maps.event.addDomListener(window, \"resize\", function() {\n var center = map.getCenter();\n google.maps.event.trigger(map, \"resize\");\n map.setCenter(center); \n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 36
                }
            ],
            "body": "<p>I'm trying to get google maps responsive and resize while keeping its center when windows resizes. I read other stack questions in regards such as:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/15421369/responsive-google-map\">Responsive Google Map?</a> and <a href=\"http://stackoverflow.com/questions/8792676/center-google-maps-v3-on-browser-resize-responsive\">Center Google Maps (V3) on browser resize (responsive)</a></p>\n\n<p>from the second stack question <a href=\"http://hsmoore.com/keep-google-map-v3-centered-when-browser-is-resized/\">I got a link which helps me with part of the code</a> but I still have no luck. This is the code I am using, when I resize the window, the maps doesn't resize at all</p>\n\n<pre><code>    function initialize() {\n      var mapOptions = {\n       center: new google.maps.LatLng(40.5472,12.282715),\n       zoom: 6,\n       mapTypeId: google.maps.MapTypeId.ROADMAP\n      };\n      var map = new google.maps.Map(document.getElementById(\"map-canvas\"),\n                mapOptions);\n    }\n    google.maps.event.addDomListener(window, 'load', initialize);\n    google.maps.event.addDomListener(window, \"resize\", function() {\n     var center = map.getCenter();\n     google.maps.event.trigger(map, \"resize\");\n     map.setCenter(center); \n    });\n</code></pre>\n\n<p>html</p>\n\n<pre><code> &lt;div id=\"map-canvas\"/&gt;\n</code></pre>\n\n<p>css</p>\n\n<pre><code>html { height: 100% }\nbody { height: 100%; margin: 0; padding: 0 }\n#map-canvas { height: 100% }\n</code></pre>\n",
            "last_activity_date": 1397211217,
            "question_id": 18444161,
            "score": 24,
            "tags": [
                "javascript",
                "jquery",
                "google-maps-api-3"
            ],
            "title": "Google maps responsive resize"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><strong>Using plain javascript</strong></p>\n\n<pre><code>&lt;html&gt;\n\n  &lt;head&gt;\n\n     &lt;!-- define on/off styles --&gt;\n     &lt;style type=\"text/css\"&gt;\n      .on  { background:blue; }\n      .off { background:red; }\n     &lt;/style&gt;\n\n     &lt;!-- define the toggle function --&gt;\n     &lt;script language=\"javascript\"&gt;\n        function toggleState(item){\n           if(item.className == \"on\") {\n              item.className=\"off\";\n           } else {\n              item.className=\"on\";\n           }\n        }\n     &lt;/script&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n     &lt;!-- call 'toggleState' whenever clicked --&gt;\n     &lt;input type=\"button\" id=\"btn\" value=\"button\" \n        class=\"off\" onclick=\"toggleState(this)\" /&gt;\n  &lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>Using jQuery</strong></p>\n\n<p>If you use jQuery, you can do it using the <a href=\"http://docs.jquery.com/Effects/toggle\">toggle</a> function, or using the <a href=\"http://docs.jquery.com/Attributes/toggleClass\">toggleClass</a> function inside click event handler, like this:</p>\n\n<pre><code>$(document).ready(function(){\n    $('a#myButton').click(function(){\n        $(this).toggleClass(\"btnClicked\");\n    });\n});\n</code></pre>\n\n<p>Using jQuery UI effects, you can animate transitions: <a href=\"http://jqueryui.com/demos/toggleClass/\">http://jqueryui.com/demos/toggleClass/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Outline: Create two elements: a slider/switch and a trough as a parent of the slider. To toggle the state, switch the slider element between an \"on\" and an \"off\" class. In the style for one class, set \"left\" to 0 and leave \"right\" the default; for the other class, do the opposite:</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n.toggleSwitch {\n    width: ...;\n    height: ...;\n    /* add other styling as appropriate to position element */\n    position: relative;\n}\n.slider {\n    background-image: url(...);\n    position: absolute;\n    width: ...;\n    height: ...;\n}\n.slider.on {\n    right: 0;\n}\n.slider.off {\n    left: 0;\n}\n&lt;/style&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction replaceClass(elt, oldClass, newClass) {\n    var oldRE = RegExp('\\\\b'+oldClass+'\\\\b');\n    elt.className = elt.className.replace(oldRE, newClass);\n}\nfunction toggle(elt, on, off) {\n    var onRE = RegExp('\\\\b'+on+'\\\\b');\n    if (onRE.test(elt.className)) {\n        elt.className = elt.className.replace(onRE, off);\n    } else {\n        replaceClass(elt, off, on);\n    }\n}\n&lt;/script&gt;\n...\n&lt;div class=\"toggleSwitch\" onclick=\"toggle(this.firstChild, 'on', 'off');\"&gt;&lt;div class=\"slider off\" /&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Alternatively, just set the background image for the \"on\" and \"off\" states, which is a much easier approach than mucking about with positioning.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You mean something like IPhone checkboxes? \nTry <a href=\"http://awardwinningfjords.com/2009/06/16/iphone-style-checkboxes.html\" rel=\"nofollow\">Thomas Reynolds' iOS Checkboxes script:</a></p>\n\n<blockquote>\n  <p>Once the files are available to your site, activating the script is very easy:</p>\n  \n  <p>...</p>\n\n<pre><code>$(document).ready(function() {\n  $(':checkbox').iphoneStyle();\n});\n</code></pre>\n</blockquote>\n\n<p>Results: </p>\n\n<p><img src=\"http://i.stack.imgur.com/JDYAA.png\" alt=\"\"></p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>check out this generator: <a href=\"http://proto.io/freebies/onoff/\" rel=\"nofollow\">On/Off FlipSwitch</a></p>\n\n<p>you can get various different style outcomes and its css only - no javascript!</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>I was searching for the same. If you use Bootstrap, an excellent (unofficial) <a href=\"http://www.larentis.eu/switch/\">Bootstrap Switch is available</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I just wrote an ios 7 implementation in pure CSS. Here is a <a href=\"http://jsfiddle.net/tujamaica/EjYfr/embedded/result/\" rel=\"nofollow\">demo</a> and the <a href=\"https://github.com/tujamaica/ios7-switches\" rel=\"nofollow\">Github repo</a> repo.</p>\n\n<p><img src=\"https://raw.githubusercontent.com/tujamaica/ios7-switches/master/screenshot.jpg\" alt=\"screenshot\"></p>\n\n<p><strong>Usage:</strong>\n<code>\n&lt;input type=\"checkbox\" class=\"switch\" id=\"cb\" /&gt;\n&lt;label for=\"cb\"&gt;&lt;/label&gt;\n</code></p>\n\n<p>Cheers.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I want to have a sliding switch. On the left would be Off and on the right would be On. When the user toggles the switch, I want the 'slider' portion to slide to the other side and indicate it is off. I could then have a callback that takes as input the state of the toggle switch so I can act accordingly.</p>\n\n<p>Any idea how to do this?</p>\n",
            "last_activity_date": 1422066040,
            "question_id": 1957466,
            "score": 24,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "How to create an on/off switch with Javascript/CSS?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You probably want to take a look at <a href=\"http://msdn.microsoft.com/en-us/library/ke5z92ks.aspx\" rel=\"nofollow\">Build Events</a>, with which you can specify a command line to execute post-build.  Your question is, additionally, similar to <a href=\"http://stackoverflow.com/questions/747941/visual-studio-copying-files-into-the-application-folder-at-compile-time\">these</a> <a href=\"http://stackoverflow.com/questions/820091/using-visual-studio-to-copy-files\">questions</a>.</p>\n\n<p>For the actual copying, you can quite easily just make use of the <a href=\"http://ss64.com/nt/copy.html\" rel=\"nofollow\">COPY</a> command.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you want to do Javascript minification via Visual Studio, this will get you started: <a href=\"http://encosia.com/2009/05/20/automatically-minify-and-combine-javascript-in-visual-studio/\" rel=\"nofollow\">http://encosia.com/2009/05/20/automatically-minify-and-combine-javascript-in-visual-studio/</a></p>\n\n<p>Otherwise, I'd recommend a tool that can automatically combine and minify Javascript. The two tools that I have looked at are <a href=\"http://www.codethinked.com/post/2010/03/21/Bundler-Now-Supports-Named-Bundles.aspx\" rel=\"nofollow\">Justin Etheredge</a>'s <a href=\"https://github.com/jetheredge/SquishIt\" rel=\"nofollow\">Bundler</a> and <a href=\"http://combres.codeplex.com/\" rel=\"nofollow\">Combres</a>. I'm using Bundler in my current project and one of my work colleagues is using Combres. Bundler is a little bit simpler to use but it does less than Combres. With Bundler if debug is turned off in web.config then it doesn't minify and combine which means that you can debug the javascript in your dev environment.</p>\n\n<p>P.S. Bundler was renamed to SquishIt.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I am not quite sure whether this approach would be useful in this situation but I could imagine it...\nYou can modify csproj files to e.g. influence what files should be included in a certain type of build. </p>\n\n<p>With certain type I am referring to the Configuration Manager. </p>\n\n<p>Debug and Release are the default ones but nothing stops you from making new ones. Based on the selected configuration you can have different files being part of the configuration and I suppose that you could publish different files that way. I have describds that strategy on my blog here : <a href=\"http://realfiction.net/go/130\" rel=\"nofollow\">http://realfiction.net/go/130</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This article about \"Automatically Minify, Combine, Compress, and Cache *.js and *.css Files in your ASP.NET Project\" can maybe help you</p>\n\n<p><a href=\"http://www.codeproject.com/KB/aspnet/CssAndJavaScriptOptimizer.aspx?display=Print\" rel=\"nofollow\">http://www.codeproject.com/KB/aspnet/CssAndJavaScriptOptimizer.aspx?display=Print</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><em><strong>Edit (2012 October):</em></strong> ASP.NET 4.5 now includes <a href=\"http://www.asp.net/mvc/tutorials/mvc-4/bundling-and-minification\">Bundling and minification</a>.  The current version doesn't support dynamic javascript generation very well, but it's otherwise pretty usable and for instance does watch the filesystem to live changes as described below; before rolling your own compression, try that!</p>\n\n<p><em><strong>Old answer:</em></strong></p>\n\n<p>Rather than implement this at build time, I suggest you do so at runtime.  This has a number of advantages:</p>\n\n<ul>\n<li>You can include debugging parameters that turn off the combining and minification to permit easier identification of errors.  This also allows you to run with less difference between development and production environment.</li>\n<li>You gain some flexibility.  I've twice been able to fix errors via a script-only fix that can go live directly.  For simple but critical errors that's a nice option.</li>\n<li>It's quite a bit simpler to implement - you already have the expertise in implementing http responses, which applies nicely here.</li>\n<li>You can track the last-modified date of the scripts involved, and not only use that to set the appropriate ETags and whatnot (which IIS can do too), but rather set a far-future expiry date.  Then, rather than linking the actual scipt (whether minified or not), you can link the script with some short token in the querystring - that way clients don't need to check whether the js has updated.  When it has, the pages will link to a \"new\" script file that needs to be separately requested anyhow.  (This is possible to do in build scripts, but trickier).</li>\n<li>A complex build process often has hidden costs.  Not only does it take longer to run, but what happens when you want to update your build automation tool?  When you switch IIS or windows versions?  When you migrate to VS 2010?  How easy is it to bring new developers up to speed?</li>\n</ul>\n\n<p>This is the rough outline of the process I follow:</p>\n\n<ol>\n<li>I specify two directories as containing only compressible css and js.  At appdomain instantiation or shortly thereafter via a static constructor, a class finds the contents of those directories and creates a <a href=\"http://msdn.microsoft.com/en-us/library/system.io.filesystemwatcher.aspx\"><code>FileSystemWatcher</code></a> to watch for changes.</li>\n<li>All files are read in order of filename (using prefixes such as <code>00_jquery.js</code> <code>10_init.js</code> etc. helps control order here).  The list of filenames is stored for debug purposes.</li>\n<li>All files are combined via string concatenation, then minified by YUI, then compressed via <code>GZipStream</code>.  A version specific token is computed either by newest last-modified date or by the hash of the result.</li>\n<li>The result of the compression (byte array, filenames, and version-specific token) is stored in a static class variable (protected by a <code>lock</code>).  If the file system watcher detects an update, step 2 starts again and runs in the background until the compression completes - hence the locking.</li>\n<li>Any page wishing to include the combined javascript (and/or css) calls the shared static variable.  If we're in debug mode, that generates a script (or link) tag for each filename as stored in step two, otherwise, this generates a single script (or link) tag to a Uri that's handled by a custom <code>IHttpHandler</code>.  All Uri's include the version-specific token in the querystring - this is ignored both by the IIS static file handler and the custom http handler for the combined minified version, but makes caching easy.</li>\n<li>In a custom IHttpHandler, when a request for the combined javascript (or css) is received, the Content-Encoding: gzip header is set, and a far-future Expiry date.  Then the precompressed byte array is written directly to the http stream via <code>context.Response.OutputStream</code>.</li>\n</ol>\n\n<p>Using that approach, you won't need to fiddle with web.config options whenever you add or remove a script file; you can update scripts while the app is running and clients will request these on the very next page view - but you still will get optimal cache behavior since browsers won't even send an If-Not-Modified request due to the expiry header.  Usually, compressing scripts should take a second or so and the compressed result should be so small that the memory overhead of the static variable is negligible (at most a few 100 KB for a truly large amount of scripting / css).</p>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>I have a Scripts folder, that includes all the .js files used in the project. Using the Ajax Minifier task, I generate .min.js files for each one.\nDepending on whether the application is running in debug or release mode, I include the original .js file, or the minified one.</p>\n\n<p>The Scripts folder looks like this:</p>\n\n<pre><code>Scripts/script1.js\nScripts/script1.min.js   // Outside the project, generated automatically on build\nScripts/script2.js\nScripts/script2.min.js   // Outside the project, generated automatically on build\n</code></pre>\n\n<p>The .min.js files are outside the project (although in the same folder as the original files), and they are not copied into the destination folder when we publish the project.</p>\n\n<p>I have no experience whatsoever using build tasks (well, apart from including the minifier task), so I would appreciate if anyone could advise me as to which would be the correct way to:</p>\n\n<ul>\n<li>Copy the .min.js files to the destination folder when I publish the app from Visual Studio.</li>\n<li>Delete / Not copy the original js files (this is not vital, but I'd rather not copy files that will not be used in the app).</li>\n</ul>\n\n<p>Thanks,</p>\n\n<p><strong>Edit:</strong> From the responses, I see that I missed some details, and that maybe I'm looking for the wrong solution to the problem. I'll add the following details to the question:</p>\n\n<ul>\n<li>If possible, we'd rather not create copy scripts in the build process of the solution. Sure, we considered it, but we were using Web deployment projects up until now, and we'd rather start using the new Publish feature of VS2010 (which is supposed to replace these projects) than manually adding copy commands to the build task.</li>\n<li>The *.min.js files are not included in the project because they can't be in the Source control system (TFS at this moment). They are files generated during compilation, and it would be akin to including the 'bin' folder in the TFS (including the problems it would cause). Maybe we should create the min files in a different folder and treat it like 'bin'? (Is that even possible?)</li>\n</ul>\n",
            "last_activity_date": 1349960682,
            "question_id": 2364644,
            "score": 22,
            "tags": [
                "javascript",
                "visual-studio-2010"
            ],
            "title": "Visual Studio 2010: Publish minified javascript files instead of the original ones"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>As this event is to move <code>whatever</code> from one position to one position, why don't you use <code>onkeypress</code> event, so in that way if the user key pressed the <code>up</code> key, the <code>whatever</code> will keep moving up, as the <code>Pressed(e)</code> will be called many times until the user releases the key.</p>\n\n<pre><code>&lt;body onLoad=\"Load()\" onkeypress=\"Pressed(event)\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want key repeat in a controllable fashion, you will have to implement it yourself, as keypress events are fired dependent on the OS's idea of how keys should repeat. That means there may be variable initial and following delays, and holding down two keys at once will cause only one of them to repeat.</p>\n\n<p>You will have to keep a record of whether each key is currently pressed, and ignore <code>keydown</code> events when the key is already down. This is because many browsers will fire a <code>keydown</code> as well as a <code>keypress</code> event when an autorepeat occurs, and if you're reproducing key repeat yourself you'll need to suppress that.</p>\n\n<p>For example:</p>\n\n<pre><code>// Keyboard input with customisable repeat (set to 0 for no key repeat)\n//\nfunction KeyboardController(keys, repeat) {\n    // Lookup of key codes to timer ID, or null for no repeat\n    //\n    var timers= {};\n\n    // When key is pressed and we don't already think it's pressed, call the\n    // key action callback and set a timer to generate another one after a delay\n    //\n    document.onkeydown= function(event) {\n        var key= (event || window.event).keyCode;\n        if (!(key in keys))\n            return true;\n        if (!(key in timers)) {\n            timers[key]= null;\n            keys[key]();\n            if (repeat!==0)\n                timers[key]= setInterval(keys[key], repeat);\n        }\n        return false;\n    };\n\n    // Cancel timeout and mark key as released on keyup\n    //\n    document.onkeyup= function(event) {\n        var key= (event || window.event).keyCode;\n        if (key in timers) {\n            if (timers[key]!==null)\n                clearInterval(timers[key]);\n            delete timers[key];\n        }\n    };\n\n    // When window is unfocused we may not get key events. To prevent this\n    // causing a key to 'get stuck down', cancel all held keys\n    //\n    window.onblur= function() {\n        for (key in timers)\n            if (timers[key]!==null)\n                clearInterval(timers[key]);\n        timers= {};\n    };\n};\n</code></pre>\n\n<p>then:</p>\n\n<pre><code>// Arrow key movement. Repeat key five times a second\n//\nKeyboardController({\n    37: function() { Move(-1, 0); },\n    38: function() { Move(0, -1); },\n    39: function() { Move(1, 0); },\n    40: function() { Move(0, 1); }\n}, 200);\n</code></pre>\n\n<p>Although, most action-based games have a fixed-time main frame loop, which you can tie the key up/down handling into.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>You could start the movement onkeydown and only end it onkeyup?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've solved it like this:</p>\n\n<pre>\nvar pressedl = 0;\nvar pressedu = 0;\nvar pressedr = 0;\nvar pressedd = 0;\n\nfunction Down(e) { \n        cxc = e.keyCode;\n        if(cxc == 37)\n            pressedl = 1;\n        if(cxc == 38)\n            pressedu = 1;\n        if(cxc == 39)\n            pressedr = 1;\n        if(cxc == 40)\n            pressedd = 1;\n        //alert(cxc);\n    }\n    function Up(e) {\n        cxc = e.keyCode;\n        if(cxc == 37)\n            pressedl = 0;\n        if(cxc == 38)\n            pressedu = 0;\n        if(cxc == 39)\n            pressedr = 0;\n        if(cxc == 40)\n            pressedd = 0;\n        //alert(cxc);\n    }\n</pre>\n\n<p><code>&lt;body onLoad=\"Load()\" onKeyDown=\"Down(event)\" onKeyUp=\"Up(event)\"&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This here is Lucas' solution in a more abstract version:</p>\n\n<p><a href=\"http://jsfiddle.net/V2JeN/4/\" rel=\"nofollow\">http://jsfiddle.net/V2JeN/4/</a></p>\n\n<p>Seems you can only press 3 keys at a time to my surprise.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm a total novice at this, but why not combine KeyDown with KeyUp? I am working on a similar project right now and, after checking out <a href=\"http://www.quirksmode.org/js/keys.html\" rel=\"nofollow\">quirksmode</a> I am going to set forth at figuring out how to combine the two events such that the whole time between a Down and Up realizes the desired affect.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is nearly the same as the excellent answer from @bobince</p>\n\n<p>I've amended it slightly to allow individual values for the interval</p>\n\n<pre><code>// Keyboard input with customisable repeat (set to 0 for no key repeat)\n// usage\n/**\nKeyboardController({\n    32: {interval:0, callback: startGame },\n    37: {interval:10, callback: function() { padSpeed -= 5; } },\n    39: {interval:10, callback: function() { padSpeed += 5; } }\n});\n*/\n\nfunction KeyboardController(keyset) {\n    // Lookup of key codes to timer ID, or null for no repeat\n    //\n    var timers= {};\n\n    // When key is pressed and we don't already think it's pressed, call the\n    // key action callback and set a timer to generate another one after a delay\n    //\n    document.onkeydown= function(event) {\n        var key= (event || window.event).keyCode;\n        if (!(key in keyset))\n            return true;\n        if (!(key in timers)) {\n            timers[key]= null;\n            keyset[key].callback();\n            if (keyset[key].interval !== 0)\n                timers[key]= setInterval(keyset[key].callback, keyset[key].interval);\n        }\n        return false;\n    };\n\n    // Cancel timeout and mark key as released on keyup\n    //\n    document.onkeyup= function(event) {\n        var key= (event || window.event).keyCode;\n        if (key in timers) {\n            if (timers[key]!==null)\n                clearInterval(timers[key]);\n            delete timers[key];\n        }\n    };\n\n    // When window is unfocused we may not get key events. To prevent this\n    // causing a key to 'get stuck down', cancel all held keys\n    //\n    window.onblur= function() {\n        for (key in timers)\n            if (timers[key]!==null)\n                clearInterval(timers[key]);\n        timers= {};\n    };\n};\n</code></pre>\n\n<p>I've also got a plan to use setTimeout instead of setInterval for the reasons given in this question: <a href=\"http://stackoverflow.com/questions/729921/settimeout-or-setinterval\">setTimeout or setInterval?</a></p>\n\n<p>I'll update this answer once I've amended and tested.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have the following problem:\nI'm trying to write a javascript game, and the character is being controlled by the arrow keys.<br>\nThe problem is, when one keeps the key pressed, there is a short delay between firing the first keypress and the repeated kepress.<br>\nAlso, when one presses the \"right arrow key\" and keeps it pressed, and then presses the \"up arrow key\" the character doesn't move to the top right corner, but stops the moving in the right direction and starts moving up.<br>\nThis is the code I'm using:</p>\n\n<pre><code>&lt;body onLoad=\"Load()\" onKeyDown=\"Pressed(event)\"&gt;\n</code></pre>\n\n<pre>\nfunction Pressed(e) { \n        cxc = e.keyCode;\n        if(cxc == 37)\n            Move(-1,0);\n        if(cxc == 38)\n            Move(0,-1);\n        if(cxc == 39)\n            Move(1,0);\n        if(cxc == 40)\n            Move(0,1);\n    }\n</pre>\n\n<p>does anybody have an idea??</p>\n",
            "last_activity_date": 1354099461,
            "question_id": 3691461,
            "score": 21,
            "tags": [
                "javascript",
                "events",
                "javascript-events"
            ],
            "title": "remove key press delay in javascript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>What I found is the following site: <a href=\"http://home.hiwaay.net/~taylorc/toolbox/geography/geoutm.html\" rel=\"nofollow\">http://home.hiwaay.net/~taylorc/toolbox/geography/geoutm.html</a>\nIt has a javascript converter, you should check the algorithm there. From the page:</p>\n\n<blockquote>\n  <p>Programmers: The JavaScript source code in this document may be copied and reused without restriction.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>According to this page, UTM is supported by proj4js.</p>\n\n<p><a href=\"http://trac.osgeo.org/proj4js/wiki/UserGuide#Supportedprojectionclasses\">http://trac.osgeo.org/proj4js/wiki/UserGuide#Supportedprojectionclasses</a></p>\n\n<p>You may also want to take a look at <a href=\"http://gdal.org\">GDAL</a>.  The gdal library has excellent python support, though it may be a bit overkill if you're only doing projection conversion.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I ended up finding java code from IBM that solved it: <a href=\"http://www.ibm.com/developerworks/java/library/j-coordconvert/index.html\">http://www.ibm.com/developerworks/java/library/j-coordconvert/index.html</a></p>\n\n<p>Just for reference, here is my python implementation of the method I needed:</p>\n\n<pre><code>import math\n\ndef utmToLatLng(zone, easting, northing, northernHemisphere=True):\n    if not northernHemisphere:\n        northing = 10000000 - northing\n\n    a = 6378137\n    e = 0.081819191\n    e1sq = 0.006739497\n    k0 = 0.9996\n\n    arc = northing / k0\n    mu = arc / (a * (1 - math.pow(e, 2) / 4.0 - 3 * math.pow(e, 4) / 64.0 - 5 * math.pow(e, 6) / 256.0))\n\n    ei = (1 - math.pow((1 - e * e), (1 / 2.0))) / (1 + math.pow((1 - e * e), (1 / 2.0)))\n\n    ca = 3 * ei / 2 - 27 * math.pow(ei, 3) / 32.0\n\n    cb = 21 * math.pow(ei, 2) / 16 - 55 * math.pow(ei, 4) / 32\n    cc = 151 * math.pow(ei, 3) / 96\n    cd = 1097 * math.pow(ei, 4) / 512\n    phi1 = mu + ca * math.sin(2 * mu) + cb * math.sin(4 * mu) + cc * math.sin(6 * mu) + cd * math.sin(8 * mu)\n\n    n0 = a / math.pow((1 - math.pow((e * math.sin(phi1)), 2)), (1 / 2.0))\n\n    r0 = a * (1 - e * e) / math.pow((1 - math.pow((e * math.sin(phi1)), 2)), (3 / 2.0))\n    fact1 = n0 * math.tan(phi1) / r0\n\n    _a1 = 500000 - easting\n    dd0 = _a1 / (n0 * k0)\n    fact2 = dd0 * dd0 / 2\n\n    t0 = math.pow(math.tan(phi1), 2)\n    Q0 = e1sq * math.pow(math.cos(phi1), 2)\n    fact3 = (5 + 3 * t0 + 10 * Q0 - 4 * Q0 * Q0 - 9 * e1sq) * math.pow(dd0, 4) / 24\n\n    fact4 = (61 + 90 * t0 + 298 * Q0 + 45 * t0 * t0 - 252 * e1sq - 3 * Q0 * Q0) * math.pow(dd0, 6) / 720\n\n    lof1 = _a1 / (n0 * k0)\n    lof2 = (1 + 2 * t0 + Q0) * math.pow(dd0, 3) / 6.0\n    lof3 = (5 - 2 * Q0 + 28 * t0 - 3 * math.pow(Q0, 2) + 8 * e1sq + 24 * math.pow(t0, 2)) * math.pow(dd0, 5) / 120\n    _a2 = (lof1 - lof2 + lof3) / math.cos(phi1)\n    _a3 = _a2 * 180 / math.pi\n\n    latitude = 180 * (phi1 - fact1 * (fact2 + fact3 + fact4)) / math.pi\n\n    if not northernHemisphere:\n        latitude = -latitude\n\n    longitude = ((zone &gt; 0) and (6 * zone - 183.0) or 3.0) - _a3\n\n    return (latitude, longitude)\n</code></pre>\n\n<p>And here I thought it was something simple like easting*x+zone*y or something.</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>There is a perl module via CPAN called Geography::NationalGrid which can convert easting/northing to lat/longs. That may help.</p>\n\n<p>Alternatively there are lots of scripts on the <a href=\"http://www.movable-type.co.uk/scripts/latlong-gridref.html\" rel=\"nofollow\">movable-type site</a> that let you convert lat/long and easting/northings.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre class=\"lang-js prettyprint-override\"><code>////////////////////////////////////////////////////////////////////////////////////////////\n//\n// ToLL - function to compute Latitude and Longitude given UTM Northing and Easting in meters\n//\n//  Description:\n//    This member function converts input north and east coordinates\n//    to the corresponding Northing and Easting values relative to the defined\n//    UTM zone.  Refer to the reference in this file's header.\n//\n//  Parameters:\n//    north   - (i) Northing (meters)\n//    east    - (i) Easting (meters)\n//    utmZone - (i) UTM Zone of the North and East parameters\n//    lat     - (o) Latitude in degrees \n//    lon     - (o) Longitude in degrees\n//\nfunction ToLL(north,east,utmZone)\n{ \n  // This is the lambda knot value in the reference\n  var LngOrigin = DegToRad(utmZone * 6 - 183)\n\n  // The following set of class constants define characteristics of the\n  // ellipsoid, as defined my the WGS84 datum.  These values need to be\n  // changed if a different dataum is used.    \n\n  var FalseNorth = 0.  // South or North?\n  //if (lat &lt; 0.) FalseNorth = 10000000.  // South or North?\n  //else          FalseNorth = 0.   \n\n  var Ecc = 0.081819190842622       // Eccentricity\n  var EccSq = Ecc * Ecc\n  var Ecc2Sq = EccSq / (1. - EccSq)\n  var Ecc2 = Math.sqrt(Ecc2Sq)      // Secondary eccentricity\n  var E1 = ( 1 - Math.sqrt(1-EccSq) ) / ( 1 + Math.sqrt(1-EccSq) )\n  var E12 = E1 * E1\n  var E13 = E12 * E1\n  var E14 = E13 * E1\n\n  var SemiMajor = 6378137.0         // Ellipsoidal semi-major axis (Meters)\n  var FalseEast = 500000.0          // UTM East bias (Meters)\n  var ScaleFactor = 0.9996          // Scale at natural origin\n\n  // Calculate the Cassini projection parameters\n\n  var M1 = (north - FalseNorth) / ScaleFactor\n  var Mu1 = M1 / ( SemiMajor * (1 - EccSq/4.0 - 3.0*EccSq*EccSq/64.0 -\n    5.0*EccSq*EccSq*EccSq/256.0) )\n\n  var Phi1 = Mu1 + (3.0*E1/2.0 - 27.0*E13/32.0) * Math.sin(2.0*Mu1)\n    + (21.0*E12/16.0 - 55.0*E14/32.0)           * Math.sin(4.0*Mu1)\n    + (151.0*E13/96.0)                          * Math.sin(6.0*Mu1)\n    + (1097.0*E14/512.0)                        * Math.sin(8.0*Mu1)\n\n  var sin2phi1 = Math.sin(Phi1) * Math.sin(Phi1)\n  var Rho1 = (SemiMajor * (1.0-EccSq) ) / Math.pow(1.0-EccSq*sin2phi1,1.5)\n  var Nu1 = SemiMajor / Math.sqrt(1.0-EccSq*sin2phi1)\n\n  // Compute parameters as defined in the POSC specification.  T, C and D\n\n  var T1 = Math.tan(Phi1) * Math.tan(Phi1)\n  var T12 = T1 * T1\n  var C1 = Ecc2Sq * Math.cos(Phi1) * Math.cos(Phi1)\n  var C12 = C1 * C1\n  var D  = (east - FalseEast) / (ScaleFactor * Nu1)\n  var D2 = D * D\n  var D3 = D2 * D\n  var D4 = D3 * D\n  var D5 = D4 * D\n  var D6 = D5 * D\n\n  // Compute the Latitude and Longitude and convert to degrees\n  var lat = Phi1 - Nu1*Math.tan(Phi1)/Rho1 *\n    ( D2/2.0 - (5.0 + 3.0*T1 + 10.0*C1 - 4.0*C12 - 9.0*Ecc2Sq)*D4/24.0\n     + (61.0 + 90.0*T1 + 298.0*C1 + 45.0*T12 - 252.0*Ecc2Sq - 3.0*C12)*D6/720.0 )\n\n  lat = RadToDeg(lat)\n\n  var lon = LngOrigin + \n    ( D - (1.0 + 2.0*T1 + C1)*D3/6.0\n      + (5.0 - 2.0*C1 + 28.0*T1 - 3.0*C12 + 8.0*Ecc2Sq + 24.0*T12)*D5/120.0) / Math.cos(Phi1)\n\n  lon = RadToDeg(lon)\n\n  // Create a object to store the calculated Latitude and Longitude values\n  var sendLatLon = new PC_LatLon(lat,lon)\n\n  // Returns a PC_LatLon object\n  return sendLatLon\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n//\n//  RadToDeg - function that inputs a value in radians and returns a value in degrees\n//\nfunction RadToDeg(value)\n{\n  return ( value * 180.0 / Math.PI )\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n//\n// PC_LatLon - this psuedo class is used to store lat/lon values computed by the ToLL \n//  function.\n//\nfunction PC_LatLon(inLat,inLon)\n{\n  this.lat       = inLat     // Store Latitude in decimal degrees\n  this.lon       = inLon     // Store Longitude in decimal degrees\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm new to this as well and have been studying up on the subject recently.</p>\n\n<p>Here's a method I found using the python <a href=\"http://pypi.python.org/pypi/GDAL\" rel=\"nofollow\">gdal</a> pacakge (the <em>osr</em> package is included in gdal).  The gdal package is pretty powerful, but the documentation could be better.  </p>\n\n<p>This is derived from a discussion here:\n<a href=\"http://www.mail-archive.com/gdal-dev@lists.osgeo.org/msg12398.html\" rel=\"nofollow\">http://www.mail-archive.com/gdal-dev@lists.osgeo.org/msg12398.html</a></p>\n\n<pre><code>import osr\n\ndef transform_utm_to_wgs84(easting, northing, zone):\n    utm_coordinate_system = osr.SpatialReference()\n    utm_coordinate_system.SetWellKnownGeogCS(\"WGS84\") # Set geographic coordinate system to handle lat/lon\n    is_northern = northing &gt; 0    \n    utm_coordinate_system.SetUTM(zone, is_northern)\n\n    wgs84_coordinate_system = utm_coordinate_system.CloneGeogCS() # Clone ONLY the geographic coordinate system \n\n    # create transform component\n    utm_to_wgs84_transform = osr.CoordinateTransformation(utm_coordinate_system, wgs84_coordinate_system) # (&lt;from&gt;, &lt;to&gt;)\n    return utm_to_wgs84_transform.TransformPoint(easting, northing, 0) # returns lon, lat, altitude\n</code></pre>\n\n<p>And here's the method for converting from a lat, lon in wgs84 (what most gps units report) to utm:</p>\n\n<pre><code>def transform_wgs84_to_utm(lon, lat):    \n    def get_utm_zone(longitude):\n        return (int(1+(longitude+180.0)/6.0))\n\n    def is_northern(latitude):\n        \"\"\"\n        Determines if given latitude is a northern for UTM\n        \"\"\"\n        if (latitude &lt; 0.0):\n            return 0\n        else:\n            return 1\n\n    utm_coordinate_system = osr.SpatialReference()\n    utm_coordinate_system.SetWellKnownGeogCS(\"WGS84\") # Set geographic coordinate system to handle lat/lon  \n    utm_coordinate_system.SetUTM(get_utm_zone(lon), is_northern(lat))\n\n    wgs84_coordinate_system = utm_coordinate_system.CloneGeogCS() # Clone ONLY the geographic coordinate system \n\n    # create transform component\n    wgs84_to_utm_transform = osr.CoordinateTransformation(wgs84_coordinate_system, utm_coordinate_system) # (&lt;from&gt;, &lt;to&gt;)\n    return wgs84_to_utm_transform.TransformPoint(lon, lat, 0) # returns easting, northing, altitude    \n</code></pre>\n\n<p>I also found that if you've already got django/gdal installed and you know the <a href=\"http://reference.mapinfo.com/common/docs/mapxtend-dev-web-none-eng/miaware/doc/guide/xmlapi/coordsys/systems.htm\" rel=\"nofollow\">EPSG</a> code for the UTM zone you're working on, you can just use the <code>Point()</code>  <em>transform()</em> method.</p>\n\n<pre><code>from django.contrib.gis.geos import Point\nutm2epsg = {\"54N\": 3185, ...}\np = Point(lon, lat, srid=4326) # 4326 = WGS84 epsg code\np.transform(utm2epsg[\"54N\"])\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You could use Proj4js, as follows.</p>\n\n<p>Download Proj4JS from GitHub, using <a href=\"https://github.com/proj4js/proj4js\" rel=\"nofollow\">this</a> link.</p>\n\n<p>The following code will convert from UTM to longitude latitude</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n  &lt;script src=\"proj4.js\"&gt;&lt;/script&gt;\n\n  &lt;script&gt;\n    var utm = \"+proj=utm +zone=32\";\n    var wgs84 = \"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\";\n    console.log(proj4(utm,wgs84,[539884, 4942158]));\n  &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>In this code, the UTM zone is 32, as should be obvious. The Easting is 539884, and the Northing is 4942158. The result is:</p>\n\n<pre><code>[9.502832656648073, 44.631671014204365] \n</code></pre>\n\n<p>Which is to say 44.631671014204365N, 9.502832656648073E. Which I have <a href=\"http://www.rcn.montana.edu/resources/tools/coordinates.aspx?nav=11&amp;c=UTM&amp;md=83&amp;mdt=NAD83/WGS84&amp;z=32&amp;e=539884&amp;n=4942158&amp;h=N\" rel=\"nofollow\">verified</a> is correct.</p>\n\n<p>If you need other projections, you can find their strings <a href=\"http://spatialreference.org/ref/epsg/4326/\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A Javascript version of Staale answer</p>\n\n<pre><code>function utmToLatLng(zone, easting, northing, northernHemisphere){\n        if (!northernHemisphere){\n            northing = 10000000 - northing;\n        }\n\n        var a = 6378137;\n        var e = 0.081819191;\n        var e1sq = 0.006739497;\n        var k0 = 0.9996;\n\n        var arc = northing / k0;\n        var mu = arc / (a * (1 - Math.pow(e, 2) / 4.0 - 3 * Math.pow(e, 4) / 64.0 - 5 * Math.pow(e, 6) / 256.0));\n\n        var ei = (1 - Math.pow((1 - e * e), (1 / 2.0))) / (1 + Math.pow((1 - e * e), (1 / 2.0)));\n\n        var ca = 3 * ei / 2 - 27 * Math.pow(ei, 3) / 32.0;\n\n        var cb = 21 * Math.pow(ei, 2) / 16 - 55 * Math.pow(ei, 4) / 32;\n        var cc = 151 * Math.pow(ei, 3) / 96;\n        var cd = 1097 * Math.pow(ei, 4) / 512;\n        var phi1 = mu + ca * Math.sin(2 * mu) + cb * Math.sin(4 * mu) + cc * Math.sin(6 * mu) + cd * Math.sin(8 * mu);\n\n        var n0 = a / Math.pow((1 - Math.pow((e * Math.sin(phi1)), 2)), (1 / 2.0));\n\n        var r0 = a * (1 - e * e) / Math.pow((1 - Math.pow((e * Math.sin(phi1)), 2)), (3 / 2.0));\n        var fact1 = n0 * Math.tan(phi1) / r0;\n\n        var _a1 = 500000 - easting;\n        var dd0 = _a1 / (n0 * k0);\n        var fact2 = dd0 * dd0 / 2;\n\n        var t0 = Math.pow(Math.tan(phi1), 2);\n        var Q0 = e1sq * Math.pow(Math.cos(phi1), 2);\n        var fact3 = (5 + 3 * t0 + 10 * Q0 - 4 * Q0 * Q0 - 9 * e1sq) * Math.pow(dd0, 4) / 24;\n\n        var fact4 = (61 + 90 * t0 + 298 * Q0 + 45 * t0 * t0 - 252 * e1sq - 3 * Q0 * Q0) * Math.pow(dd0, 6) / 720;\n\n        var lof1 = _a1 / (n0 * k0);\n        var lof2 = (1 + 2 * t0 + Q0) * Math.pow(dd0, 3) / 6.0;\n        var lof3 = (5 - 2 * Q0 + 28 * t0 - 3 * Math.pow(Q0, 2) + 8 * e1sq + 24 * Math.pow(t0, 2)) * Math.pow(dd0, 5) / 120;\n        var _a2 = (lof1 - lof2 + lof3) / Math.cos(phi1);\n        var _a3 = _a2 * 180 / Math.PI;\n\n        var latitude = 180 * (phi1 - fact1 * (fact2 + fact3 + fact4)) / Math.PI;\n\n        if (!northernHemisphere){\n          latitude = -latitude;\n        }\n\n        var longitude = ((zone &gt; 0) &amp;&amp; (6 * zone - 183.0) || 3.0) - _a3;\n\n        var obj = {\n              latitude : latitude,\n              longitude: longitude\n        };\n\n\n        return obj;\n      }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One problem I had with using proj4js was that it needed the exact zone as @Richard points out. I found a great resource <a href=\"http://home.hiwaay.net/~taylorc/toolbox/geography/geoutm.html\" rel=\"nofollow\">here</a> which can convert WGS to UTM and wrote a cleaner wrapper in JavaScript:</p>\n\n<p><a href=\"https://github.com/urbanetic/utm-converter\" rel=\"nofollow\">https://github.com/urbanetic/utm-converter</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a bunch of files with coordinates in UTM form. For each coordinate I have easting, northing and zone. I need to convert this to LatLng for use with Google Map API to show the information in a map.</p>\n\n<p>I have found some online calculators that does this, but no actual code or libraries. <a href=\"http://trac.osgeo.org/proj4js/\">http://trac.osgeo.org/proj4js/</a> is a projection library for Javascript, but looking at the demo it doesn't include UTM projection.</p>\n\n<p>I am still pretty fresh to the entire GIS domain, so what I want is something ala:</p>\n\n<pre><code>(lat,lng) = transform(easting, northing, zone)\n</code></pre>\n",
            "last_activity_date": 1419380863,
            "question_id": 343865,
            "score": 21,
            "tags": [
                "javascript",
                "python",
                "gis",
                "utm",
                "proj4js"
            ],
            "title": "How to convert from UTM to LatLng in python or Javascript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Maybe not exactly what you're looking for but <a href=\"https://github.com/ender-js/Ender\" rel=\"nofollow\">Enderjs</a> could work.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"https://github.com/mishoo/UglifyJS/\" rel=\"nofollow\">UglifyJS</a> is a Node module that is all about minifying javascript. I don't think it also joins files, but there might be an option I missed.</p>\n\n<p><strong>Edit:</strong>\nWith <a href=\"https://github.com/mishoo/UglifyJS2\" rel=\"nofollow\">UglifyJS 2</a>, it has built in concatenation as well.</p>\n\n<p>If you want to do this inline in your node app it's really easy. This allows you to dynamically generate your minified/concatenated js script at runtime without using the grunt or yeoman way.</p>\n\n<pre><code>npm install uglify-js\n</code></pre>\n\n<p>and in your module:</p>\n\n<pre><code>var fs = require('fs');\nvar uglify = require(\"uglify-js\");\n\nvar uglified = uglify.minify(['file1.js', 'file2.js', 'file3.js']);\n\nfs.writeFile('concat.min.js', uglified.code, function (err){\n  if(err) {\n    console.log(err);\n  } else {\n    console.log(\"Script generated and saved:\", 'concat.min.js');\n  }      \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>If you're using Connect, then I've had good luck with <a href=\"https://github.com/mape/connect-assetmanager\">Connect-Assetmanager</a></p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>I'd definitely suggest the Closure Compiler's simple mode.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you like the Rails 3.1 asset pipeline approach, you should try my <a href=\"https://github.com/TrevorBurnham/connect-assets\" rel=\"nofollow\">connect-assets</a> library.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In order to join js file you can do as its done in twitter bootstrap makefile</p>\n\n<pre><code>cat js/bootstrap-transition.js js/bootstrap-alert.js js/bootstrap-button.js js/bootstrap-carousel.js js/bootstrap-collapse.js js/bootstrap-dropdown.js js/bootstrap-modal.js js/bootstrap-tooltip.js js/bootstrap-popover.js js/bootstrap-scrollspy.js js/bootstrap-tab.js js/bootstrap-typeahead.js &gt; docs/assets/js/bootstrap.js\n</code></pre>\n\n<p>This is just a concatenation of files with an output to a js file</p>\n\n<p>Then you can install uglify-js to minify js:</p>\n\n<pre><code>npm -g install uglify-js\n</code></pre>\n\n<p>And perform this command with your path/file.js ofc:</p>\n\n<pre><code>uglifyjs docs/assets/js/bootstrap.js -nc &gt; docs/assets/js/bootstrap.min.js\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I recommend using <a href=\"https://github.com/mishoo/UglifyJS/\">UglifyJS</a> which is a JavaScript parser / mangler / compressor / beautifier library for NodeJS.</p>\n\n<p>If you are interested in automation tools that do more than simply concatenate and minify files, there are the following solutions:</p>\n\n<ul>\n<li><p><a href=\"http://gruntjs.com/\">GruntJS</a> is a task-based command line build tool for JavaScript projects. The current version has the following built-in tasks:</p>\n\n<ol>\n<li>concat - Concatenate files.</li>\n<li>init - Generate project scaffolding from a predefined template.</li>\n<li>lint - Validate files with <a href=\"http://www.jshint.com/\">JSHint</a>.</li>\n<li>min - Minify files with <a href=\"https://github.com/mishoo/UglifyJS/\">UglifyJS</a>.</li>\n<li>qunit - Run <a href=\"http://qunitjs.com/?rdfrom=http%3A%2F%2Fdocs.jquery.com%2Fmw%2Findex.php%3Ftitle%3DQUnit%26redirect%3Dno\">QUnit</a> unit tests in a headless <a href=\"http://phantomjs.org/\">PhantomJS</a> instance.</li>\n<li>server - Start a static web server.</li>\n</ol></li>\n</ul>\n\n<p>Besides this tasks there's a lot of <a href=\"https://npmjs.org/browse/keyword/gruntplugin\">plugins</a> available.</p>\n\n<ul>\n<li><p><a href=\"http://yeoman.io/\">Yeoman</a> is a robust and opinionated set of tools, libraries, and a workflow that can help developers quickly build beautiful, compelling web apps.</p>\n\n<ol>\n<li>Lightning-fast scaffolding - Easily scaffold new projects with customizable templates (e.g <a href=\"http://html5boilerplate.com/\">HTML5 Boilerplate</a>, <a href=\"http://twitter.github.com/bootstrap/\">Twitter Bootstrap</a>), AMD (via <a href=\"http://requirejs.org/\">RequireJS</a>) and more.</li>\n<li>Automatically compile CoffeeScript &amp; Compass - Our <a href=\"http://livereload.com/\">LiveReload</a> watch process automatically compiles source files and refreshes your browser whenever a change is made so you don't have to.</li>\n<li>Automatically lint your scripts - All your scripts are automatically run against <a href=\"http://www.jshint.com/\">jshint</a> to ensure they're following language best-practices.</li>\n<li>Built-in preview server - No more having to fire up your own HTTP Server. My built-in one can be fired with just one command.</li>\n<li>Awesome Image Optimization - I optimize all your images using <a href=\"http://optipng.sourceforge.net/\">OptiPNG</a> and JPEGTran so your users can spend less time downloading assets and more time using your app.</li>\n<li>AppCache manifest generation - I generate your application cache manifests for you. Just build a project and boom. You'll get it for free.</li>\n<li>Killer build process - Not only do you get minification and concatenation; I also optimize all your image files, HTML, compile your <a href=\"http://coffeescript.org/\">CoffeeScript</a> and <a href=\"http://compass-style.org/\">Compass</a> files, generate you an application cache manifest and, if you're using AMD, we'll pass those modules through r.js so you don't have to.</li>\n<li>Integrated package management - Need a dependency? It's just a keystroke away. I allow you to easily search for new packages via the command-line (e.g., yeoman search <a href=\"http://jquery.com/\">jquery</a>), install them and keep them updated without needing to open your browser.</li>\n<li>Support for ES6 module syntax - Experiment with writing modules using the latest ECMAScript 6 module syntax. This is an experimental feature that transpiles back to ES5 so you can use the code in all modern browsers.</li>\n<li>PhantomJS Unit Testing - Easily run your unit tests in headless WebKit via <a href=\"http://phantomjs.org/\">PhantomJS</a>. When you create a new application, I also include some test scaffolding for your app.</li>\n</ol></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>Try these two plugins for Grunt</p>\n\n<p><a href=\"https://www.npmjs.org/package/grunt-contrib-concat\" rel=\"nofollow\">https://www.npmjs.org/package/grunt-contrib-concat</a></p>\n\n<p><a href=\"https://www.npmjs.org/package/grunt-contrib-uglify\" rel=\"nofollow\">https://www.npmjs.org/package/grunt-contrib-uglify</a></p>\n\n<p>You can install everything you need like so:</p>\n\n<pre><code>npm install grunt\nnpm install grunt-cli\nnpm install grunt-contrib-concat\nnpm install grunt-contrib-uglify\n</code></pre>\n\n<p>Then create your grunt file, like so:</p>\n\n<p>Gruntfile.js</p>\n\n<pre><code>module.exports = function(grunt){\n  grunt.initConfig({\n    concat: {\n      options: {\n        process: function(src, path){\n          return '\\n/* Source: ' + path + ' */\\n' + src;\n        }\n      },\n      src: [\n        '../src/**/*.js'\n      ],\n      dest: '../bin/app-debug.js'\n    },\n    uglify: {\n      src: '../bin/app-debug.js',\n      dest: '../bin/app.js'\n    },\n    watch: {\n      options: {\n        atBegin: true,\n        event: ['all']\n      },\n      src: {\n        files: '../src/**/*.js',\n        tasks: ['concat']\n      },\n      dist: {\n        files: '../bin/app-debug.js',\n        tasks: ['uglify']\n      },\n    }\n  }\n\n  grunt.loadNpmTasks('grunt-contrib-concat');\n  grunt.loadNpmTasks('grunt-contrib-uglify');\n\n  grunt.registerTask('default', ['watch']);\n}\n</code></pre>\n\n<p>Finally, type <code>grunt</code> in the terminal and Grunt will start watching your JavaScript files for changes and automatically concat and uglify them (whenever you save a change to your js files in ../src/</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there any module in NodeJS to concatenate and minify JavaScript files?</p>\n",
            "last_activity_date": 1401441706,
            "question_id": 6539837,
            "score": 18,
            "tags": [
                "javascript",
                "node.js",
                "minify"
            ],
            "title": "Concat and minify JS files in Node"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>How many different units are being converted? It sounds as though you are writing an specific application which I'm taking as you only need a few different types of conversion (area, volume, etc)</p>\n\n<p><em>If</em> this is the case, it might be faster just to look up the conversion for those that you need and code them into a class for yourself. Loading a complete javascript library just to perform a few specific multiplications could be overkill.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a little script I threw together just for the heck of it. It handles all the SI conversions for grams, bytes, meters and liters, and also I've added ounces and pounds as an example of non-SI units. To add more, you'll need to:</p>\n\n<ol>\n<li>Add the base type to the \"units\" list for items that follow SI or </li>\n<li>Add the conversion ratios for items that don't follow SI</li>\n</ol>\n\n<p>Usage:</p>\n\n<pre><code>$u(1, 'g').as('kg').val(); // converts one gram to kg\n</code></pre>\n\n<p>You can get the value out with .val(), a string representation using .toString() or the full details via .debug()</p>\n\n<pre><code>(function () {\n    var table = {};\n\n    window.unitConverter = function (value, unit) {\n        this.value = value;\n        if (unit) {\n            this.currentUnit = unit;\n        }\n    };\n    unitConverter.prototype.as = function (targetUnit) {\n        this.targetUnit = targetUnit;\n        return this;\n    };\n    unitConverter.prototype.is = function (currentUnit) {\n        this.currentUnit = currentUnit;\n        return this;\n    };\n\n    unitConverter.prototype.val = function () {\n        // first, convert from the current value to the base unit\n        var target = table[this.targetUnit];\n        var current = table[this.currentUnit];\n        if (target.base != current.base) {\n            throw new Error('Incompatible units; cannot convert from \"' + this.currentUnit + '\" to \"' + this.targetUnit + '\"');\n        }\n\n        return this.value * (current.multiplier / target.multiplier);\n    };\n    unitConverter.prototype.toString = function () {\n        return this.val() + ' ' + this.targetUnit;\n    };\n    unitConverter.prototype.debug = function () {\n        return this.value + ' ' + this.currentUnit + ' is ' + this.val() + ' ' + this.targetUnit;\n    };\n    unitConverter.addUnit = function (baseUnit, actualUnit, multiplier) {\n        table[actualUnit] = { base: baseUnit, actual: actualUnit, multiplier: multiplier };\n    };\n\n    var prefixes = ['Y', 'Z', 'E', 'P', 'T', 'G', 'M', 'k', 'h', 'da', '', 'd', 'c', 'm', 'u', 'n', 'p', 'f', 'a', 'z', 'y'];\n    var factors = [24, 21, 18, 15, 12, 9, 6, 3, 2, 1, 0, -1, -2, -3, -6, -9, -12, -15, -18, -21, -24];\n    // SI units only, that follow the mg/kg/dg/cg type of format\n    var units = ['g', 'b', 'l', 'm'];\n\n    for (var j = 0; j &lt; units.length; j++) {\n        var base = units[j];\n        for (var i = 0; i &lt; prefixes.length; i++) {\n            unitConverter.addUnit(base, prefixes[i] + base, Math.pow(10, factors[i]));\n        }\n    }\n\n    // we use the SI gram unit as the base; this allows\n    // us to convert between SI and English units\n    unitConverter.addUnit('g', 'ounce', 28.3495231);\n    unitConverter.addUnit('g', 'oz', 28.3495231);\n    unitConverter.addUnit('g', 'pound', 453.59237);\n    unitConverter.addUnit('g', 'lb', 453.59237);\n\n\n    window.$u = function (value, unit) {\n        var u = new window.unitConverter(value, unit);\n        return u;\n    };\n})();\n\nconsole.log($u(1, 'g').as('kg').debug());  \nconsole.log($u(1, 'kg').as('g').debug());\nconsole.log($u(1, 'g').as('mg').debug());\nconsole.log($u(1, 'mg').as('g').debug());\nconsole.log($u(1, 'mg').as('kg').debug());\n\nconsole.log($u(1, 'g').as('oz').debug());\nconsole.log($u(1, 'g').as('lb').debug());\n\nconsole.log($u(1, 'oz').as('lb').debug());\n\nconsole.log($u(1, 'lb').as('g').debug());\n\n// this last one throws an exception since you can't convert liters to mg\nconsole.log($u(1, 'l').as('mg').debug());\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>Here's something extensible and terse that builds a lookup table so performance should be good.</p>\n\n<pre><code>core = {};\ncore.mixin = function (dst, src) { if (src) for (var i in src) dst[i] = src[i]; return dst; }\n\nfunction UnitConverter(meter) {\n    var feetPerMeter = 3.2808399, feetPerMile = 5280;\n    this.meter = core.mixin({ km: 1000, mi: feetPerMile / feetPerMeter, ft: 1 / feetPerMeter, m: 1 }, meter);\n    var t = [], i = 0;\n    for (t[i++] in this.meter);\n    this.table = [];\n    for (i = 0; i &lt; t.length; i++)\n        for (j = 0; j &lt; t.length; j++) {\n            var key1 = t[i], key2 = t[(i + j + 1) % t.length];\n            this.table[key1 + \"/\" + key2] = this.meter[key2] / this.meter[key1];\n        }\n};\n</code></pre>\n\n<p><strong>Usage</strong></p>\n\n<pre><code>Number.converter = new UnitConverter({ nm: 1852 }); // extent to include nautical miles\nNumber.units = Number.converter.table;\nvar km = 1;\nvar mi = km * Number.units[\"mi/km\"];\nvar m = Number.converter.convert(mi, \"mi\", \"m\");\nvar ft = Number.converter.convert(m, \"ft/m\");\nm = Number.converter.convert(ft, \"ft\", \"m\");\nft = m / Number.converter.convert(\"m/ft\");\nkm = ft * Number.units[\"km/ft\"];\nnm = Number.converter.convert(km, \"km\", \"nm\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You might check out this port of Ruby Units to Javascript:</p>\n\n<p><a href=\"https://github.com/gentooboontoo/js-quantities\">https://github.com/gentooboontoo/js-quantities</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Inspired by many posts regarding this subject and the simplicity and smallness of <a href=\"http://momentjs.com/\">MomentJs</a> i have started work on this:</p>\n\n<p><a href=\"https://github.com/Philzen/measurement.js\">MeasurementJs</a></p>\n\n<p>It doesn't include all of the mentioned conversions yet, but you can easily extend the <code>DEFINITIONS</code> array and <code>MeasurementJs.Units.*</code> objects for any possible conversion you like.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The library \"measure\" converts between unit types (volume, mass, etc.) and supports multiple unit systems (US, Imperial, Metric)</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// volume\nmeasure('1 teaspoon').teaspoons() // 1\nmeasure('1 1/2 tsp.').teaspoons() // 1.5\nmeasure('2 cups and 1 pint').quarts() // 1\n\n// mass\nmeasure('1 pound').ounces() // 16\nmeasure('1 1/2 oz.').ounces() // 1.5\n\n// operations\nmeasure('1 teaspoon').add('1 teaspoon').teaspoons();\nmeasure('6 1/2 teaspoon').divide(2).teaspoons(); // 3.25\n</code></pre>\n\n<p><a href=\"https://github.com/dubbs/measure\" rel=\"nofollow\">https://github.com/dubbs/measure</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'll just leave this here ...</p>\n\n<h2>Simple JS Method to Convert almost ALL Imperial/Standard measurements of Distance/Length</h2>\n\n<pre><code>;;if (!window.hasOwnProperty('convertImperialMetric')) {\n    function convertImperialMetric () {\n        var metrics = convertImperialMetric.metrics,\n            imperials = convertImperialMetric.imperials,\n            args = arguments,\n            conversionTypes = { imperial: 'imperial', metric: 'metric' },\n            toFixed = false, toFixedX = 2,\n            intX, typImp, typMet, conType = 'metric',\n            $ret;\n\n        conversionTypes.i = conversionTypes.imp = conversionTypes.imperial;\n        conversionTypes.m = conversionTypes.met = conversionTypes.metric;\n\n        function setVarz(c) {\n            for (i in c) {\n                var a = c[i];\n                switch (typeof a) {\n                    case \"boolean\":\n                        toFixed = a;\n                        break;\n                    case \"number\":\n                        void 0 == intX ? intX = a : toFixedX = a;\n                        break;\n                    case \"string\":\n                        isNaN(parseFloat(a)) || void 0 != intX ? imperials.hasOwnProperty(a) ? typImp = a : metrics.hasOwnProperty(a) ? typMet = a : conversionTypes.hasOwnProperty(a) &amp;&amp; (conType = conversionTypes[a]) : intX = parseFloat(a);\n                        break;\n                    case \"object\":\n                        if (a instanceof Array) setVarz.apply(this, [a]);\n                        else if (a instanceof Object)\n                            for (h in a) {\n                                var b = a[h];\n                                conversionTypes.hasOwnProperty(h) ? conType = conversionTypes[h] : imperials.hasOwnProperty(h) ? (typImp =\n                                    h, void 0 != intX || isNaN(parseFloat(b)) || (intX = parseFloat(b))) : metrics.hasOwnProperty(h) ? (typMet = h, void 0 != intX || isNaN(parseFloat(b)) || (intX = parseFloat(b))) : setVarz.apply(this, [\n                                    [b]\n                                ])\n                            }\n                }\n            }\n        };\n        setVarz(args);\n\n        if (!isNaN(parseFloat(intX)) &amp;&amp; imperials.hasOwnProperty(typImp) &amp;&amp; metrics.hasOwnProperty(typMet) &amp;&amp; conversionTypes.hasOwnProperty(conType)) {\n            if (conType == 'metric') {\n                var inches = intX * imperials[typImp],\n                    centimeters = inches * 2.54;\n                $ret = centimeters * metrics[typMet];\n            }\n            else if (conType == 'imperial') {\n                var centimeters = intX / metrics[typMet],\n                    inches = centimeters / 2.54;\n                $ret = inches / imperials[typImp];\n            }\n        }\n\n        return toFixed ? parseFloat($ret.toFixed(toFixedX)) : $ret;\n    }\n\n    convertImperialMetric.imperials = {\n        inches: 1,\n        feet: 12,\n        yards: 36,\n        miles: 63360,\n        nautical: 72913.4\n    };\n\n    convertImperialMetric.metrics = {\n        yocto: 10000000000000000000000,\n        zepto: 10000000000000000000,\n        atto: 10000000000000000,\n        femto: 10000000000000,\n        pico: 10000000000,\n        nano: 10000000,\n        micro: 10000,\n        milli: 10,\n        centi: 1,\n        deci: .1,\n        meter: .01,\n        deka: .001,\n        hecto: .0001,\n        kilo: .00001,\n        mega: .00000001,\n        giga: .00000000001,\n        tera: .00000000000001,\n        peta: .00000000000000001,\n        exa: .00000000000000000001,\n        zetta: .00000000000000000000001,\n        yotta: .00000000000000000000000001\n    };\n}\n</code></pre>\n\n<h2>Example Usages:</h2>\n\n<pre><code>convertImperialMetric(12, 'inches', 'centi');   //  Results in: 30.48\nconvertImperialMetric(30.48, 'centi', 'inches', 'i');   //  Results in: 12\nconvertImperialMetric('1200000', 'inches', 'kilo'); //  Results in: 30.480000000000004\nconvertImperialMetric('1200000', 'inches', 'kilo', true);   //  Results in: 30.48\nconvertImperialMetric('1200000', 'inches', 'kilo', true, 1);    //  Results in: 30.5\nconvertImperialMetric([ 12, 'inches', 'centi' ]);   //  Results in: 30.48\nconvertImperialMetric([ '12', 'inches', 'centi' ]); //  Results in: 30.48\nconvertImperialMetric({ inches: 12, anyVariableName: 'centi' });    //  Results in: 30.48\nconvertImperialMetric({ inches: '12', anyVariableName: 'centi' });  //  Results in: 30.48\nconvertImperialMetric({ inches: 12, centi: 'anyValue' });   //  Results in: 30.48\nconvertImperialMetric({ inches: '12', centi: 'anyValue' }); //  Results in: 30.48\nconvertImperialMetric({ inches: '12', to: 'centi', type: 'metric', toFixed: true, toFX: 1 });   //  Results in: 30.5\nconvertImperialMetric({ feet: 1 }, 'centi');    //  Results in: 30.48\nconvertImperialMetric({ centi: '30.48' }, 'inches', 'imperial');    //  Results in: 12\nconvertImperialMetric({ meter: '.3048' }, 'inches', 'imperial');    //  Results in: 12\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/SpYk3/qbt2du01/\" rel=\"nofollow\">jsFiddle</a> / <a href=\"http://jsfiddle.net/SpYk3/qbt2du01/show/\" rel=\"nofollow\">jsFiddle/show</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is the best/most elegant way to abstract out the conversion of units of measures in the client, based on a user-preferred unit of measure setting?</p>\n\n<p>For example, let's say user A's preferred unit of measure is \"metric\", while user's B's preference is \"imperial\".</p>\n\n<p>Now lets say I've calculated the area of something in meters squared. When I go to display the value I need to use different conversion factors for each user (eg, \"1 meter = 1.09361 yards\"). Or say I've calculated the fluid volume in <code>mL</code>. User B's view will get calculated using the conversion \"236.588237 mL = 1 US cup\".</p>\n\n<p>Is there an existing javascript library that anyone here knows about that handles these trivial UOM conversions?</p>\n",
            "last_activity_date": 1417735593,
            "question_id": 865590,
            "score": 16,
            "tags": [
                "javascript"
            ],
            "title": "Unit of Measure Conversion Library"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I've gone through this pain myself.  <a href=\"http://coderesearchlabs.com/articles/BNWCA.pdf\">Here's a guide that helped me get it working. (PDF)</a>  Remember that since Node is now officially supported on Windows, Visual Studio is the recommended build tool for Node on Windows.</p>\n\n<p>Basically:</p>\n\n<ul>\n<li><a href=\"http://nodejs.org/#download\">Download</a> and build the Node source code.  (See PDF)</li>\n<li>Create a new VC++ Win32 solution in VS, selecting DLL as the application type in the wizard that follows.  Make sure ATL/MFC is unchecked.</li>\n<li>Write your addon.  As an example, <a href=\"https://github.com/daguej/node-winnetinfo\">here's one I wrote that gets Windows' current DNS settings</a>.  Specifically, the <a href=\"https://github.com/daguej/node-winnetinfo/blob/master/NodeWinNetInfo/NodeWinNetInfo.vcxproj#L42\">project's settings file (vcxproj)</a> will be of interest since one of the toughest parts is getting all the library references/include paths set up.  You might want to borrow my config and replace <code>D:\\node\\</code> with the location of your Node repo.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I think <a href=\"https://github.com/rbranson/node-ffi/\" rel=\"nofollow\">node-ffi</a> will help you. It's simple and it's works.</p>\n\n<pre><code>npm install ffi\n</code></pre>\n\n<pre class=\"lang-js prettyprint-override\"><code>var FFI = require('ffi');\n\nfunction TEXT(text){\n   return new Buffer(text, 'ucs2').toString('binary');\n}\n\nvar user32 = new FFI.Library('user32', {\n   'MessageBoxW': [\n      'int32', [ 'int32', 'string', 'string', 'int32' ]\n   ]\n});\n\nvar OK_or_Cancel = user32.MessageBoxW(\n   0, TEXT('I am Node.JS!'), TEXT('Hello, World!'), 1\n);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Now:\n  npm install ffi\nand\n  var FFI = require('ffi');</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to access a particular native Windows API call from within a node.js application. I believe that the best way to do this is to create a native extension / addon to node that I can require in my node.js application and call from the JavaScript.</p>\n\n<p>Where can I find resources on how to actually compile this sort of executable? I can find instructions on how to write it, but all the build instructions seem to be for Linux. I'm fine with compiling through g++ on mingw, I don't need to use Visual Studio. Also, where do I find the header files that I need in order to compile the extension?</p>\n",
            "last_activity_date": 1389085217,
            "question_id": 9624536,
            "score": 15,
            "tags": [
                "javascript",
                "windows",
                "node.js",
                "native",
                "add-on"
            ],
            "title": "Create a node.js native extension on Windows"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>parentElement</code> is new to Firefox 9 and to DOM4, but it has been present in all other major browsers for ages.</p>\n\n<p>In most cases, it is the same as <code>parentNode</code>. The only difference comes when a node's <code>parentNode</code> is not an element. If so, <code>parentElement</code> is <code>null</code>.</p>\n\n<p>As an example:</p>\n\n<pre><code>document.body.parentNode; // the &lt;html&gt; element\ndocument.body.parentElement; // the &lt;html&gt; element\n\ndocument.documentElement.parentNode; // the document node\ndocument.documentElement.parentElement; // null\n</code></pre>\n\n<p>Since the <code>&lt;html&gt;</code> element (<code>document.documentElement</code>) doesn't have a parent that is an element, <code>parentElement</code> is <code>null</code>. (There are other, more unlikely, cases where <code>parentElement</code> could be <code>null</code>, but you'll probably never come across them.)</p>\n",
                    "is_accepted": true,
                    "score": 101
                },
                {
                    "body": "<p><strong>Edit:</strong> <em>Some of this is wrong. See comments below for details</em></p>\n\n<p>All <code>Element</code> objects are also <code>Node</code> objects (because <code>Element</code> is a descendent of <code>Node</code>). But there is a <code>Node</code> which isn't an <code>Element</code>... the <code>document</code> object. So your <code>&lt;html&gt;</code> element has a parent node (<code>document</code>) but it doesn't have a parent element.</p>\n\n<p>The reason that there's a need for <code>parentElement</code> instead of <code>parentNode</code> is because, HTML5 doesn't strictly require an <code>&lt;html&gt;</code> element, so almost any element can have a parent node without actually having a parent element. So if my HTML page looked like this:</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;title&gt;My page&lt;/title&gt;\n&lt;header&gt;This is my page&lt;/header&gt;\n&lt;div id=\"body&gt;\n  &lt;p&gt;This is some text from my page&lt;/p&gt;\n&lt;/div&gt;\n&lt;footer&gt;\n  Copyright, me\n&lt;/footer&gt;\n</code></pre>\n\n<p>Then the <code>title</code>, <code>header</code>, <code>#body</code> and <code>footer</code> elements would have their <code>parentNode</code> as <code>document</code>, but their <code>parentElement</code> would be null. Only the <code>p</code> tag would have a <code>parentElement</code>, which is <code>#body</code>. (Note that I wouldn't advise this as a page structure... stick to something more traditional.)</p>\n\n<p>You can replicate it with something like this:</p>\n\n<pre><code>if (myElement.parentNode instanceof Element) {\n    myElement.parentElement = myElement.parentNode;\n} else {\n    myElement.parentElement = null;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Can somebody in explain me in as simple as possible terms, what is the difference between classical DOM <a href=\"https://developer.mozilla.org/en/DOM/Node.parentNode\">parentNode</a> and newly introduced in Firefox 9 <a href=\"https://developer.mozilla.org/en/DOM/Node.parentElement\">parentElement</a></p>\n",
            "last_activity_date": 1387465140,
            "question_id": 8685739,
            "score": 92,
            "tags": [
                "javascript",
                "firefox",
                "dom"
            ],
            "title": "Difference between DOM parentNode and parentElement"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><code>JSON.parse</code> is the opposite of <code>JSON.stringify</code>.</p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>You need to <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a> the string.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var str = '{\"hello\":\"world\"}';\r\nvar obj = JSON.parse(str);\r\ndocument.body.innerHTML+= obj.hello;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": true,
                    "score": 156
                },
                {
                    "body": "<p><code>JSON.stringify</code> and <code>JSON.parse</code> are almost oposites, and \"usually\" this kind of thing will work:</p>\n\n<pre><code>var obj = ...;\nvar json = JSON.stringify(obj);  \nvar obj2 = JSON.parse(json);\n</code></pre>\n\n<p>so that obj and obj2 are \"the same\".</p>\n\n<p>However there are some limitations to be aware of.\nOften these issues dont matter as you're dealing with simple objects.\nBut I'll illustrate some of them here, using this helper function:</p>\n\n<pre><code>function jsonrepack( obj ) { return JSON.parse(JSON.stringify(obj) ); }\n</code></pre>\n\n<ul>\n<li><p>You'll only get <code>ownProperties</code> of the object and lose prototypes:</p>\n\n<pre><code>var MyClass = function() { this.foo=\"foo\"; } \nMyClass.prototype = { bar:\"bar\" }\n\nvar o = new MyClass();\nvar oo = jsonrepack(o);\nconsole.log(oo.bar); // undefined\nconsole.log( oo instanceof MyClass ); // false\n</code></pre></li>\n<li><p>You'll lose identity:</p>\n\n<pre><code>var o = {};\nvar oo = jsonrepack(o);\nconsole.log( o === oo ); // false\n</code></pre></li>\n<li><p>Functions dont survive:</p>\n\n<pre><code>jsonrepack( { f:function(){} } ); // Returns {}\n</code></pre></li>\n<li><p>Date objects end up as strings:</p>\n\n<pre><code>jsonrepack(new Date(1,2,1990)); // Returns '1990-02-01T16:00:00.000Z'\n</code></pre></li>\n<li><p>Undefined values dont survive:</p>\n\n<pre><code>var v = { x:undefined }\nconsole.log(\"x\" in v);              // true\nconsole.log(\"x\" in jsonrepack(v));  // false\n</code></pre></li>\n<li><p>Objects that provide a <code>toJSON</code> function may not behave correctly.</p>\n\n<pre><code>x = { f:\"foo\", toJSON:function(){ return \"EGAD\"; } }\njsonrepack(x) // Returns 'EGAD'\n</code></pre></li>\n</ul>\n\n<p>I'm sure there are issues with other built-in-types too. (All this was tested using node.js so you may get slightly different behaviour depending on your environment too).</p>\n\n<p>When it does matter it can sometimes be overcome using the additional parameters of <code>JSON.parse</code> and <code>JSON.stringify</code>. For example:</p>\n\n<pre><code>function MyClass (v) {\n   this.date = new Date(v.year,1,1);\n   this.name = \"an object\";\n};\n\nMyClass.prototype.dance = function() {console.log(\"I'm dancing\"); }\n\nvar o = new MyClass({year:2010});\nvar s = JSON.stringify(o);\n\n// Smart unpack function\nvar o2 = JSON.parse( s, function(k,v){\n  if(k===\"\") { \n     var rv = new MyClass(1990,0,0);\n     rv.date = v.date;\n     rv.name = v.name;\n     return rv\n  } else if(k===\"date\") {\n    return new Date( Date.parse(v) );\n  } else { return v; } } );\n\nconsole.log(o);             // { date: &lt;Mon Feb 01 2010 ...&gt;, name: 'an object' }\nconsole.log(o.constructor); // [Function: MyClass]\no.dance();                  // I'm dancing\n\nconsole.log(o2);            // { date: &lt;Mon Feb 01 2010 ...&gt;, name: 'an object' }\nconsole.log(o2.constructor) // [Function: MyClass]        \no2.dance();                 // I'm dancing\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Recommended is to use <code>JSON.parse</code> </p>\n\n<p>There is an alternative you can do :</p>\n\n<pre><code> var myObject = eval('(' + myJSONtext + ')');\n</code></pre>\n\n<p><a href=\"http://www.json.org/js.html\" rel=\"nofollow\">Json in javascript</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/86513/why-is-using-the-javascript-eval-function-a-bad-idea\">Why is using the JavaScript eval function a bad idea?</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>How about this  </p>\n\n<pre><code>var parsed = new Function('return ' + stringifiedJSON )();\n</code></pre>\n\n<p>This is a safer alternative for <code>eval</code>.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var stringifiedJSON = '{\"hello\":\"world\"}';\r\nvar parsed = new Function('return ' + stringifiedJSON)();\r\nalert(parsed.hello);</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Check this out.<br>\n<a href=\"http://jsfiddle.net/LD55x/\" rel=\"nofollow\">http://jsfiddle.net/LD55x/</a></p>\n\n<p>Code:  </p>\n\n<pre><code>var myobj = {};\nmyobj.name=\"javascriptisawesome\";\nmyobj.age=25;\nmyobj.mobile=123456789;\ndebugger;\nvar str = JSON.stringify(myobj);\nalert(str);\nvar obj = JSON.parse(str);\nalert(obj);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://jsbin.com/tidob/1/edit?js,console,output\" rel=\"nofollow\">http://jsbin.com/tidob/1/edit?js,console,output</a></p>\n\n<p>The native JSON object includes two key methods.</p>\n\n<pre><code>1. JSON.parse()\n2. JSON.stringify() \n</code></pre>\n\n<ol>\n<li><p>The <code>JSON.parse()</code> method parses a JSON string - i.e. reconstructing the original JavaScript object</p>\n\n<p><code>var jsObject = JSON.parse(jsonString);</code></p></li>\n<li><p>JSON.stringify() method accepts a JavaScript object and returns its JSON equivalent.  </p>\n\n<p><code>var jsonString = JSON.stringify(jsObject);</code></p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm stringyfing an object like <code>{'foo': 'bar'}</code></p>\n\n<p>How can I turn the string back to an object?</p>\n",
            "last_activity_date": 1420646209,
            "question_id": 11171746,
            "score": 91,
            "tags": [
                "javascript",
                "object"
            ],
            "title": "Reverse of JSON.stringify?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Does using .live work for you?</p>\n\n<pre><code>$(\"#my-button\").live(\"click\", function(){ alert(\"yay!\"); }); \n</code></pre>\n\n<p><a href=\"http://api.jquery.com/live/\" rel=\"nofollow\">http://api.jquery.com/live/</a> </p>\n\n<p><strong>EDIT</strong></p>\n\n<p>As of jQuery 1.7, the .live() method is deprecated. Use .on() to attach event handlers. Users of older versions of jQuery should use .delegate() in preference to .live().</p>\n\n<p><a href=\"http://api.jquery.com/on/\" rel=\"nofollow\">http://api.jquery.com/on/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try this.... Replace body with parent selector</p>\n\n<pre><code>$('body').on('click', '#my-button', function () {\n    console.log(\"yeahhhh!!! but this doesn't work for me :(\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use this.  You can replace body with any parent element that exists on dom ready</p>\n\n<pre><code>$('body').on('click', '#my-button', function () {\n     console.log(\"yeahhhh!!! but this doesn't work for me :(\");\n});\n</code></pre>\n\n<p>Look here <a href=\"http://api.jquery.com/on/\">http://api.jquery.com/on/</a> for more info on how to use on() as it replaces live() as of 1.7+.  </p>\n\n<p>Below lists which version you should be using</p>\n\n<blockquote>\n  <p>$(selector).live(events, data, handler);                // jQuery 1.3+</p>\n  \n  <p>$(document).delegate(selector, events, data, handler);  // jQuery 1.4.3+</p>\n  \n  <p>$(document).on(events, selector, data, handler);        // jQuery 1.7+</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 67
                },
                {
                    "body": "<p>On event</p>\n\n<pre><code>$('#my-button').on('click', function () {\n    console.log(\"yeahhhh!!! but this doesn't work for me :(\");\n});\n</code></pre>\n\n<p>Or add the event after append</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Maybe bind() would help: </p>\n\n<pre><code>button.bind('click', function() {\n  alert('User clicked');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Try:</p>\n\n<pre><code>$('body').on({\n    hover: function() {\n        console.log(\"yeahhhh!!! but this doesn't work for me :(\");\n    },\n    click: function() {\n        console.log(\"yeahhhh!!! but this doesn't work for me :(\");\n    }\n},'#my-button');\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/j08691/aCs8g/\">jsfiddle example</a></strong>.</p>\n\n<p>When using .on() and binding to a dynamic element, you need to refer to an element that already exists on the page (like body in the example). If you can use a more specific element that would improve performance.</p>\n\n<blockquote>\n  <p>Event handlers are bound only to the currently selected elements; they\n  must exist on the page at the time your code makes the call to .on().\n  To ensure the elements are present and can be selected, perform event\n  binding inside a document ready handler for elements that are in the\n  HTML markup on the page. If new HTML is being injected into the page,\n  select the elements and attach event handlers after the new HTML is\n  placed into the page. Or, use delegated events to attach an event\n  handler, as described next.</p>\n</blockquote>\n\n<p>Src: <a href=\"http://api.jquery.com/on/\">http://api.jquery.com/on/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>jQuery .on method is used to bind events even without the presence of element on page load.\nHere is the <a href=\"http://api.jquery.com/on/\" rel=\"nofollow\">link</a>\nIt is used in this way:</p>\n\n<pre><code> $(\"#dataTable tbody tr\").on(\"click\", function(event){\n    alert($(this).text());\n });\n</code></pre>\n\n<p>Before jquery 1.7, .<a href=\"http://api.jquery.com/live/\" rel=\"nofollow\">live()</a> method was used, but it is deprecated now.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you have to append it.... so create the element with:</p>\n\n<pre><code>var $div = $(\"&lt;div&gt;my div&lt;/div&gt;\");\n$div.click(function(){alert(\"clicked\")})\nreturn $div;\n</code></pre>\n\n<p>then if you append it will work.\nTake a look at your example <a href=\"http://jsfiddle.net/yxs95bd3/\" rel=\"nofollow\">here</a></p>\n\n<p>and a simple versione <a href=\"http://jsfiddle.net/cn7y2mwb/\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been having a lot of trouble attaching the click event to a JQuery object before adding it to the DOM.</p>\n\n<p>Basicly I have this button that my function returns, then I append it to the DOM. What I want is to return the button with its own click handler. I don't want to select it from the DOM to attach the handler.</p>\n\n<p>My code is this:</p>\n\n<pre><code>createMyButton = function(data) {\n\n  var button = $('&lt;div id=\"my-button\"&gt;&lt;/div&gt;')\n    .css({\n       'display' : 'inline',\n       'padding' : '0px 2px 2px 0px',\n       'cursor' : 'pointer'\n     }).append($('&lt;a&gt;').attr({\n       //'href' : Share.serializeJson(data),\n       'target' : '_blank',\n       'rel' : 'nofollow'\n     }).append($('&lt;image src=\"css/images/Facebook-icon.png\"&gt;').css({\n       \"padding-top\" : \"0px\",\n       \"margin-top\" : \"0px\",\n       \"margin-bottom\" : \"0px\"\n     })));\n\n     button.click(function () {\n        console.log(\"asdfasdf\");\n     });\n\n     return button;     \n}\n</code></pre>\n\n<p>The button that is return is unable to catch the click event. However, if i do this (after the button is added to the DOM):</p>\n\n<pre><code>$('#my-button').click(function () {\n    console.log(\"yeahhhh!!! but this doesn't work for me :(\");\n});\n</code></pre>\n\n<p>It works... but not for me, not what I want.</p>\n\n<p>I've spent hours trying to make this work, it seems to be related to the fact that the object is not yet a part of the DOM. Any help would be very apreciated.</p>\n\n<p>Oh! By the way, I'm working with OpenLayers, and the DOM object that I'm appending the button to is an OpenLayers.FramedCloud (Wich is not yet a part of the DOM but will be once a couple of events are triggered.)</p>\n",
            "last_activity_date": 1421348300,
            "question_id": 10920355,
            "score": 45,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events",
                "onclick"
            ],
            "title": "Attaching click event to a JQuery object not yet added to the DOM"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can use the following code to hide a table column..</p>\n\n<pre><code>JQuery(\"tableName\").hideCol(\"colName\");\n</code></pre>\n\n<p>And you can use the following code to show it again.</p>\n\n<pre><code>JQuery(\"tableName\").showCol(\"colName\");\n</code></pre>\n\n<p>For your question, you can call the hideCol() code on the document.ready(), and you can bind the showCol() code on the dialog's edit/click event.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>This feature is built into jqGrid. </p>\n\n<p>setup your grid function as follows. </p>\n\n<pre><code>$('#myGrid').jqGrid({\n   ...\n   colNames: ['Manager', 'Name', 'HiddenSalary'],\n   colModel: [               \n               { name: 'Manager', editable: true },\n               { name: 'Price', editable: true },\n               { name: 'HiddenSalary', hidden: true , editable: true, \n                  editrules: {edithidden:true} \n               }\n             ],\n   ...\n};\n</code></pre>\n\n<p>There are other editrules that can be applied but this basic setup would hide the manager's salary in the grid view but would allow editing when the edit form was displayed. </p>\n",
                    "is_accepted": false,
                    "score": 61
                },
                {
                    "body": "<p>Try to use edithidden: true and also do</p>\n\n<pre><code>editoptions: { dataInit: function(element) { $(element).attr(\"readonly\", \"readonly\"); } }\n</code></pre>\n\n<p>Or see jqGrid wiki for custom editing, you can setup any input type, even label I think.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This thread is pretty old I suppose, but in case anyone else stumbles across this question...\nI had to grab a value from the selected row of a table, but I didn't want to show the column that row was from.  I used hideCol, but had the same problem as Andy where it looked messy.  To fix it (call it a hack) I just re-set the width of the grid.</p>\n\n<pre><code>jQuery(document).ready(function() {\n\n       jQuery(\"#ItemGrid\").jqGrid({ \n                ..., \n                width: 700,\n                ...\n        }).hideCol('StoreId').setGridWidth(700)\n</code></pre>\n\n<p>Since my row widths are automatic, when I reset the width of the table it reset the column widths but excluded the hidden one, so they filled in the gap.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I just want to expand on <strong>queen3</strong>'s suggestion, applying the following does the trick:</p>\n\n<pre><code>editoptions: { \n              dataInit: function(element) { \n                          $(element).attr(\"readonly\", \"readonly\"); \n                        } \n             }\n</code></pre>\n\n<p><strong>Scenario #1</strong>:</p>\n\n<ul>\n<li>Field must be visible in the grid</li>\n<li>Field must be visible in the form</li>\n<li>Field must be read-only</li>\n</ul>\n\n<p><strong>Solution</strong>:</p>\n\n<pre><code>colModel:[\n        {  name:'providerUserId',\n               index:'providerUserId', \n               width:100,editable:true, \n               editrules:{required:true}, \n               editoptions:{ \n                            dataInit: function(element) { \n                                  jq(element).attr(\"readonly\", \"readonly\"); \n                             } \n                           }\n            },\n],\n</code></pre>\n\n<p>The providerUserId is visible in the grid and visible when editing the form. But you cannot edit the contents. </p>\n\n<hr>\n\n<p><strong>Scenario #2</strong>:</p>\n\n<ul>\n<li>Field must not be visible in the grid</li>\n<li>Field must be visible in the form</li>\n<li>Field must be read-only</li>\n</ul>\n\n<p><strong>Solution</strong>:</p>\n\n<pre><code>colModel:[\n           {name:'providerUserId',\n            index:'providerUserId', \n            width:100,editable:true, \n            editrules:{\n                         required:true, \n                         edithidden:true\n                      }, hidden:true, \n                      editoptions:{ \n                                    dataInit: function(element)              {                     jq(element).attr(\"readonly\", \"readonly\"); \n                                  } \n                     }\n         },\n        ]\n</code></pre>\n\n<p>Notice in both instances I'm using jq to reference jquery, instead of the usual $. In my HTML I have the following script to modify the variable used by jQuery:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var jq = jQuery.noConflict();\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>To hide the grid column</p>\n\n<pre><code>jQuery(\"#validGrid\").jqGrid('hideCol',str);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there any way to hide a column in a jqGrid table, but have it show as read-only when the row is edited in the form editor modal dialog?</p>\n",
            "last_activity_date": 1370342397,
            "question_id": 1661800,
            "score": 40,
            "tags": [
                "javascript",
                "jquery",
                "jqgrid"
            ],
            "title": "Hidden Columns in jqGrid"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You need a JavaScript engine for Rails 3.1 (heroku doesn\u2019t have one), and it appears that the JavaScript engine that works with Heroku is the <a href=\"https://github.com/aler/therubyracer-heroku\" rel=\"nofollow\">rubyracer for heroku</a>.</p>\n\n<p>Rails uses execjs to execute JavaScript and execjs supports 7 JavaScript engines.  Node.js is one, and rubyracer is one.  </p>\n\n<p><a href=\"http://www.quickleft.com/blog/rails-31-sprockets-and-heroku\" rel=\"nofollow\">Gerred Dillon</a> had a similar problem and wrote about it.  In the comment section a point was raised about making this a production only change, since you already have nodejs as your local JavaScript engine.  So the relevant code is:</p>\n\n<pre class=\"lang-ruby prettyprint-override\"><code>group :production do\n  gem 'therubyracer-heroku', '0.8.1.pre3'\nend\n</code></pre>\n\n<p><strong>UPDATE:</strong> Heroku has a new stack, called <a href=\"http://devcenter.heroku.com/articles/cedar\" rel=\"nofollow\">Cedar</a>, that they recommend for Rails 3.1.0. (Run <code>heroku stack</code> to see what stack your app is on.) Heroku also has a <a href=\"http://devcenter.heroku.com/articles/rails31_heroku_cedar#upgrading_from_previous_rails_31_releases\" rel=\"nofollow\">doc</a> about upgrading to Rails 3.1.0 rc5. They recommend <strong>not</strong> using the \u2018therubyracer-heroku\u2019 gem anymore as it\u2019s not necessary with rc5.</p>\n\n<p>If you are upgrading from an older rc, make sure to update your config/application.rb file, and also run this command:</p>\n\n<pre><code>heroku config:add PATH=vendor/bundle/ruby/1.9.1/bin:/usr/local/bin:/usr/bin:/bin:bin\n</code></pre>\n\n<p>Apparently, this is set in new apps, but existing apps have not set this PATH.</p>\n",
                    "is_accepted": false,
                    "score": 50
                },
                {
                    "body": "<p>You don't necessarily need a JavaScript runtime to deploy Rails 3.1 beta to heroku.</p>\n\n<p>The JavaScript runtime is only required if you are minifying javascript on deployment (i.e., via the <strong>uglifier</strong> gem) or if you are using coffee-script.</p>\n\n<p>It looks like this javascript runtime dependency will not be there for the 3.1 final release.</p>\n\n<p>In case you don't mind not minifying your javascript (and also if you're not using coffee-script), then you can comment out the <strong>coffee-script, uglifier and execjs</strong> gems in the Gemfile and also comment out <strong>config.assets.js_compressor</strong> in your <strong>production.rb</strong> and you should be good to go.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>As of the date of this post you still need to specify </p>\n\n<p>gem 'therubyracer-heroku', '0.8.1.pre3' </p>\n\n<p>in your gemfile in order to successfully deploy a Rails 3.1 app to Heroku's Cedar platform.  </p>\n\n<p>While it is possible to deploy Node apps to the Cedar platform, Node itself is not present on the Cedar stack when deploying Rails apps, so you have to bundle your own javascript runtime.  </p>\n\n<p>For now.  </p>\n\n<p>I know the people on the Rails side of things are working to remove the dependency on having a js runtime, <a href=\"http://yehudakatz.com/2011/06/14/what-the-hell-is-happening-to-rails/\" rel=\"nofollow\">http://yehudakatz.com/2011/06/14/what-the-hell-is-happening-to-rails/</a> \nand I'm sure that Heroku is also looking into ways to make Rails 3.1 deployments just work.   </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>In my case, it happened after successful upload to Heroku and accessing the page. </p>\n\n<pre><code>ActionView::Template::Error (Could not find a JavaScript runtime. See https://github.com/sstephenson/execjs for a list of available runtimes.\n2012-01-09T08:21:19+00:00 app[web.1]:   (in /app/app/assets/javascripts/page.js.coffee)):\n</code></pre>\n\n<p>Setting path using 'heroku config:add PATH blah' didn't help.</p>\n\n<p>\"rake assets:precompile\" just solved it. </p>\n\n<p>Hope it helps anyone like me!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am having trouble deploying a rails 3.1 beta project to heroku. The problem happened at the database migration step. When I ran:</p>\n\n<pre><code>heroku rake db:migrate\n</code></pre>\n\n<p>I got error message:</p>\n\n<pre>\n> rake aborted! \n\n> Could not find a JavaScript runtime. See\n> https://github.com/sstephenson/execjs\n> for a list of available runtimes.\n\n> /app/Rakefile:5 \n\n> (See full trace by running task with --trace) \n\n> (in /app)\n</pre>\n\n<p>But I can successfully run the application locally, and I do have nodejs installed. Any idea why?</p>\n\n<p>Here my gem list:</p>\n\n<pre><code>abstract (1.0.0)\nactionmailer (3.1.0.beta1)\nactionpack (3.1.0.beta1, 3.0.7)\nactivemodel (3.1.0.beta1, 3.0.7)\nactiverecord (3.1.0.beta1)\nactiveresource (3.1.0.beta1)\nactivesupport (3.1.0.beta1, 3.0.7)\nansi (1.2.5)\narel (2.1.0)\nbcrypt-ruby (2.1.4)\nbuilder (3.0.0, 2.1.2)\nbundler (1.0.13)\ncoffee-script (2.2.0)\ncoffee-script-source (1.1.0)\nconfiguration (1.2.0)\ndaemon_controller (0.2.6)\nerubis (2.7.0, 2.6.6)\nexecjs (1.0.0, 0.3.3)\nfastthread (1.0.7)\nheroku (2.1.4)\nhike (1.0.0)\ni18n (0.6.0beta1, 0.5.0)\njquery-rails (1.0.1)\njson (1.5.1)\njson_pure (1.5.1)\nlaunchy (0.4.0)\nmail (2.3.0)\nmime-types (1.16)\nminitest (1.6.0)\nmulti_json (1.0.1)\nmysql (2.8.1)\nmysql2 (0.3.2)\noauth (0.4.4)\npassenger (3.0.7)\npolyglot (0.3.1)\nrack (1.3.0.beta, 1.2.2)\nrack-cache (1.0.1)\nrack-mount (0.7.2, 0.6.14)\nrack-ssl (1.3.2)\nrack-test (0.6.0, 0.5.7)\nrails (3.1.0.beta1)\nrailties (3.1.0.beta1)\nrake (0.8.7)\nrdoc (2.5.8)\nrest-client (1.6.1)\nrubygems-update (1.8.1)\nsass (3.1.1)\nsimplegeo (0.5.1)\nsprockets (2.0.0.beta.2)\nsqlite3 (1.3.3)\nsqlite3-ruby (1.3.3)\nterm-ansicolor (1.0.5)\ntherubyracer-heroku (0.8.1.pre3)\nthor (0.14.6)\ntilt (1.3)\ntreetop (1.4.9)\nturn (0.8.2)\ntzinfo (0.3.27)\nuglifier (0.5.1)\n</code></pre>\n",
            "last_activity_date": 1339702768,
            "question_id": 6075961,
            "score": 38,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "ruby",
                "heroku"
            ],
            "title": "Problem deploying Rails 3.1 project to Heroku: Could not find a JavaScript runtime"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Javascript runs in a single thread and therefore if you have a slow function it <em>will</em> block everything else.</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>That will do some of what you want, but keep in mind that they are not <s>widely supported</s> supported in IE (I think they will be in IE10).</p>\n\n<p>Some resources on Web Workers:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/using_web_workers\">Using Web workers</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Web_Workers\">Wikipedia article on Web Workers</a></li>\n<li><a href=\"http://www.whatwg.org/specs/web-apps/current-work/complete/workers.html\">WHATWG: Web Workers</a></li>\n</ul>\n\n<p>Here are a few resources on accomplishing multi-threading without web workers. It's important to note that this isn't \"true\" multi-threading:</p>\n\n<ul>\n<li><a href=\"http://www.sitepoint.com/multi-threading-javascript/\">Multi-threading in Javascript</a> (title is a little misleading; it's not true multi-threading)</li>\n<li><a href=\"http://stackoverflow.com/questions/39879/why-doesnt-javascript-support-multithreading\">Why doesn't Javascript support multi-threading?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/30036/javascript-and-threads#30197\">Is there some way to do multi-threading in Javascript?</a></li>\n<li><a href=\"http://www.tidytutorials.com/2009/12/real-javascript-multithreading-using.html\">Simulating multi-threading using IFRAMEs</a> (I'm not sure how viable this method is; it might be more trouble than it's worth and the law of diminishing returns probably applies.)</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>I was going to suggest looking at a timeout but alas.  This post by John Resig (of jQuery) explains a bit about how JavaScript handles its single thread.  <a href=\"http://ejohn.org/blog/how-javascript-timers-work/\">http://ejohn.org/blog/how-javascript-timers-work/</a></p>\n\n<p><a href=\"http://pietschsoft.com/post/2008/02/JavaScript-Function-Tips-and-Tricks.aspx\">This article</a> also explains: \"One thing to remember when executing functions asynchronously in JavaScript, is all other JavaScript execution in the page halts until a function call is completed. This is how all the current browsers execute JavaScript, and can cause real performance issues if you are trying to call too many things asynchronously at the same time. A long running function will actually \"lock up\" the browser for the user. The same is true for synchronous function calls too.\"</p>\n\n<p><strong>All that said, it's possible you could simulate an asynchronous function call yourself by breaking whatever loop you are doing into a smaller chunk and using setTimeout().</strong></p>\n\n<p>For instance this function:</p>\n\n<pre><code>// Sync\n(function() {\n  for(var x = 0; x &lt; 100000; ++x) {console.log(x)}\n})()\n\n// ASync\nvar x = 0;\nsetTimeout(function() {\n   console.log(x++);\n   if(x &lt; 100000) setTimeout(arguments.callee, 1);\n} ,1)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You might want <a href=\"https://developer.mozilla.org/en/using_web_workers\" rel=\"nofollow\">web workers!</a></p>\n\n<p>Edit: I'm surprised how many people jumped to \"its not possible\" so I will elaborate. Web Workers are part of the <a href=\"http://dev.w3.org/html5/workers/\" rel=\"nofollow\">HTML 5 spec</a>. They allow you to spawn threads to run scripts in the background without blocking the UI. They must be external js files, are invoked by</p>\n\n<pre><code>var worker = new Worker('my_task.js');\n</code></pre>\n\n<p>and are communicated to via events.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>This seems silly, but I can't find how to do an asynchronous function call with jQuery that doesn't involve some server-side request.  I have a slow function that iterates through a lot of DOM elements, and I want the browser to not freeze up while this function is running.  I want to display a little indicator before the slow function is called, then when the slow function returns, I want to hide the indicator.  I have the following:</p>\n\n<pre><code>$('form#filter', parentNode).submit(function() {\n  var form = $(this);\n  indicator.show();\n  var textField = $('input#query', form);\n  var query = jQuery.trim(textField.val());\n  var re = new RegExp(query, \"i\");\n  slowFunctionCall(); // want this to happen asynchronously; all client-side\n  indicator.hide();\n  return false;\n});\n</code></pre>\n\n<p>Currently I submit the form and the indicator isn't displayed, the browser freezes, and then <code>slowFunctionCall</code> is finished.</p>\n\n<p><strong>Edit:</strong> I used <a href=\"http://stackoverflow.com/questions/6836299/jquery-asynchronous-function-call-no-ajax-request/6836335#6836335\">Vivin's answer</a>, specifically the <a href=\"http://www.sitepoint.com/multi-threading-javascript/\">Sitepoint link</a> to get the following solution:</p>\n\n<pre><code>var indicator = $('#tagFilter_loading', parentNode);\nindicator.hide();\nvar spans = $('div#filterResults span', parentNode);\nvar textField = $('input#query', parentNode);\nvar timer = undefined, processor = undefined;\nvar i=0, limit=spans.length, busy=false;\nvar filterTags = function() {\n  i = 0;\n  if (processor) {\n    clearInterval(processor);\n  }\n  indicator.show();\n  processor = setInterval(function() {\n    if (!busy) {\n      busy = true;\n      var query = jQuery.trim(textField.val()).toLowerCase();\n      var span = $(spans[i]);\n      if ('' == query) {\n        span.show();\n      } else {\n        var tagName = span.attr('rel').toLowerCase();\n        if (tagName.indexOf(query) == -1) {\n          span.hide();\n        }\n      }\n      if (++i &gt;= limit) {\n        clearInterval(processor);\n        indicator.hide();\n      }\n      busy = false;\n    }\n  }, 1);\n};\ntextField.keyup(function() {\n  if (timer) {\n    clearTimeout(timer);\n  }\n  /* Only start filtering after the user has finished typing */\n  timer = setTimeout(filterTags, 2000);\n});\ntextField.blur(filterTags);\n</code></pre>\n\n<p>This shows and hides the indicator and also doesn't freeze the browser.  You get to watch the DOM elements being hidden as it works, which is what I was going for.</p>\n",
            "last_activity_date": 1409398574,
            "question_id": 6836299,
            "score": 34,
            "tags": [
                "javascript",
                "jquery",
                "forms",
                "function",
                "asynchronous"
            ],
            "title": "jQuery asynchronous function call, no AJAX request"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>To get the result in your code, you would do:</p>\n\n<pre><code>function extend(a, b){\n    for(var key in b)\n        if(b.hasOwnProperty(key))\n            a[key] = b[key];\n    return a;\n}\n</code></pre>\n\n<p>Keep in mind that the way you used extend there will modify the default object.  If you don't want that, use</p>\n\n<pre><code>$.extend({}, default, config)\n</code></pre>\n\n<p>A more robust solution that mimics jQuery's functionality would be as follows:</p>\n\n<pre><code>function extend(){\n    for(var i=1; i&lt;arguments.length; i++)\n        for(var key in arguments[i])\n            if(arguments[i].hasOwnProperty(key))\n                arguments[0][key] = arguments[i][key];\n    return arguments[0];\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p>You can loop through Object's properties using \"for\" statement.</p>\n\n<pre><code>var settings = extend(default, config);\n\nfunction extend(a, b){\n    var c = {};\n    for(var p in a)    c[p] = (b[p] == null) ? a[p] : b[p];\n    return c;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/171251/how-can-i-merge-properties-of-two-javascript-objects-dynamically\">How can I merge properties of two JavaScript objects dynamically?</a>  </p>\n</blockquote>\n\n\n\n<h3>Background</h3>\n\n<p>I have a function that takes a <code>config</code> object as an argument.  Within the function, I also have <code>default</code> object.  Each of those objects contains properties that essentially work as settings for the rest of the code within the function.  In order to prevent having to specify all of the settings within the <code>config</code> object, I use jQuery's <code>extend</code> method to fill in a new object, <code>settings</code> with any default values from the <code>default</code> object if they weren't specified in the <code>config</code> object:</p>\n\n<pre><code>var config = {key1: value1};\nvar default = {key1: default1, key2: default2, key 3: default 3};\n\nvar settings = $.extend(default, config);\n\n//resulting properties of settings:\nsettings = {key1: value1, key2: default2, key 3: default 3};\n</code></pre>\n\n<h3>Problem</h3>\n\n<p>This works great, but I'd like to reproduce this functionality without the need for jQuery.  Is there an equally elegant (or close to) means to do this with plain ol' javascript?</p>\n\n<hr>\n\n<h3>Edit: Non-Duplicate Justification</h3>\n\n<p>This question is not a duplicate of the \"<a href=\"http://stackoverflow.com/questions/171251/how-can-i-merge-properties-of-two-javascript-objects-dynamically\">How can I merge properties of two JavaScript objects dynamically?</a>\" question. Whereas that question simply wants to create an object that contains all of the keys and values from two separate objects - I specifically want to address how to do this in the event that both objects share some but not all keys and which object will get precedence (the default) for the resulting object in the event that there are duplicate keys. And even more specifically, I wanted to address the use of jQuery's method to achieve this and find an alternative way to do so without jQuery.  While many of the answers to both questions overlap, that does not mean that the questions themselves are the same.</p>\n",
            "last_activity_date": 1424908225,
            "question_id": 11197247,
            "score": 32,
            "tags": [
                "javascript",
                "jquery",
                "object",
                "extend"
            ],
            "title": "JavaScript equivalent of jQuery&#39;s extend method"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>The approach that I've found works for me is having seperate JS files for each class (just as you would in Java, C# and others). Alternatively you can group your JS into application functional areas if that's easier for you to navigate.</p>\n\n<p>If you put all your JS files into one directory, you can have your server-side environment (PHP for instance) loop through each file in that directory and output a <code>&lt;script src='/path/to/js/$file.js' type='text/javascript'&gt;</code> in some header file that is included by all your UI pages. You'll find this auto-loading especially handy if you're regularly creating and removing JS files.</p>\n\n<p>When deploying to production, you should have a script that combines them all into one JS file and \"minifies\" it to keep the size down.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>For server efficiency's sake, it is best to combine all of your javascript into one minified file.</p>\n\n<p>Determine the order in which code is required and then place the minified code in the order it is required in a single file.</p>\n\n<p>The key is to reduce the number of requests required to load your page, which is why you should have all javascript in a single file for production.</p>\n\n<p>I'd recommend keeping files split up for development and then create a build script to combine/compile everything.</p>\n\n<p>Also, as a good rule of thumb, make sure you include your JavaScript toward the end of your page. If JavaScript is included in the header (or anywhere early in the page), it will stop all other requests from being made until it is loaded, even if pipelining is turned on. If it is at the end of the page, you won't have this problem.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just a sidenode - Steve already pointed out, you should really \"minify\" your JS files. In JS, whitespaces actually matter. If you have thousand lines of JS and you strip only the unrequired newlines you have already saved about 1K. I think you get the point.</p>\n\n<p>There are tools, for this job. And you should never modify the \"minified\"/stripped/obfuscated JS by hand! Never!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There's an excellent article on Vitamin by Cal Henderson of Flickr fame on how they optimise delivery of their CSS and JavaScript: <a href=\"http://www.iamcal.com/serving-javascript-fast/\" rel=\"nofollow\">http://www.iamcal.com/serving-javascript-fast/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>In our big javascript applications, we write all our code in small separate files - one file per 'class' or functional group, using a kind-of-like-Java namespacing/directory structure. We then have:</p>\n\n<ul>\n<li>A compile-time step that takes all our code and minifies it (using a variant of JSMin) to reduce download size</li>\n<li>A compile-time step that takes the classes that are always or almost always needed and concatenates them into a large bundle to reduce round trips to the server</li>\n<li>A 'classloader' that loads the remaining classes at runtime on demand.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Read the code of other (good) javascript apps and see how they handle things.  But I start out with a file per class.  But once its ready for production, I would combine the files into one large file and minify.</p>\n\n<p>The only reason, I would not combine the files, is if I didn't need all the files on all the pages.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Also, I suggest you to use Google's <a href=\"http://code.google.com/apis/ajaxlibs/documentation/\">AJAX Libraries API</a> in order to load external libraries. </p>\n\n<p>It's a Google developer tool which bundle majors JavaScript libraries and make it easier to deploy, upgrade and make them lighter by always using compressed versions.</p>\n\n<p>Also, it make your project simpler and lighter because you don't need to download, copy and maintain theses libraries files in your project.</p>\n\n<p>Use it this way :</p>\n\n<pre><code>google.load(\"jquery\", \"1.2.3\");\ngoogle.load(\"jqueryui\", \"1.5.2\");\ngoogle.load(\"prototype\", \"1.6\");\ngoogle.load(\"scriptaculous\", \"1.8.1\");\ngoogle.load(\"mootools\", \"1.11\");\ngoogle.load(\"dojo\", \"1.1.1\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>My strategy consist of 2 major techniques: AMD modules (to avoid dozens of script tags) and the Module pattern (to avoid tightly coupling of the parts of your application)</p>\n\n<p>AMD Modules: very straight forward, see here: <a href=\"http://requirejs.org/docs/api.html\" rel=\"nofollow\">http://requirejs.org/docs/api.html</a> also it's able to package all the parts of your app into one minified JS file: <a href=\"http://requirejs.org/docs/optimization.html\" rel=\"nofollow\">http://requirejs.org/docs/optimization.html</a></p>\n\n<p>Module Pattern: i used this Library: <a href=\"https://github.com/flosse/scaleApp\" rel=\"nofollow\">https://github.com/flosse/scaleApp</a> you asking now what is this ? more infos here: <a href=\"http://www.youtube.com/watch?v=7BGvy-S-Iag\" rel=\"nofollow\">http://www.youtube.com/watch?v=7BGvy-S-Iag</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What are some standard practices for managing a medium-large JavaScript application? My concerns are both speed for browser download and ease and maintainability of development.</p>\n\n<p>Our JavaScript code is roughly \"namespaced\" as:</p>\n\n<pre><code>var Client = {\n   var1: '',\n   var2: '',\n\n   accounts: {\n      /* 100's of functions and variables */\n   },\n\n   orders: {\n      /* 100's of functions and variables and subsections */\n   }\n\n   /* etc, etc  for a couple hundred kb */\n}\n</code></pre>\n\n<p>At the moment, we have one (unpacked, unstripped, highly readable) JavaScript file to handle all the business logic on the web application. In addition, there is jQuery and several jQuery extensions. The problem we face is that it takes <em>forever</em> to find anything in the JavaScript code and the browser still has a dozen files to download.</p>\n\n<p>Is it common to have a handful of \"source\" JavaScript files that gets \"compiled\" into one final, compressed JavaScript file? Any other handy hints or best practices?</p>\n",
            "last_activity_date": 1374937168,
            "question_id": 15390,
            "score": 25,
            "tags": [
                "javascript",
                "web-applications",
                "deployment"
            ],
            "title": "Best practices for managing and deploying large JavaScript apps"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Huh \u2014 Dive into HTML5 says that <a href=\"http://fortuito.us/diveintohtml5/storage.html#limitations\" rel=\"nofollow\">no browser supported this as of February 2011</a>, so I guess this might be an iOS 4.3 thing? (iOS 4.3 shipped in March 2011.)</p>\n\n<p>I can\u2019t find any references to it from a quick Google. Apple\u2019s own developer documentation might mention it \u2014 I\u2019m not sure if that\u2019s available to non-SDK subscribers though.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>It's browser specific. Most have set it to 5MB and some give the option of increasing it through a setting somewhere. Not all browsers offer this though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This database is part of <a href=\"http://www.w3.org/TR/webdatabase/\">Web SQL Database</a> API, which is not part of HTML5.  Use the following the set the size of your database</p>\n\n<pre><code>function prepareDatabase(ready, error) {\n    return openDatabase('documents', '1.0', 'Offline document storage', 50*1024*1024, function (db) {\n        db.changeVersion('', '1.0', function (t) {\n            t.executeSql('CREATE TABLE docids (id, name)');\n        }, error);\n    });\n}\n</code></pre>\n\n<p><a href=\"http://html5doctor.com/introducing-web-sql-databases/\">Introducing Web SQL Databases</a> on HTML5 Doctor has a very quick tutorial on how all of this works.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I happen to know something about this ;)</p>\n\n<p>There's no API for requesting an increase in storage size for an existing database.  There is one way to force an increase: write data to the database in such a size that an increase is required, prompting the user.  However, this would be slow <em>and</em> there's no way to tell the currently allocated space, so it's not recommended.</p>\n\n<p>Black Frog has part of this correct: the only neat way to do this is to request a very large database when it is opened, for example:</p>\n\n<pre><code>openDatabase('databaseName', '1.0', 'My Database', 50*1024*1024, \u2026\n</code></pre>\n\n<p>\u2026 to request 50MB of space.</p>\n\n<p>However, when the user first visits the site, you may not want to prompt them about a 50MB limit at once; so you might think that you could ask for 5MB at first, and then later re-open it with 50MB?  Unfortunately, this doesn't work - the second open attempt, with an increased quantity, succeeds silently, not prompting for a size increase and not actually increasing the available size.</p>\n\n<p>The FT app therefore starts off with a 5MB \"preview\" database, so that the user isn't prompted on first load.  It tries not to exceed this 5MB limit, as any space assigned has to be shared across all databases.</p>\n\n<p>If the user chooses to allow storage of more content, the app then tries to open a database with a different name with 40MB of space (for which the user is prompted to approve 50MB).  This allows 40MB in that database, and 5MB in the original preview database, so neither should fail when inserting rows - as 50MB total is currently the limit on iOS.</p>\n\n<p>All browsers currently handle database space limits differently, so if you're planning cross-platform, test carefully.  Desktop Safari handles it rather nicely, allowing much larger; Chrome doesn't allow any increase at all; etc.  Expect all \"HTML5\" implementations to differ in strange ways :)</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>I just tested with my offline app in iPad 2( iOS 5.1.1) that we do not need to do anything specific inside the app. For e.g., my app has about 18 MB of offline data. When the browser hit URL, browser popped up the message requesting increase in size to 25 MB and I accepted it and all is fine. Thanks</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>If you open <a href=\"http://app.ft.com\">http://app.ft.com</a> (the Financial Times mobile web app), you are prompted to add the app to your \"home\".</p>\n\n<p>After doing this, when you open the app, you are prompted again to allow the localstoreage database size to be increased up to 50MB.</p>\n\n<ul>\n<li>How can this be done? Is there some JavaScript API call? Permissions or whatever?</li>\n<li>Is this iPad (iOS?) specific, or does it work on other Webkit browsers?</li>\n</ul>\n",
            "last_activity_date": 1346436791,
            "question_id": 6276282,
            "score": 21,
            "tags": [
                "javascript",
                "ios",
                "html5",
                "mobile-website",
                "local-storage"
            ],
            "title": "How can I request an increase to the HTML5 localstorage size on iPad, like the FT web app does?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can read <strong><a href=\"http://calendar.perfplanet.com/2010/bulletproof-javascript-benchmarks/\" rel=\"nofollow\">Bulletproof JavaScript benchmarks</a></strong> article from the authors. It uses <a href=\"http://benchmarkjs.com/\" rel=\"nofollow\">Benchmark.js</a> btw, which is Open Source.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I wrote <a href=\"http://benchmarkjs.com\">Benchmark.js</a>, which <a href=\"http://jsperf.com/browse\">jsPerf</a> uses.</p>\n\n<ol>\n<li><p>\"<code>ops/sec</code>\" stands for operations per second.\nThat is how many times a test is projected to execute in a second.</p></li>\n<li><p>A test is repeatedly executed until it reaches the minimum time needed to get a <a href=\"http://spiff.rit.edu/classes/phys273/uncert/uncert.html\">percentage uncertainty</a> for the measurement of less than or equal to <code>1%</code>. The number of iterations will vary depending on the resolution of the environment\u2019s timer and how many times a test can execute in the minimum run time. We collect completed test runs for <code>5</code> seconds <em>(configurable)</em>, or at least <code>5</code> runs <em>(also configurable)</em>, and then perform statistical analysis on the sample. So, a test may be repeated <code>100,000</code> times in <code>50 ms</code> <em>(the minimum run time for most environments)</em>, and then repeated <code>100</code> times more <em>(<code>5</code> seconds)</em>. A larger sample size <em>(in this example, <code>100</code>)</em>, leads to a smaller <a href=\"http://en.wikipedia.org/wiki/Margin_of_error\">margin of error</a>.</p></li>\n<li><p>We base the decision of which test is faster on more than just ops/sec by also accounting for margin of error. For example, a test with a lower ops/sec but higher margin of error may be statistically <em>indistinguishable</em> from a test with higher ops/sec and lower margin of error.</p>\n\n<p>We used a <a href=\"http://en.wikipedia.org/wiki/Welch%27s_t_test\">welch t-test</a>, similar to what <a href=\"http://www.webkit.org/perf/sunspider/sunspider.html\">SunSpider</a> uses, but switched to an <a href=\"https://github.com/mathiasbynens/Benchmark.js/blob/d4e874f2c0956d11bd1187870c2655eb3a3ab692/benchmark.js#L1175-1194\">unpaired 2-sample t-test</a> for equal variance <em>(the variance is extremely small)</em> because the welch t-test had problems comparing lower ops/sec and higher ops/sec with small variances which caused the <a href=\"http://en.wikipedia.org/wiki/Degrees_of_freedom_%28statistics%29\">degrees of freedom</a> to be computed as less than <code>1</code>. We also add a <code>5.5%</code> allowance on tests with similar ops/sec because real world testing showed that identical tests can swing ~<code>5%</code> from test to re-test. T-tests are used to check that differences between tests are <a href=\"http://en.wikipedia.org/wiki/Statistical_significance\">statistically significant</a>.</p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 69
                }
            ],
            "body": "<p>Today I visited <a href=\"http://jsperf.com/\">jsPerf</a> and now I am wondering\u2026</p>\n\n<ol>\n<li>What is \u201cops/sec\u201d?</li>\n<li>How many iterations does it do?</li>\n<li>On what basis does it calculate which is faster? What is the formula behind these calculations?</li>\n</ol>\n\n<p>Example: <a href=\"http://jsperf.com/concatenation-vs-join\">http://jsperf.com/concatenation-vs-join</a></p>\n\n<p>Can anyone tell me?</p>\n\n<p>Thanks in advance.</p>\n",
            "last_activity_date": 1369828403,
            "question_id": 4986245,
            "score": 21,
            "tags": [
                "javascript",
                "performance",
                "benchmarking",
                "jsperf"
            ],
            "title": "How does jsPerf work?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Maybe it would be better if you would read your excel file from PHP, and then either save it to a DB or do some processing on it.</p>\n\n<p>here an in-dept tutorial on how to read and write Excel data with PHP: <BR>\n<a href=\"http://www.ibm.com/developerworks/opensource/library/os-phpexcel/index.html\" rel=\"nofollow\">http://www.ibm.com/developerworks/opensource/library/os-phpexcel/index.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You don't lose the delimiters, the cells are separated by tabs (<code>\\t</code>) and rows by newlines (<code>\\n</code>) which might not be visible in the form. Try it yourself: copy content from Excel to Notepad, and you'll see your cells nicely lined up. It's easy then to split the fields by tabs and replace them with something else, this way you can build even a table from them. Here's a example using jQuery:</p>\n\n<pre><code>var data = $('input[name=excel_data]').val();\nvar rows = data.split(\"\\n\");\n\nvar table = $('&lt;table /&gt;');\n\nfor(var y in rows) {\n    var cells = rows[y].split(\"\\t\");\n    var row = $('&lt;tr /&gt;');\n    for(var x in cells) {\n        row.append('&lt;td&gt;'+cells[x]+'&lt;/td&gt;');\n    }\n    table.append(row);\n}\n\n// Insert into DOM\n$('#excel_table').html(table);\n</code></pre>\n\n<p>So in essence, this script creates an HTML table from pasted Excel data.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Excel 2007 has a feature for doing this under the \"Data\" tab that works pretty nicely.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The same idea as Tatu(thanks I'll need it soon in our project), but with a regular expression.<br />\nWhich may be quicker for large dataset.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;excelToTable&lt;/title&gt;\n    &lt;script src=\"../libs/jquery.js\" type=\"text/javascript\" charset=\"utf-8\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;textarea&gt;a1  a2\ta3\nb1  b2  b3&lt;/textarea&gt;\n    &lt;div&gt;&lt;/div&gt;\n    &lt;input type=\"button\" onclick=\"convert()\" value=\"convert\"/&gt;\n    &lt;script&gt;\n        function convert(){\n            var xl = $('textarea').val();\n            $('div').html( \n                '&lt;table&gt;&lt;tr&gt;&lt;td&gt;' + \n                xl.replace(/\\n+$/i, '').replace(/\\n/g, '&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;').replace(/\\t/g, '&lt;/td&gt;&lt;td&gt;') + \n                '&lt;/tr&gt;&lt;/table&gt;'\n            )\n        }\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I just found this jQuery Solution</p>\n\n<p><a href=\"http://handsontable.com/\">http://handsontable.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Digging this up, in case anyone comes across it in the future.  I used the above code as intended, but then ran into an issue displaying the table after it had been submitted to a database.  It's much easier once you've stored the data to use PHP to replace the new lines and tabs in your query.  You may perform the replace upon submission, $_POST[request] would be the name of your textarea:</p>\n\n<pre><code>$postrequest = trim($_POST[request]);\n$dirty = array(\"\\n\", \"\\t\");\n$clean = array('&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;', '&lt;/td&gt;&lt;td&gt;');\n$request = str_replace($dirty, $clean, $postrequest);\n</code></pre>\n\n<p>Now just insert $request into your database, and it will be stored as an HTML table.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>On <a href=\"https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIPasteboard_Class/Reference.html#//apple_ref/occ/instm/UIPasteboard/dataForPasteboardType%3a\" rel=\"nofollow\">OSX</a> and <a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms649013%28v=vs.85%29.aspx\" rel=\"nofollow\">Windows</a> , there are multiple types of clipboards for different types of content.  When you copy content in Excel, data is stored in the plaintext and in the html clipboard.  </p>\n\n<p>The right way (that doesn't get tripped up by delimiter issues) is to parse the HTML.  <a href=\"http://jsbin.com/uwuvan/5\" rel=\"nofollow\">http://jsbin.com/uwuvan/5</a> is a simple demo that shows how to get the HTML clipboard.  The key is to bind to the onpaste event and read </p>\n\n<pre><code>event.clipboardData.getData('text/html')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In response to the answer by Tatu I have created a quick jsFiddle for showcasing his solution:</p>\n\n<p><a href=\"http://jsfiddle.net/duwood/sTX7y/\" rel=\"nofollow\">http://jsfiddle.net/duwood/sTX7y/</a></p>\n\n<p>HTML</p>\n\n<pre><code>&lt;p&gt;Paste excel data here:&lt;/p&gt;  \n&lt;textarea name=\"excel_data\" style=\"width:250px;height:150px;\"&gt;&lt;/textarea&gt;&lt;br&gt;\n&lt;input type=\"button\" onclick=\"javascript:generateTable()\" value=\"Genereate Table\"/&gt;\n&lt;br&gt;&lt;br&gt;\n    &lt;p&gt;Table data will appear below&lt;/p&gt;\n&lt;hr&gt;\n&lt;div id=\"excel_table\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>JS</p>\n\n<pre><code>function generateTable() {\n    var data = $('textarea[name=excel_data]').val();\n    console.log(data);\n    var rows = data.split(\"\\n\");\n\n    var table = $('&lt;table /&gt;');\n\n    for(var y in rows) {\n    var cells = rows[y].split(\"\\t\");\n    var row = $('&lt;tr /&gt;');\n    for(var x in cells) {\n        row.append('&lt;td&gt;'+cells[x]+'&lt;/td&gt;');\n    }\n    table.append(row);\n}\n\n// Insert into DOM\n$('#excel_table').html(table);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a standard way or library to copy and paste from a spreasheet to a web form?\nWhen I select more than one cell from Excel I (obviously) lose the delimiter and all is pasted into one cell of the web form.\nDoes it have to be done in VB? or could the processing be done once the paste action is started on the web form?</p>\n",
            "last_activity_date": 1404829150,
            "question_id": 2006468,
            "score": 21,
            "tags": [
                "javascript",
                "html",
                "forms",
                "excel"
            ],
            "title": "Copy/Paste from Excel to a web page"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>every javascript object is a simple hashmap which only accepts string value as its key, so you could write your code as:</p>\n\n<pre><code>var map = {};\n// add a item\nmap[key1] = value1;\n// or remove it\ndelete map[key1];\n// or determine whether a key exists\nkey1 in map;\n</code></pre>\n\n<p>javascript object is a real hashmap on its implementation, so the complexity on search is O(1), but there is no dedicated <code>hashcode()</code> function for javascript strings, it is implemented internally by javascript engine (V8, SpiderMonkey, JScript.dll, etc...)</p>\n\n<p>however, javascript today does not support other datatype except string as its key, ECMAv6 (harmony) would introduce a WeakMap class which accept any object as key, but it would be a long time...</p>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>Here is an easy and convinien way of using something similar to the java map:</p>\n\n<pre><code>var map= {\n    'map_name_1': map_value_1,\n    'map_name_2': map_value_2,\n    'map_name_3': map_value_3,\n    'map_name_4': map_value_4\n    }\n</code></pre>\n\n<p>And to get the value:</p>\n\n<pre><code>alert( map['map_name_1'] );    // fives the value of map_value_1\n\n......  etc  .....\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>JavaScript objects cannot be implemented purely on top of hash maps.</p>\n\n<p>Try this in your browser console:</p>\n\n<pre><code>var foo = {\n    a: true,\n    b: true,\n    z: true,\n    c: true\n}\n\nfor (var i in foo) {\n    console.log(i);\n}\n</code></pre>\n\n<p>...and you'll recieve them back in insertion order, which is <a href=\"http://code.google.com/p/v8/issues/detail?id=164#c1\" rel=\"nofollow\">de facto standard</a> behaviour.</p>\n\n<p>Hash maps inherently do not maintain ordering, so JavaScript implementations may <em>use</em> hash maps somehow, but if they do, it'll require at least a separate index and some extra book-keeping for insertions.</p>\n\n<p>Here's a video of <a href=\"http://channel9.msdn.com/Shows/Going+Deep/Expert-to-Expert-Erik-Meijer-and-Lars-Bak-Inside-V8-A-Javascript-Virtual-Machine\" rel=\"nofollow\">Lars Bak explaining why v8 doesn't use hash maps to implement objects</a>.</p>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I currently work with OpenLayers and have a huge set of data to draw into a vector layer (greater than 100000 vectors).</p>\n\n<p>I'm now trying to put all these vectors into a JavaScript hash map to analyze the performance.  I want to know how is the hash map in JavaScript implemented, is it a real hash function or just a wrapped function that uses a simple data structure and a search algorithm?</p>\n",
            "last_activity_date": 1399376997,
            "question_id": 8877666,
            "score": 18,
            "tags": [
                "javascript",
                "hash",
                "hashmap"
            ],
            "title": "How is a JavaScript hash map implemented?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.jaanuskase.com/stuff/dragSelect.html\">http://www.jaanuskase.com/stuff/dragSelect.html</a></p>\n\n<p>Not sure if you wanted pure-Javascript implementation, I used jQuery for convenience.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here's a working prototype: <a href=\"http://jsfiddle.net/few5E/\">http://jsfiddle.net/few5E/</a> Using jQuery for DOM hooking, but could easily be implemented with another framework.</p>\n\n<p><strong>Update</strong>: <a href=\"http://jsfiddle.net/Brv6J/\">http://jsfiddle.net/Brv6J/</a> a slightly different version - the highlighted state will only change when you release and click again.</p>\n\n<p><strong>Update 2</strong>: <a href=\"http://jsfiddle.net/Brv6J/3/\">http://jsfiddle.net/Brv6J/3/</a> - binding onselectstart so that text is not selected in IE.</p>\n\n<p>A few relevant facts:</p>\n\n<ul>\n<li>The mousedown event of the table cells is hooked to track the actual click. This event is stopped, so that text selection is hindered. Also binding ontextselect for the same effect in IE.</li>\n<li>The mouseover event will toggle the highlighted class for the cell</li>\n<li>The mouseout event is hooked on <code>document</code>. This is to ensure that it always runs. If the mouseup event was hooked on the table cell, it would not trigger if you released the mouse key with the mouse outside of the table. This state is tracked in <code>isMouseDown</code>.</li>\n</ul>\n\n<p>Full source code for reference:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/&gt;\n  &lt;title&gt;&lt;/title&gt;\n  &lt;style type=\"text/css\" media=\"screen\"&gt;\n    table td {\n      width:100px;\n      height:100px;\n      text-align:center;\n      vertical-align:middle;\n      background-color:#ccc;\n    }\n\n    table td.highlighted {\n      background-color:#999;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;table cellpadding=\"0\" cellspacing=\"1\" id=\"our_table\"&gt;\n    &lt;tr&gt;\n      &lt;td&gt;a&lt;/td&gt;\n      &lt;td&gt;b&lt;/td&gt;\n      &lt;td&gt;c&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;d&lt;/td&gt;\n      &lt;td&gt;e&lt;/td&gt;\n      &lt;td&gt;f&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;g&lt;/td&gt;\n      &lt;td&gt;h&lt;/td&gt;\n      &lt;td&gt;i&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/table&gt;\n\n  &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n  &lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n    $(function () {\n      var isMouseDown = false;\n      $(\"#our_table td\")\n        .mousedown(function () {\n          isMouseDown = true;\n          $(this).toggleClass(\"highlighted\");\n          return false; // prevent text selection\n        })\n        .mouseover(function () {\n          if (isMouseDown) {\n            $(this).toggleClass(\"highlighted\");\n          }\n        })\n        .bind(\"selectstart\", function () {\n          return false; // prevent text selection in IE\n        });\n\n      $(document)\n        .mouseup(function () {\n          isMouseDown = false;\n        });\n    });\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 34
                }
            ],
            "body": "<p>I was looking at <a href=\"http://stackoverflow.com/questions/746082/how-to-find-list-of-possible-words-from-a-letter-matrix-boggle-solver\">this question</a> and saw the reference to the iPhone game where you drag across the screen selecting letters as you go.</p>\n\n<p>I was curious to see an implimentation of this in Javascript using tables. So you'd drag the mouse over each cell they would then become highlighted.</p>\n\n<p>I'm not sure what the best method would be but I hope someone has a go. Someone attempted it <a href=\"http://grover.open2space.com/sites/default/files/articles/dom/test.htm\">here</a>, but it doesn't really work.</p>\n\n<p><img src=\"http://i.imgur.com/UIMwD.png\" alt=\"alt text\"> <img src=\"http://imgur.com/ZfFVu.png\" alt=\"alt text\"></p>\n\n<p><em>Thank <a href=\"https://cacoo.com/\">Cacoo</a> for the sexy diagrams. It's like an online visio, really nice. Check it out ;)</em></p>\n",
            "last_activity_date": 1415705899,
            "question_id": 2013902,
            "score": 17,
            "tags": [
                "javascript"
            ],
            "title": "Select Cells On A Table By Dragging"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You are more likely to have success in Java than in PHP.  There is a pre-existing Javascript interpreter for Java called <a href=\"http://www.mozilla.org/rhino/\" rel=\"nofollow\"><strong>Rhino</strong></a>.  It's a reference implementation, and well-documented.</p>\n\n<p>Rhino is used in lots of existing Java apps to provide Javascript scripting ability within the app.  I have also heard of it used to assist with performing automated tests in Javascript.</p>\n\n<p>I also know that Java includes code that can parse and render HTML, though someone who knows more about Java than me can probably advise more on that.  I am not denying it would be very difficult to achieve something like this; you'd essentially be re-implementing a lot of what a browser does.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've been using <a href=\"http://htmlunit.sourceforge.net/\">HtmlUnit</a> (Java). This was originally designed for unit testing pages. It's not perfect javascript, but it hasn't failed me in my limited usage. According to the site, it can run the following JS frameworks to a reasonable degree:</p>\n\n<ul>\n<li>jQuery 1.2.6</li>\n<li>MochiKit 1.4.1</li>\n<li>GWT 2.0.0</li>\n<li>Sarissa 0.9.9.3</li>\n<li>MooTools 1.2.1</li>\n<li>Prototype 1.6.0</li>\n<li>Ext JS 2.2</li>\n<li>Dojo 1.0.2</li>\n<li>YUI 2.3.0</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You could use Mozilla's rendering engine Gecko:</p>\n\n<p><a href=\"https://developer.mozilla.org/en/Gecko\" rel=\"nofollow\">https://developer.mozilla.org/en/Gecko</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Ruby's <a href=\"https://github.com/jnicklas/capybara\" rel=\"nofollow\">Capybara</a> is an integration test library, but it can also be used to write stand-alone web-crawlers. Given that it uses backends like Selenium or headless WebKit, it interprets javascript out-of-the-box:</p>\n\n<pre><code>require 'capybara/dsl'\nrequire 'capybara-webkit'\n\ninclude Capybara::DSL\nCapybara.current_driver = :webkit\nCapybara.app_host = \"http://www.google.com\"\npage.visit(\"/\")\nputs(page.html)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Give a look here: <a href=\"http://snippets.scrapy.org/snippets/22/\" rel=\"nofollow\">http://snippets.scrapy.org/snippets/22/</a>\nit's a python screen scraping and web crawling framework used with webdrivers that open a page, render all the things you need and gives you the possibilities to \"capture\" anything you want in the page via </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to write a web crawler that can interpret JavaScript. Basically its a program in Java or PHP that takes a URL as input and outputs the DOM tree which is similar to the output in Firebug HTML window. The best example is Kayak.com where you can not see the resulting DOM displayed on the browser when you 'view source' but can save the resulting HTML though firebug. </p>\n\n<p>How would I go about doing this?  What tools exist that would help me?</p>\n",
            "last_activity_date": 1412064793,
            "question_id": 2670082,
            "score": 16,
            "tags": [
                "javascript",
                "web-crawler"
            ],
            "title": "Web crawler that can interpret javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<ul>\n<li><a href=\"http://www.phpied.com/3-ways-to-define-a-javascript-class/\">3 ways to define a JavaScript class</a></li>\n<li><a href=\"http://www.xml.com/pub/a/2006/06/07/object-oriented-javascript.html\">Object-oriented JavaScript</a></li>\n<li><a href=\"http://www.webdevelopersjournal.com/articles/jsintro3/js_begin3.html\">JavaScript Tutorial: Functions and Classes</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>For example, in <a href=\"http://mckoss.com/jscript/object.htm\" rel=\"nofollow\">http://mckoss.com/jscript/object.htm</a>.</p>\n\n<p>You'll find a bunch of examples when googling for \"JavaScript object-oriented\". By taking a look at popular JavaScript frameworks like <a href=\"http://en.wikipedia.org/wiki/Ext_JS\" rel=\"nofollow\">Ext&nbsp;JS</a> you'll get a feeling for these concepts and how they're applied in practice.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>mepcotterell provides good links, but I'd like to add that I personally prefer to see namespaces as objects i.e. <code>DoctaJonez.Namespace1 = {};</code>.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For general understanding of OOP in JavaScript you can't do better than read <a href=\"http://javascript.crockford.com/\" rel=\"nofollow\">Douglas Crockford</a>:</p>\n\n<ul>\n<li><a href=\"http://javascript.crockford.com/inheritance.html\" rel=\"nofollow\">Classical Inheritance in JavaScript</a></li>\n<li><a href=\"http://javascript.crockford.com/prototypal.html\" rel=\"nofollow\">Prototypal Inheritance in JavaScript</a></li>\n<li><a href=\"http://javascript.crockford.com/private.html\" rel=\"nofollow\">Private Members in JavaScript</a></li>\n</ul>\n\n<p>For Dojo fans (and for general techniques) <a href=\"http://someclosure.com/\" rel=\"nofollow\">Neil Roberts</a> has good articles:</p>\n\n<ul>\n<li><a href=\"http://dojocampus.org/content/2008/03/20/color-by-numbers-dojodelegate/\" rel=\"nofollow\">Color by numbers: dojo.delegate</a></li>\n<li><a href=\"http://www.sitepen.com/blog/2008/03/18/javascript-metaclass-programming/\" rel=\"nofollow\">JavaScript Metaclass Programming</a></li>\n</ul>\n\n<p>Plain vanilla <a href=\"http://docs.dojocampus.org/dojo/declare\" rel=\"nofollow\">dojo.declare()</a> is probably the most advanced OOP foundation in mainstream libraries around. I am biased, but don't take my word for it. Here are examples on how to use it.</p>\n\n<p>A plain vanilla object:</p>\n\n<pre><code>// Let's define a super simple class (doesn't inherit anything).\ndojo.declare(\"Person\", null, {\n  // Class-level property\n  answer: 42,\n\n  // Class-level object property\n  name: {first: \"Ford\", last: \"Prefect\"},\n\n  // The constructor, duh!\n  constructor: function(age){\n    this.age = age; // instance-level property\n  },\n\n  // A method\n  saySomething: function(verb){\n    console.log(\"I \" + verb + \" \" +\n      this.name.first + \" \" + this.name.last + \"!\" +\n      \" -- \" + this.answer);\n  },\n\n  // Another method\n  passportControl: function(){\n    console.log(\"I am \" + this.age);\n  }\n});\n</code></pre>\n\n<p>Example of use:</p>\n\n<pre><code>// A fan of Ford Perfect\nvar fan = new Person(18);\nfan.saySomething(\"love\"); // I love Ford Perfect! -- 42\nfan.passportControl();    // I am 18\n</code></pre>\n\n<p>Single inheritance is easy:</p>\n\n<pre><code>// Let's create a derived class inheriting Person\ndojo.declare(\"SuperAgent\", Person, {\n  // Redefine class-level property\n  answer: \"shaken, not stirred\",\n\n  // Redefine class-level object property\n  name: {first: \"James\", last: \"Bond\"},\n\n  // The constructor\n  constructor: function(age, drink){\n    // We don't need to call the super class because\n    // it would be done automatically for us passing\n    // all arguments to it.\n\n    // At this point \"age\" is already assigned.\n\n    this.drink = drink; // Instance-level property\n  },\n\n  // Let's redefine the method\n  saySomething: function(verb){\n    // Let's call the super class first\n    this.inherited(arguments);\n    // Pay attention: no need for extra parameters, or any extra code,\n    // we don't even name the class we call --- it is all automatic.\n    // We can call it any time in the body of redefined method\n\n    console.log(\"Yeah, baby!\");\n  },\n\n  shoot: function(){ console.log(\"BAM!!!\"); }\n});\n</code></pre>\n\n<p>Example of use:</p>\n\n<pre><code>// Let's create a James Bond-wannabe\nvar jb007 = new SuperAgent(45, \"Martini\");\njb007.saySomething(\"dig\");  // I dig James Bond! -- shaken, not stirred\n                            // Yeah, baby!\njb007.passportControl();    // I am 45\njb007.shoot();              // BAM!!!\n\n// Constructors were called in this order: Person, SuperAgent\n// saySomething() came from SuperAgent, which called Person\n// passportControl() came from Person\n// shoot() came from SuperAgent.\n</code></pre>\n\n<p>Mixins:</p>\n\n<pre><code>// Let's define one more super simple class\ndojo.define(\"SharpShooter\", null, {\n  // For simplicity no constructor\n\n  // One method to clash with SuperAgent\n  shoot: function(){\n    console.log(\"It's jammed! Shoot!\");\n  }\n});\n</code></pre>\n\n<p>Mixin-based multiple inheritance:</p>\n\n<pre><code>// Multiple inheritance\ndojo.declare(\"FakeAgent\", [\"SuperAgent\", \"SharpShooter\"], {\n  // Let's do it with no constructor\n\n  // Redefine the method\n  saySomething: function(verb){\n    // We don't call super here --- a complete redefinition\n\n    console.log(\"What is \" + verb \"? I want my \" + this.drink + \"!\");\n  },\n});\n</code></pre>\n\n<p>Example of use:</p>\n\n<pre><code>// A fake agent coming up\nvar ap = new FakeAgent(40, \"Kool-Aid\");\nap.saySomething(\"hate\"); // What is hate? I want my Kool-Aid!\nap.passportControl();    // I am 40\nap.shoot();              // It's jammed! Shoot!\n\n// Constructors were called in this order: Person, SuperAgent\n// saySomething() came from FakeAgent\n// passportControl() came from Person\n// shoot() came from SharpShooter.\n</code></pre>\n\n<p>As you can see, <code>dojo.declare()</code> gives all necessities with a simple to use API: straight single inheritance, mixin-based multiple inheritance, automatic chaining of constructors, and no-hassle super methods.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>See the <a href=\"http://en.wikipedia.org/wiki/Mozilla_Developer_Network\" rel=\"nofollow\">Mozilla Developer Network</a> (MDC) article <em><a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Class-Based_vs._Prototype-Based_Languages\" rel=\"nofollow\">Class-Based vs. Prototype-Based Languages</a></em>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Using <a href=\"http://en.wikipedia.org/wiki/MooTools\" rel=\"nofollow\">MooTools</a>. See the article <em><a href=\"http://www.mootorial.com/wiki/mootorial/09-howtowriteamootoolsclass\" rel=\"nofollow\">How to write a Mootools Class</a></em>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you (and your team) is used to Java but need to make some JavaScript for a web site, perhaps you should consider <a href=\"http://en.wikipedia.org/wiki/Google_Web_Toolkit\" rel=\"nofollow\">Google&nbsp;Web&nbsp;Toolkit</a> (GWT). It lets you code JavaScript using Java, which is converted to JavaScript. I haven't tried it, though. </p>\n\n<p>JavaScript is actually a quite cool language. It has a few flaws (including allowing you to do very stupid stuff), but with a little self dicipline you can make great stuff. JavaScript is actually <em>object</em>-oriented, not so much <em>class</em>-oriented, but you can do much of the same stuff. You don't have (AFAIK) inheritance, but it's not strict at all (one of its powerful but also dangerous features) with typing so you'll find it's not limiting.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I emulate classes (and namespaces) in JavaScript?</p>\n\n<p>I need to create a JavaScript library and have limited experience with the language. I always thought that it had native support for classes, but it is less related to Java than I had assumed. It seems that everything in JavaScript is actually a function.</p>\n\n<p>What I have found out so far makes a lot of sense with it being a dynamic weakly typed language, but this makes it a bit of a departure for people who are used to having a strongly typed language and using a compiler to spot our errors :)</p>\n\n<p>I mainly work in C# and Java, and was hoping for something syntacticaly similar so the library would look familiar for our other C# developers that will have to maintain it.</p>\n\n<p>I have the following sort of code which works, but I was wondering what other developer's takes would be on this. What are the alternatives? Is there a way that is better? Is there a way that is more readable?</p>\n\n<p>I understand that what I want is something similar to C# or Java when I should just accept the fact that this <strong>is JavaScript</strong>, but my aim is to try to ease the learning curve for other developers by making it more familiar and intuitive for them.</p>\n\n<pre><code>//Perform the namespace setup (this will actually be done with checking \n//in real life so we don't overwrite definitions, but this is kept short \n//for the code sample).\nvar DoctaJonez = new function();\nDoctaJonez.Namespace1 = new function();\n\n/**\n * Class description.\n */\nDoctaJonez.Namespace1.SomeClass = function()\n{\n    /**\n     * Public functions listed at the top to act like a \"header\".\n     */\n    this.publicFunction = privateFunction;\n\n    /**\n     * Private variables next.\n     */\n    var privateVariable;\n\n    /**\n     * Finally private functions.\n     */\n    function privateFunction()\n    {\n\n    }\n}\n\n//Create an instance of the class\nvar myClass = new DoctaJonez.SomeClass();\n\n//Do some stuff with the instance\nmyClass.publicFunction();\n</code></pre>\n",
            "last_activity_date": 1375766067,
            "question_id": 355848,
            "score": 14,
            "tags": [
                "javascript",
                "oop"
            ],
            "title": "How can I emulate &quot;classes&quot; in JavaScript? (with or without a third-party library)"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>My understanding of the question is that there are different aspects to be solved:</p>\n\n<ol>\n<li>How to prepare the image for interaction</li>\n<li>How to embed the image in the page</li>\n<li>How to use CSS with SVG</li>\n<li>How to use JavaScript for interaction</li>\n</ol>\n\n<p><strong>Preparing the image</strong></p>\n\n<p>First of all, I'd recommend to clean up the image. Inkscape leaves all kind of stuff there that you don't need, which includes elements and attributes in the <code>sodipodi:</code> and <code>inkscape:</code> namespaces as well as repetitive and/or redundant style attributes. You don't <em>have</em> to remove that, but it saves you some bandwidth/loading time, and if you want to work with CSS matching, than the style attributes are in your way.</p>\n\n<p>In your example file, you have 472 times the same style attribute. Remove all of them and create an equivalent CSS rule once.</p>\n\n<p>You might also add some info about the municipalities to the markup. You could e.g. change the IDs of each path representing a municipality according to its name. You could also use a <code>data-*</code> attribute for this purpose. The latter has the advantage that you can use spaces. See below for how this is useful for interaction, especially with CSS.</p>\n\n<p><strong>Embedding the image</strong></p>\n\n<p>I'd recommend using the SVG inline, especially if you want to interact with CSS/JavaScript. This means, you just add the SVG markup to your HTML, or you load and insert it using Ajax. The latter has the benefit that the surrounding page loads faster and feels more responsive.</p>\n\n<p>An example of an inline SVG element:</p>\n\n<pre><code>&lt;div id=\"svgContainer\"&gt;\n  &lt;!-- This is an HTML div, and inside goes the SVG --&gt;\n  &lt;svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100px\" heihgt=\"100px\"&gt;\n    &lt;circle r=\"50\" cx=\"50\" cy=\"50\" fill=\"green\"/&gt;\n  &lt;/svg&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>A simplified example of how to load SVG using Ajax:</p>\n\n<pre><code>xhr = new XMLHttpRequest();\nxhr.open(\"GET\",\"my.svg\",false);\n// Following line is just to be on the safe side;\n// not needed if your server delivers SVG with correct MIME type\nxhr.overrideMimeType(\"image/svg+xml\");\nxhr.send(\"\");\ndocument.getElementById(\"svgContainer\")\n  .appendChild(xhr.responseXML.documentElement);\n</code></pre>\n\n<p><strong>How to use CSS</strong></p>\n\n<p>SVG can be styled just like HTML. Of course, SVG has it's own set of properties, like <code>fill-opacity</code> or <code>stroke-dasharray</code> and does not support a lot of HTML's properties, like <code>margin</code>, <code>position</code> or the like. But the selector mechanisms are 100% the same.</p>\n\n<p>You can mix the CSS for your inline SVG with the CSS for your HTML, either inside a <code>&lt;style&gt;</code> element or an external CSS file. You can also use the <code>&lt;style&gt;</code> element inside the SVG code and <code>style</code> attributes.</p>\n\n<p>Assuming you gave your SVG elements meaningful IDs or <code>data-*</code> attributes, two ways of highlighting municipalities using CSS would be:</p>\n\n<pre><code>#Bronckhorst, #Laarbeek {fill:red}\n</code></pre>\n\n<p>or</p>\n\n<pre><code>*[data-gemeente=Bronckhorst], *[data-gemeente=Laarbeek] {fill:red}\n</code></pre>\n\n<p>Or, of course, you can change the style attributes of the respective elements. Properties are also supported as attribute, i.e. <code>style=\"stroke-width:2\"</code> can also be specified like <code>stroke-width=\"2\"</code>. If the same property is set using both an attribute and CSS (either using the style attribute, a style element or an external stylesheet), the CSS overrides the attribute.</p>\n\n<p><strong>JavaScript interaction</strong></p>\n\n<p>There is basically no difference between HTML and SVG regarding JavaScript interaction, at least as long as you use plain vanilla DOM. This means, HTML specific features like <code>innerHTML</code> are not supported in SVG (i.e. there is no <code>innerSVG</code>). But SVG has its own graphics specific set of DOM methods (<a href=\"http://www.w3.org/TR/SVG/svgdom.html\">see the W3C specs</a>).</p>\n\n<p>One thing to be aware of is the work with namespaces. All SVG elements should be in the SVG namespace, and when creating them using JavaScript, <code>createElementNS()</code> has to be used instead of <code>createElement()</code>:</p>\n\n<pre><code>var use = document.createElementNS(\"http://www.w3.org/2000/svg\",\"use\")\n</code></pre>\n\n<p>Likewise, attributes in the XLink namespace (namely <code>xlink:href</code>) have to be manipulated using <code>setAttributeNS()</code> instead of <code>setAttribute()</code>:</p>\n\n<pre><code>use.setAttributeNS(\"http://www.w3.org/1999/xlink\",\"href\",\"#foo\")\n</code></pre>\n\n<p>As libraries like jQuery partly rely on HTML specific features, it's safer to avoid them when manipulating SVG. There are also SVG specific libraries like <a href=\"http://raphaeljs.com/\">Rapha\u00ebl</a> and <a href=\"http://d3js.org/\">D3.js</a> which can be useful for specific purposes and are worth a look. Rapha\u00ebl is especially useful for being compatible with pre-HTML5 Internet Explorer versions 6 to 8, which don't have SVG support. However, as I understand it, it's really only suited for generating graphics entirely using JavaScript rather than working with existing graphics because it's an abstraction layer above SVG. D3.js would be more suited for applications like yours if you're not happy with plain DOM (and, honestly, I'm doing it injustice when simply calling it an SVG specific library, because it's more).</p>\n\n<p>You can use <code>onclick</code> and similar attributes and standard DOM <code>addEventListener()</code>. A very simple example of using JavaScript events would be to add an event listener to the <code>&lt;svg&gt;</code> element that reports the name of a municipality that a user clicked on:</p>\n\n<pre><code>document.getElementsByTagName(\"svg\")[0]\n  .addEventListener(\"click\",function(evt){\n    alert(evt.target.getAttribute(\"data-gemeente\"))\n  },\n  false)\n</code></pre>\n\n<p><strong>Side note: Toopltips</strong>\nThe same effect that you get using the <code>title</code> attribute in HTML can be achieved using the <code>&lt;title&gt;</code> element in SVG. Just put a <code>&lt;title&gt;</code> element inside an SVG element and on hover, you see a tooltip with the content of the <code>&lt;title&gt;</code> element.</p>\n\n<pre><code>&lt;svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100px\" height=\"100px\"&gt;\n  &lt;rect width=\"100\" height=\"100\"&gt;\n    &lt;title&gt;test&lt;/title&gt;\n  &lt;/rect&gt;\n&lt;/svg&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>Just for the record (knowing this comes a year late) I've found SnapSVG great for SVG manipulation. Same guy who was behind Rapha\u00ebl:</p>\n\n<p><a href=\"http://snapsvg.io\">http://snapsvg.io</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have a SVG image, showing geographical regions. \n<a href=\"http://upload.wikimedia.org/wikipedia/commons/7/71/Nederland_gemeenten_2009.svg\">http://upload.wikimedia.org/wikipedia/commons/7/71/Nederland_gemeenten_2009.svg</a></p>\n\n<p>I want to display the SVG image on a webpage, and using a combination of JavaScript and CSS to interact with the image. (ie, detect clicks on a region, setting a different background color for a region). </p>\n\n<p>I know this question is asked several times on StackOverflow, but I cannot find a complete code sample to work on further. Any recommendations on JavaScript packages, like jQuery, or plug-ins are welcome. </p>\n",
            "last_activity_date": 1395647247,
            "question_id": 14068031,
            "score": 13,
            "tags": [
                "javascript",
                "html",
                "svg"
            ],
            "title": "Embedding external SVG in HTML for JavaScript manipulation"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Ok.  So I got bored tonight and decided to give implementing dual contouring myself a shot.  Like I said in the comments, all the relevant material is in section 2 of the following paper:</p>\n\n<p><a href=\"http://www.frankpetterson.com/publications/dualcontour/dualcontour.pdf\">http://www.frankpetterson.com/publications/dualcontour/dualcontour.pdf</a></p>\n\n<p>In particular, the topology of the mesh is described in part 2.2 in the following section, quote:</p>\n\n<blockquote>\n  <ol>\n  <li><p>For each cube that exhibits a sign change, generate a vertex positioned at the minimizer of the quadratic function of equation 1.</p></li>\n  <li><p>For each edge that exhibits a sign change, generate a quad connecting the minimizing vertices of the four cubes containing the edge.</p></li>\n  </ol>\n</blockquote>\n\n<p>That's all there is to it!  You solve a linear least squares problem to get a vertex for each cube, then you connect adjacent vertices with quads.  So using this basic idea, I wrote a dual contouring isosurface extractor in python using numpy (partly just to satisfy my own morbid curiosity on how it worked).  Here is the code:</p>\n\n<pre><code>import numpy as np\nimport numpy.linalg as la\nimport scipy.optimize as opt\nimport itertools as it\n\n#Cardinal directions\ndirs = [ [1,0,0], [0,1,0], [0,0,1] ]\n\n#Vertices of cube\ncube_verts = [ np.array([x, y, z])\n    for x in range(2)\n    for y in range(2)\n    for z in range(2) ]\n\n#Edges of cube\ncube_edges = [ \n    [ k for (k,v) in enumerate(cube_verts) if v[i] == a and v[j] == b ]\n    for a in range(2)\n    for b in range(2)\n    for i in range(3) \n    for j in range(3) if i != j ]\n\n#Use non-linear root finding to compute intersection point\ndef estimate_hermite(f, df, v0, v1):\n    t0 = opt.brentq(lambda t : f((1.-t)*v0 + t*v1), 0, 1)\n    x0 = (1.-t0)*v0 + t0*v1\n    return (x0, df(x0))\n\n#Input:\n# f = implicit function\n# df = gradient of f\n# nc = resolution\ndef dual_contour(f, df, nc):\n\n    #Compute vertices\n    dc_verts = []\n    vindex   = {}\n    for x,y,z in it.product(range(nc), range(nc), range(nc)):\n        o = np.array([x,y,z])\n\n        #Get signs for cube\n        cube_signs = [ f(o+v)&gt;0 for v in cube_verts ]\n\n        if all(cube_signs) or not any(cube_signs):\n            continue\n\n        #Estimate hermite data\n        h_data = [ estimate_hermite(f, df, o+cube_verts[e[0]], o+cube_verts[e[1]]) \n            for e in cube_edges if cube_signs[e[0]] != cube_signs[e[1]] ]\n\n        #Solve qef to get vertex\n        A = [ n for p,n in h_data ]\n        b = [ np.dot(p,n) for p,n in h_data ]\n        v, residue, rank, s = la.lstsq(A, b)\n\n        #Throw out failed solutions\n        if la.norm(v-o) &gt; 2:\n            continue\n\n        #Emit one vertex per every cube that crosses\n        vindex[ tuple(o) ] = len(dc_verts)\n        dc_verts.append(v)\n\n    #Construct faces\n    dc_faces = []\n    for x,y,z in it.product(range(nc), range(nc), range(nc)):\n        if not (x,y,z) in vindex:\n            continue\n\n        #Emit one face per each edge that crosses\n        o = np.array([x,y,z])   \n        for i in range(3):\n            for j in range(i):\n                if tuple(o + dirs[i]) in vindex and tuple(o + dirs[j]) in vindex and tuple(o + dirs[i] + dirs[j]) in vindex:\n                    dc_faces.append( [vindex[tuple(o)], vindex[tuple(o+dirs[i])], vindex[tuple(o+dirs[j])]] )\n                    dc_faces.append( [vindex[tuple(o+dirs[i]+dirs[j])], vindex[tuple(o+dirs[j])], vindex[tuple(o+dirs[i])]] )\n\n    return dc_verts, dc_faces\n</code></pre>\n\n<p>It is not very fast because it uses the SciPy's generic non-linear root finding methods to find the edge points on the isosurface.  However, it does seem to work reasonably well and in a fairly generic way.  To test it, I ran it using the following test case (in the Mayavi2 visualization toolkit):</p>\n\n<pre><code>import enthought.mayavi.mlab as mlab\n\ncenter = np.array([16,16,16])\nradius = 10\n\ndef test_f(x):\n    d = x-center\n    return np.dot(d,d) - radius**2\n\ndef test_df(x):\n    d = x-center\n    return d / sqrt(np.dot(d,d))\n\nverts, tris = dual_contour(f, df, n)\n\nmlab.triangular_mesh( \n            [ v[0] for v in verts ],\n            [ v[1] for v in verts ],\n            [ v[2] for v in verts ],\n            tris)\n</code></pre>\n\n<p>This defines a sphere as an implicit equation, and solves for the 0-isosurface by dual contouring.  When I ran it in the toolkit, this was the result:</p>\n\n<p><img src=\"http://i.stack.imgur.com/41J0M.png\" alt=\"enter image description here\"></p>\n\n<p>In conclusion, it appears to be working.</p>\n",
                    "is_accepted": true,
                    "score": 37
                }
            ],
            "body": "<p>I've been searching on google, but cannot find anything basic. In it's most basic form, how is dual contouring (for a voxel terrain) implememted? I know what it does, and why, but cannot understand how to do it. JS or C# (preferably) is good.Has anyone used Dual contouring before and can explain it briefly?</p>\n",
            "last_activity_date": 1345526342,
            "question_id": 6485908,
            "score": 13,
            "tags": [
                "c#",
                "javascript",
                "scripting",
                "terrain",
                "voxel"
            ],
            "title": "Basic Dual Contouring Theory"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Add a second <code>});</code>.</p>\n\n<p>When properly indented, your code reads</p>\n\n<pre><code>$(function() {\n    $(\"#mewlyDiagnosed\").hover(function() {\n        $(\"#mewlyDiagnosed\").animate({'height': '237px', 'top': \"-75px\"});\n    }, function() {\n        $(\"#mewlyDiagnosed\").animate({'height': '162px', 'top': \"0px\"});\n    });\nMISSING!\n</code></pre>\n\n<p>You never closed the outer <code>$(function() {</code>.</p>\n",
                    "is_accepted": true,
                    "score": 215
                },
                {
                    "body": "<p>formatting your code a bit, you have only closed the inner hover function.  You have not closed the outer parts, marked below....</p>\n\n<pre><code>$(// missing closing)\n function() { // missing closing }\n     $(\"#mewlyDiagnosed\").hover(\n        function() {\n            $(\"#mewlyDiagnosed\").animate({'height': '237px', 'top': \"-75px\"});\n        }, \n        function() {\n            $(\"#mewlyDiagnosed\").animate({'height': '162px', 'top': \"0px\"});\n        });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>In my case, it ended up being a <strong>simple double quote</strong> issue in my <strong>bookmarklet</strong>, remember only use single quotes on bookmarklets. Just in case this helps someone. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://jsbeautifier.org/\">http://jsbeautifier.org/</a> is helpful to indent your minified JS code.</p>\n\n<p>Also with <strong>Google Chrome</strong> you can use \"pretty print\". See the example screenshot below showing jquery.min.js from stackoverflow nicely indented right from my browser :)</p>\n\n<p><img src=\"http://i.stack.imgur.com/2906e.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>In my case, I was trying to parse an empty JSON:</p>\n\n<pre><code>JSON.parse(stringifiedJSON);\n</code></pre>\n\n<p>In other words, what happened was the following:</p>\n\n<pre><code>JSON.parse(\"\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I got this error when i was trying to write a javascript bookmarklet. I couldn't figure out what was causing it. But eventually I tried URL encoding the bookmarklet, via the following website: <a href=\"http://mrcoles.com/bookmarklet/\" rel=\"nofollow\">http://mrcoles.com/bookmarklet/</a> and then the error went away, so it must have been a problem with certain characters in the javascript code being interpreted as special URL control characters.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have some JavaScript code that works in FireFox but not in Chrome or IE. In the Chrome JS Console I get the follow error: \"Uncaught SyntaxError: Unexpected end of input\".</p>\n\n<p>The JavaScript code I am using is:</p>\n\n<pre><code>&lt;script&gt;\n $(function() {\n $(\"#mewlyDiagnosed\").hover(function() {\n    $(\"#mewlyDiagnosed\").animate({'height': '237px', 'top': \"-75px\"});\n }, function() {\n    $(\"#mewlyDiagnosed\").animate({'height': '162px', 'top': \"0px\"});\n });\n&lt;/script&gt;\n</code></pre>\n\n<p>It says the error is on the last line which is });</p>\n",
            "last_activity_date": 1414430452,
            "question_id": 3983088,
            "score": 84,
            "tags": [
                "javascript",
                "jquery",
                "syntax",
                "syntax-error",
                "indentation"
            ],
            "title": "JavaScript error (Uncaught SyntaxError: Unexpected end of input)"
        },
        {
            "answer_count": 17,
            "answers": [
                {
                    "body": "<p>In terms of client side Javascript is the only way to manipulate the DOM. In terms of server side there are a multitude of ways.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The problem with javascript is not the language itself - it's a perfectly good prototyped and dynamic language. If you come from an OO background there's a bit of a learning curve, but it's not the language's fault.</p>\n\n<p>Most people assume that Javascript is like Java because it has similar syntax and a similar name, but actually it's a lot more like lisp. It's actually pretty well suited to DOM manipulation.</p>\n\n<p>The real problem is that it's compiled by the browser, and that means it works in a very different way depending on the client.</p>\n\n<p>Not only is the actual DOM different depending on the browser, but there's a massive difference in performance and layout.</p>\n\n<p><hr /></p>\n\n<p><em>Edit following clarification in question</em></p>\n\n<p>Suppose multiple interpreted languages were supported - you still have the same problems. The various browsers would still be buggy and have different DOMs.</p>\n\n<p>In addition you would have to have an interpreter built into the browser or somehow installed as a plug in (that you could check for before you served up the page) for each language. It took ages to get Javascript consistent.</p>\n\n<p>You can't use compiled languages in the same way - then you're introducing an executable that can't easily be scrutinised for what it does. Lots of users would choose not to let it run.</p>\n\n<p>OK, so what about some sort of sandbox for the compiled code? Sounds like Java Applets to me. Or ActionScript in Flash. Or C# in Silverlight.</p>\n\n<p>What about some kind of IL standard? That has more potential. Develop in whatever language you want and then compile it to IL, which the browser then JITs.</p>\n\n<p>Except, Javascript is kind of already that IL - just look at <a href=\"http://code.google.com/webtoolkit/\">GWT</a>. It lets you write programs in Java, but distribute them as HTML and JS.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>It is true that Javascript was at one point notoriously hard to deal with but the web development community has come a long way since. Instead, I would encourage you to have a look at <a href=\"http://www.jquery.com/\">jQuery</a>. It's easy and abstracts away all the various problems.</p>\n\n<p>And there really are no alternatives that work across the board. Flash comes to mind but that too is ECMA script and it's probably over kill for most things.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>No. JavaScript is it, but it will evolve. The next version is \"JavaScript Harmony,\" and you can learn more if you Google that.</p>\n\n<p>Now and then someone suggests putting a byte code interpreter into the browsers alongside JavaScript. Probably won't happen, at least for awhile.</p>\n\n<p>I happen to love JavaScript. But there are other solutions, including GWT, which compiles Java to JavaScript and Script#, which compiles C# to JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Internet Explorer supports pluggable scripting languages, although the only one reliably included with IE besides JScript is VBScript.</p>\n\n<p>As far as I have seen, there seems to be a general sort of bias toward dynamic languages in the browser, and JavaScript seems to fill this need adequately enough that network effects make any other language a non-starter.  The language is actually quite powerful, though its implementation in browsers leaves much to be desired.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you're thinking that JavaScript has deep issues, I recommend Doug Crockford's book, <a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\" rel=\"nofollow\">JavaScript: The Good Parts</a>. (Or Google for \"Crockford JavaScript\" to find several video presentations he's done.) Crockford sketches out a safe subset and set of practices, and specifically lists some parts of the language to avoid.</p>\n\n<p>I'm unaware of plans to replace JavaScript as the <em>de facto</em> means of manipulating the DOM. So best learn to use it safely and well.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Short term, I'd use things like jQuery to hide the browser incompatibilities. Long term, technologies like Silverlight or Adobe AIR may make this a very different minefield (but still a minefield) in the future.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I don't think Javascript will be replaced any time soon. For a completely different approach to rich clients, you might want to investigate Flex, which is a Flash-based technology.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Doug Crockford <a href=\"http://www.youtube.com/watch?v=hQVTIJBZook\">gave a talk to Google</a> detailing the bad and good parts of JavaScript and its future. It actually hasn't changed much at all since 1999--which can be said to be a good thing (pretty much all browsers can run the same code as long as you're aware of their limitations) and Doug shows where the good parts were mostly misunderstandings that turn out to be very powerful.</p>\n\n<p>For DOM manipuluation, look at JQuery as a client-side library that replaces most of the awful DOM API with operations that are a pain to write to pretty elegant bits of code that are easier to write.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Maybe something like haxe (see haxe.org) could help you. It is a language which seems cleaner than JavaScript and can be compiled down to JavaScript, so it can be run inside a browser.</p>\n\n<p>I know that this is not a direct answer to your question, but I thought it might be interesting for you, nevertheless.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Jquery (still javascript but) it will really help you they have support for almost all the browsers and it isn't really that hard to learn :)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you're willing to restrict your customers/visitors to specific browsers, and possibly willing to require them to install a plug-in, you could look at <a href=\"http://silverlight.net/\" rel=\"nofollow\">MS Silverlight</a> -- a readable overview is on <a href=\"http://en.wikipedia.org/wiki/Silverlight\" rel=\"nofollow\">wikipedia</a>. With Silverlight 2, you can run, client-side, code you've written in C#, IronPython, IronRuby, VB.NET, etc; the free <a href=\"http://www.mono-project.com/Moonlight\" rel=\"nofollow\">Moonlight</a> clone of Silverlight, from the Mono project, promises to bring the same functionality to Linux.</p>\n\n<p>In practice, most developers of web apps and sites prefer to reach wider audiences than Silverlight (and eventually Moonlight) can currently deliver -- which means sticking with Javascript, or possibly Flash (which uses a similar programming language, Actionscript).</p>\n\n<p>So, gaining substantial mindshare, adoption and traction for anything else is proving to be an uphill fight even for Microsoft with its large groups of engineers and marketing budgets <strong>and</strong> a free-software project on the side (to possibly ease worries about proprietary lock-in) -- which may help explain why there's very little interest, e.g. on the part of the Mozilla Foundation, in pushing towards such a goal. \"Apart from interoperability\", you say: but clearly the issue of interoperability is THE biggie here, given what we observe wrt Silverlight's progress...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As already said, you have Flash (ActionScript, which is a derived language from Javascript) and Silverlight/Moonlight (IronPython, IronRuby, JScript, VBScript, C#) that can run in the browser via plugins (the first one being much more ubiquitous).</p>\n\n<p>There is also another alternative if you like Ruby: <a href=\"http://hotruby.yukoba.jp/\" rel=\"nofollow\">HotRuby</a>, it's a ruby implementation in javascript that will run in the browser. It is not very mature yet, but you can have a look at it.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>One thing I haven't seen mentioned (oh, I see Alcides mentioned HotRuby while I was writing and Nosredna mentioned GWT and Script#) and would like to throw out there is there are a number of implementations of [insert language]-on-JavaScript (eg. translators that allow you to convert <a href=\"http://hotruby.yukoba.jp/\" rel=\"nofollow\">Ruby</a>, <a href=\"http://pyjs.org/\" rel=\"nofollow\">Python</a>, <a href=\"http://jsc.sourceforge.net/\" rel=\"nofollow\">C#</a>, <a href=\"http://code.google.com/webtoolkit/\" rel=\"nofollow\">Java</a>, <a href=\"http://cappuccino.org/\" rel=\"nofollow\">Obj-J/Cappuccino</a> [similar to Obj-C/Cocoa] or <a href=\"http://processingjs.org/\" rel=\"nofollow\">Processing</a> [for Canvas] to JavaScript either on the client or before deployment [and some of which also feature various abstraction libraries]). Of course there's a performance overhead if it is being translated on the client, but if you are more comfortable with another language it will allow you some flexibility.</p>\n\n<p>Personally, though, I recommend learning to love JavaScript. It's an excellent, powerful language, and pretty elegant once you get to know it. I'm facing the opposite dilemma, chomping at the bit to have a capable server-side JavaScript/DOM solution that meets all of my needs. /unsolicited opinion</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Many people understand that Javascript isn't best and prettiest language ever. However, it is currently supported by browsers, and thus it will be extremely hard to introduce a different language. We simply don't need another browser war.</p>\n\n<p>This explains why I know of no plans of switching to a different client-side language.</p>\n\n<p>But I think Javascript isn't so bad if you start thinking about DOM model and how would one work with it. Many things that are messy with JS are the result of the way DOM model works.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>should be JavaScript the only supported language on the browser platform ?</p>\n</blockquote>\n\n<p>Yes and no.  There is an alternative out there called Dart by Google which does compile to JavaScript and just like jQuery it tries to make DOM manipulation a bit easier.  It may be fun to experiment, check it out.</p>\n\n<p>From Google see <a href=\"http://www.dartlang.org/\">The dart language</a></p>\n\n<p>From Microsoft see <a href=\"http://www.typescriptlang.org/\">TypeScript language</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<h1>Compile to Javascript</h1>\n\n<p>For now, using a language which compiles to Javascript seems to be the only realistic way to reach all the platforms while writing smarter code, and this will likely remain the case for a long time.  With any new offering, there will always be some reason why one or more vendors will not rush to ship it.</p>\n\n<p>(But I don't really think this is a problem.  Javascript has been nicely optimized by now.  Machine code is also unsafe if written by hand, but works fine as a compile target and execution language.)</p>\n\n<h1>So many options</h1>\n\n<p>There is an ever growing pool of languages that compile to Javascript.  A fairly comprehensive list can be found here:</p>\n\n<ul>\n<li><a href=\"https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS\" rel=\"nofollow\">List of languages that compile to JS</a> on the Coffeescript Wiki</li>\n</ul>\n\n<h1>Noteworthy</h1>\n\n<p>I will mention a few I think are noteworthy (while no doubt neglecting some gems which I am unaware of):</p>\n\n<ul>\n<li><p><a href=\"http://elm-lang.org/\" rel=\"nofollow\">Elm</a>: Haskell may be the <strong>smartest language</strong> of them all, and Elm is a variant of Haskell for Javascript.  It is highly type-aware and concise, and offers <strong>Functional Reactive Programming</strong> as a neat alternative to reactive templates or MVC spaghetti.  But it may be quite <strong>a shock for procedural programmers</strong>.</p></li>\n<li><p>Google's <a href=\"http://golang.org/\" rel=\"nofollow\">Go</a> is aimed at conciseness, simplicity, and safety.  Go code can be compiled into Javascript by <a href=\"https://github.com/gopherjs/gopherjs\" rel=\"nofollow\">GopherJS</a>.</p></li>\n<li><p><a href=\"http://www.dartlang.org/\" rel=\"nofollow\">Dart</a> was Google's later attempt to replace Javascript.  It offers interfaces and abstract classes through a C/Java-like syntax with optional typing.</p></li>\n<li><p><a href=\"http://haxe.org/\" rel=\"nofollow\">Haxe</a> is like Flash's ActionScript, but it can <strong>target multiple languages</strong> so your code can be re-used in Java, C, Flash, PHP and Javascript programs.  It offers type-safe and dynamic objects.</p></li>\n<li><p><a href=\"http://opalang.org/\" rel=\"nofollow\">Opalang</a> adds syntactic sugar to Javascript to provide <strong>direct database access</strong>, smart continuations, type-checking and assist with client/server separation.  (Tied to NodeJS and MongoDB.)</p></li>\n<li><p><a href=\"http://ckknight.github.io/gorillascript/\" rel=\"nofollow\" title=\"GorillaScript\">GorillaScript</a>, <em>\"a compile-to-JavaScript language designed to empower the user while attempting to prevent some common errors.\"</em> is akin to Coffeescript but more comprehensive, providing a bunch of extra features to increase safety and reduce repetitive boilerplate patterns.</p></li>\n<li><p><a href=\"http://gkz.github.io/LiveScript/\" rel=\"nofollow\">LiveScript</a> is a spin-off from Coffeescript that was popular for its brevity but does not look very readable to me.  Probably not the best for teams.</p></li>\n</ul>\n\n<h1>How to choose?</h1>\n\n<p>When <strong>choosing</strong> an alternative language, there are some <strong>factors to consider</strong>:</p>\n\n<ul>\n<li><p>If other developers join your project in future, how long will it take them to get up to speed and learn this language, or what are the chances they know it already?</p></li>\n<li><p>Does the language have too few features (code will still be full of boilerplate) or too many features (it will take a long time to master, and until then some valid code may be undecipherable)?</p></li>\n<li><p>Does it have the features you need for your project?  (Does your project need type-checking and interfaces?  Does it need smart continuations to avoid nested callback hell?  Is there a lot of reactivity?  Might it need to target other environments in future?)</p></li>\n</ul>\n\n<h1>The future...</h1>\n\n<p>Jeff Walker has written <a href=\"http://www.walkercoderanger.com/blog/2014/02/javascript-minefield\" rel=\"nofollow\">a thought-provoking series</a> of blog posts about \"the Javascript problem\", including why he thinks neither <a href=\"http://www.walkercoderanger.com/blog/2014/02/typescript-isnt-the-answer\" rel=\"nofollow\">TypeScript</a>, nor <a href=\"http://www.walkercoderanger.com/blog/2014/03/dart-isnt-the-answer\" rel=\"nofollow\">Dart</a> nor <a href=\"http://www.walkercoderanger.com/blog/2014/03/coffeescript-isnt-the-answer\" rel=\"nofollow\">Coffeescript</a> offer adequate solutions.  He suggests some desirable features for an improved language in <a href=\"http://www.walkercoderanger.com/blog/2014/04/what-coffeescript-should-have-been/\" rel=\"nofollow\">the conclusion</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>At the moment, the only fully supported language, and the de-facto standard for DOM tree manipulation in the browser is JavaScript. It looks like it has deep design issues that make it a minefield of bugs and security holes for the novice.</p>\n\n<p>Do you know of any existent or planned initiative to introduce a better  (redesigned) language of any kind (not only javascript) for DOM tree manipulation and HTTP requests in next generation browsers? If yes, what is the roadmap for its integration into, say, Firefox, and if no, for what reasons (apart of interoperability) should be JavaScript the only supported language on the browser platform?</p>\n\n<p>I already used jQuery and I also read \"javascript: the good parts\". Indeed the suggestions are good, but what I am not able to understand is: why only javascript? On the server-side (your-favourite-os platform), we can manipulate a DOM tree with every language, even fortran. Why does the client side (the browser platform) support only javascript?</p>\n",
            "last_activity_date": 1416113425,
            "question_id": 930716,
            "score": 71,
            "tags": [
                "javascript",
                "browser"
            ],
            "title": "Alternatives to JavaScript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>\"This method uses the browser's innerHTML property.\" - jQuery API</p>\n\n<p><a href=\"http://api.jquery.com/html/\" rel=\"nofollow\">http://api.jquery.com/html/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To answer your question: </p>\n\n<p><code>.html()</code> will just call <code>.innerHTML</code> after doing some checks for nodeType's &amp; stuff. It also uses a <code>try/catch</code> block where it trys to use <code>innerHTML</code> first and if that fails, it'll fallback gracefully to jQuerys <code>.empty()</code> + <code>append()</code></p>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p>If you're wondering about functionality, then jQuery's html() performs the same <em>intended</em> functionality as innerHTML, but it also performs checks for cross-browser compatibility.</p>\n\n<p>For this reason, always use jQuery's html() instead of innerHTML where possible.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>innerHTML is not standard and may not work in some browsers. I have used html() in all browsers with no problem.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Specifically regarding \"Can I rely completely upon jquery html() method that it'll perform like innerHTML\" my answer is NO!</p>\n\n<p>Run this in internet explorer 7 or 8 and you'll see.</p>\n\n<p>jQuery produces bad HTML when setting HTML containing a &lt;FORM&gt; tag nested within a &lt;P&gt; tag where the beginning of the string is a newline!</p>\n\n<p>There are several test cases here and the comments when run should be self explanatory enough. This is quite obscure, but not understanding what's going on is a little disconcerting. I'm going to file a bug report.</p>\n\n<pre><code>&lt;html&gt;\n\n    &lt;head&gt;\n        &lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js\"&gt;&lt;/script&gt;   \n\n        &lt;script&gt;\n            $(function() {\n\n                // the following two blocks of HTML are identical except the P tag is outside the form in the first case\n                var html1 = \"&lt;p&gt;&lt;form id='form1'&gt;&lt;input type='text' name='field1' value='111' /&gt;&lt;div class='foo' /&gt;&lt;input type='text' name='field2' value='222' /&gt;&lt;/form&gt;&lt;/p&gt;\";\n                var html2 = \"&lt;form id='form1'&gt;&lt;p&gt;&lt;input type='text' name='field1' value='111' /&gt;&lt;div class='foo' /&gt;&lt;input type='text' name='field2' value='222' /&gt;&lt;/p&gt;&lt;/form&gt;\";\n\n                // &lt;FORM&gt; tag nested within &lt;P&gt;\n                RunTest(\"&lt;FORM&gt; tag nested within &lt;P&gt; tag\", html1);                 // succeeds in Internet Explorer    \n                RunTest(\"&lt;FORM&gt; tag nested within &lt;P&gt; tag with leading newline\", \"\\n\" + html1);     // fails with added new line in Internet Explorer\n\n\n                // &lt;P&gt; tag nested within &lt;HTML&gt;\n                RunTest(\"&lt;P&gt; tag nested within &lt;FORM&gt; tag\", html2);                 // succeeds in Internet Explorer\n                RunTest(\"&lt;P&gt; tag nested within &lt;FORM&gt; tag with leading newline\", \"\\n\" + html2);     // succeeds in Internet Explorer even with \\n\n\n            });\n\n            function RunTest(testName, html) {\n\n                // run with jQuery\n                $(\"#placeholder\").html(html);\n                var jqueryDOM = $('#placeholder').html();\n                var jqueryFormSerialize = $(\"#placeholder form\").serialize();\n\n                // run with innerHTML\n                $(\"#placeholder\")[0].innerHTML = html;\n\n                var innerHTMLDOM = $('#placeholder').html();\n                var innerHTMLFormSerialize = $(\"#placeholder form\").serialize();\n\n                var expectedSerializedValue = \"field1=111&amp;field2=222\";\n\n                alert(  'TEST NAME: ' + testName + '\\n\\n' +\n                    'The HTML :\\n\"' + html + '\"\\n\\n' +\n                    'looks like this in the DOM when assigned with jQuery.html() :\\n\"' + jqueryDOM + '\"\\n\\n' +\n                    'and looks like this in the DOM when assigned with innerHTML :\\n\"' + innerHTMLDOM + '\"\\n\\n' +\n\n                    'We expect the form to serialize with jQuery.serialize() to be \"' + expectedSerializedValue + '\"\\n\\n' +\n\n                    'When using jQuery to initially set the DOM the serialized value is :\\n\"' + jqueryFormSerialize + '\\n' +\n                    'When using innerHTML to initially set the DOM the serialized value is :\\n\"' + innerHTMLFormSerialize + '\\n\\n' +\n\n                    'jQuery test : ' + (jqueryFormSerialize == expectedSerializedValue ? \"SUCCEEDED\" : \"FAILED\") + '\\n' +\n                    'InnerHTML test : ' + (innerHTMLFormSerialize == expectedSerializedValue ? \"SUCCEEDED\" : \"FAILED\") \n\n                    );\n            }\n\n        &lt;/script&gt;\n    &lt;/head&gt;\n\n    &lt;div id=\"placeholder\"&gt;\n        This is #placeholder text will \n    &lt;/div&gt;\n\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Here is some code to get you started. You can modify the behavior of .innerHTML -- you could even create your own complete .innerHTML shim. (P.S.: redefining .innerHTML will also work in Firefox, but not Chrome -- they're working on it.)</p>\n\n<pre><code>if (/(msie|trident)/i.test(navigator.userAgent)) {\n var innerhtml_get = Object.getOwnPropertyDescriptor(HTMLElement.prototype, \"innerHTML\").get\n var innerhtml_set = Object.getOwnPropertyDescriptor(HTMLElement.prototype, \"innerHTML\").set\n Object.defineProperty(HTMLElement.prototype, \"innerHTML\", {\n  get: function () {return innerhtml_get.call (this)},\n  set: function(new_html) {\n   var childNodes = this.childNodes\n   for (var curlen = childNodes.length, i = curlen; i &gt; 0; i--) {\n    this.removeChild (childNodes[0])\n   }\n   innerhtml_set.call (this, new_html)\n  }\n })\n}\n\nvar mydiv = document.createElement ('div')\nmydiv.innerHTML = \"test\"\ndocument.body.appendChild (mydiv)\n\ndocument.body.innerHTML = \"\"\nconsole.log (mydiv.innerHTML)\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/DLLbc/9/\" rel=\"nofollow\">http://jsfiddle.net/DLLbc/9/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Please tell me, Can I rely completely upon jquery html() method that it'll perform like innerHTML? is there any difference between innerHTML and jquery html() method? and if these both do the same work can I used jquery html() method in place of innerHTML?</p>\n\n<p>My problem is: I am working on already designed pages, the pages contains tables and in javascript the innerHTML property is being used to populate them dynamically, application is working fine on ff but IE fires error \"unknown runtime exception\". I used jquery html() method and IE error has stopped. but I'm not sure it will work for all browsers and I'm not sure to replace all innerHTML properties to jquery html() method. pls suggest</p>\n\n<p>Thanks a lot</p>\n",
            "last_activity_date": 1390289458,
            "question_id": 3563107,
            "score": 43,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "dom",
                "innerhtml"
            ],
            "title": "JQuery html() vs. innerHTML"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I ran into this problem before with Grunt.js <a href=\"https://github.com/gruntjs/grunt-contrib-uglify\"><strong>Uglify</strong></a> plugin.</p>\n\n<p>One of the options are <strong><a href=\"https://github.com/gruntjs/grunt-contrib-uglify#mangle\">mangle</a></strong></p>\n\n<pre><code>uglify: {\n  options: {\n    mangle: false\n  },\n</code></pre>\n\n<p>Which I believe runs regex functions on \"like strings\" and minifys them.</p>\n\n<p>For example:</p>\n\n<pre><code>angular.module(\"imgur\", [\"imgur.global\",\"imgur.album\"]);\n</code></pre>\n\n<p>Would become:</p>\n\n<pre><code>angular.module(\"a\", [\"a.global\",\"a.album\"]);\n</code></pre>\n\n<p>Disable it --- this feature doesn't play nice with Angular.</p>\n\n<h2>Edit:</h2>\n\n<p>To be more precise as @JoshDavidMiller explains:</p>\n\n<p>Uglify <code>mangle</code> only mangles like variables, which is what actually causes the AngularJS problem. That is, the problem is in injection and not definition. </p>\n\n<p><code>function MyCtrl($scope, myService)</code> would get mangled to <code>function MyCtrl(a, b)</code>, but the service definition inside of a string should never get altered. </p>\n\n<ul>\n<li>Running <code>ng-min</code> before running <code>uglify</code> solves this problem.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 74
                },
                {
                    "body": "<p>AndrewM96 suggestion of <code>ng-min</code> is right.</p>\n\n<p>The alignment and white space matters to Uglify as well as Angular.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>Uglify has an option to disable mangling on specific files:</p>\n\n<pre><code>options: {\n  mangle: {\n     except: ['jQuery', 'angular']\n  }\n}\n</code></pre>\n\n<p><a href=\"https://github.com/gruntjs/grunt-contrib-uglify#reserved-identifiers\" rel=\"nofollow\">https://github.com/gruntjs/grunt-contrib-uglify#reserved-identifiers</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had a similar issue using grunt, ngmin and uglify. </p>\n\n<p>I ran the process in this order: concat, ngmin, uglify</p>\n\n<p>I was continuing to get the $injector error from angular until I added in the uglify options mangle: false - then everything was fixed. </p>\n\n<p>I also tried to add the exceptions to uglify like this: </p>\n\n<pre><code> options: {\n  mangle: {\n     except: ['jQuery', 'angular']\n  }\n}\n</code></pre>\n\n<p>But to no avail... </p>\n\n<p>Here is my gruntFile.js for further clarification:</p>\n\n<pre><code>module.exports = function(grunt) {\n'use strict';\n// Configuration goes here\ngrunt.initConfig({\n    pkg: require('./package.json'),\n\n    watch: {\n        files: ['scripts/**/*.js', 'test/**/*spec.js', 'GruntFile.js'],\n        tasks: ['test', 'ngmin']\n    },\n\n    jasmine : {\n        // Your project's source files\n        src : ['bower_components/angular/angular.js', 'bower_components/angular-mocks/angular-mocks.js', 'scripts/app.js', 'scripts/**/*.js' ],\n        // Your Jasmine spec files\n\n        options : {\n            specs : 'test/**/*spec.js',\n            helpers: 'test/lib/*.js'\n        }\n    },\n\n    concat: {\n      dist : {\n          src: ['scripts/app.js', 'scripts/**/*.js'],\n          dest: 'production/js/concat.js'\n      }\n    },\n\n    ngmin: {\n        angular: {\n            src : ['production/js/concat.js'],\n            dest : 'production/js/ngmin.js'\n        }\n\n    },\n\n    uglify : {\n        options: {\n            report: 'min',\n            mangle: false\n        },\n        my_target : {\n            files : {\n                'production/app/app.min.js' : ['production/js/ngmin.js']\n            }\n        }\n    },\n\n  docular : {\n      groups: [],\n      showDocularDocs: false,\n      showAngularDocs: false\n  }\n\n});\n\n// Load plugins here\ngrunt.loadNpmTasks('grunt-ngmin');\ngrunt.loadNpmTasks('grunt-docular');\ngrunt.loadNpmTasks('grunt-contrib-uglify');\ngrunt.loadNpmTasks('grunt-contrib-jasmine');\ngrunt.loadNpmTasks('grunt-contrib-watch');\ngrunt.loadNpmTasks('grunt-contrib-concat');\ngrunt.loadNpmTasks('grunt-contrib-connect');\n\n// Define your tasks here\ngrunt.registerTask('test', ['jasmine']);\ngrunt.registerTask('build', ['concat', 'ngmin', 'uglify']);\ngrunt.registerTask('default', ['test', 'build', 'watch']);\n</code></pre>\n\n<p>};</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I got same error. However, for me, the problem is directives' controller declaration. You should do this instead.</p>\n\n<pre><code>myModule.directive('directiveName', function factory(injectables) {\n    var directiveDefinitionObject = {\n      templateUrl: 'directive.html',\n      replace: false,\n      restrict: 'A',\n      controller: [\"$scope\", \"$element\", \"$attrs\", \"$transclude\", \"otherInjectables\",\n        function($scope, $element, $attrs, $transclude, otherInjectables) { ... }]\n    };\n    return directiveDefinitionObject;\n  });\n</code></pre>\n\n<p><a href=\"https://github.com/angular/angular.js/pull/3125\">https://github.com/angular/angular.js/pull/3125</a></p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<h1>Problem</h1>\n\n<p>From <a href=\"http://larseidnes.com/2014/11/05/angularjs-the-bad-parts/\">AngularJS: The Bad Parts</a>:</p>\n\n<blockquote>\n  <p>Angular has a built in dependency injector that will pass appropriate\n  objects to your function based on the names of its parameters:</p>\n\n<pre><code>function MyController($scope, $window) {\n    // ...\n}\n</code></pre>\n  \n  <p>Here, the names of the parameters <code>$scope</code> and <code>$window</code> will be\n  matched against a list of known names, and corresponding objects get\n  instantiated and passed to the function. Angular gets the parameter\n  names by calling <code>toString()</code> on the function, and then parsing the\n  function definition.</p>\n  \n  <p>The problem with this, of course, is that it <strong>stops working the\n  moment you minify your code</strong>. Since you care about user experience\n  you will be minifying your code, thus using this DI mechanism will\n  break your app. In fact, a common development methodology is to use\n  unminified code in development to ease debugging, and then to minify\n  the code when pushing to production or staging. In that case, this\n  problem won\u2019t rear its ugly head until you\u2019re at the point where it\n  hurts the most.</p>\n  \n  <p>(...)</p>\n  \n  <p>Since this dependency injection mechanism doesn\u2019t actually work in the\n  general case, Angular also provides a mechanism that does. To be sure,\n  it provides two. You can either pass along an array like so:</p>\n\n<pre><code>module.controller('MyController', ['$scope', '$window', MyController]);\n</code></pre>\n  \n  <p>Or you can set the <code>$inject</code> property on your constructor:</p>\n\n<pre><code>MyController.$inject = ['$scope', '$window'];\n</code></pre>\n</blockquote>\n\n<h1>Solution</h1>\n\n<p>You can use <a href=\"https://github.com/olov/ng-annotate\"><code>ng-annotate</code></a> for auto adding annotations required for minifying:</p>\n\n<blockquote>\n  <p><code>ng-annotate</code> adds and removes AngularJS dependency injection\n  annotations. It is non-intrusive so your source code stays exactly the\n  same otherwise. No lost comments or moved lines.</p>\n</blockquote>\n\n<p><code>ng-annotate</code> is faster and stabler than <a href=\"https://github.com/btford/ngmin\"><code>ngmin</code></a> (which is now deprecated) and it has plugins for many tools:</p>\n\n<ul>\n<li><a href=\"https://github.com/mzgol/grunt-ng-annotate\"><code>grunt-ng-annotate</code></a></li>\n<li><a href=\"https://github.com/Kagami/gulp-ng-annotate\"><code>gulp-ng-annotate</code></a></li>\n<li><a href=\"https://github.com/omsmith/browserify-ngannotate\"><code>browserify-annotate</code></a></li>\n</ul>\n\n<hr>\n\n<p>Starting from AngularJS 1.3 there's also a new param in <a href=\"https://docs.angularjs.org/api/ng/directive/ngApp\"><code>ngApp</code></a> called <strong><code>ngStrictDi</code></strong>:</p>\n\n<blockquote>\n  <p>if this attribute is present on the app element, the injector will be\n  created in \"strict-di\" mode. This means that the application will fail\n  to invoke functions which do not use explicit function annotation (and\n  are thus unsuitable for minification), as described in the <a href=\"https://docs.angularjs.org/guide/di\">Dependency\n  Injection guide</a>, and useful debugging info will assist in tracking\n  down the root of these bugs.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>This is very difficult to debug because a lot of services are named the same (mostly e or a). This will not solve the error, but will <strong>provide you with the name of the unresolved service</strong> which enables you to track down, in the uglified output, the location in the code and finally enables you to solve the issue:</p>\n\n<p>Go into <code>lib/scope.js</code>of Uglify2 (<code>node_modules/grunt-contrib-uglify/node_modules/uglify-js/lib/scope.js</code>) and replace the line</p>\n\n<pre><code>this.mangled_name = this.scope.next_mangled(options);\n</code></pre>\n\n<p>with</p>\n\n<pre><code>this.mangled_name = this.name + \"__debugging_\" + counter++\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Having the darnedest time trying to figure out why minification is not working.</p>\n\n<p>I have injected via an array object my providers prior the function per numerous suggestions across the web and yet still \"Unknown provider: aProvider &lt;- a\"</p>\n\n<p>Regular:</p>\n\n<pre><code>var app = angular.module('bpwApp', ['ui.bootstrap', 'ui', 'myTabs'])\n    .config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider){\n    $routeProvider.\n        when('/', {templateUrl: 'partials/home.jade', controller: HomeCtrl});\n\n    $locationProvider.html5Mode(true);\n    }])\n</code></pre>\n\n<p>Minified: </p>\n\n<pre><code>var app = angular.module('bpwApp', ['ui.bootstrap', 'ui', 'myTabs'])\n    .config(['$routeProvider', '$locationProvider', function(a, b){\n    a.\n        when('/', {templateUrl: 'partials/home.jade', controller: HomeCtrl});\n\n    b.html5Mode(true);\n    }])\n</code></pre>\n\n<p>Any suggestion would be much obliged!</p>\n",
            "last_activity_date": 1425638073,
            "question_id": 17238759,
            "score": 39,
            "tags": [
                "javascript",
                "angularjs",
                "minify",
                "uglifyjs"
            ],
            "title": "Angular.module minification bug"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Following your example line by line:</p>\n\n<pre><code>a = {}\n</code></pre>\n\n<p><code>a</code> now references the new object.</p>\n\n<pre><code>b = a;\n</code></pre>\n\n<p><code>b</code> now references the same object that <code>a</code> references. Note that it does not reference <code>a</code>.</p>\n\n<pre><code>a['one'] = {};\n</code></pre>\n\n<p>The new object now has an index <code>'one'</code> that references another new object.</p>\n\n<p>When you do</p>\n\n<pre><code>a = a['one'];\n</code></pre>\n\n<p>You are setting <code>a</code> to refer to <code>a['one']</code>, which is that new object you created when you did <code>a['one'] = {}</code>. <code>b</code> still references the object you created with <code>a = {}</code>.</p>\n\n<p>You are confusing the issue when you say \"<code>a</code> has lost its reference to <code>b</code>\" because <code>a</code> does not refer to <code>b</code> , nor vice versa. <code>a</code> and <code>b</code> refer to <em>objects</em>, and they can be made to refer to other objects. Like this:</p>\n\n<p>With <code>a = {}; b = a</code>, you get</p>\n\n<pre><code>a\n \\\n  \\\n   { }\n  /\n /\nb\n</code></pre>\n\n<p>Then with <code>a['one'] = {}</code> you get</p>\n\n<pre><code>a\n \\\n  \\\n   { one: { } }\n  /\n /\nb\n</code></pre>\n\n<p>Then with <code>a = a['one']</code> you get</p>\n\n<pre><code>a - - - - \n          \\\n   { one: { } }\n  /\n /\nb\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 114
                },
                {
                    "body": "<p>Think of the anonymous object as itself having a name:</p>\n\n<pre><code>a = {}; // The variable \"a\" now points to (holds) an anonymous object.\nb = a; // \"b\" points to the same anonymous object held by \"a\".\na = 123; // \"a\" now holds some other value.\nb; // \"b\" still holds the anonymous object.\n</code></pre>\n\n<p>The key is to remember that variables hold references to <em>objects</em>, not references to other variables.  And the same object may be referred to by any number of variables.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Objects in Javascript can exist by themselves without needing a name. For example:</p>\n\n<pre><code>{}\n</code></pre>\n\n<p>is a new instance of a dictionary object.</p>\n\n<pre><code>a = {};\n</code></pre>\n\n<p>creates a new dictionary object and makes <code>a</code> refer to it. Now</p>\n\n<pre><code>b = a;\n</code></pre>\n\n<p>makes <code>b</code> refer to the same underlying object. You can then make <code>a</code> point somewhere else:</p>\n\n<pre><code>a = \"hi\";\n</code></pre>\n\n<p>and <code>b</code> still points to the same dictionary object it did before. The behaviour of <code>b</code> is unrelated to how you change what <code>a</code> points to.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>:P You're descending into the knitty gritty details and I'm glad you asked, as you will be wiser by the end.</p>\n\n<p>Don't look at it in terms of pointers, because I think that is where you are getting confused. Think of it rather in terms of the heap (or just \"memory\" if you will) and the symbol table.</p>\n\n<p>Lets start by taking the first few lines of your code:</p>\n\n<pre><code>var a, b;\n\na = {}\nb = a;\n</code></pre>\n\n<p>What you've done here is created one object on the heap and two symbols on the symbol table. It looks something like this:</p>\n\n<hr>\n\n<p><em>Symbol Table</em>:</p>\n\n<pre><code>+--------+-----------------+\n| Symbol | Memory Location |\n+--------+-----------------+\n|      a |        0x400000 |\n+--------+-----------------+\n|      b |        0x400000 |\n+--------+-----------------+\n</code></pre>\n\n<p><em>Heap</em>:</p>\n\n<pre><code>+----------+-----------------+\n| Location | Value           |\n+----------+-----------------+\n| 0x400000 | &lt;object val 1&gt;  |\n+----------+-----------------+\n</code></pre>\n\n<p>.</p>\n\n<hr>\n\n<p>Here's where things get interesting: Objects have their own \"symbol tables\" (usually these are just hash tables, but calling it a symbol table can make it clearer).</p>\n\n<p>Now, after your next statement, you have 3 things to consider: The global symbol table, <code>&lt;object val 1&gt;</code>'s symbol table, and the heap.</p>\n\n<p>Run the following line:</p>\n\n<pre><code>a['one'] = {}\n</code></pre>\n\n<p>And now things look like this:</p>\n\n<hr>\n\n<p><em>Global Symbol Table</em>:</p>\n\n<pre><code>+--------+-----------------+\n| Symbol | Memory Location |\n+--------+-----------------+\n|      a |        0x400000 |\n+--------+-----------------+\n|      b |        0x400000 |\n+--------+-----------------+\n</code></pre>\n\n<p><em><code>&lt;object val 1&gt;</code>'s Symbol Table</em></p>\n\n<pre><code>+--------+-----------------+\n| Symbol | Memory Location |\n+--------+-----------------+\n|    one |        0x400004 |\n+--------+-----------------+\n</code></pre>\n\n<p><em>Heap</em>:</p>\n\n<pre><code>+----------+-----------------+\n| Location | Value           |\n+----------+-----------------+\n| 0x400000 | &lt;object val 1&gt;  |\n+----------+-----------------+\n| 0x400004 | &lt;object val 2&gt;  |     &lt;---we created a new object on the heap\n+----------+-----------------+\n</code></pre>\n\n<p>.</p>\n\n<hr>\n\n<p>Now you ran the following code:</p>\n\n<pre><code>a = a['one'];\n</code></pre>\n\n<p>This should hopefully seem to be a trivial change. The result is:</p>\n\n<hr>\n\n<p><em>Global Symbol Table</em>:</p>\n\n<pre><code>+--------+-----------------+\n| Symbol | Memory Location |\n+--------+-----------------+\n|      a |        0x400004 |\n+--------+-----------------+\n|      b |        0x400000 |\n+--------+-----------------+\n</code></pre>\n\n<p><em><code>&lt;object val 1&gt;</code>'s Symbol Table</em></p>\n\n<pre><code>+--------+-----------------+\n| Symbol | Memory Location |\n+--------+-----------------+\n|    one |        0x400004 |\n+--------+-----------------+\n</code></pre>\n\n<p><em>Heap</em>:</p>\n\n<pre><code>+----------+-----------------+\n| Location | Value           |\n+----------+-----------------+\n| 0x400000 | &lt;object val 1&gt;  |\n+----------+-----------------+\n| 0x400004 | &lt;object val 2&gt;  | \n+----------+-----------------+\n</code></pre>\n\n<p>.</p>\n\n<hr>\n\n<p>Following the memory locations to the heap should hopefully make it clear why you got the output you did.</p>\n\n<p>Now things get even MORE interesting, because now you are doing:</p>\n\n<pre><code>a['two'] = 2;\n</code></pre>\n\n<p>Ok, so let's take this step by step.</p>\n\n<ul>\n<li><code>a</code> points to memory location <code>0x400004</code> which contains <code>&lt;object val 2&gt;</code></li>\n<li><code>&lt;object val 2&gt;</code> is an empty object, thus its symbol table starts off empty</li>\n<li>By running this line, we add the variable 'two' to <code>&lt;object val 2&gt;</code>'s symbol table.</li>\n</ul>\n\n<p>If you're not tired of looking at these diagrams yet, you will be. Things now look like this:</p>\n\n<hr>\n\n<p><em>Global Symbol Table</em>:</p>\n\n<pre><code>+--------+-----------------+\n| Symbol | Memory Location |\n+--------+-----------------+\n|      a |        0x400004 |\n+--------+-----------------+\n|      b |        0x400000 |\n+--------+-----------------+\n</code></pre>\n\n<p><em><code>&lt;object val 1&gt;</code>'s Symbol Table</em></p>\n\n<pre><code>+--------+-----------------+\n| Symbol | Memory Location |\n+--------+-----------------+\n|    one |        0x400004 |\n+--------+-----------------+\n</code></pre>\n\n<p><em><code>&lt;object val 2&gt;</code>'s Symbol Table</em></p>\n\n<pre><code>+--------+-----------------+\n| Symbol | Memory Location |\n+--------+-----------------+\n|    two |        0x400008 |\n+--------+-----------------+\n</code></pre>\n\n<p><em>Heap</em>:</p>\n\n<pre><code>+----------+-----------------+\n| Location | Value           |\n+----------+-----------------+\n| 0x400000 | &lt;object val 1&gt;  |\n+----------+-----------------+\n| 0x400004 | &lt;object val 2&gt;  | \n+----------+-----------------+\n| 0x400008 | 2 (literal val) |    &lt;-- yes, even integers are stored on the heap\n+----------+-----------------+        in JavaScript.\n</code></pre>\n\n<p>.</p>\n\n<hr>\n\n<p>If you diligently take the time to follow the memory locations, you will see that your browser displayed the correct output.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>As far as i know you overwrited <strong>a</strong> so i guess the engine saves it in another memory space, whereas <strong>b</strong> still pointing to the old <strong>a</strong>'s memory address (which somehow doesn't get destroyed). </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Javascript passes objects by reference. This makes perfect sense. But once you start manipulating those objects, everything acts in a way that seem unintuitive. Let me offer an example:</p>\n\n<pre><code>var a, b;\n\na = {}\nb = a;\na['one'] = {};\n\nconsole.log( JSON.stringify(a) );\n// outputs: {\"one\":{}}\n\nconsole.log( JSON.stringify(b) );\n// outputs: {\"one\":{}}\n</code></pre>\n\n<p>This is all well and good because now <code>b</code> has a pointer to <code>a</code> so it's expected that assigning stuff to <code>a</code> will also affect <code>b</code>.</p>\n\n<p>But then if I do this:</p>\n\n<pre><code>a = a['one'];\n\nconsole.log( JSON.stringify(a) );\n// outputs: {}\n\nconsole.log( JSON.stringify(b) );\n// outputs: {\"one\":{}}\n</code></pre>\n\n<p>This is surprising to me. I'd expect <code>a</code> and <code>b</code> to still be the same (and to be <code>{}</code> since <code>a['one']</code> was previously set to <code>{}</code> and <code>a</code> was set to <code>a['one']</code>).</p>\n\n<p>But that's not the case. It appears that <code>a</code> loses its reference to <code>b</code> when it's assigned to something new, but <code>b</code> maintains the value that <code>a</code> was set to prior to <code>a</code> loosing its reference to <code>b</code>.</p>\n\n<p>But then if I do this:</p>\n\n<pre><code>a['two'] = 2;\n\nconsole.log( JSON.stringify(a) );\n// outputs: {\"two\":2}\n\nconsole.log( JSON.stringify(b) );\n// outputs: {\"one\":{\"two\":2}}\n</code></pre>\n\n<p>What? <code>a</code> has clearly lost it's reference to <code>b</code>, but <code>b</code> seems to still have some reference to <code>a</code>.</p>\n\n<p>Does the empty object <code>{}</code> point to some place in memory so every variable referencing it is now pointing to the same place?</p>\n\n<p>Can someone with a firm grasp on this explain it to me?</p>\n",
            "last_activity_date": 1415485723,
            "question_id": 8318357,
            "score": 39,
            "tags": [
                "javascript",
                "pointers",
                "reference"
            ],
            "title": "Javascript pointer/reference craziness. Can someone explain this?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Is it a global variable? If so, these are actually part of the <code>window</code> object, so you can do <code>window[objname].value</code>.</p>\n\n<p>If it's local to a function, I don't think there's a good way to do what you want.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can't do this in general, except at the window scope, where you can write <code>window[objname].value = 'value';</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>Global:</strong><br/></p>\n\n<pre><code>var objname = {};\nvar someObject = \"objname\";\nwindow[someObject].value = \"value\";\n</code></pre>\n\n<p><strong>Local:</strong><br />\nLocal variables are a little more challenging, but I think I found the solution:</p>\n\n<pre><code>(function() {\n    if (this != arguments.callee) {\n        arguments.callee.call(arguments.callee);\n        return false;\n    }\n\n    this.objname = {};\n    var someObject = \"objname\";\n    this[someObject].value = \"value\";\n\n    console.log(this.objname);\n})();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>You could use <code>eval</code>:</p>\n\n<pre><code>eval(variablename + \".value = 'value'\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The object exists in some scope, so you can almost always access the variable via this syntax:</p>\n\n<pre><code>var objname = \"myobject\";\ncontaining_scope_reference[objname].some_property = 'some value';\n</code></pre>\n\n<p>The only place where this gets tricky is when you are in a closed scope and you want access to a top-level local variable.   When you have something like this:</p>\n\n<pre><code>(function(){\n    var some_variable = {value: 25};\n    var x = \"some_variable\";\n    console.log(this[x], window[x]); // Doesn't work\n})();\n</code></pre>\n\n<p>You <em>can</em> get around that by using <code>eval</code> instead to access the current scope chain ... but I don't recommend it unless you've done a lot of testing and you <strong>know</strong> that that's the best way to go about things.</p>\n\n<pre><code>(function(){\n    var some_variable = {value: 25};\n    var x = \"some_variable\";\n    eval(x).value = 42;\n    console.log(some_variable); // Works\n})();\n</code></pre>\n\n<p>Your <em>best</em> bet is to have a reference to a name in an always-going-to-be-there object (like <code>this</code> in the global scope or a private top-level variable in a local scope) and put <em>everything</em> else in there.</p>\n\n<p>Thus:</p>\n\n<pre><code>var my_outer_variable = {};\nvar outer_pointer = 'my_outer_variable';\n// Reach my_outer_variable with this[outer_pointer]\n// or window[outer_pointer]\n\n(function(){\n    var my_inner_scope = {'my_inner_variable': {} };\n    var inner_pointer = 'my_inner_variable';\n    // Reach my_inner_variable by using\n    // my_inner_scope[inner_pointer]\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I think Shaz's answer for local variables is hard to understand, though it works for non-recursive functions. Here's another way that I think it's clearer (but it's still his idea, exact same behavior). It's also not accessing the local variables dynamically, just the property of the local variable.</p>\n\n<p>Essentially, it's using a global variable (attached to the function object)</p>\n\n<pre><code>// Here's  a version of it that is more straight forward.\nfunction doIt() {\n    doIt.objname = {};\n    var someObject = \"objname\";\n    doIt[someObject].value = \"value\";    \n    console.log(doIt.objname);\n})();\n</code></pre>\n\n<p>Which is essentially the same thing as creating a global to store the variable, so you can access it as a property. Creating a global to do this is such a hack.</p>\n\n<p>Here's a cleaner hack that doesn't create global variables, it uses a local variable instead.</p>\n\n<pre><code>function doIt() {\n  var scope = {\n     MyProp: \"Hello\"\n  };\n  var name = \"MyProp\";\n  console.log(scope[name]);\n}\n</code></pre>\n\n<p>See <a href=\"http://stackoverflow.com/questions/10953303/javascript-interpret-string-as-object-reference/10953396#10953396\">Javascript: interpret string as object reference?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>When using the window[objname], please make sure the objname is global variables.\nOtherwise, will work sometime, and fail sometimes.\nwindow[objname].value.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If object is in some namespace ie. <code>Company.Module.Components.Foo</code> you can use this function:</p>\n\n<p>CoffeeScript:</p>\n\n\n\n<pre><code>objByName: (name, context = window) -&gt;\n    ns = name.split \".\"\n    func = context\n    for n, i in ns\n        func = func[n]\n    return func\n</code></pre>\n\n<p>Resulted Js:</p>\n\n\n\n<pre><code>objByName: function(name, context) {\n  var func, i, n, ns, _i, _len;\n  if (context == null) {\n    context = window;\n  }\n  ns = name.split(\".\");\n  func = context;\n  for (i = _i = 0, _len = ns.length; _i &lt; _len; i = ++_i) {\n    n = ns[i];\n    func = func[n];\n  }\n  return func;\n}\n</code></pre>\n\n<p>Then you can create a new object or do whatever. Note the parenthises through.</p>\n\n<pre><code>var o = new (objByName('Company.Module.Components.Foo'))\nobjByName('some.deeply.nested.object').value\n</code></pre>\n\n<p>This idea is borrowed from similar question: <a href=\"http://stackoverflow.com/questions/359788/how-to-execute-a-javascript-function-when-i-have-its-name-as-a-string\">How to execute a JavaScript function when I have its name as a string</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to use the value of a variable to access an object.</p>\n\n<p>Let's say I have an object named myobject.</p>\n\n<p>I want to fill a variable with this name and use the variable to access the object.</p>\n\n<p>Example:</p>\n\n<pre><code>var objname = 'myobject';\n{objname}.value = 'value';\n</code></pre>\n",
            "last_activity_date": 1401900566,
            "question_id": 6084858,
            "score": 30,
            "tags": [
                "javascript"
            ],
            "title": "Javascript use variable as object name"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Don't use an array, use an object.</p>\n\n<pre><code>      var foo = new Object();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Javascript is flexible:</p>\n\n<pre><code>var arr = {\n  \"fred\": {\"apple\": 2, \"orange\": 4},\n  \"mary\": {}\n  //etc, etc\n};\n\nalert(arr.fred.orange);\nalert(arr[\"fred\"][\"orange\"]);\nfor (key in arr.fred)\n    alert(key + \": \" + arr.fred[key]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If it doesn't <em>have</em> to be an array, you can create a \"multidimensional\" JS object...</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar myObj = { \n    fred: { apples: 2, oranges: 4, bananas: 7, melons: 0 }, \n    mary: { apples: 0, oranges: 10, bananas: 0, melons: 0 }, \n    sarah: { apples: 0, oranges: 0, bananas: 0, melons: 5 } \n}\n\ndocument.write( myObject[ 'fred' ][ 'apples' ] );\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Just use a regular JavaScript object, which would 'read' the same way as your associative arrays.  You have to remember to initialize them first as well.</p>\n\n<pre><code>var obj = {};\n\nobj['fred'] = {};\nif('fred' in obj ){ } // can check for the presence of 'fred'\nif(obj.fred) { } // also checks for presence of 'fred'\nif(obj['fred']) { } // also checks for presence of 'fred'\n\n// The following statements would all work\nobj['fred']['apples'] = 1;\nobj.fred.apples = 1;\nobj['fred'].apples = 1;\n\n// or build or initialize the structure outright\nvar obj = { fred: { apples: 1, oranges: 2 }, alice: { lemons: 1 } };\n</code></pre>\n\n<p>If you're looking over values, you might have something that looks like this:</p>\n\n<pre><code>var people = ['fred', 'alice'];\nvar fruit = ['apples', 'lemons'];\n\nvar grid = {};\nfor(var i = 0; i &lt; people.length; i++){\n    var name = people[i];\n    if(name in grid == false){\n        grid[name] = {}; // must initialize the sub-object, otherwise will get 'undefined' errors\n    }\n\n    for(var j = 0; j &lt; fruit.length; j++){\n        var fruitName = fruit[j];\n        grid[name][fruitName] = 0;\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>as I needed get all elements in a nice way I encountered this SO subject.\ntraversing 2 dimensional associative array/object - no matter the name for me, because functionality counts</p>\n\n<pre><code>    var imgs_pl= {'offer':{'img':'wer-handwritter_03.png','left': 1,'top': 2 },\n    'portfolio':{'img':'wer-handwritter_10.png','left': 1,'top': 2 },\n    'special':{'img':'wer-handwritter_15.png','left': 1,'top': 2 }\n    };\n    for (key in imgs_pl){\n        console.log(key);\n        for (subkey in imgs_pl[key]){\n            console.log(imgs_pl[key][subkey]);\n        }//for\n\n    }//for\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>There is the following query results: (key1 and key2 could be any text)</p>\n\n<pre><code>id   key1     key2     value\n\n1    fred     apple    2\n2    mary     orange   10\n3    fred     banana   7\n4    fred     orange   4\n5    sarah    melon    5\n...\n</code></pre>\n\n<p>and I wish to store the data in a grid (maybe as an array) <strong>looping</strong> all the records like this:</p>\n\n<pre><code>         apple    orange   banana  melon\nfred        2        4         7     -\nmary        -        10        -     -\nsarah       -        -         -     5\n</code></pre>\n\n<p>In PHP this would be really easy, using associative arrays:</p>\n\n<pre><code>$result['fred']['apple'] = 2;\n</code></pre>\n\n<p>But in javascript associative arrays like this doesn't work.\nAfter reading tons of tutorial, all I could get was this:</p>\n\n<pre><code>arr=[];\narr[1]['apple'] = 2;\n</code></pre>\n\n<p>but <code>arr['fred']['apple'] = 2;</code> doesn't work.\nI tried arrays of objects, but objects properties can't be free text.\nThe more I was reading tutorials, the more I got confused...</p>\n\n<p>Any idea is welcome :)</p>\n",
            "last_activity_date": 1360005441,
            "question_id": 4329092,
            "score": 30,
            "tags": [
                "javascript",
                "multidimensional-array",
                "associative-array"
            ],
            "title": "Multi-dimensional associative arrays in javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>When you create more than one instance of Apple, you will still only have only one instance of <code>say()</code> in memory. However, when you create more than one instance of Banana, you will end up creating lots of instances of the <code>say()</code> function.</p>\n\n<p>That's why prototypes save memory. You also avoid the processing cost of creating and assigning the <code>say()</code> function.</p>\n\n<p>Also, if you change the parent object's properties, if the child does not replace that property, changes are visible from the child.</p>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>prototype members are like class membeprototype members are like class member, while when u define it other way its not a class member. So if you are creating lot of object of Apple all will be sharing same function, while in case of banana, every object will have their own copy of function.\n Think prototype in javascript as static in C#.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Follow my code,<br>\nApple is define function by prototype.<br>\nBanana is define function by class property.</p>\n\n<pre><code>var Apple = function(){}\nApple.prototype.say = function(){\n    console.debug('HelloWorld');\n}\nvar Banana = function(){\n    this.say = function(){\n        console.debug('HelloWorld');\n    }\n}\n\nvar a = new Apple();\nvar b = new Banana();\n\na.say();\nb.say();\n</code></pre>\n\n<p>Are these difference ?</p>\n",
            "last_activity_date": 1397555020,
            "question_id": 5912497,
            "score": 28,
            "tags": [
                "javascript",
                "prototype"
            ],
            "title": "What is difference between define function by prototype and class property?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>You could grab the event and look at it's event code. But there is no real way to know what a browser's behavior for those events.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>you need to remove the &lt; tbody > tag</p>\n\n<p>and just use the 'href' attribute to get the link destination and dont to select the anchor &lt; a > tag too because thats contains the href attribute.</p>\n\n<pre><code>$(\"table#row_link tbody tr a\").click(function () {\n\n     window.location = $(this).attr(\"href\");\n\n});\n</code></pre>\n\n<p>or simply make the link open a new tab.</p>\n\n<p>i hope that helps you.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>Here's something that should work:  Instead of using window.location, us .click() to emulate a click on the first  inside the  element.  Also, use a conditional to check for Ctl+Click.</p>\n\n<p>Should look like this:</p>\n\n<pre><code>$(\"table#row_link tbody tr\").click(function (e) {\n    if(e.ctrlKey) { \n        // Run Ctl+Click Code Here\n    } else { \n        $(this).children('a').eq(0).click(); \n    }\n}\n</code></pre>\n\n<p>Hope this helps!</p>\n\n<p>Dave Romero</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>EDIT</strong></p>\n\n<p>This is simple problem that has a simple solution. I don't see a need for nasty hacks that might break on some browsers or take processing time. Especially because there is a neat and easy CSS solution.</p>\n\n<p>First here is a <a href=\"http://nadiana.com/sites/default/files/example/clickable.html\" rel=\"nofollow\">demo</a></p>\n\n<p>Inspired by <a href=\"http://stackoverflow.com/questions/569355/html-table-row-link/570005#570005\">@Nick solution</a> for a very similar issue, I'm proposing a simple css+jquery solution.</p>\n\n<p>First, here is the mini-plugin I wrote. The plugin will wrap every cells with a link:</p>\n\n<pre><code>jQuery.fn.linker = function(selector) {\n    $(this).each(function() {\n        var href = $(selector, this).attr('href');\n        if (href) {\n            var link = $('&lt;a href=\"' + $(selector, this).attr('href') + '\"&gt;&lt;/a&gt;').css({\n                'text-decoration': 'none',\n                'display': 'block',\n                'padding': '0px',\n                'color': $(this).css('color')\n            })\n            $(this).children()\n                   .css('padding', '0')\n                   .wrapInner(link);\n        }\n    });\n};\n</code></pre>\n\n<p>And here is a usage example:</p>\n\n<pre><code>$('table.collection tr').linker('a:first');\n</code></pre>\n\n<p>And All the CSS you need:</p>\n\n<pre><code>table.collection {\n    border-collapse:collapse;\n}\n</code></pre>\n\n<p>It's as simple as that.</p>\n\n<p><hr /></p>\n\n<p>You can use the event object to check the mouse click type. This <a href=\"http://abeautifulsite.net/notebook/99\" rel=\"nofollow\">article</a> is discussing a similar issue.</p>\n\n<p>Anyway, here is how to do it:</p>\n\n<pre><code>$(\"table#row_link tbody tr\").click(function () {\n\n    if((!$.browser.msie &amp;&amp; e.button == 0) || ($.browser.msie &amp;&amp; e.button == 1)){\n        if (!e.ctrlKey) {\n            // Left mouse button was clicked without ctrl\n            window.location = $(this).find(\"a:first\").attr(\"href\");\n        }\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Try putting the a around the td and then apply a display:block CSS element to the td.</p>\n\n<p>That should make the entire area of the td clickable with all buttons as a \"normal\" link.</p>\n\n<p>An example is probably better:</p>\n\n<pre><code>&lt;table id=\"row_link\"&gt; \n  &lt;tbody&gt; \n    &lt;tr&gt;\n      &lt;a href=\"link1.html\"&gt;&lt;td style=\"display: block;\"&gt;link&lt;/td&gt;&lt;/a&gt; \n      &lt;td&gt;info 1&lt;/td&gt; \n    &lt;/tr&gt;       \n    &lt;tr&gt;\n      &lt;a href=\"link2.html\"&gt;&lt;td style=\"display: block;\"&gt;link&lt;/td&gt;&lt;/a&gt;\n      &lt;td&gt;info 2&lt;/td&gt; \n    &lt;/tr&gt;       \n  &lt;/tbody&gt; \n&lt;/table&gt;\n</code></pre>\n\n<p>A similar approach has worked in the past for me, although it was not exactly for table elements. Untested with tables so try it.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This plugin for jQuery should do the trick:</p>\n\n<p><a href=\"http://abeautifulsite.net/notebook/68\" rel=\"nofollow\">http://abeautifulsite.net/notebook/68</a></p>\n\n<p>EDIT: Sorry, I misread your post. You want to \"preserve\" the middle and right click default capabilities. The script above would let you handle the right click. I am a bit surprised that handling the left click kills off the middle and right clicks. Does that happen in every browser? Or only certain ones?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think the <a href=\"http://plugins.jquery.com/project/biggerlink\" rel=\"nofollow\">biggerlink plugin</a> will do what you ask for. Here's the </p>\n\n<ul>\n<li><a href=\"http://www.ollicle.com/2007/oct/23/jquery%5Flink%5Fplugin.html\" rel=\"nofollow\">article</a>, and</li>\n<li><a href=\"http://www.ollicle.com/eg/jquery/biggerlink/#eg\" rel=\"nofollow\">demo</a> too.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You want this:</p>\n\n<pre><code>$('table#row_link tbody tr').mousedown( function(e){\n\tif(e.ctrlKey || (!$.browser.msie &amp;&amp; e.button == 1) || ($.browser.msie &amp;&amp; e.button == 4)){\n\t\t//middle mouse button or ctrl+click\n\t} else {\n\t\t//normal left click\n\t}\n});\n</code></pre>\n\n<p>This is tested in FF3.0.10, Chrome 1.0 and IE6. I use the mousedown event because neither firefox or IE passes the middle mouse button click to a .click(fn) event.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Unfortunately there is no way to simulate a link and all associated behaviour in every browser. Therefore, the only way to achieve what you want is to have a link that follows the cursor around the <code>&lt;tr&gt;</code> element; this link would be invisible so, to the user, it looks like they're clicking on the <code>&lt;tr&gt;</code> but they're actually clicking on a hidden link. Using this method, the middle-button, ctrl+click and any other behaviours are left intact!</p>\n\n<p>Here's a DEMO: <strong><a href=\"http://jsbin.com/ufugo\">http://jsbin.com/ufugo</a></strong></p>\n\n<p>And here's the code:</p>\n\n<pre><code>$(\"table tr\").each(function(){\n\n    var $link = $('a:first', this).clone(true),\n        dim = {\n            x: [\n                $(this).offset().left,\n                $(this).offset().left + $(this).outerWidth()\n            ],\n            y: [\n                $(this).offset().top,\n                $(this).offset().top + $(this).outerHeight()\n            ]\n        }\n\n    $link\n        .click(function(){\n            $(this).blur();\n        })\n        .css({\n            position: 'absolute',\n            display: 'none',\n            // Opacity:0  means it's invisible\n            opacity: 0\n        })\n        .appendTo('body');\n\n    $(this).mouseover(function(){\n        $link.show();\n    });\n\n    $(document).mousemove(function(e){\n        var y = e.pageY,\n            x = e.pageX;\n        // Check to see if cursor is outside of &lt;tr&gt;\n        // If it is then hide the cloned link (display:none;)\n        if (x &lt; dim.x[0] || x &gt; dim.x[1] || y &lt; dim.y[0] || y &gt; dim.y[1]) {  \n            return $link.hide();\n        }\n        $link.css({\n            top: e.pageY - 5,\n            left: e.pageX - 5\n        })\n    });\n\n});\n</code></pre>\n\n<h2>EDIT: </h2>\n\n<p>I created a jQuery plugin using a slightly better aproach than above: <strong><a href=\"http://james.padolsey.com/javascript/table-rows-as-clickable-anchors/\">http://james.padolsey.com/javascript/table-rows-as-clickable-anchors/</a></strong></p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>You can make a link and let it floting around in your tr, biding to mouveover event, update href and position</p>\n\n<p>create one pixel link</p>\n\n<pre><code>&lt;table id=\"row_link\"&gt;....&lt;/table&gt;\n&lt;a id=\"onepixel\" style=\"position:absolute;z-index:1000;width:1px;height:1px;\"&gt;&lt;/a&gt;\n</code></pre>\n\n<p>update href and position on mouse over</p>\n\n<pre><code>$(\"#row_link tr\").mouseover(\n   function(event){\n      //update href\n      $(\"#onepixel\").attr(\"href\",$(this).find(\"a:first\").attr(\"href\"));\n      //update position, just move to current mouse position\n      $(\"#onepixel\").css(\"top\",event.pageY).css(\"left\",event.pageX);\n   }\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would attack this from the HTML/css side. This used to be a common problem when most sites did all layout in tables.</p>\n\n<p>First make the contents of all table cells into links. If you don't want them to look like links you can use CSS to remove the underline from the 'non link' cells. But they will be links, which is semantically what you want anyway.</p>\n\n<p>Next you want to make the link expand to fill the entire cell. StackOverflow already knows the <a href=\"http://stackoverflow.com/questions/546946/css-make-a-block-element-fill-the-entire-space-of-a-parent-element\">answer to this</a>:</p>\n\n<p><code>td a \n{\n   display: block;\n   width: 100%;\n   height: 100%;\n   line-height: 100%;\n}\n</code></p>\n\n<p>With a typical table with no spaces between the cells the entire row will be clickable. And since this relies on no tricks or browser specific hacks it should work everywhere.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have an HTML table, with a link in the first column.  I want to allow the user to click on anywhere in the row to activate that link.  At the same time I would like to preserve the middle click and ctrl+click functionality of opening a new tab/window.  Here is an example of the table:</p>\n\n<pre><code>&lt;table id=\"row_link\"&gt; \n  &lt;tbody&gt; \n    &lt;tr&gt;\n      &lt;td&gt;&lt;a href=\"link1.html\"&gt;link&lt;/a&gt;&lt;/td&gt; \n      &lt;td&gt;info 1&lt;/td&gt; \n    &lt;/tr&gt;       \n    &lt;tr&gt;\n      &lt;td&gt;&lt;a href=\"link2.html\"&gt;link&lt;/a&gt;&lt;/td&gt; \n      &lt;td&gt;info 2&lt;/td&gt; \n    &lt;/tr&gt;       \n  &lt;/tbody&gt; \n&lt;/table&gt;\n</code></pre>\n\n<p>Using jQuery I can allow the user to left click anywhere in a row:</p>\n\n<pre><code>$(\"table#row_link tbody tr\").click(function () {\n    window.location = $(this).find(\"a:first\").attr(\"href\");\n});\n</code></pre>\n\n<p>This of course disables the standard middle click and ctrl+click functionality of opening a new tab.  Is there a better way to allow users to click on the entire row, while preserving the standard middle click and ctrl+clcik behavior?</p>\n",
            "last_activity_date": 1248505129,
            "question_id": 890743,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "events"
            ],
            "title": "Click Entire Row (preserving middle click and ctrl+click)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"http://code.google.com/p/jquery-barcode/\">JQuery barcode-generator</a> might help.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Other tools that generate other types of barcode:</p>\n\n<ul>\n<li><a href=\"http://www.parkscomputing.com/barcode.html\">EAN-13/UPC-A barcodes in JavaScript</a></li>\n<li><a href=\"http://www.atalasoft.com/products/dotimage/barcode-writer/demo\">Code 39 Barcode Writing in Javascript</a></li>\n<li><a href=\"http://zanstra.com/my/Barcode.html\">Barcode Code 128</a> (a bit buggy, due to invalid CSS, but easy to fix)</li>\n</ul>\n\n<p>I hope this list helps other people too.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p><a href=\"http://barcode-coder.com/en/barcode-jquery-plugin-201.html\">http://barcode-coder.com/en/barcode-jquery-plugin-201.html</a></p>\n",
                    "is_accepted": false,
                    "score": 33
                }
            ],
            "body": "<p>I need to generate a I25 barcode using javascript only. Looking for a good, reliable, cross-browser javascript component.</p>\n",
            "last_activity_date": 1372911872,
            "question_id": 835082,
            "score": 23,
            "tags": [
                "javascript",
                "barcode"
            ],
            "title": "What is the best javascript barcode generator?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>All you did was setting the src attribute so you need to add it to the document for it to work as the attribute is not loaded until the iframe is part of a document.</p>\n\n<p><a href=\"http://jsfiddle.net/9k9Pe/2/\">http://jsfiddle.net/9k9Pe/2/</a></p>\n\n<p>This does it.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Allthough your <code>src = encodeURI</code> should work, I would have gone a different way:</p>\n\n<pre><code>var iframe = document.createElement('iframe');\nvar html = '&lt;body&gt;Foo&lt;/body&gt;';\ndocument.body.appendChild(iframe);\niframe.contentWindow.document.open();\niframe.contentWindow.document.write(html);\niframe.contentWindow.document.close();\n</code></pre>\n\n<p>As this has no x-domain restraints and is completely done via the <code>iframe</code> handle, you may access and manipulate the contents of the frame later on. All you need to make sure of is, that the contents have been rendered, which will (depending on browser type) start during/after the .write command is issued - <em>but</em> not nescessarily done when <code>close()</code> is called.</p>\n\n<p>A 100% compatible way of doing a callback could be this approach:</p>\n\n<pre><code>&lt;html&gt;&lt;body onload=\"parent.myCallbackFunc(this.window)\"&gt;&lt;/html&gt;\n</code></pre>\n\n<p>Iframes has the onload event, however. Here is an approach to access the inner html as DOM (js):</p>\n\n<pre><code>iframe.onload = function() {\n   var div=iframe.contentWindow.document.getElementById('mydiv');\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>There is an alternative for creating an iframe whose contents are a string of HTML: <a href=\"http://bocoup.com/weblog/third-party-javascript-development-future/#iframe-srcdoc\" rel=\"nofollow\">the srcdoc attribute</a>.  This is not supported in older browsers (chief among them: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\" rel=\"nofollow\">Internet Explorer, and possibly Safari</a>?), but there is a <a href=\"https://github.com/jugglinmike/srcdoc-polyfill\" rel=\"nofollow\">polyfill</a> for this behavior, which you could put in conditional comments for IE, or use something like has.js to conditionally lazy load it.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Thanks for your great question, this has caught me out a few times. When using dataURI HTML source, I find that I have to define a complete HTML document.</p>\n\n<p>See below a modified example. </p>\n\n<pre><code>var html = '&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;Foo&lt;/body&gt;&lt;/html&gt;';\nvar iframe = document.createElement('iframe');\niframe.src = 'data:text/html;charset=utf-8,' + encodeURI(html);\n</code></pre>\n\n<p>take note of the html content wrapped with <code>&lt;html&gt;</code> tags and the <code>iframe.src</code> string.</p>\n\n<p>The iframe element needs to be added to the DOM tree to be parsed. </p>\n\n<pre><code>document.body.appendChild(iframe);\n</code></pre>\n\n<p>You will not be able to inspect the <code>iframe.contentDocument</code> unless you <code>disable-web-security</code> on your browser.\nYou'll get a message</p>\n\n<blockquote>\n  <p>DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement': Blocked a frame with origin \"<a href=\"http://localhost:7357\" rel=\"nofollow\">http://localhost:7357</a>\" from accessing a cross-origin frame.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to create an iframe from JavaScript and fill it with arbitrary HTML, like so:</p>\n\n<pre><code>var html = '&lt;body&gt;Foo&lt;/body&gt;';\nvar iframe = document.createElement('iframe');\niframe.src = 'data:text/html;charset=utf-8,' + encodeURI(html);\n</code></pre>\n\n<p>I would expect <code>iframe</code> to then contain a valid window and document. However, this isn't the case:</p>\n\n<blockquote>\n  <p>> console.log(iframe.contentWindow);<br>\n  null</p>\n</blockquote>\n\n<p>Try it for yourself: <a href=\"http://jsfiddle.net/TrevorBurnham/9k9Pe/\">http://jsfiddle.net/TrevorBurnham/9k9Pe/</a></p>\n\n<p>What am I overlooking?</p>\n",
            "last_activity_date": 1425182314,
            "question_id": 10418644,
            "score": 22,
            "tags": [
                "javascript",
                "iframe"
            ],
            "title": "Creating an iframe with given HTML dynamically"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Put the JS file somewhere into the \"js\" folder, and in the XML layout you can include it with:</p>\n\n<pre><code>    &lt;reference name=\"head\"&gt;\n        &lt;action method=\"addJs\"&gt;&lt;script&gt;folder/file.js&lt;/script&gt;&lt;/action&gt;\n    &lt;/reference&gt;\n</code></pre>\n\n<p>Hope that helps.</p>\n\n<p><strong>Edit:</strong> You can also do it in your block:  </p>\n\n<pre><code>    protected function _prepareLayout()\n    {\n        $this-&gt;getLayout()-&gt;getBlock('head')-&gt;addJs('path/from/js/folder/to/your/file.js');\n\n        return parent::_prepareLayout();\n    }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<pre><code>&lt;action method=\"addJs\"&gt;&lt;script&gt;http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js&lt;/script&gt;&lt;/action&gt;\n</code></pre>\n\n<p>It's as simple as that!</p>\n",
                    "is_accepted": false,
                    "score": -6
                },
                {
                    "body": "<p>To add an external JS without any problem use this:</p>\n\n<pre><code>&lt;reference name=\"head\"&gt;\n   &lt;block type=\"core/text\" name=\"google.cdn.jquery\"&gt;\n      &lt;action method=\"setText\"&gt;\n        &lt;text&gt;\n           &lt;![CDATA[&lt;script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\"&gt;jQuery.noConflict();&lt;/script&gt;]]&gt;\n        &lt;/text&gt;\n      &lt;/action&gt;\n   &lt;/block&gt;\n&lt;/reference&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>You can use <a href=\"http://inchoo.net/wp-content/uploads/2011/02/Inchoo_Xternal.zip\">Inchoo_Xternal</a> extension.\nSo you can do something like this:</p>\n\n<pre><code>&lt;layout version=\"0.1.0\"&gt;\n    &lt;default&gt;\n            &lt;reference name=\"head\"&gt;\n                &lt;action method=\"addItem\"&gt;&lt;type&gt;external_css&lt;/type&gt;&lt;name&gt;http://developer.yahoo.com/yui/build/reset/reset.css&lt;/name&gt;&lt;params/&gt;&lt;/action&gt;\n                &lt;action method=\"addItem\"&gt;&lt;type&gt;external_js&lt;/type&gt;&lt;name&gt;http://yui.yahooapis.com/2.8.2r1/build/yahoo-dom-event/yahoo-dom-event.js&lt;/name&gt;&lt;params/&gt;&lt;/action&gt;\n                &lt;action method=\"addExternalItem\"&gt;&lt;type&gt;external_js&lt;/type&gt;&lt;name&gt;http://yui.yahooapis.com/2.8.2r1/build/imageloader/imageloader-min.js&lt;/name&gt;&lt;params/&gt;&lt;/action&gt;\n                &lt;action method=\"addExternalItem\"&gt;&lt;type&gt;external_css&lt;/type&gt;&lt;name&gt;http://yui.yahooapis.com/2.8.2r1/build/fonts/fonts-min.css&lt;/name&gt;&lt;params/&gt;&lt;/action&gt;\n            &lt;/reference&gt;\n    &lt;/default&gt;\n    &lt;catalog_product_view&gt;\n        &lt;reference name=\"head\"&gt;\n                &lt;action method=\"removeItem\"&gt;&lt;type&gt;external_css&lt;/type&gt;&lt;name&gt;http://developer.yahoo.com/yui/build/reset/reset.css&lt;/name&gt;&lt;params/&gt;&lt;/action&gt;\n                &lt;action method=\"removeItem\"&gt;&lt;type&gt;external_js&lt;/type&gt;&lt;name&gt;http://yui.yahooapis.com/2.8.2r1/build/yahoo-dom-event/yahoo-dom-event.js&lt;/name&gt;&lt;params/&gt;&lt;/action&gt;\n                &lt;action method=\"removeExternalItem\"&gt;&lt;type&gt;external_js&lt;/type&gt;&lt;name&gt;http://yui.yahooapis.com/2.8.2r1/build/imageloader/imageloader-min.js&lt;/name&gt;&lt;params/&gt;&lt;/action&gt;\n                &lt;action method=\"removeExternalItem\"&gt;&lt;type&gt;external_css&lt;/type&gt;&lt;name&gt;http://yui.yahooapis.com/2.8.2r1/build/fonts/fonts-min.css&lt;/name&gt;&lt;params/&gt;&lt;/action&gt;\n            &lt;/reference&gt;\n    &lt;/catalog_product_view&gt;\n&lt;/layout&gt;\n</code></pre>\n\n<p><a href=\"http://inchoo.net/ecommerce/magento/how-to-add-external-javascript-css-file-to-magento/\">Here</a> you can find more info about this.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>&lt;block type=\"core/text\" name=\"jquery\"&gt;\n    &lt;action method=\"setText\"&gt;\n        &lt;text&gt;\n            &lt;script src=\"http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js?ver=3.9.2\"&gt;&lt;/script&gt;\n        &lt;/text&gt;\n    &lt;/action&gt;\n&lt;/block&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How to add external JavaScript file to Magento, so it's code would be included on every frontend page?</p>\n",
            "last_activity_date": 1410855598,
            "question_id": 4654822,
            "score": 21,
            "tags": [
                "javascript",
                "magento"
            ],
            "title": "Adding external JavaScript file to Magento"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can use attachEvent(ie8) and addEventListener instead</p>\n\n<pre><code>addEvent(window, 'load', function(){ some_methods_1() });\naddEvent(window, 'load', function(){ some_methods_2() });\n\nfunction addEvent(element, eventName, fn) {\n    if (element.addEventListener)\n        element.addEventListener(eventName, fn, false);\n    else if (element.attachEvent)\n        element.attachEvent('on' + eventName, fn);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>you can also put them in chain like:</p>\n\n<pre><code>&lt;body onload=\"func1(); func2();\"&gt;\n</code></pre>\n\n<p>You can find more good explantions about multiple <code>window.onload</code> on this site:\n<a href=\"http://www.htmlgoodies.com/beyond/javascript/article.php/3724571/Using-Multiple-JavaScript-Onload-Functions.htm\" rel=\"nofollow\">http://www.htmlgoodies.com/beyond/javascript/article.php/3724571/Using-Multiple-JavaScript-Onload-Functions.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are basically two ways</p>\n\n<ol>\n<li><p>store the previous value of <code>window.onload</code> so your code can call a previous handler if present before or after your code executes</p></li>\n<li><p>using the <code>addEventListener</code> approach (that of course Microsoft doesn't like and requires you to use another different name).</p></li>\n</ol>\n\n<p>The second method will give you a bit more safety if another script wants to use <code>window.onload</code> and does it without thinking to cooperation but the main assumption for Javascript is that all the scripts will cooperate like you are trying to do.</p>\n\n<p>Note that a bad script that is not designed to work with other unknown scripts will be always able to break a page for example by messing with prototypes, by contaminating the global namespace or by damaging the dom.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you are using jQuery, you don't have to do anything special. Handlers added via <code>$(document).ready()</code> don't overwrite each other, but rather execute in turn:</p>\n\n<pre><code>$(document).ready(func1)\n...\n$(document).ready(func2)\n</code></pre>\n\n<hr>\n\n<p>If you are not using jQuery, you could use <a href=\"https://developer.mozilla.org/en-US/docs/DOM/element.addEventListener\"><code>addEventListener</code></a>, as demonstrated by Karaxuna, plus <a href=\"http://help.dottoro.com/ljinxrmt.php\"><code>attachEvent</code></a> for IE&lt;9.</p>\n\n<p>Note that <code>onload</code> is not equivalent to <code>$(document).ready()</code> - the former waits for CSS, images... as well, while the latter waits for the DOM tree only. Modern browsers (and IE since IE9) support the <code>DOMContentLoaded</code> event, which corresponds to the jQuery <code>ready</code> event, but IE&lt;9 does not.</p>\n\n<pre><code>if(document.addEventListener){\n  document.addEventListener('load', func1)\n}else{\n  document.attachEvent('onload', func1)\n}\n...\nif(document.addEventListener){\n  document.addEventListener('load', func2)\n}else{\n  document.attachEvent('onload', func2)\n}\n</code></pre>\n\n<hr>\n\n<p>If neither option is available (for example, you are not dealing with DOM nodes), you can still do this (I am using <code>onload</code> as an example, but other options <em>are</em> available for <code>onload</code>):</p>\n\n<pre><code>var oldOnload1=document.onload;\ndocument.onLoad1=function(){\n  oldOnload1 &amp;&amp; oldOnload1();\n  func1();\n}\n...\nvar oldOnload2=document.onload;\ndocument.onLoad2=function(){\n  oldOnload2 &amp;&amp; oldOnload2();\n  func2();\n}\n</code></pre>\n\n<p>or, to avoid polluting the global namespace (and likely encountering namespace collisions), using the import/export IIFE pattern:</p>\n\n<pre><code>document.onLoad=(function(oldLoad){\n  return function(){\n    oldLoad &amp;&amp; oldLoad();\n    func1();\n  }\n})(document.onLoad)\n...\ndocument.onLoad=(function(oldLoad){\n  return function(){\n    oldLoad &amp;&amp; oldLoad();\n    func2();\n  }\n})(document.onLoad)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I'm wondering how to add another method call to the window.onload event once it has already\nbeen assigned a method call.</p>\n\n<p>Suppose somewhere in the script I have this assignment...</p>\n\n<pre><code> window.onload = function(){ some_methods_1() };\n</code></pre>\n\n<p>and then later on in the script I have this assignment</p>\n\n<pre><code> window.onload = function(){ some_methods_2() };\n</code></pre>\n\n<p>As it stands, only <code>some_methods_2</code> will be called. Is there any way to add to the previous <code>window.onload</code> callback without cancelling <code>some_methods_1</code> ? (and also without including both <code>some_methods_1()</code> and <code>some_methods_2()</code> in the same function block). </p>\n\n<p>I guess this question is not really about <code>window.onload</code> but a question about javascript in general. I DON'T want to assign something to <code>window.onload</code> in such a way that that if another developer were to work on the script and add a piece of code that also uses <code>window.onload</code> (without looking at my previous code), he would disable my onload event. </p>\n\n<p>I'm also wondering the same thing about </p>\n\n<pre><code>  $(document).ready()\n</code></pre>\n\n<p>in jquery. \nHow can I add to it without destroying what came before, or what might come after?</p>\n",
            "last_activity_date": 1412780408,
            "question_id": 15564029,
            "score": 20,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "adding to window.onload event?"
        },
        {
            "answer_count": 18,
            "answers": [
                {
                    "body": "<p>JavaScript is unlike most other languages.  While it is Object Oriented, it is weakly typed.  This provides much greater flexibility, but at the same time, limits itself.</p>\n\n<p>Keep a few sites in your pocket:</p>\n\n<p><a href=\"http://www.w3schools.com/JS/default.asp\" rel=\"nofollow\">http://www.w3schools.com/JS/default.asp</a></p>\n\n<p><a href=\"http://javascript.crockford.com/\" rel=\"nofollow\">http://javascript.crockford.com/</a></p>\n\n<p><a href=\"http://www.addedbytes.com/cheat-sheets/javascript-cheat-sheet/\" rel=\"nofollow\">http://www.addedbytes.com/cheat-sheets/javascript-cheat-sheet/</a></p>\n\n<p>One last thing:</p>\n\n<p>Be aware of <a href=\"http://en.wikipedia.org/wiki/Douglas%5FCrockford\" rel=\"nofollow\">Douglas Crockford</a>.  Read his books.  Read anything you can find with his name on it.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>This is a really great read:</p>\n\n<p><a href=\"https://developer.mozilla.org/en/a%5Fre-introduction%5Fto%5Fjavascript\" rel=\"nofollow\">https://developer.mozilla.org/en/a%5Fre-introduction%5Fto%5Fjavascript</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h3>Conquer Level 1 First...The Princess can wait!</h3>\n\n<p>I would just do what is necessary first. Don't bother with the advanced stuff unless it's absolutely necessary. Most of the things you'll use Javascript for are very top-level and superficial. Get the syntax, loops, types, etc all down first. Don't confuse yourself with the more difficult aspects of it until you've conquered level 1.</p>\n\n<h3>Then Move on to Common Solutions to Common Problems</h3>\n\n<p>I would even suggest learning something like <a href=\"http://www.jquery.com\" rel=\"nofollow\">jQuery</a> <em>before</em> trying to learn how to extend prototypes, etc. Make yourself useful immediately by learning the stuff you'll be using frequently, and tackle the difficult stuff at a later date when you've got the time.</p>\n\n<p><img src=\"http://www.smashbros.com/de/images/icon/world%5Fw%5F10.gif\" alt=\"You may start small, and unlearned. But you have great potential!\"></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I would suggest you try to go through following:\n1. Book -Javascripts: the good Parts by douglas Crockford. Make sure you understand the points he raises in the book and try to implement them accordingly.\n2. Do not just try to javascript functions for website validations; as static functions in javascript is the worst thing a developer can do. \n3. Try to implements OOPs concepts in Javascript and see how using functions you can model your objects and their behavior.\n4. I would highly recomment small design patterns problems to be solved in javascript, as that would bring out the understanding of functions and invocation patterns in javascript.</p>\n\n<p>Hope it helps.\nFocus is objects oriented nature of javascript and not just the syntax </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<ol>\n<li>Consider JavaScript as a true\nprogramming language </li>\n<li>Learn the\ndifference between Object-Oriented\nand Prototype-Oriented languages </li>\n<li>Make sure you <strong>understand how\nJavaScript (language) is related to\nDOM (API)</strong> and never mix things up </li>\n<li>Don't jump into \"using jQuery to\nsolve all JavaScript problems\" as\njQuery does not solve any problems\nof JavaScript but rather those of\nDOM</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>It also helps also to install firebug and try out different things in the console.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The same way you become a better programmer/writer:</p>\n\n<h1>Read a lot, write a little. Repeat ad nauseam.</h1>\n\n<p>Also, read this other <a href=\"http://stackoverflow.com/questions/1095682/learning-javascript-should-i-skip-straight-to-the-good-stuff-the-frameworks/1095883#1095883\">related answer</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I'm surpised with the comments here about learning Javascript. Let's not forget - <strong>you don't want to learn it all</strong>! While the language is quite great if used correctly, it has a tainted history and many horrid parts. Luckily, you really only have to listen to a single voice:</p>\n\n<p><strong>Douglas Crockford</strong> also wrote The Good Parts, which is a nice little Javascript book. He does a bunch of stuff at Yahoo! and has materials on their YUI Theater that explain the problem quite well:</p>\n\n<p><a href=\"http://developer.yahoo.com/yui/theater/\" rel=\"nofollow\">http://developer.yahoo.com/yui/theater/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are starting on Javascript, I would recommend you going to <a href=\"http://www.tizag.com/javascriptT/\" rel=\"nofollow\">this website</a>.</p>\n\n<p>However, if you already know bit of javascript, then it all depends on practice. This is the only way i know of that can make you a good programmer. And this apply to just about anything and any programming language. </p>\n\n<p>Try to come up with your ideas and materialize them using Javascript.</p>\n\n<p>How about building your own lightbox?</p>\n\n<p>How about creating your own table filtering/sorting?</p>\n\n<p>And how about all the cool stuff you might have in your mind?</p>\n\n<p>Thanks :)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For beginners w3schools or tizag.com would be more better choice ..</p>\n\n<p>Answer by <a href=\"http://stackoverflow.com/questions/1978637/how-to-become-a-good-javascript-coder/1978661#1978661\">Sergey</a> is completely agreeable to me .. It is a good approach ..</p>\n\n<p>All the best friend .. :-)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think that <a href=\"http://rads.stackoverflow.com/amzn/click/1847194141\" rel=\"nofollow\">Object-Oriented JavaScript</a> by Stoyan Stefanov is an amazing book, but that could just be me. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'd suggest you the definitive guide to the language of your choice!</p>\n\n<p>Please ignore any kind of javascript style kind of programming that may be fashion today.</p>\n\n<p>Just learn the language! Fashions may change, and if you know the language, then you know something that resists, rather then samething that is fashion for some predeterminate time....</p>\n\n<p>For example, <a href=\"http://www.oreilly.com/catalog/9780596101992/\" rel=\"nofollow\">read this book</a>! Take the time, and you will reach the next level ;-)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would suggest finding a javascript framework and learning how to use it.  Then you can see practical applications to how javascript works in real life.  It will give you practical applications, and a much more specific (and larger) set of answers to \"how to I...\" type problems.  </p>\n\n<p>jQuery is a good framework to begin with, YUI and/or Prototype are good if you really want to dig in -- those two are meant for building your own resources, whereas jQuery is more focused on being easily usable.</p>\n\n<p>Modern javascript is heavily about \"prototyping\" javascript to build in new functionality that's not included in its implemented specification.  In other words, it moves beyond the basics of how to code in javascript found in most books and into the realm of \"how to make javascript do more than it was intended to do.\"  But the basics are a must if you intend on prototyping the language.  </p>\n\n<p>If you want to learn javascript purely for servicing clients and making better websites, then it really depends on how you learn.  Personally, I learn more through practical application than just reading and exercises.   If you're the same, then I suggest reading through (not working through) your book and meanwhile do a lot of reading up.  I suggest \"yui vs. prototype vs. jquery\" as a starting Google search.  </p>\n\n<p>Think up a simple project you'd like to do, and then try and implement as many cool javascript features into that project as you can (ajax form submissions, automatically updating graphics based on form selections, image zoom, and animated fade effects some to mind as the most practically useful).</p>\n\n<p>Again, it really depends on what your goals are -- do you want to become a contributor to a framework like jQuery, write plugins, or just know enough to implement functional javascript on a client website and look good on a resume.  If it's the latter -- pick a framework, learn it.  jQuery is the most user-friendly, Prototype is the most functional, YUI is as functional as Prototype, well supported, and a great up-and-comer. </p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>A very good way to learn (not restricted to JavaScript) is to have projects where you need to do something with the language (in your case JavaScript) you haven't done or haven't tried. </p>\n\n<p>I have noticed that I improve a lot when I have a project and have to do something I am not really familiar with or I am not that great at. Last project required the use of web services with php, something I had rarely used, but this made be learn and study and just try to get better, which I did.</p>\n\n<p>So my advice is try to have a project where you have to do something with JavaScript that you have no idea how to to.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<ol>\n<li>Program a lot</li>\n<li>Read <a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\" rel=\"nofollow\">JavaScript: The Good Parts</a></li>\n<li>Use <a href=\"http://www.jslint.com/\" rel=\"nofollow\">JsLint</a>! </li>\n<li>Go to 1</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<ol>\n<li>Start with <strong>Javascript : Definitive\nGuide</strong> . Pay special attention to the 1st\npart core language features</li>\n<li>Check <a href=\"http://en.wikipedia.org/wiki/Douglas%5FCrockford\" rel=\"nofollow\">crocford</a> <a href=\"http://javascript.crockford.com/\" rel=\"nofollow\">blog/site</a> with the reading  of this book</li>\n<li>Now the time is for Javascript:Good parts  </li>\n<li>For More in depth knowledge check the <a href=\"http://www.mozilla.org/js/language/E262-3.pdf\" rel=\"nofollow\">ECMAScript3</a>  and <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\" rel=\"nofollow\">5</a>  refrence </li>\n<li>Finally, try to learn some other prototype based language as well like <strong>self</strong></li>\n</ol>\n\n<p>For DOM API's check other parts of <strong>Javascript : Definitive\n    Guide</strong> and sites of respective browsers </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Like with everything else: <strong>learn and practice</strong>.</p>\n\n<p>How to learn the others already wrote.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You may want to look into major Javascript frameworks such as JQuery and MooTools. Understand the differences between them and pick your favorite. </p>\n\n<p>Here are some links : \n<a href=\"http://jqueryvsmootools.com/\" rel=\"nofollow\">http://jqueryvsmootools.com/</a>\nhttp://blog.creonfx.com/javascript/mootools-vs-jquery-vs-prototype-vs-yui-vs-dojo-comparison-revised</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm a self learner in javascript and I'm currently following the lessons in the book named \"Beginning javascript 3rd edition\" by Paul Wilton.</p>\n\n<p>So far I've advanced myself towards chapter 4: Javascript - An object based language, and I did follow and solve the exercises provided inside the book. I tried to write a calculator myself, and by modifying and changing the code, every time I learn something new to enhance it.</p>\n\n<p>How can I become good in javascript coding? Is there any special approach? Is there any concept or things I should learn first? What kind of study/career path should I follow for javascript? Anything I should be aware of?</p>\n\n<p>I really have the courage to continue learning javascript, I just need some guidance.</p>\n\n<p>I don't mind any expert opinion given, or pointing out any mistakes regarding this question, as I know that through my mistakes, I always learn something.</p>\n",
            "last_activity_date": 1262179597,
            "question_id": 1978637,
            "score": 20,
            "tags": [
                "javascript"
            ],
            "title": "How to become a good javascript coder"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>Maybe this is not the right answer, but take a look anyway, it's awesome :\nyou put some very <strong>clear and simple to read</strong> code on a Java - server and you get a full AJAX /Javascript form.\nJust take a look at the demo <a href=\"http://echo.nextapp.com/site/demo\" rel=\"nofollow\">here</a>.<br />\nI swear it's really, <strong>really</strong> awesome.</p>\n\n<p>Olivier</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I don't think there is anything exactly like what you want out there; probably the closest would be a rich text editor such as FCKEditor or TinyMCE.  These libraries are a bit like the UI you used to write your question in StackOverflow, except that they have toolbar buttons for the different FORM elements (or if they don't, you can easily add them yourselves).</p>\n\n<p>A user faced with one of these editors (assuming you'd configured it to have buttons for FORM elements) would be able to lay out a form with basically no technical knowledge.</p>\n\n<p>However, if a rich text editor doesn't work for you, then you're basically stuck with using something like the jQuery UI library (I'm thinking mainly of the Draggable sub-library) to build your own solution.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There was a google Summer Of Code project last year that built a drag and drop form editor using the Dojo Javascript toolkit.  Its not !00% complete in terms of the functionality I'm guessing you would want.</p>\n\n<p>It does dump a javascript object representing the form which you can convert to JSON to send over the wire.  </p>\n\n<p>Depending on your javascript skillset it should give you a headstart on the problem.</p>\n\n<p>The demo is here:\n<a href=\"http://jbalogh.dojotoolkit.org/dojo-svn/release/dojo/soc/test.html\" rel=\"nofollow\">http://jbalogh.dojotoolkit.org/dojo-svn/release/dojo/soc/test.html</a></p>\n\n<p>Blog posts by the person working on it:\n<a href=\"http://www.dojotoolkit.org/blog/jbalogh\" rel=\"nofollow\">http://www.dojotoolkit.org/blog/jbalogh</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It depends on if you're ready to program it yourself.  How dynamic do you want it? A simple form builder shouldn't be too hard to program using <a href=\"http://code.google.com/webtoolkit/overview.html\" rel=\"nofollow\">GWT</a>, <a href=\"http://www.dojotoolkit.org/\" rel=\"nofollow\">Dojo</a> or <a href=\"http://www.prototypejs.org/\" rel=\"nofollow\">your-favorite-js-library</a> if you want to go that route. I'd recommend GWT because it's really fun, simple to use and takes care of the incompatibilities between browsers.</p>\n\n<p>Here are some thoughts for possible inputs to each form/question:</p>\n\n<ul>\n<li>Single line (for names etc)</li>\n<li>RichTextArea (similar to FCKEditor)</li>\n<li>Calendar date/time</li>\n<li>Multiple choices (checkbox)</li>\n<li>Single choices (list selector)</li>\n</ul>\n\n<p>Each input needs a corresponding question, or a label. These need to be handled in your Model in Django, and represented as such in the forms view (and the editor). </p>\n\n<p>I recommend you check out <a href=\"http://groups.google.com/group/Google-Web-Toolkit/browse%5Fthread/thread/a3c335df1a78a097/b05dcb72aad0166d?lnk=gst&amp;q=gwt%2Bdjango#b05dcb72aad0166d\" rel=\"nofollow\">how to embed a GWT application into existing templates/html</a> and how you can <a href=\"http://groups.google.com/group/Google-Web-Toolkit/browse%5Fthread/thread/ebf9e4857f0db7a2/eb393866cad61384?lnk=gst&amp;q=hannson#eb393866cad61384\" rel=\"nofollow\">communicate between django and GWT using json</a></p>\n\n<p>Hope this helps,</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you dont mind spending a bit of cash you can look at:</p>\n\n<p>Machforms : <a href=\"http://www.appnitro.com/\">http://www.appnitro.com/</a></p>\n\n<p>The form builder itself is entirely client side JS, so you would just need to post the output (which is JSON) to django instead of their php script.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>I would recommend the awesome <a href=\"http://www.extjs.com\" rel=\"nofollow\">ExtJS framework</a> to build such kind of application.\nHere's an example.</p>\n\n<p><a href=\"http://tof2k.com/ext/formbuilder/\" rel=\"nofollow\">ext/formbuilder</a></p>\n\n<p>Add a form panel, then drop a textbox and so on...dead simple.\nExt JS 2.2 and 3.0 (not yet ready) are LGPL and GPL licensed, you have also commercial subscriptions available, I think it worth to have a look at it.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here are some:</p>\n\n<p><a href=\"http://code.google.com/p/jquery-form-builder-plugin/\">http://code.google.com/p/jquery-form-builder-plugin/</a></p>\n\n<p><a href=\"https://github.com/stas/jquery.formbuilder\">https://github.com/stas/jquery.formbuilder</a></p>\n\n<p>you could also look at:</p>\n\n<p><a href=\"http://wordpress.org/extend/plugins/visual-form-builder/\">http://wordpress.org/extend/plugins/visual-form-builder/</a></p>\n\n<p><a href=\"http://wordpress.org/extend/plugins/formbuilder/\">http://wordpress.org/extend/plugins/formbuilder/</a></p>\n\n<p><a href=\"http://wordpress.org/extend/plugins/form/\">http://wordpress.org/extend/plugins/form/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I have the same requirement,</p>\n\n<p>I will update this answer over time but bootstrap form builder ( PHP ) seems nice</p>\n\n<p><a href=\"https://github.com/minikomi/Bootstrap-Form-Builder\" rel=\"nofollow\">https://github.com/minikomi/Bootstrap-Form-Builder</a>\ndemo : <a href=\"http://minikomi.github.io/Bootstrap-Form-Builder/\" rel=\"nofollow\">http://minikomi.github.io/Bootstrap-Form-Builder/</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p><a href=\"https://github.com/knipknap/SpiffForm\" rel=\"nofollow\">SpiffForm</a> is similar to Appnitro, but free (AGPL), perhaps it fits your needs.</p>\n\n<p>Patches welcome :-). (I am the author.)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A new JS library that's just popped up might be what you are looking for: <a href=\"http://dobtco.github.io/formbuilder/\" rel=\"nofollow\">http://dobtco.github.io/formbuilder/</a></p>\n\n<p>Project page: <a href=\"https://github.com/dobtco/formbuilder\" rel=\"nofollow\">https://github.com/dobtco/formbuilder</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I you are using JSF you could use this formbuilder component:</p>\n\n<p><a href=\"http://code.google.com/p/jsf-form-builder/\" rel=\"nofollow\">http://code.google.com/p/jsf-form-builder/</a></p>\n\n<p>A demo is available here:</p>\n\n<p><a href=\"http://www.reppe-itsolutions.at/jsf-form-builder/\" rel=\"nofollow\">http://www.reppe-itsolutions.at/jsf-form-builder/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Not sure about the Django piece since I haven't worked with that yet, but you may want to look into AlpacaJS: <a href=\"http://www.alpacajs.org/\" rel=\"nofollow\">http://www.alpacajs.org/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm looking to integrate a form builder into a site I'm using, but I'm hoping to find a library that has some or most of the functionality I'm looking for.</p>\n\n<p>I'm looking for a library that will give me a nice GUI for building the form, and a JSON (or XML, or similar) output that I can play with in the <code>django</code> backend.  I'm planning to use <code>django</code> to output the finished form.</p>\n\n<p>I tried running this through Google, but that only yields companies who make a business out of creating and hosting the forms online.  But nothing in the form of a library.</p>\n\n<p>Any suggestions?</p>\n",
            "last_activity_date": 1410589509,
            "question_id": 879414,
            "score": 18,
            "tags": [
                "javascript",
                "javascript-library",
                "javascript-framework"
            ],
            "title": "Suggestions for a JavaScript form builder?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I would suggest you try this jQuery plugin <a href=\"http://projects.erikzaadi.com/jQueryPlugins/jQuery.printElement/\" rel=\"nofollow\">print element</a></p>\n\n<p>It can let you just print the element you selected.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h2>Another solution</h2>\n\n<p>Here is a new solution based on <a href=\"http://stackoverflow.com/a/2618980/603003\">Bennett McElwee answer</a> in the <a href=\"http://stackoverflow.com/users/24181/greg\">same question</a> as mentioned below.</p>\n\n<p>Tested with IE 9 &amp; 10, Opera 12.01, Google Chrome 22 and Firefox 15.0. <br />\n<a href=\"http://jsfiddle.net/95ezN/3/\">jsFiddle example</a></p>\n\n<h3>1.) Add this CSS to your site:</h3>\n\n<pre class=\"lang-css prettyprint-override\"><code>@media screen {\n  #printSection {\n      display: none;\n  }\n}\n\n@media print {\n  body * {\n    visibility:hidden;\n  }\n  #printSection, #printSection * {\n    visibility:visible;\n  }\n  #printSection {\n    position:absolute;\n    left:0;\n    top:0;\n  }\n}\n</code></pre>\n\n<h3>2.) Add my JavaScript function</h3>\n\n<pre class=\"lang-js prettyprint-override\"><code>function printElement(elem, append, delimiter) {\n    var domClone = elem.cloneNode(true);\n\n    var $printSection = document.getElementById(\"printSection\");\n\n    if (!$printSection) {\n        var $printSection = document.createElement(\"div\");\n        $printSection.id = \"printSection\";\n        document.body.appendChild($printSection);\n    }\n\n    if (append !== true) {\n        $printSection.innerHTML = \"\";\n    }\n\n    else if (append === true) {\n        if (typeof (delimiter) === \"string\") {\n            $printSection.innerHTML += delimiter;\n        }\n        else if (typeof (delimiter) === \"object\") {\n            $printSection.appendChlid(delimiter);\n        }\n    }\n\n    $printSection.appendChild(domClone);\n}\u200b\n</code></pre>\n\n<p>You're ready to print any element on your site!\n<br />\nJust call <code>printElement()</code> with your element(s) and execute <code>window.print()</code> when you're finished.</p>\n\n<p><strong>Note:</strong>\nIf you want to modify the content before it is printed (and only in the print version), checkout this example (provided by waspina in the comments): <a href=\"http://jsfiddle.net/95ezN/121/\">http://jsfiddle.net/95ezN/121/</a></p>\n\n<p>One could also use CSS in order to show the additional content in the print version (and only there).</p>\n\n<hr />\n\n<h2>Former solution</h2>\n\n<p>I think, you have to hide all other parts of the site via CSS.</p>\n\n<p>It would be the best, to move all non-printable content into a separate <code>DIV</code>:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;body&gt;\n  &lt;div class=\"non-printable\"&gt;\n    &lt;!-- ... --&gt;\n  &lt;/div&gt;\n\n  &lt;div class=\"printable\"&gt;\n    &lt;!-- Modal dialog comes here --&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>And then in your CSS:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.printable { display: none; }\n\n@media print\n{\n    .non-printable { display: none; }\n    .printable { display: block; }\n}\n</code></pre>\n\n<p>Credits go to <a href=\"http://stackoverflow.com/users/24181/greg\">Greg</a> who has already answered a similar question: <a href=\"http://stackoverflow.com/questions/468881/print-div-id-printarea-div-only\">Print &lt;div id=printarea&gt;&lt;/div&gt; only?</a></p>\n\n<p>I see <strong>one problem in using JavaScript</strong>: the user cannot see a preview - at least in Internet Explorer!</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>With the currently accepted solution you cannot print the page which contains the dialog itself anymore. Here's a much more dynamic solution:</p>\n\n<p>JavaScript:</p>\n\n<pre><code>$().ready(function () {\n    $('.modal.printable').on('shown.bs.modal', function () {\n        $('.modal-dialog', this).addClass('focused');\n        $('body').addClass('modalprinter');\n\n        if ($(this).hasClass('autoprint')) {\n            window.print();\n        }\n    }).on('hidden.bs.modal', function () {\n        $('.modal-dialog', this).removeClass('focused');\n        $('body').removeClass('modalprinter');\n    });\n});\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>@media print {\n    body.modalprinter * {\n        visibility: hidden;\n    }\n\n    body.modalprinter .modal-dialog.focused {\n        position: absolute;\n        padding: 0;\n        margin: 0;\n        left: 0;\n        top: 0;\n    }\n\n    body.modalprinter .modal-dialog.focused .modal-content {\n        border-width: 0;\n    }\n\n    body.modalprinter .modal-dialog.focused .modal-content .modal-header .modal-title,\n    body.modalprinter .modal-dialog.focused .modal-content .modal-body,\n    body.modalprinter .modal-dialog.focused .modal-content .modal-body * {\n        visibility: visible;\n    }\n\n    body.modalprinter .modal-dialog.focused .modal-content .modal-header,\n    body.modalprinter .modal-dialog.focused .modal-content .modal-body {\n        padding: 0;\n    }\n\n    body.modalprinter .modal-dialog.focused .modal-content .modal-header .modal-title {\n        margin-bottom: 20px;\n    }\n}\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>&lt;div class=\"modal fade printable autoprint\"&gt;\n  &lt;div class=\"modal-dialog\"&gt;\n    &lt;div class=\"modal-content\"&gt;\n      &lt;div class=\"modal-header\"&gt;\n        &lt;button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"&gt;&amp;times;&lt;/button&gt;\n        &lt;h4 class=\"modal-title\"&gt;Modal title&lt;/h4&gt;\n      &lt;/div&gt;\n      &lt;div class=\"modal-body\"&gt;\n        &lt;p&gt;One fine body&amp;hellip;&lt;/p&gt;\n      &lt;/div&gt;\n      &lt;div class=\"modal-footer\"&gt;\n        &lt;button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"&gt;Close&lt;/button&gt;\n        &lt;button type=\"button\" class=\"btn btn-primary\" onclick=\"window.print();\"&gt;Print&lt;/button&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;&lt;!-- /.modal-content --&gt;\n  &lt;/div&gt;&lt;!-- /.modal-dialog --&gt;\n&lt;/div&gt;&lt;!-- /.modal --&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I just use a bit of jQuery/javascript:</p>\n\n<p>html:</p>\n\n<pre><code>&lt;h1&gt;Don't Print&lt;/h1&gt;\n\n&lt;a data-target=\"#myModal\" role=\"button\" class=\"btn\" data-toggle=\"modal\"&gt;Launch modal&lt;/a&gt;\n\n&lt;div class=\"modal fade hide\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"      aria-hidden=\"true\"&gt;\n  &lt;div class=\"modal-header\"&gt;\n    &lt;button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"&gt;\u00d7&lt;/button&gt;\n     &lt;h3 id=\"myModalLabel\"&gt;Modal to print&lt;/h3&gt;\n  &lt;/div&gt;\n  &lt;div class=\"modal-body\"&gt;\n    &lt;p&gt;Print Me&lt;/p&gt;\n  &lt;/div&gt;\n  &lt;div class=\"modal-footer\"&gt;\n    &lt;button class=\"btn\" data-dismiss=\"modal\" aria-hidden=\"true\"&gt;Close&lt;/button&gt;\n    &lt;button class=\"btn btn-primary\" id=\"printButton\"&gt;Print&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>js:</p>\n\n<pre><code>$('#printButton').on('click', function () {\nif ($('.modal').is(':visible')) {\n    var modalId = $(event.target).closest('.modal').attr('id');\n    $('body').css('visibility', 'hidden');\n    $(\"#\" + modalId).css('visibility', 'visible');\n    $('#' + modalId).removeClass('modal');\n    window.print();\n    $('body').css('visibility', 'visible');\n    $('#' + modalId).addClass('modal');\n} else {\n    window.print();\n}\n</code></pre>\n\n<p>});</p>\n\n<p>here is <a href=\"http://jsfiddle.net/alexoviedo999/hmjefdhL/2/\" rel=\"nofollow\">the fiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm developing a site using Bootstrap which has 28 modal windows with information on different products. I want to be able to print the information in an open modal window. Each window has an <code>id</code>. </p>\n\n<pre><code>&lt;!-- firecell panel &amp; radio hub --&gt;\n           &lt;div class=\"modal hide fade\" id=\"fcpanelhub\"&gt;\n              &lt;div class=\"modal-header\"&gt;\n                &lt;button type=\"button\" class=\"close\" data-dismiss=\"modal\"&gt;X&lt;/button&gt;\n                &lt;h3&gt;5000 Control Panel &amp; Radio Hub&lt;/h3&gt;\n              &lt;/div&gt;\n              &lt;div class=\"modal-body\"&gt;\n                &lt;img src=\"../site/img/firecell/firecell-panel-info-1.png\" alt=\"\"/&gt;&lt;hr/&gt;\n                &lt;img src=\"../site/img/firecell/firecell-panel-info-2.png\" alt=\"\"/&gt;&lt;hr/&gt;\n                &lt;img src=\"../site/img/firecell/firecell-radio-hub-info-1.png\" alt=\"\"/&gt;&lt;hr/&gt;\n                &lt;img src=\"../site/img/firecell/firecell-radio-hub-info-2.png\" alt=\"\"/&gt;\n              &lt;/div&gt;\n              &lt;div class=\"modal-footer\"&gt;\n                &lt;a href=\"#\" class=\"btn\" data-dismiss=\"modal\"&gt;Close&lt;/a&gt;\n              &lt;/div&gt;    \n           &lt;/div&gt;\n</code></pre>\n\n<p>So if I add in a new button in <code>modal-footer</code> - 'print', and it's clicked I want that modal to print. Would I be right in saying javascript would be used? If so, how do I tell javascript to print only the open modal, and not the others?</p>\n\n<p>All help appreciated.</p>\n",
            "last_activity_date": 1415132124,
            "question_id": 12181760,
            "score": 14,
            "tags": [
                "javascript",
                "printing",
                "twitter-bootstrap",
                "modal-dialog"
            ],
            "title": "Twitter Bootstrap: Print content of modal window"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>In a shared area:</p>\n\n<pre><code>function getSearchUsers(query) {\n    var re = new RegExp(query, \"i\");\n    return Users.find({name: {$regex: re}});\n}\n\nfunction getFriendUsers() {\n    return Users.find({friend: true});  // or however you want this to work\n}\n</code></pre>\n\n<p>On the server:</p>\n\n<pre><code>Meteor.publish(\"searchUsers\", getSearchUsers);\nMeteor.publish(\"friendUsers\", getFriendUsers);\n</code></pre>\n\n<p>On the client:</p>\n\n<pre><code>Deps.autorun(function () {\n    Meteor.subscribe(\"searchUsers\", Session.get(\"searchQuery\"));\n});\nMeteor.subscribe(\"friendUsers\");\n\nTemplate.search.searchResults = function () {\n    return getSearchUsers(Session.get(\"searchQuery\"));\n};\n\nTemplate.friends.results = function () {\n    return getFriendUsers();\n};\n</code></pre>\n\n<p>The key takeaway from this is that what happens behind the scenes when the data\nis getting transferred over the wire isn't obvious. Meteor appears to <em>combine</em>\nthe records that were matched in the various queries on the server and send this\ndown to the client. It's then up the client to run the same query again to split\nthem apart.</p>\n\n<p>For example, say you have 20 records in a server-side collection. You then have\ntwo publishes: the first matches 5 records, the second matches 6, of which 2 are\nthe same. Meteor will send down 9 records. On the client, you then run the exact\nsame queries you performed on the server and you should end up with 5 and 6\nrecords respectively.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>I'm a little bit late to the party, but there is a way to actually have separate collections on the client for subsets of one server collection.\nIn this example i have a server collection called <code>entities</code> which holds information about <code>polygons</code>and <code>rectangles</code>.<br>\nShared code (lib folder):</p>\n\n<pre><code>// main collection (in this example only needed on the server\nEntities = new Meteor.Collection('entities');\n// partial collections\nRectEntities = new Mongo.Collection('rectEntities');\nPolyEntities = new Mongo.Collection('polyEntities');\n</code></pre>\n\n<p>Client code:</p>\n\n<pre><code>// this will fill your collections with entries from the Entities collection\nMeteor.subscribe('rectEntities');\nMeteor.subscribe('polyEntities');\n</code></pre>\n\n<p>Remember that the name of the subscription needs to match the name of the publication (but not the name of the collection itself)<br>\nServer code:</p>\n\n<pre><code>Meteor.publish('rectEntities', function(){\n    Mongo.Collection._publishCursor( Entities.find({shapeType: 'rectangle'}), this, 'rectEntities'); \n    this.ready();\n});\n\nMeteor.publish('polyEntities', function(){\n    Mongo.Collection._publishCursor( Entities.find({shapeType: 'polygon'}), this, 'polyEntities'); \n    this.ready();\n});\n</code></pre>\n\n<p>Thanks to user728291 for the much simpler solution using <code>_publishCursor()</code>!<br>\nThe third argument of the <code>_publishCursor()</code> function is the name of your new collection.<br>\nSource: <a href=\"http://docs.meteor.com/#/full/publish_added\" rel=\"nofollow\">http://docs.meteor.com/#/full/publish_added</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Using Meteor, I'm wondering how best to handle different client-side collections that share the same server-side database collection.  Consider the following example: I have a <code>User</code> collection, and on my client-side I have a <em>list of users that are friends</em> and I have a search feature that performs a query on the entire users database, returning a <em>list of usernames that match the query</em>. </p>\n\n<p>On the Publish server-side method, I have two queries against the same collection that return different sets of documents. Should this data go into two separate collections on the client-side? Or should all of the User documents that match both queries end up in the same collection? If the latter, would I then duplicate code used for both the server-side and client-side query? </p>\n\n<p>On the server: </p>\n\n<pre><code>Meteor.publish('searchResults', function(query){\n  var re = new RegExp(query, 'i')\n  return Users.find({ 'name' : {$regex: re}})\n})\n</code></pre>\n\n<p>On the client: </p>\n\n<pre><code>Session.set('searchQuery', null)\n\nMeteor.autosubscribe(function(){\n  Meteor.subscribe('searchResults', Session.get('searchQuery'))\n})\n\nTemplate.search.events = {\n  'keyup #user-search' : function(e){\n    Session.set('searchQuery', e.target.value)\n  }\n}\n\n_.extend(Template.search, {\n\n  searchResults: function() {\n    var re = new RegExp(Session.get('searchQuery'), 'i')\n    return Users.find({ 'name' : {$regex: re}})\n  }\n})\n</code></pre>\n\n<p>This seems like a plausible solution, but not an optimal one. What if I wanted to create a new client-side collection that consisted of search results from multiple server-side Collections? </p>\n",
            "last_activity_date": 1418900903,
            "question_id": 12223866,
            "score": 12,
            "tags": [
                "javascript",
                "mongodb",
                "meteor"
            ],
            "title": "Meteor publish/subscribe strategies for unique client-side collections"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Try using the <a href=\"http://jqueryui.com/demos/sortable/#method-serialize\">serialize</a> function which gives you a hash of the list of items in order.</p>\n\n<p>If you just need the item that the new item go dropped before you can do this:</p>\n\n<pre><code>$(\"#pages\").sortable({\n    opacity: 0.6,\n    update: function(event, ui) {\n        var first = ui.item; // First element to swap\n        var second = ui.item.prev();\n        swapOnServer(first, second);\n    }\n});\n</code></pre>\n\n<p>second will be null if its at the start of the list.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>There's not really a \"second\" item per se. You have an item, and you are simply placing it in another location. The items around it adjust their positions accordingly. If you want to get an array of all the items, you can use the <a href=\"http://jqueryui.com/demos/sortable/#method-toArray\">toArray</a> method.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>take a look at the \"Swapable\" jQuery plugin:</p>\n\n<p><a href=\"http://plugins.jquery.com/project/Swapable\">http://plugins.jquery.com/project/Swapable</a></p>\n\n<p>It similar to \"Sortable\", but only two elements of the selected group are affected: dragged element and dropped one which are swapped. All other elements stay at their current positions. This plugin is built based on existing \"Sortable\" jQuery plugin and inherits all sortable options.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can use <a href=\"http://plugins.jquery.com/project/Swapable\" rel=\"nofollow\">http://plugins.jquery.com/project/Swapable</a></p>\n\n<p>but this is not too good plugin</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use <code>draggable</code> and <code>droppable</code> instead of <code>sortable</code> to achieve <strong>swappable</strong> effect. In practise, this will look like this:</p>\n\n<pre><code>(function() {\n    var droppableParent;\n\n    $('ul .element').draggable({\n        revert: 'invalid',\n        revertDuration: 200,\n        start: function () {\n            droppableParent = $(this).parent();\n\n            $(this).addClass('being-dragged');\n        },\n        stop: function () {\n            $(this).removeClass('being-dragged');\n        }\n    });\n\n    $('ul li').droppable({\n        hoverClass: 'drop-hover',\n        drop: function (event, ui) {\n            var draggable = $(ui.draggable[0]),\n                draggableOffset = draggable.offset(),\n                container = $(event.target),\n                containerOffset = container.offset();\n\n            $('.element', event.target).appendTo(droppableParent).css({opacity: 0}).animate({opacity: 1}, 200);\n\n            draggable.appendTo(container).css({left: draggableOffset.left - containerOffset.left, top: draggableOffset.top - containerOffset.top}).animate({left: 0, top: 0}, 200);\n        }\n    });\n} ());\n</code></pre>\n\n<p>Demo, <a href=\"http://jsfiddle.net/FZ42C/1/\" rel=\"nofollow\">http://jsfiddle.net/FZ42C/1/</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I cannot find out how to obtain destination element with jQuery UI sortable.</p>\n\n<pre><code>    $(\"#pages\").sortable({\n        opacity: 0.6,\n        update: function(event, ui) {\n            var first = ui.item; // First element to swap\n            var second = ???? // Second element to swap\n            swapOnServer(first, second);\n        }\n    });\n</code></pre>\n\n<p>All the options I've tried point to the element being dragged, but not the one it is swapped with: <code>ui.item[0]</code>, <code>event.srcElement</code>, <code>event.toElement</code>.</p>\n\n<p>Additionally, <code>this</code> points to the LIST (OL) element.</p>\n\n<p>Saying <strong>second</strong> I mean following:</p>\n\n<p>Original order is:</p>\n\n<blockquote>\n  <p>| 0 | <strong>1</strong> | 2 | <strong>3</strong> |</p>\n</blockquote>\n\n<p>We drag element 1 and drop it in position 3. Which will end up with:</p>\n\n<blockquote>\n  <p>| 0 | <strong>3</strong> | 2 | <strong>1</strong> |</p>\n</blockquote>\n\n<p>So the first element is 1 and the second is 3 (WRONG! See below).</p>\n\n<p><strong>UPDATE: I have realised that I got it wrong.</strong> The new order in this case will be.</p>\n\n<blockquote>\n  <p>| 0 | 2 | 3 | <strong>1</strong> |</p>\n</blockquote>\n\n<p><strong>As a result my question does not really makes sense. Thanks everybody for the help. I'll mark vote and mark an answer.</strong></p>\n\n<p>So the question is how to obtain the second element here?</p>\n\n<hr>\n\n<p>THE CURRENT WORKAROUND (as there is no term as <em>swapping</em> in sortable) is below. It uses temporary array with orders.</p>\n\n<pre><code>    var prevPagesOrder = [];\n    $(\"#pages\").sortable({\n        start: function(event, ui) {\n            prevPagesOrder = $(this).sortable('toArray');\n        },\n        update: function(event, ui) {\n            var currentOrder = $(this).sortable('toArray');\n            var first = ui.item[0].id;\n            var second = currentOrder[prevPagesOrder.indexOf(first)];\n            swapOnServer(first, second);\n        }\n    });\n</code></pre>\n\n<p>Thanks,<br>\nDmitriy.</p>\n",
            "last_activity_date": 1378154388,
            "question_id": 2263687,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "sortable",
                "jquery-ui-sortable"
            ],
            "title": "jQuery sortable obtain 2 elements being swapped"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>jquery has a syntax for executing javascript after document has loaded:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\njQuery(function(){\n\n//your function implementation here...\n\n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://api.jquery.com/load-event/\" rel=\"nofollow\">check out</a> jquery load() event, it waits for everything including graphics</p>\n\n<pre><code>$(window).load(function () {\n  // run code\n});\n</code></pre>\n\n<p>on load you could then load the images using:</p>\n\n<pre><code>var image = new Image();\nimage.src = \"/path/to/huge/file.jpg\";\n</code></pre>\n\n<p>You can add a function onload to the image too</p>\n\n<pre><code>image.onload = function() {\n  ...\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In addition to Xhalent's answer, use the .append() function in jQuery to add them to the DOM:</p>\n\n<p>Your HTML would just have:</p>\n\n<pre><code>&lt;div id=\"slider\"&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>And then your jquery would be:</p>\n\n<pre><code>jQuery(function(){\n    $(\"#slider\").append('&lt;img src=\"images/slide1.jpg\" alt=\"\" /&gt;');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here's what we did and its working great. We skipped setting <code>src</code> attribute of <code>img</code> and added img-location to a fake attribute <code>lsrc</code>. Then we load a dynamic image with <code>lsrc</code> value, and set the <code>src</code> of actual image only after its loaded.</p>\n\n<p>Its not about faster loading, but its about showing the images only when its downloaded completely on your page, so that user do not have to see that annoying half-loaded images. A placeholder-image can be used while the actual images are being loaded.</p>\n\n<p>Here's the code.</p>\n\n<pre><code> $(function(){\n    $.each(document.images, function(){\n               var this_image = this;\n               var src = $(this_image).attr('src') || '' ;\n               if(!src.length &gt; 0){\n                   //this_image.src = options.loading; // show loading\n                   var lsrc = $(this_image).attr('lsrc') || '' ;\n                   if(lsrc.length &gt; 0){\n                       var img = new Image();\n                       img.src = lsrc;\n                       $(img).load(function() {\n                           this_image.src = this.src;\n                       });\n                   }\n               }\n           });\n  });\n</code></pre>\n\n<p>Edit: Trick is to set the <code>src</code> attribute only when that source is loaded in temporary img. <code>$(img).load(fn);</code> handles that. </p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>Check this link</p>\n\n<p><a href=\"http://aadhir.com/?p=12\" rel=\"nofollow\">http://aadhir.com/?p=12</a> This plugin loads images / background url after the DOM load event and window load event are triggered.</p>\n\n<p>Initially the src attribute of the img tag will be set to empty. And the html should contain a data attribute which will contain the image path. The plugin will take care of the rest of things.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>hey guys,\ni have a very complex page with a lot of scripts and a rather long loading time. On top of that page I want to implement the jquery Nivo Slider (http://nivo.dev7studios.com/).</p>\n\n<p>In the documentation it says I have to list all images for the slider inside of a div#slider</p>\n\n<pre><code>&lt;div id=\"slider\"&gt;\n    &lt;img src=\"images/slide1.jpg\" alt=\"\" /&gt;\n    &lt;a href=\"http://dev7studios.com\"&gt;&lt;img src=\"images/slide2.jpg\" alt=\"\" title=\"#htmlcaption\" /&gt;&lt;/a&gt;\n    &lt;img src=\"images/slide3.jpg\" alt=\"\" title=\"This is an example of a caption\" /&gt;\n    &lt;img src=\"images/slide4.jpg\" alt=\"\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>However I might have 10 images with a 1000x400px which is quite big. Those images would load when the page loads. Since they are in my header this might take quite a while.</p>\n\n<p>I looking for a way to use any jquery Slider Plugin (like the nivo slider) but either dynamically load images or load all those images after everything else on my page has loaded. </p>\n\n<p>Any idea how I could solve that?</p>\n\n<p>Is there even a way to start a javascript process after everything else on the page has loaded? If there is a way I might have an solution for my problem (using the jquery ajax load() method) ... However I have no idea how to wait for everything else to load and then start the slider with all the images.</p>\n",
            "last_activity_date": 1358683706,
            "question_id": 5402680,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "image",
                "loading"
            ],
            "title": "jQuery, JavaScript, HTML: how to load images after everything else is loaded?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It is an HTML5 data attribute that automatically hooks up the element to the type of widget it is. </p>\n\n<p>Some Examples:</p>\n\n<pre><code>data-toggle=\"modal\"\ndata-toggle=\"collapse\"\ndata-toggle=\"dropdown\"\ndata-toggle=\"tab\"\n</code></pre>\n\n<p>Go through the <a href=\"http://getbootstrap.com/javascript\">JavaScript docs</a> and search for data-toggle and you will see it used in the code examples. </p>\n\n<p>One working example:</p>\n\n<pre><code>&lt;div class=\"dropdown\"&gt;\n  &lt;a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\"&gt;Dropdown trigger&lt;/a&gt;\n  &lt;ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dLabel\"&gt;\n    &lt;li&gt;&lt;a href=\"#\"&gt;Item&lt;/a&gt;\n  &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 78
                },
                {
                    "body": "<p>It is a Bootstrap defined HTML5 data attribute. It binds a button to an event.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The presence of this data-attribute tells Bootstrap to switch between visual or a logical states of another element on user interaction.</p>\n\n<p>It is used to show modals, tab content, tooltips and popover menus as well as setting a pressed-state for a toggle-button. It is used in multiple ways without a clear documentation.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Any attribute that starts with <code>data-</code> is the prefix for custom attributes used for some specific purpose (that purpose depends on the application). It was added as a semantic remedy to people's heavy use of <code>rel</code> and other attributes for purposes other than their original intended purposes (<code>rel</code> was often used to hold data for things like advanced tooltips).</p>\n\n<p>In the case of Bootstrap, I'm not familiar with its inner workings, but judging from the name, I'd guess it's a hook to allow toggling of the visibility or perhaps a mode of the element it's attached to (such as the collapsable side bar <a href=\"http://octopress.org/\">on Octopress.org</a>).</p>\n\n<p><a href=\"http://html5doctor.com/html5-custom-data-attributes/\">html5doctor has a good article on the data- attribute</a>. </p>\n\n<p><a href=\"http://jquery.malsup.com/cycle2/\">Cycle 2 is another example of extensive use of the data- attribute</a>.</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>From the <a href=\"http://getbootstrap.com/javascript/\">Bootstrap Docs:</a></p>\n\n<pre><code>&lt;!--Activate a modal without writing JavaScript. Set data-toggle=\"modal\" on a \ncontroller element, like a button, along with a data-target=\"#foo\" or href=\"#foo\" \nto target a specific modal to toggle.--&gt;\n\n&lt;button type=\"button\" data-toggle=\"modal\" data-target=\"#myModal\"&gt;Launch modal&lt;/button&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>For example, say you were creating a web application to list and display recipes. You might want your customers to be able to sort the list, display features of the recipes, and so on before they choose the recipe to open. In order to do this, you need to associate things like cooking time, primary ingredient, meal position, and so on right inside the list elements for the recipes. </p>\n\n<pre><code>href=\"recipe1.html\"&gt;Borscht&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"recipe2.html\"&gt;Chocolate Mousse&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"recipe3.html\"&gt;Almond Radiccio Salad&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"recipe4.html\"&gt;Deviled Eggs&lt;/a&gt;&lt;/li&gt;\n</code></pre>\n\n<p>In order to get that information into the page, you could do many different things. You could add comments to each LI element, you could add rel attributes to the list items, you could place all the recipes in separate folders based on time, meal, and ingredient (i.e. ). The solution that most developers took was to use class attributes to store information about the current element. This has several advantages:</p>\n\n<pre><code>You can store multiple classes on an element\nThe class names can be human readable\nIt\u2019s easy to access classes with JavaScript (className)\nThe class is associated with the element it\u2019s on\n</code></pre>\n\n<p>But there are some major drawbacks to this method:</p>\n\n<pre><code>You have to remember what the classes do. If you forget or a new developer takes over the project, the classes might be removed or changed without realizing that that affects how the application runs.\nClasses are also used for styling with CSS, and you might duplicate CSS classes with data classes by mistake, ending up with strange styles on your live pages.\nIt\u2019s more difficult to add on multiple data elements.\nIf you have multiple data elements, you need to access them in some way with your JavaScript, either by the name of the class or the position in the class list. But it\u2019s easy to mess up.\n</code></pre>\n\n<p>All the other methods I suggested had these problems as well as others. But since it was the only way to quickly and easily include data, that\u2019s what we did.\nHTML5 Data Attributes to the Rescue</p>\n\n<p>HTML5 added a new type of attribute to any element\u2014the custom data element (data-*). These are custom (denoted by the *) attributes that you can add to your HTML elements to define any type of data you want. They consist of two parts:</p>\n\n<p>Attribute Name\nThis is the name of the attribute. It must be at least one lowercase character and have the prefix data-. For example: data-main-ingredient, data-cooking-time, data-meal. This is the name of your data.</p>\n\n<p>Attribute Vaule\nLike any other HTML attribute, you include the data itself in quotes separated by an equal sign. This data can be any string that is valid on a web page. For example: data-main-ingredient=\"chocolate\".</p>\n\n<p>You can then apply these data attributes to any HTML element you want. For example, you could define the information in the example list above:</p>\n\n<pre><code>&lt;li data-main-ingredient=\"beets\" data-cooking-time=\"1 hour\" data-meal=\"dinner\"&gt;&lt;a href=\"recipe1.html\"&gt;Borscht&lt;/a&gt;&lt;/li&gt;\n&lt;li data-main-ingredient=\"chocolate\" data-cooking-time=\"30 minutes\" data-meal=\"dessert\"&gt;&lt;a href=\"recipe2.html\"&gt;Chocolate Mousse&lt;/a&gt;&lt;/li&gt;\n&lt;li data-main-ingredient=\"radiccio\" data-cooking-time=\"20 minutes\" data-meal=\"dinner\"&gt;&lt;a href=\"recipe1.html\"&gt;Almond Radiccio Salad&lt;/a&gt;&lt;/li&gt;\n&lt;li data-main-ingredient=\"eggs\" data-cooking-time=\"15 minutes\" data-meal=\"appetizer\"&gt;&lt;a href=\"recipe1.html\"&gt;Deviled Eggs&lt;/a&gt;&lt;/li&gt;\n</code></pre>\n\n<p>Once you have that information in your HTML, you will be able to access it with JavaScript and manipulate the page based on that data. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What does <code>data-toggle</code> attributes do in Twitter Bootstrap? I couldn't find an answer in Boostrap API.</p>\n\n<p>I have seen a similar question before as well, <a href=\"http://stackoverflow.com/questions/10481684/where-does-data-toggle-attribute-of-bootstrap-framework-come-from\">link</a>.\nBut it didn't help me much.</p>\n",
            "last_activity_date": 1424118935,
            "question_id": 15113537,
            "score": 84,
            "tags": [
                "javascript",
                "jquery",
                "html5",
                "twitter-bootstrap"
            ],
            "title": "The data-toggle attributes in Twitter Bootstrap"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Sure:</p>\n\n<pre><code>&lt;head&gt;\n    &lt;script src=\"jquery-1.3.2.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        $(function() {\n            $(\"#myTextBox\").focus();\n        });\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;input type=\"text\" id=\"myTextBox\"&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>HTML:</p>\n\n<pre><code>  &lt;input id=\"search\" size=\"10\" /&gt;\n</code></pre>\n\n<p>jQuery:</p>\n\n<pre><code>$(\"#search\").focus();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Set focus on the first text field:</p>\n\n<pre><code> $(\"input:text:visible:first\").focus();\n</code></pre>\n\n<p>This also does the first text field, but you can change the [0] to another index:</p>\n\n<pre><code>$('input[@type=\"text\"]')[0].focus();\n</code></pre>\n\n<p>Or, you can use the ID:</p>\n\n<pre><code>$(\"#someTextBox\").focus();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 117
                },
                {
                    "body": "<p>Think about your user interface before you do this. I assume (though none of the answers has said so) that you'll be doing this when the document loads using jQuery's <code>ready()</code> function. If a user has already focussed on a different element before the document has loaded (which is perfectly possible) then it's extremely irritating for them to have the focus stolen away.</p>\n\n<p>You could check for this by adding <code>onfocus</code> attributes in each of your <code>&lt;input&gt;</code> elements to record whether the user has already focussed on a form field and then not stealing the focus if they have:</p>\n\n<pre><code>var anyFieldReceivedFocus = false;\n\nfunction fieldReceivedFocus() {\n    anyFieldReceivedFocus = true;\n}\n\nfunction focusFirstField() {\n    if (!anyFieldReceivedFocus) {\n        // Do jQuery focus stuff\n    }\n}\n\n\n&lt;input type=\"text\" onfocus=\"fieldReceivedFocus()\" name=\"one\"&gt;\n&lt;input type=\"text\" onfocus=\"fieldReceivedFocus()\" name=\"two\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Sorry for bumping an old question. I found this via google.</p>\n\n<p>Its also worth noting that its possible to use more than one selector, thus you can target any form element, and not just one specific type.</p>\n\n<p>eg.</p>\n\n<pre><code>$('#myform input,#myform textarea').first().focus();\n</code></pre>\n\n<p>This will focus the first input or textarea it finds, and of course you can add other selectors into the mix as well.  Hnady if you can't be certain of a specific element type being first, or if you want something a bit general/reusable.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>place after input</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;document.formname.inputname.focus();&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Why is everybody using jQuery for something simple as this.  </p>\n\n<pre><code>&lt;body OnLoad=\"document.myform.mytextfield.focus();\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This is what I prefer to use:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function () {\n        $(\"#fieldID\").focus(); \n    });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I know it has been several years. But I just found this </p>\n\n<p>You dont even need jQuery </p>\n\n<pre><code>&lt;input type=\"text\" name=\"some_field\" autofocus&gt;\n</code></pre>\n\n<p>Note this will not work on IE9 and lower</p>\n\n<p><a href=\"http://www.w3schools.com/tags/att_input_autofocus.asp\" rel=\"nofollow\">http://www.w3schools.com/tags/att_input_autofocus.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>This is probably very simple, but could somebody tell me how to get the cursor blinking on a text box on page load?</p>\n",
            "last_activity_date": 1413158311,
            "question_id": 1591910,
            "score": 67,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "focus"
            ],
            "title": "How to focus on a form input text field on page load using jQuery?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You should use <code>ko.utils.unwrapObservable</code> in cases where you don't know if you have been given an observable or not.  This would commonly be in a custom binding where an observable or non-observable could be bound against it.</p>\n\n<p>In the code that you have above, the call to <code>valueAccessor()</code> is not actually unwrapping an observable.  It is just retrieving the value that was passed to the binding in the correct context (it gets wrapped in a function to protect it).  The return value of <code>valueAccessor()</code> may be an observable or not.  It is whatever was passed to the binding.</p>\n",
                    "is_accepted": true,
                    "score": 89
                },
                {
                    "body": "<p>The earlier answer is correct, but often I pass in functions to custom bindings (a function that checks permissions, or determines what to do based on something else, etc). What I really needed was to unwrap any function, even if it's not an observable.</p>\n\n<p>The following recursively unwraps EVERYTHING:</p>\n\n<pre><code>ko.utils.unwrapFunction = function (func) {\n    if (typeof func != 'function') {\n        return func;\n    }\n    else {\n        return ko.utils.unwrapFunction(func());\n    }\n};\n</code></pre>\n\n<p>Here is an example of a simple custom binding I wrote:</p>\n\n<pre><code>//replaces single and double 'smart' quotes users commonly paste in from word into textareas and textboxes with normal text equivalents\n//USAGE:\n//data-bind=\"replaceWordChars:true\n//also works with valueUpdate:'keyup' if you want\"\n\nko.bindingHandlers.replaceWordChars = {\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel) {\n        var bindingValue = ko.utils.unwrapFunction(valueAccessor);\n\n        if (bindingValue) {\n            $(element).val(removeMSWordChars(allBindingsAccessor().value())); //update DOM - not sure why I should need to do this, but just updating viewModel doesn't always update DOM correctly for me\n            allBindingsAccessor().value($(element).val()); //update viewModel\n        }\n    }\n}\n</code></pre>\n\n<p>This way bindingValue always contains a value. I don't need to worry about if I passed in a function, an observable, a value, or a even a function inside an observable. This will properly unwrap everything until it gets at the object I want.</p>\n\n<p>Hope that helps someone.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I've written a few custom bindings using KnockoutJS. I'm still unsure when to use <code>ko.util.unwrapObservable(item)</code> Looking at the code, that call basically checks to see if <code>item</code> is an observable. If it is, return the value(), if it's not, just return the value. Looking at the section on Knockout about creating custom bindings, they have the following syntax:</p>\n\n<pre><code>var value = valueAccessor(), allBindings = allBindingsAccessor();\nvar valueUnwrapped = ko.utils.unwrapObservable(value);\n</code></pre>\n\n<p>In this case, they invoke the observable via <code>()</code> but then also call <code>ko.utils.unwrapObservable</code>. I'm just trying to get a handle on when to use one vs. the other or if I should just always follow the above pattern and use both.</p>\n",
            "last_activity_date": 1332536643,
            "question_id": 9624401,
            "score": 65,
            "tags": [
                "javascript",
                "knockout.js"
            ],
            "title": "When to use ko.utils.unwrapObservable?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>After looking at <a href=\"http://stackoverflow.com/questions/14193463/an-event-is-interfering-with-select2-plugins-ajax-retrieved-results\">another answer</a> it would seem I need to also pass id field with every call, otherwise it will disable the input.</p>\n\n<p>Sample code that fixed it:</p>\n\n<pre><code>$('.select2').select2({\n  placeholder: \"Policy Name\",\n  minimumInputLength: 3,\n  multiple: false,\n  quietMillis: 100,\n  id: function(bond){ return bond._id; },\n  ajax: {\n    url: \"http://localhost:3000/search\",\n    dataType: 'json',\n    type: 'POST',\n    data: function(term, page) {\n      return {\n        search: term,\n        page: page || 1\n      }\n    },\n    results: function(bond, page) {\n      return {results: bond.results, more: (bond.results &amp;&amp; bond.results.length == 10 ? true: false)}\n    }\n  },\n  formatResult: formatResult,\n  formatSelection: formatSelection,\n  initSelection: initSelection\n})\n</code></pre>\n\n<h1>Edit</h1>\n\n<p>Since this keeps getting upvoted I'll elaborate a bit.  The .select2() method expects a unique <code>id</code> field on all results.  Thankfully, there's a workaround.  The <code>id</code> option accepts a function like this:</p>\n\n<pre><code>function( &lt;INDIVIDUAL_RESULT&gt; ) {\n  // Expects you to return a unique identifier.\n  // Ideally this should be from the results of the $.ajax() call. \n}\n</code></pre>\n\n<p>Since my unique identifier was <code>&lt;RESULT&gt;._id</code>, I simply <code>return &lt;RESULT&gt;._id;</code></p>\n",
                    "is_accepted": true,
                    "score": 100
                },
                {
                    "body": "<p>Also be careful with the case. I was using <code>Id</code> but select2 expects <code>id</code>. Could save someone's time.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Ok, I'm sure there's something simple set wrong here but I'm not 100% what it is.</p>\n\n<p>So I am trying to use <a href=\"http://ivaynberg.github.com/select2/\">Select2</a> AJAX method as a way of users to search a database and select a result.  The call itself is coming back with results, however it will not allow me to select the answer from the list.  It also doesn't seem to allow you to \"select\" it on hover or up/ down arrow.  So without further ado, here is my code:</p>\n\n<h3>index.html</h3>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js\"&gt;&lt;/script&gt;\n        &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"select2/select2.css\" media=\"screen\" /&gt;\n        &lt;script src=\"select2/select2.js\"&gt;&lt;/script&gt;\n        &lt;script src=\"select.js\"&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;input type=\"text\" style=\"width: 500px\" class=\"select2\"&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<h3>select.js</h3>\n\n<pre><code>jQuery(function() {\n\n  var formatSelection = function(bond) {\n    console.log(bond)\n    return bond.name\n  }\n\n  var formatResult = function(bond) {\n    return '&lt;div class=\"select2-user-result\"&gt;' + bond.name + '&lt;/div&gt;'\n  }\n\n  var initSelection = function(elem, cb) {\n    console.log(elem)\n    return elem\n  }\n\n    $('.select2').select2({\n      placeholder: \"Policy Name\",\n      minimumInputLength: 3,\n      multiple: false,\n      quietMillis: 100,\n      ajax: {\n        url: \"http://localhost:3000/search\",\n        dataType: 'json',\n        type: 'POST',\n        data: function(term, page) {\n          return {\n            search: term,\n            page: page || 1\n          }\n        },\n        results: function(bond, page) {\n          return {results: bond.results, more: (bond.results &amp;&amp; bond.results.length == 10 ? true: false)}\n        }\n      },\n      formatResult: formatResult,\n      formatSelection: formatSelection,\n      initSelection: initSelection\n    })\n})\n</code></pre>\n\n<h3>JSON Response</h3>\n\n<pre><code>{\n  error: null,\n  results: [\n    {\n      name: 'Some Name',\n      _id: 'Some Id'\n    },\n    {\n      name: 'Some Name',\n      _id: 'Some Id'\n    }\n  ]\n}\n</code></pre>\n\n<p>Everything seems to pull in correctly, however I am unable to actually select the answer and have it input into the box.  Is there a problem somewhere in my code?</p>\n",
            "last_activity_date": 1426001826,
            "question_id": 14819865,
            "score": 48,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "ajax",
                "jquery-select2"
            ],
            "title": "Select2 Ajax Method Not Selecting"
        },
        {
            "answer_count": 23,
            "answers": [
                {
                    "body": "<p>Try removing all CSS margins from all the elements.  Usually jerky animation comes from margins not being taken into account by the animation framework.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You could write a custom animation using the animate method.  This will give you absolute control over all details.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You might try adding a doctype if you don't have one, it worked for me on IE8 after I found the suggestion here on SO: <a href=\"http://stackoverflow.com/questions/166299/jquery-slidetoggle-jumps-around\">jQuery slideToggle jumps around</a>.  He suggests a strict DTD but I just used the doctype that google.com uses: <code>&lt;!doctype html&gt;</code> and it fixed my problem.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You just have to modify the up, down effects in effects.js to have them take into account margins or paddings that may exist and then adjust what they perceive to be the total size of the element to accommodate those values...something along these lines....</p>\n\n<pre><code>Effect.BlindDown = function(element) {\n  element = $(element);\n  var elementDimensions = element.getDimensions();\n\n//below*\n  var paddingtop = parseInt(element.getStyle('padding-top'));\n  var paddingbottom = parseInt(element.getStyle('padding-bottom'));\n  var totalPadding = paddingtop + paddingbottom;\n\n  if(totalPadding &gt; 0)\n  {\n   elementDimensions.height = (elementDimensions.height - totalPadding);\n  }\n//above*\n\n  return new Effect.Scale(element, 100, Object.extend({\n    scaleContent: false,\n    scaleX: false,\n    scaleFrom: 0,\n    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},\n    restoreAfterFinish: true,\n    afterSetup: function(effect) {\n      effect.element.makeClipping().setStyle({height: '0px'}).show();\n    },\n    afterFinishInternal: function(effect) {\n      effect.element.undoClipping();\n    }\n  }, arguments[1] || { }));\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The solution is that sliding div must have the width set in pixels. Do not use 'auto' nor '%'. And you will have great result! The problem is in inline elements thats are in a sliding div. Example:\n<a href=\"http://s001.radikal.ru/i196/1001/ad/13634de2c8a2.jpg\" rel=\"nofollow\">look here</a></p>\n\n<p>but if they have width in px the height will be identical. Try it. </p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>I noticed if you have a <code>&lt;br /&gt;</code> after your container <code>&lt;div&gt;</code> the animation will also be jumpy. Removing this resolved my problem.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>i came across the same bug took days to find a solution. the problem is when the element is hidden jquery is getting the wrong height. top fix it you must get the hight before hiding and use a custom animation to that height. its tricky go <a href=\"http://jqueryfordesigners.com/slidedown-animation-jump-revisited/\" rel=\"nofollow\">here for a better explanation</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had the same problem with 'jerkyness' with divs inside my nav tag - my aim is to show an unordered list on hover of the div (if one exists). My lists are dynamically created so they do not have a fixed value.</p>\n\n<p>Heres the fix:</p>\n\n<pre><code>$(\"nav div\").hover(\n  function() { // i.e. onmouseover function\n\n    /****simple lines to fix a % based height to a px based height****/\n    var h = jQuery(this).find(\"ul\").height(); //find the height\n    jQuery(this).find(\"ul\").css(\"height\", h); \n                         //set the css height value to this fixed value\n    /*****************************************************************/\n\n    jQuery(this).find(\"ul\").slideDown(\"500\");\n  },\n  function(){ // i.e. onmouseout function\n    jQuery(this).find(\"ul\").slideUp(\"500\");\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found what works consistently is setting an invisible 1px border:</p>\n\n<p><code>border: 1px solid transparent;</code></p>\n\n<p>No need to fix the width or height or anything else and the animation doesn't jump. Hooray!</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p><a href=\"http://www.bennadel.com/blog/2263-Use-jQuery-s-SlideDown-With-Fixed-Width-Elements-To-Prevent-Jumping.htm\" rel=\"nofollow\">Here</a> is an in-depth explanation, why jQuery slide sometimes is jumpy and why this can be solved by using fixed-width-elements. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try setting the 'position' property of the the container (in this case the .notice div) to 'relative'.</p>\n\n<p>Worked for me.\nSource: <a href=\"http://stackoverflow.com/questions/2327952/slidetoggle-height-is-jumping\">slideToggle height is &quot;jumping&quot;</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In my case I solved it adding <code>style=\"white-space:nowrap;\"</code> to the element to prevent miscalculations on the jQuery function; no need to set a fixed width unless you need to wrap.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Make sure you don't have CSS transition rules set globally or on your container or any included elements. It will also cause jerkiness.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've ran into this problem today. I did notice however that disabling all CSS fixed the problem. Also I knew it worked fine before so it must have been recent changes that caused the issue.</p>\n\n<p><strong>It turned out I used transitions in CSS to ease in and out of hovers</strong>.</p>\n\n<p>Once these transitions were removed from the elements I was adding everything was fine.</p>\n\n<p>So if you have the same issue, just add these lines to the elements you're adding:</p>\n\n<pre><code>-webkit-transition: none;\n-moz-transition: none;\n-o-transition: none;\n-ms-transition: none;\ntransition: none;\n</code></pre>\n\n<p>(I might have abused transitions a bit by not just adding them to the elements I want to have transitions for, but using them for the entire website.)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Ran into this issue today, saw this question, and started tinkering based on what I saw here.  I solved our jumpy issue by removing the position:relative from the CSS of the containing div.  No more weirdness after that.  My 2 cents.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I find animate() is the most reliable way to animate anything in jQuery (cross browser at least).</p>\n\n<p>This dynamically wraps the content in a div, then animates the height of that div wrapper by using the height of its inner content.</p>\n\n<p><a href=\"http://jsfiddle.net/BmWjy/13/\" rel=\"nofollow\">http://jsfiddle.net/BmWjy/13/</a></p>\n\n<pre><code>$('a').click(function(event) {\n        event.preventDefault();\n        xToggleHeight($(this).next());\n});\n\n//For each collapsible element.\n$('.collapsible').each(function() {\n        //Wrap a div around and set to hidden.\n        $(this).wrap('&lt;div style=\"height:0;overflow:hidden;visibility:hidden;\"/&gt;');\n});\n\nfunction xToggleHeight(el){\n        //Get the height of the content including any margins.\n        var contentHeight = el.children('.collapsible').outerHeight(true);\n        //If the element is currently expanded.\n        if(el.hasClass(\"expanded\")){\n                //Collapse\n                el.removeClass(\"expanded\")\n                        .stop().animate({height:0},5000,\n                        function(){\n                                //on collapse complete\n                                //Set to hidden so content is invisible.\n                                $(this).css({'overflow':'hidden', 'visibility':'hidden'});\n                        }\n                );\n        }else{\n                //Expand\n                el.addClass(\"expanded\").css({'overflow':'', 'visibility':'visible'})\n                        .stop().animate({height: contentHeight},5000,\n                        function(){\n                                //on expanded complete\n                                //Set height to auto incase browser/content is resized afterwards.\n                                $(this).css('height','');\n                        }\n                );\n        }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There are a lot of suggestions here and a lot of back and forth as to what works.   For me, the behavior problem was when the animation of expanding the container would over expand and then bounce back to the correct expansion height (all done as part of the one animation).  In way of example, the animation would expand to a height of 500px initially and then retract to 450px.  There was no problem with collapse.</p>\n\n<p>The solution that worked was to add to the expanding/collapsing div, a CSS of:\n   white-space:  nowrap;</p>\n\n<p>That worked perfectly - smooth expansion to the correct height.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>css padding and jquery slideToggle doesn't work well together. Try to box out padding.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I was using <code>slideDown()</code> like this </p>\n\n<pre><code>$('#content').hide().delay(500).slideDown(500); \n</code></pre>\n\n<p>For me, it was the main container <code>#content</code> element.  I was having it hidden and then calling <code>slideDown()</code>.  I removed the <code>padding</code> property in the CSS and everything worked fine after that.  It's usually a margin, padding, or % width, so the easiest method is commenting out each property and testing them 1 by 1 to get your results.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are obviously a lot of different solutions to this issue - and depending on your layout, different solutions have different results.</p>\n\n<p>Here was what I had (stripped down)</p>\n\n<pre><code>&lt;div&gt;\n   &lt;p&gt;Text&lt;/p&gt;\n&lt;/div&gt;\n&lt;div class=\"hidden\"&gt;\n   &lt;p&gt;&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>When I would use jQuery to show <code>&lt;div class=\"hidden\"&gt;</code>, the margin on the <code>&lt;p&gt;</code> element would collapse with the margin of the <code>&lt;p&gt;</code> element above it.</p>\n\n<p>I thought it was strange since they were in different <code>&lt;divs&gt;</code>.</p>\n\n<p>My solution was to eliminate the margin on the bottom of the <code>&lt;p&gt;</code>.  Having a margin on one side prevents the margin from the bottom of the first <code>&lt;p&gt;</code> from collapsing with the top of the second <code>&lt;p&gt;</code>.</p>\n\n<p>This workaround solved my problem, can probably be applied to others, but may not work for all.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had the same issue, but not a single one of the proposed solutions worked for me, so I propose a solution that eliminates relying on <code>slideToggle()</code> altogether.</p>\n\n<p><strong><em>Spark Notes</em></strong>: Load the page as normal, collect the height of each element you want to toggle, store that height in a special data attribute, and then collapse each element. Then it's as easy as changing the <code>max-height</code> between the value in the element's <code>data-height</code> attribute(expanded) and zero(collapsed). If you want to add extra padding and margins, etc to the elements, I recommend storing those in a separate CSS class to add and remove with the max-height property.</p>\n\n<p>Place the jQuery right after the elements you want to toggle and allow them to execute during page load (so you don't have to watch them all load and then collapse).</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;ul id=\"foo\"&gt;\n   &lt;li&gt;\n      &lt;h2&gt;Click Me 1&lt;/h2&gt;\n      &lt;div class=\"bar\"&gt;Content To Toggle Here 1&lt;/div&gt;\n   &lt;/li&gt;\n   &lt;li&gt;\n      &lt;h2&gt;Click Me 2&lt;/h2&gt;\n      &lt;div class=\"bar\"&gt;Content To Toggle Here 2&lt;/div&gt;\n   &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>#foo&gt;li&gt;div.bar {transition: all 0.5s;\n   overflow: hidden;}\n</code></pre>\n\n<p><strong>jQuery</strong></p>\n\n<pre><code>$('#foo h2').each(function(){\n   var bar = $(this).siblings('.bar');\n   bar.attr('data-height', bar.height()); //figure out the height first\n   bar.css('max-height', '0px'); //then close vertically\n});\n$('#foo h2').click(function(){\n   var bar = $(this).siblings('.bar');\n   if ( bar .css('max-height') == '0px' ){ //if closed (then open)\n      bar.css('max-height', bar.data('height') + 'px');\n   } else { //must be open (so close)\n      bar.css('max-height', '0px');\n   }\n});\n</code></pre>\n\n<p><strong>Here is a working JSFiddle</strong>: <a href=\"http://jsfiddle.net/baacke/9WtvU/\" rel=\"nofollow\">http://jsfiddle.net/baacke/9WtvU/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The problem is that you are performing the action on the parent, doing this removes the CSS related to that element.</p>\n\n<p>You need to run the slide on your note1, not the parent of note 1.</p>\n\n<p>I had the same issue and fixed it by moving down a level.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had the same issue. I fixed it by adding this:</p>\n\n<p><code>.delay(100)</code></p>\n\n<p>Guess giving it more time to think helps it along?</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I tried to slide in and out a DIV with the toggle function of jQuery but the result is always jumpy at the start and/or end of the animation. Here's the js code that I use:</p>\n\n<pre><code>$(document).ready(function(){\n    $('#link1').click(\n        function() {\n            $('#note_1').parent().slideToggle(5000);\n        }\n);\n</code></pre>\n\n<p>And the HTML:</p>\n\n<pre><code>&lt;div class=\"notice\"&gt;\n    &lt;p&gt;Here's some text. And more text. &lt;span id=\"link1\"&gt;Test1&lt;/span&gt;&lt;/p&gt;\n    &lt;div class=\"wrapper\"&gt;\n        &lt;div id=\"note_1\"&gt;\n            &lt;p&gt;Some content&lt;/p&gt;\n            &lt;p&gt;More blalba&lt;/p&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>You can also see the complete example here: <a href=\"http://www.teknozen.net/jquery_slide.html\">jQuery Slide test</a></p>\n\n<p>I usually use Mootools and I can do this slide without any problems with it. But I'm starting a new project in Django and most app in Django use jQuery. So for that and after reading this <a href=\"http://jqueryvsmootools.com/\">jQuery vs Mootools</a> I decided that will be a good occasion to start using jQuery. So my first need was to slide this DIV. And it didn't work properly.</p>\n\n<p>I did more search and I found that's an old bug in jQuery with margin and padding applied to the DIV. The solution is to wrap the DIV in another DIV. It didn't fix the thing in my case.</p>\n\n<p>Searching further I found this post <a href=\"http://jqueryfordesigners.com/slidedown-animation-jump-revisited/\">Slidedown animation jumprevisited</a>. It fix a jump at one end but not at the other (<em>Test2</em> in <a href=\"http://www.teknozen.net/jquery_slide.html\">jQuery Slide test</a>).</p>\n\n<p>On Stack Overflow I found this <a href=\"http://stackoverflow.com/questions/909955/jquery-ie-jerky-slide-animation\">jQuery IE jerky slide animation</a>. In the comments I saw that the problem is with the P tag inside the DIV. If I replace the P tags with DIV tags that fix the problem but that's not a proper solution.</p>\n\n<p>Lastly I found this <a href=\"http://stackoverflow.com/questions/664260/weird-jquery-behavior-slide\">Weird jQuery behavior slide</a>. Reading it I understood that the problem resolved by switching from P tag to DIV was with the margins of the P (not present in the DIV) and the collapsing of margins between elements. So if I switch the margins to paddings it fix the problem. But I loose the collapsing behavior of margins, collapsing that I want.</p>\n\n<p>Honestly I can say that my first experience with jQuery is not really good. If I want to use one of the simplest effect in jQuery I have to not use the proper function (slideToggle) but instead use some hand made code AND wrap the DIV in another DIV AND switch margins to paddings, messing my layout.</p>\n\n<p>Did I miss a simpler solution ?</p>\n\n<p>As krdluzni suggest, I tried to write as custom script with the animate method. Here's my code:</p>\n\n<pre><code>var $div = $('#note_2').parent();\nvar height = $div.height();\n\n$('#link2').click(\n    function () {\n        if ( $div.height() &gt; 0 ) {\n            $div.animate({ height: 0 }, { duration: 5000 }).css('overflow', 'hidden');\n        } else {\n            $div.animate({ height : height }, { duration: 5000 });\n        }\n\n        return false;\n});\n</code></pre>\n\n<p>But that doesn't work either because jQuery always set the overflow to visible at the end of the animation. So the DIV is reapearing at the end of the animation but overlaid on the rest of the content.</p>\n\n<p>I tried also with UI.Slide (and Scale and Size). It works but the content below the DIV doesn't move with the animation. It only jump at the end/start of the animation to fill the gap. I don't want that. </p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>One part of the solution is to set the height of the container DIV dynamically before anything. This solve one jumping. But not the one cause by collapsing margin. Here's the code:</p>\n\n<pre><code>var parent_div = $(\"#note_1\").parent();\nparent_div.css(\"height\", parent_div.height()+\"px\");\nparent_div.hide();\n</code></pre>\n\n<p><strong>SECOND UPDATE:</strong></p>\n\n<p>You can see the bug on the jQuery own site at this page (Example B):\n<a href=\"http://docs.jquery.com/Tutorials%3ALive_Examples_of_jQuery\">Tutorials:Live Examples of jQuery</a></p>\n\n<p><strong>THIRD UPDATE:</strong></p>\n\n<p>Tried with jQuery 1.4, no more chance :-(</p>\n",
            "last_activity_date": 1425145578,
            "question_id": 1335461,
            "score": 45,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery slide is jumpy"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>You should look into <a href=\"http://requirejs.org/\">require.js</a> or <a href=\"http://headjs.com/\">head.js</a> for this.</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>You can create elements to the DOM, which loads items.</p>\n\n<p>Like such:</p>\n\n<pre><code>var myScript = document.createElement('script'); // Create new script element\nmyScript.type = 'text/javascript'; // Set appropriate type\nmyScript.src = './js/myclass.js'; // Load javascript file\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Take a look at <a href=\"http://requirejs.org/\">requirejs</a> project.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Some answers already - but I would like to point you to YUI3 and its on-demand module loading. It works on both server (node.js) and client, too - I have a demo website using the exact same JS code running on either client or server to build the pages, but that's another topic.</p>\n\n<p>YUI3: <a href=\"http://developer.yahoo.com/yui/3/\" rel=\"nofollow\">http://developer.yahoo.com/yui/3/</a></p>\n\n<p>Videos: <a href=\"http://developer.yahoo.com/yui/theater/\" rel=\"nofollow\">http://developer.yahoo.com/yui/theater/</a></p>\n\n<p>Example:</p>\n\n<p>(precondition: the basic YUI3 functions in 7k yui.js have been loaded)</p>\n\n<pre><code>YUI({\n    //configuration for the loader\n}).use('node','io','own-app-module1', function (Y) {\n    //sandboxed application code\n    //...\n\n    //If you already have a \"Y\" instance you can use that instead\n    //of creating a new (sandbox) Y:\n    //  Y.use('moduleX','moduleY', function (Y) {\n    //  });\n    //difference to YUI().use(): uses the existing \"Y\"-sandbox\n}\n</code></pre>\n\n<p>This code loads the YUI3 modules \"node\" and \"io\", and the module \"own-app-module1\", and then the callback function is run. A new sandbox \"Y\" with all the YUI3 and own-app-module1 functions is created. Nothing appears in the global namespace. The loading of the modules (.js files) is handled by the YUI3 loader. It also uses (optional, not show here) configuration to select a -debug or -min(ified) version of the modules to load.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here's a light weight way to use require and exports in your web client.  It's a simple wrapper that creates a \"namespace\" global variable, and you wrap your CommonJS compatible code in a \"define\" function like this:</p>\n\n<pre><code>namespace.lookup('org.mydomain.mymodule').define(function (exports, require) {\n    var extern = require('org.other.module');\n    exports.foo = function foo() { ... };\n});\n</code></pre>\n\n<p>More docs here:</p>\n\n<p><a href=\"https://github.com/mckoss/namespace\" rel=\"nofollow\">https://github.com/mckoss/namespace</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've been using browserify for that. It also lets me integrate Node.js modules into my client-side code. I blogged about it here: <a href=\"http://numbers.brighterplanet.com/2011/08/04/add-node-js-commonjs-style-require-to-client-side-javascript-with-browserify/\">http://numbers.brighterplanet.com/2011/08/04/add-node-js-commonjs-style-require-to-client-side-javascript-with-browserify/</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I asked myself the very same questions. When I looked into it I found the choices overwhelming. </p>\n\n<p>Fortunately I found this excellent spreadsheet that helps you choice the best loader based on your requirements:</p>\n\n<p><a href=\"https://spreadsheets.google.com/lv?key=tDdcrv9wNQRCNCRCflWxhYQ\" rel=\"nofollow\">https://spreadsheets.google.com/lv?key=tDdcrv9wNQRCNCRCflWxhYQ</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you want to have Node.js style <code>require</code> you can use something like this:</p>\n\n<pre><code>var require = (function () {\n    var cache = {};\n    function loadScript(url) {\n        var xhr = new XMLHttpRequest(),\n            fnBody;\n        xhr.open('get', url, false);\n        xhr.send();\n        if (xhr.status === 200 &amp;&amp; xhr.getResponseHeader('Content-Type') === 'application/x-javascript') {\n            fnBody = 'var exports = {};\\n' + xhr.responseText + '\\nreturn exports;';\n            cache[url] = (new Function(fnBody)).call({});\n        }\n    }\n    function resolve(module) {\n        //TODO resolve urls\n        return module;\n    }\n    function require(module) {\n        var url = resolve(module);\n        if (!Object.prototype.hasOwnProperty.call(cache, url)) {\n            loadScript(url);\n        }\n        return cache[url];\n    }\n    require.cache = cache;\n    require.resolve = resolve;\n    return require;\n}());\n</code></pre>\n\n<p>Beware: this code works but is incomplete (especially url resolving) and does not implement all Node.js features (I just put this together last night).\n<strong>YOU SHOULD NOT USE THIS CODE</strong> in real apps but it gives you a starting point. I tested it with this simple module and it works:</p>\n\n<pre><code>function hello() {\n    console.log('Hello world!');\n}\n\nexports.hello = hello;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here's a solution that takes a very different approach: package up all the modules into a JSON object and require modules by reading and executing the file content without additional requests.</p>\n\n<p><a href=\"https://github.com/STRd6/require/blob/master/main.coffee.md\" rel=\"nofollow\">https://github.com/STRd6/require/blob/master/main.coffee.md</a></p>\n\n<p><strong>STRd6/require</strong> depends on having a JSON package available at runtime. The <code>require</code> function is generated for that package. The package contains all the files your app could require. No further http requests are made because the package bundles all dependencies. This is as close as one can get to the Node.js style require on the client.</p>\n\n<p>The structure of the package is as follows:</p>\n\n<pre><code>entryPoint: \"main\"\ndistribution:\n  main: \n    content: \"alert(\\\"It worked!\\\")\"\n  ...\ndependencies:\n  &lt;name&gt;: &lt;a package&gt;\n</code></pre>\n\n<p>Unlike Node a package doesn't know it's external name. It is up to the pacakge including the dependency to name it. This provides complete encapsulation.</p>\n\n<p>Given all that setup here's a function that loads a file from within a package:</p>\n\n<pre><code>loadModule = (pkg, path) -&gt;\n  unless (file = pkg.distribution[path])\n    throw \"Could not find file at #{path} in #{pkg.name}\" \n\n  program = file.content\n  dirname = path.split(fileSeparator)[0...-1].join(fileSeparator)\n\n  module =\n    path: dirname\n    exports: {}\n\n  context =\n    require: generateRequireFn(pkg, module)        \n    global: global\n    module: module\n    exports: module.exports\n    PACKAGE: pkg\n    __filename: path\n    __dirname: dirname\n\n  args = Object.keys(context)\n  values = args.map (name) -&gt; context[name]\n\n  Function(args..., program).apply(module, values)\n\n  return module\n</code></pre>\n\n<p>This external context provides some variable that modules have access to.</p>\n\n<p>A <code>require</code> function is exposed to modules so they may require other modules.</p>\n\n<p>Additional properties such as a reference to the global object and some metadata\nare also exposed.</p>\n\n<p>Finally we execute the program within the module and given context.</p>\n\n<p>This answer will be most helpful to those who wish to have a synchronous node.js style require statement in the browser and are not interested in remote script loading solutions.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well.</p>\n\n<p>I know that this question apparently is so old, but, i cant figure that nobody said about this.</p>\n\n<p>Simply use Browserify, what is something like a compiler that process your files before it go into production and packs the file in bundles.</p>\n\n<p>Think you have a main.js file that require the files of your project, when you run browserify in it, it simply process all and creates a bundle with all your files, allowing the use of the <code>require</code> calls synchronously in the browser without HTTP requests and with very little overhead for the performance and for the size of the bundle, for example.</p>\n\n<p>See the link for more info: <a href=\"http://browserify.org/\" rel=\"nofollow\">http://browserify.org/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I know this question is old and Debra is already dead in the StackOverflow digital universe.\nBut i'm looking for this answer too.</p>\n\n<p>I have found that in general it is recommended to preprocess scripts at compile time and bundle them in one (or very few) packages with the <code>require</code> being rewritten to some \"lightweight shim\" also at compile time.</p>\n\n<p>I've Googled out following \"new\" tools that should be able to do it</p>\n\n<ul>\n<li><a href=\"http://mixu.net/gluejs/\" rel=\"nofollow\">http://mixu.net/gluejs/</a></li>\n<li><a href=\"https://github.com/jrburke/almond\" rel=\"nofollow\">https://github.com/jrburke/almond</a></li>\n<li><a href=\"https://github.com/component/builder2.js\" rel=\"nofollow\">https://github.com/component/builder2.js</a></li>\n</ul>\n\n<p>And the already mentioned <code>browserify</code> should also fit quite well - <a href=\"http://esa-matti.suuronen.org/blog/2013/04/15/asynchronous-module-loading-with-browserify/\" rel=\"nofollow\">http://esa-matti.suuronen.org/blog/2013/04/15/asynchronous-module-loading-with-browserify/</a></p>\n\n<h3>What are the module systems all about?</h3>\n\n<ul>\n<li><p>Older Stack Overflow explanation - <a href=\"http://stackoverflow.com/questions/16521471/relation-between-commonjs-amd-and-requirejs\">Relation between CommonJS, AMD and RequireJS?</a></p></li>\n<li><p>Detailed discussion of various module frameworks and the <code>require()</code> they need is in <a href=\"http://addyosmani.com/writing-modular-js/\" rel=\"nofollow\">Addy Osmani - Writing Modular JavaScript With AMD, CommonJS &amp; ES Harmony</a> </p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I find the component project giving a much more streamlined workflow than other solutions (including require.js), so I'd advise checking out <a href=\"https://github.com/component/component\" rel=\"nofollow\">https://github.com/component/component</a> . I know this is a bit late answer but may be useful to someone.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is it possible to use require() (or something similiar) on client side?</p>\n\n<p><strong>Example</strong></p>\n\n<pre><code>var myClass = require('./js/myclass.js');\n</code></pre>\n\n<p>Thanks for reply.</p>\n",
            "last_activity_date": 1401215778,
            "question_id": 5168451,
            "score": 44,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "JavaScript require() on client side"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It's the formal parameter for the function.  jQuery will pass in an event object when the function is called.  This is used to determine the target.  As noted in the <a href=\"http://docs.jquery.com/Types#Event\" rel=\"nofollow\">documentation</a>, jQuery will always pass an event object even when the browser (e.g. IE) doesn't.</p>\n\n<p>In this case, the target tells you which element was originally clicked.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Using <code>e</code> is just a short for <code>event</code>. You can pass any variable name you desire.</p>\n\n<pre><code>// would work just the same\n$('#myTable').click(function(anyothername) {\n    var clicked = $(anyothername.target);\n});\n</code></pre>\n\n<p>You can check out more on <a href=\"http://jquery-howto.blogspot.com/2009/01/working-with-jquery-13-new-event-object.html\">jQuery's handling of events</a>.</p>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>One benefit to having <code>e</code> (the object that raised the event) allows you to prevent the propagation of default behaviors for certain elements.  For example:</p>\n\n<pre><code>&lt;a id=\"navLink\" href=\"http://mysite/someOtherPage.htm\"&gt;Click For Info&lt;/a&gt;\n</code></pre>\n\n<p>renders a link that the user can click.  If a user has JavaScript disabled (why?  I dunno), you want the user to navigate to someOtherPage.htm when they click the link.  But if they have JavaScript enabled, then you want to display a modal dialog and not navigate away from the page.  You would handle this by preventing the default behavior of the anchor/link and displaying the modal as such:</p>\n\n<pre><code>$(\"#navLink\").click(function(e) {\n  e.preventDefault();  //this prevents the user from navigating to the someOtherPage.htm\n  $(\"#hiddenDiv\").dialog({\n    //options\n  });  //show the dialog\n});\n</code></pre>\n\n<p>So having that parameter available allows you to, among other things described in other answers, prevent the default behavior of the selected element.</p>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I'm speaking in theory as to I'm no expert but I achieved the desired result by using he the little (e) which doesn't have to be an e lol</p>\n\n<p>I figured it out. It's a way of passing the same event from one function to another.</p>\n\n<p>In simpler terms. I wanted to make the page navigation an elastic scroll function, however, I wanted the page to navigate by hover \"and\" I wanted the same navigation to be clickable upon certain conditions. I also wanted the same dynamic navigation from other click events that were not links. To keep the current target and still use the navigation function I had to set the little (e) because jQuery will lose the scope of $(this) as the same target of the function lol. Here's a quick example.</p>\n\n<pre><code>function navigate_to_page(e){\nvar target = $(e.currentTarget).attr('href'); //--This is the same as $(this) but more static to bring out of it's scope\n    $('html, body').animate({\n    'scrollTop':$(target).offset().top-0,\n    'scrollLeft': $(target).offset().left-$(window).width()*0.0}, 2000, 'easeOutBounce');\n}\n</code></pre>\n\n<p>Don't let the gibberish confuse you. It's just a simple page scroll animation. The thing to pay attention to is the <b>e.currentTarget</b>. <b>e</b> is our variable and <b>currentTarget</b> is a jQuery equivalent to $(this) so those together is a Globular $(this) function.\nNow I call it by another function with condistions like so</p>\n\n<pre><code>$('#myNavigationDiv a').on('mouseenter', function(e){\n    if($(myCondition) === true){\n        return false;\n        }else{\n        navigate_to_page(e);\n        }\n    });\n</code></pre>\n\n<p>See how the little (e) linked everything together?</p>\n\n<p>Now you can substitute (e) to (whateveryouwant). By calling e in both functions it matched <b>e</b>.currentTarget and you can apply this to whatever detailed specific functions you need and save yourself LITERALLY pages of code lol </p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<pre><code>$('#myTable').click(function(e) {\n    var clicked = $(e.target);\n    clicked.css('background', 'red');\n});\n</code></pre>\n\n<p>Can someone explain this to me, and explain why e is needed, and what it actually does..</p>\n",
            "last_activity_date": 1386393003,
            "question_id": 3535996,
            "score": 42,
            "tags": [
                "javascript",
                "jquery",
                "events"
            ],
            "title": "jquery/javascript: function(e){.... what is e? why is it needed? what does it actually do/accomplish?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>In normal situations, local variables in a function are allocated on the stack -- and they \"automatically\" go away when the function returns.  I believe many popular JavaScript engines run the interpreter (or JIT compiler) on a stack machine architecture so this obversation should be reasonably valid.</p>\n\n<p>Now if a variable is referred to in a closure (i.e. by a function defined locally that may be called later on), the \"inside\" function is assigned a \"scope chain\" that starts with the inner-most <em>scope</em> which is the function itself.  The next scope is then the outer function (which contains the local variable accessed). The interpreter (or compiler) will create a \"closure\", essentially a piece of memory allocated on the <em>heap</em> (not the stack) that contains those variables in the scope.</p>\n\n<p>Therefore, if local variables are referred to in a closure, they are no longer allocated on the stack (which will make them go away when the function returns).  They are allocated just like normal, long-lived variables, and the \"scope\" contains a pointer to each of them.  The \"scope-chain\" of the inner function contains pointers to all these \"scopes\".</p>\n\n<p>Some engines optimize the scope chain by omitting variables that are shadowed (i.e. covered up by a local variable in an inner scope), so in your case only one BigObject remains, as long as the variable \"x\" is only accessed in the inner scope, and there are no \"eval\" calls in the outer scopes.  Some engines \"flatten\" scope chains (I think V8 does that) for fast variable resolution -- something that can be done only if there are no \"eval\" calls in between (or no calls to functions that may do an implicit eval, e.g. setTimeout).</p>\n\n<p>I'd invite some JavaScript engine guru's to provide more juicy details than I can.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>It's not true that there are restrictions that prevent you from calling eval that would be missed by static-analysis: it's just that such references to to eval run in the global scope. Note that this is a change in ES5 from ES3 where indirect and direct references to eval both ran in the local scope, and as such, I'm unsure whether anything actually does any optimizations based upon this fact.</p>\n\n<p>An obvious way to test this is to make BigObject be a really big object, and force a gc after running f0\u2013f2. (Because, hey, as much as I think I know the answer, testing is always better!)</p>\n\n<p>So\u2026</p>\n\n<h2>The test</h2>\n\n<pre><code>var closure;\nfunction BigObject() {\n  var a = '';\n  for (var i = 0; i &lt;= 0xFFFF; i++) a += String.fromCharCode(i);\n  return new String(a); // Turn this into an actual object\n}\nfunction f0() {\n  var x = new BigObject();\n  var y = 0;\n  closure = function(){ return 7; };\n}\nfunction f1() {\n  var x = new BigObject();\n  closure =  (function(y) { return function(){return y++;}; })(0);\n}\nfunction f2() {\n  var x = new BigObject();\n  var y = 0;\n  closure = function(){ return y++; };\n}\nfunction f3() {\n  var x = new BigObject();\n  var y = 0;\n  closure = eval(\"(function(){ return 7; })\"); // direct eval\n}\nfunction f4() {\n  var x = new BigObject();\n  var y = 0;\n  closure = (1,eval)(\"(function(){ return 7; })\"); // indirect eval (evaluates in global scope)\n}\nfunction f5() {\n  var x = new BigObject();\n  var y = 0;\n  closure = (function(){ return eval(\"(function(){ return 7; })\"); })();\n}\nfunction f6() {\n  var x = new BigObject();\n  var y = 0;\n  closure = function(){ return eval(\"(function(){ return 7; })\"); };\n}\nfunction f7() {\n  var x = new BigObject();\n  var y = 0;\n  closure = (function(){ return (1,eval)(\"(function(){ return 7; })\"); })();\n}\nfunction f8() {\n  var x = new BigObject();\n  var y = 0;\n  closure = function(){ return (1,eval)(\"(function(){ return 7; })\"); };\n}\nfunction f9() {\n  var x = new BigObject();\n  var y = 0;\n  closure = new Function(\"return 7;\"); // creates function in global scope\n}\n</code></pre>\n\n<p>I've added tests for eval/Function, seeming these are also interesting cases. The different between f5/f6 is interesting, because f5 is really just identical to f3, given what is really an identical function for closure; f6 merely returns something that once evaluated gives that, and as the eval hasn't yet been evaluated, the compiler can't know that there is no reference to x within it.</p>\n\n<h2>SpiderMonkey</h2>\n\n<pre><code>js&gt; gc();\n\"before 73728, after 69632, break 01d91000\\n\"\njs&gt; f0();\njs&gt; gc(); \n\"before 6455296, after 73728, break 01d91000\\n\"\njs&gt; f1(); \njs&gt; gc(); \n\"before 6455296, after 77824, break 01d91000\\n\"\njs&gt; f2(); \njs&gt; gc(); \n\"before 6455296, after 77824, break 01d91000\\n\"\njs&gt; f3(); \njs&gt; gc(); \n\"before 6455296, after 6455296, break 01db1000\\n\"\njs&gt; f4(); \njs&gt; gc(); \n\"before 12828672, after 73728, break 01da2000\\n\"\njs&gt; f5(); \njs&gt; gc(); \n\"before 6455296, after 6455296, break 01da2000\\n\"\njs&gt; f6(); \njs&gt; gc(); \n\"before 12828672, after 6467584, break 01da2000\\n\"\njs&gt; f7(); \njs&gt; gc(); \n\"before 12828672, after 73728, break 01da2000\\n\"\njs&gt; f8(); \njs&gt; gc(); \n\"before 6455296, after 73728, break 01da2000\\n\"\njs&gt; f9(); \njs&gt; gc(); \n\"before 6455296, after 73728, break 01da2000\\n\"\n</code></pre>\n\n<p>SpiderMonkey appears to GC \"x\" on everything except f3, f5, and f6.</p>\n\n<p>It appears to as much as possible (i.e., when possible, y, as well as x) unless there is direct eval call within the scope-chain of any function that still exists. (Even if that function object itself has been GC'd and no longer exists, as is the case in f5, which theoretically means that it could GC x/y.)</p>\n\n<h2>V8</h2>\n\n<pre><code>gsnedders@dolores:~$ v8 --expose-gc --trace_gc --shell foo.js\nV8 version 3.0.7\n&gt; gc();\nMark-sweep 0.8 -&gt; 0.7 MB, 1 ms.\n&gt; f0();\nScavenge 1.7 -&gt; 1.7 MB, 2 ms.\nScavenge 2.4 -&gt; 2.4 MB, 2 ms.\nScavenge 3.9 -&gt; 3.9 MB, 4 ms.\n&gt; gc();   \nMark-sweep 5.2 -&gt; 0.7 MB, 3 ms.\n&gt; f1();\nScavenge 4.7 -&gt; 4.7 MB, 9 ms.\n&gt; gc();\nMark-sweep 5.2 -&gt; 0.7 MB, 3 ms.\n&gt; f2();\nScavenge 4.8 -&gt; 4.8 MB, 6 ms.\n&gt; gc();\nMark-sweep 5.3 -&gt; 0.8 MB, 3 ms.\n&gt; f3();\n&gt; gc();\nMark-sweep 5.3 -&gt; 5.2 MB, 17 ms.\n&gt; f4();\n&gt; gc();\nMark-sweep 9.7 -&gt; 0.7 MB, 5 ms.\n&gt; f5();\n&gt; gc();\nMark-sweep 5.3 -&gt; 5.2 MB, 12 ms.\n&gt; f6();\n&gt; gc();\nMark-sweep 9.7 -&gt; 5.2 MB, 14 ms.\n&gt; f7();\n&gt; gc();\nMark-sweep 9.7 -&gt; 0.7 MB, 5 ms.\n&gt; f8();\n&gt; gc();\nMark-sweep 5.2 -&gt; 0.7 MB, 2 ms.\n&gt; f9();\n&gt; gc();\nMark-sweep 5.2 -&gt; 0.7 MB, 2 ms.\n</code></pre>\n\n<p>V8 appears to GC x on everything apart from f3, f5, and f6. This is identical to SpiderMonkey, see analysis above. (Note however that the numbers aren't detailed enough to tell whether y is being GC'd when x is not, I've not bothered to investigate this.)</p>\n\n<h2>Carakan</h2>\n\n<p>I'm not going to bother running this again, but needless to say behaviour is identical to SpiderMonkey and V8. Harder to test without a JS shell, but doable with time.</p>\n\n<h2>JSC (Nitro) and Chakra</h2>\n\n<p>Building JSC is a pain on Linux, and Chakra doesn't run on Linux. I believe JSC has the same behaviour to the above engines, and I'd be surprised if Chakra didn't have too. (Doing anything better quickly becomes very complex, doing anything worse, well, you'd almost never be doing GC and have serious memory issues\u2026)</p>\n",
                    "is_accepted": true,
                    "score": 32
                }
            ],
            "body": "<p>This is mostly an out-of-curiosity question.  Consider the following functions</p>\n\n<pre><code>var closure ;\nfunction f0() {\n    var x = new BigObject() ;\n    var y = 0 ;\n    closure = function(){ return 7; } ;\n}\nfunction f1() {\n    var x = BigObject() ;\n    closure =  (function(y) { return function(){return y++;} ; })(0) ;\n}\nfunction f2() {\n    var x = BigObject() ;\n    var y = 0 ;\n    closure = function(){ return y++ ; } ;\n}\n</code></pre>\n\n<p>In every case, after the function has been executed, there is (I think) no way to reach <em>x</em> and so the <em>BigObject</em> can be garbage collected, as long as <em>x</em> is the last reference to it.  A simple minded interpreter would capture the whole scope chain whenever a function expression is evaluated.  (For one thing, you need to do this to make calls to <em>eval</em> work -- example below).  A smarter implementation might avoid this in f0 and f1. An even smarter implementation would allow <em>y</em> to be retained, but not <em>x</em>, as is needed for f2 to be efficient.</p>\n\n<p>My question is how do the modern JavaScript engines (JaegerMonkey, V8, etc.) deal with these situations?</p>\n\n<p>Finally, here is an example that shows that variables may need to be retained even if they are never mentioned in the nested function.</p>\n\n<pre><code>var f = (function(x, y){ return function(str) { return eval(str) ; } } )(4, 5) ;\nf(\"1+2\") ; // 3\nf(\"x+y\") ; // 9\nf(\"x=6\") ;\nf(\"x+y\") ; // 11\n</code></pre>\n\n<p>However, there are restrictions that prevent one from sneaking in a call to eval in ways that might be missed by the compiler.</p>\n",
            "last_activity_date": 1323204622,
            "question_id": 5368048,
            "score": 29,
            "tags": [
                "javascript",
                "garbage-collection",
                "closures"
            ],
            "title": "How are closures and scopes represented at run time in JavaScript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>If your site looks equally good on all browsers, but certain browsers get, say, dancing ponies because they support dancing ponies, then that's Progressive Enhancement. It works in all browsers, but certain browsers get something extra. Usually that term is applied to certain Javascript features that may enhance usability beyond \"raw HTML\".</p>\n\n<p>If your site only looks the way you intend to on browsers that fully support, say, CSS3, and IE8- will display the same page without, say, rounded corners, then that's Graceful Degradation. The site is really meant for state-of-the-art browsers, but it's still usable in older browsers, just not as fancy.</p>\n\n<p>In the end, they're really the same thing, looked at from two different perspectives.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>They ARE almost exactly the same thing, but they differ in context.</p>\n\n<p>There is a class of browsers called \"A Grade Browsers\". These are your typical audience members that (probably) make up the majority of your visitors. You'll start with a baseline of these users. Call this <strong>best modern practices</strong>.</p>\n\n<p>If you want to <strong>enhance</strong> the experience for anyone happening to use FF3.6 or Safari 4 or some other whizbang developer nightly webkit whathaveyou, you'll want to do awesome things like </p>\n\n<ul>\n<li>rounded corners via css</li>\n<li>shadowed text (but please god, not TOO much)</li>\n<li>drop shadows (see above parenthetical)</li>\n</ul>\n\n<p>These make your site kick-ass looking, but won't break it. This is <strong>progressive enhancement</strong>. Embracing the future from the point of <strong>best practices</strong>.</p>\n\n<p>On the other hand, your niche Nintendo site attracts a fair number of IE5 users. Poor you, but you also want to make sure they keep coming back. You might provide an alternative to your ajax behavior by including the ajax script in an external file and if their JS isn't turned on, maybe your links update the whole page. Etc. From the point of view of <strong>best modern practices</strong>, you're making sure that certain historical markets are being catered by <strong>some semblance of a functional site</strong>. This is <strong>graceful degradation</strong>.</p>\n\n<p>They are mostly identical, but differ in terms of priority for many development teams: PE is quite nice if you have the time, but GD is often <strong>necessary</strong></p>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>I find it tends to be attitudinal - are you saying \"okay, my site works with Lynx, users can do everything I want them to be able to do, now lets add some panache\", or are you saying \"okay, my site works in Firefox, now lets try to fix it for people not willing to use that/who turn off javascript/etc\"</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The direction from a chosen <strong>baseline</strong> for each concept is different.</p>\n\n<p>Graceful Degradation starts at a ideal user experience level and decreases depending on user agent capabilities down to a minimum level, catering for agents that don't support certain features used by the baseline.</p>\n\n<p>Progressive Enhancement starts at a broad minimum user experience and increases depending on user agent capabilities up to a more capable level, catering for agents that support more advanced features than the baseline.</p>\n\n<p>I think that one could employ both concepts if time/budget permit. If not then graceful degradation would be preferred.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Sorry to resurrect something that's way over a year old, but felt I could contribute, in some small way, my own opinion on the matter.</p>\n\n<p>Although I agree with both Alex Mcp and deceze in a way, The terms \"Graceful Degradation\" and \"Progressive Enhancement\" have slightly different meanings from where I stand.</p>\n\n<p><strong>Graceful degradation</strong>, a lot of the time (in my opinion), seems to be more of a stick to beat an app into submission after it's been built badly in the first place in my experience. Like someone building out some vast javascript object that provides the user with something really cool to play with, until a manager comes along, tests the thing and everyone runs screaming throwing their arms around when it comes to their attention that their app doesn't work in 35% of browsers. <strong><em>\"Someone better provide a fallback for this.\"</em></strong></p>\n\n<p><strong>Progressive Enhancement</strong> though (and it's such a nicer term to say too) would seem to me to be more about building something that just works, on an entry level, everywhere, through the most basic methods available, to provide all the functionality that the user needs. This can then be added to with neat little unobtrusive helpers, styling etc. that actually enhance the user experience of the application in question, rather than just make it barely useable. <strong><em>\"That looks cool. Does it work in IE6. Oh yeah. It Does\"</em></strong></p>\n\n<p>I think maybe giving style as an example of Both terms in the top two answers here kind of overlooks the real underlying usability issue that <strong>progressive enhancement</strong> often solves by its very nature, where <strong>graceful degradation</strong> ignores until things go wrong. </p>\n\n<p><em>Rant over...</em></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>to make it easier, just set your bar right at the top then you can ignore progressive enhancement.  when a new feature comes out raise your bar ;)</p>\n\n<p>or alternatively set your bar to the lowest level (lynx perhaps?) and just use progressive enhancement.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2>Graceful Degradation</h2>\n\n<blockquote>\n  <p><strong>Graceful degradation</strong> is the ability of a computer, machine, electronic\n  system or network to maintain limited functionality even when a large\n  portion of it has been destroyed or rendered inoperative. The purpose\n  of graceful degradation is to prevent catastrophic failure.</p>\n</blockquote>\n\n<p>Graceful degradation is one solution. It is the practice of building a web site or application so it provides a good level of user experience in modern browsers. However, it will degrade gracefully for those using older browsers. The system may not be as pleasant or as pretty, but the basic functionality will work on older systems.</p>\n\n<p>A simple example is the use of 24-bit alpha-transparent PNGs. Those images can be displayed on modern browsers without problems. IE5.5 and IE6 would show the image, but transparency effects would fail (it can be made to work if necessary). Older browsers that do not support PNG would show alt text or an empty space.</p>\n\n<p>Developers adopting graceful degradation often specify their browser support level, e.g. level 1 browsers (best experience) and level 2 browsers (degraded experience).</p>\n\n<h2>Progressive Enhancement</h2>\n\n<blockquote>\n  <p><strong>Progressive enhancement</strong> is a strategy for web design that emphasizes\n  accessibility, semantic HTML markup, and external stylesheet and\n  scripting technologies. Progressive enhancement uses web technologies\n  in a layered fashion that allows everyone to access the basic content\n  and functionality of a web page, using any browser or Internet\n  connection, while also providing an enhanced version of the page to\n  those with more advanced browser software or greater bandwidth.</p>\n</blockquote>\n\n<p>Progressive enhancement is similar concept to graceful degradation but in reverse. The web site or application would establish a base-level of user experience for most browsers. More advanced functionality would then be added when a browser supports it.</p>\n\n<p>Progressive enhancement does not require us to select supported browsers or revert to table-based layouts. We choose a level of technology; i.e. the browser must support HTML 4.01 and standard page request/responses.</p>\n\n<p>Going back to our image example, we might decide that our application should be functional in all graphical browsers. We could use a lower-quality GIF images by default but replace them with 24-bit PNGs when the browser supports them.</p>\n\n<hr>\n\n<h3>Links</h3>\n\n<p>Wikipedia : <a href=\"http://en.wikipedia.org/wiki/Progressive_enhancement\" rel=\"nofollow\"><strong>Progressive Enhancement</strong></a> and <a href=\"http://en.wikipedia.org/wiki/Fault_tolerance\" rel=\"nofollow\"><strong>Graceful Degradation(Fault_tolerance)</strong></a></p>\n\n<p>Source : <a href=\"http://www.sitepoint.com/progressive-enhancement-graceful-degradation-basics/\" rel=\"nofollow\"><strong>Blog</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm confused on what the difference is between <strong>Progressive Enhancement</strong> and <strong>Graceful Degradation</strong>. To me they seem like the same thing. </p>\n\n<p>Can you please explain to me the differences between the two and in which situation I would use one over the other?</p>\n",
            "last_activity_date": 1419422378,
            "question_id": 2550431,
            "score": 29,
            "tags": [
                "javascript",
                "progressive-enhancement",
                "graceful-degradation"
            ],
            "title": "What is the difference between Progressive Enhancement and Graceful Degradation?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<ul>\n<li>The length of the password should be at least 8 characters.</li>\n<li>The strength increases with the length, a longer password should have more points.</li>\n<li>Include special characters like #/\" and the like. (Or just any other than  [a-Z0-9])</li>\n<li>For really long passwords this method could get slow. Why don't you just test every new character and use a dictionary for which features the password already has.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would suggest evaluating an existing jquery password strength plugin. (unless your just doing it as an exersize)</p>\n\n<p>Here are a few links I found:</p>\n\n<p><a href=\"http://www.visual-blast.com/javascript/password-strength-checker/\" rel=\"nofollow\">http://www.visual-blast.com/javascript/password-strength-checker/</a></p>\n\n<p><a href=\"http://phiras.wordpress.com/2007/04/08/password-strength-meter-a-jquery-plugin/\" rel=\"nofollow\">http://phiras.wordpress.com/2007/04/08/password-strength-meter-a-jquery-plugin/</a></p>\n\n<p><a href=\"http://benjaminsterling.com/?p=117\" rel=\"nofollow\">http://benjaminsterling.com/?p=117</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>On top of gs' answer, you should check the password against common dictionary words (using a hash, probably). Otherwise a weak password like 'Yellow1' will be evaluated as strong by your logic.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The best way is to take an existing plugin as TJB suggested.</p>\n\n<p>As to your question about the code itself, a nicer way is to write it like that:</p>\n\n<pre><code>var pass = \"f00Bar!\";\n\nvar strength = 1;\nvar arr = [/{5\\,}/, /[a-z]+/, /[0-9]+/, /[A-Z]+/];\njQuery.map(arr, function(regexp) {\n  if(pass.match(regexp))\n     strength++;\n});\n</code></pre>\n\n<p>(Modified to correct syntax errors.)</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>You can try the jQuery plugins for password strength check</p>\n\n<p>Some of them are</p>\n\n<p><a href=\"http://phiras.wordpress.com/2007/04/08/password-strength-meter-a-jquery-plugin/\" rel=\"nofollow\">Password Strength Meter</a></p>\n\n<p><a href=\"http://projects.sharkmediallc.com/pass/\" rel=\"nofollow\">Password Strength Indicator</a> </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are doing as excersie</p>\n\n<p>Reference: <a href=\"http://projects.sharkmediallc.com/pass/\" rel=\"nofollow\">Password Strength Indicator</a> </p>\n\n<p>jQuery Code Used (# denotes what have changed from Benjamin's code) </p>\n\n<pre><code>$.fn.passwordStrength = function( options ){\nreturn this.each(function(){\n\tvar that = this;that.opts = {};\n\tthat.opts = $.extend({}, $.fn.passwordStrength.defaults, options);\n\n\tthat.div = $(that.opts.targetDiv);\n\tthat.defaultClass = that.div.attr('class');\n\n\tthat.percents = (that.opts.classes.length) ? 100 / that.opts.classes.length : 100;\n\n\tv = $(this)\n\t.keyup(function(){\n\t\tif( typeof el == \"undefined\" )\n\t\tthis.el = $(this);\n\t\tvar s = getPasswordStrength (this.value);\n\t\tvar p = this.percents;\n\t\tvar t = Math.floor( s / p );\n\n\t\tif( 100 &lt;= s )\n\t\tt = this.opts.classes.length - 1;\n\n\t\tthis.div\n\t\t.removeAttr('class')\n\t\t.addClass( this.defaultClass )\n\t\t.addClass( this.opts.classes[ t ] );\n\t})\n\t# Removed generate password button creation\n});\n\nfunction getPasswordStrength(H){\n\tvar D=(H.length);\n\n\t# Added below to make all passwords less than 4 characters show as weak\n\tif (D&lt;4) { D=0 }\n\n\n\tif(D&gt;5){\n\t\tD=5\n\t}\n\tvar F=H.replace(/[0-9]/g,\"\");\n\tvar G=(H.length-F.length);\n\tif(G&gt;3){G=3}\n\tvar A=H.replace(/\\W/g,\"\");\n\tvar C=(H.length-A.length);\n\tif(C&gt;3){C=3}\n\tvar B=H.replace(/[A-Z]/g,\"\");\n\tvar I=(H.length-B.length);\n\tif(I&gt;3){I=3}\n\tvar E=((D*10)-20)+(G*10)+(C*15)+(I*10);\n\tif(E&lt;0){E=0}\n\tif(E&gt;100){E=100}\n\treturn E\n}\n\n\n# Removed generate password function\n};\n\n$(document)\n.ready(function(){\n$('input[name=\"password2\"]').passwordStrength({targetDiv: '#iSM',classes : Array('weak','medium','strong')});\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Below is a free password strength/policy JQuery plug-in validator. It is also supports validation of passwords entered in multiple languages (supported in Unicode). It is multilingual.</p>\n\n<p><a href=\"http://www.c-sharpcorner.com/UploadFile/f9935e/4718/Default.aspx?ArticleID=8d0f0bee-dadd-4610-88c0-8088dafd95c9\" rel=\"nofollow\">Password Policy/Strength JQuery plug-in Validator</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://labs.rnzmedia.co.za\" rel=\"nofollow\">RnZ Code Labs</a> has an easy to use <a href=\"http://labs.rnzmedia.co.za/password-strength\" rel=\"nofollow\">Password Strength</a> plugin.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you may try this demo: <a href=\"http://www.gbin1.com/technology/democenter/20120903-jquery-plugin-complexify/\" rel=\"nofollow\">http://www.gbin1.com/technology/democenter/20120903-jquery-plugin-complexify/</a> , it developed by jquery plugin complexify. i think it's cool!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Strength of a password should be checked on behalf of several parameters like the presence of special characters and numbers, length of the password etc.</p>\n\n<p>I have found the below tutorial with nice demo:</p>\n\n<p><a href=\"http://tinytute.com/2014/06/03/animated-password-strength-checker-quick-easy/\" rel=\"nofollow\">http://tinytute.com/2014/06/03/animated-password-strength-checker-quick-easy/</a></p>\n\n<p>The jQuery code block:</p>\n\n<p>$(document).ready(function(){</p>\n\n<pre><code>$(\"#textBox\").keyup(function(){\n\n    var passWord = $(\"#textBox\").val();\n    var passLength = passWord.length;\n    var specialFlag = 0;\n    var numberFlag = 0;\n    var numberGenerator = 0;\n    var total = 0;\n\n    if(/^[a-zA-Z0-9- ]*$/.test(passWord) == false) {\n\n        specialFlag =20;\n    }\n\n\n    if(passWord.match(/[0-9]/)) {\n\n        numberFlag = 25;\n    }\n\n    if(passLength&gt;4&amp;&amp;passLength&lt;=6){\n        numberGenerator =25;\n    }else if(passLength&gt;=7&amp;&amp;passLength&lt;=9){\n        numberGenerator =35;\n    }else if(passLength&gt;9){\n        numberGenerator =55;\n    }else if(passLength&gt;0&amp;&amp;passLength&lt;=4){\n        numberGenerator =15;\n    }else{\n        numberGenerator =0;\n    }\n\n    total = numberGenerator + specialFlag + numberFlag;\n    if(total&lt;30){\n        $('#progressBar').css('background-color','#CCC');\n    }else if(total&lt;60&amp;&amp;total&gt;=30){\n\n        $('#progressBar').css('background-color','#FF6600');\n\n    }else if(total&gt;=60&amp;&amp;total&lt;90){\n\n        $('#progressBar').css('background-color','#FFCC00');\n\n    }else if(total&gt;=90){\n\n        $('#progressBar').css('background-color','#0f0');\n\n    }\n    $('#progressBar').css('width',total+'%');\n\n});\n</code></pre>\n\n<p>});</p>\n\n<p>Hope these set of logic will solve the problem</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm quite new to jQuery, and I've written a simple function to check the strength of a password for each keypress.</p>\n\n<p>The idea is that every time a user enters a character, the contents is evaluated to test the strengh of the password they have entered... I'm sure everyone has seen these before.</p>\n\n<p>Anyhow, the logic I have used is that no password begins with a value of 1. When a lower-case character is used, the score increments to 2.  When a digit is used the score increments by 1 again, same for when an uppercase character is used and when the password becomes 5 or more characters long.</p>\n\n<p>What is returned is the strength of the password so far as a value from 1 to 5 every time a key is pressed.</p>\n\n<p>So, about my question.  The way that I've done it doesn't seem very jQuery like... almost like I may as well have just done straight javascript.  Also I was wondering about my logic.  Have I done anything done or overlooked something? Any suggestions from smarter people than myself?</p>\n\n<p>Any suggestions or advice would be appreciated.</p>\n\n<pre><code>$(document).ready(function(){\n\n\t\t$(\"#pass_strength\").keyup(function() {\n\n\t\t\tvar strength = 1;\n\n\t\t\t/*length 5 characters or more*/\n\t\t\tif(this.value.length &gt;= 5) {\n\t\t\t\tstrength++;\n\t\t\t}\n\n\t\t\t/*contains lowercase characters*/\n\t\t\tif(this.value.match(/[a-z]+/)) {\n\t\t\t\tstrength++;\n\t\t\t}\n\n\t\t\t/*contains digits*/\n\t\t\tif(this.value.match(/[0-9]+/)) {\n\t\t\t\tstrength++;\n\t\t\t}\n\n\t\t\t/*contains uppercase characters*/\n\t\t\tif(this.value.match(/[A-Z]+/)) {\n\t\t\t\tstrength++;\n\t\t\t}\n\n\t\t\talert(strength);\n\t\t});\n\t });\n</code></pre>\n",
            "last_activity_date": 1426066449,
            "question_id": 1388609,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "passwords",
                "logic"
            ],
            "title": "jQuery password strength checker"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>var someParam = xxxxxxx;\n\ncommentbtn.click(function(){\n\n    alert(someParam );\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>From where would you get these values?\nIf they're from the button itself, you could just do</p>\n\n<pre><code>commentbtn.click(function() {\n   alert(this.id);\n});\n</code></pre>\n\n<p>If they're a variable in the binding scope, you can access them from without</p>\n\n<pre><code>var id = 1;\ncommentbtn.click(function() {\n   alert(id);\n});\n</code></pre>\n\n<p>If they're a variable in the binding scope, that might <em>change</em> before the click is called, you'll need to create a new closure</p>\n\n<pre><code>for(var i = 0; i &lt; 5; i++) {\n   $('#button'+i).click((function(id) {\n      return function() {\n         alert(id);\n      };\n   }(i)));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>see <a href=\"http://api.jquery.com/event.data/\">event.data</a></p>\n\n<pre><code>commentbtn.bind('click', { id: '12', name: 'Chuck Norris' }, function(event) {\n    var data = event.data;\n    alert(data.id);\n    alert(data.name);\n});\n</code></pre>\n\n<p>If your data is initialized before binding the event, then simply capture those variables in a closure.</p>\n\n<pre><code>// assuming id and name are defined in this scope\ncommentBtn.click(function() {\n    alert(id), alert(name);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 66
                }
            ],
            "body": "<p>I want to pass few parameters to Click() event in jquery, I tried following but its not working, </p>\n\n<pre><code>commentbtn.click(function(id, name){\n    alert(id);\n});\n</code></pre>\n\n<p>And also if we use bind then how we'll do that</p>\n\n<pre><code>commentbtn.bind('click', function(id, name){\n    alert(id);\n});\n</code></pre>\n\n<p>Please help!</p>\n",
            "last_activity_date": 1287730514,
            "question_id": 3994527,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "events"
            ],
            "title": "Passing parameters to click() &amp; bind() event in jquery?"
        }
    ]
}
