{
    "items": [
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>F11 takes IE and Firefox into fullscreen mode.  I'm sure it's possible to go fullscreen, since YouTube and other video streaming sites can do it with Flash, but I don't know how with javascript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In the past, I've seen websites do this.  However, as it's incredibly annoying and generally used by ads for pr0n websites, the technique may be blocked in recent browsers.</p>\n\n<p>But I think the important point is: it's incredibly annoying and generally used by ads for pr0n websites, so you probably don't want to associate yourself which such things, so your probably best off just asking your users to maximize their browsers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There isn't a way to resize the current window to full screen, but you can open a popup in full screen:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n&lt;!--\nfunction popup(url) \n{\n params  = 'width='+screen.width;\n params += ', height='+screen.height;\n params += ', top=0, left=0'\n params += ', fullscreen=yes';\n\n newwin=window.open(url,'windowname4', params);\n if (window.focus) {newwin.focus()}\n return false;\n}\n// --&gt;\n&lt;/script&gt;\n\n&lt;a href=\"javascript: void(0)\" \n   onclick=\"popup('popup.html')\"&gt;Fullscreen popup window&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You could just tell the user to press F11. Next to it, put a 'why?' link and explain why you feel like they need to be in fullscreen mode.</p>\n\n<p>I don't think you can force a browser to go full screen and, in fact, if you were able to do that I'd be furious at my browser. It's too invasive. Even Flash has security so that forcing the plugin to go to fullscreen requires the event to originate with a user interaction. So, if it's that important to you, this might be a good reason to use the Flash plugin because you could attach the go-fullscreen call to a misleading button that says 'start quiz' (or whatever).</p>\n\n<p>But, please don't do that. Just be straight forward with the user and tell them to hit F11.</p>\n\n<p>EDIT: I just tried the sample code provided in another comment and I'm happy to say that Firefox opens up a maximized window with an address bar, not a fullscreen window.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Open a new window in full screen mode on IE:</p>\n\n<pre><code>&lt;script&gt;\n&lt;!--\nwindow.open(\"page.html\",\"fs\",\"fullscreen,scrollbars\")\n//--&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>Putting in a \"Close\" link on page.html may be a good idea:</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"window.close()\"&gt;Close Window&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>To modify the parent window, try something like:</p>\n\n<pre><code>window.opener.location.href = '/confirmation/page.html';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have found some code after searching.</p>\n\n<pre><code>function fullscreen() {\n    var element = document.getElementById(\"content\");\n    if (element.requestFullScreen) {\n        if (!document.fullScreen) {\n            element.requestFullscreen();\n            $(\".fullscreen\").attr('src',\"img/icons/panel_resize_actual.png\");\n        } else {\n            document.exitFullScreen();\n            $(\".fullscreen\").attr('src',\"img/icons/panel_resize.png\");\n        }\n\n    } else if (element.mozRequestFullScreen) {\n\n        if (!document.mozFullScreen) {\n            element.mozRequestFullScreen();\n            $(\".fullscreen\").attr('src',\"img/icons/panel_resize_actual.png\");\n            google.maps.event.trigger(map, 'resize');\n        } else {\n            document.mozCancelFullScreen();\n            $(\".fullscreen\").attr('src',\"img/icons/panel_resize.png\");\n        }\n\n    } else if (element.webkitRequestFullScreen) {\n\n        if (!document.webkitIsFullScreen) {\n            element.webkitRequestFullScreen();\n            $(\".fullscreen\").attr('src',\"img/icons/panel_resize_actual.png\");\n            google.maps.event.trigger(map, 'resize');\n        } else {\n            document.webkitCancelFullScreen();\n            $(\".fullscreen\").attr('src',\"img/icons/panel_resize.png\");\n        } \n    } \n}\n</code></pre>\n\n<p>It will use html5 api. I switch with jquery the a special picture for it. Hope that will help out. At the moment, i don't know if you can force it, 'cause it was forbitten due security. </p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>This feature is more interesting for mobile browsers, which support fullscreen. The most mobile browser wont have an option for fullscreen by tap an option. You have a change to switch to fullscreen to get a little bit app feeling.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to run a psychological study for which participants have to look at large images.</p>\n\n<p>The experiment is done on the web and therefore in a browser window. Is it possible to tell the browser to go into fullscreen, for example on button press?</p>\n\n<p>I know there is the possibility to open a fixed-size popup window. Do you think this would be a feasable alternative? And if, what would be the best way to do it? Are there elegant ways of detecting a popup-blocker, to fallback and run the study in the original browser window.</p>\n\n<p>The main concern is that the participants of this study are not familiar with technical details and should not be bothered by them.</p>\n",
            "last_activity_date": 1388054855,
            "question_id": 228377,
            "score": 10,
            "tags": [
                "javascript",
                "html",
                "browser",
                "window"
            ],
            "title": "Could a website force the browser to go into fullscreen mode?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>$(\".use-address\").click(function() {\n   $(this).closest('tr').find('td').each(function() {\n        var textval = $(this).text(); // this will be the text of each &lt;td&gt;\n   });\n});\n</code></pre>\n\n<p>This will find the closest <code>tr</code> (going up through the DOM) of the currently clicked button and then loop each <code>td</code> - you might want to create a string / array with the values.</p>\n\n<p><a href=\"http://jsfiddle.net/FnDvL/1/\" rel=\"nofollow\">Example here</a></p>\n\n<p><a href=\"http://jsfiddle.net/FnDvL/2/\" rel=\"nofollow\"><strong>Getting the full address using an array example here</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You need to change your code to find the row relative to the button which was clicked. Try this:</p>\n\n<pre><code>$(\".use-address\").click(function() {\n    var id = $(this).closest(\"tr\").find(\".nr\").text();\n    $(\"#resultas\").append(id);\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/FnDvL/\"><strong>Example fiddle</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The selector <code>\".nr:first\"</code> is specifically looking for the first, and only the first, element having class <code>\"nr\"</code> within the selected table element. If you instead call <code>.find(\".nr\")</code> you will get all of the elements within the table having class <code>\"nr\"</code>. Once you have all of those elements, you could use the <a href=\"http://api.jquery.com/each/\" rel=\"nofollow\">.each</a> method to iterate over them. For example:</p>\n\n<pre><code>$(\".use-address\").click(function() {\n    $(\"#choose-address-table\").find(\".nr\").each(function(i, nrElt) {\n        var id = nrElt.text();\n        $(\"#resultas\").append(\"&lt;p&gt;\" + id + \"&lt;/p&gt;\"); // Testing: append the contents of the td to a div\n    });\n});\n</code></pre>\n\n<p>However, that would get you <em>all</em> of the <code>td.nr</code> elements in the table, not just the one in the row that was clicked. To further limit your selection to the row containing the clicked button, use the <a href=\"http://api.jquery.com/closest/\" rel=\"nofollow\">.closest</a> method, like so:</p>\n\n<pre><code>$(\".use-address\").click(function() {\n    $(this).closest(\"tr\").find(\".nr\").each(function(i, nrElt) {\n        var id = nrElt.text();\n        $(\"#resultas\").append(\"&lt;p&gt;\" + id + \"&lt;/p&gt;\"); // Testing: append the contents of the td to a div\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre>\n\n    function useAdress () { \n    var id = $(\"#choose-address-table\").find(\".nr:first\").text();\n    alert (id);\n    $(\"#resultas\").append(id); // Testing: append the contents of the td to a div\n    };\n\n</pre>\n\n<p>then on your button: \n<code></p>\n\n<pre><code>onclick=\"useAdress()\"\n</code></pre>\n\n<p></code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The object of the exercise is to find the row that contains the information. When we get there, we can easily extract the required information.</p>\n\n<h1>Answer</h1>\n\n<pre><code>$(\".use-address\").click(function() {\n    var $item = $(this).closest(\"tr\")   // Finds the closest row &lt;tr&gt; \n                       .find(\".nr\")     // Gets a descendent with class=\"nr\"\n                       .text();         // Retrieves the text within &lt;td&gt;\n\n    $(\"#resultas\").append($item);       // Outputs the answer\n});\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/UW38e/\">VIEW DEMO</a></strong></p>\n\n<p>Now let's focus on some frequently asked questions in such situations.</p>\n\n<h1><strong>How to find the closest row?</strong></h1>\n\n<p><strong>Using <code>.closest()</code>:</strong></p>\n\n<pre><code>var $row = $(this).closest(\"tr\");\n</code></pre>\n\n<p><strong>Using <code>.parent()</code>:</strong></p>\n\n<p>You can also move up the DOM tree using <a href=\"http://api.jquery.com/parent/\"><code>.parent()</code></a> method. This is just an alternative that is sometimes used together with <code>.prev()</code> and <code>.next()</code>.</p>\n\n<pre><code>var $row = $(this).parent()             // Moves up from &lt;button&gt; to &lt;td&gt;\n                  .parent();            // Moves up from &lt;td&gt; to &lt;tr&gt;\n</code></pre>\n\n<h1><strong>Getting all table cell <code>&lt;td&gt;</code> values</strong></h1>\n\n<p>So we have our <code>$row</code> and we would like to output table cell text:</p>\n\n<pre><code>var $row = $(this).closest(\"tr\"),       // Finds the closest row &lt;tr&gt; \n    $tds = $row.find(\"td\");             // Finds all children &lt;td&gt; elements\n\n$.each($tds, function() {               // Visits every single &lt;td&gt; element\n    console.log($(this).text());        // Prints out the text within the &lt;td&gt;\n});\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/CKEc6/1/\">VIEW DEMO</a></strong></p>\n\n<h1><strong>Getting a specific <code>&lt;td&gt;</code> value</strong></h1>\n\n<p>Similar to the previous one, however we can specify the index of the child <code>&lt;td&gt;</code> element.</p>\n\n<pre><code>var $row = $(this).closest(\"tr\"),        // Finds the closest row &lt;tr&gt; \n    $tds = $row.find(\"td:nth-child(2)\"); // Finds the 2nd &lt;td&gt; element\n\n$.each($tds, function() {                // Visits every single &lt;td&gt; element\n    console.log($(this).text());         // Prints out the text within the &lt;td&gt;\n});\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/T9uv7/\">VIEW DEMO</a></strong></p>\n\n<h1><strong>Useful methods</strong></h1>\n\n<ul>\n<li><a href=\"http://api.jquery.com/closest/\"><code>.closest()</code></a> - get the first element that matches the selector</li>\n<li><a href=\"http://api.jquery.com/parent/\"><code>.parent()</code></a> - get the parent of each element in the current set of matched elements</li>\n<li><a href=\"http://api.jquery.com/parents/\"><code>.parents()</code></a> - get the ancestors of each element in the current set of matched elements</li>\n<li><a href=\"https://api.jquery.com/children/\"><code>.children()</code></a> - get the children of each element in the set of matched elements</li>\n<li><a href=\"http://api.jquery.com/siblings/\"><code>.siblings()</code></a> - get the siblings of each element in the set of matched elements</li>\n<li><a href=\"http://api.jquery.com/find/\"><code>.find()</code></a> - get the descendants of each element in the current set of matched elements</li>\n<li><a href=\"http://api.jquery.com/next/\"><code>.next()</code></a> - get the immediately following sibling of each element in the set of matched elements</li>\n<li><a href=\"https://api.jquery.com/prev/\"><code>.prev()</code></a> - get the immediately preceding sibling of each element in the set of matched elements</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 31
                }
            ],
            "body": "<p>I need to extract the details of each column in my table. For example, column \"Name/Nr.\".</p>\n\n<ul>\n<li>The table contains a number of addresses</li>\n<li>The very last column of each row has a button that lets a user choose a listed address.</li>\n</ul>\n\n<p><strong>Problem:</strong> My code only picks up the first <code>&lt;td&gt;</code> that has a class <code>nr</code>. How do i get this to work?</p>\n\n<p><strong>Here's the jQuery bit:</strong></p>\n\n<pre><code>$(\".use-address\").click(function() {\n    var id = $(\"#choose-address-table\").find(\".nr:first\").text();\n    $(\"#resultas\").append(id); // Testing: append the contents of the td to a div\n});\n</code></pre>\n\n<p><strong>Table:</strong></p>\n\n<pre><code>&lt;table id=\"choose-address-table\" class=\"ui-widget ui-widget-content\"&gt;\n    &lt;thead&gt;\n        &lt;tr class=\"ui-widget-header \"&gt;\n            &lt;th&gt;Name/Nr.&lt;/th&gt;\n            &lt;th&gt;Street&lt;/th&gt;\n            &lt;th&gt;Town&lt;/th&gt;\n            &lt;th&gt;Postcode&lt;/th&gt;\n            &lt;th&gt;Country&lt;/th&gt;\n            &lt;th&gt;Options&lt;/th&gt;\n        &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        &lt;tr&gt;\n            &lt;td class=\"nr\"&gt;&lt;span&gt;50&lt;/span&gt;\n            &lt;/td&gt;\n            &lt;td&gt;Some Street 1&lt;/td&gt;\n            &lt;td&gt;Leeds&lt;/td&gt;\n            &lt;td&gt;L0 0XX&lt;/td&gt;\n            &lt;td&gt;United Kingdom&lt;/td&gt;\n            &lt;td&gt;\n                &lt;button type=\"button\" class=\"use-address\" /&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td class=\"nr\"&gt;49&lt;/td&gt;\n            &lt;td&gt;Some Street 2&lt;/td&gt;\n            &lt;td&gt;Lancaster&lt;/td&gt;\n            &lt;td&gt;L0 0XX&lt;/td&gt;\n            &lt;td&gt;United Kingdom&lt;/td&gt;\n            &lt;td&gt;\n                &lt;button type=\"button\" class=\"use-address\" /&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n",
            "last_activity_date": 1399803038,
            "question_id": 14460421,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "table",
                "button",
                "onclick"
            ],
            "title": "jQuery: Get the contents of a table row with a button click"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>This is probably because you're reading the file as a binary string and constructing the <code>multipart/form-data</code> request manually. For one, you don't need to use <code>FileReader</code>.\nSince you just want to send the content, try using <code>xhr.send(File)</code> or <code>xhr.send(FormData)</code>. The latter constructs and sends a <code>multipart/form-data</code> for you:</p>\n\n<pre><code>function uploadFiles(url, files) {\n  var formData = new FormData();\n\n  for (var i = 0, file; file = files[i]; ++i) {\n    formData.append(file.name, file);\n  }\n\n  var xhr = new XMLHttpRequest();\n  xhr.open('POST', url, true);\n  xhr.onload = function(e) { ... };\n\n  xhr.send(formData);  // multipart/form-data\n}\n\ndocument.querySelector('input[type=\"file\"]').onchange = function(e) {\n  uploadFiles('/server', this.files);\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>Full code at <a href=\"https://gist.github.com/992562\">https://gist.github.com/992562</a>. </p>\n\n<p>I am using HTML File API and drag/drop to upload files via XHR post to a PHP script. Procedurally, everything seems to be working OK, however when I try to open the uploaded files, any non-text file is much larger than the source file, and won't open. It's clearly not the same data as was on the source disk. However, text files are exactly the same and open just fine.</p>\n\n<p>Some examples on a 3-file drag/drop upload:\nfile 1: text/XML: on disk 13 KB, uploaded 13 KB, works perfectly\nfile 2: image/PNG: on disk 14 KB, uploaded 18 KB, won't open\nfile 3: application/XLSX: on disk 12 KB, uploaded 14 KB, won't open</p>\n\n<p>It all boils down to this (after xhr headers are setup, file object is ready, etc):</p>\n\n<pre><code>  var reader = new FileReader();\n  reader.onload = function(evt) {\n    xhr.send(evt.target.result)\n  }\n  reader.readAsBinaryString(f);\n</code></pre>\n\n<p>returning large, bad data. Is there anything clearly wrong with it?</p>\n",
            "last_activity_date": 1306431744,
            "question_id": 6133800,
            "score": 6,
            "tags": [
                "javascript",
                "html5",
                "google-chrome",
                "file-upload"
            ],
            "title": "HTML5 File API readAsBinaryString reads files as much larger, different than files on disk"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I've figured it out. When broken down, the code runs as follows:</p>\n\n<pre><code>var write = function(string) {\ndocument.write(string);\n}\n\nvar i = 0;\n\nvar hanoi = function(disc,src,aux,dst) {\n    if (disc &gt; 0) {\n    hanoi(disc - 1,src,dst,aux);\n    write(\"Move disc \" + disc + \" from \" + src + \" to \" + dst + \"&lt;br /&gt;\");\n    hanoi(disc - 1,aux,src,dst);\n    }\n};\n\nhanoi(3,\"src\",\"aux\",\"dst\");\n\n/*\nhanoi(3,\"src\",\"aux\",\"dst\");\n    if (disc &gt; 0) {\n    hanoi(2,'src','dst','aux');\n        if (disc &gt; 0) {\n        hanoi(1,'src','aux','dst');\n            if (disc &gt; 0) {\n            hanoi(0,'src','dst','aux');\n                END\n            write(\"Move disc \" + 1 + \" from \" + src + \" to \" + dst + \"&lt;br /&gt;\");\n            hanoi(0,'aux','src','dst');\n                END\n            }\n        write(\"Move disc \" + 2 + \" from \" + src + \" to \" + dst + \"&lt;br /&gt;\");\n        hanoi(1,'dst','src','aux');\n            if (disc &gt; 0) {\n            hanoi(0,'src','dst','aux');\n                END\n            write(\"Move disc \" + 1 + \" from \" + src + \" to \" + dst + \"&lt;br /&gt;\");\n            hanoi(0,'aux','src','dst');\n                END\n            }\n        }\n    write(\"Move disc \" + 3 + \" from \" + src + \" to \" + dst + \"&lt;br /&gt;\");\n    hanoi(2,'aux','src','dst');\n        if (disc &gt; 0) {\n        hanoi(1,'aux','dst','src');\n            if (disc &gt; 0) {\n            hanoi(0,'src','dst','aux');\n                END\n            write(\"Move disc \" + 1 + \" from \" + src + \" to \" + dst + \"&lt;br /&gt;\");\n            hanoi(0,'aux','src','dst');\n                END\n            }\n        write(\"Move disc \" + 2 + \" from \" + src + \" to \" + dst + \"&lt;br /&gt;\");\n        hanoi(1,'src','aux','dst');\n            if (disc &gt; 0) {\n            hanoi(0,'src','dst','aux');\n                END\n            write(\"Move disc \" + 1 + \" from \" + src + \" to \" + dst + \"&lt;br /&gt;\");\n            hanoi(0,'aux','src','dst');\n                END\n            }\n        }\n    }\n*/\n</code></pre>\n\n<p>The most confusing part about this was visualizing the END of the first recursive loop. Only when disc == 0 does the statement with disc == 3 finally get written.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Probably the simplest solution to the Towers of Hanoi works like this:</p>\n\n<p>To move <code>x</code> discs from peg A to peg C, using peg B as an \"aux\" peg:</p>\n\n<ol>\n<li>Move <code>x-1</code> discs from peg A to peg B, using peg C as the aux peg.</li>\n<li>Move the <code>x</code>'th disc from peg A to peg C (no aux peg needed, cause you're only moving one disc).</li>\n<li>Move the <code>x-1</code> discs from peg B to peg C, using peg A as the aux peg.</li>\n</ol>\n\n<p>Note that in order to move <code>x</code> discs, you have to move <code>x-1</code> discs.  You can just use the same function to move those <code>x-1</code> discs, and just switch which pegs are the source, dest, and aux pegs.  That's what makes Towers of Hanoi such a common example of recursion, and that's the kind of pattern you need to see in a problem in order to make recursion work for you.  It need not be \"move <code>x-1</code> discs\", of course...it could be something like \"list this subfolder\".  Trees (like a directory with subfolders and such) are another place where recursion shines.  As do other jobs where in order to do the job on an item, you may need to do the same job on sub-items.</p>\n\n<p>Now, in order to have useful recursion, you need a \"base case\" -- a condition where the recursion will stop.  If you don't, the code will run forever (or at least til it runs out of memory or overflows the call stack).  The base case here occurs when <code>x == 0</code> (since moving 0 discs means you do nothing, due to the <code>if</code> around the meat of the function).  It could also be when <code>x == 1</code>, as then you don't have to recurse, but the extra <code>if</code> before each <code>hanoi</code> call would add a bit of noise (and the main benefit to a recursive solution is its simplicity).  Anyway, when <code>x == 0</code>, the function returns without doing anything.  The function that called it (which had <code>x == 1</code>) now gets to continue doing its thing -- in this case, saying \"move disc 1 from src to dest\", and then calling the <code>hanoi</code> function again with the args switched.</p>\n\n<p>The flow goes a bit like this:</p>\n\n<pre><code>hanoi(3, src, aux, dest)\n  hanoi(2, src, dest, aux)\n    hanoi(1, src, aux, dest)\n      hanoi(0, src, dest, aux)        // no op\n      print \"Move 1 from src to dest\"\n      hanoi(0, aux, src, dest)        // no op\n\n    print \"Move 2 from src to aux\"\n\n    hanoi(1, dest, src, aux)\n      hanoi(0, dest, aux, src)        // no op\n      print \"move 1 from dest to aux\"\n      hanoi(0, src, dest, aux)        // no op\n\n  print \"move 3 from src to dest\"\n\n  hanoi(2, aux, src, dest)\n    hanoi(1, aux, dest, src)\n      hanoi(0, aux, src, dest)        // no op\n      print \"Move 1 from aux to src\"\n      hanoi(0, dest, aux, src)        // no op\n\n    print \"Move 2 from aux to dest\"\n\n    hanoi(1, src, aux, dest)\n      hanoi(0, src, dest, aux)        // no op\n      print \"move 1 from src to dest\"\n      hanoi(0, aux, src, dest)        // no op\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>This is code from a book I have explaining recursion. The problem is that I don't understand the steps taken by the program:</p>\n\n<pre><code>var hanoi = function(disc,src,aux,dst) {\n    if (disc &gt; 0) {\n        hanoi(disc - 1,src,dst,aux);\n        document.write(\"Move disc \" + disc + \" from \" + src + \" to \" + dst + \"&lt;br /&gt;\");\n        hanoi(disc - 1,aux,src,dst);\n    }\n};\n\nhanoi(3,\"src\",\"aux\",\"dst\");\n</code></pre>\n\n<p>This is how the Output reads:</p>\n\n<pre><code>Move disc 1 from src to dst\nMove disc 2 from src to aux\nMove disc 1 from dst to aux\nMove disc 3 from src to dst\nMove disc 1 from aux to src\nMove disc 2 from aux to dst\nMove disc 1 from src to dst\n</code></pre>\n\n<p>Can someone break this down step by step? It would be very helpful to me.</p>\n",
            "last_activity_date": 1409848504,
            "question_id": 6947653,
            "score": 5,
            "tags": [
                "javascript",
                "recursion"
            ],
            "title": "problem understanding how recursion applies to Towers of Hanoi"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>try:</p>\n\n<pre><code>$(\"td[id^=\" + value + \"]\")\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 106
                },
                {
                    "body": "<p>Here you go: </p>\n\n<pre><code>$('td[id^=\"' + value +'\"]')\n</code></pre>\n\n<p>so if the value is for instance <code>'foo'</code>, then the selector will be <code>'td[id^=\"foo\"]'</code>.  </p>\n\n<p>Note that the quotes are <strong>mandatory</strong>: <code>[id^=\"....\"]</code>.</p>\n\n<p>Source: <a href=\"http://api.jquery.com/attribute-starts-with-selector/\">http://api.jquery.com/attribute-starts-with-selector/</a></p>\n",
                    "is_accepted": false,
                    "score": 26
                }
            ],
            "body": "<p>I am trying to get all elements with an id starting with some value. Below is my jQuery code. I am trying to use a JavaScript variable when searching for items. But it does not work. What am I missing below? So the id 'value' am searching is the value of the clicked element</p>\n\n<pre><code>$(document).ready(function() {\n    $('input[name$=\"_chkmulti\"]').click(function(){\n        var value = $(this).val();\n        $(\"td[id^= + value +]\").each(function(){\n            alert(\"yes\");\n        });\n\n\n    });\n});\n</code></pre>\n",
            "last_activity_date": 1418402631,
            "question_id": 5413841,
            "score": 57,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery ID starts with"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>In your code you are assigning a native method to a property of custom object.\nWhen you call <code>support.animationFrame(function () {})</code> , it is executed in the context of current object (ie support). For the native requestAnimationFrame function to work properly, it must be executed in the context of window</p>\n\n<p>so the correct usage here is  <code>support.animationFrame.call(window, function() {});</code>.</p>\n\n<p>same happens with alert also</p>\n\n<pre><code>var myObj = {\n  myAlert : alert //copying native alert to an object\n};\n\nmyObj.myAlert('this is an alert'); //is illegal\nmyObj.myAlert.call(window, 'this is an alert'); // executing in context of window \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 70
                }
            ],
            "body": "<p>When I use requestAnimationFrame to do some native supported animation within below code:</p>\n\n<pre><code>var support = {\n    animationFrame: window.requestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        window.msRequestAnimationFrame ||\n        window.oRequestAnimationFrame\n};\n\nsupport.animationFrame(function() {}); //error\n\nsupport.animationFrame.call(window, function() {}); //right\n</code></pre>\n\n<p>Directly call the \"support.animationFrame\" will make \"Uncaught TypeError: Illegal invocation\" in chrome! Why?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1343535957,
            "question_id": 9677985,
            "score": 43,
            "tags": [
                "javascript",
                "html5",
                "google-chrome",
                "requestanimationframe"
            ],
            "title": "&quot;Uncaught TypeError: Illegal invocation&quot; in Chrome"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can select it and add to it as normal:</p>\n\n<pre><code>$('head').append('&lt;link /&gt;');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 79
                },
                {
                    "body": "<p>jQuery</p>\n\n<pre><code>$('head').append( ... );\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>document.getElementsByTagName('head')[0].appendChild( ... );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>JavaScript:</p>\n\n<pre><code>document.getElementsByTagName('head')[0].appendChild( ... );\n</code></pre>\n\n<p>Make DOM element like so:</p>\n\n<pre><code>link=document.createElement('link');\nlink.href='href';\nlink.rel='rel';\n\ndocument.getElementsByTagName('head')[0].appendChild(link);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>With jquery you have other option:</p>\n\n<pre><code>$('head').html($('head').html() + '...');\n</code></pre>\n\n<p>anyway it is working. JavaScript option others said, thats correct too.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>In the latest browsers (IE9+) you can also use <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/document.head\" rel=\"nofollow\">document.head</a>:</p>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>var favicon = document.createElement('link');\nfavicon.id = 'myFavicon';\nfavicon.rel = 'shortcut icon';\nfavicon.href = 'http://www.test.com/my-favicon.ico';\n\ndocument.head.appendChild(favicon);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Working with CMS, which prevents editing HTML source for <code>&lt;head&gt;</code> element.</p>\n\n<p>For example I want to add the following above the <code>&lt;title&gt;</code> tag:</p>\n\n<pre><code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=EmulateIE7\" /&gt;\n</code></pre>\n",
            "last_activity_date": 1406659932,
            "question_id": 1900874,
            "score": 40,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "xhtml"
            ],
            "title": "how to add anything in &lt;head&gt; through jquery/javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use <a href=\"http://kangax.github.io/compat-table/es7/#Object.observe\">kangax's Browser Compatibility Table for <code>Object.observe</code></a></p>\n\n<p>It is part of ECMA Script 7 Specifications, it seems. Luckily, at the time of this writing, my current browser, Chrome 33, is the only one which supports it :)</p>\n\n<p>If you like to enable it in Chrome 33, </p>\n\n<ol>\n<li><p>Visit <code>chrome://flags/</code></p></li>\n<li><p>And enable <code>Enable Experimental JavaScript</code></p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p><strong><a href=\"http://www.polymer-project.org\">Polymer</a></strong> is a new and promising framework that intends to implement <em>Web Components</em>, for which <code>Object.observe()</code> is an integral part.</p>\n\n<p>It provides polyfill implementation for \"evergreen\" browsers; the latest ones available.\nMoreover, <strong><a href=\"http://www.polymer-project.org/resources/compatibility.html\">they track what browser have native support for this feature</a>,</strong> so it speeds up their implementation.</p>\n\n<p><a href=\"https://github.com/Polymer/observe-js\">This polyfill is available as a separate library on GitHub.</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Chrome 35+ supports Object.observe() Method.</p>\n\n<p>More details here: <a href=\"http://www.html5rocks.com/en/tutorials/es7/observe/\" rel=\"nofollow\">html5rocks</a></p>\n\n<p>Update: It's moved to chrome 36 beta.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Which browsers, if any, support <code>Object.observe</code>? I'm surprised I'm unable to find any info on this.</p>\n\n<p>(And are you aware about any estimated times of arrival for this feature?)</p>\n\n<p>About Object.observe: <em>\"Object.observe allows for the direct observation of changes to ECMAScript objects. It allows an observer to receive a time-ordered sequence of change records which describe the set of changes which took place to the set of observed objects.\"</em> \u2014 see <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony%3aobserve#solution\">ecmascript.org</a>, the Solution section.)</p>\n",
            "last_activity_date": 1424648860,
            "question_id": 21073082,
            "score": 39,
            "tags": [
                "javascript",
                "browser",
                "observable",
                "object.observe"
            ],
            "title": "Which browsers support Object.observe?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p><a href=\"http://stackoverflow.com/questions/868889/submit-jquery-ui-dialog-on-enter\">This other stackoverflow question</a> should get you where you want:</p>\n\n<pre><code>$('#DialogTag').keyup(function(e) {\n    if (e.keyCode == 13) {\n        //Close dialog and/or submit here...\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>In your dialog's open function, you can focus the button:</p>\n\n<pre><code>$(\"#myDialog\").dialog({\n    open: function() {\n      $(this).parents('.ui-dialog-buttonpane button:eq(0)').focus(); \n    }\n});\n</code></pre>\n\n<p>Change the <code>:eq(0)</code> if it's at a different index, or find by name, etc.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>try this way:</p>\n\n<pre><code>$(\"#myDialog\").dialog({\n    open: function() {\n         $(this).siblings('.ui-dialog-buttonpane').find('button:eq(1)').focus(); \n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I like this one (it is working for me), which leaves the focus where I wanted to be (a text box)</p>\n\n<pre><code>    $(\"#logonDialog\").keydown(function (event) {\n        if (event.keyCode == 13) {\n            $(this).parent()\n                   .find(\"button:eq(0)\").trigger(\"click\");\n            return false;\n        }\n    });\n</code></pre>\n\n<p>However, this is working just for one button (Ok button), if needed ':eq(n)' could be set to select other button.</p>\n\n<p><strong>Note:</strong> I added a new line returning false to prevent event bubbling when the enter key is handled, I hope it helps better than before.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>The simplest way would be to use the submit action on a form within the dialog, however:</p>\n\n<ul>\n<li>I did not want to require a form within dialog (N.B. different browsers handle the enter key differently, and some do not always do a submit on enter).</li>\n<li>I wanted this to work if the user clicks in the title pane or button pane prior to pressing enter.</li>\n<li>I wanted to make a library method that I can use for ANY\njQueryUI dialog.</li>\n</ul>\n\n<p>The company I work for is 'EBL' and I avoid global scope...hence the prefix on the functions below:</p>\n\n<pre><code>EBL.onUiDialogOpen = function (event, ui, hideX, actionFirstButtonOnEnterKey) {\n\n    if (hideX) {\n        // There is no option to hide the 'X' so override.\n        $(\".ui-dialog-titlebar-close\").hide();\n    }\n\n    if (actionFirstButtonOnEnterKey) {\n        /* (event.target) will give the div that will become the content \n        of a UI dialog, once div is 'opened' is it surrounded by a \n        parent div that contains title and buttonpane divs as well as \n        content div - so I use .parent()\n\n        ...The keyup function is binded to all descendants, therefore:\n              -We need the e.stopPropagation() line.\n              -This code is NOT what you want if you DON'T want enter \n               key to initiate first button regardless of selected control.\n        */\n        $(event.target).parent().bind('keydown.justWhileOpen', function (e) {\n            if (e.keyCode === $.ui.keyCode.ENTER) {\n                e.stopPropagation();\n                $(event.target).next('.ui-dialog-buttonpane')\n                    .find('button:first').click();\n            }\n        });\n    }\n};\n</code></pre>\n\n<p>...works in combination with:</p>\n\n<pre><code>EBL.onUiDialogClose = function (event, ui) {\n    // Remove keyup handler when we close dialog\n    $(event.target).parent().unbind('.justWhileOpen');\n};\n</code></pre>\n\n<p>You do not need the .onUiDialogClose if you are using a dynamically created div and destroying it afterwards.</p>\n\n<p>You can see below how I use these library functions when initialising a non-dynamic dialog...</p>\n\n<pre><code>$('#divName').dialog({\n    //...\n    open: function (event, ui) { EBL.onUiDialogOpen(event, ui, false, true); },\n    close: function (event, ui) { EBL.onUiDialogClose(event, ui); },\n    //...\n});\n</code></pre>\n\n<p>So far I have tested this in IE9 and latest chrome/firefox.\nYou should validate the dialog as neccessary in your 'Ok' function.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A slight variation to use the buttons name as the selector. It reads a little better but there is obvious duplication with the button text string. Refactor to taste.</p>\n\n<pre><code>$(\"#confirm-dialog\").dialog({\n    buttons: {\n        \"Cancel\" : function(){},\n        \"OK\" : function(){}\n    },\n    open: function() {\n        $(this).siblings('.ui-dialog-buttonpane').find(\"button:contains('OK')\").focus(); \n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I'm using version 1.10.0. I could not get it to work with open but with focus. This focuses the second button:</p>\n\n<pre><code>focus: function(){\n  $(this).siblings('.ui-dialog-buttonpane').find('button:eq(1)').focus();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another option that gives you more control over all buttons in the dialog is to add them as an array of buttons. Then in the <strong>open event</strong> you can get the buttons by id and do whatever you want (including <strong>set the focus</strong>)</p>\n\n<pre><code>$('#myDialog').dialog({\n    buttons: [  \n                {\n                    id: \"btnCancel\",\n                    text: \"Cancel\",\n                    click: function(){\n                        $(this).dialog('close');\n                    }\n                },\n                {\n                    id: \"btnOne\",\n                    text: \"Print One\",\n                    click: function () {\n                        SomeFunction(1);\n                    }\n                },\n                {\n                    id: \"btnTwo\",\n                    text: \"Print Two\",\n                    click: function(){\n                        SomeFunction(0);\n                    }\n                }\n            ],\n    open: function () {\n        if ($('#hiddenBool').val() != 'True') {\n            $('#btnOne').hide();\n        }\n        $(\"#btnTwo\").focus();\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This simple piece of code styles your buttons and sets the default to the last one:</p>\n\n<pre><code> open: function(){\n\n      $buttonPane = $(this).next();\n      $buttonPane.find('button:first').addClass('accept').addClass('ui-priority-secondary');\n      $buttonPane.find('button:last').addClass('cancel').addClass('ui-state-default');\n      $buttonPane.find('button:last').focus();\n\n  },\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$(\"#logonDialog\").keydown(function (event) {if (event.keyCode == 13) {\n        $(this).parent().find(\"button:eq(0)\").trigger(\"click\");\n        return false;\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This worked for me within the dialog using jquery 1.10.2</p>\n\n<pre><code>dialog({\n    focus: function() {\n        $(this).on(\"keyup\", function(e) {\n            if (e.keyCode === 13) {\n                $(this).parent().find(\"button:eq(1)\").trigger(\"click\");\n                return false;\n            }\n        });\n    },\n</code></pre>\n\n<p>more options...</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In a jquery modal dialog, is there a way to select a button as the default action (action to execute when the user presses enter)?</p>\n\n<p>Example of jquery web site: \n<a href=\"http://jqueryui.com/demos/dialog/#modal-message\">jquery dialog modal message</a></p>\n\n<p>In the example above the dialog closes when the user presses Esc. I would like the \"Ok\" button action to be called when the user presses Enter.</p>\n",
            "last_activity_date": 1383396477,
            "question_id": 2522125,
            "score": 38,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "modal-dialog"
            ],
            "title": "jquery-ui Dialog: Make a button in the dialog the default action (Enter key)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You need to append the new element to existing element's parent before element's next simbling. Like:</p>\n\n<pre><code>var parentGuest = document.getElementById(\"one\");\nvar childGuest = document.createElement(\"li\");\nchildGuest.id = \"two\";\nparentGuest.parentNode.insertBefore(childGuest, parentGuest.nextSibling);\n</code></pre>\n\n<p>Or if you want just append it, then:</p>\n\n<pre><code>var parentGuest = document.getElementById(\"one\"); \nvar childGuest = document.createElement(\"li\"); \nchildGuest.id = \"two\"; \nparentGuest.parentNode.appendChild(childGuest);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You can use:</p>\n\n<pre><code>if (parentGuest.nextSibling) {\n  parentGuest.parentNode.insertBefore(childGuest, parentGuest.nextSibling);\n}\nelse {\n  parentGuest.parentNode.appendChild(childGuest);\n}\n</code></pre>\n\n<hr>\n\n<p>But as Pavel pointed out, the <em>referenceElement</em> can be null/undefined, and if so, <a href=\"https://developer.mozilla.org/docs/Web/API/Node.insertBefore\">insertBefore</a> behaves just like <a href=\"https://developer.mozilla.org/docs/Web/API/Node.appendChild\">appendChild</a>. So the following is equivalent to the above:</p>\n\n<pre><code>parentGuest.parentNode.insertBefore(childGuest, parentGuest.nextSibling);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p>If you are looking for a plain JS solution, then you just use <code>insertBefore()</code> against <code>nextSibling</code>.</p>\n\n<p>Something like:</p>\n\n<pre><code>parentGuest.parentNode.insertBefore(childGuest, parentGuest.nextSibling);\n</code></pre>\n\n<p>Note that default value of <code>nextSibling</code> is <code>null</code>, so, you don't need to do anything special for that.</p>\n\n<p><strong>Update:</strong> You don't even need the <code>if</code> in the currently accepted answer is needed, as <code>parentGuest.nextSibling</code> will return <code>null</code> if there's no next sibling, and passing <code>null</code> to this method means append at the end.</p>\n\n<p>Reference:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/DOM/Node.nextSibling\" rel=\"nofollow\">nextSibling</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node.insertBefore\" rel=\"nofollow\">insertBefore</a></li>\n</ul>\n\n<p>.</p>\n\n<p>IF you are using jQuery (ignore otherwise, I have stated plain JS answer above), you can leverage the convenient <code>after()</code> method:</p>\n\n<pre><code>$(\"#one\").after(\"&lt;li id='two'&gt;\");\n</code></pre>\n\n<p>Reference:</p>\n\n<ul>\n<li><a href=\"http://api.jquery.com/after/\" rel=\"nofollow\">jQuery after()</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>This suffices :</p>\n\n<pre><code> parentGuest.parentNode.insertBefore(childGuest, parentGuest.nextSibling || null);\n</code></pre>\n\n<p>since if the <code>refnode</code> (second parameter) is null, a regular appendChild is performed. see here : <a href=\"http://reference.sitepoint.com/javascript/Node/insertBefore\" rel=\"nofollow\">http://reference.sitepoint.com/javascript/Node/insertBefore</a></p>\n\n<p>Actually I doubt that the <code>|| null</code> is required, try it and see.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I would like to append an li element after another li inside a ul element using javascript, This is the code I have so far..</p>\n\n<pre><code>var parentGuest = document.getElementById(\"one\");\nvar childGuest = document.createElement(\"li\");\nchildGuest.id = \"two\";\n</code></pre>\n\n<p>I am familiar with appendChild,</p>\n\n<pre><code>parentGuest.appendChild(childGuest);\n</code></pre>\n\n<p>However this appends the new element inside the other, and not after. How can I append the new element after the existing one? Thanks.</p>\n\n<pre><code>&lt;ul&gt;\n  &lt;li id=\"one\"&gt;&lt;!-- where the new li is being put --&gt;&lt;/li&gt;\n  &lt;!-- where I want the new li --&gt;\n&lt;/ul&gt;\n</code></pre>\n",
            "last_activity_date": 1408943882,
            "question_id": 7258185,
            "score": 34,
            "tags": [
                "javascript",
                "getelementbyid",
                "appendchild",
                "createelement"
            ],
            "title": "Javascript Append Child AFTER Element"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><strong>Update</strong>:</p>\n\n<p>See my <a href=\"http://kangax.github.com/es5-compat-table/\">compatibility table</a>.</p>\n\n<p><strong>Original response</strong>:</p>\n\n<p>None as of now.</p>\n\n<p>Raphael Speyer was <a href=\"http://raphscallion.com/blog/\">working on Mozilla implementation for Rhino during this summer</a>, and afaik, their implementation is pretty close to completion.</p>\n\n<p>I know (based on info from ES-discuss list) that Microsoft is planning to include some of ES5 features into upcoming versions of IE and they might very well be working on strict mode implementation right now (as you probably know, IE8 already includes some of ES5 features, like <code>Object.defineProperty</code>).</p>\n\n<p>There's also <a href=\"http://code.google.com/p/google-caja/\">Google's Caja project</a> which somewhat emulates behavior of strict mode in some of its variations (Valija, Cajita, etc).</p>\n\n<p>Crockford also recently added this option to <a href=\"http://www.jslint.com/lint.html\">JSLint</a>, but I'm not sure if it actually triggers any additional validations (as per ES5-strict rules).</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>Now that it's actually released, Firefox 4 is the winner of \"first browser to support ES5 Strict Mode.\" Now you can start using it, as long as you test in Firefox 4.</p>\n\n<hr>\n\n<p>Safari 5.1+ and Chrome 13+ Also support strict mode.</p>\n\n<hr>\n\n<p>The first One is in: <a href=\"http://besen.sourceforge.net/\">Besen</a>. Implemented in Delphi. I think it's stand-alone, but I'm not sure. But it does support strict mode.</p>\n\n<p>Found via <a href=\"http://kangax.github.com/es5-compat-table/\">this compatibility table</a>.</p>\n\n<hr>\n\n<p><a href=\"http://jurassic.codeplex.com/\">Jurassic</a> claims to support ES5 Strict Mode.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>ECMAscript 5 strict mode requires these versions for major browsers (or higher):</p>\n\n<p><strong>Chrome 13.0<br/>\nSafari 5.1<br/>\nFirefox 4.0<br/>\nInternet Explorer 10.0<br/>\nOpera 11.6</strong></p>\n\n<p>No, IE9 does not have strict support, it's new to version 10 or later.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Opera 11.60 already fully supports ECMAScript 5.1 and it's strict mode variation. See @kangax compatibility table. </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><a href=\"http://www.ecma-international.org/publications/files/drafts/tc39-2009-025.pdf\">ECMAScript 5</a> is in its final draft as I write this; It is due to include a strict mode which will prevent you from assigning to the global object, using eval, and other restrictions. (<a href=\"http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/\">John Resig's Article</a> is a good introduction.)</p>\n\n<p>This magical sanity-saving mode is triggered by including the string \"use strict\" at the top of your file (or function.) However, in older environments, \"use strict\" is a no-op. If you add \"use strict\" and don't test it in a strict environment, you could be leaving a time-bomb of not-really-strict code that will break when it really hits a strict environment.</p>\n\n<p><strong>Which environments actually respect \"use strict\"?</strong></p>\n",
            "last_activity_date": 1360859936,
            "question_id": 1423889,
            "score": 34,
            "tags": [
                "javascript",
                "strict",
                "ecma262",
                "ecmascript-5"
            ],
            "title": "Which (javascript) environments support ECMAscript 5 strict mode? (aka &quot;use strict&quot;)"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p><kbd>Ctrl</kbd>+<kbd>F5</kbd> Should cause a full page refresh including all that cached javascript.  </p>\n\n<p>Occasionally though, you'll still need a cache clear, because even Ctrl+F5 won't work, for reasons beyond comprehension IE can't even get \"refresh\" right 100% of the time.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>If that fails, a random parameter on the query string will do it:</p>\n\n<p>index.html?a=346456</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Go to <strong>Internet Options</strong>. On the <strong>General</strong> tab, under <strong>Browsing History</strong> click <strong>Settings</strong>. Select the \"<strong>Every time I visit the webpage</strong>\" radio button.</p>\n\n<p>This doesn't \"disable\" the cache per se, but it should fix your underlying problem - the JS files should be reloaded every time.</p>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>Del</kbd> will open the Clear Private Data dialog (or select it from the Safety menu).  Uncheck everything but the first two items to clear only the cache.</p>\n\n<p>You shouldn't have to clear the cache though.  If you access your js files through a web server (such as IIS running locally), the normal cache control mechanisms <strong>should</strong> do the trick.  If they don't, a <kbd>Ctrl</kbd>+<kbd>F5</kbd> usually fixes the problem.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In order to set the browser cache turned off. Follow the instructions below:</p>\n\n<p>MS IE </p>\n\n<ol>\n<li>from a menu select \"Tools\" for IE5\nor \"View\" for IE4</li>\n<li>select \"Internet Options\" </li>\n<li>in \"Temporary Internet Files\" section click on \"Settings\"</li>\n<li>select \"Every visit to the page\" for \"Check for newer versions of stored pages\" \nsave the settings\nI hope this may help please check</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Load you JavaScript this way.</p>\n\n<pre><code>&lt;html&gt;\n...\n&lt;script type=\"text/javascript\"&gt;\ndocument.write('&lt;script src=\"yourscript.js?'+Math.random()+'\"&gt;&lt;/script&gt;');\n&lt;/script&gt;\n...\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>Edit:</strong> In case this is not obvious, remove this code as soon you will go into production!</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Maybe a easier way not to have user refresh the browser is just to rename the js files (and css). This is what worked for me... as the server didn't like a random number after the .js file</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If your javascript files are served exclusivley from a sub-directory, you could enable immediate content expiration for that directory in IIS.  I recently had this problem serving content from a sub-directory and this was the fastest, simplest solution that I found.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Open the IE debugging tools (F12), Cache on the menu, and select always refresh from server. This does mean you need to keep the debugging tools open.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>hit \"Fn F12\" to open developer tools</p>\n\n<p>click Cache</p>\n\n<p>choose \"Always refresh from server\"</p>\n\n<p>Every time you refresh it should be clearing the cache, but there are also quick access cache clearing from the cache menu or the shortcuts that are active when the dev tools are open.</p>\n\n<p>*Note- you must leave the dev tools window open, it doesn't have to be up front, but it has to remain open for the cache to remain disabled.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>How can I disable cache in IE8 ?\nWe are doing Javascript development and testing it in IE8, but we have to clear the cache every time we make changes to the Javascript files.</p>\n",
            "last_activity_date": 1386015113,
            "question_id": 2755800,
            "score": 32,
            "tags": [
                "javascript",
                "internet-explorer",
                "caching"
            ],
            "title": "How to disable cache in InternetExplorer 8"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>As far as I'm aware, javascript itself only knows about the <code>.</code> separator for decimals. At least one person whose judgement I trust on JS things concurs:</p>\n\n<p><a href=\"http://www.merlyn.demon.co.uk/js-maths.htm#DTS\" rel=\"nofollow\">http://www.merlyn.demon.co.uk/js-maths.htm#DTS</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>use:</p>\n\n<pre><code>theNumber.toLocaleString();\n</code></pre>\n\n<p>to get a properly formatted string with the right decimal and thousands separators</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Take a look into this question: <a href=\"http://stackoverflow.com/questions/1074660/with-a-browser-how-do-i-know-which-decimal-separator-does-the-client-use\">With a browser, how do I know which decimal separator does the client use?</a></p>\n\n<p>It's a clever way</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>According to the specification, a DecimalLiteral is defined as:</p>\n\n<pre><code>DecimalLiteral ::\n    DecimalIntegerLiteral . DecimalDigitsopt ExponentPartopt \n    . DecimalDigits ExponentPartopt \n    DecimalIntegerLiteral ExponentPartopt\n</code></pre>\n\n<p>and for satisfying the parseFloat argument:</p>\n\n<ol>\n<li>Let inputString be ToString(string).</li>\n<li>Let trimmedString be a substring of inputString consisting of the leftmost character that is not a StrWhiteSpaceChar and all characters to the right of that character.(In other words, remove leading white space.)</li>\n<li>If neither trimmedString nor any prefix of trimmedString satisfies the syntax of a StrDecimalLiteral (see 9.3.1), return NaN.</li>\n<li>Let numberString be the longest prefix of trimmedString, which might be trimmedString itself, that satisfies the syntax of a StrDecimalLiteral.</li>\n<li>Return the Number value for the MV  </li>\n</ol>\n\n<p>So numberString becomes the longest prefix of trimmedString that satisfies the syntax of a StrDecimalLiteral, meaning the first parseable literal string number it finds in the input.  Only the <code>.</code> can be used to specify a floating-point number.  If you're accepting inputs from different locales, use a string replace:</p>\n\n<pre><code>function parseLocalNum(num) {\n    return +(num.replace(\",\", \".\"));\n}\n</code></pre>\n\n<p>The function uses the unary operator instead of parseFloat because it seems to me that you want to be strict about the input.  <code>parseFloat(\"1ABC\")</code> would be <code>1</code>, whereas using the unary operator <code>+\"1ABC\"</code> returns <code>NaN</code>.  This makes it MUCH easier to validate the input.  Using parseFloat is just guessing that the input is in the correct format.</p>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>A thought struck me as I was writing a piece of JavaScript code that processed some floating point values. What is the decimal point symbol in JavaScript? Is it always <code>.</code>? Or is it culture-specific? And what about <code>.toFixed()</code> and <code>.parseFloat()</code>?  If I'm processing a user input, it's likely to include the local culture-specific decimal separator symbol.</p>\n\n<p>Ultimately I'd like to write code that supports both decimal points in user input - culture-specific and <code>.</code>, but I can't write such a code if I don't know what JavaScript expects.</p>\n\n<p><strong>Added:</strong> OK, Rubens Farias <a href=\"http://stackoverflow.com/questions/2085275/what-is-the-decimal-separator-symbol-in-javascript/2085307#2085307\">suggests</a> to look at <a href=\"http://stackoverflow.com/questions/1074660/with-a-browser-how-do-i-know-which-decimal-separator-does-the-client-use\">similar question</a> which has a neat accepted answer:</p>\n\n<pre><code>function whatDecimalSeparator() {\n    var n = 1.1;\n    n = n.toLocaleString().substring(1, 2);\n   return n;\n}\n</code></pre>\n\n<p>That's nice, it lets me get the locale decimal point. A step towards the solution, no doubt.</p>\n\n<p>Now, the remaining part would be to determine what the behavior of <code>.parseFloat()</code> is. Several answers point out that for floating point literals only <code>.</code> is valid. Does <code>.parseFloat()</code> act the same way? Or might it require the local decimal separator in some browser? Are there any different methods for parsing floating point numbers as well? Should I roll out my own just-to-be-sure?</p>\n",
            "last_activity_date": 1347019014,
            "question_id": 2085275,
            "score": 32,
            "tags": [
                "javascript",
                "parsing",
                "syntax",
                "decimal-point"
            ],
            "title": "What is the decimal separator symbol in JavaScript?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>What you want to do is set the selectedIndex attribute of the select box.</p>\n\n<pre><code>country.options.selectedIndex = index_of_indonesia;\n</code></pre>\n\n<p>Changing the 'selected' attribute will generally not work in IE.  If you <em>really</em> want the behavior you're describing, I suggest you write a custom javascript reset function to reset all the other values in the form to their default.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>// Get &lt;select&gt; object\nvar sel = $('country');\n\n// Loop through and look for value match, then break\nfor(i=0;i&lt;sel.length;i++) { if(sel.value==\"ID\") { break; } }\n\n// Select index \nsel.options.selectedIndex = i;\n</code></pre>\n\n<p>Begitu loh.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Good question. You will need to modify the HTML itself rather than rely on DOM properties.</p>\n\n<pre><code>var opt = $(\"option[val=ID]\"),\n    html = $(\"&lt;div&gt;\").append(opt.clone()).html();\nhtml = html.replace(/\\&gt;/, ' selected=\"selected\"&gt;');\nopt.replaceWith(html);\n</code></pre>\n\n<p>The code grabs the option element for Indonesia, clones it and puts it into a new div (not in the document) to retrieve the full HTML string: <code>&lt;option value=\"ID\"&gt;Indonesia&lt;/option&gt;</code>.</p>\n\n<p>It then does a string replace to add the attribute <code>selected=\"selected\"</code> <em>as a string</em>, before replacing the original option with this new one.</p>\n\n<p>I tested it on IE7. See it with the reset button working properly here: <a href=\"http://jsfiddle.net/XmW49/\">http://jsfiddle.net/XmW49/</a></p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>You're overthinking it:</p>\n\n<pre><code>var country = document.getElementById(\"country\");\ncountry.options[country.options.selectedIndex].selected = true;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<pre><code>var opt = $(\"option[val=ID]\");\nopt.attr('selected','selected');\u200b\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Instead of modify the HTML itself you should just set the value you want an select element:</p>\n\n<pre><code>$(function() {\n    $(\"#country\").val(\"Indonesia\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>This works in FF, IE9</p>\n\n<pre><code>var x = document.getElementById(\"country\").children[2];\nx.setAttribute(\"selected\", \"selected\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>To set the input option at run time try setting the 'checked' value. (even if it isn't a checkbox)</p>\n\n<pre><code>elem.checked=true;\n</code></pre>\n\n<p>Where elem is a reference to the option to be selected.</p>\n\n<p>So for the above issue:</p>\n\n<pre><code>var country = document.getElementById(\"country\");\ncountry.options[country.options.selectedIndex].checked=true;\n</code></pre>\n\n<p>This works for me, even when the options are not wrapped in a .</p>\n\n<p>If all of the  tags share the same name, they should uncheck when the new one is checked.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could search all the option values until it finds the correct one. </p>\n\n<pre><code>var defaultVal = \"Country\";\n$(\"#select\").find(\"option\").each(function () {\n\n    if ($(this).val() == defaultVal) {\n\n        $(this).prop(\"selected\", \"selected\");\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This should work.   </p>\n\n<pre><code>$(\"#country [value='ID']\").attr(\"selected\",\"selected\");\n</code></pre>\n\n<p>If you have function calls bound to the element just follow it with something like </p>\n\n<pre><code>$(\"#country\").change();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Realize this is an old question, but with the newer version of JQuery you can now do the following:</p>\n\n<pre><code>$(\"option[val=ID]\").prop(\"selected\",true);\n</code></pre>\n\n<p>This accomplishes the same thing as Box9's selected answer in one line.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a dynamic created select option using javascript function. the select object is</p>\n\n<pre><code>&lt;select name=\"country\" id=\"country\"&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>when the js function executed, the \"country\" object is</p>\n\n<pre><code>&lt;select name=\"country\" id=\"country\"&gt;\n    &lt;option value=\"AF\"&gt;Afghanistan&lt;/option&gt;\n    &lt;option value=\"AL\"&gt;Albania&lt;/option&gt;\n    ...\n    &lt;option value=\"ID\"&gt;Indonesia&lt;/option&gt;\n    ...\n    &lt;option value=\"ZW\"&gt;Zimbabwe&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>and displaying \"Indonesia\" as default selected option. note : there is no selected=\"selected\" attribute in that option.</p>\n\n<p>then I need to set selected=\"selected\" attribute to \"Indonesia\", and I use this </p>\n\n<pre><code>var country = document.getElementById(\"country\");\ncountry.options[country.options.selectedIndex].setAttribute(\"selected\", \"selected\");\n</code></pre>\n\n<p>using firebug, I can see the \"Indonesia\" option is like this</p>\n\n<pre><code>&lt;option value=\"ID\" selected=\"selected\"&gt;Indonesia&lt;/option&gt;\n</code></pre>\n\n<p>but it fail in IE (tested in IE 8).</p>\n\n<p>and then I tried using jQuery </p>\n\n<pre><code>$( function() {\n    $(\"#country option:selected\").attr(\"selected\", \"selected\");\n});\n</code></pre>\n\n<p>it fail both in FF and IE</p>\n\n<p>I need the \"Indonesia\" option must have selected=\"selected\" attribute so when I click reset button, it will select \"Indonesia\" again</p>\n\n<p>changing js function to dynamic create \"country\" options is not the option. the solution must work both in FF and IE</p>\n\n<p>thank you</p>\n",
            "last_activity_date": 1398200985,
            "question_id": 4590311,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "select",
                "attributes",
                "option"
            ],
            "title": "set option &quot;selected&quot; attribute from dynamic created option"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>It would seem that the most simple answer would be to bite the bullet, and include your noConflict lines. Of course if your pages aren't using a shared header, that solution might not be the best.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>&lt;script&gt;\n    document.write(unescape('%3Cscript type=\"text/javascript\" src=\"/obp/js/jquery.js\"%3E%3C/script%3E'));\n&lt;/script&gt;\n&lt;script&gt;\n    jQuery.noConflict();\n    var $j = jQuery;\n&lt;/script&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>var scripty = document.createElement('script');\nscripty.href=\"/obp/js/jquery.js\";\ndocument.getElementsByTagName('head')[0].appendChild(scripty);\njQuery.noConflict();\nvar $j = jQuery;\n</code></pre>\n\n<p><strong>EDIT:</strong></p>\n\n<p>I tried out this suggestion but the last 2 lines produce the error</p>\n\n<pre><code>jQuery is not defined\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I went through this for a while.  It is very annoying and in the end I decided to weed out all of my old Prototype stuff and replace it with jQuery.  I do like the way Prototype handles some Ajax tasks but it wasn't worth the trade off of maintaining all of the no conflict stuff.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If I were you, I'd drop my no conflict code into a JavaScript include file like you opined about above, and then figure out some process where I'd be setting these things I need to include in all my pages in one central place. If you are working with straight HTML files and you don't have any kind of templating/scripting capability server-side for what gets included in a document, there's always the possibility of doing a Server-Side Include.</p>\n\n<p>Either way, the pain you'll experience updating each of your pages this time will come back again when you need to update your analytics code or the site footer. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could call jquery first and then set </p>\n\n<pre><code>var $j = jQuery;\n</code></pre>\n\n<p>prototype will take control of <code>$</code> in this case.</p>\n\n<p>Or, you could just refer to jQuery by using the full jQuery function name (jQuery). </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Could you not just include the <code>jQuery = noConflict()</code> code in the jquery.js source file? Why would it need to be defined that way?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use Prototype below jQuery like this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"news/jquery-1.2.3.pack.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"news/jquery.easynews.js\"&gt;&lt;/script&gt;\n\n\n&lt;script type=\"text/javascript\" src=\"lb/js/prototype.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"lb/js/scriptaculous.js?load=effects\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"lb/js/lightbox.js\"&gt;&lt;/script&gt;\n&lt;link href=\"lb/css/lightbox.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n</code></pre>\n\n<p>in this case the jQuery function will create a problem, so you can use this to solve the problem:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n     jQuery.noConflict();\n     var JQ = jQuery;//rename $ function\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This solution worked fine:</p>\n\n<pre><code>jQuery.noConflict();\nvar $j = jQuery;\n</code></pre>\n\n<p>Now use <code>$j</code> in place of <code>$</code> for your jQuery code, like:</p>\n\n<pre><code>$j(document).ready(function() {\n    $j('#div_id').innerfade({\n         // some stuff\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You need to load it in your <code>pubic/javascript/application.js</code></p>\n\n<pre><code>jQuery.noConflict();\n\nvar $j = jQuery;\n</code></pre>\n\n<p>Here is also a good article that may be helpful.</p>\n\n<p><a href=\"http://www.alfajango.com/blog/rails-prototype-to-jquery/\" rel=\"nofollow\">JQuery &amp; Prototype working together</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just as a note to others that stumble upon this. The solutions are described here (mentioning prototype specifically):\n<a href=\"http://docs.jquery.com/Using_jQuery_with_Other_Libraries\" rel=\"nofollow\">http://docs.jquery.com/Using_jQuery_with_Other_Libraries</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Currently you can do something like this:</p>\n\n<pre><code>&lt;head&gt;          \n    &lt;script type=\"text/javascript\" src=\"/obp/js/prototype.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"/obp/js/jquery.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        var $j = jQuery.noConflict();\n    &lt;/script&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>Then, use jQuery as <code>$j()</code> and Prototype's <code>$()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Your <code>jquery-noconflict.js</code> should look like this (be sure that all is in one line):</p>\n\n<pre><code>document.write(\"&lt;script type=\\\"text/javascript\\\" src=\\\"/obp/js/jquery.js\\\"&gt;&lt;/script&gt;&lt;script type=\\\"text/javascript\\\"&gt;jQuery.noConflict();var $j = jQuery;&lt;/script&gt;\");\n</code></pre>\n\n<p>... and than your include (as you already pointed out) should look like this:</p>\n\n<pre><code>&lt;head&gt;      \n    &lt;script type=\"text/javascript\" src=\"/obp/js/prototype.js\"&gt;&lt;/script&gt;    \n    &lt;script type=\"text/javascript\" src=\"/obp/js/jquery-noconflict.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>This solution solves all your requirements I think.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Several of my pages use both JQuery and Protoype. Since I upgraded to version 1.3 of JQuery this appears to be causing problems, because both libraries define a function named '$'.</p>\n\n<p>JQuery provides a function noConflict() which relinquishes control of $ to other libraries that may be using it. So it seems like I need to go through all my pages that look like this:</p>\n\n<pre><code>&lt;head&gt;      \n    &lt;script type=\"text/javascript\" src=\"/obp/js/prototype.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"/obp/js/jquery.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>and change them to look like this:</p>\n\n<pre><code>&lt;head&gt;      \n    &lt;script type=\"text/javascript\" src=\"/obp/js/prototype.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"/obp/js/jquery.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        jQuery.noConflict();\n        var $j = jQuery;\n    &lt;/script&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>I should then be able to use '$' for Prototype and '$j' (or 'jQuery') for JQuery. I'm not entirely happy about duplicating these 2 lines of code in every relevant page, and expect that at some point somebody is likely to forget to add them to a new page. I'd prefer to be able to do the following </p>\n\n<ul>\n<li>Create a file j<code>query-noconflict.js</code> which \"includes\" <code>jquery.js</code> and the 2 lines of code shown above</li>\n<li>Import <code>jquery-noconflict.js</code> (instead of <code>jquery.js</code>) in all my JSP/HTML pages</li>\n</ul>\n\n<p>However, I'm not sure if it's possible to include one JS file in another, in the manner I've described? Of course an alternate solution is simply to add the 2 lines of code above to jquery.js directly, but if I do that I'll need to remember to do it every time I upgrade JQuery.</p>\n",
            "last_activity_date": 1356118508,
            "question_id": 451362,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "prototypejs"
            ],
            "title": "Using JQuery and Prototype in the same page"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>An empty array has a property <code>forEach</code> in its prototype which is a Function object. (The empty array is just an easy way to obtain a reference to the <code>forEach</code> function that all <code>Array</code> objects have.) Function objects, in turn, have a <code>call</code> property which is also a function. When you invoke a Function's <code>call</code> function, it runs the function with the given arguments. The first argument becomes <code>this</code> in the called function.</p>\n\n<p>You can find documentation for the <code>call</code> function <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/call\" rel=\"nofollow\">here</a>. Documentation for <code>forEach</code> is <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/forEach\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The <a href=\"https://developer.mozilla.org/en-US/docs/DOM/Document.querySelectorAll\"><code>querySelectorAll</code> method</a> returns a <code>NodeList</code>, which is similar to an array, but it's not quite an array. Therefore, it doesn't have a <code>forEach</code> method (which array objects inherit via <code>Array.prototype</code>).</p>\n\n<p>Since a <code>NodeList</code> is similar to an array, array methods will actually work on it, so by using <code>[].forEach.call</code> you are invoking the <code>Array.prototype.forEach</code> method in the context of the <code>NodeList</code>, as if you had been able to simply do <code>yourNodeList.forEach(/*...*/)</code>.</p>\n\n<p>Note that the empty array literal is just a shortcut to the expanded version, which you will probably see quite often too:</p>\n\n<pre><code>Array.prototype.forEach.call(/*...*/);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>It can be better written using</p>\n\n<pre><code>Array.prototype.forEach.call( document.querySelectorAll('a'), function(el) {\n\n});\n</code></pre>\n\n<p>What is does is <code>document.querySelectorAll('a')</code> returns an object similar to an array, but it does not inherit from the <code>Array</code> type.\nSo we calls the <code>forEach</code> method from the <code>Array.prototype</code> object with the context as the value returned by <code>document.querySelectorAll('a')</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>[]</code> is an array.<br>\nThis array isn't used at all.  </p>\n\n<p>It's being put on the page, because using an array gives you access to array prototypes, like <code>.forEach</code>.</p>\n\n<p>This is just faster than typing <code>Array.prototype.forEach.call(...);</code></p>\n\n<p>Next, <code>forEach</code> is a function which takes a function as an input...</p>\n\n<pre><code>[1,2,3].forEach(function (num) { console.log(num); });\n</code></pre>\n\n<p>...and for each element in <code>this</code> (where <code>this</code> is array-like, in that it has a <code>length</code> and you can access its parts like <code>this[1]</code>) it will pass three things:</p>\n\n<ol>\n<li>the element in the array</li>\n<li>the index of the element (third element would pass <code>2</code>)</li>\n<li>a reference to the array</li>\n</ol>\n\n<p>Lastly, <code>.call</code> is a prototype which functions have (it's a function which gets called on other functions).<br>\n<code>.call</code> will take its first argument and replace <code>this</code> inside of the regular function with whatever you passed <code>call</code>, as the first argument (<code>undefined</code> or <code>null</code> will use <code>window</code> in everyday JS, or will be whatever you passed, if in \"strict-mode\"). The rest of the arguments will be passed to the original function.  </p>\n\n<pre><code>[1, 2, 3].forEach.call([\"a\", \"b\", \"c\"], function (item, i, arr) {\n    console.log(i + \": \" + item);\n});\n// 0: \"a\"\n// 1: \"b\"\n// 2: \"c\"\n</code></pre>\n\n<p>Therefore, you're creating a quick way to call the <code>forEach</code> function, and you're changing <code>this</code> from the empty array to a list of all <code>&lt;a&gt;</code> tags, and for each <code>&lt;a&gt;</code> in-order, you are calling the function provided.</p>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p><code>[]</code> always returns a new array, it is equivalent to <code>new Array()</code> but is guaranteed to return an array because <code>Array</code> could be overwritten by the user whereas <code>[]</code> can not. So this is a safe way to get the prototype of <code>Array</code>, then as described, <code>call</code> is used to execute the function on the arraylike nodelist (this).</p>\n\n<blockquote>\n  <p>Calls a function with a given this value and arguments provided\n  individually. <a href=\"https://developer.mozilla.org/en/docs/JavaScript/Reference/Global_Objects/Function/call\" rel=\"nofollow\">mdn</a></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The other answers have explained this code very well, so I'll just add a suggestion.</p>\n\n<p>This is a good example of code that should be refactored for simplicity and clarity. Instead of using <code>[].forEach.call()</code> or <code>Array.prototype.forEach.call()</code> every time you do this, make a simple function out of it:</p>\n\n<pre><code>function forEach( list, callback ) {\n    Array.prototype.forEach.call( list, callback );\n}\n</code></pre>\n\n<p>Now you can call this function instead of the more complicated and obscure code:</p>\n\n<pre><code>forEach( document.querySelectorAll('a'), function( el ) {\n   // whatever with the current node\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There is a great post on this: <a href=\"http://toddmotto.com/ditch-the-array-foreach-call-nodelist-hack/\" rel=\"nofollow\">http://toddmotto.com/ditch-the-array-foreach-call-nodelist-hack/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I was looking at some snippets of code, and I found multiple elements calling a function over a node list with a forEach applied to an empty array.</p>\n\n<p>For example I have something like:</p>\n\n<pre><code>[].forEach.call( document.querySelectorAll('a'), function(el) {\n   // whatever with the current node\n});\n</code></pre>\n\n<p>but I can't understand how it works. Can anyone explain me the behaviour of the empty array in front of the forEach and how the <code>call</code> works?</p>\n",
            "last_activity_date": 1418830929,
            "question_id": 16053357,
            "score": 28,
            "tags": [
                "javascript",
                "arrays",
                "foreach",
                "ecmascript-5",
                "nodelist"
            ],
            "title": "What does [].forEach.call() do in JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Are you using jQuery?  If so, you can try comparing the div's width to it's scrollWidth.</p>\n\n<pre><code>if ($('#div-id')[0].scrollWidth &gt;  $('#div-id').innerWidth()) {\n    //Text has over-flowed\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>For illustrative purposes let's say your div has <code>id=\"d\"</code>, then you could do:</p>\n\n<pre><code>var d = document.getElementById('d'),\n    dWider;\nd.style.maxWidth = '9999em';\nd.style.overflow = 'visible';\ndWider = d.offsetWidth &gt; 100;\nd.style.maxWidth = '100px';\nd.style.overflow = 'hidden';\n</code></pre>\n\n<p>Then the var <code>dWider</code> will be true if the text overflows and false if it doesn't.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>jQuery plugin for checking if text has overflown, not written very well, but works as it suppose to be working. Posting this because I didn't find a working plugin for this anywhere.</p>\n\n<pre><code>jQuery.fn.hasOverflown = function () {\n   var res;\n   var cont = $('&lt;div&gt;'+this.text()+'&lt;/div&gt;').css(\"display\", \"table\")\n   .css(\"z-index\", \"-1\").css(\"position\", \"absolute\")\n   .css(\"font-family\", this.css(\"font-family\"))\n   .css(\"font-size\", this.css(\"font-size\"))\n   .css(\"font-weight\", this.css(\"font-weight\")).appendTo('body');\n   res = (cont.width()&gt;this.width());\n   cont.remove();\n   return res;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The better of is to detect whether text will fits right before you display the element. So you can use this function which doesn't requires the element to be on screen.</p>\n\n<pre><code>function textWidth(text, fontProp) {\n    var tag = document.createElement(\"div\");\n    tag.style.position = \"absolute\";\n    tag.style.left = \"-999em\";\n    tag.style.whiteSpace = \"nowrap\";\n    tag.style.font = fontProp;\n    tag.innerHTML = text;\n\n    document.body.appendChild(tag);\n\n    var result = tag.clientWidth;\n\n    document.body.removeChild(tag);\n\n    return result;\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>if ( textWidth(\"Text\", \"bold 13px Verdana\") &gt; elementWidth) {\n    ...\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can you detect if text has overflown? For example, the following text is longer than it's div container allows. How can I detect this in javascript?</p>\n\n<pre><code>&lt;div style=\"max-width: 100px; white-space:nowrap; overflow: hidden;\"&gt;\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit\n&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1408255519,
            "question_id": 6406843,
            "score": 28,
            "tags": [
                "javascript"
            ],
            "title": "Detect if text has overflown"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Yes, you'll need arrays.</p>\n\n<pre><code>var days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\nvar months = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n\nvar day = days[ now.getDay() ];\nvar month = months[ now.getMonth() ];\n</code></pre>\n\n<p>Or you can use the <a href=\"http://www.datejs.com/\">date.js</a> library.</p>\n\n<hr>\n\n<p><strong>EDIT:</strong> </p>\n\n<p>If you're going to use these frequently, you may want to extend <code>Date.prototype</code> for accessibility.</p>\n\n<pre><code>(function() {\n    var days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\n\n    var months = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n\n    Date.prototype.getMonthName = function() {\n        return months[ this.getMonth() ];\n    };\n    Date.prototype.getDayName = function() {\n        return days[ this.getDay() ];\n    };\n})();\n\nvar now = new Date();\n\nvar day = now.getDayName();\nvar month = now.getMonthName();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p>Using <a href=\"http://phrogz.net/JS/FormatDateTime_JS.txt\" rel=\"nofollow\">http://phrogz.net/JS/FormatDateTime_JS.txt</a> you can just:</p>\n\n<pre><code>var now = new Date;\nvar prnDt = now.customFormat( \"Printed on #DDDD#, #D# #MMMM# #YYYY# at #hhh#:#mm#:#ss#\" );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Unfortunately, <code>Date</code> object in javascript returns information about months only in numeric format. The faster thing you can do is to create an array of months (they are not supposed to change frequently!) and create a function which returns the name based on the number.</p>\n\n<p>Something like this:</p>\n\n<pre><code>function getMonthNameByMonthNumber(mm) { \n   var months = new Array(\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"); \n\n   return months[mm]; \n}\n</code></pre>\n\n<p>Your code therefore becomes:</p>\n\n<pre><code>var prnDt = \"Printed on Thursday, \" + now.getDate() + \" \" + getMonthNameByMonthNumber(now.getMonth) + \" \"+  now.getFullYear() + \" at \" + h + \":\" + m + \":\" s;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can look at <a href=\"http://code.google.com/p/datejs/\" rel=\"nofollow\">datejs</a> which parses the localized date output for example</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I don't know much about Javascript, and the other questions I found are related to operations on dates, not only getting the information as I need it.</p>\n\n<h2>Objective</h2>\n\n<p>I wish to get the date as below-formatted:</p>\n\n<blockquote>\n  <p>Printed on Thursday, 27 January 2011 at 17:42:21</p>\n</blockquote>\n\n<p>So far, I got the following:</p>\n\n<pre><code>var now = new Date();\nvar h = now.getHours();\nvar m = now.getMinutes();\nvar s = now.getSeconds();\n\nh = checkTime(h);\nm = checkTime(m);\ns = checkTime(s);\n\nvar prnDt = \"Printed on Thursday, \" + now.getDate() + \" January \" + now.getFullYear() + \" at \" + h + \":\" + m + \":\" s;\n</code></pre>\n\n<p>I now need to know how to get the day of week and the month of year (their names).</p>\n\n<p>Is there a simple way to make it, or shall I consider using arrays where I would simply index to the right value using <code>now.getMonth()</code> and <code>now.getDay()</code>?</p>\n",
            "last_activity_date": 1400065869,
            "question_id": 4822852,
            "score": 27,
            "tags": [
                "javascript",
                "datetime",
                "dayofweek"
            ],
            "title": "How to get the day of week and the month of the year?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The following will tell you whether or not all of the text is selected within a text input in all major browsers.</p>\n\n<p>Example: <a href=\"http://www.jsfiddle.net/9Q23E/\">http://www.jsfiddle.net/9Q23E/</a></p>\n\n<p>Code:</p>\n\n<pre><code>function isTextSelected(input) {\n    if (typeof input.selectionStart == \"number\") {\n        return input.selectionStart == 0 &amp;&amp; input.selectionEnd == input.value.length;\n    } else if (typeof document.selection != \"undefined\") {\n        input.focus();\n        return document.selection.createRange().text == input.value;\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>Instead of hitting the wall of digits dots and selections you can climb it easily by checking the value in <code>onchange</code> event.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;input type=\"text\" onchange=\"ValidateNumericValue(this);\" /&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>function ValidateNumericValue(oInput) {\n    var blnRequired = true; //set to false if allowing empty value\n\n    var sValue = oInput.value;\n    if (blnRequired &amp;&amp; sValue.length == 0) {\n        alert(\"Please enter a value\");\n        oInput.focus();\n        return;\n    }\n\n    var numericValue = parseFloat(sValue);\n    if (isNaN(numericValue)) {\n        alert(\"Value is not a valid number\");\n        oInput.focus();\n        return;\n    }\n\n    //put back to make 2.15A back to 2.15\n    oInput.value = numericValue + \"\";\n}\n</code></pre>\n\n<p>This will check the value when changed (and user go to different element) and when not valid will alert and set focus back.</p>\n\n<p>Live test case: <a href=\"http://jsfiddle.net/yahavbr/NFhay/\" rel=\"nofollow\">http://jsfiddle.net/yahavbr/NFhay/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can get the id of the selected element in the page with the following code:</p>\n\n<pre><code>elem_offset = document.getSelection().anchorOffset;\nelem = document.getSelection().anchorNode.childNodes[elem_offset];\nalert(elem.id);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have text boxes <code>&lt;input type='text'&gt;</code> that only allow numeric characters and wont let the user enter a dot (.) more than once. Problem is, if the text in the text box is selected, the user intends to overwrite the contents with a dot, hence making it allowed! The question is, how can you tell in javascript whether the text in that text box is selected or not.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1365184785,
            "question_id": 5001608,
            "score": 26,
            "tags": [
                "javascript",
                "jquery",
                "input",
                "textbox"
            ],
            "title": "How to know if the text in a textbox is selected?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>That is done to make sure that undefined always is <code>undefined</code>. In JavaScript, since undefined isn't a reserved word but a regular variable, this would be allowed for instance:</p>\n\n<pre><code>undefined = 2; // Assign a different value to undefined\n\n// Now this statement would be true\nif (undefined == 2)\n</code></pre>\n\n<p>So to make sure that undefined is in fact undefined, even if some other \"evil\" script would have reassigned undefined with another value, you create a parameter that you call undefined, and then when you call the function, you make sure to not pass a value to that parameter - thus you can be sure that the variable undefined will always be undefined within your function.</p>\n\n<p>So in the case of jQuery:</p>\n\n<pre><code>(function($, undefined) { ... })(jQuery);\n</code></pre>\n\n<p>They pass in jQuery and assign it to the $ variable for convenience, but then they don't pass a second value to the undefined parameter, thus undefined will be undefined. </p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>undefined is not a reserved word in javascript, it is simply a variable. jQuery is ensuring that if some bad developer overwrites the value of undefined in their javascript, then jQuery will ignore it and establish it's own variable, undefined, which is never passed a value (see the self-executing (jQuery) at the end) and is therefore actually undefined.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>There are two reasons for that:</p>\n\n<p>1) Since <code>undefined</code> is a property of the global object, without write-protection, it can be overridden which may result in strange and unexpected behavior when trying this: <code>( var == undefined)</code>.</p>\n\n<p>By having an function argument <code>undefined</code> (the name actually does not matter) which you don't pass a parameter to, you make sure you have a variable which really is <code>undefined</code> so you can test \"undefinedness\" against this variable.</p>\n\n<p>Btw. the safest method to test for undefined is: <code>typeof ( var ) === 'undefined'</code></p>\n\n<p>EDIT:\nWith adoption of EcmaScript 5, <code>undefined</code>, <code>NaN</code> and <code>Infinity</code> are now readonly in all modern browsers - of course with the exception of Internet Explorer up to Version 9 :(. So this is not necessary anymore, however:</p>\n\n<p>2) Since <code>undefined</code> is now a variable name in this function's scope rather than a global object property, minifiers can reduce it to a single letter thus achieving a better compression rate on the minified file.</p>\n",
                    "is_accepted": true,
                    "score": 34
                }
            ],
            "body": "<p>I have noticed <code>jQuery</code> and related keynote plugins like <code>jQuery.UI</code> pass <code>undefined</code> as a parameter into anonymous functions used in their module definitions, like so:</p>\n\n<pre><code>(function($, undefined) { ... })(jQuery);\n</code></pre>\n\n<p>Alternatively, I have noticed other plugins recommended by jQuery and/or others do NOT pass undefined in as a parameter.</p>\n\n<p>This is probably a silly question, but...</p>\n\n<p>Shouldn't it always be available anyway?  Why pass it in?  Is there some sort of other purpose or trick going on here?</p>\n",
            "last_activity_date": 1387452778,
            "question_id": 9602901,
            "score": 24,
            "tags": [
                "javascript",
                "jquery",
                "plugins"
            ],
            "title": "What is the purpose of passing-in undefined?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This works for me in Chrome v16b and Safari v5.1 on Windows: <a href=\"http://phrogz.net/SVG/chloropleth.html\" rel=\"nofollow\">http://phrogz.net/SVG/chloropleth.html</a></p>\n\n<p>All I did was use the Developer Tools to Copy as HTML the SVG node, paste it into a blank document, and add the links to the two CSS files. Does this appear correctly for you in Safari?</p>\n\n<p><strong>Edit</strong>: Here it is as a standalone SVG file: <a href=\"http://phrogz.net/SVG/chloropleth.svg\" rel=\"nofollow\">http://phrogz.net/SVG/chloropleth.svg</a><br>\nFor this I added the <code>xmlns</code> attribute to the <code>&lt;svg&gt;</code> and the external links:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;?xml-stylesheet href=\"http://mbostock.github.com/d3/ex/choropleth.css\" type=\"text/css\"?&gt;\n&lt;?xml-stylesheet href=\"http://mbostock.github.com/d3/ex/colorbrewer.css\" type=\"text/css\"?&gt;\n&lt;svg xmlns=\"http://www.w3.org/2000/svg\"&gt;&lt;!-- 1MB of data --&gt;&lt;/svg&gt;\n</code></pre>\n\n<p><em>Again, verified to work in Chrome and Safari.</em></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is late, but width D3 it would be simple to inline the css. You would do something like...</p>\n\n<pre><code>d3.json(\"../data/us-counties.json\", function(json) {\n  counties.selectAll(\"path\")\n      .data(json.features)\n    .enter().append(\"path\")\n      .attr(\"fill\", data ? quantize : null)\n      .attr(\"d\", path);\n});\n\nd3.json(\"unemployment.json\", function(json) {\n  data = json;\n  counties.selectAll(\"path\")\n      .attr(\"fill\", quantize);\n});\n\nfunction quantize(d) {\n  return \"hsla(120, 50%, 50%, \" + Math.min(8, ~~(data[d.id] * 9 / 12)) + \")\";\n}\n</code></pre>\n\n<p>My function quantize is just a quick hack for demonstration, but you could look at colorbrewer  work out the logic for applying quantiles to color.s</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I think <a href=\"https://github.com/NYTimes/svg-crowbar\">SVG Crowbar</a> may be the best way to deal with this.</p>\n\n<p><a href=\"http://nytimes.github.io/svg-crowbar/\">Documentation</a></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Here's a nice way to use <a href=\"http://nytimes.github.io/svg-crowbar/\" rel=\"nofollow\">svg-crowbar.js</a> to provide a button on your site to allow your users to download your visualization as svg.</p>\n\n<p><strong>1) Define your button's CSS:</strong></p>\n\n<pre><code>.download { \n  background: #333; \n  color: #FFF; \n  font-weight: 900; \n  border: 2px solid #B10000; \n  padding: 4px; \n  margin:4px;\n}\n</code></pre>\n\n<p><strong>2) Define your button's HTML/JS:</strong></p>\n\n<pre><code>&lt;i class=\"download\" href=\"javascript:(function () { var e = document.createElement('script'); if (window.location.protocol === 'https:') { e.setAttribute('src', 'https://rawgit.com/NYTimes/svg-crowbar/gh-pages/svg-crowbar.js'); } else { e.setAttribute('src', 'http://nytimes.github.com/svg-crowbar/svg-crowbar.js'); } e.setAttribute('class', 'svg-crowbar'); document.body.appendChild(e); })();\"&gt;&lt;!--\u290b--&gt;&lt;big&gt;\u21e9&lt;/big&gt; Download&lt;/i&gt;\n</code></pre>\n\n<p>Here's a closer look at that same javascript:</p>\n\n<pre><code>javascript:(function (){ \n    var e = document.createElement('script'); \n    if (window.location.protocol === 'https:') { \n        e.setAttribute('src', 'https://rawgit.com/NYTimes/svg-crowbar/gh-pages/svg-crowbar.js'); \n    } else { \n        e.setAttribute('src', 'http://nytimes.github.com/svg-crowbar/svg-crowbar.js'); \n    } \n    e.setAttribute('class', 'svg-crowbar'); \n    document.body.appendChild(e); \n})();\n</code></pre>\n\n<p><strong>3) You're done.</strong> This produces an svg download that Inkscape can open.</p>\n\n<p><strong>Note:</strong> svg-crowbar.js is loaded from <a href=\"https://rawgit.com\" rel=\"nofollow\">https://rawgit.com</a> or <a href=\"http://nytimes.github.com\" rel=\"nofollow\">http://nytimes.github.com</a>; you may prefer to integrate it into your website/folder.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I am using d3.js to visualize some data. I would like to be able to take the SVG code that it generates and store it as a <code>.svg</code> image file (for editing in Inkscape/Illustrator).</p>\n\n<p>I have tried simply copying the contents of the svg tag i.e. </p>\n\n<pre><code>&lt;svg&gt;\n&lt;!--snip--&gt;\n&lt;/svg&gt;\n</code></pre>\n\n<p>into a file called image.svg, but this misses out on the color/styling information, which is in two separate CSS files.</p>\n\n<p>I'm working with <a href=\"http://mbostock.github.com/d3/ex/choropleth.html\">this example</a>.</p>\n\n<p>Is there a simple way to do this?</p>\n",
            "last_activity_date": 1408213037,
            "question_id": 8435537,
            "score": 24,
            "tags": [
                "javascript",
                "css",
                "svg",
                "d3.js"
            ],
            "title": "Convert JavaScript-generated SVG to a file"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can't really use Date.parse. I suggest you use:   <code>new Date (year, month [, date [, hours [, minutes [, seconds [, ms ] ] ] ] ] )</code></p>\n\n<p>To split the string you could try</p>\n\n<pre><code>var s = '2011-06-21T14:27:28.593Z';\nvar a = s.split(/[^0-9]/);\n//for (i=0;i&lt;a.length;i++) { alert(a[i]); }\nvar d=new Date (a[0],a[1]-1,a[2],a[3],a[4],a[5] );\nalert(s+ \" \"+d);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>I've checked it in several browsers, and yes, safari returns <code>invalid date</code>. By the way, you don't have to use <code>Date.parse</code> here, just <code>new Date([datestring])</code> will work too. Safari evidently requires more formatting of the datestring you supply. If you replace '-' with '/', remove the T and everything after the dot (.593Z), it will give you a valid date. This code is tested and works in Safari</p>\n\n<pre><code>var datestr = '2011-06-21T14:27:28.593Z'.split(/[-T.]/);\nvar safdat = new Date( datestr.slice(0,3).join('/')+' '+datestr[3] );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I ended up using a library to offset this:</p>\n\n<p><a href=\"http://zetafleet.com/blog/javascript-dateparse-for-iso-8601\" rel=\"nofollow\">http://zetafleet.com/blog/javascript-dateparse-for-iso-8601</a></p>\n\n<p>Once that library was included, you use this code to create the new date:</p>\n\n<pre><code>var date = new Date(Date.parse(datestring));\n</code></pre>\n\n<p>Our project wasn't using millisecond specifiers, but I don't believe that will cause an issue for you.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I tend to avoid <code>Date.parse</code>, as per the other answers for this question. It doesn't seem to be a portable way to reliably deal with dates.</p>\n\n<p>Instead, I have used something like the function below. This uses jQuery to map the string array into a number array, but that's a pretty easy dependency to remove / change. I also include what I consider sensible defaults, to allow you to parse <code>2007-01-09</code> and <code>2007-01-09T09:42:00</code> using the same function.</p>\n\n<pre><code>function dateFromString(str) {\n  var a = $.map(str.split(/[^0-9]/), function(s) { return parseInt(s, 10) });\n  return new Date(a[0], a[1]-1 || 0, a[2] || 1, a[3] || 0, a[4] || 0, a[5] || 0, a[6] || 0);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I have the following code</p>\n\n<pre><code>var c = new Date(Date.parse(\"2011-06-21T14:27:28.593Z\"));\nconsole.log(c);\n</code></pre>\n\n<p>On Chrome it correctly prints out the date on the console. In Safari\nit fails. Who is correct and more importantly what is the best way\nto handle this?</p>\n",
            "last_activity_date": 1370250031,
            "question_id": 6427204,
            "score": 24,
            "tags": [
                "javascript",
                "parsing",
                "date",
                "google-chrome",
                "safari"
            ],
            "title": "Date parsing in javascript is different between safari and chrome"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You could try doing </p>\n\n<pre><code>document.getElementById(id).innerHTML = ajax_response\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here's how to do it in <a href=\"http://prototypejs.org/api/element/update\">Prototype</a>: <code>$(id).update(data)</code></p>\n\n<p>And <a href=\"http://docs.jquery.com/Manipulation/replaceWith#content\">jQuery</a>: <code>$('#id').replaceWith(data)</code></p>\n\n<p>But <code>document.getElementById(id).innerHTML=data</code> should work too.</p>\n\n<p>EDIT: Prototype and jQuery automatically evaluate scripts for you.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>try this with <strong>jQuery</strong>: </p>\n\n<pre><code>$('body').load( url,[data],[callback] );\n</code></pre>\n\n<p>Read more at <a href=\"http://docs.jquery.com/Ajax/load#urldatacallback\">docs.jquery.com / Ajax / load</a></p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>I'm assuming you are using jQuery or something similar. If you are using jQuery, then the following should work:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n   &lt;script src=\"jquery.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n   content\n&lt;/body&gt;\n&lt;script type=\"text/javascript\"&gt;\n   $(\"body\").load(url);\n&lt;/script&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Can't you just try to replace the body content with the document.body handler?</p>\n\n<p>if your page is this:</p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\nblablabla\n&lt;script type=\"text/javascript\"&gt;\ndocument.body.innerHTML=\"hi!\";\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Just use the document.body to replace the body.</p>\n\n<p>This works for me. All the content of the BODY tag is replaced by the innerHTML you specify.\nIf you need to even change the html tag and all childs you should check out which tags of the 'document.' are capable of doing so.</p>\n\n<p>An example with javascript scripting inside it:</p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\nblablabla\n&lt;script type=\"text/javascript\"&gt;\nvar changeme = \"&lt;button onClick=\\\"document.bgColor = \\'#000000\\'\\\"&gt;click&lt;/button&gt;\";\ndocument.body.innerHTML=changeme;\n&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p></p>\n\n<p>This way you can do javascript scripting inside the new content. Don't forget to escape all double and single quotes though, or it won't work. escaping in javascript can be done by traversing your code and putting a backslash in front of all singe and double quotes.</p>\n\n<p>Bare in mind that server side scripting like php doesn't work this way. Since PHP is server-side scripting it has to be processed before a page is loaded. Javascript is a language which works on client-side and thus can not activate the re-processing of php code.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The simplest way is to set the new HTML content using:</p>\n\n<pre><code>document.open();\ndocument.write(newContent);\ndocument.close();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>the simplest way is</p>\n\n<pre><code>$(\"body\").html(data);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an HTML page with a typical structure:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n   &lt;script .../&gt;\n   &lt;style .../&gt;\n&lt;/head&gt;\n&lt;body&gt;\n   content\n&lt;/body&gt;\n&lt;script&gt;\n   var success_callback = function(data) {\n      // REPLACE PAGE CONTENT &amp; STRUCTURE WITH \"data\"\n   }\n   ajax(url, params, success_callback);\n&lt;/script&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Do you think it is possible ?  I've already tried to give the html tag an id and doing <code>$(id).replace(data);</code> with no success.</p>\n\n<p>Don't ask me why, but that is what I need (I'm working with a special \"mashup builder\" site... it is a long story).</p>\n\n<p><strong>EDIT</strong> : I forgot to say that <strong>scripts in the received content have to be executed</strong>, even external scripts included using <code>&lt;script src=\"...\"&gt;</code>.</p>\n",
            "last_activity_date": 1398824257,
            "question_id": 483745,
            "score": 24,
            "tags": [
                "javascript",
                "html",
                "ajax",
                "dom"
            ],
            "title": "Replace HTML page with contents retrieved via AJAX"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Okay, so I was able to get this working in Chrome on Mac. Your mileage may vary. Also, this is pretty hacky IMO, so it may not be worth it. Honestly this should exist as a setting within Chrome, and the behavior should be delegated to the website. E.g. Chrome should have an option: \"[x] Always open mailto links in separate tab\"</p>\n\n<p>That being said, here's how you do it.</p>\n\n<p>First construct your links like so:</p>\n\n<pre><code>&lt;a href=\"#\" data-mailto=\"somebody@email.com\"&gt;Mail Somebody&lt;/a&gt;\n</code></pre>\n\n<p>Then set a click handler for those.</p>\n\n<pre><code>$('a[data-mailto]').click(function(){\n  var link = 'mailto.html#mailto:' + $(this).data('mailto');\n  window.open(link, 'Mailer');\n  return false;\n});\n</code></pre>\n\n<p>There is an optional <code>options</code> argument to <code>window.open</code> that you can tweak. In fact I would almost recommend it, to see if you can get the generated window to be as unnoticable as possible.\n<a href=\"https://developer.mozilla.org/en/DOM/window.open\">https://developer.mozilla.org/en/DOM/window.open</a></p>\n\n<p><a href=\"http://www.w3schools.com/jsref/met_win_open.asp\">http://www.w3schools.com/jsref/met_win_open.asp</a> (the MDN doc is exhaustive, while the w3schools doc is almost easier to read)</p>\n\n<p>Next we need to create the mailto.html page. Now you may need to play around with the timeout you see below. You could probably even set this to something really short like 500ms.</p>\n\n<pre><code>&lt;html&gt;\n&lt;script&gt;\nfunction checkMailto(hash){\n    hash = hash.split('mailto:');\n    if(hash.length &gt; 1){\n        return hash[1];\n    } else {\n        return false;\n    }\n}\n\nvar mailto = checkMailto(location.hash);\n\nif(mailto){\n    location.href = 'mailto:'+mailto;\n    setTimeout(function(){\n      window.close();\n    }, 1000);\n}\n&lt;/script&gt;\n&lt;/html&gt;\n</code></pre>\n\n<h2>Results</h2>\n\n<p><strong>Mail.app set as my default email reader:</strong></p>\n\n<p>When I click the link, it opens a window for a split second, then composes a blank message. In the browser it goes back to the original page.</p>\n\n<p><strong>Gmail set as mail reader under Settings > Advanced > Privacy > Handlers:</strong></p>\n\n<p>When I click the link, it opens a new tab to Gmail, with the previous page safely in it's own tab.</p>\n\n<p>Note: Once you set Gmail as your email handler, on the OS side (at least on mac), Chrome is set as the system's email handler. So even if you turn off Gmail as the email handler inside Chrome, it is still set on the OS level. So to reset that, I went to Mail > Prefs > General. And set default mail reader back to Mail.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I just wanted to say that for Firefox there is a simple solution.</p>\n\n<p>Construct your links like so:</p>\n\n<pre><code>&lt;a href=\"#\" data-mailto=\"somebody@email.com\"&gt;Mail Somebody&lt;/a&gt;\n</code></pre>\n\n<p>Set a click handler for those.</p>\n\n<pre><code>$('a[data-mailto]').click(function(){\n  window.open($(this).data('mailto'));\n});\n</code></pre>\n\n<p>Would be great if Chrome accepted it as well.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>I received a <a href=\"https://github.com/owncloud/contacts/issues/394\" rel=\"nofollow\">request for implementing this in ownCloud Contacts</a> and though I also think it's a bit hackish, there doesn't seem to be another way of detecting if the mailto handler is set to a webmail address.</p>\n\n<p>This example is implemented without the need for external files.</p>\n\n<p>NOTE: jQuery is needed for this example, but it can probably be rewritten to strict javascript.</p>\n\n<p>To avoid having to use <code>data-mailto</code>or other tricks, you can instead intercept the handler:</p>\n\n<pre><code>$(window).on('click', function(event) {\n    if(!$(event.target).is('a[href^=\"mailto\"]')) {\n        return;\n    }\n\n    // I strip the 'mailto' because I use the same function in other places\n    mailTo($(event.target).attr('href').substr(7));\n    // Both are needed to avoid triggering other event handlers\n    event.stopPropagation();\n    event.preventDefault();\n});\n</code></pre>\n\n<p>Now for the <code>mailTo()</code> function:</p>\n\n<pre><code>var mailTo = function(url) {\n    var url = 'mailto:' + data.url;\n    // I have often experienced Firefox errors with protocol handlers\n    // so better be on the safe side.\n    try {\n        var mailer = window.open(url, 'Mailer');\n    } catch(e) {\n        console.log('There was an error opening a mail composer.', e);\n    }\n    setTimeout(function() {\n        // This needs to be in a try/catch block because a Security \n        // error is thrown if the protocols doesn't match\n        try {\n            // At least in Firefox the locationis changed to about:blank\n            if(mailer.location.href === url \n                    || mailer.location.href.substr(0, 6) === 'about:'\n            ) {\n                mailer.close();\n            }\n        } catch(e) {\n            console.log('There was an error opening a mail composer.', e);\n        }\n    }, 500);\n\n}\n</code></pre>\n\n<p>I decreased the timeout to 500. Works For Me, lets see what the users say when it's pushed ;)</p>\n\n<p>If you want to avoid opening a new tab/window you can use an iframe. It will require an extra request, but is less annoying if you <em>don't</em> use webmail yourself. This wasn't feasible for ownCloud because per default the Content-Security-Policy is very strict, and injecting \"foreign\" URLs into an iframe isn't allowed (not tested much):</p>\n\n<pre><code>var mailTo = function(url) {\n    var url = 'mailto:' + data.url, $if;\n    try {\n        $if = $('&lt;iframe /&gt;')\n            .css({width: 0, height: 0, display: 'none'})\n            .appendTo($('body'))\n            .attr('src', url);\n    } catch(e) {\n        console.log('There was an error opening a mail composer.', e);\n    }\n    setTimeout(function() {\n        try {\n\n            if($if.attr('src') !== url \n                    &amp;&amp; $if.attr('src').substr(0, 6) !== 'about:'\n            ) {\n                window.open($if.attr('src'), 'Mailer');\n            }\n        } catch(e) {\n            console.log('There was an error opening a mail composer.', e);\n        }\n        $if.remove();\n    }, 500);\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>On a web page mailto links open the default e-mail client. Now that Chrome offers the ability to set Gmail as the default e-mail client, some users have the links open in the same window thus taking them away from the page they clicked the link (which they do not like)</p>\n\n<p>I have tried adding target _blank to the links, which works great for gmail users, but will drive Outlook users mad, because a new blank tab will open every time they click a mailto link.</p>\n\n<p>I there a way to detect the default e-mail handler and offer a good experience for both types of users?</p>\n",
            "last_activity_date": 1394787186,
            "question_id": 11576255,
            "score": 20,
            "tags": [
                "javascript",
                "google-chrome",
                "gmail",
                "handler",
                "mailto"
            ],
            "title": "How to open mailto links in new tab for users that have gmail as the default mail handler?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>NodeJS, at one point (I think it was v0.6.x) had ArrayBuffer support. I created a small library for base64 encoding and decoding <a href=\"https://github.com/arunjitsingh/base64\" rel=\"nofollow\">here</a>, but since updating to v0.7, the tests (on NodeJS) fail. I'm thinking of creating something that normalizes this, but till then, I suppose Node's native <code>Buffer</code> should be used.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>node.js has both ArrayBuffer as part of v8, but the Buffer class provides a more flexible API.  In order to read or write to an ArrayBuffer, you only need to create a view and copy across.</p>\n\n<p>From Buffer to ArrayBuffer:</p>\n\n<pre><code>function toArrayBuffer(buffer) {\n    var ab = new ArrayBuffer(buffer.length);\n    var view = new Uint8Array(ab);\n    for (var i = 0; i &lt; buffer.length; ++i) {\n        view[i] = buffer[i];\n    }\n    return ab;\n}\n</code></pre>\n\n<p>From ArrayBuffer to Buffer:</p>\n\n<pre><code>function toBuffer(ab) {\n    var buffer = new Buffer(ab.byteLength);\n    var view = new Uint8Array(ab);\n    for (var i = 0; i &lt; buffer.length; ++i) {\n        buffer[i] = view[i];\n    }\n    return buffer;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>\"From ArrayBuffer to Buffer\" could be done this way: </p>\n\n<pre><code>var buffer = new Buffer( new Uint8Array(ab) );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>A quicker way to write it</p>\n\n<pre><code>var arrayBuffer = new Uint8Array(nodeBuffer).buffer;\n</code></pre>\n\n<p>However, this appears to run roughly 4 times slower than the suggested toArrayBuffer function on a buffer with 1024 elements.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Node 0.12+ has a built-in <code>toArrayBuffer</code> method.</p>\n\n<p>Just do: <code>buffer.toArrayBuffer()</code>. Done!</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>How can i convert a NodeJS binary buffer into a Javascript ArrayBuffer ?</p>\n",
            "last_activity_date": 1393917443,
            "question_id": 8609289,
            "score": 19,
            "tags": [
                "javascript",
                "node.js",
                "binary",
                "buffer",
                "arraybuffer"
            ],
            "title": "Convert a binary NodeJS Buffer to Javascript ArrayBuffer"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I think you'll have a tricky time knowing if a user went forward or back.\nSay the url starts /myapp#page1 so you start tracking states.\nThen the user does something to make the url /myapp#page2\nThen the user does something to make the url /myapp#page1 again. Now their history is ambiguous and you won't know what to remove or not.</p>\n\n<p>The history frameworks use iframes to get around the browser inconsistencies you mentioned. You only need to use iframes in the browsers that need them.</p>\n\n<p>Another con is that users will always go for their browsers back button before they will go for your custom back button. I have a feeling the delay on reading the history every 250ms will be noticeable too. Maybe you can do the interval even tighter, but then I don't know if that'll make things perform badly.</p>\n\n<p>I've used yui's history manager, and although it doesn't work perfectly all the time in all browsers (especially ie6), it's been used by a lot of users and developers. The pattern they use is pretty flexible too.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>There are 3 issues that tend to get munged together by most solutions:</p>\n\n<ol>\n<li>back button</li>\n<li>bookmarkability</li>\n<li>refresh button</li>\n</ol>\n\n<p>The <code>window.location.hash</code> based solutions can solve all three for most cases: the value in the <code>hash</code> maps to a state of the application/webpage, so a user can press one of \"back\"/\"forward\"/\"refresh\" and jump to the state now in the hash. They can also bookmark because the value in the address bar has changed. (Note that a hidden <code>iframe</code> is needed for IE related to the hash not affecting the browser's history).</p>\n\n<p>I just wanted to note however that an iframe only solution can be used without monitoring <code>window.location.hash</code> for a very effective solution too.</p>\n\n<p>Google maps is a great example of this. The state captured for each user action is way too large to be placed into window.location.hash (map centroid, search results, satellite vs map view, info windows, etc). So they save state into a form embedded in a hidden <code>iframe</code>. Incidentally this solves the [soft] \"refresh\" issue too. They solve bookmarkability separately via a \"Link to this page\" button.</p>\n\n<p>I just thought it's worthing knowing/separating the problem domains you are thinking about.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>All that stuff is important for supporting the full range of browsers, but hopefully the need for it will go away. IE8 and FF3.6 both introduced support for <a href=\"https://developer.mozilla.org/en/DOM/window.onhashchange\" rel=\"nofollow\">onhashchange</a>. I imagine that others will follow suit. It would be a good idea to check for the availability of this functionality before using timeouts or iframes, as it is really the nicest solution currently out there - <em>and it even works in IE!</em></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>As is well known, in XHR (aka AJAX) web applications no history for your app is build and clicking the refresh button often moves the user out of his/her current activity. I stumbled upon location.hash (e.g. <code>http://anywhere/index.html#somehashvalue</code>) to circumvent the refresh problem (use location.hash to inform your app of it's current state and use a page load handler to reset that state). It's really nice and simple.</p>\n\n<p>This brought me to thinking about using location.hash to track the history of my app. I don't want to use existing libraries, because they use iframes etc. So here's my nickel and dime: when the application page loads I start this:</p>\n\n<pre><code>setInterval(\n       function(){\n           if (location.hash !== appCache.currentHash) {\n               appCache.currentHash = location.hash;\n               appCache.history.push(location.hash);\n               /* ... [load state using the hash value] ... */\n               return true;\n           }\n           return false;\n       }, 250\n );\n</code></pre>\n\n<p>(<em>appCache</em> is a predefined object containing application variables) The idea is to trigger every action in the application from the hash value. In decent browsers a hash value change adds an entry to the history, in IE (&lt;= 7) it doesn't. In all browsers, navigating back or forward to a page with another hash value doesn't trigger a page refresh. That's where the intervalled function takes over. With the function everytime the hash value change is detected (programmatically, or by clicking back or forward) the app can take appropriate action. The application can keep track of it's own history and I should be able to present history buttons in the application (especially for IE users).</p>\n\n<p>As far as I can tell this works cross browser and there's no cost in terms of memory or processor resources. So my question is: would this be a viable solution to manage the history in XHR-apps? What are the pros and cons?</p>\n\n<p>Update: because I use my homebrew framework, I didn't want to use one of the existing frameworks. To be able to use location.hash in IE and having it in it's history too, I created a simple script (yes, it's needs an iframe) which may be of use to you. I published it <a href=\"http://www.nicon.nl/hash2history/\">on my site</a>, feel free to use/modify/critizise it.</p>\n",
            "last_activity_date": 1269865601,
            "question_id": 568719,
            "score": 19,
            "tags": [
                "javascript",
                "ajax",
                "browser-history",
                "xmlhttprequest"
            ],
            "title": "Is monitoring location.hash a solution for history in XHR apps?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>A couple of options for you besides just manually managing your view model.  The mapping plugin supports a <code>create</code> callback that lets you customize how it gets created.  This can be used to add default properties to an object, if they happen to be missing.</p>\n\n<p>Something like this:  <a href=\"http://jsfiddle.net/rniemeyer/WQGVC/\">http://jsfiddle.net/rniemeyer/WQGVC/</a></p>\n\n<p>Another alternative is to use a binding that creates properties that are missing.  It might look like:</p>\n\n<pre><code>//create an observable if it does not exist and populate it with the input's value\nko.bindingHandlers.valueWithInit = {\n    init: function(element, valueAccessor, allBindingsAccessor, data) {\n        var property = valueAccessor(),\n            value = element.value;\n\n        //create the observable, if it doesn't exist \n        if (!ko.isWriteableObservable(data[property])) {\n            data[property] = ko.observable();\n        }\n\n        //populate the observable with the element's value (could be optional)\n        data[property](value);\n\n        ko.applyBindingsToNode(element, { value: data[property] });\n    }\n}\n</code></pre>\n\n<p>You would use it like this (need to pass the property as a string, otherwise it will error):</p>\n\n<pre><code>&lt;input data-bind=\"valueWithInit: 'name'\" /&gt;\n</code></pre>\n\n<p>Sample here: <a href=\"http://jsfiddle.net/rniemeyer/JPYLp/\">http://jsfiddle.net/rniemeyer/JPYLp/</a></p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>I think the solution to you problem comes from thinking about the view model in the wrong way.  A view model isn't only something that delivers data to the view, but also a place holder for submitting the data back.</p>\n\n<p>The way i usually end up working with knockout, i never end up sending an empty view model to the view.  The view model usually has all the fields i am binding on.  While they might be empty strings, or initialized objects with no display values, the actual objects to still exits, with a proper representation of each object to the fields i am binding to.</p>\n\n<p>You might want to look into simply sending empty objects instead of nothing to the view.</p>\n\n<p>EDIT: The example is un ASP.NET MVC</p>\n\n<p>So basiclaly, i on the server side, i create an view model object, which contains all the data that needs to be displayed as well as all the data that needs to be collected.  For easier validation code i generally put the data to be collected into it's own subclass, but that all a matter of the needs of your code.</p>\n\n<p>In anycase, the any object going to the view inherts from a vmBase class which basically provides a toJSON() method which generates the JSON serialization of the object.  This gets called in my view by the view engine.  As shown in the code below. </p>\n\n<pre><code>      &lt;script type='text/javascript'&gt;         \n        var viewModel = ko.mapping.fromJS(&lt;%= Model.ToJson() %&gt;);                     \n\n        $(document).ready( function () {        \n            ko.applyBindings(viewModel);                             \n        });                  \n     &lt;/script&gt;   \n</code></pre>\n\n<p>When i am ready to send the code back up,  i simply remove pull a JS version of the view model. </p>\n\n<pre><code>&lt;script type='text/javascript'&gt;\n     var dataToSendToServer = ko.toJS(viewModel);\n&lt;/script&gt;\n</code></pre>\n\n<p>In some sanarios, where only a part of the view model is changing (this is if you are doing AJAX updates), you can do some cool stuff like, switching templates so that different binding can be applyed.  In this case we are using a <strong>#ID_of_Container</strong> as container of the original data/template and replacing the template (which can contain data-bind=\"\" elements) a new template <strong>ID_of_Template</strong>  </p>\n\n<pre><code>&lt;script type='text/javascript'&gt;\n    ko.cleanNode($(\"#ID_of_Container\"));\n    delete (viewModel.Some_Element_To_Be_Updated);\n    viewModel = ko.mapping.updateFromJS(viewModel, New_Data_For_That_Element);\n\n    // Use ko.toJS(viewModel) because standard template plugin doesn't understand \n    // knockout observables\n    $(\"#ID_of_Container\").html($(\"#ID_of_Template\").tmpl(ko.toJS(viewModel)))\n    ko.applyBindings(viewModel, $(\"#ID_of_Container\")[0]);\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>One approach I am exploring now is to create an additional web service method called ReturnEmptyObject() which does nothing other than create and return a newly instantiated object (whose properties would be default values) on the server side.  The (in my case C#) object gets serialized to JSON, and finally arrives on the jQuery Ajax call.... and then passed into ko.mapping.updateFromJS()...  which creates the needed observables on initial page load... before I call ko.applyBindings().</p>\n\n<p>When ko.applyBindings() executes, it finds the observables it needs so it won't throw an error, even though they are mostly empty.</p>\n\n<p>This way the page can initially be opened without any of the fields filled in.  Yet, if I add some new properties to my class on the server side, they automatically show up on the client side still.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>We are using knockout and the knockout mapping plugin to facilitate databinding in our jQTouch web application. The reason we use the mapping plugin, is to be able to use knockout without the need to define/change viewmodels manually in javascript. The mapping plugin works great when you have an initial load of data from the server/client side database. </p>\n\n<p>The problem we are having is that we have some screens/views which have a form in which it is possible that there isn't any initial data. Without this initial data, the mapping plugin can't 'generate' the viewmodel (ko.mapping.fromJS). This means that we still need to define our viewmodels by hand for large parts of our views.</p>\n\n<p>Am I wrong in assuming that this is a scenario which the mapping plugin (should) support? I mean, this means that the mapping plugin is only usable in scenarios in which you always have an initial load of data.</p>\n",
            "last_activity_date": 1407145746,
            "question_id": 6735225,
            "score": 17,
            "tags": [
                "javascript",
                "knockout.js",
                "jqtouch",
                "knockout-mapping-plugin"
            ],
            "title": "Knockout JS mapping plugin without initial data / empty form"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Try replacing this line:</p>\n\n<pre><code>setTimeout('this.feedbackTag.removeChild(info)', 5000);\n</code></pre>\n\n<p>with these two lines:</p>\n\n<pre><code>var _this = this;\nsetTimeout(function() { _this.feedbackTag.removeChild(info); }, 5000);\n</code></pre>\n\n<p><strong>Note:</strong></p>\n\n<p>Never pass <a href=\"https://developer.mozilla.org/en/window.setTimeout\"><code>setTimeout</code></a> a string, as this invokes <code>eval</code> (which you should only use when necessary). Instead, pass <a href=\"https://developer.mozilla.org/en/window.setTimeout\"><code>setTimeout</code></a> a function reference (this can be an anonymous function).</p>\n\n<p>Finally, always check that the <code>this</code> keyword is pointing to what you think it points to (see <a href=\"http://www.alistapart.com/articles/getoutbindingsituations\">http://www.alistapart.com/articles/getoutbindingsituations</a>).</p>\n\n<p><strong>Addressing Question 2:</strong></p>\n\n<p>I believe that for normal functions, <code>this</code> is set to the <code>window</code> object\u2014regardless of where they are declared. So moving the code into a separate function wouldn't fix the problem.</p>\n",
                    "is_accepted": true,
                    "score": 76
                },
                {
                    "body": "<p>To answer your last question:  \"Why doesn`t it work if we do this\":</p>\n\n<pre><code>Message = function () {\n\n...\n...        \n\nthis.messageFactory = ...\nthis.feedbackTag = document.getElementById('feedbackMessages');\n// public function\nthis.addInfo = function (message) {\n    var info = this.messageFactory.createInfo(message); // create a div\n    this.feedbackTag.appendChild(info);\n\n    delayRemove(info);\n\n};\n// private function\nfunction delayRemove(obj) {\n    var _this = this;\n    setTimeout(function() { _this.feedbackTag.removeChild(info); }, 5000);\n}}\n</code></pre>\n\n<p>It's not working because you are passing an undefined variable (<code>info</code>) instead of a defined variable (<code>obj</code>). Here is the corrected function:</p>\n\n<pre><code>function delayRemove(obj) {\nvar _this = this;\nsetTimeout(function() { _this.feedbackTag.removeChild(obj); }, 5000);}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A neater way is to just pass <em>this</em> as an argument to the function being called in the timeout:</p>\n\n<pre><code>function delayRemove(obj) {\n  setTimeout(function(_this) {\n      _this.feedbackTag.removeChild(obj);\n    }, 5000, this);\n}\n</code></pre>\n\n<p>You should really pass <em>obj</em> as an argument as well, just to make sure it is in scope (the number of parameters is unlimited):</p>\n\n<pre><code>function delayRemove(obj) {\n  setTimeout(function(_this, removeObj) {\n      _this.feedbackTag.removeChild(removeObj);\n    }, 5000, this, obj);\n}\n</code></pre>\n\n<hr>\n\n<p>HTML5 and Node.js extended the <code>setTimeout</code> function to accept parameters which are passed to your callback function. It has the following method signature.</p>\n\n<p><code>setTimeout(callback, delay, [param1, param2, ...])</code></p>\n\n<p>As <code>setTimeout</code> <a href=\"http://stackoverflow.com/a/8852244/155715\">isn't actually a JavaScript feature</a> your results may vary across browsers. I couldn't find any concrete details of support, however as I said this is in the HTML5 spec.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Why can't I use <code>setTimeout</code> in a javascript object?</p>\n\n<pre><code>Message = function () {\n\n    ...\n    ...        \n\n    this.messageFactory = ...\n    this.feedbackTag = document.getElementById('feedbackMessages');\n\n    this.addInfo = function (message) {\n        var info = this.messageFactory.createInfo(message); // create a div\n        this.feedbackTag.appendChild(info);\n\n        setTimeout('this.feedbackTag.removeChild(info)', 5000);\n        // why in here, it complain this.feedbacktag is undefined ??????\n\n    };\n}\n</code></pre>\n\n<p>Thanks for Steve`s Solution, now it will work if the code is as below...\nbecause the 'this' before was actually pointing to the function within setTimeOut, it cannot rearch Message.</p>\n\n<pre><code>Message = function () {\n\n    ...\n    ...        \n\n    this.messageFactory = ...\n    this.feedbackTag = document.getElementById('feedbackMessages');\n\n    this.addInfo = function (message) {\n        var info = this.messageFactory.createInfo(message); // create a div\n        this.feedbackTag.appendChild(info);\n\n        var _this = this;\n        setTimeout(function() { _this.feedbackTag.removeChild(info); }, 5000);\n\n    };\n}\n</code></pre>\n\n<p>But why doesn`t it work if we do this:</p>\n\n<pre><code>Message = function () {\n\n    ...\n    ...        \n\n    this.messageFactory = ...\n    this.feedbackTag = document.getElementById('feedbackMessages');\n    // public function\n    this.addInfo = function (message) {\n        var info = this.messageFactory.createInfo(message); // create a div\n        this.feedbackTag.appendChild(info);\n\n        delayRemove(info);\n\n    };\n    // private function\n    function delayRemove(obj) {\n        var _this = this;\n        setTimeout(function() { _this.feedbackTag.removeChild(info); }, 5000);\n    }\n}\n</code></pre>\n",
            "last_activity_date": 1388328138,
            "question_id": 1101668,
            "score": 17,
            "tags": [
                "javascript",
                "settimeout"
            ],
            "title": "How to use &quot;setTimeout&quot; to invoke object itself"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The only way I'm aware of is the trick used by <a href=\"https://github.com/eligrey/FileSaver.js/\">FileSaver.js</a>: </p>\n\n<ol>\n<li>Create a hidden <code>&lt;a&gt;</code> tag.</li>\n<li>Set its <code>href</code> attribute to the blob's URL.</li>\n<li>Set its <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#Attributes\"><code>download</code></a> attribute to the filename. </li>\n<li>Click on the <code>&lt;a&gt;</code> tag.</li>\n</ol>\n\n<p>Here is a simplified example (<a href=\"http://jsfiddle.net/koldev/cW7W5/\">jsfiddle</a>):</p>\n\n<pre><code>var saveData = (function () {\n    var a = document.createElement(\"a\");\n    document.body.appendChild(a);\n    a.style = \"display: none\";\n    return function (data, fileName) {\n        var json = JSON.stringify(data),\n            blob = new Blob([json], {type: \"octet/stream\"}),\n            url = window.URL.createObjectURL(blob);\n        a.href = url;\n        a.download = fileName;\n        a.click();\n        window.URL.revokeObjectURL(url);\n    };\n}());\n\nvar data = { x: 42, s: \"hello, world\", d: new Date() },\n    fileName = \"my-download.json\";\n\nsaveData(data, fileName);\n</code></pre>\n\n<p>I wrote this example just to illustrate the idea, in production code use FileSaver.js instead.</p>\n\n<p><strong>Notes</strong></p>\n\n<ul>\n<li>Older browsers don't support the \"download\" attribute, since it's part of HTML5.</li>\n<li>Some file formats are considered insecure by the browser and the download fails. Saving JSON files with txt extension works for me.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 28
                }
            ],
            "body": "<p>How do you set the name of a blob file in JavaScript when force downloading it through window.location?</p>\n\n<pre><code>function newFile(data) {\n    var json = JSON.stringify(data);\n    var blob = new Blob([json], {type: \"octet/stream\"});\n    var url  = window.URL.createObjectURL(blob);\n    window.location.assign(url);\n}\n</code></pre>\n\n<p>Running the above code downloads a file instantly without a page refresh that looks like bfefe410-8d9c-4883-86c5-d76c50a24a1d. I want to set the filename as my-download.json instead.</p>\n",
            "last_activity_date": 1400685041,
            "question_id": 19327749,
            "score": 16,
            "tags": [
                "javascript",
                "html5",
                "download",
                "blob",
                "html5-filesystem"
            ],
            "title": "JavaScript blob filename without link"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The key points as I see it:</p>\n\n<ol>\n<li>jQuery when used with RequireJS registers itself as named module 'jquery' (all lower case). In your example you are trying to use it as 'jQuery', which confuses things a bit since this is also the name of a global function that it registers when loaded (see point #2).</li>\n<li>By default, jQuery registers itself using the global functions \"$\" and \"jQuery\", even when used with AMD/RequireJS. If you want to turn off this behavior you have to call noConflict function.</li>\n<li><p>You can wrap your RequireJS reference to jQuery in a noConflict call, as shown in the example below. As far as I can tell, this is the recommended approach when you don't have other modules which need the global $ or jQuery:</p>\n\n<pre><code>requirejs.config({\n    paths: {\n        'jquery': 'vendor/jquery',\n    }\n});\n\ndefine('jquery-private', ['jquery'], function (jq) {\n    return jq.noConflict( true );\n});\n\nrequire(['jquery-private'], function(jq) {\n    console.log(jq);      // working\n    console.log($);       // undefined\n    console.log(jQuery);  // undefined\n});\n</code></pre></li>\n</ol>\n\n<p>See also <a href=\"http://stackoverflow.com/questions/15574500/stop-global-jquery-with-plugin-in-requirejs/15577738#15577738\">my answer in this question</a> regarding how to map other modules to use the private (noConflict) version.</p>\n\n<p>For more background, see these lines from the jQuery source code which are the cause of everything I described above:</p>\n\n<pre><code>    // Expose jQuery to the global object\n    window.jQuery = window.$ = jQuery;\n\n    // Expose jQuery as an AMD module, but only for AMD loaders that\n    // understand the issues with loading multiple versions of jQuery\n    // in a page that all might call define(). The loader will indicate\n    // they have special allowances for multiple jQuery versions by\n    // specifying define.amd.jQuery = true. Register as a named module,\n    // since jQuery can be concatenated with other files that may use define,\n    // but not use a proper concatenation script that understands anonymous\n    // AMD modules. A named AMD is safest and most robust way to register.\n    // Lowercase jquery is used because AMD module names are derived from\n    // file names, and jQuery is normally delivered in a lowercase file name.\n    // Do this after creating the global so that if an AMD module wants to call\n    // noConflict to hide this version of jQuery, it will work.\n    if ( typeof define === \"function\" &amp;&amp; define.amd &amp;&amp; define.amd.jQuery ) {\n        define( \"jquery\", [], function () { return jQuery; } );\n    }\n</code></pre>\n\n<p><strong>UPDATE:</strong> the <a href=\"http://www.requirejs.org/docs/jquery.html\">Use with jQuery section of the RequireJS site</a> has been updated to reflect the above info. See also <a href=\"http://stackoverflow.com/questions/17615594/using-private-jquery-with-requirejs-issue-after-optimisation/17625765#17625765\">this answer</a> for step-by-step including optimizer. Just want to emphasize again that this noConflict approach only works if <strong>all</strong> your plugins are AMD compatible.</p>\n",
                    "is_accepted": true,
                    "score": 25
                }
            ],
            "body": "<p>I am using the current stable release of both require.js and jQuery and I am currently including jQuery like this</p>\n\n<pre><code>requirejs.config({\npaths: {\n    'jQuery': 'vendor/jquery',\n}\n});\n\nrequire(['jQuery'], function(jQuery) {\n    log(jQuery); // working\n});\n</code></pre>\n\n<p>What I don't get is that I don't really need to explicitely give back jQuery, as this will still work (also in other modules):</p>\n\n<pre><code>require(['jQuery'], function( // nothing here ) {\n    log(jQuery); // working\n});\n</code></pre>\n\n<p>Now I'm not sure if this is the correct way of doing it, also because using the $ dollar sign for reference to jquery doens't work!</p>\n\n<p>Any help is appreciated.</p>\n",
            "last_activity_date": 1373834631,
            "question_id": 15613577,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "requirejs",
                "amd"
            ],
            "title": "Correct way to implement jQuery with require.js"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>parseInt(input.replace(/[^0-9-]/,\"\"),10)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Probably just filter out the string with .replace(). If there is another way then I am unaware of it:</p>\n\n<pre><code>parseInt(\"attribute[123]\".replace(\"attribute[\", \"\").replace(\"]\", \"\")));\n</code></pre>\n\n<p>You could probably use some Regex to put that in only one .replace(), but I'm not good with Regex so I just did it twice.</p>\n\n<p>Test this in your browser with</p>\n\n<pre><code>javascript:alert(parseInt(\"attribute[123]\".replace(\"attribute[\", \"\").replace(\"]\", \"\")));\n</code></pre>\n\n<p>Should alert 123.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use a regular expression to match the number:</p>\n\n<pre><code>$(this).attr(\"id\").match(/\\d+/)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 52
                }
            ],
            "body": "<p>In javascript, what is the best way to parse an INT from a string which starts with a letter (such as \"test[123]\")?  I need something that will work for the example below.</p>\n\n<p>My JS:</p>\n\n<pre><code>$(document).ready(function() {\n\n    $(':input').change( function() {\n    \tid = parseInt($(this).attr(\"id\"));  //fails for the data below\n    \talert(id);\n    });\n}\n</code></pre>\n\n<p>My generated HTML:</p>\n\n<pre><code>&lt;select id=\"attribute[123]\"&gt;\n&lt;!-- various options --&gt;\n&lt;/select&gt;\n&lt;select id=\"attribute[456]\"&gt;\n&lt;!-- various options --&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>Thank you!</p>\n",
            "last_activity_date": 1232065058,
            "question_id": 448666,
            "score": 16,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Parsing an Int from a string in javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The easiest thing to do is putting a <code>div</code> with the following CSS in the body:</p>\n\n<pre><code>#hideAll\n {\n   position: fixed;\n   left: 0px; \n   right: 0px; \n   top: 0px; \n   bottom: 0px; \n   background-color: white;\n   z-index: 99; /* Higher than anything else in the document */\n\n }\n</code></pre>\n\n<p>(Note that <code>position: fixed</code> won't work in IE6 - I know of no sure-fire way of doing this in that browser)</p>\n\n<p>Add the DIV like so (directly after the opening <code>body</code> tag):</p>\n\n<pre><code>&lt;div style=\"display: none\" id=\"hideAll\"&gt;&amp;nbsp;&lt;/div&gt;\n</code></pre>\n\n<p>show the DIV directly after :</p>\n\n<pre><code> &lt;script type=\"text/javascript\"&gt;\n   document.getElementById(\"hideAll\").style.display = \"block\";\n &lt;/script&gt; \n</code></pre>\n\n<p>and hide it <code>onload</code>:</p>\n\n<pre><code> window.onload = function() \n  { document.getElementById(\"hideAll\").style.display = \"none\"; }\n</code></pre>\n\n<p>or using jQuery</p>\n\n<pre><code> $(window).load(function() {  document.getElementById(\"hideAll\").style.display = \"none\"; });\n</code></pre>\n\n<p>this approach has the advantage that it will also work for clients who have JavaScript turned off. It <em>shouldn't</em> cause any flickering or other side-effects, but not having tested it, I can't entirely guarantee it for every browser out there. </p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>put an overlay on the page</p>\n\n<pre><code>#loading-mask {\n    background-color: white;\n    height: 100%;\n    left: 0;\n    position: fixed;\n    top: 0;\n    width: 100%;\n    z-index: 9999;\n}\n</code></pre>\n\n<p>and then delete that element in a <code>window.onload</code> handler or, hide it</p>\n\n<pre><code>window.onload=function() {\n    document.getElementById('loading-mask').style.display='none';\n}\n</code></pre>\n\n<p>Of course you should use your javascript library (jquery,prototype..) specific onload handler if you are using a library.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>try using javascript for this!\nSeems like its the best and easiest way to do this.\nYou'll get inbuilt funcn to execute a html code only after HTML page loads completely.</p>\n\n<p>or else you may use state based programming where an event occurs at a particular state of the browser..</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you can also go for this.... this will only show the HTML section once javascript has loaded.</p>\n\n<pre><code>&lt;!-- Adds the hidden style and removes it when javascript has loaded --&gt;\n&lt;style type=\"text/css\"&gt;\n    .hideAll  {\n        visibility:hidden;\n     }\n&lt;/style&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    $(window).load(function () {\n        $(\"#tabs\").removeClass(\"hideAll\");\n    });\n&lt;/script&gt;\n\n&lt;div id=\"tabs\" class=\"hideAll\"&gt;\n   ##Content##\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Hide the body initially, and then show it with jQuery after it has loaded.</p>\n\n<pre><code>body {\n    display: none;\n}\n\n$(function () {\n    $('body').show();\n}); // end ready\n</code></pre>\n\n<p>Also, it would be best to have <code>$('body').show();</code> as the last line in your last and main .js file.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there a way to force the browser to display a page only after all of the page's contents are completely loaded (such as images, scripts, css, etc)?</p>\n",
            "last_activity_date": 1401280464,
            "question_id": 3629762,
            "score": 15,
            "tags": [
                "javascript",
                "html",
                "browser"
            ],
            "title": "display HTML page after loading complete"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here is a snippet that gives you the basics of what are looking for:</p>\n\n<pre><code>&lt;style&gt;\n    .textarea { font-family:arial; font-size:12px; border:0; width:700px; height:200px; }\n    .realTextarea { margin:0; background:transparent; position: absolute; z-index:999; }\n    .overlayTextarea { margin:0; position:absolute; top:1; left:1; z-index:998; }\n    .textareaBorder { border:groove 1px #ccc; position:relative; width:702px; height:202px; }\n    .highlight { background: yellow; }\n&lt;/style&gt;\n\n&lt;script&gt;\n    var _terms = ['January', 'February', 'March']; // YOUR SEARCH TERMS GO HERE //\n\n    function preg_quote( str ) {\n        return (str+'').replace(/([\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}\\=\\!\\&lt;\\&gt;\\|\\:])/g, \"\\\\$1\");\n    }\n\n    function doit() {\n        var s = myTextarea.value;\n\n        for (i=0; i&lt;_terms.length; i++)\n            s = s.replace( new RegExp( preg_quote( _terms[i] ), 'gi' ), '&lt;span class=\"highlight\"&gt;' + _terms[i] + '&lt;/span&gt;' );\n\n        myOtherTextarea.innerHTML = s.replace( new RegExp( preg_quote( '\\r' ), 'gi' ), '&lt;br&gt;' );\n    }\n&lt;/script&gt;\n\n&lt;div class=\"textarea textareaBorder\"&gt;\n    &lt;textarea id=\"myTextarea\" onkeyup=\"doit();\" class=\"textarea realTextarea\"&gt;&lt;/textarea&gt;\n    &lt;div id=\"myOtherTextarea\" class=\"textarea overlayTextarea\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>The basic concept is that the <code>&lt;textarea&gt;</code> (on top) is transparent and the <code>&lt;div&gt;</code> underneath contains the \"rich / hightlighted\" version.  There is room for improvement when it comes to wrapping text but you get the idea.  Happy Highlighting!</p>\n\n<p>Credit:\nThe preg_quote function is from Kevin van Zonneveld\n <a href=\"http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_preg_quote/\">http://kevin.vanzonneveld.net/techblog/article/javascript_equivalent_for_phps_preg_quote/</a></p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Take a look at this one : <a href=\"http://codemirror.net/\">http://codemirror.net/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I'm trying to create a textarea that will highlight some keywords as the user types in there. I understant textarea can only support plain text and that I have to use a 'rich text' editor in order to achieve this. I would like something really simple though and not the bloated 'rich editors' out there. Any ideas? </p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1308691450,
            "question_id": 3282505,
            "score": 15,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "textarea",
                "highlight"
            ],
            "title": "Highlight text as you type on textarea"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Actually there are a couple of discussions about this issue on the github page of the plugin <a href=\"https://github.com/wildabeast/BarcodeScanner/issues/32\">here</a> and <a href=\"https://github.com/wildabeast/BarcodeScanner/issues/31\">here</a>.</p>\n\n<p>I managed to have a version working in iOS and Android, you can check it <a href=\"https://github.com/jonathannaguin/BarcodeScanner\">here</a>. There is another <a href=\"https://github.com/Eccenux/BarcodeScanner\">fork</a> that has made a pull request to the original with changes for 3.0.0 even I am not quite sure that the plugin works in iOS.</p>\n\n<p>Instructions to install (Using <a href=\"https://github.com/apache/cordova-cli\">cordova cli</a>)</p>\n\n<ol>\n<li>Download the repo using GIT or just a ZIP from Github.</li>\n<li><p>Add the plugin to your project (from the root of your project):</p>\n\n<p><code>cordova plugin add &lt;path_download_plugin&gt;</code></p></li>\n<li>You can start using <code>plugins.barcodeScanner</code> to invoke the plugin in your HTML/JS code.</li>\n<li>Do not forget to call <code>cordova prepare</code> to copy your files to each platform project.</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>@Jonathan Naguin: I tried to follow your instructions, but I am receiving the following:</p>\n\n<p>2013-08-09 17:58:57.416 PUIClient[3160:907] CDVPlugin class CDVBarcodeScanner (pluginName: BarcodeScanner) does not exist.\n2013-08-09 17:58:57.419 PUIClient[3160:907] ERROR: Plugin 'BarcodeScanner' not found, or is not a CDVPlugin. Check your plugin mapping in config.xml.</p>\n\n<p>The plugin seemed to install well enough, but when I try calling it in my application I receive this error. Any idea whats going on? I tried to reply to your answer but stackoverflow deems it neccessary for me to have 50 reputation. Thanks for all your help!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>i had the same error as @aruballo.\nTo fix it i dropped the 3 the files from projectdir/Plugins/com.phonegap.plugins.barcodescanner/\ninside the plugin directory in xcode. </p>\n\n<p>I also add one last problem with ARC restriction which was fixed by the answer from <a href=\"https://github.com/wildabeast/BarcodeScanner/issues/37#issuecomment-23320333\" rel=\"nofollow\">https://github.com/wildabeast/BarcodeScanner/issues/37#issuecomment-23320333</a>  (must add -fno-objc-arc in Project - Buil Phases - compile source - CDVBarcodeScanner.mm line to resolve the problem / double click that line and add \"-fno-objc-arc\")</p>\n\n<p><img src=\"http://i.stack.imgur.com/4l1Oj.png\" alt=\"enter image description here\">\n<img src=\"http://i.stack.imgur.com/Lxh41.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is my explanation based on Jonathan solutions. I tried his solution and succeeded but took more time. So I thought to explain steps I followed so that it can save someone's time.\n<P>\n<strong>Steps:-</strong></p>\n\n<h3>1) First install cordova if not already installed using Cordova cli as below</h3>\n\n<p>Note: you must <strong>install node.js</strong> if not already installed.</p>\n\n<p><code>npm install -g cordova</code><br>\nor<br>\n<code>sudo npm install -g cordova</code></p>\n\n<h3>2) Go to the directory where you maintain your source code, and run a command such as the following:</h3>\n\n<p><li> <code>$ cordova create hello com.example.hello HelloWorld</code></p>\n\n<p>The first argument specifies a hello directory to be generated for your project. Its www subdirectory houses your application's home page, along with various resources under css, js, and img, which follow common web development file-naming conventions. The config.xml file contains important metadata needed to generate and distribute the application.</p>\n\n<p>The other two arguments are optional: the com.example.hello argument provides your project with a reverse domain-style identifier, and the HelloWorld provides the application's display text</p>\n\n<p><li> <code>cd hello</code>\n<li> <code>cordova platform add ios</code>\n<li><code>cordova plugin add https://github.com/jonathannaguin/BarcodeScanner.git</code>\n<li><code>cordova build</code>\n<li> <code>cordova prepare</code></p>\n\n<h3>3) remove all files from www folder except following</h3>\n\n<p><li>confix.xml\n<li>cordova_plugins.js\n<li>cordova.js\n<li>plugins (folder contaning barcodescanner.js)</p>\n\n<p>and your own index.html,js,css files</p>\n\n<p>I will be glad if it helps someone.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>i think,the documentation has a mistake. </p>\n\n<blockquote>\n  <p>Change the \"Class' from NSObject to PGbcsViewController</p>\n</blockquote>\n\n<p>After you add the .h,.cpp and .mm files to the project; if you search for 'PGbcsViewController' ,you can't find anything . (at least mine version of barcode plugin.) I corrected it as 'CDVbcsViewController' and i am using barcode scanner plugin without problem at ios,too.</p>\n\n<p>So parent class of view is important. You should check that.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>currently I'm trying to install the <a href=\"https://github.com/wildabeast/BarcodeScanner\">BarcodeScanner Plugin</a> for <code>Phonegap Version 3.0.0</code>. I can't find any working documentation on how to install it correctly and I didn't figure it out myself.\nSo I would really appreciate any help!</p>\n\n<p>Thank you in advance!\nBest regards,\nAndreas</p>\n",
            "last_activity_date": 1389044580,
            "question_id": 18142247,
            "score": 14,
            "tags": [
                "javascript",
                "cordova",
                "phonegap-plugins",
                "barcode-scanner"
            ],
            "title": "Phonegap 3.0.0: BarcodeScanner Plugin"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I used the code from <a href=\"http://stackoverflow.com/questions/2176861/javascript-get-clipboard-data-on-paste-event-cross-browser\">this question</a> for my cross-browser paste implementation.. it works in all browsers I have tested (scroll down for the actual solution/code). It should be noted that <code>event.clipboardData</code> expires immediately after the paste event has completed execution. </p>\n\n<p>I went ahead and quadruple checked that this does work in Firefox version 19 (I don't have 13 available, but it sounds like this question was about degradation of a feature in newer versions). </p>\n\n<p>Below is the answer, quoted from <code>Nico Burns</code>:</p>\n\n<h1>Solution</h1>\n\n<p>Tested in IE6+, FF 3.5+, recent-ish versions of Opera, Chrome, Safari.</p>\n\n<h2>HTML</h2>\n\n<p>Create a <code>div</code> tag as follows:</p>\n\n<pre><code>&lt;div id='div' contenteditable='true' onpaste='handlepaste(this, event)'&gt;Paste&lt;/div&gt;\n</code></pre>\n\n<h2>JavaScript</h2>\n\n<p>Use the following JavaScript code:</p>\n\n<pre><code>function handlepaste (elem, e) {\n    var savedcontent = elem.innerHTML;\n    if (e &amp;&amp; e.clipboardData &amp;&amp; e.clipboardData.getData) {// Webkit - get data from clipboard, put into editdiv, cleanup, then cancel event\n        if (/text\\/html/.test(e.clipboardData.types)) {\n            elem.innerHTML = e.clipboardData.getData('text/html');\n        }\n        else if (/text\\/plain/.test(e.clipboardData.types)) {\n            elem.innerHTML = e.clipboardData.getData('text/plain');\n        }\n        else {\n            elem.innerHTML = \"\";\n        }\n        waitforpastedata(elem, savedcontent);\n        if (e.preventDefault) {\n                e.stopPropagation();\n                e.preventDefault();\n        }\n        return false;\n    }\n    else {// Everything else - empty editdiv and allow browser to paste content into it, then cleanup\n        elem.innerHTML = \"\";\n        waitforpastedata(elem, savedcontent);\n        return true;\n    }\n}\n\nfunction waitforpastedata (elem, savedcontent) {\n    if (elem.childNodes &amp;&amp; elem.childNodes.length &gt; 0) {\n        processpaste(elem, savedcontent);\n    }\n    else {\n        that = {\n            e: elem,\n            s: savedcontent\n        }\n        that.callself = function () {\n            waitforpastedata(that.e, that.s)\n        }\n        setTimeout(that.callself,20);\n    }\n}\n\nfunction processpaste (elem, savedcontent) {\n    pasteddata = elem.innerHTML;\n    //^^Alternatively loop through dom (elem.childNodes or elem.getElementsByTagName) here\n\n    elem.innerHTML = savedcontent;\n\n    // Do whatever with gathered data;\n    alert(pasteddata);\n}\n</code></pre>\n\n<h1>Explanation</h1>\n\n<p>The <code>onpaste</code> event has the <code>handlepaste</code> function attached to it, and passed two arguments: <code>this</code> (i.e. a reference to the element that the event is attached to) and <code>event</code> which is the event object.</p>\n\n<hr>\n\n<p>The <code>handlepaste</code> function:</p>\n\n<p>The first line simply saves the content of the editable div to a variable so it can be restored again at the end.</p>\n\n<p>The <code>if</code> checks whether the browser is an webkit browser (chrome or safari), and if it is it sets contents of the editable div to the data being pasted. It then cancels the event to prevent webkit pasting anything twice. This is because webkit is awkward, and won't paste anything if you simply clear the div.</p>\n\n<p>If it is not a webkit browser then it simply clears the editable div.</p>\n\n<p>It then calls the <code>waitforpastedata</code> function</p>\n\n<hr>\n\n<p>The <code>waitforpastedata</code> function:</p>\n\n<p>This is necessary because the pasted data doesn't appear straight away, so if you just called <code>processpaste</code> straight away then it wouldn't have any data to process.</p>\n\n<p>What it does is check if the editable div has any content, if it does then calls <code>processpaste</code>, otherwise it sets a timer to call itself and check again in 20 milliseconds.</p>\n\n<hr>\n\n<p>The <code>processpaste</code> function:</p>\n\n<p>This function saved the innerHTML of the editable div (which is now the pasted data) to a variable, restores the innerHTML of the editable div back to its original value, and the alert the pasted data. Obviously in a real usage scenario you would probably want to something other than just alert data, you can do whatever you like with it from here.</p>\n\n<p>You will probably also want to run the pasted data through some kind of data sanitising process. This can be done either while it is still in the editable div, or on the extracted string.</p>\n\n<hr>\n\n<p>In a real sitution you would probably want to save the selection before, and restore it afterwards (<a href=\"http://stackoverflow.com/questions/1181700/set-cursor-position-on-contenteditable-div/3323835#3323835\">Set cursor position on contentEditable &lt;div&gt;</a>). You could then insert the pasted data at the position the cursor was in when the user initiated the paste action.</p>\n\n<p>P.S. The combination of this code, IE &lt;= 8 and <a href=\"http://jsfiddle.net\">jsfiddle</a> doesn't seem to work, but it does work in ie &lt;= 8 in a non-jsfiddle environment.</p>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>I'm trying to allow the user to paste an image into a <code>div</code>. The problem is that I need it work in Firefox.</p>\n\n<p>From what I've read, Firefox since version 13 (I think) doesn't allow JavaScript access to the clipboard, and <code>event.clipboard</code> doesn't exist in it. I know it can be done because Gmail and Yahoo alow it even in Firefox.</p>\n\n<p>I just want it to work in anyway posible, be with jQuery, JavaScript, HTML5, it doesn't matter  as long as it works in the latest Firefox. (No Flash though).</p>\n",
            "last_activity_date": 1362783037,
            "question_id": 15253468,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "html5",
                "firefox"
            ],
            "title": "Get Pasted Image from Clipboard Firefox"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Try this</p>\n\n<pre><code>var fd = new FormData();\nfd.append('fname', 'test.wav');\nfd.append('data', soundBlob);\n$.ajax({\n    type: 'POST',\n    url: '/upload.php',\n    data: fd,\n    processData: false,\n    contentType: false\n}).done(function(data) {\n       console.log(data);\n});\n</code></pre>\n\n<p>You need to use the <a href=\"https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/FormData\">FormData API</a> and set the <code>jQuery.ajax</code>'s <code>processData</code> and <code>contentType</code> to <code>false</code>.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>I could not get the above example to work with blobs and I wanted to know what exactly is in upload.php. So here you go: </p>\n\n<p>(tested only in Chrome 28.0.1500.95)</p>\n\n<pre><code>// javascript function that uploads a blob to upload.php\nfunction uploadBlob(){\n    // create a blob here for testing\n    var blob = new Blob([\"i am a blob\"]);\n    //var blob = yourAudioBlobCapturedFromWebAudioAPI;// for example   \n    var reader = new FileReader();\n    // this function is triggered once a call to readAsDataURL returns\n    reader.onload = function(event){\n        var fd = new FormData();\n        fd.append('fname', 'test.txt');\n        fd.append('data', event.target.result);\n        $.ajax({\n            type: 'POST',\n            url: 'upload.php',\n            data: fd,\n            processData: false,\n            contentType: false\n        }).done(function(data) {\n            // print the output from the upload.php script\n            console.log(data);\n        });\n    };      \n    // trigger the read from the reader...\n    reader.readAsDataURL(blob);\n\n}\n</code></pre>\n\n<p>The contents of upload.php:</p>\n\n<pre><code>&lt;?\n// pull the raw binary data from the POST array\n$data = substr($_POST['data'], strpos($_POST['data'], \",\") + 1);\n// decode it\n$decodedData = base64_decode($data);\n// print out the raw data, \necho ($decodedData);\n$filename = \"test.txt\";\n// write the data out to the file\n$fp = fopen($filename, 'wb');\nfwrite($fp, $decodedData);\nfclose($fp);\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I was able to get @yeeking example to work by not using FormData but using javascript object to transfer the blob. Works with a sound blob created using recorder.js. Tested in Chrome version 32.0.1700.107 </p>\n\n<pre><code>function uploadAudio( blob ) {\n  var reader = new FileReader();\n  reader.onload = function(event){\n    var fd = {};\n    fd[\"fname\"] = \"test.wav\";\n    fd[\"data\"] = event.target.result;\n    $.ajax({\n      type: 'POST',\n      url: 'upload.php',\n      data: fd,\n      dataType: 'text'\n    }).done(function(data) {\n        console.log(data);\n    });\n  };\n  reader.readAsDataURL(blob);\n}\n</code></pre>\n\n<p>Contents of upload.php</p>\n\n<pre><code>&lt;?\n// pull the raw binary data from the POST array\n$data = substr($_POST['data'], strpos($_POST['data'], \",\") + 1);\n// decode it\n$decodedData = base64_decode($data);\n// print out the raw data,\n$filename = $_POST['fname'];\necho $filename;\n// write the data out to the file\n$fp = fopen($filename, 'wb');\nfwrite($fp, $decodedData);\nfclose($fp);\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm having a blob data in this structure:</p>\n\n<pre><code>Blob {type: \"audio/wav\", size: 655404, slice: function}\nsize: 655404\ntype: \"audio/wav\"\n__proto__: Blob\n</code></pre>\n\n<p>It's actually sound data recorded using the recent chrome getUerMedia() and <a href=\"https://github.com/mattdiamond/Recorderjs\">Recorder.js</a></p>\n\n<p>Now the problem is how can I upload this blob to the server using jquery's post method?\nI've tried this without any luck:</p>\n\n<pre><code>   $.post('http://localhost/upload.php', { fname: \"test.wav\", data: soundBlob }, \n    function(responseText) {\n           console.log(responseText);\n    });\n</code></pre>\n",
            "last_activity_date": 1392270904,
            "question_id": 13333378,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "html5"
            ],
            "title": "how can javascript upload a blob?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can't influence neither type (tab/window) nor dimensions that way. You'll have to use JavaScript's <a href=\"http://www.quirksmode.org/js/popup.html\" rel=\"nofollow\">window.open()</a> for that.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You don't have that kind of control with a bare <code>a</code> tag. But you can hook up the tag's <code>onclick</code> handler to call <code>window.open(...)</code> with the right parameters. See here for examples:\n<a href=\"https://developer.mozilla.org/En/DOM/Window.open\" rel=\"nofollow\">https://developer.mozilla.org/En/DOM/Window.open</a></p>\n\n<p>I still don't think you can force window over tab directly though-- that depends on the browser and the user's settings.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To open in a new windows with dimensions and everything, you will need to call a JavaScript function, as target=\"_blank\" won't let you adjust sizes. An example would be:</p>\n\n<pre><code>&lt;a href=\"http://www.facebook.com/sharer\" onclick=\"window.open(this.href, 'mywin',\n'left=20,top=20,width=500,height=500,toolbar=1,resizable=0'); return false;\" &gt;Share this&lt;/a&gt;\n</code></pre>\n\n<p>Hope this helps you.</p>\n",
                    "is_accepted": true,
                    "score": 58
                }
            ],
            "body": "<pre><code>&lt;a href=\"facebook.com/sharer\" target=\"_blank\" &gt;Share this&lt;/a&gt;\n</code></pre>\n\n<p>How do I make this a certain width and height, in a new window, when the user clicks on  it?\nIn firefox, the current code only opens up a new tab (not a new window)</p>\n",
            "last_activity_date": 1389731437,
            "question_id": 2541392,
            "score": 13,
            "tags": [
                "javascript",
                "html",
                "css",
                "templates",
                "anchor"
            ],
            "title": "Opening new window in HTML for target=&quot;_blank&quot;"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>For security reasons, you will be unable to modify the header during an XMLHTTPRequest.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If your request at the same domain as jquery code, you can use jquery <a href=\"http://plugins.jquery.com/project/cookie\" rel=\"nofollow\">cookies plugin</a> </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you set the cookie using document.cookie then when you send the request the cookie header will include it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This can be done. You need the following in the $.ajax call:</p>\n\n<pre><code>xhrFields: {\n    withCredentials: true\n}\n</code></pre>\n\n<p>(See the jQuery docs), and you'll also need the site you're making the request to to support CORS (they will at least need to allow you origin and also to set the <code>Access-Control-Allow-Credentials</code> HTTP header to <code>true</code>).</p>\n\n<p>There's no question it works. You can do it over HTTPS, with Basic Auth, etc. jQuery will send everything (the auth header, cookies) if you tell it to (xhrFields) and the site provides the right CORS headers. Don't give up!</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/En/Server-Side_Access_Control\" rel=\"nofollow\">https://developer.mozilla.org/En/Server-Side_Access_Control</a></p>\n\n<blockquote>\n  <p>allow you origin and also to set the Access-Control-Allow-Credentials HTTP header to true</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to set a Cookie in a XSS request using XMLHttpRequest.</p>\n\n<p>I found the <a href=\"http://www.w3.org/TR/XMLHttpRequest/\">XMLHttpRequest Specification</a>, and section 4.6.2-5 does seem to suggest that setting Cookie, Cookie2, and some other headers are not allowed, but I was hoping there was a work around.</p>\n\n<p>My (jQuery) code is below, but the resulting query fails as the cookie is NOT set.</p>\n\n<pre><code>$.ajax( {\n  type : \"POST\",\n  url : URL,\n  data: SOAP_INBOX_MAIL_QUERY,\n  dataType : \"xml\",\n  async: false,\n  beforeSend : function(xhr) {  \n    var cookie = credentials[\"COOKIE\"];\n    console.info( \"adding cookie: \"+ cookie );          \n    xhr.setRequestHeader('Cookie', cookie);\n  },\n  success : function(data, textStatus, xmLHttpRequest){\n\n\n  },\n  error : function(xhr, ajaxOptions, thrownError) {\n    credentials = null;\n  }\n});\n</code></pre>\n",
            "last_activity_date": 1329383031,
            "question_id": 2320110,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "How do I SET a Cookie (header) with XMLHttpRequest in JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try this :</p>\n\n<pre><code>function loadjscssfile(filename, filetype){\n if (filetype==\"js\"){ //if filename is a external JavaScript file\n  var fileref=document.createElement('script')\n  fileref.setAttribute(\"type\",\"text/javascript\")\n  fileref.setAttribute(\"src\", filename)\n }\n else if (filetype==\"css\"){ //if filename is an external CSS file\n  var fileref=document.createElement(\"link\")\n  fileref.setAttribute(\"rel\", \"stylesheet\")\n  fileref.setAttribute(\"type\", \"text/css\")\n  fileref.setAttribute(\"href\", filename)\n }\n if (typeof fileref!=\"undefined\")\n  document.getElementsByTagName(\"head\")[0].appendChild(fileref)\n}\n\nloadjscssfile(\"myscript.js\", \"js\") //dynamically load and add this .js file\nloadjscssfile(\"javascript.php\", \"js\") //dynamically load \"javascript.php\" as a JavaScript file\nloadjscssfile(\"mystyle.css\", \"css\") ////dynamically load and add this .css file\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>You can make an empty css link in your html file and give the link an ID. e.g</p>\n\n<pre><code>&lt;link id=\"stylesheet_css\" rel=\"stylesheet\" type=\"text/css\" href=\"css/dummy.css?\"/&gt;\n</code></pre>\n\n<p>then call it with ID name and change the 'href' attribute</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Unfortunately there is no onload support for stylesheets in most modern browsers.  There is a solution I found with a little Googling.</p>\n\n<p><strong>Cited from:</strong> <a href=\"http://thudjs.tumblr.com/post/637855087/stylesheet-onload-or-lack-thereof\">http://thudjs.tumblr.com/post/637855087/stylesheet-onload-or-lack-thereof</a></p>\n\n<h3>The basics</h3>\n\n<p>The most basic implementation of this can be done in a measely 30 lines of \u2014 framework independent \u2014 JavaScript code:</p>\n\n<pre><code>function loadStyleSheet( path, fn, scope ) {\n   var head = document.getElementsByTagName( 'head' )[0], // reference to document.head for appending/ removing link nodes\n       link = document.createElement( 'link' );           // create the link node\n   link.setAttribute( 'href', path );\n   link.setAttribute( 'rel', 'stylesheet' );\n   link.setAttribute( 'type', 'text/css' );\n\n   var sheet, cssRules;\n// get the correct properties to check for depending on the browser\n   if ( 'sheet' in link ) {\n      sheet = 'sheet'; cssRules = 'cssRules';\n   }\n   else {\n      sheet = 'styleSheet'; cssRules = 'rules';\n   }\n\n   var timeout_id = setInterval( function() {                     // start checking whether the style sheet has successfully loaded\n          try {\n             if ( link[sheet] &amp;&amp; link[sheet][cssRules].length ) { // SUCCESS! our style sheet has loaded\n                clearInterval( timeout_id );                      // clear the counters\n                clearTimeout( timeout_id );\n                fn.call( scope || window, true, link );           // fire the callback with success == true\n             }\n          } catch( e ) {} finally {}\n       }, 10 ),                                                   // how often to check if the stylesheet is loaded\n       timeout_id = setTimeout( function() {       // start counting down till fail\n          clearInterval( timeout_id );             // clear the counters\n          clearTimeout( timeout_id );\n          head.removeChild( link );                // since the style sheet didn't load, remove the link node from the DOM\n          fn.call( scope || window, false, link ); // fire the callback with success == false\n       }, 15000 );                                 // how long to wait before failing\n\n   head.appendChild( link );  // insert the link node into the DOM and start loading the style sheet\n\n   return link; // return the link node;\n}\n</code></pre>\n\n<p>This would allow you to load a style sheet with an onload callback function like this:</p>\n\n<pre><code>loadStyleSheet( '/path/to/my/stylesheet.css', function( success, link ) {\n   if ( success ) {\n      // code to execute if the style sheet was loaded successfully\n   }\n   else {\n      // code to execute if the style sheet failed to successfully\n   }\n} );\n</code></pre>\n\n<p>Or if you want to your callback to maintain its scope/ context, you could do something kind of like this:</p>\n\n<pre><code>loadStyleSheet( '/path/to/my/stylesheet.css', this.onComplete, this );\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p><a href=\"http://yepnopejs.com/\" rel=\"nofollow\">yepnope.js</a> can load CSS and run a callback on completion. e.g.</p>\n\n<pre><code>yepnope([{\n  load: \"styles.css\",\n  complete: function() {\n    console.log(\"oooooo. shiny!\");\n  }\n}]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to load a css file dynamically using javascript and cannot use any other js library (eg jQuery).</p>\n\n<p>The css file loads but I can't seem to get a callback to work for it. Below is the code I am using</p>\n\n<pre><code>var callbackFunc = function(){\n    console.log('file loaded');     \n};\nvar head = document.getElementsByTagName( \"head\" )[0];\nvar fileref=document.createElement(\"link\");\n    fileref.setAttribute(\"rel\", \"stylesheet\");\n    fileref.setAttribute(\"type\", \"text/css\");\n    fileref.setAttribute(\"href\", url);\n\n    fileref.onload  = callbackFunc;\n    head.insertBefore( fileref, head.firstChild );\n</code></pre>\n\n<p>Using the following code to add a script tag to load a js file works and fires a callback:</p>\n\n<pre><code>var callbackFunc = function(){\n    console.log('file loaded');     \n};\n\nvar script = document.createElement(\"script\");\n\nscript.setAttribute(\"src\",url);\nscript.setAttribute(\"type\",\"text/javascript\");\n\nscript.onload  = callbackFunc ;\n\nhead.insertBefore( script, head.firstChild );\n</code></pre>\n\n<p>Am I doing something wrong here? Any other method that can help me achieve this would be much appreciated?</p>\n",
            "last_activity_date": 1389835041,
            "question_id": 5537622,
            "score": 12,
            "tags": [
                "javascript",
                "css",
                "callback",
                "loading"
            ],
            "title": "Dynamically loading css file using javascript with callback without jQuery"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>If you need to find out the latitude and longitude of an address using the Google Maps API, you need to use the <a href=\"http://code.google.com/apis/maps/documentation/services.html#Geocoding\">Google Maps Geocoding Service</a>:</p>\n\n<pre><code>var map = new GMap2(document.getElementById(\"map_canvas\"));\nvar geocoder = new GClientGeocoder();\n\nvar address = \"1600 Amphitheatre Parkway, Mountain  View\";\ngeocoder.getLatLng(address, function(point) {\n         var latitude = point.y;\n         var longitude = point.x;  \n\n         // do something with the lat lng\n    });\n</code></pre>\n\n<p>If you would like to get the latitude and longitude of a position clicked on your Google map, you can do this in the click event:</p>\n\n<pre><code>GEvent.addListener(map, \"click\", function(marker,point) {\n        var latitude = point.y;\n        var longitude = point.x;\n\n        // do something with the lat/lng\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p><a href=\"http://code.google.com/apis/maps/documentation/services.html#Geocoding\" rel=\"nofollow\">http://code.google.com/apis/maps/documentation/services.html#Geocoding</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I am not sure if you are requesting a way of getting latitude and longitude via code(although you did say API :) ), \nIf you are then there are a million posts out there which will show you how(including the ones above), but if you are interested in some kinda utility which just tells you where you are clicking , then Google-maps already comes with it.\ncheck out his post here on how to enable that functionality.</p>\n\n<p><a href=\"http://varunpant.com/posts/find-longitude-and-latitude-in-google-maps\" rel=\"nofollow\">http://varunpant.com/posts/find-longitude-and-latitude-in-google-maps</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>like this:\n<a href=\"http://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&amp;sensor=true\" rel=\"nofollow\">http://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&amp;sensor=true</a></p>\n\n<p>more info here\n<a href=\"https://developers.google.com/maps/documentation/geocoding/\" rel=\"nofollow\">https://developers.google.com/maps/documentation/geocoding/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>With API v3</p>\n\n<pre><code>google.maps.event.addListener(map, 'click', function(event) {\n   alert( 'Lat: ' + event.latLng.lat() + ' and Longitude is: ' + event.latLng.lng() );\n});\n</code></pre>\n\n<p>Likewise you can retrieve when a marker is dragged dropped : </p>\n\n<pre><code>google.maps.event.addListener(marker, 'dragstart', function(event) {\n   alert( 'Lat: ' + event.latLng.lat() + ' and Longitude is: ' + event.latLng.lng() );\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>To add to RedBlueThing's answer you can do stuff like:</p>\n\n<pre><code>geocoded_by :address\n\ndef address\n [street, city, state, country].compact.join(', ')\nend\n</code></pre>\n\n<p>to help you narrow down the exact location, otherwise if you just send in the street the geocoder gem just returns the first instance of that street it finds which could be anywhere in the world</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have found the result via following method, hope it helps ..</p>\n\n<pre><code> http://maps.googleapis.com/maps/api/geocode/json?address=woking&amp;sensor=false\n\n  console.log(response.results[0].geometry.viewport.northeast.lat);\n  console.log(response.results[0].geometry.viewport.northeast.lng);\n</code></pre>\n\n<p>Thanks </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How retrieve latitude and longitude via Google Maps API?</p>\n",
            "last_activity_date": 1406727233,
            "question_id": 2770421,
            "score": 12,
            "tags": [
                "javascript",
                "api",
                "google-maps"
            ],
            "title": "How retrieve latitude and longitude via Google Maps API?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Try something like this:</p>\n\n<pre><code>&lt;select id=\"viewSelector\"&gt;\n   &lt;option value=\"0\"&gt;-- Select a View --&lt;/option&gt;       \n   &lt;option value=\"view1\"&gt;view1&lt;/option&gt;\n   &lt;option value=\"view2\"&gt;view2&lt;/option&gt;\n   &lt;option value=\"view3\"&gt;view3&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;div id=\"view1\"&gt;\n  &lt;!-- content --&gt; \n&lt;/div&gt;\n&lt;div id=\"view2a\"&gt;\n  &lt;!-- content --&gt; \n&lt;/div&gt;\n&lt;div id=\"view2b\"&gt;\n  &lt;!-- content --&gt; \n&lt;/div&gt;\n&lt;div id=\"view3\"&gt;\n  &lt;!-- content --&gt; \n&lt;/div&gt;\n</code></pre>\n\n<p>then in the jQuery:</p>\n\n<pre><code>$(document).ready(function() {\n  $.viewMap = {\n    '0' : $([]),\n    'view1' : $('#view1'),\n    'view2' : $('#view2a, #view2b'),\n    'view3' : $('#view3')\n  };\n\n  $('#viewSelector').change(function() {\n    // hide all\n    $.each($.viewMap, function() { this.hide(); });\n    // show current\n    $.viewMap[$(this).val()].show();\n  });\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>There are a few different ways you could do this. The simplest is to have a few separate fieldsets, each one containing a single group of fields. Then, in jQuery, dependent on the select-menu's value you can show/hide these fieldsets, e.g.</p>\n\n<pre><code>&lt;fieldset id=\"f1\"&gt;\n    &lt;input name=\"something1\" /&gt;\n    &lt;input name=\"something2\" /&gt;\n    &lt;input name=\"something3\" /&gt;\n&lt;/fieldset&gt;\n&lt;fieldset id=\"f2\"&gt;\n    &lt;input name=\"something4\" /&gt;\n    &lt;input name=\"something5\" /&gt;\n    &lt;input name=\"something6\" /&gt;\n&lt;/fieldset&gt;\n&lt;select name=\"fieldset-choice\"&gt;\n    &lt;option value=\"f1\"&gt;Fieldset 1&lt;/option&gt;\n    &lt;option value=\"f2\"&gt;Fieldset 2&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    jQuery('select[name=fieldset-choice]').change(function(){\n        var fieldsetName = $(this).val();\n        $('fieldset').hide().filter('#' + fieldsetName).show();\n    });\n\n    // We need to hide all fieldsets except the first:\n    $('fieldset').hide().filter('#f1').show();\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>Note</strong>: For the above technique to be entirely unobtrusive you might want to dynamically build the select-menu with the names of all the different fieldsets. </p>\n\n<p><hr /></p>\n\n<p>Alternatively you can prefix each fields name with a meaningful prefix, and then hide/show according to that attribute:</p>\n\n<pre><code>&lt;input name=\"group1-name1\" /&gt;\n&lt;input name=\"group1-name2\" /&gt;\n\n&lt;input name=\"group2-name3\" /&gt;\n&lt;input name=\"group2-name4\" /&gt;\n&lt;input name=\"group2-name5\" /&gt;\n\n&lt;select name=\"field-choice\"&gt;\n    &lt;option value=\"group1\"&gt;Group 1&lt;/option&gt;\n    &lt;option value=\"group2\"&gt;Group 2&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    jQuery('select[name=field-choice]').change(function(){\n        var groupName = $(this).val();\n        $('input').hide().filter('[name^=' + groupName + ']').show();\n    });\n\n    // We need to hide all fields except those of the first group:\n    $('input').hide().filter('[name^=group1]').show();\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>To fire up the code on load, just add .change(). As shown below...</p>\n\n<pre><code>$(document).ready(function() {\n  $.viewMap = {\n    '0' : $([]),\n    'view1' : $('#view1'),\n    'view2' : $('#view2a, #view2b'),\n    'view3' : $('#view3')\n  };\n\n  $('#viewSelector').change(function() {\n    // hide all\n    $.each($.viewMap, function() { this.hide(); });\n    // show current\n    $.viewMap[$(this).val()].show();\n  }).change();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>@Martin Try this </p>\n\n<pre><code>`$('#viewSelector').trigger('change');`\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My 2 cents :\nI needed to show/hide fields depending on many previous select value (not only one).</p>\n\n<p>So I add a parent attribute to div fields like this :</p>\n\n<pre><code>&lt;div id=\"view\" parent=\"none\"&gt;\n&lt;select class=selector id=\"view\"&gt;\n&lt;option value=\"0\"&gt; -- Make a choice --&lt;/option&gt;\n&lt;option value=\"s1\"&gt;sub 1&lt;/option&gt;\n&lt;option value=\"s2\"&gt;sub 2&lt;/option&gt;\n&lt;option value=\"s3\"&gt;sub 3&lt;/option&gt;\n&lt;/select&gt;\n&lt;/div&gt;\n\n&lt;!-- you need to define the parent value with the value of parent div id --&gt;\n&lt;div id=\"s1\" parent=\"view\"&gt;\n&lt;!-- if you want to have a selector be sure it has the same id as the div --&gt;\n&lt;select class=selector id=\"s1\"&gt;\n&lt;option value=\"0\"&gt;-- Make a choice --&lt;/option&gt;\n&lt;option value=\"s1_sub1\"&gt;sub 1 of s1&lt;/option&gt;\n&lt;option value=\"s1_sub2\"&gt;sub 2 of s2&lt;/option&gt;\n&lt;option value=\"s1_sub3\"&gt;sub 3 of s3&lt;/option&gt;\n&lt;/select&gt;\n&lt;/div&gt;\n\n&lt;!-- Make the same thing for s2 and s3\nDefine div s2 here\n\nDefine div s3 here\n--&gt;\n\n&lt;!-- and finally if that's your final step you put what you want in the div --&gt;\n&lt;div id=\"s1_sub1\" parent=\"s1\"&gt;\nYou are inside s1 sub1\n&lt;/div&gt;\n</code></pre>\n\n<p>Now the jquery code :</p>\n\n<pre><code>$(document).ready(function() {\n\n $('select[class=selector]').change(function() { \n    //next div to show\n    var selectorActive = $(this).val();\n    //div where you are \n    var parentValue = $(this).attr(\"id\");\n\n   //show active div and hide others\n    $('div').hide().filter('#' + selectorActive).show();\n\n    while (parentValue!=\"none\") {\n      //then show parents of active div\n      $('div[id=' + parentValue + ']').show();\n      //return the parent of div until \"none\"\n      parentValue = $('div[id=' + parentValue + ']').attr(\"parent\");\n     }\n\n });\n\n// print only the first div at start\n $('div').hide().filter(\"#view\").show();\n\n});\n</code></pre>\n\n<p>That's works like a charm and you don't need to define maps</p>\n\n<p>I hope this will help</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am trying to show and hide a few form fields dependent on the value of one of my select fields. I am looking to use arrays to hold what should be show and what should not be show for each select value, to save me from a massive switch statement, but cannot figure out how to do it.  </p>\n\n<p>I am using PHP and jQuery. Any help would be great.</p>\n",
            "last_activity_date": 1323652291,
            "question_id": 835259,
            "score": 11,
            "tags": [
                "php",
                "javascript",
                "jquery"
            ],
            "title": "Show/hide fields depending on select value"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you need to hit the database, you need to hit the web server again (for the most part).</p>\n\n<p>What you can do is use AJAX, which makes a request to another script on your site to retrieve data, gets the data, and then updates the input fields you want.</p>\n\n<p>AJAX calls can be made in jquery with the $.ajax() function call, so this will happen</p>\n\n<p>User's browser enters input that fires a trigger that makes an AJAX call</p>\n\n<pre><code>$('input .callAjax').bind('change', function() { \n  $.ajax({ url: 'script/ajax', \n           type: json\n           data: $foo,  \n           success: function(data) {\n             $('input .targetAjax').val(data.newValue);\n           });\n  );\n</code></pre>\n\n<p>Now you will need to point that AJAX call at script (sounds like you're working PHP) that will do the query you want and send back data.</p>\n\n<p>You will probably want to use the JSON object call so you can pass back a javascript object, that will be easier to use than return XML etc.</p>\n\n<p>The php function json_encode($phpobj); will be useful.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Assuming this example HTML:</p>\n\n<pre><code>&lt;input type=\"text\" name=\"email\" id=\"email\" /&gt;\n&lt;input type=\"text\" name=\"first_name\" id=\"first_name\" /&gt;\n&lt;input type=\"text\" name=\"last_name\" id=\"last_name\" /&gt;\n</code></pre>\n\n<p>You could have this javascript:</p>\n\n<pre><code>$(\"#email\").bind(\"change\", function(e){\n  $.getJSON(\"http://yourwebsite.com/lokup.php?email=\" + $(\"#email\").val(),\n        function(data){\n          $.each(data, function(i,item){\n            if (item.field == \"first_name\") {\n              $(\"#first_name\").val(item.value);\n            } else if (item.field == \"last_name\") {\n              $(\"#last_name\").val(item.value);\n            }\n          });\n        });\n});\n</code></pre>\n\n<p>Then just you have a PHP script (in this case lookup.php) that takes an email in the query string and returns a JSON formatted array back with the values you want to access.  This is the part that actually hits the database to look up the values:</p>\n\n<pre><code>&lt;?php\n//look up the record based on email and get the firstname and lastname\n...\n\n//build the JSON array for return\n$json = array(array('field' =&gt; 'first_name', \n                    'value' =&gt; $firstName), \n              array('field' =&gt; 'last_name', \n                    'value' =&gt; $last_name));\necho json_encode($json );\n?&gt;\n</code></pre>\n\n<p>You'll want to do other things like sanitize the email input, etc, but should get you going in the right direction.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Automatically fill all form fields from an array </p>\n\n<p><a href=\"http://jsfiddle.net/brynner/wf0rk7tz/2/\" rel=\"nofollow\">http://jsfiddle.net/brynner/wf0rk7tz/2/</a></p>\n\n<p>JS</p>\n\n<pre><code>function fill(a){for(var k in a){$('[name=\"'+k+'\"]').val(a[k]);}}\narray_example = {\"God\":\"Jesus\",\"Holy\":\"Spirit\"};\nfill(array_example);\n</code></pre>\n\n<p>HTML</p>\n\n<pre><code>&lt;form&gt;\n&lt;input name=\"God\"&gt;\n&lt;input name=\"Holy\"&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I know how to do this with pure PHP but I need to do this without reloading the page.  Is there anyway with jQuery to effectively pull back some database results (based on what a user has input in the first text field on a form) then populate some of the remaining fields with data pulled back from a db query?</p>\n\n<p>Essentially I would like to see the user move away from the text field (either by tabbing out or by click in the next field) and boom, the query is submitted using the value entered in that field and the subsequent fields are then populated w/o a page reload.</p>\n\n<p>I am familiar with the basics of jQuery but I haven't used it to do anything like this in which I am pulling data back from the server and trying to populate it client side.</p>\n\n<p>Any suggestions / examples on how to best get started with this would be very much appreciated.  Thanks.</p>\n\n<ul>\n<li>Nicholas</li>\n</ul>\n",
            "last_activity_date": 1422978638,
            "question_id": 558445,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "database",
                "ajax",
                "dynamic"
            ],
            "title": "Dynamically fill in form values with jQuery"
        },
        {
            "answer_count": 19,
            "answers": [
                {
                    "body": "<p>I use <a href=\"http://notepad-plus.sourceforge.net/\" rel=\"nofollow\">Notepad++</a>. Free, lightweight, Windows friendly and very convenient.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>In my opinion nothing beat a good text editor for javascript and html.  I personally use <a href=\"http://www.ultraedit.com/\" rel=\"nofollow\">UltraEdit</a>.</p>\n\n<p>One thing that is a must in any AJAX developers arsenol is <a href=\"http://getfirebug.com/\" rel=\"nofollow\">FireBug</a> and <a href=\"http://projects.nikhilk.net/WebDevHelper/\" rel=\"nofollow\">IE Web Development Helper</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Eclipse? If only because I use it for everything else and code suggestions are great when learning a language.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Eclipse with <a href=\"http://www.interaktonline.com/products/eclipse/jseclipse/overview/\" rel=\"nofollow\">JSEclipse</a> works very nicely.</p>\n\n<p>Obviously with the <a href=\"http://vimplugin.org/\" rel=\"nofollow\">VIM plugin</a> enabled!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://www.netbeans.org\">Netbeans IDE</a> is great for javascript coding, irrespective of your favourite JS Library.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I'll support Pablo by saying that Notepad++ really is a very convenient editor. Do give it a try :) (I like the Ctrl+Enter combination, very smart, although could be improved)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is turning into a who's who here, but I still believe <a href=\"http://www.jetbrains.com/idea/features/\" rel=\"nofollow\">IntelliJ IDEA</a> is one of the leaders in javascript support.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Notepad++ &amp; Editra</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Aptana has an excellent jquery editor built into its javascript editor.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I use Emacs with js2-mode for small to medium javascript projects.</p>\n\n<p>For javascript projects with hundreds of modules stored in different files, nothing beats IntelliJ Idea. It parses all files in a project and allows you to jump from function call to function definition, from overriden method definition to the definition in parent class, etc.</p>\n\n<p>I've tried Eclipse, Aptana, NetBeans, Komodo and others, and they aren't even close to Intellij Idea when it comes to javascript support.</p>\n\n<p>On the other hand, such big projects in javascript are rare and usually emacs or any other editor is enough.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Nothing but <a href=\"http://macromates.com/\" rel=\"nofollow\">TextMate</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I'm a .Net developer, but I've been using the <a href=\"http://www.jetbrains.com/ruby/index.html\" rel=\"nofollow\">RubyMine</a> beta for editing all JavaScript. I'm not sure if it has the same features as IntelliJ, the other JetBrains product being recommended, but RubyMine provides similar refactoring features for JavaScript, that ReSharper does for C#.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>GVim.  '%', '.', and ':%s' are your friends.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you feel like dropping the change (who does?), Dreamweaver also supports type-ahead functionality:</p>\n\n<p><a href=\"http://xtnd.us/dreamweaver/jquery\" rel=\"nofollow\">jQuery API Extension for Dreamweaver</a></p>\n\n<p>I want to say there's another editor out there that supports type-ahead (maybe not intellisense, but something).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Visual studio (i use it for almost everything) and it has intelisense for jQuery ! just stick with it</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Best free javascript editor <a href=\"http://www.yaldex.com\" rel=\"nofollow\">http://www.yaldex.com</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>No one has mentioned <strong><a href=\"http://www.pspad.com/en/\" rel=\"nofollow\">PSPad</a></strong>?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Definitely NetBeans.\nGreatest IDE for PHP supporting jQuery,CSS and markup(html,xhtml,html5) and a lot! Free and Opensource with a large community.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Notepad++ is best if you explorer </p>\n\n<ol>\n<li>plugin > plugin manager > show\nplugin maneger </li>\n<li>in these plugin use\nNPPExec plugin to use all compiler java,\nobjective c, c, c++ and many more in\nsignal editor.</li>\n<li>FTP, Light Explorer, Explorer plugins</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is the best and most powerful AJAX (including jQuery) code editor? </p>\n\n<p>I can use Visual Studio for that but want to know what NON MICROSOFT people are using to write their JavaScript, AJAX and jQuery code.</p>\n",
            "last_activity_date": 1298107402,
            "question_id": 713889,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "editor"
            ],
            "title": "What is your favourite JavaScript/jQuery code editor?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>There is a really amazing <a href=\"https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html#OfflineAudioContext-section\">'offline' mode</a> of the Web Audio API that allows you to pre-process an entire file through an audio context and then do something with the result:</p>\n\n<pre><code>var context = new webkitOfflineAudioContext();\n\nvar source = context.createBufferSource();\nsource.buffer = buffer;\nsource.connect(context.destination);\nsource.noteOn(0);\n\ncontext.oncomplete = function(e) {\n  var audioBuffer = e.renderedBuffer;\n};\n\ncontext.startRendering();\n</code></pre>\n\n<p>So the setup looks exactly the same as the real-time processing mode, except you set up the <code>oncomplete</code> callback and the call to <code>startRendering()</code>. What you get back in <code>e.redneredBuffer</code> is an <code>AudioBuffer</code>.</p>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I'm playing around with the Web Audio API &amp; trying to find a way to import an mp3 (so therefore this is only in Chrome), and generate a waveform of it on a canvas.  I can do this in real-time, but my goal is to do this faster than real-time.</p>\n\n<p>All the examples I've been able to find involve reading the frequency data from an analyser object, in a function attached to the onaudioprocess event:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>processor = context.createJavascriptNode(2048,1,1);\nprocessor.onaudioprocess = processAudio;\n...\nfunction processAudio{\n    var freqByteData = new Uint8Array(analyser.frequencyBinCount);\n    analyser.getByteFrequencyData(freqByteData);\n    //calculate magnitude &amp; render to canvas\n}\n</code></pre>\n\n<p>It appears though, that <code>analyser.frequencyBinCount</code> is only populated when the sound is playing (something about the buffer being filled).</p>\n\n<p>What I want is to be able to manually/programmatically step through the file as fast as possible, to generate the canvas image.</p>\n\n<p>What I've got so far is this:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$(\"#files\").on('change',function(e){\n    var FileList = e.target.files,\n        Reader = new FileReader();\n\n    var File = FileList[0];\n\n    Reader.onload = (function(theFile){\n        return function(e){\n            context.decodeAudioData(e.target.result,function(buffer){\n                source.buffer = buffer;\n                source.connect(analyser);\n                analyser.connect(jsNode);\n\n                var freqData = new Uint8Array(buffer.getChannelData(0));\n\n                console.dir(analyser);\n                console.dir(jsNode);\n\n                jsNode.connect(context.destination);\n                //source.noteOn(0);\n            });\n        };\n    })(File);\n\n    Reader.readAsArrayBuffer(File);\n});\n</code></pre>\n\n<p>But getChannelData() always returns an empty typed array.</p>\n\n<p>Any insight is appreciated - even if it turns out it can't be done.  I think I'm the only one the Internet <em>not</em> wanting to do stuff in real-time.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1358399795,
            "question_id": 8074152,
            "score": 8,
            "tags": [
                "javascript",
                "html5",
                "webkit",
                "web-audio"
            ],
            "title": "Is there a way to use the Web Audio API to sample audio faster than real-time?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The <code>contextMenus</code> API is used to <em>define</em> context menu entries. It does not need to be called right before a context menu is opened. So, instead of creating the entries on the contextmenu event, use the <strong><code>selectionchange</code></strong> event to continuously update the contextmenu entry.</p>\n\n<p>I will show a simple example which just displays the selected text in the context menu entry, to show that the entries are synchronized well.</p>\n\n<p>Use this content script:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>document.addEventListener('selectionchange', function() {\n    var selection = window.getSelection().toString().trim();\n    chrome.extension.sendMessage({\n        request: 'updateContextMenu',\n        selection: selection\n    });\n});\n</code></pre>\n\n<p>At the background, we're going to create the contextmenu entry only once. After that, we update the contextmenu item (using the ID which we get from <a href=\"http://developer.chrome.com/extensions/contextMenus.html#method-create\"><code>chrome.contextMenus.create</code></a>).<br>\nWhen the selection is empty, we remove the context menu entry if needed.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// ID to manage the context menu entry\nvar cmid;\nvar cm_clickHandler = function(clickData, tab) {\n    alert('Selected ' + clickData.selectionText + ' in ' + tab.url);\n};\n\nchrome.extension.onMessage.addListener(function(msg, sender, sendResponse) {\n    if (msg.request === 'updateContextMenu') {\n        var type = msg.selection;\n        if (type == '') {\n            // Remove the context menu entry\n            if (cmid != null) {\n                chrome.contextMenus.remove(cmid);\n                cmid = null; // Invalidate entry now to avoid race conditions\n            } // else: No contextmenu ID, so nothing to remove\n        } else { // Add/update context menu entry\n            var options = {\n                title: type,\n                contexts: ['selection'],\n                onclick: cm_clickHandler\n            };\n            if (cmid != null) {\n                chrome.contextMenus.update(cmid, options);\n            } else {\n                // Create new menu, and remember the ID\n                cmid = chrome.contextMenus.create(options);\n            }\n        }\n    }\n});\n</code></pre>\n\n<p>To keep this example simple, I assumed that there's only one context menu entry. If you want to support more entries, create an array or hash to store the IDs.</p>\n\n<h2>Tips</h2>\n\n<ul>\n<li><strong>Optimization</strong> - To reduce the number of <code>chrome.contextMenus</code> API calls, cache the relevant values of the parameters. Then, use a simple <code>===</code> comparison to check whether the contextMenu item need to be created/updated.</li>\n<li><strong>Debugging</strong> - All <code>chrome.contextMenus</code> methods are asynchronous. To debug your code, pass a callback function to the <a href=\"http://developer.chrome.com/extensions/contextMenus.html#method-create\"><code>.create</code></a>, <a href=\"http://developer.chrome.com/extensions/contextMenus.html#method-remove\"><code>.remove</code></a> or <a href=\"http://developer.chrome.com/extensions/contextMenus.html#method-update\"><code>.update</code></a> methods.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>I am trying to create entries on the Chrome context menu based on what is selected.\nI found several questions about this on Stackoverflow, and for all of them the answer is: use a content script with a \"mousedown\" listener that looks at the current selection and creates the Context Menu.</p>\n\n<p>I implemented this, but it does not always work. Sometimes all the log messages say that the context menu was modified as I wanted, but the context menu that appears is not updated.</p>\n\n<p>Based on this I suspected it was a race condition: sometimes chrome starts rendering the context menu before the code ran completely.</p>\n\n<p>I tried adding a eventListener to \"contextmenu\" and \"mouseup\". The later triggers when the user selects the text with the mouse, so it changes the contextmenu much before it appears (even seconds). Even with this technique, I still see the same error happening!</p>\n\n<p>This happens very often in Chrome 22.0.1229.94 (Mac), occasionally in Chromium 20.0.1132.47 (linux) and it did not happen in 2 minutes trying on Windows (Chrome 22.0.1229.94).</p>\n\n<p>What is happening exactly? How can I fix that? Is there any other workaround?</p>\n\n<hr>\n\n<p>Here is a simplified version of my code (not so simple because I am keeping the log messages):</p>\n\n<h1>manifest.json:</h1>\n\n<pre><code>{\n  \"name\": \"Test\",\n  \"version\": \"0.1\",\n  \"permissions\": [\"contextMenus\"],\n  \"content_scripts\": [{\n    \"matches\": [\"http://*/*\", \"https://*/*\"],\n    \"js\": [\"content_script.js\"]\n  }],\n  \"background\": {\n    \"scripts\": [\"background.js\"]\n  },\n  \"manifest_version\": 2\n}\n</code></pre>\n\n<h1>content_script.js</h1>\n\n<pre><code>function loadContextMenu() {\n  var selection = window.getSelection().toString().trim();\n  chrome.extension.sendMessage({request: 'loadContextMenu', selection: selection}, function (response) {\n    console.log('sendMessage callback');\n  });\n}\n\ndocument.addEventListener('mousedown', function(event){\n  if (event.button == 2) {\n    loadContextMenu();\n  }\n}, true);\n</code></pre>\n\n<h1>background.js</h1>\n\n<pre><code>function SelectionType(str) {\n  if (str.match(\"^[0-9]+$\"))\n    return \"number\";\n  else if (str.match(\"^[a-z]+$\"))\n    return \"lowercase string\";\n  else\n    return \"other\";\n}\n\nchrome.extension.onMessage.addListener(function(msg, sender, sendResponse) {\n  console.log(\"msg.request = \" + msg.request);\n  if (msg.request == \"loadContextMenu\") {\n    var type = SelectionType(msg.selection);\n    console.log(\"selection = \" + msg.selection + \", type = \" + type);\n    if (type == \"number\" || type == \"lowercase string\") {\n      console.log(\"Creating context menu with title = \" + type);\n      chrome.contextMenus.removeAll(function() {\n        console.log(\"contextMenus.removeAll callback\");\n        chrome.contextMenus.create(\n            {\"title\": type,\n             \"contexts\": [\"selection\"],\n             \"onclick\": function(info, tab) {alert(1);}},\n            function() {\n                console.log(\"ContextMenu.create callback! Error? \" + chrome.extension.lastError);});\n      });\n    } else {\n      console.log(\"Removing context menu\")\n      chrome.contextMenus.removeAll(function() {\n          console.log(\"contextMenus.removeAll callback\");\n      });\n    }\n    console.log(\"handling message 'loadContextMenu' done.\");\n  }\n  sendResponse({});\n});\n</code></pre>\n",
            "last_activity_date": 1418493365,
            "question_id": 13202896,
            "score": 7,
            "tags": [
                "javascript",
                "google-chrome-extension",
                "contextmenu"
            ],
            "title": "Creating dynamic context menu in Chrome Extension is failing"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Why not simply use java task?</p>\n\n<pre><code>&lt;java fork=\"yes\" \n  classpathref=\"build.path\" \n  classname=\"org.mozilla.javascript.tools.jsc.Main\" \n  failonerror=\"true\"&gt;\n    &lt;arg value=\"-debug\"/&gt;\n        ...\n    &lt;arg value=\"file.js\"/&gt;\t\t\t\n&lt;/java&gt;\n</code></pre>\n\n<p>Any objections?</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Here is a sample build.xml I use for my rhino applications. If you have lots of javascript files you just need to keep adding more  tags<br />\n~:ant compile jar run</p>\n\n<pre><code>&lt;project&gt;\n&lt;target name=\"compile\"&gt;\n    &lt;mkdir dir=\"build/classes\"/&gt;\n    &lt;java fork=\"yes\" \n      classpath=\"js.jar\" \n      classname=\"org.mozilla.javascript.tools.jsc.Main\" \n      failonerror=\"true\"&gt;\n        &lt;arg value=\"-nosource\"/&gt;\n        &lt;arg value=\"-opt\"/&gt;\n        &lt;arg value=\"9\"/&gt;\n        &lt;arg value=\"-version\"/&gt;\n        &lt;arg value=\"170\"/&gt;\n        &lt;arg value=\"src/SwingApplication.js\"/&gt;\n    &lt;/java&gt;\n    &lt;move todir=\"build/classes\"&gt;\n        &lt;fileset dir=\"src\"&gt;\n            &lt;include name=\"**/*.class\"/&gt;\n        &lt;/fileset&gt;\n    &lt;/move&gt;\n&lt;/target&gt;\n&lt;target name=\"jar\"&gt;\n    &lt;mkdir dir=\"build/jar\"/&gt;\n    &lt;jar destfile=\"build/jar/SwingApplication.jar\" basedir=\"build/classes\"&gt;\n        &lt;zipfileset src=\"js.jar\" includes=\"**/*.class\"/&gt;\n        &lt;manifest&gt;\n            &lt;attribute name=\"Main-Class\" value=\"SwingApplication\"/&gt;\n        &lt;/manifest&gt;\n    &lt;/jar&gt;\n&lt;/target&gt;\n&lt;target name=\"run\"&gt;\n    &lt;exec executable=\"java\"&gt;\n        &lt;arg valUe=\"-jar\"/&gt;\n        &lt;arg value=\"build/jar/SwingApplication.jar\"/&gt;\n    &lt;/exec&gt;\n&lt;/target&gt;\n&lt;/project&gt;\n</code></pre>\n\n<p>~           </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I'm using <a href=\"http://requirejs.org/\">RequireJS</a> in my project, which includes a script that traces out dependencies between modules, and combines them into a single JavaScript file. Optionally, it can also minify the combined js file with the Google Closure compiler. Once it's in this form, where all dependencies are included in a single js file, the file can be easily compiled using jsc. </p>\n\n<p>Here's a segment of my ant script which I use to create the single combined js file, compile it to a class file, and then create an executable JAR:</p>\n\n<pre><code>&lt;target name=\"compile-single-js\"&gt;\n    &lt;mkdir dir=\"${build-js}\"/&gt;\n\n    &lt;java classname=\"org.mozilla.javascript.tools.shell.Main\"&gt;\n        &lt;classpath&gt;\n            &lt;path refid=\"rhino-classpath\"/&gt;\n            &lt;path refid=\"closure-classpath\"/&gt;\n        &lt;/classpath&gt;\n        &lt;arg value=\"${js-build-script}\"/&gt;\n        &lt;arg value=\"${js-build-dir}\"/&gt;\n        &lt;arg value=\"name=${build-js-main-rhino-frontend-module}\"/&gt; \n        &lt;arg value=\"out=${build-js-main}\"/&gt;\n        &lt;arg value=\"baseUrl=.\"/&gt;\n        &lt;arg value=\"includeRequire=true\"/&gt;\n        &lt;arg value=\"inlineText=true\"/&gt; \n        &lt;arg value=\"optimize=none\"/&gt;\n    &lt;/java&gt;\n&lt;/target&gt;\n\n&lt;target name=\"compile-single-class\" depends=\"compile-single-js\"&gt;\n    &lt;mkdir dir=\"${build-class}\"/&gt;\n\n    &lt;!-- TODO: set -opt --&gt;\n    &lt;java classname=\"org.mozilla.javascript.tools.jsc.Main\"&gt;\n        &lt;classpath&gt;\n            &lt;path refid=\"rhino-classpath\"/&gt;\n        &lt;/classpath&gt;\n        &lt;arg value=\"-o\"/&gt;\n        &lt;arg value=\"${build-class-main-name}.class\"/&gt;\n        &lt;arg value=\"${build-js-main}\"/&gt;\n    &lt;/java&gt;\n    &lt;move file=\"${build-js}/${build-class-main-name}.class\" todir=\"${build-class}\"/&gt;\n&lt;/target&gt;\n\n&lt;target name=\"jar-single-class\" depends=\"compile-single-class\"&gt;\n    &lt;mkdir dir=\"${build-jar}\"/&gt;\n\n    &lt;jar destfile=\"${build-jar-main}\"\n        basedir=\"${build-class}\"\n        includes=\"${build-class-main-name}.class\"&gt;\n        &lt;manifest&gt;\n            &lt;attribute name=\"Main-Class\" value=\"${build-class-main-name}\" /&gt;\n        &lt;/manifest&gt;\n    &lt;/jar&gt;\n&lt;/target&gt;\n</code></pre>\n\n<p>The complete build script can be found <a href=\"https://svn.apache.org/repos/asf/commons/sandbox/gsoc/2010/scxml-js/trunk/build.xml\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I'd like to use the <a href=\"https://developer.mozilla.org/en/Rhino_JavaScript_Compiler\" rel=\"nofollow\">Rhino JavaScript</a> compiler to compile some JavaScript to .class bytecode files for use in a project. It seems like this should already exist, since there are groovyc, netrexxc, and jythonc tasks for Groovy, NetREXX(!) and Jython, respectively. Has anyone used or written such an Ant task, or can anyone provide some tips on how to write one?</p>\n\n<p>Ideally it would have some way to resolve dependencies among JavaScript or Java classes.</p>\n",
            "last_activity_date": 1315848381,
            "question_id": 231550,
            "score": 7,
            "tags": [
                "java",
                "javascript",
                "ant",
                "rhino"
            ],
            "title": "Has anyone used or written an Ant task to compile (Rhino) JavaScript to Java bytecode?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<h2>Changes:</h2>\n\n<ul>\n<li>06.03.2013 - Addad a few comments inside a WURFL chapter</li>\n</ul>\n\n<h2>Intro :</h2>\n\n<p>There are few available solutions but I will only name open-source ones, at least solutions mostly used with a jQuery/jQuery Mobile. Also be warned, this topic has the potential to start a war. On one side we have a proponents of server side detection with their community maintained databases and on the other side we have client side advocates with their browser sniffing. </p>\n\n<h2>Server side:</h2>\n\n<p><strong><a href=\"http://wurfl.sourceforge.net/apis.php\">WURFL</a></strong> - </p>\n\n<blockquote>\n  <p>Created in 2002, WURFL (Wireless Universal Resource FiLe), is a\n  popular open-source framework to solve the device-fragmentation\n  problem for mobile Web developers and other stakeholders in the mobile\n  ecosystem. WURFL has been and still is the de facto standard\n  device-description repository adopted by mobile developers. WURFL is\n  open source (AGPL v3) and a trademark of ScientiaMobile.</p>\n</blockquote>\n\n<p><strong>Good :</strong></p>\n\n<p>Very detailed detection, you would probably get more data then is really needed.</p>\n\n<p>Good platform support,  api's are available for Java, PHP and .Net.</p>\n\n<p><strong>Bad :</strong> </p>\n\n<p>Not always up to date, heavy dependency on community</p>\n\n<p>In case of iPhone there's no way of knowing an iOS version, so media type queries to detect pixel ratios.</p>\n\n<p>Fee only for a non commercial usage, older version are still free for commercial usage but they can only use database updated up to WURFL EULA changes.</p>\n\n<ul>\n<li>It can be found here: <a href=\"http://wurfl.sourceforge.net/apis.php\">http://wurfl.sourceforge.net/apis.php</a></li>\n</ul>\n\n<p><strong>PHP example :</strong> </p>\n\n<pre><code>&lt;?php\n    // Include the configuration file\n    include_once './inc/wurfl_config_standard.php';\n\n    $wurflInfo = $wurflManager-&gt;getWURFLInfo();\n\n    if (isset($_GET['ua']) &amp;&amp; trim($_GET['ua'])) {\n        $ua = $_GET['ua'];\n        $requestingDevice = $wurflManager-&gt;getDeviceForUserAgent($_GET['ua']);\n    } else {\n        $ua = $_SERVER['HTTP_USER_AGENT'];\n        // This line detects the visiting device by looking at its HTTP Request ($_SERVER)\n        $requestingDevice = $wurflManager-&gt;getDeviceForHttpRequest($_SERVER);\n    }\n?&gt;  \n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;WURFL PHP API Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h3&gt;WURFL XML INFO&lt;/h3&gt;\n    &lt;ul&gt;\n        &lt;li&gt;&lt;h4&gt;VERSION: &lt;?php echo $wurflInfo-&gt;version; ?&gt; &lt;/h4&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n    &lt;div id=\"content\"&gt;\n        User Agent: &lt;b&gt; &lt;?php echo htmlspecialchars($ua); ?&gt; &lt;/b&gt;\n        &lt;ul&gt;\n            &lt;li&gt;ID: &lt;?php echo $requestingDevice-&gt;id; ?&gt; &lt;/li&gt;\n            &lt;li&gt;Brand Name: &lt;?php echo $requestingDevice-&gt;getCapability('brand_name'); ?&gt; &lt;/li&gt;\n            &lt;li&gt;Model Name: &lt;?php echo $requestingDevice-&gt;getCapability('model_name'); ?&gt; &lt;/li&gt;\n            &lt;li&gt;Marketing Name: &lt;?php echo $requestingDevice-&gt;getCapability('marketing_name'); ?&gt; &lt;/li&gt;\n            &lt;li&gt;Preferred Markup: &lt;?php echo $requestingDevice-&gt;getCapability('preferred_markup'); ?&gt; &lt;/li&gt;\n            &lt;li&gt;Resolution Width: &lt;?php echo $requestingDevice-&gt;getCapability('resolution_width'); ?&gt; &lt;/li&gt;\n            &lt;li&gt;Resolution Height: &lt;?php echo $requestingDevice-&gt;getCapability('resolution_height'); ?&gt; &lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;p&gt;&lt;b&gt;Query WURFL by providing the user agent:&lt;/b&gt;&lt;/p&gt;\n        &lt;form method=\"get\" action=\"index.php\"&gt;\n            &lt;div&gt;User Agent: &lt;input type=\"text\" name=\"ua\" size=\"100\" value=\"&lt;?php echo isset($_GET['ua'])? htmlspecialchars($_GET['ua']): ''; ?&gt;\" /&gt;\n            &lt;input type=\"submit\" /&gt;&lt;/div&gt;\n        &lt;/form&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>If you want to customize this code, change configuration parameters inside a <strong>wurfl_config_standard.php</strong> file.</p>\n\n<hr>\n\n<p><strong><a href=\"https://github.com/jamesgpearce/modernizr-server\">Modernizr - Server</a></strong> - </p>\n\n<blockquote>\n  <p>Modernizr is a great way to find out about your user's browser\n  capabilities. However, you can only access its API on the browser\n  itself, which means you can't easily benefit from knowing about\n  browser capabilities in your server logic. The modernizr-server\n  library is a way to bring Modernizr browser data to your server\n  scripting environment.</p>\n</blockquote>\n\n<p><strong>Good :</strong></p>\n\n<p>Like WURFL very detailed detection, but we need to take into consideration that it is build with a different purpose the WURFL.</p>\n\n<p><strong>Bad :</strong></p>\n\n<p>Only supported on PHP, but sometimes this will be enough.</p>\n\n<p><strong>Example :</strong> </p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;Modernizr Server Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;?php\n    include('modernizr-server.php');\n\n    print 'The server knows:';\n    foreach($modernizr as $feature=&gt;$value) {\n        print \"&lt;br/&gt; $feature: \"; print_r($value);\n    }\n?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<ul>\n<li>It can be found here: <a href=\"https://github.com/jamesgpearce/modernizr-server\">https://github.com/jamesgpearce/modernizr-server</a></li>\n</ul>\n\n<h2>Client side:</h2>\n\n<p><strong><a href=\"http://modernizr.com/\">Modernizer</a></strong> - </p>\n\n<blockquote>\n  <p>aking advantage of cool new web technologies is great fun, until you\n  have to support browsers that lag behind. Modernizr makes it easy for\n  you to write conditional JavaScript and CSS to handle each situation,\n  whether a browser supports a feature or not. It\u2019s perfect for doing\n  progressive enhancement easily.</p>\n</blockquote>\n\n<p><strong>Good :</strong></p>\n\n<p>Only client side, server side component don't exist</p>\n\n<p>Fast but still large for a javascript framework with its 12kb. Because of its modularity it can become smaller, depending on your needs.</p>\n\n<p><strong>Bad :</strong> </p>\n\n<p>Can do only so much, less info then server side detection.</p>\n\n<p>Modernizr itself is a great way to find out about your user\u2019s browser capabilities. However, you can only access its API on the browser itself, which means you can\u2019t easily benefit from knowing about browser capabilities in your server logic.</p>\n\n<ul>\n<li>It can be found here: <a href=\"http://modernizr.com/\">http://modernizr.com/</a></li>\n</ul>\n\n<p>Example : </p>\n\n<pre><code>    &lt;!DOCTYPE html&gt;\n    &lt;html&gt;\n    &lt;head&gt;\n      &lt;meta charset=\"utf-8\"&gt;\n      &lt;title&gt;Modernizr Example&lt;/title&gt;\n      &lt;script src=\"modernizr.min.js\"&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n      &lt;script&gt;\n        if (Modernizr.canvas) {\n          // supported\n        } else {\n          // no native canvas support available :(\n        }  \n      &lt;/script&gt;\n    &lt;/body&gt;\n    &lt;/html&gt;\n</code></pre>\n\n<p><strong><a href=\"http://www.quirksmode.org/js/detect.html\">JavaScript based browser sniffing</a></strong> </p>\n\n<blockquote>\n  <p>It is arguable that this may be (academically) the worst possible way\n  to detect mobile but it does have its virtues.</p>\n</blockquote>\n\n<p><strong>Good :</strong></p>\n\n<p>Simple</p>\n\n<p><strong>Bad :</strong> </p>\n\n<p>Where to begin</p>\n\n<p><strong>Example :</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;     \n    var agent = navigator.userAgent;      \n    var isWebkit = (agent.indexOf(\"AppleWebKit\") &gt; 0);      \n    var isIPad = (agent.indexOf(\"iPad\") &gt; 0);      \n    var isIOS = (agent.indexOf(\"iPhone\") &gt; 0 || agent.indexOf(\"iPod\") &gt; 0);     \n    var isAndroid = (agent.indexOf(\"Android\")  &gt; 0);     \n    var isNewBlackBerry = (agent.indexOf(\"AppleWebKit\") &gt; 0 &amp;&amp; agent.indexOf(\"BlackBerry\") &gt; 0);     \n    var isWebOS = (agent.indexOf(\"webOS\") &gt; 0);      \n    var isWindowsMobile = (agent.indexOf(\"IEMobile\") &gt; 0);     \n    var isSmallScreen = (screen.width &lt; 767 || (isAndroid &amp;&amp; screen.width &lt; 1000));     \n    var isUnknownMobile = (isWebkit &amp;&amp; isSmallScreen);     \n    var isMobile = (isIOS || isAndroid || isNewBlackBerry || isWebOS || isWindowsMobile || isUnknownMobile);     \n    var isTablet = (isIPad || (isMobile &amp;&amp; !isSmallScreen));     \n\n    if ( isMobile &amp;&amp; isSmallScreen &amp;&amp; document.cookie.indexOf( \"mobileFullSiteClicked=\") &lt; 0 ) mobileRedirect(); \n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>This may not be the best solution but i use this function for my personal use in javascript.</p>\n\n<p>By the way @Gajotres thanks for deep and useful information.</p>\n\n<pre><code>function mobilMi()\n{\n  if( navigator.userAgent.match(/Android/i) ||\n   navigator.userAgent.match(/webOS/i) ||\n   navigator.userAgent.match(/iPhone/i) ||\n   navigator.userAgent.match(/iPod/i)||\n   navigator.userAgent.match(/iPad/i)\n   ){\n    return 1;\n  }\n  else\n   return 0;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've code something like this to get the device os type... the $test will be the string of the user agent</p>\n\n<pre><code>   if (preg_match(\"/linux/i\", $test) &amp;&amp; preg_match(\"/android/i\", $test)) {\n        $device_type = 'Android';\n    } else if (preg_match(\"/windows phone/i\", $test)){\n        $device_type = '&lt;font size=\"6\"&gt;Windows Mobile&lt;/font&gt;';\n    } else if (preg_match(\"/windows nt/i\", $test)){\n        $device_type = 'Windows';\n    } else if (preg_match(\"/linux/i\", $test)){\n        $device_type = 'Linux';\n    } else if (preg_match(\"/macintosh/i\", $test)){\n        $device_type = 'Macintosh';\n    } else if (preg_match(\"/iphone/i\", $test)){\n        $device_type = 'iPhone';\n    } else if (preg_match(\"/ipad/i\", $test)){\n        $device_type = 'iPad';\n    }  else if (preg_match(\"/symbian/i\", $test)){\n        $device_type = 'Symbian';\n    } else if (preg_match(\"/blackberry/i\", $test)){\n        $device_type = 'Blackberry';\n    } else\n        $device_type = 'None';\n</code></pre>\n\n<p>I think you need to know the pattern and get the keyword. Using WURFL sometimes doesnt get what you want.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am creating a phonegap application for various mobile platforms and I was wondering what is a current best solution of browser/mobile phone detection?</p>\n\n<p>Should I go with a server or a client side detection or could I use css solution through a media types screen width?</p>\n",
            "last_activity_date": 1409130471,
            "question_id": 15055277,
            "score": 6,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "html5",
                "jquery-mobile"
            ],
            "title": "What are available solutions of a browser / mobile phone detection"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<h3>Characteristics of a data-URI</h3>\n\n<p>A <a href=\"http://en.wikipedia.org/wiki/Data_URI_scheme\">data-URI</a> with MIME-type <code>text/html</code> has to be in one of these formats:</p>\n\n<pre><code>data:text/html,&lt;HTML HERE&gt;\ndata:text/html;charset=UTF-8,&lt;HTML HERE&gt;\n</code></pre>\n\n<p>Base-64 encoding is not necessary. If your code contains non-ASCII characters, such as <code>\u00e9\u00e9</code>, <code>charset=UTF-8</code> has to be added.</p>\n\n<p>The following characters have to be escaped:</p>\n\n<ul>\n<li><code>#</code> - Firefox and Opera interpret this character as the marker of a hash (as in <code>location.hash</code>).</li>\n<li><code>%</code> - This character is used to escape characters. Escape this character to make sure that no side effects occur.</li>\n</ul>\n\n<p>Additionally, if you want to embed the code in an anchor tag, the following characters should also be escaped:</p>\n\n<ul>\n<li><code>\" and/or '</code> - Quotes mark the value of the attribute.</li>\n<li><code>&amp;</code> - The ampersand is used to mark HTML entities.</li>\n<li><code>&lt;</code> and <code>&gt;</code> do <strong>not have to</strong> be escaped <strong>inside a HTML attribute</strong>. However, if you're going to embed the link in the HTML, these should also be escaped (<code>%3C and %3E</code>)</li>\n</ul>\n\n<h3>JavaScript implementation</h3>\n\n<p>If you don't mind the size of the data-URI, the easiest method to do so is using <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/encodeURIComponent\"><code>encodeURIComponent</code></a>:</p>\n\n<pre><code>var html = document.getElementById(\"html\").innerHTML;\nvar dataURI = 'data:text/html,' + encodeURIComponent(html);\n</code></pre>\n\n<p>If size matters, you'd better strip out all consecutive white-space (this can safely be done, unless the HTML contains a <code>&lt;pre&gt;</code> element/<a href=\"https://developer.mozilla.org/en/CSS/white-space#Values\">style</a>). Then, only replace the significant characters:</p>\n\n<pre><code>var html = document.getElementById(\"html\").innerHTML;\nhtml = html.replace(/\\s{2,}/g, '')   // &lt;-- Replace all consecutive spaces, 2+\n           .replace(/%/g, '%25')     // &lt;-- Escape %\n           .replace(/&amp;/g, '%26')     // &lt;-- Escape &amp;\n           .replace(/#/g, '%23')     // &lt;-- Escape #\n           .replace(/\"/g, '%22')     // &lt;-- Escape \"\n           .replace(/'/g, '%27');    // &lt;-- Escape ' (to be 100% safe)\nvar dataURI = 'data:text/html;charset=UTF-8,' + html;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>Here's my HTML:</p>\n\n<pre><code>&lt;a&gt;View it in your browser&lt;/a&gt;\n&lt;div id=\"html\"&gt;\n    &lt;h1&gt;Doggies&lt;/h1&gt;\n    &lt;p style=\"color:blue;\"&gt;Kitties&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>How do I use JavaScript to make the <code>href</code> attribute of my link point to a base64 encoded webpage whose source is the <code>innerHTML</code> of <code>div#html</code>?</p>\n\n<p>I basically want to do the same conversion done <a href=\"http://software.hixie.ch/utilities/cgi/data/data\">here</a> (with the base64 checkbox checked) except for in JavaScript.</p>\n",
            "last_activity_date": 1399813661,
            "question_id": 9238890,
            "score": 6,
            "tags": [
                "javascript",
                "html",
                "url",
                "base64",
                "data-uri"
            ],
            "title": "Convert HTML to data:text/html  link using JavaScript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<pre><code>Math.floor()\n</code></pre>\n\n<p>is the answer.</p>\n",
                    "is_accepted": true,
                    "score": 215
                },
                {
                    "body": "<pre><code>Math.floor(1+7/8)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>Math.floor()</code> will work, but it's very slow compared to using a bitwise <code>OR</code> operation:</p>\n\n<pre><code>var rounded = 34.923 | 0;\nalert( rounded );\n//alerts \"34\"\n</code></pre>\n\n<p><strong>EDIT</strong> <code>Math.floor()</code> is <em>not</em> slower than using the | operator. Thanks to Jason S for checking my work.</p>\n\n<p>Here's the code I used to test:</p>\n\n<pre><code>var a = [];\nvar time = new Date().getTime();\nfor( i = 0; i &lt; 100000; i++ ) {\n    //a.push( Math.random() * 100000  | 0 );\n    a.push( Math.floor( Math.random() * 100000 ) );\n}\nvar elapsed = new Date().getTime() - time;\nalert( \"elapsed time: \" + elapsed );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Round towards negative infinity - <code>Math.floor()</code></p>\n\n<pre><code>+3.5 =&gt; +3.0\n-3.5 =&gt; -4.0\n</code></pre>\n\n<p>Round towards zero - usually called <code>Truncate()</code>, but not supported by JavaScript - can be emulated by using <code>Math.ceil()</code> for negative numbers and <code>Math.floor()</code> for positive numbers.</p>\n\n<pre><code>+3.5 =&gt; +3.0 using Math.floor()\n-3.5 =&gt; -3.0 using Math.ceil()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>Was fiddling round with someone elses code today and found the following which seems rounds down as well:</p>\n\n<pre><code>var dec = 12.3453465,\nint = dec &gt;&gt; 0; // returns 12\n</code></pre>\n\n<p>For more info on the Sign-propagating right shift(>>)  see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Bitwise_Operators\" rel=\"nofollow\">MDN Bitwise Operators</a></p>\n\n<p>It took me a while to work out what this was doing :D</p>\n\n<p>But as highlighted above, Math.floor() works and looks more readable in my opinion.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can try to use this function if you need to round down to a specific number of decimal places</p>\n\n<pre><code>function roundDown(number, decimals) {\n    decimals = decimals || 0;\n    return ( Math.floor( number * Math.pow(10, decimals) ) / Math.pow(10, decimals) );\n}\n</code></pre>\n\n<p>examples</p>\n\n<pre><code>alert(roundDown(999.999999)); // 999\nalert(roundDown(999.999999, 3)); // 999.999\nalert(roundDown(999.999999, -1)); // 990\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To round down towards negative infinity, use:</p>\n\n<pre><code>rounded=Math.floor(number);\n</code></pre>\n\n<p>To round down towards zero (assuming the number fits in an int), use: </p>\n\n<pre><code>rounded=number|0;\n</code></pre>\n\n<p>To round down towards zero (for any number), use:</p>\n\n<pre><code>if(number&gt;0)rounded=Math.floor(number);else rounded=Math.ceil(number);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Rounding a <code>number</code> towards <code>0</code> can be done by subtracting its signed fractional part <code>number % 1</code>:</p>\n\n<pre><code>rounded = number - number % 1;\n</code></pre>\n\n<p>Like <code>Math.floor</code> (rounds towards <code>-Infinity</code>) this method is perfectly accurate.</p>\n\n<p>There are differences in the handling of <code>-0</code>, <code>+Infinity</code> and <code>-Infinity</code> though:</p>\n\n<pre><code>Math.floor(-0) =&gt; -0\n-0 - -0 % 1    =&gt; +0\n\nMath.floor(Infinity)    =&gt; Infinity\nInfinity - Infinity % 1 =&gt; NaN\n\nMath.floor(-Infinity)     =&gt; -Infinity\n-Infinity - -Infinity % 1 =&gt; NaN\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The answer is <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\" rel=\"nofollow\">toFixed()</a>. There is no need for any extra JS function to be defined as you can simply use <strong>toFixed()</strong> built-in JS function. The function works with both <em>negative</em> and <em>positive</em> values (e.g., decimals). Below are usage examples <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\" rel=\"nofollow\">from</a> </p>\n\n<p>numObj.<strong>toFixed([digits])</strong></p>\n\n<p>var numObj = <strong>12345.6789</strong>;</p>\n\n<ul>\n<li>numObj.<strong>toFixed()</strong>;       // Returns '12346': note rounding, no\nfractional part</li>\n<li>numObj.<strong>toFixed(1)</strong>;      // Returns '12345.7': note rounding</li>\n<li>numObj.<strong>toFixed(6)</strong>;      // Returns '12345.678900': note added zeros</li>\n<li>(1.23e+20).<strong>toFixed(2)</strong>;  // Returns '123000000000000000000.00'</li>\n<li>(1.23e-10).<strong>toFixed(2)</strong>;  // Returns '0.00'</li>\n<li>2.34.<strong>toFixed(1)</strong>;        // Returns '2.3'</li>\n<li>-2.34.<strong>toFixed(1)</strong>;       // Returns -2.3 (due to operator precedence, negative number literals don't return a string...)</li>\n<li>(-2.34).<strong>toFixed(1)</strong>;     // Returns '-2.3' (...unless you use\nparentheses)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I round down a number in JavaScript?</p>\n\n<p><code>math.round()</code> doesn't work because it rounds it to the nearest decimal. </p>\n\n<p>I'm not sure if there is a better way of doing it other than breaking it apart at the decimal point at keeping the first bit. There must be...</p>\n",
            "last_activity_date": 1422912617,
            "question_id": 1435975,
            "score": 110,
            "tags": [
                "javascript",
                "math",
                "rounding"
            ],
            "title": "How can I round down a number in Javascript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<pre><code>var a = ['a','b','c'];\nvar b = ['d','e','f'];\nvar c = a.concat(b); //c is now an an array with: ['a','b','c','d','e','f']\nconsole.log( c[3] ); //c[3] will be 'd'\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 139
                }
            ],
            "body": "<p>I'm trying to combine 2 arrays in javascript into one.</p>\n\n<pre><code>var lines = new Array(\"a\",\"b\",\"c\");\nlines = new Array(\"d\",\"e\",\"f\");\n</code></pre>\n\n<p>This is a quick example, i want to be able to combine them so that when the second line is read the 4th element in the array would return \"d\"</p>\n\n<p>How would i do this?</p>\n",
            "last_activity_date": 1346238754,
            "question_id": 3975170,
            "score": 78,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "JavaScript: How to join / combine two arrays to concatenate into one array?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>$('#a_tbnotesverbergen').text('My New Link Text');\n</code></pre>\n\n<p>OR</p>\n\n<pre><code>$('#a_tbnotesverbergen').html('My New Link Text or HTML');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>The method you are looking for is <a href=\"http://docs.jquery.com/Attributes/text\">jQuery's .text()</a> and you can used it in the following fashion:</p>\n\n<pre><code>$('#a_tbnotesverbergen').text('text here');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>You have to use the <a href=\"http://docs.jquery.com/Attributes/text\">jquery's text() function</a>. What it does is:</p>\n\n<blockquote>\n  <p><strong>Get the combined text contents of all\n  matched elements.</strong> </p>\n  \n  <p>The result is a\n  string that contains the combined text\n  contents of all matched elements. This\n  method works on both HTML and XML\n  documents. Cannot be used on input\n  elements. For input field text use the\n  <a href=\"http://docs.jquery.com/Attributes/val#val\">val attribute</a>.</p>\n</blockquote>\n\n<p>For example:</p>\n\n<blockquote>\n  <p>Find the text in the first paragraph\n  (stripping out the html), then set the\n  html of the last paragraph to show it\n  is just text (the bold is gone).</p>\n\n<pre><code>var str = $(\"p:first\").text();\n$(\"p:last\").html(str);\n</code></pre>\n  \n  <p><strong>Test</strong> Paragraph.</p>\n  \n  <p>Test Paragraph.</p>\n</blockquote>\n\n<p>With your markup you have to do:</p>\n\n<pre><code>$('a#a_tbnotesverbergen').text('new text');\n</code></pre>\n\n<p>and it will result in</p>\n\n<pre><code>&lt;a id=\"a_tbnotesverbergen\" href=\"#nothing\"&gt;new text&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 97
                },
                {
                    "body": "<p>From W3 Schools <a href=\"http://www.w3schools.com/js/js_htmldom_html.asp\" rel=\"nofollow\">HTML DOM Changes</a>: If you look at the 3rd example it shows how you can change the text in your link, \"click here\".\nExample:</p>\n\n<pre><code>&lt;a id=\"a_tbnotesverbergen\" href=\"#nothing\"&gt;click here&lt;/a&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>var element=document.getElementById(\"a_tbnotesverbergen\"); \nelement.innerHTML=\"New Text\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>a simple question here</p>\n\n<p>Is there a way to change the text \"click here\"</p>\n\n<pre><code>&lt;a id=\"a_tbnotesverbergen\" href=\"#nothing\"&gt;click here&lt;/a&gt;\n</code></pre>\n\n<p>in this link</p>\n\n<p>Richard</p>\n",
            "last_activity_date": 1361984798,
            "question_id": 901909,
            "score": 61,
            "tags": [
                "javascript",
                "jquery",
                "dom",
                "hyperlink"
            ],
            "title": "change html text from link with jquery"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>According to <a href=\"http://jsperf.com/cast-to-string/2\">this JSPerf test</a>, they differ in speed. But unless you're going to use them in huge amounts, any of them should perform fine.</p>\n\n<p>For completeness: As <a href=\"http://stackoverflow.com/users/426894/asawyer\">asawyer</a> already mentioned, you can also use the <code>.toString()</code> method.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>They do behave differently when the <code>value</code> is <code>null</code>.</p>\n\n<ul>\n<li><code>null.toString()</code> throws an error - <em>Cannot call method 'toString' of null</em></li>\n<li><code>String(null)</code> returns - <em>\"null\"</em></li>\n<li><code>null + \"\"</code> also returns - <em>\"null\"</em></li>\n</ul>\n\n<p>Very similar behaviour happens if <code>value</code> is <code>undefined</code> (see <a href=\"http://stackoverflow.com/a/11083457/369247\">jbabey's answer</a>).</p>\n\n<p>Other than that, there is a negligible performance difference, which, unless you're using them in huge loops, isn't worth worrying about.</p>\n",
                    "is_accepted": true,
                    "score": 57
                },
                {
                    "body": "<p>There are differences, but they are probably not relevant to your question. For example, the toString prototype does not exist on undefined variables, but you can cast undefined to a string using the other two methods:</p>\n\n<pre><code>\u200bvar foo;\n\n\u200bvar myString1 = String(foo); // \"undefined\" as a string\n\nvar myString2 = foo + ''; // \"undefined\" as a string\n\nvar myString3 = foo.toString(); // throws an exception\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/f8YwA/\">http://jsfiddle.net/f8YwA/</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>On this page you can test the performance of each method yourself :)</p>\n\n<p><a href=\"http://jsperf.com/cast-to-string/2\" rel=\"nofollow\">http://jsperf.com/cast-to-string/2</a></p>\n\n<p>here, on all machines and browsers, ' <strong>\"\" + str</strong> ' is the fastest one, (String)str is the slowest</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>They behave the same but <code>toString</code> also provides a way to convert a number binary, octal, or hexadecimal strings:</p>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>var a = (50274).toString(16)  // \"c462\"\nvar b = (76).toString(8)      // \"114\"\nvar c = (7623).toString(36)   // \"5vr\"\nvar d = (100).toString(2)     // \"1100100\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Real world example: I've got a log function that can be called with an arbitrary number of parameters: <code>log(\"foo is {} and bar is {}\", param1, param2)</code>. If a <code>DEBUG</code> flag is set to <code>true</code>, the brackets get replaced by the given parameters and the string is passed to <code>console.log(msg)</code>. Parameters can and will be Strings, Numbers and whatever may be returned by JSON / AJAX calls, maybe even <code>null</code>.</p>\n\n<ul>\n<li><code>arguments[i].toString()</code> is not an option, because of possible <code>null</code> values (see Connell Watkins answer)</li>\n<li>JSLint will complain about <code>arguments[i] + \"\"</code>. This may or may not influence a decision on what to use. Some folks strictly adhere to JSLint.</li>\n<li>In some browsers, concatenating empty strings is a little faster than using string function or string constructor (see JSPerf test in Sammys S. answer). <strong>In Opera 12 and Firefox 19, concatenating empty strings is rediculously faster (95% in Firefox 19)</strong> - or at least <a href=\"http://jsperf.com/cast-to-string/2\" rel=\"nofollow\">JSPerf</a> says so.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>if you are ok with null, undefined, NaN, 0, and false all casting to '' then <code>(s ? s+'' : '')</code> is faster.</p>\n\n<p>see <a href=\"http://jsperf.com/cast-to-string/8\" rel=\"nofollow\">http://jsperf.com/cast-to-string/8</a></p>\n\n<p>note - there are significant differences across browsers at this time.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In addition to all the above, one should note that, for a defined value <code>v</code>:</p>\n\n<ul>\n<li><code>String(v)</code> calls <code>v.toString()</code></li>\n<li><code>'' + v</code> calls <code>v.valueOf()</code> prior to any other type cast</li>\n</ul>\n\n<p>So we could do something like:</p>\n\n<pre><code>var mixin = {\n  valueOf:  function () { return false },\n  toString: function () { return 'true' }\n};\nmixin === false;  // false\nmixin == false;    // true\n'' + mixin;       // \"false\"\nString(mixin)     // \"true\"\n</code></pre>\n\n<p><em>Tested in FF 34.0 and Node 0.10</em></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I found three ways to cast a variable to <code>String</code> in JavaScript.<br>\nI searched for those three options in the jQuery source code, and <strong>they are all in use</strong>.<br>\nI would like to know if there are any differences between them:</p>\n\n<pre><code>value.toString()\nString(value)\nvalue + \"\"\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/67NaT/\">DEMO</a></strong></p>\n\n<p>They all produce the same output, but does one of them better than the others?<br>\nI would say the <code>+ \"\"</code> has an advantage that it saves some characters, but that's not that big advantage, anything else? </p>\n",
            "last_activity_date": 1421148782,
            "question_id": 11083254,
            "score": 57,
            "tags": [
                "javascript",
                "jquery",
                "string"
            ],
            "title": "Casting to string in JavaScript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can either write a spin loop (a loop that just loops for a long period of time performing some sort of computation to delay the function) or use:</p>\n\n<pre><code>setTimeout(\"Func1()\", 3000);\n</code></pre>\n\n<p>This will call 'Func1()' after 3 seconds.</p>\n\n<p>Edit:</p>\n\n<p>Credit goes to the commenters, but you can pass anonymous functions to setTimeout.</p>\n\n<pre><code>setTimeout(function() {\n   //Do some stuff here\n}, 3000);\n</code></pre>\n\n<p>This is much more efficient and does not invoke javascript's eval function.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There's no direct equivalent, as it'd pause a webpage.  However there is a <a href=\"http://www.w3schools.com/htmldom/met%5Fwin%5Fsettimeout.asp\" rel=\"nofollow\">setTimeout()</a>, e.g.:</p>\n\n<pre><code>function doSomething() {\n  thing = thing + 1;\n  setTimeout(doSomething, 500);\n}\n</code></pre>\n\n<p>Closure example (thanks Daniel):</p>\n\n<pre><code>function doSomething(val) {\n  thing = thing + 1;\n  setTimeout(function() { doSomething(val) }, 500);\n}\n</code></pre>\n\n<p>The second argument is milliseconds before firing, you can use this for time events or waiting before performing an operation.</p>\n\n<p><strong>Edit:</strong>  Updated based on comments for a cleaner result.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The simple answer is that there is no such function.</p>\n\n<p>The closest thing you have is:</p>\n\n<pre><code>var millisecondsToWait = 500;\nsetTimeout(function() {\n    // Whatever you want to do after the wait\n}, millisecondsToWait);\n</code></pre>\n\n<p>Note that you <em>especially</em> don't want to busy-wait (e.g. in a spin loop), since your browser is almost certainly executing your JavaScript in a single-threaded environment.</p>\n\n<p>Here are a couple of other SO questions that deal with threads in JavaScript:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/30036/javascript-and-threads\">http://stackoverflow.com/questions/30036/javascript-and-threads</a></li>\n<li><a href=\"http://stackoverflow.com/questions/39879/why-doesnt-javascript-support-multithreading\">http://stackoverflow.com/questions/39879/why-doesnt-javascript-support-multithreading</a></li>\n</ul>\n\n<p>And this question may also be helpful:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/797115/javascript-settimeout-without-putting-code-into-a-string\">http://stackoverflow.com/questions/797115/javascript-settimeout-without-putting-code-into-a-string</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 64
                },
                {
                    "body": "<p>Or maybe you can use the setInterval function, to call a particular function, after the specified number of milliseconds. Just do a google for the setInterval prototype.I don't quite recollect it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try with this code. I hope it's useful for you.</p>\n\n<pre><code>function sleep(seconds) \n{\n  var e = new Date().getTime() + (seconds * 1000);\n  while (new Date().getTime() &lt;= e) {}\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>This eventually helped me:</p>\n\n<pre><code>    var x = 0;\n    var buttonText = 'LOADING';\n\n    $('#startbutton').click(function(){\n        $(this).text(buttonText);\n        window.setTimeout(addDotToButton,2000);\n    })\n\n    function addDotToButton(){\n        x++;\n        buttonText += '.';\n        $('#startbutton').text(buttonText);\n\n        if (x &lt; 4) window.setTimeout(addDotToButton, 2000);\n        else location.reload(true);\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What's the equivalent of Java's <code>Thread.sleep()</code> in Javascript?</p>\n",
            "last_activity_date": 1408842627,
            "question_id": 1447407,
            "score": 54,
            "tags": [
                "java",
                "javascript"
            ],
            "title": "What&#39;s the equivalent of Java&#39;s Thread.sleep() in Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The <em>strict mode</em> is not really about performance, it a <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_4.2.2\"><em>strict variant</em></a> of the language, its <em>main goal</em> is to avoid what are considered to be <em>error-prone features</em>.</p>\n\n<p>Basically its goal is to make the language <em>safer</em>, introducing are a lot of semantical changes, also additional error checking is made, and erros are noisy, in non-strict code things only silently fail.</p>\n\n<p>About performance, I think browser vendors are now having a hard time now implementing strict mode, the problem is that the JS engines are mostly based on ECMAScript 3, and implementing the strict mode is not easy, since the scope of <em>strictness</em> is very flexible, you can mix non-strict and strict code.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/\">ECMAScript 5 Strict Mode, JSON, and More</a></li>\n<li><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=482298\">SpiderMonkey strict mode ticket</a></li>\n<li><a href=\"https://bugs.webkit.org/show_bug.cgi?id=10701\">Webkit strict mode ticket</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<blockquote>\n  <p>Is strict mode intended, amongst its other goals, to allow browsers to introduce additional optimisations or other performance enhancements?</p>\n</blockquote>\n\n<p>Whether or not it was <em>intended</em> to do this, I'm not sure, although I think the answer is yes.</p>\n\n<p>But I can say with certainty that strict mode does provide these opportunities, and browsers will implement them -- regardless whether providing those opportunities was an intentional goal for the ECMA committee.  However, I wouldn't expect all those opportunities to be taken immediately.  In many cases the mantra is likely to be correctness first, performance later, because strict mode is not widely used right now.  (I work on Mozilla's JavaScript engine and have implemented various parts of strict mode, and we're implementing it this way as a general rule -- although I could probably think of an exception or two if I tried.)</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>For the most part, <strong>no</strong>.  If you closely examine the ECMAScript 5 standards document, you'll notice that pretty much all occurrences of Strict Mode in the pseudo-code algorithms amount to:</p>\n\n<pre><code>  if (isStrictMode) {\n      //throw an (early) SyntaxError or TypeError\n  }\n  else {\n      //return\n  }\n</code></pre>\n\n<p>There's two things to note about this:</p>\n\n<ol>\n<li>The checks on Strict Mode didn't exist in ECMAScript 3.  While it's relatively lightweight, conforming implementations of JavaScript are now running at least one extra conditional check compared to their ECMAScript 3 counterparts.  Yeah...I know a single check like this burns very few clock cycles, but little things add up</li>\n<li>Because Strict Mode is primarily a parse time feature of JavaScript, your favorite browser isn't going to show much of a performance decrease when Strict Mode is enabled for some website (e.g., SunSpider).  That is, the performance degrade occurs <strong>before</strong> code is executed meaning it <strong>could</strong> be perceptible to end-users but is largely immeasurable using  the <em>Date</em> object to measure block execution time</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Does executing javascript within a browser in 'strict mode' make it more performant, in general? Do any of the major browsers do additional optimisation or use any other techniques that will improve performance in strict mode?</p>\n\n<p>Edit: Since <a href=\"http://kangax.github.com/es5-compat-table/\">none of the major engines actually implement strict mode</a>, I'll rephrase slightly: Is strict mode intended, amongst its other goals, to allow browsers to introduce additional optimisations or other performance enhancements?</p>\n",
            "last_activity_date": 1306187547,
            "question_id": 3145966,
            "score": 41,
            "tags": [
                "javascript"
            ],
            "title": "Is strict mode more performant?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>As far as I'm aware, there is no JavaScript implementation of bcrypt. There are, however, a few JavaScript implementations of Blowfish:</p>\n\n<ul>\n<li><a href=\"http://www.poisedsolutions.com/spidercrypt/\">Spider Crypt</a> (not <a href=\"http://www.gnu.org/philosophy/free-sw.html\">free software</a>)</li>\n<li><a href=\"http://aam.ugpl.de/?q=node/1060\">aamcrypt</a> (licensed under <a href=\"http://aam.ugpl.de/?q=ugpl\">UGPL</a>)</li>\n<li><a href=\"http://github.com/drench/blowfish.js\">dren.ch blowfish</a> (based on aamcrypt)</li>\n<li><a href=\"http://theweekly.co.uk/blowfish_remix/\">Blowfish Remix</a> (based on dren.ch blowfish; compatible with Perl's Crypt::Blowfish)</li>\n</ul>\n\n<p>That should help get you started. If you're going to use one of the latter three, use the third. I mentioned the other two mainly for historical purposes.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p><a href=\"http://code.google.com/p/javascript-bcrypt/\">http://code.google.com/p/javascript-bcrypt/</a></p>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<p>I found this implementation for node.js</p>\n\n<p><a href=\"https://github.com/ncb000gt/node.bcrypt.js/\" rel=\"nofollow\">https://github.com/ncb000gt/node.bcrypt.js/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is also a native-js version of node.bcrypt.js which does not require compiling.\n<a href=\"https://github.com/shaneGirish/bcrypt-nodejs\" rel=\"nofollow\">https://github.com/shaneGirish/bcrypt-nodejs</a></p>\n\n<pre><code>npm install bcrypt-nodejs`\n</code></pre>\n\n<p>The api is very similar to the compiled version. The following is taken directly from the readme</p>\n\n<h2>Basic usage:</h2>\n\n<p>Synchronous</p>\n\n<pre><code>var hash = bcrypt.hashSync(\"bacon\");\n\nbcrypt.compareSync(\"bacon\", hash); // true\nbcrypt.compareSync(\"veggies\", hash); // false\n</code></pre>\n\n<p>Asynchronous</p>\n\n<pre><code>bcrypt.hash(\"bacon\", null, null, function(err, hash) {\n    // Store hash in your password DB.\n});\n\n// Load hash from your password DB.\nbcrypt.compare(\"bacon\", hash, function(err, res) {\n    // res == true\n});\nbcrypt.compare(\"veggies\", hash, function(err, res) {\n    // res = false\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I you want javascript + speed, maybe you could try <a href=\"https://github.com/fpirsch/twin-bcrypt\" rel=\"nofollow\">twin-bcrypt</a>, an asm.js implementation.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm wondering if anyone has written or come across any implementations of bcrypt in JavaScript. I'm not against writing the code myself but if someone with a stonger background in cryptography has already written one why reinvent the wheel? Especially considering I'd probably come up with a shoddy wheel.</p>\n\n<p>[edit]:</p>\n\n<p>Following the links provided I was able to hack up a version. Its much slower then I expected.</p>\n\n<p>I create a google code page for this and will try to increase the speed in the next few weeks.</p>\n\n<p><a href=\"http://code.google.com/p/javascript-bcrypt/\">http://code.google.com/p/javascript-bcrypt/</a></p>\n",
            "last_activity_date": 1406131166,
            "question_id": 2299434,
            "score": 41,
            "tags": [
                "javascript",
                "security",
                "encryption",
                "hash",
                "bcrypt"
            ],
            "title": "bCrypt implementation in Javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You aren't missing anything. <code>gulp.watch</code> does not work with new or deleted files.  It's a simple solution designed for simple projects.</p>\n\n<p>To get file watching that can look for new files, use <a href=\"https://npmjs.org/package/gulp-watch\">the <code>gulp-watch</code> plugin</a>, which is much more powerful.  Usage looks like this:</p>\n\n<pre><code>var watch = require('gulp-watch');\n\n// in a task\nwatch({glob: &lt;&lt;glob or array of globs&gt;&gt; })\n        .pipe( &lt;&lt; add per-file tasks here&gt;&gt; );\n\n// if you'd rather rerun the whole task, you can do this:\nwatch({glob: &lt;&lt;glob or array of globs&gt;&gt;}, function() {\n    gulp.start( &lt;&lt;task name&gt;&gt; );\n});\n</code></pre>\n\n<p>Personally, I recommend the first option.  This allows for much faster, per-file processes.  It works great during development with livereload as long as you aren't concatenating any files.</p>\n\n<p>You can wrap up your streams either using <a href=\"https://www.npmjs.org/package/lazypipe\">my <code>lazypipe</code> library</a>, or simply using a function and <a href=\"https://www.npmjs.org/package/stream-combiner\"><code>stream-combiner</code></a> like this:</p>\n\n<pre><code>var combine = require('stream-combiner');\n\nfunction scriptsPipeline() {\n    return combine(coffeeescript(), uglify(), gulp.dest('/path/to/dest'));\n}\n\nwatch({glob: 'src/scripts/**/*.js' })\n        .pipe(scriptsPipeline());\n</code></pre>\n\n<hr>\n\n<p><strong>UPDATE</strong> October 15, 2014</p>\n\n<p>As pointed out by @pkyeck below, apparently the 1.0 release of <code>gulp-watch</code> changed the format slightly, so the above examples should now be:</p>\n\n<pre><code>var watch = require('gulp-watch');\n\n// in a task\nwatch(&lt;&lt;glob or array of globs&gt;&gt;)\n        .pipe( &lt;&lt; add per-file tasks here&gt;&gt; );\n\n// if you'd rather rerun the whole task, you can do this:\nwatch(&lt;&lt;glob or array of globs&gt;&gt;, function() {\n    gulp.start( &lt;&lt;task name&gt;&gt; );\n});\n</code></pre>\n\n<p>and</p>\n\n<pre><code>var combine = require('stream-combiner');\n\nfunction scriptsPipeline() {\n    return combine(coffeeescript(), uglify(), gulp.dest('/path/to/dest'));\n}\n\nwatch('src/scripts/**/*.js')\n        .pipe(scriptsPipeline());\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>Both gulp.watch() and require('gulp-watch')() will trigger for new/deleted files however not if you use absolute directories. In my tests I did not use \"./\" for relative directories BTW.</p>\n\n<p>Both won't trigger if whole directories are deleted though.</p>\n\n<pre><code>   var watch = require('gulp-watch');\n   //Wont work for new files until gaze is fixed if using absolute dirs. It  won't trigger if whole directories are deleted though.\n   //gulp.watch(config.localDeploy.path + '/reports/**/*', function (event) {\n\n   //gulp.watch('src/app1/reports/**/*', function (event) {\n   // console.log('*************************** Event received in gulp.watch');\n   // console.log(event);\n   // gulp.start('localDeployApp');\n   });\n\n   //Won't work for new files until gaze is fixed if using absolute dirs. It  won't trigger if whole directories are deleted though. See https://github.com/floatdrop/gulp-watch/issues/104\n   //watch(config.localDeploy.path + '/reports/**/*', function() {\n\n   watch('src/krfs-app/reports/**/*', function(event) {\n      console.log(\"watch triggered\");\n      console.log(event);\n      gulp.start('localDeployApp');\n   //});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I know this is an older question, but I thought I'd throw the solution I came up with. None of the gulp plugins I found would notify me of new or renamed files. So I ended up wrapping monocle in a convenience function.</p>\n\n<p>Here's an example of how that function is used:   </p>\n\n<pre><code>watch({\n    root: config.src.root,\n    match: [{\n      when: 'js/**',\n      then: gulpStart('js')\n    }, {\n      when: '+(scss|css)/**',\n      then: gulpStart('css')\n    }, {\n      when: '+(fonts|img)/**',\n      then: gulpStart('assets')\n    }, {\n      when: '*.+(html|ejs)',\n      then: gulpStart('html')\n    }]\n  });\n</code></pre>\n\n<p>I should note that gulpStart is also a convenience function I made.</p>\n\n<p>And here is the actual watch module.</p>\n\n<pre><code>module.exports = function (options) {\n  var path = require('path'),\n      monocle = require('monocle'),\n      minimatch = require('minimatch');\n\n  var fullRoot = path.resolve(options.root);\n\n  function onFileChange (e) {\n    var relativePath = path.relative(fullRoot, e.fullPath);\n\n    options.match.some(function (match) {\n      var isMatch = minimatch(relativePath, match.when);\n      isMatch &amp;&amp; match.then();\n      return isMatch;\n    });\n  }\n\n  monocle().watchDirectory({\n    root: options.root,\n    listener: onFileChange\n  });\n};\n</code></pre>\n\n<p>Pretty simple, eh? The whole thing can be found over at my gulp starter kit: <a href=\"https://github.com/chrisdavies/gulp_starter_kit\" rel=\"nofollow\">https://github.com/chrisdavies/gulp_starter_kit</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The following Gulpjs task works fine when editing files in the glob match:</p>\n\n<pre><code>// watch task.\ngulp.task('watch', ['build'], function () {\n    gulp.watch(src + '/js/**/*.js', ['scripts']);\n    gulp.watch(src + '/img//**/*.{jpg,jpeg,png,gif}', ['copy:images']);\n    gulp.watch(src + '/less/*.less', ['styles']);\n    gulp.watch(src + '/templates/**/*.{swig,json}', ['html']);\n});\n\n// build task.\ngulp.task('build', ['clean'], function() {\n    return gulp.start('copy', 'scripts', 'less', 'htmlmin');\n});\n</code></pre>\n\n<p>However it doesn't work (it's not triggered) for new or deleted files. Is there something I'm missing?</p>\n\n<p><strong>EDIT</strong>: even using grunt-watch plugin it seems not working:</p>\n\n<pre><code>gulp.task('scripts', function() {\n    return streamqueue(\n        { objectMode: true },\n        gulp.src([\n            vendor + '/jquery/dist/jquery.min.js',\n            vendor + '/bootstrap/dist/js/bootstrap.min.js'\n        ]),\n        gulp.src([\n            src + '/js/**/*.js'\n        ]).pipe(plugins.uglify())\n    )\n    .pipe(plugins.concat(pkg.name + '.min.js'))\n    .pipe(gulp.dest(dest + '/js/'));\n});\n\ngulp.task('watch', ['build'], function () {\n    plugins.watch({glob: src + '/js/**/*.js'}, function () {\n        gulp.start('scripts');\n    });\n});\n</code></pre>\n\n<p><strong>EDIT</strong>: Solved, it was <a href=\"https://github.com/floatdrop/gulp-watch/issues/1\">this issue</a>. Globs starting with <code>./</code> (that was the value of <code>src</code>) seems not working ATM.</p>\n",
            "last_activity_date": 1420862048,
            "question_id": 22391527,
            "score": 34,
            "tags": [
                "javascript",
                "node.js",
                "gulp"
            ],
            "title": "Gulps gulp.watch not triggered for new or deleted files?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I'm not sure about firefox, but in v8/chrome you can use a method on the Error constructor called <code>captureStackTrace</code>. (<a href=\"http://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\">More info here</a>)</p>\n\n<p>So a hacky way to get it would be:</p>\n\n<pre><code>var getStackTrace = function() {\n  var obj = {};\n  Error.captureStackTrace(obj, getStackTrace);\n  return obj.stack;\n};\n\nconsole.log(getStackTrace());\n</code></pre>\n\n<p>Normally, <code>getStackTrace</code> would be on the stack when it's captured. The second argument there excludes <code>getStackTrace</code> from being included in the stack trace.</p>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<p>Error.stack is what you need. It works in Chrome and Firefox. For example</p>\n\n<pre><code>try { var a = {}; a.debug(); } catch(ex) {console.log(ex.stack)}\n</code></pre>\n\n<p>will give in Chrome:</p>\n\n<pre><code>TypeError: Object #&lt;Object&gt; has no method 'debug'\n    at eval at &lt;anonymous&gt; (unknown source)\n    at eval (native)\n    at Object._evaluateOn (unknown source)\n    at Object._evaluateAndWrap (unknown source)\n    at Object.evaluate (unknown source)\n</code></pre>\n\n<p>and in Firefox:</p>\n\n<pre><code>@http://www.google.com.ua/:87 _firebugInjectedEvaluate(\"with(_FirebugCommandLine){try { var a = {}; a.debug() } catch(ex) {console.log(ex.stack)}\\n};\")\n@http://www.google.com.ua/:87 _firebugEvalEvent([object Event])\n@http://www.google.com.ua/:67\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>There is a library called <a href=\"http://www.stacktracejs.com/\" rel=\"nofollow\">stacktrace.js</a> that gives you cross browser stack traces.  You can use it simply by including the script and calling at any point:</p>\n\n<pre><code>var trace = printStackTrace();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>This will give a stack trace (as array of strings) for modern Chrome, Firefox, Opera and IE10+</p>\n\n<pre><code>function getStackTrace () {\n\n  var stack;\n\n  try {\n    throw new Error('');\n  }\n  catch (error) {\n    stack = error.stack || '';\n  }\n\n  stack = stack.split('\\n').map(function (line) { return line.trim(); });\n  return stack.splice(stack[0] == 'Error' ? 2 : 1);\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>console.log(getStackTrace().join('\\n'));\n</code></pre>\n\n<p>It excludes from the stack its own call as well as title \"Error\" that is used by Chrome and Firefox (but not IE).</p>\n\n<p>It shouldn't crash on older browsers but just return empty array. If you need more universal solution look at <a href=\"http://www.stacktracejs.com/\" rel=\"nofollow\">stacktrace.js</a>. Its list of supported browsers is really impressive but to my mind it is very big for that small task it is intended for: 37Kb of minified text including all dependencies. </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><code>console.trace()</code> outputs its result on console.<br>\nI want to get the results as string and save them to a file.<br>\n<br>\nI don't define names for functions and I also can not get their names with <code>callee.caller.name</code>.<br></p>\n",
            "last_activity_date": 1422044730,
            "question_id": 6715571,
            "score": 34,
            "tags": [
                "javascript",
                "firefox",
                "google-chrome",
                "console",
                "stack-trace"
            ],
            "title": "How to get result of console.trace() as string in javascript with chrome or firefox?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I think you pick which you want based on clarity, as a habit I usually use it as an operator in the following way because it's pretty clear, at least IMO:</p>\n\n<pre><code>if(typeof thing === \"string\") { \n  alert(\"this is a string\");\n}\n\nif(typeof thing === \"function\") {\n  alert(\"this is a function\");\n}\n</code></pre>\n\n<p>This is opposed to this format:</p>\n\n<pre><code>if(typeof(thing) === \"string\") { \n  alert(\"this is a string\");\n}\n</code></pre>\n\n<p>Which to me, makes it slightly slower to read.  If you do <code>typeof(thing)</code> it's the same thing, so whatever floats your boat.  <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Operators/Special_Operators/typeof_Operator\">You can get a full read and what strings to expect from types here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><code>typeof</code> is an operator. You can easily check it using... <code>typeof</code> operator:</p>\n\n<pre><code>typeof typeof\n</code></pre>\n\n<p>Were <code>typeof</code> a function, this expression would return <code>'function'</code> string, but it results in syntax error:</p>\n\n<pre><code>js&gt; typeof typeof;\ntypein:8: SyntaxError: syntax error:\ntypein:8: typeof typeof;\ntypein:8: .............^\n</code></pre>\n\n<p>so, <code>typeof</code> cannot be a function. Probably parenthesis-notation <code>typeof(foo)</code> made you think <code>typeof</code> is a function, but syntactically, those parenthesis are not <em>function call</em> - they are those used for grouping, just like <code>(2 + 3) *2</code>. In fact, you can add any number of them you want:</p>\n\n<pre><code>typeof(((((foo))))); // is equal to typeof foo;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 86
                }
            ],
            "body": "<p>In JavaScript <code>typeof</code> is an operator and a function.  Is it better used as an operator or a function?  Why?</p>\n",
            "last_activity_date": 1411336791,
            "question_id": 2797517,
            "score": 30,
            "tags": [
                "javascript"
            ],
            "title": "typeof is an operator and a function"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Handle the <code>&lt;img&gt;</code> element's <code>onerror</code> event.</p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>This site details how to do it.</p>\n\n<p><a href=\"http://maisonbisson.com/blog/post/12150/detecting-broken-images-in-javascript/\" rel=\"nofollow\">Detecting Broken Images in JavaScript</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>From: <a href=\"http://web.archive.org/web/20120904060007/http://lucassmith.name/2008/11/is-my-image-loaded.html\" rel=\"nofollow\">http://lucassmith.name/2008/11/is-my-image-loaded.html</a></p>\n\n<pre><code>// First a couple helper functions\nfunction $(id) {\n    return !id || id.nodeType === 1 ? id : document.getElementById(id);\n}\nfunction isType(o,t) {    return (typeof o).indexOf(t.charAt(0).toLowerCase()) === 0;}\n\n// Here's the meat and potatoes\nfunction image(src,cfg) {    var img, prop, target;\n    cfg = cfg || (isType(src,'o') ? src : {});\n\n    img = $(src);\n    if (img) {\n        src = cfg.src || img.src;\n    } else {\n        img = document.createElement('img');\n        src = src || cfg.src;\n    }\n\n    if (!src) {\n        return null;\n    }\n\n    prop = isType(img.naturalWidth,'u') ? 'width' : 'naturalWidth';\n    img.alt = cfg.alt || img.alt;\n\n    // Add the image and insert if requested (must be on DOM to load or\n    // pull from cache)\n    img.src = src;\n\n    target = $(cfg.target);\n    if (target) {\n        target.insertBefore(img, $(cfg.insertBefore) || null);\n    }\n\n    // Loaded?\n    if (img.complete) {\n        if (img[prop]) {\n            if (isType(cfg.success,'f')) {\n                cfg.success.call(img);\n            }\n        } else {\n            if (isType(cfg.failure,'f')) {\n                cfg.failure.call(img);\n            }\n        }\n    } else {\n        if (isType(cfg.success,'f')) {\n            img.onload = cfg.success;\n        }\n        if (isType(cfg.failure,'f')) {\n            img.onerror = cfg.failure;\n        }\n    }\n\n    return img;\n}\n</code></pre>\n\n<p>And here how to use it:</p>\n\n<pre><code>image('imgId',{\n    success : function () { alert(this.width); },\n    failure : function () { alert('Damn your eyes!'); },\n});\n\nimage('http://somedomain.com/image/typooed_url.jpg', {\n    success : function () {...},\n    failure : function () {...},\n    target : 'myContainerId',\n    insertBefore : 'someChildOfmyContainerId'\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>This worked for me (mine is in coffeescript). You'll need to replace with a spinner instead, of course.</p>\n\n<pre><code>checkImages = -&gt;\n  $(\"img\").each -&gt;\n    $(this).error -&gt;\n      $(this).attr(\"src\", \"../default/image.jpg\")\n\n$(document).on('page:load', checkImages)\n</code></pre>\n\n<p>I'm guessing the javascript equivalent is something like</p>\n\n<pre><code>function checkImages() {\n  $(\"img\").each(function() {\n    $(this).error(function() {\n      $(this).attr(\"src\", \"../default/image.jpg\");\n    });\n  });\n};\n</code></pre>\n\n<p>$(document).on(\"page:load\", checkImages);</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>just bind the attr trigger on the error event.</p>\n\n<pre><code>$(myimgvar).bind('error',function(ev){\n    //error has been thrown\n    $(this).attr('src','/path/to/no-artwork-available.jpg');\n}).attr('src',urlvar);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>After a user uploads a file we have to do some additional processing with the images such as resizing and upload to S3. This can take up to 10 extra seconds. Obviously we do this in a background. However, we want to show the user the result page immediately and simply show spinners in place until the images arrive in their permanent home on s3.  </p>\n\n<p>I'm looking for a way to detect that a certain image failed to load correctly (404) in a cross browser way. If that happens, we want to use JS to show a spinner in it's place and reload the image every few seconds until it can be successfully loaded from s3. </p>\n",
            "last_activity_date": 1424640231,
            "question_id": 3019077,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events",
                "cross-browser"
            ],
            "title": "Detecting an image 404 in javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Using the <a href=\"https://developer.mozilla.org/En/DOM/Node.parentNode\"><code>parentNode</code></a> property should work. It's also pretty safe from a cross-browser standpoint. If the relationship is known to be one level deep, you could check it simply:</p>\n\n<pre><code>if (element2.parentNode == element1) { ... }\n</code></pre>\n\n<p>If the the child can be nested arbitrarily deep inside the parent, you could use a function similar to the following to test for the relationship:</p>\n\n<pre><code>function isDescendant(parent, child) {\n     var node = child.parentNode;\n     while (node != null) {\n         if (node == parent) {\n             return true;\n         }\n         node = node.parentNode;\n     }\n     return false;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>I came across a wonderful piece of code on internet to check whether an element is child of other element or not. I have to use this because IE doesn\u2019t support '.contains' of java-script.  hope this will help other guys too.</p>\n\n<p><strong>Below is the function:-</strong> </p>\n\n<pre><code>function isChildOf(ChildObject,ContainerObject) \n                { \n                        var retval=false; \n                        var curobj; \n                        if(typeof(ContainerObject)==\"string\")\n                        {\n                                ContainerObject=document.getElementById(ContainerObject);\n                        }\n                        if(typeof(ChildObject)==\"string\")\n                        {\n                                ChildObject=document.getElementById(ChildObject);\n                        }\n                        curobj=ChildObject.parentNode; \n                        while(curobj!=undefined) \n                        { \n                                if(curobj==document.body) \n                                {\n                                        break;\n                                } \n                                if(curobj.id==ContainerObject.id)\n                                {\n                                        retval =true;\n                                        break;\n                                }\n                                curobj=curobj.parentNode;//move up the hierarchy \n                        } \n                        return retval; \n                }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Take a look at <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node.compareDocumentPosition\">Node#compareDocumentPosition</a>.</p>\n\n<pre><code>function isDescendant(ancestor,descendant){\n    return ancestor.compareDocumentPosition(descendant) &amp; \n        Node.DOCUMENT_POSITION_CONTAINS;\n}\n\nfunction isAncestor(descendant,ancestor){\n    return descendant.compareDocumentPosition(ancestor) &amp; \n        Node.DOCUMENT_POSITION_CONTAINED_BY;\n}\n</code></pre>\n\n<p>Other relationships include <code>DOCUMENT_POSITION_DISCONNECTED</code>, <code>DOCUMENT_POSITION_PRECEDING</code>, and <code>DOCUMENT_POSITION_FOLLOWING</code>.</p>\n\n<p>Not supported in IE&lt;=8.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I just had to share 'mine'.</p>\n\n<p>Although conceptually the same as <a href=\"http://stackoverflow.com/a/2234986/588079\">Asaph's answer</a> (benefiting from the same cross-browser compatibility, even IE6), it is a <em>lot</em> smaller and comes in handy when size is at a premium and/or when it is not needed so often. </p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function childOf(/*child node*/c, /*parent node*/p){ //returns boolean\n  while((c=c.parentNode)&amp;&amp;c!==p); \n  return !!c; \n}\n</code></pre>\n\n<p>..or as one-liner (<em>just 64 chars</em>!):</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function childOf(c,p){while((c=c.parentNode)&amp;&amp;c!==p);return !!c}\n</code></pre>\n\n<p>and <a href=\"http://jsfiddle.net/C76xb/\">jsfiddle here</a>.</p>\n\n<hr>\n\n<p><em><strong>Usage:</em></strong><br>\n<code>childOf(child, parent)</code> returns boolean <code>true</code>|<code>false</code>.</p>\n\n<p><em><strong>Explanation:</em></strong><br>\n<code>while</code> evaluates as long as the while-condition evaluates to <code>true</code>.<br>\nThe <code>&amp;&amp;</code> (AND) operator returns this boolean true/false <em>after</em> evaluating the left-hand side and the right-hand side, but only <em>if</em> the left-hand side was true <em>(<code>left-hand &amp;&amp; right-hand</code>)</em>.         </p>\n\n<p>The left-hand side (of <code>&amp;&amp;</code>) is: <code>(c=c.parentNode)</code>.<br>\nThis will first assign the <code>parentNode</code> of <code>c</code> to <code>c</code> and then the AND operator will evaluate the resulting <code>c</code> as a boolean.<br>\nSince <code>parentNode</code> returns <code>null</code> if there is no parent left and <code>null</code> is converted to <code>false</code>, the while-loop will correctly stop when there are no more parents.</p>\n\n<p>The right-hand side (of <code>&amp;&amp;</code>) is: <code>c!==p</code>.<br>\nThe <code>!==</code> comparison operator is '<em>not</em> exactly equal to'. So if the child's parent isn't the parent (you specified) it evaluates to <code>true</code>, but if the child's parent <em>is</em> the parent then it evaluates to <code>false</code>.<br>\nSo <em>if</em> <code>c!==p</code> evaluates to false, then the <code>&amp;&amp;</code> operator returns <code>false</code> as the while-condition and the while-loop stops. (Note there is no need for a while-body and the closing <code>;</code> semicolon is required.)</p>\n\n<p>So when the while-loop ends, <code>c</code> is either a node (not <code>null</code>) when it found a parent OR it is <code>null</code> (when the loop ran through to the end without finding a match).</p>\n\n<p>Thus we simply <code>return</code> that fact (converted as boolean value, instead of the node) with: <code>return !!c;</code>: the <code>!</code> (<code>NOT</code> operator) inverts a boolean value (<code>true</code> becomes <code>false</code> and vice-versa).<br>\n<code>!c</code> converts <code>c</code> (node or null) to a boolean before it can invert that value. So adding a second <code>!</code> (<code>!!c</code>) converts this false <em>back</em> to true (which is why a double <code>!!</code> is often used to 'convert anything to boolean').</p>\n\n<hr>\n\n<p><strong>Extra:</strong><br>\nThe function's body/payload is so small that, depending on case (like when it is not used often and appears just once in the code), one <em>could</em> even omit the function (wrapping) and just use the while-loop:\n</p>\n\n<pre><code>var a=document.getElementById('child'),\n    b=document.getElementById('parent'),\n    c;\n\nc=a; while((c=c.parentNode)&amp;&amp;c!==b); //c=!!c;\n\nif(!!c){ //`if(c)` if `c=!!c;` was used after while-loop above\n    //do stuff\n}\n</code></pre>\n\n<p>instead of:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var a=document.getElementById('child'),\n    b=document.getElementById('parent'),\n    c;\n\nfunction childOf(c,p){while((c=c.parentNode)&amp;&amp;c!==p);return !!c}\n\nc=childOf(a, b);    \n\nif(c){ \n    //do stuff\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Use Node.contains, it's now standard and available in all browsers. <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\">https://developer.mozilla.org/en-US/docs/Web/API/Node.contains</a></p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Another solution that wasn't mentioned:</p>\n\n<p><a href=\"http://jsfiddle.net/xa397p29/\" rel=\"nofollow\"><strong>Example Here</strong></a></p>\n\n<pre><code>var parent = document.querySelector('.parent');\n\nif (parent.querySelector('.child') !== null) {\n    // .. it's a child\n}\n</code></pre>\n\n<p>It doesn't matter whether the element is a direct child, it will work at any depth.</p>\n\n<hr>\n\n<p>Alternatively, using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\" rel=\"nofollow\"><code>.contains()</code> method</a>:</p>\n\n<p><a href=\"http://jsfiddle.net/ugftmfLp/\" rel=\"nofollow\"><strong>Example Here</strong></a></p>\n\n<pre><code>var parent = document.querySelector('.parent'),\n    child = document.querySelector('.child');\n\nif (parent.contains(child)) {\n    // .. it's a child\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I check if one DOM element is a child of another DOM element? Are there any built in methods for this? For example, something like:</p>\n\n<pre><code>if (element1.hasDescendant(element2)) \n</code></pre>\n\n<p>or</p>\n\n<pre><code>if (element2.hasParent(element1)) \n</code></pre>\n\n<p>If not then any ideas how to do this? It also needs to be cross browser. I should also mention that the child could be nested many levels below the parent.</p>\n",
            "last_activity_date": 1424471567,
            "question_id": 2234979,
            "score": 28,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "How to check in Javascript if one element is contained within another"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>Loop through all the input elements, and put an <code>onchange</code> handler on each. When that fires, set a flag which lets you know the form has changed. A basic version of that would be very easy to set up, but wouldn't be smart enough to recognize if someone changed an input from \"a\" to \"b\" and then back to \"a\". If it were important to catch that case, then it'd still be possible, but would take a bit more work.</p>\n\n<p>Here's a basic example in jQuery:</p>\n\n<pre><code>$(\"#myForm\")\n    .one(\"change\", \":input\", function() {\n        // do whatever you need to do when something's changed.\n        // perhaps set up an onExit function on the window\n        $('#saveButton').show();\n    })\n;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Text form elements in JS expose a <code>.value</code> property and a <code>.defaultValue</code> property, so you can easily implement something like:</p>\n\n<pre><code>function formChanged(form) {\n  for (var i = 0; i &lt; form.elements.length; i++) {\n      if(form.elements[i].value != form.elements[i].defaultValue) return(true);\n  }\n  return(false);\n}\n</code></pre>\n\n<p>For checkboxes and radio buttons see whether <code>element.checked != element.defaultChecked</code>, and for HTML <code>&lt;select /&gt;</code> elements you'll need to loop over the <code>select.options</code> array and check for each option whether <code>selected == defaultSelected</code>.</p>\n\n<p>You might want to look at using a framework like <a href=\"http://jquery.com/\">jQuery</a> to attach handlers to the <code>onchange</code> event of each individual form element. These handlers can call your <code>formChanged()</code> code and modify the <code>enabled</code> property of your \"save\" button,  and/or attach/detach an event handler for the document body's <code>beforeunload</code> event.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>If your using a web app framework (rails, ASP.NET, Cake, symfony), there should be packages for ajax validation, </p>\n\n<p><a href=\"http://webtecker.com/2008/03/17/list-of-ajax-form-validators/\" rel=\"nofollow\">http://webtecker.com/2008/03/17/list-of-ajax-form-validators/</a></p>\n\n<p>and some wrapper on onbeforeunload() to warn users taht are about to close the form:</p>\n\n<p><a href=\"http://pragmatig.wordpress.com/2008/03/03/protecting-userdata-from-beeing-lost-with-jquery/\" rel=\"nofollow\">http://pragmatig.wordpress.com/2008/03/03/protecting-userdata-from-beeing-lost-with-jquery/</a>\n<a href=\"http://stackoverflow.com/questions/155739/detecting-unsaved-changes-using-javascript\">http://stackoverflow.com/questions/155739/detecting-unsaved-changes-using-javascript</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Attach an event handler to each form input/select/textarea's onchange event. Setting a variable to tell you if you should enable the \"save\" button. Create an onunload hander that checks for a dirty form too, and when the form is submitted reset the variable:</p>\n\n<pre>\nwindow.onunload = checkUnsavedPage;\nvar isDirty = false;\nvar formElements = //Get a reference to all form elements\nfor(var i = 0; len = formElements.length; i++) {\n    //Add onchange event to each element to call formChanged()\n}\n\nfunction formChanged(event) {\n    isDirty = false;\n    document.getElementById(\"savebtn\").disabled = \"\";\n}\n\nfunction checkUnsavedPage() {\n    if (isDirty) {\n        var isSure = confirm(\"you sure?\");  \n        if (!isSure) {\n            event.preventDefault();\n        }\n    }\n}\n</pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To alert the user before closing, use unbeforeunload:</p>\n\n<pre><code>window.onbeforeunload = function() {\n   return \"You are about to lose your form data.\";\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I answered a question like this on Ars Technica, but the question was framed such that the changes needed to be detected even if the user does not blur a text field (in which case the change event never fires). I came up with a comprehensive script which:</p>\n\n<ol>\n<li>enables submit and reset buttons if field values change</li>\n<li>disables submit and reset buttons if the form is reset</li>\n<li>interrupts leaving the page if form data has changed and not been submitted</li>\n<li>supports IE 6+, Firefox 2+, Safari 3+ (and presumably Opera but I did not test)</li>\n</ol>\n\n<p>This script depends on Prototype but could be easily adapted to another library or to stand alone.</p>\n\n<pre><code>$(document).observe('dom:loaded', function(e) {\n    var browser = {\n        trident: !!document.all &amp;&amp; !window.opera,\n        webkit: (!(!!document.all &amp;&amp; !window.opera) &amp;&amp; !document.doctype) ||\n            (!!window.devicePixelRatio &amp;&amp; !!window.getMatchedCSSRules)\n    };\n\n    // Select form elements that won't bubble up delegated events (eg. onchange)\n    var inputs = $('form_id').select('select, input[type=\"radio\"], input[type=\"checkbox\"]');\n\n    $('form_id').observe('submit', function(e) {\n        // Don't bother submitting if form not modified\n        if(!$('form_id').hasClassName('modified')) {\n            e.stop();\n            return false;\n        }\n        $('form_id').addClassName('saving');\n    });\n\n    var change = function(e) {\n        // Paste event fires before content has been pasted\n        if(e &amp;&amp; e.type &amp;&amp; e.type == 'paste') {\n            arguments.callee.defer();\n            return false;\n        }\n\n        // Check if event actually results in changed data\n        if(!e || e.type != 'change') {\n            var modified = false;\n            $('form_id').getElements().each(function(element) {\n                if(element.tagName.match(/^textarea$/i)) {\n                    if($F(element) != element.defaultValue) {\n                        modified = true;\n                    }\n                    return;\n                } else if(element.tagName.match(/^input$/i)) {\n                    if(element.type.match(/^(text|hidden)$/i) &amp;&amp; $F(element) != element.defaultValue) {\n                        modified = true;\n                    } else if(element.type.match(/^(checkbox|radio)$/i) &amp;&amp; element.checked != element.defaultChecked) {\n                        modified = true;\n                    }\n                }\n            });\n            if(!modified) {\n                return false;\n            }\n        }\n\n        // Mark form as modified\n        $('form_id').addClassName('modified');\n\n        // Enable submit/reset buttons\n        $('reset_button_id').removeAttribute('disabled');\n        $('submit_button_id').removeAttribute('disabled');\n\n        // Remove event handlers as they're no longer needed\n        if(browser.trident) {\n            $('form_id').stopObserving('keyup', change);\n            $('form_id').stopObserving('paste', change);\n        } else {\n            $('form_id').stopObserving('input', change);\n        }\n        if(browser.webkit) {\n            $$('#form_id textarea').invoke('stopObserving', 'keyup', change);\n            $$('#form_id textarea').invoke('stopObserving', 'paste', change);\n        }\n        inputs.invoke('stopObserving', 'change', arguments.callee);\n    };\n\n    $('form_id').observe('reset', function(e) {\n        // Unset form modified, restart modified check...\n        $('reset_button_id').writeAttribute('disabled', true);\n        $('submit_button_id').writeAttribute('disabled', true);\n        $('form_id').removeClassName('modified');\n        startObservers();\n    });\n\n    var startObservers = (function(e) {\n        if(browser.trident) {\n            $('form_id').observe('keyup', change);\n            $('form_id').observe('paste', change);\n        } else {\n            $('form_id').observe('input', change);\n        }\n        // Webkit apparently doesn't fire oninput in textareas\n        if(browser.webkit) {\n            $$('#form_id textarea').invoke('observe', 'keyup', change);\n            $$('#form_id textarea').invoke('observe', 'paste', change);\n        }\n        inputs.invoke('observe', 'change', change);\n        return arguments.callee;\n    })();\n\n    window.onbeforeunload = function(e) {\n        if($('form_id').hasClassName('modified') &amp;&amp; !$('form_id').hasClassName('saving')) {\n            return 'You have unsaved content, would you really like to leave the page? All your changes will be lost.';\n        }\n    };\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would store each fields value in a variable when the page loads, then compare those values when the user unloads the page. If any differences are detected you will know what to save and better yet, be able to specifically tell the user what data will not be saved if they exit.</p>\n\n<pre><code>// this example uses the prototype library\n// also, it's not very efficient, I just threw it together\nvar valuesAtLoad = [];\nvar valuesOnCheck = [];\nvar isDirty = false;\nvar names = [];\nEvent.observe(window, 'load', function() {\n    $$('.field').each(function(i) {\n        valuesAtLoad.push($F(i));\n    });\n});\n\nvar checkValues = function() {\n    var changes = [];\n    valuesOnCheck = [];\n    $$('.field').each(function(i) {\n        valuesOnCheck.push($F(i));\n    });\n\n    for(var i = 0; i &lt;= valuesOnCheck.length - 1; i++ ) {\n        var source = valuesOnCheck[i];\n        var compare = valuesAtLoad[i];\n        if( source !== compare ) {\n            changes.push($$('.field')[i]);\n        }\n    }\n\n    return changes.length &gt; 0 ? changes : [];\n};\n\nsetInterval(function() { names = checkValues().pluck('id'); isDirty = names.length &gt; 0; }, 100);\n\n// notify the user when they exit\nEvent.observe(window, 'beforeunload', function(e) {\n\t e.returnValue = isDirty ? \"you have changed the following fields: \\r\\n\" + names + \"\\r\\n these changes will be lost if you exit. Are you sure you want to continue?\" : true;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a full implementation of <a href=\"http://stackoverflow.com/questions/194101/what-is-the-best-way-to-track-changes-in-a-form-via-javascript#194112\">Dylan Beattie's suggestion</a>:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/140460/clientjs-framework-for-unsaved-data-protection#140508\">http://stackoverflow.com/questions/140460/clientjs-framework-for-unsaved-data-protection#140508</a></p>\n\n<p>You shouldn't need to store initial values to determine if the form has changed, unless you're populating it dynamically on the client side (although, even then, you could still set up the <code>default</code> properties on the form elements).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can also check out this jQuery plugin I built at <a href=\"http://code.zhandwa.com/jquery/\" rel=\"nofollow\">jQuery track changes in forms plugin</a></p>\n\n<p>See the demo <a href=\"http://downloads.zhandwa.com/trackchanges/demo/\" rel=\"nofollow\">here</a> and download the JS <a href=\"http://downloads.zhandwa.com/trackchanges/demo/js/jquery.form.track.changes.js\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've used dirtyforms.js.  Works well for me.</p>\n\n<p><a href=\"http://mal.co.nz/code/jquery-dirty-forms/\" rel=\"nofollow\">http://mal.co.nz/code/jquery-dirty-forms/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are open to using jQuery, see my answer a similar question: \n<a href=\"http://stackoverflow.com/questions/16593222/disable-submit-button-unless-original-form-data-has-changed/16594431#16594431\">Disable submit button unless original form data has changed</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try</p>\n\n<pre><code>function isModifiedForm(form){\n  var __clone = $(form).clone();\n  __clone[0].reset();\n  return $(form).serialize() == $(__clone).serialize();\n}\n</code></pre>\n\n<p>Hope its helps ))</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here's a javascript &amp; jquery method for detecting form changes that is simple. It disables the submit button until changes are made. It detects attempts to leave the page by means other than submitting the form. It accounts for \"undos\" by the user, it is encapsulated within a function for ease of application, and it doesn't misfire on submit. Just call the function and pass the ID of your form.</p>\n\n<p>This function serializes the form once when the page is loaded, and again before the user leaves the page. If the two form states are different, the prompt is shown.</p>\n\n<p>Try it out: <a href=\"http://jsfiddle.net/skibulk/ev5rE/\" rel=\"nofollow\">http://jsfiddle.net/skibulk/ev5rE/</a></p>\n\n<pre><code>function formUnloadPrompt(formSelector) {\n    var formA = $(formSelector).serialize(), formB, formSubmit = false;\n\n    // Detect Form Submit\n    $(formSelector).submit( function(){\n        formSubmit = true;\n    });\n\n    // Handle Form Unload    \n    window.onbeforeunload = function(){\n        if (formSubmit) return;\n        formB = $(formSelector).serialize();\n        if (formA != formB) return \"Your changes have not been saved.\";\n    };\n\n    // Enable &amp; Disable Submit Button\n    var formToggleSubmit = function(){\n        formB = $(formSelector).serialize();\n        $(formSelector+' [type=\"submit\"]').attr( \"disabled\", formA == formB);\n    };\n\n    formToggleSubmit();\n    $(formSelector).change(formToggleSubmit);\n    $(formSelector).keyup(formToggleSubmit);\n}\n\n\n\n// Call function on DOM Ready:\n\n$(function(){\n    formUnloadPrompt('form');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I had the same challenge and i was thinking of a common solution. The code below is not perfect, its from initial r&amp;d. Following are the steps I used:</p>\n\n<p>1) Move the following JS to a another file (say changeFramework.js)</p>\n\n<p>2) Include it in your project by importing it</p>\n\n<p>3) In your html page, whichever control needs monitoring, add the class \"monitorChange\"</p>\n\n<p>4) The global variable 'hasChanged' will tell, if there is any change in the page you working on.</p>\n\n<pre><code>&lt;script type=\"text/javascript\" id=\"MonitorChangeFramework\"&gt;\n// MONITOR CHANGE FRAMEWORK\n// ALL ELEMENTS WITH CLASS \".monitorChange\" WILL BE REGISTERED FOR CHANGE\n// ON CHANGE IT WILL RAISE A FLAG\nvar hasChanged;\n\nfunction MonitorChange() {\n    hasChanged = false;\n    $(\".monitorChange\").change(function () {\n        hasChanged = true;\n    });\n}\n</code></pre>\n\n<p></p>\n\n<p>Following are the controls where I used this framework:</p>\n\n<pre><code>&lt;textarea class=\"monitorChange\" rows=\"5\" cols=\"10\" id=\"testArea\"&gt;&lt;/textarea&gt;&lt;/br&gt;\n        &lt;div id=\"divDrinks\"&gt;\n            &lt;input type=\"checkbox\" class=\"chb monitorChange\" value=\"Tea\" /&gt;Tea &lt;/br&gt;\n            &lt;input type=\"checkbox\" class=\"chb monitorChange\" value=\"Milk\" checked='checked' /&gt;Milk&lt;/br&gt;\n            &lt;input type=\"checkbox\" class=\"chb monitorChange\" value=\"Coffee\" /&gt;Coffee &lt;/br&gt;\n        &lt;/div&gt;\n        &lt;select id=\"comboCar\" class=\"monitorChange\"&gt;\n            &lt;option value=\"volvo\"&gt;Volvo&lt;/option&gt;\n            &lt;option value=\"saab\"&gt;Saab&lt;/option&gt;\n            &lt;option value=\"mercedes\"&gt;Mercedes&lt;/option&gt;\n            &lt;option value=\"audi\"&gt;Audi&lt;/option&gt;\n        &lt;/select&gt;\n        &lt;button id=\"testButton\"&gt;\n            test&lt;/button&gt;&lt;a onclick=\"NavigateTo()\"&gt;next &gt;&gt;&gt; &lt;/a&gt;\n</code></pre>\n\n<p>I believe there can be huge improvement in this framework. Comment/Changes/feedbacks are welcome. :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'd like to track changes in inputs in a form via javascript. My intent is (but not limited) to</p>\n\n<ul>\n<li>enable \"save\" button only when something has changed</li>\n<li>alert if the user wants to close the page and something is not saved</li>\n</ul>\n\n<p>Ideas?</p>\n",
            "last_activity_date": 1392895364,
            "question_id": 194101,
            "score": 27,
            "tags": [
                "javascript",
                "forms"
            ],
            "title": "What is the best way to track changes in a form via javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>What you are doing is to look for (0) or (1) results.</p>\n\n<p>(cnt >= 10 &amp;&amp; cnt &lt;= 20) returns either true or false.</p>\n\n<p>--edit--\n<strong>you can't use case with boolean (logic) experessions. The statement cnt >= 10 returns zero for false or one for true. Hence, it will we case(1) or case(0) which will never match to the length.</strong>\n--edit--</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This should work with this :</p>\n\n<pre><code>var cnt = $(\"#div1 p\").length;\n\n            switch (true) {\n                case (cnt &gt;= 10 &amp;&amp; cnt &lt;= 20):\n                    alert('10');\n                    break;\n                case (cnt &gt;= 21 &amp;&amp; cnt &lt;= 30):\n                   alert('21');\n                    break;\n                case (cnt &gt;= 31 &amp;&amp; cnt &lt;= 40):\n                    break;\n                default:\n                    alert('&gt;41');\n            }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>A switch works by comparing what is in <code>switch()</code> to every <code>case</code>.</p>\n\n<pre><code>switch (cnt) {\n    case 1: ....\n    case 2: ....\n    case 3: ....\n}\n</code></pre>\n\n<p>works like:</p>\n\n<pre><code>if (cnt == 1) ...\nif (cnt == 2) ...\nif (cnt == 3) ...\n</code></pre>\n\n<p>Therefore, you can't have any logic in the case statements.</p>\n\n<pre><code>switch (cnt) {\n    case (cnt &gt;= 10 &amp;&amp; cnt &lt;= 20): ...\n}\n</code></pre>\n\n<p>works like</p>\n\n<pre><code>if (cnt == (cnt &gt;= 10 &amp;&amp; cnt &lt;= 20)) ...\n</code></pre>\n\n<p>and that's just nonsense. :)</p>\n\n<p>Use <code>if () { } else if () { } else { }</code> instead.</p>\n",
                    "is_accepted": false,
                    "score": 64
                },
                {
                    "body": "<p>You should not use <code>switch</code> for this scenario.  This is the proper approach:</p>\n\n<pre><code>var cnt = $(\"#div1 p\").length;\n\nalert(cnt);\n\nif (cnt &gt;= 10 &amp;&amp; cnt &lt;= 20)\n{\n   alert('10');\n}\nelse if (cnt &gt;= 21 &amp;&amp; cnt &lt;= 30)\n{\n   alert('21');\n}\nelse if (cnt &gt;= 31 &amp;&amp; cnt &lt;= 40)\n{\n   alert('31');\n}\nelse \n{\n   alert('&gt;41');\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Something I came upon while trying to work a spinner was to allow for flexibility within the script without the use of a ton of <strong>if</strong> statements. </p>\n\n<p>Since this is a simpler solution than iterating through an array to check for a single instance of a class present it keeps the script cleaner. Any suggestions for cleaning the code further are welcome.</p>\n\n<pre><code>$('.next').click(function(){\n        var imageToSlide = $('#imageSprite'); // Get id of image\n\n        switch(true) {\n            case (imageToSlide.hasClass('pos1')):\n                imageToSlide.removeClass('pos1').addClass('pos2');\n                break;\n            case (imageToSlide.hasClass('pos2')):\n                imageToSlide.removeClass('pos2').addClass('pos3');\n                break;\n            case (imageToSlide.hasClass('pos3')):\n                imageToSlide.removeClass('pos3').addClass('pos4');\n                break;\n            case (imageToSlide.hasClass('pos4')):\n                imageToSlide.removeClass('pos4').addClass('pos1');\n        }\n    }); ` \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>Am I writing the correct switch case?</p>\n\n<pre><code>var cnt = $(\"#div1 p\").length;\n                alert(cnt);\n                switch (cnt) {\n                    case (cnt &gt;= 10 &amp;&amp; cnt &lt;= 20):\n                        alert('10');\n                        break;\n                    case (cnt &gt;= 21 &amp;&amp; cnt &lt;= 30):\n                       alert('21');\n                        break;\n                    case (cnt &gt;= 31 &amp;&amp; cnt &lt;= 40):\n               alert('31');\n                        break;\n                    default:\n                        alert('&gt;41');\n                }\n</code></pre>\n\n<p>For some reason, the alert does not occur when the conditions are matched!</p>\n",
            "last_activity_date": 1375363435,
            "question_id": 2696436,
            "score": 26,
            "tags": [
                "javascript",
                "jquery",
                "switch-statement"
            ],
            "title": "Switch case in jquery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>in your selector, you should also specify that you want the checked radiobutton:</p>\n\n<pre><code>$(function(){\n    $(\"#submit\").click(function(){      \n        alert($('input[name=q12_3]:checked').val());\n    });\n });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You might want to change selector:</p>\n\n<p><code>\n$('input[name=q12_3]:checked').val()\n</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>$(function(){\n    $(\"#submit\").click(function(){      \n        alert($(\"input[name=q12_3]:checked\").val());\n    });\n});\n</code></pre>\n\n<p>Because you want the value of the checked radio button. In your code, it just looks for the first instance of <code>q12_3</code>, which in this case has a value of <code>1</code>.</p>\n\n<p><a href=\"http://jsfiddle.net/ZkH8n/2\">Fiddle</a>.</p>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>use this script</p>\n\n<pre><code>$('input[name=q12_3]').is(\":checked\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>$</code>('input:radio[name=q12_3]:checked').val();</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Here is my code:</p>\n\n<pre><code>&lt;table&gt;\n   &lt;tr&gt;\n      &lt;td&gt;Sales Promotion&lt;/td&gt;\n      &lt;td&gt;&lt;input type=\"radio\" name=\"q12_3\" value=\"1\"&gt;1&lt;/td&gt;\n      &lt;td&gt;&lt;input type=\"radio\" name=\"q12_3\" value=\"2\"&gt;2&lt;/td&gt;\n      &lt;td&gt;&lt;input type=\"radio\" name=\"q12_3\" value=\"3\"&gt;3&lt;/td&gt;\n      &lt;td&gt;&lt;input type=\"radio\" name=\"q12_3\" value=\"4\"&gt;4&lt;/td&gt;\n      &lt;td&gt;&lt;input type=\"radio\" name=\"q12_3\" value=\"5\"&gt;5&lt;/td&gt;\n   &lt;/tr&gt;\n&lt;/table&gt;\n&lt;button id=\"submit\"&gt;submit&lt;/button&gt;\n</code></pre>\n\n<p>Here is JS:</p>\n\n<pre><code>$(function(){\n    $(\"#submit\").click(function(){      \n        alert($('input[name=q12_3]').val());\n    });\n });\n</code></pre>\n\n<p>Here is <a href=\"http://jsfiddle.net/ZkH8n/\" rel=\"nofollow\">JSFIDDLE</a>! Every time I click button it returns 1. Why? Can anyone help me?</p>\n",
            "last_activity_date": 1425385935,
            "question_id": 18043452,
            "score": 25,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "how to use jquery to get radio button value?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Did you try to override the requirejs.onError like shown <a href=\"http://requirejs.org/docs/api.html#errors\">here</a>?</p>\n\n<p>It worked for me after setting catchError as true like this:</p>\n\n<pre><code>require.config({catchError:true});\n</code></pre>\n\n<p>before calling any <em>define()</em> o <em>require()</em> functions.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>set the requirejs onError function:</p>\n\n<pre><code>requirejs.onError = function (err) {\n    if (err.requireType === 'timeout') {\n        // tell user\n        alert(\"error: \"+err);\n    } else {\n        throw err;\n    }\n};\n</code></pre>\n\n<p>If you want to setup an event you could bind to and trigger a global object. Such as:</p>\n\n<pre><code>$(\"body\").bind(\"moduleFail\",function(){\n    alert(\"Handling Event\")\n});\nrequirejs.onError = function (err) {\n    if (err.requireType === 'timeout') {\n        $(\"body\").trigger({type:\"moduleFail\",err:err})\n    } else {\n        throw err;\n    }\n};\nrequire([\"foo\"],function(foo){\n    alert(\"loaded foo\" + foo)\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>It is also possible to use errbacks to have customized error handling appropriate to the specific use of <code>require</code>. Errbacks are documented here <a href=\"http://requirejs.org/docs/api.html#errbacks\">http://requirejs.org/docs/api.html#errbacks</a>. Basically, you can add to <code>require</code> a function to be called if the load fails. It comes right after the function to be called if the load is successful.</p>\n\n<p>Chin's case could be handled as:</p>\n\n<pre><code>require([path], function(content){\n  //need to catch errors as this will not be called;\n}, function (err) {\n  //display error to user\n});\n</code></pre>\n\n<p>Here's an example that tries loading from multiple places:</p>\n\n<pre><code>require([mode_path], onload, function (err) {\n\n    if (mode_path.indexOf(\"/\") !== -1)\n        // It is an actual path so don't try any further loading\n        throw new Error(\"can't load mode \" + mode_path);\n\n    var path = \"./modes/\" + mode_path + \"/\" + mode_path;\n    require([path], onload,\n            function (err) {\n        require([path + \"_mode\"], onload);\n    });\n});\n</code></pre>\n\n<p>In this example <code>onload</code> would be the function called once the required code loads, and <code>mode_path</code> is a string identifying the mode. What you see there is code attempting to load a mode module for an editor from 3 different locations. If <code>mode_path</code> is <code>foo</code>, it will try to load <code>foo</code>, then <code>./modes/foo/foo</code> and then <code>./modes/foo/foo_mode</code>.</p>\n\n<p>The example at requirejs.org shows how one might handle a case where they want to try multiple locations for a resource they want to make available with a well-known identifier. Presumably the entire code-base in that example requires jQuery by requiring \"jquery\". Whatever location jQuery happens to be located at, it becomes available to the whole code-base as \"jquery\".</p>\n\n<p>My example does not care about making the mode known to the entire code-base through a well-known identifier because in this specific case there's no good reason to do so. The <code>onload</code> function stores the module it gets into a variable and the rest of the code base gets it by calling a <code>getMode()</code> method.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>You can use the requirejs.onError function as :</p>\n\n<pre><code>requirejs.onError = function (err) {\n    if (err) {\n        //Reload\n    } \n    else {\n        throw err;\n    }   \n};\n</code></pre>\n\n<p>You can also use <code>err.requireType</code> to catch specific errors like timeouts</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am trying to load some content using require.js. If the content doesn't exist I'd like to catch the error and notify the user.</p>\n\n<p>In firebug I can see two errors:</p>\n\n<blockquote>\n  <p>\"NetworkError: 404 Not Found </p>\n</blockquote>\n\n<p>...and then a few seconds later:</p>\n\n<pre><code>var e = new Error(msg + '\\nhttp://requirejs.org/docs/errors.html#\nLoad timeout for modules: modules/messages/messages \nhttp://requirejs.org/docs/errors.html#timeout\n</code></pre>\n\n<p>My code resembles:</p>\n\n<pre><code>require([path], function(content){\n  //need to catch errors as this will not be called;\n});\n</code></pre>\n\n<p>How would one bind to requirejs events? Any idea?</p>\n",
            "last_activity_date": 1396441103,
            "question_id": 9032517,
            "score": 24,
            "tags": [
                "javascript",
                "requirejs"
            ],
            "title": "Catching module loading errors and processing them"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>If you press F12 and switch to IE9 manually, it works like a charm. So our apporach was to use content=\"IE=9\" but this only switches the document mode in IE10 not the browser mode and that seems to be not enough.</p>\n\n<p>Maybe someone has an idea on how to switch the document mode too?</p>\n\n<p>Another workaround that gets more and more popular is to overwrite LoadPostData, see</p>\n\n<p><a href=\"http://www.codeproject.com/Tips/496162/IE10-and-ImageButtons?display=Mobile\" rel=\"nofollow\">http://www.codeproject.com/Tips/496162/IE10-and-ImageButtons?display=Mobile</a>\n<a href=\"http://forums.asp.net/t/1823287.aspx/2/10\" rel=\"nofollow\">http://forums.asp.net/t/1823287.aspx/2/10</a></p>\n\n<p>Personally I woulve have found the content=\"IE=9\" the best solution because of the little additional work and impact.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Actually is a different issue than the ones listed by tkrause.  There is a hotfix available, although I can't figure out how to apply it.  Here is info for those that do know how to apply these:</p>\n\n<p><a href=\"http://support.microsoft.com/kb/2784147\" rel=\"nofollow\">http://support.microsoft.com/kb/2784147</a></p>\n\n<p>If you check the ASP.NET section is has the exact error stated in this question.  This is the exact error and issue I am having also.</p>\n\n<p>I think I cannot get the update because I'm using Server 2003.  I'm using ASP.NET 3.5 and VS 2008, so upgrading to 4.x isn't an easy option for me.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are hotfixes for .NET CLR 2.0 and 4.0, as described in <a href=\"http://www.hanselman.com/blog/BugAndFixASPNETFailsToDetectIE10CausingDoPostBackIsUndefinedJavaScriptErrorOrMaintainFF5ScrollbarPosition.aspx\" rel=\"nofollow\">this blog entry by Scott Hanselmann</a>:</p>\n\n<blockquote>\n  <p>What the fixes do is update the ie.browser and firefox.browser files\n  in \\Windows\\Microsoft.NET\\Framework\\\\Config\\Browsers with new\n  and future-proofed versions of these browser definitions. Nothing else\n  is affected.</p>\n</blockquote>\n\n<p>.NET 4</p>\n\n<ul>\n<li><a href=\"http://support.microsoft.com/kb/2600088\" rel=\"nofollow\">http://support.microsoft.com/kb/2600088</a></li>\n</ul>\n\n<p>.NET 2.0</p>\n\n<ul>\n<li><p><a href=\"http://support.microsoft.com/kb/2600100\" rel=\"nofollow\">http://support.microsoft.com/kb/2600100</a> for Win7 SP1/Windows\nServer 2008 R2 SP1, Windows Vista/Server 2008, Windows XP/Server 2003</p></li>\n<li><p><a href=\"http://support.microsoft.com/kb/2608565\" rel=\"nofollow\">http://support.microsoft.com/kb/2608565</a> for Win7/Windows Server\n2008 R2 RTM</p></li>\n</ul>\n\n<p>Alternatively, there's a client-based javascript patch (originally posted as workaround on the <a href=\"https://connect.microsoft.com/VisualStudio/feedback/details/755419/asp-net-4-0-and-ie10-click-on-imagebutton-in-updatepanel-produces-error-click-on-normal-button-does-not\" rel=\"nofollow\">Connect item with bug ID:755419</a>):</p>\n\n<pre><code>$(function () {\n    // Patch fractional .x, .y form parameters for IE10.\n    if (typeof (Sys) !== 'undefined' &amp;&amp; Sys.Browser.agent === Sys.Browser.InternetExplorer &amp;&amp; Sys.Browser.version === 10) {\n        Sys.WebForms.PageRequestManager.getInstance()._onFormElementActive = function Sys$WebForms$PageRequestManager$_onFormElementActive(element, offsetX, offsetY) {\n            if (element.disabled) {\n                return;\n            }\n            this._activeElement = element;\n            this._postBackSettings = this._getPostBackSettings(element, element.name);\n            if (element.name) {\n                var tagName = element.tagName.toUpperCase();\n                if (tagName === 'INPUT') {\n                    var type = element.type;\n                    if (type === 'submit') {\n                        this._additionalInput = encodeURIComponent(element.name) + '=' + encodeURIComponent(element.value);\n                    }\n                    else if (type === 'image') {\n                        this._additionalInput = encodeURIComponent(element.name) + '.x=' + Math.floor(offsetX) + '&amp;' + encodeURIComponent(element.name) + '.y=' + Math.floor(offsetY);\n                    }\n                }\n                else if ((tagName === 'BUTTON') &amp;&amp; (element.name.length !== 0) &amp;&amp; (element.type === 'submit')) {\n                    this._additionalInput = encodeURIComponent(element.name) + '=' + encodeURIComponent(element.value);\n                }\n            }\n        };\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p><strong>Simply installing .NET Framework 4.5 can fix this problem.</strong></p>\n\n<p>This can fix the problem even if you do not switch your application pool over to .NET Framework 4.5. </p>\n\n<p>In my case, I left the app pools at .NET Framework 3.5. Apparently installing .NET Framework 4.5 overwrites some files for other framework versions. </p>\n\n<p>Since it is so easy to install the new .NET Framework version, it's probably worth a try before bothering with the hotfixes (which did not work for me) or other solutions. </p>\n\n<p>See the workarounds section <a href=\"https://connect.microsoft.com/VisualStudio/feedback/details/755419/asp-net-4-0-and-ie10-click-on-imagebutton-in-updatepanel-produces-error-click-on-normal-button-does-not\">here</a></p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>I ended up sub-classing the ImageButton, and correcting the data before it was passed in for processing.</p>\n\n<pre><code>using System;\nusing System.Collections.Specialized;\nusing System.ComponentModel;\nusing System.Security.Permissions;\nusing System.Web;\nusing System.Web.UI;\n\nnamespace Xception.WebControls\n{\n    [AspNetHostingPermission(SecurityAction.Demand, Level = AspNetHostingPermissionLevel.Minimal),\n    AspNetHostingPermission(SecurityAction.InheritanceDemand, Level = AspNetHostingPermissionLevel.Minimal),\n    DefaultEvent(\"Click\"),\n    ToolboxData(\"&lt;{0}:ImageButton runat=\\\"server\\\"&gt; &lt;/{0}:ImageButton&gt;\")]\n    public class ImageButton : System.Web.UI.WebControls.ImageButton\n    {\n        protected override bool LoadPostData(string postDataKey, NameValueCollection postCollection)\n        {\n            NameValueCollection newCollection = new NameValueCollection();\n\n            foreach (string key in postCollection.AllKeys)\n            {\n                if (key.Equals(this.UniqueID + \".x\", StringComparison.InvariantCultureIgnoreCase))\n                    newCollection[this.UniqueID + \".x\"] = Convert.ToInt32(Convert.ToSingle(postCollection[this.UniqueID + \".x\"])).ToString();\n                else if (key.Equals(this.UniqueID + \".y\", StringComparison.InvariantCultureIgnoreCase))\n                    newCollection[this.UniqueID + \".y\"] = Convert.ToInt32(Convert.ToSingle(postCollection[this.UniqueID + \".y\"])).ToString();\n                else\n                    newCollection[key] = postCollection[key];\n            }\n\n            return base.LoadPostData(postDataKey, newCollection);\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just put this in the header of each page or the master page:</p>\n\n<pre><code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\" /&gt;\n</code></pre>\n\n<p>This will force IE10 into IE9 standards document mode, and it can handle image postbacks just fine.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a JavaScript workaround. It overrides the existing method, floors the x and y coordinates then calls the existing method with these new coordinates.</p>\n\n<pre><code>Sys.WebForms.PageRequestManager.getInstance()._origOnFormActiveElement = Sys.WebForms.PageRequestManager.getInstance()._onFormElementActive;\nSys.WebForms.PageRequestManager.getInstance()._onFormElementActive = function(element, offsetX, offsetY){\n    if (element.tagName.toUpperCase() === 'INPUT' &amp;&amp; element.type === 'image'){\n        offsetX = Math.floor(offsetX);\n        offsetY = Math.floor(offsetY);\n    }\n    this._origOnFormActiveElement(element, offsetX, offsetY);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>As noted in <a href=\"http://stackoverflow.com/a/15129393/1127114\">another answer</a>, this issue has been fixed in .NET 4.5.</p>\n\n<p>For those who can't upgrade to .NET 4.5, Microsoft has released an update to fix this problem for .NET 4.0 (<a href=\"http://support.microsoft.com/kb/2836939\" rel=\"nofollow\">KB2836939</a>) and .NET 3.5 (<a href=\"http://support.microsoft.com/kb/2836942\" rel=\"nofollow\">KB2836942</a> and <a href=\"http://support.microsoft.com/kb/2836943\" rel=\"nofollow\">KB2836943</a>).</p>\n\n<p>Here's how those KB articles describe the issue:</p>\n\n<blockquote>\n  <p>When you click an ImageButton control that is inside an update panel on an ASP.NET-based webpage by using Internet Explorer 10 and later, the partial postback operation fails. Additionally, the server-side click event is not fired.</p>\n</blockquote>\n\n<p>For reference, here's the original <code>ImageButton.LoadPostData</code> code that throws <code>FormatException</code>:</p>\n\n<pre><code>protected virtual bool LoadPostData(string postDataKey, NameValueCollection postCollection) {\n    string name = UniqueID;\n    string postX = postCollection[name + \".x\"];\n    string postY = postCollection[name + \".y\"];\n    if (postX != null &amp;&amp; postY != null &amp;&amp; postX.Length &gt; 0 &amp;&amp; postY.Length &gt; 0) {\n        x = Int32.Parse(postX, CultureInfo.InvariantCulture);\n        y = Int32.Parse(postY, CultureInfo.InvariantCulture);\n        if (Page != null) {\n            Page.RegisterRequiresRaiseEvent(this);\n        }\n    }\n    return false;\n}\n</code></pre>\n\n<p>And here's the fixed code:</p>\n\n<pre><code>protected virtual bool LoadPostData(string postDataKey, NameValueCollection postCollection) { \n    string name = UniqueID;\n    string postX = postCollection[name + \".x\"];\n    string postY = postCollection[name + \".y\"];\n    if (postX != null &amp;&amp; postY != null &amp;&amp; postX.Length &gt; 0 &amp;&amp; postY.Length &gt; 0) {\n        x = (int)ReadPositionFromPost(postX);\n        y = (int)ReadPositionFromPost(postY);\n        if (Page != null) {\n            Page.RegisterRequiresRaiseEvent(this);\n        }\n    }\n    return false;\n}\n\ninternal static double ReadPositionFromPost(string requestValue) {\n    NumberStyles style = NumberStyles.AllowDecimalPoint | NumberStyles.Integer;\n    return double.Parse(requestValue, style, CultureInfo.InvariantCulture);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you cannot install the hotfixes (or as in our case your customers just won't do it), you can also fix this by including a script that overwrites the \"broken\" part in ASP.NET (2.0).\nI found this to be a better solution than forcing IE9-mode.</p>\n\n<pre><code>ScriptManager.RegisterClientScriptInclude(this, typeof(Page), \"ie10fix\", \"ie10fix.js\");\n</code></pre>\n\n<p>\"ie10fix.js\":</p>\n\n<pre><code>if (typeof (Sys) != \"undefined\") {\n    Sys.UI.Point = function Sys$UI$Point(x, y) {\n        /// &lt;param name=\"x\" type=\"Number\" integer=\"false\"&gt;&lt;/param&gt;\n        /// &lt;param name=\"y\" type=\"Number\" integer=\"false\"&gt;&lt;/param&gt;\n        /// &lt;field name=\"x\" type=\"Number\" integer=\"false\"&gt;&lt;/field&gt;\n        /// &lt;field name=\"y\" type=\"Number\" integer=\"false\"&gt;&lt;/field&gt;\n        var e = Function._validateParams(arguments, [\n            { name: \"x\", type: Number, integer: false },\n            { name: \"y\", type: Number, integer: false }\n        ]);\n        if (e) throw e;\n\n        this.x = Math.round(x);\n        this.y = Math.round(y);\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>It seems like ASP.NET 4.0 is not prepared to handle ImageButton events triggered by Internet Explorer 10. The problem is that IE10 sends the image click coordinates as double values (with decimals), and ASP.NET tries to parse them as integers, presenting the following type of error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>System.Web.HttpUnhandledException (0x80004005): \n   Exception of type 'System.Web.HttpUnhandledException' was thrown. \n   ---&gt; System.FormatException: Input string was not in a correct format.\n\n   at System.Number.StringToNumber(String str, NumberStyles options, NumberBuffer&amp; number, NumberFormatInfo info, Boolean parseDecimal)\n   at System.Number.ParseInt32(String s, NumberStyles style, NumberFormatInfo info)\n   at System.Web.UI.WebControls.ImageButton.LoadPostData(String postDataKey, NameValueCollection postCollection)\n   at System.Web.UI.Page.ProcessPostData(NameValueCollection postData, Boolean fBeforeLoad)\n   at System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)\n   at System.Web.UI.Page.HandleError(Exception e)\n   at System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)\n   at System.Web.UI.Page.ProcessRequest(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)\n   at System.Web.UI.Page.ProcessRequest()\n   at System.Web.UI.Page.ProcessRequest(HttpContext context)\n   at ASP.members_addtocartlogin_twostep_aspx.ProcessRequest(HttpContext context) in c:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\Temporary ASP.NET Files\\root\\932deaba\\63ff7eeb\\App_Web_MyPage.aspx.28424a96.oraym_un.0.cs:line 0\n   at System.Web.HttpApplication.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()\n   at System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean&amp; completedSynchronously)\n</code></pre>\n\n<p>Googling around, some people suggest forcing IE10 to run in compatibility view. However, adding the meta tag <code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=10\" /&gt;</code> does not solve anything; and adding <code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"&gt;</code> before <code>&lt;!DOCTYPE&gt;</code> doesn't work either.</p>\n\n<p>Any solutions? Could I capture the click event with Javascript and remove the decimals somehow?</p>\n\n<p><strong>Note:</strong> Upgrading to Framework 4.5 and recompiling fixes the bug. No need to change the runtime version, since it's still 4.0.</p>\n",
            "last_activity_date": 1413293742,
            "question_id": 13299685,
            "score": 23,
            "tags": [
                "javascript",
                "asp.net",
                "internet-explorer-10"
            ],
            "title": "IE10 sending image button click coordinates with decimals (floating point values) causing a ParseInt32 FormatException"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Diode's solution didn't work for me - scroll() didn't differentiate between the animation and the user, meaning the animation stopped immediately. From a <a href=\"http://stackoverflow.com/questions/2834667/how-can-i-differentiate-a-manual-scroll-via-mousewheel-scrollbar-from-a-javasc\">different post</a>, the following works for me (modified for this purpose):</p>\n\n<pre><code>// Assign the HTML, Body as a variable...\nvar $viewport = $('html, body');\n\n// Some event to trigger the scroll animation (with a nice ease - requires easing plugin )...\n$('#element').click(function() {\n    $viewport.animate({ \n        scrollTop: scrollTarget // set scrollTarget to your desired position\n    }, 1700, \"easeOutQuint\");\n});\n\n// Stop the animation if the user scrolls. Defaults on .stop() should be fine\n$viewport.bind(\"scroll mousedown DOMMouseScroll mousewheel keyup\", function(e){\n    if ( e.which &gt; 0 || e.type === \"mousedown\" || e.type === \"mousewheel\"){\n         $viewport.stop().unbind('scroll mousedown DOMMouseScroll mousewheel keyup'); // This identifies the scroll as a user action, stops the animation, then unbinds the event straight after (optional)\n    }\n});                 \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 44
                }
            ],
            "body": "<p>I want to make it so that a webpage automatically scrolls to a certain element, however I don't want the scrolling to fight user input--  If it begins to scroll and then the user scrolls, I want the automated scrolling to stop and let the user have full control.</p>\n\n<p>So I originally thought I could do something like this:</p>\n\n<pre><code>var animatable = $('body, html');\nanimatable.animate({scrollTop: $('#foo').offset()}, 1000);\n\n$(window).scroll(function() { animatable.stop(); });\n</code></pre>\n\n<p>however, the problem is--  the animation of the scrollTop triggers the scroll event handler for window!  So, the animation begins and then stops immediately.</p>\n\n<p>I am looking for a way that I can make my window scroll event handler only stop if it's triggered by user input... Is this possible?</p>\n",
            "last_activity_date": 1359511232,
            "question_id": 8858994,
            "score": 22,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "let user scrolling stop jquery animation of scrolltop?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Internet Explorer doesn't support \"for each\" loops. You will need to change the code to use regular for loops:</p>\n\n<pre><code>function toggle(source) {\n    var checkboxes = document.getElementsByName('DG1');\n    for (var i = 0; i &lt; checkboxes.length; i++) {\n        checkboxes[i].checked = source.checked;\n    }\n    ...\n}\n</code></pre>\n\n<p>Or, you could use a library like jQuery and do it like this:</p>\n\n<pre><code>function toggle(source) {\n    $(\"input[name^=DG]\").attr(\"checked\", source.checked);\n}\n</code></pre>\n\n<p><strong>Edit:</strong> Also, the way you are using \"for each\" might not always do what you want even in Firefox. Like \"for (key in object)\" loops, \"for each\" iterates over <strong>all</strong> the properties of the object <em>including properties from its prototype</em>. It's really made for iterating over object properties, not arrays.</p>\n\n<p>In JavaScript 1.7 you can create an Iterator that works properly with arrays like this:</p>\n\n<pre><code>  for each (let [i, checkbox] in Iterator(checkboxes)) {\n      checkbox.checked = source.checked;\n  }\n</code></pre>\n\n<p>Of course, this only works in Firefox 2.0+.</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>To complete Matthew Crumley's answer, you may also have a problem with the <code>getElementByName()</code> failure in IE, explained <a href=\"http://jszen.blogspot.com/2004/07/whats-in-name.html\" rel=\"nofollow\">here</a>:</p>\n\n<blockquote>\n  <p>The little-used <code>getElementsByName()</code> method is part of the DOM Level 1 specification and is supported by both Internet Explorer and Mozilla/Firefox. getElementsByName() </p>\n  \n  <p>According to the HTML 4.01 spec, the only elements that support NAME attributes are <code>BUTTON, TEXTAREA, APPLET, SELECT, FORM, FRAME, IFRAME, IMG, A, INPUT, OBJECT, MAP, PARAM and META</code>. So to place a <code>NAME</code> inside a <code>DIV</code> is actually invalid HTML.</p>\n</blockquote>\n\n<p>(So it will work in your case (<code>NAME</code> of an <code>INPUT</code> field), but it is unsafe to use it in IE)</p>\n\n<blockquote>\n  <p>Moz/Firefox doesn't have a problem with this and will happily return all three DIV elements. But MSIE treats it the invalid <code>NAME</code> attribute as an <a href=\"http://msdn.microsoft.com/workshop/author/dhtml/reference/properties/expando.asp\" rel=\"nofollow\">expando attribute</a> and excludes those elements</p>\n</blockquote>\n\n<p>A possible fix is given with <a href=\"http://www.dreamincode.net/code/snippet293.htm\" rel=\"nofollow\">this script</a>.</p>\n\n<p><hr /></p>\n\n<p>Note: when you are coding a <code>for</code>, alwatys add then enclosing curling brackets <code>{ and }</code>: it is safer. If you add a second line of code in your loop, it will be taken into account by the <code>for</code> block.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I would clean it up a bit.</p>\n\n<pre><code>function select(){\n    var butt = document.getElementById('selectall');\n    butt.onclick = selectall;\n\n    function selectall(){\n        for(var i=1;i&lt;6;i++){\n            var id='DG'+i;\n            var all = document.getElementById(id);\n            all.setAttribute('checked','checked');\n        }\n    }   \n}\n</code></pre>\n\n<p>But It works only for getElementById() (and not getElementsByName(), what I dont understand ). Just add to every input id='selectall', id='DG1'...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Or you might try and extend the Array object for browsers that don't support the foreach method on it as suggested here:\n<a href=\"https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference:Objects:Array:forEach#Compatibility\">https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference:Objects:Array:forEach#Compatibility</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>It is possible to use a modified form of for each in Internet Explorer, the syntax is as follows.</p>\n\n<pre><code>var checkboxes = document.getElementsByName('DG2');\nfor (var i in checkboxes)\n  checkboxes[i].checked = 'true';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Natively IE8 is out of date to <strong>foreach</strong>, but how do I use jQuery, I opted for <strong>jQuery.each</strong> to overcome this problem.</p>\n\n<p>My copy and paste from jQuery API Doc:</p>\n\n<pre><code>var obj = {\n\u00a0\u00a0 \"flammable\", \"inflammable\"\n\u00a0\u00a0 \"duh\": \"no duh\"\n};\n$. each (obj, function (key, value) {\n\u00a0\u00a0 alert (key + \":\" + value);\n});\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/jQuery.each/\" rel=\"nofollow\">http://api.jquery.com/jQuery.each/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>i think <strong>jQuery.each</strong> is the best solution for it</p>\n\n<pre><code>var idArr = [\"LocationFirst\",\"LocationSecond\",\"LocationThird\",\"LocationFourth\",\"LocationFifth\"];\n\n $.each(idArr,function(index, entry) {\n   //some code\n });\n</code></pre>\n\n<p>it will iterate over all the elements in the array \"idArr\" and can do some thing with each element.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have this code:</p>\n\n<pre><code>&lt;script&gt;\nfunction toggle(source) {\n\n  checkboxes = document.getElementsByName('DG1');\n  for each(var checkbox in checkboxes)\n    checkbox.checked = source.checked;\n\n  checkboxes = document.getElementsByName('DG2');\n  for each(var checkbox in checkboxes)\n    checkbox.checked = source.checked;\n\n  checkboxes = document.getElementsByName('DG3');\n  for each(var checkbox in checkboxes)\n    checkbox.checked = source.checked;\n\n  checkboxes = document.getElementsByName('DG4');\n  for each(var checkbox in checkboxes)\n    checkbox.checked = source.checked;\n\n  checkboxes = document.getElementsByName('DG5');\n  for each(var checkbox in checkboxes)\n    checkbox.checked = source.checked;\n}\n&lt;/script&gt;\n\n&lt;input type=\"checkbox\" onClick=\"toggle(this)\" /&gt;Select All&lt;br/&gt;\n\n&lt;form method=POST action=\"DGUsageServlet\"&gt;\n    &lt;input type=\"checkbox\" name=\"DG1\"&gt;DG1&lt;/input&gt;\n    &lt;input type=\"checkbox\" name=\"DG2\"&gt;DG2&lt;/input&gt;\n    &lt;input type=\"checkbox\" name=\"DG3\"&gt;DG3&lt;/input&gt;\n    &lt;input type=\"checkbox\" name=\"DG4\"&gt;DG4&lt;/input&gt;\n    &lt;input type=\"checkbox\" name=\"DG5\"&gt;DG5&lt;/input&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>How can I make the above script to work in IE?</p>\n",
            "last_activity_date": 1369647718,
            "question_id": 412447,
            "score": 22,
            "tags": [
                "javascript"
            ],
            "title": "for each JavaScript Support in IE?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Neither, but a variation of the second.  Lose the <code>try...catch</code> and check for existence of the console object properly:</p>\n\n<pre><code>if (typeof console == \"undefined\") {\n    window.console = {\n        log: function () {}\n    };\n}\n\nconsole.log(\"whatever\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p><strong>EDIT:</strong> <em><a href=\"http://stackoverflow.com/a/3767958/67945\">Andy's answer</a> is way more elegant than the quick hack I've posted below.</em></p>\n\n<p>I generally use this approach...</p>\n\n<pre><code>// prevent console errors on browsers without firebug\nif (!window.console) {\n    window.console = {};\n    window.console.log = function(){};\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Or, in coffeescript:</p>\n\n<pre><code>window.console ?=\n    log:-&gt; #patch so console.log() never causes error even in IE.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I came across this post, which is similar to the other answers:</p>\n\n<p><a href=\"http://jennyandlih.com/resolved-logging-firebug-console-breaks-ie\" rel=\"nofollow\">http://jennyandlih.com/resolved-logging-firebug-console-breaks-ie</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The following will achieve what you are looking for:</p>\n\n<pre><code>window.console &amp;&amp; console.log('foo');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>window.console = window.console || {};\nwindow.console.log = window.console.log || function() {};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>In past i too faced same bug. Later by using below code i fixed it.\n\nif(!window.console) {\n        var console = {\n            log : function(){},\n            warn : function(){},\n            error : function(){},\n            time : function(){},\n            timeEnd : function(){}\n        }\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Which solution do you recommend, the second is simpler ( less code ), but there are drawbacks on using it ?</p>\n\n<p><strong>First:</strong> (Set a global debug flag)</p>\n\n<pre><code>// the first line of code\nvar debug = true;\ntry {\n    console.log\n} catch(e) {\n    if(e) {\n        debug=false;\n    }\n};\n// Then later in the code\nif(debug) {\n    console.log(something);\n}\n</code></pre>\n\n<p><strong>Second:</strong>  override console.log</p>\n\n<pre><code>try {\n    console.log\n} catch(e) {\n    if (e) {\n        console.log = function() {}\n    }\n};\n// And all you need to do in the code is\nconsole.log(something);\n</code></pre>\n",
            "last_activity_date": 1403000970,
            "question_id": 3767924,
            "score": 21,
            "tags": [
                "javascript",
                "console",
                "firebug"
            ],
            "title": "js override console.log if not defined"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>From: <a href=\"http://stackoverflow.com/questions/1340872/how-to-get-javascript-caller-function-line-number-how-to-get-javascript-caller\">How to get JavaScript caller function line number? How to get JavaScript caller source URL?</a>\nthe <code>Error</code> object has a line number property(in FF). So something like this should work:</p>\n\n<pre><code>var err = new Error();\nGlobal.console.log(level + ': '+ msg + 'file: ' + err.fileName + ' line:' + err.lineNumber);\n</code></pre>\n\n<p>In Webkit browser you have <code>err.stack</code> that is a string representing the current call stack. It will display the current line number and more information.</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>To get the correct linenumber you need to invoke the error on that line. Something like:</p>\n\n<pre><code>var Log = Error;\nLog.prototype.write = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        suffix = this.lineNumber ? 'line: '  + this.lineNumber : 'stack: ' + this.stack;\n\n    console.log.apply(console, args.concat([suffix]));\n};\n\nvar a = Log().write('monkey' + 1, 'test: ' + 2);\n\nvar b = Log().write('hello' + 3, 'test: ' + 4);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>You can pass the line number to your debug method, like this :</p>\n\n<pre><code>//main.js\ndebug('Here is a msg.', (new Error).lineNumber);\n</code></pre>\n\n<p>Here, <code>(new Error).lineNumber</code> would give you the current line number in your <code>javascript</code> code.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you simply want to control whether debug is used and have the correct line number, you can do this instead:</p>\n\n<pre><code>if(isDebug &amp;&amp; window.console &amp;&amp; console.log &amp;&amp; console.warn &amp;&amp; console.error){\n    window.debug = {\n        'log': window.console.log,\n        'warn': window.console.warn,\n        'error': window.console.error\n    };\n}else{\n    window.debug = {\n        'log': function(){},\n        'warn': function(){},\n        'error': function(){}\n    };\n}\n</code></pre>\n\n<p>When you need access to debug, you can do this:</p>\n\n<pre><code>debug.log(\"log\");\ndebug.warn(\"warn\");\ndebug.error(\"error\");\n</code></pre>\n\n<p>If <code>isDebug == true</code>, The line numbers and filenames shown in the console will be correct, because <code>debug.log</code> etc is actually an alias of <code>console.log</code> etc.</p>\n\n<p>If <code>isDebug == false</code>, no debug messages are shown, because <code>debug.log</code> etc simply does nothing (an empty function).</p>\n\n<p>As you already know, a wrapper function will mess up the line numbers and filenames, so it's a good idea to prevent using wrapper functions.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>//isDebug controls the entire site.\nvar isDebug = true;\n\n//debug.js\nfunction debug(msg, level){\n    var Global = this;\n    if(!(Global.isDebug &amp;&amp; Global.console &amp;&amp; Global.console.log)){\n        return;\n    }\n    level = level||'info';\n    return 'console.log(\\'' + level + ': '+ JSON.stringify(msg) + '\\')';\n}\n\n//main.js\neval(debug('Here is a msg.'));\n</code></pre>\n\n<p>This will give me <code>info: \"Here is a msg.\"   main.js(line:2)</code>.</p>\n\n<p>But the extra <code>eval</code> is needed, pity.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I liked <a href=\"http://stackoverflow.com/a/13815746/1037948\">@fredrik's answer</a>, so I rolled it up with <a href=\"http://stackoverflow.com/a/3806596/1037948\">another answer which splits the Webkit stacktrace</a>, and merged it with <a href=\"http://paulirish.com/2009/log-a-lightweight-wrapper-for-consolelog/\">@PaulIrish's safe console.log wrapper</a>.  \"Standardizes\" the <code>filename:line</code> to a \"special object\" so it stands out and looks mostly the same in FF and Chrome.</p>\n\n<p>Testing in fiddle: <a href=\"http://jsfiddle.net/drzaus/pWe6W/\">http://jsfiddle.net/drzaus/pWe6W/</a></p>\n\n<pre><code>_log = (function (undefined) {\n    var Log = Error; // does this do anything?  proper inheritance...?\n    Log.prototype.write = function (args) {\n        /// &lt;summary&gt;\n        /// Paulirish-like console.log wrapper.  Includes stack trace via @fredrik SO suggestion (see remarks for sources).\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"args\" type=\"Array\"&gt;list of details to log, as provided by `arguments`&lt;/param&gt;\n        /// &lt;remarks&gt;Includes line numbers by calling Error object -- see\n        /// * http://paulirish.com/2009/log-a-lightweight-wrapper-for-consolelog/\n        /// * http://stackoverflow.com/questions/13815640/a-proper-wrapper-for-console-log-with-correct-line-number\n        /// * http://stackoverflow.com/a/3806596/1037948\n        /// &lt;/remarks&gt;\n\n        // via @fredrik SO trace suggestion; wrapping in special construct so it stands out\n        var suffix = {\n            \"@\": (this.lineNumber\n                    ? this.fileName + ':' + this.lineNumber + \":1\" // add arbitrary column value for chrome linking\n                    : extractLineNumberFromStack(this.stack)\n            )\n        };\n\n        args = args.concat([suffix]);\n        // via @paulirish console wrapper\n        if (console &amp;&amp; console.log) {\n            if (console.log.apply) { console.log.apply(console, args); } else { console.log(args); } // nicer display in some browsers\n        }\n    };\n    var extractLineNumberFromStack = function (stack) {\n        /// &lt;summary&gt;\n        /// Get the line/filename detail from a Webkit stack trace.  See http://stackoverflow.com/a/3806596/1037948\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"stack\" type=\"String\"&gt;the stack string&lt;/param&gt;\n\n        // correct line number according to how Log().write implemented\n        var line = stack.split('\\n')[2];\n        // fix for various display text\n        line = (line.indexOf(' (') &gt;= 0\n            ? line.split(' (')[1].substring(0, line.length - 1)\n            : line.split('at ')[1]\n            );\n        return line;\n    };\n\n    return function (params) {\n        /// &lt;summary&gt;\n        /// Paulirish-like console.log wrapper\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"params\" type=\"[...]\"&gt;list your logging parameters&lt;/param&gt;\n\n        // only if explicitly true somewhere\n        if (typeof DEBUGMODE === typeof undefined || !DEBUGMODE) return;\n\n        // call handler extension which provides stack trace\n        Log().write(Array.prototype.slice.call(arguments, 0)); // turn into proper array\n    };//--  fn  returned\n\n})();//--- _log\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>A way to keep line number is here: <a href=\"https://gist.github.com/bgrins/5108712\">https://gist.github.com/bgrins/5108712</a>.  It more or less boils down to this: </p>\n\n<pre><code>if (Function.prototype.bind) {\n    window.log = Function.prototype.bind.call(console.log, console);\n}\nelse {\n    window.log = function() { \n        Function.prototype.apply.call(console.log, console, arguments);\n    };\n}\n</code></pre>\n\n<p>You could wrap this with <code>isDebug</code> and set <code>window.log</code> to <code>function() { }</code> if you aren't debugging.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can maintain line numbers <strong>and</strong> output the log level with some clever use of <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\" rel=\"nofollow\"><code>Function.prototype.bind</code></a>:</p>\n\n<pre><code>function setDebug(isDebug) {\n  if (window.isDebug) {\n    window.debug = window.console.log.bind(window.console, '%s: %s');\n  } else {\n    window.debug = function() {};\n  }\n}\n\nsetDebug(true);\n\n// ...\n\ndebug('level', 'This is my message.'); // --&gt; level: This is my message. (line X)\n</code></pre>\n\n<p>Taking it a step further, you could make use of the <code>console</code>'s error/warning/info distinctions and still have custom levels. <a href=\"http://jsfiddle.net/namuol/ZMGuu/\" rel=\"nofollow\"><strong>Try it!</strong></a></p>\n\n<pre><code>function setDebug(isDebug) {\n  if (isDebug) {\n    window.debug = {\n      log: window.console.log.bind(window.console, '%s: %s'),\n      error: window.console.error.bind(window.console, 'error: %s'),\n      info: window.console.info.bind(window.console, 'info: %s'),\n      warn: window.console.warn.bind(window.console, 'warn: %s')\n    };\n  } else {\n    var __no_op = function() {};\n\n    window.debug = {\n      log: __no_op,\n      error: __no_op,\n      warn: __no_op,\n      info: __no_op\n    }\n  }\n}\n\nsetDebug(true);\n\n// ...\n\ndebug.log('wat', 'Yay custom levels.'); // -&gt; wat: Yay custom levels.    (line X)\ndebug.info('This is info.');            // -&gt; info: This is info.        (line Y)\ndebug.error('Bad stuff happened.');     // -&gt; error: Bad stuff happened. (line Z)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I found some of the answers to this problem a little too complex for my needs.  Here is a simple solution, rendered in Coffeescript.  It'a adapted from Brian Grinstead's version <a href=\"http://www.briangrinstead.com/blog/console-log-helper-function\" rel=\"nofollow\">here</a></p>\n\n<p>It assumes the global console object.</p>\n\n<pre><code># exposes a global 'log' function that preserves line numbering and formatting.\n(() -&gt;\n    methods = [\n      'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',\n      'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',\n      'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',\n      'timeStamp', 'trace', 'warn']\n    noop = () -&gt;\n    # stub undefined methods.\n    for m in methods  when  !console[m]\n        console[m] = noop\n\n    if Function.prototype.bind?\n        window.log = Function.prototype.bind.call(console.log, console);\n    else\n        window.log = () -&gt;\n            Function.prototype.apply.call(console.log, console, arguments)\n)()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Code from <a href=\"http://www.briangrinstead.com/blog/console-log-helper-function\" rel=\"nofollow\">http://www.briangrinstead.com/blog/console-log-helper-function</a> worked at least in Chrome 38, FF 33 and IE 11:</p>\n\n<pre><code>// Portable version of `log` that:\n// * Doesn't expose log to the window.\n// * Allows log() to be called above the function declaration.\n// Because of this, you can just throw it in the bottom of a plugin and\n// it won't mess with global scope or clutter your code.\n\n(function()\n{\n\n  // Your code starts here...\n  var a = {b:1};\n  var c = \"test\";\n  log(a, c);\n  // Your code ends here...\n\n  function log () {\n    /* jshint -W021 */\n    if (window.console) {\n\n      // Only run on the first time through - \n      // reset this function to the appropriate console.log helper\n\n      if (Function.prototype.bind) {\n        log = Function.prototype.bind.call(console.log, console);\n      }\n      else {\n        log = function() {\n          Function.prototype.apply.call(console.log, console, arguments);\n        };\n      }\n\n      log.apply(this, arguments);\n    }\n  }\n\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm now developing an application, and place a global <code>isDebug</code> switch. I would like to wrap <code>console.log</code> for more convenient usage.</p>\n\n<pre><code>//isDebug controls the entire site.\nvar isDebug = true;\n\n//debug.js\nfunction debug(msg, level){\n    var Global = this;\n    if(!(Global.isDebug &amp;&amp; Global.console &amp;&amp; Global.console.log)){\n        return;\n    }\n    level = level||'info';\n    Global.console.log(level + ': '+ msg);\n}\n\n//main.js\ndebug('Here is a msg.');\n</code></pre>\n\n<p>Then I get this result in Firefox console.</p>\n\n<pre><code>info: Here is a msg.                       debug.js (line 8)\n</code></pre>\n\n<p>What if I want to log with line number where <code>debug()</code> gets called, like <code>info: Here is a msg.      main.js (line 2)</code>?</p>\n",
            "last_activity_date": 1416902242,
            "question_id": 13815640,
            "score": 19,
            "tags": [
                "javascript"
            ],
            "title": "A proper wrapper for console.log with correct line number?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><a href=\"http://jsperf.com/selector-vs-find-again\">http://jsperf.com/selector-vs-find-again</a></p>\n\n<p>selector is faster</p>\n\n<p>(NOTE: made up random html just so it wasn't just those elements on the page)</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Use <a href=\"http://jsperf.com/\" rel=\"nofollow\">jsPerf</a>.</p>\n\n<p><a href=\"http://jsperf.com/single-selector-vs-find\" rel=\"nofollow\">I created one for you</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The answer to your question is: yes.</p>\n\n<p><strong>Don't worry about the performance difference, unless your code is slow</strong>. If it is, use a profiler to determine bottlenecks.</p>\n\n<p>From an analysis standpoint:</p>\n\n<pre><code>$(\".div1 h2, div1 h3\")\n</code></pre>\n\n<p>should be faster as jQuery will pipe it through <code>querySelectorAll</code> (if it exists) and native code will run faster than non-native code. It will also save on an additional function call.</p>\n\n<pre><code>$(\".div1\").find(\"h2, h3\")\n</code></pre>\n\n<p>is better if you plan on chaining some other functions on <code>.div1</code>:</p>\n\n<pre><code>$(\".div1\").find(\"h2, h3\").addClass('foo').end().show();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Actually, .find() <em>CAN</em> be faster.</p>\n\n<p>Selectors seem to be quicker over find when trying to select multiple elements; however, if you use a $.find, or even cache the descendant, you can see it's much faster:\n<a href=\"http://jsperf.com/selector-vs-find-again/11\">http://jsperf.com/selector-vs-find-again/11</a></p>\n\n<p>I also beg to differ about performance not being important. In this world of smart phones, battery life is king.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Which is better to use as a performance perspective:</p>\n\n<pre><code>$(\".div1 h2, .div1 h3\")\n</code></pre>\n\n<p>or</p>\n\n<pre><code>$(\".div1\").find(\"h2, h3\")\n</code></pre>\n",
            "last_activity_date": 1357228517,
            "question_id": 6230266,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors"
            ],
            "title": "jQuery single selector vs .find()"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Unfortunately in the HTML5 canvas element you can't rotate individual elements. </p>\n\n<p>Animation works like drawing in MS Paint: You draw something, make a screen.. use the eraser to remove some stuff, draw something differently, make a screen.. Draw something else on top, make a screen.. etc etc.</p>\n\n<p>If you have an existing item on the canvas - you'll have to erase it ( use <code>ctx.fillRect()</code> or <code>clearRect()</code> for example ), and then draw the rotated object.</p>\n\n<p>If you're not sure how to rotate it while drawing in the first place:</p>\n\n<pre><code>ctx.save();\nctx.rotate(0.17);\n// draw your object\nctx.restore();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>To rotate a individual object you have to set the transformation matrix.  This is really simple:</p>\n\n<pre><code>&lt;body&gt;\n    &lt;canvas width=\"1280\" height=\"720\" id=\"pageCanvas\"&gt;\n        You do not have a canvas enabled browser\n    &lt;/canvas&gt;\n    &lt;script&gt;\n        var context = document.getElementById('pageCanvas').getContext('2d');\n        var angle = 0;\n        function convertToRadians(degree) {\n            return degree*(Math.PI/180);\n        }\n\n        function incrementAngle() {\n            angle++;\n            if(angle &gt; 360) {\n                angle = 0;\n            }\n        }\n\n        function drawRandomlyColoredRectangle() {  \n            &lt;!-- clear the drawing surface --&gt;\n            context.clearRect(0,0,1280,720);\n            &lt;!-- you can also stroke a rect, the operations need to happen in order --&gt;\n            incrementAngle();\n            context.save();                \n            context.lineWidth = 10;  \n            context.translate(200,200);\n            context.rotate(convertToRadians(angle));\n            &lt;!-- set the fill style --&gt;\n            context.fillStyle = '#'+Math.floor(Math.random()*16777215).toString(16);\n            context.fillRect(-25,-25,50,50);\n            context.strokeRect(-25,-25,50,50);                \n            context.restore();\n        }\n\n        setInterval(drawRandomlyColoredRectangle, 20);\n    &lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>This html/javascript code might shed some light on the matter:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n\n&lt;canvas id=\"myCanvas\" width=\"233\" height=\"233\" style=\"border:1px solid #d3d3d3;\"&gt;\nyour browser does not support the canvas tag &lt;/canvas&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n\nvar c=document.getElementById(\"myCanvas\");\nvar ctx=c.getContext(\"2d\");\nvar canvasWidth=233;\nvar canvasHeight=233;\nvar rectWidth=100;\nvar rectHeight=150;\nvar x=30;\nvar y=30;\nvar translateX= x+(rectWidth/2);\nvar translateY= y+(rectHeight/2);\n\nctx.fillRect(x,y,rectWidth,rectHeight);\n\nctx.translate(translateX,translateY);\nctx.rotate(5*Math.PI/64); /* just a random rotate number */\nctx.translate(-translateX,-translateY); \nctx.fillRect(x,y,rectWidth,rectHeight);\n\n\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>I find it helpful to see the math related to rotating, I hope this was helpful to you too.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I ran into the same problem in a recent project (where I kicked rotating aliens all over the place). I just used this humble function that does the same thing and can be used the same way as ctx.rotate but can be passed an angle. Works fine for me.</p>\n\n<pre><code>function drawImageRot(img,x,y,width,height,deg){\n\n    //Convert degrees to radian \n    var rad = deg * Math.PI / 180;\n\n    //Set the origin to the center of the image\n    ctx.translate(x + width / 2, y + height / 2);\n\n    //Rotate the canvas around the origin\n    ctx.rotate(rad);\n\n    //draw the image    \n    ctx.drawImage(img,width / 2 * (-1),height / 2 * (-1),width,height);\n\n    //reset the canvas  \n    ctx.rotate(rad * ( -1 ) );\n    ctx.translate((x + width / 2) * (-1), (y + height / 2) * (-1));\n}\n</code></pre>\n\n<p>Yay, my first answer!</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>Basically, to make an object rotate properly without having other shape rotating around, you need to:</p>\n\n<ol>\n<li>save the context: ctx.save()</li>\n<li>move the pivot point to the desired location: ctx.translate(200, 200);</li>\n<li>draw the shape, sprite, whatever: ctx.draw...</li>\n<li>reset the pivot: ctx.translate(-200, -200);</li>\n<li>restore the context to its original state: ctx.restore();</li>\n</ol>\n\n<p>Shapes drawn outside the list mentioned above won\u00b4\u00b4t be affected. I hope it helps. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n\n&lt;canvas id=\"myCanvas\" width=\"500\" height=\"450\" style=\"border:1px solid #d3d3d3;\"&gt;\n&lt;/canvas&gt;\n\n&lt;Button id = \"right\" onclick = \"rotateRight()\"&gt;Right&lt;/option&gt;\n&lt;Button id = \"left\" onclick = \"rotateLeft()\"&gt;Left&lt;/option&gt;\n&lt;script src = \"zoom.js\"&gt;\n\n&lt;/script&gt;\n\n&lt;script&gt;\nvar c=document.getElementById(\"myCanvas\");\nvar ctx=c.getContext(\"2d\");\n\ncreateRect();\n\nfunction rotateRight()\n{\n ctx.save();\n ctx.clearRect(0,0,500,450);\n ctx.translate(c.width/2,c.height/2);\n ctx.rotate(10*Math.PI/180 );  \n ctx.translate(-c.width/2,-c.height/2);\n createRect();\n\n}\n\nfunction rotateLeft()\n{\n ctx.save();\n ctx.clearRect(0,0,500,450);\n ctx.translate(c.width/2,c.height/2);\n ctx.rotate(-10*Math.PI/180 );  \n ctx.translate(-c.width/2,-c.height/2);\n createRect();  \n}\n\n\n\nfunction createRect()\n{\n ctx.beginPath();\n ctx.fillStyle = \"#AAAA00\";\n ctx.fillRect(250,250,90,50);\n}\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To rotate an object you can use <b>rotate()</b> method. Here the example how to rotate a rectangular object to 135 degrees of clockwise.\n    \n    </p>\n\n<pre><code> &lt;script&gt;\n  var canvas = document.getElementById('Canvas01');\n  var ctx = canvas.getContext('2d');\n\n  var rectWidth = 100;\n  var rectHeight = 50;\n\n  //create line\n  ctx.strokeStyle= '#ccc';\n  ctx.beginPath();\n  ctx.moveTo(canvas.width / 2, 0);\n  ctx.lineTo(canvas.width / 2, canvas.height);\n  ctx.stroke();\n  ctx.closePath();\n\n  ctx.beginPath();\n  ctx.moveTo(0, canvas.height/2);\n  ctx.lineTo(canvas.width, canvas.height/2);\n  ctx.stroke();\n  ctx.closePath();\n\n  // translate ctx to center of canvas\n  ctx.translate(canvas.width / 2, canvas.height / 2);\n\n  // rotate the rect to 135 degrees of clockwise\n  ctx.rotate((Math.PI / 180)*135);\n\n  ctx.fillStyle = 'blue';\n  ctx.fillRect(0, 0, rectWidth, rectHeight);\n&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>Here the demo and you can try yourself: <a href=\"http://okeschool.com/examples/canvas/html5-canvas-rotate\" rel=\"nofollow\"><a href=\"http://okeschool.com/examples/canvas/html5-canvas-rotate\" rel=\"nofollow\">http://okeschool.com/examples/canvas/html5-canvas-rotate</a></a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to figure out how to rotate a single object on an html 5 canvas. </p>\n\n<p>For example: <a href=\"http://screencast.com/t/NTQ5M2E3Mzct\">http://screencast.com/t/NTQ5M2E3Mzct</a> - I want each one of those cards to be rotated at a different degree.</p>\n\n<p>So far, all I've seen are articles and examples that demonstrate ways to rotate the entire canvas. Right now, I'm guessing I'll have to rotate the canvas, draw an image, and then rotate the canvas back to it's original position before drawing the second image. If that's the case, then just let me know! I just have a feeling that there's another way.</p>\n\n<p>Anyone have any idea?</p>\n\n<p>Thanks in advance!</p>\n",
            "last_activity_date": 1418695164,
            "question_id": 2677671,
            "score": 19,
            "tags": [
                "javascript",
                "animation",
                "html5",
                "canvas"
            ],
            "title": "How do I rotate a single object on an html 5 canvas?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>you have to call a function before it can return anything.</p>\n\n<pre><code>function mainFunction() {\n      function subFunction() {\n            var str = \"foo\";\n            return str;\n      }\n      return subFunction();\n}\n\nvar test = mainFunction();\nalert(test);\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>function mainFunction() {\n      function subFunction() {\n            var str = \"foo\";\n            return str;\n      }\n      return subFunction;\n}\n\nvar test = mainFunction();\nalert( test() );\n</code></pre>\n\n<p>for your actual code. The return should be outside, in the main function. The callback is called somewhere inside the <code>getLocations</code> method and hence its return value is not recieved inside your main function.</p>\n\n<pre><code>function reverseGeocode(latitude,longitude){\n    var address = \"\";\n    var country = \"\";\n    var countrycode = \"\";\n    var locality = \"\";\n\n    var geocoder = new GClientGeocoder();\n    var latlng = new GLatLng(latitude, longitude);\n\n    geocoder.getLocations(latlng, function(addresses) {\n     address = addresses.Placemark[0].address;\n     country = addresses.Placemark[0].AddressDetails.Country.CountryName;\n     countrycode = addresses.Placemark[0].AddressDetails.Country.CountryNameCode;\n     locality = addresses.Placemark[0].AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.LocalityName;\n    });   \n    return country\n   }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>Right. The function you pass to getLocations() won't get called until the data is available, so returning \"country\" before it's been set isn't going to help you. </p>\n\n<p>The way you need to do this is to have the function that you pass to geocoder.getLocations() actually do whatever it is you wanted done with the returned values. </p>\n\n<p>Something like this:</p>\n\n<pre><code>function reverseGeocode(latitude,longitude){\n  var geocoder = new GClientGeocoder();\n  var latlng = new GLatLng(latitude, longitude);\n\n  geocoder.getLocations(latlng, function(addresses) {\n    var address = addresses.Placemark[0].address;\n    var country = addresses.Placemark[0].AddressDetails.Country.CountryName;\n    var countrycode = addresses.Placemark[0].AddressDetails.Country.CountryNameCode;\n    var locality = addresses.Placemark[0].AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.LocalityName;\n    do_something_with_address(address, country, countrycode, locality);\n  });   \n}\n\nfunction do_something_with_address(address, country, countrycode, locality) {\n  if (country===\"USA\") {\n     alert(\"USA A-OK!\"); // or whatever\n  }\n}\n</code></pre>\n\n<hr>\n\n<p>If you might want to do something different every time you get the location, then pass the function as an additional parameter to reverseGeocode:</p>\n\n<pre><code>function reverseGeocode(latitude,longitude, callback){\n  // Function contents the same as above, then\n  callback(address, country, countrycode, locality);\n}\nreverseGeocode(latitude, longitude, do_something_with_address);\n</code></pre>\n\n<p>If this looks a little messy, then you could take a look at something like the Deferred feature in Dojo, which makes the chaining between functions a little clearer.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Just FYI, Geocoder is asynchronous so the accepted answer while logical doesn't really work in this instance. I would prefer to have an outside object that acts as your updater. </p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var updater = {};\r\n\r\nfunction geoCodeCity(goocoord) { \r\n\tvar geocoder = new google.maps.Geocoder();\r\n\tgeocoder.geocode({\r\n\t\t'latLng': goocoord\r\n\t}, function(results, status) {\r\n\t\tif (status == google.maps.GeocoderStatus.OK) {\r\n\t\t\tupdater.currentLocation = results[1].formatted_address;\r\n\t\t} else {\r\n\t\t\tif (status == \"ERROR\") { \r\n\t\t        \tconsole.log(status);\r\n\t\t\t    }\r\n\t\t}\r\n\t});\r\n};</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a function that is set up as  follows</p>\n\n<pre><code>function mainFunction() {\n      function subFunction() {\n            var str = \"foo\";\n            return str;\n      }\n}\n\nvar test = mainFunction();\nalert(test);\n</code></pre>\n\n<p>To my logic, that alert should return 'foo', but instead it returns undefined. What am I doing wrong?</p>\n\n<p><strong>UPDATE</strong>: Here's my actual code (it's a function for reverse-geocoding with the Google API)</p>\n\n<pre><code>function reverseGeocode(latitude,longitude){\n    var address = \"\";\n    var country = \"\";\n    var countrycode = \"\";\n    var locality = \"\";\n\n    var geocoder = new GClientGeocoder();\n    var latlng = new GLatLng(latitude, longitude);\n\n     return geocoder.getLocations(latlng, function(addresses) {\n     address = addresses.Placemark[0].address;\n     country = addresses.Placemark[0].AddressDetails.Country.CountryName;\n     countrycode = addresses.Placemark[0].AddressDetails.Country.CountryNameCode;\n     locality = addresses.Placemark[0].AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.LocalityName;\n     return country;\n    });   \n   }\n</code></pre>\n",
            "last_activity_date": 1414295378,
            "question_id": 2611980,
            "score": 19,
            "tags": [
                "javascript",
                "function",
                "nested",
                "return-value",
                "return"
            ],
            "title": "Return value from nested function in Javascript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p><a href=\"http://stackoverflow.com/questions/1224793/javascript-serialization-of-datetime-in-asp-net-is-not-giving-a-javascript-date-o/1227749#1227749\">link text</a>\nThis example works</p>\n\n<pre><code>JavaScriptSerializer serializer = new JavaScriptSerializer();\n\nDateTime dt = DateTime.Now;\nDateTime dt1 = dt;\n\nstring jsonDateNow = serializer.Serialize(dt1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p><strong>the answer is:</strong>  you can't use JavaScriptConverter this way... it doesn't have the capabilities.</p>\n\n<p>but for reference:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/206384/how-to-format-json-date\">http://stackoverflow.com/questions/206384/how-to-format-json-date</a>\n<a href=\"http://blog.stevenlevithan.com/archives/date-time-format\" rel=\"nofollow\">http://blog.stevenlevithan.com/archives/date-time-format</a></p>\n\n<p>If you care, what I ended up doing was adding a method to the javascript string prototype to make this easier for me in code:</p>\n\n<pre><code>String.prototype.dateFromJSON = function () {\n    return eval(this.replace(/\\/Date\\((\\d+)\\)\\//gi, \"new Date($1)\"));\n};\n</code></pre>\n\n<p>this is still painful to use in the meat of the code because you have to constantly call dateFromJSON() all over the place... which is dumb.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Actually there is an ugly way, create a JavaScriptConverter for the container (Person/Article/Whatever) class</p>\n\n<p>Container: </p>\n\n<pre><code>public class Article\n{\n    public int Id { get; set; }\n    public string Title { get; set; }\n    public DateTime Date { get; set; }\n}\n</code></pre>\n\n<p>Converter:</p>\n\n<pre><code>public class ArticleJavaScriptConverter : JavaScriptConverter\n{\n    public override IEnumerable&lt;Type&gt; SupportedTypes\n    {\n        get { return new Type[] { typeof(Article) }; }\n    }\n\n    public override object Deserialize(\n        IDictionary&lt;string, object&gt; dictionary, \n        Type type, JavaScriptSerializer serializer)\n    {\n        DateTime date = \n            DateTime.ParseExact(dictionary[\"date\"] as string, \"s\", null);\n\n        return\n            new Article()\n            {\n                Id = (int)dictionary[\"id\"],\n                Title = dictionary[\"title\"] as string,\n                Date = date\n            };\n    }\n\n    public override IDictionary&lt;string, object&gt; Serialize(\n        object obj, JavaScriptSerializer serializer)\n    {\n        var article = obj as Article;\n        var result = new Dictionary&lt;string,object&gt;();\n\n        if (article != null)\n        {\n            this.SerializeInternal(article, result);\n        }\n\n        return result;\n    }\n\n    private void SerializeInternal(\n        Article article, IDictionary&lt;string, object&gt; result)\n    {\n        result.Add(\"id\", article.Id);\n        result.Add(\"title\", article.Title);\n        result.Add(\"date\", article.Date.ToString(\"s\"));\n    }\n}\n</code></pre>\n\n<p>Happily ever after...</p>\n\n<pre><code>var serializer = new JavaScriptSerializer();\n\nserializer.RegisterConverters(\n    new JavaScriptConverter[] {\n        new ArticleJavaScriptConverter() \n    });\n\nvar expected = new Article()\n{\n    Id = 3,\n    Title = \"test\",\n    Date = DateTime.Now\n};\n\n\n// {\"id\":3,\"title\":\"test\",\"date\":\"2009-12-02T05:12:00\"}\nvar json = serializer.Serialize(article);\n\nvar actual = serializer.Deserialize&lt;Article&gt;(json);\n\nAssert.AreEqual(expected, actual);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I know this looks really dumb, but so far I haven't found anything better...I'm still looking though, so comments are welcome.</p>\n\n<pre><code>new JavaScriptSerializer().Serialize(DateTime.Now).Replace(\"\\\"\\\\/\", \"\").Replace(\"\\\\/\\\"\", \"\");\n</code></pre>\n\n<p>This just removes the quotes and slashes, so the output is just <code>Date(123456789)</code> which, though technically not a literal, is understood by the browser as an actual date value and not a string.</p>\n\n<p>In JSON, it would look like this</p>\n\n<pre><code>{\"myDate\":Date(123456789)}\n</code></pre>\n\n<p>A hack, I suppose. If this is actually implemented in production code, I'd personally wrap it up, either in an extension method like FormatForDates() or wrap the serializer itself as in a decorator pattern...or in this case, an \"undecorator.\"  I must really be missing the boat as to why this seems so hard. I just want to render a date, people! :-p</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>JavaScriptSerializer can definitely do what you desire.</p>\n\n<p>It's possible to customize the serialization performed by JavaScriptSerializer for any type by creating a custom converter and registering it with the serializer. If you have a class called Person, we could create a converter like so:</p>\n\n<pre><code>public class Person\n{\n    public string Name { get; set; }\n    public DateTime Birthday { get; set; }\n}\n\npublic class PersonConverter : JavaScriptConverter\n{\n    private const string _dateFormat = \"MM/dd/yyyy\";\n\n    public override IEnumerable&lt;Type&gt; SupportedTypes\n    {\n        get\n        {\n            return new[] { typeof(Person) };\n        }\n    }\n\n    public override object Deserialize(IDictionary&lt;string, object&gt; dictionary, Type type, JavaScriptSerializer serializer)\n    {\n        Person p = new Person();\n        foreach (string key in dictionary.Keys)\n        {\n            switch (key)\n            {\n                case \"Name\":\n                    p.Name = (string)dictionary[key];\n                    break;\n\n                case \"Birthday\":\n                    p.Birthday = DateTime.ParseExact(dictionary[key] as string, _dateFormat, DateTimeFormatInfo.InvariantInfo);\n                    break;\n            }\n        }\n        return p;\n    }\n\n    public override IDictionary&lt;string, object&gt; Serialize(object obj, JavaScriptSerializer serializer)\n    {\n        Person p = (Person)obj;\n        IDictionary&lt;string, object&gt; serialized = new Dictionary&lt;string, object&gt;();\n        serialized[\"Name\"] = p.Name;\n        serialized[\"Birthday\"] = p.Birthday.ToString(_dateFormat);\n        return serialized;\n    }\n}\n</code></pre>\n\n<p>And use it like this:</p>\n\n<pre><code>JavaScriptSerializer serializer = new JavaScriptSerializer();\nserializer.RegisterConverters(new[] { new PersonConverter() });\n\nPerson p = new Person\n            {\n                Name = \"User Name\",\n                Birthday = DateTime.Now\n            };\n\nstring json = serializer.Serialize(p);\nConsole.WriteLine(json);\n// {\"Name\":\"User Name\",\"Birthday\":\"12/20/2010\"}\n\nPerson fromJson = serializer.Deserialize&lt;Person&gt;(json);\nConsole.WriteLine(String.Format(\"{0}, {1}\", fromJson.Name, fromJson.Birthday)); \n// User Name, 12/20/2010 12:00:00 AM\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Here's an enhancement for the accepted answer.</p>\n\n<p>Using generics, passing a type and using reflection to determine the datetime properties.</p>\n\n<pre><code>public class ExtendedJavaScriptConverter&lt;T&gt; : JavaScriptConverter where T : new()\n{\n    private const string _dateFormat = \"dd/MM/yyyy\";\n\n    public override IEnumerable&lt;Type&gt; SupportedTypes\n    {\n        get\n        {\n            return new[] { typeof(T) };\n        }\n    }\n\n    public override object Deserialize(IDictionary&lt;string, object&gt; dictionary, Type type, JavaScriptSerializer serializer)\n    {\n        T p = new T();\n\n        var props = typeof(T).GetProperties();\n\n        foreach (string key in dictionary.Keys)\n        {\n            var prop = props.Where(t =&gt; t.Name == key).FirstOrDefault();\n            if (prop != null)\n            {\n                if (prop.PropertyType == typeof(DateTime))\n                {\n                    prop.SetValue(p, DateTime.ParseExact(dictionary[key] as string, _dateFormat, DateTimeFormatInfo.InvariantInfo), null);\n\n                }\n                else\n                {\n                    prop.SetValue(p, dictionary[key], null);\n                }\n            }\n        }                  \n\n        return p;\n    }      \n\n    public override IDictionary&lt;string, object&gt; Serialize(object obj, JavaScriptSerializer serializer)\n    {\n        T p = (T)obj;\n        IDictionary&lt;string, object&gt; serialized = new Dictionary&lt;string, object&gt;();\n\n        foreach (PropertyInfo pi in typeof(T).GetProperties())\n        {\n            if (pi.PropertyType == typeof(DateTime))\n            {\n                serialized[pi.Name] = ((DateTime)pi.GetValue(p, null)).ToString(_dateFormat);\n            }\n            else\n            {\n                serialized[pi.Name] = pi.GetValue(p, null);\n            }\n\n        }\n\n        return serialized;\n    }\n\n    public static JavaScriptSerializer GetSerializer() \n    {\n        JavaScriptSerializer serializer = new JavaScriptSerializer();\n        serializer.RegisterConverters(new[] { new ExtendedJavaScriptConverter&lt;T&gt;() });\n\n        return serializer;\n    }\n}\n</code></pre>\n\n<p>Usage is simple:</p>\n\n<pre><code> JavaScriptSerializer serialiser = ExtendedJavaScriptConverter&lt;Task&gt;.GetSerializer();\n</code></pre>\n\n<p>Hope that helps someone.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>There is actually a nice clean way to do this without knowing the wrapper type or even needing a wrapper object.</p>\n\n<p>You use JavaScriptConverter to convert your object to a Uri that also implements IDictionary. JavaScriptSerializer will serialize this as a string.</p>\n\n<p>This hack is described here:</p>\n\n<p><a href=\"http://blog.calyptus.eu/seb/2011/12/custom-datetime-json-serialization/\">http://blog.calyptus.eu/seb/2011/12/custom-datetime-json-serialization/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I realise this is a bit late for an answer but I recently came upon a really nice solution to this problem.  It's documented in this blog post just in case anyone else finds it useful: <a href=\"http://icanmakethiswork.blogspot.co.uk/2012/04/beg-steal-or-borrow-decent-javascript.html\" rel=\"nofollow\">http://icanmakethiswork.blogspot.co.uk/2012/04/beg-steal-or-borrow-decent-javascript.html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have an object, it has a DateTime property... I want to pass that object from an .ashx handler back to a webpage via AJAX/JSON... I don't want to use 3rd party controls... </p>\n\n<p>when I do this:</p>\n\n<pre><code>  new JavaScriptSerializer().Serialize(DateTime.Now);\n</code></pre>\n\n<p>I get this:</p>\n\n<pre><code>  \"\\/Date(1251385232334)\\/\"\n</code></pre>\n\n<p>but I want \"8/26/2009\" (nevermind localization... my app is very localized, so my date formatting assumptions are not up for debate in this question).  If I make/register a custom converter</p>\n\n<pre><code>public class DateTimeConverter : JavaScriptConverter\n{\n    public override IEnumerable&lt;Type&gt; SupportedTypes\n    {\n        get { return new List&lt;Type&gt;() { typeof(DateTime), typeof(DateTime?) }; }\n    }\n\n    public override IDictionary&lt;string, object&gt; Serialize(object obj, JavaScriptSerializer serializer)\n    {\n        Dictionary&lt;string, object&gt; result = new Dictionary&lt;string, object&gt;();\n        if (obj == null) return result;\n        result[\"DateTime\"] = ((DateTime)obj).ToShortDateString();\n        return result;\n    }\n\n    public override object Deserialize(IDictionary&lt;string, object&gt; dictionary, Type type, JavaScriptSerializer serializer)\n    {\n        if (dictionary.ContainsKey(\"DateTime\"))\n            return new DateTime(long.Parse(dictionary[\"DateTime\"].ToString()), DateTimeKind.Unspecified);\n        return null;\n    }\n}\n</code></pre>\n\n<p>then I get this result (since the return value of the custom serialize method is a dictionary):</p>\n\n<pre><code>{\"DateTime\":\"8/27/2009\"}\n</code></pre>\n\n<p>so now in my Javascript, instead of doing</p>\n\n<pre><code>somePerson.Birthday\n</code></pre>\n\n<p>I have to do</p>\n\n<pre><code>somePerson.Birthday.DateTime \n\n  or\n\nsomePerson.Birthday[\"DateTime\"]\n</code></pre>\n\n<p>how can I make the custom converter return a direct string so that I can have clean Javascript?</p>\n",
            "last_activity_date": 1360705940,
            "question_id": 1341719,
            "score": 19,
            "tags": [
                ".net",
                "javascript",
                "ajax",
                "converter"
            ],
            "title": "Custom JavaScriptConverter for DateTime?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>What you have is a string representing a JSON serialized javascript object. You need to deserialize it back a javascript object before being able to loop through its properties. Otherwise you will be looping through each individual character of this string.</p>\n\n<pre><code>var resultJSON = '{\"FirstName\":\"John\",\"LastName\":\"Doe\",\"Email\":\"johndoe@johndoe.com\",\"Phone\":\"123 dead drive\"}';\nvar result = $.parseJSON(resultJSON);\n$.each(result, function(k, v) {\n    //display the key and value pair\n    alert(k + ' is ' + v);\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/t4GNW/\">Live demo</a>.</p>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<pre><code>   var obj = $.parseJSON(result);\n   for (var prop in obj) {\n      alert(prop + \" is \" + obj[prop]);\n   }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The best and perfect solution for this issue, I tried the jquery with the ajax success responses but it doesn't work so I invented my own and finally it works!</p>\n\n<p><a href=\"http://www.ac-base.org/javascript-get-json-value-by-key.html\" rel=\"nofollow\">Click here to see the full solution</a></p>\n\n<pre><code>var rs = '{\"test\" : \"Got it perfect!\",\"message\" : \"Got it!\"}';\neval(\"var toObject = \"+ rs + \";\");\nalert(toObject.message);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can get the values directly in case of one array like this:</p>\n\n<pre><code> var resultJSON = '{\"FirstName\":\"John\",\"LastName\":\"Doe\",\"Email\":\"johndoe@johndoe.com\",\"Phone\":\"123 dead drive\"}';\n    var result = $.parseJSON(resultJSON);\n    result['FirstName']; // return 'John'\n    result['LastName'];  // return ''Doe'\n    result['Email']; // return 'johndoe@johndoe.com'\n    result['Phone'];  // return '123'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This should work for a Json returned string, it will also work for an associative array of data</p>\n\n<pre><code>for (var key in data)\n     alert(key + ' is ' + data[key]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking to loop through a JSON array and display the key and value.  Should be a simplified version of the following post but I don't seem to have the syntax correct:\n<a href=\"http://stackoverflow.com/questions/3030321/jquery-each-loop-with-json-array\">Jquery each loop with json array</a>  I also saw this post <a href=\"http://stackoverflow.com/questions/5572708/get-name-of-key-in-key-value-pair-in-json-using-jquery\">Get name of Key in Key/Value Pair in JSON using jQuery?</a> but it also seemed like lots of code for a simple activity.</p>\n\n<p>This illustrates what I'm looking for (but doesn't work):</p>\n\n<pre><code>var result = '{\"FirstName\":\"John\",\"LastName\":\"Doe\",\"Email\":\"johndoe@johndoe.com\",\"Phone\":\"123 dead drive\"}';\n$.each(result, function(k, v) {\n             //display the key and value pair\n            alert(k + ' is ' + v);\n        });\n</code></pre>\n\n<p>No manditory jQuery requirement, but it is available.  I can also restructure the JSON if it cuts down the code required.</p>\n",
            "last_activity_date": 1393810816,
            "question_id": 7861032,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "json"
            ],
            "title": "loop and get key/value pair for JSON array using jQuery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This posting seems to cover the reflow vs repaint performance issues</p>\n\n<p><a href=\"http://www.stubbornella.org/content/2009/03/27/reflows-repaints-css-performance-making-your-javascript-slow/\" rel=\"nofollow\">http://www.stubbornella.org/content/2009/03/27/reflows-repaints-css-performance-making-your-javascript-slow/</a></p>\n\n<p>As for definitions, from that post:</p>\n\n<blockquote>\n  <p>A repaint occurs when changes are made\n  to an elements skin that changes\n  visibility, but do not affect its\n  layout. </p>\n  \n  <p>Examples of this include\n  outline, visibility, or background\n  color. According to Opera, repaint is\n  expensive because the browser must\n  verify the visibility of all other\n  nodes in the DOM tree.</p>\n  \n  <p>A reflow is\n  even more critical to performance\n  because it involves changes that\n  affect the layout of a portion of the\n  page (or the whole page).</p>\n</blockquote>\n\n<p>Learn which css-properties effect repaint and review at <a href=\"http://csstriggers.com\" rel=\"nofollow\">http://csstriggers.com</a></p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>In my options, repaint is just affect the DOM itself, but reflow affect the whole page.</p>\n\n<p>Repaint occur when some changes which only its skin styles, such as color and vibility.</p>\n\n<p>Reflow occur when the page of DOM changes its layout.</p>\n\n<p>Recently I found a site can search which attribute will trigger repaint or reflow.\n<a href=\"http://csstriggers.com/\" rel=\"nofollow\">http://csstriggers.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm a little unclear on the difference between reflow + repaint (if there's any difference at all)</p>\n\n<p>Seems like reflow might be shifting the position of various DOM elements, where repaint is just rendering a new object.  E.g. reflow would occur when removing an element and repaint would occur when changing its color.</p>\n\n<p>Is this true?</p>\n",
            "last_activity_date": 1420846489,
            "question_id": 2549296,
            "score": 18,
            "tags": [
                "javascript",
                "performance",
                "repaint",
                "reflow"
            ],
            "title": "What&#39;s the difference between reflow and repaint?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It has nothing to do with modern browsers.  It has to do with implementing the ECMA standard.  You can't just change how a certain function performs even if there is a faster way.  It could break existing code.</p>\n\n<p>The Math.Floor has to account for a lot of different scenarios of handling different types.  Could they have made different scenarios faster by taking short cuts as you described?  Maybe they could, but that might have broken other scenarios.  Just because something on the surface looks small, doesn't mean that there isn't an iceberg underneath.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>The primary reason <code>Math.floor</code> is slower (where it actually is--in some tests I've done it's faster) is that it involves a function call. Older JavaScript implementations couldn't inline function calls. Newer engines can inline the call, or at least make the property lookup faster, but they still need a guard condition in case you (or some other script) overwrote the <code>Math.floor</code> function. The overhead is minimal though, so there's not much difference in speed.</p>\n\n<p>More importantly though, as was mentioned in several comments, <strong>the other methods are not equivalent</strong>. They all work by doing bitwise operations. The bitwise operators automatically convert their operands to 32-bit integers by truncating the number. That's fine if the number fits in 32 bits, but JavaScript numbers are 64-bit floats, which could be much larger than 2147483647.</p>\n\n<p>They also give a different result for negative numbers, since converting to integers truncates and <code>Math.floor</code> always rounds down. For example, <code>Math.floor(-2.1) === -3</code>, but <code>(-2.1) | (-2.1) === -2</code>.</p>\n\n<p>If you <strong>know</strong> you are only dealing with positive numbers less than 2147483648, and you need to squeeze every bit of performance out of your code in older browsers (Make sure it's actually the bottleneck first. It probably isn't.), I would use an even simpler method: <code>x|0</code>. It doesn't evaluate the variable twice, and it works even if <code>x</code> is an expression (just be sure to put it in parentheses so you don't run into precedence issues).</p>\n",
                    "is_accepted": false,
                    "score": 27
                }
            ],
            "body": "<p>I'm generally not a fan of microbenchmarks. But this one has a very interesting result.<br>\n<a href=\"http://ernestdelgado.com/archive/benchmark-on-the-floor/\">http://ernestdelgado.com/archive/benchmark-on-the-floor/</a>  </p>\n\n<p>It suggests that <code>Math.floor</code> is the SLOWEST way to calculate floor in Javascript. <code>~~n</code>, <code>n|n</code>, <code>n&amp;n</code> all being faster.<br>\nThis seems pretty shocking as I would expect that people implementing Javascript in today's modern browsers would be some pretty smart people. </p>\n\n<p>Does floor do something important that the other methods fail to do? Is there any reason to use it?</p>\n",
            "last_activity_date": 1338921587,
            "question_id": 2526682,
            "score": 18,
            "tags": [
                "javascript",
                "optimization"
            ],
            "title": "Why is Javascript&#39;s Math.floor the slowest way to calculate floor in Javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Try putting your javascript inside a CDATA block like this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n&lt;![CDATA[\n// content of your Javascript goes here\n]]&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>which should make it pass validation.  To be extra safe you can add Javascript comments around the CDATA tags to hide them from older browsers who don't understand the CDATA tag:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n/* &lt;![CDATA[ */\n// content of your Javascript goes here\n/* ]]&gt; */\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>i would try:</p>\n\n<pre><code>var dataString = \"email=\"+username+\"&amp;amp;password=\"+password+\"&amp;amp;remember=\"+remember;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Note: before one goes blindly wrapping text in CDATA blocks, be aware that CDATA's purpose is <strong>NOT</strong> for making invalid characters valid.</p>\n\n<p>See: <a href=\"http://www.flightlab.com/~joe/sgml/cdata.html\">http://www.flightlab.com/~joe/sgml/cdata.html</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>\"\\u0026\" works!</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Sometimes <code>\\u0026</code>, <code>&amp;#38</code>, <code>%26</code>, <code>&amp;amp</code>, or <code>&lt;![CDATA[ ... ]]&gt;</code> work for ampersands in script blocks in xhtml.<br>\nI would like to ask why we should want that kind of a restriction (blink loyalty to the errors in the design of SGML) which also prevents <code>&amp;nbsp</code>, <code>mathml</code>, <code>target</code>, and <code>nested xml</code> from working.<br>\n Why can't we simply say that in a script block no tags or other SGML stuff gets recognized? Why can't xhtml let targets work?<br>\nI don't see an advantage to SGML that outweigh the disadvantages. Right now, even though html5 is somewhat available, xhtml is the validator that catches the most developer errors. Let's fix xml without historical regard to its origins. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to pass a dataString to to an ajax call using JQuery.  In the call, I construct the get parameters and then send them to the php page on the receiving end.  The trouble is that the data string has ampersands in them and the HTML strict validator is chocking on it.</p>\n\n<p>Here is the code:</p>\n\n<pre><code>$(document).ready(function(){\n\t$(\"input#email\").focus();\n\t$('#login_submit').submit(function(){\n\t\tvar username = $('input#email').val();\n\t\tvar password = $('input#password').val();\n\t\tvar remember = $('input#remember').attr(\"checked\");\n\t\tvar dataString = \"email=\"+username+\"&amp;password=\"+password+\"&amp;remember=\"+remember;\n\t\t$.post('login.php', dataString, function(data) {\n\t\t\tif (data == 'Login Succeeded.') {\n\t\t\t\tlocation.reload(true);\n\t\t\t} else {\n\t\t\t\t$(\"input#email\").focus();\n\t\t\t\t$(\"#login_msg\").html(data).effect(\"pulsate\", {times: 2}, 1000);\t\n\t\t\t}\n\t\t});\t\t\t\n\t\treturn false;\n\t});\n});\n</code></pre>\n\n<p>and here is an example of the validator message: cannot generate system identifier for general entity \"password\".</p>\n\n<pre><code>var dataString = \"email=\"+username+\"&amp;password=\"+password+\"&amp;remember=\"+rememb\u2026\n</code></pre>\n\n<p>(in the validator the \"p\" after the first ampersand is marked red indicating the point of the failure).</p>\n",
            "last_activity_date": 1351363511,
            "question_id": 355043,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "w3c-validation"
            ],
            "title": "How do I escape an ampersand in a javascript string so that the page will validate strict?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The core issue can be seen here <a href=\"http://jsfiddle.net/Raynos/UxrVQ/\">http://jsfiddle.net/Raynos/UxrVQ/</a> I have yet to find out why IE overwrites window.hiya without checking. </p>\n\n<p><strong>[Edit]</strong></p>\n\n<p>From the specification. Page 38:</p>\n\n<blockquote>\n  <p>For each VariableDeclaration or\n  VariableDeclarationNoIn in the code,\n  create a property of the variable\n  object whose name is the Identifier in\n  the VariableDeclaration or\n  VariableDeclarationNoIn, whose value\n  is undefined and whose attributes are\n  determined by the type of code. If\n  there is already a property of the\n  variable object with the name of a\n  declared variable, the value of the\n  property and its attributes are not\n  changed.</p>\n</blockquote>\n\n<p>A possible explanation could be that in global scope IE differentiates between the <code>window</code> object and the <code>variable object</code> for global scope when declaring variables. Alternatively setting a property on the <code>window</code> object directly might not set the same property on the <code>variable</code> object. If you can find a formal JScript specification or have the source of IE lying around then we can find out exactly what the quirk is.</p>\n\n<p><strong>[/Edit]</strong></p>\n\n<p>Thanks to @TimDown &amp; @JuanMendes pointing out that's an issue with whether writing a property to the window object is a variable declaration. </p>\n\n<p><strong>The Issue:</strong></p>\n\n<p>variable declaration gets moved to the top of the block. Even if the code is dead. In IE for some reason it will declare hiya as a local variable even though it classes with the property of the same name stored on window.</p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>What's happening is that your declaring a variable called hiya. The var statement automatically gets removed to the top of the block. An if statement isn't a block, a function is. So event if the code never gets run in the block the variable still gets declared.</p>\n\n<p>In firefox it'll recognise that window.hiya is a declaration of hiya.</p>\n\n<p>In IE the declaration in the second script overwrites it</p>\n\n<p><strong>What it's actaully doing</strong></p>\n\n<p>In firefox:</p>\n\n<pre><code>// script block 1\nvar hiya; // window.hiya counts as a declaration\nwindow.hiya = \"hiya\"; // set\n\n// script block 2\nif (false) hiya = 1;\ndocument.write(...)\n</code></pre>\n\n<p>In IE:</p>\n\n<pre><code>// script block 1\nwindow.hiya = \"hiya\";\n\n// script block 2\nvar hiya; // redeclared here because window.hiya \"isn't\" a declaration\nif (false) hiya = 1; \ndocument.write(...)\n</code></pre>\n\n<p>The solution is simply namespacing. Your using the same name in two places and accessing it in two different names. Either use different names or use closures to give local scope.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>What you encountered is due to:</p>\n\n<ol>\n<li><code>var</code> being a statement</li>\n<li>There's no block scope in JS</li>\n<li>Statements get executed before the code runs</li>\n</ol>\n\n<p>So what happens is that JavaScript will execute the <code>var</code> statement before before anything else, but it will not evaluate the assignment expression, therefor <code>hiya</code> will default to the value of <code>undefined</code>.</p>\n\n<p>As Raynos already stated IE will execute each scripts on its own, therefore the behavior described above, will results in <code>hiya</code> being undefined.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>IE is dumb, it doesn't recognize that <code>window.varName</code> and <code>var varName</code> access the same variable in some cases. </p>\n\n<p>When a new script tag is encountered, it first initializes all the variables declared with var. It doesn't run the var statement (the part that would initialize it to \"hiya\"). It just initializes it to undefined. It won't do that if it was previously declared with var though.</p>\n\n<p>If your code was in a single script tag, this error would not happen. Also, if the first declaration of hiya was done with var, this error also wouldn't happen.</p>\n\n<p>Specifically, in your second script tag, IE first looks for var statements, it finds a var <code>var hiya = 1</code>; Then it says, hiya hasn't been initialized with a var statements previously (IE being dumb, other browsers recognize that window.hiya does the same thing) and initializes hiya, overwriting window.hiya before executing any code.</p>\n\n<p>Possible solutions:</p>\n\n<ul>\n<li>Keep your code within the same script tag</li>\n<li>Do not initialize variables with window.hiYa</li>\n<li>If you don't control over one of the scripts, make sure the script that uses var comes first</li>\n</ul>\n\n<p>Last note to clarify what JS parsers do to your code. When the JS parser sees your code, it transforms it into the following:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;body&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            window.hiya = 'hiya';\n        &lt;/script&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            // IE is dumb, it doesn't recognize that hiya is already \n            // defined as window.hiya, so it's initialized to undefined here\n            var hiya;\n            if( false ) {\n                hiya = 1;\n            }\n            document.write( \"typeof(hiya) = \"+ typeof(hiya) );\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>So if you put everything into one script tag, this is what the code would be (after the JS engine moved the var statements to the top), so you can see that there is no way the IE could mess it up, since your <code>window.hiya</code> assignment would be after the var that was moved to the top.</p>\n\n<pre><code>&lt;html&gt;\n    &lt;body&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            var hiya;\n            window.hiya = 'hiya';\n            if( false ) {\n                hiya = 1;\n            }\n            document.write( \"typeof(hiya) = \"+ typeof(hiya) );\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                }
            ],
            "body": "<p>When running the following block of code, FF and Chrome output <code>typeof(hiya) = string</code> while IE7/8 output <code>typeof(hiya) = undefined</code>.</p>\n\n<pre><code>&lt;html&gt;\n    &lt;body&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            window.hiya = 'hiya';\n        &lt;/script&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            if( false ) {\n                var hiya = 1;\n            }\n            document.write( \"typeof(hiya) = \"+ typeof(hiya) );\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Each of the following makes the problem go away:</p>\n\n<ul>\n<li>Combining everything into a single <code>&lt;script&gt;</code> block.</li>\n<li>Removing the <code>if</code> block.</li>\n<li>Renaming <code>var hiya = 1</code> to <code>var hiya2 = 1</code>.</li>\n<li>Renaming <code>var hiya = 1</code> to <code>window.hiya = 1</code>.</li>\n<li>Renaming <code>var hiya = 1</code> to <code>hiya = 1</code>.</li>\n</ul>\n\n<p><strong>What is happening?</strong> Is there a scoping bug in IE?</p>\n",
            "last_activity_date": 1344618331,
            "question_id": 4606847,
            "score": 17,
            "tags": [
                "javascript",
                "internet-explorer",
                "variable-scope",
                "browser-bugs"
            ],
            "title": "Why does IE nuke window.ABC variables?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The fundamental problem is that you do not know how long the request is going to take.</p>\n\n<p>For the progress bar, you need to set a percentage, or a number of completed steps.</p>\n\n<p>If you do not want the progress bar to just jump from 0 to 100, you need to have some way to measure the completion rate before the request is finished.</p>\n\n<p>If you can guess how long it takes, you could use a timer to have it incrementally advance to, say, 90%, automatically, and when the server response comes it, set it to 100%. Of course, that is faking it quite a bit.</p>\n\n<p>If you have more than one request, you could use the number of completed requests as a percentage. If it makes sense, you could break down your single request into multiple, but carefully think about the impact this has on network traffic and response times. Don't just do it for the sake of the progress bar.</p>\n\n<p>If the request really takes long, you could fire off additional requests to the server to inquire the progress. But that could mean a lot of work server-side.</p>\n\n<p>Sorry, but progress bars are hard...</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Edit: For posterity I've left my previous answer below, but seeing as how it doesn't actually answer the question being asked I'm providing a new answer.</p>\n\n<p>Some of the comments on the question have pointed out newer methods of accomplishing this. Thanks to HTML5 and the newer XHR2 it's possible to put callbacks on the progress of AJAX requests. This involves you adding event listeners to the XHR object and providing callbacks to the appropriate properties. <a href=\"http://www.dave-bond.com/blog/2010/01/JQuery-ajax-progress-HMTL5/\" rel=\"nofollow\">This</a> page has good examples for both upload and download and <a href=\"https://github.com/englercj/jquery-ajax-progress\" rel=\"nofollow\">this git repo</a> looks good and has been updated recently.</p>\n\n<p>Also, if you're really interested in digging into the XHR and overrides, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest?redirectlocale=en-US&amp;redirectslug=DOM/XMLHttpRequest/Using_XMLHttpRequest#Monitoring_progress\" rel=\"nofollow\">this Mozilla doc</a> post should help out a lot as well. And in fact, this doc post seems to be what the git repo I mentioned was based off of.</p>\n\n<p>Old Answer:\nThis is an age old problem for people writing web apps and while Thilo was right, this is no longer as difficult as it once was. The best (imo) current solution is to \"chunk\" the files you're uploading and update your progress bar every time you upload a chunk. <a href=\"http://stackoverflow.com/questions/7853467/uploading-a-file-in-chunks-using-html5\">This SO question</a> and it's answer is a good place to start understanding this concept and even how to apply it to your situation.</p>\n\n<p>But suffice it to say, what you'll do is take the file you're uploading and split it up into smaller pieces on the client side. There are several potential benefits to this, but the primary one in this case is that it allows you to know every time a specified percentage of the file has been uploaded to the server. And obviously every time a chunk is uploaded you can update the progress bar accordingly.</p>\n\n<p>Chunking the file like this also allows you to effectively \"pause\" or \"resume\" uploads since you can upload different parts of a file at any given time.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I faced this situation in our company's in-house app. It was a critical app and we needed to show progress to the user. So, despite the fact that @Thilo mentioned about network traffic, we had to implement it so that the user could be informed when the long running process was finished and how it progressed over time. </p>\n\n<p>We broke it down to small pieces.</p>\n\n<ol>\n<li><p>Spawn a thread on the server-side code to run the particular process. For ASP.Net it was like this: </p>\n\n<p><code>System.Threading.ThreadPool.QueueUserWorkItem(AddressOf MyProcessRoutine, objectParameter)</code></p></li>\n<li><p>Within this \"<em>MyProcessRoutine</em>\" run your long-running code and update a static variable for counter or persist in database, for each step you want to monitor.</p></li>\n<li><p>Create another function routine which keeps checking this counter and returns the current value. For example: <code>Public Shared Function CheckStatus() As Integer</code></p></li>\n<li><p>From your client-side code keep polling this routine say every 5 seconds (depending on how much network traffic you can afford and how much precision you want. \nFor example: <code>timer = setInterval(\"MyWebService.CheckStatus();\", 500);</code></p></li>\n<li><p>In your client-side code, use this returned value (counter) to update your progress bar.</p></li>\n</ol>\n\n<p>Besides just a counter, you can also return an object containing relevant details like record-id to show the user about where the process is currently at.</p>\n\n<p>Make sure you handle the thread very carefully, handle all possible exceptions and have proper cleanup.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>i don't use jquery,but this maybe can help you.</p>\n\n<p><strong>It's a Animated Ajax Progress Bar with Fake Fallback.</strong></p>\n\n<p>i just pass a fake size knowing the average size of my scripts</p>\n\n<p>so if my scripts are around 50-100kb i set the fake size to 150kb.</p>\n\n<p>if the computed length is not available i use the fake size.</p>\n\n<p>in this script i added also a extra check that the bar size is always smaller than the container.</p>\n\n<p>simply by multiplying the fake-size *2 .. if its smaller than the loaded data.</p>\n\n<p>to make things look nice i added also a css3 transition effect so that it delays 700ms.</p>\n\n<p>this animation delay adds everything you need to make the progress bar look real.</p>\n\n<p>copy &amp; paste into a html file and check with a modern browser like chrome.</p>\n\n<p>replace <em>YOURSITE</em> with a ajax content site... or whatever. </p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=\"utf-8\"&gt;\n&lt;title&gt;Ajax Progress&lt;/title&gt;\n&lt;style&gt;\n#progress{\n width:300px;\n height:20px;\n border:1px solid rgba(0,0,0,0.5);\n}\n#bar{\n width:0%;\n height:20px;\n background-color:green;\n -webkit-transition:width 700ms ease;   \n}\n&lt;/style&gt;\n&lt;script&gt;\nvar\npb,\nfakeSize=100000,//~100kb\nprogress=function(e){\n fakeSize=(e.loaded&gt;fakeSize?(fakeSize*2):fakeSize);//Bonus\n var tot=(e.lengthComputable?e.total:fakeSize);\n pb.style.width=(100/tot*e.loaded)+'%';\n},\nonloaded=function(e){\n pb.style.width='100%';\n},\najax=function(a,c){\n c=new XMLHttpRequest;\n c.open('GET',a);\n c.onprogress=progress;\n c.onload=onloaded;\n c.send()\n};\nwindow.onload=function(){\n pb=document.getElementById('bar');\n ajax('YOURSITE');\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"progress\"&gt;&lt;div id=\"bar\"&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>you basically just need to use the progress function in jquery and then set the bar to 100% when script has loaded.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to show progress with jquery ui progress bar when an ajax request fires and when it finishes. The problem is I don't know how to set values for the progress bar depending on the progress of the ajax request. Here's a code to start with:</p>\n\n<pre><code>function ajaxnews()\n    {\n        $('.newstabs a').click(function(e){\n            var section = $(this).attr('id');\n            var url = base + 'news/section/' + section;\n\n            $.ajax({\n                url : url,\n                dataTye : 'html',\n                start : loadNews,\n                success : fillNews\n            });\n        });\n    }\n\n\n\n// start callback functions\n   function loadNews()\n   {\n\n       $('#progressbar').fadeIn();\n       $('#progressbar').progressbar({ //how shoud I set the values here});\n   }\n\n   function fillNews()\n   {\n    $('#progressbar').progressbar('option', 'value', ?? /* how do I find this?*/);   \n    $('#progressbar').fadeOut();\n   }\n</code></pre>\n",
            "last_activity_date": 1411796739,
            "question_id": 2474528,
            "score": 17,
            "tags": [
                "javascript",
                "jquery-ui",
                "jquery"
            ],
            "title": "showing progressbar progress with ajax request"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you're happy to use jQuery, it's very, very simple.</p>\n\n<pre><code>$('#firstSelect option:selected').appendTo('#secondSelect');\n</code></pre>\n\n<p>Where #firstSelect is the ID of the select box.</p>\n\n<p>I've included a working example here:</p>\n\n<p><a href=\"http://jsbin.com/aluzu\">http://jsbin.com/aluzu</a> (to edit: <a href=\"http://jsbin.com/aluzu/edit\">http://jsbin.com/aluzu/edit</a>)</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>This code assumes that you have an anchor or that will trigger to movement when it is clicked:</p>\n\n<pre><code>document.getElementById('moveTrigger').onclick = function() {\n\n    var listTwo = document.getElementById('secondList');\n    var options = document.getElementById('firstList').getElementsByTagName('option');\n\n    while(options.length != 0) {\n        listTwo.appendChild(options[0]);\n    }\n\n }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>A library-independent solution:</p>\n\n<pre><code>function Move(inputControl)\n{\n  var left = document.getElementById(\"Left\");\n  var right = document.getElementById(\"Right\");\n  var from, to;\n  var bAll = false;\n  switch (inputControl.value)\n  {\n  case '&lt;&lt;':\n    bAll = true;\n    // Fall through\n  case '&lt;':\n    from = right; to = left;\n    break;\n  case '&gt;&gt;':\n    bAll = true;\n    // Fall through\n  case '&gt;':\n    from = left; to = right;\n    break;\n  default:\n    alert(\"Check your HTML!\");\n  }\n  for (var i = from.length - 1; i &gt;= 0; i--)\n  {\n    var o = from.options[i];\n    if (bAll || o.selected)\n    {\n      from.remove(i);\n      try\n      {\n        to.add(o, null);  // Standard method, fails in IE (6&amp;7 at least)\n      }\n      catch (e)\n      {\n        to.add(o); // IE only\n      }\n    }\n  }\n}\n</code></pre>\n\n<p>HTML</p>\n\n<pre><code>&lt;select id=\"Left\" multiple=\"multiple\" size=\"10\"&gt;\n  &lt;option&gt;Some&lt;/option&gt;\n  &lt;option&gt;List&lt;/option&gt;\n  &lt;option&gt;Of&lt;/option&gt;\n  &lt;option&gt;Items&lt;/option&gt;\n  &lt;option&gt;To&lt;/option&gt;\n  &lt;option&gt;Move&lt;/option&gt;\n  &lt;option&gt;Around&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;div id=\"Toolbar\"&gt;\n  &lt;input type=\"button\" value=\"&amp;gt;\" onclick=\"Move(this)\"/&gt;\n  &lt;input type=\"button\" value=\"&amp;gt;&amp;gt;\" onclick=\"Move(this)\"/&gt;\n  &lt;input type=\"button\" value=\"&amp;lt;&amp;lt;\" onclick=\"Move(this)\"/&gt;\n  &lt;input type=\"button\" value=\"&amp;lt;\" onclick=\"Move(this)\"/&gt;\n&lt;/div&gt;\n\n&lt;select id=\"Right\" multiple=\"multiple\" size=\"10\"&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>CSS (example)</p>\n\n<pre><code>select { width: 200px; float: left; }\n#Toolbar { width: 50px; float: left; text-align: center; padding-top: 30px; }\n#Toolbar input { width: 40px; }\n</code></pre>\n\n<p>Quick test FF3 and IE6 &amp; 7 only.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>How can I move items from one list box control to another listbox control using JavaScript in ASP.NET?</p>\n",
            "last_activity_date": 1258577603,
            "question_id": 204140,
            "score": 17,
            "tags": [
                "asp.net",
                "javascript",
                "listbox",
                "listbox-control"
            ],
            "title": "Moving items in Dual Listboxes"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>map = new google.maps.Map2(document.getElementById(\"map_canvas\"));\npos = new google.maps.LatLng(37.4419, -122.1419);\nmap.setCenter(pos, 13);\nmap.panTo(pos);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use the HTML5 GeoLocation API in browsers that support it.</p>\n\n<pre><code>if (navigator.geolocation) {\n  navigator.geolocation.getCurrentPosition(success, error);\n} else {\n  alert('geolocation not supported');\n}\n\nfunction success(position) {\n  alert(position.coords.latitude + ', ' + position.coords.longitude);\n}\n\nfunction error(msg) {\n  alert('error: ' + msg);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I can think of two possible options.</p>\n\n<p>First you may want to consider using the <a href=\"http://maxheapsize.com/static/html5geolocationdemo.html\" rel=\"nofollow\">GeoLocation API</a> as <a href=\"http://stackoverflow.com/questions/2851089/using-google-maps-api-how-can-we-set-the-current-location-as-the-default-set-loc/2851282#2851282\">ceejayoz suggested</a>. This is very easy to implement, and it is a fully client-side solution. To center the map using GeoLocation, simply use: </p>\n\n<pre><code>map.setCenter(new google.maps.LatLng(position.coords.latitude, \n                                     position.coords.longitude), 13);\n</code></pre>\n\n<p>... inside the <code>success()</code> callback of the GeoLocation's <code>getCurrentPosition()</code> method.</p>\n\n<p>Unfortunately only a few modern browsers are currently supporting the GeoLocation API. Therefore you can also consider using a server-side solution to resolve the IP address of the client into the user's location, using a service such as <a href=\"http://www.maxmind.com/app/geolitecity\" rel=\"nofollow\">MaxMind's GeoLite City</a>. Then you can simply geocode the city and country of the user inside the browser, using the Google Maps API. The following could be a brief example:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt; \n&lt;head&gt; \n    &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/&gt; \n    &lt;title&gt;Google Maps API Geocoding Demo&lt;/title&gt; \n    &lt;script src=\"http://maps.google.com/maps?file=api&amp;amp;v=2&amp;amp;sensor=false\"\n            type=\"text/javascript\"&gt;&lt;/script&gt; \n  &lt;/head&gt; \n  &lt;body onunload=\"GUnload()\"&gt; \n\n    &lt;div id=\"map_canvas\" style=\"width: 400px; height: 300px\"&gt;&lt;/div&gt; \n\n    &lt;script type=\"text/javascript\"&gt; \n\n    var userLocation = 'London, UK';\n\n    if (GBrowserIsCompatible()) {\n       var geocoder = new GClientGeocoder();\n       geocoder.getLocations(userLocation, function (locations) {         \n          if (locations.Placemark) {\n             var north = locations.Placemark[0].ExtendedData.LatLonBox.north;\n             var south = locations.Placemark[0].ExtendedData.LatLonBox.south;\n             var east  = locations.Placemark[0].ExtendedData.LatLonBox.east;\n             var west  = locations.Placemark[0].ExtendedData.LatLonBox.west;\n\n             var bounds = new GLatLngBounds(new GLatLng(south, west), \n                                            new GLatLng(north, east));\n\n             var map = new GMap2(document.getElementById(\"map_canvas\"));\n\n             map.setCenter(bounds.getCenter(), map.getBoundsZoomLevel(bounds));\n             map.addOverlay(new GMarker(bounds.getCenter()));\n          }\n       });\n    }\n    &lt;/script&gt; \n  &lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n\n<p>Simply replace <code>userLocation = 'London, UK'</code> with the server-side resolved address. The following is a screenshot from the above example:</p>\n\n<p><img src=\"http://i.imgur.com/H5amsah.png\" alt=\"Render google map in based on selected location\"></p>\n\n<p>You can remove the marker by getting rid of the <code>map.addOverlay(new GMarker(bounds.getCenter()));</code> line.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>that already exists in the google api:</p>\n\n<pre><code>if (GBrowserIsCompatible()) \n{   \n    var map = new google.maps.Map2(document.getElementById(\"mapdiv\"));\n\n    if (google.loader.ClientLocation) \n    {        \n        var center = new google.maps.LatLng(\n            google.loader.ClientLocation.latitude,\n            google.loader.ClientLocation.longitude\n        );\n        var zoom = 8;\n\n        map.setCenter(center, zoom);\n    }\n}\n</code></pre>\n\n<p>There are several threads with the same question...</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>An updated version of @ceejayoz's answer:</p>\n\n<pre><code>    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(success, error);\n    } else {\n        alert('geolocation not supported');\n    }\n    function error(msg) {\n        alert('error: ' + msg);\n    }\n    function success(position) {\n\n        var myLatlng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n        var mapOptions = {\n            zoom: 12,\n            center: myLatlng,\n            scaleControl: false,\n            draggable: false,\n            scrollwheel: false,\n            navigationControl: false,\n            mapTypeControl: false\n        }\n\n\n        map = new google.maps.Map(document.getElementsByClassName('map-canvas')[0], mapOptions);\n        marker = new google.maps.Marker({\n            position: myLatlng,\n            map: map,\n            title: 'Main map',\n            icon: iconBase + 'arrow.png'\n        });\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try this bro : I centered Indonesia using lat and lng.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$(document).ready(function () {\r\n    var mapOptions = {\r\n        zoom: 4,\r\n        mapTypeId: google.maps.MapTypeId.ROADMAP\r\n    };\r\n\r\n    var map = new google.maps.Map(document.getElementById('map'), mapOptions);\r\n    \r\n    var center = new google.maps.LatLng(-2.548926, 118.0148634);\r\n    map.setCenter(center,4);\r\n});</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;script src=\"http://maps.googleapis.com/maps/api/js?libraries=places&amp;sensor=false\"&gt;&lt;/script&gt;\r\n\r\n&lt;div id=\"map\" style=\"width:600px; height:450px\"&gt;&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am writing JavaScript code using Google Maps API.</p>\n\n<pre><code>map = new google.maps.Map2(document.getElementById(\"map_canvas\"));\nmap.setCenter(new google.maps.LatLng(37.4419, -122.1419), 13);\n</code></pre>\n\n<p>The above code sets the default location of the map canvas to Palo Alto. </p>\n\n<p>How can we write the script in such a way that the setCenter function automatically points to the current location of the client?</p>\n",
            "last_activity_date": 1420821273,
            "question_id": 2851089,
            "score": 15,
            "tags": [
                "javascript",
                "google-maps",
                "geolocation"
            ],
            "title": "Using google maps API, how can we set the current location as the default set location using map.setCenter function?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I point to an outdated <a href=\"http://www.quirksmode.org/dom/innerhtml.html\" rel=\"nofollow\" title=\"article\">article</a> for purposes of people testing this for themselves.\nThe DOM methods actually beat out the innerHTML on all of my machines so that is what I prefer. However, at the time of the article innerHTML was faster on avg. Currently the difference can only be seen in huge datasets drastically.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If i am going to re-use the div later in the code, i'll build it and put it in a var, ussually with a $ prefix so i know it's a jquery object.   If it's a one-off thing i'll just do a:</p>\n\n<pre><code> $('body').append(the stuff)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Actually, neither methods use <code>innerHTML</code>, in both cases jQuery converts the HTML to DOM nodes.  From jquery-1.3.2.js:</p>\n\n<pre><code>// If a single string is passed in and it's a single tag\n// just do a createElement and skip the rest\nif ( !fragment &amp;&amp; elems.length === 1 &amp;&amp; typeof elems[0] === \"string\" ) {\n    var match = /^&lt;(\\w+)\\s*\\/?&gt;$/.exec(elems[0]);\n    if ( match )\n        return [ context.createElement( match[1] ) ];\n}\n\n// ... some more code (shortened so nobody falls asleep) ...\n\n// Convert html string into DOM nodes\nif ( typeof elem === \"string\" ) {\n    // Fix \"XHTML\"-style tags in all browsers\n    elem = elem.replace(/(&lt;(\\w+)[^&gt;]*?)\\/&gt;/g, function(all, front, tag){\n        return tag.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i) ?\n            all :\n            front + \"&gt;&lt;/\" + tag + \"&gt;\";\n    });\n    // etc...\n}\n</code></pre>\n\n<p>Generally speaking, using innerHTML is slower than manipulating the DOM, because it invokes the HTML parser (which will parse the HTML into the DOM anyway).</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>There are two methods to add HTML-code to the DOM and I don't know what is the best way to do it.</p>\n\n<p><strong>First method</strong></p>\n\n<p>The first way is the easy one, I could simply add HTML-code (with jQuery) using <code>$('[code here]').appendTo(element);</code> which is much like <code>element.innerHTML = [code here];</code></p>\n\n<p><strong>Second method</strong></p>\n\n<p>Another way is to create all the elements one by one like:</p>\n\n<pre><code>// New div-element\nvar div = $('&lt;div/&gt;', {\n              id: 'someID',\n              class: 'someClassname'\n          });\n\n// New p-element that appends to the previous div-element\n$('&lt;p/&gt;', {\n    class: 'anotherClassname',\n    text: 'Some textnode',\n}).appendTo(div);\n</code></pre>\n\n<p>This method uses core functions like <code>document.createElement</code> and <code>element.setAttribute</code>.</p>\n\n<p>When should I use the first method and when the second? Is method two faster than method one?</p>\n\n<p><strong>Edit - Result of <a href=\"http://harmen.no-ip.org/so/speedtest.html\">speed tests</a></strong></p>\n\n<p>I did three speed tests from which the code follows:</p>\n\n<pre><code>$(document).ready(function(){\n    // jQuery method - Above mentioned as the second method\n    $('#test_one').click(function(){\n        startTimer();\n        var inhere = $('#inhere');\n        for(i=0; i&lt;1000; i++){\n            $(inhere).append($('&lt;p/&gt;', {'class': 'anotherClassname' + i, text: 'number' + i}));\n        }\n        endTimer();\n        return false;\n    });\n\n    // I thought this was much like the jQuery method, but it was not, as mentioned in the comments\n    $('#test_two').click(function(){\n        startTimer();\n        var inhere = document.getElementById('inhere');\n        for(i=0; i&lt;1000; i++){\n            var el = document.createElement('p')\n            el.setAttribute('class', 'anotherClassname' + i);\n            el.appendChild(document.createTextNode('number' + i));\n            inhere.appendChild(el);\n        }\n        endTimer();\n        return false;\n    });\n\n    // This is the innerHTML method\n    $('#test_three').click(function(){\n        startTimer();\n        var inhere = document.getElementById('inhere'), el;\n        for(i=0; i&lt;1000; i++){\n            el += '&lt;p class=\"anotherClassname' + i + '\"&gt;number' + i + '&lt;/p&gt;';\n        }                \n        inhere.innerHTML = el;\n        endTimer();\n        return false;\n    });\n});\n</code></pre>\n\n<p>Which gave the following really surprising results</p>\n\n<pre><code>               Test One   Test Two   Test Three  \n+-------------+---------+----------+------------+\n| Chrome    5 | ~125ms  |  ~10ms   |   ~15ms    |\n| Firefox 3.6 | ~365ms  |  ~35ms   |   ~23ms    |\n| IE        8 | ~828ms  |  ~125ms  |   ~15ms    |\n+-------------+---------+----------+------------+\n</code></pre>\n\n<p>All in all the innerHTML method seems to be the fastest one and is in many cases the most readable one.</p>\n",
            "last_activity_date": 1266952729,
            "question_id": 2319472,
            "score": 15,
            "tags": [
                "javascript",
                "jquery",
                "dom",
                "createelement"
            ],
            "title": "Should you add HTML to the DOM using innerHTML or by creating new elements one by one?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Solution:</p>\n\n<p>in svg:</p>\n\n<pre><code>&lt;script&gt;document.method = function() {}&lt;/script&gt;\n</code></pre>\n\n<p>in html (using prototype to add event listeners):</p>\n\n<pre><code>&lt;script&gt;$(\"img\").observe(\"load\", function() {$(\"img\").contentDocument.method()});\n</code></pre>\n\n<p>You need to listen to the load event on the image. Once the image is loaded, you can use the <code>element.contentDocument</code> to access the document variable on the svg document. Any methods added to that, will be available.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>A few years ago, I was asked to create a 2-player Ajax-based game using SVG.  It may not be precisely the solution you're looking for, but it may help you listen for events in your SVG.  Here's the SVG controller:</p>\n\n<p><em>fyi, the SVG was being dragged and dropped (it was Stratego)</em></p>\n\n<pre><code>/****************** Track and handle SVG object movement *************/\nvar svgDoc;\nvar svgRoot;\nvar mover='';   \t//keeps track of what I'm dragging\n\n///start function////\n//do this onload\nfunction start(evt){\n    //set up the svg document elements\n    svgDoc=evt.target.ownerDocument;\n    svgRoot=svgDoc.documentElement;\n    //add the mousemove event to the whole thing\n    svgRoot.addEventListener('mousemove',go,false);\n    //do this when the mouse is released\n    svgRoot.addEventListener('mouseup',releaseMouse,false);\t\n}\n\n// set the id of the target to drag\nfunction setMove(id){ mover=id; }\n\n// clear the id of the dragging object\nfunction releaseMouse(){ \n    if(allowMoves == true){ sendMove(mover); }\n    mover=''; \n}\n\n// this is launched every mousemove on the doc\n// if we are dragging something, move it\nfunction go(evt){\n    if(mover != '' &amp;&amp; allowMoves != false) {\n    \t//init it\n    \tvar me=document.getElementById(mover);\n\n    \t//actually change the location\n    \tmoveX = evt.clientX-135; //css positioning minus 1/2 the width of the piece\n    \tmoveY = evt.clientY-65;\n    \tme.setAttributeNS(null, 'x', evt.clientX-135);\n    \tme.setAttributeNS(null, 'y', evt.clientY-65);\n    }\n}\n\nfunction moveThis(pieceID, x, y) {\n    $(pieceID).setAttributeNS(null, 'x', x);\n    $(pieceID).setAttributeNS(null, 'y', y);\n}\n</code></pre>\n\n<p>My app was pure SVG + JavaScript, but this is the gist of it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have explored the svg by JavaScripts. See the blog: <a href=\"http://davidchuprogramming.blogspot.com/2008/10/scaling-svg-graphics-with-javascript.html\" rel=\"nofollow\">Scaling SVG Graphics with JavaScripts</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would reference Dr. David Dailey as the most awesome SVG / JS info you will find \n<a href=\"http://srufaculty.sru.edu/david.dailey/svg/\" rel=\"nofollow\">http://srufaculty.sru.edu/david.dailey/svg/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Also see the <a href=\"http://keith-wood.name/svg.html\" rel=\"nofollow\">jQuery SVG plugin</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For support in IE6, have a look at <a href=\"http://code.google.com/p/svgweb/\" rel=\"nofollow\">SVGWeb</a>.</p>\n\n<p>There are examples on how to manipulate SVG with JavaScript in the sample code supplied with the library.</p>\n\n<p>There is also a fair amount of information in the archives of the mailing list.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Things are actually simpler than you expect. You do not really need to read convoluted tutorial to understand the concept, neither do you have to use JQuery. Here is the basic layout:</p>\n\n<ul>\n<li><p>A JavaScript function in your html document.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction change(){\n    var s=document.getElementById(\"cube\");\n    s.setAttribute(\"stroke\",\"0000FF\");\n}\n&lt;/script&gt;\n</code></pre></li>\n<li><p>An SVG element that we are trying to manipulate.</p>\n\n<pre><code>&lt;svg width=100 height=100 style='float: left;'&gt;\n  &lt;rect x=\"10\" y=\"10\" width=\"60\" height=\"60\" id=\"cube\" onclick=\"change()\" stroke=#F53F0C stroke-width=10 fill=#F5C60C /&gt;\n&lt;/svg&gt;\n</code></pre></li>\n<li><p>An inline Button that would trigger the change. Notice that in my example the event can also be triggered by clicking on the cube itself.</p>\n\n<pre><code>&lt;button onclick=\"change()\"&gt;Click&lt;/button&gt;\n</code></pre></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have made a SVG image, or more like mini application, for viewing graphs of data. I want to include this in a HTML page, and call methods on the SVG image.</p>\n\n<p>Example:</p>\n\n<pre><code>&lt;object id=\"img\" data=\"image.svg\" width=\"500\" height=\"300\"/&gt;\n&lt;script&gt;document.getElementById(\"img\").addData([1,23,4]);&lt;/script&gt;\n</code></pre>\n\n<p>Is it at all possible to call methods on the SVG document? If so, how do I declare the methods to expose in the SVG file, and how do I call them from the HTML document?</p>\n",
            "last_activity_date": 1314229563,
            "question_id": 138309,
            "score": 15,
            "tags": [
                "javascript",
                "html",
                "svg"
            ],
            "title": "Is it possible to manipulate an SVG document embedded in an HTML doc with JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>Why neither <code>data-remote</code> or <code>href</code> work on remote sites like youtube</strong></p>\n\n<p>Twitter bootstrap's modal uses AJAX to load remote content via <code>data-remote</code>/<code>href</code>.  AJAX is constrained by the <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\">same origin policy</a> so accessing a site with a different origin, like youtube, will produce this error:</p>\n\n<blockquote>\n  <p>No 'Access-Control-Allow-Origin' header is present on the requested resource</p>\n</blockquote>\n\n<p>So neither <code>data-remote</code> or <code>href</code> will do what you want.  </p>\n\n<p><strong>JSON</strong>:\nIf you were getting json data then you could potentially use <a href=\"http://en.wikipedia.org/wiki/JSONP\">JSONP</a>.  But since you need html, not json, from sites like youtube we need another approach:</p>\n\n<p><strong>Solution using <code>&lt;iFrame&gt;</code></strong></p>\n\n<p>An <code>&lt;iframe&gt;</code> will work for youtube and many other remote sites (even this solition doesn't work for all sites as some, like Facebook, explicitly block iframes by setting X-Frame-Options' to 'DENY') .  </p>\n\n<p>One way to use an iframe for dynamic content is to:</p>\n\n<p><strong>1)</strong> add an empty iframe inside your modal's body:</p>\n\n<pre><code>&lt;div class=\"modal-body\"&gt;\n    &lt;iframe frameborder=\"0\"&gt;&lt;/iframe&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>2)</strong> add some jquery that is triggered when the modal dialog button is clicked.  The following code expects a link destination in a <code>data-src</code> attribute and for the button to have a class <code>modalButton</code>.  And optionally you can specify <code>data-width</code> and <code>data-height</code>- otherwise they default to 400 and 300 respectively (of course you can easily change those).  </p>\n\n<p>The attributes are then set on the <code>&lt;iframe&gt;</code> which causes the iframe to load the specified page.   </p>\n\n<pre><code>$('a.modalButton').on('click', function(e) {\n    var src = $(this).attr('data-src');\n    var height = $(this).attr('data-height') || 300;\n    var width = $(this).attr('data-width') || 400;\n\n    $(\"#myModal iframe\").attr({'src':src,\n                               'height': height,\n                               'width': width});\n});\n</code></pre>\n\n<p><strong>3)</strong> add the class and attributes to the modal dialog's anchor tag:</p>\n\n<pre><code>&lt;a class=\"modalButton\" data-toggle=\"modal\" data-src=\"http://www.youtube.com/embed/Oc8sWN_jNF4?rel=0&amp;wmode=transparent&amp;fs=0\" data-height=320 data-width=450 data-target=\"#myModal\"&gt;Click me&lt;/a&gt;\n</code></pre>\n\n<p><kbd><strong><a href=\"http://jsfiddle.net/2AU6q/3/\">Demo Fiddle using youtube</a></strong></kbd></p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>if you need show a preformatted web page, need something like this</p>\n\n<pre><code>$('#btn').click(function() {\n    $.ajax({\n        url: 'url-src/dialog.html',\n        dataType: 'json',\n        type: 'POST',\n        success: function(data) {\n            if (data.check) {\n                var $modal = $(data.dialog);\n                $('body').append($modal);\n                $modal.filter('.modal').modal();\n            } else {\n                alert(data.dialog);\n            }\n\n        }\n    });\n\n});\n</code></pre>\n\n<p>html of the dialog.html</p>\n\n<pre><code>&lt;div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\"&gt;\n&lt;div class=\"modal-dialog\"&gt;\n    &lt;div class=\"modal-content\"&gt;\n        &lt;div class=\"modal-header\"&gt;\n            &lt;button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"&gt;\u00d7&lt;/button&gt;\n            &lt;h3&gt;Dialog&lt;/h3&gt;\n        &lt;/div&gt;\n        &lt;div class=\"modal-body\"&gt;\n            &lt;form role=\"form\"  class=\"form-horizontal\"&gt;\n                &lt;div class=\"form-group\"&gt;\n                    &lt;label class=\"col-sm-3 control-label\" for=\"mutual\"&gt;Example: &lt;/label&gt;\n                    &lt;div class=\"col-sm-6\"&gt;\n                        &lt;input type=\"text\" id=\"example-form\" value=\"\" class=\"form-control\"&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/form&gt;\n        &lt;/div&gt;\n        &lt;div class=\"modal-footer\"&gt;\n            &lt;button id=\"edit-form\"  data-id-mutual=\"\" class=\"btn btn-primary\"&gt;Save&lt;/button&gt;\n            &lt;button class=\"btn btn-danger\" data-dismiss=\"modal\" aria-hidden=\"true\"&gt;Cancel&lt;/button&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;&lt;!-- /.modal-content --&gt;\n&lt;/div&gt;&lt;!-- /.modal-dialog --&gt;\n&lt;/div&gt;&lt;!-- /.modal --&gt;\n</code></pre>\n\n<p>this html have a form example, you have to add a html with video inside.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>function javascript_function(item_code)\n{\nvar d = new Date();\nvar url_to_zoom='http://localhost.com/application/page.php?id=2&amp;item_code='+item_code+'&amp;reqdate='+d.getTime();\n\n$('#modal_box').modal({keyboard:true,backdrop:true,show:true,remote:url_to_zoom});\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have tried several of the suggestions posted here on other questions and on stackexchange, and nothing is working to my satisfaction. </p>\n\n<p>I am trying to load dynamic content into a modal. Specifically, YouTube videos or Soundcloud audio within an iFrame. So that any user who visits the site, can enter links for videos or audio.  The modal then dynamically loads that users links.  Each subsequent user can see each others links, all within a modal. (separate modal loads up for each user) </p>\n\n<p>I can't get this to work quite right. I have created a separate html file called \"modal.html\" to test this out, which includes an iframe with the proper YouTube/Soundcloud clip.  </p>\n\n<p>I am also confused about whether i need to use \"data-remote=\" inside my tag, or does the href suffice? Or do I use the data-remote inside the first of the modal. Or Both, or either? Neither has worked.</p>\n\n<p>Here's my code:</p>\n\n<pre><code>&lt;a data-toggle=\"modal\" href=\"modal.html\" data-target=\"#myModal\"&gt;Click me&lt;/a&gt;\n\n&lt;div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" data-     remote=\"modal.html\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\"&gt;\n   &lt;div class=\"modal-dialog\"&gt;\n&lt;div class=\"modal-content\"&gt;\n  &lt;div class=\"modal-header\"&gt;\n    &lt;button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"&gt;&amp;times;&lt;/button&gt;\n&lt;h4 class=\"modal-title\" id=\"myModalLabel\"&gt;Modal title&lt;/h4&gt;\n  &lt;/div&gt;\n  &lt;div class=\"modal-body\"&gt;\n\n  &lt;/div&gt;\n  &lt;div class=\"modal-footer\"&gt;\n    &lt;button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"&gt;Close&lt;/button&gt;\n    &lt;button type=\"button\" class=\"btn btn-primary\"&gt;Save changes&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/div&gt;&lt;!-- /.modal-content --&gt;\n  &lt;/div&gt;&lt;!-- /.modal-dialog --&gt;\n&lt;/div&gt;&lt;!-- /.modal --&gt;\n</code></pre>\n",
            "last_activity_date": 1415422896,
            "question_id": 20073618,
            "score": 14,
            "tags": [
                "javascript",
                "html5",
                "twitter-bootstrap",
                "iframe",
                "modal-dialog"
            ],
            "title": "Using bootstrap 3.0 modals to load dynamic, remote content within an iframe"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>window.orientation is what you're looking for. there's also an onOrientationChange event\nworks for android, iphone and, i'm mostly sure, for ipad</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>UPDATE:</strong></p>\n\n<p>You might want to check out </p>\n\n<p><a href=\"http://api.jquerymobile.com/orientationchange/\" rel=\"nofollow\">jQuery mobile orientationchange</a> </p>\n\n<p>or the plain JS one:</p>\n\n<pre><code>window.addEventListener(\"orientationchange\", function() {\nalert(window.orientation);\n}, false);\n</code></pre>\n\n<hr>\n\n<p><strong>Older answer</strong></p>\n\n<p><a href=\"http://www.nczonline.net/blog/2010/04/06/ipad-web-development-tips/\" rel=\"nofollow\">http://www.nczonline.net/blog/2010/04/06/ipad-web-development-tips/</a></p>\n\n<p>Safari on the iPad does support the window.orientation property, so if necessary, you can use that to determine if the user is in horizontal or vertical mode. As reminder of this functionality:</p>\n\n<pre><code>window.orientation is 0 when being held vertically\nwindow.orientation is 90 when rotated 90 degrees to the left (horizontal)\nwindow.orientation is -90 when rotated 90 degrees to the right (horizontal)\n</code></pre>\n\n<p>There is also the orientationchange event that fires on the window object when the device is rotated.</p>\n\n<p>You can also use CSS media queries to determine if the iPad is being held in vertical or horizontal orientation, such as:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" media=\"all and (orientation:portrait)\" href=\"portrait.css\"&gt;\n&lt;link rel=\"stylesheet\" media=\"all and (orientation:landscape)\" href=\"landscape.css\"&gt;\n</code></pre>\n\n<hr>\n\n<p><a href=\"http://www.htmlgoodies.com/beyond/webmaster/toolbox/article.php/3889591/Detect-and-Set-the-iPhone--iPads-Viewport-Orientation-Using-JavaScript-CSS-and-Meta-Tags.htm\" rel=\"nofollow\">http://www.htmlgoodies.com/beyond/webmaster/toolbox/article.php/3889591/Detect-and-Set-the-iPhone--iPads-Viewport-Orientation-Using-JavaScript-CSS-and-Meta-Tags.htm</a></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar updateLayout = function() {\n  if (window.innerWidth != currentWidth) {\n    currentWidth = window.innerWidth;\n    var orient = (currentWidth == 320) ? \"profile\" : \"landscape\";\n    document.body.setAttribute(\"orient\", orient);\n    window.scrollTo(0, 1);\n  }\n};\n\niPhone.DomLoad(updateLayout);\nsetInterval(updateLayout, 400);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Adding to the @mplungjan answer, I found better results using the webkit \"native\" (I don't really how to called it) event, '<strong>deviceorientation</strong>'.</p>\n\n<p>In the <a href=\"https://developer.mozilla.org/en/detecting_device_orientation#Normalizing_between_Gecko_and_WebKit\" rel=\"nofollow\">Mozilla Developer network</a> they have a good explanation about how to normalize between webkit and Gecko that helped me to solve this problem.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use the orientationchange event like so:</p>\n\n<pre><code>window.addEventListener('orientationchange', function(){\n     /* update layout per new orientation */\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.matchMedia\" rel=\"nofollow\">mediaMatch</a> to evaluate CSS media queries, e.g.</p>\n\n<pre><code>window\n    .matchMedia('(orientation: portrait)')\n    .addListener(function (m) {\n        if (m.matches) {\n            // portrait\n        } else {\n            // landscape\n        }\n    });\n</code></pre>\n\n<p>CSS media query fires before the <code>orientationchange</code>. If you are looking to capture the end of the event (when the rotation has been completed), see <a href=\"http://stackoverflow.com/questions/12452349/mobile-viewport-height-after-orientation-change/26829372#26829372\">mobile viewport height after orientation change</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to detect change in orientation of the browser on the iPad or Galaxy Tab using javascript? I think it's possible using css media queries.</p>\n",
            "last_activity_date": 1415551325,
            "question_id": 5498934,
            "score": 14,
            "tags": [
                "javascript",
                "css",
                "ipad",
                "accelerometer",
                "galaxy-tab"
            ],
            "title": "Detect change in orientation using javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><code>&lt;form onSubmit=\"captureForm()\"&gt;</code>\nthat should do. Make sure that your <code>captureForm()</code> method returns <code>false</code>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>&lt;form id=\"my-form\"&gt;\n    &lt;input type=\"text\" name=\"in\" value=\"some data\" /&gt;\n    &lt;button type=\"submit\"&gt;Go&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>In JS:</p>\n\n<pre><code>function processForm(e) {\n    if (e.preventDefault) e.preventDefault();\n\n    /* do what you want with the form */\n\n    // You must return false to prevent the default form behavior\n    return false;\n}\n\nvar form = document.getElementById('my-form');\nif (form.attachEvent) {\n    form.attachEvent(\"submit\", processForm);\n} else {\n    form.addEventListener(\"submit\", processForm);\n}\n</code></pre>\n\n<p><em>Edit</em>: in my opinion, this approach is better than setting the <code>onSubmit</code> attribute on the form since it maintains separation of mark-up and functionality. But that's just my two cents.</p>\n\n<p><em>Edit2</em>: Updated my example to include <code>preventDefault()</code></p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Use @Kristian Antonsen's answer, or you can use:</p>\n\n<pre><code>$('button').click(function() {\n    preventDefault();\n    captureForm();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You cannot attrach events before the page has loaded</p>\n\n<p>this works - and I prefer it like this in plain JS - jQuery is another story:</p>\n\n<p><a href=\"http://jsfiddle.net/mplungjan/PAc7P/\">DEMO</a></p>\n\n<pre><code>// Should only be triggered on first page load\nalert('ho');\n\nwindow.onload=function() {\n    document.getElementById('my-form').onsubmit=function() {\n    /* do what you want with the form */\n\n    // Should be triggered on form submit\n    alert('hi');\n    // You must return false to prevent the default form behavior\n    return false;\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>So, the solution to add an event handler for onsubmit and to call <code>preventDefault()</code> or <code>return false</code> makes this work for me.  <strong>However</strong>, using either <code>preventDefault()</code> or <code>return false</code> causes the <code>required</code> attribute check to fail  (test in Opera 11+ to see).</p>\n\n<p>Is there a way to capture a form submit with JavaScript without affecting the browser's handling of the <code>required</code> attribute?</p>\n\n<p>Thanks</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>There seems to be lots of info on how to submit a form using javascript, but I am looking for a solution to capture when a form has been submitted and intercept it in javascript.</p>\n\n<p>HTML</p>\n\n<pre><code>&lt;form&gt;\n &lt;input type=\"text\" name=\"in\" value=\"some data\" /&gt;\n &lt;button type=\"submit\"&gt;Go&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>When a user presses the submit button, I do <strong>not</strong> want the form to be submitted, but instead I would like a JavaScript function to be called.</p>\n\n<pre><code>function captureForm() {\n // do some stuff with the values in the form\n // stop form from being submitted\n}\n</code></pre>\n\n<p>A quick hack would be to add an onclick function to the button but I do not like this solution... there are many ways to submit a form... e.g. pressing return while on an input, which this does not account for.</p>\n\n<p>Ty</p>\n",
            "last_activity_date": 1321830703,
            "question_id": 5384712,
            "score": 14,
            "tags": [
                "javascript",
                "html",
                "forms"
            ],
            "title": "Capture a form submit in JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The point of the prototype is that it is shared between multiple objects (i.e. those that are created by the same constructor function). If you need variables that are not shared between objects that share a prototype, you need to keep those variables within the constructor function for each object. Just use the prototype for sharing methods.</p>\n\n<p>In your example, you can't do exactly what you want using prototypes. Here's what you could do instead. See Daniel Earwicker's answer for more explanation that there's no point me now replicating here.</p>\n\n<pre><code>var A = function() {};\n\nA.prototype.incrementPublic = function()\n{\n    return ++this.publicProperty;\n};\n\nvar B = function()\n{\n    this.publicProperty = 0;\n    var internal = 0;\n    this.incrementInternal = function()\n    {\n      return ++internal;\n    };\n};\n\nB.prototype = new A();\n\nvar x = new B(), y = new B();\nconsole.log(x.incrementPublic(), y.incrementPublic()); // 1, 1\nconsole.log(x.incrementInternal(), y.incrementInternal()); // 1, 1\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Private members are tricky using prototypical inheritance. For one, they cannot be inherited. You need to create private members in each individual constructor. You can do this by either applying the super constructor in the subclass or create a decorator.</p>\n\n<p>Decorator example:</p>\n\n<pre><code>function internalDecorator(obj){\n    var internal = 0;\n    obj.increment = function(){\n        return ++internal;\n    }\n} \n\nvar A = function(){\n    internalDecorator(this);\n}\nA.prototype = {public:function(){/*etc*/}}\n\nvar B = function(){\n    internalDecorator(this);\n}\nB.prototype = new A(); // inherits 'public' but ALSO redundant private member code.\n\nvar a = new B(); // has it's own private members\nvar b = new B(); // has it's own private members\n</code></pre>\n\n<p>This is just a variation of the super constructor call, you can also achieve the same by calling the actual super constructor with <code>.apply()</code></p>\n\n<pre><code>var B = function(){\n    A.apply(this, arguments);\n}\n</code></pre>\n\n<p>Now by applying inheritance through <code>B.prototype = new A()</code> you invoke needless constructor code from <code>A</code>. A way to avoid this is to use Douglas Crockfords beget method:</p>\n\n<pre><code>Object.beget = function(obj){\n    var fn = function(){}\n    fn.prototype = obj;\n    return new fn(); // now only its prototype is cloned.\n}\n</code></pre>\n\n<p>Which you use as follows:</p>\n\n<pre><code>B.prototype = Object.beget(A.prototype);\n</code></pre>\n\n<p>Of course, you can abandon inheritance altogether and make good use of decorators, at least where private members are needed.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>You need to forget the idea of classes. There isn't really such a thing in JavaScript as an 'instance of B'. There is only 'some object you obtained by calling the constructor function B'. An object has properties. Some are its \"own\" properties, others are included by searching the prototype chain.</p>\n\n<p>When you say <code>new A</code>, you're creating one object. Then you assign it as the prototype for B, which means that every call to <code>new B</code> produces a new object that has the same direct prototype, and hence the same counter variable.</p>\n\n<p>In Tim Down's answer, two alternatives are shown. His <code>incrementPublic</code> uses inheritance, but makes the counter variable public (i.e. gives up encapsulation). Whereas <code>incrementInternal</code> makes the counter private but succeeds by moving the code into <code>B</code> (i.e. gives up inheritance).</p>\n\n<p>What you want is a combination of three things:</p>\n\n<ul>\n<li>inheritable behaviour - so it must be defined in A and require no code in B aside from setting the prototype</li>\n<li>private data, stored in closure-local variables</li>\n<li>per-instance data, stored in <code>this</code>.</li>\n</ul>\n\n<p>The problem is the contradiction between the last two. I would also say that inheritance is of limited value in JS anyway. It's better to treat it as a functional language:</p>\n\n<pre><code>// higher-order function, returns another function with counter state\nvar makeCounter = function() {\n  var c = 0;\n  return function() { return ++c; };\n};\n\n// make an object with an 'increment' method:\nvar incrementable = {\n  increment: makeCounter()\n};\n</code></pre>\n\n<p>Personally I tend to avoid constructor functions and prototype inheritance most of the time. They are far less useful in JS than people from an OO background assume.</p>\n\n<p><em>Update</em> I'd be wary of the statement you quoted in your update:</p>\n\n<blockquote>\n  <p>Private variables only work really\n  well with singleton objects in\n  JavaScript.</p>\n</blockquote>\n\n<p>That's not really true. An object is just a 'dictionary' of properties, any of which may be functions. So forget objects and think about functions. You can create multiple instances of a function according to some pattern, by writing a function that returns a function. The <code>makeCounter</code> example about is just a simple example of this. <code>makeCounter</code> is not a \"singleton object\" and doesn't have to be limited to use in singleton objects.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I just found other tricky solution, without exporting any methods/variables to public objects.</p>\n\n<pre><code>function A(inherit) {\n    var privates = { //setup private vars, they could be also changed, added in method or children\n        a: 1,\n        b: 2,\n        c: 3\n    };\n    //setup public methods which uses privates\n    this.aPlus = bindPlus(\"aPlus\", this, privates); //pass method name as string!\n    this.aGet = bindPlus(\"aGet\", this, privates);\n    if (inherit) {\n        return privates;\n    }\n}\nA.prototype.aPlus = function () {\n    var args = getArgs(arguments),\n        //self is \"this\" here \n        self = args.shift(),\n        privates = args.shift(),\n        //function real arguments\n        n = args.shift();\n    return privates.a += n;\n};\n\nA.prototype.aGet = function (n) {\n    var args = getArgs(arguments),\n        self = args.shift(),\n        privates = args.shift();\n    console.log(this, self, privates);\n    return privates.a;\n};\n\n//utilites\nfunction getArgs(arg) {\n    return Array.prototype.slice.call(arg);\n}\n\nfunction bindPlus(funct, self, privates) {\n    return function () {\n        return Object.getPrototypeOf(self)[funct].bind(this, self, privates).apply(null, arguments);\n    };\n}\n\n//inherited \nfunction B(inherit) {\n    var privates = Object.getPrototypeOf(this).constructor.call(this, true);\n    privates.d = 4;\n    this.dGet = bindPlus(\"dGet\", this, privates);\n    if (inherit) {\n        return privates;\n    }\n}\n\nB.prototype = Object.create(A.prototype);\nB.constructor = B;\n\nB.prototype.aGet = function () {\n    var args = getArgs(arguments),\n        self = args.shift(),\n        privates = args.shift();\n    console.warn(\"B.aGet\", this, privates);\n    return privates.a;\n};\n\nB.prototype.dGet = function () {\n    var args = getArgs(arguments),\n        self = args.shift(),\n        privates = args.shift();\n    console.warn(\"B.dGet\", this, privates);\n    return privates.d;\n};\n\n\n// tests\nvar b = new B();\nvar a = new A();\n\n//should be 223\nconsole.log(\"223 ?\",b.aPlus(222));\n\n//should be 42\nconsole.log(\"41\",a.aPlus(222));\n</code></pre>\n\n<p>More test and samples here: <a href=\"http://jsfiddle.net/oceog/TJH9Q/\" rel=\"nofollow\">http://jsfiddle.net/oceog/TJH9Q/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I think I have misunderstood how Javascript prototypal inheritance works. Specifically, the prototypes internal variables seem to be shared between multiple different sub-objects. It is easiest to illustrate with code:</p>\n\n<pre><code>var A = function()\n{\n  var internal = 0;\n  this.increment = function()\n  {\n    return ++internal;\n  };\n};\n\nvar B = function() {};\n// inherit from A\nB.prototype = new A;\n\nx = new B;\ny = new B;\n\n$('#hello').text(x.increment() + \" - \" + y.increment());\u200b\n</code></pre>\n\n<p>This outputs <code>1 - 2</code> (test it on <a href=\"http://jsbin.com/ateci3/2/edit\" rel=\"nofollow\">JSBin</a>), while I fully expected the result to be <code>1 - 1</code>, since I wanted two separate objects.</p>\n\n<p>How can I make sure that the <code>A</code> object isn't shared object between multiple instances of <code>B</code>?</p>\n\n<p><strong>Update</strong>: <a href=\"http://robertnyman.com/2008/10/21/javascript-inheritance-experimenting-with-syntax-alternatives-and-private-variables/\" rel=\"nofollow\">This article</a> highlights some of the issues:</p>\n\n<blockquote>\n  <p>The problem is that the scope each approach uses to create a private variable, which works fine, is also the closure, in action, that results in if you change a private variable for one object instance, it is being changed for all. I.e. it\u2019s more like a private static property, than an actual private variable.</p>\n  \n  <p>So, if you want to have something private, more like a non-public constant, any of the above approaches is good, but not for actual private variables. Private variables only work really well with singleton objects in JavaScript.</p>\n</blockquote>\n\n<p><strong>Solution</strong>: As per BGerrissen's answer, changing the declaration of <code>B</code> and leaving of the prototype works as intended:</p>\n\n<pre><code>var B = function() { A.apply(this, arguments); };\n</code></pre>\n",
            "last_activity_date": 1405913865,
            "question_id": 3617139,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "Private variables in inherited prototypes"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Not familiar with jQuery validation plugin, but something like this should do the trick:</p>\n\n<pre><code>var alNumRegex = /^([a-zA-Z0-9]+)$/; //only letters and numbers\nif(alNumRegex.test($('#myTextbox').val()) {\n    alert(\"value of myTextbox is an alphanumeric string\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Define a new validation function, and use it in the rules for the field you want to validate:</p>\n\n<pre><code>$(function ()\n{\n    $.validator.addMethod(\"loginRegex\", function(value, element) {\n        return this.optional(element) || /^[a-z0-9\\-]+$/i.test(value);\n    }, \"Username must contain only letters, numbers, or dashes.\");\n\n    $(\"#signupForm\").validate({\n        rules: {\n            \"login\": {\n                required: true,\n                loginRegex: true,\n            }\n        },\n        messages: {\n            \"login\": {\n                required: \"You must enter a login name\",\n                loginRegex: \"Login format not valid\"\n            }\n        }\n    });\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                }
            ],
            "body": "<p>I am using the jquery validation plugin from: <a href=\"http://bassistance.de/jquery-plugins/jquery-plugin-validation/\">http://bassistance.de/jquery-plugins/jquery-plugin-validation/</a></p>\n\n<p>How can I add a regex check on a particular textbox?</p>\n\n<p>I want to check to make sure the input is alphanumeric.</p>\n",
            "last_activity_date": 1322342336,
            "question_id": 1053618,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "regex",
                "validation"
            ],
            "title": "using the jquery validation plugin, how can I add a regex validation on a textbox?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can get it using: </p>\n\n<pre><code>var b = document.body.getBoundingClientRect();    \nalert((b.right - b.left)/document.body.clientWidth);\n</code></pre>\n\n<p>Thanks a lot <a href=\"http://twitter.com/niclasnorgren\">@niclasnorgren</a>!</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Also, if you need to do check in IE 8, you can use window.screen.deviceXDPI and window.screen.deviceYDPI. The default is 96 dpi, and if you're zoomed, the number will be larger (aka 144 when zoomed 150%)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There is a small syntax error (body instead of document.body) on the accepted answer.  This seems to do the trick also.</p>\n\n<pre><code>var rect = document.body.getBoundingClientRect(); \nvar zoomLevel = Math.round((rect.right-rect.left)/document.body.clientWidth * 100);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>i have posted solution for this on another post you can get this here. which will work in IE7 also. </p>\n\n<p><a href=\"http://stackoverflow.com/questions/3185705/auto-detect-a-screen-resolution-and-change-browser-zoom-with-javascript\">Auto-detect a screen resolution and change browser zoom with Javascript?</a></p>\n\n<pre><code>This will help to detect browser zoom tested on all browser\n&lt;script&gt;\nwindow.utility = function(utility){\nutility.screen = {\n    rtime : new Date(1, 1, 2000, 12,00,00),\n    timeout : false,\n    delta : 200\n};\nutility.getBrowser = function(){\n    var $b = $.browser;\n    $.extend(utility.screen,$.browser);\n    utility.screen.isZoomed = false;\n    var screen  = utility.screen;\n    screen.zoomf  = screen.zoom = 1;\n    screen.width = window.screen.width;\n    screen.height = window.screen.height;\n    if($b.mozilla){ //FOR MOZILLA\n        screen.isZoomed  = window.matchMedia('(max--moz-device-pixel-ratio:0.99), (min--moz-device-pixel-ratio:1.01)').matches;\n    } else {\n        if($b.chrome){ //FOR CHROME\n            screen.zoom = (window.outerWidth - 8) / window.innerWidth;\n            screen.isZoomed = (screen.zoom &lt; .98 || screen.zoom &gt; 1.02)\n        } else if($b.msie){//FOR IE7,IE8,IE9\n            var _screen = document.frames.screen;\n            screen.zoom = ((((_screen.deviceXDPI / _screen.systemXDPI) * 100 + 0.9).toFixed())/100);\n            screen.isZoomed = (screen.zoom &lt; .98 || screen.zoom &gt; 1.02);\n            if(screen.isZoomed) screen.zoomf = screen.zoom;\n            screen.width = window.screen.width*screen.zoomf;\n            screen.height = window.screen.height*screen.zoomf;\n        }\n    }\n    return utility.screen;\n};\n  window.onresize = function(e){\n       utility.screen.rtime = new Date();\n        if (utility.screen.timeout === false) {\n              utility.screen.timeout = true;\n              setTimeout(window.resizeend, utility.screen.delta);\n        }\n  };\nwindow.resizeend = function() {\n    if (new Date() - utility.screen.rtime &lt; utility.screen.delta) {\n        setTimeout(window.resizeend, utility.screen.delta);\n    } else {\n        utility.screen.timeout = false;\n        utility.screen = utility.getBrowser();\n        if(window.onresizeend) window.onresizeend (utility.screen);\n        if(utility.onResize) utility.onResize(utility.screen);\n    }               \n};\nwindow.onresizeend = function(screen){\n    if(screen.isZoomed)\n        $('body').text('zoom is not 100%');\n    else{\n        $('body').text('zoom is 100% &amp; browser resolution is'+[screen.width+'X'+screen.height]);\n    }\n};\n$(document).ready(function(){\n    window.onresize();\n});\nreturn utility;\n}({});\n&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"http://jqgeeks.com/view/tools/browser/detect-browser-zoom-actual-resolution-demo.html\" rel=\"nofollow\">Demo</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In Internet Explorer 7 some properties (mouse coordinates) are treated as physical while others are logical (offset). This essentially required Web developers to be aware of or calculate the zoom state. In IE8 release all properties are logical.</p>\n",
            "last_activity_date": 1369084069,
            "question_id": 680596,
            "score": 13,
            "tags": [
                "javascript",
                "internet-explorer-7"
            ],
            "title": "How to get zoom level in Internet Explorer 7? (javascript)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>When appending new elements to list (e.g. with AJAX) <code>:nth-child(2n+1)</code> appears applied to every new element.</p>\n\n<p>This happens only on 32-bit devices running iOS8 (e.g. iPhone5 but not iPhone 5s or 6 and even not iPhone5 Simulator).</p>\n\n<p>The solution is to use <code>:nth-of-type()</code> until Apple addresses this issue.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Indeed <code>nth-child</code> doesn't work on IOS8.</p>\n\n<p>Switching for <code>nth-of-type</code> did the trick for me.</p>\n\n<p>It's well supported <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-of-type\">https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-of-type</a></p>\n\n<p>That said if you want to take no chance, you can detect IOS 8 as follow. </p>\n\n<pre><code>function isIOS8() {\n  if (\"600.1.4\" == $.browser.version || ~navigator.userAgent.indexOf('OS 8_') ){\n    return true;\n  }\n  return false;\n}\n\nvar i=0,\n    $el = $('ul.poll');\n\nif( isIOS8() ){\n    $el.find(' li:nth-of-type(' + (i + 1) + ')').text('my first Child');\n}else{\n    $el.find('.choice:nth-child(' + (i + 1) + ')').text('my first Child');\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>I have encountered a similar issue and I'm adding it here in case others come looking as this is the only post I have found regarding ios8 and css selector problems.</p>\n\n<p>My particular problem is using nth-child to select elements created by javascript and we make good use of nth-child which is no longer working on ios8.</p>\n\n<p><strong>nth-of-type</strong> does work as svassr states in his answer.</p>\n\n<p>I have created a <a href=\"http://jsfiddle.net/2foxhmvs/1/\" rel=\"nofollow\">js sample</a> (also code at end) that shows the problem with ios8 and document.querySelectAll in conjunction with the nth-child css selector.</p>\n\n<p>Speculating from info <a href=\"http://kendsnyder.com/apple-shows-love-for-html5-with-ios-8/\" rel=\"nofollow\">here</a> and the quote below in particular I think they're caching or pre-processing the selectors.</p>\n\n<p><em>iOS 8 is also significantly faster than iOS7 in every area with a 4x improvement in document.querySelectorAll</em></p>\n\n<pre><code>&lt;style&gt;\n    .red { border: 1px solid red; }\n\n    .green { border: 1px solid green; }\n\n    tr.test &gt; td:nth-child(n) { background-color: yellow; }\n&lt;/style&gt;\n\n&lt;table id='tbl'&gt;\n    &lt;tr&gt;\n        &lt;td&gt;a1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr class='test'&gt;\n        &lt;td&gt;b1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr class='test'&gt;\n        &lt;td&gt;c1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;d1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr class='test'&gt;\n        &lt;td&gt;e1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n\n&lt;script&gt;\nvar row = $('&lt;tr&gt;&lt;/tr&gt;').addClass('test');\n\nvar cell1 = $('&lt;td&gt;&lt;/td&gt;').text('f1');\ncell1.appendTo(row);\n\nvar cell2 = $('&lt;td&gt;&lt;/td&gt;').text('2');\ncell2.appendTo(row);\n\nvar cell3 = $('&lt;td&gt;&lt;/td&gt;').text('3');\ncell3.appendTo(row);\n\nvar cell4 = $('&lt;td&gt;&lt;/td&gt;').text('4');\ncell4.appendTo(row);\n\nvar cell5 = $('&lt;td&gt;&lt;/td&gt;').text('5');\ncell5.appendTo(row);\n\nvar tbl = $('#tbl');\nrow.appendTo(tbl);\n\nvar iRedCol = 3;\n$('#tbl').find('tr.test &gt; td:nth-child(' + iRedCol + ')').addClass('red');\n\nvar iGreenCol = 4;\n$('#tbl').find('tr.test &gt; td:nth-of-type(' + iGreenCol + ')').addClass('green');\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Edited for better explanation:</p>\n\n<p>I have a bunch of articles with position absolute using top, left and fixed width and height. All wrapped into a div (column). These articles have a class with absolute position, and fixed width and height.</p>\n\n<p>there is a button to apply:\n- a translate3d to the wrapper/column\n- a window.history.pushState</p>\n\n<p>All the styles are applied correctly to all the articles, but when i push the button and after the pushState, all/some of the nth-child() styles are not applied correctly (left, top and width). If i change the :nth-child() to :nth-of-type() all works correctly after the pushState.</p>\n\n<p>The problem seems to be visible when safari determines to activate the possibility to switch into reader mode, after pushing the click button and affects to the translate3d elements (hardware accelerated).</p>\n\n<p>It happends on Safari iOS8 using iPad2, iPad3 retina and 4. it don't happends using an iPad mini retina. Using iOS7 and before all works correctly, but no works using iOS8.</p>\n\n<p>Code:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;meta name=\"viewport\" content=\"initial-scale = 1.0, maximum-scale = 1.0, minimum-scale = 1.0, user-scalable = 1.0\"&gt;\n    &lt;meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\"&gt;\n    &lt;style&gt;\n        body {\n            position: relative;\n            width: 100%;\n            height: 100%;\n            padding: 0;\n            margin: 0;\n            overflow: hidden;\n        }\n        #column {\n            -webkit-transition: 0.35s; transition: 0.35s;\n            -webkit-transform: translate3d(0px, 0px, 0px);\n\n            position: absolute;\n            top: 10px;\n            left: 10px;\n\n            border: 1px solid Grey;\n            width: 300px;\n            height: 225px;\n        }\n        .moveColumn {\n            -webkit-transform: translate3d(200px, 0px, 0px) !important;\n        }\n\n    article {\n        position: absolute;\n        overflow: hidden;\n    }\n    article:nth-child(1) {\n        left: 0;\n        top: 0;\n        width: 300px;\n        height: 300px;\n        background-color: Red;\n    }\n    article:nth-child(2) {\n        left: 0px;\n        top: 305px;\n        width: 605px;\n        height: 300px;\n        background-color: Blue;\n    }\n    article:nth-child(3) {\n        left: 305px;\n        top: 0;\n        width: 300px;\n        height: 300px;\n        background-color: Green;\n    }\n    .button {\n        position: absolute;\n        left: 10px;\n        top: 250px;\n        background-color: Grey;\n    }\n\n    &lt;/style&gt;\n    &lt;script language=\"javascript\"&gt;\n        var veces = 0;\n        function moveColumn() {\n            var column = document.querySelector('#column');\n\n            column.classList.toggle('moveColumn');\n\n            var obj = {};\n            obj.sectionId = \"section\";\n            window.history.pushState(obj, \"TITLE\", \"/?vp=\" + veces);\n            veces++;\n        }\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"column\"&gt;\n        &lt;article&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. In eu urna quam. Duis et pellentesque ipsum, vitae varius erat. Nullam fringilla libero id est aliquet gravida. Quisque efficitur, quam bibendum posuere auctor, turpis arcu pulvinar sapien, interdum iaculis purus metus id velit. In in lorem ac dolor feugiat luctus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi viverra velit sed massa viverra consequat id eu tortor. Ut scelerisque massa ut leo rutrum blandit.\n\n            Maecenas sit amet facilisis nulla, nec convallis nunc. Ut gravida, erat eget eleifend viverra, elit lacus ultrices turpis, vitae molestie felis tellus ac eros. Integer semper vitae sapien sit amet placerat. Praesent in sodales massa. Aliquam erat volutpat. Etiam maximus massa a scelerisque cursus. Pellentesque facilisis enim nec diam viverra facilisis. Morbi non nibh nulla. Praesent erat urna, porta sit amet dui eu, porta pulvinar metus. Nam quam odio, laoreet in nisi in, porta efficitur purus. In fringilla magna ac accumsan commodo.&lt;/article&gt;\n        &lt;article&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. In eu urna quam. Duis et pellentesque ipsum, vitae varius erat. Nullam fringilla libero id est aliquet gravida. Quisque efficitur, quam bibendum posuere auctor, turpis arcu pulvinar sapien, interdum iaculis purus metus id velit. In in lorem ac dolor feugiat luctus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi viverra velit sed massa viverra consequat id eu tortor. Ut scelerisque massa ut leo rutrum blandit.\n\n            Maecenas sit amet facilisis nulla, nec convallis nunc. Ut gravida, erat eget eleifend viverra, elit lacus ultrices turpis, vitae molestie felis tellus ac eros. Integer semper vitae sapien sit amet placerat. Praesent in sodales massa. Aliquam erat volutpat. Etiam maximus massa a scelerisque cursus. Pellentesque facilisis enim nec diam viverra facilisis. Morbi non nibh nulla. Praesent erat urna, porta sit amet dui eu, porta pulvinar metus. Nam quam odio, laoreet in nisi in, porta efficitur purus. In fringilla magna ac accumsan commodo.&lt;/article&gt;\n        &lt;article&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. In eu urna quam. Duis et pellentesque ipsum, vitae varius erat. Nullam fringilla libero id est aliquet gravida. Quisque efficitur, quam bibendum posuere auctor, turpis arcu pulvinar sapien, interdum iaculis purus metus id velit. In in lorem ac dolor feugiat luctus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi viverra velit sed massa viverra consequat id eu tortor. Ut scelerisque massa ut leo rutrum blandit.\n\n            Maecenas sit amet facilisis nulla, nec convallis nunc. Ut gravida, erat eget eleifend viverra, elit lacus ultrices turpis, vitae molestie felis tellus ac eros. Integer semper vitae sapien sit amet placerat. Praesent in sodales massa. Aliquam erat volutpat. Etiam maximus massa a scelerisque cursus. Pellentesque facilisis enim nec diam viverra facilisis. Morbi non nibh nulla. Praesent erat urna, porta sit amet dui eu, porta pulvinar metus. Nam quam odio, laoreet in nisi in, porta efficitur purus. In fringilla magna ac accumsan commodo.&lt;/article&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"button\" onclick=\"javascript:moveColumn();\"&gt; Click me to move column&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>have you experienced something like that?</p>\n",
            "last_activity_date": 1425065238,
            "question_id": 26032513,
            "score": 12,
            "tags": [
                "javascript",
                "css",
                "safari",
                "ios8",
                "css-selectors"
            ],
            "title": "iOS8 Safari after a pushState the :nth-child() selectors not works"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<pre><code>var x;\n\nif(foo){x = function(){/*stuff here*/};}\n\nx();\n</code></pre>\n\n<p>That's how I'd do it. Your syntax looks a little off to me.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Yes it is valid.</p>\n\n<p>All statement blocks (i.e everything within curly braces) can have additional statements and declarations, including functions.</p>\n\n<p>So you can also define functions within functions and so on</p>\n\n<p>Here is ECMA-262 v1 - <a href=\"http://www.mozilla.org/js/language/E262.pdf\" rel=\"nofollow\">http://www.mozilla.org/js/language/E262.pdf</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I'm not sure how to read this, but <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\" rel=\"nofollow\">ECMA-262 V5</a> has this to say: </p>\n\n<blockquote>\n  <p>NOTE Several widely used implementations of ECMAScript are known to support the use of <code>FunctionDeclaration</code> as a Statement. However there are significant and irreconcilable variations among the implementations in the semantics applied to such FunctionDeclarations. Because of these irreconcilable difference, the use of a FunctionDeclaration as a Statement results in code that is not reliably portable among implementations. It is recommended that ECMAScript implementations either disallow this usage of FunctionDeclaration or issue a warning when such a usage is encountered. Future editions of ECMAScript may define alternative portable means for declaring functions in a Statement context.</p>\n</blockquote>\n\n<p>If I understand this correctly, strictly speaking, this means that function declarations can't be inside blocks at all, because Blocks can contain only Statements. </p>\n\n<p>I can be <em>totally</em> wrong with my interpretation, though - I am not familiar with the internal workings of ECMAScript. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I do not agree with the other answers that say it is valid.</p>\n\n<p>According to the <a href=\"http://www.ecma262-5.com/ELS5_HTML.htm\">ECMA-262 5th Edition specification</a>, <code>Blocks</code> can only contain <code>Statements</code> (<a href=\"http://www.ecma262-5.com/ELS5_HTML.htm#Section_12.1\">Section 12.1</a>):</p>\n\n<pre><code>Block :\n   { StatementList opt }\n\nStatementList :\n   Statement\n   StatementList  Statement\n</code></pre>\n\n<p>However the spec does not define a function statement, but only a <code>FunctionDeclaration</code> and a <code>FunctionExpression</code>. The spec goes further to make a note on this in <a href=\"http://www.ecma262-5.com/ELS5_HTML.htm#Section_12\">Section 12</a>:</p>\n\n<blockquote>\n  <p>Several widely used implementations of ECMAScript are known to support the use of <code>FunctionDeclaration</code> as a <code>Statement</code>. However there are significant and irreconcilable variations among the implementations in the semantics applied to such <code>FunctionDeclarations</code>. Because of these irreconcilable difference, the use of a <code>FunctionDeclaration</code> as a <code>Statement</code> results in code that is not reliably portable among implementations. It is recommended that ECMAScript implementations either disallow this usage of <code>FunctionDeclaration</code> or issue a warning when such a usage is encountered. Future editions of ECMAScript may define alternative portable means for declaring functions in a <code>Statement</code> context.</p>\n</blockquote>\n\n<p>For further reading, you may also be interested in checking out the <a href=\"http://www.jibbering.com/faq/#functionStatement\">comp.lang.javascript FAQ Section 4.2</a>: </p>\n\n<blockquote>\n  <p><strong>4.2 What is a function statement?</strong></p>\n  \n  <p>The term function statement has been widely and wrongly used to describe a <code>FunctionDeclaration</code>. This is misleading because in ECMAScript, a <code>FunctionDeclaration</code> is not a <code>Statement</code>; there are places in a program where a <code>Statement</code> is permitted but a <code>FunctionDeclaration</code> is not. To add to this confusion, some implementations, notably Mozillas', provide a syntax extension called function statement. This is allowed under section 16 of ECMA-262, Editions 3 and 5.</p>\n  \n  <p><strong>Example of nonstandard function statement:</strong></p>\n\n<pre><code>// Nonstandard syntax, found in GMail source code. DO NOT USE.\ntry {\n  // FunctionDeclaration not allowed in Block.\n  function Fze(b,a){return b.unselectable=a}\n  /*...*/\n} catch(e) { _DumpException(e) }\n</code></pre>\n  \n  <p>Code that uses function statement has three known interpretations. Some implementations process <code>Fze</code> as a Statement, in order. Others, including JScript, evaluate <code>Fze</code> upon entering the execution context that it appears in. Yet others, notably DMDScript and default configuration of BESEN, throw a <code>SyntaxError</code>.</p>\n  \n  <p>For consistent behavior across implementations, do not use function statement; use either <code>FunctionExpression</code> or <code>FunctionDeclaration</code> instead.</p>\n  \n  <p><strong>Example of FunctionExpression (valid):</strong></p>\n\n<pre><code>var Fze;\ntry {\n  Fze = function(b,a){return b.unselectable=a};\n  /*...*/\n} catch(e) { _DumpException(e) }\n</code></pre>\n  \n  <p><strong>Example of FunctionDeclaration (valid):</strong></p>\n\n<pre><code>// Program code\nfunction aa(b,a){return b.unselectable=a}\n</code></pre>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Version 5 of ECMA-262 says it shouldn't be valid:</p>\n\n<blockquote>\n  <p>FunctionDeclarations are only allowed\n  to appear in Program or FunctionBody.\n  Syntactically, they can not appear in\n  Block ({ ... }) \u2014 such as that of if,\n  while or for statements. This is\n  because Blocks can only contain\n  Statements, not SourceElements, which\n  FunctionDeclaration is. If we look at\n  production rules carefully, we can see\n  that the only way Expression is\n  allowed within Block is when it is\n  part of ExpressionStatement. However,\n  ExpressionStatement is explicitly\n  defined to not begin with \"function\"\n  keyword, and this is exactly what\n  makes FunctionExpression invalid as\n  part of a Statement or Block (note\n  that Block is merely a list of\n  Statements).</p>\n</blockquote>\n\n<p>However, it seems not many interpreters obey this rule. Kangax says they should be considered syntactical errors per <a href=\"http://kangax.github.com/nfe/\" rel=\"nofollow\">this page</a>:</p>\n\n<blockquote>\n  <p>Because of these restrictions,\n  whenever function appears in a block\n  (such as in previous example) it\n  should actually be considered a syntax\n  error, not function declaration or\n  expression. The problem is that almost\n  none of the implementations I've seen\n  parse these functions strictly per\n  rules (exceptions are BESEN and\n  DMDScript). They interpret them in\n  proprietary ways instead.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>No, it's invalid. Function <em>declarations</em> can only appear as \"source elements\", which are either in the global scope or immediately within another function definition, outside all other statements. From the ECMA-262 spec:</p>\n\n<blockquote>\n  <p>FunctionBody : SourceElements</p>\n  \n  <p>Program :  SourceElements</p>\n  \n  <p>SourceElement :  Statement | FunctionDeclaration</p>\n</blockquote>\n\n<p>There is no other production in the grammar that allows a <code>FunctionDeclaration</code>.</p>\n\n<p>Only function <em>expressions</em> are allowed to be part of a statement:</p>\n\n<blockquote>\n  <p>MemberExpression :  FunctionExpression</p>\n  \n  <p>...</p>\n  \n  <p>Statement :  ExpressionStatement</p>\n</blockquote>\n\n<p><strong>Edit:</strong> There was a related discussion on another question recently. See the comments on <a href=\"http://stackoverflow.com/questions/3927054/jslint-error-dont-make-functions-within-a-loop-leads-to-question-about-javasc/3927107#3927107\">this answer</a> - earlier, I too thought that this <em>could</em> be valid but the grammar makes it clear that it is invalid.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"http://bclary.com/2004/11/07/#a-14\" rel=\"nofollow\">From ECMA 262 chapter 14</a></p>\n\n<blockquote>\n  <ol>\n  <li>Program Syntax</li>\n  </ol>\n  \n  <p>Program : SourceElements\n  SourceElements : SourceElement \n  SourceElements SourceElement\n  SourceElement : Statement \n  FunctionDeclaration Semantics</p>\n  \n  <p>The production Program :\n  SourceElements is evaluated as\n  follows:</p>\n  \n  <ol>\n  <li><p>Process SourceElements for function declarations.</p></li>\n  <li><p>Evaluate SourceElements.</p></li>\n  <li><p>Return Result(2).</p></li>\n  </ol>\n  \n  <p>The production SourceElements :\n  SourceElement is processed for\n  function declarations as follows:</p>\n  \n  <ol>\n  <li>Process SourceElement for function declarations.</li>\n  </ol>\n  \n  <p>The production SourceElements :\n  SourceElement is evaluated as follows:</p>\n  \n  <ol>\n  <li><p>Evaluate SourceElement.</p></li>\n  <li><p>Return Result(1).</p></li>\n  </ol>\n  \n  <p>The production SourceElements :\n  SourceElements SourceElement is\n  processed for function declarations as\n  follows:</p>\n  \n  <ol>\n  <li><p>Process SourceElements for function declarations.</p></li>\n  <li><p>Process SourceElement for function declarations.</p></li>\n  </ol>\n  \n  <p>The production SourceElements :\n  SourceElements SourceElement is\n  evaluated as follows:</p>\n  \n  <ol>\n  <li><p>Evaluate SourceElements.</p></li>\n  <li><p>If Result(1) is an abrupt completion, return Result(1)</p></li>\n  <li><p>Evaluate SourceElement.</p></li>\n  <li><p>Return Result(3).</p></li>\n  </ol>\n  \n  <p><strong>The production SourceElement :</strong>\n  *<em>Statement is processed for function</em>*\n  <strong>declarations by taking no action.</strong></p>\n  \n  <p><strong>The production SourceElement :</strong>\n  *<em>Statement is evaluated as follows:</em>*</p>\n  \n  <p><strong>1. Evaluate Statement.</strong></p>\n  \n  <p><strong>2. Return Result(1).</strong></p>\n  \n  <p>The production SourceElement :\n  FunctionDeclaration is processed for\n  function declarations as follows:</p>\n  \n  <ol>\n  <li>Process FunctionDeclaration for function declarations (see clause 13).</li>\n  </ol>\n  \n  <p>The production SourceElement :\n  FunctionDeclaration is evaluated as\n  follows:</p>\n  \n  <ol>\n  <li>Return (normal, empty, empty).</li>\n  </ol>\n</blockquote>\n\n<p>The awnser is officially NO. (\u0160ime Vidas convinced me the hard way in another question)</p>\n\n<p>But no Exception is specified either so it fails or works silently depending on browser implementations.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In the ECMAScript standard, a FunctionDeclaration is not defined as a Statement, and a Statement is not defined as being able to contain a FunctionDeclaration, so they are not compatible according to the standard (though in practice every JavaScript interpreter will attempt to do <em>something</em> sensible, albeit not consistent between implementations).</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Please consider the official ECMAScript specification as the source for your answer, and not a document published by a specific browser vendor. (I am aware of Mozilla extending its JavaScript implementation with \"function statements\".) </p>\n\n<p>So, according to the ECMAScript spec, ergo, the syntactic productions defined in it, <strong>is this valid?</strong></p>\n\n<pre><code>if (foo) {\n    function x() { return; }\n}\n</code></pre>\n\n<p><em><strong>Update:</em></strong> My question can also be phrased like so: Can the <em>Statement</em> production contain the <em>FunctionDeclaration</em> production?  </p>\n\n<p><em><strong>Conclusion:</em></strong> The answer is NO.</p>\n",
            "last_activity_date": 1288642112,
            "question_id": 4071292,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "May function declarations appear inside statements in JavaScript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The on the fly bit is going to be difficult to make reliable and speedy. </p>\n\n<p>People won't type http most of the time or even www. <br/></p>\n\n<p>The end, like you said, is going to be hard to determine if the url contains a space or worse, runs into the next sentence because the user didn't put in a space.<br/></p>\n\n<p>And what if people need to change the url after the fact because they typed <a href=\"http://stakoverflow.com/\" rel=\"nofollow\">http://stakoverflow.com/</a> instead of <a href=\"http://stackoverflow.com/\">http://stackoverflow.com/</a> ?</p>\n\n<p>I think the best solution would be an \"insert shortened url\" button on your text editor that allowed people to do just that. Or, do it server-side when the post is made.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Why not do a jQuery POST to the Bit.ly API?\n<a href=\"http://blog.themeforest.net/tutorials/creating-an-ajax-web-app-using-the-bitly-api/\" rel=\"nofollow\">http://blog.themeforest.net/tutorials/creating-an-ajax-web-app-using-the-bitly-api/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found your post while looking for something similar and eventually just wrote a jQuery plugin that provides (at least part of) what you're looking for.</p>\n\n<p>My <a href=\"http://bitbucket.org/jiaaro/jquery-urlshortener/wiki/Home\" rel=\"nofollow\">jQuery Url Shortener</a> on Bitbucket</p>\n\n<p>It's a very simple plugin; I didn't need to shorten the user's urls so I don't have any length checking or url testing before shortening it, though I am not averse to adding those types of features.</p>\n\n<p>Just thought you might find it useful.</p>\n\n<p>As for Recognising URLs in your textbox, I would suggest using a <a href=\"http://www.google.com/search?sourceid=chrome&amp;ie=UTF-8&amp;q=url+regex\" rel=\"nofollow\">RegEx to match the url</a>. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is an example how to get a shortened URL with Bitly API and jQuery:</p>\n\n<pre><code>function get_short_url(long_url, login, api_key, func)\n{\n    $.getJSON(\n        \"http://api.bitly.com/v3/shorten?callback=?\", \n        { \n            \"format\": \"json\",\n            \"apiKey\": api_key,\n            \"login\": login,\n            \"longUrl\": long_url\n        },\n        function(response)\n        {\n            func(response.data.url);\n        }\n    );\n}\n</code></pre>\n\n<p>The following code could be used to get a short URL:</p>\n\n<pre><code>/*\nSign up for Bitly account at\n https://bitly.com/a/sign_up\n\nand upon completion visit\nhttps://bitly.com/a/your_api_key/ \nto get \"login\" and \"api_key\" values\n*/\nvar login = \"LOGIN_HERE\";\nvar api_key = \"API_KEY_HERE\";\nvar long_url = \"http://www.kozlenko.info\";\n\nget_short_url(long_url, login, api_key, function(short_url) {\n    console.log(short_url);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>You could also generate a short url with php and curl on the server, this way you don't have to expose your API key in the webpage:</p>\n\n<pre><code>&lt;?php\n    //the long url posted by your webpage\n    $url = strip_tags($_POST[\"url\"]);\n\n    $api_user = \"your_bitly_user_name\";\n    $api_key = \"your_bitly_api_key\";\n\n    //send it to the bitly shorten webservice\n    $ch = curl_init (\"http://api.bitly.com/v3/shorten?login=$api_user&amp;apiKey=$api_key&amp;longUrl=$url&amp;format=json\");\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n    //the response is a JSON object, send it to your webpage\n    echo curl_exec($ch);    \n?&gt;\n</code></pre>\n\n<p>Then in your webpage the code should be something like:</p>\n\n<pre><code>    //the long url that you want to shorten\n    var longUrl = escape(window.location.href)\n\n    $.ajax({\n        url : \"php/getShortUrl.php\",//this is the php script above\n        dataType : \"json\",\n        type : \"POST\",\n        data : {\n            url : longUrl\n        },\n        success : function(data) {\n            if(data.status_txt === \"OK\"){\n                shortUrl = data.data.url;\n            }\n        },\n        error : function(xhr, error, message) {\n            //no success, fallback to the long url\n            shortUrl = longUrl\n        }\n    });\n</code></pre>\n\n<p>See the <a href=\"http://code.google.com/p/bitly-api/wiki/ApiDocumentation\" rel=\"nofollow\">bitly API</a> for more details</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I guess the API of Bitly has changed slightly. You now only really need an access token to request a short URL.</p>\n\n<p>Following the <a href=\"http://dev.bitly.com/best_practices.html\" rel=\"nofollow\">best practices</a>, I created the following Javascript-only snippet:</p>\n\n<pre><code>getShortUrl: function(url, callback)\n{\n   var accessToken = '___YOUR_ACCESS_TOKEN___';\n   var url = 'https://api-ssl.bitly.com/v3/shorten?access_token=' + accessToken + '&amp;longUrl=' + encodeURIComponent(url);\n\n    $.getJSON(\n        url,\n        {},\n        function(response)\n        {\n            if(callback)\n                callback(response.data.url);\n        }\n    );\n},\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm looking for an on the fly URL shortener much like how tweetdeck works. I have found many jQuery and general javascript plugins that take a url and run it through a shortening service such as bit.ly when a button is pressed. However, I have not been able to find one that does it on the fly. My first question is does this already exist someplace? Secondly, if it doesn't, then what would be the best way to recognize a URL that needs to be shortened inside a textbox? My thoughts:</p>\n\n<ol>\n<li>On onKeyUp of that text area run through the text looking for http</li>\n<li>If found grab the whole URL (how do I determine the end? could be period, comma, space, etc...)</li>\n<li>Make sure the URL isn't already a bit.ly URL</li>\n<li>Validate the URL (make a request and make sure the http response is not an error, does bit.ly already do this?)</li>\n<li>If valid, send the url to bit.ly's API and get the response</li>\n<li>Replace the long URL with the short URL in the text area.</li>\n</ol>\n\n<p>Thoughts?</p>\n",
            "last_activity_date": 1393492961,
            "question_id": 1771397,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "url-rewriting",
                "bit.ly",
                "url-shortener"
            ],
            "title": "jQuery on the fly URL shortener"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>var cumulativeOffset = function(element) {\n    var top = 0, left = 0;\n    do {\n        top += element.offsetTop  || 0;\n        left += element.offsetLeft || 0;\n        element = element.offsetParent;\n    } while(element);\n\n    return {\n        top: top,\n        left: left\n    };\n};\n</code></pre>\n\n<p>(Method shamelessly stolen from PrototypeJS; code style, variable names and return value changed to protect the innocent)</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>You will get a different value in each browser FireFox and IE when you are using offsetTop and offsetLeft. I think it makes you don't waste your time like I do.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>I would definitely suggest using <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element.getBoundingClientRect\">element.getBoundingClientRect()</a>.</strong></p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element.getBoundingClientRect\">https://developer.mozilla.org/en-US/docs/Web/API/element.getBoundingClientRect</a></p>\n\n<blockquote>\n  <h2>Summary</h2>\n  \n  <p>Returns a text rectangle object that encloses a group of text\n  rectangles.</p>\n  \n  <h2>Syntax</h2>\n  \n  <p><code>var rectObject = object.getBoundingClientRect();</code></p>\n  \n  <h2>Returns</h2>\n  \n  <p>The returned value is a <a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIDOMClientRect\">TextRectangle</a> object which is the union of the\n  rectangles returned by <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element.getClientRects?redirectlocale=en-US&amp;redirectslug=DOM/element.getClientRects\">getClientRects()</a> for the element, i.e., the CSS\n  border-boxes associated with the element.</p>\n  \n  <p>The returned value is a <code>TextRectangle</code> object, which contains read-only\n  <code>left</code>, <code>top</code>, <code>right</code> and <code>bottom</code> properties describing the border-box, in\n  pixels, with the top-left relative to the top-left of the viewport.</p>\n</blockquote>\n\n<p>Here's a browser compatibility table taken from the linked MDN site:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>+---------------+--------+-----------------+-------------------+-------+--------+\n|    Feature    | Chrome | Firefox (Gecko) | Internet Explorer | Opera | Safari |\n+---------------+--------+-----------------+-------------------+-------+--------+\n| Basic support | 1.0    | 3.0 (1.9)       | 4.0               | (Yes) | 4.0    |\n+---------------+--------+-----------------+-------------------+-------+--------+\n</code></pre>\n\n<p>It's widely supported, and is really easy to use, not to mention that it's really fast. Here's a related  article from John Resig: <a href=\"http://ejohn.org/blog/getboundingclientrect-is-awesome/\">http://ejohn.org/blog/getboundingclientrect-is-awesome/</a></p>\n\n<p>You can use it like this:</p>\n\n<pre><code>var logo = document.getElementById('hlogo');\nvar logoTextRectangle = logo.getBoundingClientRect();\n\nconsole.log(\"logo's left pos.:\", logoTextRectangle.left);\nconsole.log(\"logo's right pos.:\", logoTextRectangle.right);\n</code></pre>\n\n<p>Here's a really simple <strong>example</strong>: <a href=\"http://jsbin.com/awisom/2\">http://jsbin.com/awisom/2</a> (you can view and edit the code by clicking <em>\"Edit in JS Bin\"</em> in the upper right corner).</p>\n\n<p>Or here's another one using Chrome's console:\n<a href=\"http://i.stack.imgur.com/eDkj3.png\"><img src=\"http://i.stack.imgur.com/eDkj3.png\" alt=\"Using element.getBoundingClientRect() in Chrome\"></a></p>\n\n<h3>Note:</h3>\n\n<p>I have to mention that the <code>width</code> and <code>height</code> attributes of the <code>getBoundingClientRect()</code> method's return value are <code>undefined</code> in Internet Explorer 8. It works in Chrome 26.x, Firefox 20.x and Opera 12.x though. Workaround in IE8: for <code>width</code>, you could subtract the return value's right and left attributes, and for <code>height</code>, you could subtract bottom and top attributes (<a href=\"http://jsbin.com/awisom/3/edit\">like this</a>).</p>\n",
                    "is_accepted": false,
                    "score": 27
                }
            ],
            "body": "<p>I want to get an object's absolute x,y position on the page in Javascript.  How can I do this?</p>\n\n<p>I tried <code>obj.offsetTop</code> and <code>obj.offsetLeft</code>, but those only give the position relative to the parent element.  I guess I could loop through and add the parent's offset, and its parent's offset, and so on until I get to the object with no parent, but it seems like there should be a better way. Googling didn't turn up much, and even SO site search isn't finding anything.</p>\n\n<p>Also, I can't use jQuery.</p>\n",
            "last_activity_date": 1368896590,
            "question_id": 1480133,
            "score": 11,
            "tags": [
                "javascript",
                "dom",
                "offset"
            ],
            "title": "How can I get an object&#39;s absolute position on the page in Javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If the divs are hidden, they will never trigger the <code>mouseover</code> event.</p>\n\n<p>You will have to listen to the event of some other unhidden element.</p>\n\n<p>You can consider wrapping your hidden divs into container divs that remain visible, and then act on the <code>mouseover</code> event of these containers.</p>\n\n<pre><code>&lt;div style=\"width: 80px; height: 20px; background-color: red;\" \n        onmouseover=\"document.getElementById('div1').style.display = 'block';\"&gt;\n   &lt;div id=\"div1\" style=\"display: none;\"&gt;Text&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>You could also listen for the <code>mouseout</code> event if you want the div to disappear when the mouse leaves the container div:</p>\n\n<pre><code>onmouseout=\"document.getElementById('div1').style.display = 'none';\"\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p><strong>Option 1</strong> Each div is specifically identified, so any other div (without the specific IDs) on the page will not obey the :hover pseudo-class.</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n  #div1, #div2, #div3{  \n    display:none;  \n  }  \n  #div1:hover, #div2:hover, #div3:hover{  \n    display:block;  \n  }\n&lt;/style&gt;\n</code></pre>\n\n<p><strong>Option 2</strong> All divs on the page, regardless of IDs, have the hover effect.</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n  div{  \n    display:none;  \n  }  \n  div:hover{  \n    display:block;  \n  }\n&lt;/style&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could wrap the hidden div in another div that will toggle the visibility with onMouseOver and onMouseOut event handlers in JavaScript:</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n  #div1, #div2, #div3 {  \n    visibility: hidden;  \n  }\n&lt;/style&gt;\n&lt;script&gt;\n  function show(id) {\n    document.getElementById(id).style.visibility = \"visible\";\n  }\n  function hide(id) {\n    document.getElementById(id).style.visibility = \"hidden\";\n  }\n&lt;/script&gt;\n\n&lt;div onMouseOver=\"show('div1')\" onMouseOut=\"hide('div1')\"&gt;\n  &lt;div id=\"div1\"&gt;Div 1 Content&lt;/div&gt;\n&lt;/div&gt;\n&lt;div onMouseOver=\"show('div2')\" onMouseOut=\"hide('div2')\"&gt;\n  &lt;div id=\"div2\"&gt;Div 2 Content&lt;/div&gt;\n&lt;/div&gt;\n&lt;div onMouseOver=\"show('div3')\" onMouseOut=\"hide('div3')\"&gt;\n  &lt;div id=\"div3\"&gt;Div 3 Content&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Pass the mouse over the container and go hovering on the divs I use this for jQuery DropDown menus mainly:</p>\n\n<p>Copy the whole document and create a .html file you'll be able to figure out on your own from that!</p>\n\n<pre><code>            &lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n            &lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n            &lt;head&gt;\n            &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n            &lt;title&gt;The Divs Case&lt;/title&gt;\n            &lt;style type=\"text/css\"&gt;\n            * {margin:0px auto;\n            padding:0px;}\n\n            .container {width:800px;\n            height:600px;\n            background:#FFC;\n            border:solid #F3F3F3 1px;}\n\n            .div01 {float:right;\n            background:#000;\n            height:200px;\n            width:200px;\n            display:none;}\n\n            .div02 {float:right;\n            background:#FF0;\n            height:150px;\n            width:150px;\n            display:none;}\n\n            .div03 {float:right;\n            background:#FFF;\n            height:100px;\n            width:100px;\n            display:none;}\n\n            div.container:hover div.div01 {display:block;}\n            div.container div.div01:hover div.div02  {display:block;}\n            div.container div.div01 div.div02:hover div.div03 {display:block;}\n\n            &lt;/style&gt;\n            &lt;/head&gt;\n            &lt;body&gt;\n\n            &lt;div class=\"container\"&gt;\n              &lt;div class=\"div01\"&gt;\n                &lt;div class=\"div02\"&gt;\n                    &lt;div class=\"div03\"&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n              &lt;/div&gt;\n\n            &lt;/div&gt;\n            &lt;/body&gt;\n            &lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is a really simple way to do this.</p>\n\n<p>First apply opacity equals 0 to your divs:</p>\n\n<pre><code>div {\nopacity: 0;\n}\n</code></pre>\n\n<p>Then your :hover to your divs:</p>\n\n<pre><code>div:hover {\nopacity: 1;\n}\n</code></pre>\n\n<p>It works by using opacity instead of visibility. Opacity still allows the div any onclick or :hover actions but visibility doesn't.</p>\n\n<p>Hope this helped...</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to simply show a set of hidden divs on mouseover. </p>\n\n<p>so if </p>\n\n<pre><code>#div1\n\n#div2 \n\n#div3\n</code></pre>\n\n<p>all need to be shown on mouseover, how to I do this?</p>\n",
            "last_activity_date": 1426083132,
            "question_id": 2707100,
            "score": 10,
            "tags": [
                "javascript",
                "css",
                "html",
                "mouseover"
            ],
            "title": "How to show hidden divs on mouseover?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I use following code to move div box to follow cursor in this <a href=\"http://burglish.com\">Web IME site</a></p>\n\n<pre><code>function xy(x) {\n    o = document.getElementById(x);\n    var l =o.offsetLeft; var t = o.offsetTop;\n    while (o=o.offsetParent)\n    \tl += o.offsetLeft;\n    o = document.getElementById(x);\n    while (o=o.offsetParent)\n    \tt += o.offsetTop;\n    return [l,t];\n}\n</code></pre>\n\n<p>Its return an array [left,top], </p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Getting the exact position is simply a matter of adding the offsetLefts and offsetTops recursively to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element.offsetParent\">offsetParents</a>:</p>\n\n<pre><code>function getPos(ele){\n    var x=0;\n    var y=0;\n    while(true){\n        x += ele.offsetLeft;\n        y += ele.offsetTop;\n        if(ele.offsetParent === null){\n            break;\n        }\n        ele = ele.offsetParent;\n    }\n    return [x, y];\n}\n</code></pre>\n\n<p>Btw, this solution would probably run twice faster than <em>YOU</em>'s solution since we only loop once.</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I've seen a dozen of script that can catch the x and y position of an element/object within the page. But i am always having trouble with catching the x and y when the webpage is using margins at the body, or other elements, absolute/relative elements, such like that.</p>\n\n<p>Is there a solution wich provides the exact position, no matter what margins or paddings are used.</p>\n\n<p>:)</p>\n",
            "last_activity_date": 1402268957,
            "question_id": 1769584,
            "score": 10,
            "tags": [
                "javascript",
                "position",
                "margin",
                "absolute"
            ],
            "title": "Get position of element by javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You might wanna check out more on <a href=\"http://ajaxpatterns.org/Unique_URLs\" rel=\"nofollow\">Unique URLs</a>. </p>\n\n<p>It's loading the page via AJAX, and parsing the \"hash\" (the values that come after the \"#\") to determine which page it's going to load. Also, this method is used due to the nature that AJAX  requests don't count to the browser's history thus the \"back button breaks\". But the browser does however store into history the hash changes. </p>\n\n<p>Using hashes plus the fact that you can use hashes to determine pages, you can say that you can keep AJAX requested pages \"in history\". Added to that, hashed URLs are just URLs, and they are bookmarkable including the hash, so you can also bookmark AJAX requested pages.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>\"Hash-Bang\"</strong> navigation, as it's sometimes called,...</p>\n\n<pre><code>http://whatever.com/path/to/#!/some-ajax-state\n</code></pre>\n\n<p>...is a temporary solution for a temporary problem that is quickly becoming a non-issue thanks to modern browser standards. In all likelihood, Twitter will phase it out, as Facebook is already doing.</p>\n\n<p><strong>It is the combination of several concepts...</strong></p>\n\n<p><strong>In the past, a link served two purposes</strong>: It loaded a new document and/or scrolled down to an embedded anchor as indicated with the hash (#).</p>\n\n<pre><code>http://whatever.com/script.php#fourth-paragraph\n</code></pre>\n\n<p>Anything in a URL after the hash was not requested from the server, but was searched for in the page by the browser. This all still works just fine.</p>\n\n<p><strong>With the adoption of AJAX</strong>, new content could be loaded into the current (already loaded) page. With this dynamic loading, <strong>several problems arose</strong>: 1) there was no unique URL for bookmarking or linking to this new content, 2) search would never see it.</p>\n\n<p>Some smart people solved the first problem by using the hash as a sort of \"state\" reference to be included in links &amp; bookmarks. After the document loads, the browser reads the hash and runs the AJAX requests, displaying the page plus its dynamic AJAX changes.</p>\n\n<pre><code>http://whatever.com/script.php#some-ajax-state\n</code></pre>\n\n<p>This solved the AJAX problem, but the <strong>search engine problem still existed</strong>. Search engines don't load pages and execute Javascript like a browser.</p>\n\n<p>Google to the rescue. Google proposed a scheme where any URL with a hash-bang (#!) in lieu of just a hash (#) would suggest to the search bot that there was an alternate URL for indexing, which involved an \"_escaped_fragment_\" variable, among other things. Read about it here...</p>\n\n<p><a href=\"https://developers.google.com/webmasters/ajax-crawling/docs/getting-started\">https://developers.google.com/webmasters/ajax-crawling/docs/getting-started</a></p>\n\n<p>Today, with the adoption of Javascript's <strong>pushstate</strong> in most major browsers, all of this is becoming obsolete. With pushstate, as content is dynamically loaded or changed, the current page URL can be altered without causing a page load. When desired, this provides a real working URL for bookmarks &amp; history. Links can then be made as they always were, <strong>without hashes &amp; hash-bangs</strong>.</p>\n\n<p>As of today, if you load Facebook in an older browser, you'll see the hash-bangs, but a current browser will demonstrate the use of pushstate.</p>\n",
                    "is_accepted": true,
                    "score": 48
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/3009380/whats-the-shebang-hashbang-in-facebook-and-new-twitter-urls-for\">What\u2019s the shebang/hashbang (#!) in Facebook and new Twitter URLs for?</a>  </p>\n</blockquote>\n\n\n\n<p>I was wondering how Twitter works its links.</p>\n\n<p>If you look in the source code, you use the links are done like /#!/i/connect or /#!/i/discover, but they don't have a JavaScript function attached to them like load('connect') or something, and that it doesn't require a page reload. It just changes out the page content.</p>\n\n<p>I saw <a href=\"http://stackoverflow.com/questions/4979581/change-browser-url-and-page-content-without-reload-and-without-using-fragments\">this</a> page, but then all of those files would have to exist, and you couldn't just go straight to one of them. I imagine that on Twitter each of those files don't exist, and that it is handled in some other method. Please correct me if I'm wrong, though.</p>\n\n<p>Is there a way I could replicate this effect? If so, is there a tutorial on how to go about doing this?</p>\n",
            "last_activity_date": 1372900448,
            "question_id": 9952187,
            "score": 9,
            "tags": [
                "javascript",
                "html",
                "seo",
                "hashbang"
            ],
            "title": "Doing links like Twitter, Hash-Bang #! URL&#39;s"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I just got your problem.</p>\n\n<p>Have a JS function like this.</p>\n\n<pre><code>function androidResponse() {\n   window.cpjs.sendToAndroid(\"I am being sent to Android.\");\n}\n</code></pre>\n\n<p>Set up Android (Java).</p>\n\n<p>Have a final class like this </p>\n\n<pre><code>final class IJavascriptHandler {\n   IJavascriptHandler() {\n   }\n\n   // This annotation is required in Jelly Bean and later:\n   @JavascriptInterface\n   public void sendToAndroid(String text) {\n      // this is called from JS with passed value\n      Toast t = Toast.makeText(getApplicationContext(), text, 2000);\n      t.show();\n   }\n}\n</code></pre>\n\n<p>Then on your WebView load have.</p>\n\n<pre><code>webView.addJavascriptInterface(new IJavascriptHandler(), \"cpjs\");\n</code></pre>\n\n<p>Call JS function</p>\n\n<pre><code>webView.loadUrl(\"javascript:androidResponse();void(0)\");\n</code></pre>\n\n<p>UPDATED</p>\n\n<hr>\n\n<p>Also I had a very bad time experiencing problems while passing hundreds of lines of string to JS from Java and I have subsequent post on StackOverflow with no good answers but finally resolved it knowing problme was of special characters inside string so take of special characters when you use string passing to and fro.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/4906158/passing-data-from-javascript-to-android-webview\">Passing Data From Javascript To Android WebView</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/4970691/html-string-inside-nested-string\">HTML String Inside Nested String</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/5002417/html-textarea-characters-limit-inside-android-webview\">HTML TextArea Characters Limit Inside Android WebView</a></p>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p>I want to let my <strong>android</strong> app call a function written in <strong>javascript</strong> and expect a return value from that.</p>\n\n<p>I understand that <strong>WebView.loadUrl</strong> works asynchronously, so what I am doing now is to let javascript notify my android app when it is done and pass in the return value by calling a java function using <strong>javascriptinterface</strong>.</p>\n\n<p>I wonder if there are better ways of doing this and whether anyone has noticed any message loss between javascript and android.</p>\n",
            "last_activity_date": 1362404703,
            "question_id": 5264489,
            "score": 9,
            "tags": [
                "javascript",
                "android",
                "webview"
            ],
            "title": "How do I pass return values from a javascript function to android?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I think browsers which don't support rgba don't support base64 neither.\nHowever you can simply use a 2x2 px semi-transparent png background image (not 1x1 to avoid a weird bug with IE).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://robertnyman.com/2010/01/11/css-background-transparency-without-affecting-child-elements-through-rgba-and-filters/\">See this blog post</a> for a cross browser method:</p>\n\n<pre><code>.alpha60 {\n    /* Fallback for web browsers that doesn't support RGBa */\n    background: rgb(0, 0, 0);\n    /* RGBa with 0.6 opacity */\n    background: rgba(0, 0, 0, 0.6);\n    /* For IE 5.5 - 7*/\n    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000);\n    /* For IE 8*/\n    -ms-filter: \"progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000)\";\n}\n</code></pre>\n\n<blockquote>\n  <p>Web browser support</p>\n  \n  <p>RGBa support is available in: Firefox\n  3+ Safari 2+ Opera 10</p>\n  \n  <p>Filters in Internet Explorer are\n  available since Internet Explorer 5.5.</p>\n  \n  <p><strong>This means that this will work for\n  virtually everyone!</strong></p>\n</blockquote>\n\n<p><a href=\"http://kimili.com/journal/rgba-hsla-css-generator-for-internet-explorer/\">See here</a> for an easy way to generate the colors for the IE filters.</p>\n\n<p>Doing this should eliminate the need to use \"base64 png images with 'data URI scheme'\".</p>\n\n<hr>\n\n<p>If you really, really want to generate client side <code>.png</code> images (I can't see the need for it here):</p>\n\n<p><a href=\"http://www.xarg.org/2010/03/generate-client-side-png-files-using-javascript/\">Generate client-side PNG files using JavaScript.</a> Cool idea, really:</p>\n\n<blockquote>\n  <p>It was once again one of those nights\n  where I hacked like on drugs with no\n  end in sight. Sure, 5 years ago you\n  had loved me with such a project, but\n  in times of HTML5 with the canvas\n  element it is hard to impress you. So\n  take it as proof of creating client\n  side images without canvas, SVG, or\n  server side rendering and AJAX\n  processing.</p>\n  \n  <p>But how is this possible? Well, I've\n  implemented a client-side JavaScript\n  library like libpng which creates a\n  PNG data stream. The resulting binary\n  data can be appended to the data\n  URI-scheme using Base64 encoding.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>You can use transparency all the way back to pre-Webkit Safari, IE5, Firefox .9... So old no one uses it. \n<a href=\"http://css-tricks.com/css-transparency-settings-for-all-broswers/\" rel=\"nofollow\">http://css-tricks.com/css-transparency-settings-for-all-broswers/</a></p>\n\n<pre><code>.transparent {\nzoom: 1;\nfilter: alpha(opacity=50);\nopacity: 0.5;\n}\n</code></pre>\n\n<p>Of course you can set these css properties on individual elements via your favorite Javascript libraries or by-hand.\nSo as your fallback, set your RBG normally then add the appropriate transparency</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I want to get rgba backgrounds working with all browsers. I did some searching and found out that generally there are three types of browsers out there:</p>\n\n<p>1) Browsers that supprot rgba.</p>\n\n<p>2) Internet Explorer that supports rgba via bizarre '-ms-filter' thing.</p>\n\n<p>3) Browsers that do not support rgba, but I could use base64 png images with 'data URI scheme'. (Even when browser does not support URI scheme, according to <a href=\"http://www.phpied.com/mhtml-when-you-need-data-uris-in-ie7-and-under/\">this</a> it still could be done.)</p>\n\n<p>I have no problems with rgba supporting browsers, and I can get it working with IE, but problem is that I have no idea how to generate client side base64 png images for URI scheme. I really do not want to pregenerate png files, because my rgba values are not constant. I could go with dynamic png generation with php gd library, but I'd really like to do all this on client side. So I'd like to know, is there any good way out there for generating semi-transparent png images with java-script. After this I could just base64 encode them and use them with URI scheme?</p>\n\n<p>Thank you.</p>\n\n<p>Edit:</p>\n\n<p>I want to have semi-transparent div background, while having content fully visible.</p>\n",
            "last_activity_date": 1393242700,
            "question_id": 4792090,
            "score": 9,
            "tags": [
                "javascript",
                "css",
                "cross-browser",
                "rgba"
            ],
            "title": "Cross browser rgba transparent background while keeping content (text &amp; images) non-transparent"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>visit this page <a href=\"http://www.regular-expressions.info/unicode.html\" rel=\"nofollow\">Unicode Characters in Regular Expression</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>you can add the allowed special chars to the regex.</p>\n\n<p>example:</p>\n\n<pre><code>[a-zA-Z\u00df\u00f6\u00e4\u00fc\u00d6\u00c4\u00dc\u00e6\u00e9]+\n</code></pre>\n\n<p>EDIT:</p>\n\n<p>not the best solution, but this would give a result if there are at least to words.</p>\n\n<pre><code>[a-zA-Z\u00df\u00f6\u00e4\u00fc\u00d6\u00c4\u00dc\u00e6\u00e9]+\\s[a-zA-Z\u00df\u00f6\u00e4\u00fc\u00d6\u00c4\u00dc\u00e6\u00e9]+\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try the following regular expression:</p>\n\n<pre><code>^(?:[\\p{L}\\p{Mn}\\p{Pd}\\'\\x{2019}]+\\s[\\p{L}\\p{Mn}\\p{Pd}\\'\\x{2019}]+\\s?)+$\n</code></pre>\n\n<p>In PHP this translates to:</p>\n\n<pre><code>if (preg_match('~^(?:[\\p{L}\\p{Mn}\\p{Pd}\\'\\x{2019}]+\\s[\\p{L}\\p{Mn}\\p{Pd}\\'\\x{2019}]+\\s?)+$~u', $name) &gt; 0)\n{\n    // valid\n}\n</code></pre>\n\n<p>You should read it like this:</p>\n\n<pre><code>^   # start of subject\n    (?:     # match this:\n        [           # match a:\n            \\p{L}       # Unicode letter, or\n            \\p{Mn}      # Unicode accents, or\n            \\p{Pd}      # Unicode hyphens, or\n            \\'          # single quote, or\n            \\x{2019}    # single quote (alternative)\n        ]+              # one or more times\n        \\s          # any kind of space\n        [               #match a:\n            \\p{L}       # Unicode letter, or\n            \\p{Mn}      # Unicode accents, or\n            \\p{Pd}      # Unicode hyphens, or\n            \\'          # single quote, or\n            \\x{2019}    # single quote (alternative)\n        ]+              # one or more times\n        \\s?         # any kind of space (0 or more times)\n    )+      # one or more times\n$   # end of subject\n</code></pre>\n\n<p>I honestly don't know how to port this to Javascript, I'm not even sure Javascript supports Unicode properties but in PHP PCRE this <a href=\"http://www.ideone.com/eNQPq\">seems to work flawlessly @ IDEOne.com</a>:</p>\n\n<pre><code>$names = array\n(\n    'Alix',\n    'Andr\u00e9 Svenson',\n    'H4nn3 Andersen',\n    'Hans',\n    'John Elkj\u00e6rd',\n    'Kristoffer la Cour',\n    'Marco d\\'Almeida',\n    'Martin Henriksen!',\n);\n\nforeach ($names as $name)\n{\n    echo sprintf('%s is %s' . \"\\n\", $name, (preg_match('~^(?:[\\p{L}\\p{Mn}\\p{Pd}\\'\\x{2019}]+\\s[\\p{L}\\p{Mn}\\p{Pd}\\'\\x{2019}]+\\s?)+$~u', $name) &gt; 0) ? 'valid' : 'invalid');\n}\n</code></pre>\n\n<p>I'm sorry I can't help you regarding the Javascript part but probably someone here will.</p>\n\n<hr>\n\n<p><strong>Validates</strong>:</p>\n\n<ul>\n<li>John Elkj\u00e6rd</li>\n<li>Andr\u00e9 Svenson</li>\n<li>Marco d'Almeida</li>\n<li>Kristoffer la Cour</li>\n</ul>\n\n<p><strong>Invalidates</strong>:</p>\n\n<ul>\n<li>Hans</li>\n<li>H4nn3 Andersen</li>\n<li>Martin Henriksen!</li>\n</ul>\n\n<hr>\n\n<p>To replace invalid characters, though I'm not sure why you need this, you just need to change it slightly:</p>\n\n<pre><code>$name = preg_replace('~[^\\p{L}\\p{Mn}\\p{Pd}\\'\\x{2019}\\s]~u', '$1', $name);\n</code></pre>\n\n<p>Examples:</p>\n\n<ul>\n<li>H4nn3 Andersen <strong>-></strong> Hnn Andersen</li>\n<li>Martin Henriksen! <strong>-></strong> Martin Henriksen</li>\n</ul>\n\n<p>Note that you always need to use the <em>u</em> modifier.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>When checking your input string you could </p>\n\n<ul>\n<li>trim() it to remove leading/trailing whitespaces</li>\n<li>match against [^\\w\\s] to detect non-word\\non-whitespace characters</li>\n<li>match against \\s+ to get the number of word separators which equals to number of words + 1.</li>\n</ul>\n\n<p>However I'm not sure that the \\w shorthand includes accented characters, but it should fall into \"word characters\" category.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Regarding JavaScript it is more tricky, since JavaScript Regex syntax doesn't support unicode character properties. A pragmatic solution would be to match letters like this:</p>\n\n<pre><code>[a-zA-Z\\xC0-\\uFFFF]\n</code></pre>\n\n<p>This allows letters in all languages and excludes numbers and all the special (non-letter) characters commonly found on keyboards. It is imperfect because it also allows unicode special symbols which are not letters, e.g. emoticons, snowman and so on. However, since these symbols are typically not available on keyboards I don't think they will be entered by accident. So depending on your requirements it may be an acceptable solution.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's an optimization over the fantastic answer by @Alix above. It removes the need to define the character class twice, and allows for easier definition of any number of required words.</p>\n\n<pre><code>^(?:[\\p{L}\\p{Mn}\\p{Pd}\\'\\x{2019}]+(?:$|\\s+)){2,}$\n</code></pre>\n\n<p>It can be broken down as follows:</p>\n\n<pre><code>^         # start\n  (?:       # non-capturing group\n    [         # match a:\n      \\p{L}     # Unicode letter, or\n      \\p{Mn}    # Unicode accents, or\n      \\p{Pd}    # Unicode hyphens, or\n      \\'        # single quote, or\n      \\x{2019}  # single quote (alternative)\n    ]+        # one or more times\n    (?:       # non-capturing group\n      $         # either end-of-string\n    |         # or\n      \\s+       # one or more spaces\n    )         # end of group\n  ){2,}     # two or more times\n$         # end-of-string\n</code></pre>\n\n<p>Essentially, it is saying to find a word as defined by the character class, then either find one or more spaces or an end of a line. The <code>{2,}</code> at the end tells it that a minimum of two words must be found for a match to succeed. This ensures the OP's \"Hans\" example will not match.</p>\n\n<hr>\n\n<p>Lastly, since I found this question while looking for a similar solution for <a href=\"/questions/tagged/ruby\" class=\"post-tag\" title=\"show questions tagged 'ruby'\" rel=\"tag\">ruby</a>, here is the regular expression as can be used in Ruby 1.9+</p>\n\n<pre><code>\\A(?:[\\p{L}\\p{Mn}\\p{Pd}\\'\\U+2019]+(?:\\Z|\\s+)){2,}\\Z\n</code></pre>\n\n<p>The primary changes are using \\A and \\Z for beginning and end of string (instead of line) and Ruby's Unicode character notation.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Okay, I have read about regex all day now, and still don't understand it properly. What i'm trying to do is validate a name, but the functions i can find for this on the internet only use <code>[a-zA-Z]</code>, leaving characters out that i need to accept to.</p>\n\n<p>I basically need a regex that checks that the name is at least two words, and that it does not contain numbers or special characters like <code>!\"#\u00a4%&amp;/()=...</code>, however the words can contain characters like \u00e6, \u00e9, \u00c2 and so on...</p>\n\n<p>An example of an accepted name would be: \"John Elkj\u00e6rd\" or \"Andr\u00e9 Svenson\"<br />An non-accepted name would be: \"<strong>Hans</strong>\", \"H<b>4</b>nn<b>3</b> Andersen\" or \"Martin Henriksen<b>!</b>\"</p>\n\n<p>If it matters i use the javascript <code>.match()</code> function client side and want to use php's <code>preg_replace()</code> only \"in negative\" server side. (removing non-matching characters).</p>\n\n<p>Any help would be much appreciated.</p>\n\n<p><strong>Update:</strong><br />\nOkay, thanks to <a href=\"http://stackoverflow.com/questions/5963228/regex-for-names-with-special-characters/5963425#5963425\">Alix Axel's answer</a> i have the important part down, the server side one.</p>\n\n<p>But as the page from <a href=\"http://stackoverflow.com/questions/5963228/regex-for-names-with-special-characters/5963334#5963334\">LightWing's answer</a> suggests, i'm unable to find anything about unicode support for javascript, so i ended up with half a solution for the client side, just checking for at least two words and minimum 5 characters like this:</p>\n\n<pre><code>if(name.match(/\\S+/g).length &gt;= minWords &amp;&amp; name.length &gt;= 5) {\n  //valid\n}\n</code></pre>\n\n<p>An alternative would be to specify all the unicode characters as suggested in <a href=\"http://stackoverflow.com/questions/5963228/regex-for-names-with-special-characters/5963417#5963417\">shifty's answer</a>, which i might end up doing something like, along with the solution above, but it is a bit unpractical though.</p>\n",
            "last_activity_date": 1370384979,
            "question_id": 5963228,
            "score": 8,
            "tags": [
                "php",
                "javascript",
                "regex",
                "character-properties"
            ],
            "title": "Regex for names with special characters (Unicode)"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If you split your file into pieces starting with valid MP3 headers (12 bits of '1' aligned on byte boundary : FF Fx), you most probably would be fine.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>After more experimentation with decodeAudioData (on Chrome) this is what I've found:</p>\n\n<ul>\n<li>Any <em>initial</em> mp3 chunk will be successfully decoded as long as it is split on an mp3 frame boundary. Finding that boundary may not always be trivial (e.g. involve parsing mp3 headers) as even constant bitrate mp3s don't always contain constant-size frames. For example, 128kbps mp3 files contain 417-byte frames as well as 418-byte frames. (some frames contain an extra byte as padding).</li>\n<li>An arbitrary mp3 chunk is <em>not</em> guaranteed to be decodable even if split on exact frame boundaries on 'both sides'. Some chunks of this sort can be decoded but others cause decodeAudioData to throw an error. I'm guessing this has to do with <a href=\"http://wiki.hydrogenaudio.org/index.php?title=Bit_reservoir\" rel=\"nofollow\">mp3 bit reservoir</a> which creates a dependency between mp3 frames.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I'm trying to use decodeAudioData to decode and play back an initial portion of a larger mp3 file, in javascript. My first, crude, approach was slicing a number of bytes off the beginning of the mp3 and feeding them to decodeAudioData. Not surprisingly this fails.</p>\n\n<p>After some digging it seems that decodeAudioData is only able to work with 'valid mp3 chunks' as documented by <a href=\"http://stackoverflow.com/users/218471/fair-dinkum-thinkum\">Fair Dinkum Thinkum</a>, <a href=\"http://stackoverflow.com/questions/8759842/how-to-stream-mp3-data-via-websockets-with-node-js-and-socket-io\">here</a>.</p>\n\n<p>However there is no clarification about the structure of a valid mp3 chunk (the author of the aforementioned doesn't go into this). I am aware of the various mp3 splitters that exist out there but i'd like to approach this programmatically. (I'm trying to implement a kind of 'poor man's streaming' using nodejs on the server side).</p>\n\n<p>So, would splitting on mp3 frame headers be enough or do I need to do more? (perhaps 'closing' every chunk by appending some data at the end?) How about the 'byte reservoir'? Would this cause problems? For the record, I'm currently working with 128kbps cbr mp3s. Would this simplify the process in any way?</p>\n\n<p>Any info on what decodeAudioData expects as vaild data would be appreciated.</p>\n\n<p>Thank you.</p>\n\n<p>PS: I realise that this is perhaps a request for clarification on Fair Dinkum Thinkum's <a href=\"http://stackoverflow.com/questions/8759842/how-to-stream-mp3-data-via-websockets-with-node-js-and-socket-io\">post</a> but my low reputation is keeping me from posting a comment. So I can't see how else to do it but with a new question. Thanks again.</p>\n",
            "last_activity_date": 1392671163,
            "question_id": 10470742,
            "score": 7,
            "tags": [
                "javascript",
                "mp3",
                "web-audio"
            ],
            "title": "Define &#39;valid mp3 chunk&#39; for decodeAudioData (WebAudio API)"
        }
    ]
}
