{
    "items": [
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Refer to the function you're storing without the () at the end.  <code>doSomething</code> is a variable (that happens to be a function); <code>doSomething()</code> is an instruction to execute the function.</p>\n\n<p>Later on, when you're using the queue, you'll want something like <code>(functionQueue.pop())()</code> -- that is, execute functionQueue.pop, and then execute the return value of that call to pop.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can also use the <strong>.call()</strong> method of a function object.</p>\n\n<pre><code>function doSomething() {\n    alert('doSomething');\n}\n\nvar funcs = new Array();\n\nfuncs['doSomething'] = doSomething;\n\nfuncs['doSomething'].call();\n</code></pre>\n\n<p><hr /></p>\n\n<p>In addition, you can also add the function directly to the queue:</p>\n\n<pre><code>funcs['somethingElse'] = function() {\n    alert('somethingElse');\n};\n\nfuncs['somethingElse'].call();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>All functions are actually variables, so it's actually pretty easy to store all your functions in array (by referencing them without the <code>()</code>): </p>\n\n<pre><code>// Create your functions, in a variety of manners...\n// (The second method is preferable, but I show the first for reference.)\nfunction fun1() { alert(\"Message 1\"); };\nvar fun2 = function() { alert(\"Message 2\"); };\n\n// Create an array and append your functions to them\nvar funqueue = [];\nfunqueue.push(fun1);\nfunqueue.push(fun2);\n\n// Remove and execute the first function on the queue\n(funqueue.shift())();\n</code></pre>\n\n<p>This becomes a bit more complex if you want to pass parameters to your functions, but once you've setup the framework for doing this once it becomes easy every time thereafter.  Essentially what you're going to do is create a wrapper function which, when invoked, fires off a predefined function with a particular context and parameter set:</p>\n\n<pre><code>// Function wrapping code.\n// fn - reference to function.\n// context - what you want \"this\" to be.\n// params - array of parameters to pass to function.\nvar wrapFunction = function(fn, context, params) {\n    return function() {\n        fn.apply(context, params);\n    };\n}\n</code></pre>\n\n<p>Now that we've got a utility function for wrapping, let's see how it's used to create future invocations of functions:</p>\n\n<pre><code>// Create my function to be wrapped\nvar sayStuff = function(str) {\n    alert(str);\n}\n\n// Wrap the function.  Make sure that the params are an array.\nvar fun1 = wrapFunction(sayStuff, this, [\"Hello, world!\"]);\nvar fun2 = wrapFunction(sayStuff, this, [\"Goodbye, cruel world!\"]);\n\n// Create an array and append your functions to them\nvar funqueue = [];\nfunqueue.push(fun1);\nfunqueue.push(fun2);\n\n// Remove and execute all items in the array\nwhile (funqueue.length &gt; 0) {\n    (funqueue.shift())();   \n}\n</code></pre>\n\n<p>This code could be improved by allowing the wrapper to either use an array or a series of arguments (but doing so would muddle up the example I'm trying to make).</p>\n",
                    "is_accepted": true,
                    "score": 104
                },
                {
                    "body": "<p>Here is a nice Queue class you can use <strong>without</strong> the use of timeouts:</p>\n\n<pre><code>var Queue = (function(){\n\n    function Queue() {};\n\n    Queue.prototype.running = false;\n\n    Queue.prototype.queue = [];\n\n    Queue.prototype.add_function = function(callback) { \n        var _this = this;\n        //add callback to the queue\n        this.queue.push(function(){\n            var finished = callback();\n            if(typeof finished === \"undefined\" || finished) {\n               //  if callback returns `false`, then you have to \n               //  call `next` somewhere in the callback\n               _this.next();\n            }\n        });\n\n        if(!this.running) {\n            // if nothing is running, then start the engines!\n            this.next();\n        }\n\n        return this; // for chaining fun!\n    }\n\n    Queue.prototype.next = function(){\n        this.running = false;\n        //get the first element off the queue\n        var shift = this.queue.shift(); \n        if(shift) { \n            this.running = true;\n            shift(); \n        }\n    }\n\n    return Queue;\n\n})();\n</code></pre>\n\n<p>It can be used like so:</p>\n\n<pre><code>var queue = new Queue;\nqueue.add_function(function(){\n   //start running something\n});\nqueue.add_function(function(){\n   //start running something 2\n});\nqueue.add_function(function(){\n   //start running something 3\n});\n</code></pre>\n\n<p><sup>Originally posted <a href=\"http://stackoverflow.com/a/17528961/561731\">here</a></sup></p>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>I have created a Queue class in javascript and I would like to store functions as data in a queue. That way I can build up requests (function calls) and respond to them when I need to (actually executing the function).</p>\n\n<p>Is there any way to store a function as data, somewhat similar to</p>\n\n<pre><code>.setTimeout(\"doSomething()\", 1000);\n</code></pre>\n\n<p>except it would be</p>\n\n<pre><code>functionQueue.enqueue(doSomething());\n</code></pre>\n\n<p>Where it would store doSomething() as data so when I retrieve the data from the queue, the function would be executed.</p>\n\n<p>I'm guessing I would have to have doSomething() in quotes -> \"doSomething()\" and some how make it call the function using a string, anyone know how that could be done?</p>\n",
            "last_activity_date": 1373295813,
            "question_id": 899102,
            "score": 42,
            "tags": [
                "javascript",
                "function",
                "timeout",
                "queue"
            ],
            "title": "How do I store javascript functions in a queue for them to be executed eventually"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<h2><a href=\"http://emberjs.com/api/classes/Ember.View.html\">Ember.View</a></h2>\n\n<p>An <a href=\"http://emberjs.com/api/classes/Ember.View.html\">Ember.View</a> is currently limited to the tags that are created for you by the W3C. But if you wanted to define your own application-specific HTML tags and then implement their behavior using JavaScript? You can't do this actually with a <a href=\"http://emberjs.com/api/classes/Ember.View.html\">Ember.View</a>.</p>\n\n<h2><a href=\"http://emberjs.com/api/classes/Ember.Component.html\">Ember.Component</a></h2>\n\n<p>That's exactly what components let you do. In fact, it's such a good idea that the W3C is currently working on the <a href=\"https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/custom/index.html\">Custom Elements</a> spec.</p>\n\n<p>Ember's implementation of components tries to be as closely to the Web Components specification as possible. Once <a href=\"https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/custom/index.html\"><strong>Custom Elements</strong></a> are widely available in browsers, you should be able to easily migrate your Ember components to the W3C standard and have them be usable by other frameworks as well that have adopted the new standard.</p>\n\n<blockquote>\n  <p>This is so important to us that we are working closely with the standards bodies to ensure our implementation of components matches the roadmap of the web platform.</p>\n</blockquote>\n\n<p>Also important to note is that a <a href=\"http://emberjs.com/api/classes/Ember.Component.html\">Ember.Component</a> is actually a <a href=\"http://emberjs.com/api/classes/Ember.View.html\">Ember.View</a> (a subclass) but that is completely <strong>isolated</strong>. Property access in its templates go to the <strong>view</strong> object and actions are targeted also at the <strong>view</strong> object. There is no access to the surrounding <code>context</code> or outer <code>controller</code> <strong>all contextual information is passed in</strong>, which is not the case with a <a href=\"http://emberjs.com/api/classes/Ember.View.html\">Ember.View</a> which indeed has access to it's surrounding controller, for example inside a view you could do something like <code>this.get('controller')</code> which would give you the controller currently associated with the view. </p>\n\n<blockquote>\n  <p>So what is the main difference between a view and a component?</p>\n</blockquote>\n\n<p>So, the main difference besides that components let you create your own tags and in some point in the future when <a href=\"https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/custom/index.html\"><strong>Custom Elements</strong></a> are available also migrate/use those components in other frameworks that will support custom elements, is indeed that at some point an ember component will make a view somewhat obsolete depending on the specific implementation case.</p>\n\n<blockquote>\n  <p>And what would be a common example where I would prefer to use a view over a component and vice versa?</p>\n</blockquote>\n\n<p>Following the above this depends clearly on your use cases. But as a rule of thumb, if you need in your view access to it's surrounding controller etc. use a <a href=\"http://emberjs.com/api/classes/Ember.View.html\">Ember.View</a>, but if you want to isolated the view and pass in only the information that it needs to work making it context-agnostic and much more reusable, use a <a href=\"http://emberjs.com/api/classes/Ember.Component.html\">Ember.Component</a>.</p>\n\n<p>Hope it helps.</p>\n\n<h2>Update</h2>\n\n<p>With the publication of <a href=\"https://github.com/emberjs/rfcs/pull/15\">Road to Ember 2.0</a> you are now encouraged to use Components instead of Views in most of the cases.</p>\n",
                    "is_accepted": true,
                    "score": 132
                },
                {
                    "body": "<p>The answer is simple: <strong>use components</strong></p>\n\n<p>According to a training video that was recorded on August 2013, Yehuda Kats and Tom Dale (Ember Core Team Members) told the audience to not use views unless you're a framework developer. They've made lots of enhancements to Handlebars and introduced Components, so views are no longer necessary. Views are used internally to power things like {{#if}} and {{outlet}}.</p>\n\n<p>Components also closely mimic the Web Component standard that will be build into the browser, so there are lots of side benefits to becoming comfortable building Ember Components.</p>\n\n<p><strong>Update 2014-11-27</strong></p>\n\n<p>It's even more important now to use components instead of views, as Ember 2.0 will be using Routable Components when a route is entered, instead of a controller/view.  In order to future proof your app, it's best to stay away from Views.</p>\n\n<p>Sources: </p>\n\n<ul>\n<li>Road to Ember 2.0: <a href=\"https://github.com/emberjs/rfcs/pull/15\">https://github.com/emberjs/rfcs/pull/15</a></li>\n<li>Future-proofing your Ember 1.x code: <a href=\"https://gist.github.com/samselikoff/1d7300ce59d216fdaf97\">https://gist.github.com/samselikoff/1d7300ce59d216fdaf97</a></li>\n<li>There is no view, only component (Tom Dale): <a href=\"https://speakerdeck.com/tomdale/ember-2-dot-0-in-practice?slide=27\">https://speakerdeck.com/tomdale/ember-2-dot-0-in-practice?slide=27</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Use the features judiciously. That might seem like a bland statement which says nothing about how to solve the actual problem, but I've found it useful when I am writing ember. In my opinion, use components when they have a well defined and limited interaction with the outside world - An example of such a thing might be a datepicker widget. A datepicker does one thing and one thing only: It allows you to select a date range and provides an api for your app to access what the from and to dates are. You still need views in many cases for handling sophisticated user interaction. Just replacing views with components regardless of the use case is bad advice. Another criteria to decide what should be a view versus a component is this: How much customization does it have? If the user interface element has too much customization for your app, it makes sense to make it a view. If it is general and involves little customization, then it makes sense to make it into a component.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am learning ember.js, and I am trying to understand the difference between a view and a component.  I see both as a way of making reusable components.</p>\n\n<p>From Ember's website on views:</p>\n\n<blockquote>\n  <p>Views in Ember.js are typically only created for the following reasons:<br/>\n  -When you need sophisticated handling of user events<br/> \n  -When you want to create a <strong>re-usable component</strong></p>\n</blockquote>\n\n<p>From Ember's website on components:</p>\n\n<blockquote>\n  <p>A component is a custom HTML tag whose behavior you implement using JavaScript and whose appearance you describe using Handlebars templates. They allow you to create <strong>reusable controls</strong> that can simplify your application's templates.</p>\n</blockquote>\n\n<p>So what is the main difference between a view and a component?  And what would be a common example where I would prefer to use a view over a component and vice versa?</p>\n",
            "last_activity_date": 1421072173,
            "question_id": 18593424,
            "score": 103,
            "tags": [
                "javascript",
                "ember.js",
                "handlebars.js"
            ],
            "title": "Views vs Components in Ember.js"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I know for there's <a href=\"http://fluidapp.com/\" rel=\"nofollow\">Fluid</a> and <a href=\"https://wiki.mozilla.org/Prism\" rel=\"nofollow\">Prism</a> (there are others, that's the one I used to use) that let you load a website into what looks like a standalone app.</p>\n\n<p>In Chrome, you can create desktop shortcuts for websites. (you do that from within Chrome, you can't/shouldn't package that with your app) Chrome Frame is different:</p>\n\n<blockquote>\n  <p>Google Chrome Frame is a plug-in designed for Internet Explorer based\n  on the open-source Chromium project; it brings Google Chrome's open\n  web technologies to Internet Explorer.</p>\n</blockquote>\n\n<p>You'd need to have some sort of wrapper like that for your webapp, and then the rest is the web technologies you're used to. You can use HTML5 <a href=\"http://diveintohtml5.info/storage.html\" rel=\"nofollow\">local storage</a> to store data while the app is offline. I think you might even be able to work with SQLite.</p>\n\n<p>I don't know how you would go about accessing OS specific features, though. What I described above has the same limitations as any \"regular\" website. Hopefully this gives you some sort of guidance on where to start.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>maybe you are looking for this?  <a href=\"https://github.com/appjs/appjs\">https://github.com/appjs/appjs</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Sorry to burst your bubble but <em>Spotify desktop client</em> is <a href=\"https://developer.spotify.com/technologies/apps/guidelines/#webbrowserengine\" rel=\"nofollow\">just a Webkit-based browser</a>. Of course it exposes specific additional functionality, but it's only able to run JS and render HTML/CSS because it has a JS engine as well as a Chromium rendering engine. This does not help you with coding a client-side web-app and deploying to multiple platforms.</p>\n\n<p>What you're looking for is similar to <a href=\"http://www.sencha.com/products/touch/\" rel=\"nofollow\">Sencha Touch</a> - a framework that allows for HTML5 apps to be natively deployed to iOS, Android and Blackberry devices. It basically acts as an intermediary between certain API calls and device-specific functionality available.</p>\n\n<p>I have no experience with <a href=\"http://www.appcelerator.com/\" rel=\"nofollow\">appcelerator</a>, bit it appears to be doing exactly that - and get very favourable reviews online. You should give it a go (unless you wanted to go back to 1999 and roll with <a href=\"http://en.wikipedia.org/wiki/HTML_Application\" rel=\"nofollow\">MS HTA</a> ;)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You may start with Titanium for desktop dev.  Also you may have a look at <strong><a href=\"http://code.google.com/p/chromiumembedded/\">chromiumembedded</a></strong>.  It's basically a web browser control based on chromium.</p>\n\n<p>It's written in C++ so you can do all the low level OS stuff you want(Growl, tray icons, local file access, com ports, etc) in your container app, and then all the application logic and gui in html/javascript.  It allows you to intercept any http request to either serve local resources or perform some custom action.  For example, a request to <a href=\"http://localapp.com/SetTrayIconState?state=active\">http://localapp.com/SetTrayIconState?state=active</a> could be intercepted by the container and then call the C++ function to update the tray icon.</p>\n\n<p>It also allows you to create functions that can be called directly from JavaScript.</p>\n\n<p>It's very difficult to debug JavaScript directly in CEF.  There's no support for anything like Firebug.</p>\n\n<p>You may also try <strong><a href=\"http://appjs.com/\">AppJS.com</a></strong> (Helps to build Desktop Applications. for Linux, Windows and Mac using HTML, CSS and JavaScript)</p>\n\n<p>Also, as pointed out by @Clint, the team at Bracket.io (Adobe) created an awesome shell using Chromium Embedded Framework that makes it much easier to get started. It is called the brackets shell: <a href=\"http://github.com/adobe/brackets-shell\">github.com/adobe/brackets-shell</a> Find out more about it here: <a href=\"http://clintberry.com/2013/html5-desktop-apps-with-brackets-shell\">clintberry.com/2013/html5-desktop-apps-with-brackets-shell</a></p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>You can build Javascript apps with Adobe AIR\u2026 <a href=\"http://www.adobe.com/products/air.html\" rel=\"nofollow\">http://www.adobe.com/products/air.html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>CEF offers lot of flexibility and options for customisation. But if the intent is to develop quickly node-webkit is also a good option. Node-web kit also offers ability to call node modules directly from DOM.</p>\n\n<p>If there aren't any native modules to integrate Node-Webkit can offer better mileage. With native modules C/C++ or even C# it is better with CEF.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It seems the solutions for HTML/JS/CSS desktop apps are in no short supply.</p>\n\n<p>One solution I have just come across is TideSDK: <a href=\"http://www.tidesdk.org/\">http://www.tidesdk.org/</a>, which seems very promising, looking at the documentation.</p>\n\n<p>You can develop with Python, PHP or Ruby, and package it for Mac, Windows or Linux.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><a href=\"http://www.awesomium.com/\" rel=\"nofollow\">http://www.awesomium.com/</a></p>\n\n<blockquote>\n  <blockquote>\n    <p>Awesomium makes it easy to use HTML UI in your C++ or .NET app</p>\n  </blockquote>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2><a href=\"https://github.com/rogerwang/node-webkit\">node-webkit</a></h2>\n\n<hr>\n\n<p>I would suggest taking a look at node-webkit if you are familiar with node or experienced with javascript. </p>\n\n<p><strong>node-webkit</strong> is an app runtime based on Chromium and node.js.</p>\n\n<p><strong>Features</strong></p>\n\n<ul>\n<li><p>Apps written in modern HTML5, CSS3, JS and WebGL.</p></li>\n<li><p>Complete support for Node.js APIs and all its third party modules.</p></li>\n<li><p>Good performance: Node and WebKit runs in the same thread: Function calls are made straightforward; objects are in the same heap and can just reference each other;</p></li>\n<li><p>Easy to package and distribute apps.</p></li>\n<li><p>Available on Linux, Mac OS X and Windows</p></li>\n</ul>\n\n<p>You can find the node-webkit repo <a href=\"https://github.com/rogerwang/node-webkit\">here</a>, and a good introduction to node-webkit <a href=\"http://code.tutsplus.com/tutorials/introduction-to-html5-desktop-apps-with-node-webkit--net-36296\">here</a>. If you fancy learning <a href=\"http://nodejs.org/\">node.js</a> I would recommend looking in to <a href=\"http://stackoverflow.com/a/5511507/1724097\">this</a> SO post with a lot of good links.</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>First, I'm not interested in doing this professionally. I am a web developer, a coworker of mine recently left for Spotify and said he will be working mostly in JavaScript for the Spotify Desktop app. He said it uses \"Chrome frame\" and everything inside is done like a web app (HTML/JS/CSS).</p>\n\n<p>As a web developer who never built anything for Desktop, this is great news. If I can use the technologies I already know and implement them inside some sort of a \"frame\" and still be able to build a windows or better yet cross platform app.</p>\n\n<p>I know I didn't mention anything about the database, but even a simple hello world desktop app with web technologies would be great to get going.</p>\n\n<p>So how does one go about this? Exactly what do I need/need to know?</p>\n",
            "last_activity_date": 1405430817,
            "question_id": 12232784,
            "score": 69,
            "tags": [
                "javascript",
                "html",
                "css",
                "desktop-application",
                "google-chrome-frame"
            ],
            "title": "How to develop Desktop Apps using HTML/CSS/JavaScript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You only need to do EITHER</p>\n\n<pre><code>define([\"jquery\"], // Require jquery\n       function($){\n// Put here the plugin code. \n// No need to return anything as we are augmenting the jQuery object\n});\n</code></pre>\n\n<p>at the end of jquery-cookie.js, OR</p>\n\n<pre><code>requirejs.config( {\n    \"shim\": {\n        \"jquery-cookie\"  : [\"jquery\"]\n    }\n} );\n</code></pre>\n\n<p>anywhere before you include jquery-cookie (like wherever data-main points to, for instance).</p>\n\n<p>The last code block you've posted is good for things like jQuery which get redistributed and may or may not be in an AMD environment. Ideally every jQuery plugin would have that set up already.</p>\n\n<p>I prefer to keep included libraries as unadulterated as possible, so <strong>the global shim config once per page seems like the cleanest solution to me</strong>. That way upgrades are safer and CDNs become a possibility.</p>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>There are some caveats with using shim configuration in RequireJS, pointed out on <a href=\"http://requirejs.org/docs/api.html#config-shim\">http://requirejs.org/docs/api.html#config-shim</a>.  Namely, \"Do not mix CDN loading with shim config in a build\" when you're using the optimizer.</p>\n\n<p>I was looking for a way to use the same jQuery plugin code on sites both with and without RequireJS.  I found this snippet for jQuery plugins at <a href=\"https://github.com/umdjs/umd/blob/master/jqueryPlugin.js\">https://github.com/umdjs/umd/blob/master/jqueryPlugin.js</a>.  You wrap your plugin in this code, and it will work properly either way.</p>\n\n<pre><code>(function (factory) {\nif (typeof define === 'function' &amp;&amp; define.amd) {\n    // AMD. Register as an anonymous module depending on jQuery.\n    define(['jquery'], factory);\n} else {\n    // No AMD. Register plugin with global jQuery object.\n    factory(jQuery);\n}\n}(function ($) {\n\n    $.fn.jqueryPlugin = function () {\n        // Put your plugin code here\n    };  \n\n}));\n</code></pre>\n\n<p>Credit goes to jrburke; like so much javascript, it's functions inside functions acting on other functions.  But I think I have unpacked what it's doing.</p>\n\n<p>The function argument <code>factory</code> in the first line is itself a function which is invoked to define the plugin on the <code>$</code> argument.  When no AMD-compatible loader is present, it's invoked directly to define the plugin on the global <code>jQuery</code> object.  That's just like the common plugin definition idiom:</p>\n\n<pre><code>function($)\n{\n  $.fn.jqueryPlugin = function() {\n    // Plugin code here\n  };\n}(jQuery);\n</code></pre>\n\n<p>If there is a module loader, then <code>factory</code> is registered as the callback for the loader to invoke after loading jQuery.  The loaded copy of jQuery is the argument. It's equivalent to</p>\n\n<pre><code>define(['jquery'], function($) {\n  $.fn.jqueryPlugin = function() {\n     // Plugin code here\n  };\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 72
                }
            ],
            "body": "<p>I'm working with requirejs+jquery and i was wondering if there was a smart way to make a jQuery plugin work well with require.</p>\n\n<p>For example i'm using jQuery-cookie. If i understood correctly i can create a file called jquery-cookie.js and inside do</p>\n\n<pre><code>define([\"jquery\"], // Require jquery\n       function($){\n// Put here the plugin code. \n// No need to return anything as we are augmenting the jQuery object\n});\nrequirejs.config( {\n    \"shim\": {\n        \"jquery-cookie\"  : [\"jquery\"]\n    }\n} );\n</code></pre>\n\n<p>i wondered if i could do things like jQuery does, which is like this:</p>\n\n<pre><code>if ( typeof define === \"function\" &amp;&amp; define.amd &amp;&amp; define.amd.jQuery ) {\n    define( \"jquery\", [], function () { return jQuery; } );\n}\n</code></pre>\n\n<p>or if this is the only way to make jQuery plugins compatible with requirejs or any amd </p>\n",
            "last_activity_date": 1393895080,
            "question_id": 10918063,
            "score": 52,
            "tags": [
                "javascript",
                "jquery",
                "requirejs"
            ],
            "title": "How to make a jQuery plugin loadable with requirejs"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<blockquote>\n  <p><strong>Disclaimer</strong>: This answer describes <strong><a href=\"http://meteorserver.org/client-docs/\" rel=\"nofollow\">Meteor</a></strong>, JavaScript client library for <strong><a href=\"http://meteorserver.org/\" rel=\"nofollow\">Meteor Server</a></strong>. It was originally added due to ambiguity in the question, and may serve the purpose of clarifying similar ambiguities faced by the visitors searching for similar answers, but unsure about the difference.</p>\n  \n  <p>To read about <a href=\"https://www.meteor.com/\" rel=\"nofollow\"><em>Meteor JavaScript framework</em></a>, please see <a href=\"http://stackoverflow.com/a/10623051/548696\">this answer</a> by <a href=\"http://stackoverflow.com/users/47604/xer0x\">xer0x</a>.</p>\n</blockquote>\n\n<p>As mentioned on the Meteor Server's documentation, Meteor is an implementation of <strong>Comet</strong>. Comet in turn is a counterpart of <strong>AJAX</strong>.</p>\n\n<p>In case of AJAX, you usually make a request when the client sees a need to do that. To pull updates from the server, you will need to call the server eg. every 5 seconds.</p>\n\n<p>In case of Comet, the update from the server comes faster, because the connection is persistent. The connection is established by client, as in AJAX, but the server does not respond until it has some update or it reaches execution limit (scripts on the server may have execution limits).</p>\n\n<p>In case of Meteor you just get constant stream of data that needs some specific server-side code (like Meteor Server) and appropriate code on the client (in this case it looks like it is Meteor class).</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p><a href=\"http://meteor.com/\">Meteor</a> is a framework that elegantly updates html in realtime.</p>\n\n<p>The beauty of Meteor is that you only need to create the templates and the data models. The rest of the usual boilerplate code is hidden away. You don't need to write all the sync-ing code.</p>\n\n<p>The key pieces of Meteor could be built yourself using these pieces:</p>\n\n<ul>\n<li><p>It provides <strong>templating</strong> that updates automatically when your data models do. This is normally done using <a href=\"http://documentcloud.github.com/backbone/\">Backbone.js</a>, <a href=\"http://emberjs.com/\">Ember.js</a>, <a href=\"http://knockoutjs.com/\">Knockout.js</a>, or another tool.</p></li>\n<li><p>The <strong>client/server messaging</strong> is done via websockets using something like <a href=\"https://github.com/sockjs/sockjs-client\">socks.js</a> or <a href=\"http://socket.io/\">socket.io</a>.</p></li>\n<li><p>The <strong>client side connection to mongodb</strong> is really cool. It replicates the mongo-server driver into the client. Unfortunately, last I checked, they were still working on securing this database connection.</p></li>\n<li><p>The <strong>latency compensation</strong> is simply updating the client-side model first, then sending the update to the server-server.</p></li>\n</ul>\n\n<p>There may be other neat pieces to that you can find on the <a href=\"http://meteor.com/\">Meteor.JS</a> site, or on <a href=\"https://github.com/meteor/meteor\">Github</a></p>\n",
                    "is_accepted": false,
                    "score": 48
                },
                {
                    "body": "<p>All the magic with the live data updating is in entirety <a href=\"https://github.com/meteor/meteor/blob/master/packages/deps/deps.js\">74 lines of code</a>. This snippet of code defines the Context object which has just 3 methods: run, invalidate and on_invalidate. A full explanation on what the Context object is and how to use it to wire up your own reactive data objects can be found at the <a href=\"http://docs.meteor.com/#deps\">Meteor.deps</a> section of the documentation.</p>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>I came across <a href=\"http://meteor.com\">meteor.js</a> and while it seems exciting, I want to know how it works. I mean conventional web-apps work like this:\nYou have scripts on server which take data from database and add that dynamically to web-pages and the user submitted data gets added to databases through some other scrips.</p>\n\n<p>But how do these things work in meteorJS? How are different parts or meteorJS related to each other?</p>\n",
            "last_activity_date": 1411309642,
            "question_id": 10214385,
            "score": 74,
            "tags": [
                "javascript",
                "node.js",
                "web-applications",
                "meteor"
            ],
            "title": "How does the Meteor.js Javascript framework work?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p><code>foo.bar</code> and <code>foo['bar']</code> are equal so the code you posted is the same as</p>\n\n<pre><code>alert('a'.toUpperCase())\n</code></pre>\n\n<p>When using <code>foo[bar]</code> (note tha lack of quotes) you do not use the literal name <code>bar</code> but whatever value the variable <code>bar</code> contains. So using the <code>foo[]</code> notation instead of <code>foo.</code> allows you to use a dynamic property name.</p>\n\n<hr>\n\n<p>Let's have a look at <code>callMethod</code>:</p>\n\n<p>First of all, it returns a function that takes <code>obj</code> as its argument. When that function is executed it will call <code>method</code> on that object. So the given method just needs to exist either on <code>obj</code> itself or somewhere on its prototype chain.</p>\n\n<p>In case of <code>toUpperCase</code> that method comes from <code>String.prototype.toUpperCase</code> - it would be rather stupid to have a separate copy of the method for every single string that exists.</p>\n",
                    "is_accepted": false,
                    "score": 75
                },
                {
                    "body": "<p><code>anyObject['anyPropertyName']</code> is the same as <code>anyObject.anyPropertyName</code> when <code>anyPropertyName</code> hasn't problematic characters.</p>\n\n<p>See <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Working_with_Objects\">Working with Objects</a>, from the MDN.</p>\n\n<p>The <code>toUpperCase</code> method is attached to the type String. When you call a function on a primitive value, here <code>'a'</code>, it is automatically promoted to an object, here a <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String\">String</a> :</p>\n\n<blockquote>\n  <p>In contexts where a method is to be invoked on a primitive string or a\n  property lookup occurs, JavaScript will automatically wrap the string\n  primitive and call the method or perform the property lookup.</p>\n</blockquote>\n\n<p>You can see the function exists by logging <code>String.prototype.toUpperCase</code>.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You can either access the members of any object with <code>.propertyName</code> notation or <code>[\"propertyName\"]</code> notation. That is the feature of JavaScript language. To be sure that member is in the object, simply check, if it is defined:</p>\n\n<pre><code>function callMethod(method) {\n    return function (obj) {\n        if (typeof(obj[method]) == 'function') //in that case, check if it is a function\n           return obj[method](); //and then invoke it\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>To break it down.</p>\n\n<ul>\n<li><code>.toUpperCase()</code> is a method of <code>String.prototype</code></li>\n<li><code>'a'</code> is a primitive value, but gets converted into its <em>Object representation</em></li>\n<li>We have two possible notations to access object properties/methods, dot and bracket notation</li>\n</ul>\n\n<p>So</p>\n\n<pre><code>'a'['toUpperCase'];\n</code></pre>\n\n<p>is the access via <em>bracket notation</em> on the property <code>toUpperCase</code>, from <code>String.prototype</code>. Since this property references a <em>method</em>, we can invoke it by attaching <code>()</code></p>\n\n<pre><code>'a'['toUpperCase']();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 286
                },
                {
                    "body": "<p>Every JavaScript object is a hash table thus you can access its members by specifying a key. for example, if a variable is a string, then it should has the toUpperCase function. So, you could invoke it by </p>\n\n<pre><code>var str = \"a\"\nstr['toUpperCase'](). // you get the method by its name as a key and invoke it.\n</code></pre>\n\n<p>so, by inline str, you could have below</p>\n\n<pre><code>\"a\"[\"toUpperCase\"]()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>toUpperCase is a standard javascript method: <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/toUpperCase\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/toUpperCase</a></p>\n\n<p>The reason it works like <code>'a'['toUpperCase']()</code> is that the toUpperCase function is a property of the string object <code>'a'</code>. You can reference the properties on an object using <code>object[property]</code> or <code>object.property</code>. The syntax 'a''toUpperCase' indicates you are referencing the 'toUppercase' propert of the 'a' string object, and then calling it ().</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Basically javascript treats everything as an Object, or rather every object can be viewed as a dictionary/associative-array. And functions/methods are defined the exact same way for the object - as an entry in this associative array.</p>\n\n<p>So essentially, you're referencing/calling (notice the '<strong><em>()</em></strong>' ) the 'toUpperCase' property, of the 'a' object (which is a string type, in this case).</p>\n\n<p>Here's some code of the top of my head:</p>\n\n<pre><code>function myObject(){\n    this.msg = \"hey there! ;-)\";\n    this.woop = function(){\n        alert(this.msg); //do whatever with member data\n    }\n}\n\nvar obj = new myObject();\nalert( obj.msg );\nalert( obj['msg'] );\nobj['woop']();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>So in Javascript, <code>objects</code> are <code>objects</code>. That is they're of this nature <code>{}</code>. Object properties can be set using either of these: <code>a.greeting = 'hello';</code> or <code>a['greeting'] = 'hello';</code>. Both ways work.</p>\n\n<p>Retrieval works the same. <code>a.greeting</code> (without quotes) is <code>'hello'</code>, <code>a['greeting']</code> is <code>'hello'</code>. Exception: if the property is a number, only the bracket method works. The dot method doesn't.</p>\n\n<p>So <code>'a'</code> is an object with <code>'toUpperCase'</code> property which is actually a function. You can retrieve the function and call it subsequently either way: <code>'a'.toUpperCase()</code> or <code>'a'['toUpperCase']()</code>.</p>\n\n<p>But imo the better way to write the map function would be as<br><br>\n<code>var caps = ['a','b','c'].map( function(char) { return char.toUpperCase(); } )</code>\n<br><br>\nWho needs the <code>callMethod</code> function then?</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<blockquote>\n  <p>But does that mean the specified method will already be an implicit member of the specified object?</p>\n</blockquote>\n\n<p>No. Someone could pass in an object that </p>\n\n<ol>\n<li>does not have a property named <code>toUpperCase</code>; or</li>\n<li>has a property named <code>toUpperCase</code> that is not a function</li>\n</ol>\n\n<p>In the first case, an error will be thrown because accessing a property that doesn't exist returns <code>undefined</code>, and we can't invoke <code>undefined</code> as a function.</p>\n\n<p>In the second case, an error will be thrown because again, we can't invoke a non-function as a function.</p>\n\n<p>Remember that JavaScript is a very loosely-typed language. Little or no type checking occurs unless and until it has to. The code you showed works in certain cases because, in those cases, the passed object has a property named <code>toUpperCase</code>, that is a function.</p>\n\n<p>The fact that the <code>obj</code> argument isn't guaranteed to have the right types of properties doesn't bother JavaScript at all, so to speak. It adopts a \"wait and see\" attitude, and doesn't throw an error until an actual problem occurs at run time.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Almost everything in javascript can be treated as an object. In your case the alphabet itself acts as a string object and <code>toUpperCase</code> can be invoked as its method. The square brackets are just alternative way of accessing object properties and since <code>toUpperCase</code> is a method hence the simplebracket <code>()</code> is needed next to <code>['toUpperCase']</code> forming <code>['toUpperCase']()</code>. </p>\n\n<p><code>'a'['toUpperCase']()</code> is equivalent to <code>'a'.toUpperCase()</code></p>\n\n<pre><code>'a'['toUpperCase']() // returns A\n'a'.toUpperCase() // returns A\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If your asking how it actually work which is how I read it. Ok this is a simple mathematical function. To understand it you need to look at the ascii table. Which assigns a numerical value to each letter. To covert it the compete simply uses a logic statement to covert so for example\nIf(ChcrValue > 80 &amp;&amp; charValue &lt; 106) //This is the set of lower case letters\nthen charValue = charValue - 38; // the distance between the lower set and the upper set</p>\n\n<p>it's that simple, I did not actually bother to look up the correct values however this is basically shifting all lower case letters to uppercase value. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The important thing to note here is that, since Javascript is a <a href=\"https://en.wikipedia.org/wiki/Dynamic_programming_language\" rel=\"nofollow\">dynamic</a> language, every object is, essentially, just a glorified <strong>hash-map</strong> (<a href=\"http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\" rel=\"nofollow\">with a few exceptions</a>). And everything in a Javascript object can be accessed in two ways - bracket notation and dot notation.</p>\n\n<p>I will quickly go over the two notations answering the first part of your question, and then I'll get to the second part.</p>\n\n<h2>Bracket notation</h2>\n\n<p>This mode is more similar to accessing hashmaps and arrays in other programming languages. You  can access <em>any</em> component (data (including other objects) or function) using this syntax. </p>\n\n<p>This is exactly what your are doing in your example. You have <code>'a'</code>, which is a string (and <strong>not</strong> a character literal, like it would be in a language such as C++).</p>\n\n<p>Using the bracket notation, you access its <code>toUpperCase</code> method. But accessing it is still not enough; simply typing <code>alert</code>, for instance, in Javascript, doesn't call the method. It's just a simple statement. In order to call the function, you need to add the parenthesis: <code>alert()</code> shows a simple dialog box containing <code>undefined</code>, as it received no parameters. We can now use this knowledge to decipher your code, which becomes:</p>\n\n<pre><code>alert('a'.toUpperCase());\n</code></pre>\n\n<p>Which is much more readable.</p>\n\n<p>Actually, a good way to understand this a little bit better is to execute the following Javascript: </p>\n\n<pre><code>alert(alert)\n</code></pre>\n\n<p>This calls <code>alert</code> by passing it a function object, also <code>alert</code>, without also executing the second alert. What is shown (in Chrome 26, at least) is the following:</p>\n\n<pre><code>function alert() { [native code] } \n</code></pre>\n\n<p>Calling:</p>\n\n<pre><code>alert(alert())\n</code></pre>\n\n<p>shows two consecutive message boxes containing <code>undefined</code>. This is easy to explain: the inner <code>alert()</code> gets executed first, shows <code>undefined</code> (because it didn't have any parameters) and returns nothing. The outer alert receives the return value of inner alert - which is nothing, and also shows <code>undefined</code> in a message box.</p>\n\n<p><a href=\"http://jsfiddle.net/7k8Y9/\" rel=\"nofollow\">Try out all the cases on jsFiddle!</a></p>\n\n<h2>Dot notation</h2>\n\n<p>This is the more standard approach, which allows members of an object to be accessed using the dot (<code>.</code>) operator. This is what your code would look like in dot notation:</p>\n\n<pre><code>alert('a'.toUpperCase())\n</code></pre>\n\n<p>Much more readable. So when should we use dot notation, and when should we use bracket notation?</p>\n\n<h2>Comparison</h2>\n\n<p>The main difference between the two methods is semantic. There are also some other details, but I'll get to those in a second. What's most important is what you actually want to do - a rule of thumb is that you use <strong>dot notation</strong> for well-established fields and methods an object has, and the <strong>bracket-notation</strong> for when you're actually using your object as a hash map.</p>\n\n<p>A great example of why this rule is so important can be shown in your example - since the code is using bracket notation in a place where dot notation would have been much more sensible, it makes the code harder to read. And that's a bad thing, <a href=\"http://blog.brendel.com/2009/06/read-optimized-source-code.html\" rel=\"nofollow\">because code is read many more times than it is written</a>.</p>\n\n<p>In some cases, you have to use <em>bracket notation</em> even if using <em>dot notation</em> were more sensible:</p>\n\n<ul>\n<li><p>if a member of an object has a name containing one or more spaces or any other special characters, you can't use dot notation: <code>foo.some method()</code> doesn't work, but <code>foo[\"some method\"]()</code> does;</p></li>\n<li><p>if you need to dynamically access an object's members, you're also stuck using bracket notation;</p></li>\n</ul>\n\n<p>Example:</p>\n\n<pre><code>for(var i = 0; i &lt; 10; ++i) {\n   foo[\"method\" + i](); \n }\n</code></pre>\n\n<hr>\n\n<p>The bottom line is that you should use bracket syntax when using the object as a hash map (<code>foods[\"burger\"].eat()</code>) and the dot syntax when working with \"actual\" fields and methods (<code>enemy.kill()</code>). With Javascript being a dynamic language, the line between \"actual\" fields and methods of an object and \"other\" data stored within can get pretty blurry. But as long as you don't mix them in confusing ways, you should be fine.</p>\n\n<hr>\n\n<p>Now, onto the rest of your question (finally! :P).</p>\n\n<blockquote>\n  <p>how can I be sure method will always be a member of obj</p>\n</blockquote>\n\n<p>You can't. Try it. Try to call <code>derp</code> on a string. You will get an error in the lines of:</p>\n\n<pre><code>Uncaught TypeError: Object a has no method 'derp' \n</code></pre>\n\n<blockquote>\n  <p>It is kinda generic function to call ANY methods on ANY object. But\n  does that mean the specified method will already be an implicit member\n  of the specified object?</p>\n</blockquote>\n\n<p>Yes, in your case it would have to be. Otherwise you end up with the error I mentioned above. However, you don't <strong>have</strong> to use <code>return obj[method]();</code> in the <code>callMethod()</code> function. You can add your own functionality that then gets used by the map function. Here's a hard-coded method that turns all the letters into an uppercase letter:</p>\n\n<pre><code>function makeCap()\n{\n    return function(obj) {\n        return obj.toUpperCase();\n    }\n}\n\nvar caps2 = map(['a', 'b', 'c'], makeCap()); // ['A','B','C'] \nconsole.log(caps2)\n</code></pre>\n\n<p>The code in the tutorial you linked to uses <a href=\"http://www.drdobbs.com/open-source/currying-and-partial-functions-in-javasc/231001821\" rel=\"nofollow\">partial functions</a>. They're a tricky concept by themselves. Reading more about that subject should help make things clearer than I could ever make them. </p>\n\n<hr>\n\n<p>Note: this is the code of the map function used by the code in the question, <a href=\"http://danwebb.net/2006/11/3/from-the-archives-cleaner-callbacks-with-partial-application\" rel=\"nofollow\">source here</a>. </p>\n\n<pre><code>function map(arr, iterator) {\n  var narr = [];\n  for (var i = 0; i &lt; arr.length; i++) narr.push(iterator(arr[i], i));\n  return narr;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>JavaScript keeps surprising me and this is another instance. I just came across some code which I did not understood at first. So I debugged it and came to this finding:</p>\n\n<pre><code>alert('a'['toUpperCase']());  //alerts 'A'\n</code></pre>\n\n<p>Now this must be obvious if <code>toUpperCase()</code> is defined as a member of string type, but it did not make sense to me initially.</p>\n\n<p>Anyway,</p>\n\n<ul>\n<li>does this work because <code>toUpperCase</code> is a member of 'a'? Or there is something else going on behind the scenes?</li>\n<li><p>the <a href=\"http://danwebb.net/2006/11/3/from-the-archives-cleaner-callbacks-with-partial-application\">code</a> I was reading has a function as follows:</p>\n\n<pre><code>function callMethod(method) {\n    return function (obj) {\n        return obj[method](); //**how can I be sure method will always be a member of obj**\n    }\n}\n\nvar caps2 = map(['a', 'b', 'c'], callMethod('toUpperCase')); // ['A','B','C'] \n// ignoring details of map() function which essentially calls methods on every \n// element of the array and forms another array of result and returns it\n</code></pre>\n\n<p>It is kinda generic function to call <strong>ANY</strong> methods on <strong>ANY</strong> object. But does that mean the specified method will already be an implicit member of the specified object?</p></li>\n</ul>\n\n<p>I am sure that I am missing some serious understanding of basic concept of JavaScript functions. Please help me to understand this.</p>\n",
            "last_activity_date": 1370106471,
            "question_id": 15659809,
            "score": 201,
            "tags": [
                "javascript",
                "function"
            ],
            "title": "How and why does &#39;a&#39;[&#39;toUpperCase&#39;]() in JavaScript work?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Install <a href=\"http://getfirebug.com/\"><code>Firebug</code></a> for Firefox or using Chrome Developer Tools(F12) and do this:</p>\n\n<pre><code>console.log(myvar);\n</code></pre>\n\n<p>Then you will get a nicely mapped out interface of the object/whatever in the console.</p>\n\n<p>Check out the <a href=\"https://getfirebug.com/logging\"><code>console</code></a> documentation for more details.</p>\n",
                    "is_accepted": true,
                    "score": 186
                },
                {
                    "body": "<p><a href=\"http://getfirebug.com/console.html\">Firebug</a>.</p>\n\n<p>Then, in your javascript:</p>\n\n<pre><code>var blah = {something: 'hi', another: 'noway'};\nconsole.debug(\"Here is blah: %o\", blah);\n</code></pre>\n\n<p>Now you can look at the console, click on the statement and see what is inside <code>blah</code></p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>I wrote this JS function <code>dump()</code> to work like PHP's <code>var_dump()</code>. \nTo show the contents of the variable in an alert window: <code>dump(variable)</code>\nTo show the contents of the variable in the web page: <code>dump(variable, 'body')</code>\nTo just get a string of the variable: <code>dump(variable, 'none')</code></p>\n\n<pre><code>/* repeatString() returns a string which has been repeated a set number of times */ \nfunction repeatString(str, num) {\n    out = '';\n    for (var i = 0; i &lt; num; i++) {\n        out += str; \n    }\n    return out;\n}\n\n/*\ndump() displays the contents of a variable like var_dump() does in PHP. dump() is\nbetter than typeof, because it can distinguish between array, null and object.  \nParameters:\n  v:              The variable\n  howDisplay:     \"none\", \"body\", \"alert\" (default)\n  recursionLevel: Number of times the function has recursed when entering nested\n                  objects or arrays. Each level of recursion adds extra space to the \n                  output to indicate level. Set to 0 by default.\nReturn Value:\n  A string of the variable's contents \nLimitations:\n  Can't pass an undefined variable to dump(). \n  dump() can't distinguish between int and float.\n  dump() can't tell the original variable type of a member variable of an object.\n  These limitations can't be fixed because these are *features* of JS. However, dump()\n*/\nfunction dump(v, howDisplay, recursionLevel) {\n    howDisplay = (typeof howDisplay === 'undefined') ? \"alert\" : howDisplay;\n    recursionLevel = (typeof recursionLevel !== 'number') ? 0 : recursionLevel;\n\n\n    var vType = typeof v;\n    var out = vType;\n\n    switch (vType) {\n        case \"number\":\n            /* there is absolutely no way in JS to distinguish 2 from 2.0\n            so 'number' is the best that you can do. The following doesn't work:\n            var er = /^[0-9]+$/;\n            if (!isNaN(v) &amp;&amp; v % 1 === 0 &amp;&amp; er.test(3.0))\n                out = 'int';*/\n        case \"boolean\":\n            out += \": \" + v;\n            break;\n        case \"string\":\n            out += \"(\" + v.length + '): \"' + v + '\"';\n            break;\n        case \"object\":\n            //check if null\n            if (v === null) {\n                out = \"null\";\n\n            }\n            //If using jQuery: if ($.isArray(v))\n            //If using IE: if (isArray(v))\n            //this should work for all browsers according to the ECMAScript standard:\n            else if (Object.prototype.toString.call(v) === '[object Array]') {  \n                out = 'array(' + v.length + '): {\\n';\n                for (var i = 0; i &lt; v.length; i++) {\n                    out += repeatString('   ', recursionLevel) + \"   [\" + i + \"]:  \" + \n                        dump(v[i], \"none\", recursionLevel + 1) + \"\\n\";\n                }\n                out += repeatString('   ', recursionLevel) + \"}\";\n            }\n            else { //if object    \n                sContents = \"{\\n\";\n                cnt = 0;\n                for (var member in v) {\n                    //No way to know the original data type of member, since JS\n                    //always converts it to a string and no other way to parse objects.\n                    sContents += repeatString('   ', recursionLevel) + \"   \" + member +\n                        \":  \" + dump(v[member], \"none\", recursionLevel + 1) + \"\\n\";\n                    cnt++;\n                }\n                sContents += repeatString('   ', recursionLevel) + \"}\";\n                out += \"(\" + cnt + \"): \" + sContents;\n            }\n            break;\n    }\n\n    if (howDisplay == 'body') {\n        var pre = document.createElement('pre');\n        pre.innerHTML = out;\n        document.body.appendChild(pre)\n    }\n    else if (howDisplay == 'alert') {\n        alert(out);\n    }\n\n    return out;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 55
                },
                {
                    "body": "<p>The var_dump equivalent in JavaScript? Simply, there isn't one.</p>\n\n<p>But, that doesn't mean you're left helpless. Like some have suggested, use <a href=\"https://getfirebug.com/\">Firebug</a> (or equivalent in other browsers), but unlike what others suggested, don't use console.log when you have a (slightly) better tool <a href=\"https://getfirebug.com/wiki/index.php/Console_API#console.dir.28object.29\">console.dir</a>:</p>\n\n<pre><code>console.dir(object)\n</code></pre>\n\n<blockquote>\n  <p>Prints an interactive listing of all properties of the object. This\n  looks identical to the view that you would see in the DOM tab.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>A nice simple solution for parsing a JSON Response to HTML.</p>\n\n<pre><code>var json_response = jQuery.parseJSON(data);\nhtml_response += 'JSON Response:&lt;br /&gt;';\n\njQuery.each(json_response, function(k, v) {\n    html_response += outputJSONReponse(k, v);\n});\n\nfunction outputJSONReponse(k, v) {\n    var html_response = k + ': ';\n\n    if(jQuery.isArray(v) || jQuery.isPlainObject(v)) {\n        jQuery.each(v, function(j, w) {\n            html_response += outputJSONReponse(j, w);\n        });\n    } else {\n        html_response += v + '&lt;br /&gt;';\n    }\n\n    return html_response;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For scalar variables:</p>\n\n<pre><code>console.log(object);\n</code></pre>\n\n<p>For objects:</p>\n\n<pre><code>console.log( JSON.stringify(object) );\n</code></pre>\n\n<p>On <strong>caniuse.com</strong> you can view the browsers that support natively the <code>JSON.stringify</code> function: <a href=\"http://caniuse.com/json\">http://caniuse.com/json</a></p>\n\n<p>You can also use the Douglas Crockford library to add <code>JSON.stringify</code> support on old browsers: <a href=\"https://github.com/douglascrockford/JSON-js\">https://github.com/douglascrockford/JSON-js</a></p>\n\n<p>I hope this helps...</p>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>As others have already mentioned, the best way to debug your variables is to use a modern browser's developer console (e.g. <a href=\"https://developers.google.com/chrome-developer-tools/\">Chrome Developer Tools</a>, Firefox+<a href=\"http://getfirebug.com/\">Firebug</a>, <a href=\"http://www.opera.com/dragonfly/\">Opera Dragonfly</a> <sub>(which now disappeared in the new Chromium-based (Blink) Opera, but as developers <a href=\"http://my.opera.com/desktopteam/blog/opera-features-and-release-cycle\">say</a>, <em>\"Dragonfly is not dead though we cannot give you more information yet\"</em>)</sub>.</p>\n\n<p>But in case you need another approach, there's a really useful site called<br>\n<strong>php.js</strong>: <strong><a href=\"http://phpjs.org/\">http://phpjs.org/</a></strong><br>\nwhich provides <em>\"JavaScript alternatives to PHP functions\"</em> - so you can use them the similar way as you would in PHP. I will copy-paste the appropriate functions to you here, BUT <strong>be aware that these codes can get updated on the original site in case some bugs are detected, so I suggest you visiting the <a href=\"http://phpjs.org/\">phpjs.org</a> site</strong>! (Btw. I'm NOT affiliated with the site, but I find it extremely useful.)</p>\n\n<h1><code>var_dump()</code> in JavaScript</h1>\n\n<p>Here is the code of the JS-alternative of <code>var_dump()</code>:<br>\n<a href=\"http://phpjs.org/functions/var_dump/\">http://phpjs.org/functions/var_dump/</a><br>\nit depends on the <code>echo()</code> function: <a href=\"http://phpjs.org/functions/echo/\">http://phpjs.org/functions/echo/</a></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function var_dump () {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Brett Zamir (http://brett-zamir.me)\n  // +   improved by: Zahlii\n  // +   improved by: Brett Zamir (http://brett-zamir.me)\n  // -    depends on: echo\n  // %        note 1: For returning a string, use var_export() with the second argument set to true\n  // *     example 1: var_dump(1);\n  // *     returns 1: 'int(1)'\n\n  var output = '',\n    pad_char = ' ',\n    pad_val = 4,\n    lgth = 0,\n    i = 0,\n    d = this.window.document;\n  var _getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn);\n    if (!name) {\n      return '(Anonymous)';\n    }\n    return name[1];\n  };\n\n  var _repeat_char = function (len, pad_char) {\n    var str = '';\n    for (var i = 0; i &lt; len; i++) {\n      str += pad_char;\n    }\n    return str;\n  };\n  var _getInnerVal = function (val, thick_pad) {\n    var ret = '';\n    if (val === null) {\n      ret = 'NULL';\n    } else if (typeof val === 'boolean') {\n      ret = 'bool(' + val + ')';\n    } else if (typeof val === 'string') {\n      ret = 'string(' + val.length + ') \"' + val + '\"';\n    } else if (typeof val === 'number') {\n      if (parseFloat(val) == parseInt(val, 10)) {\n        ret = 'int(' + val + ')';\n      } else {\n        ret = 'float(' + val + ')';\n      }\n    }\n    // The remaining are not PHP behavior because these values only exist in this exact form in JavaScript\n    else if (typeof val === 'undefined') {\n      ret = 'undefined';\n    } else if (typeof val === 'function') {\n      var funcLines = val.toString().split('\\n');\n      ret = '';\n      for (var i = 0, fll = funcLines.length; i &lt; fll; i++) {\n        ret += (i !== 0 ? '\\n' + thick_pad : '') + funcLines[i];\n      }\n    } else if (val instanceof Date) {\n      ret = 'Date(' + val + ')';\n    } else if (val instanceof RegExp) {\n      ret = 'RegExp(' + val + ')';\n    } else if (val.nodeName) { // Different than PHP's DOMElement\n      switch (val.nodeType) {\n      case 1:\n        if (typeof val.namespaceURI === 'undefined' || val.namespaceURI === 'http://www.w3.org/1999/xhtml') { // Undefined namespace could be plain XML, but namespaceURI not widely supported\n          ret = 'HTMLElement(\"' + val.nodeName + '\")';\n        } else {\n          ret = 'XML Element(\"' + val.nodeName + '\")';\n        }\n        break;\n      case 2:\n        ret = 'ATTRIBUTE_NODE(' + val.nodeName + ')';\n        break;\n      case 3:\n        ret = 'TEXT_NODE(' + val.nodeValue + ')';\n        break;\n      case 4:\n        ret = 'CDATA_SECTION_NODE(' + val.nodeValue + ')';\n        break;\n      case 5:\n        ret = 'ENTITY_REFERENCE_NODE';\n        break;\n      case 6:\n        ret = 'ENTITY_NODE';\n        break;\n      case 7:\n        ret = 'PROCESSING_INSTRUCTION_NODE(' + val.nodeName + ':' + val.nodeValue + ')';\n        break;\n      case 8:\n        ret = 'COMMENT_NODE(' + val.nodeValue + ')';\n        break;\n      case 9:\n        ret = 'DOCUMENT_NODE';\n        break;\n      case 10:\n        ret = 'DOCUMENT_TYPE_NODE';\n        break;\n      case 11:\n        ret = 'DOCUMENT_FRAGMENT_NODE';\n        break;\n      case 12:\n        ret = 'NOTATION_NODE';\n        break;\n      }\n    }\n    return ret;\n  };\n\n  var _formatArray = function (obj, cur_depth, pad_val, pad_char) {\n    var someProp = '';\n    if (cur_depth &gt; 0) {\n      cur_depth++;\n    }\n\n    var base_pad = _repeat_char(pad_val * (cur_depth - 1), pad_char);\n    var thick_pad = _repeat_char(pad_val * (cur_depth + 1), pad_char);\n    var str = '';\n    var val = '';\n\n    if (typeof obj === 'object' &amp;&amp; obj !== null) {\n      if (obj.constructor &amp;&amp; _getFuncName(obj.constructor) === 'PHPJS_Resource') {\n        return obj.var_dump();\n      }\n      lgth = 0;\n      for (someProp in obj) {\n        lgth++;\n      }\n      str += 'array(' + lgth + ') {\\n';\n      for (var key in obj) {\n        var objVal = obj[key];\n        if (typeof objVal === 'object' &amp;&amp; objVal !== null &amp;&amp; !(objVal instanceof Date) &amp;&amp; !(objVal instanceof RegExp) &amp;&amp; !objVal.nodeName) {\n          str += thick_pad + '[' + key + '] =&gt;\\n' + thick_pad + _formatArray(objVal, cur_depth + 1, pad_val, pad_char);\n        } else {\n          val = _getInnerVal(objVal, thick_pad);\n          str += thick_pad + '[' + key + '] =&gt;\\n' + thick_pad + val + '\\n';\n        }\n      }\n      str += base_pad + '}\\n';\n    } else {\n      str = _getInnerVal(obj, thick_pad);\n    }\n    return str;\n  };\n\n  output = _formatArray(arguments[0], 0, pad_val, pad_char);\n  for (i = 1; i &lt; arguments.length; i++) {\n    output += '\\n' + _formatArray(arguments[i], 0, pad_val, pad_char);\n  }\n\n  if (d.body) {\n    this.echo(output);\n  } else {\n    try {\n      d = XULDocument; // We're in XUL, so appending as plain text won't work\n      this.echo('&lt;pre xmlns=\"http://www.w3.org/1999/xhtml\" style=\"white-space:pre;\"&gt;' + output + '&lt;/pre&gt;');\n    } catch (e) {\n      this.echo(output); // Outputting as plain text may work in some plain XML\n    }\n  }\n}\n</code></pre>\n\n<h1><code>print_r()</code> in JavaScript</h1>\n\n<p>Here is the <code>print_r()</code> function:<br>\n<a href=\"http://phpjs.org/functions/print_r/\">http://phpjs.org/functions/print_r/</a><br>\nIt depends on <code>echo()</code> too.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function print_r (array, return_val) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Michael White (http://getsprink.com)\n  // +   improved by: Ben Bryan\n  // +      input by: Brett Zamir (http://brett-zamir.me)\n  // +      improved by: Brett Zamir (http://brett-zamir.me)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // -    depends on: echo\n  // *     example 1: print_r(1, true);\n  // *     returns 1: 1\n  var output = '',\n    pad_char = ' ',\n    pad_val = 4,\n    d = this.window.document,\n    getFuncName = function (fn) {\n      var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn);\n      if (!name) {\n        return '(Anonymous)';\n      }\n      return name[1];\n    },\n    repeat_char = function (len, pad_char) {\n      var str = '';\n      for (var i = 0; i &lt; len; i++) {\n        str += pad_char;\n      }\n      return str;\n    },\n    formatArray = function (obj, cur_depth, pad_val, pad_char) {\n      if (cur_depth &gt; 0) {\n        cur_depth++;\n      }\n\n      var base_pad = repeat_char(pad_val * cur_depth, pad_char);\n      var thick_pad = repeat_char(pad_val * (cur_depth + 1), pad_char);\n      var str = '';\n\n      if (typeof obj === 'object' &amp;&amp; obj !== null &amp;&amp; obj.constructor &amp;&amp; getFuncName(obj.constructor) !== 'PHPJS_Resource') {\n        str += 'Array\\n' + base_pad + '(\\n';\n        for (var key in obj) {\n          if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\n            str += thick_pad + '[' + key + '] =&gt; ' + formatArray(obj[key], cur_depth + 1, pad_val, pad_char);\n          }\n          else {\n            str += thick_pad + '[' + key + '] =&gt; ' + obj[key] + '\\n';\n          }\n        }\n        str += base_pad + ')\\n';\n      }\n      else if (obj === null || obj === undefined) {\n        str = '';\n      }\n      else { // for our \"resource\" class\n        str = obj.toString();\n      }\n\n      return str;\n    };\n\n  output = formatArray(array, 0, pad_val, pad_char);\n\n  if (return_val !== true) {\n    if (d.body) {\n      this.echo(output);\n    }\n    else {\n      try {\n        d = XULDocument; // We're in XUL, so appending as plain text won't work; trigger an error out of XUL\n        this.echo('&lt;pre xmlns=\"http://www.w3.org/1999/xhtml\" style=\"white-space:pre;\"&gt;' + output + '&lt;/pre&gt;');\n      } catch (e) {\n        this.echo(output); // Outputting as plain text may work in some plain XML\n      }\n    }\n    return true;\n  }\n  return output;\n}\n</code></pre>\n\n<h1><code>var_export()</code> in JavaScript</h1>\n\n<p>You may also find the <code>var_export()</code> alternative useful, which also depends on <code>echo()</code>:<br>\n<a href=\"http://phpjs.org/functions/var_export/\">http://phpjs.org/functions/var_export/</a></p>\n\n<pre><code>function var_export (mixed_expression, bool_return) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Philip Peterson\n  // +   improved by: johnrembo\n  // +   improved by: Brett Zamir (http://brett-zamir.me)\n  // +   input by: Brian Tafoya (http://www.premasolutions.com/)\n  // +   bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // +   bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // +   input by: Hans Henrik (http://hanshenrik.tk/)\n  // -    depends on: echo\n  // *     example 1: var_export(null);\n  // *     returns 1: null\n  // *     example 2: var_export({0: 'Kevin', 1: 'van', 2: 'Zonneveld'}, true);\n  // *     returns 2: \"array (\\n  0 =&gt; 'Kevin',\\n  1 =&gt; 'van',\\n  2 =&gt; 'Zonneveld'\\n)\"\n  // *     example 3: data = 'Kevin';\n  // *     example 3: var_export(data, true);\n  // *     returns 3: \"'Kevin'\"\n  var retstr = '',\n    iret = '',\n    value,\n    cnt = 0,\n    x = [],\n    i = 0,\n    funcParts = [],\n    // We use the last argument (not part of PHP) to pass in\n    // our indentation level\n    idtLevel = arguments[2] || 2,\n    innerIndent = '',\n    outerIndent = '',\n    getFuncName = function (fn) {\n      var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn);\n      if (!name) {\n        return '(Anonymous)';\n      }\n      return name[1];\n    },\n    _makeIndent = function (idtLevel) {\n      return (new Array(idtLevel + 1)).join(' ');\n    },\n    __getType = function (inp) {\n      var i = 0, match, types, cons, type = typeof inp;\n      if (type === 'object' &amp;&amp; inp.constructor &amp;&amp;\n        getFuncName(inp.constructor) === 'PHPJS_Resource') {\n        return 'resource';\n      }\n      if (type === 'function') {\n        return 'function';\n      }\n      if (type === 'object' &amp;&amp; !inp) {\n        return 'null'; // Should this be just null?\n      }\n      if (type === \"object\") {\n        if (!inp.constructor) {\n          return 'object';\n        }\n        cons = inp.constructor.toString();\n        match = cons.match(/(\\w+)\\(/);\n        if (match) {\n          cons = match[1].toLowerCase();\n        }\n        types = [\"boolean\", \"number\", \"string\", \"array\"];\n        for (i = 0; i &lt; types.length; i++) {\n          if (cons === types[i]) {\n            type = types[i];\n            break;\n          }\n        }\n      }\n      return type;\n    },\n    type = __getType(mixed_expression);\n\n  if (type === null) {\n    retstr = \"NULL\";\n  } else if (type === 'array' || type === 'object') {\n    outerIndent = _makeIndent(idtLevel - 2);\n    innerIndent = _makeIndent(idtLevel);\n    for (i in mixed_expression) {\n      value = this.var_export(mixed_expression[i], 1, idtLevel + 2);\n      value = typeof value === 'string' ? value.replace(/&lt;/g, '&amp;lt;').\n                        replace(/&gt;/g, '&amp;gt;') : value;\n      x[cnt++] = innerIndent + i + ' =&gt; ' +\n            (__getType(mixed_expression[i]) === 'array' ?\n              '\\n' : '') + value;\n    }\n    iret = x.join(',\\n');\n    retstr = outerIndent + \"array (\\n\" + iret + '\\n' + outerIndent + ')';\n  } else if (type === 'function') {\n    funcParts = mixed_expression.toString().\n            match(/function .*?\\((.*?)\\) \\{([\\s\\S]*)\\}/);\n\n    // For lambda functions, var_export() outputs such as the following:\n    // '\\000lambda_1'. Since it will probably not be a common use to\n    // expect this (unhelpful) form, we'll use another PHP-exportable\n    // construct, create_function() (though dollar signs must be on the\n    // variables in JavaScript); if using instead in JavaScript and you\n    // are using the namespaced version, note that create_function() will\n    // not be available as a global\n    retstr = \"create_function ('\" + funcParts[1] + \"', '\" +\n          funcParts[2].replace(new RegExp(\"'\", 'g'), \"\\\\'\") + \"')\";\n  } else if (type === 'resource') {\n    retstr = 'NULL'; // Resources treated as null for var_export\n  } else {\n    retstr = typeof mixed_expression !== 'string' ? mixed_expression :\n          \"'\" + mixed_expression.replace(/([\"'])/g, \"\\\\$1\").\n              replace(/\\0/g, \"\\\\0\") + \"'\";\n  }\n\n  if (!bool_return) {\n    this.echo(retstr);\n    return null;\n  }\n  return retstr;\n}\n</code></pre>\n\n<h1><code>echo()</code> in JavaScript</h1>\n\n<p><a href=\"http://phpjs.org/functions/echo/\">http://phpjs.org/functions/echo/</a></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function echo () {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Philip Peterson\n  // +   improved by: echo is bad\n  // +   improved by: Nate\n  // +    revised by: Der Simon (http://innerdom.sourceforge.net/)\n  // +   improved by: Brett Zamir (http://brett-zamir.me)\n  // +   bugfixed by: Eugene Bulkin (http://doubleaw.com/)\n  // +   input by: JB\n  // +   improved by: Brett Zamir (http://brett-zamir.me)\n  // +   bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // +   bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // +   bugfixed by: EdorFaus\n  // +   improved by: Brett Zamir (http://brett-zamir.me)\n  // %        note 1: If browsers start to support DOM Level 3 Load and Save (parsing/serializing),\n  // %        note 1: we wouldn't need any such long code (even most of the code below). See\n  // %        note 1: link below for a cross-browser implementation in JavaScript. HTML5 might\n  // %        note 1: possibly support DOMParser, but that is not presently a standard.\n  // %        note 2: Although innerHTML is widely used and may become standard as of HTML5, it is also not ideal for\n  // %        note 2: use with a temporary holder before appending to the DOM (as is our last resort below),\n  // %        note 2: since it may not work in an XML context\n  // %        note 3: Using innerHTML to directly add to the BODY is very dangerous because it will\n  // %        note 3: break all pre-existing references to HTMLElements.\n  // *     example 1: echo('&lt;div&gt;&lt;p&gt;abc&lt;/p&gt;&lt;p&gt;abc&lt;/p&gt;&lt;/div&gt;');\n  // *     returns 1: undefined\n  // Fix: This function really needs to allow non-XHTML input (unless in true XHTML mode) as in jQuery\n  var arg = '',\n    argc = arguments.length,\n    argv = arguments,\n    i = 0,\n    holder, win = this.window,\n    d = win.document,\n    ns_xhtml = 'http://www.w3.org/1999/xhtml',\n    ns_xul = 'http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul'; // If we're in a XUL context\n  var stringToDOM = function (str, parent, ns, container) {\n    var extraNSs = '';\n    if (ns === ns_xul) {\n      extraNSs = ' xmlns:html=\"' + ns_xhtml + '\"';\n    }\n    var stringContainer = '&lt;' + container + ' xmlns=\"' + ns + '\"' + extraNSs + '&gt;' + str + '&lt;/' + container + '&gt;';\n    var dils = win.DOMImplementationLS,\n      dp = win.DOMParser,\n      ax = win.ActiveXObject;\n    if (dils &amp;&amp; dils.createLSInput &amp;&amp; dils.createLSParser) {\n      // Follows the DOM 3 Load and Save standard, but not\n      // implemented in browsers at present; HTML5 is to standardize on innerHTML, but not for XML (though\n      // possibly will also standardize with DOMParser); in the meantime, to ensure fullest browser support, could\n      // attach http://svn2.assembla.com/svn/brettz9/DOMToString/DOM3.js (see http://svn2.assembla.com/svn/brettz9/DOMToString/DOM3.xhtml for a simple test file)\n      var lsInput = dils.createLSInput();\n      // If we're in XHTML, we'll try to allow the XHTML namespace to be available by default\n      lsInput.stringData = stringContainer;\n      var lsParser = dils.createLSParser(1, null); // synchronous, no schema type\n      return lsParser.parse(lsInput).firstChild;\n    } else if (dp) {\n      // If we're in XHTML, we'll try to allow the XHTML namespace to be available by default\n      try {\n        var fc = new dp().parseFromString(stringContainer, 'text/xml');\n        if (fc &amp;&amp; fc.documentElement &amp;&amp; fc.documentElement.localName !== 'parsererror' &amp;&amp; fc.documentElement.namespaceURI !== 'http://www.mozilla.org/newlayout/xml/parsererror.xml') {\n          return fc.documentElement.firstChild;\n        }\n        // If there's a parsing error, we just continue on\n      } catch (e) {\n        // If there's a parsing error, we just continue on\n      }\n    } else if (ax) { // We don't bother with a holder in Explorer as it doesn't support namespaces\n      var axo = new ax('MSXML2.DOMDocument');\n      axo.loadXML(str);\n      return axo.documentElement;\n    }\n/*else if (win.XMLHttpRequest) { // Supposed to work in older Safari\n      var req = new win.XMLHttpRequest;\n      req.open('GET', 'data:application/xml;charset=utf-8,'+encodeURIComponent(str), false);\n      if (req.overrideMimeType) {\n        req.overrideMimeType('application/xml');\n      }\n      req.send(null);\n      return req.responseXML;\n    }*/\n    // Document fragment did not work with innerHTML, so we create a temporary element holder\n    // If we're in XHTML, we'll try to allow the XHTML namespace to be available by default\n    //if (d.createElementNS &amp;&amp; (d.contentType &amp;&amp; d.contentType !== 'text/html')) { // Don't create namespaced elements if we're being served as HTML (currently only Mozilla supports this detection in true XHTML-supporting browsers, but Safari and Opera should work with the above DOMParser anyways, and IE doesn't support createElementNS anyways)\n    if (d.createElementNS &amp;&amp; // Browser supports the method\n    (d.documentElement.namespaceURI || // We can use if the document is using a namespace\n    d.documentElement.nodeName.toLowerCase() !== 'html' || // We know it's not HTML4 or less, if the tag is not HTML (even if the root namespace is null)\n    (d.contentType &amp;&amp; d.contentType !== 'text/html') // We know it's not regular HTML4 or less if this is Mozilla (only browser supporting the attribute) and the content type is something other than text/html; other HTML5 roots (like svg) still have a namespace\n    )) { // Don't create namespaced elements if we're being served as HTML (currently only Mozilla supports this detection in true XHTML-supporting browsers, but Safari and Opera should work with the above DOMParser anyways, and IE doesn't support createElementNS anyways); last test is for the sake of being in a pure XML document\n      holder = d.createElementNS(ns, container);\n    } else {\n      holder = d.createElement(container); // Document fragment did not work with innerHTML\n    }\n    holder.innerHTML = str;\n    while (holder.firstChild) {\n      parent.appendChild(holder.firstChild);\n    }\n    return false;\n    // throw 'Your browser does not support DOM parsing as required by echo()';\n  };\n\n\n  var ieFix = function (node) {\n    if (node.nodeType === 1) {\n      var newNode = d.createElement(node.nodeName);\n      var i, len;\n      if (node.attributes &amp;&amp; node.attributes.length &gt; 0) {\n        for (i = 0, len = node.attributes.length; i &lt; len; i++) {\n          newNode.setAttribute(node.attributes[i].nodeName, node.getAttribute(node.attributes[i].nodeName));\n        }\n      }\n      if (node.childNodes &amp;&amp; node.childNodes.length &gt; 0) {\n        for (i = 0, len = node.childNodes.length; i &lt; len; i++) {\n          newNode.appendChild(ieFix(node.childNodes[i]));\n        }\n      }\n      return newNode;\n    } else {\n      return d.createTextNode(node.nodeValue);\n    }\n  };\n\n  var replacer = function (s, m1, m2) {\n    // We assume for now that embedded variables do not have dollar sign; to add a dollar sign, you currently must use {$$var} (We might change this, however.)\n    // Doesn't cover all cases yet: see http://php.net/manual/en/language.types.string.php#language.types.string.syntax.double\n    if (m1 !== '\\\\') {\n      return m1 + eval(m2);\n    } else {\n      return s;\n    }\n  };\n\n  this.php_js = this.php_js || {};\n  var phpjs = this.php_js,\n    ini = phpjs.ini,\n    obs = phpjs.obs;\n  for (i = 0; i &lt; argc; i++) {\n    arg = argv[i];\n    if (ini &amp;&amp; ini['phpjs.echo_embedded_vars']) {\n      arg = arg.replace(/(.?)\\{?\\$(\\w*?\\}|\\w*)/g, replacer);\n    }\n\n    if (!phpjs.flushing &amp;&amp; obs &amp;&amp; obs.length) { // If flushing we output, but otherwise presence of a buffer means caching output\n      obs[obs.length - 1].buffer += arg;\n      continue;\n    }\n\n    if (d.appendChild) {\n      if (d.body) {\n        if (win.navigator.appName === 'Microsoft Internet Explorer') { // We unfortunately cannot use feature detection, since this is an IE bug with cloneNode nodes being appended\n          d.body.appendChild(stringToDOM(ieFix(arg)));\n        } else {\n          var unappendedLeft = stringToDOM(arg, d.body, ns_xhtml, 'div').cloneNode(true); // We will not actually append the div tag (just using for providing XHTML namespace by default)\n          if (unappendedLeft) {\n            d.body.appendChild(unappendedLeft);\n          }\n        }\n      } else {\n        d.documentElement.appendChild(stringToDOM(arg, d.documentElement, ns_xul, 'description')); // We will not actually append the description tag (just using for providing XUL namespace by default)\n      }\n    } else if (d.write) {\n      d.write(arg);\n    }\n/* else { // This could recurse if we ever add print!\n      print(arg);\n    }*/\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I made a simple dump function in js, try this <a href=\"https://github.com/resoftw/redump\" rel=\"nofollow\">https://github.com/resoftw/redump</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Actually, there sort of is. If you just want to see the contents of an object, try this:</p>\n\n<pre><code>&lt;pre&gt; {{ object_name | json }} &lt;/pre&gt;\n</code></pre>\n\n<p>Well, that behaves very similar to how I normally use var_dump, anyway.\nI mostly use var_dump to check an object or array in the browser, to find the keys and so on.\nThis will show you just that, but formated as a json object - and updated in realtime, pretty cool.</p>\n\n<p>One example of use would be:</p>\n\n<pre><code>&lt;form&gt;\n   &lt;select ng-model=\"film.title\"&gt;\n       &lt;option value=\"point\"&gt;Break&lt;/option&gt;\n       &lt;option value=\"johnny\"&gt;Mnemonic&lt;/option&gt;\n       &lt;option value=\"bill\"&gt;Ted&lt;/option&gt;\n   &lt;/select&gt;\n   &lt;select ng-model=\"film.actor\"&gt;\n       &lt;option value=\"patric\"&gt;Swayze&lt;/option&gt;\n       &lt;option value=\"Ice\"&gt;T&lt;/option&gt;\n       &lt;option value=\"keanu\"&gt;Reeves&lt;/option&gt;\n   &lt;/select&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>Well, given that the first otion is selected, having this in the HTML:\n    <pre> {{ film| json }} </pre>\nWill output this (in the browser):</p>\n\n<pre><code>{\n  \"title\": \"point\",\n  \"actor\": \"patric\"\n}\n</code></pre>\n\n<p>So, fairly similar to var_dump(), or perhaps rather print_r(), but very simple and pretty useful.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I would like to see the structure of object in JavaScript (for debugging). Is there anything similar to var_dump in PHP?</p>\n",
            "last_activity_date": 1417969686,
            "question_id": 603987,
            "score": 156,
            "tags": [
                "javascript",
                "object",
                "dump",
                "var-dump"
            ],
            "title": "What is the JavaScript equivalent of var_dump or print_r in PHP?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>In order to switch between different views, you could directly change the window.location (using the $location service!) in\nindex.html file</p>\n\n<pre><code>&lt;div ng-controller=\"Cntrl\"&gt;\n        &lt;div ng-click=\"changeView('edit')\"&gt;\n            edit\n        &lt;/div&gt;\n        &lt;div ng-click=\"changeView('preview')\"&gt;\n            preview\n        &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Controller.js</p>\n\n<pre><code>function Cntrl ($scope,$location) {\n        $scope.changeView = function(view){\n            $location.path(view); // path not hash\n        }\n    }\n</code></pre>\n\n<p>and configure the router to switch to different partials based on the location ( as shown here <a href=\"https://github.com/angular/angular-seed/blob/master/app/js/app.js\">https://github.com/angular/angular-seed/blob/master/app/js/app.js</a> ). This would have the benefit of history as well as using ng-view. </p>\n\n<p>Alternatively, you use ng-include with different partials and then use a ng-switch as shown in here ( <a href=\"https://github.com/ganarajpr/Angular-UI-Components/blob/master/index.html\">https://github.com/ganarajpr/Angular-UI-Components/blob/master/index.html</a> )</p>\n",
                    "is_accepted": true,
                    "score": 142
                },
                {
                    "body": "<p>I've got an example working.</p>\n\n<p>Here's how I have my doc looks:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;link rel=\"stylesheet\" href=\"css/main.css\"&gt;\n    &lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.0.3/angular.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.0.3/angular-resource.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"js/app.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"controllers/ctrls.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body ng-app=\"app\"&gt;\n    &lt;div id=\"contnr\"&gt;\n        &lt;ng-view&gt;&lt;/ng-view&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Here's what my partial looks like:  </p>\n\n<pre><code>&lt;div id=\"welcome\" ng-controller=\"Index\"&gt;\n    &lt;b&gt;Welcome! Please Login!&lt;/b&gt;\n    &lt;form ng-submit=\"auth()\"&gt;\n        &lt;input class=\"input login username\" type=\"text\" placeholder=\"username\" /&gt;&lt;br&gt;\n        &lt;input class=\"input login password\" type=\"password\" placeholder=\"password\" /&gt;&lt;br&gt;\n        &lt;input class=\"input login submit\" type=\"submit\" placeholder=\"login!\" /&gt;\n    &lt;/form&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Here's what my Ctrl looks like:</p>\n\n<pre><code>app.controller('Index', function($scope, $routeParams, $location){\n    $scope.auth = function(){\n        $location.url('/map');\n    };\n});\n</code></pre>\n\n<p>app is my module:</p>\n\n<pre><code>var app = angular.module('app', ['ngResource']).config(function($routeProvider)...\n</code></pre>\n\n<p>Hope this is helpful!</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The provided answer is absolutely correct, but I wanted to expand for any future visitors who may want to do it a bit more dynamically - </p>\n\n<p>In the view - </p>\n\n<pre><code>&lt;div ng-repeat=\"person in persons\"&gt;\n    &lt;div ng-click=\"changeView(person)\"&gt;\n        Go to edit\n    &lt;div&gt;\n&lt;div&gt;\n</code></pre>\n\n<p>In the controller - </p>\n\n<pre><code>$scope.changeView = function(person){\n    var earl = '/editperson/' + person.id;\n    $location.path(earl);\n}\n</code></pre>\n\n<p>Same basic concept as the accepted answer, just adding some dynamic content to it to improve a bit.  If the accepted answer wants to add this I will delete my answer.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Without doing a full revamp of the default routing (#/ViewName) environment, I was able to do a slight modification of Cody's tip and got it working great.</p>\n\n<p>the controller</p>\n\n<pre><code>.controller('GeneralCtrl', ['$route', '$routeParams', '$location',\n        function($route, $routeParams, $location) {\n            ...\n            this.goToView = function(viewName){\n                $location.url('/' + viewName);\n            }\n        }]\n    );\n</code></pre>\n\n<p>the view</p>\n\n<pre><code>...\n&lt;li ng-click=\"general.goToView('Home')\"&gt;HOME&lt;/li&gt;\n...\n</code></pre>\n\n<p>What brought me to this solution was when I was attempting to integrate a Kendo Mobile UI widget into an angular environment I was losing the context of my controller and the behavior of the regular anchor tag was also being hijacked. I re-established my context from within the Kendo widget and needed to use a method to navigate...this worked.</p>\n\n<p>Thanks for the previous posts!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to use the <em>ng-click</em> feature of AngularJS to switch views. How would I go about doing this with the code below?</p>\n\n<p>index.html</p>\n\n<pre><code> &lt;div ng-controller=\"Cntrl\"&gt;\n        &lt;div ng-click=\"someFunction()\"&gt;\n            click me\n        &lt;div&gt;\n    &lt;div&gt;\n</code></pre>\n\n<p>controller.js</p>\n\n<pre><code>  function Cntrl ($scope) {\n        $scope.someFunction = function(){\n            //code to change view?\n        }\n    }\n</code></pre>\n",
            "last_activity_date": 1415027069,
            "question_id": 11003916,
            "score": 89,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "How do I switch views in AngularJS from a controller function?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<ul>\n<li><p><a href=\"http://peter.michaux.ca/\" rel=\"nofollow\">Peter Michaux</a> has some decent articles</p></li>\n<li><p>Also see <a href=\"http://javascript.crockford.com/\" rel=\"nofollow\">Crockford's</a> articles (and <a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\" rel=\"nofollow\">his book</a>)</p></li>\n<li><p>A new book on the subject by Stoyan Stefanov: <a href=\"http://rads.stackoverflow.com/amzn/click/1847194141\" rel=\"nofollow\">Object-Oriented JavaScript: Create scalable, reusable high-quality JavaScript applications and libraries</a></p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here's a good one:</p>\n\n<p><a href=\"http://oreilly.com/catalog/9780596517748\"><img src=\"http://covers.oreilly.com/images/9780596517748/cat.gif\" /></a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>APress has a book called \"Pro Javascript Design Patterns\" that is probably just what you're looking for.  While the author (Diaz Harmes) is certainly not \"the gang of four\", I think he does a pretty good job; I know I learned quite a bit from it (and it got 4.5 stars on Amazon).</p>\n\n<p>Amazon link: <a href=\"http://rads.stackoverflow.com/amzn/click/159059908X\">http://www.amazon.com/JavaScript-Design-Patterns-Recipes-Problem-Solution/dp/159059908X</a></p>\n\n<p><img src=\"http://ecx.images-amazon.com/images/I/513vjwS9RpL._BO2,204,203,200_PIsitb-sticker-arrow-click,TopRight,35,-76_AA300_SH20_OU01_.jpg\" alt=\"alt text\"></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Here's an on-line resource:</p>\n\n<p><a href=\"http://www.addyosmani.com/resources/essentialjsdesignpatterns/book/\"><strong>Essential JavaScript Design Patterns For Beginners</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>This is an awesome book by O'Reilly. It builds on their \"JavaScript: The Good Parts\".</p>\n\n<p><img src=\"http://i.stack.imgur.com/tw0PZ.gif\" alt=\"enter image description here\"></p>\n\n<p>It references a lot of the patterns mentioned in the \"Gang of Four\" book and notes a lot of the problems solved in that book are trivial to solve with JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>This is one of the best design patterns resources I've found for JavaScript\n<a href=\"http://shichuan.github.com/javascript-patterns/\" rel=\"nofollow\">http://shichuan.github.com/javascript-patterns/</a> </p>\n\n<p>It's aimed for JavaScript as we know and not necessarily trying only use concepts of other languages.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I'm not sure why no one has listed this, but Addy Osmani's JavaScript design pattern book is fantastic and freely available online.  He really digs deep to show you the nuts and bolts of each pattern.</p>\n\n<p><a href=\"http://addyosmani.com/resources/essentialjsdesignpatterns/book/\">http://addyosmani.com/resources/essentialjsdesignpatterns/book/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>As sethen said, I will also suggest for the book of Addy Osmani (<a href=\"http://addyosmani.com/resources/essentialjsdesignpatterns/book/\" rel=\"nofollow\">http://addyosmani.com/resources/essentialjsdesignpatterns/book/</a>)</p>\n\n<p>Its really cool and easy for beginners. But don't underestimate it to be beginners, the insight described in this book is very thorough and in a meaningful way... To me, it is a must read for all.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>This is a question for general discussion. Are there any good, comprehensive resources for useful JavaScript design patterns. I am trying to avoid references that attempt to coerce JavaScript into, say, Java by imposing patterns more suited to another language. Let's let JS be JS and shape our patterns around the strengths.</p>\n\n<p>Please any discussion would be valued by more than just me, I suspect.</p>\n",
            "last_activity_date": 1401014437,
            "question_id": 3168805,
            "score": 45,
            "tags": [
                "javascript",
                "design-patterns"
            ],
            "title": "JavaScript design patterns"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Not at all a weird question - I've been trying to sell Angular to a lot of java developers and they ask this. I asked it myself when I was learning (I'm still learning, btw)</p>\n\n<p>If you take a 'conventional' java webapp as you've described and Angular-ize it, you've got to first take your server and make it a RESTful API.  Remove the JSPs, etc.  This is actually the hard part, IMO, of writing an Angular app - getting the REST API right.  The key for me to deciding what logic needed to go into the server was <strong>thinking of it as a pure api and forgetting for the moment that it will have a front end</strong>.</p>\n\n<p>That question really helped me - if someone tries to save a given resource and that resource doesn't have valid data there's no front end to tell them - they're hitting the API directly so the API needs to reject it.  So, the back end is responsible for the deep validation.  This applies to your business logic as well.  Assume someone is using <em>just</em> the API and it will become clear what your server needs to do.</p>\n\n<p>The server needs also to vend data in (probably) json format (I use Spring MVC + Jackson), so it's responsible for exposing the model to Angular, and communication with the database.</p>\n\n<p>So what's the MVC then on the Angular side?</p>\n\n<ul>\n<li><strong>Model</strong>: The data that comes from the REST API.  If the API is vending JSON, then these objects will already be 1st class javascript objects.</li>\n<li><strong>View</strong>: HTML, and directives when you need to manipulate the DOM</li>\n<li><strong>Controller</strong>: (and custom services that you've factored out of your controllers..)\n<ul>\n<li>Queries the REST API and puts what's necessary for the View on the $scope</li>\n<li>Provides callbacks for directives to respond to events that might then require calls back to the server.</li>\n<li>Validation: usually via a callback to a directive.  <em>Will likely overlap some of the validation you've already put in the server</em>, but you don't want your user to wait for the server to validate everything - the client should know <em>something</em> about the validation to give the user immediate feedback.</li>\n<li>Business logic: Pretty much the same story as validation.</li>\n</ul></li>\n</ul>\n\n<p>But why the duplication of logic in the client and in the server?  Mostly because you're not writing one app, you're writing two independent things: 1) a REST API that needs to be robust and usable without a front end 2) a GUI that needs to give immediate feedback to a user and not necessarily wait for a server.</p>\n\n<p>So, short answer - get the REST API right by forgetting that there will be a UI, and what goes into Angular will be much clearer.</p>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p>I think the term \"business logic\" is a bit of a misnomer here. The \"business\" of a clientside app is the business of handling the user interface. It's not going to be things like security rules and proprietary logic or other sensitive intellectual property.</p>\n\n<p>So in Angular the division is (generally):</p>\n\n<ul>\n<li><strong>Controller</strong> (controller): for manipulating the data (scope) behind your UI. </li>\n<li><strong>Directives</strong> : for setting up the DOM to communicate with the controller via scope, <em>and</em> for manipulating the DOM.</li>\n<li><strong>Templates</strong> (view): To assign directives to elements of the DOM.</li>\n<li><strong>Scope</strong> (model or viewmodel): for carrying data between all pieces of the system.</li>\n<li><strong>Services</strong> : Injectable, reusable bits of code. Usually for dependencies like handling Ajax, cookies, or other I/O.</li>\n</ul>\n\n<p>It's really almost MVVM and not MVC.</p>\n\n<p>As for your \"business\" logic or rules... anything requiring security must always be secured at the server level. </p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I love what @Roy TrueLove says. But let me say that this is the ultimate way of using angularjs. Of course, you have to learn to do your applications this way, if you want to get the most benefit of angular. I pray to be there some day.</p>\n\n<p>In the meanwhile, during your learning, and during your transition to fully using angularjs as your client side main way of doing things, you can start using it for some small mission here and there, and gradually get accustomed to it and to its way of thinking. </p>\n\n<p>I encourage to gradually embracing it and to go slowly slowly, but surely, I guaranty, sure.</p>\n\n<p>Angularjs is designed to serve this approach, as it can work on the smallest task as good as it can do the biggest one. For example, this first time I used angular was just to show names while the user types ids. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I agree with the answers here. Some more comments. When you write an applicacion, you first need to concentrate on the problem domain. And create a software model of some real business. For example, if your problem domain is a shopping, some requirements that you need to model might include:</p>\n\n<ul>\n<li>The credit card should be valid.</li>\n<li>If you pay with a credit card of brand X, you will receive a 10% of discount.</li>\n<li>The shop cart should contain at least one item to perform the checkout</li>\n<li>The items must have stock before allow users to add them to the shop cart</li>\n</ul>\n\n<p>The implementation of these requirements will model your problem domain, this is your business logic. </p>\n\n<p>Angular is a frontend framework and toolkit. It is a <em>web</em> frontend. If you implement this in a web frontend, you will miss the oportunity to reuse your model from other frontend or interface, like a mobile or a desktop application.\nSo, ideally, your business logic implementation needs to be decoupled from any user interface framework and decoupled from any persistent framework also. Then, you will have your interface objects that will deal with user interface problems and will comunicate with your business logic objects. This can be a Spring MVC controller, and/or an Angular controller or service.</p>\n\n<p>There is a <a href=\"http://www.copypasteisforword.com/notes/angularjs\" rel=\"nofollow\">sample application</a> you can take a look at, that follow the principles mentioned here.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I seems to be having this question as well, as some organizations just craze for new technologies - \"I want cloud...wait, I want lightweight\", its hard to justify whether it deserve for the switch to a lighther framework. </p>\n\n<p>I develop webapplications using Spring/JBoss seam/JSF and on MVC framework all the time. Most of the time java scripts will reside for the presentation layer validations and the main action classes/entities and business logic will reside in Java code. After some basic hands-on on Angular, I started to get what they meant by MVC as they abstracted another level on the presentation layer, where we can have our own views and controllers on the front end. To answer your question, just like everyone's comment the best way is to lay it on the presentation layer. </p>\n\n<p>As for security point of view, I believe heavy or sensitive business rules should reside on the server side as we do not want to expose it to the world. If the business logic is developed poorly, one can easily find the weakness on our code and exploit it.</p>\n\n<p>Here's my thought for framework like Angular is like a small shop/SOHO handling customer, and they have a few people and really efficient and fast.They cater well for customers facing business and delivery/receive goods efficiently(REST, JSON). They do have designated roles and tasks, but some worker perform more than a tasks. The shop also vulnerable to thief or robbers as usually they don't emphasize heavy security. </p>\n\n<p>As for server side framework like Spring/Struts 2, imagine a modern corporation(CMM Level 5) with different level of management and capable of handling bigger business(batch jobs, web services, enterprise bus). They do handle customer, but not directly, often go through brokers or even retail shops. Security wise a corporation is more robust, and often securities on the front door, or important information are protected in a safe(encryption/sign-on).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's important to understand that in some versions of  the MVC pattern, the <em>data</em> as well as the logic that <em>manipulates</em> the data both reside in the \"model\" layer (with the \"controller\" layer doing nothing but binding). In AngularJS, however, the data ($scope) alone resides in the \"model\" layer, while the logic that manipulates the data ($scope) resides in the \"controller\" layer.</p>\n\n<p><img src=\"http://i.stack.imgur.com/LBqIG.png\" alt=\"AngularJS &quot;MVC&quot;\"></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Until now I was mainly using <code>Struts 2</code>, <code>Spring</code>, <code>JQuery</code> technology stack for building web applications. The point is, that mentioned stack uses server side <code>MVC</code> pattern.  The main role of web browsers was limited to a request/response cycle (+ client side validation). Data retrieval, business logic, wiring and validation were mainly responsibilities of the server side. </p>\n\n<p>I have few questions regarding <em>AngularJS</em> framework that were produced by following quotes I read:</p>\n\n<hr>\n\n<p>From the <a href=\"http://docs.angularjs.org/tutorial/step_02\"><em>AngularJS tutorial</em></a>:</p>\n\n<blockquote>\n  <p>For Angular apps, we encourage the use of the Model-View-Controller\n  (MVC) design pattern to decouple the code and to separate concerns.</p>\n</blockquote>\n\n<p>From the <em><a href=\"http://en.wikipedia.org/wiki/Model%E2%80%93View%E2%80%93Controller\">Wikipedia Model\u2013view\u2013controller</a></em>:</p>\n\n<blockquote>\n  <p>Model\u2013View\u2013Controller (MVC) is an architecture that separates the\n  representation of information from the user's interaction with\n  it. The model consists of application data and <strong>business rules</strong>,\n  and the controller mediates input, converting it to commands for the\n  model or view</p>\n</blockquote>\n\n<hr>\n\n<p><em>AngularJS</em> uses client side <code>MVC</code> pattern. So I guess there is no other option then to include validation logic also to the client side in some way?</p>\n\n<p><strong>What would be the best way to write a robust AngularJS application? MVC on client side and some kind  of MC (model, controller) on server side?</strong> </p>\n\n<p>Does that means, that MODEL and CONTROLLER are in one way duplicated (client/server)?</p>\n\n<p>I know my question is somehow weird, but I think the reason is, that I am somehow acustomed to traditional server side MVC pattern. I am sure there is someone, that have already done same transition.</p>\n",
            "last_activity_date": 1408387391,
            "question_id": 13067607,
            "score": 39,
            "tags": [
                "javascript",
                "model-view-controller",
                "client-side",
                "angularjs",
                "server-side"
            ],
            "title": "AngularJS client MVC pattern?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>As I managed to come up with a solution myself, I thought it would be a good idea to share it. The approach might not be flawless, but it's the first one that seemed to work. Feel free to post improvements and suggestions.</p>\n\n<p>What I did in a nutshell:</p>\n\n<ul>\n<li>Launch an instance of <strong>Xvfb</strong>, a virtual framebuffer</li>\n<li>Using <a href=\"http://code.google.com/p/js-test-driver/\"><strong>JsTestDriver</strong></a>:\n<ul>\n<li>launch an instance of Firefox into the virtual framebuffer (headlessly)</li>\n<li>capture the <strong>Firefox</strong> instance and run the test suite</li>\n<li>generate JUnit-compliant test results .XML</li>\n</ul></li>\n<li>Use Bamboo to inspect the results file to pass or fail the build</li>\n</ul>\n\n<p>I will next go through the more detailed phases. This is what my my directory structure ended up looking like:</p>\n\n<pre>\nlib/\n    JsTestDriver.jar\ntest/\n    qunit/\n            equiv.js\n            QUnitAdapter.js\n    jsTestDriver.conf\n    run_js_tests.sh\n    tests.js\ntest-reports/\nbuild.xml\n</pre>\n\n<p><strong>On the build server:</strong></p>\n\n<ul>\n<li>Install Xvfb (<code>apt-get install Xvfb</code>)</li>\n<li>Install Firefox (<code>apt-get install firefox</code>)</li>\n</ul>\n\n<p><strong>Into your application to be built:</strong></p>\n\n<ul>\n<li>Install JsTestDriver: <a href=\"http://code.google.com/p/js-test-driver/\">http://code.google.com/p/js-test-driver/</a>\n<ul>\n<li>add the QUnit <a href=\"http://code.google.com/p/js-test-driver/wiki/QUnitAdapter\">adapters</a> <code>equiv.js</code> and <code>QUnitAdapter.js</code></li>\n<li>configure JsTestDriver (<code>jsTestDriver.conf</code>):</li>\n</ul></li>\n</ul>\n\n<pre>\nserver: http://localhost:4224\n\nload:\n# Load QUnit adapters (may be omitted if QUnit is not used)\n  - qunit/equiv.js\n  - qunit/QUnitAdapter.js   \n\n# Tests themselves (you'll want to add more files)\n  - tests.js\n</pre>\n\n<p>Create a script file for running the unit tests and generating test results (example in Bash, <code>run_js_tests.sh</code>):</p>\n\n<pre><code>#!/bin/bash\n# directory to write output XML (if this doesn't exist, the results will not be generated!)\nOUTPUT_DIR=\"../test-reports\"\nmkdir $OUTPUT_DIR\n\nXVFB=`which Xvfb`\nif [ \"$?\" -eq 1 ];\nthen\n    echo \"Xvfb not found.\"\n    exit 1\nfi\n\nFIREFOX=`which firefox`\nif [ \"$?\" -eq 1 ];\nthen\n    echo \"Firefox not found.\"\n    exit 1\nfi\n\n$XVFB :99 -ac &amp;    # launch virtual framebuffer into the background\nPID_XVFB=\"$!\"      # take the process ID\nexport DISPLAY=:99 # set display to use that of the xvfb\n\n# run the tests\njava -jar ../lib/JsTestDriver.jar --config jsTestDriver.conf --port 4224 --browser $FIREFOX --tests all --testOutput $OUTPUT_DIR\n\nkill $PID_XVFB     # shut down xvfb (firefox will shut down cleanly by JsTestDriver)\necho \"Done.\"\n</code></pre>\n\n<p>Create an Ant target that calls the script:</p>\n\n<pre><code>&lt;target name=\"test\"&gt;        \n    &lt;exec executable=\"cmd\" osfamily=\"windows\"&gt;\n        &lt;!-- This might contain something different in a Windows environment --&gt;\n    &lt;/exec&gt;\n\n    &lt;exec executable=\"/bin/bash\" dir=\"test\" osfamily=\"unix\"&gt;\n        &lt;arg value=\"run_js_tests.sh\" /&gt;\n    &lt;/exec&gt;\n&lt;/target&gt;   \n</code></pre>\n\n<p>Finally, tell the Bamboo build plan to both invoke the <code>test</code> target and look for JUnit test results. Here the default <code>\"**/test-reports/*.xml\"</code> will do fine.</p>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p>You may be able to use rhino, the headless browser, to run your unit tests on your CI machine. Of course, the disadvantage here is that it won't find bugs specific to browser X... but it does beat installing 2-3 OSes on your CI box, to cover all the main platforms... </p>\n\n<p>But yes, this kind of sucks... but it might work just well enough in a CI scenario.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As an alternative, you could also try TestSwarm. I've got it up and running using QUnit to run my JS tests.</p>\n\n<ul>\n<li><a href=\"http://github.com/jquery/testswarm\" rel=\"nofollow\">http://github.com/jquery/testswarm</a></li>\n<li><a href=\"http://swarm.jquery.org/\" rel=\"nofollow\">http://swarm.jquery.org/</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For anyone interested in running their Jasmine BDD specs headlessly in maven, you might be interested in the jasmine-maven-plugin I maintain:</p>\n\n<p><a href=\"http://github.com/searls/jasmine-maven-plugin\" rel=\"nofollow\">http://github.com/searls/jasmine-maven-plugin</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I have used maven and junit to call rhino.  It is not elegant, but I use it to test basic services and utility code.</p>\n\n<p>It requires mocking unsupported classes, like XHR with Java libraries.</p>\n\n<p>I found that it is best code everything in javascript (tests, etc) and only use junit for build organization and a hook into the CI.</p>\n\n<p>I'd like to see if JsTestDriver can do it though.  Or mocha w/ a junit reporter.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://js-testrunner.codehaus.org/index.html\" rel=\"nofollow\">JS Test Runner</a> is a pretty good solution. It uses PhantomJS and QUnit.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've played around with a number of solutions over the past year but I didn't find anything in the ballpark of Karma (formerly testacular).     Give it a try  </p>\n\n<p><a href=\"http://karma-runner.github.com/\" rel=\"nofollow\">http://karma-runner.github.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a webapp build plan running on a Continuous Integration system (<a href=\"http://www.atlassian.com/software/bamboo/\">Atlassian Bamboo</a> 2.5). I need to incorporate <a href=\"http://docs.jquery.com/QUnit\">QUnit</a>-based JavaScript unit tests into the build plan so that on each build, the Javascript tests would be run and Bamboo would interpret the test results.</p>\n\n<p>Preferably I would like to be able to make the build process \"standalone\" so that no connections to external servers would be required. Good ideas on how to accomplish this? The CI system running the build process is on an Ubuntu Linux server.</p>\n",
            "last_activity_date": 1364520260,
            "question_id": 2070499,
            "score": 52,
            "tags": [
                "javascript",
                "unit-testing",
                "continuous-integration",
                "qunit",
                "bamboo"
            ],
            "title": "Running JavaScript unit tests headlessly in a Continuous Integration build"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>There is an \"alternative resources\" page at <a href=\"http://docs.jquery.com/Alternative_Resources\" rel=\"nofollow\">http://docs.jquery.com/Alternative_Resources</a> that has several options.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here is a windows help file:</p>\n\n<p><a href=\"http://charupload.wordpress.com/2007/12/07/jquery-documentation-chm/\" rel=\"nofollow\">http://charupload.wordpress.com/2007/12/07/jquery-documentation-chm/</a></p>\n\n<p><a href=\"http://docs.jquery.com/Alternative_Resources\" rel=\"nofollow\">http://docs.jquery.com/Alternative_Resources</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Go look at the <a href=\"http://docs.jquery.com/Alternative_Resources\" rel=\"nofollow\" title=\"Alternate Resources\">alternate resources</a> page on <a href=\"http://www.jquery.com\" rel=\"nofollow\">jquery.com</a>. You can download the API documentation in chm or pdf format. There is also an offline API browser for Mac OS X.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>you could use a mirror tool such as <a href=\"http://www.httrack.com/\" rel=\"nofollow\">htttrack</a> to download it locally</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://remysharp.com/visual-jquery/\" rel=\"nofollow\" title=\"Visual jQuery\">Visual jQuery</a> is the best. It loads all the information at once, and then filters down as you type in the text box. It's very fast and easy to use.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>New jQuery API Browser, Online, \"offline and anywhere\"</p>\n\n<p>Or BUILD your OWN !!</p>\n\n<p><a href=\"http://remysharp.com/2008/07/04/jquery-api-update-offline-and-anywhere/\" rel=\"nofollow\">http://remysharp.com/2008/07/04/jquery-api-update-offline-and-anywhere/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can download the latest jQuery api documentation from <a href=\"http://www.jqapi.com/\">http://www.jqapi.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 102
                },
                {
                    "body": "<p>You can download the jquery offline manual from the following link.you can also write for help of jquery to my blog.Here is the my blog link.</p>\n\n<p>Help File URL:-\n<a href=\"http://forum.jquery.com/topic/jquery-api-1-4-2-in-chm-format-with-comments-20-7-2010\" rel=\"nofollow\">http://forum.jquery.com/topic/jquery-api-1-4-2-in-chm-format-with-comments-20-7-2010</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can download html version from below url.</p>\n\n<p><a href=\"http://www.jqapi.com/\">http://www.jqapi.com/</a></p>\n\n<p><a href=\"http://www.jqapi.com/jqapi.zip\">http://www.jqapi.com/jqapi.zip</a></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>If you don't like jqapi.com you can download/clone the official documentation from Github:</p>\n\n<p>jQuery - <a href=\"https://github.com/jquery/api.jquery.com\" rel=\"nofollow\">https://github.com/jquery/api.jquery.com</a></p>\n\n<p><br>\nAnd other jQuery projects:</p>\n\n<p>jQuery UI - <a href=\"https://github.com/jquery/api.jqueryui.com\" rel=\"nofollow\">https://github.com/jquery/api.jqueryui.com</a></p>\n\n<p>jQuery Mobile - <a href=\"https://github.com/jquery/api.jquerymobile.com\" rel=\"nofollow\">https://github.com/jquery/api.jquerymobile.com</a></p>\n\n<p>QUnit - <a href=\"https://github.com/jquery/api.qunitjs.com\" rel=\"nofollow\">https://github.com/jquery/api.qunitjs.com</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Pretty awesome cross-platform offline documentation for pretty much every programming language and framework, just download the ones you need. And it's open source. <a href=\"http://zealdocs.org/\" rel=\"nofollow\">http://zealdocs.org/</a></p>\n\n<p>If you download multiple docs, it default searches all of them, so prefix your search with the doc name you want to search. eg. <code>jquery: ajax</code> or <code>php: date</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Since I pound API docs pretty hard when I'm coding, I like to have them on my local disk. jQuery.com lists a lot of sources for browsing the API documentation online, but I haven't found anywhere I can download an HTML bundle as a TAR or ZIP file. Is such a bundle available?</p>\n\n<p>EDIT: I should have said that I want an HTML version.</p>\n\n<p>UPDATE: I guess I didn't explore the \"Alternative Resources\" page deeply enough. The only downloadable HTML version I found is <a href=\"http://dev.jquery.com/view/trunk/tools/api-browser/jquery-api-browser.zip\">this one</a> from dev.jquery.com. Does anybody prefer something else?</p>\n",
            "last_activity_date": 1415206485,
            "question_id": 44763,
            "score": 144,
            "tags": [
                "javascript",
                "jquery",
                "documentation"
            ],
            "title": "Where can I download the jQuery API documentation?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can print the function by evaluating the name of it in the console, like so</p>\n\n<pre><code>&gt; unknownFunc\nfunction unknownFunc(unknown) {\n    alert('unknown seems to be ' + unknown);\n}\n</code></pre>\n\n<p>this won't work for built-in functions, they will only display <code>[native code]</code> instead of the source code.</p>\n\n<p><strong>EDIT</strong>: this implies that the function has been defined within the <code>window</code> scope.</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>Lets say we're looking for function named <strong><code>foo</code></strong>:</p>\n\n<ol>\n<li>(open Chrome dev-tools),</li>\n<li><kbd>ctrl</kbd> + <kbd>shift</kbd> + <kbd>F</kbd>, on OS X use <kbd>cmd</kbd> + <kbd>optn</kbd> + <kbd>F</kbd> instead (it opens window for searching across all scripts), </li>\n<li>check \"Regular expression\" checkbox,</li>\n<li>search for <strong><code>foo\\s*=\\s*function</code></strong> (searches for <code>foo = function</code> with any number of spaces between those three tokens),</li>\n<li>press on a returned result.</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 132
                },
                {
                    "body": "<p>This <a href=\"https://bugs.webkit.org/show_bug.cgi?id=94932\">landed in Chrome on 2012-08-26</a>\nNot sure about the exact version, I noticed it in Chrome 24.</p>\n\n<p>A screenshot is worth a million words:<img src=\"http://i.stack.imgur.com/bqEAK.png\" alt=\"enter image description here\"></p>\n\n<p>I am inspecting an object with methods in the Console. Clicking on the \"Show function definition\" takes me to the place in the source code where the function is defined. Or I can just hover over the <code>function () {</code> word to see function body in a tooltip. You can easily inspect the whole prototype chain like this! CDT definitely rock!!!</p>\n\n<p>Hope you all find it helpful!</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>Another way to navigate to the location of a function definition would be to break in debugger somewhere you can access the function and enter the functions fully qualified name in the console. This will print the function definition in the console and give a link which on click opens the script location where the function is defined.</p>\n\n<p><img src=\"http://j.mp/1bfPfik\" alt=\"\"></p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>So Chrome's Developer Tools rock, but one thing it doesn't seem to have (that I could find) is a way to find a Javascript function's definition. This would be super handy for me because I'm working on a site that includes many external JS files. Sure grep solves this but in the browser would be much better. I mean, the browser has to know this, so why not expose it? What I expected was something like:</p>\n\n<ul>\n<li>Select 'Inspect Element' from page, which highlights the line in the Elements tab</li>\n<li>Right-click the line and select 'Go to function definition'</li>\n<li>Correct script is loaded in the Scripts tab and it jumps to the function definition</li>\n</ul>\n\n<p>First off, does this functionality exist and I'm just missing it? I've googled quite a bit and didn't turn up anything.</p>\n\n<p>And if it doesn't, I'm guessing this would come from WebKit, but couldn't find anything for <a href=\"http://code.google.com/p/chromium/issues/list?can=2&amp;q=javascript+function+definition&amp;colspec=ID+Pri+Mstone+ReleaseBlock+Area+Feature+Status+Owner+Summary&amp;cells=tiles\">Developer Tool feature requests</a> or <a href=\"https://bugs.webkit.org/buglist.cgi?quicksearch=javascript+function+definition\">WebKit's Bugzilla</a>. This would save me a good amount of time so any help is appreciated.</p>\n",
            "last_activity_date": 1405337675,
            "question_id": 9828876,
            "score": 89,
            "tags": [
                "javascript",
                "google-chrome-devtools"
            ],
            "title": "Find Javascript function definition in Chrome"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<ul>\n<li>Forgetting to declare variables with <code>var</code></li>\n<li>Misunderstanding (or not understanding) variable scope and closures</li>\n<li>Trying to solve nasty compatibility problems that framework teams have already solved</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Closure_%28computer_programming%29\" rel=\"nofollow\">Closures</a> - otherwise known as lambda functions - watch out for memory leaks. </li>\n<li>Browser differences, testing in both Internet Explorer and at least one other browser is a must. Functions that only work in some browsers, or work differently in different browsers should generally be avoided. If this is not possible browser specific branching is better done detecting browser features instead of browser versions. This increases the chance of the code working in future browsers and browsers that have not been tested.</li>\n<li>Getting too caught up in <a href=\"http://en.wikipedia.org/wiki/JQuery\" rel=\"nofollow\">jQuery</a> or <a href=\"http://en.wikipedia.org/wiki/Ajax_%28programming%29\" rel=\"nofollow\">Ajax</a> framework abstraction, and not knowing the underlining JavaScript well enough to know how to fix framework issues. </li>\n<li>Not knowing that JavaScript can be used to some degree to write OOP code. In fact it can give you a very basic OOP framework with objects. </li>\n<li>Case sensitivity (if you're a <a href=\"http://en.wikipedia.org/wiki/Visual_Basic_.NET\" rel=\"nofollow\">VB.NET</a> developer)</li>\n<li>IP protection - knowing that you can obfuscate JavaScript, but the source code you put out there will be very easy to steal and reverse engineer. This might not even be an issue depending on the complexity of the client-side application you're writing. </li>\n</ul>\n\n<p>I can't think of any more, but I hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/questions/1995113/strangest-language-feature/1998224#1998224\">Boolean type conversion</a>.</p>\n\n<pre><code>''        ==   '0'           //false\n0         ==   ''            //true\n0         ==   '0'           //true\nfalse     ==   'false'       //false\nfalse     ==   '0'           //true\nfalse     ==   undefined     //false\nfalse     ==   null          //false\nnull      ==   undefined     //true\n\" \\t\\r\\n\" ==   0             //true\n</code></pre>\n\n<p>As well as the difference between <code>null</code> and <code>undefined</code>. As listed in the table above, comparing <code>null</code> &amp; <code>undefined</code> with <code>==</code> returns true, but with <code>===</code> it returns false. This behavior makes sense once you understand that <code>undefined</code> is very different from a variable having a <code>null</code> value, and something holding the <em>value</em> <code>undefined</code> is different from something <em>being</em> undefined.</p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>Not a real coding pitfall, but more one of general thought:<br>\nDon't trust the things your JavaScript is doing, it might have been turned off or even <a href=\"https://en.wikipedia.org/wiki/Monkey_patch\" rel=\"nofollow\">monkey patched</a>. That means never rely on client-side validation. NEVER.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Don't accidentally leave a trailing comma in an object definition literal or IE will fail and you won't notice until much later because you never use IE for development and by then it could suck figuring out what happened.</p>\n\n<pre><code>var foo = { \n    bar: \"bar\", \n    baz: \"baz\", \n};\n</code></pre>\n\n<p>Note @JulianR's comment:\nIn arrays, IE doesn't fail directly by throwing some syntax error, but will fail when you try to use the array because the added comma makes IE think there's one more element in the array, with value <code>undefined</code>, than there actually is. So if you ever have an error because for some reason the last element in an array is <code>undefined</code>: it's a comma.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>The biggest difficulties I see for the beginner are understanding execution context (i.e., what \"this\" means whenever and wherever it is encountered) and the prototype system of inheritance.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<ul>\n<li>Using <code>window.onload = init();</code> instead of <code>window.onload = init;</code></li>\n<li>Boolean equivalences (as mentioned already)</li>\n<li>Closures within a loop.</li>\n<li>Using <code>for in</code> loop variant for iterating over Arrays.</li>\n<li>Not using <code>;</code> because it's \"optional\".</li>\n<li><code>this</code> (just... in general :))</li>\n<li>Not using <code>var</code></li>\n<li>Knowing that <code>obj.ref === obj[\"ref\"]</code></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><code>+</code> to concatenate strings:</p>\n\n<pre><code>var a = '2';\nvar b = 3;\n\na * b #  6\na - b # -1\na + b #  23\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>The whole concept of prototyping takes some time to fully understand but here are some common pitfalls:</p>\n\n<p>Forgetting to reset the constructor property after assigning a prototype object:</p>\n\n<pre><code>var Foo() = function ()\n{\n    this.batz = '...';\n};\nFoo.prototype = new Bar();\nFoo.prototype.constructor = Foo;\n</code></pre>\n\n<p>If you forget the least line, <code>new Foo()</code> will actually execute <code>Bar()</code>.</p>\n\n<p>Another pitfall with prototyping is iterating over objects/arrays without filtering out the members of the prototype:</p>\n\n<pre><code>for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n        //stuff...\n    }\n}\n</code></pre>\n\n<p>The extra condition will skip any members that are inherited from the prototype of <code>obj</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<ul>\n<li>Creating sites that don't work without JavaScript</li>\n<li>Using JavaScript for things that should be done server-side</li>\n<li>Using frameworks for simple tasks that don't require them</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Admittedly I've been guilty of some of these in the past, for your amusement it's the ones in bold:</p>\n\n<ul>\n<li>Not knowing incorrect (and the very few correct) uses of <code>eval</code><pre><code>eval(\"obj.\"+prop);</code></pre> </li>\n<li><strong>Using <code>with</code> statements</strong></li>\n<li>Using <code>parseInt(str, base)</code> without specifying the <code>base</code> argument.</li>\n<li>Using <code>this</code> in timer/callback functions.</li>\n<li>Using eval-like expressions in timers\n<pre><code>setTimeout(\"someFunc(myScopedVarWhoops)\");</pre></code></li>\n<li>Thinking jQuery is the name of the language you're coding</li>\n<li>Performing simple JavaScript tasks using a framework -- <code>$(1).plus(1)</code> anyone? ;-) </li>\n<li><strong>Using <code>continue</code> without incrementing or adjusting the conditional variable.</strong></li>\n<li><strong>Flooding the global namespace with variables</strong></li>\n<li><strong>Forgetting <code>var</code> in or before <code>for</code> statements. <code>for (i=0;i&lt;10;i++)</code></strong></li>\n<li>Using an obfuscator and just letting it run wild on your code</li>\n<li>Not really a pitfall, but pointless - <code>return condition ? true : false;</code> instead of <code>return condition;</code></li>\n<li><strong>Not commenting your code</strong>, applies to all languages really.</li>\n<li>Using <code>try...catch...finally</code> statements to catch errors instead of using <code>if</code> statements to check variables.</li>\n<li><strong>Foolishly attempting to stop \"view source\" by blocking right mouse clicks on your pages</strong> (I was young <em>*sobs*</em>!)</li>\n<li>Using <code>{ 0: \"Foo\", 1:\"Bar\", 2:\"Foobar\" }</code> instead of <code>[ \"Foo\", \"Bar\", \"Foobar\" ]</code></li>\n<li>Using <code>parseInt()</code> on user input\n<pre><code>parseInt(\"1,000\") // -> 1, wrong!\n+\"1,000\" // -> NaN, correct!</pre></code></li>\n</ul>\n\n<p>Some already mentioned:</p>\n\n<ul>\n<li><strong>Not using strict equality (<code>===</code>) operators whenever possible</strong></li>\n<li>Setting event handlers to the return value of a function instead of a reference to said function</li>\n<li>Not <code>;</code> terminating statements properly</li>\n<li><strong>Using <code>for...in</code> loops on arrays</strong></li>\n</ul>\n\n<p>Might think of some more after I've slept :-)</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<pre><code>typeof null is object\n\n\n&gt;&gt;&gt; var i = 1 + undefined; i;\nNaN\n&gt;&gt;&gt; var i = 1 + null; i;\n1\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>JavaScript strings are not byte strings, nor are they even Unicode strings.  They are UTF-16 strings.</p>\n\n<p>Example:</p>\n\n<pre><code>&gt; \"\u266b\".length\n1\n&gt; \"\ud800\udf08\".length\n2\n&gt; \"\ud800\udf08\".charAt(0)\n\"\\uD800\"\n&gt; \"\ud800\udf08\".charAt(1)\n\"\\uDF08\"\n&gt; \"\ud800\udf08\" === \"\\uD800\\uDF08\"\ntrue\n</code></pre>\n\n<p>If the above looks like garbage, blame your browser for having buggy Unicode handling (or possibly your font, for not having the 'OLD ITALIC LETTER THE' character).</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I'm planing on giving an introduction talk on JavaScript and in the preparation process I wondered what the top pitfalls are that rookies fall into.</p>\n\n<p>I know I've had a few gotchas before I fully understood closure, but much of the strange behavior in JavaScript is not something I think about any more...</p>\n\n<p>So, which pitfalls should you definitely point out to the rookies?</p>\n",
            "last_activity_date": 1401561005,
            "question_id": 2749952,
            "score": 28,
            "tags": [
                "javascript",
                "debugging"
            ],
            "title": "What are the top JavaScript pitfalls?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Supported methods were originally:</p>\n\n<ul>\n<li><code>console.log()</code></li>\n<li><code>console.error()</code></li>\n<li><code>console.warn()</code></li>\n<li><code>console.info()</code></li>\n</ul>\n\n<p>Newer versions of WebKit also add the following methods making the WebKit console API almost identical to <a href=\"http://getfirebug.com/wiki/index.php/Console_API\">Firebug's console API</a>:</p>\n\n<ul>\n<li><code>console.count()</code></li>\n<li><code>console.debug()</code></li>\n<li><code>console.profileEnd()</code></li>\n<li><code>console.trace()</code></li>\n<li><code>console.dir()</code></li>\n<li><code>console.dirxml()</code></li>\n<li><code>console.assert()</code></li>\n<li><code>console.time()</code></li>\n<li><code>console.profile()</code></li>\n<li><code>console.timeEnd()</code></li>\n<li><code>console.group()</code></li>\n<li><code>console.groupEnd()</code></li>\n</ul>\n\n<p>(New information based on the WebKit nightly build WebKit-SVN-r37126, at the time of writing these methods aren't available in Safari)</p>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>The console API is documented by Apple in the <a href=\"https://developer.apple.com/library/ios/documentation/AppleApplications/Conceptual/Safari_Developer_Guide/Console/Console.html\" rel=\"nofollow\">Console</a> section of the Safari Developer Guide.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Firebug's Console API documentation has moved here:</p>\n\n<p><a href=\"http://getfirebug.com/wiki/index.php/Console_API\" rel=\"nofollow\">http://getfirebug.com/wiki/index.php/Console_API</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I know this is an old and answered question, but you can also just open the console and type <code>console.__proto__</code>, and you'll get an expandable list of everything it supports.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Try this out:</p>\n\n<pre><code>console.dir(console)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The Console object appearantly has a built-in 'API', in the form of a 'private property' you can reveal by doing this in the Webkit javascript-console</p>\n\n<pre><code>&gt; for(o in console) console.dir(o)\n    _commandLineAPI\n    log\n    warn\n    \u2026\n</code></pre>\n\n<p>_commandLineAPI:</p>\n\n<pre><code>&gt; console.dir(_commandLineAPI)\n  CommandLineAPI\n    $0: \"\u2014\"\n    $1: \"\u2014\"\n    $2: \"\u2014\"\n    $3: \"\u2014\"\n    $4: \"\u2014\"\n    $$: bound: function () {\n    $x: bound: function (xpath, context) {\n    clear: bound: function () {\n    copy: bound: function (object) {\n    dir: bound: function () {\n    dirxml: bound: function () {\n    inspect: bound: function (object) {\n    keys: bound: function (object) {\n    monitorEvents: bound: function (object, types) {\n    profile: bound: function () {\n    profileEnd: bound: function () {\n    unmonitorEvents: bound: function (object, types) {\n    values: bound: function (object) {\n    __proto__: CommandLineAPI\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>WebKit/Safari supports the console object, which is similar to what Firebug does. But what exactly is supported? There is a <a href=\"http://getfirebug.com/wiki/index.php/Console_API\">console documentation for Firebug</a>, but where can I find the console documentation for Safari/WebKit?</p>\n",
            "last_activity_date": 1409321222,
            "question_id": 55633,
            "score": 62,
            "tags": [
                "javascript",
                "console",
                "safari"
            ],
            "title": "Where is the console API for WebKit/Safari?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>I am having the same problem, and I guess the way of doing this will be to remove the data-toggle attribute and have a custom handler for the links.</p>\n\n<p>Something in the lines of:</p>\n\n<pre><code>$(\"a[data-target=#myModal]\").click(function(ev) {\n    ev.preventDefault();\n    var target = $(this).attr(\"href\");\n\n    // load the url and show modal on success\n    $(\"#myModal .modal-body\").load(target, function() { \n         $(\"#myModal\").modal(\"show\"); \n    });\n});\n</code></pre>\n\n<p>Will try it later and post comments.</p>\n",
                    "is_accepted": true,
                    "score": 71
                },
                {
                    "body": "<p>You can force Modal to refresh the popup by adding this line at the end of the hide method of the Modal plugin (If you are using bootstrap-transition.js v2.1.1, it should be at line 836)</p>\n\n<pre><code>this.$element.removeData()\n</code></pre>\n\n<p>Or with an event listener</p>\n\n<pre><code>$('#modal').on('hidden', function() {\n    $(this).data('modal').$element.removeData();\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>A little more compressed than the above accepted example. Grabs the target from the data-target of the current clicked anything with data-toggle=modal on. This makes it so you don't have to know what the id of the target modal is, just reuse the same one! less code = win! You could also modify this to load title, labels and buttons for your modal should you want to. </p>\n\n<pre><code> $(\"[data-toggle=modal]\").click(function(ev) {\n    ev.preventDefault();\n    // load the url and show modal on success\n    $( $(this).attr('data-target') + \" .modal-body\").load($(this).attr(\"href\"), function() { \n         $($(this).attr('data-target')).modal(\"show\"); \n    });\n});\n</code></pre>\n\n<p>Example Links:</p>\n\n<pre><code>&lt;a data-toggle=\"modal\" href=\"/page/api?package=herp\" data-target=\"#modal\"&gt;click me&lt;/a&gt;\n&lt;a data-toggle=\"modal\" href=\"/page/api?package=derp\" data-target=\"#modal\"&gt;click me2&lt;/a&gt;\n&lt;a data-toggle=\"modal\" href=\"/page/api?package=merp\" data-target=\"#modal\"&gt;click me3&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I also stucked on this problem then i see the ids of the modal are same you need different ids of modals if you want multiple modals I used dynamic id here is my code in haml</p>\n\n<pre><code>    .modal.hide.fade{\"id\"=&gt; discount.id,\"aria-hidden\" =&gt; \"true\", \"aria-labelledby\" =&gt; \"myModalLabel\", :role =&gt; \"dialog\", :tabindex =&gt; \"-1\"}\n</code></pre>\n\n<p>you can do this</p>\n\n<pre><code>    &lt;div id=\"&lt;%= some.id %&gt;\" class=\"modal hide fade in\"&gt;\n      &lt;div class=\"modal-header\"&gt;\n        &lt;a class=\"close\" data-dismiss=\"modal\"&gt;\u00d7&lt;/a&gt;\n        &lt;h3&gt;Header&lt;/h3&gt;\n     &lt;/div&gt;\n     &lt;div class=\"modal-body\"&gt;&lt;/div&gt;\n     &lt;div class=\"modal-footer\"&gt;\n      &lt;input type=\"submit\" class=\"btn btn-success\" value=\"Save\"/&gt;\n    &lt;/div&gt;\n &lt;/div&gt;\n</code></pre>\n\n<p>and your links to modal will be</p>\n\n<pre><code>    &lt;a data-toggle=\"modal\" data-target=\"#\" href='\"#\"+&lt;%= some.id %&gt;' &gt;Open modal&lt;/a&gt;\n    &lt;a data-toggle=\"modal\" data-target=\"#myModal\" href='\"#\"+&lt;%= some.id %&gt;' &gt;Open modal&lt;/a&gt;\n    &lt;a data-toggle=\"modal\" data-target=\"#myModal\" href='\"#\"+&lt;%= some.id %&gt;' &gt;Open modal&lt;/a&gt;\n</code></pre>\n\n<p>i hope it will work</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To unload the data when the modal is closed you can use this with Bootstrap 2.x:</p>\n\n<pre><code>$('#myModal').on('hidden', function() {\n    $(this).removeData('modal');\n});\n</code></pre>\n\n<p>And in Bootstrap 3 (<a href=\"https://github.com/twbs/bootstrap/pull/7935#issuecomment-18513516\">https://github.com/twbs/bootstrap/pull/7935#issuecomment-18513516</a>):</p>\n\n<pre><code>$(document.body).on('hidden.bs.modal', function () {\n    $('#myModal').removeData('bs.modal')\n});\n\n//Edit SL: more universal\n$(document).on('hidden.bs.modal', function (e) {\n    $(e.target).removeData('bs.modal');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>It will works for all version of twitterbootstrap</p>\n\n<p>Javascript code :</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n/* &lt;![CDATA[ */\n(function(){\n   var bsModal = null;\n   $(\"[data-toggle=modal]\").click(function(e) {\n      e.preventDefault();\n      var trgId = $(this).attr('data-target'); \n      if ( bsModal == null ) \n       bsModal = $(trgId).modal;\n      $.fn.bsModal = bsModal;\n      $(trgId + \" .modal-body\").load($(this).attr(\"href\"));\n      $(trgId).bsModal('show');\n    });\n })();\n/* &lt;![CDATA[ */\n&lt;/script&gt;\n</code></pre>\n\n<p>links to modal are</p>\n\n<pre><code>&lt;a data-toggle=\"modal\" data-target=\"#myModal\" href=\"edit1.aspx\"&gt;Open modal 1&lt;/a&gt;\n&lt;a data-toggle=\"modal\" data-target=\"#myModal\" href=\"edit2.aspx\"&gt;Open modal 2&lt;/a&gt;\n&lt;a data-toggle=\"modal\" data-target=\"#myModal\" href=\"edit3.aspx\"&gt;Open modal 3&lt;/a&gt;\n</code></pre>\n\n<p>pop up modal </p>\n\n<pre><code>&lt;div id=\"myModal\" class=\"modal hide fade in\"&gt;\n&lt;div class=\"modal-header\"&gt;\n    &lt;a class=\"close\" data-dismiss=\"modal\"&gt;\u00d7&lt;/a&gt;\n    &lt;h3&gt;Header&lt;/h3&gt;\n&lt;/div&gt;\n&lt;div class=\"modal-body\"&gt;&lt;/div&gt;\n&lt;div class=\"modal-footer\"&gt;\n    &lt;input type=\"submit\" class=\"btn btn-success\" value=\"Save\"/&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I made a small change to <a href=\"http://stackoverflow.com/questions/12449890/reload-content-in-modal-twitter-bootstrap#answer-18459248\">Softlion</a> answer, so all my modals won't refresh on hide.\nThe modals with data-refresh='true' attribute are only refreshed, others work as usual.\nHere is the modified version.</p>\n\n<pre><code>$(document).on('hidden.bs.modal', function (e) {\n    if ($(e.target).attr('data-refresh') == 'true') {\n        // Remove modal data\n        $(e.target).removeData('bs.modal');\n        // Empty the HTML of modal\n        $(e.target).html('');\n    }\n});\n</code></pre>\n\n<p>Now use the attribute as shown below,</p>\n\n<pre><code>&lt;div class=\"modal fade\" data-refresh=\"true\" id=\"#modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"#modal-label\" aria-hidden=\"true\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>This will make sure only the modals with data-refresh='true' are refreshed. And i'm also resetting the modal html because the old values are shown until new ones get loaded, making html empty fixes that one.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>With Bootstrap 3 you can use 'hidden.bs.modal' event handler to delete any modal-related data, forcing the popup to reload next time:</p>\n\n<pre><code>$('#modal').on('hidden.bs.modal', function() {\n    $(this).removeData('bs.modal');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I wanted the AJAX loaded content removed when the modal closed, so I adjusted the line suggested by others (coffeescript syntax):</p>\n\n<pre><code>$('#my-modal').on 'hidden.bs.modal', (event) -&gt;\n  $(this).removeData('bs.modal').children().remove()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Based on other answers (thanks everyone).</p>\n\n<p>I needed to adjust the code to work, as simply calling .html wiped the whole content out and the modal would not load with any content after i did it.  So i simply looked for the content area of the modal and applied the resetting of the HTML there.</p>\n\n<pre><code>    $(document).on('hidden.bs.modal', function (e) {\n        var target = $(e.target);\n        target.removeData('bs.modal')\n              .find(\".modal-content\").html('');\n    });\n</code></pre>\n\n<p>Still may go with the accepted answer as i am getting some ugly jump just before the modal loads as the control is with Bootstrap.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here is a coffeescript version that worked for me.</p>\n\n<pre><code>$(document).on 'hidden.bs.modal', (e) -&gt;\n  target = $(e.target)\n  target.removeData('bs.modal').find(\".modal-content\").html('')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using twitter bootstrap's modal popup. </p>\n\n<pre><code>&lt;div id=\"myModal\" class=\"modal hide fade in\"&gt;\n    &lt;div class=\"modal-header\"&gt;\n        &lt;a class=\"close\" data-dismiss=\"modal\"&gt;\u00d7&lt;/a&gt;\n        &lt;h3&gt;Header&lt;/h3&gt;\n    &lt;/div&gt;\n    &lt;div class=\"modal-body\"&gt;&lt;/div&gt;\n    &lt;div class=\"modal-footer\"&gt;\n        &lt;input type=\"submit\" class=\"btn btn-success\" value=\"Save\"/&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I can load content using ajax with this a-element:</p>\n\n<pre><code>&lt;a data-toggle=\"modal\" data-target=\"#myModal\" href=\"edit.aspx\"&gt;Open modal&lt;/a&gt;\n</code></pre>\n\n<p>Now I have to open the same modal but using a different url. I'm using this modal to edit an entity from my database. So when I click edit on an entity I need to load the modal with an ID. </p>\n\n<pre><code>&lt;a data-toggle=\"modal\" data-target=\"#myModal\" href=\"edit.aspx?id=1\"&gt;Open modal&lt;/a&gt;\n&lt;a data-toggle=\"modal\" data-target=\"#myModal\" href=\"edit.aspx?id=2\"&gt;Open modal&lt;/a&gt;\n&lt;a data-toggle=\"modal\" data-target=\"#myModal\" href=\"edit.aspx?id=3\"&gt;Open modal&lt;/a&gt;\n</code></pre>\n\n<p>If I click on link number 1, it works fine. But if I then click on link number 2 the modal content is already loaded and therefor it will show the content from link number 1.  </p>\n\n<p>How can I refresh or reset the ajax loaded content in a twitter bootstrap modal popup?</p>\n",
            "last_activity_date": 1412173589,
            "question_id": 12449890,
            "score": 61,
            "tags": [
                "javascript",
                "twitter-bootstrap"
            ],
            "title": "Reload content in modal (twitter bootstrap)"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You just need to enable the tooltip:</p>\n\n<pre><code>$('some id or class that you add to the above a tag').popover({\n    trigger: \"hover\" \n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You have a syntax error in your script and, as noted by xXPhenom22Xx, you must instantiate the tooltip.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    $(document).ready(function() {\n\n        $('.btn-danger').tooltip();\n\n    }); //END $(document).ready()\n\n&lt;/script&gt;\n</code></pre>\n\n<p>Note that I used your class \"btn-danger\". You can create a different class, or use an <code>id=\"someidthatimakeup\"</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I use this on all my pages to enable tooltip</p>\n\n<pre><code>$(function () { $(\"[data-toggle='tooltip']\").tooltip(); });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 168
                },
                {
                    "body": "<p>Turns out that <a href=\"http://stackoverflow.com/a/18411591/463065\">Evan Larsen has the best answer</a>. Please upvote his answer (and/or select it as the correct answer) - it's brilliant.</p>\n\n<p><a href=\"http://jsfiddle.net/LhZpX/\">Working jsFiddle here</a></p>\n\n<p>Using Evan's trick, you can instantiate all tooltips with one line of code:</p>\n\n<pre><code>$('[data-toggle=\"tooltip\"]').tooltip({'placement': 'top'});\n</code></pre>\n\n<p>You will see that all tooltips in your long paragraph have working tooltips with just that one line.</p>\n\n<p>In the jsFiddle example (link above), I also added a situation where one tooltip (by the Sign-In button) is ON by default. Also, the tooltip code is ADDED to the button in jQuery, not in the HTML markup.</p>\n\n<hr>\n\n<p>Popovers <em>do</em> work the same as the tooltips:</p>\n\n<pre><code>$('[data-toggle=\"popover\"]').popover({trigger: 'hover','placement': 'top'});\n</code></pre>\n\n<hr>\n\n<p>And there you have it! Success at last.</p>\n\n<p>One of the biggest problems in figuring this stuff out was making bootstrap work with jsFiddle... Here's what you must do:</p>\n\n<ol>\n<li>Get reference for Twitter Bootstrap CDN from here: <a href=\"http://www.bootstrapcdn.com/\">http://www.bootstrapcdn.com/</a><br></li>\n<li>Paste each link into notepad and strip out ALL except the URL. For example:<br>\n<strong>//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css</strong><br></li>\n<li>In jsFiddle, on left side, open the External Resources accordion dropdown</li>\n<li>Paste in each URL, pressing plus sign after each paste</li>\n<li>Now, open the \"Frameworks &amp; Extensions\" accordion dropdown, and select jQuery 1.9.1 (or whichever...)</li>\n</ol>\n\n<p>NOW you are ready to go.</p>\n",
                    "is_accepted": true,
                    "score": 106
                },
                {
                    "body": "<h1>Working with BOOTSTRAP 3 : Short and Simple</h1>\n\n<p>Check - <a href=\"http://jsfiddle.net/CtTSV/1/\">JS Fiddle</a></p>\n\n<p>HTML</p>\n\n<pre><code>&lt;div id=\"myDiv\"&gt;\n&lt;button class=\"btn btn-large btn-danger\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Tooltip on top\"&gt;Tooltip on top&lt;/button&gt;    \n&lt;/div&gt;\n</code></pre>\n\n<p>Javascript</p>\n\n<pre><code>$(function () { \n    $(\"[data-toggle='tooltip']\").tooltip(); \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>I had to do it on DOM ready</p>\n\n<pre><code>$( document ).ready(function () { // this has to be done after the document has been rendered\n    $(\"[data-toggle='tooltip']\").tooltip({html: true}); // enable bootstrap 3 tooltips\n    $('[data-toggle=\"popover\"]').popover({\n        trigger: 'hover',\n        'placement': 'top',\n        'show': true\n    });\n});\n</code></pre>\n\n<p>And change my load orders to be:</p>\n\n<ul>\n<li>jQuery</li>\n<li>jQuery UI</li>\n<li>Bootstap</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For some reason the only way I was able to get my code to work is by switching couple of things. If nothing worked for you so far, please give a whirl to this:</p>\n\n<pre><code>$('body').popover({ \n    selector: '[data-toggle=\"popover\"]', \n    trigger: 'hover',\n    placement: 'right'\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am new to Bootstrap and I'm having trouble getting the popover and tooltip features to work. I had no problem with the drop downs and models but I seem to be missing something for the popover and tooltips. </p>\n\n<p>I am getting tooltips to show up but they are not styled and located like the bootstrap examples. And the popover is not working at all.</p>\n\n<p>Please take a look and let me know what I am missing.</p>\n\n<pre><code>       &lt;!DOCTYPE html&gt;\n    &lt;html&gt;\n      &lt;head&gt;\n        &lt;title&gt;Bootstrap 101 Template&lt;/title&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n        &lt;!-- Bootstrap --&gt;\n        &lt;link href=\"css/bootstrap.min.css\" rel=\"stylesheet\" media=\"screen\"&gt;\n        &lt;link href=\"http://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/css/bootstrap-combined.min.css\" rel=\"stylesheet\" media=\"screen\"&gt;\n        &lt;link href=\"css/font-awesome.min.css\" rel=\"stylesheet\" media=\"screen\"&gt;\n        &lt;link href=\"css/index.css\" rel=\"stylesheet\" media=\"screen\"&gt;\n        &lt;!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries --&gt;\n        &lt;!--[if lt IE 9]&gt;\n          &lt;script src=\"../../assets/js/html5shiv.js\"&gt;&lt;/script&gt;\n          &lt;script src=\"../../assets/js/respond.min.js\"&gt;&lt;/script&gt;\n        &lt;![endif]--&gt;\n      &lt;/head&gt;\n      &lt;body&gt;\n       &lt;p id=\"tool\"class=\"muted\" style=\"margin-bottom: 0;\"&gt;\n        Tight pants next level keffiyeh\n        &lt;a href=\"#\" data-toggle=\"tooltip\" title=\"Default tooltip\"&gt;you probably&lt;/a&gt; haven't heard of them. Photo booth beard raw denim letterpress vegan messenger bag stumptown. Farm-to-table seitan, mcsweeney's fixie sustainable quinoa 8-bit american apparel &lt;a href=\"#\" data-toggle=\"tooltip\" title=\"Another tooltip\"&gt;have a&lt;/a&gt; terry richardson vinyl chambray. Beard stumptown, cardigans banh mi lomo thundercats. Tofu biodiesel williamsburg marfa, four loko mcsweeney's cleanse vegan chambray. A really ironic artisan &lt;a href=\"#\" data-toggle=\"tooltip\" title=\"Another one here too\"&gt;whatever keytar&lt;/a&gt;, scenester farm-to-table banksy Austin &lt;a href=\"#\" data-toggle=\"tooltip\" title=\"The last tip!\"&gt;twitter handle&lt;/a&gt; freegan cred raw denim single-origin coffee viral.&lt;/p&gt;\n       &lt;h3&gt;Live demo&lt;/h3&gt;\n        &lt;div style=\"padding-bottom: 24px;\"&gt;\n          &lt;a id=\"pop\" href=\"#\" class=\"btn btn-lg btn-danger\" data-toggle=\"popover\" title=\"A Title\" data-content=\"And here's some amazing content. It's very engaging. right?\"&gt;Click to toggle popover&lt;/a&gt;\n        &lt;/div&gt;\n\n        &lt;!-- jQuery (necessary for Bootstrap's JavaScript plugins) --&gt;\n        &lt;script src=\"http://code.jquery.com/jquery.js\"&gt;&lt;/script&gt;\n        &lt;!-- Include all compiled plugins (below), or include individual files as needed --&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            $(document).ready(function() {\n\n                $('.tool').tooltip();\n                $('.btn').popover();\n\n            }); //END $(document).ready()\n\n        &lt;/script&gt;\n\n        &lt;script src=\"http://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/css/bootstrap.min.css\"&gt;&lt;/script&gt;\n\n      &lt;/body&gt;\n\n    &lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1410207690,
            "question_id": 18410922,
            "score": 51,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "twitter-bootstrap"
            ],
            "title": "Bootstrap 3.0 Popovers and tooltips"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>IMHO Chosen is \"maintained\" but not \"actively maintained\". 341 issues and 51 pull requests for Chosen. Select2 has 128 issues and 25 pull requests. I think the pattern for these is basically</p>\n\n<ul>\n<li>pick whichever one is superficially more appealing to you</li>\n<li>use it in an app or two</li>\n<li>bump up against customization problems or limitations</li>\n<li>maybe try to work with the community via issues &amp; pull requests</li>\n<li>eventually get fed up and just build your own using what you learned in this process</li>\n</ul>\n\n<p>Whichever one you pick, if your use case is exactly in their sweet spot, either one will work. If not, you'll eventually have to write your own or heavily customize these. In either case, the choice of which one specifically isn't all that important. I guess I'll side with @Andy Ray and @paul here that Select2 is probably the better initial choice.</p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>As of Select2 3.3.1, below are what's documented in its README.md</p>\n\n<blockquote>\n  <p>What Does Select2 Support That Chosen Does Not?</p>\n  \n  <ul>\n  <li>Working with large datasets: Chosen requires the entire dataset to be loaded as <code>option</code> tags in the DOM, which limits it to working with\n  small-ish datasets. Select2 uses a function to find results\n  on-the-fly, which allows it to partially load results.</li>\n  <li>Paging of results: Since Select2 works with large datasets and only loads a small amount of matching results at a time it has to support\n  paging. Select2 will call the search function when the user scrolls to\n  the bottom of currently loaded result set allowing for the 'infinite\n  scrolling' of results.</li>\n  <li>Custom markup for results: Chosen only supports rendering text results because that is the only markup supported by <code>option</code> tags.\n  Select2 provides an extension point which can be used to produce any\n  kind of markup to represent results.</li>\n  <li>Ability to add results on the fly: Select2 provides the ability to add results from the search term entered by the user, which allows it\n  to be used for tagging.</li>\n  </ul>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 63
                },
                {
                    "body": "<p>One feature that works in Select2 but doesn't work in Chosen, is <code>select</code> inside element that has <code>overflow: hidden</code> or <code>overflow: auto</code>. </p>\n\n<p><img src=\"http://i.stack.imgur.com/9yNwR.png\" alt=\"enter image description here\"></p>\n\n<p>Corresponding issue for Chosen: <a href=\"https://github.com/harvesthq/chosen/issues/86\">https://github.com/harvesthq/chosen/issues/86</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>First, Let me tell you that Chosen and Select2 are two great plugin and this is my personal experience about Chosen. All what they are saying is true concerning Chosen.</p>\n\n<p>The <a href=\"https://github.com/harvesthq/chosen/issues/86\">issue</a> pointed by P\u0113teris Caune with the <code>select</code> is 2 years old and still there is no official fix. \nThere is simply no good documentation for the API. It has been pointed out (watch issue 671) many time but there is still nothing.\nIt took them almost 2 years to solve this <a href=\"https://github.com/harvesthq/chosen/issues/92\">issue</a> where chosen would basically not work if you hid the div with <code>overflow:hidden</code> before showing it (and you have to use a <code>witdh:X%</code> option that you would basically never know if you don't look for the issue).</p>\n\n<p>I'd say that the main problem is the fix speed like said DelvarWorld in issue 92: </p>\n\n<blockquote>\n  <p>My pull request fixes this issue, but like my other one and many of\n  the ones for chosen they are being ignored. This project has too many\n  contributors with too small of a code base.</p>\n</blockquote>\n\n<p>I first picked Chosen for its MIT licence but I had all theses issues (dropdown cut, not finding the API, looking for hours for the overflow hidden), so I decided to switch to select2 because it has a better documentation, no dropdown cut bug and faster fixes.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Some differences I've found working with these two plugins:</p>\n\n<ul>\n<li><p>With select2 you can search at any location in the option. For e.g. if you have an option called ABCDEFG and you type in CDE you will get that option in the search results but with chosen you have to type AB.. and so on to get the results.</p></li>\n<li><p>I've found that with larger datasets, chosen seems to be faster than select2, especially in IE.</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Another difference worth mentioning is that <code>Chosen</code> is developed in <code>Sass</code> and <code>CoffeeScript</code> whereas <code>Select2</code> is plain <code>CSS</code> and <code>JS</code>. It is my personal option that <code>Sass</code> and <code>CoffeeScript</code> are unneeded layers of complexity.</p>\n\n<p>After trying both I have decided to use neither - trying to get <code>Select2</code> create item functionality turns out to be a very hairy affair as you simply can not do it when attached to <code>&lt;select&gt;</code> elements - it just didn't feel well thought out the hoops I would have to jump through.</p>\n\n<p>I have settled on using <a href=\"http://brianreavis.github.io/selectize.js/\">selectize.js</a> which just adds the new <code>&lt;option&gt;...&lt;/option&gt;</code> element to the form's DOM - and that is sane. It does also use <code>LESS</code> - but I would bypass that and just tailor the compiled <code>CSS</code> directly in your project.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Select2 supports mobile, whereas Chosen <a href=\"https://github.com/harvesthq/chosen/pull/1388\" rel=\"nofollow\">specifically disables itself</a> on iPods, iPhones and mobile Android. If you want to use \"extended\" select boxes on mobile, this makes your choice easy.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>My experience with Select2 was great on desktop, but on touch mobile devices greatly varied, with some quirks always present. For example, on xperia st15i with ics and stock browser dropdown was always closing itself because of keyboard stealing focus. Only way to bring it open again is to touch the menu dozens of times, hold finger for a second and other voodoo magic. Or to start typing while the dropdown list is closed, and how many users will figure this out?</p>\n\n<p>Selectize.js seems to be much smoother than Select2, but it also has issues on its own on mobile for e.g. when the value is selected or inputed it moves the page all the way to the left for some reason. Also, on older Android 2.x devices which do not support overflow, it is impossible to select past the few top options, since the keyboard does not pop-up. :(</p>\n\n<p>Still have to test Chosen and it might be not such a bad idea to be disabled for mobile devices after all, but in the end good old dropdown works always and everywhere.</p>\n\n<p>Update: now I have also tested Chosen as well, and it is better in one area: it does not work on mobile by default (great!), but it has filtering words issues. For example, does not search in the middle of the words, and if you use <strong>&amp;nbsp</strong> hack for aligments, it will also ignore complete options. Back to drawing board.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h3>chosen.js vs select2.js</h3>\n\n<ul>\n<li>MIT license for both</li>\n<li>Dependencies:\n<ul>\n<li>Select2: jQuery</li>\n<li>Chosen: tbc</li>\n</ul></li>\n<li>Desktop browser support:\n<ul>\n<li>Select2: IE8+</li>\n<li>Chosen: IE8+</li>\n</ul></li>\n<li>Device support:\n<ul>\n<li>Select2: unclear</li>\n<li>Chosen: disabled on iPhone, iPod Touch, &amp; Android mobile devices</li>\n</ul></li>\n<li>Weight (minified):\n<ul>\n<li>Select2: 57KB</li>\n<li>Chosen: 27KB</li>\n</ul></li>\n<li>Usage: Select2 supports more \"fancy\" UI (see 'templates')</li>\n<li>Both code repos are available on Github\n<ul>\n<li>Select2: contributions: very active</li>\n<li>Chosen: contributions: around 3x less than Select2</li>\n</ul></li>\n</ul>\n\n<p><img src=\"http://i.stack.imgur.com/1wWgE.png\" alt=\"select2.js contributions\">\n<img src=\"http://i.stack.imgur.com/UVqWw.png\" alt=\"chosen.js contributions\"></p>\n\n<p>ps. I will try to update this answer when I find out more about the missing points</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p><a href=\"http://harvesthq.github.com/chosen/\">Chosen</a> and <a href=\"http://ivaynberg.github.com/select2/\">Select2</a> are the two more popular libraries for extending selectboxes.</p>\n\n<p>Both seem to be actively maintained, Chosen is older and supports both jQuery and Prototype.</p>\n\n<p>Select2 is jQuery only, its documentation says Select2 is inspired by Chosen, but doesn't detail any improvements made (if any) or other reasons for the rewrite.</p>\n\n<p>Two libraries have pretty much same feature set, the only comparison I've found is a somewhat inconclusive jsperf test page.</p>\n\n<p>Does any of these libraries have any advantages over the other?</p>\n",
            "last_activity_date": 1422285451,
            "question_id": 13575531,
            "score": 105,
            "tags": [
                "javascript",
                "jquery-chosen",
                "jquery-select2"
            ],
            "title": "What are the differences between Chosen and Select2?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>There currently doesn't seem to be a way to interact with the HTTP server or do anything related to HTTP.</p>\n\n<p>The only things you can do is talk to server over the RPC methods exposed by Meteor.methods or talk to mongoDB directly over the mongoDB API exposed.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>You could try uploading directly to amazon S3, doing some tricks with js uploaders and stuff.\n<a href=\"http://aws.amazon.com/articles/1434\" rel=\"nofollow\">http://aws.amazon.com/articles/1434</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I used <a href=\"http://filepicker.io\">http://filepicker.io</a>. They'll upload the file, store it into your S3, and return you a URL where the file is. Then I just plop the url into a DB.</p>\n\n<ol>\n<li><p>Wget the filepicker script into your client folder.</p>\n\n<pre><code>wget https://api.filepicker.io/v0/filepicker.js\n</code></pre></li>\n<li><p>Insert a filepicker input tag</p>\n\n<pre><code>&lt;input type=\"filepicker\" id=\"attachment\"&gt;\n</code></pre></li>\n<li><p>In the startup, initialize it:</p>\n\n<pre><code>Meteor.startup( function() {\n    filepicker.setKey(\"YOUR FILEPICKER API KEY\");\n    filepicker.constructWidget(document.getElementById('attachment'));\n});\n</code></pre></li>\n<li><p>Attach a event handler</p>\n\n<pre><code>Templates.template.events({\n    'change #attachment': function(evt){\n        console.log(evt.files);\n    }\n});\n</code></pre></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>I've just come up with <a href=\"https://gist.github.com/3922137\">an implementation of file uploads</a> using Meteor.methods and HTML5 File's API. Let me know what you think, Dar\u00edo</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>For images, I use a method similar to <a href=\"http://stackoverflow.com/a/12985583/166101\">Dario's</a> except I don't write the file to disk. I store the data directly in the database as a field on the model. This works for me because I only need to support browsers that support the <a href=\"http://www.w3.org/TR/FileAPI/\">HTML5 File API</a>. And I only need simple image support.</p>\n\n<pre><code>Template.myForm.events({\n  'submit form': function(e, template) {\n    e.preventDefault();\n    var file = template.find('input type=[\"file\"]').files[0];\n    var reader = new FileReader();\n    reader.onload = function(e) {\n      // Add it to your model\n      model.update(id, { $set: { src: e.target.result }});\n\n      // Update an image on the page with the data\n      $(template.find('img')).attr('src', e.target.result);\n    }\n    reader.readAsDataURL(file);\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>there is an atmosphere package called <a href=\"https://github.com/tmeasday/meteor-router\">router</a> which allows just that. </p>\n\n<p>actually, the best way to handle file uploads is now <a href=\"https://github.com/raix/Meteor-CollectionFS\">collectionFS</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can see on the <a href=\"https://trello.com/b/hjBDflxp/meteor-roadmap\" rel=\"nofollow\">meteor roadmap</a> that the feature \"File upload pattern\" is scheduled for \"After 1.0\". So we have to wait to see an official way.</p>\n\n<p>For now, one of the best ways is to use <a href=\"https://github.com/raix/Meteor-CollectionFS\" rel=\"nofollow\">\"collectionFS\"</a> (which is 0.3.x dev preview at the time of writting).</p>\n\n<p>Or <a href=\"https://www.inkfilepicker.com/\" rel=\"nofollow\">inkfilepicker (ex. filepicker.io)</a> as suggested here. It is easy enough to use, although this obviously requires and Internet connection from the user side.</p>\n\n<p>If it just to play around, you could as well take advantage of the html5 feature. Something like <a href=\"http://georgeinenglish.com/upload-files-meteor-js/\" rel=\"nofollow\">that</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>you can use the meteor package meteor-file.\nit handles the fileupload , check github with project with that name )</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you do not require significantly large files or maybe only storing the files for a short period of time then this simple solution works very well.</p>\n\n<p>In your html...</p>\n\n<pre><code>&lt;input id=\"files\" type=\"file\" /&gt;\n</code></pre>\n\n<p>In your template event map...</p>\n\n<pre><code>Template.template.events({\n  'submit': function(event, template){\n    event.preventDefault();\n    if (window.File &amp;&amp; window.FileReader &amp;&amp; window.FileList &amp;&amp; window.Blob) {\n      _.each(template.find('#files').files, function(file) {\n        if(file.size &gt; 1){\n          var reader = new FileReader();\n          reader.onload = function(e) {\n            Collection.insert({\n              name: file.name,\n              type: file.type,\n              dataUrl: reader.result\n            });\n          }\n          reader.readAsDataURL(file);\n        }\n      });\n    }\n  }\n});\n</code></pre>\n\n<p>Subscribe to the Collection and in a template render a link...</p>\n\n<pre><code>&lt;a href=\"{{dataUrl}}\" target=\"_blank\"&gt;{{name}}&lt;/a&gt;\n</code></pre>\n\n<p>While this might not be the most robust or elegant solution for large files or a file intensive application it works very well for all kind of file formats if you want to implement simple upload and download/rendering of the files.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is the best solution for this time. It uses <a href=\"https://github.com/CollectionFS/Meteor-CollectionFS\" rel=\"nofollow\">collectionFS</a>.</p>\n\n<pre><code>meteor add cfs:standard-packages\nmeteor add cfs:filesystem\n</code></pre>\n\n<p>Client:</p>\n\n<pre><code>Template.yourTemplate.events({\n    'change .your-upload-class': function(event, template) {\n        FS.Utility.eachFile(event, function(file) {\n            var yourFile = new FS.File(file);\n            yourFile.creatorId = Meteor.userId(); // add custom data\n            YourFileCollection.insert(yourFile, function (err, fileObj) {\n                if (!err) {\n                   // do callback stuff\n                }\n            });\n        });\n    }\n});\n</code></pre>\n\n<p>Server:</p>\n\n<pre><code>YourFileCollection = new FS.Collection(\"yourFileCollection\", {\n    stores: [new FS.Store.FileSystem(\"yourFileCollection\", {path: \"~/meteor_uploads\"})]\n});\nYourFileCollection.allow({\n    insert: function (userId, doc) {\n        return !!userId;\n    },\n    update: function (userId, doc) {\n        return doc.creatorId == userId\n    },\n    download: function (userId, doc) {\n        return doc.creatorId == userId\n    }\n});\n</code></pre>\n\n<p>Template:</p>\n\n<pre><code>&lt;template name=\"yourTemplate\"&gt;\n    &lt;input class=\"your-upload-class\" type=\"file\"&gt;\n&lt;/template&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>To accomplish the same action as the most upvoted answer without the cost of filepicker.io, follow the instructions for this package: <a href=\"https://github.com/Lepozepo/S3\" rel=\"nofollow\">https://github.com/Lepozepo/S3</a></p>\n\n<p>Then to obtain the link, use code similar to below. Finally, plug the url returned by secureLink into the DB. </p>\n\n<blockquote>\n  <p>Template.YourTemplate.events({</p>\n\n<pre><code>\"click button.upload\": function(){\n    var files = $(\"input.file_bag\")[0].files;\n    S3.upload(files,\"/subfolder\",function(e,r){\n        console.log(r);\n\n        Session.set('secureLink', r.secure_url);\n    });\n},\n</code></pre>\n</blockquote>\n\n<pre><code>Template.YourTemplate.helpers({\n    \"files\": function(){\n         return S3.collection.find();\n     },\n     \"secureLink\": function() {\n         return Session.get('secureLink');\n     }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>here is yet another solution:</p>\n\n<p><a href=\"https://doctorllama.wordpress.com/2014/11/06/meteor-upload-package-with-jquery-file-upload/\" rel=\"nofollow\">https://doctorllama.wordpress.com/2014/11/06/meteor-upload-package-with-jquery-file-upload/</a></p>\n\n<p>This one is using Blueimp's upload solution that supports chunked uploads, progress bars and more.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is a new package: <a href=\"https://github.com/CulturalMe/meteor-slingshot/\" rel=\"nofollow\">edgee:slingshot</a>. It does not upload the files to your meteor server, but it is better that way as it allows the meteor server to focus on its primary objective of serving the meteor app instead of handling costly file transfers.</p>\n\n<p>Instead it uploads files to cloud storage services. Currently it supports AWS S3 and Google Cloud Files, but it will also support Rackspace Cloud Files and perhaps Cloudinary in the future.</p>\n\n<p>Your meteor server merely acts as as a coordinator.</p>\n\n<p><img src=\"http://i.stack.imgur.com/N51Ty.png\" alt=\"Direct VS Indirect uploads\"></p>\n\n<p>It is also a very versatile and light-weight package.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>What would be the canonical way to handle a file upload with Meteor?</p>\n",
            "last_activity_date": 1421105718,
            "question_id": 10099202,
            "score": 47,
            "tags": [
                "javascript",
                "file-upload",
                "meteor"
            ],
            "title": "How would one handle a file upload with Meteor?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You'll need to create a plug-in. The documentation for CKEditor is very poor for this, especially since I believe it has changed significantly since FCKEditor. I would suggest copying an existing plug-in and studying it. A quick google for \"CKEditor plugin\" also found <a href=\"http://blog.tommed.co.uk/2009/09/07/how-to-create-a-ckeditor-v3-plugin\" rel=\"nofollow\">this blog post</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I am in the process of developing a number of custom Plugins for CKEditor and here's my survival pack of bookmarks:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/1139766/ckeditor-custom-plugins-button\">A StackOverflow post linking to and talking about a plugins tutorial that got me started</a> (Tim Down already mentioned this)</li>\n<li>A <a href=\"http://code.google.com/p/lajox/\">number of ready-made plugins for FCK and CKEditor</a> that may improve one's understanding of the system</li>\n<li>The Blog of <a href=\"http://alfonsoml.blogspot.com/\">AlfonsoML</a>, one of the developers, lots of valuable stuff there, e.g. <a href=\"http://alfonsoml.blogspot.com/2009/12/plugin-localization-in-ckeditor-vs.html\">Plugin localization in CKEditor</a></li>\n<li><a href=\"http://cksource.com/forums/viewtopic.php?f=11&amp;t=16040\">Interaction between dialog buttons and a IFrame dialog</a>, with input from Garry Yao, one of the developers </li>\n<li>The <a href=\"http://cksource.com/forums/\">forums</a> are not as bad as they look, there are some hidden gems there. Make sure you search there, well, if not first, then at least second or third. </li>\n</ul>\n\n<p>For your purpose, I would recommend look at one of the plugins in the <code>_source/plugins</code> directory, for example the \"print\" button. Adding a simple Javascript function is quite easy to achieve. You should be able to duplicate the print plugin (take the directory from _source into the actual plugins/ directory, worry about minification later), rename it, rename every mention of \"print\" within it, give the button a proper name you use later in your toolbar setup to include the button, and add your function.</p>\n",
                    "is_accepted": true,
                    "score": 61
                },
                {
                    "body": "<p>See this URL for a easy example <a href=\"http://ajithmanmadhan.wordpress.com/2009/12/16/customizing-ckeditor-and-adding-a-new-toolbar-button/\">http://ajithmanmadhan.wordpress.com/2009/12/16/customizing-ckeditor-and-adding-a-new-toolbar-button/</a></p>\n\n<p>There are a couple of steps:</p>\n\n<p>1) create a plugin folder</p>\n\n<p>2) register your plugin (the URL above says to edit the ckeditor.js file DO NOT do this, as it will break next time a new version is relased. Instead edit  the config.js and add a line like so</p>\n\n<pre><code>config.extraPlugins = 'pluginX,pluginY,yourPluginNameHere'; \n</code></pre>\n\n<p>3) make a JS file called plugin.js inside your plugin folder\nHere is my code</p>\n\n<pre><code>(function(){\n//Section 1 : Code to execute when the toolbar button is pressed\nvar a= {\nexec:function(editor){\n var theSelectedText = editor.getSelection().getNative();\n alert(theSelectedText);\n}\n},\n\n//Section 2 : Create the button and add the functionality to it\nb='addTags';\nCKEDITOR.plugins.add(b,{\ninit:function(editor){\neditor.addCommand(b,a);\neditor.ui.addButton(\"addTags\",{\n    label:'Add Tag', \n    icon:this.path+\"addTag.gif\",\n    command:b\n    });\n}\n}); \n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>In case anybody is interested, I wrote a solution for this using Prototype. In order to get the button to appear correctly, I had to specify <code>extraPlugins: 'ajaxsave'</code> from inside the <code>CKEDITOR.replace()</code> method call. </p>\n\n<p>Here is the plugin.js:</p>\n\n<pre><code>CKEDITOR.plugins.add('ajaxsave',\n{\n    init: function(editor)\n    {\n    var pluginName = 'ajaxsave';\n\n    editor.addCommand( pluginName,\n    {\n        exec : function( editor )\n        {\n            new Ajax.Request('ajaxsave.php',\n            {\n                method:     \"POST\",\n                parameters: { filename: 'index.html', editor: editor.getData() },\n                onFailure:  function() { ThrowError(\"Error: The server has returned an unknown error\"); },\n                on0:        function() { ThrowError('Error: The server is not responding. Please try again.'); },\n                onSuccess:  function(transport) {\n\n                    var resp = transport.responseText;\n\n                    //Successful processing by ckprocess.php should return simply 'OK'. \n                    if(resp == \"OK\") {\n                        //This is a custom function I wrote to display messages. Nicer than alert() \n                        ShowPageMessage('Changes have been saved successfully!');\n                    } else {\n                        ShowPageMessage(resp,'10');\n                    }\n                }\n            });\n        },\n\n        canUndo : true\n    });\n\n    editor.ui.addButton('ajaxsave',\n    {\n        label: 'Save',\n        command: pluginName,\n        className : 'cke_button_save'\n    });\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can add the button image as follows:</p>\n\n<pre><code>CKEDITOR.plugins.add('showtime',\u00a0\u00a0 //name of our plugin\n{\u00a0\u00a0\u00a0 \n\u00a0\u00a0\u00a0\u00a0requires: ['dialog'], //requires a dialog window\n\u00a0\u00a0\u00a0\u00a0init:function(a) {\n\u00a0\u00a0var b=\"showtime\";\n\u00a0\u00a0var c=a.addCommand(b,new CKEDITOR.dialogCommand(b));\n\u00a0\u00a0c.modes={wysiwyg:1,source:1}; //Enable our plugin in both modes\n\u00a0\u00a0c.canUndo=true;\n\u00a0\n\u00a0\u00a0//add new button to the editor\n\u00a0\u00a0a.ui.addButton(\"showtime\",\n\u00a0\u00a0{\n\u00a0\u00a0\u00a0label:'Show current time',\n\u00a0\u00a0\u00a0command:b,\n\u00a0\u00a0\u00a0icon:this.path+\"showtime.png\"   //path of the icon\n\u00a0\u00a0});\n\u00a0\u00a0CKEDITOR.dialog.add(b,this.path+\"dialogs/ab.js\") //path of our dialog file\n\u00a0}\n});\n</code></pre>\n\n<p><a href=\"http://www.webspeaks.in/2011/12/create-custom-plugin-with-button-in.html\" rel=\"nofollow\">Here</a> is the actual plugin with all steps described.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This article may be useful too <a href=\"http://mito-team.com/article/2012/collapse-button-for-ckeditor-for-drupal\" rel=\"nofollow\">http://mito-team.com/article/2012/collapse-button-for-ckeditor-for-drupal</a></p>\n\n<p>There are code samples and step-by-step guide about building your own CKEditor plugin with custom button.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't know about before, but for the new CKEditor 4, clearly one should <a href=\"http://docs.ckeditor.com/#!/guide/plugin_sdk_intro\">read the fine manual</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Also there is a nice way allowing one to add the button without creating plugin.</p>\n\n<p>html:</p>\n\n<pre><code>&lt;textarea id=\"container\"&gt;How are you!&lt;/textarea&gt;\n</code></pre>\n\n<p>javascript:</p>\n\n<pre><code>editor = CKEDITOR.replace('container'); // bind editor\n\neditor.addCommand(\"mySimpleCommand\", { // create named command\n    exec: function(edt) {\n        alert(edt.getData());\n    }\n});\n\neditor.ui.addButton('SuperButton', { // add new button and bind our command\n    label: \"Click me\",\n    command: 'mySimpleCommand',\n    toolbar: 'insert',\n    icon: 'https://avatars1.githubusercontent.com/u/5500999?v=2&amp;s=16'\n});\n</code></pre>\n\n<p>Check out how it works here: <a href=\"http://jsfiddle.net/2j3btvLo/4/\" rel=\"nofollow\">DEMO</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'd like to add a button to the toolbar that calls a JavaScript function like Tada()?</p>\n\n<p>Any ideas on how to add this?</p>\n",
            "last_activity_date": 1408698423,
            "question_id": 1957156,
            "score": 35,
            "tags": [
                "javascript",
                "ckeditor"
            ],
            "title": "CKEditor, how to add a custom button to the toolbar that calls a JavaScript Function"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>This will result in a roughly equivalent translation (thanks @Joel Mueller):</p>\n\n<pre><code>setTimeout (-&gt; something param), 1000\n</code></pre>\n\n<p>Note that this isn't an exact translation because the anonymous function returns the result of calling <code>something(param)</code> instead of undefined, as in your snippet.</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<pre><code>setTimeout ( -&gt;\n  something param\n), 1000\n</code></pre>\n\n<p>The parentheses are optional, but starting the line with a comma seemed messy to me.</p>\n",
                    "is_accepted": false,
                    "score": 132
                },
                {
                    "body": "<p>I think it's a useful convention for callbacks to come as the last argument to a function. This is usually the case with the Node.js API, for instance. So with that in mind:</p>\n\n<pre><code>delay = (ms, func) -&gt; setTimeout func, ms\n\ndelay 1000, -&gt; something param\n</code></pre>\n\n<p>Granted, this adds the overhead of an extra function call to every <code>setTimeout</code> you make; but in today's JS interpreters, the performance drawback is insignificant unless you're doing it thousands of times per second. (And what are you doing setting thousands of timeouts per second, anyway?)</p>\n\n<p>Of course, a more straightforward approach is to simply name your callback, which tends to produce more readable code anyway (jashkenas is a big fan of this idiom):</p>\n\n<pre><code>callback = -&gt; something param\nsetTimeout callback, 1000\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 159
                },
                {
                    "body": "<pre><code>setTimeout -&gt; \n  something param\n, 1000\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>another option:</p>\n\n<pre><code>setTimeout(\n    -&gt; something param\n    1000\n)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I find this the best method to do the same, </p>\n\n<pre><code>setTimeout (-&gt; alert \"hi\"), 1000\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Please tell me how to write javascript below in coffeescript.</p>\n\n<pre><code>setTimeout(function(){\n    something(param);\n}, 1000);\n</code></pre>\n",
            "last_activity_date": 1386898048,
            "question_id": 6459630,
            "score": 140,
            "tags": [
                "javascript",
                "settimeout",
                "coffeescript"
            ],
            "title": "how to write setTimeout with params by Coffeescript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><code>$http</code> is for general purpose AJAX. In most cases this is what you'll be using. With <code>$http</code> you're going to be making <code>GET</code>, <code>POST</code>, <code>DELETE</code> type calls manually and processing the objects they return on your own.</p>\n\n<p><code>$resource</code> wraps <code>$http</code> for use in RESTful web API scenarios. </p>\n\n<hr>\n\n<p>Speaking VERY generally: A RESTful web service will be a service with one endpoint for a data type that does different things with that data type based on HTTP methods like <code>GET</code>, <code>POST</code>, <code>PUT</code>, <code>DELETE</code>, etc. So with a <code>$resource</code>, you can call a <code>GET</code> to get the resource as a JavaScript object, then alter it and send it back with a <code>POST</code>, or even delete it with <code>DELETE</code>.</p>\n\n<p>... if that makes sense.</p>\n",
                    "is_accepted": true,
                    "score": 81
                },
                {
                    "body": "<p>When it comes to choose between <code>$http</code> or <code>$resource</code> technically speaking there is no right or wrong answer in essence both will do the same.</p>\n\n<p>The purpose of <code>$resource</code> is to allow you to pass in a template string (a string that contains placeholders) along with the parameters values. <code>$resource</code> will replace the <em>placeholders</em> from the template string with the parameter values those being passed as an object. This is mostly useful when interacting with RESTFul datasource as they use similar principles to define the URLs. </p>\n\n<p>What <code>$http</code> does is to perform the Asynchronous HTTP Requests. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I feel that other answers, while correct, don't quite explain the root of the question: <code>REST</code> is a subset of <code>HTTP</code>. This means everything that can be done via <code>REST</code> can be done via <code>HTTP</code> but not everything that can be done via <code>HTTP</code> can be done via <code>REST</code>. That is why <code>$resource</code> uses <code>$http</code> internally.</p>\n\n<p><strong>So, when to use each other?</strong></p>\n\n<p>If all you need is <code>REST</code>, that is, you are trying to access a <code>RESTful</code> webservice, <code>$resource</code> is going to make it super easy to interact with that webservice.</p>\n\n<p>If instead, you're trying to access ANYTHING that is not a <code>RESTful</code> webservice, you're going to have to go with <code>$http</code>. Keep in mind, you could also access a <code>RESTful</code> webservice via <code>$http</code>, it will just be much more cumbersome than with <code>$resource</code>. This is the way most people have been doing it outside AngularJS, by using <code>jQuery.ajax</code> (equivalent of Angular's <code>$http</code>).</p>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p>I Think it is important to emphasize that $resource expects object or array as response from server, not raw string. So if you have raw string (or anything except object and array) as a response, you have to use $http</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>resource service is just useful service for working with REST APSIs.\nwhen you use it you don't write your CRUD methods (create,read,update and delete)</p>\n\n<p>As far as I see it, resource service is just a shortcut,\nyou can do anything with http service.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am newly exposed to AngularJS, so please forgive my ignorance.</p>\n\n<p>I have some web services that I want to call. <code>$resource</code> or <code>$http</code>, which one should I use?</p>\n\n<p><code>$resource</code>: <a href=\"https://docs.angularjs.org/api/ngResource/service/%24resource\">https://docs.angularjs.org/api/ngResource/service/$resource</a></p>\n\n<p><code>$http</code>: <a href=\"https://docs.angularjs.org/api/ng/service/%24http\">https://docs.angularjs.org/api/ng/service/$http</a></p>\n\n<p>After I read the two above API pages I am lost.</p>\n\n<p>Could you please explain to me in plain English what is the difference and in what situation should I use them? How do I structure these calls and read the results into js objects correctly? </p>\n",
            "last_activity_date": 1416672568,
            "question_id": 13181406,
            "score": 97,
            "tags": [
                "javascript",
                "web-services",
                "angularjs"
            ],
            "title": "AngularJS $http and $resource"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>A polyfill is a browser fallback, made in javascript, that allows functionality you expect to work in modern browsers to work in older browsers.  Ie to support canvas (an html5 feature) in older browsers.</p>\n\n<p>It's sort of an HTML5 technique, since it is used in conjunction with HTML5, but it's not part of HTML5, and you can have polyfills without having HTML5 (for example, to support CSS3 techniques you want).</p>\n\n<p>Here's a good post:</p>\n\n<p><a href=\"http://remysharp.com/2010/10/08/what-is-a-polyfill/\">http://remysharp.com/2010/10/08/what-is-a-polyfill/</a></p>\n\n<p>Here's a comprehensive list of Polyfills and Shims:</p>\n\n<p><a href=\"https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills\">https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills</a></p>\n",
                    "is_accepted": true,
                    "score": 75
                },
                {
                    "body": "<p>First off let's clarify what a polyfil is not: A polyfill is not part of the HTML5 Standard.  Nor is a polyfill limited to Javascript, even though you often see polyfills being referred to in those contexts.  </p>\n\n<p>The term polyfill itself refers to some code that \"allows you to have some specific functionality that you expect in current or \u201cmodern\u201d browsers to also work in other browsers that do not have the support for that functionality built in. \"</p>\n\n<p>Source and example of polyfill here:</p>\n\n<p><a href=\"http://www.programmerinterview.com/index.php/html5/html5-polyfill/\">http://www.programmerinterview.com/index.php/html5/html5-polyfill/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>What is the meaning of polyfills in HTML5? I saw this word in many sites about HTML5, like here: <a href=\"https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills\">https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills</a></p>\n\n<blockquote>\n  <p>So here we're collecting all the shims, fallbacks, and polyfills\n  in order to implant HTML5 functionality in browsers that don't\n  natively support them.</p>\n</blockquote>\n\n<p>I actually don't understood what is the meaning of polyfills.</p>\n\n<p>Is it a new HTML5 technique or a JavaScript library? I never heard this word before HTML5.</p>\n\n<p>And what is the difference between shims, fallbacks, and polyfills?</p>\n",
            "last_activity_date": 1394434451,
            "question_id": 7087331,
            "score": 75,
            "tags": [
                "javascript",
                "html5",
                "fallback",
                "polyfills",
                "shim"
            ],
            "title": "What is the meaning of polyfills in HTML5?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I'm unable to activate that experiment myself (there's no <code>Developer Tools experiments</code> in my <code>chrome:flags</code>, but from Safari, I found <a href=\"http://www.seifi.org/css/whats-new-in-safari-31-web-inspector-and-sinppet-editor.html\" rel=\"nofollow\">this</a> explanation: </p>\n\n<p>In short, it \"is a little utility that allows you to enter blocks of HTML and CSS and have it rendered on the fly\".</p>\n\n<p>From the blog post, it seems it is buggy in Safari, so maybe Chrome has not implemented it yet.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I asked Paul Irish if he knew anything about it, he wasn't sure either but says it's not completely implemented yet and pointed me at the bug tracker, I found the head <a href=\"https://bugs.webkit.org/show_bug.cgi?id=75094\">ticket</a> and looking at some of the code the diffs have a lot of <code>FIXME: To be implemented.</code> comments.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Chrome Developer Tools snippets support allows to create/edit/save and execute javascript code snippets.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Right click to create a new one.</p>\n\n<p><img src=\"http://i.stack.imgur.com/77QMY.png\" alt=\"Chrome DevTools Snippets \u2014 New\"></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<h1>Explanation</h1>\n\n<p>I wondered the same and found <a href=\"http://www.phprepo.in/2013/01/using-snippets-in-google-chrome-dev-tools/\" rel=\"nofollow\" title=\"phprepro.in\">this recent blog type post</a> explaining what, where and how to use the new feature.</p>\n\n<p>Paul Irish has shared <a href=\"https://plus.google.com/111523616060404197347/posts/SaR7vkWcySi\" rel=\"nofollow\" title=\"plus.google.com\">a post from Nic da Costa on Google Plus</a> linking to code sources that acts as a suggestion to implement an \"auto run\" feature for specific snippets.</p>\n\n<p>Looks to be a handy new feature. The more input developers give to the Chrome and/or Chromium teams, the better it will eventually get.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Snippets is now landed! It's no longer in experiments and you can find it in the sources panel.\nBest of all we have <strong>hugely comprehensive docs on snippets, now</strong>: </p>\n\n<p><strong><a href=\"https://developers.google.com/chrome-developer-tools/docs/authoring-development-workflow#snippets\">developers.google.com/chrome-developer-tools/docs/authoring-development-workflow#snippets</a></strong></p>\n\n<p>In short, snippets are a multi-line console, an iterative JS development workflow, and a persistent store for common debugging helpers.  From the docs:</p>\n\n<blockquote>\n  <p>Some of the use-cases Snippets can help with are:</p>\n  \n  <ul>\n  <li><strong>Bookmarklets</strong> - all of your bookmarklets could be stored as snippets, especially those you may wish to edit.</li>\n  <li><strong>Utilities</strong> - debugging helpers for interacting with the current page can be stored and debugged. A community-curated list of such utilities is available.</li>\n  <li><strong>Debugging</strong> - Snippets offer a multi-line console with syntax-highlighting and persistance, making it convenience for debugging code that is more than a one-liner.</li>\n  <li><strong>Monkey-patching code</strong> - code you wish to patch at runtime can be done through Snippets, although many times you can just live-edit code in the Sources tab.</li>\n  </ul>\n</blockquote>\n\n<p><a href=\"https://developers.google.com/chrome-developer-tools/docs/authoring-development-workflow#snippets\"><img src=\"http://i.stack.imgur.com/pRYxg.jpg\" alt=\"snippets screenshot\"></a></p>\n\n<p>Lastly, I've personally been collecting a few common snippets that you may include in your arsenal: <a href=\"https://github.com/paulirish/devtools-addons/wiki/Snippets\">github.com/paulirish/devtools-addons/wiki/Snippets</a></p>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>You can find the list of useful snippets here <a href=\"http://bgrins.github.io/devtools-snippets/\" rel=\"nofollow\">http://bgrins.github.io/devtools-snippets/</a></p>\n\n<p>one of the useful snippet is 'jquerify.js' - Using this you can include jQuery in to any page if it is not yet included.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>As of version 19, Chrome's Web Inspector has an experimental feature called \"snippets support\". Here is how to activate it:</p>\n\n<ol>\n<li><p>Open chrome:flags, enable \"Developer Tools experiments\", restart.</p></li>\n<li><p>Open Web Inspector (Developer Tools), hit the settings gear icon in the lower right corner, enable \"Snippets support\", restart.</p>\n\n<p><img src=\"http://i.stack.imgur.com/Thsl0.png\" alt=\"enable snippets support\"></p></li>\n<li><p>Open the Scripts panel, click the \"navigator tree\" icon on the left, and find an empty Snippets tab.</p>\n\n<p><img src=\"http://i.stack.imgur.com/01MI3.png\" alt=\"snippets tab\"></p></li>\n</ol>\n\n<p>My question is: <strong>What can I use this for? How can I populate this with snippets?</strong></p>\n",
            "last_activity_date": 1376905745,
            "question_id": 10470711,
            "score": 61,
            "tags": [
                "javascript",
                "google-chrome-devtools",
                "web-inspector"
            ],
            "title": "Chrome Developer Tools: What is Snippets Support?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>There is a pretty good tutorial (that I haven't been able to make is through yet) over at thinkster.io (<a href=\"http://www.thinkster.io/pick/GUIDJbpIie/angularjs-tutorial-learn-to-build-modern-web-apps\">http://www.thinkster.io/pick/GUIDJbpIie/angularjs-tutorial-learn-to-build-modern-web-apps</a>). It takes you through building a Fantasy Football app on top of the MEAN stack. </p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>You may also want to check out this tutorial, which builds a polling app using the MEAN stack: <a href=\"http://www.ibm.com/developerworks/library/wa-nodejs-polling-app/\">http://www.ibm.com/developerworks/library/wa-nodejs-polling-app/</a> </p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>How to Node is a good place learn about Node Stack. There is a sample Blogging app to build <a href=\"http://howtonode.org/express-mongodb\" rel=\"nofollow\">http://howtonode.org/express-mongodb</a>. To start MEAN you can also look at this excellent tutorial <a href=\"http://thecodebarbarian.wordpress.com/2013/07/22/introduction-to-the-mean-stack-part-one-setting-up-your-tools/\" rel=\"nofollow\">http://thecodebarbarian.wordpress.com/2013/07/22/introduction-to-the-mean-stack-part-one-setting-up-your-tools/</a></p>\n\n<p><a href=\"http://nodeschool.io/\" rel=\"nofollow\">http://nodeschool.io/</a> also has excellent tutorials.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are some really great MEAN Stack tutorials over on <a href=\"http://scotch.io/\">http://scotch.io/</a></p>\n\n<p><a href=\"http://scotch.io/bar-talk/setting-up-a-mean-stack-single-page-application\">Setting up a MEAN Stack single page app</a></p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Pluralsight has a course offered.  It looks good.</p>\n\n<p><a href=\"http://pluralsight.com/training/Courses/TableOfContents/building-angularjs-nodejs-apps-mean?utm_campaign=newsletter_20140211&amp;utm_source=newsletter&amp;utm_medium=email&amp;utm_term=course\" rel=\"nofollow\">http://pluralsight.com/training/Courses/TableOfContents/building-angularjs-nodejs-apps-mean?utm_campaign=newsletter_20140211&amp;utm_source=newsletter&amp;utm_medium=email&amp;utm_term=course</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here you can attend live class room, videos, tutorials, mongo db with node js \n<a href=\"https://education.mongodb.com/\" rel=\"nofollow\">https://education.mongodb.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have been seeking for an online course, tutorial, or book which teaches you how to fully utilise the MEAN stack. Implementation during every step when making an online application. Is there any online courses, or really good tutorials which teach you how to tie all the technologies within the MEAN stack together. If anyone has anything they really recommend that maybe goes through making a usable application it would be great.\nThanks</p>\n",
            "last_activity_date": 1423737274,
            "question_id": 20605824,
            "score": 39,
            "tags": [
                "javascript",
                "node.js",
                "mongodb",
                "angularjs",
                "express"
            ],
            "title": "MEAN Stack course/tutorial Node.js"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Personally I've stuck with <a href=\"http://visionmedia.github.com/expresso/\">Expresso</a>, but there are a bunch of different frameworks out there, accommodating most testing styles.</p>\n\n<p>Joyent has <a href=\"https://github.com/joyent/node/wiki/modules#wiki-testing\">an extensive list</a>; give that a go.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I've personally only used the assert module, but also find myself wanting more. I've looked through many node modules and popular unit testing frameworks are <a href=\"https://github.com/caolan/nodeunit\">node-unit</a> and should (which is made by the same guy as Expresso (maybe an updated name?)</p>\n\n<p><a href=\"http://vowsjs.org/\">Vows</a> also looks promising.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I ended up using <a href=\"https://github.com/caolan/nodeunit\">node-unit</a> and am really happy with it.</p>\n\n<p>I was using <a href=\"http://visionmedia.github.com/expresso/\">Expresso</a> originally but the fact that it runs tests in parallel caused a few problems. (For example using database fixtures doesn't work well in this situation).</p>\n",
                    "is_accepted": false,
                    "score": 54
                },
                {
                    "body": "<p><a href=\"http://vowsjs.org/\">vows</a> is a solid unit testing library for node.js but the syntax is tedious.</p>\n\n<p>I've written a thin abstraction called <a href=\"https://github.com/Raynos/vows-fluent\">vows-fluent</a> which makes the API chainable.</p>\n\n<p>And I've written another abstraction, [vows-is] which builds on vows-fluent and exposes a BDD style syntax.</p>\n\n<p>An example would be </p>\n\n<pre><code>var is = require(\"vows-is\");\n\nis.suite(\"testing is fun\").batch()\n\n    .context(\"is testing fun?\")\n        .topic.is(\"yes\")\n        .vow.it.should.equal(\"yes\")\n\n.suite().run({\n    reporter: is.reporter\n});\n</code></pre>\n\n<p><a href=\"https://github.com/Raynos/vows-is/tree/master/examples\">More examples</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you are familiar with <a href=\"http://qunitjs.com/\" rel=\"nofollow\">QUnit</a>, you could use <a href=\"https://github.com/kof/node-qunit\" rel=\"nofollow\">node-qunit</a> which is a sort of a node wrapper around QUnit's existing framework. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I was also looking for a decent test framework for node and found  <a href=\"http://mochajs.org/\" rel=\"nofollow\">Mocha</a>. It is the official successor to Expresso and seems very mature. </p>\n\n<p>It allows to plug-in different assertion libraries, it offers reporters for code coverage and other things (you can plug-in your own). It can run sync or async and it has a concise API.</p>\n\n<p>I will give it a try and report back...</p>\n\n<p>EDIT: After an incredible amount of time dedicated to other projects I finally came back to a Javascript project and had time to play around with mocha. I can seriously recommend using it. The tests read very nicely, integration with gulp is great and tests run very fast. I was able to setup automatic standalone as well as in-browser (browserify) test runs and corresponding code coverage reports in about half a day (most of the time spent on understanding how to use browserify from gulp). To me, mocha seems a very good choice for a testing framework.</p>\n\n<p>UPDATE: I am still very convinced about Mocha. Integration with chai allows to plugin different assertion styles. You can checkout a working setup in <a href=\"https://github.com/mediumorg/medium/tree/master/code/test\" rel=\"nofollow\">this github project</a>. I am using it with karma now, integrating code coverage report, automatic watchers and good integration with IntelliJ</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>I have setup with Mocha - there is a great tutorial right here - <a href=\"http://brianstoner.com/blog/testing-in-nodejs-with-mocha/\">http://brianstoner.com/blog/testing-in-nodejs-with-mocha/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I think among various testing frameworks available, <a href=\"http://visionmedia.github.io/mocha/\" rel=\"nofollow\">mocha</a> is the most latest, and very simple to implement. Here is a wonderful tutorial about how to use it:\n<a href=\"http://thewayofcode.wordpress.com/2013/04/21/how-to-build-and-test-rest-api-with-nodejs-express-mocha/\" rel=\"nofollow\">http://thewayofcode.wordpress.com/2013/04/21/how-to-build-and-test-rest-api-with-nodejs-express-mocha/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Originally made for node.js, <a href=\"https://github.com/fresheneesz/deadunit\" rel=\"nofollow\">deadunit</a> is a javascript unit testing library for node.js and the browser.  Some of its unique attributes:</p>\n\n<ul>\n<li>Easy learning curve</li>\n<li>Can output test results on the command line (colored or plain-text) or as html</li>\n<li>It prints out the actual lines of code where your assertions are, so your output makes sense even if you don't spend a lot of time writing test commentary</li>\n<li>It has a simple <code>count</code> assertion that makes dealing with expected exceptions and asynchronous asserts easy</li>\n<li>it prints out exception <em>and</em> any attached data they have</li>\n<li>it'll let you know if your code is hanging (something you don't want, but usually goes unnoticed)</li>\n<li>Has an event driven API enables streaming test results across a network, or in any way you want.</li>\n<li>Supports testing with <a href=\"https://github.com/laverdet/node-fibers\" rel=\"nofollow\">node-fibers</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"https://www.npmjs.org/package/test-studio\" rel=\"nofollow\">test-studio</a> is an npm package that provides a powerful, web based front end for unit testing. It supports things like executing individual or groups of tests and stepping node-inspector into individual tests. It currently supports mocha and more frameworks will be supported in future given demand.</p>\n\n<p>Read more about it <a href=\"http://www.danderson00.com/2014/05/test-studio-unit-testing-for-nodejs-how.html\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just uploaded a project I am using to unit test nodejs with karma and Jasmine: <a href=\"https://github.com/noamtcohen/Narma\" rel=\"nofollow\">narma</a>.\nYour node modules get loaded into a nodewebkit browser so you can execute node modules and use libraries like jquery in the same heap.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Are there any good node.js (server side js) unit testing frameworks currently out there?  I'm looking for something a little deeper than the Assert module provided.</p>\n",
            "last_activity_date": 1425583284,
            "question_id": 7254025,
            "score": 122,
            "tags": [
                "javascript",
                "unit-testing",
                "node.js"
            ],
            "title": "Node.js Unit Testing"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Well, I wouldn't say it's functional programming, but then I <em>would</em> say it's object oriented and just today a friend said he wouldn't put it on that shelf either.</p>\n\n<p>So, while I wouldn't say it is, I guess there's room for opinion. It does have classical features of functional programming, it doesn't have others.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would say that it is a multi-paradigm language.</p>\n\n<p>EDIT: It's multi-paradigm and includes functional constructs.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Repeating <a href=\"http://stackoverflow.com/questions/3527753/why-is-smalltalk-not-a-functional-programming-language/3528329#3528329\">my own answer</a> to a similar question,</p>\n\n<blockquote>\n  <p>There's no accepted definition of\n  functional programming language.</p>\n  \n  <p>If you define functional language as\n  the language that supports first class\n  functions and lambdas, then yes, JavaScript *is* a\n  functional language.</p>\n  \n  <p>If you also consider the factors like\n  support for immutability, algebraic\n  data types, pattern matching, partial\n  application etc then no, JavaScript\n  *is not* a functional language.</p>\n  \n  <hr>\n  \n  <p>I'd encourage you to read the\n  following related blog posts (and also\n  the comments below them):</p>\n  \n  <ul>\n  <li><p><a href=\"https://web.archive.org/web/20131020034539/http://blog.enfranchisedmind.com/2009/05/scala-not-functional/\">Scala is not a functional    language</a></p></li>\n  <li><p><a href=\"https://web.archive.org/web/20130626233927/http://james-iry.blogspot.com/2009/05/erlang-is-not-functional.html\">Erlang is not functional</a></p></li>\n  <li><p><a href=\"http://www.reddit.com/r/programming/comments/8krbo/erlang_is_not_functional_response_to_scala_is_not/\">Reddit discussion on \"Erlang is not    functional\"</a></p></li>\n  </ul>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 107
                },
                {
                    "body": "<p>To me, Javascript is both an imperative language and a functional language, and you can choose to use it either way, and even (<strong>egad</strong>) both ways. Or you can choose to use one paradigm and never touch the other. It's up to you.  I, like you, don't think Javascript should be <strong>called</strong> a Functional Language, because it allows you to wander in and out of the functional programming paradigm. Perhaps if it had a pragma of some kind, to limit you using only functional programming paradigms, then that would be useful, I think. But, in summary, I say it's more of a imperative/procedural language with some functional programming features tossed in. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Javascript is to a point. It truly depends on how you go about programming it. If I code in an OO manner, would it not be OO? So if you just code things in a 'functional' manner it would be functional. I guess it is multi-paradigm language so to call it just one thing isn't entirely accurate.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>if you stretch and twist the term \"functional programming\" to the point of philosophical discussions, this question may be open again. However, then you end up on the level of useful questions like \"Is C++ really a programming language\"?</p>\n\n<p>The answer to your question on more daily level is <strong>\"no\"</strong>.</p>\n\n<p>Functional programming means that the program is conceptualized as a evaluation of a function, rather than a control flow. The code is a description of functions, and has no inherent concept of a control flow.</p>\n\n<p>JavaScript has got a control flow and is conceptualized as a imperative language. From its design objective, it is clearly not a functional language.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I tend not to think of programming languages as having one particular paradigm, but that they lend themselves to certain paradigms. However just because they lend themselves to a particular paradigm doesn't mean you have to use that paradigm. It's quite possible to write object oriented programs in C and write imperative programs in ML. Not using a certain paradigm to solve a problem because the language isn't designed for it is just artificially limiting yourself (of course you should still take into account the limitations of a language when deciding if a particular solution will be a good solution). </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The term \"functional programming\" language is so overloaded these days it's almost useless. There are two dominant meanings:</p>\n\n<ol>\n<li>Has first-class functions\n<ul>\n<li>Javascript is this!</li>\n</ul></li>\n<li>Is based on functions as used in the lambda calculus, with an emphasis on avoiding persistent mutable state (often replacing it with parameters passed to functions)\n<ul>\n<li>As commonly written, Javascript is not remotely this!</li>\n</ul></li>\n</ol>\n\n<p>Pick your meaning and then the question is answerable.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>What I really hate in javascript (if You try to look at it as FP language) is this:</p>\n\n<pre><code>function getTenFunctionsBad() {\n  var result = [];\n  for (var i = 0; i &lt; 10; ++i) {\n    result.push(function () {\n      return i;\n    });\n  }\n  return result;\n}\n\nfunction getTenFunctions() {\n  var result = [];\n  for (var i = 0; i &lt; 10; ++i) {\n    result.push((function (i) {\n      return function () {\n        return i;\n      }\n    })(i));\n  }\n  return result;\n}\n\nvar functionsBad = getTenFunctionsBad();\nvar functions = getTenFunctions()\nfor (var i = 0; i &lt; 10; ++i) {\n  // using rhino print\n  print(functionsBad[i]() + ', ' + functions[i]());\n}\n\n// Output:\n//   10, 0\n//   10, 1\n//   10, 2\n//   10, 3\n//   10, 4\n//   10, 5\n//   10, 6\n//   10, 7\n//   10, 8\n//   10, 9\n</code></pre>\n\n<p>You need to understand JS stack environment (I don't if it is the right term) to understand such a behavior.</p>\n\n<p>In scheme for example You just can't produce such thing (Ok, ok -- with the help of underlying languages' references You can make it):</p>\n\n<pre><code>(define (make-ten-functions)\n  (define (iter i)\n    (cond ((&gt; i 9) '())\n          (else (cons (lambda () i) (iter (+ i 1))))))\n  (iter 0))\n\n(for-each (lambda (f)\n            (display (f))\n            (newline)) (make-ten-functions))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>@petraszd\nI rewrite your code a little to obtain a \"new\"  <strong>for</strong> operator:</p>\n\n<pre><code>   \n   function ffor(a, b, f){\n     function it(i){\n       if(i > b)return\n       f(i)\n       it(i+1)\n     }\n     it(a)\n   }\n\n   print(\"----\" + new Date()+\"----\")\n\n   var funcs = []\n   ffor(0, 9, function(i){\n     funcs.push(function(){return i})\n   })\n\n   ffor(0, 9, function(i){\n     print(funcs[i]())\n   })\n</code></pre>\n\n<p>But I know that this way has disadvantages for big loops...</p>\n\n<p><a href=\"http://stackoverflow.com/questions/3660577/are-any-javascript-engines-tail-call-optimized\">Related question about tail recurtion optimization in JS</a></p>\n\n<p>P.S. Posted here cuz have problem with code formatting while posting as comment </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't think there a concrete definition of functional programming , however many of things people consider \"functional programming\" can be done with javascript.   Here is a good brief example in this <a href=\"http://mark-nery.github.io/software/2013/07/13/playing-with-functional-javascript/\" rel=\"nofollow\">article.</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Just because functions are first class objects, there are closures, and higher order functions, does Javascript deserve to be called a Functional Programming language?  The main thing I think it lacks is Pure Functions, and it doesn't 'feel' like other functional languages, like lisp (although thats not really a good reason for it not to be a functional langauge...)</p>\n",
            "last_activity_date": 1398973801,
            "question_id": 3962604,
            "score": 77,
            "tags": [
                "javascript",
                "functional-programming",
                "terminology"
            ],
            "title": "Is Javascript a Functional Programming Language?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><strong>Method 1 :</strong> Using jQuery Ajax Get call (<strong>partial page update</strong>).</p>\n\n<p>Suitable for when you need to retrieve jSon data from database.</p>\n\n<p><strong>Controller's Action Method</strong></p>\n\n<pre><code>[HttpGet]\npublic ActionResult Foo(string id)\n{\n    var person = Something.GetPersonByID(id);\n    return Json(person, JsonRequestBehavior.AllowGet);\n}\n</code></pre>\n\n<p><strong>Jquery GET</strong></p>\n\n<pre><code>function getPerson(id) {\n    $.ajax({\n        url: '@Url.Action(\"Foo\", \"SomeController\")',\n        type: 'GET',\n        dataType: 'json',\n        // we set cache: false because GET requests are often cached by browsers\n        // IE is particularly aggressive in that respect\n        cache: false,\n        data: { id: id },\n        success: function(person) {\n            $('#FirstName').val(person.FirstName);\n            $('#LastName').val(person.LastName);\n        }\n    });\n}\n</code></pre>\n\n<p><strong>Person class</strong></p>\n\n<pre><code>public class Person\n{\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n}\n</code></pre>\n\n<p><strong>Method 2 :</strong> Using jQuery Ajax Post call (<strong>partial page update</strong>).</p>\n\n<p>Suitable for when you need to do partial page post data into database.</p>\n\n<p>Post method is also same like above just replace  <code>[HttpPost]</code> on Action method and type as <code>post</code> for jquery method.</p>\n\n<p>For more information check <a href=\"http://lozanotek.com/blog/archive/2010/04/16/posting_json_data_to_mvc_controllers.aspx\"><strong>Posting JSON Data to MVC Controllers Here</strong></a></p>\n\n<p><strong>Method 3 :</strong> As a Form post scenario (<strong>full page update</strong>).</p>\n\n<p>Suitable for when you need to save or update data into database.</p>\n\n<p><strong>View</strong></p>\n\n<pre><code>@using (Html.BeginForm(\"SaveData\",\"ControllerName\", FormMethod.Post))\n{        \n    @Html.TextBoxFor(model =&gt; m.Text)\n\n    &lt;input type=\"submit\" value=\"Save\" /&gt;\n}\n</code></pre>\n\n<p><strong>Action Method</strong></p>\n\n<pre><code>[HttpPost]\npublic ActionResult SaveData(FormCollection form)\n    {\n        // Get movie to update\n        return View();\n   }\n</code></pre>\n\n<p><strong>Method 4 :</strong> As a Form Get scenario (<strong>full page update</strong>).</p>\n\n<p>Suitable for when you need to Get data from database</p>\n\n<p>Get method also same like above just replace  <code>[HttpGet]</code> on Action method and <code>FormMethod.Get</code> for View's form method.</p>\n\n<p>I hope this will help to you.   </p>\n",
                    "is_accepted": true,
                    "score": 54
                }
            ],
            "body": "<p>I know this is a pretty basic question over here. </p>\n\n<p>But could you tell me <strong><em>all possible options</em></strong> available to,\n  <br/>call a <strong><em>Control Action Method [generally any server side routine] from a Razor View</em></strong> and, \n  <br/>in what <strong><em>scenarios each are best applicable</em></strong> to be used in.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1356845390,
            "question_id": 14049817,
            "score": 36,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "asp.net-mvc",
                "razor"
            ],
            "title": "In ASP.NET MVC: All possible ways to call Controller Action Method from a Razor View"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I've definitely used $(this).parent().parent() before just fine. You could post some code for us to see if there might be another problem somewhere...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It should work. You can also try $(this).parents(tag) , where tag is the tag you want to find.</p>\n\n<p>For example:</p>\n\n<pre><code>$(this).parents(\"tr:first\")\n</code></pre>\n\n<p>Will find the closest tr \"up the chain\".</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Try wrapping the $(this).parent() into an jQuery object like $($(this).parent()) I often find the need to do this to make sure I have a valid jquery object. From there you should be able to get a hold of the parents parent, or using the prev() perhaps.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>That should work... you might try</p>\n\n<pre><code>$(this).parents(':eq(1)');\n</code></pre>\n\n<p>The .parents(selector) says get all ancestors that match the selector</p>\n\n<p>and the :eq(1) says find the oneth (zero-indexed, so the second) element in the list</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The best way would probably be using <code>closest</code>:</p>\n\n<pre><code>$(this).closest('tr');\n</code></pre>\n\n<p><a href=\"http://docs.jquery.com/Traversing/closest\">Check out the documentation</a>:</p>\n\n<blockquote>\n  <p>Closest works by first looking at the current element to see if it matches the specified expression, if so it just returns the element itself. If it doesn't match then it will continue to traverse up the document, parent by parent, until an element is found that matches the specified expression. If no matching element is found then none will be returned.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 180
                },
                {
                    "body": "<p>also try </p>\n\n<pre><code>$(this).closest('div.classname').hide();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>var getParentNode = function(elem, level) { \n    level = level || 1; \n    for (var i = 0; i &lt; level; i++) {\n        if (elem != null) {\n            elem = elem.parentNode; \n        }\n    }\n    return elem; \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>.closest()</code> is not always best option specially when you have same element construct.</p>\n\n<pre><code>&lt;div&gt;\n    &lt;div&gt;\n        &lt;div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>You can do parent of a parent and it's very easy:</p>\n\n<pre><code>var parent = $('.myDiv').parent();\nvar parentParent = $(parent).parent();\nvar parentParentParent = $(parentParent).parent();\n</code></pre>\n\n<p>etc.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you have any sort of id/class for the parent, you can use parents() but that will give you all parents up to the &lt; body > unless you filter() or stop it some other way like</p>\n\n<pre><code>$(this).parents('.myClass');\n</code></pre>\n\n<p>Hope this helps someone :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am currently trying to find the parent of a parent of an element. I have a link being clicked that is in a <code>&lt;td&gt;</code>, and I'd like to get the <code>&lt;tr&gt;</code> object.</p>\n\n<p>Why wont \"$(this).parent().parent()\" work? What will?</p>\n\n<p>Thanks,<br />\nBrendan</p>\n\n<p><strong>Edit:</strong> It appears an error in my syntax was throwing the whole thing off. \"$(this).parent().parent()\" does in fact work, but I wound up going with $(this).closest('tr')\" because it seems like the most efficient solution.</p>\n",
            "last_activity_date": 1363840073,
            "question_id": 966408,
            "score": 72,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery parent of a parent"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Some browsers may display an error icon if the resource could not load. It makes debugging/monitoring the service also a little bit more complicated, you have to make sure that your monitoring tools treat the error as a good result.</p>\n\n<p>OTOH you don't gain anything. The error message returned by the server/framework is typically bigger then the 1x1 image. This means you increase your network traffic for basically nothing.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Because such a GIF has a known presentation in a browser - it's a single pixel, period. Anything else presents a risk of visually interfering with the actual content of the page. </p>\n\n<p>HTTP errors could appear as oversized frames of error text or even as a pop-up window. Some browsers may also complain if they receive empty replies.</p>\n\n<p>In addition, in-page images are one of the very few data types allowed by default in all broswers. Anything else may require explicit user action to be downloaded.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>First, i disagree with the two previous answers--neither engages the question. </p>\n\n<p>The one-pixel image solves an intrinsic problem for web-based analytics apps (like Google Analytics) when working in the HTTP Protocol--<strong><em>how to transfer (web metrics) data from the client to the server</em></strong>.</p>\n\n<p>The simplest of the methods described by the Protocol, the simplest (at lest the simplest method that includes a request body) is the <strong>GET request</strong>. According to this Protocol method, clients initiate requests to servers for resources; servers process those requests and return appropriate responses.</p>\n\n<p>For a web-based analytics app, like GA, this uni-directional scheme is bad news, because it doesn't appear to allow a server to retrieve data from a client on demand--again, all servers can do is supply resources not request them.</p>\n\n<p><em>So what's the solution to the problem of getting data from the client back to the server?</em> Within the HTTP context there are other Protocol methods other than GET (e.g., POST) but that's a limited option for many reasons (as evidenced by its infrequent and specialized use such as submitting form data).</p>\n\n<p>If you look at a GET Request from a browser, you'll see it is comprised of a Request URL and <strong><em>Request Headers</em></strong> (e.g., Referer and User-Agent Headers), the latter contains information about the client--e.g., browser type and version, browser langauge, operating system, etc.</p>\n\n<p>Again, this is part of the Request that the client sends to the server. So <strong><em>the idea that motivates the one-pixel gif is for the client to send the web metrics data to the server, wrapped inside a Request Header.</em></strong></p>\n\n<p>But then <em>how to get the client to Request a resource so it can be \"tricked\" into sending the metrics data?</em> And how to get the client to send the actual data the server wants?</p>\n\n<p>Google Analytics is a good example: the <em>ga.js</em> file (the large file whose download to the client is triggered by a small script in the web page) includes a few lines of code that <em>directs the client to request a particular resource from a particular server (the GA server) and to send certain data wrapped in the Request Header.</em></p>\n\n<p>But since the purpose of this Request is not to actually get a resource but to send data to the server, this resource should be a small as possible and it should not be visible when rendered in the web page--hence, the 1 x 1 pixel transparent gif. The size is the smallest size possible, and the format (gif) is the smallest among the image formats.</p>\n\n<p>More precisely, all GA data--every single item--is assembled and packed into the <strong><em>Request URL's query string</em></strong> (everything after the '?'). But in order for that data to go from the client (where it is created) to the GA server (where it is logged and aggregated) there must be an HTTP Request, so the ga.js (google analytics script that's downloaded, unless it's cached, by the client, as a result of a function called when the page loads) directs the client to assemble all of the analytics data--e.g., cookies, location bar, request headers, etc.--concatenate it into a single string and append it as a query string to a URL (<strong>*http://www.google-analytics.com/__utm.gif*</strong>?) and that becomes the <em>Request URL</em>. </p>\n\n<p>It's easy to prove this using any web browser that has allows you to view the HTTP Request for the web page displayed in your browser (e.g., Safari's <em>Web Inspector</em>, Firefox/Chrome <em>Firebug</em>, etc.).</p>\n\n<p>For instance, i typed in valid url to a corporate home page into my browser's location bar, which returned that home page and displayed it in my browser (i could have chosen any web site/page that uses one of the major analytics apps, GA, Omniture, Coremetrics, etc.)</p>\n\n<p>The browser i used was Safari, so i clicked <em>Develop</em> in the menu bar then <em>Show Web Inspector</em>. On the top row of the Web Inspector, click <em>Resources</em>, find and click the utm.gif resource from the list of resources shown on the left-hand column, then click the <em>Headers</em> tab. That will show you something like this:</p>\n\n<pre><code>Request URL:http://www.google-analytics.com/__utm.gif?\n           utmwv=1&amp;utmn=1520570865&amp;\n           utmcs=UTF-8&amp;\n           utmsr=1280x800&amp;\n           utmsc=24-bit&amp;\n           utmul=enus&amp;\n           utmje=1&amp;\n           utmfl=10.3%20r181&amp;\n\nRequest Method:GET\nStatus Code:200 OK\n\nRequest Headers\n    User-Agent:Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/533.21.1 \n                 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1\n\nResponse Headers\n    Cache-Control:private, no-cache, no-cache=Set-Cookie, proxy-revalidate\n    Content-Length:35\n    Content-Type:image/gif\n    Date:Wed, 06 Jul 2011 21:31:28 GMT\n</code></pre>\n\n<p>The key points to notice are:</p>\n\n<ol>\n<li><p>The Request was in fact a request\nfor the utm.gif, as evidenced by the\nfirst line above: *Request\nURL:http://www.google-analytics.com/__utm.gif*.</p></li>\n<li><p><em>The Google Analytics parameters are clearly visible in the query string\nappended to the Request URL</em>: e.g.,\n<em>utmsr</em> is GA's variable name to refer to the client screen\nresolution, for me, shows a value of\n1280x800; <em>utmfl</em> is the variable\nname for flash version, which has a\nvalue of 10.3, etc.</p></li>\n<li><p>The <em>Response Header</em> called\n<em>Content-Type</em> (sent by the server back to the client) also confirms\nthat the resource requested and\nreturned was a 1x1 pixel gif: \n<strong><em>Content-Type:image/gif</em></strong></p></li>\n</ol>\n\n<p>This general scheme for transferring data between a client and a server has been around forever; there could very well be a better way of doing this, but it's the only way i know of (that satisfies the constraints imposed by a hosted analytics service).</p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>Doug's answer is pretty comprehensive; I thought I'd add in an additional note (at the OP's request, off of my comment)</p>\n\n<p>Doug's answer explains why 1x1 pixel beacons are used for the purpose they are used for; I thought I'd outline a potential alternative approach, which is to use HTTP Status Code 204, No Content, for a response, and not send an image body. </p>\n\n<blockquote>\n  <p><strong>204 No Content</strong></p>\n  \n  <p>The server has fulfilled the request\n  but does not need to return an\n  entity-body, and might want to return\n  updated metainformation. The response\n  MAY include new or updated\n  metainformation in the form of\n  entity-headers, which if present\n  SHOULD be associated with the\n  requested variant.</p>\n</blockquote>\n\n<p>Basically, the server receives the request, and decides to not send a body (in this case, to not send an image). But it replies with a code to inform the agent that this was a conscious decision; basically, its just a shorter way to respond affirmatively. </p>\n\n<p>From <a href=\"http://code.google.com/speed/page-speed/docs/rtt.html\">Google's Page Speed documentation</a>:</p>\n\n<blockquote>\n  <p>One popular way of recording page\n  views in an asynchronous fashion is to\n  include a JavaScript snippet at the\n  bottom of the target page (or as an\n  onload event handler), that notifies a\n  logging server when a user loads the\n  page. The most common way of doing\n  this is to construct a request to the\n  server for a \"beacon\", and encode all\n  the data of interest as parameters in\n  the URL for the beacon resource. To\n  keep the HTTP response very small, a \n  transparent 1x1-pixel image is a good\n  candidate for a beacon request. A\n  slightly more optimal beacon would use\n  an HTTP 204 response (\"no content\")\n  which is marginally smaller than a 1x1\n  GIF.</p>\n</blockquote>\n\n<p>I've never tried it, but in theory it should serve the same purpose without requiring the gif itself to be transmitted, saving you 35 bytes, in the case of Google Analytics. (In the scheme of things, unless you're Google Analytics serving many trillions of hits per day, 35 bytes is really nothing.)</p>\n\n<p>You can test it with this code:</p>\n\n<pre><code>var i = new Image(); \ni.src = \"http://httpstat.us/204\";\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>This is to answer the OP's question - \"why to serve GIF image data...\"</p>\n\n<p>Some users will put a simple <strong>img</strong> tag to call your event logging service -</p>\n\n<pre><code>&lt;img src=\"http://www.example.com/logger?event_id=1234\"&gt;\n</code></pre>\n\n<p>In this case, if you don't serve an image, the browser will show a placeholder icon that will look ugly and give the impression that your service is broken!</p>\n\n<p>What I do is, look for the <strong>Accept</strong> header field. When your script is called via an <strong>img</strong> tag like this, you will see something like following in the header of the request -</p>\n\n<pre><code>Accept: image/gif, image/*\nAccept-Encoding:gzip,deflate\n...\n</code></pre>\n\n<p>When there is <em>\"image/</em>\"* string in the <strong>Accept</strong> header field, I supply the image, otherwise I just reply with 204.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Well the major reason is to attach the cookie to it so if users go from one side to another we still have the same element to attach cookie to.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Many analytic and tracking tools are requesting 1x1 GIF image (web bug, invisible for the user) for cross-domain event storing/processing.</p>\n\n<p><b>Why to serve this GIF image at all?</b> Wouldn't it be <b>more efficient</b> to simply return some error code such as <em>503 Service Temporary Unavailable</em> or empty file?</p>\n\n<p><em>Update:</em> To be more clear, I'm asking why to serve GIF image data when all information required <b>has been already sent</b> in request headers. The GIF image itself does not return any useful information.</p>\n",
            "last_activity_date": 1417789071,
            "question_id": 6638504,
            "score": 54,
            "tags": [
                "javascript",
                "html",
                "google-analytics"
            ],
            "title": "Why serve 1x1 pixel GIF (web bugs) data at all?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>All it's doing is pushing data into a global array</p>\n\n<pre><code>var _qaq = _qaq || [];\n_qaq.push(stuff);\n</code></pre>\n\n<p>It basically allows you to buffer up data to deal with before the library has loaded. </p>\n\n<p>The main reason this pattern isn't used much is that other libraries generally need the resources to load before they can do anything. It wouldn't make any sense to start buffering jQuery commands. </p>\n\n<p>It's not a pattern it's simply storing data in global scope and saying it's some-one elses job to process this, I don't care when you process it. </p>\n\n<p>However it is a clever way to deal with the fact you don't know when something is loaded or ready, the common alternative is a DOMReady block.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've referred to it as \"asynchronous function queuing\", but its not quite a catchy name, and certainly not the formal name of the design pattern.</p>\n\n<p>What's interesting is that, though I hadn't seen this particular pattern used before, since Google adopted it for Google Analytics, its been adopted widely by different platforms looking to nab the asynchronous juice (Disqus comes to mind.)</p>\n\n<p>This <a href=\"http://mrcoles.com/blog/google-analytics-asynchronous-tracking-how-it-work/\">blog post</a> is the most in-depth examination of the async Google Analytics syntax I've read, and includes a fairly detailed explanation of how the one can replicate the pattern:</p>\n\n<p>From the blog post:</p>\n\n<pre><code>var GoogleAnalyticsQueue = function () {\n\n    this.push = function () {\n        for (var i = 0; i &lt; arguments.length; i++) try {\n            if (typeof arguments[i] === \"function\") arguments[i]();\n            else {\n                // get tracker function from arguments[i][0]\n                // get tracker function arguments from arguments[i].slice(1)\n                // call it!  trackers[arguments[i][0]].apply(trackers, arguments[i].slice(1));\n            }\n        } catch (e) {}\n    }\n\n    // more code here\u2026\n};\n\n// get the existing _gaq array\nvar _old_gaq = window._gaq;\n\n// create a new _gaq object\nwindow._gaq = new GoogleAnalyticsQueue();\n\n// execute all of the queued up events - apply() turns the array entries into individual arguments\nwindow._gaq.push.apply(window._gaq, _old_gaq);\n</code></pre>\n\n<p>It also notes that, even though not many browsers support the <code>async</code> attribute, the method of injection used makes the script load asynchronously in most browsers, and includes a helpful chart:</p>\n\n<p><img src=\"http://i.stack.imgur.com/f60px.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>A good writeup of javascript loading stratgies is available here\n<a href=\"http://friendlybit.com/js/lazy-loading-asyncronous-javascript/\" rel=\"nofollow\">http://friendlybit.com/js/lazy-loading-asyncronous-javascript/</a></p>\n\n<p>And as far as I recall, ga.js async syntax has been inspired by <a href=\"http://www.stevesouders.com/\" rel=\"nofollow\">Steve Souders</a>. You can look at <a href=\"http://www.stevesouders.com/blog/2010/12/15/controljs-part-1/\" rel=\"nofollow\">ControlJS</a> , one of his projects</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p><a href=\"http://code.google.com/apis/analytics/docs/tracking/asyncUsageGuide.html\">Google Analytics async</a> code uses a very distinct design pattern for javascript code execution.</p>\n\n<p>The code depends on a library and it doesn't know if the library has loaded or not. If the library didn't load yet it just queues all the commands into an Array object. When the library loads it just creates the _gaq object and executes all commands in the sequence it was included. It then overwrites the push function so future commands are executed right away. </p>\n\n<p>The idea is to make the commands run very fast when they are queued. The code is only really evaluated later when the library is loaded.</p>\n\n<p>They also load the library with a parameters <code>async=true</code>. This causes almost no impact on the actual page loading time.</p>\n\n<p>The commands look just like the sync versions of it, but the first string is a function name and the next parameters are that function parameters. You can also push functions into this array and the functions will be executed in sequence as well with a null context. So if you need to do something synchronous with the library you can push a function to do this inside _gaq.</p>\n\n<p>I think this is a very clever solution but I have never seen it before. Does anyone know the name of this design pattern or where it's used besides the Google Analytics tracking code?</p>\n",
            "last_activity_date": 1400681688,
            "question_id": 6963779,
            "score": 35,
            "tags": [
                "javascript",
                "design-patterns",
                "google-analytics",
                "javascript-library"
            ],
            "title": "What&#39;s the name of Google Analytics async design pattern and where is it used?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Calling <a href=\"https://developer.mozilla.org/en/window.setTimeout\"><code>window.setTimeout(function, delay)</code></a> will allow you to accomplish this. Here's an example that will automatically close the alert 2 seconds (or 2000 milliseconds) after it is displayed.</p>\n\n<pre><code>$(\".alert-message\").alert();\nwindow.setTimeout(function() { $(\".alert-message\").alert('close'); }, 2000);\n</code></pre>\n\n<p>If you want to wrap it in a nifty function you could do this.</p>\n\n<pre><code>function createAutoClosingAlert(selector, delay) {\n   var alert = $(selector).alert();\n   window.setTimeout(function() { alert.alert('close') }, delay);\n}\n</code></pre>\n\n<p>Then you could use it like so...</p>\n\n<pre><code>createAutoClosingAlert(\".alert-message\", 2000);\n</code></pre>\n\n<p>I am certain there are more elegant ways to accomplish this.</p>\n",
                    "is_accepted": true,
                    "score": 75
                },
                {
                    "body": "<p>It seems that it's broken. I've reported the issue with a test-case here: <a href=\"https://github.com/twitter/bootstrap/issues/366\" rel=\"nofollow\">https://github.com/twitter/bootstrap/issues/366</a></p>\n\n<p>You can view my code here: <a href=\"http://jsdo.it/rfkrocktk/bRrV\" rel=\"nofollow\">http://jsdo.it/rfkrocktk/bRrV</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I could not get it to work with alert.('close') either.</p>\n\n<p>However I am using this and it works a treat! The alert will fade away after 5 seconds, and once gone, the content below it will slide up to its natural position.</p>\n\n<pre><code>window.setTimeout(function() {\n    $(\".alert-message\").fadeTo(500, 0).slideUp(500, function(){\n        $(this).remove(); \n    });\n}, 5000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 58
                },
                {
                    "body": "<p>I implemented a Javascript library that has what you ask as a feature: \n<a href=\"https://gist.github.com/1569896\" rel=\"nofollow\">https://gist.github.com/1569896</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I had this same issue when trying to handle popping alerts and fading them. I searched around various places and found this to be my solution. Adding and removing the 'in' class fixed my issue.</p>\n\n<pre><code>window.setTimeout(function() { // hide alert message\n    $(\"#alert_message\").removeClass('in'); \n\n}, 5000);\n</code></pre>\n\n<p>When using .remove() and similarly the .alert('close') solution I seemed to hit an issue with the alert being removed from the document, so if I wanted to use the same alert div again I was unable to. This solution means the alert is reusable without refreshing the page. (I was using aJax to submit a form and present feedback to the user) </p>\n\n<pre><code>    $('#Some_Button_Or_Event_Here').click(function () { // Show alert message\n        $('#alert_message').addClass('in'); \n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is the coffescript version:</p>\n\n<pre><code>setTimeout -&gt;\n $(\".alert-dismissable\").fadeTo(500, 0).slideUp(500, -&gt; $(this.remove()))\n,5000\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Using the 'close' action on the alert does not work for me, because it removes the alert from the DOM and I need the alert multiple times (I'm posting data with ajax and I show a message to the user on every post).\nSo I created this function that create the alert every time I need it and then starts a timer to close the created alert. I pass into the function the id of the container to which I want to append the alert, the type of alert ('success', 'danger', etc.) and the message.\nHere is my code:</p>\n\n<pre><code>function showAlert(containerId, alertType, message) {\n    $(\"#\" + containerId).append('&lt;div class=\"alert alert-' + alertType + '\" id=\"alert' + containerId + '\"&gt;' + message + '&lt;/div&gt;');\n    $(\"#alert\" + containerId).alert();\n    window.setTimeout(function () { $(\"#alert\" + containerId).alert('close'); }, 2000);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm using twitter's bootstrap CSS framework (which is fantastic).  For some messages to users I am displaying them using the alerts Javascript JS and CSS. </p>\n\n<p>For those interested, it can be found here: <a href=\"http://getbootstrap.com/javascript/#alerts\">http://getbootstrap.com/javascript/#alerts</a></p>\n\n<p>My issue is this; after I've displayed an alert to a user I'd like it to just go away after some time interval.  Based on twitter's docs and the code I've looked through it looks like this is not baked in:</p>\n\n<ul>\n<li>My first question is a request for confirmation that this is indeed NOT baked into Bootstrap</li>\n<li>Secondly, how can I achieve this behavior? </li>\n</ul>\n",
            "last_activity_date": 1395493416,
            "question_id": 7643308,
            "score": 60,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "alertdialog",
                "twitter-bootstrap"
            ],
            "title": "How to Automatically Close Alerts using Twitter Bootstrap"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I'm not sure it's entirely possible with just JavaScript, but if you can set up a dedicated PHP script for your extension that uses cURL to fetch the HTML for a page, the PHP script could scrape the page for you and your extension could read it in through an AJAX request.</p>\n\n<p>The actual page being scraped wouldn't know it's an AJAX request, however, because it is being accessed through cURL.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>couldn't you just do some iframe trickery? if you load the url into a dedicated frame, you have the dom in a document object and can do your jquery selections, no?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Attempt to use <a href=\"http://www.w3.org/TR/XMLHttpRequest2/#the-responsetype-attribute\" rel=\"nofollow\">XHR2</a> <code>responseType = \"document\"</code> and fall back on <code>(new DOMParser).parseFromString(responseText, getResponseHeader(\"Content-Type\"))</code> with <a href=\"https://gist.github.com/1129031\" rel=\"nofollow\">my <code>text/html</code> patch</a>. See <a href=\"https://gist.github.com/1138724\" rel=\"nofollow\">https://gist.github.com/1138724</a> for an example of how I detect <code>responseType = \"document</code> support (synchronously checking <code>response === null</code> on an object URL created from a <code>text/html</code> blob).</p>\n\n<p>Use the <a href=\"https://developer.chrome.com/extensions/webRequest\" rel=\"nofollow\">Chrome WebRequest API</a> to hide <code>X-Requested-With</code>, etc. headers.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If you are fine looking at something beyond a Google Chrome Plugin, look at <a href=\"http://www.phantomjs.org\">phantomjs</a> which uses Qt-Webkit in background and runs just like a browser incuding making ajax requests. You can call it a headless browser as it doesn't display the output on a screen and can quitely work in background while you are doing other stuff. If you want, you can export out images, pdf out of the pages it fetches. It provides JS interface to load pages, clicking on buttons etc much like you have in a browser. You can also inject custom JS for example jQuery on any of the pages you want to scrape and use it to access the dom and export out desired data. As its using <a href=\"http://www.webkit.org\">Webkit</a> its rendering behaviour is exactly like Google Chrome.</p>\n\n<p>Another option would be to use Aptana <a href=\"http://www.jaxer.org\">Jaxer</a> which is based on Mozilla Engine and is very good concept in itself. It can be used as a simple scraping tool as well.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Web scraping is kind of convoluted in a Chrome Extension. Some points:</p>\n\n<ul>\n<li>You run content scripts for access to the DOM.</li>\n<li>Background pages (one per browser) can send and receive <a href=\"http://code.google.com/chrome/extensions/messaging.html\" rel=\"nofollow\">messages</a> to content scripts. That is, you can run a content script that sets up an RPC endpoint and fires a specified callback in the context of the background page as a response.</li>\n<li>You can execute content scripts in all frames of a webpage, then stitch the document tree (composed of the 1..N frames that the page contains) together.</li>\n<li>As S.K. suggested, your background page can send the data as an XMLHttpRequest to some kind of lightweight HTTP server that listens locally. </li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I think you can start from this <a href=\"http://www.firebreath.org/display/documentation/Making+HTTP+Requests+with+SimpleStreamsHelper\" rel=\"nofollow\">example</a>.</p>\n\n<p>So basically you can try using Extension + Plugin combination. Extension would have access to DOM (including plugin) and drive the process. And Plugin would send actual HTTP requests.</p>\n\n<p>I can recommend using Firebreath as a crossplatform Chrome/Firefox plugin platform, in particular take a look at this example: <a href=\"http://www.firebreath.org/display/documentation/Making+HTTP+Requests+with+SimpleStreamsHelper\" rel=\"nofollow\">Firebreath  - Making+HTTP+Requests+with+SimpleStreamsHelper</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A lot of tools have been released since this question was asked.</p>\n\n<p><a href=\"http://medialab.github.io/artoo/\" rel=\"nofollow\">artoo.js</a> is one of them. It's a piece of JavaScript code meant to be run in your browser's console to provide you with some scraping utilities. It can also be used as a chrome extension.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What are the best options for performing a <strong>Web Scraping from within a Google Chrome Extension</strong> with JavaScript and whatever more technologies are available. <strong>Other JavaScript-libraries are also accepted.</strong></p>\n\n<p><strong>The important thing is to mask the scraping to behave like a normal web-request</strong>. No indications of AJAX or XMLHttpRequest, like <code>X-Requested-With: XMLHttpRequest</code> or <code>Origin</code>.</p>\n\n<p>The scraped content must be accessible from JavaScript for further manipulation and presentation within the extension, most probably as a string.</p>\n\n<p>Are there any hooks in any WebKit/Chrome-specific API:s that can be used to make a normal web-request and get the results for manipulation?</p>\n\n<pre><code>var pageContent = getPageContent(url); // TODO: Implement\nvar items = $(pageContent).find('.item');\n// Display items with further selections\n</code></pre>\n\n<p><em><strong>Bonus-points to make this work from a local file on disk</em></strong>, for initial debugging. But if that is the only point is stopping a solution, then disregard the bonus-points.</p>\n",
            "last_activity_date": 1417090492,
            "question_id": 6508393,
            "score": 49,
            "tags": [
                "javascript",
                "google-chrome",
                "google-chrome-extension",
                "xmlhttprequest",
                "web-scraping"
            ],
            "title": "Web Scraping in a Google Chrome Extension (JavaScript + Chrome APIs)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>1) It usually does make some sense to make <code>saas/less</code> files public as you may want to use client-side less->css conversion when debugging (less.js does that). Not sure what your <code>_site</code> contains however <em>(btw you should use lowercase folder for your project, especially for the public stuff)</em>.</p>\n\n<p>2) It is usually a good practice to load AngularJS from Google CDN when in production, using only a local version for development, you could have two separate layouts depending on your environment.</p>\n\n<p>3) Even if client-side rendering is the way to go, you may keep server side layout/views rendering, you will probably need it at some point (admin access, email rendering, etc.). However It can be helpful to use the <code>partials</code> name from AngularJS in the public folder to help avoid confusion between server-side <code>views</code> &amp; client-side <code>partials</code>.</p>\n\n<p>You should clearly go for what seems the most logical thing to do at the current time, you will probably move things around as you get familiar with express.</p>\n\n<hr>\n\n<p>You should check existing express framework to see how they structure their app. For instance, <a href=\"http://towerjs.org/\">TowerJS</a> has a pretty clean <code>config</code> folder, however they mix up server-side &amp; client-side code which I personally do not like.</p>\n\n<p>Check this comparaison of <a href=\"http://ocdevel.com/blog/nodejs-frameworks-comparison\">NodeJS MVC frameworks</a> to see how others do stuff. However, I would clearly start with vanilla express code in order to be in full control &amp; to understand how things work before over-committing on any of theses frameworks.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>As suggested it mostly comes down to personal preference and what works for the project you are working on at the time. Everyone you speak to you will have different ideas, and each project has it's own design - what works for one may not work for the other. I expect you'll try quite a few different structures and will soon find one that is the most comfortable - but this will still evolve over time.</p>\n\n<p>I've found the Angular Seed structure to be the cleanest, but again that's personal preference (though, it helps that it's designed by the Angular team.)</p>\n\n<p>You might also consider looking at <a href=\"http://yeoman.io\" rel=\"nofollow\">Yeoman</a> for generating project skeletons.</p>\n\n<blockquote>\n  <p><em>Yeoman is a robust and opinionated set of tools, libraries, and a\n  workflow that can help developers quickly build beautiful, compelling\n  web apps.</em></p>\n</blockquote>\n\n<p>It's a great tool for bootstrapping and managing projects (similar to the way Rails does) and will create a directory structure and skeleton files for you to build upon. Brian Ford wrote an <a href=\"http://briantford.com/blog/angular-yeoman.html\" rel=\"nofollow\">excellent post</a> on using Yeoman with Angular.</p>\n\n<p>I also suggest watching the Angular meetup recordings on their YouTube channel. I recently attended a meetup in Mountain View where these questions came up. Mi\u0161ko recommended Angular Seed and Yeoman (at least as a good starting point.)</p>\n\n<p>To answer your individual questions:</p>\n\n<ol>\n<li><p>Any files that are compiled server-side should be kept outside of\nyour public folder. I would suggest not keeping the likes of master\nPSDs, mockups, or any other files that are not meant for public\nconsumption (either by browser or user) inside public folders.   </p></li>\n<li><p>It is always good to serve static assets (JS, images, CSS) from a\nCDN if you expect a high amount of traffic. It's not so important\nfor lesser visited sites, but still a good idea. I would start by\nserving the files locally for initial development. Leave the asset\noptimization for when you are nearing your live date. When this\ntime does come you'll also want to get your caching set up right.\nYeoman, for example, presents a good way of versioning your assets.\nThis gives you the advantage of long lived caches but allowing you\nto push updates of the files to the clients.</p></li>\n<li><p>If you're index file doesn't require any server-side rendering,\nserve it statically. I like to keep my backend decoupled from the\nbackend as much as possible with Angular apps. It helps maintain\nseparation of concern; when developing the client files, you don't\nneed to think about the backend at all (Angular is great for this.)</p></li>\n</ol>\n\n<p>Really, you just need to play around; try different things out, read blog posts, get ideas from others, ask questions (as you have done here, and on the Angular Google+ community page), watch videos and, if you can, attend meetups - Meetups really are great for this.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I think this is an excellent question.</p>\n\n<h1>Option 1, MEAN.io</h1>\n\n<p>MEAN is an awesome acronym!  I recently edited this answer to prefer the MEAN stack directory structure.  Let's use convention people!  Just use the dir structure from <a href=\"http://mean.io\">mean.io</a>.  MEAN is handy too b/c it throws in all the goodies like grunt, bower, etc.</p>\n\n<p><img src=\"http://i.stack.imgur.com/gITXI.png\" alt=\"enter image description here\"></p>\n\n<h1>Option 2, Angular-seed + Express</h1>\n\n<p>I've searched github for node/angular projects (probably not hard enough) and not seen anything really great for a starting directory structure.  So what I've done is merged the node express (Running <a href=\"http://expressjs.com/guide.html\">express from the command line</a> using neither ejs nor jade) skeleton with the angular-seed project (<a href=\"https://github.com/angular/angular-seed.git\">clone it from gitub</a>).  Then I moved a ton of stuff around.  Here's what I came up with:</p>\n\n<hr>\n\n<ul>\n<li><code>developer</code> - Stuff only the developer(s) will use.  Does not need to be deployed.\n<ul>\n<li><code>config</code> - karma config files and others.</li>\n<li><code>scripts</code> - developer scripts (build/test/deploy)</li>\n<li><code>test</code> - e2e and unit tests.</li>\n</ul></li>\n<li><code>logs</code></li>\n<li><code>node_modules</code> - a separate SO question recommended to put this in git</li>\n<li><code>public</code> - This comes almost straight from the angular-seed app folder.\n<ul>\n<li><code>css</code>, <code>img</code>, <code>js</code>, <code>lib</code>, <code>partials</code> - pretty obvious and nice and short.</li>\n</ul></li>\n<li><code>routes</code> - node routes.</li>\n<li><code>server</code> - server side \"shebang\" node progams, daemons, cron programs, whatever.</li>\n<li><code>server.js</code> - renamed from app.js just to make it more obvious this is server side.</li>\n</ul>\n\n<hr>\n\n<p><img src=\"http://i.stack.imgur.com/nuPjo.png\" alt=\"enter image description here\"></p>\n\n<hr>\n\n<p>If you have any suggestions or better ideas, please leave a comment.  Thanks!</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>Ethan Garofolo in his nodecasts suggests a convenient solution for structuring a nodejs app <a href=\"http://www.learnallthenodes.com/episodes/8-how-to-structure-a-node-app\" rel=\"nofollow\">http://www.learnallthenodes.com/episodes/8-how-to-structure-a-node-app</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm about to attempt my first Angular JS project and it makes sense to use Node JS for the back end, even though it means learning both Angular and Node from scratch at the same time.</p>\n\n<p>The first thing I'm trying to get my head round is a good file structure. So far my Pure HTML/CSS template has the following directory structure....</p>\n\n<pre><code>_site/\nFonts/\nJavascript/\nSASS/\nStylesheets/\nIndex.html\n</code></pre>\n\n<p>( _site is a working directory for PSDs etc)</p>\n\n<p>I found an example directory structure for a Node/Angular app <a href=\"https://github.com/btford/angular-express-seed\" rel=\"nofollow\">here</a>....</p>\n\n<p>... which suggests the following directory structure</p>\n\n<pre><code>app.js              --&gt; app config\npackage.json        --&gt; for npm\npublic/             --&gt; all of the files to be used in on the client side\n  css/              --&gt; css files\n    app.css         --&gt; default stylesheet\n  img/              --&gt; image files\n  js/               --&gt; javascript files\n    app.js          --&gt; declare top-level app module\n    controllers.js  --&gt; application controllers\n    directives.js   --&gt; custom angular directives\n    filters.js      --&gt; custom angular filters\n    services.js     --&gt; custom angular services\n    lib/            --&gt; angular and 3rd party JavaScript libraries\n      angular/\n        angular.js            --&gt; the latest angular js\n        angular.min.js        --&gt; the latest minified angular js\n        angular-*.js          --&gt; angular add-on modules\n        version.txt           --&gt; version number\nroutes/\n  api.js            --&gt; route for serving JSON\n  index.js          --&gt; route for serving HTML pages and partials\nviews/\n  index.jade        --&gt; main page for app\n  layout.jade       --&gt; doctype, title, head boilerplate\n  partials/         --&gt; angular view partials (partial jade templates)\n    partial1.jade\n    partial2.jade\n</code></pre>\n\n<p>So, this looks quite good to me (except for the fact that I wouldn't use Jade)</p>\n\n<p>I still have the following questions...</p>\n\n<p>1) I want to keep all front-end and back-end files separate. This solution puts all the front-end files in the public/ directory which kind of makes sense because most need to be public, but does it make sense to put the SASS and _site folders here? I could just keep them there but not upload them when I put them into production but it seems wrong because they shouldn't be public. They also don't belong at root level with all the Back-end stuff.</p>\n\n<p>2) Wouldn't it be better to load Angular from a CDN?</p>\n\n<p>3) Given that the server will only need to deliver one template (the main app template) and all other HTML will be constructed on the front-end wouldn't it make more sense to keep the index.html file static, delete the views folder and create a partials/ folder under public/ like the original Angular Seed app does ?</p>\n\n<p>I realize that this is all a matter of opinion and I could technically put them wherever I want but I'm hoping somebody more experienced than me could advise me of the pitfalls of various directory structures.</p>\n\n<p>As you can tell, I'm new to this. Any help would really be appreciated.</p>\n",
            "last_activity_date": 1424964332,
            "question_id": 13998793,
            "score": 45,
            "tags": [
                "javascript",
                "node.js",
                "angularjs",
                "javascript-framework"
            ],
            "title": "Structuring a NodeJS and Angular JS app"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>They do pretty much work the same way. Here's more information about the PHP implementation: <a href=\"http://php.net/manual/en/functions.anonymous.php\" rel=\"nofollow\">http://php.net/manual/en/functions.anonymous.php</a></p>\n\n<p>You can use a closure (in PHP called 'anonymous function') as a callback:</p>\n\n<pre><code>// return array of ids\nreturn array_map( function( $a ) { return $a['item_id']; }, $items_arr );\n</code></pre>\n\n<p>and assign it to a variable:</p>\n\n<pre><code>$greet = function( $string ) { echo 'Hello ' . $string; }; // note the ; !\necho $greet('Rijk'); // \"Hello Rijk\"\n</code></pre>\n\n<p>Furthermore, anonymous function 'inherit' the scope in which they were defined - just as the JS implementation, <strong>with one gotcha</strong>: you have to list all variables you want to inherit in a <code>use()</code>:</p>\n\n<pre><code>function normalFunction( $parameter ) {\n    $anonymous = function() use( $parameter ) { /* ... */ };\n}\n</code></pre>\n\n<p>and as a reference if you want to modify the orignal variable.</p>\n\n<pre><code>function normalFunction( $parameter ) {\n    $anonymous = function() use( &amp;$parameter ) { $parameter ++ };\n    $anonymous();\n    $parameter; // will be + 1\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One difference is how both cope with storing the context in which an anonymous function is executed:</p>\n\n<pre><code>// JavaScript:\nvar a = 1;\nvar f = function() {\n   console.log(a);\n};\na = 2;\nf();\n// will echo 2;\n\n// PHP\n$a = 1;\n$f = function() {\n    echo $a;\n};\n$a = 2;\n$f();\n// will result in a \"PHP Notice:  Undefined variable: a in Untitled.php on line 5\"\n</code></pre>\n\n<p>To fix this notice you'll have to use the <code>use</code> syntax:</p>\n\n<pre><code>$a = 1;\n$f = function() use ($a) {\n    echo $a;\n};\n$a = 2;\n$f();\n// but this will echo 1 instead of 2 (like JavaScript)\n</code></pre>\n\n<p>To have the anonymous function behave somehow like the JavaScript counterpart you'll have to use references:</p>\n\n<pre><code>$a = 1;\n$f = function() use (&amp;$a) {\n    echo $a;\n};\n$a = 2;\n$f();\n// will echo 2\n</code></pre>\n\n<p>I think this is the most striking difference between JavaScript and PHP closures.</p>\n\n<p><strong>Second difference</strong> is that every JavaScript closure has a <code>this</code> context available which means, that you can use <code>this</code> inside the closure itself (although it's often quite complicated to figure out what <code>this</code> actually refers to) - PHP's current stable version (PHP 5.3) does not yet support <code>$this</code> inside a closure, but PHP's upcoming version (PHP 5.4) will support <code>$this</code> binding and rebinding using <code>$closure-&gt;bind($this)</code> (See the <a href=\"https://wiki.php.net/rfc/closures/object-extension?s%5B%5D=closure\">Object Extension RFC</a> for more info.)</p>\n\n<p><strong>Third difference</strong> is how both languages treat closures assigned to object properties:</p>\n\n<pre><code>// JavaScript\nvar a = {\n    b: function() {}\n};\na.b(); // works\n\n\n// PHP\n$a = new stdClass();\n$a-&gt;b = function() {};\n$a-&gt;b(); // does not work \"PHP Fatal error:  Call to undefined method stdClass::b() in Untitled.php on line 4\"\n\n$f = $a-&gt;b;\n$f(); // works though\n</code></pre>\n\n<p>The same is true if closures are assigned to properties in class definitions:</p>\n\n<pre><code>class A {\n    public $b;\n\n    public function __construct() {\n        $this-&gt;b = function() {};\n    }\n\n    public function c() {\n        $this-&gt;b();\n    }\n}\n$a = new A();\n// neither\n$a-&gt;b();\n// nor\n$a-&gt;c();\n// do work\n</code></pre>\n\n<p><strong>Fourth difference:</strong> JavaScript Closures are full fledged objects, wheres in PHP they are restricted objects. For instance, PHP Closures cannot have properties of their own:</p>\n\n<pre><code>$fn = function() {};\n$fn-&gt;foo = 1;\n// -&gt; Catchable fatal error: Closure object cannot have properties\n</code></pre>\n\n<p>while in JavaScript you can do:</p>\n\n<pre><code>var fn = function() {};\nfn.foo = 1;\nfn.foo; // 1\n</code></pre>\n\n<p><strong>Fifth difference:</strong> Returned closures can be immediately called upon in Javascript:</p>\n\n<pre><code>var fn = function() { return function() { alert('Hi');}}\nfn()();    \n</code></pre>\n\n<p>Not in PHP:</p>\n\n<pre><code>$fn = function() { return function() { echo('Hi');};};\n$fn()();     // syntax error\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 101
                },
                {
                    "body": "<p>The only thing I've found in PHP (that is totally cool and really handy!) is the ability to use them as getters and setters in classes which was always a nightmare to achieve before, JavaScript can be used in the same way but they do both act almost identically from what I've seen.</p>\n\n<p>I'm not sure about the namespacing convention differences between the two but as @Rijk pointed out there is a section on the PHP website dedicated to them</p>\n\n<pre><code>&lt;?php \n    class testing {\n        private $foo = 'Hello ';\n        public $bar  = 'Bar';\n\n        #Act like a getter and setter!\n        public static $readout = function ($val = null) {\n            if (!empty($val)) {\n                testing::$readout = $val;\n            }\n            return testing::$readout;\n        }\n    }\n</code></pre>\n\n<p><strong>They are also really great for...</strong></p>\n\n<p>Looping through items with a controller rather than a new for/each loop on the page</p>\n\n<p>Great for supplying as arguments to functions/classes</p>\n\n<p><strong>Whats annoying about them is...</strong></p>\n\n<p>You can't typecast them, since they're just functions...</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>What are the differences between closures in JS and closures in PHP? Do they pretty much work the same way? Are there any caveats to be aware of when writing closures in PHP?  </p>\n",
            "last_activity_date": 1317364919,
            "question_id": 7417430,
            "score": 43,
            "tags": [
                "php",
                "javascript",
                "closures"
            ],
            "title": "Javascript closures vs PHP closures, what&#39;s the difference?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can use the Google Maps <a href=\"http://code.google.com/apis/maps/documentation/services.html#Geocoding\">Client-side Geocoder</a> to get the bounding box of the country, as in the following example: </p>\n\n<pre><code>// API version 2\nvar geocoder = new GClientGeocoder();\n\ngeocoder.getLocations(\"Russia\", function (locations) { \n\n    var north = locations.Placemark[0].ExtendedData.LatLonBox.north;\n    var south = locations.Placemark[0].ExtendedData.LatLonBox.south;\n    var east  = locations.Placemark[0].ExtendedData.LatLonBox.east;\n    var west  = locations.Placemark[0].ExtendedData.LatLonBox.west;\n\n    var bounds = new GLatLngBounds(new GLatLng(south, west), \n                                   new GLatLng(north, east));\n\n    map.setCenter(bounds.getCenter(), map.getBoundsZoomLevel(bounds));\n});\n\n// API version 3\n// ... set north, south, east and west ...\nvar bounds = new google.maps.LatLngBounds(new google.maps.LatLng(south, west), \n                                          new google.maps.LatLng(north, east));\nmap.fitBounds(bounds);\n</code></pre>\n\n<p>The screenshots below show the results of the above technique when searching for Russia and Cuba:</p>\n\n<p><img src=\"http://img94.imageshack.us/img94/4312/cubarussia.jpg\" alt=\"Zoom on Russia and Cuba\"></p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>If you don't use google maps api and just use their geocoding you can use this formula:</p>\n\n<pre><code>var url = 'http://maps.google.com/maps/geo?q=YOUR_QUERY&amp;output=json&amp;oe=utf8&amp;sensor=false&amp;key=YOUR_KEYback=geoCodeDone';\njQuery.getScript(url);\n\n\nfunction geoCodeDone(data)\n{\n    if (data.Status.code == 200)\n    {\n        lng = data.Placemark[0].Point.coordinates[0];\n        lat = data.Placemark[0].Point.coordinates[1];\n\n        var east  = data.Placemark[0].ExtendedData.LatLonBox.east;\n        var west  = data.Placemark[0].ExtendedData.LatLonBox.west;\n\n        var zoom = 11 - Math.round(Math.log(Math.abs(west-east))/Math.log(2));\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For V3 this code worked for me:</p>\n\n<pre><code>var geocoder = new google.maps.Geocoder();\n   geocoder.geocode( { 'address': address}, function(results, status) {\n      if (status == google.maps.GeocoderStatus.OK) {\n        map.setCenter(results[0].geometry.location);\n        map.fitBounds(results[0].geometry.viewport);\n      }\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>If you don't want to use the geocoder client from google, because of usage limitations you could use your own list. You can get one from this <a href=\"https://github.com/mihai-craita/countries_center_box\" rel=\"nofollow\">github repo</a>.</p>\n\n<p>Here is a code example using jQuery's getJSON function and google maps API v3:</p>\n\n<pre><code>    function initialize() {\n      // read the list of countries\n     $.getJSON('countries.json', function (countries) {\n\n         // will use the country with index 40 (Cyprus)\n         var index_country = 40;\n         var myOptions = {\n             center: new google.maps.LatLng(\n                 countries[index_country].center_lat,\n                 countries[index_country].center_lng),\n         }\n         var map = new google.maps.Map(document.getElementById(\"map_canvas\"), myOptions);\n\n         // set the bounds of the map\n         var bounds = new google.maps.LatLngBounds(\n             new google.maps.LatLng(countries[index_country].sw_lat, countries[index_country].sw_lng),\n             new google.maps.LatLng(countries[index_country].ne_lat, countries[index_country].ne_lng) );\n\n         map.fitBounds(bounds);\n     });\n }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a was of automatically setting the zoom level based on the size of the country that the map has been centered on?</p>\n\n<p>maps.google.com does exactly what I need, so, for example, if I search for Russia I get a zoom level such that Russia just fits on screen, and when I search for Cuba I get a higher zoom level so that Cuba just fits.</p>\n\n<p>Is there some way of giving the Maps Api a country location and getting an appropriate zoom level.</p>\n\n<p>If not, I guess that I would have to manually (ugh!) create my own table for this information. Or is this information freely available somewhere?</p>\n",
            "last_activity_date": 1398149700,
            "question_id": 2265055,
            "score": 22,
            "tags": [
                "javascript",
                "google-maps"
            ],
            "title": "How to get Google Maps API to set the correct zoom level for a country?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Function declarations are hoisted (moved to the top) in JavaScript. While incorrect in terms of parsing order, the code you have is semantically the same as the following since function declarations are hoisted:</p>\n\n<pre><code>function f() {\n    console.log(\"Me duplicate.\");\n}\nvar f = function() {\n    console.log(\"Me original.\");\n}\n\n\nf();\n</code></pre>\n\n<p>Which in turn, with the exception of the function's name is the same as:</p>\n\n<pre><code>var f = function() {\n    console.log(\"Me duplicate.\");\n}\nvar f = function() {\n    console.log(\"Me original.\");\n}\n\n\nf();\n</code></pre>\n\n<p>Which in turn, because of variable hoisting is the same as:</p>\n\n<pre><code>var f;\nf = function() {\n    console.log(\"Me duplicate.\");\n}\nf = function() {\n    console.log(\"Me original.\");\n}\n\nf();\n</code></pre>\n\n<p>Which explains what you're getting, you're overriding the function. More generally, multiple <code>var</code> declarations are allowed in JavaScript - <code>var x = 3; var x = 5</code> is perfectly legal. In the new ECMAScript 6 standard, <code>let</code> statements forbid this as well as normal <code>var</code> statements in ES5 strict mode.</p>\n\n<p><a href=\"http://kangax.github.io/nfe/\">This article</a> by @kangax does a fantastic job in demystifying functions in javascript</p>\n",
                    "is_accepted": true,
                    "score": 160
                },
                {
                    "body": "<p>If doesn't look like anyone answered your follow-up question so I'll answer it here, though you should generally ask follow-up questions as separate questions. </p>\n\n<p>You asked why this:</p>\n\n<pre><code>var f = new function() {\n    console.log(\"Me original.\");\n}\n\nfunction f() {\n    console.log(\"Me duplicate.\");\n}\n\nf();\n</code></pre>\n\n<p>prints out \"Me original.\" and then an error.</p>\n\n<p>What is happening here is that the <code>new</code> causes the function to be used as a constructor. So this is equivalent to the following:</p>\n\n<pre><code>function myConstructor() {\n    console.log(\"Me original.\");\n}\nvar f = new myConstructor();\n\nfunction f() {\n    console.log(\"Me duplicate.\");\n}\n\nf();\n</code></pre>\n\n<p>And thanks to the function hoisting that Benjamin explained, the above is essentially equivalent to this:</p>\n\n<pre><code>var myConstructor = function() {\n    console.log(\"Me original.\");\n};\nvar f = function() {\n    console.log(\"Me duplicate.\");\n};\n\nf = new myConstructor();\n\nf();\n</code></pre>\n\n<p>This expression:</p>\n\n<pre><code>var f = new function() {\n    console.log(\"Me original.\");\n}\n</code></pre>\n\n<p>causes a new object to be constructed and assigned to <code>f</code>, using an anonymous function as the constructor. \"Me original.\" is printed out as the constructor executes. But the object that is constructed is not itself a function, so when this eventually executes:</p>\n\n<pre><code>f();\n</code></pre>\n\n<p>you get an error, because <code>f</code> is not a function.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Forgive me if this is the wrong way to approach adding a point. I haven't been around here all the much, and would welcome constructive direction and/or criticism.</p>\n\n<p>Benjamin's answer addresses the OP's question excellently, but I'd like to add one tweak that'll give us a full tour of hoisting and its oddities.</p>\n\n<p>If we begin the original code with a call to <code>f</code>, like so:</p>\n\n<pre><code>f();\n\nvar f = function() {\n   console.log(\"Me original.\");\n};\n\nfunction f() {\n   console.log(\"Me duplicate.\");\n}\n\nf();\n</code></pre>\n\n<p>The output will then be:</p>\n\n<pre><code>Me duplicate.\nMe original.\n</code></pre>\n\n<p>The reason being that <code>var</code> and <code>function</code> statements are hoisted in slightly different ways.</p>\n\n<p>For <code>var</code> the <em>declaration</em> is moved to the top of the current scope*, but any <em>assignment</em> is not hoisted. As far as the value of the declared var goes, it's undefined until the original assignment line is reached.</p>\n\n<p>For <code>function</code><em>statements</em>, both the declaration <em>and</em> definition are hoisted. Function <em>expressions</em>, as used in the <code>var f = function() {...</code> construct, are not hoisted. </p>\n\n<p>So after hoisting, execution is as if the code were:</p>\n\n<pre><code>var f; // declares var f, but does not assign it.\n\n// name and define function f, shadowing the variable\nfunction f() { \n  console.log(\"Me duplicate.\");\n}\n\n// call the currently defined function f\nf(); \n\n// assigns the result of a function expression to the var f,\n// which shadows the hoisted function definition once past this point lexically\nf = function() { \n  console.log(\"Me original.\"); \n}\n\n// calls the function referenced by the var f\nf();\n</code></pre>\n\n<p>*All JavaScript scope is lexical, or function, scope, but it seemed like it would just confuse things to use the f word at that point. </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I wrote the following script just to see what happens when a variable and a function that has a function assigned to it have their names clash:</p>\n\n<pre><code>var f = function() {\n    console.log(\"Me original.\");\n}\n\nfunction f() {\n    console.log(\"Me duplicate.\");\n}\n\nf();\n</code></pre>\n\n<p>The output I'm getting is \"Me original.\" Why was the other function not called?</p>\n\n<p>Also, if I change my original assignment to <code>var f = new function() {</code>, I get \"Me original\", followed by a TypeError saying <code>object is not a function</code>. Can someone please explain?</p>\n",
            "last_activity_date": 1410966757,
            "question_id": 23889317,
            "score": 89,
            "tags": [
                "javascript",
                "function"
            ],
            "title": "Why are my JavaScript function names clashing?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<ul>\n<li><p><code>.load()</code> is overloaded with entirely different behavior depending on the arguments passed</p></li>\n<li><p><code>.toggle()</code> is overloaded with entirely different behavior depending on the arguments passed</p></li>\n<li><p>too much overloading of the <code>jQuery()</code> function perhaps.</p></li>\n<li><p>the <code>.attr()</code> you mentioned. The distinction from properties should have been immediate IMO.</p></li>\n<li><p><code>.map( key,val )</code> but <code>$.map( val,key )</code>, and the <code>this</code> values are different.</p></li>\n<li><p>non-standard selectors ought to have been kept out of Sizzle IMO. Javascript based selector engines should become obsolete in a number of years, and people hooked on the proprietary selectors will have a more difficult transition</p></li>\n<li><p>poor method naming of methods like <code>.closest()</code> or <code>.live()</code>. What exactly do they do?</p></li>\n<li><p>I recently discovered that you can't set the standard <code>width</code> and <code>height</code> attributes via the <code>props</code> argument when creating a new element. jQuery runs its own <code>width</code> and <code>height</code> methods instead. IMO, the spec attributes should have been given priority, especially since <code>width</code> and <code>height</code> can be set via <code>css</code>.</p></li>\n</ul>\n\n\n\n<pre><code>$('&lt;img/&gt;', { \n    css:{width:100, height:100},\n    width:100, // &lt;-- calls method, why?\n    height:100, // &lt;-- calls method, why?\n});\n</code></pre>\n\n\n\n<ul>\n<li><p><code>$.get()</code> and <code>.get()</code> are entirely different.</p></li>\n<li><p><code>.get()</code> and <code>.toArray()</code> are identical when passing no arguments</p></li>\n<li><p><code>toArray()</code> and <code>$.makeArray()</code> do effectively the same thing. Why didn't they give them the same name like <code>.each()</code> and <code>$.each()</code>?</p></li>\n<li><p>two different <em>event delegation</em> methods. <code>.delegate()</code> the sensible one, and <code>.live()</code> the magical <em>\"wow, it just works!\"</em> one.</p></li>\n<li><p><code>.index()</code> is overloaded with 3 behaviors, but their differences can be confusing</p></li>\n</ul>\n\n\n\n<pre><code> // v---get index   v---from collection (siblings is implied)\n$('selector').index();\n // v---from collection   v---get index\n$('selector').index(element);\n // v---get index      v---from collection\n$('selector').index('selector');\n</code></pre>\n\n<p>The first one is understandable if you remember that it only operates on the first element</p>\n\n<p>The second one makes the most sense since jQuery methods <em>usually</em> operate on an entire collection.</p>\n\n<p>The third one is entirely confusing. The method gives no indication of which selector is the collection and which selector represents the element whose index you want from the collection.</p>\n\n<p>Why not just eliminate the third one, and have people use the second one like this:</p>\n\n<pre><code> // v---from collection      v---get index\n$('selector').index( $('selector') );\n</code></pre>\n\n<p>This way it fits more closely with the rest of jQuery where <code>.index()</code> operates on the entire collection.</p>\n\n<p>Or at least reverse the meaning of the selectors to fit in better:</p>\n\n<pre><code> // v---from collection   v---get index\n$('selector').index('selector');\n</code></pre>\n\n<hr>\n\n<p>Here's another to think about anyway.</p>\n\n<p>I have some concerns with jQuery's event handling/data storage system. It is praised because it doesn't add functions to <code>on[event]</code> properties that can close around other elements, creating memory leaks in IE. Instead it places a lightweight expando property, which maps to an entry in <code>jQuery.cache</code>, which holds handlers and other data.</p>\n\n<p>I believe it then attaches a handler with in turn invokes the handler that you assigned. Or something like that.</p>\n\n<p>Whatever the system is doesn't really matter. The point is that the connection between the element(s) and the <code>jQuery.cache</code> is that expando. </p>\n\n<p>Why is that a big deal? Well philosophically jQuery is not a framework; it is a library. It would seem that as a library you should be able to use or not use the jQuery functions without concern for negative effects. Yet if you go outside jQuery when removing elements from the DOM, you've orphaned any handlers and other data associated with those elements via the expando, creating a nice and fully cross-browser memory leak.</p>\n\n<p>So for example, something as simple as <code>el.innerHTML = ''</code> could be very dangerous.</p>\n\n<p>Couple this with the <code>jQuery.noConflict()</code> feature. This enables developers to use jQuery with other libraries that utilize the <code>$</code> global namespace. Well what if one of those libraries deletes some elements? Same problem. I have a feeling that the developer that needs to use a library like <code>Prototypejs</code> along side jQuery probably doesn't know enough JavaScript to make good design decisions, and will be subject to such a problem as I've described.</p>\n\n<hr>\n\n<p>In terms of improvements within the intended philosophy of the library, as far as I know, their philosophy is \"Do more, write less\" or something. I think they accomplish that very well. You can write some very concise yet expressive code that will do an enormous amount of work.</p>\n\n<p>While this is very good, in a way I think of it as something of a negative. You can do so much, so easily, it is very easy for beginners to write some very bad code. It would be good I think if there was a \"developer build\" that logged warnings of misuse of the library.</p>\n\n<p>A common example is running a selector in a loop. DOM selection is very easy to do, that it seems like you can just run a selector every time you need an element, even if you just ran that selector. An improvement I think would be for the <code>jQuery()</code> function to log repeated uses of a selector, and give a console note that a selector can be cached.</p>\n\n<p>Because jQuery is so dominant, I think it would be good if they not only made it easy to be a JavaScript/DOM programmer, but also helped you be a better one.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>The way jQuery handles collections vs single elements can be confusing.</p>\n\n<p>Say if we were to update some css property on a collection of elements, we could write,</p>\n\n<pre><code>$('p').css('background-color', 'blue');\n</code></pre>\n\n<p>The setter will update the background color of all matching elements. The getter, however, assumes that you are only interested in retrieving the value of the first element.</p>\n\n<pre><code>$('p').css('background-color')\n</code></pre>\n\n<p>MooTools would return an array containing the background colors of each matching element, which seems more intuitive.</p>\n\n<p>The <em>naming conventions</em> for jQuery promote conciseness instead of clarity. I like Apple's strategy in naming things:</p>\n\n<blockquote>\n  <p>It's better to be clear than brief.</p>\n</blockquote>\n\n<p>And here's an example of a method name from a mutable array class (<code>NSMutableArray</code>) in Objective-C.</p>\n\n<pre><code>removeObjectAtIndex:(..)\n</code></pre>\n\n<p>It's not trying to be clever about what's getting removed or where it's getting removed from. All the information you need to know is contained in the name of the method. Contrast this with most of jQuery's methods like <code>after</code> and <code>insertAfter</code>.</p>\n\n<p>If somebody can intuitively figure out what <code>after</code> or <code>insertAfter</code> does without reading the docs or the source code, then that person is a genius. Unfortunately, I'm not one - and to-date, I still have to go to the documentation to figure out what the hell gets placed where when using these two methods.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Included in jquery: </p>\n\n<pre><code>.post()\n.get()\n.getScript()\n.getJSON()\n.load()\n</code></pre>\n\n<p>Not in jQuery:</p>\n\n<pre><code>$.getXML();\n$.headXML();\n$.postXML();\n$.putXML();\n$.traceXML();\n$.deleteXML();\n$.connectXML();\n$.getJSON();\n$.headJSON();\n$.postJSON();\n$.putJSON();\n$.traceJSON();\n$.deleteJSON();\n$.connectJSON();\n$.headScript();\n$.postScript();\n$.putScript();\n$.traceScript();\n$.deleteScript();\n$.connectScript();\n$.getHTML();\n$.headHTML();\n$.postHTML();\n$.putHTML();\n$.traceHTML();\n$.deleteHTML();\n$.connectHTML();\n$.getText();\n$.headText();\n$.postText();\n$.putText();\n$.traceText();\n$.deleteText();\n$.connectText();\n$.head();\n$.put();\n$.trace();\n$.delete();\n$.connect();\n</code></pre>\n\n<p>Why does this bother me? Not because we don't have the above methods in the library, that's just dumb and I'd hate if we ever did (plus, most won't work with browsers), but what I hate is these short-hand methods all over the place: <code>$.post();</code> Sends an ajax request via post.</p>\n\n<p>Know what covers off everything in this list? The one function that isn't short-hand, <code>$.ajax</code>, it's full featured and covers off everything, you can even configure it to store defaults and in essence create all of these short-hands. You can create your own methods if you wish to call that call to ajax (which is what these all do).</p>\n\n<p>Here's where it's really REALLY annoying.</p>\n\n<p>Somebody writes all their code using shorthand:</p>\n\n<pre><code>$.getJSON(\n  'ajax/test.html', \n   function(data) {\n     $('.result').html(data);\n   }\n);\n</code></pre>\n\n<p>Okay, oh wait, we want to change that to an XML feed we get from a post, also we need to make something happen before and after post. Oh, lets just switch to the non-short-hand method</p>\n\n<pre><code>$.ajax({\n  type: 'POST',\n  url: url,\n  data: data,\n  success: success\n  dataType: dataType\n});\n</code></pre>\n\n<p>Oh wait, I can't just replace the word, the whole structure is all over the place.</p>\n\n<p>This, and especially for things like $.load(), cross lines into why PHP has such a hated API, they're trying to do things they shouldn't do.</p>\n\n<p>To extend this beyond AJAX calls, look at the animation portion. We have calls to slideUp, slideDown, fadeIn, fadeOut, fadeToggle, show, and hide. Why? Where's my slide left, slide right, slide in, slide out, teleport, and every other thing we can think up? Why not just stick to $.animate() and let someone write a plugin if we want those effects. Infact, someone did write a plugin, jQueryUI extends animations. This is just crazy, and leads to people not knowing that some effects create CSS rules on their divs that end up goofing up what they want to do later on.</p>\n\n<p>Keep it pure, keep it simple.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/users/113716/patrick-dw\">patrick dw</a> hit most of the points in his (fantastic) answer. Just to add to his collection with a few other examples.</p>\n\n<p>An API is supposed to be consistent; and jQuery succeeds in a lot of areas (being very consistent for returning a jQuery object/ get value, as expected in a lot of cases). In other situations however, it doesn't do so well.</p>\n\n<p><strong>Method Names</strong>\nAs already pointed out by patrick; <a href=\"http://api.jquery.com/closest\">closest()</a> is a crap method name. <a href=\"http://api.jquery.com/prev\">prev()</a>, and <a href=\"http://api.jquery.com/next\">next()</a> appear to most as if they do the job <a href=\"http://api.jquery.com/prevAll\">prevAll()</a> and <a href=\"http://api.jquery.com/nextAll\">nextAll()</a> actually provide.</p>\n\n<p><a href=\"http://api.jquery.com/delay\"><code>delay()</code></a> confuses a lot of people: In the following example, which do you expect to happen? (<a href=\"http://jsfiddle.net/9svb6/\">what actually happens?</a>)</p>\n\n<pre><code>$('#foo').hide().delay(2000).slideDown().text('Hello!').delay(2000).hide();\n</code></pre>\n\n<p><strong>Method Arguments</strong>\nA lot of the tree traversal functions are inconsistent with what they accept; they all accept a mixture of selectors, jQuery objects and elements, but none are consistent; which is bad considering they all do similar jobs. Check out <a href=\"http://api.jquery.com/closest\">closest()</a>, <a href=\"http://api.jquery.com/find\">find()</a>, <a href=\"http://api.jquery.com/siblings\">siblings()</a>, <a href=\"http://api.jquery.com/parents\">parents()</a>, <a href=\"http://api.jquery.com/parent\">parent()</a> and compare the differences!</p>\n\n<p>Internally, the \"core\" of jQuery originally contained lots of intertwined methods, that the dev team have struggled to split up (and done really well to), over the past releases. Internal modules such as css, attributes, manipulation and traversing all used to be bundled in the same big package.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have often heard that jQuery has made some poor API decisions. Although jQuery is not my favourite library it's the library I've used most often and I find it hard to point out specific mistakes in the API design or how it could have been improved. </p>\n\n<p>What parts of jQuery's API could have been done better, <strong>how</strong> could it have been implemented different and <strong>why</strong> would that different implementation be better?</p>\n\n<p>The question extends to both <strong>low level individual details</strong> of the API and <strong>high level details</strong> of the API. We are only talking about flaws in the API rather then flaws in the high level design / purpose of the library, jQuery is still a DOM manipulation library centred around a selector engine.</p>\n\n<p>Because of the necessity of API freezing in popular libraries, jQuery is stuck in it's current state and the developers are doing a great job. As can be seen by the recent <code>.attr</code> vs <code>.prop</code> change the developers do not have the flexibility to change any of their design decisions (which is a shame!).</p>\n\n<p>One specific example I can think of would be</p>\n\n<p><code>$.each(function(key, val) { })</code></p>\n\n<p>vs </p>\n\n<p><code>$.grep(function(val, key) { })</code></p>\n\n<p>which is confusing enough that I have to double check what the parameters are frequently.</p>\n\n<p>Please do not compare the jQuery <em>library</em> to full fledged <em>frameworks</em> like dojo and YUI and complain about lack of features.</p>\n",
            "last_activity_date": 1313222203,
            "question_id": 6063874,
            "score": 43,
            "tags": [
                "javascript",
                "jquery",
                "api",
                "design",
                "api-design"
            ],
            "title": "API design and jQuery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There is no <em>best</em> way, it depends on your use case.</p>\n\n<ul>\n<li>Use <em>way 1</em> if you want to create several similar objects. In your example, <code>Person</code> (you should start the name with a capital letter) is called the <em>constructor function</em>. This is similar to <em>classes</em> in other OO languages.</li>\n<li>Use <em>way 2</em> if you only need <em>one object</em> of a kind (like a singleton). If you want this object to inherit from another one, then you have to use a constructor function though.</li>\n<li>Use <em>way 3</em> if you want to initialize properties of the object depending on other properties of it or if you have dynamic property names.</li>\n</ul>\n\n<p><strong>Update:</strong> As requested examples for the third way.</p>\n\n<p>Dependent properties:</p>\n\n<p>The following does not work as <code>this</code> does <strong>not</strong> refer to <code>book</code>. There is no way to initialize a property with values of other properties in a object literal:</p>\n\n<pre><code>var book = {\n    price: somePrice * discount,\n    pages: 500,\n    pricePerPage: this.price / this.pages\n};\n</code></pre>\n\n<p>instead, you could could do:</p>\n\n<pre><code>var book = {\n    price: somePrice * discount,\n    pages: 500\n};\nbook.pricePerPage = book.price / book.pages;\n// or book['pricePerPage'] = book.price / book.pages;\n</code></pre>\n\n<p>Dynamic property names:</p>\n\n<p>If the property name is stored in some variable or created through some expression, then you have to use bracket notation:</p>\n\n<pre><code>var name = 'propertyName';\n\n// the property will be `name`, not `propertyName`\nvar obj = {\n    name: 42\n}; \n\n// same here\nobj.name = 42;\n\n// this works, it will set `propertyName`\nobj[name] = 42;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>There is no \"best way\" to create an object.  Each way has benefits depending on your use case.</p>\n\n<p>The constructor pattern (a function paired with the <code>new</code> operator to invoke it) provides the possibility of using prototypal inheritance, whereas the other ways don't.  So if you want prototypal inheritance, then a constructor function is a fine way to go.</p>\n\n<p>However, if you want prototypal inheritance, you may as well use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/create\" rel=\"nofollow\"><code>Object.create</code></a>, which makes the inheritance more obvious.</p>\n\n<p>Creating an object literal (ex: <code>var obj = {foo: \"bar\"};</code>) works great if you happen to have all the properties you wish to set on hand at creation time.</p>\n\n<p>For setting properties later, the <code>NewObject.property1</code> syntax is generally preferable to <code>NewObject['property1']</code> if you know the property name.  But the latter is useful when you don't actually have the property's name ahead of time (ex: <code>NewObject[someStringVar]</code>).</p>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I guess it depends on what you want. For simple objects, I guess you could use the second methods. When your objects grow larger and you're planning on using similar objects, I guess the first method would be better. That way you can also extend it using prototypes.</p>\n\n<p>Example:</p>\n\n<pre><code>function Circle(radius) {\n    this.radius = radius;\n}\nCircle.prototype.getCircumference = function() {\n    return Math.PI * 2 * this.radius;\n};\nCircle.prototype.getArea = function() {\n    return Math.PI * this.radius * this.radius;\n}\n</code></pre>\n\n<p>I am not a big fan of the third method, but it's really useful for dynamically editing properties, for example <code>var foo='bar'; var bar = someObject[foo];</code>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>So far I saw three ways for creating a object in JavaScript, which way is best for creating a object and why?</p>\n\n<p>I also saw that in all of these examples the keyword \"var\" is not used before property, why? is it not necessary to declare \"var\" before the name of a property as it mentioned that Properties are variables. </p>\n\n<p><strong>I forgot to ask one more thing:</strong></p>\n\n<p>In way2 and way3 the name of object is in uppercase where is in way1 the name of object is in lower case... what case we should use for an object name?</p>\n\n<p>way 1</p>\n\n<pre><code>function person(fname,lname,age,eyecolor)\n{\n   this.firstname=fname;\n   this.lastname=lname;\n   this.age=age;\n   this.eyecolor=eyecolor;\n}\n\nmyFather=new person(\"John\",\"Doe\",50,\"blue\");\ndocument.write(myFather.firstname + \" is \" + myFather.age + \" years old.\");\n</code></pre>\n\n<p>way 2</p>\n\n<pre><code>var Robot =\n{\n    metal: \"Titanium\",\n    killAllHumans: function()\n    {\n        alert(\"Exterminate!\");\n    }\n};\nRobot.killAllHumans();\n</code></pre>\n\n<p>way 3 (JavaScript objects using array syntax):</p>\n\n<pre><code>var NewObject = {};\nNewObject['property1'] = value;\nNewObject['property2'] = value;\nNewObject['method'] = function(){ /* function code here */ }\n</code></pre>\n",
            "last_activity_date": 1388628442,
            "question_id": 6843951,
            "score": 42,
            "tags": [
                "javascript",
                "object"
            ],
            "title": "Which way is best for creating an object in javascript? is &quot;var&quot; necessary before variable of object?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Have a look here: <a href=\"http://stackoverflow.com/questions/7480158/how-do-i-use-node-js-crypto-to-create-a-hmac-sha1-hash\">How do I use node.js Crypto to create a HMAC-SHA1 hash?</a>\nI'd create a hash of the current timestamp + a random number to ensure hash uniqueness:</p>\n\n<pre><code>var current_date = (new Date()).valueOf().toString();\nvar random = Math.random().toString();\ncrypto.createHash('sha1').update(current_date + random).digest('hex');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<h1>14,615,016,373,300,259,879,912,540,705,229x more entropy</h1>\n\n<p>I'd recommend using <a href=\"http://nodejs.org/api/crypto.html#crypto_crypto_randombytes_size_callback\">crypto.randomBytes</a>. It's not <code>sha1</code>, but for id purposes, it's quicker, and just as \"random\".</p>\n\n<pre><code>var id = crypto.randomBytes(20).toString('hex');\n//=&gt; bb5dc8842ca31d4603d6aa11448d1654\n</code></pre>\n\n<p>The resulting string will be twice as long as the random bytes you generate; each byte encoded to hex is 2 characters. 20 bytes will be 40 characters of hex.</p>\n\n<p>Using 20 bytes, we have <code>256^20</code> or <strong>1,461,501,637,330,902,918,203,684,832,716,283,019,655,932,542,976</strong> unique output values. This is <strong>identical</strong> to SHA1's 160-bit (20-byte) possible outputs.</p>\n\n<p>Knowing this, it's not really meaningful for us to <code>shasum</code> our random bytes. It's like rolling a die twice but only accepting the second roll; no matter what, you have 6 possible outcomes each roll, so the first roll is sufficient.</p>\n\n<hr>\n\n<p><strong>Why is this better?</strong></p>\n\n<p>To understand why this is better, we first have to understand how hashing functions work. Hashing functions (including SHA1) will always generate the same output if the same input is given. </p>\n\n<p>Say we want to generate IDs but our random input is generated by a coin toss. We have <code>\"heads\"</code> or <code>\"tails\"</code></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>% echo -n \"heads\" | shasum\nc25dda249cdece9d908cc33adcd16aa05e20290f  -\n\n% echo -n \"tails\" | shasum\n71ac9eed6a76a285ae035fe84a251d56ae9485a4  -\n</code></pre>\n\n<p>If <code>\"heads\"</code> comes up again, the SHA1 output will be the <strong>same</strong> as it was the first time</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>% echo -n \"heads\" | shasum\nc25dda249cdece9d908cc33adcd16aa05e20290f  -\n</code></pre>\n\n<p>Ok, so a coin toss is not a great random ID generator because we only have 2 possible outputs.</p>\n\n<p>If we use a standard 6-sided die, we have 6 possible inputs. Guess how many possible SHA1 outputs? 6!</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>input =&gt; (sha1) =&gt; output\n1 =&gt; 356a192b7913b04c54574d18c28d46e6395428ab\n2 =&gt; da4b9237bacccdf19c0760cab7aec4a8359010b0\n3 =&gt; 77de68daecd823babbb58edb1c8e14d7106e83bb\n4 =&gt; 1b6453892473a467d07372d45eb05abc2031647a\n5 =&gt; ac3478d69a3c81fa62e60f5c3696165a4e5e6ac4\n6 =&gt; c1dfd96eea8cc2b62785275bca38ac261256e278\n</code></pre>\n\n<h1>It's easy to delude ourselves by thinking just because the output of our function <em>looks</em> very random, that it <em>is</em> very random.</h1>\n\n<p>We both agree that a coin toss or a 6-sided die would make a bad random id generator, because our possible SHA1 results (the value we use for the ID) are very few. But what if we use something that has a lot more outputs? Like a timestamp with milliseconds? Or JavaScript's <code>Math.random</code>? Or even a <em>combination</em> of those two?!</p>\n\n<p>Let's compute just how many unique ids we would get ...</p>\n\n<hr>\n\n<p><strong>The uniqueness of a timestamp with milliseconds</strong></p>\n\n<p>When using <code>(new Date()).valueOf().toString()</code>, you're getting a 13-character number (e.g., <code>1375369309741</code>). However, since this a sequentially updating number (once per millisecond), the outputs are almost always the same. Let's take a look</p>\n\n<pre><code>for (var i=0; i&lt;10; i++) {\n  console.log((new Date()).valueOf().toString());\n}\nconsole.log(\"OMG so not random\");\n\n// 1375369431838\n// 1375369431839\n// 1375369431839\n// 1375369431839\n// 1375369431839\n// 1375369431839\n// 1375369431839\n// 1375369431839\n// 1375369431840\n// 1375369431840\n// OMG so not random\n</code></pre>\n\n<p>To be fair, for comparison purposes, <strong>in a given minute</strong> (a generous operation execution time), you will have <code>60*1000</code> or <code>60000</code> uniques.</p>\n\n<hr>\n\n<p><strong>The uniqueness of <code>Math.random</code></strong></p>\n\n<p>Now, when using <code>Math.random</code>, because of the way JavaScript represents 64-bit floating point numbers, you'll get a number with length anywhere between 13 and 24 characters long. A longer result means more digits which means more entropy. First, we need to find out which is the most probable length.</p>\n\n<p>The script below will determine which length is most probable. We do this by generating 1 million random numbers and incrementing a counter based on the <code>.length</code> of each number.</p>\n\n<pre><code>// get distribution\nvar counts = [], rand, len;\nfor (var i=0; i&lt;1000; i++) {\n  rand = Math.random();\n  len  = String(rand).length;\n  if (counts[len] === undefined) counts[len] = 0;\n  counts[len] += 1;\n}\n\n// calculate % frequency\nvar freq = counts.map(function(n) { return n/1000000 *100 });\n</code></pre>\n\n<p>By dividing each counter by 1 million, we get the probability of the length of number returned from <code>Math.random</code>.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>len   frequency(%)\n------------------\n13    0.0004  \n14    0.0066  \n15    0.0654  \n16    0.6768  \n17    6.6703  \n18    61.133  &lt;- highest probability\n19    28.089  &lt;- second highest probability\n20    3.0287  \n21    0.2989  \n22    0.0262\n23    0.0040\n24    0.0004\n</code></pre>\n\n<p>So, even though it's not entirely true, let's be generous and say you get a 19-character-long random output; <code>0.1234567890123456789</code>. The first characters will always be <code>0</code> and <code>.</code>, so really we're only getting 17 random characters. This leaves us with <code>10^17</code> <code>+1</code> (for possible <code>0</code>; see notes below) or <strong>100,000,000,000,000,001</strong> uniques.</p>\n\n<hr>\n\n<p><strong>So how many random inputs can we generate?</strong></p>\n\n<p>Ok, we calculated the number of results for a millisecond timestamp and <code>Math.random</code></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>                   60,000 (timestamp)\n+ 100,000,000,000,000,001 (Math.random)\n-------------------------\n  100,000,000,000,060,001\n</code></pre>\n\n<p>That's a single 100,000,000,000,060,001-sided die. Or, to make this number more humanly digestible, this is roughly the same number as rolling <strong>10x</strong> 50-sided dice. Sounds pretty good, right?</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/SHA-1\">SHA1</a> produces a 20-byte value, with a possible 256^20 outcomes. So we're really not using SHA1 to it's full potential. Well how much are we using?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>node&gt; 100000000000060001 / (Math.pow(256,20)) * 100\n</code></pre>\n\n<h1>A millisecond timestamp and Math.random uses only 6.84e-30 percent of SHA1's 160-bit potential!</h1>\n\n<pre class=\"lang-none prettyprint-override\"><code>generator               sha1 potential used\n-----------------------------------------------------------------------------\ncrypto.randomBytes(20)  100%\nDate() + Math.random()    0.00000000000000000000000000000684%\n6-sided die               0.000000000000000000000000000000000000000000000411%\nA coin                    0.000000000000000000000000000000000000000000000137%\n</code></pre>\n\n<p>Holy cats, man! Look at all those zeroes. So how much better is <code>crypto.randomBytes</code>? <strong>14,615,016,373,300,259,879,912,540,705,229</strong> times better.</p>\n\n<hr>\n\n<p><strong>Notes about the <code>+1</code> and frequency of zeroes</strong></p>\n\n<p>If you're wondering about the <code>+1</code>, it's possible for <code>Math.random</code> to return a <code>0</code> which means there's 1 more possible unique result we have to account for.</p>\n\n<p>Based on the discussion that happened below, I was curious about the frequency a <code>0</code> would come up. Here's a little script, <code>random_zero.js</code>,  I made to get some data</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>#!/usr/bin/env node\nvar count = 0;\nwhile (Math.random() !== 0) count++;\nconsole.log(count);\n</code></pre>\n\n<p>Then, I ran it in 4 threads (I have a 4-core processor), appending the output to a file</p>\n\n<pre><code>$ yes | xargs -n 1 -P 4 node random_zero.js &gt;&gt; zeroes.txt\n</code></pre>\n\n<p>So it turns out that a <code>0</code> is not that hard to get. After <a href=\"https://gist.github.com/naomik/6133223#file-zeroes-txt\">100 values</a> were recorded, the average was</p>\n\n<blockquote>\n  <p>1 in <strong>3,164,854,823</strong> randoms is a 0</p>\n</blockquote>\n\n<p>Cool! More research would be required to know if that number is on-par with a uniform distribution of v8's <code>Math.random</code> implementation</p>\n",
                    "is_accepted": false,
                    "score": 200
                },
                {
                    "body": "<h1>Do it in the browser, too !</h1>\n\n<blockquote>\n  <p>EDIT: this didn't really fit into the flow of my previous answer. I'm leaving it here as a second answer for people that might be looking to do this in the browser.</p>\n</blockquote>\n\n<p>You can do this client side in modern browsers, if you'd like</p>\n\n<pre><code>// str generateId(int len);\n//   len - must be an even number (default: 40)\nfunction generateId(len) {\n  var arr = new Uint8Array((len || 40) / 2);\n  window.crypto.getRandomValues(arr);\n  return [].map.call(arr, function(n) { return n.toString(16); }).join(\"\");\n}\n</code></pre>\n\n<p>Ok, let's check it out !</p>\n\n<pre><code>generateId();\n// \"82defcf324571e70b0521d79cce2bf3fffccd69\"\n\ngenerateId(20);\n// \"c1a050a4cd1556948d41\"\n</code></pre>\n\n<p>Browser requirements</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Browser    Minimum Version\n--------------------------\nChrome     11.0\nFirefox    21.0\nIE         11.0\nOpera      15.0\nSafari     5.1\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am using this line to generate a sha1 id for node.js:</p>\n\n<pre><code>crypto.createHash('sha1').digest('hex');\n</code></pre>\n\n<p>The problem is that it's returning the same id every time.</p>\n\n<p>Is it possible to have it generate a random id each time so I can use it as a database document id?</p>\n",
            "last_activity_date": 1413571971,
            "question_id": 9407892,
            "score": 37,
            "tags": [
                "javascript",
                "node.js",
                "random",
                "sha1",
                "entropy"
            ],
            "title": "How to generate random SHA1 hash to use as ID in node.js?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I haven't been using $resource because I'm just hand crafting my service calls for my application.  That said I've handled login by having a service which depends on all the other services that get some sort of initialization data.  When the login succeeds it triggers for initialization of all the services.</p>\n\n<p>Within my controller scope I watch the loginServiceInformation and populate some properties of the model accordingly (to trigger the appropriate ng-show/hide).  With regard to routing I'm using Angular's built in routing and I simply have an ng-hide based on the loggedIn boolean shown here, it shows text to request login or else the div with the ng-view attribute (so if not logged in immediately after login you're on the correct page, currently I load data for all views but I believe this could be more selective if necessary)</p>\n\n<pre><code>//Services\nangular.module(\"loginModule.services\", [\"gardenModule.services\",\n                                        \"surveyModule.services\",\n                                        \"userModule.services\",\n                                        \"cropModule.services\"\n                                        ]).service(\n                                            'loginService',\n                                            [   \"$http\",\n                                                \"$q\",\n                                                \"gardenService\",\n                                                \"surveyService\",\n                                                \"userService\",\n                                                \"cropService\",\n                                                function (  $http,\n                                                            $q,\n                                                            gardenService,\n                                                            surveyService,\n                                                            userService,\n                                                            cropService) {\n\n    var service = {\n        loginInformation: {loggedIn:false, username: undefined, loginAttemptFailed:false, loggedInUser: {}, loadingData:false},\n\n        getLoggedInUser:function(username, password)\n        {\n            service.loginInformation.loadingData = true;\n            var deferred = $q.defer();\n\n            $http.get(\"php/login/getLoggedInUser.php\").success(function(data){\n                service.loginInformation.loggedIn = true;\n                service.loginInformation.loginAttemptFailed = false;\n                service.loginInformation.loggedInUser = data;\n\n                gardenService.initialize();\n                surveyService.initialize();\n                userService.initialize();\n                cropService.initialize();\n\n                service.loginInformation.loadingData = false;\n\n                deferred.resolve(data);\n            }).error(function(error) {\n                service.loginInformation.loggedIn = false;\n                deferred.reject(error);\n            });\n\n            return deferred.promise;\n        },\n        login:function(username, password)\n        {\n            var deferred = $q.defer();\n\n            $http.post(\"php/login/login.php\", {username:username, password:password}).success(function(data){\n                service.loginInformation.loggedInUser = data;\n                service.loginInformation.loggedIn = true;\n                service.loginInformation.loginAttemptFailed = false;\n\n                gardenService.initialize();\n                surveyService.initialize();\n                userService.initialize();\n                cropService.initialize();\n\n                deferred.resolve(data);\n            }).error(function(error) {\n                service.loginInformation.loggedInUser = {};\n                service.loginInformation.loggedIn = false;\n                service.loginInformation.loginAttemptFailed = true;\n                deferred.reject(error);\n            });\n\n            return deferred.promise;\n        },\n        logout:function()\n        {\n            var deferred = $q.defer();\n\n            $http.post(\"php/login/logout.php\").then(function(data){\n                service.loginInformation.loggedInUser = {};\n                service.loginInformation.loggedIn = false;\n                deferred.resolve(data);\n            }, function(error) {\n                service.loginInformation.loggedInUser = {};\n                service.loginInformation.loggedIn = false;\n                deferred.reject(error);\n            });\n\n            return deferred.promise;\n        }\n    };\n    service.getLoggedInUser();\n    return service;\n}]);\n\n//Controllers\nangular.module(\"loginModule.controllers\", ['loginModule.services']).controller(\"LoginCtrl\", [\"$scope\", \"$location\", \"loginService\", function($scope, $location, loginService){\n\n    $scope.loginModel = {\n                        loadingData:true,\n                        inputUsername: undefined,\n                        inputPassword: undefined,\n                        curLoginUrl:\"partials/login/default.html\",\n                        loginFailed:false,\n                        loginServiceInformation:{}\n                        };\n\n    $scope.login = function(username, password) {\n        loginService.login(username,password).then(function(data){\n            $scope.loginModel.curLoginUrl = \"partials/login/logoutButton.html\";\n        });\n    }\n    $scope.logout = function(username, password) {\n        loginService.logout().then(function(data){\n            $scope.loginModel.curLoginUrl = \"partials/login/default.html\";\n            $scope.loginModel.inputPassword = undefined;\n            $scope.loginModel.inputUsername = undefined;\n            $location.path(\"home\");\n        });\n    }\n    $scope.switchUser = function(username, password) {\n        loginService.logout().then(function(data){\n            $scope.loginModel.curLoginUrl = \"partials/login/loginForm.html\";\n            $scope.loginModel.inputPassword = undefined;\n            $scope.loginModel.inputUsername = undefined;\n        });\n    }\n    $scope.showLoginForm = function() {\n        $scope.loginModel.curLoginUrl = \"partials/login/loginForm.html\";\n    }\n    $scope.hideLoginForm = function() {\n        $scope.loginModel.curLoginUrl = \"partials/login/default.html\";\n    }\n\n    $scope.$watch(function(){return loginService.loginInformation}, function(newVal) {\n        $scope.loginModel.loginServiceInformation = newVal;\n        if(newVal.loggedIn)\n        {\n            $scope.loginModel.curLoginUrl = \"partials/login/logoutButton.html\";\n        }\n    }, true);\n}]);\n\nangular.module(\"loginModule\", [\"loginModule.services\", \"loginModule.controllers\"]);\n</code></pre>\n\n<p>The HTML</p>\n\n<pre><code>&lt;div style=\"height:40px;z-index:200;position:relative\"&gt;\n    &lt;div class=\"well\"&gt;\n        &lt;form\n            ng-submit=\"login(loginModel.inputUsername, loginModel.inputPassword)\"&gt;\n            &lt;input\n                type=\"text\"\n                ng-model=\"loginModel.inputUsername\"\n                placeholder=\"Username\"/&gt;&lt;br/&gt;\n            &lt;input\n                type=\"password\"\n                ng-model=\"loginModel.inputPassword\"\n                placeholder=\"Password\"/&gt;&lt;br/&gt;\n            &lt;button\n                class=\"btn btn-primary\"&gt;Submit&lt;/button&gt;\n            &lt;button\n                class=\"btn\"\n                ng-click=\"hideLoginForm()\"&gt;Cancel&lt;/button&gt;\n        &lt;/form&gt;\n        &lt;div\n            ng-show=\"loginModel.loginServiceInformation.loginAttemptFailed\"&gt;\n            Login attempt failed\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>The Base HTML that uses the parts above to complete the picture:</p>\n\n<pre><code>&lt;body ng-controller=\"NavigationCtrl\" ng-init=\"initialize()\"&gt;\n        &lt;div id=\"outerContainer\" ng-controller=\"LoginCtrl\"&gt;\n            &lt;div style=\"height:20px\"&gt;&lt;/div&gt;\n            &lt;ng-include src=\"'partials/header.html'\"&gt;&lt;/ng-include&gt;\n            &lt;div  id=\"contentRegion\"&gt;\n                &lt;div ng-hide=\"loginModel.loginServiceInformation.loggedIn\"&gt;Please login to continue.\n                &lt;br/&gt;&lt;br/&gt;\n                This new version of this site is currently under construction.\n                &lt;br/&gt;&lt;br/&gt;\n                If you need the legacy site and database &lt;a href=\"legacy/\"&gt;click here.&lt;/a&gt;&lt;/div&gt;\n                &lt;div ng-view ng-show=\"loginModel.loginServiceInformation.loggedIn\"&gt;&lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=\"clear\"&gt;&lt;/div&gt;\n            &lt;ng-include src=\"'partials/footer.html'\"&gt;&lt;/ng-include&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n</code></pre>\n\n<p>I have the login controller defined with an ng-controller higher up in the DOM so that I can change the body area of my page based on the loggedIn variable.</p>\n\n<p>Note I haven't implemented form validation here yet.  Also admittedly still quite fresh to Angular so any pointers to things in this post are welcome.  Although this doesn't answer the question directly since it isn't a RESTful based implementation I believe the same can be adapted to $resources since it's built on top of $http calls.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I've written an <a href=\"https://github.com/userapp-io/userapp-angular\">AngularJS module</a> for <a href=\"https://www.userapp.io/\">UserApp</a> that does pretty much everything you ask for. You could either:</p>\n\n<ol>\n<li>Modify the module and attach the functions to your own API, or </li>\n<li>Use the module together with the user management API, <a href=\"https://www.userapp.io/\">UserApp</a></li>\n</ol>\n\n<p><a href=\"https://github.com/userapp-io/userapp-angular\">https://github.com/userapp-io/userapp-angular</a></p>\n\n<p>It supports protected/public routes, rerouting on login/logout, heartbeats for status checks, stores the session token in a cookie, events, etc. </p>\n\n<p>If you want to give UserApp a try, take the <a href=\"http://www.codecademy.com/courses/web-beginner-en-v2b3k\">course on Codecademy</a>.</p>\n\n<p>Here's some examples of how it works:</p>\n\n<ul>\n<li><p><strong>Login form with error handling:</strong></p>\n\n<pre><code>&lt;form ua-login ua-error=\"error-msg\"&gt;\n    &lt;input name=\"login\" placeholder=\"Username\"&gt;&lt;br&gt;\n    &lt;input name=\"password\" placeholder=\"Password\" type=\"password\"&gt;&lt;br&gt;\n    &lt;button type=\"submit\"&gt;Log in&lt;/button&gt;\n    &lt;p id=\"error-msg\"&gt;&lt;/p&gt;\n&lt;/form&gt;\n</code></pre></li>\n<li><p><strong>Signup form with error handling:</strong></p>\n\n<pre><code>&lt;form ua-signup ua-error=\"error-msg\"&gt;\n  &lt;input name=\"first_name\" placeholder=\"Your name\"&gt;&lt;br&gt;\n  &lt;input name=\"login\" ua-is-email placeholder=\"Email\"&gt;&lt;br&gt;\n  &lt;input name=\"password\" placeholder=\"Password\" type=\"password\"&gt;&lt;br&gt;\n  &lt;button type=\"submit\"&gt;Create account&lt;/button&gt;\n  &lt;p id=\"error-msg\"&gt;&lt;/p&gt;\n&lt;/form&gt;\n</code></pre></li>\n<li><p><strong>How to specify which routes that should be public, and which route that is the login form:</strong></p>\n\n<pre><code>$routeProvider.when('/login', {templateUrl: 'partials/login.html', public: true, login: true});\n$routeProvider.when('/signup', {templateUrl: 'partials/signup.html', public: true});\n</code></pre>\n\n<p>The <code>.otherwise()</code> route should be set to where you want your users to be redirected after login. Example:</p>\n\n<p><code>$routeProvider.otherwise({redirectTo: '/home'});</code></p></li>\n<li><p><strong>Log out link:</strong></p>\n\n<p><code>&lt;a href=\"#\" ua-logout&gt;Log Out&lt;/a&gt;</code></p>\n\n<p>(Ends the session and redirects to the login route)</p></li>\n<li><p><strong>Access user properties:</strong></p>\n\n<p>User info is accessed using the <code>user</code> service, e.g: <code>user.current.email</code></p>\n\n<p>Or in the template: <code>&lt;span&gt;{{ user.email }}&lt;/span&gt;</code></p></li>\n<li><p><strong>Hide elements that should only be visible when logged in:</strong></p>\n\n<p><code>&lt;div ng-show=\"user.authorized\"&gt;Welcome {{ user.first_name }}!&lt;/div&gt;</code></p></li>\n<li><p><strong>Show an element based on permissions:</strong></p>\n\n<p><code>&lt;div ua-has-permission=\"admin\"&gt;You are an admin&lt;/div&gt;</code></p></li>\n</ul>\n\n<p>And to authenticate to your back-end services, just use <code>user.token()</code> to get the session token and send it with the AJAX request. At the back-end, use the <a href=\"https://app.userapp.io/#/docs/\">UserApp API</a> (if you use UserApp) to check if the token is valid or not.</p>\n\n<p>If you need any help, just let me know :)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This is taken from my blog post on url route authorisation and element security <a href=\"http://jonsamwell.com/url-route-authorization-and-security-in-angular/\">here</a> but I will briefly summaries the main points :-)</p>\n\n<p><strong>Security in frontend web application is merely a starting measure to stop Joe public however, any user with some web knowledge can circumvent it so you should always have security server-side as well</strong></p>\n\n<p>The main concern around security stuff in angular is route security, luckily when defining a route in angular you are create an object, an object that can have other properties.  The cornerstone to my approach is to add a security object to this route object which basically defines the roles the user must be in to be able to access a particular route.</p>\n\n<pre><code> // route which requires the user to be logged in and have the 'Admin' or 'UserManager' permission\n    $routeProvider.when('/admin/users', {\n        controller: 'userListCtrl',\n        templateUrl: 'js/modules/admin/html/users.tmpl.html',\n        access: {\n            requiresLogin: true,\n            requiredPermissions: ['Admin', 'UserManager'],\n            permissionType: 'AtLeastOne'\n        });\n</code></pre>\n\n<p>The whole approach focuses around an authorisation service which basically does the check to see if the user has the required permissions.  This service abstract the concerns away from the other parts of this solution to do with the user and their actual permission that would have been retrieved from the server during login.  While the code is quite verbose it is fully explained in my blog post.  However, it basically handle the permission check and two modes of authorisation.  The first is that the user must have at least on of the defined permissions, the second is the user must have all of the defined permissions.</p>\n\n<pre><code>angular.module(jcs.modules.auth.name).factory(jcs.modules.auth.services.authorization, [  \n'authentication',  \nfunction (authentication) {  \n var authorize = function (loginRequired, requiredPermissions, permissionCheckType) {\n    var result = jcs.modules.auth.enums.authorised.authorised,\n        user = authentication.getCurrentLoginUser(),\n        loweredPermissions = [],\n        hasPermission = true,\n        permission, i;\n\n    permissionCheckType = permissionCheckType || jcs.modules.auth.enums.permissionCheckType.atLeastOne;\n    if (loginRequired === true &amp;&amp; user === undefined) {\n        result = jcs.modules.auth.enums.authorised.loginRequired;\n    } else if ((loginRequired === true &amp;&amp; user !== undefined) &amp;&amp;\n        (requiredPermissions === undefined || requiredPermissions.length === 0)) {\n        // Login is required but no specific permissions are specified.\n        result = jcs.modules.auth.enums.authorised.authorised;\n    } else if (requiredPermissions) {\n        loweredPermissions = [];\n        angular.forEach(user.permissions, function (permission) {\n            loweredPermissions.push(permission.toLowerCase());\n        });\n\n        for (i = 0; i &lt; requiredPermissions.length; i += 1) {\n            permission = requiredPermissions[i].toLowerCase();\n\n            if (permissionCheckType === jcs.modules.auth.enums.permissionCheckType.combinationRequired) {\n                hasPermission = hasPermission &amp;&amp; loweredPermissions.indexOf(permission) &gt; -1;\n                // if all the permissions are required and hasPermission is false there is no point carrying on\n                if (hasPermission === false) {\n                    break;\n                }\n            } else if (permissionCheckType === jcs.modules.auth.enums.permissionCheckType.atLeastOne) {\n                hasPermission = loweredPermissions.indexOf(permission) &gt; -1;\n                // if we only need one of the permissions and we have it there is no point carrying on\n                if (hasPermission) {\n                    break;\n                }\n            }\n        }\n\n        result = hasPermission ?\n                 jcs.modules.auth.enums.authorised.authorised :\n                 jcs.modules.auth.enums.authorised.notAuthorised;\n    }\n\n    return result;\n};\n</code></pre>\n\n<p>Now that a route has security you need a way of determining if a user can access the route when a route change has been started. To do this we be intercepting the route change request, examining the route object (with our new access object on it) and if the user cannot access the view we replace the route with another one.</p>\n\n<pre><code>angular.module(jcs.modules.auth.name).run([  \n    '$rootScope',\n    '$location',\n    jcs.modules.auth.services.authorization,\n    function ($rootScope, $location, authorization) {\n        $rootScope.$on('$routeChangeStart', function (event, next) {\n            var authorised;\n            if (next.access !== undefined) {\n                authorised = authorization.authorize(next.access.loginRequired,\n                                                     next.access.permissions,\n                                                     next.access.permissionCheckType);\n                if (authorised === jcs.modules.auth.enums.authorised.loginRequired) {\n                    $location.path(jcs.modules.auth.routes.login);\n                } else if (authorised === jcs.modules.auth.enums.authorised.notAuthorised) {\n                    $location.path(jcs.modules.auth.routes.notAuthorised).replace();\n                }\n            }\n        });\n    }]);\n</code></pre>\n\n<p>The key here really is the '.replace()' as this replace the current route (the one they have not got rights to see) with the route we are redirecting them to.  This stop any then navigating back to the unauthorised route.</p>\n\n<p>Now we can intercept routes we can do quite a few cool things including <a href=\"http://jonsamwell.com/url-route-authorization-and-security-in-angular/#redirecting_after_login\">redirecting after a login</a> if a user landed on a route that they needed to be logged in for.</p>\n\n<p>The second part of the solution is being able to hide/show UI element to the user depending on there rights.  This is achieve via a simple directive.</p>\n\n<pre><code>angular.module(jcs.modules.auth.name).directive('access', [  \n        jcs.modules.auth.services.authorization,\n        function (authorization) {\n            return {\n              restrict: 'A',\n              link: function (scope, element, attrs) {\n                  var makeVisible = function () {\n                          element.removeClass('hidden');\n                      },\n                      makeHidden = function () {\n                          element.addClass('hidden');\n                      },\n                      determineVisibility = function (resetFirst) {\n                          var result;\n                          if (resetFirst) {\n                              makeVisible();\n                          }\n\n                          result = authorization.authorize(true, roles, attrs.accessPermissionType);\n                          if (result === jcs.modules.auth.enums.authorised.authorised) {\n                              makeVisible();\n                          } else {\n                              makeHidden();\n                          }\n                      },\n                      roles = attrs.access.split(',');\n\n\n                  if (roles.length &gt; 0) {\n                      determineVisibility(true);\n                  }\n              }\n            };\n        }]);\n</code></pre>\n\n<p>You would then sure an element like so:</p>\n\n<pre><code> &lt;button type=\"button\" access=\"CanEditUser, Admin\" access-permission-type=\"AtLeastOne\"&gt;Save User&lt;/button&gt;\n</code></pre>\n\n<p>Read my <a href=\"http://jonsamwell.com/url-route-authorization-and-security-in-angular/\">full blog post</a> for a much more detailed overview to the approach.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>I've created a github repo summing up this article basically: <a href=\"https://medium.com/opinionated-angularjs/techniques-for-authentication-in-angularjs-applications-7bbf0346acec\" rel=\"nofollow\">https://medium.com/opinionated-angularjs/techniques-for-authentication-in-angularjs-applications-7bbf0346acec</a></p>\n\n<p><a href=\"https://github.com/alarv/ng-login\" rel=\"nofollow\">ng-login Github repo</a></p>\n\n<p><a href=\"http://embed.plnkr.co/Mvrte4/preview\" rel=\"nofollow\">Plunker</a></p>\n\n<p>I'll try to explain as good as possible, hope I help some of you out there:</p>\n\n<p><strong>(1) app.js:</strong> Creation of authentication constants on app definition</p>\n\n<pre><code>var loginApp = angular.module('loginApp', ['ui.router', 'ui.bootstrap'])\n/*Constants regarding user login defined here*/\n.constant('USER_ROLES', {\n    all : '*',\n    admin : 'admin',\n    editor : 'editor',\n    guest : 'guest'\n}).constant('AUTH_EVENTS', {\n    loginSuccess : 'auth-login-success',\n    loginFailed : 'auth-login-failed',\n    logoutSuccess : 'auth-logout-success',\n    sessionTimeout : 'auth-session-timeout',\n    notAuthenticated : 'auth-not-authenticated',\n    notAuthorized : 'auth-not-authorized'\n})\n</code></pre>\n\n<p><strong>(2) Auth Service:</strong> All following functions are implemented in auth.js service. The $http service is used to communicate with the server for the authentication procedures. Also contains functions on authorization, that is if the user is allowed to perform a certain action.</p>\n\n<pre><code>angular.module('loginApp')\n.factory('Auth', [ '$http', '$rootScope', '$window', 'Session', 'AUTH_EVENTS', \nfunction($http, $rootScope, $window, Session, AUTH_EVENTS) {\n\nauthService.login() = [...]\nauthService.isAuthenticated() = [...]\nauthService.isAuthorized() = [...]\nauthService.logout() = [...]\n\nreturn authService;\n} ]);\n</code></pre>\n\n<p><strong>(3) Session:</strong> A singleton to keep user data. The implementation here depends on you. </p>\n\n<pre><code>angular.module('loginApp').service('Session', function($rootScope, USER_ROLES) {\n\n    this.create = function(user) {\n        this.user = user;\n        this.userRole = user.userRole;\n    };\n    this.destroy = function() {\n        this.user = null;\n        this.userRole = null;\n    };\n    return this;\n});\n</code></pre>\n\n<p><strong>(4) Parent controller:</strong> Consider this as the \"main\" function of your application, all controllers inherit from this controller, and it's the backbone of the authentication of this app. </p>\n\n<pre><code>&lt;body ng-controller=\"ParentController\"&gt;\n[...]\n&lt;/body&gt;\n</code></pre>\n\n<p><strong>(5) Access control:</strong> To deny access on certain routes 2 steps have to be implemented:</p>\n\n<p>a) Add data of the roles allowed to access each route, on ui router's $stateProvider service as can be seen below (same can work for ngRoute). </p>\n\n<pre><code>.config(function ($stateProvider, USER_ROLES) {\n  $stateProvider.state('dashboard', {\n    url: '/dashboard',\n    templateUrl: 'dashboard/index.html',\n    data: {\n      authorizedRoles: [USER_ROLES.admin, USER_ROLES.editor]\n    }\n  });\n})\n</code></pre>\n\n<p>b) On $rootScope.$on('$stateChangeStart') add the function to prevent state change if the user is not authorized. </p>\n\n<pre><code>$rootScope.$on('$stateChangeStart', function (event, next) {\n    var authorizedRoles = next.data.authorizedRoles;\n    if (!Auth.isAuthorized(authorizedRoles)) {\n      event.preventDefault();\n      if (Auth.isAuthenticated()) {\n        // user is not allowed\n        $rootScope.$broadcast(AUTH_EVENTS.notAuthorized);\n      } else {d\n        // user is not logged in\n        $rootScope.$broadcast(AUTH_EVENTS.notAuthenticated);\n      }\n    }\n});\n</code></pre>\n\n<p><strong>(6) Auth interceptor:</strong> This is implemented, but can't be checked on the scope of this code. After each $http request, this interceptor checks the status code, if one of the below is returned, then it broadcasts an event to force the user to log-in again.</p>\n\n<pre><code>angular.module('loginApp')\n.factory('AuthInterceptor', [ '$rootScope', '$q', 'Session', 'AUTH_EVENTS',\nfunction($rootScope, $q, Session, AUTH_EVENTS) {\n    return {\n        responseError : function(response) {\n            $rootScope.$broadcast({\n                401 : AUTH_EVENTS.notAuthenticated,\n                403 : AUTH_EVENTS.notAuthorized,\n                419 : AUTH_EVENTS.sessionTimeout,\n                440 : AUTH_EVENTS.sessionTimeout\n            }[response.status], response);\n            return $q.reject(response);\n        }\n    };\n} ]);\n</code></pre>\n\n<p><strong>P.S.</strong> A bug with the form data autofill as stated on the 1st article can be easily avoided by adding the directive that is included in directives.js. </p>\n\n<p><strong>P.S.2</strong> This code can be easily tweaked by the user, to allow different routes to be seen, or display content that was not meant to be displayed. The logic MUST be implemented server-side, this is just a way to show things properly on your ng-app.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<h1>Angular+RESTful Client-side Communication w/ API for Auth/(re)Routing</h1>\n\n<p>This has been covered in a few different questions, and in a few different tutorials, but all of the previous resources I've encountered don't quite hit the nail on the head. </p>\n\n<h2><strong>In a nut-shell, I need to</strong></h2>\n\n<ul>\n<li>Login via POST from <code>http://client.foo</code> to <code>http://api.foo/login</code></li>\n<li>Have a \"logged in\" GUI/component state for the user that provides a <code>logout</code> route</li>\n<li>Be able to \"update\" the UI when the user logs out / logs out. \n <em>This has been the most frustrating</em></li>\n<li>Secure my routes to check for authenticated-state (should they need it) and redirect the user to the login page accordingly</li>\n</ul>\n\n<h2><strong>My issues are</strong></h2>\n\n<ul>\n<li>Every time I navigate to a different page, I need to make the call to <code>api.foo/status</code> to determine whether or not user is logged in. (ATM I'm using Express for routes) This causes a hiccup as Angular determines things like <code>ng-show=\"user.is_authenticated\"</code></li>\n<li>When I successfully login/logout, I need to refresh the page (I don't want to have to do this) in order to populate things like <code>{{user.first_name}}</code>, or in the case of logging out, empty that value out. </li>\n</ul>\n\n   \n\n<pre><code>// Sample response from `/status` if successful \n\n{\n   customer: {...},\n   is_authenticated: true,\n   authentication_timeout: 1376959033,\n   ...\n}\n</code></pre>\n\n<h2><strong>What I've tried</strong></h2>\n\n<ul>\n<li><a href=\"http://witoldsz.github.io/angular-http-auth/\">http://witoldsz.github.io/angular-http-auth/</a><sup>1</sup></li>\n<li><a href=\"http://www.frederiknakstad.com/authentication-in-single-page-applications-with-angular-js/\">http://www.frederiknakstad.com/authentication-in-single-page-applications-with-angular-js/</a><sup>2</sup> </li>\n<li><a href=\"https://github.com/mgonto/restangular\">https://github.com/mgonto/restangular</a> (For the life of me I could not figure out how to <code>POST</code> with <code>post data</code> and not <code>query params</code>. The docs turned up nothing on the matter. </li>\n</ul>\n\n<h2><strong>Why I feel like I'm losing my mind</strong></h2>\n\n<ul>\n<li>It seems as though every tutorial relies on some database (lots of Mongo, Couch, PHP+MySQL, ad infinitum) solution, and none rely purely on communication with a RESTful API to persist logged-in states. Once logged in, additional POSTs/GETs are sent with <code>withCredentials:true</code>, so that's not the issue</li>\n<li>I cannot find ANY examples/tutorials/repos that do Angular+REST+Auth, sans a backend language. </li>\n</ul>\n\n<h2><strong>I'm not too proud</strong></h2>\n\n<p>Admittedly, I'm new to Angular, and would not be surprised if I'm approaching this in a ridiculous way; I'd be thrilled if someone suggest an alternative\u2014even if it's soup-to-nuts. </p>\n\n<p>I'm using <code>Express</code> mostly because I really love <code>Jade</code> and <code>Stylus</code>\u2014 I'm not married to the <code>Express</code>' routing and will give it up if what I want to do is only possible with Angular's routing.  </p>\n\n<p>Thanks in advance for any help anyone can provide. And please don't ask me to Google it, because I have about 26 pages of purple links. ;-)</p>\n\n<hr>\n\n<p><sup>1</sup>This solution relies on Angular's $httpBackend mock, and it's unclear how to make it talk to a real server.</p>\n\n<p><sup>2</sup>This was the closest, but since I have an existing API I need to authenticate with, I could not use passport's 'localStrategy', and it seemed <strong>insane</strong> to write an OAUTH service...that only I intended to use. </p>\n",
            "last_activity_date": 1425551703,
            "question_id": 18325324,
            "score": 30,
            "tags": [
                "javascript",
                "node.js",
                "angularjs",
                "express",
                "restful-authentication"
            ],
            "title": "AngularJS Authentication + RESTful API"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I'd check out <a href=\"https://developer.mozilla.org/en/DOM/window.onerror\">window.onerror</a></p>\n\n<p>Example:</p>\n\n<pre><code>window.onerror = function(message, url, lineNumber) {  \n  //save error and send to server for example.\n  return true;\n};  \n</code></pre>\n\n<p>Keep in mind that returning true will prevent the firing of the default handler, and returning false will let the default handler run.</p>\n",
                    "is_accepted": false,
                    "score": 109
                },
                {
                    "body": "<p>You might wanna check out this new service, <a href=\"http://rescuejs.com/\" rel=\"nofollow\">http://rescuejs.com/</a>.</p>\n\n<p>Lets you log all your javascript errors without writing server side code yourself. It also tracks browser versions and so on.</p>\n\n<p>I'm not sure I would consider them 100% \"enterprise ready\", but it's definitely worth checking out.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I recently tested <a href=\"http://getsentry.com\" rel=\"nofollow\">getsentry</a> on production and it works fine (Js and other languages PHP)</p>\n\n<p>1- It's open source (You can install it on ur own server)</p>\n\n<p>Or</p>\n\n<p>2- You can use the free plan (100 reports / day)</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Also, the <a href=\"http://jslogger.com\" rel=\"nofollow\">http://jslogger.com</a> service can help with that:</p>\n\n<blockquote>\n  <p>Log Javascript errors and events in the cloud</p>\n</blockquote>\n\n<p>from <a href=\"http://jslogger.com/features\" rel=\"nofollow\">http://jslogger.com/features</a> :</p>\n\n<blockquote>\n  <p>From now on you can spy on all the errors that break your site's user experience. Every Javascript error will be caught and brought to you for later debuging.</p>\n</blockquote>\n\n<p>DISCLAIMER: not affiliated with the service/company.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I wandered if anyone had experience in handling javascript errors globally and send them from the client browser to a server. </p>\n\n<p>I think my point is quite clear, i want to know every exception, error, compilation error, ... that happens on the client side and send them to the server to report them.</p>\n\n<p>I'm mainly using mootools and head.js (for the js side) and django for the server side (not that it matters...).</p>\n\n<p>Thank you for your help.</p>\n\n<p>Regards.</p>\n",
            "last_activity_date": 1406098735,
            "question_id": 5328154,
            "score": 68,
            "tags": [
                "javascript",
                "error-handling",
                "client-side"
            ],
            "title": "Catch all javascript errors and send them to server"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You could create a basket service.  And generally in JS you use objects instead of lots of parameters.</p>\n\n<p>Here's an example: <a href=\"http://jsfiddle.net/2MbZY/\">http://jsfiddle.net/2MbZY/</a></p>\n\n<pre><code>var app = angular.module('myApp', []);\n\napp.factory('basket', function() {\n    var items = [];\n    var myBasketService = {};\n\n    myBasketService.addItem = function(item) {\n        items.push(item);\n    };\n    myBasketService.removeItem = function(item) {\n        var index = items.indexOf(item);\n        items.splice(index, 1);\n    };\n    myBasketService.items = function() {\n        return items;\n    };\n\n    return myBasketService;\n});\n\nfunction MyCtrl($scope, basket) {\n    $scope.newItem = {};\n    $scope.basket = basket;    \n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>You could use <a href=\"http://docs.angularjs.org/api/ng.directive%3angInit\">ng-init</a> in an outer div:</p>\n\n<pre><code>&lt;div ng-init=\"param='value';\"&gt;\n    &lt;div ng-controller=\"BasketController\" &gt;\n        &lt;label&gt;param: {{value}}&lt;/label&gt;\n    &lt;/div&gt;\n&lt;/div&gt;  \n</code></pre>\n\n<p>The parameter will then be available in your controller's scope:</p>\n\n<pre><code>function BasketController($scope) {\n        console.log($scope.param);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 65
                },
                {
                    "body": "<p>I'm not very advanced in AngularJS, but my solution would be to use a simple JS class for you cart (in the sense of coffee script) that extend Array.</p>\n\n<p>The beauty of AngularJS is that you can pass you \"model\" object with ng-click like shown below.</p>\n\n<p>I don't understand the advantage of using a factory, as I find it less pretty that a CoffeeScript class.</p>\n\n<p>My solution could be transformed in a Service, for reusable purpose. But otherwise I don't see any advantage of using tools like factory or service.</p>\n\n<pre><code>class Basket extends Array\n  constructor: -&gt;\n\n  add: (item) -&gt;\n    @push(item)\n\n  remove: (item) -&gt;\n    index = @indexOf(item)\n    @.splice(index, 1)\n\n  contains: (item) -&gt;\n    @indexOf(item) isnt -1\n\n  indexOf: (item) -&gt;\n    indexOf = -1\n    @.forEach (stored_item, index) -&gt;\n      if (item.id is stored_item.id)\n        indexOf = index\n    return indexOf\n</code></pre>\n\n<p>Then you initialize this in your controller and create a function for that action:</p>\n\n<pre><code> $scope.basket = new Basket()\n $scope.addItemToBasket = (item) -&gt;\n   $scope.basket.add(item)\n</code></pre>\n\n<p>Finally you set up a ng-click to an anchor, here you pass your object (retreived from the database as JSON object) to the function:</p>\n\n<pre><code>li ng-repeat=\"item in items\"\n  a href=\"#\" ng-click=\"addItemToBasket(item)\" \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><strong>I am brand new to <a href=\"http://angularjs.org\">AngularJS</a></strong> and like what I've seen so far, especially the model / view binding. I'd like to make use of that to construct a simple \"add to basket\" piece of functionality.</p>\n\n<p>This is my controller so far:</p>\n\n<pre><code>function BasketController($scope) {\n    $scope.products = [];\n\n    $scope.AddToBasket = function (Id, name, price, image) {\n\n        ...\n\n    };\n}\n</code></pre>\n\n<p>And this is my HTML:</p>\n\n<pre><code>&lt;a ng-click=\"AddToBasket('237', 'Laptop', '499.95', '237.png')\"&gt;Add to basket&lt;/a&gt;\n</code></pre>\n\n<p>Now this works but I highly doubt this is the right way to create a new product object in my model. However this is where my total lack of AngularJS experience comes into play.</p>\n\n<p>If this is not the way to do it, what is best practice?</p>\n",
            "last_activity_date": 1380560685,
            "question_id": 11703477,
            "score": 40,
            "tags": [
                "javascript",
                "javascript-framework",
                "angularjs"
            ],
            "title": "Pass variables to AngularJS controller, best practice?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Suggestions are (basically) based on the text in the current open file and any snippets or completions you have defined (<a href=\"http://sublimetext.info/docs/en/extensibility/completions.html\">ref</a>).  If you want more text suggestions, I'd recommend:</p>\n\n<ul>\n<li><a href=\"https://tutsplus.com/lesson/your-first-snippet/\">Adding your own snippets for commonly used operations</a>.</li>\n<li><a href=\"http://sublimetext.info/docs/en/extensibility/completions.html#example\">Adding your own completions for common words</a>.</li>\n<li><a href=\"https://tutsplus.com/lesson/adding-snippets-through-package-control/\">Adding other people's snippets</a> through <a href=\"https://tutsplus.com/lesson/package-control/\">Package Control</a>.</li>\n<li>You can find <a href=\"https://github.com/search?q=sublime%20javascript%20snippet&amp;p=1&amp;ref=searchbar&amp;type=Repositories&amp;l=\">even more snippets on github</a>.</li>\n<li>Use <a href=\"https://tutsplus.com/lesson/zen-coding-2/\">Zen coding</a> (available through <a href=\"https://tutsplus.com/lesson/package-control/\">Package Control</a>) or <a href=\"https://tutsplus.com/lesson/emmet/\">Emmet</a>.</li>\n<li>There are also various packages that adjust the way code completion works.  I love <a href=\"https://github.com/SublimeCodeIntel/SublimeCodeIntel\">SublimeCodeIntel</a>, but check out other answers to this question for more options.</li>\n</ul>\n\n<p>As a side note, I'd really recommend <a href=\"https://tutsplus.com/lesson/package-control/\">installing Package control</a> to take full advantage of the Sublime community.  Some of the options above use Package control.  I'd also highly recommend <a href=\"https://tutsplus.com/course/improve-workflow-in-sublime-text-2/\">the tutsplus Sublime tutorial videos</a>, which include all sorts of information about improving your efficiency when using Sublime.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>There are three approaches</p>\n\n<ul>\n<li><p>Use SublimeCodeIntel plug-in</p></li>\n<li><p>Use CTags plug-in</p></li>\n<li><p>Generate .sublime-completion file manually</p></li>\n</ul>\n\n<p>Approaches are described in detail in this blog post (of mine): <a href=\"http://opensourcehacker.com/2013/03/04/javascript-autocompletions-and-having-one-for-sublime-text-2/\">http://opensourcehacker.com/2013/03/04/javascript-autocompletions-and-having-one-for-sublime-text-2/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Check if the snippets have <code>&lt;tabTrigger&gt;</code> attributes that start with special characters. If they do, they won't show up in the autocomplete box. This is currently a problem on Windows with the available <em>jQuery</em> plugins. </p>\n\n<p>See my <a href=\"http://stackoverflow.com/a/16468494/1199685\">answer on this thread</a> for more details.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Ternjs is a new alternative for getting JS autocompletion. <a href=\"http://ternjs.net/\">http://ternjs.net/</a></p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>As already mentioned, <a href=\"http://ternjs.net/\">tern.js</a> is a new and promising project with plugins for Sublime Text, Vim and Emacs. I\u00b4ve been using <a href=\"http://emmet.io/blog/sublime-tern/\">TernJS for Sublime</a> for a while and the suggestions I get are way better than the standard ones: </p>\n\n<p><img src=\"http://i.stack.imgur.com/VSyZs.png\" alt=\"enter image description here\"></p>\n\n<p>Tern scans all .js files in your project. You can get support for DOM, nodejs, jQuery, and more by adding \"libs\" in your .sublime-project file:</p>\n\n<pre><code>\"ternjs\": {\n    \"exclude\": [\"wordpress/**\", \"node_modules/**\"],\n    \"libs\": [\"browser\", \"jquery\"],\n    \"plugins\": {\n        \"requirejs\": {\n            \"baseURL\": \"./js\"\n        }\n    }\n}\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/mltzq.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I just installed the Sublime Text under Windows Vista, and even following the advice given in <a href=\"http://stackoverflow.com/questions/10636410/modifying-sublime-text-2-for-js\">this post</a>, namely to explicitly set <code>View &gt; Syntax &gt; JavaScript &gt; JavaScript</code>, I only see suggestions based on what I have previously typed. I even installed the <a href=\"https://github.com/Kronuz/SublimeCodeIntel\">SublimeCodeIntel plug-in</a>, to no avail.</p>\n\n<p>As I understand it, the moment I write \"pars\" I should get the \"parseFloat\" and \"parseInt\" options, as in the Chrome developer tools, right?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1407088439,
            "question_id": 13661462,
            "score": 30,
            "tags": [
                "javascript",
                "sublimetext2"
            ],
            "title": "Getting full JS autocompletion under Sublime Text"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The context parameter just sets the value of <code>this</code> in the iterator function.</p>\n\n<pre><code>var someOtherArray = [\"name\",\"patrick\",\"d\",\"w\"];\n\n_.each([1, 2, 3], function(num) { \n    // In here, \"this\" refers to the same Array as \"someOtherArray\"\n\n    alert( this[num] ); // num is the value from the array being iterated\n                        //    so this[num] gets the item at the \"num\" index of\n                        //    someOtherArray.\n}, someOtherArray);\n</code></pre>\n\n<p><strong>Working Example:</strong> <a href=\"http://jsfiddle.net/a6Rx4/\">http://jsfiddle.net/a6Rx4/</a></p>\n\n<p>It uses the number from each member of the Array being iterated to get the item at that index of <code>someOtherArray</code>, which is represented by <code>this</code> since we passed it as the context parameter.</p>\n\n<p>If you do not set the context, then <code>this</code> will refer to the <code>window</code> object.</p>\n",
                    "is_accepted": true,
                    "score": 120
                },
                {
                    "body": "<p><code>context</code> is where <code>this</code> refers to in your iterator function. For example:</p>\n\n<pre><code>var person = {};\nperson.friends = {\n  name1: true,\n  name2: false,\n  name3: true,\n  name4: true\n};\n\n_.each(['name4', 'name2'], function(name){\n  // this refers to the friends property of the person object\n  alert(this[name]);\n}, person.friends);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                }
            ],
            "body": "<p>New to underscore.js. I am pretty much looking for an example on how to use <code>[context]</code>/<code>[context]</code> inside the iterator.</p>\n",
            "last_activity_date": 1392069822,
            "question_id": 4946456,
            "score": 75,
            "tags": [
                "javascript",
                "functional-programming",
                "context",
                "javascript-library",
                "underscore.js"
            ],
            "title": "underscore.js _.each(list, iterator, [context]) what is context?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Suddenly I found something called <code>Google Shared Stuff</code> that returns image with website's favicon by hostname:</p>\n\n<pre><code>http://www.google.com/s2/favicons?domain=www.domain.com\n</code></pre>\n\n<p>But fot BBC site it returns favicon a bit small. Compare:</p>\n\n<p><a href=\"http://www.google.com/s2/favicons?domain=www.bbc.co.uk\">http://www.google.com/s2/favicons?domain=www.bbc.co.uk</a><br>\n<a href=\"http://www.bbc.co.uk/favicon.ico\">http://www.bbc.co.uk/favicon.ico</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You could use YQL for that</p>\n\n<pre>http://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20html%20where%20url%3D\"http://bbc.co.uk/\"and%20xpath%3D\"/html/head/link[@rel%3D'icon']%20|%20/html/head/link[@rel%3D'ICON']%20|%20/html/head/link[@rel%3D'shortcut%20icon']%20|%20/html/head/link[@rel%3D'SHORTCUT%20ICON']\"&format=json&callback=grab</pre>\n\n<p>This query used by <a href=\"http://userscripts.org/scripts/review/54805\">Display Feed Favicons Greasemonkey script</a>.</p>\n\n<p>You can write queries in YQL console, but it requires to login (btw, using queries don't):</p>\n\n<pre>http://developer.yahoo.com/yql/console/#h=select%20*%20from%20html%20where%20url%3D%22http%3A//bbc.co.uk/%22and%20xpath%3D%22/html/head/link%5B@rel%3D%27icon%27%5D%20%7C%20/html/head/link%5B@rel%3D%27ICON%27%5D%20%7C%20/html/head/link%5B@rel%3D%27shortcut%20icon%27%5D%20%7C%20/html/head/link%5B@rel%3D%27SHORTCUT%20ICON%27%5D%22</pre>\n\n<p>It is better than <code>http://www.google.com/s2/favicons?domain=www.domain.com\n</code>, in case favicon exists, but doesn't located in domain.com/favicon.ico</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Here are 4 options , I tested over 100 urls and got different results which each option.\nPlease note, this solution is not <code>JS</code>, but <code>JS</code> may not be necessary.</p>\n\n<pre><code> &lt;img height=\"16\" width=\"16\" src='http://getfavicon.appspot.com/http://www.edocuments.co.uk' /&gt;\n\n &lt;img height=\"16\" width=\"16\" src='http://grabicon.com/edocuments.co.uk' /&gt;\n\n &lt;img height=\"16\" width=\"16\" src='http://www.google.com/s2/favicons?domain=www.edocuments.co.uk' /&gt;\n\n &lt;!--- No longer working ----&gt;\n &lt;img height=\"16\" width=\"16\" src='http://www.getfavicon.org/?url=www.edocuments.co.uk' /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>Disclaimer: I built this service myself, but you can try <a href=\"http://grabicon.com\" rel=\"nofollow\">http://grabicon.com</a>.  It's a very simple API for favicons that handles resizing and reformatting on the fly.  It uses a lot of proactive caching for speed, as well.  Like most other services like this, you can insert this directly into your HTML and it works great.  I don't have online documentation just yet, but here are some examples using everybody's favorite web destination:</p>\n\n<p>Get the icon in PNG format:</p>\n\n<pre><code>http://grabicon.com/icon?domain=microsoft.com\n</code></pre>\n\n<p>Resize to 64 pixels square:</p>\n\n<p><a href=\"http://grabicon.com/icon?domain=microsoft.com&amp;size=64\" rel=\"nofollow\">http://grabicon.com/icon?domain=microsoft.com&amp;size=64</a></p>\n\n<p>This hunts down the icon using the various methods people can implement them, and uses the highest resolution version available, since favicon.ico files actually contain a <em>collection</em> of icons.  It uses that version to resize to your preference, unless a perfect match is already available.</p>\n\n<p>Let me know what you guys think, and what other features you might like!</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>Grabicon is now back in operation, and it's not going anywhere. It was originally built for a customer who later decided not to support it. But now it's under my direct care, with much better speed and resizing capability. </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am wondering if it is possible to get a website's favicon by an URL with <code>JavaScript</code>.  </p>\n\n<p>For example I have an URL <code>http://www.bbc.co.uk/</code> and I would like to get  path to favicon described in <code>&lt;link rel=\"icon\" .../&gt;</code> meta tag - <code>http://www.bbc.co.uk/favicon.ico</code>.</p>\n\n<p>I have many URLs so that should not load every page and search for <code>link</code> tag I think.</p>\n\n<p>Any ideas ?</p>\n",
            "last_activity_date": 1421948802,
            "question_id": 2057636,
            "score": 26,
            "tags": [
                "javascript",
                "favicon"
            ],
            "title": "Get website&#39;s favicon with JS"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If all you want to do is trigger an event when the DOM changes, do something like this:</p>\n\n<pre><code>var nodes=document.getElementsByTagName('*')||document.all;\n\nfunction domchange(){\n    alert('Hello');\n}\n\nwindow.setInterval(function(){\n    var newnodes=document.getElementsByTagName('*')||document.all;\n    if(newnodes!=nodes){\n        nodes=newnodes;\n        domchange();\n    }\n},1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -18
                },
                {
                    "body": "<p>If you are creating a web app that targets recent mobile phones and newer versions of browsers (Firefox 5+, Chrome 4+, Safari 4+, iOS Safari 3+, Android 2.1+), you can use the following code to create an awesome event for the insertion of dom nodes, and it even runs on the nodes initially part of the page's static mark-up!</p>\n\n<p>Here's the link to the full post with and example: <a href=\"http://www.backalleycoder.com/2012/04/25/i-want-a-damnodeinserted/\" rel=\"nofollow\">http://www.backalleycoder.com/2012/04/25/i-want-a-damnodeinserted/</a></p>\n\n<p><strong>Note on Mutation Observers:</strong> while the newer Mutation Observers features in recent browsers are great for monitoring simple insertions and changes to the DOM, do understand that this method can be used to do far more as it allows you to monitor for <em>any CSS rule match</em> you can thing of. This is super powerful for many use-cases, so I wrapped this up in a library here: <a href=\"https://github.com/csuwildcat/SelectorListener\" rel=\"nofollow\">https://github.com/csuwildcat/SelectorListener</a></p>\n\n<p><em>You'll need to add the appropriate prefixes to the CSS and animationstart event name if you want to target various browsers. You can read more about that in the post linked to above.</em></p>\n\n<h2>The basic node insertion case</h2>\n\n<p><strong>CSS</strong>:</p>\n\n<pre><code>@keyframes nodeInserted {  \n    from {  \n        outline-color: #fff; \n    }\n    to {  \n        outline-color: #000;\n    }  \n}\n\ndiv.some-control {\n    animation-duration: 0.01s;\n    animation-name: nodeInserted;\n}\n</code></pre>\n\n<p><strong>JavaScript</strong>:</p>\n\n<pre><code>document.addEventListener('animationstart', function(event){\n    if (event.animationName == 'nodeInserted'){\n        // Do something here\n    }\n}, true);\n</code></pre>\n\n<h2>Listening for more complex selector matches:</h2>\n\n<p>This enables things that are almost impossible to do with Mutation Observers</p>\n\n<p><strong>CSS</strong>:</p>\n\n<pre><code>@keyframes adjacentFocusSequence {  \n    from {  \n        outline-color: #fff; \n    }\n    to {  \n        outline-color: #000;\n    }  \n}\n\n.one + .two + .three:focus {\n    animation-duration: 0.01s;\n    animation-name: adjacentFocusSequence;\n}\n</code></pre>\n\n<p><strong>JavaScript</strong>:</p>\n\n<pre><code>document.addEventListener('animationstart', function(event){\n    if (event.animationName == 'adjacentFocusSequence'){\n        // Do something here when '.one + .two + .three' are \n        // adjacent siblings AND node '.three' is focused\n    }\n}, true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>This is posted here because this question is where I landed looking for help with DOMNodeInserted failing with IE9, but please note this solution is specifically for a situation where jQuery is being used within an ASP.NET context that uses an End Request function. Your mileage may vary, etc....</p>\n\n<p>Basically, we are going to throw away the DOMNodeInserted altogether and use End Request to load our event handler:</p>\n\n<p>OLD:</p>\n\n<pre><code>$(document).ready(function() {\n\n$(document).bind('DOMNodeInserted', function(event){\nMy jQuery event handler...\n\n }); \n});\n</code></pre>\n\n<p>===================================</p>\n\n<p>NEW:</p>\n\n<pre><code>function Ajax_EndRequest {\n  function2();\n}\n\nfunction2 (a,b){\n  My jQuery event handler...\n}\n\n$(document).ready(function(){\n  add_endRequest(Ajax_EndRequest); //this is what actually invokes the function upon request end.\n\n My jQuery event handler...//REMOVED -- don't need this now\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One new alternative that @naugtur briefly mentioned is <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\">MutationObserver</a>. It's designed as a replacement for the deprecated mutation events, if the browser(s) you're developing for supports it (like if you're developing a browser extension).</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The same technique as csuwldcat described has been made into an easy to use jQuery plugin (if that's your thing): <a href=\"https://github.com/liamdanger/jQuery.DOMNodeAppear\" rel=\"nofollow\">https://github.com/liamdanger/jQuery.DOMNodeAppear</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>DOMNodeInserted is known to make dynamic pages slow, <a href=\"https://developer.mozilla.org/en/Extensions/Performance_best_practices_in_extensions\">MDN even recommends</a> not using it altogether, but doesn't provide any alternatives.</p>\n\n<p>I'm not interested in the element inserted, I just need to know when some script modifies the DOM. Is there a better alternative to mutation event listeners (maybe getElementsByTagName inside an nsiTimer)?</p>\n",
            "last_activity_date": 1418748881,
            "question_id": 6997826,
            "score": 14,
            "tags": [
                "javascript",
                "dom",
                "firefox-addon",
                "dhtml",
                "mutation-events"
            ],
            "title": "Alternative to DOMNodeInserted"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>for(var property in data) {\n    alert(property);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You can loop through keys like this:</p>\n\n<pre><code>for (var key in data) {\n  console.log(key);\n}\n</code></pre>\n\n<p>This logs \"Name\" and \"Value\".</p>\n\n<p>If you have a more complex object type (not just a plain hash-like object, as in the original question), you'll want to only loop through keys that belong to the object itself, as opposed to keys on the object's <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Details_of_the_Object_Model\">prototype</a>:</p>\n\n<pre><code>for (var key in data) {\n  if (data.hasOwnProperty(key)) {\n    console.log(key);\n  }\n}\n</code></pre>\n\n<p>As you noted, keys are not guaranteed to be in any particular order. Note how this differs from the following:</p>\n\n<pre><code>for each (var value in data) {\n  console.log(value);\n}\n</code></pre>\n\n<p>This example loops through values, so it would log <code>Property Name</code> and <code>0</code>. N.B.: The <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/for_each...in\"><code>for each</code></a> syntax is mostly only supported in Firefox, but not in other browsers.</p>\n\n<p>If your target browsers support ES5, or your site includes <a href=\"https://github.com/es-shims/es5-shim\"><code>es5-shim.js</code></a> (recommended), you can also use <code>Object.keys</code>:</p>\n\n<pre><code>var data = { Name: 'Property Name', Value: '0' };\nconsole.log(Object.keys(data)); // =&gt; [\"Name\", \"Value\"]\n</code></pre>\n\n<p>and loop with <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>Array.prototype.forEach</code></a>:</p>\n\n<pre><code>Object.keys(data).forEach(function (key) {\n  console.log(data[key]);\n});\n// =&gt; Logs \"Property Name\", 0\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 85
                },
                {
                    "body": "<p>You often will want to examine the <strong>particular</strong> properties of an instance of an object,\nwithout all of it's shared prototype methods and properties:</p>\n\n<pre><code> Obj.prototype.toString= function(){\n        var A= [];\n        for(var p in this){\n        \tif(this.hasOwnProperty(p)){\n        \t\tA[A.length]= p+'='+this[p];\n        \t}\n        }\n\n    return A.join(', ');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>EcmaScript 5 introduces <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys\">Object.keys</a> and <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach\">Array#forEach</a> which makes this a little easier:</p>\n\n<pre><code>var data = { name: 'Property Name', value: 0 };\n\nObject.keys(data); // ['name', 'value']\nObject.keys(data).forEach(function (key) {\n  // do something with data[key]\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<pre><code>var fs   = require(\"fs\");\n\nfs.stat( process.argv[1], function( err, stats ){\nif (err) {\n     console.log( err.message ); \n     return;    \n} else {\n console.log(JSON.stringify(stats));\n\n/*  this is the answer here  */\n\n    for (var key in Object.keys(stats)){\n    var t = Object.keys( stats )[key];\n    console.log( t + \" value =: \" + stats[t]  );\n     }  \n\n/*  to here, run in node */\n   }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var attr, object_information='';\n\nfor(attr in object){\n\n      //Get names and values of propertys with style (name : value)\n      object_information += attr + ' : ' + object[attr] + '\\n'; \n\n   }\n\n\nalert(object_information); //Show all Object\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>Say you have a javascript object like this:</p>\n\n<pre><code>var data = { Name: 'Property Name', Value: '0' };\n</code></pre>\n\n<p>You can access the properties by the property name:</p>\n\n<pre><code>var name = data.Name;\nvar value = data[\"Value\"];\n</code></pre>\n\n<p>But is it possible to get these values if you don't know the name of the properties? Does the unordered nature of these properties make it impossible to tell them apart?</p>\n\n<p>In my case I'm thinking specifically of a situation where a function needs to accept a series of name-value pairs, but the names of the properties may change.</p>\n\n<p>My thoughts on how to do this so far is to pass the names of the properties to the function along with the data, but this feels like a hack. I would prefer to do this with introspection if possible.</p>\n",
            "last_activity_date": 1393052434,
            "question_id": 675231,
            "score": 73,
            "tags": [
                "javascript",
                "object",
                "properties",
                "iteration",
                "introspection"
            ],
            "title": "How do I access properties of a javascript object if I don&#39;t know the names?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Yes you can start a timer at<code>touchstart</code> and end it on <code>touchend</code> and make your choices from there.</p>\n\n<p>Also you can make... let's say swipe, my triggering <code>touchmove</code> you can get the coordonates of the \"finger\" and see how much i traveled before <code>touchend</code> gets triggered.</p>\n\n<p>I don't know if there's any simpler way rather than using a touch events library, but i suppose you could write one for simple 'tap', 'double tap', 'swipe' events pretty easily.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Why not use jquery mobile. They have all this events stuff figured out pretty well <a href=\"http://jquerymobile.com/demos/1.2.0/docs/api/events.html\" rel=\"nofollow\">http://jquerymobile.com/demos/1.2.0/docs/api/events.html</a>, and for the double tap <a href=\"http://forum.jquery.com/topic/doubletap-event\" rel=\"nofollow\">http://forum.jquery.com/topic/doubletap-event</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have run into the same problem and have used the code from this page quite successfully:</p>\n\n<p><a href=\"http://www.gianlucaguarini.com/blog/detecting-the-tap-event-on-a-mobile-touch-device-using-javascript/\" rel=\"nofollow\">http://www.gianlucaguarini.com/blog/detecting-the-tap-event-on-a-mobile-touch-device-using-javascript/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you haven't already, I would suggest reading the source code for Hammer.js</p>\n\n<p><a href=\"https://github.com/hammerjs/hammer.js/blob/master/hammer.js\" rel=\"nofollow\">https://github.com/hammerjs/hammer.js/blob/master/hammer.js</a></p>\n\n<p>Between comments and code it's about 1400 lines, there is great documentation and the code is easy to understand.</p>\n\n<p>You can see how the author has chosen to solve a lot of the common touch events: </p>\n\n<blockquote>\n  <p>hold, tap, doubletap, drag, dragstart, dragend, dragup, dragdown,\n  dragleft, dragright, swipe, swipeup, swipedown, swipeleft, swiperight,\n  transform, transformstart, transformend, rotate, pinch, pinchin,\n  pinchout, touch (gesture detection starts), release (gesture detection\n  ends)</p>\n</blockquote>\n\n<p>I think after reading the source code you will have much better understanding of how touch events work and how to identify which events the browser is capable of handling. </p>\n\n<p><a href=\"http://eightmedia.github.io/hammer.js/\" rel=\"nofollow\">http://eightmedia.github.io/hammer.js/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Have you tried Tocca.js? <a href=\"http://gianlucaguarini.github.io/Tocca.js/\">http://gianlucaguarini.github.io/Tocca.js/</a> It enables all the missing touch events on any kind of device and it's just about 1kb</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Here is my latest observation on touch and mouse events on Android 4.3</p>\n\n<h2>Opera, Firefox, and Chrome seem to have a standard behavior</h2>\n\n<ol>\n<li><p>On Swipe (touchstart-touchmove-touchend):</p>\n\n<ol>\n<li>No mouse event(exluding mouseover) fires.</li>\n<li>Mouseover fires only if touchstart and touchend occurs on the same element. (touchstart-touchmove-touchend-mouseover)</li>\n<li>If default is prevented on touchstart: the default swipe behavior does not work. no changes occur regarding mouse event firing.</li>\n</ol></li>\n<li><p>On Tap(touchstart-touchend):</p>\n\n<ol>\n<li>All mouse events mouseover-mousemove-mousedown-mouseup-click fire after a delay</li>\n<li>If default is prevented on touchstart: only mouseover fires.</li>\n</ol></li>\n</ol>\n\n<p><strong>Android default browser has some non-standard behaviors</strong>:</p>\n\n<ol>\n<li>Mouseover fires before touchstart which means mouseover always fires.</li>\n<li>All mouse events fire on Tap, even if the default is prevented on touchstart. </li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As far as touch events for listening for touch down and up and reacting I wrote an answer here <a href=\"http://stackoverflow.com/questions/22513908/ios-webview-not-releasing/22514194#22514194\">iOS WebView Not Releasing</a> and a blog post here <a href=\"http://anthonysierra.com/03192014\" rel=\"nofollow\">http://anthonysierra.com/03192014</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For more information on touch and mouse events, see these great articles and libraries:</p>\n\n<ol>\n<li><a href=\"http://www.html5rocks.com/en/mobile/touchandmouse/\" rel=\"nofollow\">http://www.html5rocks.com/en/mobile/touchandmouse/</a></li>\n<li><a href=\"http://www.quirksmode.org/mobile/tableTouch.html\" rel=\"nofollow\">http://www.quirksmode.org/mobile/tableTouch.html</a></li>\n<li><a href=\"https://developers.google.com/mobile/articles/fast_buttons\" rel=\"nofollow\">https://developers.google.com/mobile/articles/fast_buttons</a></li>\n<li><a href=\"http://caniuse.com/#search=touchstart\" rel=\"nofollow\">http://caniuse.com/#search=touchstart</a></li>\n<li><a href=\"https://handjs.codeplex.com/\" rel=\"nofollow\">https://handjs.codeplex.com/</a></li>\n<li><a href=\"https://github.com/toolkitchen/PointerEvents\" rel=\"nofollow\">https://github.com/toolkitchen/PointerEvents</a></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to make some of my libraries work with touch devices, but I'm having a hard time trying to figure out how they're supported and how they work.</p>\n\n<p>Basically, there are <a href=\"https://developer.mozilla.org/en-US/docs/DOM/Touch_events\">5 touch events</a>, but it seems there's consensus among mobile browsers only on the <code>touchstart</code> event (duh). I've created a <a href=\"http://jsfiddle.net/cpUsA/4/\">fiddle</a> as a test case.</p>\n\n<p>I've tested this on my Galaxy Note with Android 4 on board, but you can check the link with a desktop browser too.</p>\n\n<p>The goal is to try to figure out how to handle taps, double taps and long taps. Nothing fancy.</p>\n\n<p>Basically, this is what happens:</p>\n\n<p>The <strong>Android stock browser</strong> doesn't fire touch events. It just tries to emulate mouse clicks with taps, firing <code>mousedown</code>, <code>mouseup</code> and <code>click</code> events consecutively, but double taps just zoom in and out tha page.</p>\n\n<p><strong>Chrome</strong> for Android fires the touchstart event when the finger touches the screen. If it's released soon enough, it fires then <code>mousedown</code>, <code>mouseup</code>, <code>touchend</code> and finally <code>click</code> events.</p>\n\n<p>In case of <em>long tap</em>, after about half a second it fires <code>mousedown</code> and <code>mouseup</code>, and <code>touchend</code> when the finger is lifted, with no <code>click</code> event at the end.</p>\n\n<p>If you <em>move your finger</em>, it fires a <code>touchmove</code> event a couple of times, then it fires a <code>touchcancel</code> event, and nothing happens afterwards, not even a <code>touchend</code> event when lifting the finger.</p>\n\n<p>A <em>double tap</em> triggers the zoom in/out features, but event-wise it fires the combo <code>touchstart</code>-<code>touchevent</code> twice, with no mouse events fired.</p>\n\n<p><strong>Firefox</strong> for Android correctly fires the <code>touchstart</code> event, and in case of short tap fires <code>mousedown</code>, <code>mouseup</code>, <code>touchend</code> and <code>click</code> afterwards.</p>\n\n<p>In case of <em>long tap</em>, it fires <code>mousedown</code>, <code>mouseup</code> and finally <code>touchend</code> events. It's the same of Chrome for these things.</p>\n\n<p>But if you <em>move your finger</em>, if fires <code>touchmove</code> continously (as one may expect) but it doesn <em>not</em> fire the <code>touchleave</code> event when the finger leaves the element with the event listener, and doesn't fire the <code>touchcancel</code> event when the finger gets out of the browser viewport.</p>\n\n<p>For <em>double taps</em>, it behaves just like Chrome.</p>\n\n<p><strong>Opera Mobile</strong> does the same thing of Chrome and Firefox for a short tap, but in case of long press activates some sort of sharing feature that I really want to disable. If you move your finger, or double tap, it behaves just like Firefox.</p>\n\n<p><strong>Chrome beta</strong> does the usual for short taps, but in case of long taps it doesn't fire the <code>mouseup</code> event anymore, just <code>touchstart</code>, then <code>mousedown</code> after half a second, then <code>touchend</code> when the finger is lifted. When the finger is moved, now it behaves like Firefox and Opera Mobile.</p>\n\n<p>In case of <em>double taps</em>, it doesn't fire touch events <em>when zooming out</em>, but only when zooming in.</p>\n\n<p>Chrome beta shows the oddest behaviour, but I can't really complain since it's a beta.</p>\n\n<p><strong>The question is</strong>: is there a simple and way to try to detect short taps, long taps and double taps in the most common browsers of touch devices?</p>\n\n<p>Too bad I can't test it on iOS devices with Safari, or IE for Windows Phone 7/Phone 8/RT, but if some of you can, your feedback would be very appreciated.</p>\n",
            "last_activity_date": 1412974275,
            "question_id": 14486804,
            "score": 41,
            "tags": [
                "javascript",
                "mobile",
                "touch"
            ],
            "title": "Understanding touch events"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>The problem is that you only really get one shot at the css (since it is pretty much static content at the client)... you can't (easily) adapt it to suit on the fly at the client - so for those tricky incompatible cases (and there's too many of them), detection is sadly the best route. I can't see this changing very soon.</p>\n\n<p>With javascript, you can often avoid much of this pain through libraries like (as you state) jQuery - and checking for <em>functionality</em> support rather than identifying the specific browser (most of the time). There are some cases you need to know exactly (the box model, for example).</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Well hacks are quicker for the browser, but browser detection gives better readablity in your CSS if you structure it right.\nIf you can make browser detection and at the same time can share the CSS between the browsers, and only have the different css in seperate files or whatever, then I would use browser detection - as this is something a newbie can understand, where CSS hacks is hard to understand if you don't know them</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I prefer to use browser detection and put the browser-independent CSS into its own file.</p>\n\n<p>The best solution, however, is to find CSS that is cross-compatible by default and just use that.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is a third option:</p>\n\n<p><strong>Minimize or eliminate the need for browser detection and CSS hacks.</strong></p>\n\n<p>I try to use things like jQuery plug-ins that take care of any browser differences for you (for widgets and the like).  This doesn't take care of everything but it does a lot and has delegated the effort of supporting multiple browsers to someone who has spent and will spend far more effort on it than you can afford to or want to.</p>\n\n<p>After that I follow these princples:</p>\n\n<ul>\n<li>Use what I call <strong>minimal CSS</strong>, meaning only use features that are widely supported;</li>\n<li>Use tables for complex layout if necessary.  You may not like this but frankly to do things like side-by-side layout, tables will work on browsers going back a decade and will be a lot less effort than getting divs to work with combinations of absolute positioning, floating and the like;</li>\n<li><a href=\"http://www.quirksmode.org/css/quirksmode.html\" rel=\"nofollow\"><strong>Force IE6 into strict rather than quirks mode by adding a DOCTYPE</strong></a>.  I can't stress how much easier this will make your life but oddly many people don't seem to do it still;</li>\n<li>Minimize <a href=\"http://css.maxdesign.com.au/listamatic/about-boxmodel.htm\" rel=\"nofollow\">box model</a> issues by either using the correct DOCTYPE or using nested block elements rather than the other <a href=\"http://css-discuss.incutio.com/?page=BoxModelHack\" rel=\"nofollow\">box model hacks</a>; and</li>\n<li>If necessary include extra CSS files for relevant browsers.  I tend to do this on the server rather than the client with generated pages (which, let's face it, is most of them).  Many projects I've worked on have had IEfix.css files.</li>\n</ul>\n\n<p>After that, I divide browsers into tiers:</p>\n\n<p>Tier 1:</p>\n\n<ul>\n<li>Firefox 3;</li>\n<li>IE7.</li>\n</ul>\n\n<p>My website <strong>must</strong> work on these.</p>\n\n<p>Tier 2:</p>\n\n<ul>\n<li>Firefox 2;</li>\n<li>Safari;</li>\n<li>Opera;</li>\n<li>Chrome.</li>\n</ul>\n\n<p>My website <strong>should</strong> work on these.  This may offend some people but frankly the market share of these browsers is so low that they're simply not as important as Firefox 3 or IE7.</p>\n\n<p>Tier 3:</p>\n\n<ul>\n<li>IE6;</li>\n<li>Others.</li>\n</ul>\n\n<p>Minimal effort will be made to work on these unless it is, for example, a company requirement.  IE6 is the nightmare one but it's <a href=\"http://www.w3schools.com/browsers/browsers_stats.asp\" rel=\"nofollow\">market share</a> as of December was 20% and rapidly falling.  Plus there are valid security concerns (on financial websites for example) for dissuading or even disallowing the use of IE6 such that sites like <a href=\"http://www.hyperborea.org/journal/archives/2008/04/21/blocking-ie6/\" rel=\"nofollow\">Paypal have blocked IE6</a> and <a href=\"http://tech.slashdot.org/article.pl?sid=09%2F01%2F01%2F145231&amp;from=rss\" rel=\"nofollow\">Google tells users to drop IE6</a>.</p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<blockquote>\n  <p>Is there a reason you use or don't use either of these?</p>\n</blockquote>\n\n<p>Yes. Client-side browser-detection breaks if JavaScript is deactivated and might not work correctly with future browser versions. The last reason is also true for CSS hacks. Server-side browser detection breaks if the user explicitly tries to break it, but it still might be a viable alternative.</p>\n\n<p>What I would recommend:</p>\n\n<p>Make sure that you're code works in the standars compliant browsers - ie develop in one or two of those and check <a href=\"http://browsershots.org\" rel=\"nofollow\">browsershots.org</a> afterwards. Most likely it will be possible to implement the desired outcome in all of them with one stylesheet.</p>\n\n<p>Then, there's IE. If there are only a few issues, you could go with a CSS hack. Otherwise, use conditional comments.</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>If I have to support ancient browser's as well, I generally go the way of graceful degradation: I'll just let them show the pure html with a basic stylesheet (font sizes, colors, ...). All the fancy stuff will be hidden with an <code>@import</code> rule.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I generally like to have a stylesheet for standards-compliant browsers such as Firefox and Safari and then use <a href=\"http://msdn.microsoft.com/en-us/library/ms537512.aspx\" rel=\"nofollow\">conditional comments</a> to detect Internet Explorer and serve it an additional CSS file containing IE-specific fixes and overrides.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<blockquote>\n  <p>Personally, I have found this to be quite time consuming to find all of these hacks and test them; each change you make you have to test in 4+ browsers to make sure it didn't break anything else.</p>\n</blockquote>\n\n<p>You shouldn't have to test 'proper' CSS hacks on every browser.</p>\n\n<p>The idea is that you write standards-compliant code, and then add specific hacks to target one and only one browser (or rendering engine) that makes a mistake. For example, writing \"* html #myelement\" to target an exception for IE6 only: no other browser will ever be affected by that hack so there's no need to test it exhaustively. It could only go wrong if some new obscure browser came along and made exactly the same mistake as IE6, which is extremely unlikely, not your fault, and something you could expect to get fixed quickly.</p>\n\n<p>There are some things that call themselves CSS hacks but which use invalid constructs, such as the \"_propertyname\" hack. This can break across browsers because when you use invalid code every browser might interpret it differently. Don't use these.</p>\n\n<p>To be honest, it is in any case not the issue it once was, primarily because IE5 is dead. If you use a Standards Mode doctype and write to the standards, it will mostly work in the current round of browsers. The only real remaining problem case is IE6, which you can target with \"* html\"; it is unlikely you will need much more in the way of CSS hacks than that. The days of the Box Model Hack are, thankfully, over.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I try not to use either. In a lot of cases the issues that IE have can be avoided by simplifying the structure of your markup somewhat.</p>\n\n<p>It also helps if you use a decent CSS reset like <a href=\"http://meyerweb.com/eric/thoughts/2007/05/01/reset-reloaded/\" rel=\"nofollow\">Eric Meyer's</a>.</p>\n\n<p>I am also slowly but surely dropping support for IE6 as a matter of principle, especially given the latest security issues with IE6 and IE7 - we're not going to change people's browsing habits and browser preferences if we keep supporting crappy browsers.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Listen to your code! Kent Beck says it. And in Wing-Tsun they say: be like the water that bends! Or something.</p>\n\n<p>Look, here's a CSS Hack to get IE5 to understand html5: <a href=\"http://blog.whatwg.org/styling-ie-noscript\" rel=\"nofollow\">http://blog.whatwg.org/styling-ie-noscript</a>.</p>\n\n<p>And here's the same using JS: <a href=\"http://blog.whatwg.org/supporting-new-elements-in-ie\" rel=\"nofollow\">http://blog.whatwg.org/supporting-new-elements-in-ie</a>.</p>\n\n<p>Compare 5 pages of hack explanation with 5 lines of well-understandable code. So, use JS.</p>\n\n<p>Things have their benefits and their downsides. And your understanding of the matter and the elegance of the actual code lead the way. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Carefully consider everything above, especially pointers about doctype.  If you must apply a CSS hack, for a specific browser know that hacks are almost always avoidable.  Especially for a dry static page.</p>\n\n<p>Speaking from limited experience developing these things... I am assuming you want to make a slick Web page that flashes without the messy Adoobi boughtware:</p>\n\n<ul>\n<li>Code a page which looks reasonable on these browsers, all of which can be tested on one machine:</li>\n</ul>\n\n<p><strong>Op3ra 9.6, S@fari 3, Chr0me 1, 1nternet Xpl0rer 6, 7 &amp; 8, Firefux 1.5</strong></p>\n\n<ul>\n<li><p>Use the @import css rule to ditch the css in ancient browsers and let them eat cake.</p></li>\n<li><p>Use a combination of object detection and browser sniffing to find and eliminate problem browsers (all versions below the targetted above). Also catch the ancient browsers you know aren't up to speed (css property you can test and compare to known value) just in case they make it past the sniffer, also use conditional comments to kick out 1E5 feeding it some anti-css to calm it down on its way, similar for ie6 except keep it in the jQu3ry if at all possible.</p></li>\n<li><p>Use a dynamic element to load the jQu3ry libray into the allowed browsers (any which has not failed your careful tests). I.e. we don't even import the library when we know it is not going to work / we let everyone else in.</p></li>\n<li><p>Use jQu3ry to address any problems in your supported browsers, most of which will only come to light when your pages become dynamic.  Use jQu3ry to enhance the layout and add in your interface etc...</p></li>\n<li><p>Expand on this with media statements and you could test for a css value unique to those devices, now you will have more knowledge to use in adjusting the layout (i.e. destroy those columns and shrink those images).  Turn off animations and so on.</p></li>\n<li><p>Keep it accessible by always using text labels and some positioning tricks to make them disappear if you must Mr. flashy menu guy... just don't rely on images or Javascript alone to browse your sites.</p></li>\n<li><p>Its easy enough to block anything below Netsc@pe 4.  Giving them just the basic Web, the way it was meant to be originally.  I.e. don't even specify a background or color, or font or anything for them.  The browser's defaults should work fine. The information will be accessible.</p></li>\n</ul>\n\n<p>In fact, I move that all \"accessible\" browsers ID themselves as N$4 so we can easily nuke them out of the dynamic presentation and keep ourselves from screwing over the handicapped.</p>\n\n<p>Alas she was a good ship but even a good ship for scaring the ever-lying out of M$ must die. Do not fear for we have an even better one now ;)</p>\n\n<p><hr /></p>\n\n<p>Just my 2 cents, apply with caution.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>CSS hacks are not the way to go because browsers are updated all the time, and new updates may break your hacks, while with Javascript browser detection, you can accurately confirm the capabilities of the browser. However, another option is to use minimal CSS as to make sure that everything is working in all situations. JQuery and other javascript libraries that are for the UI have built-in detection as to the capabilities of browsers, so you should check those out.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Whats wrong with detecting the browser server side? Seems very effective and foolproof (save for the user altering their user-agent string). You can use PHP to either choose the stylesheet for a page or dynamically generate it for each request - not sure if other languages let you output directly to the file and let you set the headers manually, but I can't imagine them not letting you identify the user-agent, so one of these options is probably viable for any server-side environment.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>hacks will always add to your work efforts and work efforts should be optimized</p>\n\n<p>first you add the hacks and then start worrying about how they behave on different browsers and different machine.</p>\n\n<p>instead you can rely on vendor specific css extensions\n<a href=\"http://reference.sitepoint.com/css/vendorspecific\" rel=\"nofollow\">http://reference.sitepoint.com/css/vendorspecific</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>[My approach][1] using a PHP class to detect os, browser and browser version.</p>\n\n<p>[1]: My approach using a PHP class to detect os, browser and browser version  <a href=\"http://reinholdweber.com/css/css-hacks-browser-version-detection-a-new-approach/\" rel=\"nofollow\">http://reinholdweber.com/css/css-hacks-browser-version-detection-a-new-approach/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In 6 years of writing HTML and CSS for a living, the vast majority of my CSS issues have come from Internet Explorer.</p>\n\n<p>As pointed out in other answers, you can use <a href=\"http://msdn.microsoft.com/en-us/library/ms537512%28VS.85%29.aspx\" rel=\"nofollow\">conditional comments</a> to serve additional stylesheets to IE (or just to add a class to the <code>&lt;body&gt;</code> element, if you don\u2019t like multiple stylesheets). Unlike CSS hacks, conditional comments are explicit and supported. Unlike trying to detect IE from the <code>user-agent string</code>, they\u2019re guaranteed to work.</p>\n\n<p>As for non-IE CSS issues, I\u2019ve never found one that was worth browser detection. I prefer keeping all the CSS in CSS files.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Commonly when I look around the Internet, I find that people are generally using CSS hacks to make their website look the same in all browsers. Personally, I have found this to be quite time consuming to find all of these hacks and test them; each change you make you have to test in 4+ browsers to make sure it didn't break anything else.</p>\n\n<p>About a year ago, I looked around the Internet for what other major sites are using (Yahoo, Google, BBC, etc) and found that most of them are doing some form of browser detection (JS, HTML if statements, server based). I have started doing this as well. On almost all of the sites I have worked on recently, I use jQuery, so I use the built in browser detection.</p>\n\n<p>Is there a reason you use or don't use either of these?</p>\n",
            "last_activity_date": 1389760557,
            "question_id": 454863,
            "score": 32,
            "tags": [
                "javascript",
                "css",
                "browser-detection"
            ],
            "title": "What is better: CSS hacks or browser detection?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Javascript is certainly OOP.  You always have polymorphism, however you have to sacrifice either encapsulation or instantiation which is the problem you ran into.</p>\n\n<p>Try this to just brush up on your options.\n<a href=\"http://www.webmonkey.com/2010/02/make_oop_classes_in_javascript/\" rel=\"nofollow\">http://www.webmonkey.com/2010/02/make_oop_classes_in_javascript/</a>\nAlso an old question that I had bookmarked:\n<a href=\"http://stackoverflow.com/questions/107464/is-javascript-object-oriented\">Is JavaScript object-oriented?</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think what you're looking for is the \"Revealing Prototype Pattern\".</p>\n\n<p>Dan Wahlin has a great blog post: <a href=\"http://weblogs.asp.net/dwahlin/archive/2011/08/03/techniques-strategies-and-patterns-for-structuring-javascript-code-revealing-prototype-pattern.aspx\">http://weblogs.asp.net/dwahlin/archive/2011/08/03/techniques-strategies-and-patterns-for-structuring-javascript-code-revealing-prototype-pattern.aspx</a></p>\n\n<p>and even better Pluralsight course on this and other related JavaScript structures:  <a href=\"http://pluralsight.com/training/courses/TableOfContents?courseName=structuring-javascript&amp;highlight=dan-wahlin_structuring-javascript-module1!dan-wahlin_structuring-javascript-module2!dan-wahlin_structuring-javascript-module5!dan-wahlin_structuring-javascript-module4!dan-wahlin_structuring-javascript-module3#structuring-javascript-module1\">http://pluralsight.com/training/courses/TableOfContents?courseName=structuring-javascript&amp;highlight=dan-wahlin_structuring-javascript-module1!dan-wahlin_structuring-javascript-module2!dan-wahlin_structuring-javascript-module5!dan-wahlin_structuring-javascript-module4!dan-wahlin_structuring-javascript-module3#structuring-javascript-module1</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>what about this : </p>\n\n<pre><code>var Foo = (function() {\n    // \"private\" variables \n    var _bar;\n\n    // constructor\n    function Foo() {};\n\n    // add the methods to the prototype so that all of the \n    // Foo instances can access the private static\n    Foo.prototype.getBar = function() {\n        return _bar;\n    };\n    Foo.prototype.setBar = function(bar) {\n        _bar = bar;\n    };\n\n    return Foo;\n})();\n</code></pre>\n\n<p>And now we have instantiation, encapsulation and inheritance.<br>\nBut, there still is a problem. The <code>private</code> variable is <code>static</code> because it's shared across all instances of <code>Foo</code>. Quick demo :  </p>\n\n<pre><code>var a = new Foo();\nvar b = new Foo();\na.setBar('a');\nb.setBar('b');\nalert(a.getBar()); // alerts 'b' :(    \n</code></pre>\n\n<p>A better approach might be using conventions for the private variables : any private variable should start with an underscore. This convention is well known and widely used, so when another programmer uses or alters your code and sees a variable starting with underscore, he'll know that it's private, for internal use only and he won't modify it.<br>\nHere's the rewrite using this convention : </p>\n\n<pre><code>var Foo = (function() {\n    // constructor\n    function Foo() {\n        this._bar = \"some value\";\n    };\n\n    // add the methods to the prototype so that all of the \n    // Foo instances can access the private static\n    Foo.prototype.getStaticBar = function() {\n        return this._bar;\n    };\n    Foo.prototype.setStaticBar = function(bar) {\n        this._bar = bar;\n    };\n\n    return Foo;\n})();\n</code></pre>\n\n<p>Now we have instantiation, inheritance, but we've lost our encapsulation in favor of conventions : </p>\n\n<pre><code>var a = new Foo();\nvar b = new Foo();\na.setBar('a');\nb.setBar('b');\nalert(a.getBar()); // alerts 'a' :) \nalert(b.getBar()); // alerts 'b' :) \n</code></pre>\n\n<p>but the private vars are accessible  : </p>\n\n<pre><code>delete a._bar;\nb._bar = null;\nalert(a.getBar()); // alerts undefined :(\nalert(b.getBar()); // alerts null :(\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>I was thinking about this particular subject recently and the limitations of the various approaches. The best solution I've been able to come up with is below. </p>\n\n<p>It seems to solve the problems with inheritance, instantiation and ecapsulation (at least from tests on Google Chrome v.24) although probably at a cost in memory usage.</p>\n\n<pre><code>function ParentClass(instanceProperty) {\n  // private\n  var _super = Object.create(null),\n      privateProperty = \"private \" + instanceProperty;\n  // public\n  var api = Object.create(_super);\n  api.constructor = this.constructor;\n  api.publicMethod = function() {\n     console.log( \"publicMethod on ParentClass\" );\n     console.log( privateProperty );\n  };\n  api.publicMethod2 = function() {\n     console.log( \"publicMethod2 on ParentClass\" );\n     console.log( privateProperty );\n  };\n  return api;\n}\n\nfunction SubClass(instanceProperty) {\n    // private\n    var _super = ParentClass.call( this, instanceProperty ),\n        privateProperty = \"private sub \" + instanceProperty;\n    // public\n    var api = Object.create(_super);\n    api.constructor = this.constructor;\n    api.publicMethod = function() {\n       _super.publicMethod.call(this); // call method on ParentClass\n        console.log( \"publicMethod on SubClass\" );\n        console.log( privateProperty );\n    }\n    return api;\n}\n\nvar par1 = new ParentClass(0),\n    par2 = new ParentClass(1),\n    sub1 = new SubClass(2),\n    sub2 = new SubClass(3);\n\npar1.publicMethod();\npar2.publicMethod();\nsub1.publicMethod();\nsub2.publicMethod();\npar1.publicMethod2();\npar2.publicMethod2();\nsub1.publicMethod2();\nsub2.publicMethod2();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This closure allows instantiation and encapsulation but no inheritance.</p>\n\n<pre><code>function Foo(){\n    var _bar = \"foo\";\n\n    return {\n        getBar: function() {\n            return _bar;\n        },\n        setBar: function(bar) {\n            _bar = bar;\n        }\n    };\n};\n\na = Foo();\nb = Foo();\n\na.setBar(\"bar\");\nalert(a.getBar()); // \"bar\"\nalert(b.getBar()); // \"foo\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>One problem with a lot of JS classes out there is that they do not secure their fields and methods which means that anyone using it may accidentally replace a method. For example the code:</p>\n\n<pre><code>function Class(){\n    var name=\"Luis\";\n    var lName=\"Potter\";\n}\n\nClass.prototype.changeName=function(){\n    this.name=\"BOSS\";\n    console.log(this.name);\n};\n\nvar test= new Class();\nconsole.log(test.name);\ntest.name=\"ugly\";\nconsole.log(test.name);\ntest.changeName();\ntest.changeName=function(){\n    console.log(\"replaced\");\n};\ntest.changeName();\ntest.changeName();\n</code></pre>\n\n<p>will output:</p>\n\n<pre><code>ugly\nBOSS\nreplaced \nreplaced \n</code></pre>\n\n<p>As you can see the changeName function gets overriden. The following code would secure the class methods and fields and the getters and setters would be used to access them making this more of a \"regular\" class found in other languages.</p>\n\n<pre><code>function Class(){\n    var name=\"Luis\";\n    var lName=\"Potter\";\n\n    function getName(){\n         console.log(\"called getter\"); \n         return name;\n    };\n\n    function setName(val){\n         console.log(\"called setter\"); \n         name = val\n    };\n\n    function getLName(){\n         return lName\n    };\n\n    function setLName(val){\n        lName = val;\n    };\n\n    Object.defineProperties(this,{\n        name:{\n            get:getName, \n            set:setName, \n            enumerable:true, \n            configurable:false\n        },\n        lastName:{\n            get:getLName, \n            set:setLName, \n            enumerable:true, \n            configurable:false\n        }\n    });\n}\n\nClass.prototype.changeName=function(){\n    this.name=\"BOSS\";\n};   \n\nObject.defineProperty(Class.prototype, \"changeName\", {\n    writable:false, \n    configurable:false\n});\n\nvar test= new Class();\nconsole.log(test.name);\ntest.name=\"ugly\";\nconsole.log(test.name);\ntest.changeName();\ntest.changeName=function(){\n    console.log(\"replaced\")\n};\ntest.changeName();\ntest.changeName();\n</code></pre>\n\n<p>This outputs:</p>\n\n<pre><code>called getter\nLuis\ncalled setter \ncalled getter \nugly \ncalled setter \ncalled setter \ncalled setter \n</code></pre>\n\n<p>Now your class methods cannot be replaced by random values or functions and the code in the getters and setters always run when attempting to read or write to field.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I understand basic JavaScript pseudo-classes:</p>\n\n<pre><code>function Foo(bar) {\n    this._bar = bar;\n}\n\nFoo.prototype.getBar = function() {\n    return this._bar;\n};\n\nvar foo = new Foo('bar');\nalert(foo.getBar()); // 'bar'\nalert(foo._bar); // 'bar'\n</code></pre>\n\n<p>I also understand the module pattern, which can emulate encapsulation:</p>\n\n<pre><code>var Foo = (function() {\n    var _bar;\n\n    return {\n        getBar: function() {\n            return _bar;\n        },\n        setBar: function(bar) {\n            _bar = bar;\n        }\n    };\n})();\n\nFoo.setBar('bar');\nalert(Foo.getBar()); // 'bar'\nalert(Foo._bar); // undefined\n</code></pre>\n\n<p>But there are un-OOP-like properties to both of these patterns.  The former does not provide encapsulation.  The latter does not provide instantiation.  Both patterns can be modified to support pseudo-inheritance.</p>\n\n<p>What I'd like to know is if there is any pattern that allows:</p>\n\n<ul>\n<li>Inheritance</li>\n<li>Encapsulation (support for \"private\" properties/methods)</li>\n<li>Instantiation (can have multiple instances of the \"class\", each with its own state)</li>\n</ul>\n",
            "last_activity_date": 1422996165,
            "question_id": 12610394,
            "score": 30,
            "tags": [
                "javascript",
                "oop",
                "design-patterns"
            ],
            "title": "JavaScript Classes"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>How does a chess algorithm work?:</p>\n\n<blockquote>\n  <p>What a chess computer tries to do is\n  generate the board-position tree five\n  or 10 or 20 moves into the future.\n  Assuming that there are about 20\n  possible moves for any board position,\n  a five-level tree contains 3,200,000\n  board positions. A 10-level tree\n  contains about 10,000,000,000,000 (10\n  trillion) positions. The depth of the\n  tree that a computer can calculate is\n  controlled by the speed of the\n  computer playing the game. The fastest\n  chess computers can generate and\n  evaluate millions of board positions\n  per second.</p>\n  \n  <p>Once it generates the tree, then the\n  computer needs to \"evaluate the board\n  positions.\" That is, the computer has\n  to look at the pieces on the board and\n  decide whether that arrangement of\n  pieces is \"good\" or \"bad.\" The way it\n  does this is by using an evaluation\n  function. The simplest possible\n  function might just count the number\n  of pieces each side has. If the\n  computer is playing white and a\n  certain board position has 11 white\n  pieces and nine black pieces, the\n  simplest evaluation function might be:</p>\n\n<pre><code>  11 - 9 = 2 \n</code></pre>\n  \n  <p>Obviously, for chess that formula is\n  way too simple, because some pieces\n  are more valuable than others. So the\n  formula might apply a weight to each\n  type of piece. As the programmer\n  thinks about it, he or she makes the\n  evaluation function more and more\n  complicated by adding things like\n  board position, control of the center,\n  vulnerability of the king to check,\n  vulnerability of the opponent's queen,\n  and tons of other parameters. No\n  matter how complicated the function\n  gets, however, it is condensed down to\n  a single number that represents the\n  \"goodness\" of that board position.</p>\n</blockquote>\n\n<p><a href=\"http://www.howstuffworks.com/chess.htm/printable\" rel=\"nofollow\">Source</a>.</p>\n\n<p>For building your own javascript 'engine' that's able to play chess at a basic level check <a href=\"https://web.archive.org/web/20111102211712/http://javascript.internet.com/games/javascript-chess-with-cpu-oppo.html\" rel=\"nofollow\">Step by Step Javascript Chess with CPU oppo</a></p>\n\n<p>If you scroll down it contains the source code of this, must say very limited, chess engine purely based on javascript. It also has a working version of the game to try out and all the necessary resources for building your own.</p>\n\n<p>Some useful resources:</p>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20130206013430/http://ajax.phpmagazine.net/2006/04/first_implementation_of_a_ches.html\" rel=\"nofollow\">First implementation of a chess engine in Javascript</a></li>\n<li><a href=\"http://www.cs.ualberta.ca/~tony/ICCA/anatomy.html\" rel=\"nofollow\">The Anatomy of\nChess Programs</a>, by Tony Marsland, is a nice intro on how current\nchess programs work. </li>\n<li><a href=\"http://www.chess-space.com/\" rel=\"nofollow\">Chess Space</a></li>\n<li><a href=\"http://www.xs4all.nl/~verhelst/chess/programming.html\" rel=\"nofollow\">Paul\nVerhelst</a> - Question and Answers</li>\n<li><a href=\"https://web.archive.org/web/19970805015858/http://diwww.epfl.ch/~diderich/research/minimax/minimax.html\" rel=\"nofollow\">Bibliography\non Minimax Algorithms</a> (<a href=\"http://liinwww.ira.uka.de/bibliography/Ai/minimax.html\" rel=\"nofollow\">newer version</a>).</li>\n<li><a href=\"http://www.craftychess.com/\" rel=\"nofollow\">Crafty</a> is a strong program\nwhose source code is freely available and, for a chess program, quite\nreadable.</li>\n<li><a href=\"http://www.lkessler.com/brutefor.shtml#bf6\" rel=\"nofollow\">Unfinished Work and Challenges to Chess Programmers</a></li>\n<li><a href=\"http://stackoverflow.com/questions/297577/is-there-a-perfect-algorithm-for-chess\">Is there a perfect algorithm for Chess?</a> Discussion here on so</li>\n<li><a href=\"http://rads.stackoverflow.com/amzn/click/0716782391\" rel=\"nofollow\">How Computers Play Chess</a> The best book I've found describing the theory behind chess AI algorithms</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 53
                },
                {
                    "body": "<p>The <a href=\"http://www.chessbin.com\" rel=\"nofollow\">Computer Chess Blog</a> documents the creation of a C# chess engine.  It's not JavaScript but the syntax is similar enough that you might get a good understanding of the different chess engine components.</p>\n\n<p>Also if you want your chess engine to be web enabled you might want to consider using C# with a Silverlight GUI.  You will get better performance from .NET than you would with JavaScript.  As you will learn this will translate into a stronger (deeper searching) chess program.  A good example of Silverlight Chess can be found at <a href=\"http://www.geekswithchess.com\" rel=\"nofollow\">GeeksWithChess.com</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For algorithmic discussion, try the <a href=\"http://chessprogramming.wikispaces.com/\" rel=\"nofollow\">Chess Programming Wiki</a>.</p>\n\n<p>Techniques suited to serious chess engines are not necessarily right for web based games.  Real chess engines run orders of magnitude faster, using multi-megabyte opening books and spending minutes or hours on each turn.  A real chess engine will search deeper than 12 ply, while javascript won't get far past 6 ply in reasonable web time.  Therefore something like a <a href=\"http://chessprogramming.wikispaces.com/Oracle\" rel=\"nofollow\">piece-square oracle</a>, which has diminishing and possibly negative returns as search deepens and is consequently well out of fashion in chess programming circles, is arguably well suited to a javascript engine.  If you do what people were doing in the 80s, you will end up with a snappy and manageable engine that will beat most visitors.</p>\n\n<p>And of course you don't really want to look up what other people are doing.  Just make sure you have some variation of a <a href=\"http://chessprogramming.wikispaces.com/Alpha-Beta\" rel=\"nofollow\">alpha-beta search</a>, then tweak your evaluation function and everything else as you see fit.</p>\n\n<p>In 2002 and 2012 I wrote then rewrote <a href=\"http://p4wn.sf.net\" rel=\"nofollow\">p4wn</a>, a small public domain javascript engine.  It uses alpha-beta and a piece-square oracle.  It is probably weaker than <a href=\"https://github.com/glinscott/Garbochess-JS\" rel=\"nofollow\">Garbochess-JS</a>, but then Garbochess has an opening book that is bigger that the entire p4wn engine.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Is there any Chess game API , purely written in JavaScript ? No Flash!\nAnybody know the algorithm(in general) used in Chess games ?</p>\n",
            "last_activity_date": 1396208120,
            "question_id": 2055332,
            "score": 27,
            "tags": [
                "javascript",
                "algorithm",
                "chess"
            ],
            "title": "Chess game in JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Since Sails is a purely back-end framework and Angular is purely front-end, they can work together nicely.  It can get a little confusing when you bring the Angular generator into it, but here are the basic steps if you were to start with the <a href=\"https://github.com/angular/angular-seed\">Angular Seed</a> app and Sails v0.10:</p>\n\n<ol>\n<li>Create a new Sails app with <code>sails new myApp</code></li>\n<li>Wipe out the contents of the <code>myApp/assets</code> folder</li>\n<li>Copy the contents of the Angular Seed <code>app</code> folder into <code>myApp/assets</code></li>\n<li>Replace the contents of <code>myapp/views/layout.ejs</code> with those of the Angular Seed <code>app/index.html</code> file</li>\n<li>Cut all of the non-script tag content from the <code>layout.ejs</code> file (everything after the <code>&lt;body&gt;</code> tag  and before the first <code>&lt;script&gt;</code> tag and use it to replace the contents of <code>myApp/views/homepage.ejs</code></li>\n<li>Place <code>&lt;%-body%&gt;</code> after the <code>&lt;body&gt;</code> tag in <code>layout.ejs</code></li>\n</ol>\n\n<p>You can then start the server with <code>sails lift</code> and you'll see the Angular app at <code>http://localhost:1337</code>.</p>\n\n<p>I've <a href=\"https://github.com/sgress454/angular-on-sails\">put this on Github</a> for reference.</p>\n\n<p>Using this method, you don't need to do anything to the Gruntfile, and you'll never call <code>grunt server</code>--that's solely for testing Angular apps with their test server, which you're replacing with Sails.  You'll still get the benefit of the Sails grunt-sync task which watches and syncs-up your front-end assets as they are changed.</p>\n\n<p>If you really want to use the Yeoman Angular generator, you can try generating an app directly into the <code>assets</code> folder of your Sails app and using the generator commands from within that folder.  I haven't used it before, so I don't know what the dist folder is for, but it seems like all of the node modules it installs are there to support the test web server (which again you don't need, since you have Sails) and the test suite (which is always nice).  The only issue I can see is if you need some of the tasks in that Gruntfile that Yeoman generates.  Sails handles Less compilation and CSS minification (in production mode), but it doesn't do anything with Jade or Stylus, so you'd have to add those tasks to the Sails Gruntfile if you really needed them.</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>your questions are exactly why I created Sailng: <a href=\"https://github.com/ryancp/sailng\">https://github.com/ryancp/sailng</a>\nIt is an example/boilerplate application that uses the latest Sails 0.10.0-rc5.</p>\n\n<p>It also demonstrates how to use socket.io within Sails to provide realtime updates to the client with no ajax polling.</p>\n\n<p>Clone it and follow the instructions to get a better idea of how to use Sails and Angular together.</p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I am developing an app that can utilize SailsJS for back-end and AngularJS for Front-end. I thought that I'll create an Angular App using Yeoman-angular generator <a href=\"https://github.com/yeoman/generator-angular\">https://github.com/yeoman/generator-angular</a>, and once I am done with the front-end logic I'll create a sails app using,</p>\n\n<ol>\n<li>npm install -g sails</li>\n<li>sails new app</li>\n</ol>\n\n<p>And then I'll transfer all my AngularJS files to the Sails folder.</p>\n\n<p>But the thing is that AngularJS creates creates a folder hierarchy like this <a href=\"https://github.com/rishy/angular-jade-stylus-seed\">https://github.com/rishy/angular-jade-stylus-seed</a> and on running \"grunt server\" a \"dist\" folder is created which contains the final production version.</p>\n\n<p>On the other hand, after \"sails new app\" folder hierarchy for sails app is like.</p>\n\n<ul>\n<li>api\n<ul>\n<li>adapters/</li>\n<li>controllers/</li>\n<li>models/</li>\n<li>policies/</li>\n<li>services/</li>\n</ul></li>\n<li>assets\n<ul>\n<li>images/</li>\n<li>js/</li>\n<li>styles/</li>\n<li>favicon.ico</li>\n<li>robots.txt</li>\n</ul></li>\n<li>config/</li>\n<li>node_modules/</li>\n<li>views\n<ul>\n<li>home/</li>\n<li>403.ejs</li>\n<li>404.ejs</li>\n<li>500.ejs</li>\n<li>layout.ejs</li>\n</ul></li>\n<li>Gruntfile.js</li>\n<li>app.js</li>\n<li>package.JSON</li>\n</ul>\n\n<p>So, My questions are:</p>\n\n<ol>\n<li>Now, how do I transfer my Angular Files to this sails directory and how should I structure it?</li>\n<li>Since sails uses \"sails lift\" to start a server and angular uses \"grunt server\", which one of those should I use to start the server for my sailsJs + AngularJs app and what about the \"dist\" folder which is created after AngularJS?</li>\n<li>What changes will I have to make in the Gruntfile.js, since it should now contain the code from both Angular and Sails?</li>\n<li>Where should I keep my different views and style files and how should I access those form Angular or from Sails?</li>\n</ol>\n\n<p>I think lot of people are facing this similar problem since AngularJS and SailsJs are all the rage currently. There should be a robust boilerplate to create an AngularJS + SailsJS app, which sadly is missing right now.</p>\n",
            "last_activity_date": 1397096767,
            "question_id": 21938850,
            "score": 25,
            "tags": [
                "javascript",
                "node.js",
                "angularjs",
                "yeoman",
                "sails.js"
            ],
            "title": "AngularJS + SailsJS"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>Non-Mobile:</strong></p>\n\n<ul>\n<li><p><a href=\"http://www.brunildo.org/test/\" rel=\"nofollow\">http://www.brunildo.org/test/</a></p></li>\n<li><p><a href=\"http://www.gtalbot.org/BrowserBugsSection/\" rel=\"nofollow\">http://www.gtalbot.org/BrowserBugsSection/</a></p></li>\n<li><p><a href=\"http://www.quirksmode.org/\" rel=\"nofollow\">http://www.quirksmode.org/</a></p></li>\n<li><p><a href=\"http://www.quirksmode.org/bugreports/\" rel=\"nofollow\">http://www.quirksmode.org/bugreports/</a></p></li>\n<li><p><a href=\"http://www.positioniseverything.net/\" rel=\"nofollow\">http://www.positioniseverything.net/</a></p></li>\n<li><p><a href=\"http://reference.sitepoint.com/css\" rel=\"nofollow\">http://reference.sitepoint.com/css</a></p></li>\n<li><p><a href=\"http://www.richinstyle.com/bugs/\" rel=\"nofollow\">http://www.richinstyle.com/bugs/</a></p></li>\n<li><p><a href=\"http://haslayout.net/\" rel=\"nofollow\">http://haslayout.net/</a></p></li>\n<li><p><a href=\"http://css-discuss.incutio.com/wiki/Main_Page\" rel=\"nofollow\">http://css-discuss.incutio.com/wiki/Main_Page</a></p></li>\n<li><p><a href=\"https://web.archive.org/web/20100323052222/http://channel9.msdn.com/wiki/wiki/InternetExplorerSupportForCSS/\" rel=\"nofollow\">https://web.archive.org/web/20100323052222/http://channel9.msdn.com/wiki/wiki/InternetExplorerSupportForCSS/</a></p></li>\n<li><p><a href=\"https://web.archive.org/web/20100125012019/http://channel9.msdn.com/wiki/wiki/InternetExplorerBugs\" rel=\"nofollow\">https://web.archive.org/web/20100125012019/http://channel9.msdn.com/wiki/wiki/InternetExplorerBugs</a></p></li>\n<li><p><a href=\"http://css-class.com/test/bugs/ie/ie-bugs.htm\" rel=\"nofollow\">http://css-class.com/test/bugs/ie/ie-bugs.htm</a></p></li>\n<li><p><a href=\"http://perfectionkills.com/category/cft/\" rel=\"nofollow\">http://perfectionkills.com/category/cft/</a> (and <a href=\"http://kangax.github.com/cft/\" rel=\"nofollow\">http://kangax.github.com/cft/</a>)</p></li>\n<li><p><a href=\"http://api.jquery.com/jQuery.support/\" rel=\"nofollow\">http://api.jquery.com/jQuery.support/</a></p></li>\n<li><p><a href=\"http://www.css-lab.com/\" rel=\"nofollow\">http://www.css-lab.com/</a></p></li>\n<li><p><a href=\"http://www.iecss.com/\" rel=\"nofollow\">http://www.iecss.com/</a> ( Jonathan Neal's roundup of default IE styles )</p></li>\n<li><p><a href=\"http://marc.baffl.co.uk/bugs.php\" rel=\"nofollow\">http://marc.baffl.co.uk/bugs.php</a></p></li>\n<li><p><a href=\"http://dev.moonhenge.net/bugs/\" rel=\"nofollow\">http://dev.moonhenge.net/bugs/</a></p></li>\n<li><p><a href=\"http://webbugtrack.blogspot.com/search/label/IE7\" rel=\"nofollow\">http://webbugtrack.blogspot.com/search/label/IE7</a></p></li>\n<li><p><a href=\"http://www.enhanceie.com/ie/bugs.asp\" rel=\"nofollow\">http://www.enhanceie.com/ie/bugs.asp</a></p></li>\n<li><p><a href=\"http://dean.edwards.name/ie7/compatibility/\" rel=\"nofollow\">http://dean.edwards.name/ie7/compatibility/</a></p></li>\n<li><p><a href=\"https://web.archive.org/web/20101219060238/http://the-dees.webs.com/iepp1\" rel=\"nofollow\">https://web.archive.org/web/20101219060238/http://the-dees.webs.com/iepp1</a></p></li>\n<li><p><a href=\"http://edskes.net/ie8overflowandexpandingboxbugs.htm\" rel=\"nofollow\">http://edskes.net/ie8overflowandexpandingboxbugs.htm</a></p></li>\n<li><p><a href=\"http://simon.html5.org/test/ie8rc1-bugs/\" rel=\"nofollow\">http://simon.html5.org/test/ie8rc1-bugs/</a></p></li>\n<li><p><a href=\"http://magicm.awardspace.com/ie/\" rel=\"nofollow\">http://magicm.awardspace.com/ie/</a></p></li>\n<li><p><a href=\"http://www.howtocreate.co.uk/ie8.html\" rel=\"nofollow\">http://www.howtocreate.co.uk/ie8.html</a></p></li>\n<li><p><a href=\"http://www.designdetector.com/2006/08/ie7-old-bugs-for-new.php\" rel=\"nofollow\">http://www.designdetector.com/2006/08/ie7-old-bugs-for-new.php</a></p></li>\n<li><p><a href=\"https://web.archive.org/web/20130531191603/http://jhop.me/ie8-bugs\" rel=\"nofollow\">https://web.archive.org/web/20130531191603/http://jhop.me/ie8-bugs</a></p></li>\n<li><p><a href=\"https://web.archive.org/web/20100218123106/http://test.rowanw.com/reports\" rel=\"nofollow\">https://web.archive.org/web/20100218123106/http://test.rowanw.com/reports</a></p></li>\n</ul>\n\n<p><strong>Mobile:</strong></p>\n\n<ul>\n<li><a href=\"http://www.quirksmode.org/mobile/\" rel=\"nofollow\">http://www.quirksmode.org/mobile/</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>Here's one that covers browser inconsistencies on File Inputs, w/ a nice color coded table and everything. </p>\n\n<p><a href=\"http://gordon-myers.com/?p=170\" rel=\"nofollow\">http://gordon-myers.com/?p=170</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Not been updated in a while but was good till last year: <a href=\"http://www.webdevout.net/\" rel=\"nofollow\">http://www.webdevout.net/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here are some about my <a href=\"http://ihateinternetexplorer.com/\" rel=\"nofollow\">favorite browser</a> (apart from those already mentioned):</p>\n\n<ul>\n<li><a href=\"http://net.tutsplus.com/tutorials/html-css-techniques/9-most-common-ie-bugs-and-how-to-fix-them/\" rel=\"nofollow\">9 Most Common IE Bugs and How to Fix Them</a></li>\n<li><a href=\"http://devlunch.smart.fm/2009/07/29/six-things-your-mom-never-told-you-about-debugging-javascript/\" rel=\"nofollow\">Six Things Your Mom Never Told You About Debugging Javascript</a></li>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/cc351024%28VS.85%29.aspx\" rel=\"nofollow\">CSS Compatibility and Internet Explorer</a></li>\n<li><a href=\"http://www.zachleat.com/web/2010/02/24/array-sort/\" rel=\"nofollow\">Internet Explorer Array.sort Unreliable</a></li>\n<li><a href=\"http://blogs.msdn.com/b/ie/archive/2009/03/12/site-compatibility-and-ie8.aspx\" rel=\"nofollow\">Site Compatibility and IE8</a></li>\n<li><a href=\"http://channel9.msdn.com/Wiki/InternetExplorerProgrammingBugs/\" rel=\"nofollow\">Internet Explorer Programming Bugs</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://www.smashingmagazine.com/2009/10/14/css-differences-in-internet-explorer-6-7-and-8/\" rel=\"nofollow\">http://www.smashingmagazine.com/2009/10/14/css-differences-in-internet-explorer-6-7-and-8/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm about to develop my own browser inconsistency/bug compendium site but I'm wondering if I really need to - can we get a wiki of sites that do this already? I'm aware of a lot of them but I hope I'm not missing out on some major ones.</p>\n\n<p>I wanted mine to be more intuitive and social-like for most people, powered by tags and screenshots and test-case pages.</p>\n",
            "last_activity_date": 1417931004,
            "question_id": 3033330,
            "score": 23,
            "tags": [
                "javascript",
                "css",
                "internet-explorer",
                "cross-browser"
            ],
            "title": "Websites that archive cross-browser, cross-platform css/js bugs?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There is a similar question here which you should read: <a href=\"http://stackoverflow.com/questions/7732293/node-js-express-js-breaking-up-the-app-js-file\">Node.js &amp; Express.js: Breaking up the app.js file</a></p>\n\n<p>1) All your query logic should be put in models (modules that reside in /models for example)</p>\n\n<p>2) Separate all your routes (controllers) into modules (and put them in /routes for ex)\nBy routes I mean for example:\n- all the logic for \"Users\" routes go into /routes/users.js</p>\n\n<p>Try to keep you app as MVC-ish as possible.</p>\n\n<p>Small example for your app above:</p>\n\n<p><strong>app.js</strong></p>\n\n<pre><code>// configuration for express etc\nrequire('./routes/index')(app)\n</code></pre>\n\n<p><strong>routes/index.js</strong></p>\n\n<pre><code>var model = \"../models/users.js\";\n\nmodule.exports = function (app) {\n\n  app.get('/', function (req, res, next) {\n    model.get_recent(function (err, results) {\n      // do stuff with your results\n      res.render('index');\n    });\n  });\n\n}\n</code></pre>\n\n<p><strong>models/users.js</strong></p>\n\n<pre><code>module.exports = {\n  get_recent: function(callback) {\n    var query = \"SELECT * FROM users LIMIT 10\";\n    database.query(query, callback);\n  }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>In the expressjs download package, there is a folder called \"mvc\". The author provides a good example for a tiny&amp;efficient  mvc structure. Going through the code, you will get much inspiration.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>How about <a href=\"https://github.com/autoric/express-train\" rel=\"nofollow\">express-train</a> ? i have been using it lately, and it plays well with complex app structures.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Say i have this code to separate routes in expressjs:    </p>\n\n<pre><code>module.exports = function(express,app,client) {\n\n    app.get('/', function(req,res,next) {\n        var query = 'SELECT * FROM users LIMIT 10';\n        var user = client.query(query, function (err, results, fields) {\n            res.render('index', {\n                title: 'test',\n                users: results\n            });\n            client.end();\n        });\n    });\n}\n</code></pre>\n\n<p>And require it in <code>app.js</code>:</p>\n\n<pre><code>require('./controllers/routes.js')(express,app,client);\n</code></pre>\n\n<p>1) How do i separate db queries into new files in the best way?</p>\n\n<p>This file would get pretty big even if i separate db logic.</p>\n\n<p>2) What is a good way to separate routes? Maybe separate modules? and then require them all in <code>app.js</code>?</p>\n",
            "last_activity_date": 1366094743,
            "question_id": 8428212,
            "score": 18,
            "tags": [
                "javascript",
                "node.js",
                "express"
            ],
            "title": "Nodejs/Expressjs app structure"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The <a href=\"http://www.w3schools.com/jsref/jsref_join.asp\">join</a> function:</p>\n\n<pre><code>var arr = new Array(3);\narr[0] = \"Zero\";\narr[1] = \"One\";\narr[2] = \"Two\";\n\ndocument.write(arr.join(\",\"));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 262
                },
                {
                    "body": "<p>Or (more efficiently):</p>\n\n<pre>\nvar arr = new Array(3);\narr[0] = \"Zero\";\narr[1] = \"One\";\narr[2] = \"Two\";\n\ndocument.write(arr); // same as document.write(arr.toString()) in this context\n</pre>\n\n<p>The toString method of an array when called returns exactly what you need - comma-separated list.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Actually, the <code>toString()</code> implementation does a join with commas by default:</p>\n\n<pre><code>var arr = [ 42, 55 ];\nvar str1 = arr.toString(); // Gives you \"42,55\"\nvar str2 = String(arr); // Ditto\n</code></pre>\n\n<p>I don't know if this is mandated by the JS spec but this is what <del>most</del> pretty much all browsers seem to be doing.</p>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>Here's an implementation that converts a two-dimensional array or an array of columns into a properly escaped CSV string. The functions do not check for valid string/number input or column counts (ensure your array is valid to begin with). The cells can contain commas and quotes! </p>\n\n<p><strong>EDIT</strong>: I've updated the script and pasted below. Now supporting boolean, numeric, null, and object types. Objects are simply cast to string though.</p>\n\n<p>Here's the old version on JSFiddle: <a href=\"http://jsfiddle.net/skibulk/F5hGx/\">http://jsfiddle.net/skibulk/F5hGx/</a></p>\n\n<p>Here's the new version on JSFiddle: <a href=\"http://jsfiddle.net/skibulk/F5hGx/19/\">http://jsfiddle.net/skibulk/F5hGx/19/</a></p>\n\n<pre><code>// Example\nvar csv = new csvWriter();\ncsv.del = '\\t';\ncsv.enc = \"'\";\n\nvar nullVar;\nvar testStr = \"The comma (,) pipe (|) single quote (') double quote (\\\") and tab (\\t) are commonly used to tabulate data in plain-text formats.\";\nvar testArr = [\n    false,\n    0,\n    nullVar,\n    // undefinedVar,\n    '',\n    {key:'value'},\n];\n\nconsole.log(csv.escapeCol(testStr));\nconsole.log(csv.arrayToRow(testArr));\nconsole.log(csv.arrayToCSV([testArr, testArr, testArr]));\n\n/**\n * Class for creating csv strings\n * Handles multiple data types\n * Objects are cast to Strings\n **/\n\nfunction csvWriter(del, enc) {\n    this.del = del || ','; // CSV Delimiter\n    this.enc = enc || '\"'; // CSV Enclosure\n\n    // Convert Object to CSV column\n    this.escapeCol = function (col) {\n        if(isNaN(col)) {\n            // is not boolean or numeric\n            if (!col) {\n                // is null or undefined\n                col = '';\n            } else {\n                // is string or object\n                col = String(col);\n                if (col.length &gt; 0) {\n                    // use regex to test for del, enc, \\r or \\n\n                    // if(new RegExp( '[' + this.del + this.enc + '\\r\\n]' ).test(col)) {\n\n                    // escape inline enclosure\n                    col = col.split( this.enc ).join( this.enc + this.enc );\n\n                    // wrap with enclosure\n                    col = this.enc + col + this.enc;\n                }\n            }\n        }\n        return col;\n    };\n\n    // Convert an Array of columns into an escaped CSV row\n    this.arrayToRow = function (arr) {\n        var arr2 = arr.slice(0);\n\n        var i, ii = arr2.length;\n        for(i = 0; i &lt; ii; i++) {\n            arr2[i] = this.escapeCol(arr2[i]);\n        }\n        return arr2.join(this.del);\n    };\n\n    // Convert a two-dimensional Array into an escaped multi-row CSV \n    this.arrayToCSV = function (arr) {\n        var arr2 = arr.slice(0);\n\n        var i, ii = arr2.length;\n        for(i = 0; i &lt; ii; i++) {\n            arr2[i] = this.arrayToRow(arr2[i]);\n        }\n        return arr2.join(\"\\r\\n\");\n    };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I think this should do it:</p>\n\n<pre><code>var arr = ['contains,comma', 3.14, 'contains\"quote', \"more'quotes\"]\nvar item, i;\nvar line = [];\n\nfor (i = 0; i &lt; arr.length; ++i) {\n    item = arr[i];\n    if (item.indexOf &amp;&amp; (item.indexOf(',') !== -1 || item.indexOf('\"') !== -1)) {\n        item = '\"' + item.replace(/\"/g, '\"\"') + '\"';\n    }\n    line.push(item);\n}\n\ndocument.getElementById('out').innerHTML = line.join(',');\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/mnbayazit/G9mYj/4/\" rel=\"nofollow\">fiddle</a></p>\n\n<p>Basically all it does is check if the string contains a comma or quote. If it does, then it doubles all the quotes, and puts quotes on the ends. Then it joins each of the parts with a comma.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a one-dimensional array of strings in Javascript that I'd like to turn into a comma-separated list. Is there a simple way in garden-variety Javascript (or jQuery) to turn that into a comma-separated list? (I know how to iterate through the array and build the string myself by concatenation if that's the only way.)</p>\n",
            "last_activity_date": 1424175105,
            "question_id": 201724,
            "score": 131,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Easy way to turn Javascript array into comma-separated list?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Simple:</p>\n\n<pre><code>delete myObj.test.key1;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 157
                },
                {
                    "body": "<p>The selected answer would work for as long as you know the key itself that you want to delete but if it should be truly dynamic you would need to use the [] notation instead of the dot notation.</p>\n\n<p>For example: </p>\n\n<pre><code>var keyToDelete = \"key1\";\nvar myObj: {\"test\": {\"key1\": \"value\", \"key2\": \"value\"}}\n\ndelete myObj.test.keyToDelete //would not work.\n</code></pre>\n\n<p>instead you would need to use:</p>\n\n<pre><code>delete myObj.test[keyToDelete];\n</code></pre>\n\n<p>Substitute the dot notation with [] notation for those values that you want evaluated before being deleted.</p>\n",
                    "is_accepted": false,
                    "score": 29
                }
            ],
            "body": "<p>if I have a JSON object say:</p>\n\n<pre><code>var myObj = {'test' : {'key1' : 'value', 'key2': 'value'}}\n</code></pre>\n\n<p>can I remove 'key1' so it becomes:</p>\n\n<pre><code>{'test' : {'key2': 'value'}}\n</code></pre>\n",
            "last_activity_date": 1333203985,
            "question_id": 1219630,
            "score": 85,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "Remove a JSON attribute"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>maybe some combination of these settings should be in your VIMRC file.</p>\n\n<pre><code>syntax on \nset syn=auto \nset showmatch \nfiletype on \nfiletype plugin on \nfiletype indent on \nset tabstop=4 \nset softtabstop=4 \nset shiftwidth=4 \nset expandtab\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Use <a href=\"http://www.vim.org/scripts/script.php?script_id=3081\">JavaScript Indent: Javascript indenter (HTML indent is included)</a> by Preston Koprivica. Thanks for the heads-up from <a href=\"http://stackoverflow.com/questions/620247/how-do-i-fix-incorrect-inline-javascript-indentation-in-vim/4183349#4183349\">oligofren</a> - give him an up-vote.</p>\n",
                    "is_accepted": true,
                    "score": 76
                },
                {
                    "body": "<p>Assuming the syntax file has good indenting for java script, visually highlight the block and press =.  This works for java so I would expect it to do something half decent for java script.  The results probably also depend on the settings of tabstop, expandtab and maybe shiftwidth.</p>\n\n<p>gq is useful too, it formats lines rather than indents them.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I had this same issue.  This is the best of all Javascript indentation scripts:</p>\n\n<p><a href=\"http://www.vim.org/scripts/script.php?script_id=1840\" rel=\"nofollow\">http://www.vim.org/scripts/script.php?script_id=1840</a></p>\n\n<p>It requires the IndentAnything plugin</p>\n\n<p><a href=\"http://www.vim.org/scripts/script.php?script_id=1839\" rel=\"nofollow\">http://www.vim.org/scripts/script.php?script_id=1839</a></p>\n\n<p>As an added bonus, I wrote this indent script that will make Javascript blocks quite pretty.  It uses the default html indenter by default (and the IndentAnything one when within a Javascript block)</p>\n\n<p><a href=\"http://gist.github.com/371902\" rel=\"nofollow\">http://gist.github.com/371902</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The most comprehensive and bug-free Javascript indentation script is <a href=\"http://www.vim.org/scripts/script.php?script_id=3081\">the one by Preston Koprivica</a>. <strike>The so called OOP script that is in the proposed answer has severe bugs, and does not indent code properly that has square brackets.</strike> </p>\n",
                    "is_accepted": false,
                    "score": 79
                },
                {
                    "body": "<p>The scripts mentioned above do not format the closure-syntax often used in jQuery correctly:</p>\n\n<pre><code>$(function() {\n  // only one level of indentation, not two\n});\n</code></pre>\n\n<p>This script works better for me: <a href=\"http://www.vim.org/scripts/script.php?script_id=2765\">http://www.vim.org/scripts/script.php?script_id=2765</a></p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Most of these answers are from 2009 and, frankly, are out of date.</p>\n\n<p><a href=\"https://github.com/pangloss/vim-javascript\" rel=\"nofollow\">vim-javascript</a> is much more recent and up-to-date than <a href=\"http://www.vim.org/scripts/script.php?script_id=3081\" rel=\"nofollow\">Preston's script.</a></p>\n\n<p>Installation is a bit more complicated if you haven't started using <a href=\"https://github.com/gmarik/vundle\" rel=\"nofollow\">Vundle</a> yet, but it doesn't seem to suffer from the issues of the alternatives.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>In case someone comes here please note the <code>vim-javascript</code> by <code>pangloss</code> at <a href=\"https://github.com/pangloss/vim-javascript\" rel=\"nofollow\">https://github.com/pangloss/vim-javascript</a> helped me so far, i.e. Vim 7.4. And the above solutions from oligofren and Charles Roper didn't. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I can't seem to get inline Javascript indenting properly in Vim. Consider the following:</p>\n\n<pre><code>  $(document).ready(function() {\n\n  // Closing brace correctly indented\n    $(\"input\").focus(function() {\n      $(this).closest(\"li\").addClass(\"cur-focus\");\n    }); // &lt;-- I had to manually unindent this\n\n  // Closing brace incorrectly indented\n    $(\"input\").blur(function() {\n      $(this).closest(\"li\").removeClass(\"cur-focus\");\n      }); // &lt;-- This is what it does by default. Argh!\n\n  });\n</code></pre>\n\n<p>Vim seems to insist on automatically indenting the closing brace shown in the second case there. It does the same if I re-indent the whole file. How do I get it to automatically indent using the more standard JS indenting style seen in the first case?</p>\n",
            "last_activity_date": 1398786726,
            "question_id": 620247,
            "score": 57,
            "tags": [
                "javascript",
                "vim"
            ],
            "title": "How do I fix incorrect inline Javascript indentation in Vim?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>This will hide the div after 1 second (1000 milliseconds).</p>\n\n<pre><code>setTimeout(function() {\n    $('#mydiv').fadeOut('fast');\n}, 1000); // &lt;-- time in milliseconds\n</code></pre>\n\n<p>If you just want to hide without fading, use <code>hide()</code>.</p>\n",
                    "is_accepted": true,
                    "score": 133
                },
                {
                    "body": "<p>Probably the easiest way is to use the timers plugin.  <a href=\"http://plugins.jquery.com/project/timers\" rel=\"nofollow\">http://plugins.jquery.com/project/timers</a> and then call something like</p>\n\n<pre><code>$(this).oneTime(1000, function() {\n    $(\"#something\").hide();\n  });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>$.fn.delay = function(time, callback){\n    // Empty function:\n    jQuery.fx.step.delay = function(){};\n    // Return meaningless animation, (will be added to queue)\n    return this.animate({delay:1}, time, callback);\n}\n</code></pre>\n\n<p>From <a href=\"http://james.padolsey.com/javascript/jquery-delay-plugin/\" rel=\"nofollow\">http://james.padolsey.com/javascript/jquery-delay-plugin/</a></p>\n\n<p>(Allows chaining of methods)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Using the jQuery timer will also allow you to have a name associated with the timers that are attached to the object. So you could attach several timers to an object and stop any one of them.</p>\n\n<pre><code>$(\"#myid\").oneTime(1000, \"mytimer1\" function() {\n  $(\"#something\").hide();\n}).oneTime(2000, \"mytimer2\" function() {\n  $(\"#somethingelse\").show();  \n});\n\n$(\"#myid\").stopTime(\"mytimer2\");\n</code></pre>\n\n<p>The eval function (and its relatives, Function, setTimeout, and setInterval) provide access to the JavaScript compiler. This is sometimes necessary, but in most cases it indicates the presence of extremely bad coding. The eval function is the most misused feature of JavaScript.</p>\n\n<p><a href=\"http://www.jslint.com/lint.html\" rel=\"nofollow\">http://www.jslint.com/lint.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can try the <code>.delay()</code></p>\n\n<pre><code>$(\".formSentMsg\").delay(3200).fadeOut(300);\n</code></pre>\n\n<p>call the div set the delay time in milliseconds and set the property you want to change, in this case I used .fadeOut() so it could be animated, but you can use .hide() as well.</p>\n\n<p><a href=\"http://api.jquery.com/delay/\">http://api.jquery.com/delay/</a></p>\n",
                    "is_accepted": false,
                    "score": 50
                },
                {
                    "body": "<p><strong>There's a really simple way to do this.</strong></p>\n\n<p>The problem is that .delay only effects animations, so what you need to do is make .hide() act like an animation by giving it a duration.</p>\n\n<p><code>$(\"#whatever\").delay().hide(1);</code></p>\n\n<p>By giving it a nice short duration, it appears to be instant just like the regular .hide function.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I was wondering, how in jquery am I able to hide a div after a few seconds? Like Gmail's messages for example.</p>\n\n<p>I've tried my best but am unable to get it working.</p>\n",
            "last_activity_date": 1405247793,
            "question_id": 820951,
            "score": 54,
            "tags": [
                "javascript",
                "jquery",
                "timing"
            ],
            "title": "Hide div after a few seconds"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>So, the <a href=\"http://angular-ui.github.io/bootstrap/\">http://angular-ui.github.io/bootstrap/</a> project <strong><em>does not</em></strong> depend on Bootstrap's JavaScript (it is not wrapping it, not requiring etc.). Those are native AngularJS directives written from the ground-up to be lightweight and well integrated into the AngularJS ecosystem.</p>\n\n<p><strong>The only adherence to the Bootstrap project is Bootstrap's markup (HTML) and CSS.</strong></p>\n\n<p>If you ask a question \"can I grab all the directives and use them with Bootstrap 3.0\" the answer is \"it depends\". It really depends if and how much Bootstrap 3.0 decide do change its markup and corresponding CSS classes. I would presume that markup of some controls have changed and not for some others.</p>\n\n<p>Now, the very good news with <a href=\"http://angular-ui.github.io/bootstrap/\">http://angular-ui.github.io/bootstrap/</a> is that most of the HTML markup and CSS classes are encapsulated in separate AngularJS templates. In practice it means that you can grab the JavaScript code of the directives and only change markup (templates) to fit into Bootstrap 3.0.</p>\n\n<p>All the templates are located here: \n<a href=\"https://github.com/angular-ui/bootstrap/tree/master/template\">https://github.com/angular-ui/bootstrap/tree/master/template</a>\nand by browsing them you should get an idea that it is pretty simple to update markup without messing with JavaScript. This is one of the design goals of this project.</p>\n\n<p>I would encourage you to simply give it a try and see how CSS of Bootstrap 3.0 works with the existing directives and templates. If you spot any issues you can always update templates to Bootstrap 3.0 (and contribute them back to the project!)</p>\n",
                    "is_accepted": true,
                    "score": 61
                },
                {
                    "body": "<p>There's a pull request pending that contains fixes for most of the issues with Bootstrap 3.0 and the AngularUi directives:</p>\n\n<p><a href=\"https://github.com/angular-ui/bootstrap/pull/742\">https://github.com/angular-ui/bootstrap/pull/742</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Just to give you an alternative: willing to integrate Angular JS and Boostrap 3 for mobile development I've tried to overcome the bootstrap.js integration in a different way.</p>\n\n<p>Instead to attempt to reproduce bootstrap.js behaviour exactly component by component, I basically made two general purpose directives communicating each other through events to sync the active/inactive state of two or more DOM nodes. Reflecting state trough classes makes them capable to reproduce almost all of the basic bootstrap.js components interaction.</p>\n\n<p>So for the most common applications you'll need only the bootstap 3 css and these few lines of js to get almost all of boostrap 3 functionalities. </p>\n\n<p>You can grab the code here, it will work outside the project and you can adapt it to fit your needs: <a href=\"https://github.com/mcasimir/mobile-angular-ui/blob/master/src/coffee/directives/toggle.coffee\" rel=\"nofollow\">https://github.com/mcasimir/mobile-angular-ui/blob/master/src/coffee/directives/toggle.coffee</a>. </p>\n\n<p>It's Coffeescript but you can easily translate it to js through js2coffee.org.</p>\n\n<p>You may also want to read the docs here: <a href=\"http://mobileangularui.com/#toc6\" rel=\"nofollow\">http://mobileangularui.com/#toc6</a>.</p>\n\n<p>This is a simple example to show the basics of how it works:</p>\n\n<pre><code>&lt;p toggleable id=\"lightbulb\" active-class=\"text-primary\" class=\"text-default\"&gt;\n  &lt;i class=\"fa fa-lightbulb-o\"&gt;&lt;/i&gt;\n&lt;/p&gt;\n\n&lt;div class=\"btn-group justified nav-tabs\"&gt;\n  &lt;a toggle=\"toggle\" target=\"lightbulb\" active-class=\"active\" class=\"btn btn-default\" href&gt;\n      Toggle\n  &lt;/a&gt;\n  &lt;a toggle=\"on\" target=\"lightbulb\" class=\"btn btn-default\" href&gt;\n      Turn On\n  &lt;/a&gt;\n  &lt;a toggle=\"off\" target=\"lightbulb\" class=\"btn btn-default\" href&gt;\n      Turn Off\n  &lt;/a&gt;        \n&lt;/div&gt;\n</code></pre>\n\n<p>And this is how you can use them to create Tabs component:</p>\n\n<pre><code>&lt;ul class=\"nav nav-tabs\"&gt;\n&lt;li&gt;&lt;a href=\"#Tab1\" toggle=\"on\" parent-active-class=\"active\"&gt;Tab 1&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=\"#Tab2\" toggle=\"on\" parent-active-class=\"active\"&gt;Tab 2&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=\"#Tab3\" toggle=\"on\" parent-active-class=\"active\"&gt;Tab 3&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;div class=\"tab-content\"&gt;\n  &lt;div class=\"tab-pane\" toggleable active-class=\"active\" default=\"active\" id=\"Tab1\" exclusion-group=\"myTabs\"&gt;\n\n    &lt;h3 class=\"page-header\"&gt;Tab 1&lt;/h3&gt;\n    &lt;p&gt;&lt;!-- ... --&gt;&lt;/p&gt;\n  &lt;/div&gt;\n\n  &lt;div class=\"tab-pane\" toggleable active-class=\"active\" id=\"Tab2\" exclusion-group=\"myTabs\"&gt;\n    &lt;h3 class=\"page-header\"&gt;Tab 2&lt;/h3&gt;\n    &lt;p&gt;&lt;!-- ... --&gt;&lt;/p&gt;\n  &lt;/div&gt;\n\n  &lt;div class=\"tab-pane\" toggleable active-class=\"active\" id=\"Tab3\" exclusion-group=\"myTabs\"&gt;\n    &lt;h3 class=\"page-header\"&gt;Tab 3&lt;/h3&gt;\n    &lt;p&gt;&lt;!-- ... --&gt;&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>As a plus you can also control the same tabs from different nodes:</p>\n\n<pre><code>&lt;div class=\"btn-group justified nav-tabs\"&gt;\n  &lt;a class=\"btn btn-default\" href=\"#Tab1\" toggle=\"on\" active-class=\"active\"&gt;Tab 1\n  &lt;/a&gt;\n\n  &lt;a class=\"btn btn-default\" href=\"#Tab2\" toggle=\"on\" active-class=\"active\"&gt;Tab 2\n  &lt;/a&gt;\n\n  &lt;a class=\"btn btn-default\" href=\"#Tab3\" toggle=\"on\" active-class=\"active\"&gt;Tab 3\n  &lt;/a&gt;\n\n&lt;/div&gt;\n</code></pre>\n\n<p>Don't know if this can fit your needs but this way you can create at least: tabs, accordions, collapsibles, modals and dropdowns without the need of a dedicated library. Also note that it will work either with bootstrap 2 and 3 since it not depends on bootstrap markup at all.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p><strong>Will bootstrap 3 release be compatible with current AngularJS bootstrap directives?</strong></p>\n\n<p>I want to use Bootstrap 2.3.1 directive with AngularJS:</p>\n\n<p><a href=\"http://angular-ui.github.io/bootstrap/\">http://angular-ui.github.io/bootstrap/</a></p>\n\n<p>With the Bootstrap 3.0.0 CSS:</p>\n\n<p><a href=\"https://github.com/twitter/bootstrap/tree/3.0.0-wip/\">https://github.com/twitter/bootstrap/tree/3.0.0-wip/</a></p>\n\n<p><em>Why?</em> </p>\n\n<p>AngularJS team is still working on JS directives for v2.3.1 and will need time to catch up to v3.0.0. I want to start using v3 CSS grid syntax now.</p>\n\n<p><a href=\"https://github.com/angular-ui/bootstrap/issues/331\">https://github.com/angular-ui/bootstrap/issues/331</a></p>\n",
            "last_activity_date": 1392387672,
            "question_id": 16327846,
            "score": 50,
            "tags": [
                "javascript",
                "css",
                "twitter-bootstrap",
                "angularjs",
                "twitter-bootstrap-3"
            ],
            "title": "Bootstrap 3 compatible with current AngularJS bootstrap directives?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Currently, I've modified a version of the <a href=\"http://code.google.com/p/ecmascript-net/\">EcmaScript.NET</a> inside my <a href=\"http://yuicompressor.codeplex.com/\">YUICompressor.NET</a> port (project).</p>\n\n<p>If you grab the <a href=\"http://yuicompressor.codeplex.com/SourceControl/ListDownloadableCommits.aspx\">source code from here</a>, I've included my modified code in the project, which you can reference. This is the only source of code i've found in .NET which can handle parsing javascript, server side. </p>\n\n<p>Unfortunately, I can't remember how I finally found it. It was a tough process, I must admit. I think i found some references Mozilla dev pages somewhere about Rhino (the java code) which led me to finding that C# .NET implimentation.</p>\n\n<p>I had to modify it slighty to sync up with some changes the YUI Compressor guys did to their code branch. So the modified branch I have might not be the best .. but it's the closest I've seen to the original Java branch.</p>\n\n<p>The original c# code for EcmaScript.NET hasn't been touched since 2007 ... at least for the downloads page. </p>\n\n<p>Maybe this might help??</p>\n\n<p>HTH.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>You can take a look at Jint (<a href=\"http://jint.codeplex.com\" rel=\"nofollow\">http://jint.codeplex.com</a>) which is an open-source ECMAScript interpreter.</p>\n\n<p><strong>Update</strong></p>\n\n<p>Newly rewritten version available on Github at <a href=\"https://github.com/sebastienros/jint\" rel=\"nofollow\">https://github.com/sebastienros/jint</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Everyone seems to be beating their heads against this one:</p>\n\n<ul>\n<li><a href=\"http://github.com/fholm/IronJS\" rel=\"nofollow\">IronJS</a>: A new DLR-hosted JS Implementation; They <a href=\"http://ironjs.com/\" rel=\"nofollow\">haven't died</a> yet at the time of this writing. there's even an <a href=\"http://groups.google.com/group/ironjs\" rel=\"nofollow\">IronJS Google Group</a>.</li>\n</ul>\n\n<p>Other Projects, Mostly Dead:</p>\n\n<ul>\n<li><a href=\"http://blogs.msdn.com/deepak/archive/2007/05/02/managed-jscript-is-availaible.aspx\" rel=\"nofollow\">Managed JScript</a>: Died <a href=\"http://dlr.codeplex.com/Thread/View.aspx?ThreadId=58121\" rel=\"nofollow\">on the vine</a>. </li>\n<li>MyJScript: Mentioned in the original post, for those who want more info, there's an article : <a href=\"http://www.dotnetguru.org/us/dlrus/DLR2.htm\" rel=\"nofollow\">Create your own language on top of the DLR</a>.</li>\n<li><a href=\"http://www.mono-project.com/JScript\" rel=\"nofollow\">MonoJS</a>: Mono had an implementation of JScript.Net, but they quit bothering.</li>\n</ul>\n\n<p>Crazy Method:</p>\n\n<ul>\n<li><a href=\"http://www.codeproject.com/KB/cs/EmbeddingJSCS.aspx\" rel=\"nofollow\">Rhino over IKVM</a> (Mentioned in comments, but here's a link to more information about doing it.)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You should try Javascript .NET (<a href=\"http://javascriptdotnet.codeplex.com/\">http://javascriptdotnet.codeplex.com/</a>) on Codeplex. They wrapped v8 with managed C++ and then you can use this library with a .NET application and it works like a charm. The open source offers some pretty good features if you ask me.</p>\n\n<p>Cheers.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Nobody has mentioned jurassic <a href=\"http://jurassic.codeplex.com/\">http://jurassic.codeplex.com/</a>\nI do not know how good it is in general (performance, usability, etc) but at least it parses pretty complex scripts (other implementations do not) and it supports ECMAScript 5 spec. I just add the link here for reference.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You can use Jscript.net and it will actually work with arbitrary javascript code; You just need to turn off \"fast mode\" by compiling with <code>jsc /fast- bar.js</code></p>\n\n<p>I have not tested this; I just noticed it while reading <a href=\"http://listeningtoreason.blogspot.com/2007/03/simple-javascript-command-line.html\" rel=\"nofollow\">this post</a> and figured it would be another reasonable solution. MSDN Has <a href=\"http://msdn.microsoft.com/en-us/library/ek972w9a%28v=VS.71%29.aspx\" rel=\"nofollow\">the docs for this option</a> and <a href=\"http://msdn.microsoft.com/en-us/library/8e4z2w8w%28VS.71%29.aspx\" rel=\"nofollow\">what the limitations are if you don't use it</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I prefer JINT rather than the \nothers. </p>\n\n<p>JINT may be slow, but it is easy to debug and to interact your own .NET classes.\n(It is hard to set <code>[ComVisile]</code> attributes every time for jscript.dll etc).</p>\n\n<p>In terms of threading, JINT and Jurassic work as I expected. In order to work with JScript engine or Google V8, you have to pay attention to UI-threading issue.</p>\n\n<p>However, JINT is out-dated in some aspect, because I have trouble to compile JQuery 1.5 or later.</p>\n\n<p>I hope Jurassic can remove its limit to stick its own class to work with by creating <code>'AllowBob'sCLRClass=true'</code>. </p>\n\n<p>I have to re-write the entire class. It is hard...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2>V8.NET</h2>\n\n<p>This one is probably the best one I've come across yet.<br/>  <a href=\"https://v8dotnet.codeplex.com/documentation\" rel=\"nofollow\">https://v8dotnet.codeplex.com/documentation</a></p>\n\n<p>Plus its been built from the beginning with a Mono port in mind.\nIt gives you full control over the power of the V8 engine from managed code.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Nobody's mentioned ClearScript, so <a href=\"https://clearscript.codeplex.com/\">ClearScript</a>.</p>\n\n<p>It's not an implementation; it's an interop wrapper that supports V8, JScript and VBScript, with a really nice API to call into them from .NET code.</p>\n\n<p>Example code from the CodePlex page:</p>\n\n<pre class=\"lang-csharp prettyprint-override\"><code>using System;\nusing Microsoft.ClearScript;\nusing Microsoft.ClearScript.V8;\n\n// create a script engine\nusing (var engine = new V8ScriptEngine())\n{\n    // expose a host type\n    engine.AddHostType(\"Console\", typeof(Console));\n    engine.Execute(\"Console.WriteLine('{0} is an interesting number.', Math.PI)\");\n\n    // expose a host object\n    engine.AddHostObject(\"random\", new Random());\n    engine.Execute(\"Console.WriteLine(random.NextDouble())\");\n\n    // expose entire assemblies\n    engine.AddHostObject(\"lib\", new HostTypeCollection(\"mscorlib\", \"System.Core\"));\n    engine.Execute(\"Console.WriteLine(lib.System.DateTime.Now)\");\n\n    // create a host object from script\n    engine.Execute(@\"\n        birthday = new lib.System.DateTime(2007, 5, 22);\n        Console.WriteLine(birthday.ToLongDateString());\n    \");\n\n    // use a generic class from script\n    engine.Execute(@\"\n        Dictionary = lib.System.Collections.Generic.Dictionary;\n        dict = new Dictionary(lib.System.String, lib.System.Int32);\n        dict.Add('foo', 123);\n    \");\n\n    // call a host method with an output parameter\n    engine.AddHostObject(\"host\", new HostFunctions());\n    engine.Execute(@\"\n        intVar = host.newVar(lib.System.Int32);\n        found = dict.TryGetValue('foo', intVar.out);\n        Console.WriteLine('{0} {1}', found, intVar);\n    \");\n\n    // create and populate a host array\n    engine.Execute(@\"\n        numbers = host.newArr(lib.System.Int32, 20);\n        for (var i = 0; i &lt; numbers.Length; i++) { numbers[i] = i; }\n        Console.WriteLine(lib.System.String.Join(', ', numbers));\n    \");\n\n    // create a script delegate\n    engine.Execute(@\"\n        Filter = lib.System.Func(lib.System.Int32, lib.System.Boolean);\n        oddFilter = new Filter(function(value) {\n            return (value &amp; 1) ? true : false;\n        });\n    \");\n\n    // use LINQ from script\n    engine.Execute(@\"\n        oddNumbers = numbers.Where(oddFilter);\n        Console.WriteLine(lib.System.String.Join(', ', oddNumbers));\n    \");\n\n    // call a script function\n    engine.Execute(\"function print(x) { Console.WriteLine(x); }\");\n    engine.Script.print(DateTime.Now.DayOfWeek);\n\n    // examine a script object\n    engine.Execute(\"person = { name: 'Fred', age: 5 }\");\n    Console.WriteLine(engine.Script.person.name);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Does anyone know of <em>real</em> (i.. no vaporware) implementations of ECMAScript targeting the <strong>.NET CLR/DLR</strong>? Ideally something like <strong>what Rhino is for Java</strong>. A solid port of Rhino running on .NET Framework / Mono Framework would be perfect.</p>\n\n<p>I've only seen a handful of projects mentioned but never seen any come to light or in reality anything that I've ever been able to run script on.  Here's what I know about already:</p>\n\n<ul>\n<li><p><strong><a href=\"http://msdn.microsoft.com/en-us/library/hbxc2t98%28VS.85%29.aspx\">MSScriptControl ActiveX Control</a></strong>: AFAIK, this was Microsoft's last real ECMAScript-compliant implementaiton (runs JScript 5.7). I've integrated with MSScriptControl but don't consider COM interop to be an answer to this question. x64 is a killer for this option.</p></li>\n<li><p><strong><a href=\"http://www.west-wind.com/WebLog/posts/10688.aspx\">JScript.NET</a></strong>: I don't count JScript.NET as it could never successfully parse any of my real scripts. It seems to have trouble with closures.</p></li>\n<li><p><strong><a href=\"http://en.wikipedia.org/wiki/JScript#Managed%5FJScript\">Managed JScript</a></strong>: Sounds like what I want but it appears to be dead in the water. It was a major example implementation for the DLR but then got entangled with SilverLight and seems to have faded as a priority since 2007. Creditable sources on the status of this would be helpful.</p></li>\n<li><p><strong><a href=\"http://myjscript.codeplex.com/\">MyJScript</a></strong>: Built as a tutorial implementation for the DLR. Anyone know how complete of an implementation this is?</p></li>\n<li><p><strong><a href=\"http://jint.codeplex.com/\">Jint</a></strong>: JavaScript interpreter for .NET. <strike>Doesn't as of yet support Currying or <code>try</code>-<code>catch</code>-<code>finally</code>.</strike></p></li>\n<li><p><strong><a href=\"http://www.remobjects.com/roscript.aspx\">RemObjects Script for .NET</a></strong>: An interesting contender still in the works. I'm confused by their marketing as to what it will actually be, but it sounds like it might eventually be a fit. If anyone knows more about it that would be helpful as well.</p></li>\n<li><p><strong><a href=\"http://stackoverflow.com/questions/356948/referencing-googles-v8-engine-from-a-net-app\">V8 for .NET</a></strong>: This would be great if someone ported V8 to .NET.  As far as I know there isn't a large effort around this either. The link is to an idea for calling into it from a managed C++ wrapper.</p></li>\n</ul>\n\n<p>For background, I want to be able to execute JavaScript from within .NET; i.e. load up a set of scripts into context and call into that context and retrieve the execution results. Currently I jump through hoops to use MSScriptControl via cumbersome COM Interop. The inconsistency of COM makes it really tough for deployment and ensuring consistent execution.</p>\n\n<p>I'd like to be able to execute reasonably complex JavaScript test harnesses from within .NET. This isn't for creating user macros or simple tiny scripts; I need a real JavaScript environment like Rhino. If the implementation was running on top of the CLR (rather than COM) this would really help with some of the current issues.</p>\n",
            "last_activity_date": 1412624777,
            "question_id": 1072727,
            "score": 31,
            "tags": [
                ".net",
                "javascript",
                "clr",
                "dynamic-language-runtime",
                "ecma262"
            ],
            "title": "Are there any .NET CLR/DLR implementations of ECMAScript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<h2><a href=\"https://github.com/apla/dataflo.ws\" rel=\"nofollow\">dataflo.ws</a></h2>\n\n<p>It's a JSON-based workflow engine. It features:</p>\n\n<ul>\n<li>modular design</li>\n<li>several useful built-in tasks (MongoDB, OAuth, RabbitMQ)</li>\n<li>HTTP initiator with a router</li>\n</ul>\n\n<p>Works on Node.js, in browsers (including IE9) and in PhoneGap.</p>\n\n<p>GPLv3, code on GitHub: <a href=\"https://github.com/apla/dataflo.ws\" rel=\"nofollow\">https://github.com/apla/dataflo.ws</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As suggested by katspaugh I'm posting the libraries I found as the answer.\nList of workflow libraries that I've found until now:</p>\n\n<ul>\n<li>Workflow.js for Backbone.js <a href=\"https://github.com/kendagriff/workflow.js\">https://github.com/kendagriff/workflow.js</a></li>\n<li>Sprout Workflow Engine <a href=\"https://github.com/bstaats/workr\">https://github.com/bstaats/workr</a></li>\n<li>Javascript Finite State Machine <a href=\"https://github.com/jakesgordon/javascript-state-machine\">https://github.com/jakesgordon/javascript-state-machine</a></li>\n<li>State chart <a href=\"https://github.com/DavidDurman/statechart\">https://github.com/DavidDurman/statechart</a></li>\n<li>machina.js <a href=\"https://github.com/ifandelse/machina.js\">https://github.com/ifandelse/machina.js</a></li>\n<li>jWorkflow <a href=\"https://github.com/tinyhippos/jWorkflow\">https://github.com/tinyhippos/jWorkflow</a></li>\n<li>Stately <a href=\"https://github.com/fschaefer/Stately.js\">https://github.com/fschaefer/Stately.js</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>Does anybody know a workflow engine (such as Spring WebFlow) for Javascript? We have a home-made framework that allows us to guide site navigation using JSON, but its quality is far from good.</p>\n\n<p><em>Edit based on given answers: the engine must run on the browser and reduce to minimum the number of requests to the server.</em></p>\n",
            "last_activity_date": 1396360677,
            "question_id": 10414849,
            "score": 19,
            "tags": [
                "javascript",
                "workflow",
                "state-machines"
            ],
            "title": "Workflow engine in Javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The only way to be fully secure is to not store the access tokens client side. Anyone with (physical)access to your browser could obtain your token.</p>\n\n<p>1) Your assessment of neither being a great solution is accurate.</p>\n\n<p>2) Using expiration times would be your best if you are limited to only client side development.  It wouldn't require your users to re-authenticate with Oauth as frequently, and guarantee that the token wouldn't live forever. Still not the most secure.</p>\n\n<p>3) Getting a new token would require performing the Oauth workflow to obtain a fresh token. The client_id is tied to a specific domain for Oauth to function.</p>\n\n<p>The most secure method for retaining Oauth tokens would be a server side implementation. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It looks like you're using the <a href=\"http://tools.ietf.org/html/rfc6749#section-4.3\">Resource Owner Password Credentials</a> OAuth 2.0 flow e.g. submitting username/pass to get back both an access token and refresh token.</p>\n\n<ul>\n<li>The <strong>access token</strong> CAN be exposed in javascript, the risks of the access token be exposed somehow are mitigated by its short lifetime.</li>\n<li>The <strong>refresh token</strong> SHOULD NOT be exposed to client-side javascript.  It's used to get more access tokens (as you're doing above) but if an attacker was able to get the refresh token they'd be able to get more access tokens at will until such time as the OAuth server revoked the authorization of the client for which the <strong>refresh token</strong> was issued.</li>\n</ul>\n\n<p>With that background in mind, let me address your questions:</p>\n\n<ol>\n<li>I don't think it matters whether you store the access token in a cookie or local storage.  I'm working on an OAuth 2 app and because it's a single page approach I do neither; instead I just keep it in memory.   Either a cookie or localstorage will give you local persistence across page refreshes.  Your point above about localstorage being incrementally more secure since it's not transmitted with each request seems reasonable to me.</li>\n<li>I agree... if you're storing in a cookie it's just for the persistence not for expiration, the server is going to respond with an error when the token expires.   The only reason I can think you might create a cookie with an expiration is so that you can detect whether it has expired WITHOUT first making a request and waiting for an error response.  Of course you could do the same thing with local storage by saving that known expiration time.</li>\n<li>This is the crux of the whole question I believe... \"How do I get a refresh token, without A, storing it with the original access_token to use later, and B) also storing a client_id\".   Unfortunately you really can't...   As noted in that introductory comment, having the <strong>refresh token</strong> client side negates the security provided by the <strong>access token</strong>'s limited lifespan.    What I'm doing in my app (where I'm not using any persistent server-side session state) is the following:\n<ul>\n<li>The user submits username and password to the server</li>\n<li>The <strong>server</strong> then forwards the username and password to the OAuth endpoint, in your example above <code>http://domain.com/api/oauth/token</code>, and receives both the <strong>access token and refresh token</strong>.</li>\n<li>The server encrypts the <strong>refresh token</strong> and sets it in a cookie  (should be HTTP Only)</li>\n<li>The server responds with the <strong>access token ONLY</strong> in clear text (in a JSON response) AND the encrypted HTTP only cookie</li>\n<li>client-side javascript can now read and use the access token (store in local storage or whatever</li>\n<li>When the access token expires, the client submits a request to the server (not the OAuth server but the server hosting the app) for a new token</li>\n<li>The server, receives the encrypted HTTP only cookie it created, decrypts it to get the <strong>refresh token</strong>, requests a new access token and finally returns the new <strong>access token</strong> in the response.</li>\n</ul></li>\n</ol>\n\n<p>Admittedly, this does violate the \"JS-Only\" constraint you were looking for.  However, a) again you really should NOT have a refresh token in javascript and b) it requires pretty minimal server-side logic at login/logout and no persistent server-side storage.</p>\n\n<p>Another alternative is simply to not request the refresh token at all (not sure if that's an option with the OAuth 2 implementation you're dealing with; the refresh token is optional <a href=\"http://tools.ietf.org/html/rfc6749#section-5.1\">per the spec</a>) and continually re-authenticate when it expires.</p>\n\n<p>Hope that helps!</p>\n",
                    "is_accepted": false,
                    "score": 44
                }
            ],
            "body": "<p>I am currently experimenting with OAuth2 to develop a mobile application built entirely in JavaScript that talks to a CakePHP API. Take a look at the following code to see how my app currently looks <strong>(please note that this is an experiment, hence the messy code, and lack of structure in areas, etc..)</strong></p>\n\n<pre><code>var access_token,\n     refresh_token;\n\nvar App = {\n    init: function() {\n        $(document).ready(function(){\n            Users.checkAuthenticated();\n        });\n    }(),\n    splash: function() {\n        var contentLogin = '&lt;input id=\"Username\" type=\"text\"&gt; &lt;input id=\"Password\" type=\"password\"&gt; &lt;button id=\"login\"&gt;Log in&lt;/button&gt;';\n        $('#app').html(contentLogin);\n    },\n    home: function() {  \n        var contentHome = '&lt;h1&gt;Welcome&lt;/h1&gt; &lt;a id=\"logout\"&gt;Log out&lt;/a&gt;';\n        $('#app').html(contentHome);\n    }\n};\n\nvar Users = {\n    init: function(){\n        $(document).ready(function() {\n            $('#login').live('click', function(e){\n                e.preventDefault();\n                Users.login();\n            }); \n            $('#logout').live('click', function(e){\n                e.preventDefault();\n                Users.logout();\n            });\n        });\n    }(),\n    checkAuthenticated: function() {\n        access_token = window.localStorage.getItem('access_token');\n        if( access_token == null ) {\n            App.splash();\n        }\n        else {\n            Users.checkTokenValid(access_token);\n        }\n    },\n    checkTokenValid: function(access_token){\n\n        $.ajax({\n            type: 'GET',\n            url: 'http://domain.com/api/oauth/userinfo',\n            data: {\n                access_token: access_token\n            },\n            dataType: 'jsonp',\n            success: function(data) {\n                console.log('success');\n                if( data.error ) {\n                    refresh_token = window.localStorage.getItem('refresh_token');\n                     if( refresh_token == null ) {\n                         App.splash();\n                     } else {\n                         Users.refreshToken(refresh_token);\n                    }\n                } else {\n                    App.home();\n                }\n            },\n            error: function(a,b,c) {\n                console.log('error');\n                console.log(a,b,c);\n                refresh_token = window.localStorage.getItem('refresh_token');\n                 if( refresh_token == null ) {\n                     App.splash();\n                 } else {\n                     Users.refreshToken(refresh_token);\n                }\n            }\n        });\n\n    },\n    refreshToken: function(refreshToken){\n\n        $.ajax({\n            type: 'GET',\n            url: 'http://domain.com/api/oauth/token',\n            data: {\n                grant_type: 'refresh_token',\n                refresh_token: refreshToken,\n                client_id: 'NTEzN2FjNzZlYzU4ZGM2'\n            },\n            dataType: 'jsonp',\n            success: function(data) {\n                if( data.error ) {\n                    alert(data.error);\n                } else {\n                    window.localStorage.setItem('access_token', data.access_token);\n                    window.localStorage.setItem('refresh_token', data.refresh_token);\n                    access_token = window.localStorage.getItem('access_token');\n                    refresh_token = window.localStorage.getItem('refresh_token');\n                    App.home();\n                }\n            },\n            error: function(a,b,c) {\n                console.log(a,b,c);\n            }\n        });\n\n    },\n    login: function() {\n        $.ajax({\n            type: 'GET',\n            url: 'http://domain.com/api/oauth/token',\n            data: {\n                grant_type: 'password',\n                username: $('#Username').val(),\n                password: $('#Password').val(),\n                client_id: 'NTEzN2FjNzZlYzU4ZGM2'\n            },\n            dataType: 'jsonp',\n            success: function(data) {\n                if( data.error ) {\n                    alert(data.error);\n                } else {\n                    window.localStorage.setItem('access_token', data.access_token);\n                    window.localStorage.setItem('refresh_token', data.refresh_token);\n                    access_token = window.localStorage.getItem('access_token');\n                    refresh_token = window.localStorage.getItem('refresh_token');\n                    App.home();\n                }\n            },\n            error: function(a,b,c) {\n                console.log(a,b,c);\n            }\n        });\n    },\n    logout: function() {\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n        access_token = window.localStorage.getItem('access_token');\n        refresh_token = window.localStorage.getItem('refresh_token');\n        App.splash();\n    }\n};\n</code></pre>\n\n<p>I have a number of questions relating to my implementation of OAuth:</p>\n\n<p>1.) Apparently storing the access_token in localStorage is bad practice and I should instead be using cookies. Can anyone explain why? As this isn't anymore secure or less secure as far as I can tell, as the cookie data wouldn't be encrypted.</p>\n\n<p><strong>UPDATE: According to this question: <a href=\"http://stackoverflow.com/questions/3220660/local-storage-vs-cookies\">Local Storage vs Cookies</a> storing the data in localStorage is ONLY available on the client-side anyways and doesn't do any HTTP request unlike cookies, so seems more secure to me, or least doesn't seem to have any issues as far as I can tell!</strong></p>\n\n<p>2.) Relating to question 1, use of a cookie for expiration time, would equally be pointless to me, as if you look at the code, a request is made on app start to get the user info, which would return an error if it had expired on the server end, and require a refresh_token. So not sure of benefits of having expiry times on BOTH client and server, when the server one is what really matters.</p>\n\n<p>3.) How do I get a refresh token, without A, storing it with the original access_token to use later, and B) also storing a client_id? I've been told this is a security issue, but how can I use these later, but protect them in a JS-only app? Again see the code above to see how I have implemented this so far.</p>\n",
            "last_activity_date": 1416551279,
            "question_id": 18280827,
            "score": 18,
            "tags": [
                "javascript",
                "oauth-2.0"
            ],
            "title": "Using OAuth2 in HTML5 Web App"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Edit: </p>\n\n<p>Here is the updated version <a href=\"http://plnkr.co/edit/N0drzW?p=preview\" rel=\"nofollow\">plunker</a>. it works in two controller.</p>\n\n<p>Main idea is using service and broadcast to sync the data with the directive. </p>\n\n<pre><code>app.service('syncSRV', function ($rootScope) {\n    \"use strict\";\n    this.sync = function (data) {\n        this.syncData = data;\n        $rootScope.$broadcast('updated');\n    };\n});\napp.controller('MainCtrl1', ['$scope', function ($scope) {\n    }])\n    .controller('MainCtrl2', ['$scope', function ($scope) {\n    }]);\napp.directive('sync',function (syncSRV) {\n    \"use strict\";\n    return {\n        template: '&lt;div&gt;&lt;input ng-model=\"syncdata\" type=\"text\" /&gt;&lt;/div&gt; ',\n        controller: function ($scope, $element, $attrs) {\n            $scope.$watch('syncdata', function (newVal, oldVal, $scope) {\n                syncSRV.sync(newVal);\n            }, true);\n        }\n    };\n}).directive('dataview', function (syncSRV) {\n    \"use strict\";\n    return {\n        template: '&lt;div&gt;Sync data : {{data}}&lt;/div&gt; ',\n        controller: function ($scope, $element, $attrs) {\n            $scope.$on('updated', function () {\n                $scope.data = syncSRV.syncData;\n            });\n        }\n    };\n});\n\n\n&lt;div ng-controller=\"MainCtrl1\"&gt;\n    &lt;fieldset&gt;\n        &lt;legend&gt; Controller 1&lt;/legend&gt;\n        &lt;div dataview&gt;&lt;/div&gt;\n        &lt;div sync&gt;&lt;/div&gt;\n    &lt;/fieldset&gt;\n&lt;/div&gt;\n&lt;div ng-controller=\"MainCtrl2\"&gt;\n    &lt;fieldset&gt;\n        &lt;legend&gt; Controller 2&lt;/legend&gt;\n        &lt;div dataview&gt;&lt;/div&gt;\n        &lt;div sync&gt;&lt;/div&gt;\n    &lt;/fieldset&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Here is what I would do for this case.</p>\n\n<p>I will create a directive for   </p>\n\n<pre><code>&lt;ul class=\"nav\" ng-controller=\"Menu\"&gt;\n        &lt;li ng-repeat=\"item in menu\"&gt;\n            &lt;a href=\"{{item.href}}\"&gt;{{item.title}}&lt;/a&gt;\n        &lt;/li&gt;\n&lt;/ul&gt; \n</code></pre>\n\n<p>so once item is updated, it will be updated in both directive.</p>\n\n<p><a href=\"http://plnkr.co/edit/N0drzW?p=preview\" rel=\"nofollow\">small example</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I would suggest to use a service that holds the menu and its methods. The service will update the menu which is referenced by the controller(s).</p>\n\n<p>See a working plunker here: <a href=\"http://plnkr.co/edit/Bzjruq\" rel=\"nofollow\">http://plnkr.co/edit/Bzjruq</a></p>\n\n<p>This is the sample JavaScript code:</p>\n\n<pre><code>angular\n .module( 'sampleApp', [] )\n .service( 'MenuService', [ '$rootScope', function( $rootScope ) {\n\n   return {\n      menu: [ 'item 1' ],\n      add: function( item ) {\n        this.menu.push( item );\n      } \n   };\n\n }])\n .controller( 'ControllerA', [ 'MenuService', '$scope', function( MenuService, $scope ) {\n\n   $scope.menu = MenuService.menu;\n\n   $scope.addItem = function() {\n    MenuService.add( $scope.newItem );  \n   };\n\n }]);\n</code></pre>\n\n<p>And the sample Html page:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n  &lt;head lang=\"en\"&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;title&gt;Custom Plunker&lt;/title&gt;\n    &lt;script src=\"//ajax.googleapis.com/ajax/libs/angularjs/1.0.2/angular.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n  &lt;/head&gt;\n\n  &lt;body ng-app=\"sampleApp\"&gt;\n\n    &lt;div ng-controller=\"ControllerA\"&gt;\n      &lt;ul&gt;\n        &lt;li ng-repeat=\"item in menu\"&gt;{{item}}&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;input type=\"text\" ng-model=\"newItem\" /&gt;&lt;input type=\"submit\" ng-click=\"addItem()\" /&gt;\n    &lt;/div&gt;\n\n    &lt;div ng-controller=\"ControllerA\"&gt;\n      &lt;ul&gt;\n        &lt;li ng-repeat=\"item in menu\"&gt;{{item}}&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/div&gt;\n\n  &lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>I just want to update and simplify the selected answer.  It seems you can reduce this by deleting this line:\n<code>$rootScope.$broadcast( 'MenuService.update', this.menu );</code></p>\n\n<p>and this chunk:</p>\n\n<pre><code>$scope.$on( 'MenuService.update', function( event, menu ) {\n $scope.menu = menu;\n});\n</code></pre>\n\n<p>The reason being, we are already using a Service, and that basically binds the two identical controllers, so no need to use $rootScope.$broadcast and add an observable.</p>\n\n<p>Working plunk here:\n<a href=\"http://plnkr.co/edit/1efEwU?p=preview\" rel=\"nofollow\">http://plnkr.co/edit/1efEwU?p=preview</a></p>\n\n<p>You only need to link the service, when I refactor the code I was able to reduce it to 13 lines instead of 22.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to use a controller on 2 seperated HTML elements, and use the $rootScope to keep the 2 lists in sync when one is edited:</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;ul class=\"nav\" ng-controller=\"Menu\"&gt;\n    &lt;li ng-repeat=\"item in menu\"&gt;\n        &lt;a href=\"{{item.href}}\"&gt;{{item.title}}&lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;div ng-controller=\"Menu\"&gt;\n    &lt;input type=\"text\" id=\"newItem\" value=\"\" /&gt;\n    &lt;input type=\"submit\" ng-click=\"addItem()\" /&gt;\n    &lt;ul class=\"nav\" ng-controller=\"Menu\"&gt;\n        &lt;li ng-repeat=\"item in menu\"&gt;\n            &lt;a href=\"{{item.href}}\"&gt;{{item.title}}&lt;/a&gt;\n        &lt;/li&gt;\n    &lt;/ul&gt;    \n&lt;/div&gt;\n</code></pre>\n\n<p><strong>JS</strong></p>\n\n<pre><code>angular.module('menuApp', ['menuServices']).\n    run(function($rootScope){\n        $rootScope.menu = [];\n    });\n\nangular.module('menuServices', ['ngResource']).\n    factory('MenuData', function ($resource) {\n        return $resource(\n            '/tool/menu.cfc', \n            {\n                returnFormat: 'json'\n            },\n            {\n                getMenu: {\n                    method: 'GET',\n                    params: {method: 'getMenu'}\n                },\n                addItem: {\n                    method: 'GET',\n                    params: {method: 'addItem'}\n                }\n            }\n        );\n    });\n\nfunction Menu($scope, MenuData) {\n\n    // attempt to add new item\n    $scope.addNewItem = function(){\n        var thisItem = $('#newItem').val();\n\n        MenuData.addItem({item: thisItem},function(data){\n            $scope.updateMenu();\n        });\n    }   \n\n    $scope.updateMenu = function() {\n        MenuData.getMenu({},function(data){\n            $scope.menu = data.MENU;\n        });         \n    }\n\n    // get menu data\n    $scope.updateMenu();\n}\n</code></pre>\n\n<p>When the page loads, both the <code>UL</code> and the <code>DIV</code> display the correct contents from the database, but when i use the <code>addNewItem()</code> method only the <code>DIV</code> gets updated.</p>\n\n<p>Is there a better way to structure my logic, or can I  do something to make sure the <code>$scope.menu</code> in the <code>UL</code> gets updated at the same time?</p>\n\n<p>Here's an example of something similar: <a href=\"http://plnkr.co/edit/2a55gq\">http://plnkr.co/edit/2a55gq</a></p>\n",
            "last_activity_date": 1397543682,
            "question_id": 13180293,
            "score": 15,
            "tags": [
                "javascript",
                "data-binding",
                "controller",
                "angularjs"
            ],
            "title": "AngularJS multiple uses of Controller and rootScope"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>Add an <code>onmouseover</code> function handler to the element that is taking the <code>:hover</code>.  Inside that function, call <code>console.info(element)</code> on whichever element you'd like to know about.</p>\n\n<pre><code>myHoverElement.onmouseover = function() {\n    console.info(document.getElementById(\"someotherelementofinterest\"));\n};\n</code></pre>\n\n<p>When you run this with firebug active, the element will be available to inspect in the firebug console.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>for css issues, i find web developer plugin invaluable:</p>\n\n<p><a href=\"http://chrispederick.com/work/web-developer/\" rel=\"nofollow\">http://chrispederick.com/work/web-developer/</a></p>\n\n<p>load it, then you have 2 possible tools at your disposal.</p>\n\n<ol>\n<li><p>inherited css from files on any moused-over element, use shift-ctrl-y</p></li>\n<li><p>computed css (incuding any inline style= applied that is not in a .css file - or through a .css method from jquery etc) - press shift-ctrl-f</p></li>\n</ol>\n\n<p>the latter would also return all classes applied to the element.</p>\n\n<p>of course it has other great uses such as, superb debugging of forms, including of editing of hidden fields and cookies (which can be used for penetration testing)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I had the same problem and found that whilst I couldn't inspect hover objects in Firefox with Firebug, Safari's Web Inspector would freeze the current state and allow inspection.  To activate Safari's web inspector just enter the following line into the terminal and restart Safari:</p>\n\n<pre><code>defaults write com.apple.Safari WebKitDeveloperExtras -bool true\n</code></pre>\n\n<p>Activate the hover element in the browser, then right click and select 'Inspect Element'. The page will freeze in it's current state allowing you to inspect the fleeting objects to your heart's content. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can do this in Firebug but its a little \"buggy\". If you inspect the element and then click off the the html tab, to the DOM tab for instance, when you go back to the html tab the \"style\" css tab on the right will have an arrow drop down selector where you can select the :hover state of that element to be active. Sucks to have to switch tabs to get it to show but it works for me.</p>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>There is no perfect solution (mouseover/hover-simulation effect) in firebug.</p>\n\n<p>However, there are a couple ways to edit your hover state in firebug:</p>\n\n<ol>\n<li><p>Add an <code>:active</code> state, along with your <code>:hover</code></p>\n\n<p><code>a:hover, a:active { ... }</code></p>\n\n<p>If you mouse down on your element, drag off and release, it remains active.</p></li>\n<li><p>Turn the <code>:hover</code> state into a <code>.hover</code> class</p>\n\n<p>You can edit the CSS rule by clicking on the source file (in Firebug's Style tab)</p>\n\n<p>Then of course, you'd add (and remove) the <code>.hover</code> class from your element.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can also inspect that element, then on the style the tab there should be a little drop down arrow. It will have something like \"Show User Agent\", \"Expand Shorthand Properties\", then there should be 2 more under that (I'm guessing that you are inspecting something that has a hover state) <code>:active</code> and <code>:hover</code> select the <code>:hover</code> and you should be golden.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I often make some alternate CSS or Javascript to \"freeze\" my hovered event; tweak it to perfection with Firebug and put my hover back in place.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In firebug, while in the HTML view, look to the right-side panel and find the \"Styles\" tab. Click the down arrow and select <code>:hover</code>.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Yes, you can right-click \"Inspect element\" when triggering the hover state. This worked for me in Firebug and WebKit.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When inspecting links, Firebug shows the default CSS state, i.e. styles applied to a:link. By default, the :hover and :active styles are not shown. Fortunately, you can change the state of the link by clicking Style and choosing the appropriate option:</p>\n\n<p><img src=\"http://i.stack.imgur.com/8tZdQ.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Some JavaScript toolkits, such as Dojo use CSS classes such as dijitButtonHover to style rather than :hover.</p>\n\n<p>So the Style tab :hover trick doesn't work.</p>\n\n<p>Instead, you can right-click the Node (who's CSS classes change) in the HTML tab, and \"Break on Attribute Change\"</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In Chrome (version 35):</p>\n\n<ul>\n<li>Inspect element</li>\n<li>Inside the elements viewer right click on the element .</li>\n<li>Select \"Force element state\" -> :active, :hover, :focus, :visited</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In Firefox (v33.1.1):</p>\n\n<ul>\n<li>Inspect element (Q)</li>\n<li>In the DOM view right click the element</li>\n<li>select :hover, :active or :focus at the bottom of the context menu</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I often find myself wanting to debug CSS layout issues that involve DOM changes caused by Javascript in reaction to a hover event or different CSS rules applying due to the :hover selector.</p>\n\n<p>Normally, I'd use Firebug to inspect the element that's giving me trouble and see what its CSS properties were, and where those properties come from. However, when hovering is involved, it becomes impossible, because as soon as you move your mouse down to the Firebug panel, the elements you're interested in are no longer hovered, the CSS rules that apply are different, and (in the case of JS hovers) the DOM is changed.</p>\n\n<p>Is there any way I can \"freeze\" the state of the DOM and application of :hover in order to inspect the DOM as it was <strong>during</strong> a hover event?</p>\n\n<p>Any other ideas on how to debug this sort of issue are welcome, of course.</p>\n",
            "last_activity_date": 1417399882,
            "question_id": 1080803,
            "score": 64,
            "tags": [
                "javascript",
                "html",
                "css",
                "firebug",
                "hover"
            ],
            "title": "How to debug CSS/Javascript hover issues"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>There isn't a workaround.</p>\n\n<p>I added a message in our web pages.\n'Please close this window if it does not close automatically.'</p>\n\n<p>There is a forum about this issue.\n<a href=\"https://devforums.apple.com/message/1044445\">https://devforums.apple.com/message/1044445</a></p>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>I am trying to open new tab via <code>Javascript</code> using <code>window.open()</code>, then using <code>window.close()</code> to close, but it seems <code>window.close()</code> doesn't work in safari( iOS 8 GM seed). Here is the code: </p>\n\n<p>A.html:</p>\n\n<p><code>&lt;button onclick=\"window.open('./B.html'); return false;\"&gt;Open B&lt;/button&gt;</code></p>\n\n<p>B.html:</p>\n\n<p><code>&lt;button onclick=\"window.close();\"&gt;Close&lt;/button&gt;</code></p>\n\n<p>I tried several ways like: <strong>setTimeout</strong>, <code>window.open()</code> then close, but doesn't help.</p>\n\n<p>Is there any workaround for this situation?</p>\n",
            "last_activity_date": 1412148844,
            "question_id": 25804730,
            "score": 18,
            "tags": [
                "javascript",
                "ios",
                "safari",
                "ios8"
            ],
            "title": "window.close() doesn&#39;t work on iOS 8 GM seed"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I've just wrote a tiny sample app using JQuery 1.4.1 and UI 1.8rc1.  All I did was specify the constructor as:</p>\n\n<pre><code>var theDialog = $(\".mydialog\").dialog({\n        autoOpen: false,\n        resizable: false,\n        modal: true,\n        width:'auto'\n});\n</code></pre>\n\n<p>I know you said that this makes it take up 100% width of the browser window but it works sweet here, tested in FF3.6, Chrome and IE8.  </p>\n\n<p>I'm not making AJAX calls, just manually changing the HTML of the dialog but don't think that will cause any probs.  Could some other css setting be knocking this out?</p>\n\n<p>The only problem with this is that it makes the width off-centre but I found this <a href=\"http://dev.jqueryui.com/ticket/4053\">support ticket</a> where they supply a workaround of placing the <code>dialog('open')</code> statement in a setTimeout to fix the problem.</p>\n\n<p>Here is the contents of my head tag:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"jquery-ui.min.js\"&gt;&lt;/script&gt;\n&lt;link href=\"jquery-ui.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n&lt;script type=\"text/javascript\"&gt;\n    $(function(){\n        var theDialog = $(\".mydialog\").dialog({\n            autoOpen: false,\n            resizable: false,\n            modal: true,\n            width: 'auto'\n        });\n\n        $('#one').click(function(){\n            theDialog.html('some random text').dialog('open');\n        });\n\n        $('#two').click(function(){\n            theDialog.html('&lt;ul&gt;&lt;li&gt;Apple&lt;/li&gt;&lt;li&gt;Orange&lt;/li&gt;&lt;li&gt;Banana&lt;/li&gt;&lt;li&gt;Strawberry&lt;/li&gt;&lt;li&gt;long text string to see if width changes&lt;/li&gt;&lt;/ul&gt;').dialog('open');\n        });\n\n        $('#three').click(function(){\n            //this is only call where off-centre is noticeable so use setTimeout\n            theDialog.html('&lt;img src=\"./random.gif\" width=\"500px\" height=\"500px\" /&gt;');\n            setTimeout(function(){ theDialog.dialog('open') }, 100);;\n        });\n     });\n&lt;/script&gt;\n</code></pre>\n\n<p>I downloaded the js and css for Jquery UI from <a href=\"http://jquery-ui.googlecode.com/files/jquery-ui-1.8rc1.zip\">http://jquery-ui.googlecode.com/files/jquery-ui-1.8rc1.zip</a>.\nand the body:</p>\n\n<pre><code>&lt;div class='mydialog'&gt;&lt;/div&gt;\n&lt;a href='#' id='one'&gt;test1&lt;/a&gt;\n&lt;a href='#' id='two'&gt;test2&lt;/a&gt;\n&lt;a href='#' id='three'&gt;test3&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 184
                },
                {
                    "body": "<p>I imagine setting float:left for the dialog will work. Presumably the dialog is absolutely positioned by the plugin, in which case its position will be determined by this, but the side-effect of float - making elements only as wide as they need to be to hold content - will still take effect.</p>\n\n<p>This should work if you just put a rule like</p>\n\n<pre><code>.myDialog {float:left}\n</code></pre>\n\n<p>in your stylesheet, though you may need to set it using jQuery</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I had the same problem when I upgraded jquery UI to 1.8.1 without upgrading the corresponding theme. Only is needed to upgrade the theme too and \"auto\" works again.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Had the same problem and thanks to you mentioning that the real problem was related to CSS I found the issue:</p>\n\n<p>Having <strong><code>position:relative</code></strong> instead of <strong><code>position:absolute</code></strong> in your <code>.ui-dialog</code> CSS rule makes the dialog and <code>width:'auto'</code> behave strangely.</p>\n\n<pre><code>.ui-dialog { position: absolute;}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>For some reason I kept having this full page width problem with IE7 so I made this hack:</p>\n\n<pre><code>var tag = $(\"&lt;div&gt;&lt;/div&gt;\");\n//IE7 workaround\nvar w;\nif (navigator.appVersion.indexOf(\"MSIE 7.\") != -1)\n    w = 400;\nelse\n    w = \"auto\";\n\ntag.html('My message').dialog({\n    width: w,\n    maxWidth: 600,\n    ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have the same problem and having position: absolute in your .ui-dialog{} css was not enough.  I noticed that position: relative was being set on the actual element's direct style, so the .ui-dialog css definition was getting overwritten.  Setting position: absolute on the div I was going to make a dialog statically also did not work.</p>\n\n<p>In the end I changed two placed in my local jQuery to make this work.</p>\n\n<p>I changed the following line in jQuery to be:</p>\n\n<pre><code>elem.style.position = \"absolute\";\n</code></pre>\n\n<p>at <a href=\"https://github.com/jquery/jquery/blob/1.8.0/src/offset.js#L62\" rel=\"nofollow\">https://github.com/jquery/jquery/blob/1.8.0/src/offset.js#L62</a></p>\n\n<p>Also, since my dialog was set to draggable, I had to change this line as well in jQuery-ui to be:</p>\n\n<pre><code>this.element[0].style.position = 'absolute';\n</code></pre>\n\n<p>at <a href=\"https://github.com/jquery/jquery-ui/blob/1-8-stable/ui/jquery.ui.draggable.js#L48\" rel=\"nofollow\">https://github.com/jquery/jquery-ui/blob/1-8-stable/ui/jquery.ui.draggable.js#L48</a></p>\n\n<p>Perhaps going through the style I have more thoroughly would fix things, but thought I'd share how I got this working.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's how I did it:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/16471890/responsive-jquery-ui-dialog-and-a-fix-for-maxwidth-bug\">Responsive jQuery UI Dialog ( and a fix for maxWidth bug )</a></p>\n\n<p>Fixing the maxWidth &amp; width: auto bug.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For large amount of text content, I specify width, height and position before opening the dialog:</p>\n\n<pre><code>$(\"#dialog\").dialog(\"option\", {\n    width: $(window).width() - 100,\n    height: $(window).height() - 100,\n    position: {\n        my: \"center\",\n        at: \"center\",\n        of: window\n    }\n}).dialog(\"open\");\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/salman/FwsUS/show/\" rel=\"nofollow\"><strong>Demo here</strong></a><br>\n<a href=\"http://jsfiddle.net/salman/FwsUS/\" rel=\"nofollow\"><strong>Code here</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had a similar problem.</p>\n\n<p>Setting <code>width</code> to <code>\"auto\"</code> worked fine for me but when the dialog contained a lot of text it made it span the full width of the page, ignoring the <code>maxWidth</code> setting.</p>\n\n<p>Setting <code>maxWidth</code> on <code>create</code> works fine though:</p>\n\n<pre><code>$( \".selector\" ).dialog({\n  width: \"auto\",\n  // maxWidth: 660, // This won't work\n  create: function( event, ui ) {\n    // Set maxWidth\n    $(this).css(\"maxWidth\", \"660px\");\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you need it to work in IE7, you can't use the <a href=\"http://bugs.jqueryui.com/ticket/4437#comment:9\" rel=\"nofollow\">undocumented, buggy, and unsupported</a> <code>{'width':'auto'}</code> option. Instead, add the following to your <code>.dialog()</code>:</p>\n\n<pre><code>'open': function(){ $(this).dialog('option', 'width', this.scrollWidth) }\n</code></pre>\n\n<p>Whether <code>.scrollWidth</code> includes the right-side padding depends on the browser (Firefox differs from Chrome), so you can either add a subjective \"good enough\" number of pixels to <code>.scrollWidth</code>, or replace it with your own width-calculation function.</p>\n\n<p>You might want to include <code>width: 0</code> among your <code>.dialog()</code> options, since this method will never decrease the width, only increase it.</p>\n\n<p>Tested to work in IE7, IE8, IE9, IE10, IE11, Firefox 30, Chrome 35, and Opera 22.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm having a lot of trouble finding specific information and examples on this.   I've got a number of jQuery UI dialogs in my application attached to divs that are loaded with .ajax() calls.  They all use the same setup call:</p>\n\n<pre><code> $(\".mydialog\").dialog({\n        autoOpen: false,\n        resizable: false,\n        modal: true\n });\n</code></pre>\n\n<p>I just want to have the dialog resize to the width of the content that gets loaded.  Right now, the width just stays at 300px (the default) and I get a horizontal scrollbar.</p>\n\n<p>As far as I can tell, \"autoResize\" is no longer an option for dialogs, and nothing happens when I specify it.</p>\n\n<p>I'm trying to not write a separate function for each dialog, so <code>.dialog(\"option\", \"width\", \"500\")</code> is not really an option, as each dialog is going to have a different width.  </p>\n\n<p>Specifying <code>width: 'auto'</code> for the dialog options just makes the dialogs take up 100% of the width of the browser window.</p>\n\n<p>What are my options?  I'm using jQuery 1.4.1 with jQuery UI 1.8rc1. It seems like this should be something that is really easy.</p>\n\n<p>EDIT: I've implemented a kludgy workaround for this, but I'm still looking for a better solution.</p>\n",
            "last_activity_date": 1403739491,
            "question_id": 2231446,
            "score": 92,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "resize",
                "jquery-ui-dialog"
            ],
            "title": "Automatically resize jQuery UI dialog to the width of the content loaded by ajax"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Yes. You'll want to use the <code>.apply()</code> method. For example:</p>\n\n<pre><code>app[func].apply(this||window,args);\n</code></pre>\n\n<p>EDIT - Actually, my <code>||window</code> bit is superfluous, since <code>this</code> resolves to <code>window</code> when called outside of a function anyway.</p>\n",
                    "is_accepted": true,
                    "score": 97
                },
                {
                    "body": "<pre><code>app[func].apply(this, args);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>You might want to take a look at a <a href=\"http://stackoverflow.com/questions/676721/calling-dynamic-function-with-dynamic-parameters-in-javascript\">similar question</a> posted on Stack Overflow. It uses the <code>.apply()</code> method to accomplish this.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<h2>A very readable example from another post on similar topic:</h2>\n\n<pre><code>var x = [ 'p0', 'p1', 'p2' ];\n\nfunction call_me (param0, param1, param2 ) {\n    // ...\n}\n\n// Calling the function using the array with apply()\ncall_me.apply(this, x);\n</code></pre>\n\n<p>And <a href=\"http://stackoverflow.com/questions/2856059/passing-an-array-as-a-function-parameter-in-javascript\">here a link to the original post</a> that I personally liked for it's readability</p>\n",
                    "is_accepted": false,
                    "score": 23
                }
            ],
            "body": "<p>Is it possible to convert an array into a function argument sequence? Example:</p>\n\n<pre><code>run({ \"render\": [ 10, 20, 200, 200 ] });\n\nfunction run(calls) {\n  var app = .... // app is retrieved from storage\n  for (func in calls) {\n    // What should happen in the next line?\n    var args = ....(calls[func]);\n    app[func](args);  // This is equivalent to app.render(10, 20, 200, 200);\n  }\n}\n</code></pre>\n",
            "last_activity_date": 1411714865,
            "question_id": 1316371,
            "score": 86,
            "tags": [
                "javascript",
                "arrays",
                "arguments"
            ],
            "title": "Converting a Javascript array to a function arguments list"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<ol>\n<li>In Javascript there is no notion of\nassociative array, there are objects</li>\n<li>The only way to merge two objects is\nto loop for their properties and\ncopy pointers to their values that\nare not primitive types and values\nfor primitive types to another\ninstance</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is how Prototype does it:</p>\n\n<pre><code>Object.extend = function(destination, source) {\n    for (var property in source) {\n        if (source.hasOwnProperty(property)) {\n            destination[property] = source[property];\n        }\n    }\n    return destination;\n};\n</code></pre>\n\n<p>called as, for example:</p>\n\n<pre><code>var arr1\u3000= { robert: \"bobby\", john: \"jack\" };\nvar arr2 = { elizabeth: \"liz\", jennifer: \"jen\" };\n\nvar shortnames = Object.extend(arr1,arr2);\n</code></pre>\n\n<p><strong>EDIT</strong>: added hasOwnProperty() check as correctly pointed out by bucabay in comments</p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>do you want to overwrite a property if the names are the same but the values are not?</p>\n\n<p>And do you want to permanently change one of the original objects, </p>\n\n<p>or do you want a new merged object returned?</p>\n\n<pre><code>function mergedObject(obj1, obj2, force){\n    for(var p in obj1) this[p]= obj1[p];\n    for(var p in obj2){\n    \tif(obj2.hasOwnProperty(p)){\n    \t\tif(force || this[p]=== undefined) this[p]= obj2[p];\n    \t\telse{\n    \t\t\tn= 2;\n    \t\t\twhile(this[p+n]!== undefined)++n;\n    \t\t\tthis[p+n]= obj2[p];\n    \t\t}\n    \t}\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>In <a href=\"http://api.dojotoolkit.org/\" rel=\"nofollow\">dojo</a>, the 2-objects/arrays \"merge\" would be <code>dojo.mixin(destination, source)</code> -- you can also mix multiple sources into one destination, etc -- see <a href=\"http://api.dojotoolkit.org/jsdoc/1.3/dojo.mixin\" rel=\"nofollow\">the mixin function's reference</a> for details.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>with jquery you can call <code>$.extend</code></p>\n\n<pre><code>obj1 = {a: 1, b: 2};\nobj2 = {a: 4, c: 110};\n\nobj3 = $.extend(obj1, obj2); \n\nobj1 == obj3 == {a: 4, b: 2, c: 110}\n</code></pre>\n\n<p>(assoc. arrays are objects in js)</p>\n\n<p>look here: <a href=\"http://api.jquery.com/jQuery.extend/\">http://api.jquery.com/jQuery.extend/</a></p>\n\n<hr>\n\n<p><strong>edit:</strong> Like rymo suggested, it's better to do it this way:</p>\n\n<pre><code>obj3 = $.extend({}, obj1, obj2); \nobj3 == {a: 4, b: 2, c: 110}\n</code></pre>\n\n<p>As here obj1 (and obj2) remain unchanged.</p>\n",
                    "is_accepted": true,
                    "score": 136
                },
                {
                    "body": "<p>Yahoo UI (YUI) also has a helper function for this:</p>\n\n<p><a href=\"http://developer.yahoo.com/yui/examples/yahoo/yahoo_merge.html\" rel=\"nofollow\">http://developer.yahoo.com/yui/examples/yahoo/yahoo_merge.html</a></p>\n\n<pre><code>YAHOO.namespace('example');\n\nYAHOO.example.set1 = { foo : \"foo\" };\nYAHOO.example.set2 = { foo : \"BAR\", bar : \"bar\" };\nYAHOO.example.set3 = { foo : \"FOO\", baz : \"BAZ\" };\n\nvar Ye = YAHOO.example;\n\nvar merged = YAHOO.lang.merge(Ye.set1, Ye.set2, Ye.set3);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://documentcloud.github.com/underscore/#extend\">Underscore</a> also has an extend method:</p>\n\n<blockquote>\n  <p>Copy all of the properties in the source objects over to the\n  destination object. It's in-order, so the last source will override\n  properties of the same name in previous arguments.</p>\n</blockquote>\n\n<pre><code>_.extend(destination, *sources) \n\n_.extend({name : 'moe'}, {age : 50});\n=&gt; {name : 'moe', age : 50}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Keep it simple...</p>\n\n<pre><code>function mergeArray(array1,array2) {\n  for(item in array1) {\n    array2[item] = array1[item];\n  }\n  return array2;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I needed a deep-object-merging. So all of the other answers didn't help me very much. _.extend and jQuery.extend do well, unless you have a recursive array like i do. But it ain't so bad, you can program it in five minutes:</p>\n\n<pre><code>var deep_merge = function (arr1, arr2) {\n    jQuery.each(arr2, function (index, element) {\n        if (typeof arr1[index] === \"object\" &amp;&amp; typeof element === \"object\") {\n            arr1[index] = deep_merge(arr1[index], element);\n        } else if (typeof arr1[index] === \"array\" &amp;&amp; typeof element === \"array\") {\n            arr1[index] = arr1[index].concat(element);\n        } else {\n            arr1[index] = element;\n        }\n    });\n    return arr1;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>jquery has a boolean for deep copy. You could do something like that:</p>\n\n<pre><code>MergeRecursive = function(arr1, arr2){\n    $.extend(true, arr1, arr2);\n    return arr1;                \n};\n</code></pre>\n\n<p>Also you can edit this function to support n-arrays to merge.</p>\n\n<pre><code>ArrayMergeRecursive = function(){\n     if(arguments.length &lt; 2){\n          throw new Error(\"ArrayMergeRecursive: Please enter two or more objects to merge!\");\n     }\n\n    var arr1=arguments[0];\n    for(var i=0; i&lt;=arguments.length; i++ ){\n        $.extend(true, arr1, arguments[i]);                 \n    }\n\n    return arr1;                \n};\n</code></pre>\n\n<p>So now you can do</p>\n\n<pre><code>var arr1 = {'color': {'mycolor': 'red'}, 3: 5},\n    arr2 = {4: 10, 'color': {'favorite': 'green', 0: 'blue'}},\n    arr3 = ['Peter','Jhon','Demosthenes'],\n    results = ArrayMergeRecursive(arr1, arr2, arr3); // (arr1, arr2 ... arrN)\nconsole.log(\"Result is:\", results);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h1>Rolling Your Own <em>Extend/Mixin</em> Function</h1>\n\n<pre><code>function extend(objects) {\n    var args\n        , first = Array.prototype.slice.call(arguments, 0, 1)[0]\n        , second;\n\n    if (arguments.length &gt; 1) {\n        second = Array.prototype.splice.call(arguments, 1, 1)[0];\n        for (var key in second) {\n            first[key] = second[key];\n        }\n        args = Array.prototype.slice.call(arguments, 0);\n        return extend.apply(this, args);\n    }\n\n    return first;\n}\n</code></pre>\n\n<p>...</p>\n\n<pre><code>var briansDirections = {\n    step1: 'Remove pastry from oven.',\n    step2: 'Place pastry toaster.',\n    step3: 'Remove pastry from toaster and enjoy.',\n};\nextend(briansDirections, { step1: 'Toast Poptarts' }, { step2: 'Go ahead, toast \\'em' }, { step3: 'Hey, are you sill reading this???' });\n</code></pre>\n\n<p>...</p>\n\n<p>This simply extends a <em>splat</em> of objects, recursively. Also, note that this recursive function is TCO (<em>Tail-Call Optimized</em>) as its return is the last call to itself.</p>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What's the best/standard way of merging two associative arrays in javascript?  Does everyone just do it by rolling their own for loop?</p>\n",
            "last_activity_date": 1423702972,
            "question_id": 929776,
            "score": 79,
            "tags": [
                "javascript"
            ],
            "title": "Merging associative arrays javascript"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>The problem with GWT is that it makes it very difficult to include any Javascript that's not already been ported to GWT.  GWT and EXT-GWT give you a lot tools and widgets, but if you need to use anything that's not already part of GWT, you'll have difficulties, especially in debugging.</p>\n\n<p>In my opinion, Javascript isn't nearly as hard to write as it used to be.  <a href=\"http://getfirebug.com/\" rel=\"nofollow\">Firebug</a>, especially, makes debugging Javascript very nice.</p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>I have used it, but I can't say I recommend doing it unless you're really afraid of learning some JavaScript, you'll most likely have to anyways to debug your application or when the provided features just don't cut it.\nIMO jQuery or some other JavaScript toolkit is the way to go.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are experienced with Java, I'd definitely go with GWT - Java is a object oriented language, which allows writing \"clean\", easy to maintain, testable code (try unit testing JS code :/). Thanks to the awesome GWT Compiler, the resulting JS code is in most cases <em>faster</em> and more optimized than handwritten JS code (unused code is removed, code is inlined, many static invocations for maximum performance - not the kind of JS code you'd write by hand, but it's the fastest). I'd recommend watching the <a href=\"https://www.youtube.com/watch?v=q9hhENmVTWg\" rel=\"nofollow\">Measure in Milliseconds: Performance Tips for Google Web Toolkit</a> presentation from last year's Google I/O. There you'll see how fast is the JS code that GWT produces (note that the GWT Compiler is constantly improving, so it should produce even smaller and faster code now). You might also be interested in other prestentations from <a href=\"https://www.youtube.com/user/GoogleDevelopers/search?query=Google+I%2FO+2009\" rel=\"nofollow\">Google I/O 2009</a> and <a href=\"https://www.youtube.com/user/GoogleDevelopers/search?query=Google+I%2FO+2010\" rel=\"nofollow\">Google I/O 2010</a>.</p>\n\n<p>I'd stay clear of projects like Ext GWT/GXT - while they offer all sorts of widgets, they are also very sluggish - it's better to roll out your own widgets, optimized for your specific needs.</p>\n\n<p>And I don't agree with quanticle - <a href=\"http://www.gwtproject.org/doc/latest/DevGuideCodingBasicsJSNI.html\" rel=\"nofollow\">JavaScript Native Interface (JSNI)</a> makes it as easy as possible to integrate JavaScript code with Java code (think JNI for \"vanilla\" Java).</p>\n",
                    "is_accepted": true,
                    "score": 65
                },
                {
                    "body": "<p>I'm very familiar with JS+HTML+CSS, and except some basic JSP, I know nothing about JAVA.\nFor me using GWT would bring 2 pains, learning JAVA and losing the touch with the real stuff.</p>\n\n<p>I worked few years in SAP projects, and they have something called \"Web Dynpro\" that took a similar approach. HTML and JS are hidden in a JAVA stack that generates everything for you.</p>\n\n<p>In the end you build very standardized screens, with a \"relatively\" limited freedom.\nBig corporations like them as it gives them a certainty over the uniformity of the screens.\nThey are all ugly but they look the same and you can switch from one developer to the other very easily.</p>\n\n<p>But if you are more on the 2.0 creative side, you quickly end up frustrated of the possibilities the framework offers you to build new ideas.</p>\n\n<p>IMO if you are in big projects, big teams and know well JAVA: GWT (+ App Engine)</p>\n\n<p>If you are a creative person and/or in startup mode: Javascript+HTML+CSS</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>An answer to A):</p>\n\n<p>If you look at Google it's only ever travelled in one direction; browser applications. The question Google have is how to make browser based applications as usable as desktop applications, and the answer is '<em>make them faster</em>'.</p>\n\n<p>Google are investing a lot of time and money in new and faster browsers, operating systems, and internet protocols. These will all help them reach their goal, but their key advancements will be made in how they make Javascript run as quickly as Java (or at least very close).</p>\n\n<p>As Google use GWT for a number of their key products, and given with each release the compiler produces faster and more efficient Javascript, the answer should be fairly obvious. If you want a faster site/application in the future you're better off letting GWT create the Javascript you desire.</p>\n\n<p>An answer to B):</p>\n\n<p>One of the most frustrating parts of GWT at the moment (which may well be resolved in the future) is you have to make a decision whether to code for AppEngine or not for AppEngine. You could theoretically code for both, but this would be time consuming and more painful to test. This issue is down to the lack of current support for MySQL (et al) on AppEngine, and lack of an external availability of Big Table* outside of AppEngine.</p>\n\n<p>Saying that, if you don't use AppEngine you're not really developing anything you wouldn't have to develop if you didn't do it in GWT.</p>\n\n<p>I hope that's useful. If not I hope it's useful for someone :o)</p>\n\n<p>*If anyone knows otherwise please let me know.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>This fairly new <a href=\"http://code.google.com/events/io/2010/sessions/architecting-production-gwt.html\" rel=\"nofollow\">video</a> provides the answer to part \"B\" of your question.  There are no optimizations for the google app engine.  However, the google app engine does provide performance optimization for apps wether they use GWT or not.  </p>\n\n<p>It comes at a cost however.  Which is that JPA object CANNOT have a direct pointer to any other JPA object.  They must store the foreign key in Java as a long, or string and then manage the relationship in code rather than let the JPA provider handle it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've been using GWT for more than 8 years since 2006 (I remember it was just version ~1.1, didn't use Apache License at that time).</p>\n\n<p>I'm a Java programmer and I strongly recommend GWT as long as you are familiar with Java and OO concepts. When I recommend to my colleagues, I always say: \"GWT can do anything as long as it's reasonable for a browser.\" That is, as long as the requirement is scoped in browse-based applications, GWT can deliver very good result, and the code base is clean and easy to maintain.</p>\n\n<p>Recently, I used GWT together with many other JS libraries which are working very well. If you could avoid, please only use GWT and don't use any other hand-written JS code. But sometimes we do need to communicate between JS code and GWT code via JSNI - call GWT code from external JS or call external JS from GWT code. For example, I used YouTube JS API in our web applications, my GWT code communicate with JS API. Another example is that I used some JS chart libraries in my web applications. GWT can work together with any JS libraries smoothly.</p>\n\n<p>The core of GWT is HTML DOM/JavaScript/CSS as well. That's why I'm confident that GWT can do anything as long as it's reasonable for a browser.</p>\n\n<p>But some non-technical factors may suggest you to not choose GWT. For example, most developers of your team don't have Java background...</p>\n\n<p>To summarize, I like GWT, and I have already felt the productivity and good result in many projects. I hope my share can help someone to understand this excellent \"Toolkit\". :)</p>\n\n<p><strong>Update on 5 Dec, 2014</strong></p>\n\n<p>Recently I even used GWT as the major technology in a desktop application, which is a productivity tool for developers on Mac OS X. If interested, please head to this page to have a look: <a href=\"https://task.tips\" rel=\"nofollow\">https://task.tips</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I would go with GWT.\nIt brings software engineering into web app development. \nThe component model is simple to extend. \nThe GWT-RPC approach is simple and powerful, especially if combined with something like <a href=\"http://code.google.com/p/gwt-dispatch/wiki/GettingStarted\" rel=\"nofollow\">gwt-dispatch</a> (go for batching, go for caching).</p>\n\n<p>App Engine deployment is nice too.</p>\n\n<p>You are not alone. Take a look at my \"Who is using GWT\" reference list:</p>\n\n<p><a href=\"http://gwtreferencelist.appspot.com/\" rel=\"nofollow\">http://gwtreferencelist.appspot.com/</a></p>\n\n<p>But keep in mind: plan for history from day one. don't use too much widgets, they are heavy weight - create your own widgets. GWT is here to help you with JS, not to make you thing html+css does not exist.</p>\n\n<p>I am very happy with GWT for a while now.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I have used GWT since 2007 and remember reading and hearing from people about it being \"You don't need Javascript to run javascript in browser\". \"Write it in the language you know\". Back then Java was still hot.</p>\n\n<p>Java as a language hasn't moved anywhere (noticeable) in the last 8-10 years. Java is possibly the best platform for software but is no longer the best language. If you ask some ruby/rails friends, they will tell you Java is dead!!!</p>\n\n<p>So you would be investing for your future by NOT using GWT.</p>\n\n<p>Javascript has come a long way and has been given the love it deserved. Now the people who do javascript for bread and butter also know  the importance of TDD, and MVC, MVP, MVVM patterns. Backbone.Js, Spine.Js and Ember.Js and hatful of templating solutions to name a few, have shown that Javascript can be beautiful, clean and manageable at the same time.</p>\n\n<p>Regarding browser quirks and all, there is not much of that left. Vendor prefixes, competition to support HTML5, CSS3 spec amongst vendors is really benefiting today's frontend developers.</p>\n\n<p>What of the debugging support in all major browsers of today. Forget GWT, Even Java's position is in danger.</p>\n\n<p>I would use one of Grails/Lift/Playframework + Backbone.Js/Ember.Js over GWT/Java.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<ul>\n<li>What is the best thing about GWT? </li>\n<li>What is the worst thing? </li>\n<li>What is going to happen to GWT now that is community driven?</li>\n</ul>\n\n<p>Check the details of the report published by Vaadin with the support of the GWT Steering Committee.\n<a href=\"https://vaadin.com/gwt/report-2012\" rel=\"nofollow\">https://vaadin.com/gwt/report-2012</a></p>\n\n<p>To me individually this report is quite informative, as it is based on responses of more than 1300 respondents related to GWT development and contains interesting comments of key developers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm a Java developer. To be honest, I'm a little intimidated about writing lots of javascript, so the idea of writing a web app completely in Java with GWT appeals to me!</p>\n\n<p>I'm planning a new web app and one of my considerations is that I want it to run well on mobile browsers (for android and iphone).  I've also used a few GWT apps that still feel a little sluggish...not quite as responsive.</p>\n\n<p>If you've used GWT, can you give your thoughts about A) how efficient is the client-side code as compared to hand-coded html+jquery. And B) are there any server-side efficiency considerations that you would consider when using GWT, in particular with Google appengine.</p>\n\n<p>In particular the stacks I'm debating using are appengine + slim3 + jquery ... OR appengine + GWT + objectify.</p>\n",
            "last_activity_date": 1417744793,
            "question_id": 3180116,
            "score": 50,
            "tags": [
                "java",
                "javascript",
                "gwt"
            ],
            "title": "to GWT or not to GWT"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>At first, I also thought this is just a terminal emulator connecting you to a VM but it isn't. If you watch the network connections, you can see that, after bootup, no data is transmitted anymore.</p>\n\n<p>So it's real.</p>\n\n<p>A CPU is not something magic; in fact all it does is read bytes from memory and modify the RAM in accordance to what the commands mean.</p>\n\n<p>In this case, the CPU emulator is based on the qemu code. What he does is he creates an array of functions where the index is the next byte at the PC (program counter).</p>\n\n<p>Now all you need is a simple linux distribution that doesn't need any exotic CPU commands like floating point arithmetic or MMX code and voila.</p>\n\n<p>What's interesting is the speed of the beast. The whole thing is a bit sluggish but then, it's JavaScript in a browser.</p>\n\n<p>Conclusion: Impressive. Can't wait to see a C64 emulator :-)</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>See <a href=\"http://www.quora.com/CPU-Emulation/How-does-bellard-org-jslinux-work\">http://www.quora.com/CPU-Emulation/How-does-bellard-org-jslinux-work</a></p>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>Today I had a jaw dropping moment, when I saw Linux emulator in Javascript:\n<a href=\"http://bellard.org/jslinux/\">http://bellard.org/jslinux/</a> </p>\n\n<p>It compiles C programs, it has vi and emacs, it supports all shell commands, etc etc. </p>\n\n<p>How does it work?</p>\n",
            "last_activity_date": 1305704830,
            "question_id": 6030407,
            "score": 45,
            "tags": [
                "javascript",
                "linux",
                "emulator"
            ],
            "title": "How does Linux emulator in Javascript by Fabrice Bellard work?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>convert = (num1, num2, num3) -&gt; num1 + num2 * num3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You should check these awesome slides just released today by godfoca <a href=\"http://www.slideshare.net/godfoca/lets-have-a-cup-of-coffeescript\" rel=\"nofollow\">http://www.slideshare.net/godfoca/lets-have-a-cup-of-coffeescript</a>  Also, you can try code out through-the-web at <a href=\"http://jashkenas.github.com/coffee-script/\" rel=\"nofollow\">http://jashkenas.github.com/coffee-script/</a></p>\n\n<pre><code>convert = (num1, num2, num3) -&gt;\n  num1 + num2 * num3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>window.convert = (num1, num2, num3) -&gt;\n  num1 + num2 * num3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You need to export the convert function to the global scope.  See <a href=\"http://stackoverflow.com/questions/6163019/how-can-coffescript-access-functions-from-other-assets/6163057\">How can Coffescript access functions from other assets?</a></p>\n\n<pre><code>convert = (num1, num2, num3) -&gt;\n  num1 + num2 * num3\nwindow.convert = convert\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 64
                },
                {
                    "body": "<p>@lawnsea answer is great. </p>\n\n<p>I just want to add some thoughts.</p>\n\n<p>Instead of polluting the global namespace, I prefer to add just one variable to the <code>window</code> object.</p>\n\n<pre><code>window.App = {}\n</code></pre>\n\n<p>Then, you can have access to <code>App</code> globally and add all your stuff there. the function <code>convert</code> can now be expressed this way:</p>\n\n<pre><code>App.convert = convert = (a, b, c) -&gt; a + b * c\n</code></pre>\n\n<p>Then, to call the function within the local scope</p>\n\n<pre><code>convert 1,2,3\n</code></pre>\n\n<p>And now globally</p>\n\n<pre><code>App.convert 1,2,3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>At the top level of your coffeescript file, <strong>this</strong> (aka <strong>@</strong>) should refer to <strong>window</strong>. So to attach it here, you could use the shorthand:</p>\n\n<pre><code>@convert = (num1, num2, num3) -&gt; num1 + num2 * num3\n</code></pre>\n\n<p>Note that this pollutes the global namespace, though. The solution posted by <strong>jm-</strong> is more prudent. But you can replace</p>\n\n<pre><code>window.App = {}\n</code></pre>\n\n<p>with</p>\n\n<pre><code>@App = {}\n</code></pre>\n\n<p>The benefit of using <strong>@</strong> is that it refers to <strong>global</strong> in node.js, so you can use the same code to expose your functions in both browser and serverside environments.</p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I'm trying to convert a <code>function</code> from Javascript to CoffeeScript. This is the code:</p>\n\n<pre><code>function convert(num1, num2, num3) {\n    return num1 + num2 * num3;\n}\n</code></pre>\n\n<p>But how I can do that in CoffeeScript?</p>\n\n<hr>\n\n<p>I'm trying to run the function from an HTML source like this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"../coffee/convert.js\"&gt;&lt;/script&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    convert(6, 3, 10);\n&lt;/script&gt;\n</code></pre>\n\n<p>But it won't work and I get an error saying: <code>ReferenceError: Can't find variable: convert</code></p>\n\n<p>How to correct this?</p>\n",
            "last_activity_date": 1332858516,
            "question_id": 6206820,
            "score": 41,
            "tags": [
                "javascript",
                "coffeescript"
            ],
            "title": "Functions In CoffeeScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use ng-show on every div element in the loop. Is this what you've wanted: <a href=\"http://jsfiddle.net/pGwRu/2/\">http://jsfiddle.net/pGwRu/2/</a> ?</p>\n\n<pre><code>&lt;div class=\"from\" ng-show=\"message.from\"&gt;From: {{message.from.name}}&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You could use the <a href=\"http://docs.angularjs.org/api/ng.directive%3angSwitch\">ngSwitch</a> directive:</p>\n\n<pre><code>  &lt;div ng-switch on=\"selection\" &gt;\n    &lt;div ng-switch-when=\"settings\"&gt;Settings Div&lt;/div&gt;\n    &lt;span ng-switch-when=\"home\"&gt;Home Span&lt;/span&gt;\n    &lt;span ng-switch-default&gt;default&lt;/span&gt;\n  &lt;/div&gt;\n</code></pre>\n\n<p>If you don't want the DOM to be loaded with empty divs, you need to create your custom directive using $http to load the (sub)templates and $compile to inject it in the DOM when a certain condition has reached.</p>\n\n<p>This is just an (untested) example. It can and should be optimized:</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;conditional-template ng-model=\"element\" template-url1=\"path/to/partial1\" template-url2=\"path/to/partial2\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p><strong>Directive:</strong></p>\n\n<pre><code>app.directive('conditionalTemplate', function($http, $compile) {\n   return {\n      restrict: 'E',\n      require: '^ngModel',\n      link: function(sope, element, attrs, ctrl) {\n        // get template with $http\n        // check model via ctrl.$viewValue\n        // compile with $compile\n        // replace element with element.replaceWith()\n      }\n   };\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Angular 1.1.5 introduced the <a href=\"http://code.angularjs.org/1.1.5/docs/api/ng.directive%3angIf\">ng-if</a> directive.  That's the best solution for this particular problem.  If you are using an older version of Angular, consider using angular-ui's <a href=\"https://github.com/angular-ui/angular-ui/blob/master/modules/directives/if/if.js\">ui-if</a> directive.</p>\n\n<p>If you arrived here looking for answers to the general question of \"conditional logic in templates\" also consider:</p>\n\n<ul>\n<li>1.1.5 also introduced a <a href=\"http://stackoverflow.com/a/12151492/215945\">ternary operator</a></li>\n<li><a href=\"http://docs.angularjs.org/api/ng.directive%3angSwitch\">ng-switch</a> can be used to conditionally add/remove elements from the DOM</li>\n<li>see also <a href=\"http://stackoverflow.com/questions/13813254/how-do-i-conditionally-apply-css-styles-in-angularjs\">How do I conditionally apply CSS styles in AngularJS?</a></li>\n</ul>\n\n<hr>\n\n<p>Original answer:</p>\n\n<p>Here is a not-so-great \"ng-if\" directive:</p>\n\n<pre><code>myApp.directive('ngIf', function() {\n    return {\n        link: function(scope, element, attrs) {\n            if(scope.$eval(attrs.ngIf)) {\n                // remove '&lt;div ng-if...&gt;&lt;/div&gt;'\n                element.replaceWith(element.children())\n            } else {\n                element.replaceWith(' ')\n            }\n        }\n    }\n});\n</code></pre>\n\n<p>that allows for this HTML syntax:</p>\n\n<pre><code>&lt;div ng-repeat=\"message in data.messages\" ng-class=\"message.type\"&gt;\n   &lt;hr&gt;\n   &lt;div ng-if=\"showFrom(message)\"&gt;\n       &lt;div&gt;From: {{message.from.name}}&lt;/div&gt;\n   &lt;/div&gt;    \n   &lt;div ng-if=\"showCreatedBy(message)\"&gt;\n      &lt;div&gt;Created by: {{message.createdBy.name}}&lt;/div&gt;\n   &lt;/div&gt;    \n   &lt;div ng-if=\"showTo(message)\"&gt;\n      &lt;div&gt;To: {{message.to.name}}&lt;/div&gt;\n   &lt;/div&gt;    \n&lt;/div&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/mrajcok/5ttQA/\">Fiddle</a>.</p>\n\n<p>replaceWith() is used to remove unneeded content from the DOM.</p>\n\n<p>Also, as I mentioned on Google+, <a href=\"http://docs.angularjs.org/api/ng.directive%3angStyle\">ng-style</a> can probably be used to conditionally load background images, should you want to use ng-show instead of a custom directive.  (For the benefit of other readers, Jon stated on Google+: \"both methods use ng-show which I'm trying to avoid because it uses display:none and leaves extra markup in the DOM. This is a particular problem in this scenario because the hidden element will have a background image which will still be loaded in most browsers.\").  <br>See also <a href=\"http://stackoverflow.com/questions/13813254/how-do-i-conditionally-apply-css-styles-in-angularjs\">How do I conditionally apply CSS styles in AngularJS?</a></p>\n\n<p>The <a href=\"https://github.com/angular-ui/angular-ui/blob/master/modules/directives/if/if.js\">angular-ui ui-if</a> directive watches for changes to the if condition/expression.  Mine doesn't.  So, while my simple implementation will update the view correctly if the model changes such that it only affects the template output, it won't update the view correctly if the condition/expression answer changes.  </p>\n\n<p>E.g., if the value of a from.name changes in the model, the view will update.  But if you <code>delete $scope.data.messages[0].from</code>, the from name will be removed from the view, but the template will not be removed from the view because the if-condition/expression is not being watched.</p>\n",
                    "is_accepted": true,
                    "score": 58
                }
            ],
            "body": "<p>I have an angular template which looks like this...</p>\n\n<pre><code>&lt;div ng-repeat=\"message in data.messages\" ng-class=\"message.type\"&gt;\n\n    &lt;div class=\"info\"&gt;\n        &lt;div class=\"type\"&gt;&lt;/div&gt;\n        &lt;div class=\"from\"&gt;From Avatar&lt;/div&gt;\n        &lt;div class=\"createdBy\"&gt;Created By Avatar&lt;/div&gt;\n        &lt;div class=\"arrowTo\"&gt;\n            &lt;div class=\"arrow\"&gt;&lt;/div&gt;\n            &lt;div class=\"to\"&gt;To Avatar&lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"date\"&gt;\n            &lt;div class=\"day\"&gt;25&lt;/div&gt;\n            &lt;div class=\"month\"&gt;Dec&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"main\"&gt;\n        &lt;div class=\"content\"&gt;\n            &lt;div class=\"heading2\"&gt;{{message.title}}&lt;/div&gt;\n            &lt;div ng-bind-html=\"message.content\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n\n    &lt;/div&gt;\n\n    &lt;br /&gt;\n    &lt;hr /&gt;\n    &lt;br /&gt;\n\n&lt;/div&gt;\n</code></pre>\n\n<p>I have set up <a href=\"http://jsfiddle.net/jon64digital/pGwRu/1/\">a JSfiddle</a> to show the data being bound.</p>\n\n<p>What I need to do is make the \"from\", \"to\" and \"arrowTo\" divs show conditionally, depending on the content of the data.</p>\n\n<p>The log is is this...</p>\n\n<ul>\n<li>If there is a \"from\" object in the data then show the \"from\" div and bind the data but don't show the \"createdBy\" div .</li>\n<li>If there is no \"from\" object but there is a \"createdBy\" object then show the \"createdBy\" div and bind the data.</li>\n<li>If there is a \"to\" object in the data then show the \"arrowTo\" div and bind it's data.</li>\n</ul>\n\n<p>Or in plain English, if there is a from address, show it, otherwise show who created the record instead and if there is a to address then show that too.</p>\n\n<p>I have looked into using ng-switch but I think I'd have to add extra markup which would leave an empty div if there was no data. Plus I'd need to nest switch directives and I'm not sure if that would work.</p>\n\n<p>Any ideas?</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>If I were to write my own directive (If I knew how!) then here is some pseudo code to show how I would want to use it...</p>\n\n<pre><code>&lt;div ng-if=\"showFrom()\"&gt;\n    From Template Goes Here\n&lt;/div&gt;\n&lt;div ng-if=\"showCreatedBy()\"&gt;\n    CreatedBy Template Goes Here\n&lt;/div&gt;\n&lt;div ng-if=\"showTo()\"&gt;\n    To Template Goes Here\n&lt;/div&gt;\n</code></pre>\n\n<p>Each of these would disappear if the function/expression evaluated to false.</p>\n",
            "last_activity_date": 1369494570,
            "question_id": 14077471,
            "score": 39,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Conditional logic in AngularJS template"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>the method <code>modify()</code> that you called in the last is called in global context\nif you want to override <code>modify()</code> you first have to inherit <code>A</code> or <code>B</code>. \nMaybe what your trying to do is this</p>\n\n<p>Maybe what your trying to do is this</p>\n\n<p>In this case <code>C</code> inherits <code>A</code></p>\n\n<pre><code>function A() {\n    this.modify=function(){\n       alert(\"in A\");\n    }\n\n\n    }\n\nfunction B() {\n    this.modify=function(){\n       alert(\"in B\");\n\n    }\n\n\n}\n\nC = function () {\n\n   this.modify=function() {\n      alert(\"in C\");\n   };\n\n   C.prototype.modify(); // you can call this method where you need to call modify of the parent class\n\n}\n\nC.prototype=new A();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>modify() in your example is a private function, that won't be accessible from anywhere but within your A, B or C definition. You would need to declare it as</p>\n\n<pre><code>this.modify = function(){}\n</code></pre>\n\n<p>C has no reference to its parents, unless you pass it to C. If C is set up to inherit from A or B, it will inherit its public methods (not its private functions like you have modify() defined). Once C inherits methods from its parent, you can override the inherited methods.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>JavaScript inheritance looks a bit different from Java. Here is how the native JavaScript object system looks:</p>\n\n<pre><code>// Create a class\nfunction Vehicle(color){\n  this.color = color;\n}\n\n// Add an instance method\nVehicle.prototype.go = function(){\n  return \"Underway in \" + this.color;\n}\n\n// Add a second class\nfunction Car(color){\n  this.color = color;\n}\n\n// And declare it is a subclass of the first\nCar.prototype = new Vehicle();\n\n// Override the instance method\nCar.prototype.go = function(){\n  return Vehicle.prototype.go.call(this) + \" car\"\n}\n\n// Create some instances and see the overridden behavior.\nvar v = new Vehicle(\"blue\");\nv.go() // \"Underway in blue\"\n\nvar c = new Car(\"red\");\nc.go() // \"Underway in red car\"\n</code></pre>\n\n<p>Unfortunately this is a bit ugly and it does not include a very nice way to \"super\": you have to manually specify which parent classes' method you want to call. As a result, there are a variety of tools to make creating classes nicer. Try looking at Prototype.js, Backbone.js, or a similar library that includes a nicer syntax for doing OOP in js.</p>\n",
                    "is_accepted": true,
                    "score": 67
                },
                {
                    "body": "<p>Not unless you make all variables \"public\", i.e. make them members of the <code>Function</code> either directly or through the <code>prototype</code> property.</p>\n\n<pre><code>var C = function( ) {\n    this.x = 10 , this.y = 20 ;\n    this.modify = function( ) {\n        this.x = 30 , this.y = 40 ;\n        console.log(\"(!) C &gt;&gt; \" + (this.x + this.y) ) ;\n    } ;\n} ;\n\nvar A = function( ) {\n    this.modify = function( ) {\n       this.x = 300 , this.y = 400 ;\n       console.log(\"(!) A &gt;&gt; \" + (this.x + this.y) ) ;\n    } ;\n} ;\n    A.prototype = new C ;\n\nvar B = function( ) {\n    this.modify = function( ) {\n       this.x = 3000 , this.y = 4000 ;\n       console.log(\"(!) B &gt;&gt; \" + (this.x + this.y) ) ;\n    } ;\n} ;\n\n\nnew C( ).modify( ) ;\nnew A( ).modify( ) ;\nnew B( ).modify( ) ; \n</code></pre>\n\n<ul>\n<li><a href=\"http://jsfiddle.net/VVfqF/\" rel=\"nofollow\">test it here</a></li>\n</ul>\n\n<hr>\n\n<p>You will notice a few changes. </p>\n\n<p>Most importantly the call to the supposed \"super-classes\" constructor is now implicit within this line:</p>\n\n<pre><code>&lt;name&gt;.prototype = new C ;\n</code></pre>\n\n<p>Both <code>A</code> and <code>B</code> will now have <em>individually modifiable</em> members <code>x</code> and <code>y</code> which would not be the case if we would have written <code>... = C</code> instead.</p>\n\n<p>Then, <code>x</code>, <code>y</code> and <code>modify</code> are all \"public\" members so that assigning a different <code>Function</code> to them</p>\n\n<pre><code> &lt;name&gt;.prototype.modify = function( ) { /* ... */ }\n</code></pre>\n\n<p>will \"override\" the original <code>Function</code> by that name.</p>\n\n<p>Lastly, the call to <code>modify</code> cannot be done in the <code>Function</code> declaration because the implicit call to the \"super-class\" would then be executed again when we set the supposed \"super-class\" to the <code>prototype</code> property of the supposed \"sub-classes\".</p>\n\n<p>But well, this is more or less how you would do this kind of thing in JavaScript.</p>\n\n<p>HTH,</p>\n\n<p>FK</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Once should avoid emulating classical OO and use prototypical OO instead. A nice utility library for prototypical OO is <a href=\"http://traitsjs.org/\">traits</a>.</p>\n\n<p>Rather then overwriting methods and setting up inheritance chains (one should always favour object composition over object inheritance) you should be bundling re-usable functions into traits and creating objects with those.</p>\n\n<p><a href=\"http://jsfiddle.net/4G9pN/19/\">Live Example</a></p>\n\n<pre><code>var modifyA = {\n    modify: function() {\n        this.x = 300;\n        this.y = 400;\n    }\n};\n\nvar modifyB = {\n    modify: function() {\n        this.x = 3000;\n        this.y = 4000;\n    }\n};\n\nC = function(trait) {\n    var o = Object.create(Object.prototype, Trait(trait));\n\n    o.modify();\n    console.log(\"sum : \" + (o.x + o.y));\n\n    return o;\n}\n\n//C(modifyA);\nC(modifyB);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Let's say you have the below code:</p>\n\n<pre><code>function A() {\n    function modify(){\n       x = 300;\n       y = 400;\n    }\n    var c = new C();\n}\n\nfunction B() {\n    function modify(){\n       x = 3000;\n       y = 4000;\n    }\n    var c = new C();\n}\n\n\nC = function () {\n   var x = 10;\n   var y = 20;\n\n   function modify() {\n      x = 30;\n      y = 40;\n   };\n\n   modify();\n   alert(\"The sum is: \" + (x+y));\n}\n</code></pre>\n\n<p>Now the question is, if there is any way in wich I can override the method <code>modify</code> from C with the methods that are in A and B. In Java you would use the super keyword, but how can you achieve something like this in JavaScript?</p>\n",
            "last_activity_date": 1368532705,
            "question_id": 6885404,
            "score": 35,
            "tags": [
                "javascript",
                "oop",
                "override"
            ],
            "title": "JavaScript override methods"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>JavaScript is <a href=\"http://en.wikipedia.org/wiki/Weak%5Ftyping\">weakly typed</a>. It is most certainly not \"untyped\" but its weakly typed nature allows for a lot of flexibility in terms of implicit conversions.</p>\n\n<p>Keep in mind that JavaScript is also dynamically typed.  This method of typing allows what is know as <a href=\"http://en.wikipedia.org/wiki/Duck%5Ftyping\">\"duck typing\"</a>.</p>\n\n<p>For comparison consider that JavaScript is not <a href=\"http://en.wikipedia.org/wiki/Strongly%5Ftyped\">strongly typed</a> nor is it <a href=\"http://en.wikipedia.org/wiki/Type%5Fsystem#Static%5Ftyping\">statically typed.</a>  Sometimes understanding what something <em>isn't</em> can help you see better what it is.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>To the author's point JavaScript is also classified as <a href=\"http://en.wikipedia.org/wiki/Dynamic%5Ftyping#Dynamic%5Ftyping\" rel=\"nofollow\">Dynamically typed</a>. Wiki states that Dynamically typed languages are type checked at runtime instead of in a compiler while Weakly Typed refers to the ability to change type on the fly within your code. So yes it is both Dynamically typed AND Weakly typed.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Typing system</p>\n\n<ul>\n<li><p><a href=\"http://en.wikipedia.org/wiki/Programming%5Flanguage#Weak%5Fand%5Fstrong%5Ftyping\"><strong>Weakly typed</strong></a> means type conversion is done implicitly behind the scenes:</p>\n\n<pre><code>\"12345\" * 1 === 12345  // string * number =&gt; number\n</code></pre>\n\n<p>In <em>strongly typed</em> lanugages you would need to explicitly cast the <em>string</em> to <em>integer</em>:</p>\n\n<pre><code>(int) \"12345\" * 1 === 12345\n</code></pre></li>\n<li><p><a href=\"http://en.wikipedia.org/wiki/Programming%5Flanguage#Static%5Fversus%5Fdynamic%5Ftyping\"><strong>Dynamically typed</strong></a> means a variable can hold values of different data types:</p>\n\n<pre><code>x = 12345;    // number\nx = \"string\"; // string\n</code></pre>\n\n<p>In <em>statically typed</em> languages a variable can only have values of the type it was declared for:</p>\n\n<pre><code>int x = 12345; // binds x to the type int\nx = \"string\"   // error\n</code></pre></li>\n<li><p><a href=\"http://en.wikipedia.org/wiki/Programming%5Flanguage#Typed%5Fversus%5Funtyped%5Flanguages\"><strong>Typed</strong></a> means that the language distinguishes between different types such as <em>integer</em>, <em>float</em>, <em>string</em>, <em>boolean</em> and so on. Also each operation is bound to specific types. So you cannot divide an <em>integer</em> by a <em>string</em>.</p>\n\n<pre><code>2 / \"blah\"  // produces NaN\n</code></pre>\n\n<p>In <em>untyped</em> languages the operation of dividing <em>integer</em> by <em>string</em> would result in treating the first four bytes of <em>string</em> as <em>integer</em> and the outcome will be something quite unexpected:</p>\n\n<pre><code>2 / \"blah\"  // will be treated as  2 / 1500275048\n</code></pre></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>While it is typed (you can ask \"typeof someVar\" and learn its specific type, it's very weak.</p>\n\n<p>Given:</p>\n\n<pre><code>  var a = \"5\";\n</code></pre>\n\n<p>you might say that a is a string.  However, if you then write:</p>\n\n<pre><code>  var b = a + 10;\n</code></pre>\n\n<p>b is an int equal to 15, so a acted just like an int.  Of course, you can then write:</p>\n\n<pre><code>  var c = a + \"Hello World\";\n</code></pre>\n\n<p>and c will equal \"5Hello World\", so a is again acting like a string.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Remember that JavaScript allows you to ask what is the <code>typeof(your_variable)</code>, and compare types: <code>5===\"5\"</code> returns <code>false</code>.\nThus I don't think you can call it untyped.</p>\n\n<p>It is dynamically and (estimated as) weakly typed.\nYou may want to know it uses Duck typing (see andrew's link) and offers OOP though <a href=\"http://en.wikipedia.org/wiki/Prototype-based_programming\" rel=\"nofollow\">Prototyping</a> instead of classes and inheritance.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>JavaScript <strong>is</strong> untyped:</p>\n\n<p><img src=\"http://no.gd/p/untyped-20120205-235300.jpg\" alt=\"\"></p>\n\n<p>Even Brendan Eich says so. On Twitter, he replied to a thread that linked to this question:</p>\n\n<blockquote>\n  <p><a href=\"https://twitter.com/brendaneich/status/166310376340848643\">... academic types use \"untyped\" to mean \"no static types\"...</a></p>\n</blockquote>\n\n<p>So the problem is that there's a few different definitions of <em>untyped</em>.</p>\n\n<p>One definition has been talked about in one of the above answers - the runtime doesn't tag values and just treats each value as bits. JavaScript <em>does</em> tag values and has different behaviour based on those tags. So JavaScript obviously doesn't fit this category.</p>\n\n<p>The other definition is from <strong>Programming Language Theory</strong> (the academic thing that Brendan is referring to). In this domain, <em>untyped</em> just means <a href=\"http://existentialtype.wordpress.com/2011/03/19/dynamic-languages-are-static-languages/\">everything belongs to a single type</a>.  </p>\n\n<p>Why? Because a language will only generate a program when it can prove that the types align (a.k.a. <a href=\"http://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence\">the Curry-Howard correspondence</a>; types are theorems, programs are proofs). This means in an untyped language:</p>\n\n<ol>\n<li>A program is <em>always</em> generated</li>\n<li>Therefore types <em>always</em> match up</li>\n<li>Therefore there must only be <em>one</em> type</li>\n</ol>\n\n<p>In contrast to a typed language:</p>\n\n<ol>\n<li>A program <em>might not</em> be generated</li>\n<li>Because types <em>might not</em> match up</li>\n<li>Because a program can contain <em>multiple</em> types</li>\n</ol>\n\n<p>So there you go, in PLT, <em>untyped</em> just means <em>dynamically typed</em> and <em>typed</em> just means <em>statically typed</em>. JavaScript is definitely untyped in this category.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"http://blogs.perl.org/users/ovid/2010/08/what-to-know-before-debating-type-systems.html\">What to know before debating type systems</a></li>\n<li><a href=\"http://stackoverflow.com/questions/9154388/does-untyped-also-mean-dynamically-typed-in-the-academic-cs-world\">Does \u201cuntyped\u201d also mean \u201cdynamically typed\u201d in the academic CS world?\n</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 63
                },
                {
                    "body": "<p>The problem here that is confusing a lot of programmers is that definitions like this are not standardized somewhere. The term <strong>untyped programming language</strong> is ambiguous. Does that refer to a language that has no <strong>data types</strong> or a language that is a lambda calculus <strong>untyped variant</strong>?</p>\n\n<p>JavaScript/ECMAScript has a <strong>type system</strong> and all of its functions' domains will accept any Reference specification type. So that means JavaScript has a single data type, in reality. That is a matter of implementation that is more important to the very advanced JavaScript programmers. The average JavaScript programmer only cares about the <em>abstract</em> <a href=\"https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-language-types\" rel=\"nofollow\">language data types</a> that have been specified by ECMAScript.</p>\n\n<p>In the context of the everyday programmer, not the researcher or theoretical computer scientist, the term <strong>untyped</strong> is a misnomer because most people aren't doing lambda calculus. Thus the term confuses the masses and seems to declare that JavaScript does not have any data types which is simply not true.  Anyone who has ever used <code>typeof</code> knows that JavaScript has its own language data types:</p>\n\n<pre><code>var test = \"this is text\";\ntypeof(test);\n</code></pre>\n\n<p>yields</p>\n\n<blockquote>\n  <p>\"string\"</p>\n</blockquote>\n\n<p>ECMAScript defines the following types for the language: <code>undefined</code>,<code>null</code>,<code>string</code>,<code>boolean</code>,<code>number</code>,<code>object</code></p>\n\n<p><a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\" rel=\"nofollow\">http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf</a></p>\n\n<p>A more accurate designation for JavaScript would be implicitly typed, dynamically typed, or weakly/loosely typed (or some combination thereof), in that JavaScript uses <a href=\"http://en.wikipedia.org/wiki/Type_conversion\" rel=\"nofollow\">type coercion</a> in some cases which makes the type implicit because you don't have to explicitly specify the type of your variables. It falls under weakly typed because, unlike some languages which distinguish between float and integer etc, it just uses one <code>number</code> type to encompass all numbers, and makes use of the type coercion mentioned previously<sup><a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\" rel=\"nofollow\">[Section 9 of ECMAScript Spec]</a></sup>, in strong contrast to a strongly-typed language which would have very specific data types (i.e. you would have to specify <code>int</code> or <code>float</code>).</p>\n\n<p>The definitions of statically and dynamically-typed languages are not standardized, however neither was the size of a byte when computers were beginning to evolve. Static and dynamic typing most often refer to the presence of certain language features. One of which is <a href=\"http://courses.cs.washington.edu/courses/cse341/04wi/lectures/13-dynamic-vs-static-types.html\" rel=\"nofollow\">type-checking at runtime</a>, or what is called <a href=\"http://en.wikipedia.org/wiki/Type_system#Dynamic_type-checking_and_runtime_type_information\" rel=\"nofollow\">dynamic type-checking</a>. If you've used JavaScript, you already know that it definitely waits until runtime to check types, which is why you get <code>TypeError</code> exceptions during execution of your code. <a href=\"http://jsfiddle.net/rJJKX/\" rel=\"nofollow\">Example here</a></p>\n\n<p>I think the top-voted answer is confusing <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-9\" rel=\"nofollow\">JavaScript functions' polymorphism</a> with functions that will accept literally anything (as with untyped variants of Lambda Calculus) which is an <a href=\"http://en.wikipedia.org/wiki/Association_fallacy\" rel=\"nofollow\">Association Fallacy</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I've found that some people call JavaScript a \"dynamically, weakly typed\" language, but some even say \"untyped\"?  Which is it really?</p>\n",
            "last_activity_date": 1422545243,
            "question_id": 964910,
            "score": 35,
            "tags": [
                "javascript",
                "types"
            ],
            "title": "Is JavaScript an untyped language?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"http://mrdoob.com/projects/voxels/\">Here's a project with a rotating camera</a>. Looking through the source it seems to just move the camera position in a circle.</p>\n\n<pre><code>function onDocumentMouseMove( event ) {\n\n    event.preventDefault();\n\n    if ( isMouseDown ) {\n\n        theta = - ( ( event.clientX - onMouseDownPosition.x ) * 0.5 )\n                + onMouseDownTheta;\n        phi = ( ( event.clientY - onMouseDownPosition.y ) * 0.5 )\n              + onMouseDownPhi;\n\n        phi = Math.min( 180, Math.max( 0, phi ) );\n\n        camera.position.x = radious * Math.sin( theta * Math.PI / 360 )\n                            * Math.cos( phi * Math.PI / 360 );\n        camera.position.y = radious * Math.sin( phi * Math.PI / 360 );\n        camera.position.z = radious * Math.cos( theta * Math.PI / 360 )\n                            * Math.cos( phi * Math.PI / 360 );\n        camera.updateMatrix();\n\n    }\n\n    mouse3D = projector.unprojectVector(\n        new THREE.Vector3(\n            ( event.clientX / renderer.domElement.width ) * 2 - 1,\n            - ( event.clientY / renderer.domElement.height ) * 2 + 1,\n            0.5\n        ),\n        camera\n    );\n    ray.direction = mouse3D.subSelf( camera.position ).normalize();\n\n    interact();\n    render();\n\n}\n</code></pre>\n\n<p><a href=\"http://alteredqualia.com/three/examples/webgl_terrain_dynamic.html\">Here's another demo</a> and in this one I think it just creates a new <code>THREE.TrackballControls</code> object with the camera as a parameter, which is probably the better way to go.</p>\n\n<pre><code>controls = new THREE.TrackballControls( camera );\ncontrols.target.set( 0, 0, 0 )\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>Take a look at THREE.PointerLockControls</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>take a look at the following examples</p>\n\n<p><a href=\"http://threejs.org/examples/#misc_controls_orbit\">http://threejs.org/examples/#misc_controls_orbit</a></p>\n\n<p><a href=\"http://threejs.org/examples/#misc_controls_trackball\">http://threejs.org/examples/#misc_controls_trackball</a></p>\n\n<p>there are other examples for different mouse controls, but both of these allow the camera to rotate around a point and zoom in and out with the mouse wheel, the main difference is OrbitControls enforces the camera up direction, and TrackballControls allows the camera to rotate upside-down.</p>\n\n<p>All you have to do is include the controls in your html document</p>\n\n<pre><code>&lt;script src=\"js/OrbitControls.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>and include this line in your source </p>\n\n<pre><code>controls = new THREE.OrbitControls( camera, renderer.domElement );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I have quite a few objects in my scene so rotating all of them could be a pain. So what is the most easy way to move camera around origin on mouse click and drag? This way all the lights, objects in the scene are in the same location, so the only thing changing is the camera. Three.js does not provide a way to rotate a camera around a point, or does it?</p>\n\n<p>Thank you</p>\n",
            "last_activity_date": 1381440688,
            "question_id": 8426822,
            "score": 25,
            "tags": [
                "javascript",
                "3d",
                "three.js"
            ],
            "title": "Rotate camera in Three.js with mouse"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Go with object literal, it's more consise and expands better with the introduction of initial values.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It depends on what you want to do. If you want to use (semi-)private variables or functions in you object, a constructor function is the way to do it. If your object only contains properties and methods, an object literal is fine.</p>\n\n<pre><code>function SomeConstructor(){\n    var x = 5;\n    this.multiply5 = function(i){\n        return x*i;\n    }\n}\nvar myObj = new SomeConstructor;\n\nvar SomeLiteral = {\n    multiply5 = function(i){ return i*5; }\n}\n</code></pre>\n\n<p>Now the method <code>multiply5</code> in <code>myObj</code> and <code>SomeLiteral</code> do exactly the same. The only difference is that myObj uses a private variable. The latter may be usefull in some cases. Most of the times an Object literal is sufficient and a nice and clean way to create a JS-object.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you don't have behaviour associated with an object (i.e. if the object is just a container for data/state), I would use an object literal.</p>\n\n<pre><code>var data = {\n    foo: 42,\n    bar: 43\n};\n</code></pre>\n\n<p>Apply the <a href=\"http://en.wikipedia.org/wiki/KISS_principle\">KISS principle</a>. If you don't need anything beyond a simple container of data, go with a simple literal.</p>\n\n<p>If you want to add behaviour to your object, you can go with a constructor and add methods to the object during construction or give your class a prototype.</p>\n\n<pre><code>function MyData(foo, bar) {\n    this.foo = foo;\n    this.bar = bar;\n\n    this.verify = function () {\n        return this.foo === this.bar;\n    };\n}\n\n// or:\nMyData.prototype.verify = function () {\n    return this.foo === this.bar;\n};\n</code></pre>\n\n<p>A class like this also acts like a schema for your data object: You now have some sort of contract (through the constructor) what properties the object initializes/contains. A free literal is just an amorphous blob of data.</p>\n\n<p>You might as well have an external <code>verify</code> function that acts on a plain old data object:</p>\n\n<pre><code>var data = {\n    foo: 42,\n    bar: 43\n};\n\nfunction verify(data) {\n    return data.foo === data.bar;\n}\n</code></pre>\n\n<p>However, this is not favorable with regards to encapsulation: Ideally, all the data + behaviour associated with an entity should live together.</p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>It essentially boils down to if you need multiple instances of your object or not; object defined with a constructor lets you have multiple instances of that object. Object literals are basically singletons with variables/methods that are all public. </p>\n\n<pre><code>// define the objects:\nvar objLit = {\n  x: 0,\n  y: 0,\n  z: 0,\n  add: function () {\n    return this.x + this.y + this.z;\n  }\n};\n\nvar ObjCon = function(_x, _y, _z) {\n  var x = _x; // private\n  var y = _y; // private\n  this.z = _z; // public\n  this.add = function () {\n    return x + y + this.z; // note x, y doesn't need this.\n  };\n};\n\n// use the objects:\nobjLit.x = 3; \nobjLit.y = 2; \nobjLit.z = 1; \nconsole.log(objLit.add());    \n\nvar objConIntance = new ObjCon(5,4,3); // instantiate an objCon\nconsole.log(objConIntance.add());\nconsole.log((new ObjCon(7,8,9)).add()); // another instance of objCon\nconsole.log(objConIntance.add()); // same result, not affected by previous line\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>Another way to create objects in a uniform way is to use a function that returns an object:</p>\n\n<pre><code>function makeObject() {\n    var that = {\n        thisIsPublic: \"a public variable\"\n        thisIsAlsoPublic: function () {\n            alert(that.thisIsPublic);\n        }\n    };\n\n    var secret = \"this is a private variable\"\n\n    function secretFunction() { // private method\n        secret += \"!\"; // can manipulate private variables\n        that.thisIsPublic = \"foo\";     \n    }\n\n    that.publicMethod = function () {\n        secret += \"?\"; // this method can also mess with private variables\n    }\n\n    that.anotherPublicVariable = \"baz\";\n\n    return that; // this is the object we've constructed\n}\n\nmakeObject.static = \"This can be used to add a static varaible/method\";\n\nvar bar = makeObject();\nbar.publicMethod(); // ok\nalert(bar.thisIsPublic); // ok\nbar.secretFunction(); // error!\nbar.secret // error!\n</code></pre>\n\n<p>Since functions in JavaScript are closures we can use private variables and methods and avoid <code>new</code>.</p>\n\n<p>From <a href=\"http://javascript.crockford.com/private.html\" rel=\"nofollow\">http://javascript.crockford.com/private.html</a> on private variables in JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am getting confused over which way I should be creating an object in javascript. It seems there are at least two ways. One is to use object literal notation while the other uses construction functions. Is there an advantage of one over the other?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1349130154,
            "question_id": 4859800,
            "score": 25,
            "tags": [
                "javascript"
            ],
            "title": "Should I be using object literals or constructor functions?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This may be your solution. </p>\n\n<p>In the code behind for the UpdatePanel's OnLoad event, register a startup script. </p>\n\n<pre><code>string scriptText = \"alert('Bar!');\";\n\nScriptManager.RegisterStartupScript(this.Page, this.GetType(), \"foo\", scriptText, true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can hook the <a href=\"http://msdn.microsoft.com/en-us/library/bb397432.aspx\">PageRequestManager.beginRequest</a> event and inspect the <a href=\"http://msdn.microsoft.com/en-us/library/bb397485.aspx\">BeginRequestEventArgs.postBackElement</a> property.</p>\n\n<p>Note that it doesn't <em>really</em> give you the UpdatePanel, but the control inside of the UpdatePanel. That should be good enough, though.</p>\n\n<p>Edit: Even better, the <a href=\"http://msdn.microsoft.com/en-us/library/bb397523.aspx\">PageRequestManager.pageLoaded</a> event gives you <a href=\"http://msdn.microsoft.com/en-us/library/bb384016.aspx\">PageLoadedEventArgs.panelsUpdated</a> (and <a href=\"http://msdn.microsoft.com/en-us/library/bb397552.aspx\">panelsCreated</a>) properties.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Thanks - both good answers. I went with the client side script \"pageloaded\" in the end.  That is a fairly buried method that google did not reveal to me.  For those who are interested, this code works with FireBug to give a good demo of the PageLoaded method working to find the updated panels:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    \t$(document).ready(function() {\n    \t\tpanelsLoaded = 1;\n    \t\tSys.WebForms.PageRequestManager.getInstance().add_pageLoaded(PageLoaded)\n    \t});\n\n    \tfunction PageLoaded(sender, args) {\n    \t\tconsole.log(\"I have occured \" + panelsLoaded++ + \" times!\");\n\n    \t\tvar panelsCreated = args.get_panelsCreated();\n    \t\tfor (var i = 0; i &lt; panelsCreated.length; i++) {\n    \t\t\tconsole.log(\"Panels Updating: \" + panelsCreated[i].id);\n    \t\t}\n\n    \t\tvar panelsUpdated = args.get_panelsUpdated();\n    \t\tfor (var i = 0; i &lt; panelsUpdated.length; i++) {\n    \t\t\tconsole.log(\"Panels Updating: \" + panelsUpdated[i].id);\n    \t\t}\n    \t}\n    &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 36
                }
            ],
            "body": "<h2>How is it possible to call a client side javascript method after a <em>specific</em> update panel has been loaded?</h2>\n\n<p><strong><code>Sys.WebForms.PageRequestManager.getInstance().add_endRequest(EndRequestHandler)</code></strong> does not work for me because this will fire after ANY update panel finishes loading, and I can find no client side way to find which is the one</p>\n\n<p><strong><code>ScriptManager.GetCurrent(Page).AsyncPostBackSourceElementID AsyncPostBackSourceElementID</code></strong> does not work for me as this is a server side object, and i want Client Side</p>\n\n<p>The ClientSide .Net framework must know which UpdatePanel it is updating in order to update the correct content.  Surely there is a way to hook into this event?</p>\n\n<p>Any help would be appreciated. </p>\n",
            "last_activity_date": 1408732319,
            "question_id": 338702,
            "score": 24,
            "tags": [
                "asp.net",
                "javascript",
                "ajax",
                "updatepanel"
            ],
            "title": "How to call a client side javascript function after a specific UpdatePanel has been loaded"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>jQuery has a ready substitute for document.write. All you need to use is the append method.</p>\n\n<pre><code>   jQuery('&lt;img src=\"\"/&gt;').appendTo('body');\n</code></pre>\n\n<p>This is fairly self-evident. But briefly, you can replace the  with whatever html you want. And the tag name in the appendTo method is the name of the tag you want to append your html to. That's it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>With the requirements given</strong>, no, you can't use document.write without really hosing up the document. If you're really bent on not changing the code, you can override the functionality of document.write() like so and tack on the result later:</p>\n\n<pre><code>var phbRequirement = \"\";\n\n$(function() {\n  document.write = function(evil) {\n    phbRequirement += evil;\n  }\n  document.write(\"Haha, you can't change my code!\");\n  $('body').append(phbRequirement);\n\n});\n</code></pre>\n\n<p>Make sure you overwrite the document.write function before it is used. You can do it at anytime.</p>\n\n<p>The other answers are boring, this is fun, but very pretty much doing it the wrong way for the sake of fulfilling the requirements given.</p>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>picardo's answer works, but this is more intuitive for me:</p>\n\n<pre><code>$(\"body\").append('&lt;img src=\\\"/image/1.jpg\\\" alt=\\\"Second image for id 1\\\"&gt;');\n</code></pre>\n\n<p>Also, for the script part that is being inserted with document.write(), check out <a href=\"http://docs.jquery.com/Ajax/jQuery.getScript#urlcallback\" rel=\"nofollow\">jQuery's getScript() function</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>picardo has the approach I would've used.  To expand on the concept, take a read:</p>\n\n<pre><code>$('&lt;script/&gt;')\n   .attr('src', 'http://myurl.com/page.aspx?id=1')\n   .appendTo('body');\n</code></pre>\n\n<p>Alternate style:</p>\n\n<pre><code>var imgnode = $('&lt;img alt=\"Second image for id 1\"/&gt;')\n   .attr('src', \"image1.jpg\");\n\n$('#id1').append(imgnode);\n</code></pre>\n\n<p>Be sure to use the <code>attr</code> method to set any dynamic attributes.  No need to escape special symbols that way.</p>\n\n<p>Also, I'm not sure what the effectiveness of dynamically generating script tags; I never tried it.  Though, it's expected that they contain or reference client-side script.  My assumption is that what <code>page.aspx</code> will return.  Your question is a little vague about what you're trying to do there.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Firstly, is there a way to use document.write() inside of JQuery's $(document).ready() method? If there is, please clue me in because that will resolve my issue.</p>\n\n<p>Otherwise, I have someone's code that I'm supposed to make work with mine. The catch is that I am not allowed to alter his code in any way. The part that doesn't work looks something like this:</p>\n\n<pre><code>document.write('&lt;script src=\\\"http://myurl.com/page.aspx?id=1\\\"&gt;&lt;/script&gt;');\n</code></pre>\n\n<p>The script tag is referencing an aspx page that does a series of tests and then spits out something like so:</p>\n\n<pre><code>document.write('&lt;img src=\\\"/image/1.jpg\\\" alt=\\\"Second image for id 1\\\"&gt;')\n</code></pre>\n\n<p>The scripts are just examples of what is actually going on. The problem here is that I've got a document.write() in the initial script and a document.write() in the script that get's appended to the first script and I've got to somehow make this work within JQuery's $(document).ready() function, without changing his code.</p>\n\n<p>I have no idea what to do. Help?</p>\n",
            "last_activity_date": 1239987977,
            "question_id": 761148,
            "score": 16,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "JQuery $(document).ready() and document.write()"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Players don't send their x,y co-ordinates to the server, that would allow for cheating by manually sending the co-ordinates.</p>\n\n<p>Each player sends \"moving left/right/up/down\" events to the server. The server then updates positions and periodically broadcasts the position (or the deltas in position) of all the players.</p>\n\n<p>Each client then takes all these player deltas and renders them. In terms of client side implementation I would have some kind of Board/Map object and it would have a list of RenderableEntities. I then just update the RenderableEntities with new positions and periodically redraw all the entities.</p>\n\n<p>I recommend you take a look at <a href=\"https://github.com/BonsaiDen/Maple.js\">Maple.js</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>My implementation will be very naive and simplified, no lag compensation, extrapolation and such, but it should point out a general conception of \"multiplayering\" with node.</p>\n\n<p>I think the simplest approach is to have an associative array containing players(entities) on both client and server. Then from client side you send commands like <code>{action: \"move\", target:[32, 100]}</code> and process this command with server logic (where the real game is  running). To each socket <code>on connection</code>  you should assign a player object or id so you can access it like:</p>\n\n<pre><code>var lastPlayerID = 0;\nvar players = {};\n\nserver.on(\"connection\", function(socket) {\n\n  var newcommer = new Player({id: lastPlayerID});      \n  players[lastPlayerID] = newcommer;\n  socket.player = newcommer; // or lastPlayerID\n  lastPlayerID++;      \n\n  socket.onMessage = function(message) {\n    this.player.doSomething(); \n  }\n\n});\n</code></pre>\n\n<p>Then each let's say 100ms you could send snapshots to all connected players:</p>\n\n<pre><code>{\n  timestamp: game.delta,\n  players: {\n    1: {x: 32, y: 100},\n    2: {x: 14, y: 11}\n  }\n}\n</code></pre>\n\n<p>And then at client side receive data and interpolate from old to new values.</p>\n\n<pre><code>// duration in this simplified example is snapshot sending interval in [ms]\nPlayer.prototype.interpolateTo = function(data, duration) {\n  if(typeof data.x != \"undefined\") {\n    // step needed to get `destination x` within `duration` miliseconds\n    this.stepValues.x = Math.abs(data.x - this.x) / duration;\n    this.target.x = data.x;\n  } \n  // ...\n}\n\n// step you call for each game loop iteration\nPlayer.prototype.step = function(delta) {\n  if(this.x &lt; this.target.x) {\n    this.x += delta * this.stepValues.x\n  }\n}\n</code></pre>\n\n<p>This is a sufficient algorithm for a semi-arcade game with 20 objects at maximum. Decreasing snapshot's interval makes it almost suitable for strategy game with more objects. Your main enemy is bandwidth usage which you can decrease minimizing packet's size. For instance read about BiSON, LZW and don't send data which haven't changed since last snapshot.</p>\n\n<p><strike>My reputation doesn't allow me to post all the links, so I have attached them here:\n<a href=\"http://pastebin.com/Kh3wvF1D\">http://pastebin.com/Kh3wvF1D</a></strike></p>\n\n<p>General introduction to multiplayer conceptions by Glenn Fiedler:</p>\n\n<blockquote>\n  <p><a href=\"http://gafferongames.com/networking-for-game-programmers/what-every-programmer-needs-to-know-about-game-networking/\">http://gafferongames.com/networking-for-game-programmers/what-every-programmer-needs-to-know-about-game-networking/</a></p>\n</blockquote>\n\n<p>Some multiplayer techniques from Quake:\nThis will give u a clue about interpolation and extrapolation(prediction)</p>\n\n<blockquote>\n  <p><a href=\"http://fabiensanglard.net/quakeSource/quakeSourcePrediction.php\">http://fabiensanglard.net/quakeSource/quakeSourcePrediction.php</a></p>\n</blockquote>\n\n<p>Valve's article about latency compensation and general optimisations:</p>\n\n<blockquote>\n  <p><a href=\"https://developer.valvesoftware.com/wiki/Latency_Compensating_Methods_in_Client/Server_In-game_Protocol_Design_and_Optimization\">https://developer.valvesoftware.com/wiki/Latency_Compensating_Methods_in_Client/Server_In-game_Protocol_Design_and_Optimization</a></p>\n</blockquote>\n\n<p>Multiplayer techniques in Age of Empires:</p>\n\n<blockquote>\n  <p><a href=\"http://zoo.cs.yale.edu/classes/cs538/readings/papers/terrano_1500arch.pdf#search=%22Real%20time%20strategy%20networking%20lockstep%22\">http://zoo.cs.yale.edu/classes/cs538/readings/papers/terrano_1500arch.pdf#search=%22Real%20time%20strategy%20networking%20lockstep%22</a></p>\n</blockquote>\n\n<p>You can also read my article about optimizing bandwidth usage</p>\n\n<blockquote>\n  <p><a href=\"http://rezoner.net/minimizing-bandwidth-usage-in-html5-games-using-websocket,299\">http://rezoner.net/minimizing-bandwidth-usage-in-html5-games-using-websocket,299</a></p>\n</blockquote>\n\n<p>+1 for Ivo's Wetzel Mapple.js it's a big pile of knowledge.</p>\n\n<blockquote>\n  <p><a href=\"https://github.com/BonsaiDen/Maple.js\">https://github.com/BonsaiDen/Maple.js</a></p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>I have been working on an abstracted action-game networking framework called socketObject.js using Node.js and Socket.io.  It is pre-alpha, but can easily be implemented and modified to fit your game with a few steps.  I am looking for testers and contributers: </p>\n\n<p><a href=\"https://github.com/natemcdowel/socketObject\" rel=\"nofollow\">https://github.com/natemcdowel/socketObject</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a question which I cannot find an answer to.</p>\n\n<p>I'm experimenting with building a multiplayer game with Node.JS and Socket.IO. I have built a chat room as my first experiment, so I have broadcasts working etc. Now I'm at the point where I want to get something working with Canvas.</p>\n\n<p>The problem I'm having is getting my head around multiple and independent players. I know that each player will send their x,y cords to the server and the server will broadcast those, but how does the client know how many players to display, I'm guessing they have to be stored in an array somewhere.</p>\n",
            "last_activity_date": 1407100283,
            "question_id": 9033166,
            "score": 8,
            "tags": [
                "javascript",
                "node.js",
                "canvas",
                "socket.io"
            ],
            "title": "Multiplayer JavaScript game built with Node.JS - Separating players"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>See this thread from the discussion forum: <a href=\"https://groups.google.com/a/dartlang.org/group/misc/browse_thread/thread/64f25f37bb690797/56f18cd62c04688d?lnk=gst&amp;q=Calling+old+javascript+code#56f18cd62c04688d\" rel=\"nofollow\">Calling old javascript code</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You will not be able to call javascript directly from dart code.  The native directive is reserved for the core libraries of dartc (dart:core, dart:dom, dart:html, dart:json, etc), which itself compiles to javascript.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>The answer is now Yes! Dart now ships a JS-interop library to use existing JavaScript code with your Dart app. Learn more here: <a href=\"https://www.dartlang.org/articles/js-dart-interop/\">https://www.dartlang.org/articles/js-dart-interop/</a></p>\n",
                    "is_accepted": true,
                    "score": 74
                },
                {
                    "body": "<p>There is also a <code>dart:js</code> library. And here is <a href=\"https://www.dartlang.org/articles/js-dart-interop/\" rel=\"nofollow\">an article</a> explaining how to use this library for interoperating with JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I understand Dart compiles to JavaScript, and I read the <a href=\"http://www.dartlang.org/docs/spec/dartLangSpec.pdf\">Dart Language Spec</a> on Libraries, although I didn't see an answer there.  Also a search on their <a href=\"https://groups.google.com/a/dartlang.org/group/misc/search?group=misc%C3%A5&amp;q=existing&amp;qt_g=Search%20this%20group\">discussion form</a> for the word 'existing' turns up 3 results that are not related.</p>\n\n<p>Does anyone know if Dart will support the use of existing JavaScript libraries such as jQuery or Raphael?</p>\n",
            "last_activity_date": 1388099389,
            "question_id": 7716004,
            "score": 80,
            "tags": [
                "javascript",
                "libraries",
                "dart"
            ],
            "title": "Will Dart support the use of existing JavaScript libraries?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Not on a variable level, but on a function argument level:</p>\n\n<p><a href=\"http://github.com/torvalamo/argtype.js\" rel=\"nofollow\">http://github.com/torvalamo/argtype.js</a></p>\n\n<p>Date currently needs to pass as type 'object'. It is definately something that I have forgotten, and will put on the todo-list. ;)</p>\n\n<p>Specific max and min length is not supported, and will probably not be implemented (but who knows). Email, phone and all that can be checked by regex. See the example on the github page, which includes a (simple) regex example.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I gather that this is the sort of thing that the <a href=\"https://github.com/akidee/schema.js\">schema</a> module is meant to do.  Note that it is labeled as being \"in development\" (tagged as v0.1a).  I haven't tried it myself, but it looks pretty good from the examples shown in the README.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I recently discovered <a href=\"https://github.com/chriso/validator.js\">node-validator</a> by <a href=\"https://github.com/chriso\">chriso</a>.</p>\n\n<p><strong>Example</strong></p>\n\n<pre><code>var check = require('validator').check,\n    sanitize = require('validator').sanitize\n\n//Validate\ncheck('test@email.com').len(6, 64).isEmail();       //Methods are chainable\ncheck('abc').isInt();                               //Throws 'Invalid integer'\ncheck('abc', 'Please enter a number').isInt();      //Throws 'Please enter a number'\ncheck('abcdefghijklmnopzrtsuvqxyz').is(/^[a-z]+$/);\n\n//Sanitize / Filter\nvar int = sanitize('0123').toInt();                  //123\nvar bool = sanitize('true').toBoolean();             //true\nvar str = sanitize(' \\s\\t\\r hello \\n').trim();      //'hello'\nvar str = sanitize('aaaaaaaaab').ltrim('a');        //'b'\nvar str = sanitize(large_input_str).xss();\nvar str = sanitize('&amp;lt;a&amp;gt;').entityDecode();     //'&lt;a&gt;'\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<blockquote>\n  <p><a href=\"https://github.com/chriso/node-validator\">Node-validator</a> is a library of string validation, filtering and sanitization methods.</p>\n</blockquote>\n\n<p>So if you want to have better support for Numbers and Arrays, you may try <a href=\"http://chaijs.com/\">Chai.js</a>. Here's some examples:</p>\n\n<pre><code>var expect = require('chai').expect;\ntry {\n    expect([1, 2, 3]).to.have.length.below(4);\n    expect(5).to.be.within(3,6);\n    expect('test').to.have.length(4);\n} catch (e) {\n    // should not occur\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I wanted ruby on rails and cakephp style validations. I knew it was something I would use over and over so I made this quick npm module: <a href=\"https://npmjs.org/package/iz\" rel=\"nofollow\">https://npmjs.org/package/iz</a></p>\n\n<p>It reads semantically like well like jasmine, and can be used client or server side. This means it comes with support for commonjs and amd along with validation rules passed in via JSON.</p>\n\n<p>It is pretty well unit tested, it has no production dependencies, and the scope is locked down to just validation. We seem to have a small community going now. Ideas, feedback and pull requests are all welcome.</p>\n\n<p>Current library functions:</p>\n\n<pre><code>iz.alphaNumeric(*);               // Is number or string(contains only numbers or strings)\niz.between(number, start, end);   // Number is start or greater but less than or equal to end, all params numeric\niz.blank(*);                      // Empty string, undefined or null\niz.boolean(*);                    // true, false, 0, 1\niz.cc(*);                         // Luhn checksum approved value\niz.date(*);                       // Is a data obj or is a string that is easily converted to a date\niz.decimal(*);                    // Contains 1 decimal point and potentially can have a - at the beginning\niz.email(*);                      // Seems like a valid email address\niz.extension(ob1, ob2);           // If obj2's methods are all found in obj1\niz.fileExtension(arr, value);     // Checks if the extension of value is in arr. An obj can be provide, but must have indexOf defined.\niz.fileExtensionAudio(value);     // Check against mp3, ogg, wav, aac\niz.fileExtensionImage(value);     // Check against png, jpg, jpeg, gif, bmp, svg, gif\niz.inArray(arr, value);           // If * is in the array\niz.int(*, bool (optional));       // Is an int. If the 2nd variable is true (false by default) a decimal is allowed\niz.ip(str);                       // str resembles an IPV4 or IPV6 address\niz.minLen(val, min);              // val (str or arr) is greater than min\niz.maxLen(val, max);              // val (str or arr) is shorter than max\niz.multiple(num, mult);           // Number is multiple of another number\niz.number(*);                     // Is either an int or decimal\niz.ofType(obj, typeName);         // If it is a named object, and the name matches the string\niz.phone(str, canHaveExtension?); // Is an american phone number. Any punctuations are allowed.\niz.postal(*);                     // Is a postal code or zip code\niz.ssn(*);                        // Is a social security number\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I recommend <a href=\"https://github.com/esnunes/valida\" rel=\"nofollow\">valida</a> there is lack of documentation however it is pretty simple to understand looking at the <a href=\"https://github.com/esnunes/valida/tree/master/examples\" rel=\"nofollow\">examples</a>.</p>\n\n<p>Valida features are:</p>\n\n<ul>\n<li>Sanitization</li>\n<li>Synchronous and asynchronous validation</li>\n<li>Groups</li>\n<li>Extensible</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm finishing writing a library on Javascript validations (both node and browser), I'll be writing the docs on the next few days, but the code is almost ready: <a href=\"https://github.com/wilkerlucio/composed-validations\" rel=\"nofollow\">https://github.com/wilkerlucio/composed-validations</a></p>\n\n<p>Please let me know if you have any questions/suggestions on it :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a good validation framework for node.js that validates a variable for:</p>\n\n<ul>\n<li>if its a type of String, Date, Number etc</li>\n<li>max and min length</li>\n<li>email, phone</li>\n<li>etc...</li>\n</ul>\n",
            "last_activity_date": 1407809286,
            "question_id": 4088723,
            "score": 50,
            "tags": [
                "javascript",
                "validation",
                "node.js"
            ],
            "title": "Validation library for Node.js"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I just a saw a presentation on this.</p>\n\n<p>I've used rubytheracer up till now.  Apparently it ain't so great. And it's huge.</p>\n\n<p>But you can use any javascript runtime.</p>\n\n<p>The other two recommended are <a href=\"https://github.com/sstephenson/execjs\" rel=\"nofollow\">execjs</a> and <a href=\"http://nodejs.org/\" rel=\"nofollow\">node.js</a> (which is very hot right now).</p>\n\n<p>Make sure to <code>gem install</code> the selected gem and then <code>bundle install</code> or <code>bundle update</code> for your app.</p>\n\n<p>One other note is that you should switch to 1.9.2 also.<br>\nInstall <a href=\"http://beginrescueend.com/\" rel=\"nofollow\">RVM</a> (bash &lt; &lt;(curl -s <a href=\"https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer\" rel=\"nofollow\">https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer</a>))\nand you can have both 1.8.7 and 1.9.2 side-by-side.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>i use this gems on Dreamhost with Rails 3.1 for the Asset Pipeline</p>\n\n<pre><code>group :assets do\n  gem 'execjs'\n  gem 'therubyracer', :platforms =&gt; :ruby\n  gem 'johnson'\n  gem 'sass-rails', \"  ~&gt; 3.1.0\"\n  gem 'coffee-rails', \"~&gt; 3.1.0\"\n  gem 'uglifier'\nend\n</code></pre>\n\n<p>therubyracer as precompiler, and johnson as runtime.</p>\n\n<p>This work for me in 2 Rails 3.1 apps hosted by Dreamhost.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p><code>libv8</code> is an OS library; you'll need to install the correct Linux system library. If you're running Ubuntu, it's </p>\n\n<pre><code>sudo apt-get install libv8-dev\n</code></pre>\n\n<p>Alternatively, you can install <code>node.js</code> which is available as a Debian/Ubuntu package for various distros, e.g. <a href=\"http://ppa.launchpad.net/chris-lea/node.js/ubuntu\">http://ppa.launchpad.net/chris-lea/node.js/ubuntu</a></p>\n\n<p>You may save yourself a lot of trouble by deploying on Heroku instead where you don't have to manage the OS or components for gems.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>If you're on Ubuntu, install nodejs </p>\n\n<pre><code>sudo apt-get install nodejs\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 110
                },
                {
                    "body": "<p>I would suggest installing <strong>Nodejs</strong>. It worked for me. </p>\n\n<p>Just go to your terminal and type in :</p>\n\n<p><strong>sudo apt-get install node.js</strong></p>\n\n<p>Enter your password...And press 'Y' whenever it asks for a confirmation. I hope this helps !!!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm in dreamhost shared server.</p>\n\n<p>I installed nodejs without using root/sudo. On the server:</p>\n\n<pre><code>#download node js (check last version from web)\n$ wget http://nodejs.org/dist/v0.8.16/node-v0.8.16-linux-x86.tar.gz\n#untar\n$ tar xzf node-v0.8.16-linux-x86.tar.gz\n</code></pre>\n\n<p>Finnaly add its path to the deploy.rb, adding the following line (some more paths are added in this case):</p>\n\n<pre><code>default_environment[\"PATH\"] = \":/home/myUser/soft/node-v0.8.16-linux-x86/bin:/home/myUser/.gems/bin:/usr/lib/ruby/gems/1.8/bin/:$PATH\"\n</code></pre>\n\n<p>You are done</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I've just hit the very same problem on my Win7 dev machine. It looks like installing <a href=\"https://github.com/hiranpeiris/therubyracer_for_windows\" rel=\"nofollow\">https://github.com/hiranpeiris/therubyracer_for_windows</a> and adding <code>gem 'therubyracer'</code> to the <code>Gemfile</code> sorts things out.</p>\n\n<p>Before:</p>\n\n<pre><code>$ rails generate\nc:/Ruby193/lib/ruby/gems/1.9.1/gems/execjs-1.4.0/lib/execjs/runtimes.rb:51:in `autodetect': Could not find a JavaScript runtime. See https://github.com/sstephenson/execjs for a list of available runtimes. (ExecJS::RuntimeUnavailable)\n    from c:/Ruby193/lib/ruby/gems/1.9.1/gems/execjs-1.4.0/lib/execjs.rb:5:in `&lt;module:ExecJS&gt;'\n(...)\n</code></pre>\n\n<p>This basically means that Rails needs <code>rubyracer</code> and <code>libv8</code>.</p>\n\n<p>After:</p>\n\n<pre><code>$ rails generate\n    SECURITY WARNING: No secret option provided to Rack::Session::Cookie.\n    This poses a security threat. It is strongly recommended that you\n    provide a secret to prevent exploits that may be possible from crafted\n    cookies. This will not be supported in future versions of Rack, and\n    future versions will even invalidate your existing user cookies.\n\n    Called from: c:/Ruby193/lib/ruby/gems/1.9.1/gems/actionpack-3.2.8/lib/action_dispatch/middleware/session/abstract_store.rb:28:in `initialize'.\n\nUsage: rails generate GENERATOR [args] [options]\n(...)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Add following gem in Gemfile and try with the bundle install</p>\n\n<p>gem \"therubyracer\", \"~> 0.10.2\" </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>My website has been broken since Dreamhost upgraded their servers a couple of weeks ago. I have been tearing my hair out trying to get it fixed and made some progress but am stuck on what is hopefully the final issue.</p>\n\n<p>I'm using Rails 3.1.1 on Ruby 1.8.7 and get presented with a 'Ruby (Rack) application could not be started error' from PhusionPassenger. It states that it 'Could not find a JavaScript runtime. See <a href=\"https://github.com/sstephenson/execjs\">https://github.com/sstephenson/execjs</a> for a list of available runtimes. (ExecJS::RuntimeUnavailable)'. Searching for this on Dreamhost's wiki has suggested a solution to install 'therubyracer' gem.</p>\n\n<p>So I updated my gemfile with the suggested gem like so:</p>\n\n<blockquote>\n  <p>gem 'therubyracer', '~> 0.9.9'</p>\n</blockquote>\n\n<p>EDIT: I have also tried adding to the file with: </p>\n\n<blockquote>\n  <p>gem 'therubyracer', :platforms => :ruby</p>\n</blockquote>\n\n<p>but it hasn't made a difference.</p>\n\n<p>Then bundle installed on my Macbook (running OS X 10.5.8) without hitch. However, this fails when I run 'cap deploy' to put on Dreamhost; I see an error when it attempts to install libv8 which therubyracer depends on.</p>\n\n<p>Anyone know how to get this to install correctly or any other working solution?</p>\n\n<p>Any other info can be provided upon request.</p>\n\n<p>Full error feedback from Terminal:</p>\n\n<blockquote>\n  <ul>\n  <li>executing \"cd /home/futureproof/abunchofletters.co.uk/releases/20111118003703 &amp;&amp;\n  bundle install --gemfile\n  /home/futureproof/abunchofletters.co.uk/releases/20111118003703/Gemfile\n  --path /home/futureproof/.gems/bundle --deployment --quiet --without development test\"\n  servers: [\"abunchofletters.co.uk\"]\n  [abunchofletters.co.uk] executing command  ** [out :: abunchofletters.co.uk] Unfortunately, a fatal error has occurred.\n  Please report this error to the Bundler issue tracker at\n  <a href=\"https://github.com/carlhuda/bundler/issues\">https://github.com/carlhuda/bundler/issues</a> so that we can fix it.\n  Thanks!  ** [out :: abunchofletters.co.uk]\n  /usr/lib/ruby/1.8/rubygems/installer.rb:483:in <code>build_extensions':\n  ERROR: Failed to build gem native extension.\n  (Gem::Installer::ExtensionBuildError)  ** [out ::\n  abunchofletters.co.uk]   ** [out :: abunchofletters.co.uk]\n  /usr/bin/ruby1.8 extconf.rb  ** [out :: abunchofletters.co.uk] ***\n  extconf.rb failed ***  ** [out :: abunchofletters.co.uk] Could not\n  create Makefile due to some reason, probably lack of  ** [out ::\n  abunchofletters.co.uk] necessary libraries and/or headers.  Check the\n  mkmf.log file for more  ** [out :: abunchofletters.co.uk] details. \n  You may need configuration options.  ** [out :: abunchofletters.co.uk]\n  ** [out :: abunchofletters.co.uk] Provided configuration options:  ** [out :: abunchofletters.co.uk] --with-opt-dir  ** [out ::\n  abunchofletters.co.uk] --without-opt-dir  ** [out ::\n  abunchofletters.co.uk] --with-opt-include  ** [out ::\n  abunchofletters.co.uk] --without-opt-include=${opt-dir}/include  **\n  [out :: abunchofletters.co.uk] --with-opt-lib  ** [out ::\n  abunchofletters.co.uk] --without-opt-lib=${opt-dir}/lib  ** [out ::\n  abunchofletters.co.uk] --with-make-prog  ** [out ::\n  abunchofletters.co.uk] --without-make-prog  ** [out ::\n  abunchofletters.co.uk] --srcdir=.  ** [out :: abunchofletters.co.uk]\n  --curdir  ** [out :: abunchofletters.co.uk] --ruby=/usr/bin/ruby1.8  ** [out :: abunchofletters.co.uk] extconf.rb:13: uninitialized constant Gem (NameError)  ** [out :: abunchofletters.co.uk] Checking\n  for Python...  ** [out :: abunchofletters.co.uk]   ** [out ::\n  abunchofletters.co.uk] Gem files will remain installed in\n  /home/futureproof/.gems/bundle/ruby/1.8/gems/libv8-3.3.10.4 for\n  inspection.  ** [out :: abunchofletters.co.uk] Results logged to\n  /home/futureproof/.gems/bundle/ruby/1.8/gems/libv8-3.3.10.4/ext/libv8/gem_make.out\n  ** [out :: abunchofletters.co.uk] from /usr/lib/ruby/1.8/rubygems/installer.rb:446:in</code>each'  ** [out ::\n  abunchofletters.co.uk] from\n  /usr/lib/ruby/1.8/rubygems/installer.rb:446:in <code>build_extensions'  **\n  [out :: abunchofletters.co.uk] from\n  /usr/lib/ruby/1.8/rubygems/installer.rb:198:in</code>install'  ** [out ::\n  abunchofletters.co.uk] from\n  /home/futureproof/.gems/gems/bundler-1.1.rc/lib/bundler/source.rb:90:in\n  <code>install'  ** [out :: abunchofletters.co.uk] from\n  /home/futureproof/.gems/gems/bundler-1.1.rc/lib/bundler/rubygems_integration.rb:78:in\n  </code>preserve_paths'  ** [out :: abunchofletters.co.uk] from\n  /home/futureproof/.gems/gems/bundler-1.1.rc/lib/bundler/source.rb:89:in\n  <code>install'  ** [out :: abunchofletters.co.uk] from\n  /home/futureproof/.gems/gems/bundler-1.1.rc/lib/bundler/installer.rb:73:in\n  </code>install_gem_from_spec'  ** [out :: abunchofletters.co.uk] from\n  /home/futureproof/.gems/gems/bundler-1.1.rc/lib/bundler/rubygems_integration.rb:93:in\n  <code>with_build_args'  ** [out :: abunchofletters.co.uk] from\n  /home/futureproof/.gems/gems/bundler-1.1.rc/lib/bundler/installer.rb:72:in\n  </code>install_gem_from_spec'  ** [out :: abunchofletters.co.uk] from\n  /home/futureproof/.gems/gems/bundler-1.1.rc/lib/bundler/installer.rb:56:in\n  <code>run'  ** [out :: abunchofletters.co.uk] from\n  /home/futureproof/.gems/gems/bundler-1.1.rc/lib/bundler/installer.rb:55:in\n  </code>run'  ** [out :: abunchofletters.co.uk] from\n  /home/futureproof/.gems/gems/bundler-1.1.rc/lib/bundler/installer.rb:12:in\n  <code>install'  ** [out :: abunchofletters.co.uk] from\n  /home/futureproof/.gems/gems/bundler-1.1.rc/lib/bundler/cli.rb:219:in\n  </code>install'  ** [out :: abunchofletters.co.uk] from\n  /home/futureproof/.gems/gems/bundler-1.1.rc/lib/bundler/vendor/thor/task.rb:22:in\n  <code>send'  ** [out :: abunchofletters.co.uk] from\n  /home/futureproof/.gems/gems/bundler-1.1.rc/lib/bundler/vendor/thor/task.rb:22:in\n  </code>run'  ** [out :: abunchofletters.co.uk] from\n  /home/futureproof/.gems/gems/bundler-1.1.rc/lib/bundler/vendor/thor/invocation.rb:118:in\n  <code>invoke_task'  ** [out :: abunchofletters.co.uk] from\n  /home/futureproof/.gems/gems/bundler-1.1.rc/lib/bundler/vendor/thor.rb:263:in\n  </code>dispatch'  ** [out :: abunchofletters.co.uk] from\n  /home/futureproof/.gems/gems/bundler-1.1.rc/lib/bundler/vendor/thor/base.rb:386:in\n  <code>start'  ** [out :: abunchofletters.co.uk] from\n  /home/futureproof/.gems/gems/bundler-1.1.rc/bin/bundle:13  ** [out ::\n  abunchofletters.co.uk] from /home/futureproof/.gems/bin/bundle:19:in\n  </code>load'  ** [out :: abunchofletters.co.uk] from\n  /home/futureproof/.gems/bin/bundle:19\n  command finished in 13170ms\n  <em>*</em> [deploy:update_code] rolling back   * executing \"rm -rf /home/futureproof/abunchofletters.co.uk/releases/20111118003703; true\"\n  servers: [\"abunchofletters.co.uk\"]\n  [abunchofletters.co.uk] executing command\n  command finished in 563ms failed: \"sh -c 'cd /home/futureproof/abunchofletters.co.uk/releases/20111118003703 &amp;&amp;\n  bundle install --gemfile\n  /home/futureproof/abunchofletters.co.uk/releases/20111118003703/Gemfile\n  --path /home/futureproof/.gems/bundle --deployment --quiet --without development test'\" on abunchofletters.co.uk</li>\n  </ul>\n</blockquote>\n",
            "last_activity_date": 1413001765,
            "question_id": 8059332,
            "score": 49,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "ruby-on-rails-3.1",
                "v8",
                "dreamhost"
            ],
            "title": "Could not find a JavaScript runtime. See https://github.com/sstephenson/execjs for a list of available runtimes. (ExecJS::RuntimeUnavailable)"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "\n\n<p>Our team recently migrated all its code (a mid-sized AngularJS app) from CoffeeScript to JavaScript compiled using <a href=\"https://github.com/google/traceur-compiler\" rel=\"nofollow\">Traceur</a>. I'm now using the following rule of thumb for Harmony functions:</p>\n\n<ul>\n<li>Use <code>function</code> in the global scope and for <code>Object.prototype</code> properties.</li>\n<li>Use <code>class</code> for object constructors.</li>\n<li>Use <code>=&gt;</code> everywhere else.</li>\n</ul>\n\n<p>Why use arrow functions almost everywhere?</p>\n\n<ol>\n<li>Scope safety: When arrow functions are used consistently, everything is guaranteed to use the same <code>thisObject</code> as the root. If even a single standard function callback is mixed in with a bunch of arrow functions there's a chance the scope will become messed up.</li>\n<li>Compactness: Arrow functions are easier to read and write. (This may seem opinionated so I will give a few examples further on).</li>\n<li>Clarity: When almost everything is an arrow function, any regular <code>function</code> immediately sticks out for defining the scope. A developer can always look up the next-higher <code>function</code> statement to see what the <code>thisObject</code> is.</li>\n</ol>\n\n<p>Why always use regular functions on the global scope or module scope?</p>\n\n<ol>\n<li>To indicate a function that should not access the <code>thisObject</code>.</li>\n<li>The <code>window</code> object (global scope) is best addressed explicitly.</li>\n<li>Many <code>Object.prototype</code> definitions live in the global scope (think <code>String.prototype.truncate</code> etc.) and those generally have to be of type <code>function</code> anyway. Consistently using <code>function</code> on the global scope helps avoid errors.</li>\n<li>Many functions in the global scope are object constructors for old-style class definitions.</li>\n<li>Functions can be named<sup>1</sup>. This has two benefits: (1) It is less awkward to write<code>function foo(){}</code> than <code>const foo = () =&gt; {}</code> \u2014 in particular outside other function calls. (2) The function name shows in stack traces. While it would be tedious to name every internal callback, naming all the public functions is probably a good idea.</li>\n<li>Function declarations are <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function#Function_declaration_hoisting\" rel=\"nofollow\"><em>hoisted</em></a>, (meaning they can be accessed before they are declared), which is a useful attribute in a static utility function.</li>\n</ol>\n\n<p><br>\n<strong>Object constructors</strong></p>\n\n<p>Attempting to instantiate an arrow function throws an exception:</p>\n\n<pre><code>var x = () =&gt; {};\nnew x(); // TypeError: x is not a constructor\n</code></pre>\n\n<p>One key advantage of functions over arrow functions is therefore that functions double as object constructors:</p>\n\n<pre><code>function Person(name) {\n    this.name = name;\n}\n</code></pre>\n\n<p>However, the functionally identical<sup>2</sup> ES Harmony <a href=\"http://wiki.ecmascript.org/doku.php?id=strawman:maximally_minimal_classes\" rel=\"nofollow\">draft class definition</a> is almost as compact:</p>\n\n<pre><code>class Person {\n    constructor(name) {\n        this.name = name;\n    }\n}\n</code></pre>\n\n<p>I expect that use of the former notation will eventually be discouraged. The object constructor notation may still be used by some for simple anonymous object factories where objects are programmatically generated, but not for much else.</p>\n\n<p>Where an object constructor is needed one should consider converting the function to a <code>class</code> as shown above. The syntax works with anonymous functions/classes as well.</p>\n\n<p><br>\n<strong>Readability of arrow functions</strong></p>\n\n<p>The probably best argument for sticking to regular functions - scope safety be damned - would be that arrow functions are less readable than regular functions. If your code is not functional in the first place, then arrow functions may not seem necessary, and when arrow functions are not used consistently they look ugly.</p>\n\n<p>ECMAScript has changed quite a bit since ECMAScript 5.1 gave us the functional <code>Array.forEach</code>, <code>Array.map</code> and all of these functional programming features that have us use functions where for-loops would have been used before. Asynchronous JavaScript has taken off quite a bit. ES6 will also ship a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" rel=\"nofollow\"><code>Promise</code></a> object, which means even more anonymous functions. There is no going back for functional programming. In functional JavaScript, arrow functions are preferable over regular functions.</p>\n\n<p>Take for instance this (particularly confusing) piece of code<sup>3</sup>:</p>\n\n<pre><code>function CommentCtrl($scope, articles) {\n    $scope.comments = [];\n\n    articles.getList()\n        .then((articles) =&gt; Promise.all(articles.map((article) =&gt; article.comments.getList())))\n        .then((commentLists) =&gt; {\n            $scope.comments = commentLists.reduce((a, b) =&gt; a.concat(b));\n        });\n}\n</code></pre>\n\n<p>The same piece of code with regular functions:</p>\n\n<pre><code>function CommentCtrl($scope, articles) {\n    $scope.comments = [];\n\n    articles.getList()\n        .then(function (articles) {\n            return Promise.all(articles.map(function (article) { \n                return article.comments.getList();\n            }));\n        })\n        .then(function (commentLists) {\n            $scope.comments = commentLists.reduce(function (a, b) {\n                return a.concat(b); \n            });\n        });\n}\n</code></pre>\n\n<p>While any one of the arrow functions can be replaced by a standard function, there would be very little to gain from doing so. Which version is more readable? I would say the first one. </p>\n\n<p>I think the question whether to use arrow functions or regular functions will become less relevant over time. Most <em>functions</em> will either become class methods, which make away with the <code>function</code> keyword, or they will become classes. Functions will remain in use for patching classes through the <code>Object.prototype</code>. In the mean time I suggest reserving the <code>function</code> keyword for anything that should really be a class method or a class.</p>\n\n<hr>\n\n<p><strong>Notes</strong></p>\n\n<ol>\n<li>Named arrow functions have been <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony:arrow_function_syntax#deferred\" rel=\"nofollow\">deferred in the ES6 spec</a>. They might still be added a future version.</li>\n<li>According to the draft specification <em>\"Class declarations/expressions create a constructor function/prototype pair exactly as for function declarations\"</em> as long as a class does not use the <code>extend</code> keyword. A minor difference is that class declarations are constants, whereas function declarations are not.</li>\n<li>Note on blocks in single statement arrow functions: I like to use a block wherever an arrow function is called for the side effect alone (e.g. assignment). That way it is clear that the return value can be discarded.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p><a href=\"http://youtu.be/bo36MrBfTk4?t=28m47s\" rel=\"nofollow\">You don't need classes.</a> (Watch until 38 minutes.)</p>\n\n<p>JavaScript's design was inspired by Scheme, a LISP dialect. In LISP, lambda expressions are sufficient for <a href=\"http://youtu.be/SsBxcpkyMMw?t=53m40s\" rel=\"nofollow\">creating objects</a>. The most basic object, a <code>cons</code> cell (a pair, which can construct lists), can be built from lambda alone:</p>\n\n<pre><code>;; Axioms of `cons':\n;;\n;; \u2200xy  (car (cons x y)) = x\n;;      (cdr (cons x y)) = y\n\n(define (cons x y)\n  (lambda (m) (m x y)))\n\n(define (car x)\n  (x (lambda (a d) a)))\n\n(define (cdr x)\n  (x (lambda (a d) d)))\n\n(cons 1 (cons 2 (cons 3 nil)))\n;; The above is trivially equivalent to: `(list 1 2 3)'\n</code></pre>\n\n<p>You can make more complicated objects with lists, as demonstrated in other sections of the \"Structure and Interpretation of Computer Programs\" course.</p>\n\n<p>Because JavaScript also has lambda expressions, you can construct objects in the same manner as LISP:</p>\n\n<pre><code>function cons(x, y) {\n    return function (m) {\n        return m(x, y);\n    };\n}\n\nfunction car(x) {\n    return x(function (a, d) {\n        return a;\n    });\n}\n\nfunction cdr(x) {\n    return x(function (a, d) {\n        return d;\n    });\n}\n\nfunction forEach(list, iterator) {\n    if (list === null) {\n        return;\n    }\n    iterator(car(list));\n    return forEach(cdr(list), iterator);\n}\n\nvar list = cons(1, cons(2, cons(3, null)));\nforEach(list, console.log);\n</code></pre>\n\n<p>Crockford has his own pattern for creating objects:</p>\n\n<pre><code>function constructor(spec) {\n    var that = other_constructor(spec),\n        member,\n        method = function () {\n            // spec, member, method\n        };\n    that.method = method;\n    return that;\n}\n</code></pre>\n\n<p>He has privacy thanks to <code>var</code>, and inheritance via the \"parasitism\" technique whereby he passes <code>spec</code> to the \"parent\" constructor.</p>\n\n<p>I wanted something a little more secure, so I designed a constructor maker that would inject private, protected and public members into my constructors:</p>\n\n<pre><code>var makeConstructorMaker = (function () {\n    'use strict';\n    var slice = Array.prototype.slice;\n    return function makeConstructorMaker() {\n        var check = {};\n        return function makeConstructor(parent, constructor) {\n            return function inheritor(inheriting) {\n                var isInheriting = inheriting === check;\n                var parentArguments, parentThat, that;\n                if (parent) {\n                    if (isInheriting) {\n                        parentArguments = slice.call(arguments);\n                    } else {\n                        parentArguments = [check].concat(slice.call(arguments));\n                    }\n                    parentThat = parent.apply(null, parentArguments);\n                    that = {\n                        private: {},\n                        protected: parentThat.protected,\n                        public: parentThat.public\n                    };\n                } else {\n                    that = {\n                        private: {},\n                        protected: {},\n                        public: {}\n                    };\n                }\n                if (isInheriting) {\n                    constructor.apply(null, [that].concat(slice.call(arguments, 1)));\n                    return {\n                        protected: that.protected,\n                        public: that.public\n                    };\n                }\n                constructor.apply(null, [that].concat(slice.call(arguments)));\n                return that.public;\n            };\n        };\n    };\n}());\n</code></pre>\n\n<p>Example usage:</p>\n\n<pre><code>var makePerson, makeHero;\n(function () {\n    var makeConstructor = makeConstructorMaker();\n\n    makePerson = makeConstructor(null, function (self, options) {\n        self.private.identity = options.name;\n        self.protected.name = options.name;\n        self.public.hello = function () {\n            console.log('Hi, my name is ' + self.protected.name + '!');\n        };\n        self.public.info = function () {\n            console.log('My identity is ' + self.private.identity + '.');\n        };\n    });\n\n    makeHero = makeConstructor(makePerson, function (self) {\n        self.protected.name = self.protected.name + ' the Great';\n        self.public.info = function () {\n            console.log('My identity is ' + self.private.identity + '... I think...');\n        };\n    });\n}());\n\nvar person = makePerson({\n    name: 'Ben'\n});\nperson.hello(); // Hi, my name is Ben!\nperson.info();  // My identity is Ben.\n\nvar hero = makeHero({\n    name: 'Danny'\n});\nhero.hello();   // Hi, my name is Danny the Great!\nhero.info();    // My identity is undefined... I think...\n</code></pre>\n\n<p>Here's <a href=\"http://jsfiddle.net/7223c60t/1/\" rel=\"nofollow\">a demo</a>.</p>\n\n<p>The lambda patterns are more powerful than classes. I recommend using lambdas instead.</p>\n\n<p>ES6 may provide syntax that makes it more convenient to type out classes, but these classes are just as limited as the old \"prototypal\" \"classes.\" There is no encapsulation mechanism, save variables and \"priviledged\" methods in the constructor with access to said variables. A constructor function containing and managing all the details of your object would seem to contradict the enclosing \"class\" structure. Commonly-employed workarounds are \"_pinkyPromise\" and \"$$doNotTouchMe\" properties; you warn people that they shouldn't mess with or rely on them. It's a real shame when they ignore your advice and use those properties anyway, inevitably, because it is convenient at the time. With real private and protected variables, you can protect yourself and your team from yourselves.</p>\n\n<p>Codifying classes doesn't have much benefit. A common interface for inheritance would be nice, but the prototypal flavor is not a very good inheritance--in fact, it's actually rather bad, considering it prompts fallacious design practices. So it probably shouldn't be used.</p>\n\n<p>Since you aren't using classes, by extension, you do not need <code>this</code> either. You instead manipulate function arguments.</p>\n\n<p>Since you aren't using <code>this</code>, arrow functions are less useful. They seem to be about as useful as <code>function</code>. Except that you can't name them, so you can't use them for recursion without exposing the name to the outer scope.</p>\n\n<p>Also, arrow functions go to dangerous lengths to provide the trickiest one-liner solutions. You can:</p>\n\n<ul>\n<li>Omit the parentheses if there is exactly one argument.</li>\n<li>The block can be omitted.\n<ul>\n<li>This permits <a href=\"https://www.imperialviolet.org/2014/02/22/applebug.html\" rel=\"nofollow\">\"C programmer temporarily lapses into writing Python\" bugs</a>.</li>\n</ul></li>\n<li>Implicit return, but only if there is no block.\n<ul>\n<li>This will result in errors when a one-liner expands to multiple lines and the programmer forgets to add a <code>return</code>.</li>\n<li>Implicit return is syntactically ambiguous. <code>(name) =&gt; {id: name}</code> returns the object <code>{id: name}</code>... right? Wrong. It returns <code>undefined</code>. Those braces are an explicit block. <code>id:</code> is a label.</li>\n</ul></li>\n</ul>\n\n<p>One could choose to always include parentheses and blocks, but the temptation to write tricky code is simply too great. Having multiple ways of doing things creates unnecessary vectors for arguments and dissension in the workplace and the language community. It would be better if the language grammar did not allow us to make poor choices.</p>\n\n<p>With <code>function</code>, there is only one way to write the form, and it happens to be the most-generalized way, which is best for maintenance.</p>\n\n<p>So you don't need arrow functions either. With <code>this</code> out of the picture, arrow functions and <code>function</code> are almost of equal value; except, due to its stricter syntax, <code>function</code> is slightly better. So always use it.</p>\n\n<p>The syntactic problems with arrows aside, just using one form for procedures has the benefit of solving your original problem, which was figuring out when to use one notation or the other. It's simple: Just use <code>function</code>.</p>\n\n<h2>Guideline for Function Notation in ES6</h2>\n\n<p>Create procedures in the following manner:</p>\n\n<pre><code>const procedureName = function () {\n    // Procedure body.\n};\n\n[].forEach(function () {\n    // Iterator body.\n});\n</code></pre>\n\n<p>Do not use the <code>class</code> or <code>this</code> keywords. Do not use <code>() =&gt; {}</code>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>The question is directed at people who have thought about code style in the context of the upcoming ECMAScript 6 (Harmony) and who have already worked with the language.</p>\n\n<p>With <code>() =&gt; {}</code> and <code>function () {}</code> we are getting two very similar ways to write functions in ES6. In other languages lambda functions often distinguish themselves by being anonymous, but in ECMAScript any function can be anonymous. Each of the two types have unique usage domains (namely when <code>this</code> needs to either be bound explicitly or explicitly not be bound). Between those domains there is a vast number of cases where either notation will do.</p>\n\n<p>Arrow functions in ES6 have at least two limitations:</p>\n\n<ul>\n<li>Don't work with <code>new</code></li>\n<li>Fixed <code>this</code> bound to scope at initialisation</li>\n</ul>\n\n<p>These two limitations aside, arrow functions could theoretically replace regular functions almost anywhere. What is the right approach using them in practice? Should arrow functions be used e.g.:</p>\n\n<ul>\n<li>\"everywhere they work\", i.e. everywhere a function does not have to be agnostic about the <code>this</code> variable and we are not creating an object.</li>\n<li>only \"everywhere they are needed\", i.e. event listeners, timeouts, that need to be bound to a certain scope</li>\n<li>with 'short' functions but not with 'long' functions</li>\n<li>only with functions that do not contain another arrow function</li>\n</ul>\n\n<p>What I am looking for is a guideline to selecting the appropriate function notation in the future version of ECMAScript. The guideline will need to be clear, so that it can be taught to developers in a team, and to be consistent so that it does not require constant refactoring back and forth from one function notation to another.</p>\n",
            "last_activity_date": 1425989624,
            "question_id": 22939130,
            "score": 37,
            "tags": [
                "javascript",
                "lambda",
                "ecmascript-6",
                "ecmascript-harmony"
            ],
            "title": "When should I use Arrow functions in ECMAScript 6?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You need to enable pushState</p>\n\n<p><code>Backbone.history.start({pushState: true})</code></p>\n\n<p><a href=\"http://documentcloud.github.com/backbone/#Router\">http://documentcloud.github.com/backbone/#Router</a></p>\n\n<p><a href=\"http://documentcloud.github.com/backbone/#History\">http://documentcloud.github.com/backbone/#History</a></p>\n\n<p>Edit: As noted in the comments this will only work for browsers that support pushState, browsers that don't will fall back to the hash method. There is no real way around this, you can enable for modern browser and fall back or just use hashes for all browsers.</p>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<p><a href=\"https://github.com/backbone-boilerplate/grunt-bbb\" rel=\"nofollow\">Backbone Boilerplate</a> has an excellent helper that enables pushstate. I use it when there are times I want to bypass my router.</p>\n\n<pre><code>// Trigger the initial route and enable HTML5 History API support, set the\n// root folder to '/' by default.  Change in app.js.\nBackbone.history.start({ pushState: true, root: app.root });\n\n// All navigation that is relative should be passed through the navigate\n// method, to be processed by the router. If the link has a `data-bypass`\n// attribute, bypass the delegation completely.\n$(document).on(\"click\", \"a[href]:not([data-bypass])\", function(evt) {\n  // Get the absolute anchor href.\n  var href = { prop: $(this).prop(\"href\"), attr: $(this).attr(\"href\") };\n  // Get the absolute root.\n  var root = location.protocol + \"//\" + location.host + app.root;\n\n  // Ensure the root is part of the anchor href, meaning it's relative.\n  if (href.prop.slice(0, root.length) === root) {\n    // Stop the default event to ensure the link will not cause a page\n    // refresh.\n    evt.preventDefault();\n\n    // `Backbone.history.navigate` is sufficient for all Routers and will\n    // trigger the correct events. The Router's internal `navigate` method\n    // calls this anyways.  The fragment is sliced from the root.\n    Backbone.history.navigate(href.attr, true);\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm using backbone for a current project. I was wondering if it's possible to do routing without hashes <code>#</code>, like davis.js does. </p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1354605487,
            "question_id": 7310230,
            "score": 37,
            "tags": [
                "javascript",
                "backbone.js"
            ],
            "title": "Backbone routes without hashes?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You can install the excellent <a href=\"http://jsbin.com/#javascript,html,live\">JSBin</a> locally.</p>\n\n<p><a href=\"https://github.com/remy/jsbin/wiki/How-to-install-JS-Bin-in-your-own-environment\">https://github.com/remy/jsbin/wiki/How-to-install-JS-Bin-in-your-own-environment</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/vxIEP.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>Saving and getting JSFiddle to run locally might be a bit daunting, but there is a cruder but effective one @ <a href=\"http://htmledit.squarefree.com/\" rel=\"nofollow\">http://htmledit.squarefree.com/</a>. You can't do everything in RTHE that you can in JSFiddle, but it is remarkably tiny and runs locally with no modification.</p>\n\n<p>Also, check out Aptana (<a href=\"http://www.aptana.com/\" rel=\"nofollow\">http://www.aptana.com/</a>), it will execute your JS right from the IDE, very nice if very big.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You don't need to be online in order to test your websites.</p>\n\n<p>If you don't know, you can setup a server locally and play with any code all you want without access to the internet.</p>\n\n<p>Set a local server - <a href=\"http://drupal.org/node/157602\" rel=\"nofollow\">http://drupal.org/node/157602</a></p>\n\n<ol>\n<li>WAMP - <a href=\"http://www.wampserver.com/en/\" rel=\"nofollow\">http://www.wampserver.com/en/</a></li>\n<li>LAMP - <a href=\"http://www.lamphowto.com/\" rel=\"nofollow\">http://www.lamphowto.com/</a></li>\n<li>Xitami - <a href=\"http://www.xitami.com/\" rel=\"nofollow\">http://www.xitami.com/</a></li>\n</ol>\n\n<p>If you already know this, sorry. Not ment it to insult your intelligence</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I would say <a href=\"http://stackoverflow.com/a/11455779/990877\">installing JSBin, like SpaceBeers suggested</a>, is a pretty neat solution. But if that's not what you want, you could try one of the <strong>auto-reloading browser plugins</strong> that are out there.</p>\n\n<p>For example, the <a href=\"https://addons.mozilla.org/en-US/firefox/addon/auto-reload/\" rel=\"nofollow\">Auto Reload extension for Firefox</a> reloads the page as soon as the local file is changed.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It is difficult to use JSFiddle for big projects.. I am using a Web IDE called <a href=\"http://wiode.org\" rel=\"nofollow\">WIODE</a>.</p>\n\n<p>It's been distributed trough Scriptaculous.</p>\n\n<p>David</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://wiode.org/\" rel=\"nofollow\">WIODE</a> is no longer supported. A new project replaces it. It is called <a href=\"http://codiad.com/\" rel=\"nofollow\">Codiad</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use <a href=\"http://kodtest.com\" rel=\"nofollow\">http://kodtest.com</a> on offline.Very simple to use.\nLike jsfiddle.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Are there any offline tools like jsfiddle.net to play with JavaScript, HTML, CSS <strong>without internet</strong> in the fashion of jsfiddle.net?</p>\n\n<p><img src=\"http://i.stack.imgur.com/NI7nA.jpg\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1384181678,
            "question_id": 11455667,
            "score": 31,
            "tags": [
                "javascript",
                "html",
                "css",
                "webtools"
            ],
            "title": "Are there any offline tools like jsfiddle.net?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Not sure if you can do this globally, but the most common method is to use <a href=\"http://www.w3schools.com/jsref/met_win_cleartimeout.asp\" rel=\"nofollow\">clearTimeout</a>.  You pass the return value of setTimeout() to clearTimeout(), you could use a global var to store all timeout vars.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>When you call <code>setTimeout()</code>, store the timer ID so you can clear it. If you're creating many timeouts, then an array is a good option for storing the IDs. For example:</p>\n\n<pre><code>var timeouts = [];\n//then, store when you create them\ntimeouts.push( setTimeout( { ... }, 1000) );\n</code></pre>\n\n<p>Then when you want to clear them:</p>\n\n<pre><code>for (var i = 0; i &lt; timeouts.length; i++) {\n    clearTimeout(timeouts[i]);\n}\n//quick reset of the timer array you just cleared\ntimeouts = [];\n</code></pre>\n\n<p>As <a href=\"http://stackoverflow.com/users/415668/robert\">@Robert</a> noted below, <a href=\"https://developer.mozilla.org/en/DOM/window.clearTimeout\"><code>clearTimeout()</code></a> won't throw an error if the timeout has already occurred, so there are no race/timing issues here.</p>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p>If you can't get access to the code where the timer is set Nick's answer may not work, so all that I can think of is this hack. </p>\n\n<p><strong>It is a hack, use with caution!</strong></p>\n\n<pre><code>// Set a fake timeout to get the highest timeout id\nvar highestTimeoutId = setTimeout(\";\");\nfor (var i = 0 ; i &lt; highestTimeoutId ; i++) {\n    clearTimeout(i); \n}\n</code></pre>\n\n<p>Basically it grabs the highest timer id and clears everything less than that. <em>But it's also possible to clear other timers that you do not want to clear!</em></p>\n",
                    "is_accepted": false,
                    "score": 49
                },
                {
                    "body": "<p>Firstly, I was using this code:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var x = setTimeout('');\nfor (var i = 0; i &lt; x; i++)\n    clearTimeout(x);\n</code></pre>\n\n<p>However, this peace of code did not work on Google Chrome. So I made improvement for this:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var x = setTimeout('alert(\"x\");',100000); //It is very low probability that after 100 seconds x timeout will not be cleared\nfor (var i = 0; i &lt;= x; i++)\n    clearTimeout(x);\n</code></pre>\n\n<p><strong>Finally, it is a hack, as it was mentioned in the comment above, so use it carefully.</strong></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am using ajax and asp.net. iI have a javascript function which creates many other javascript functions with setTimeout. After asynchronous postback happenes, I want to disable all of these setTimeouted events. How can I do that?</p>\n",
            "last_activity_date": 1383929467,
            "question_id": 3847121,
            "score": 25,
            "tags": [
                "javascript",
                "asynchronous",
                "postback",
                "settimeout"
            ],
            "title": "How can I disable all setTimeout events?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Maybe you should remove the meta setting of \"apple-mobile-web-app-capable\" in the head of page2.html</p>\n\n<p><a href=\"https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html#//apple_ref/doc/uid/TP40002051-CH3-SW1\" rel=\"nofollow\">https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html#//apple_ref/doc/uid/TP40002051-CH3-SW1</a></p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>This is a known issue for the last couple months of betas. There are no work arounds, and from what I can tell Apple has been silent on any ETAs on fixes, or even recognizing it's a bug. Bug reports have been submitted, but not updated/responded to.</p>\n\n<p>More: <a href=\"http://www.mobilexweb.com/blog/safari-ios7-html5-problems-apis-review\">http://www.mobilexweb.com/blog/safari-ios7-html5-problems-apis-review</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><strong>Update 10/23/13: Fixed in iOS 7.0.3. Add a target=\"xxx\" attribute to your links to do this. Also works with mailto: and friends.</strong></p>\n\n<p><strong>This is a bug in iOS 7.0, 7.0.1 and 7.0.2 and there's no known way to do this.</strong></p>\n\n<p>It's a regression from earlier versions of iOS, where links that open in Safari work just fine. It appears to be a part of a cluster of problems revolving around opening URLs, with no external URL schemes working (for example \"mailto:\" doesn't work either).</p>\n\n<p>The usual suspects of working around a problem like this unfortunately don't work (for example using a form and submitting it with a target of \"_new\"). </p>\n\n<p>There's other grave issues, like alert and confirm modal dialogs not working at all.</p>\n\n<p>It <em>may</em> help to submit these as bugs to Apple, <a href=\"http://bugreport.apple.com\" rel=\"nofollow\">http://bugreport.apple.com</a></p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>It looks suspiciously like an intentional bug to limit the ability of web apps to deliver advertisements. Maybe you can try open the new page in an iframe. </p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>EDIT: Sorry, I misread your original problem. This solution was for opening an external website at all. Basic A href tags used to work in opening links and stopped working in iOS7. This was the only way I could get it to open an external link at all.</p>\n\n<hr>\n\n<p>Here's how I got it to sort of work with a webapp saved to desktop in iOS7.</p>\n\n<pre><code>function openpage()\n{\nwindow.open('http://www.yourlinkhere.com', '_blank');\n}\n</code></pre>\n\n<p>...</p>\n\n<pre><code>&lt;a ontouchstart=\"openpage();\" onclick=\"openpage();\"&gt;LINKED TEXT&lt;/a&gt;\n</code></pre>\n\n<p>The issue though is that it seems to ignore the target option and it opens it in the same full screen desktop webapp and there is no way to navigate back that I can see.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I found two solutions for the time being to this problem, both of which obviously using <code>preventDefault</code> on the external links.</p>\n\n<p>If you're linking to another website or something to download, the only option I see is to ironically alert the user to hold their finger on the link to get the touch callout prompt. Then again, depending if it's a website or a PDF, instruct them to either copy the link or in the case of a PDF, add it to their reading list. Since the alert and confirm modals are also broken you'll need to implement your own modal notifications. If you already have that it shouldn't be that much trouble.</p>\n\n<p><strong>Update</strong> [2013-10-25] Apparently it's been fixed in iOS 7.0.3 and links open in Safari...</p>\n\n<p><strong>Edit</strong> [2013-10-05] Here's pretty much what I use with a jQuery UI modal</p>\n\n<pre><code>// iOS 7 external link polyfill\n$('a[rel=external], a[rel=blank], a[target=_blank], a[href$=\".pdf\"]').on('click', function(e) {\n\n  if (navigator.standalone &amp;&amp; /iP(hone|od|ad) OS 7/.test(navigator.userAgent)) {\n    e.preventDefault(); e.stopPropagation();\n\n    var href = $(this).attr('href');\n\n    var $dialog = $('&lt;div id=\"ios-copy\"&gt;&lt;/div&gt;')\n      .html('&lt;p&gt;iOS 7 prevents us from opening external links in Safari, you can continue to the address and risk losing all navigation or you can copy the address to your clipboard by &lt;strong&gt;holding your finger on the link&lt;/strong&gt; for a few seconds.&lt;/p&gt;&lt;p&gt;&lt;a style=\"background-color: rgba(0,0,0,.75); color: #fff; font-size: 1.25em; padding: 1em;\" href=\"' + href + '\"&gt;' + href + '&lt;/a&gt;&lt;/p&gt;')\n      .appendTo('body')\n      .dialog({\n        title: 'External link',\n        modal: true,\n        buttons: {\n          Ok: function() {\n            $( this ).dialog( \"close\" );\n          }\n        }\n      });\n  }\n});\n</code></pre>\n\n<p>The other workaround is using ajax or an iframe to load the external content, but unless you have a good sub-browser or something in your app it will look sketchy. Here's something along those lines.</p>\n\n<pre><code>// iOS 7 external link polyfill\nif (/iP(hone|od|ad) OS 7/.test(navigator.userAgent) &amp;&amp; window.navigator.standalone) {\n  $('a[rel=external], a[href$=\".pdf\"]').on('click', function(e) {\n    e.preventDefault(); e.stopPropagation();\n\n    var link = this;\n    var href = $(link).attr('href');\n\n    var frameContainer = $('&lt;div&gt;&lt;/div&gt;').css({\n      position: 'absolute',\n      left: 10,\n      top: $(link).position().top,\n      opacity: 0,\n      overflow: 'scroll',\n      '-webkit-overflow-scrolling': 'touch',\n      height: 520,\n      transition: 'opacity .25s',\n      width: 300\n    });\n\n    var iosFrame = $('&lt;iframe class=\"iosFrame\" seamless=\"seamless\" width=\"1024\" height=\"5000\"&gt;&lt;/iframe&gt;')\n      .attr('src', href)\n      .css({\n        height: 5000,\n        'max-width': 1024,\n        width: 1024,\n        overflow: 'scroll !important',\n        '-webkit-overflow-scrolling': 'touch !important'\n      });\n\n    var iosFrameClose = $('&lt;a href=\"#\"&gt;&lt;i class=\"icon-cancel icon-remove icon-3x\"&gt;&lt;/i&gt;&lt;/a&gt;').css({\n      position: 'absolute',\n      left: -10,\n      top: $(link).position().top - 20,\n      'text-shadow': '1px 1px 1px #000',\n      transition: 'opacity .25s',\n      opacity: 0,\n      '-webkit-transform': 'translate3d(0, 0, 0)',\n      width: '3em',\n      height: '3em'\n    }).on('click', function(e) {\n      e.preventDefault();\n      setTimeout( function() {\n        $(frameContainer).remove();\n        $(iosFrameClose).remove();\n      }, 250);\n    });\n\n    iosFrame.appendTo(frameContainer);\n    frameContainer.appendTo('body');\n    iosFrameClose.appendTo('body');\n\n    iosFrame.contents().css({\n      '-webkit-transform': 'translate3d(0, 0, 0)'\n    });\n\n    // Show this thing\n    setTimeout( function() {\n      $(frameContainer).css({ opacity: 1 });\n      $(iosFrameClose).css({ opacity: 1 });\n    }, 1);\n  });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>UPDATE\nJust wanted to let any one following this know that iOS 7.0.3 seems to fix the issue. I've keep standalone webapps saved for testing and the update released today restored external link/app functionality. So I've updated my code to let customers know to update their phones instead of deleting and re saving the web app.</p>\n\n<hr>\n\n<p>I was going to just add a comment but apparently this is too long.</p>\n\n<p>Apple set the stage for a WebApp world when they allowed chromeless webapps to be saved to the homescreen of the device. This \"bug\" feels like a major step backwards. It doesn't seem very apple to leave such a gapping bug in a final release. At least not one that, once they become aware of it, they don't publicly state they are working on a fix for it like they did with the lockscreen bypasses. I can't help that this feels intentional though there doesn't seem to be a clear reason why.</p>\n\n<p>For developers dealing with this issue the only solution I could find was to</p>\n\n<p>1st) Set the meta tag apple-mobile-web-app-capable to \"no\" - this prevents future users from dealing with the problem</p>\n\n<p>2nd) Updated the code in our webapp to look for \"standalone\" and iOS version 7+. When conditions are meet I offered a popup that stated the issue and added a link to that page and asked the users for their forgivness and requested they copy the link and paste in in safari.</p>\n\n<p>I wrapped the link in edge to edge  tag with line breaks above and bellow to help make the copy and pasting process of the url a bit easier.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>iOS v7.0.3 released 10/22/13 fixes the problem.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Having an anchor tag with target <code>_blank</code>will work in iOS 7.0.3 but using window.open will not work and will remain to open within the webview in 7.0.3:</p>\n\n<pre><code>window.open('http://www.google.com/', '_blank');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<pre><code>window.open('http://www.google.com/'); // stays in web app view\n\n&lt;a href='http://www.google.com/' target='_blank'&gt;Click Here&lt;/a&gt; // opens in safari\n</code></pre>\n\n<p>If you want to open Safari, but using an anchor tag like this isn't possible for whatever reason, <a href=\"http://stackoverflow.com/questions/7930001/force-link-to-open-in-mobile-safari-from-a-web-app-with-javascript#answer-8833025\">the JavaScript solution to this question will open in Safari as well</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In previous versions of iOS, <code>&lt;a&gt;</code> tags would open Mobile Safari, and you had to intercept those to instead stay inside the webapp (an HTML page that has been saved to the home screen by the user).</p>\n\n<p>Starting in iOS 7, all links are staying inside the WebApp. I cannot figure out how to get it to open Safari, when I really want it to.</p>\n\n<p>I've tried using <code>window.open</code> and <code>a target=\"_blank\"</code> but neither works.</p>\n\n<p>Here is a sample. <a href=\"https://s3.amazonaws.com/kaontest/testopen/index.html\">https://s3.amazonaws.com/kaontest/testopen/index.html</a></p>\n\n<p>If you save that to your home screen in iOS 6, the link opens Safari. But in iOS 7, it doesn't.</p>\n\n<p>Note that this is the OPPOSITE question that everyone is usually asking (\"how to NOT open Safari\"). That behavior seems to be the new default, and I can't figure out how to get the old behavior back!</p>\n",
            "last_activity_date": 1410317453,
            "question_id": 18879631,
            "score": 24,
            "tags": [
                "javascript",
                "ios",
                "web-applications",
                "safari",
                "mobile-safari"
            ],
            "title": "How to open Safari from a WebApp in iOS 7"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>What you are doing is building a string, and then parsing it all at once upon insertion.  What about creating an actual table element (i.e. <code>$(\"&lt;table&gt;\")</code>), and then adding each row to it in turn?  By the time you actually insert it into the page, the DOM nodes will all have been constructed, so it shouldn't be as big a hit.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For starters, check out <a href=\"http://flydom.socianet.com/\" rel=\"nofollow\">flydom</a> and it's variants, they will help termendously. Could you possibly give more context? If this is not in the onload and just pasted in the page, just wrapping the whole thing in $(function () { /* code */ }) will probably clean up everything you are having problems with. Inline JS is executed immediately, which means that loop for the table. onload is an event and essentially 'detached'.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could insert the table into the DOM bit by bit. Honestly I'm not entirely sure if this will help with your problem, but it's worth a try. I'd do it roughly like this (untested code, could be refine some more):</p>\n\n<pre><code>$(\"#result\").append('&lt;table id=\"myTable\" cellspacing=0 cellpadding=2 border=1&gt;&lt;/table&gt;');\n$('#myTable').append('&lt;thead&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/thead&gt;');\n$('#myTable').append('&lt;tbody&gt;&lt;/tbody&gt;');\n\nfor (var i = 0; i &lt; t.hdrs.length; i++) { \n\t$('#myTable thead tr').append('&lt;th&gt;'+header+'&lt;/th&gt;');\n}\n\nfor (var i = 0; i &lt; t.data.length; i++) { \n myTr =    '&lt;tr&gt;';\n for (var j = 0; j &lt; t.hdrs.length; j++) { \n  myTr += '&lt;td&gt;';\n  if (t.data[i][t.hdrs[j]] == \"\") { \n   myTr += \"&amp;nbsp;\" ; \n  }\n  else { \n   myTr += t.data[i][t.hdrs[j]] ; \n  }\n  myTr += \"&lt;/td&gt;\";\n  }\n myTr +=    \"&lt;/tr&gt;\";\n $('#myTable tbody').append(myTr);\n}\n\n$(\"#PleaseWaitGraphic\").addClass(\"hide\");\n$(\".rslt\").removeClass(\"hide\") ;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>My experience has been that there are two discrete delays. One is concatenating all those strings together. The other is when the browser actually tries to render the string. Typically, it's IE that has the most trouble with UI freezes, in part because it's a lot slower at running javascript. This should get better in IE8.</p>\n\n<p>What I would suggest in your case is breaking the operation into steps. Say for a 100 row table, you produce a valid 10 row table first. Then you output that to screen and use a setTimeout to return control to the browser so the UI stops blocking. When the setTimeout comes back, you do the next 10 rows, etc.</p>\n\n<p>Creating the table using DOM is certainly \"cleaner\", as others have said. However, there is a steep price to pay in terms of performance. See the excellent <a href=\"http://www.quirksmode.org/dom/innerhtml.html\" rel=\"nofollow\">quirksmode</a> article on this subject, which has some benchmarks you can run yourself.</p>\n\n<p>Long story short, innerHTML is much, much faster than DOM, even on modern JS engines.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've been using <a href=\"http://jtemplates.tpython.com/\">JTemplates</a> to accomplish what you are describing.  Dave Ward has an example on his blog <a href=\"http://encosia.com/2008/06/26/use-jquery-and-aspnet-ajax-to-build-a-client-side-repeater/\">here</a>.  The main benefit of JTemplates is that your html isn't woven into your javascript.  You write a template and call two functions to have jTemplate build the html from your template and your json.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You basically want to set up your loops so they yield to other threads every so often. Here is some example code from <a href=\"http://www.julienlecomte.net/blog/2007/10/28/\">this article</a> on the topic of running CPU intensive operations without freezing your UI:</p>\n\n<pre><code>function doSomething (progressFn [, additional arguments]) {\n    // Initialize a few things here...\n    (function () {\n        // Do a little bit of work here...\n        if (continuation condition) {\n            // Inform the application of the progress\n            progressFn(value, total);\n            // Process next chunk\n            setTimeout(arguments.callee, 0);\n        }\n    })();\n}\n</code></pre>\n\n<p>As far as simplifying the production of HTML in your script, if you're using jQuery, you might give my <a href=\"http://plugins.jquery.com/project/simple-templates\">Simple Templates</a> plug-in a try. It tidies up the process by cutting down drastically on the number of concatenations you have to do. It performs pretty well, too after I recently did some refactoring that resulted in a pretty big <a href=\"http://andrew.hedges.name/experiments/simple-templates-speed-test/\">speed increase</a>. Here's an example (without doing <em>all</em> of the work for you!):</p>\n\n<pre><code>var t = eval('(' + request + ')') ;\nvar templates = {\n    tr : '&lt;tr&gt;#{row}&lt;/tr&gt;',\n    th : '&lt;th&gt;#{header}&lt;/th&gt;',\n    td : '&lt;td&gt;#{cell}&lt;/td&gt;'\n};\nvar table = '&lt;table&gt;&lt;thead&gt;&lt;tr&gt;';\n$.each(t.hdrs, function (key, val) {\n    table += $.tmpl(templates.th, {header: val});\n});\n...\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Using innerHTML can definitely be much faster than using jQuery's HTML-to-DOM-ifier, which uses innerHTML but does a lot of processing on the inputs.</p>\n\n<p>I'd suggest checking out <a href=\"http://github.com/raid-ox/chain.js/wikis\" rel=\"nofollow\">chain.js</a> as a way to quickly build out tables and other repeating data structures from JavaScript objects. It's a really lightweight, smart databinding plugin for jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Search the web for JavaScript and StringBuilder. Once you have a JavaScript string builder make sure you use the <code>.append</code> method for every concatenation.  That is, you don't want to have any <code>+</code> concatenations.  After that, search for JavaScript and replacehtml.  Use this function instead of <code>innerHTML</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Below is the code I use to build an HTML table on the fly (using JSON data received from the server).</p>\n\n<p>I display an animated pleasewait (.gif) graphic while the data is loading. However, the graphic freezes while the JavaScript function is building the table. At first, I was just happy to make this happen (display the table), I guess now I need to work on efficiency. At the very least I need to stop the animated graphic from freezing. I can go to a static \"Loading\" display, but I would rather make this method work.</p>\n\n<p>Suggestions for my pleasewait display? And efficiency? Possibly a better way to build the table? Or maybe not a table, but some other \"table\" like display</p>\n\n<pre><code>var t = eval( \"(\" + request + \")\" ) ;\nvar myTable = '' ;\nmyTable += '&lt;table id=\"myTable\" cellspacing=0 cellpadding=2 border=1&gt;' ;\nmyTable +=  \"&lt;thead&gt;\" ;\nmyTable +=   \"&lt;tr&gt;\";\nfor (var i = 0; i &lt; t.hdrs.length; i++) {\n    myTable +=    \"&lt;th&gt;\"     + header +       \"&lt;/th&gt;\";\n}\nmyTable +=   \"&lt;/tr&gt;\" ;\nmyTable +=  \"&lt;/thead&gt;\" ;\nmyTable +=  \"&lt;tbody&gt;\" ;\n\nfor (var i = 0; i &lt; t.data.length; i++) {\n    myTable +=    '&lt;tr&gt;';\n    for (var j = 0; j &lt; t.hdrs.length; j++) {\n        myTable += '&lt;td&gt;';\n        if (t.data[i][t.hdrs[j]] == \"\") {\n            myTable += \"&amp;nbsp;\" ;\n        }\n        else {\n            myTable += t.data[i][t.hdrs[j]] ;\n        }\n        myTable += \"&lt;/td&gt;\";\n    }\n    myTable +=    \"&lt;/tr&gt;\";\n}\nmyTable +=  \"&lt;/tbody&gt;\" ;\nmyTable += \"&lt;/table&gt;\" ;\n\n$(\"#result\").append(myTable) ;\n$(\"#PleaseWaitGraphic\").addClass(\"hide\");\n$(\".rslt\").removeClass(\"hide\") ;\n</code></pre>\n",
            "last_activity_date": 1296759995,
            "question_id": 103489,
            "score": 19,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Building an HTML table on the fly using jQuery"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>OK I had the same problem so I started the bounty, but after that I found the working solution (for me at least):</p>\n\n<ul>\n<li>Use HTML5 shim</li>\n<li>Use JSON2.js</li>\n<li><p>Add all these attributes to your html node:</p>\n\n<p>class=\"ng-app:myapp\" id=\"ng-app\" ng-app=\"myapp\" xmlns:ng=\"http://angularjs.org\"</p></li>\n</ul>\n\n<p>(where <em>myapp</em> is really your app name)</p>\n\n<p>So to recap, here is my IE7/8/9 working HTML page:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\" class=\"ng-app:myapp\" id=\"ng-app\" ng-app=\"myapp\" xmlns:ng=\"http://angularjs.org\"&gt;\n  &lt;head&gt;\n    &lt;!--[if lt IE 9]&gt;\n      &lt;script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"&gt;&lt;/script&gt;\n    &lt;![endif]--&gt;\n    &lt;!--[if lte IE 8]&gt;\n      &lt;script&gt;\n        document.createElement('ng-include');\n        document.createElement('ng-pluralize');\n        document.createElement('ng-view');\n        document.createElement('ng:include');\n        document.createElement('ng:pluralize');\n        document.createElement('ng:view');\n      &lt;/script&gt;\n    &lt;![endif]--&gt;\n    &lt;!--[if lt IE 8]&gt;\n      &lt;script src=\"js/json2.js\"&gt;&lt;/script&gt;\n    &lt;![endif]--&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div ng-view&gt;&lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 45
                }
            ],
            "body": "<p>I have been implementing Routing in my app following the tutorial</p>\n\n<p><a href=\"http://docs.angularjs.org/tutorial/step_07\">http://docs.angularjs.org/tutorial/step_07</a></p>\n\n<p>I couldn't get my version to work in IE7, and after spending a while trying to work out what I have missed / done wrong I have noticed that the example doesn't work.</p>\n\n<p><a href=\"http://angular.github.com/angular-phonecat/step-7/app/\">http://angular.github.com/angular-phonecat/step-7/app/</a></p>\n\n<p>Anyone know how to get this to work?</p>\n",
            "last_activity_date": 1386166077,
            "question_id": 12709745,
            "score": 17,
            "tags": [
                "javascript",
                "internet-explorer-7",
                "angularjs"
            ],
            "title": "Angular Routing not working in IE7"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The model of backbone.js uses specific urls for fetch and send data. You have to make sure, to have a php script called there.</p>\n\n<p>Now there are two possibilities.</p>\n\n<p>First, the method is send inside the $_POST as additional variable.\nSecond, you have to look for the used request method(GET,POST,PUT,DELETE) which you can with <code>$_SERVER['REQUEST_METHOD']</code></p>\n\n<p>Now you can use simple if-else or switch statements to handle the request and deliver the needed data as i think json.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>$GLOBALS['HTTP_RAW_POST_DATA'] works fine for me, i don't know for what reason print_r($_POST) doesn't print anithing!!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Another option you may consider is to roll with a pre-packaged RESTful framework that has all the necessary functions built in to execute your Backbone server queries. My personal favorite is <a href=\"http://www.slimframework.com/documentation/stable\">Josh Lockhart's SlimPHP Framework</a>.</p>\n\n<p>Some simple sample code (once you have SlimPHP setup) used to take your Backbone calls look like this.</p>\n\n<pre><code>$app-&gt;get('/user', function() use ($app) {\n\n    // See if session is set, get user info as array\n    if (isset($_SESSION['userID']) {\n         $user = // grab user with userID data from DB\n    }\n\n    // Respond to the get request with a json object\n    $response = $app-&gt;response;\n    $response['Content-Type'] = 'application/json';\n    $response-&gt;body(json_encode($user));\n}\n</code></pre>\n\n<p>Here is a POST example that turns Backbone json into arrays.</p>\n\n<pre><code>// Middleware that detects type of data and converts it to something usable\n$app-&gt;add('Slim_Middleware_ContentTypes');    // JSON to associative array\n\n...\n\n$app-&gt;post('/message', function() use ($app) {\n    $dataIn = $app-&gt;request()-&gt;getBody();\n\n    ...\n\n    // Save to DB $dataIn['message'], $dataIn['author'], etc.\n}\n</code></pre>\n\n<p>Here is a PUT example using some parameters.</p>\n\n<pre><code>$app-&gt;put('/user/:id', function($id) use ($app) {\n\n    // Find appropriate user from DB that has $id as ID\n\n    $dataIn = $app-&gt;request()-&gt;getBody();\n\n    // Save to DB $dataIn['name'], $dataIn['age'], etc.\n}\n</code></pre>\n\n<p>And here is a DELETE.</p>\n\n<pre><code>$app-&gt;delete('/message/:id', function($id) use ($app) {\n\n    // Find appropriate message from DB that has $id as ID\n\n    // Delete message with id of $id\n}\n</code></pre>\n\n<p>While this isn't an exhaustive example of all the other things to consider, it should give you an idea of the kinds of open solutions already out there for you to use. I personally like Slim because it is so lightweight, simple, yet it has all the features you'd want in a RESTful server. Great for prototyping. Combine it with a DB abstraction layer and some other tools and you can make just about anything you want quicker.</p>\n\n<p>You can see some other sample code along these lines here:</p>\n\n<ol>\n<li><a href=\"http://stackoverflow.com/questions/9053405/how-to-post-backbone-model-data-to-db-through-slim-php-and-paris\">How to post Backbone model to server</a></li>\n<li><a href=\"http://stackoverflow.com/questions/9816274/ways-to-save-backbone-js-model-data/9862135#9862135\">Ways to save Backbone data</a></li>\n</ol>\n\n<p>And here is a link to some other PHP based RESTful solutions: <a href=\"http://blog.programmableweb.com/2011/09/23/short-list-of-restful-api-frameworks-for-php/\">Framework List</a></p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>In your php script you will have this for the PUT and DELETE methods as you can filter those with: <code>$_SERVER['REQUEST_METHOD']</code></p>\n\n<pre><code>parse_str(file_get_contents(\"php://input\"),$post_vars);\n</code></pre>\n\n<p>If the request is POST or GET you can use it normally but if the request is PUT or DELETE so use the above line and so you can access to the vars with:</p>\n\n<pre><code>$post_vars['fruit'] for example...\n</code></pre>\n\n<p>When you are ready to answer to backbone, you only have to first make the correct header:</p>\n\n<pre><code>header('Content-type: application/json; charset=utf-8');\n</code></pre>\n\n<p>and encode you answer with json:</p>\n\n<pre><code>echo json_encode(array(\"message\"=&gt;\"missing fields\",\"status\"=&gt;200));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have been looking into backbone.js and I can't seem to figure out how to get it communicate with php in order to save the models data. It sends a request but how do I capture that request whether it be \"Create\", \"Update\", \"Read\", \"Delete\" etc.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1366779046,
            "question_id": 6207286,
            "score": 16,
            "tags": [
                "php",
                "javascript",
                "backbone.js"
            ],
            "title": "Backbone.js How to use with PHP"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You might want to go with <a href=\"http://westcoastlogic.com/lawnchair/\">Lawnchair</a>, which is quite well known, as mentioned by Guido Tapia in the question that you link to. </p>\n\n<p>Either that, or use his <a href=\"http://picnet.github.com/picnet_closure_repo/demos/picnet.data.DataManager.html\">picnet.data.DataManager</a> solution.</p>\n\n<p>Also take a look at <a href=\"http://persistencejs.org/\">persistence.js</a>.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>JasonCasden has shared a huge list of libraries/wrappers at his presentation <a href=\"http://www.slideshare.net/casden/inbrowser-storage-and-me\">In-browser storage and me</a>. Here is the list:</p>\n\n<pre><code>lawnchair\npersistence.js\npersistJS\namplify.store\nlocalStorageDB\nhttps://github.com/axemclion/IndexedDB\nrealStorage\nYUI3 CacheOffline\ndojox.storage\nDomSQL\nImpel\nActiveJS ActiveRecord\nJazzRecord\npicnet.data.DataManager\nShinyCar\nlscache\nKizzy\nArtemia\nmicrocache.js\nStore.js\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I have written <a href=\"http://git.yathit.com/ydn-db/wiki/Home\">YDN-DB</a> for the exact purpose. It is database wrapper for IndexedDB, WebSql and localStorage, build on the top of closure library. </p>\n\n<h2>Goal</h2>\n\n<p>Beautiful API for secure robust high-performance large-scale web app.</p>\n\n<h2>Features</h2>\n\n<ul>\n<li>Support IndexedDB, Web SQL and localStorage storage mechanisms.</li>\n<li>Well tested closure library module.</li>\n<li>Support version migration, encryption, <a href=\"http://dev.yathit.com/ydn-db/starting/query.html\">query</a> and <a href=\"http://dev.yathit.com/ydn-db/starting/transaction.html\">transaction</a>.</li>\n<li>Each method call is an atomic transaction. All methods are asynchronous.</li>\n<li>Follow usual javascript etiquette like: single namespace, no global, no error globbing (unless we told you so in doc), no eval, parameterized query, this is this, coding error throw error.</li>\n<li>JQuery plugin available (see download section).</li>\n</ul>\n\n<h3>Basic usage</h3>\n\n<p>Import lastest minified JS script (see download section) to your HTML files. This will create single object in the global scope, call ydn.db.Storage.</p>\n\n<pre><code>var db = new ydn.db.Storage('db name');\n\ndb.setItem('x', 'some value')\n\ndb.getItem('x').success(function(value) {\n  console.log('x = ' + value);\n}\n</code></pre>\n\n<h3>Query</h3>\n\n<p>Calculate average by using query</p>\n\n<pre><code>q = db.query('customer').average('age');\navg = q.fetch()\n</code></pre>\n\n<h3>Key query</h3>\n\n<pre><code>q = db.query('customer', 'age').bound(18, 25, true).where('sex', '=', 'FEMALE').select('full_name')\nyoung_girl_names = q.fetch()\n</code></pre>\n\n<h3>Transaction</h3>\n\n<pre><code>p1 = db.key('player', 1);\ndb.transaction(function() {\n   p1.get().success(function(p1_obj) {\n        p1_obj.health += 10;\n        p1.put(p123_obj);\n   });\n}, [p1]);\n</code></pre>\n\n<h3>Encryption</h3>\n\n<p>String value data can be optionally encrypted using SHA-1 cipher.</p>\n\n<pre><code>db = new ydn.db.Store('store name')\ndb.setSecret(passphase); // generally send from server side upon login\ndb.setItem(key, value, 3600*1000); // data expire on one hour\ndb.getItem(key); // data will be decrypted using the provided passphase\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Take a look at this: <a href=\"https://github.com/axemclion/IndexedDBShim\">https://github.com/axemclion/IndexedDBShim</a></p>\n\n<p>It's a polyfill to enable IndexedDB using WebSql. I use it and I think it's quite good, but as every solution, it has some limitations, although you can develop it almost whatever you want without big problems.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The question is answered, I just want to share the updates.</p>\n\n<p>In May 2012 <a href=\"http://jaydata.org\">JayData</a> has been released, which is the unified data access library for JavaScript and helps to manage data in IndexedDB, WebSQL, SQLite, MongoDB, HTML5 localStorage databases and Facebook, OData, WebAPI, YQL data services with the same <a href=\"http://jaydata.org/blog/javascript-language-query-jslq-101\">JavaScript Language Query syntax</a>. </p>\n\n<p>Changing to IndexedDB from WebSQL means only changing type of the storage provider:</p>\n\n<pre><code>var todoDB = new TodoDatabase({ \n    provider: 'webSql', databaseName: 'MyTodoDatabase' });\n\nvar todoDB = new TodoDatabase({ \n    provider: 'indexedDB', databaseName: 'MyTodoDatabase' });\n</code></pre>\n\n<p>If you don't specify the provider, the library detects the available storage of the browser/device in the following priority order (WebSQL, IndexedDB, HTML5 localStorage).</p>\n\n<p>Disclaimer: I'm member of the developer team of the open-source JayData project</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I'm curious if there is a library or a project out there to provide a generic interface to IndexedDB or to WebSQL, depending on user's browser's support. If they're using Chrome/Safari, use WebSQL, if they're using Firefox or Internet Explorer, use IndexedDB.</p>\n\n<p>The poster of <a href=\"http://stackoverflow.com/questions/3154795/indexdb-websql-in-4-months\">this question</a> appears to have homegrown a solution, but did not provide any source code.</p>\n",
            "last_activity_date": 1361552443,
            "question_id": 6116053,
            "score": 16,
            "tags": [
                "javascript",
                "web-sql",
                "indexeddb"
            ],
            "title": "JavaScript Library to Bridge IndexedDB and WebSQL"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>1) Add <code>id=\"ng-app\"</code> to your body tag.</p>\n\n<pre><code>&lt;body ng-app=\"myApp\" id=\"ng-app\"&gt;\n</code></pre>\n\n<p>&nbsp;\n2) Inform your users/client it's 2013.</p>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<p>After some more reading I could make it work.</p>\n\n<p>The problem with IE7 was the bootstrapping. It was not firing any! so I made a manual initialization as shown in <a href=\"http://docs.angularjs.org/guide/bootstrap\">this page</a> and it worked.</p>\n\n<p>This is the code I added to the HTML assuring it will only fire on Internet Explorer 8 or lower (because if I fire it for all browsers some event handlers fire twice for non-ie browsers):</p>\n\n<pre><code>&lt;!--[if lte IE 8]&gt;\n&lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function() {\n        angular.bootstrap(document);\n    });\n&lt;/script&gt;\n&lt;![endif]--&gt;\n</code></pre>\n\n<p>The <code>$document.ready()</code> part is the jQuery way to be sure this code will be executed when everything on the body has been loaded but since I was using jQuery on my site I took advantage of it.</p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>Just to make sure if AngularJS works on the browsers I need, I made a simple data-binging demo that works fine on Firefox, Chrome an IE8+ but I also need to make it work on IE7. Unfortunatelly I can't make it work on it. It only shows the html with the curly braces on it, ignoring <code>ng-</code> attributes.</p>\n\n<p>I have checked <a href=\"http://gpiot.com/angularjs-on-ie7-not-working-how-to-fix-it/\">several</a> <a href=\"http://stackoverflow.com/questions/14464742/angularjs-and-internet-explorer\">posts</a> <a href=\"http://stackoverflow.com/questions/11984223/angularjs-data-binding-issue-on-internet-explorer-using-curly-braces\">about</a> <a href=\"http://stackoverflow.com/questions/12709745/angular-routing-not-working-in-ie7\">AngularJS</a> on Internet Explorer and tried the suggested fixes on each one but nothing works on my demo.</p>\n\n<p>This is the HTML of my demo:</p>\n\n<pre><code>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Angular IE7 Test&lt;/title&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\"&gt;\n&lt;!--[if lt IE 9]&gt;\n&lt;script type=\"text/javascript\" src=\"angularjs/html5shiv.js\"&gt;&lt;/script&gt;\n&lt;![endif]--&gt;\n&lt;!--[if lt IE 8]&gt;\n&lt;script type=\"text/javascript\" src=\"angularjs/json3.js\"&gt;&lt;/script&gt;\n&lt;![endif]--&gt;\n&lt;script language=\"JavaScript\" src=\"angularjs/angular.min.js\"&gt;&lt;/script&gt;\n&lt;script language=\"JavaScript\" src=\"angularjs/test.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body class=\"ng-app\"&gt;\n    &lt;div ng-controller=\"serversCtrl\"&gt;\n        &lt;p&gt;{{texto}}&lt;/p&gt;\n\n        &lt;table border=\"1\"&gt;\n            &lt;tbody&gt;\n                &lt;tr&gt;&lt;th&gt;Col1&lt;/th&gt;&lt;th&gt;Col2&lt;/th&gt;&lt;th&gt;Col3&lt;/th&gt;&lt;/tr&gt;\n                &lt;tr ng-repeat=\"item in items\"&gt;&lt;td&gt;{{item.col1}}&lt;/td&gt;&lt;td&gt;{{item.col2}}&lt;/td&gt;&lt;td&gt;{{item.col3}}&lt;/td&gt;&lt;/tr&gt;\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>And this is the test.js javascript containing the controller and the models:</p>\n\n<pre><code>function serversCtrl($scope, $http, $location) {\n    $scope.texto = \"Texto dinamico\";\n    $scope.items = [\n        {col1: \"foo1\", col2: \"bar1\", col3: \"baz1\"},\n        {col1: \"foo2\", col2: \"bar2\", col3: \"baz2\"},\n        {col1: \"foo3\", col2: \"bar3\", col3: \"baz3\"},\n        {col1: \"foo4\", col2: \"bar4\", col3: \"baz4\"},\n        {col1: \"foo5\", col2: \"bar5\", col3: \"baz5\"}\n    ];\n}\n</code></pre>\n\n<p>Am I doing something wrong? Is there any other tip to make it work that I have missed?</p>\n\n<p><strong>EDIT:</strong> I'm using  AngularJS v1.0.5</p>\n",
            "last_activity_date": 1403992198,
            "question_id": 15914675,
            "score": 15,
            "tags": [
                "javascript",
                "angularjs",
                "internet-explorer-7"
            ],
            "title": "Running AngularJS App on Internet Explorer 7"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>Before attempting any optimizations first you need to be able to profile, get <a href=\"http://getfirebug.com/\" rel=\"nofollow\">FireBug</a> for Firefox. Then you can run some analysis that will tell you exactly what to do using <a href=\"http://developer.yahoo.com/yslow/\" rel=\"nofollow\">YSlow</a>. Fundamental things that you should do are listed <a href=\"http://developer.yahoo.com/performance/rules.html\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here are a few \"best practice\" things:</p>\n\n<ul>\n<li>Caching CSS, JavaScript, images, etc.</li>\n<li>Minifying Javascript files.</li>\n<li>gzip content.</li>\n<li>Place links to JavaScript files, JavaScript code, and links to CSS files at the bottom of your page when possible.</li>\n<li>Load only what is necessary.</li>\n<li>For an existing website, before you do any of this determine where your bottlenecks are with tools like Firebug and as someone else mentioned YSlow (I highly recommend this tool).</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There are two sides you can care about, when optimizing :</p>\n\n<ul>\n<li>The server side : what matters is generating the ouput faster</li>\n<li>The client side : what matters is getting all that has to be displayed faster.</li>\n</ul>\n\n<p>Note : we, as developpers, often think about optimizing the server-side first... Which in most cases only represents less than 10% percent of the loading-time of the page !</p>\n\n<p><br>\nOn the server side, you'll generally want to :</p>\n\n<ul>\n<li>profile, to determine what's long</li>\n<li>optimize your SQL queries, and reduce their number</li>\n<li>use caching</li>\n</ul>\n\n<p>For more informations, you can take a look to the answer I gave some time ago to this question : <a href=\"http://stackoverflow.com/questions/1260134/optimizing-kohana-based-websites-for-speed-and-scalability/1283195#1283195\">Optimizing Kohana-based Websites for Speed and Scalability</a></p>\n\n<p><br>\nOn the client side, the biggest gains are generally achieved by :</p>\n\n<ul>\n<li>Reducing the number of HTTP requests -- the easiest way being to reduce the number of JS/CSS/images files, by combining several files into one</li>\n<li>Compressing CSS/JS/HTML, using for instance Apache's <code>mod_deflate</code>.</li>\n</ul>\n\n<p>About that, there is a lot of great stuff on <a href=\"http://developer.yahoo.com/performance/\" rel=\"nofollow\">Yahoo's Exceptional Performance</a> : they've released lots of <a href=\"http://developer.yahoo.com/performance/rules.html\" rel=\"nofollow\">good pratices</a> and tools, such as <a href=\"http://developer.yahoo.com/yslow/\" rel=\"nofollow\">yslow</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Remove/Minimize any bottlenecks on the server side. For this purpose, use a profiler like Xdebug or Zend Debugger to find out where your application is doing expensive and slow operations. Implement caching where possible. Use an OpCode Cache. If this still isn't fast enough consider investing in more CPU or RAM or SSDs (depending on whether you are CPU, IO or Memory bound)</p>\n\n<p>For general server/client side optimizations, see the Yahoo <a href=\"http://developer.yahoo.com/yslow/help/index.html\">YSlow! User Guide</a>.</p>\n\n<p>It basically sums it up to:</p>\n\n<blockquote>\n  <ol>\n  <li>Minimize HTTP Requests</li>\n  <li>Use a Content Delivery Network</li>\n  <li>Add an Expires or a Cache-Control Header</li>\n  <li>Gzip Components</li>\n  <li>Put StyleSheets at the Top</li>\n  <li>Put Scripts at the Bottom</li>\n  <li>Avoid CSS Expressions</li>\n  <li>Make JavaScript and CSS External</li>\n  <li>Reduce DNS Lookups</li>\n  <li>Minify JavaScript and CSS</li>\n  <li>Avoid Redirects</li>\n  <li>Remove Duplicate Scripts</li>\n  <li>Configure ETags</li>\n  <li>Make AJAX Cacheable</li>\n  <li>Use GET for AJAX Requests</li>\n  <li>Reduce the Number of DOM Elements</li>\n  <li>No 404s</li>\n  <li>Reduce Cookie Size</li>\n  <li>Use Cookie-Free Domains for Components</li>\n  <li>Avoid Filters</li>\n  <li>Do Not Scale Images in HTML</li>\n  <li>Make favicon.ico Small and Cacheable</li>\n  </ol>\n</blockquote>\n\n<p>Also see the comments contributed below, as they contain some additional useful information for other users.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>The simple options I can think of are:</p>\n\n<ol>\n<li>Gzip (x)html, so a compressed file should arrive more quickly to the user</li>\n<li>minify the CSS</li>\n<li>minify the JS</li>\n<li>use caching where possible</li>\n<li>use a content-delivery network</li>\n<li>use a tool, such as <a href=\"http://developer.yahoo.com/yslow/\" rel=\"nofollow\" title=\"Link to Yahoo's ySlow.\">yslow</a> to identify bottlenecks and further suggestions</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>definitely want to look at caching, as round trips to DB are expensive.\nalso, minify JS</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To reduce network traffic, you can minify static files, such as CSS and Javascript, and use gzip compression on generated content. You can also try using tools such as optipng to reduce the size of images.</p>\n\n<p>However, the first step to take is to actually analyse what's taking all of the time -- whether it's sending the bits over the network, or actually generate the content to send. There's no point making your CSS files 10% smaller if it takes a minute to generate each HTML page.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Load balancing would help to reduce the loading time immense. </p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>The first optimisation is: Decide if it is slow, and if not, don't bother.</p>\n\n<p>This is trickier than it sounds, because it's not like testing a desktop app or game. A game is slow if when you play it on the target hardware, the frame rate is too low. This is very easy to measure.</p>\n\n<p>A web site is trickier, because you, as the developer, are probably using a local test system with a very fast network. Even when you use your staging / system test servers, you're probably still on the local network. Even your production servers are in all likelihood, on the same continent.</p>\n\n<p>The same is possibly not true for quite a lot of your users. </p>\n\n<p>Therefore the options which exist are:</p>\n\n<ul>\n<li>Find out by asking your users, whether they find it to be slow</li>\n<li>Simulate a high latency environment and test it yourself (or your QA team)</li>\n<li>Guesswork</li>\n</ul>\n\n<p>The latter is not recommended. </p>\n\n<p>An option which the holier-than-thou Yahoo Web Sites performance book (which yes, is a book you can buy) doesn't mention a lot is HTTPS. Most web applications which handle important data run mostly or entirely over HTTPS, which changes the rules of the game rather a lot. Remember to do all testing with it enabled.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>install firebug and pagespeed plugin \nfollows all the pagespeed directives (until possible) and be happy\n<a href=\"http://code.google.com/intl/it/speed/page-speed/\" rel=\"nofollow\">http://code.google.com/intl/it/speed/page-speed/</a></p>\n\n<p>anyway the most importante optimization in my experience is to reduce the number of HTTP requests to a minimum... </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Don't use whitespace in code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>We recently did this on our web site. Here we outlined nine techniques that seemed to have the highest impact with the least difficulty: <a href=\"http://mentormate.com/blog/easy-ways-speed-website-load-time/\" rel=\"nofollow\">http://mentormate.com/blog/easy-ways-speed-website-load-time/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>i wrote some things about, see:</p>\n\n<p><a href=\"http://www.cybernetica.it/Notizie/Archivio-Notizie/Google-page-speed-test-optimization.html\" rel=\"nofollow\">Google page speed test optimization</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As already mentioned, you can use Yslow or PageSpeed firefox extension. But you can also use <a href=\"http://gtmetrix.com/\" rel=\"nofollow\">GTmetrix</a>, an online service scanning your page with both tools.</p>\n\n<p>Features I like / use:</p>\n\n<ul>\n<li>soft, clean and usable presention </li>\n<li>comparison with another page. It's really interesting to see where are your friends / competitors.</li>\n</ul>\n\n<p>(by the way, i'm not related to gtmetrix !)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What are some important optimizations that can be made to a website to reduce the loading time?</p>\n",
            "last_activity_date": 1277392114,
            "question_id": 2359515,
            "score": 15,
            "tags": [
                "php",
                "javascript",
                "html",
                "css",
                "optimization"
            ],
            "title": "Optimizations to reduce website loading time"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Every function has a reference to <code>this</code>. if you call <code>Tip()</code>, <code>this</code> will refer to the global object. If you call <code>new Tip()</code>, a new object with a reference to Tip.prototype is created and <code>this</code> will refer to that new object.</p>\n\n<p>You can't use <code>new</code> on objects, for instance <code>new {}</code> throws <code>TypeError: object is not a function</code>. If you are refering to <code>new Object()</code> then that works since <code>Object</code> is a function.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The function is acting as a constructor on a class. Alternatively, you could do:</p>\n\n<pre><code>function Tip(txt) {\n return {\n content: txt,\n shown: false\n}\n}\n</code></pre>\n\n<p>and get a new instance with: <code>var myTip = new Tip(\"my epic tip\");</code> \nThis is similar to, say, c#:</p>\n\n<pre><code>public class Tip {\nstring text = \"\";\npublic Tip(string txt) {\ntext = txt;\n}\n}\n</code></pre>\n\n<p>So, sort of.  1) You're calling new since the function is essentially acting as a class, and 2) <code>this</code> is referring to the current instance of the class. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>for #1 : There is an object called Function (capital F)</p>\n\n<p>var f = new Function(\"x\", \"y\", \"return x*y;\");</p>\n\n<p>for #2 : the \"this\" is different depending on innvocation pattern (as termed by Douglas Crockford). Crockford said there are 4 patterns ( method pattern , function pattern , constructor pattern , and \"apply\" pattern )</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You are looking for the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/constructor\"><code>constructor</code></a> concept.</p>\n\n<p>All functions in JavaScript <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function\">are objects</a> and can be used to create objects:</p>\n\n<pre><code>function make_person(firstname, lastname, age) {\n    person = {};\n    person.firstname = firstname;\n    person.lastname = lastname;\n    person.age = age;\n    return person;\n}\nmake_person(\"Joe\", \"Smith\", 23);\n// {firstname: \"Joe\", lastname: \"Smith\", age: 23}\n</code></pre>\n\n<p>However, in order to create new objects of a particular type (that is to say, that inherit a prototype, have a constructor, etc), a function can reference <code>this</code> and <em>if it is called with the <code>new</code> operator</em> then it will return an object with all of the attributes that are defined on <code>this</code> in the function - <code>this</code> in such cases references the new object we are creating.</p>\n\n<pre><code>function make_person_object(firstname, lastname, age) {\n    this.firstname = firstname;\n    this.lastname = lastname;\n    this.age = age;\n    // Note, we did not include a return statement\n}\n</code></pre>\n\n<p>The key difference to note between <code>make_person</code> and <code>make_person_object</code> is that calling <code>new make_person()</code> (as opposed to simply <code>make_person()</code>) will not do anything different ... both will produce the same object.  Calling <code>make_person_object()</code> without the <code>new</code> operator however, will define your <code>this</code> attributes on the current <code>this</code> object (generally <code>window</code> if you are operating in the browser.)</p>\n\n<p>Thus:</p>\n\n<pre><code>var Joe = make_person_object(\"Joe\", \"Smith\", 23);\nconsole.log(Joe); // undefined\nconsole.log(window.firstname) // \"Joe\" (oops)\n\nvar John = new make_person_object(\"John\", \"Smith\", 45);\nconsole.log(John); // {firstname: \"John\", lastname: \"Smith\", age: 45}\n</code></pre>\n\n<p>Also, as @RobG points out, this way of doing things creates a reference to the <code>prototype</code> property of <code>make_person_object</code> on each \"Person\" we create.  This enables us to add methods and attributes to persons after the fact:</p>\n\n<pre><code> // Assuming all that came before\nmake_person_object.prototype.full_name = \"N/A\";\nmake_person_object.prototype.greet = function(){ \n    console.log(\"Hello! I'm\", this.full_name, \"Call me\", this.firstname); \n};\nJohn.full_name // \"N/A\"\nJohn.full_name = \"John Smith\"; \nmake_person_object.full_name // Still \"N/A\"\nJohn.greet(); // \"Hello! I'm John Smith Call me John\"\n</code></pre>\n\n<p>Convention has it that constructor functions like <code>make_person_object</code> are capitalized, singularized and \"nouned\" (for lack of a better term) -- thus we would have a <code>Person</code> constructor, rather than a <code>make_person_object</code> which might be mistaken for an ordinary function.</p>\n\n<p><strong>See also:</strong>  </p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Special/new\">The <code>new</code> operator</a> </li>\n<li>bobince's great <a href=\"http://stackoverflow.com/questions/1595611/how-to-properly-create-a-custom-object-in-javascript#1598077\">introduction to subclassing in JavaScript</a> (both with <em>and</em> without prototype inheritance.)</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>Yes.  In JavaScript, technically everything is an object.  When you use new, it creates an instance of the Tip object and then calls the Tip function as if it were a constructor.</p>\n\n<p>If you want to add functions to the Tip object, you should add them to Tip's prototype like so:</p>\n\n<pre><code>Tip.prototype.getContent = function() {\n    return this.content;\n};\n</code></pre>\n\n<p>If you have that, and then you do:</p>\n\n<pre><code>var tip = new Tip(\"this  is my content.\");\nalert(tip.getContent());\n</code></pre>\n\n<p>It'll show a message saying \"this is my content.\"</p>\n\n<p>You can only use new, however, if the object has a functional implementation.  So this won't work:</p>\n\n<pre><code>var Tip = { content: txt, show: false };\nvar tipObj = new Tip();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>You can call a function as an object?  for example :  </p>\n\n<pre><code>    function Tip(txt){      \n            this.content = txt;  \n            this.shown = false;  \n    }    \n</code></pre>\n\n<p>And :</p>\n\n<pre><code> var tip = new Tip(elem.attr('title'));\n</code></pre>\n\n<p>My questions:  </p>\n\n<ol>\n<li>You can call 'new' for a function, like we would for an object?  </li>\n<li>The use of \"this\" is made possible, because we 'use' that function as an object?  </li>\n</ol>\n",
            "last_activity_date": 1308942736,
            "question_id": 5958417,
            "score": 13,
            "tags": [
                "javascript",
                "function",
                "object"
            ],
            "title": "javascript : function and object...?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Because <code>{}[true]</code> does not return <code>true</code>, but <code>undefined</code>, and <code>undefined</code> is evaluated as <code>false</code>:</p>\n\n<p><a href=\"http://jsfiddle.net/67GEu/\">http://jsfiddle.net/67GEu/</a></p>\n\n<pre><code>'use strict';\nvar b = {}[true];\nalert(b); // undefined\nb = !{}[true];\nalert(b); // true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>Because</p>\n\n<pre><code>{}[true]\n</code></pre>\n\n<p>evaluates to <code>undefined</code>, and <code>!undefined</code> is <code>true</code>.</p>\n\n<p>From @schlingel:</p>\n\n<p><code>true</code> is used as key and <code>{}</code> as hash map. There doesn't exist an property with the key <code>true</code> so it returns <code>undefined</code>. Not <code>undefined</code> is <code>true</code>, as expected.</p>\n\n<p>Console session (<a href=\"http://en.wikipedia.org/wiki/Node.js\">Node.js</a> <code>[0.10.17]</code>):</p>\n\n<pre><code>&gt; {}[true]\nundefined\n&gt; !{}[true]\ntrue\n&gt; [true]\n[ true ]\n&gt; ![true]\nfalse\n&gt;\n</code></pre>\n\n<p>However, in the <a href=\"http://en.wikipedia.org/wiki/Google_Chrome\">Google Chrome</a> console:</p>\n\n<pre><code>&gt; !{}[true]\ntrue\n</code></pre>\n\n<p>So, no inconsistencies. You're probably using an old version of the JavaScript VM. For those who need further evidence:</p>\n\n<p><img src=\"http://i.stack.imgur.com/3otIm.png\" alt=\"Enter image description here\"></p>\n\n<h2>UPDATE</h2>\n\n<p>With <a href=\"http://en.wikipedia.org/wiki/Mozilla_Firefox\">Firefox</a>, it also evaluates to <code>true</code>:</p>\n\n<p><img src=\"http://i.stack.imgur.com/KMwjT.png\" alt=\"Enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>You're not reversing the value of it. </p>\n\n<pre><code>![true] != [!true]\n</code></pre>\n\n<p>Check this out: <a href=\"http://stackoverflow.com/questions/5591139/why-is-true-false-true-returning-true\">Why is !true ? &#39;false&#39; : &#39;true&#39; returning &#39;true&#39;?</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<ul>\n<li><code>{}</code> is an object with no properties.</li>\n<li>Since <code>[]</code> immediately follows an object, it means \"Access a property of this name\" and not \"Create an array\"</li>\n<li><code>true</code> is a boolean, but is being used as an property name so it is cast to a string (<code>\"true\"</code>)</li>\n<li>The object does not have a property called <code>true</code> (since it has no properties) so <code>{}['true']</code> is <code>undefined</code></li>\n<li><code>!undefined</code> casts <code>undefined</code> to a boolean (<code>false</code>)</li>\n<li>The not operator turns <code>false</code> into <code>true</code>.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This happens because <code>{}</code> in your meaning is not literal presentation of <code>Object</code>, but empty scope ( or empty code block ):</p>\n\n<pre><code>{ var a = 1 }[true] // [true] (do the same thing)\n</code></pre>\n\n<p>It just evaluates code inside scope and then shows you your array.</p>\n\n<p>And from your </p>\n\n<pre><code>!{}[true]\n</code></pre>\n\n<p>Just converts to int this scope and return same array true. There is no bool checks in this code.</p>\n\n<p>And if you will try to check result from <code>{}[true]</code> you will get your <code>false</code>:</p>\n\n<pre><code>{}[true] -&gt; [true] -&gt; ![true] -&gt; false\n</code></pre>\n\n<p>As there is no more any scope.</p>\n\n<p>So <code>!</code> in your question do the same as:</p>\n\n<pre><code>!function() {\n   //...\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I believe that's because plain <code>{}[true]</code> is parsed as an empty statement block (not an object literal) followed by an array containing <code>true</code>, which is <code>true</code>.</p>\n\n<p>On the other hand, applying the <code>!</code> operator makes the parser interpret <code>{}</code> as an object literal, so the following <code>{}[true]</code> becomes a member access that returns <code>undefined</code>, and <code>!{}[true]</code> is indeed <code>true</code> (as <code>!undefined</code> is <code>true</code>).</p>\n",
                    "is_accepted": true,
                    "score": 163
                },
                {
                    "body": "<p>The reason for the confusion is down to a misunderstanding of your first assertion:</p>\n\n<p><code>{}[true]</code> is <code>[true]</code></p>\n\n<p>What you're seeing when you run it is the result of an ambiguity. Javascript has a defined set of rules as to how to handle ambiguities like this, and in this case, it breaks what you see as a signle statement down into two separate statements.</p>\n\n<p>So Javascript sees the above code as two separate statements: Firstly, there is a <code>{}</code>, and then there is an entirely separate <code>[true]</code>. The second statement is what is giving you the result <code>[true]</code>. The first statement <code>{}</code> is effetively entirely ignored.</p>\n\n<p>You can prove this by trying the following:</p>\n\n<pre><code>({}[true])\n</code></pre>\n\n<p>ie wrapping the whole thing in brackets to force the interpreter to read it as a single statement.</p>\n\n<p>Now you'll see that the actual value of your statement is <code>undefined</code>. (this will also help us later to understand the next part)</p>\n\n<p>Now we know that the initial part of your question is a red herring, so let's move onto the final part of the question:</p>\n\n<blockquote>\n  <p>So why does !{}[true] evaluate to true?</p>\n</blockquote>\n\n<p>Here, we have the same statement, but with a <code>!</code> appended to the front of it.</p>\n\n<p>In this case, Javascript's rules tell it to evaluates the entire thing as a single statement.</p>\n\n<p>Refer back to what happened when we wrapped the earlier statement in brackets; we got <code>undefined</code>. This time, we are effectively doing the same thing, but putting a <code>!</code> in front of it. So your code can be simplified as <code>!undefined</code>, which is <code>true</code>.</p>\n\n<p>Hopefully that explains it a bit.</p>\n\n<p>It is a complex beast, but the lesson to learn here is to use brackets around your statements when evaluating them in the console, to avoid spurious results like this.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p><code>{}[true]</code> is <code>undefined</code>. To find that write this:</p>\n\n<pre><code>a = {};\na[true] === undefined // true\n</code></pre>\n\n<p>or simply:</p>\n\n<pre><code>({})[true] === undefined // true\n</code></pre>\n\n<p>We know that <code>!undefined</code> is <code>true</code>.</p>\n\n<hr>\n\n<p>From <a href=\"http://stackoverflow.com/a/17269376/1420197\">@Benjamin Gruenbaum's answer</a>:</p>\n\n<blockquote>\n  <p><a href=\"https://chromium.googlesource.com/chromium/blink.git/+/master/Source/core/inspector/InjectedScriptSource.js\">Chrome dveloper tools does the following</a>:</p>\n</blockquote>\n\n<pre><code>  try {\n      if (injectCommandLineAPI &amp;&amp; inspectedWindow.console) {\n          inspectedWindow.console._commandLineAPI = new CommandLineAPI(this._commandLineAPIImpl, isEvalOnCallFrame ? object : null);\n          expression = \"with ((window &amp;&amp; window.console &amp;&amp; window.console._commandLineAPI) || {}) {\\n\" + expression + \"\\n}\";\n      }\n      var result = evalFunction.call(object, expression);\n      if (objectGroup === \"console\")\n          this._lastResult = result;\n      return result;\n  } \n  finally {\n      if (injectCommandLineAPI &amp;&amp; inspectedWindow.console)\n          delete inspectedWindow.console._commandLineAPI;\n  }\n</code></pre>\n\n<blockquote>\n  <p>So basically, it performs a <code>call</code> on the object with the expression. The expression being:</p>\n</blockquote>\n\n<pre><code>with ((window &amp;&amp; window.console &amp;&amp; window.console._commandLineAPI) || {}) {\n    {}+{};// &lt;-- This is your code\n}\n</code></pre>\n\n<blockquote>\n  <p>So, as you can see, the expression is being evaluted directly, without the wrapping parenthesis. </p>\n</blockquote>\n\n<p>More information can be found in <a href=\"http://stackoverflow.com/q/17268468/1420197\">this question</a>.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>The answers here are good, here's a breakdown in pseudo-code:</p>\n\n<ul>\n<li><code>{}['whatever']</code> = empty block, NewArray('whatever') = NewArray('whatever')</li>\n<li><code>{}[true]</code> = empty block, NewArray(true) = NewArray(true)</li>\n<li><code>!{}['whatever']</code> = LogicalNOT(convertToBool(NewObject.whatever)) = LogicalNOT(convertToBool(undefined)) = LogicalNOT(false) = true</li>\n<li><code>({}['whatever'])</code> = Grouping(NewObject.whatever) = Grouping(undefined) = undefined</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<h1>Let's Play a Little More!</h1>\n\n<p><strong>First, let's have some fun!:</strong></p>\n\n<pre><code>//----------#01#-----------\n{}[true]; //[true]\n\n//----------#02#-----------\nvar a = {}[true]; \n      console.log(a); //undefined\n\n//----------#03#-----------\n{ b: 12345 }[true]; //[true]\n\n//----------#04#-----------\n{ b: 12345 }[\"b\"]; //evaluates to [\"b\"] ?!?\n\n//----------#05#-----------\n{ b: 12345 }.b; // \"Unexpected token .\"\n\n//----------#06#-----------\n({ b: 12345 }).b; //12345\n\n//----------#07#-----------\nvar c = { b: 12345 }.b; \n      console.log(c); //12345\n\n//----------#08#-----------\nvar c = { b: 12345 }[\"b\"];\n      console.log(c); //12345\n\n//----------#09#-----------\n{ true: 54321 }[true]; // \"SyntaxError: Unexpected token : \"\n\n//----------#10#-----------\nvar d = { true: 54321 }[true]; //No error here \u00ac\u00ac\n      console.log(d); //54321\n\n//----------#11#-----------\n!{}[true]; // true\n</code></pre>\n\n<hr>\n\n<h2>Ok, let's try to understand these crazy behaviors, one by one:</h2>\n\n<p><strong>1)</strong> Here, the <code>{}</code> is parsed as an empty code block. Without an assign, negation, grouping (with parentheses) or any syntax which indicates to the parser that this <code>{}</code> is an object literal, the default assumption is to think it is simply a useless empty block. </p>\n\n<p>This is a proof of this behavior:</p>\n\n<pre><code>{ alert(123) }[true]\n</code></pre>\n\n<p>The code above will show the alert normally, and will be evaluated as <code>[true]</code>, in the same way <code>{}[true]</code> is.</p>\n\n<h3>Block Statements Without Semicolons</h3>\n\n<p>A block-type statement doesn't need a semicolon after it.</p>\n\n<p><strong>For instance:</strong></p>\n\n<pre><code>for(var i=0; i &lt; 1; i++){}function a(){};alert(\"Passed here!\");if(true){}alert(\"Passed here too!\")\n</code></pre>\n\n<p><strong>Both alerts are shown.</strong></p>\n\n<p>So, we can see that an empty block statement, without a semicolon, is valid and simply does nothing. This way, when you enter <code>{}[true]</code> in the Developer Tools (or Firebug) Console, the evaluated value will be the value of the last <a href=\"http://es5.github.io/#x12.4\" rel=\"nofollow\">expression statement</a>. In this case, the last expression statement is <code>[true]</code>.</p>\n\n<p><strong>2)</strong> In an assignment context, the parser will make sure that <code>{}</code> is an object literal. When you do var a = <code>{}[true]</code>, you remove any ambiguity and tip the parser off that <code>{}</code> is not a block statement.<br>\nSo, here, you're trying to get a value with a key <code>\"true\"</code> from an empty object. Obviously, there's no key-value pair with this key name. This way, the a variable is undefined.</p>\n\n<h3>Reserved words as Object keys</h3>\n\n<p><em>ECMAScript 5</em> allows object keys to be reserved words. So, the following keys are legal:</p>\n\n<pre><code>var obj = {if: 111, for: 222, switch: 333, function: 444, true: 555}\n</code></pre>\n\n<p><strong>3)</strong> The same explanation of example <strong>1</strong>. But...\nIf the <code>{ b: 12345 }</code> part is treated as a block statement, what's the type of the <code>b: 12345</code> statement??</p>\n\n<p>... (?????)</p>\n\n<p>It's a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label\" rel=\"nofollow\">label statement</a>, you already saw it before... It's used in loops and in <code>switch</code>. Here are a few interesting links about label statements: <a href=\"http://stackoverflow.com/questions/4906762/is-using-labels-in-javascript-bad-practice\">1</a>, (2)[Best way to break from nested loops in Javascript?, (3)[How to break 2 loops in javascript?.</p>\n\n<p><strong>NOTE:</strong> Just try to evaluate this:</p>\n\n<pre><code>{a: 1, b: 2} //=&gt;&gt;&gt;SyntaxError: Unexpected token :\n</code></pre>\n\n<p>Label statements can't be separeted by the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comma_Operator\" rel=\"nofollow\">comma</a> operator, you would need to separate them with a semicolon. So this is valid: <code>{a: 1; b: 2}</code></p>\n\n<p><strong>4)</strong> See the explanations for the examples <strong>1</strong> and <strong>3</strong>...</p>\n\n<p><strong>5)</strong> One more time, we have a <code>{ b: 12345 }</code> being treated as a code block, and you're trying to access a property of a code block by using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Member_Operators#Dot_notation\" rel=\"nofollow\">dot notation</a>, and obviously, this is not allowed, and the parser throws an <code>\"Unexpected token :\"</code> exception.</p>\n\n<p><strong>6)</strong> The code is almost identical to the above example, but by surrounding the <code>{ b: 12345 }</code> statement with the <a href=\"http://www.ssicom.org/js/x33620.htm\" rel=\"nofollow\">expression grouping operator</a>, the parser will know that is an object. This way, you'll be able to access the <code>\"b\"</code> property normally.</p>\n\n<p><strong>7)</strong> Remember the example <strong>2</strong>, we have an assignment here, the parser knows that <code>{ b: 12345 }</code> is an object.</p>\n\n<p><strong>8)</strong> Identical to the above example, but instead of the dot notation, here we're using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Member_Operators#Bracket_notation\" rel=\"nofollow\">bracket notation</a>.</p>\n\n<p><strong>9)</strong> I already said that this <code>\"identifier: value\"</code> syntax inside a block statement is a label. But, you also have to know that a label name can't be a reserved keyword (the opposite of object property names). When we tried to define a label called <code>\"true\"</code>, we got a <code>SyntaxError</code>.</p>\n\n<p><strong>10)</strong> Again, we're dealing with an object. No problems using reserved words here. =)</p>\n\n<p><strong>11)</strong> Finally, we have this: <code>!{}[true]</code></p>\n\n<p>Let's separate the things here: </p>\n\n<p>a)  By doing a negation, we're informing to the parser that the <code>{}</code> is <strong>an object</strong>. </p>\n\n<p>b) As shown in the example <strong>2</strong>, a <code>{}</code> object doesn't have a property called <code>true</code>, so this expression will evaluate to <code>undefined</code>.</p>\n\n<p>c) The final result is the negation of <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\" rel=\"nofollow\"><code>undefined</code></a> value. Javascript performs <a href=\"http://www.2ality.com/2013/04/quirk-implicit-conversion.html\" rel=\"nofollow\">implicity type conversion</a>, and <a href=\"http://www.sitepoint.com/javascript-truthy-falsy/\" rel=\"nofollow\"><code>undefined</code> value is falsy</a>. </p>\n\n<p>d) So, the negation of <code>false</code> is... <code>true</code>!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><code>{}[true]</code> is <code>[true]</code> and <code>![true]</code> should be <code>false</code>.</p>\n\n<p>So why does  <code>!{}[true]</code> evaluate to <code>true</code>?</p>\n",
            "last_activity_date": 1390015989,
            "question_id": 19702805,
            "score": 121,
            "tags": [
                "javascript"
            ],
            "title": "Why does !{}[true] evaluate to true in JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Your selector is retrieving the text box's surrounding <code>&lt;div class='textBoxEmployeeNumber'&gt;</code> instead of the input inside it.</p>\n\n<pre><code>// Access the input inside the div with this selector:\n$(function () {\n  $('.textBoxEmployeeNumber input').val(\"fgg\");\n});\n</code></pre>\n\n<h3>Update after seeing output HTML</h3>\n\n<p>If the ASP.NET code reliably outputs the HTML <code>&lt;input&gt;</code> with an id attribute <code>id='EmployeeId'</code>, you can more simply just use:</p>\n\n<pre><code>$(function () {\n  $('#EmployeeId').val(\"fgg\");\n});\n</code></pre>\n\n<p>Failing this, you will need to verify in your browser's error console that you don't have other script errors causing this to fail.  The first example above <a href=\"http://jsfiddle.net/a2fDQ/\">works correctly in this demonstration.</a></p>\n",
                    "is_accepted": true,
                    "score": 147
                },
                {
                    "body": "<pre><code>$(document).ready(function () {\n    $('#EmployeeId').val(\"fgg\");\n\n    //Or\n    $('.textBoxEmployeeNumber &gt; input').val(\"fgg\");\n\n    //Or\n    $('.textBoxEmployeeNumber').find('input').val(\"fgg\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>for <code>jQuery</code> we can use below:</p>\n\n<p>by input name:</p>\n\n<pre><code>$('input[name=\"textboxname\"]').val('some value');\n</code></pre>\n\n<p>by input class:</p>\n\n<pre><code>$('input[type=text].textboxclass').val('some value');\n</code></pre>\n\n<p>by input id:</p>\n\n<pre><code>$('#textboxid').val('some value');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>For element with id</p>\n\n<pre><code>&lt;input id=\"id_input_text16\" type=\"text\" placeholder=\"Ender Data\"&gt;&lt;/input&gt;\n</code></pre>\n\n<p>You can set the value as</p>\n\n<pre><code>$(\"#id_input_text16\").val(\"testValue\");\n</code></pre>\n\n<p>Documentation <a href=\"http://api.jquery.com/val/\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an input text which is this:</p>\n\n<pre><code>&lt;div class=\"editor-label\"&gt;\n    @Html.LabelFor(model =&gt; model.EmployeeId, \"Employee Number\")\n&lt;/div&gt;\n\n&lt;div class=\"editor-field textBoxEmployeeNumber\"&gt;\n    @Html.EditorFor(model =&gt; model.EmployeeId) \n    @Html.ValidationMessageFor(model =&gt; model.EmployeeId)\n&lt;/div&gt;\n</code></pre>\n\n<p>I want to set the value of this input text using jquery so i did this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n    $(function() {\n        $('.textBoxEmployeeNumber').val(\"fgg\");\n    });\n&lt;/script&gt; \n</code></pre>\n\n<p>however, it is not working... what is the error in my syntax?</p>\n",
            "last_activity_date": 1401872744,
            "question_id": 10611170,
            "score": 91,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "asp.net-mvc-3"
            ],
            "title": "How to set value of input text using jQuery"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>You could give the target parent an id or class (e.g. myParent) and reference is with <code>$('#element').parents(\".myParent\")</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Depends on your needs, if you know what parent your looking for you can use the .parents() selector.</p>\n\n<p>E.G:\n<a href=\"http://jsfiddle.net/HenryGarle/Kyp5g/2/\">http://jsfiddle.net/HenryGarle/Kyp5g/2/</a></p>\n\n<pre><code>&lt;div id=\"One\"&gt;\n    &lt;div id=\"Two\"&gt;\n        &lt;div id=\"Three\"&gt;\n            &lt;div id=\"Four\"&gt;\n\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n\nvar top = $(\"#Four\").parents(\"#One\");\n\nalert($(top).html());\n</code></pre>\n\n<p><strong>Example using index:</strong></p>\n\n<pre><code>//First parent - 2 levels up from #Four\n// I.e Selects div#One\nvar topTwo = $(\"#Four\").parents().eq(2);\n\nalert($(topTwo ).html());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>A faster way is to use javascript directly, eg.</p>\n\n<pre><code>var parent = $(innerdiv.get(0).parentNode.parentNode.parentNode);\n</code></pre>\n\n<p>This runs significantly faster on my browser than chaining jQuery <code>.parent()</code> calls. </p>\n\n<p>See: <a href=\"http://jsperf.com/jquery-get-3rd-level-parent\" rel=\"nofollow\">http://jsperf.com/jquery-get-3rd-level-parent</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Since <a href=\"http://api.jquery.com/parents/\">parents()</a> returns the ancestor elements ordered from the closest to the outer ones, you can chain it into <a href=\"http://api.jquery.com/eq/\">eq()</a>:</p>\n\n<pre><code>$('#element').parents().eq(0);  // \"Father\".\n$('#element').parents().eq(2);  // \"Great-grandfather\".\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 103
                },
                {
                    "body": "<p>It's simple. Just use </p>\n\n<pre><code>$(selector).parents().eq(0); \n</code></pre>\n\n<p>where 0 is the parent level (0 is parent, 1 is parent's parent etc)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could use something like this:</p>\n\n<pre><code>(function($) {\n    $.fn.parentNth = function(n) {\n        var el = $(this);\n        for(var i = 0; i &lt; n; i++)\n            el = el.parent();\n\n        return el;\n    };\n})(jQuery);\n\nalert($(\"#foo\").parentNth(2).attr(\"id\"));\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Xeon06/AsNUu/\" rel=\"nofollow\">http://jsfiddle.net/Xeon06/AsNUu/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just add <code>:eq()</code> selector like this:</p>\n\n<pre><code>$(\"#element\").parents(\":eq(2)\")\n</code></pre>\n\n<p>You just specify index which parent: 0 for immediate parent, 1 for grand-parent, ...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you plan on reusing this functionality, the optimal solution is to make a jQuery plugin:</p>\n\n<pre><code>(function($){\n$.fn.nthParent = function(n){\n  var $p = $(this);\n  while ( n-- &gt;= 0 )\n  {\n    $p = $p.parent();\n  }\n  return $p;\n};\n}(jQuery));\n</code></pre>\n\n<p>Of course, you may want to extend it to allow for an optional selector and other such things.</p>\n\n<p>One note: this uses a <code>0</code> based index for parents, so <code>nthParent(0)</code> is the same as calling <code>parent()</code>. If you'd rather have <code>1</code> based indexing, use <code>n-- &gt; 0</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>you can also use :</p>\n\n<pre><code>$(this).ancestors().eq(n) \n</code></pre>\n\n<p>ex: <code>$(this).ancestors().eq(2)</code> -> the parent of the parent of <code>this</code>.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>using eq appears to grab the dynamic DOM whereas using .parent().parent() appears to grab the DOM that was initially loaded (if that is even possible).</p>\n\n<p>I use them both on an element that has classes applied it to on onmouseover. eq shows the classes while .parent().parent() doesnt.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>When I want to get, for example, the 3rd level parent of the element I must write <code>$('#element').parent().parent().parent()</code> Is there a more optimal method for this?</p>\n",
            "last_activity_date": 1422561593,
            "question_id": 7093659,
            "score": 65,
            "tags": [
                "javascript",
                "jquery",
                "parent"
            ],
            "title": "How do I get the n-th level parent of an element in jQuery?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Validation of .js files is handled by the JavaScript Validator, but that's a <strong>Builder</strong>, not something that plugs into the general Validation Framework.  If you change the Errors/Warnings preferences, a Clean and build should show you the results.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<ol>\n<li>Right click your project</li>\n<li>Select Properties -> JavaScript -> Include</li>\n<li>Select Source tab (It looks similar to the Java Build Path Source tab)</li>\n<li>Expand source folder</li>\n<li>Highlight Excluded pattern</li>\n<li>Click Edit button</li>\n<li>Click Add button next to Exclusion patterns box.</li>\n<li>Click Browse button and select the JavaScript source by name.</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 149
                },
                {
                    "body": "<p>If you want to remove the JavaScript validation from a project completely, you can just remove it from the .project file.</p>\n\n<ul>\n<li>Open your project's .project file in a text editor.</li>\n<li>Remove the line <code>&lt;nature&gt;org.eclipse.wst.jsdt.core.jsNature&lt;/nature&gt;</code></li>\n<li>Refresh your project</li>\n</ul>\n\n<p>Now if you go into your project properties, you'll notice the JavaScript option is gone entirely.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You actually have to disable the global builder settings , to do that :</p>\n\n<pre><code>Right Click Project =&gt; Build Path =&gt; Configure Build Path =&gt; Builders\n</code></pre>\n\n<p>In the right hand side , make sure <code>JavaScript Validator</code> is Unchecked, if not uncheck it.</p>\n\n<p>Then Save the Configuration and make a clean build.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>If none of the above steps(<em>unchecking,excluding etc</em>) work....After disabling the validator...delete the js file and add it back into the Workspace.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Assuming you do the steps as specified in the accepted answer of this thread, As an example, in order to exclude all .js files from dojo folder recursively, add <code>dojo/**/*.js</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I believe this is caused by <a href=\"https://bugs.eclipse.org/bugs/show_bug.cgi?id=349020\" rel=\"nofollow\">this bug</a> in Eclipse Web Tools &lt;3.5.2</p>\n\n<p>It also seems to only typically affect minified Javascript (it is sensitive to certain patterns in function declarations - see link)</p>\n\n<p>@Marek describes a work around to remove the errors if you are using an affected version of Eclipse Web Tools. However, a better solution might be to update to Eclipse >=4.3 and use Eclipse Web Tools >=3.5.2</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The validation in Eclipse is catching what it deems \"errors\" in the framework I've been using just fine.</p>\n\n<ul>\n<li><p><code>Project -&gt; Properties -&gt; Validation -&gt; \"Suspend all validators\"</code> doesn't work.</p></li>\n<li><p><code>Project -&gt; Properties -&gt; Javascript -&gt; Validation -&gt; Errors/Warnings -&gt; [Unchecked] \"Enable Javascript semantic validation\"</code> doesn't work either.</p></li>\n<li><p>Enabling the above-mentioned checkbox and setting all validation issues to \"Ignore\" doesn't work either.</p></li>\n</ul>\n\n<p>Each time one of these settings changes, it does a build and immediately all the \"errors\" are found and subsequently prevent an otherwise known-good build.</p>\n",
            "last_activity_date": 1407955320,
            "question_id": 7102299,
            "score": 60,
            "tags": [
                "javascript",
                "eclipse"
            ],
            "title": "Eclipse: Javascript validation disabled. but still generating errors?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>The easy way, if you have a fixed width and height:</p>\n\n<pre><code>#divElement{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-top: -50px;\n    margin-left: -50px;\n    width: 100px;\n    height: 100px;\n}\u200b\n</code></pre>\n\n<p>Please don't use inline styles! Here is a working example <a href=\"http://jsfiddle.net/S5bKq/\">http://jsfiddle.net/S5bKq/</a>.</p>\n",
                    "is_accepted": true,
                    "score": 69
                },
                {
                    "body": "<p>If you have a fixed <code>div</code> just absolute position it at 50% from the top and 50% left and negative margin top and left of half the height and width respectively. Adjust to your needs:</p>\n\n<pre><code>div {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 500px;\n    height: 300px;\n    margin-left: -250px;\n    margin-top: -150px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Set the width and height and you're good.</p>\n\n<pre><code>div {\n  position: absolute;\n  margin: auto;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 200px;\n  height: 200px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>With transforms being more ubiquitously supported these days, you can do this without knowing the width/height of the popup</p>\n\n<pre><code>.popup {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    -webkit-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n}\n</code></pre>\n\n<p>Easy! JSFiddle here: <a href=\"http://jsfiddle.net/LgSZV/\">http://jsfiddle.net/LgSZV/</a></p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>CSS Code</p>\n\n<pre><code>.centerDiv\n{\n    width: 50%;\n    margin: 0 auto;\n}\n</code></pre>\n\n<p>HTML Code</p>\n\n<pre><code>&lt;div class=\"centerDiv\"&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS Examples.... <a href=\"http://www.corelangs.com/css/box/center-div.html\" rel=\"nofollow\">Div center of screen</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>try this:</p>\n\n<pre><code>width:360px;\nheight:360px;\ntop: 50%; left: 50%;\nmargin-top: -160px; /* ( ( width / 2 ) * -1 ) */\nmargin-left: -160px; /* ( ( height / 2 ) * -1 ) */\nposition:absolute;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>try this</p>\n\n<pre><code>&lt;table style=\"height: 100%; left: 0; position: absolute; text-align: center; width: 100%;\"&gt;\n &lt;tr&gt;\n  &lt;td&gt;\n   &lt;div style=\"text-align: left; display: inline-block;\"&gt;\n    Your Html code Here\n   &lt;/div&gt;\n  &lt;/td&gt;\n &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>Or this</p>\n\n<pre><code>&lt;div style=\"height: 100%; left: 0; position: absolute; text-align: center; width: 100%; display: table\"&gt;\n &lt;div style=\"display: table-row\"&gt;\n  &lt;div style=\"display: table-cell; vertical-align:middle;\"&gt;\n   &lt;div style=\"text-align: left; display: inline-block;\"&gt;\n    Your Html code here\n   &lt;/div&gt;\n  &lt;/div&gt;\n &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Now, is more easy with HTML 5 and CSS 3:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;TODO supply a title&lt;/title&gt;\n        &lt;meta charset=\"UTF-8\"&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n        &lt;style&gt;\n            body &gt; div {\n                position: absolute;\n                top: 0;\n                bottom: 0;\n                left: 0;\n                right: 0;\n                display: flex;\n                justify-content: space-around;\n                align-items: center;\n                flex-wrap: wrap;\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div&gt;\n            &lt;div&gt;TODO write content&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>for me <code>&lt;center&gt;&lt;/center&gt;</code> tag worked just fine.. the div tag inside center tag is now in center of the screen</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to position a <code>&lt;div&gt;</code> (or a <code>&lt;table&gt;</code>) element at the center of the screen irrespective of screen size. In other words, the space left on 'top' and 'bottom' should be equal and space left on 'right' and 'left' sides should be equal. I would like to accomplish this with only CSS.</p>\n\n<p>I have tried the following but it is not working:</p>\n\n<pre><code> &lt;body&gt;\n  &lt;div style=\"top:0px; border:1px solid red;\"&gt;\n    &lt;table border=\"1\" align=\"center\"&gt;\n     &lt;tr height=\"100%\"&gt;\n      &lt;td height=\"100%\" width=\"100%\" valign=\"middle\" align=\"center\"&gt;\n        We are launching soon!\n      &lt;/td&gt;\n     &lt;/tr&gt;\n    &lt;/table&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n</code></pre>\n\n<p><strong>Note:</strong><br>\nIt is either way fine if the <code>&lt;div&gt;</code> element (or <code>&lt;table&gt;</code>) scrolls with the website or not. Just want it to be centered when the page loads. </p>\n",
            "last_activity_date": 1419101678,
            "question_id": 9862167,
            "score": 46,
            "tags": [
                "javascript",
                "css",
                "html"
            ],
            "title": "Positioning &lt;div&gt; element at center of screen"
        }
    ]
}
