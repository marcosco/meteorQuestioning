{
    "items": [
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Of course:</p>\n\n<p><a href=\"http://api.jquery.com/on/\">http://api.jquery.com/on/</a></p>\n\n<p><a href=\"http://api.jquery.com/off/\">http://api.jquery.com/off/</a></p>\n\n<p>The page for <code>live()</code> shows how to convert to <code>on()</code>:</p>\n\n<p><a href=\"http://api.jquery.com/live/\">http://api.jquery.com/live/</a></p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p><code>$(document).on('event', 'selector', function() {});</code> replaces <code>.live()</code>.</p>\n\n<p><code>$('selector').on('event', 'selector', function() {});</code> replaces <code>.delegate()</code>.</p>\n\n<p><code>$('selector').on('event', function() {});</code> replaces <code>.bind()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 85
                },
                {
                    "body": "<pre><code>$('rootselector').on('click', 'selector', function(){\n});\n</code></pre>\n\n<p>taken from <a href=\"http://api.jquery.com/on/\">http://api.jquery.com/on/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can have a look on all the deprecated functions of jquery depending on their versions</p>\n\n<p><a href=\"http://api.jquery.com/category/deprecated/\" rel=\"nofollow\">http://api.jquery.com/category/deprecated/</a></p>\n\n<p>Hope this helps you.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I saw on the jquery documentation that live() is deprecated. Is there a direct replacement function?</p>\n",
            "last_activity_date": 1382356152,
            "question_id": 9422069,
            "score": 35,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jquery&#39;s live() is deprecated. What do I use now?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can use <code>element.scrollTop</code> and <code>element.scrollLeft</code> to get the vertical and horizontal offset, respectively, that has been scrolled. <code>element</code> can be <code>document.body</code> if you care about the whole page. You can compare it to <code>element.offsetHeight</code> and <code>element.offsetWidth</code> (again, <code>element</code> may be the body) if you need percentages.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>this site has a function at the bottom that looks pretty thorough.</p>\n\n<p><a href=\"http://www.howtocreate.co.uk/tutorials/javascript/browserwindow\">http://www.howtocreate.co.uk/tutorials/javascript/browserwindow</a></p>\n\n<p>i found another page quite awhile ago with a handy chart of which properties work in which browsers but i can't find it at the moment.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>document.getScroll= function(){\n if(window.pageYOffset!= undefined){\n  return [pageXOffset, pageYOffset];\n }\n else{\n  var sx, sy, d= document, r= d.documentElement, b= d.body;\n  sx= r.scrollLeft || b.scrollLeft || 0;\n  sy= r.scrollTop || b.scrollTop || 0;\n  return [sx, sy];\n }\n}\n</code></pre>\n\n<p>returns an array with two integers- [scrollLeft, scrollTop]</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I did this for a <em><code>&lt;div&gt;</code></em> on <em>Chrome</em>.</p>\n\n<p><em>element</em><strong>.scrollTop</strong> - is the pixels hidden in top due to the scroll. With no scroll its value is 0.</p>\n\n<p><em>element</em><strong>.scrollHeight</strong> - is the pixels of the whole div.</p>\n\n<p><em>element</em><strong>.clientHeight</strong> - is the pixels that you see in your browser.</p>\n\n<pre><code>var a  =  element.scrollTop  ;\n</code></pre>\n\n<p>will be the position.</p>\n\n<pre><code>var b  =  element.scrollHeight - element.clientHeight  ;\n</code></pre>\n\n<p>will be the <strong>maximum</strong> value for <em>scrollTop</em>.</p>\n\n<pre><code>var c  =  a / b  ;\n</code></pre>\n\n<p>will be the percent of scroll <em>[from 0 to 1]</em>.</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>If you are using jQuery there is a perfect function for you: .scrollTop()</p>\n\n<p>doc here -> <a href=\"http://api.jquery.com/scrollTop/\" rel=\"nofollow\">http://api.jquery.com/scrollTop/</a></p>\n\n<p>note: you can use this function to retrieve OR set the position.</p>\n\n<p>see also: <a href=\"http://api.jquery.com/?s=scroll\" rel=\"nofollow\">http://api.jquery.com/?s=scroll</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to detect the position of the browser scrollbar with Javascript to decide where abouts in the page the current view is. My guess is that I'd have to detect where the thumb on the track is, and then the height of the thumb as a percentage of the total height of the track. Am I over-complicating it, or does Javascript offer an easier solution than that? Any ideas code-wise.</p>\n",
            "last_activity_date": 1424779764,
            "question_id": 2481350,
            "score": 27,
            "tags": [
                "javascript",
                "browser",
                "scroll"
            ],
            "title": "retrieve Scrollbar position with javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>If you're interested in jQuery solutions, <a href=\"http://plugins.jquery.com/project/suggest\" rel=\"nofollow\">jQuery Suggest</a> is a good implementation.</p>\n\n<p>No sense reinventing the wheel every time.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would personally use a <code>setInterval</code> that would monitor the textarea for changes and only perform AJAX callbacks when it detects a change is made.  every second should be fast and slow enough.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could combine a <code>keypress</code> event handler with <code>setTimeout</code> so that you send an Ajax request a set amount of time after a keypress, cancelling and restarting the timer if another keypress occurs before the timer finishes. Assuming you have a textarea with id 'myTextArea' and an Ajax callback function called <code>doAjaxStuff</code>:</p>\n\n<pre><code>function addTextAreaCallback(textArea, callback, delay) {\n    var timer = null;\n    textArea.onkeypress = function() {\n        if (timer) {\n            window.clearTimeout(timer);\n        }\n        timer = window.setTimeout( function() {\n            timer = null;\n            callback();\n        }, delay );\n    };\n    textArea = null;\n}\n\naddTextAreaCallback( document.getElementById(\"myTextArea\"), doAjaxStuff, 1000 );\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>Another alternative is to use a small jQuery plugin called <a href=\"http://briangrinstead.com/files/bindWithDelay/\">bindWithDelay</a>.  It uses the same setTimeout technique that the accepted answer has, but handles the timeouts transparently so your code is a little easier to read.  The <a href=\"http://github.com/bgrins/bindWithDelay/blob/master/bindWithDelay.js\">source code</a> can be seen on github.</p>\n\n<pre><code>$(\"#myTextArea\").bindWithDelay(\"keypress\", doAjaxStuff, 1000)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If you are using this functionality alot around the site and don't want to keep track of all of the setTimeout refs etc then i packaged this up into a plugin available <a href=\"http://github.com/dougle/jQuery-Ajax-Singleton\" rel=\"nofollow\">here</a>.</p>\n\n<p>The plugin adds a few options to the normal $.ajax method for buffering and canceling previous ajax calls.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are using underscore.js you can use the <a href=\"http://underscorejs.org/#debounce\" rel=\"nofollow\">debounce function</a>.</p>\n\n<p>Example (jQuery used for keyup):</p>\n\n<pre><code>$('#myTextArea').keyup(_.debounce(function(){\n    alert('hello');\n}, 500));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a textarea where people enter some text (naturally), and I want to make it so that an AJAX request is made every now and then to get some suggestions regarding what the textarea is about (like stack overflow's Related Questions, but for a textarea, not a text input). The problem is that I can't do an AJAX request at every keypress (it'd be useless and very resource consuming), and I am not sure what would be the most efficient way to do it (every X words? every X seconds? or something else?).</p>\n\n<p>What would be the best way to go about doing this?</p>\n\n<p>Thank you in advance.</p>\n",
            "last_activity_date": 1383063656,
            "question_id": 1620602,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "ajax"
            ],
            "title": "JavaScript / jQuery - Make an AJAX request when a user is typing in a textarea"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><em>Is the array sort callback function called many times during the course of the sort?</em></p>\n\n<p>Yes, that's exactly it. The callback is used to compare pairs of elements in the array as necessary to determine what order they should be in. That implementation of the comparison function is not atypical when dealing with a numeric sort. Details in <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\" rel=\"nofollow\">the spec</a> or on <a href=\"http://www.w3schools.com/jsref/jsref%5Fsort.asp\" rel=\"nofollow\">some</a> other <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Objects/Array/sort\" rel=\"nofollow\">more readable</a> sites.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The JavaScript interpreter has some kind of <a href=\"http://en.wikipedia.org/wiki/Sort_algorithm\">sort algorithm</a> implementation built into it. It calls the comparison function some number of times during the sorting operation. The number of times the comparison function gets called depends on the particular algorithm, the data to be sorted, and the order it is in prior to the sort.</p>\n\n<p>Some sort algorithms perform poorly on already-sorted lists because it causes them to make far more comparisons than in the typical case. Others cope well with pre-sorted lists, but have other cases where they can be \"tricked\" into performing poorly.</p>\n\n<p>There are many sorting algorithms in common use because no single algorithm is perfect for all purposes. The two most often used for generic sorting are <a href=\"http://en.wikipedia.org/wiki/Quicksort\">Quicksort</a> and <a href=\"http://en.wikipedia.org/wiki/Merge_sort\">merge sort</a>. Quicksort is often the faster of the two, but merge sort has some nice properties that can make it a better overall choice. Merge sort is <a href=\"https://en.wikipedia.org/wiki/Stable_sort#Stability\">stable</a>, while Quicksort is not. Both algorithms are parallelizable, but the way merge sort works makes a parallel implementation more efficient, all else being equal.</p>\n\n<p>Your particular JavaScript interpreter may use one of those algorithms or something else entirely. The <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">ECMAScript</a> standard <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.11\">does not specify which algorithm</a> a conforming implementation must use. It even explicitly disavows the need for stability.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<blockquote>\n  <p><em>Is the array sort callback function called many times during the course of the sort?</em></p>\n</blockquote>\n\n<p>Yes</p>\n\n<blockquote>\n  <p><em>If so, I'd like to know which two numbers are passed into the function each time</em></p>\n</blockquote>\n\n<p>You could find out your self with:</p>\n\n<pre><code>array.sort(function(a,b) {\n\n  console.log( \"comparing \" + a + \",  \" + b );\n  return a - b\n\n});\n</code></pre>\n\n<p><strong>EDIT</strong></p>\n\n<p>This is the output I've got:</p>\n\n<pre><code>25,8\n25,7\n8,7\n25,41\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Pairs of values are compared, one pair at a time. The pairs that are compared are an implementation detail--don't assume they will be the same on every browser. The callback can be anything (so you can sort strings or Roman numerals or anything else where you can come up with a function that returns 1,0,-1).</p>\n\n<p>One thing to keep in mind with JavaScript's sort is that it is not guaranteed to be stable. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<blockquote>\n  <p>Is the array sort callback function called many times during the course of the sort?</p>\n</blockquote>\n\n<p>Since this is a comparison sort, given N items, the callback function should be invoked on average (N * Lg N) times for a fast sort like <a href=\"http://en.wikipedia.org/wiki/Quicksort\" rel=\"nofollow\">Quicksort</a>.  If the algorithm used is something like <a href=\"http://en.wikipedia.org/wiki/Bubble%5Fsort\" rel=\"nofollow\">Bubble Sort</a>, then the callback function will be invoked on average (N * N) times.</p>\n\n<p>The minimum number of invocations for a comparison sort is (N-1) and that is only to detect an already sorted list (i.e. early out in Bubble Sort if no swaps occur).</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How does the following code sort this array to be in numerical order?     </p>\n\n<pre><code> var array=[25, 8, 7, 41]\n\n array.sort(function(a,b) {\n  return a - b})\n</code></pre>\n\n<p>I know that if the result of the computation is... </p>\n\n<p><strong>Less than 0</strong>: \"a\" is sorted to be a lower index than \"b\".<br />\n<strong>Zero:</strong> \"a\" and \"b\" are considered equal, and no sorting is performed.<br />\n<strong>Greater than 0:</strong> \"b\" is sorted to be a lower index than \"a\".<br /></p>\n\n<p>Is the array sort callback function called many times during the course of the sort?</p>\n\n<p>If so, I'd like to know which two numbers are passed into the function each time. I assumed it first took \"25\"(a) and \"8\"(b), followed by \"7\"(a) and \"41\"(b), so:</p>\n\n<p>25(a) - 8(b) = 17 (greater than zero, so sort \"b\" to be a lower index than \"a\"): 8, 25</p>\n\n<p>7(a) - 41(b) = -34 (less than zero, so sort \"a\" to be a lower index than \"b\": 7, 41</p>\n\n<p>How are the two sets of numbers then sorted in relation to one another?</p>\n\n<p>Please help a struggling newbie!</p>\n",
            "last_activity_date": 1407892097,
            "question_id": 1494713,
            "score": 18,
            "tags": [
                "javascript",
                "sorting",
                "comparator"
            ],
            "title": "How does Javascript&#39;s sort() work?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You could use a regex to replace everything except for your whitelist. But since the javascript is executed on the client (unless you're running the AOL http server) anyone who can modify the inputs can modify the code as well - so you're not really making it <strong>any</strong> more or less secure than it already is. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>you can try <a href=\"http://silentmatt.com/javascript-expression-evaluator/\">JavaScript Expression Evaluator</a>:</p>\n\n<blockquote>\n  <p>This library is a modified version of\n  Raphael Graf\u2019s ActionScript Expression\n  Parser. When I wrote the JavaScript\n  Function Plotter, I wanted a <strong>better\n  alternative to using JavaScript\u2019s eval\n  function</strong>. There\u2019s no security risk\n  currently, because you can only run\n  code in your own browser, but it\u2019s not\n  as convenient for math (Math.pow(2^x)\n  instead of 2^x, etc.).</p>\n</blockquote>\n\n<p>then your code will be like that:</p>\n\n<pre><code>console.info ( Parser.evaluate( \"2 * (3 + 4)\" ) ); //prints 14\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>As already mentioned, the most damage any user could do is pretty much what they could already do using the built-in console in any of the major browsers.  However, if you wanted to restrict the user to using <code>Math</code> properties/methods, you could write a simple regex to handle this for you.  Something like this should work:</p>\n\n<pre><code>function mathEval (exp) {\n    var reg = /(?:[a-z$_][a-z0-9$_]*)|(?:[;={}\\[\\]\"'!&amp;&lt;&gt;^\\\\?:])/ig,\n        valid = true;\n\n    // Detect valid JS identifier names and replace them\n    exp = exp.replace(reg, function ($0) {\n        // If the name is a direct member of Math, allow\n        if (Math.hasOwnProperty($0))\n            return \"Math.\"+$0;\n        // Otherwise the expression is invalid\n        else\n            valid = false;\n    });\n\n    // Don't eval if our replace function flagged as invalid\n    if (!valid)\n        alert(\"Invalid arithmetic expression\");\n    else\n        try { alert(eval(exp)); } catch (e) { alert(\"Invalid arithmetic expression\"); };\n}\n</code></pre>\n\n<p>I realize you didn't want to use <code>eval</code> for security reasons, but the regex should make it pretty safe as it rules out any words that aren't <em>direct</em> properties of the <code>Math</code> object and most non-math JS operators, including the assignment operator (<code>=</code>) and binary operators.  The harder method would be writing a tokenizer to parse the mathematical expression, because it's not a regular language.</p>\n\n<p>Feel free to try and break the <a href=\"http://jsfiddle.net/tYJQY/1\">working example</a> I wrote, if you can or if you notice a problem, leave a comment and I'll see what I can do to fix it.</p>\n\n<p><hr/>\nNote: Yi Jiang mentioned <a href=\"http://chat.stackoverflow.com/rooms/17/javascript\">in JavaScript chat</a> that it might also be useful to allow lower case for things like <code>Math.PI</code>.  If that's the case, you could just add the following <code>else if</code> statement in the replacement function:</p>\n\n<pre><code>else if (Math.hasOwnProperty($0.toUpperCase())\n    return \"Math.\"+$0.toUpperCase();\n</code></pre>\n\n<p>Add it between the <code>if</code> and <code>else</code> statement (<a href=\"http://jsfiddle.net/tYJQY/2/\">example</a>).</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can use the advanced expression parser from math.js, which does not use JavaScript's eval.</p>\n\n<p><a href=\"http://mathjs.org\" rel=\"nofollow\">http://mathjs.org</a></p>\n\n<p>Usage:</p>\n\n<pre><code>var ans = math.eval('2 * (3 + 4)');\n</code></pre>\n\n<p>or use the parser (which supports variable and function assignments):</p>\n\n<pre><code>var parser = math.parser();\nvar ans = parser.eval('2 * (3 + 4)');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I need to evaluate user-entered arithmetic expressions like \"2 * (3 + 4)\" in Javascript but I don't want to use <code>eval</code> for security reasons. </p>\n\n<p>I could strip out all the characters that are not numbers or operators but I'm not sure this would be safe anyway and it would be nice if the user could use functions like <code>cos</code>, <code>sqrt</code>, etc...</p>\n\n<p>Are there any Javascript libraries that do arithmetic expression evaluation?</p>\n",
            "last_activity_date": 1373973728,
            "question_id": 5066824,
            "score": 9,
            "tags": [
                "javascript",
                "parsing",
                "math"
            ],
            "title": "Safe evaluation of arithmetic expressions in Javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You could achieve this quite easily with <a href=\"http://jquery.com/\">jQuery</a> by registering for the click event of the anchors (with class=\"movie\") and using the <a href=\"http://api.jquery.com/load/\"><code>.load()</code></a> method to send an AJAX request and replace the contents of the summary div:</p>\n\n<pre><code>$(function() {\n    $('.movie').click(function() {\n        $('#summary').load(this.href);\n\n        // it's important to return false from the click\n        // handler in order to cancel the default action\n        // of the link which is to redirect to the url and\n        // execute the AJAX request\n        return false;\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://api.jquery.com/load/\" rel=\"nofollow\">jQuery.load()</a></p>\n\n<pre><code>$('#summary').load('ajax.php', function() {\n  alert('Loaded.');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;script&gt;\n\nfunction getSummary(id)\n{\n   $.ajax({\n\n     type: \"GET\",\n     url: 'Your URL',\n     data: \"id=\" + id, // appears as $_GET['id'] @ ur backend side\n     success: function(data) {\n           // data is ur summary\n          $('#summary').html(data);\n     }\n\n   });\n\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>And add onclick event in ur lists </p>\n\n<pre><code>&lt;a href=\"javascript:void(0);\" class=\"movie\" onclick=\"getSummary(1)\"&gt;Name of movie&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>try this</p>\n\n<pre><code>   function getmoviename(id)\n   {    \n     var p_url= yoururl from where you get movie name,\n     jQuery.ajax({\n     type: \"GET\",             \n     url: p_url,\n     data: \"id=\" + id,\n      success: function(data) {\n       $('#summary').html(data);\n\n    }\n });    \n }\n</code></pre>\n\n<p>and you html part is</p>\n\n<pre><code>  &lt;a href=\"javascript:void(0);\" class=\"movie\" onclick=\"getmoviename(youridvariable)\"&gt;\n  Name of movie&lt;/a&gt;\n\n  &lt;div id=\"summary\"&gt;Here is summary of movie&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This works for me and you don't need the inline script:</p>\n\n<p>Javascript:</p>\n\n<pre><code>    $(document).ready(function() {\n    $('.showme').bind('click', function() {\n\n        var id=$(this).attr(\"id\");\n        var num=$(this).attr(\"class\");\n        var poststr=\"request=\"+num+\"&amp;moreinfo=\"+id;\n        $.ajax({\n              url:\"testme.php\",\n              cache:0,\n              data:poststr,\n              success:function(result){\n                     document.getElementById(\"stuff\").innerHTML=result;\n               }\n        }); \n    });\n });\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>    &lt;div class='request_1 showme' id='rating_1'&gt;More stuff 1&lt;/div&gt;\n    &lt;div class='request_2 showme' id='rating_2'&gt;More stuff 2&lt;/div&gt;\n    &lt;div class='request_3 showme' id='rating_3'&gt;More stuff 3&lt;/div&gt;\n\n    &lt;div id=\"stuff\"&gt;Here is some stuff that will update when the links above are clicked&lt;/div&gt;\n</code></pre>\n\n<p>The request is sent to testme.php:</p>\n\n<pre><code>    header(\"Cache-Control: no-cache\");\n    header(\"Pragma: nocache\");\n\n    $request_id = preg_replace(\"/[^0-9]/\",\"\",$_REQUEST['request']);\n    $request_moreinfo = preg_replace(\"/[^0-9]/\",\"\",$_REQUEST['moreinfo']);\n\n    if($request_id==\"1\")\n    {\n        echo \"show 1\";\n    }\n    elseif($request_id==\"2\")\n    {\n        echo \"show 2\";\n    }\n    else\n    {\n        echo \"show 3\";\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>&lt;script&gt;\n\nfunction getSummary(id)\n{\n   $.ajax({\n\n     type: \"GET\",//post\n     url: 'Your URL',\n     data: \"id=\"+id, // appears as $_GET['id'] @ ur backend side\n     success: function(data) {\n           // data is ur summary\n          $('#summary').html(data);\n     }\n\n   });\n\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;script&gt;\n$(function(){\n    $('.movie').click(function(){\n        var this_href=$(this).attr('href');\n        $.ajax({\n            url:this_href,\n            type:'post',\n            cache:false,\n            success:function(data)\n            {\n                $('#summary').html(data);\n            }\n        });\n        return false;\n    });\n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a div which contains some text for the database:</p>\n\n<pre><code>&lt;div id=\"summary\"&gt;Here is summary of movie&lt;/div&gt;\n</code></pre>\n\n<p>And list of links:</p>\n\n<pre><code>&lt;a href=\"?id=1\" class=\"movie\"&gt;Name of movie&lt;/a&gt;\n&lt;a href=\"?id=2\" class=\"movie\"&gt;Name of movie&lt;/a&gt;\n..\n</code></pre>\n\n<p>The process should be something like this:</p>\n\n<ol>\n<li>Click on the link</li>\n<li>Ajax using the url of the link to pass data via GET to php file / same page</li>\n<li>PHP returns string</li>\n<li>The div is changed to this string</li>\n</ol>\n",
            "last_activity_date": 1418832359,
            "question_id": 6506873,
            "score": 8,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "ajax"
            ],
            "title": "Change DIV content using ajax, php and jQuery"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You don't even need to use a for loop, just use jQuery's <code>slice()</code> method and a bit of math.</p>\n\n<p>I've hosted a working demo on JS Bin: <a href=\"http://jsbin.com/upuwe\">http://jsbin.com/upuwe</a> (Editable via <a href=\"http://jsbin.com/upuwe/edit\">http://jsbin.com/upuwe/edit</a>)</p>\n\n<p>Here's the modified code:</p>\n\n<pre><code>var pagination_options = {\n  num_edge_entries: 2,\n  num_display_entries: 8,\n  callback: pageselectCallback,\n  items_per_page:3\n}\nfunction pageselectCallback(page_index, jq){\n  var items_per_page = pagination_options.items_per_page;\n  var offset = page_index * items_per_page;\n  var new_content = $('#hiddenresult div.result').slice(offset, offset + items_per_page).clone();\n  $('#Searchresult').empty().append(new_content);\n  return false;\n}\nfunction initPagination() {\n  var num_entries = $('#hiddenresult div.result').length;\n  // Create pagination element\n  $(\"#Pagination\").pagination(num_entries, pagination_options);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                }
            ],
            "body": "<p>Hopefully this is something that will be easy to remedy.  I'm having a bit of an issue understanding the <a href=\"http://plugins.jquery.com/project/pagination\" rel=\"nofollow\">jQuery Pagination</a> plugin.</p>\n\n<p>Essentially, all I am trying to do is load a PHP file, and then paginate the results.  I'm attempting to go off their example, but I am not yielding the results I'm looking for.</p>\n\n<p>Here's the JavaScript: </p>\n\n<pre><code> function pageselectCallback(page_index, jq){\n            var new_content = $('#hiddenresult div.result:eq('+page_index+')').clone();\n            $('#Searchresult').empty().append(new_content);\n            return false;\n        }\n        function initPagination() {\n            var num_entries = $('#hiddenresult div.result').length;\n            // Create pagination element\n            $(\"#Pagination\").pagination(num_entries, {\n                num_edge_entries: 2,\n                num_display_entries: 8,\n                callback: pageselectCallback,\n                items_per_page:3\n            });\n         }      \n        $(document).ready(function(){      \n            $('#hiddenresult').load('load.php', null, initPagination);\n        });      \n</code></pre>\n\n<p>Here's my HTML (after the PHP has been loaded):</p>\n\n<pre><code>        &lt;div id=\"Pagination\" class=\"pagination\"&gt; &lt;/div&gt;\n        &lt;br style=\"clear:both;\" /&gt;\n        &lt;div id=\"Searchresult\"&gt; &lt;/div&gt;\n\n       &lt;div id=\"hiddenresult\" style=\"display:none;\"&gt; \n         &lt;div class=\"result\"&gt;Result #1&lt;/div&gt;\n         &lt;div class=\"result\"&gt;Result #2&lt;/div&gt;\n         &lt;div class=\"result\"&gt;Result #3&lt;/div&gt;\n         &lt;div class=\"result\"&gt;Result #4&lt;/div&gt;\n         &lt;div class=\"result\"&gt;Result #5&lt;/div&gt;\n         &lt;div class=\"result\"&gt;Result #6&lt;/div&gt;\n         &lt;div class=\"result\"&gt;Result #7&lt;/div&gt;\n       &lt;/div&gt;\n</code></pre>\n\n<p>Basically, I am trying to show \"3\" items per page, but this is not working.  I'm assuming that somewhere, I am going to need to create a for loop in my JS, but I'm confused on how to do so.  <a href=\"http://d-scribe.de/webtools/jquery-pagination/lib/jquery_pagination/README\" rel=\"nofollow\">The documentation can be found here</a>.</p>\n",
            "last_activity_date": 1320430245,
            "question_id": 1523163,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "pagination",
                "jquery-pagination"
            ],
            "title": "jQuery Pagination Plugin"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>Parse the included JavaScript file as PHP</strong></p>\n\n<p>Create a .htaccess file in you JavaScript directory and add the following line.</p>\n\n<pre><code>AddHandler php-cgi .js\n</code></pre>\n\n<p><code>&lt;?php ?&gt;</code> tags till now be recognized by your JavaScript file.</p>\n\n<p><strong>Use Ajax to fetch the user ID</strong></p>\n\n<p>Create a file called getID.php which only echoes the users ID. Then in your JavaScript file you can use the following code.</p>\n\n<pre><code>$.get('getID.php', function(uid) {\n  alert('User ID is:' + uid);\n});\n</code></pre>\n\n<p><strong>Create a script tag before including the JavaScript printing user ID.</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nuserID = &lt;?php echo $_SESSION['user']; ?&gt;;\n&lt;/script&gt;\n</code></pre>\n\n<p>You will now have access to the users ID using variable userID.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In your PHP file you could set your user as a global varibale:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var ptamzzNamespace = {\n       sessionUser : '&lt;?php echo $_SESSION['user']; ?&gt;'\n    }        \n&lt;/script&gt;\n</code></pre>\n\n<p>Include this before including your external JavaScript code.</p>\n\n<p>Then in your JavaScript file you can use it:</p>\n\n<pre><code>$.(\"#btn').click (\n     function() {\n        alert(ptamzzNamespace.sessionUser);\n     }\n)\n</code></pre>\n\n<p><strong>Additionally:</strong>\nIf you're not sure if your session varibale can contain quotes itsself, you can use <code>addslashes()</code> to fix this problem:</p>\n\n<p><code>&lt;?php echo addslashes($_SESSION['user']); ?&gt;</code> even if this will maybe produce something you don't really want to display (because it produces a string with slashes) it will help that your code will not fail. (Thanks to Artefacto)</p>\n\n<p>Would this be an option for you?</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Set the userID (in PHP) in an input type hidden in your file. In your JavaScript code you can read the hidden input types value.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>try with below logic</p>\n\n<pre><code>print ' &lt;script type=\"text/javascript\" language=\"javascript\"&gt; \nfunction checkForm() \n{ \n     var username = \"'.$_SESSION['user'].'\"; \n     if( username == '') \n     { \n        alert('No Times selected'); \n        return false; \n      }\n}\n&lt;/script&gt;';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could set your server up to parse .js files as PHP. For example, in Apache config or .htaccess file:</p>\n\n<pre><code>&lt;FilesMatch \"scripts.js\"&gt;\n    AddHandler application/x-httpd-php5 .js\n&lt;/FilesMatch&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've a PHP session variable, <code>$_SESSION['user']</code>, alive throughout the session. In the head section, I've my JavaScript file included, <code>scripts.js</code>. </p>\n\n<p>How do I pass the session variable into the JavaScript file if I want something like the following.</p>\n\n<pre><code>$.(\"#btn').click (\n     function() {\n        alert('&lt;?php echo $_SESSION['user']; ?&gt;');\n     }\n)\n</code></pre>\n\n<p>As the <code>&lt;?php ?&gt;</code> isn't recognized in the JavaScript file, the code above doesn't work. So I've to put in the PHP file itself, but how do I keep it in the JavaScript file?</p>\n",
            "last_activity_date": 1400513172,
            "question_id": 5310216,
            "score": 7,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "Passing PHP variable into JavaScript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Seems like <code>Bla2</code> didn't inherit it from the <code>Bla</code> class!</p>\n</blockquote>\n\n<p>Right. You haven't done anything to hook up inheritance there, you've just created a member of <code>Bla2</code> called <code>base</code> which is a <code>Bla</code> instance. <code>base</code> is not a special identifier in JavaScript.</p>\n\n<p>The typical way to set up inheritance in JavaScript looks like this:</p>\n\n<pre><code>// The base constructor function\nfunction Base(x) {\n    // Base per-instance init\n    this.x = x;\n}\n\n// An example Base function\nBase.prototype.foo = function() {\n    console.log(\"I'm Base#foo, x = \" + this.x);\n};\n\n// The Derived constructor function\nfunction Derived(x, y) {\n    // Normally you need to call `Base` as it may have per-instance\n    // initialization it needs to do. You need to do it such that\n    // within the call, `this` refers to the current `this`, so you\n    // use `Function#call` or `Function#apply` as appropriate.\n    Base.call(this, x);\n\n    // Derived per-instance init\n    this.y = y;\n}\n\n// Make the Derived.prototype be a new object backed up by the\n// Base.prototype.    \nDerived.prototype = Object.create(Base.prototype);\n\n// Fix up the 'constructor' property\nDerived.prototype.constructor = Derived;\n\n// Add any Derived functions\nDerived.prototype.bar = function() {\n    console.log(\"I'm Derived#bar, x = \" + this.x + \", y = \" + this.y);\n};\n</code></pre>\n\n<p>...where <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-15.2.3.5\"><code>Object.create</code></a> is from ES5, but it's one of the things that can easily be mostly shimmed. (Or you can use a function that only does the bare minimum without trying to do all of <code>Object.create</code>; see below.) And then you use it:</p>\n\n<pre><code>var d = new Derived(4, 2);\nd.foo(); // \"I'm Base#foo, x = 4\"\nd.bar(); // \"I'm Derived#bar, x = 4, y = 2\"\n</code></pre>\n\n<p><a href=\"http://jsbin.com/ubikof\">Live example</a> | <a href=\"http://jsbin.com/ubikof\">source</a></p>\n\n<p>In older code you sometimes see the <code>Derived.prototype</code> set up like this instead:</p>\n\n<pre><code>Derived.prototype = new Base();\n</code></pre>\n\n<p>...but there's a problem with doing it that way: <code>Base</code> may do per-instance initialization which isn't appropriate for the entirety of <code>Derived</code> to inherit. It may even require arguments (as our <code>Base</code> does; what would we pass for <code>x</code>?). By instead making <code>Derived.prototype</code> just be a new object backed by the <code>Base.prototype</code>, we get the correct stuff. Then we call <code>Base</code> from within <code>Derived</code> to get per-instance init.</p>\n\n<p>The above is very basic and as you can see involves a number of steps. It also does little or nothing to make \"supercalls\" easy and highly-maintainable. That's why you see so many \"inheritance\" scripts out there, like Prototype's <code>Class</code>, Dean Edwards' Base2, or <em>(cough)</em> my own <a href=\"http://code.google.com/p/lineagejs\"><code>Lineage</code></a>.</p>\n\n<hr>\n\n<p>If you can't rely on having ES5 features in your environment, and don't want to include a shim that does the basics of <code>Object.create</code>, you can just use this function in its place:</p>\n\n<pre><code>function simpleCreate(proto) {\n    function Ctor() {\n    }\n    ctor.prototype = proto;\n    return new Ctor();\n}\n</code></pre>\n\n<p>Then instead of</p>\n\n<pre><code>Derived.prototype = Object.create(Base.prototype);\n</code></pre>\n\n<p>you'd do:</p>\n\n<pre><code>Derived.prototype = simpleCreate(Base.prototype);\n</code></pre>\n\n<p>Of course, you can do more to automate hooking things up&nbsp;&mdash; which is all <code>Lineage</code> basically does.</p>\n\n<hr>\n\n<p>...and finally: Above I've used anonymous functions for simplicity, e.g.:</p>\n\n<pre><code>Base.prototype.foo = function() {\n    // ...\n};\n</code></pre>\n\n<p>...but I don't do that in my real code, because <a href=\"http://blog.niftysnippets.org/2010/03/anonymouses-anonymous.html\">I like to help my tools help me</a>. So I tend to use the module pattern around each \"class\" (constructor function and associated prototype) and use function <em>declarations</em> (since I do work for the web, and IE7 and IE8 <a href=\"http://blog.niftysnippets.org/2010/09/double-take.html\">still have problems</a> with named function expressions. So if I weren't using <code>Lineage</code>, I'd do the above like this:</p>\n\n<pre><code>// Base\n(function(target) {\n    // Base constructor\n    target.Base = Base;\n    function Base(x) {\n        // Base per-instance init\n        this.x = x;\n    }\n\n    // An example Base function\n    Base.prototype.foo = Base$foo;\n    function Base$foo() {\n        console.log(\"I'm Base#foo, x = \" + this.x);\n    }\n})(window);\n\n// Derived\n(function(target, base) {\n    // The Derived constructor function\n    target.Derived = Derived;\n    function Derived(x, y) {\n        // Init base\n        base.call(this, x);\n\n        // Derived per-instance init\n        this.y = y;\n    }\n\n    // Make the Derived.prototype be a new object backed up by the\n    // Base.prototype.    \n    Derived.prototype = Object.create(base.prototype);\n\n    // Fix up the 'constructor' property\n    Derived.prototype.constructor = Derived;\n\n    // Add any Derived functions\n    Derived.prototype.bar = Derived$bar;\n    function Derived$bar() {\n        console.log(\"I'm Derived#bar, x = \" + this.x + \", y = \" + this.y);\n    }\n})(window, Base);\n</code></pre>\n\n<p>...or something like that. <a href=\"http://jsbin.com/ubikof/2\">Live copy</a> | <a href=\"http://jsbin.com/ubikof/2/edit\">source</a></p>\n",
                    "is_accepted": true,
                    "score": 27
                }
            ],
            "body": "<p>I have one constructor function, which acts as a superclass:</p>\n\n<pre><code>Bla = function(a){this.a = a;}\n</code></pre>\n\n<p>I prototype it to include a simple method:</p>\n\n<pre><code>Bla.prototype.f = function(){console.log(\"f\");\n</code></pre>\n\n<p>And now new <code>Bla(1).f();</code> will log \"f\" in the console. But, lets say that I need a subclass that inherits from Bla:</p>\n\n<pre><code>Bla2 = function(a)\n{\n    this.base = Bla;\n    this.base();\n}\n\nx = new Bla2(5);\n</code></pre>\n\n<p>Now, as expected, <code>x.a</code> gives me <code>5</code>. But, <code>x.f</code> is <code>undefined</code>! Seems like <code>Bla2</code> didn't inherit it from the <code>Bla</code> class! Why is this happening and how do I correct it?</p>\n",
            "last_activity_date": 1350176449,
            "question_id": 11072556,
            "score": 5,
            "tags": [
                "javascript",
                "oop",
                "inheritance",
                "prototype"
            ],
            "title": "Objects don&#39;t inherit prototyped functions"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>[.\\n]</code> doesn't work, because dot in <code>[]</code> (by regex definition; not javascript only) means the dot-character. You can use <code>(.|\\n)</code> (or <code>(.|[\\n\\r])</code>) instead.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><code>[.\\n]</code> does not work because <code>.</code> has no special meaning inside of <code>[]</code>, it just means a literal <code>.</code>. <code>(.|\\n)</code> is probably the most clear way of expressing \"any character, including a newline\". Of course, if you want to match all newlines, you would need to add <code>\\r</code> as well to include Windows and classic Mac OS style line endings: <code>(.|[\\r\\n])</code>.</p>\n\n<p>In general, you shouldn't try to use a regexp to match the actual HTML tags. See, for instance, <a href=\"http://stackoverflow.com/questions/701166/can-you-provide-some-examples-of-why-it-is-hard-to-parse-xml-and-html-with-a-rege\">these</a> <a href=\"http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454\">questions</a> for more information on why.</p>\n\n<p>Instead, try actually searching the DOM for the tag you need (using jQuery makes this easier, but you can always do <code>document.getElementsByTagName(\"pre\")</code> with the standard DOM), and then  search the text content of those results with a regexp if you need to match against the contents.</p>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>DON'T use <code>(.|[\\r\\n])</code> instead of <code>.</code> for multiline matching.</p>\n\n<p>DO use <code>[\\s\\S]</code> instead of <code>.</code> for multiline matching</p>\n\n<p>Also, avoid greediness where not needed by using <code>*?</code> or <code>+?</code> quantifier instead of <code>*</code> or <code>+</code>. This can have a huge performance impact.</p>\n\n<p>See the benchmark I have made: <a href=\"http://jsperf.com/javascript-multiline-regexp-workarounds\">http://jsperf.com/javascript-multiline-regexp-workarounds</a></p>\n\n<pre><code>Using [^]: fastest\nUsing [\\s\\S]: 0.83% slower\nUsing (.|\\r|\\n): 96% slower\nUsing (.|[\\r\\n]): 96% slower\n</code></pre>\n\n<p>NB: You can also use <code>[^]</code> but it is deprecated in the below comment.</p>\n",
                    "is_accepted": false,
                    "score": 79
                }
            ],
            "body": "<pre><code>var ss= \"&lt;pre&gt;aaaa\\nbbb\\nccc&lt;/pre&gt;ddd\";\nvar arr= ss.match( /&lt;pre.*?&lt;\\/pre&gt;/gm );\nalert(arr);     // null\n</code></pre>\n\n<p>I'd want the PRE block be picked up, even though it spans over newline characters. I thought the 'm' flag does it. Does not.</p>\n\n<p>Found the answer <a href=\"http://simonwillison.net/2004/Sep/20/newlines/\">here</a> before posting. SInce I thought I knew JavaScript (read three books, worked hours) and there wasn't an existing solution at SO, I'll dare to post anyways. <strong>throw stones here</strong></p>\n\n<p>So the solution is:</p>\n\n<pre><code>var ss= \"&lt;pre&gt;aaaa\\nbbb\\nccc&lt;/pre&gt;ddd\";\nvar arr= ss.match( /&lt;pre[\\s\\S]*?&lt;\\/pre&gt;/gm );\nalert(arr);     // &lt;pre&gt;...&lt;/pre&gt; :)\n</code></pre>\n\n<p>Does anyone have a less cryptic way?</p>\n\n<p>Edit: <a href=\"http://stackoverflow.com/questions/1387116/matching-multiline-patterns\">this</a> is a duplicate but since it's harder to find than mine, I don't remove.</p>\n\n<p>It proposes <code>[^]</code> as a \"multiline dot\". What I still don't understand is why <code>[.\\n]</code> does not work. Guess this is one of the sad parts of JavaScript..</p>\n",
            "last_activity_date": 1368185270,
            "question_id": 1979884,
            "score": 48,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "How to use JavaScript regex over multiple lines?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>As long as both are referenced by the web page, yes.</p>\n\n<p>You simply call the functions as if they are in the same JS file.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>yes you can . you need to refer both <code>JS file</code> to the <code>.aspx</code> page</p>\n\n<pre><code>&lt;script language=\"javascript\" type=\"text/javascript\" src=\"JScript1.js\"&gt;\n &lt;/script&gt;\n\n    &lt;script language=\"javascript\" type=\"text/javascript\" src=\"JScript2.js\"&gt;\n    &lt;/script&gt;\n</code></pre>\n\n<blockquote>\n  <p>JScript1.js</p>\n</blockquote>\n\n<pre><code>function ani1() {\n    alert(\"1\");\n    ani2();\n}\n</code></pre>\n\n<blockquote>\n<pre><code>JScript2.js\n</code></pre>\n</blockquote>\n\n<pre><code>function ani2() {\n    alert(\"2\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The function could be called as if it was in the same JS File as long as the file containing the definition of the function has being loaded before the first use of the function.</p>\n\n<p>I.e.</p>\n\n<p>File1.js</p>\n\n<pre><code>function alertNumber(number) {\n    alert(number);\n}\n</code></pre>\n\n<p>File2.js</p>\n\n<pre><code>function alertOne() {\n     alertNumber(\"one\");\n}\n</code></pre>\n\n<p>HTML</p>\n\n<pre><code>&lt;head&gt;\n....\n    &lt;script src=\"File1.js\" type=\"text/javascript\"&gt;&lt;/script&gt; \n    &lt;script src=\"File2.js\" type=\"text/javascript\"&gt;&lt;/script&gt; \n....\n&lt;head&gt;\n&lt;body&gt;\n...\n    &lt;script type=\"text/javascript\"&gt;\n       alertOne();\n    &lt;/script&gt;\n...\n&lt;/body&gt;\n</code></pre>\n\n<p><s>The other way won't work.</s>\nAs correctly pointed out by <a href=\"http://stackoverflow.com/a/3811763/149885\">Stuart Wakefield</a>. The other way will also work.</p>\n\n<p>HTML</p>\n\n<pre><code>&lt;head&gt;\n....\n    &lt;script src=\"File2.js\" type=\"text/javascript\"&gt;&lt;/script&gt; \n    &lt;script src=\"File1.js\" type=\"text/javascript\"&gt;&lt;/script&gt; \n....\n&lt;head&gt;\n&lt;body&gt;\n...\n    &lt;script type=\"text/javascript\"&gt;\n       alertOne();\n    &lt;/script&gt;\n...\n&lt;/body&gt;\n</code></pre>\n\n<p>What will not work would be:</p>\n\n<p>HTML</p>\n\n<pre><code>&lt;head&gt;\n....\n    &lt;script src=\"File2.js\" type=\"text/javascript\"&gt;&lt;/script&gt; \n    &lt;script type=\"text/javascript\"&gt;\n       alertOne();\n    &lt;/script&gt;\n    &lt;script src=\"File1.js\" type=\"text/javascript\"&gt;&lt;/script&gt; \n....\n&lt;head&gt;\n&lt;body&gt;\n...\n&lt;/body&gt;\n</code></pre>\n\n<p>As although <code>alertOne</code> is defined when calling it, internally it uses a function that is still not defined (<code>alertNumber</code>).</p>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>If all files are included , you can call properties from <strong>one file to another</strong> (like function, variable, object etc.)</p>\n\n<p>The js functions and variables that you write in one .js file -\n    say <em>a.js</em> will be available to other js files - say <em>b.js</em> as \n    long as both <em>a.js</em> and <em>b.js</em> are included in the file \n    using the following include mechanism(and in the <em>same</em> order if the function in b.js calls the one in a.js).</p>\n\n<pre><code>&lt;script language=\"javascript\" src=\"a.js\"&gt; and \n&lt;script language=\"javascript\" src=\"b.js\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The answer above has an incorrect assumption that the order of inclusion of the files matter. As the alertNumber function is not called until the alertOne function is called. As long as both files are included by time alertOne is called the order of the files does not matter:</p>\n\n<p>[HTML]</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"file1.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"file2.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    alertOne( );\n&lt;/script&gt;\n</code></pre>\n\n<p>[JS]</p>\n\n<pre><code>// File1.js\nfunction alertNumber( n ) {\n    alert( n );\n};\n// File2.js\nfunction alertOne( ) {\n    alertNumber( \"one\" );\n};\n// Inline\nalertOne( ); // No errors\n</code></pre>\n\n<p>Or it can be ordered like the following: </p>\n\n<p>[HTML]</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"file2.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"file1.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    alertOne( );\n&lt;/script&gt;\n</code></pre>\n\n<p>[JS]</p>\n\n<pre><code>// File2.js\nfunction alertOne( ) {\n    alertNumber( \"one\" );\n};\n// File1.js\nfunction alertNumber( n ) {\n    alert( n );\n};\n// Inline\nalertOne( ); // No errors\n</code></pre>\n\n<p>But if you were to do this: </p>\n\n<p>[HTML]</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"file2.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    alertOne( );\n&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"file1.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>[JS]</p>\n\n<pre><code>// File2.js\nfunction alertOne( ) {\n    alertNumber( \"one\" );\n};\n// Inline\nalertOne( ); // Error: alertNumber is not defined\n// File1.js\nfunction alertNumber( n ) {\n    alert( n );\n};\n</code></pre>\n\n<p>It only matters about the variables and functions being available at the time of execution. When a function is defined it does not execute or resolve any of the variables declared within until that function is then subsequently called. </p>\n\n<p>Inclusion of different script files is no different from the script being in that order within the same file, with the exception of deferred scripts:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"myscript.js\" defer=\"defer\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>then you need to be careful.</p>\n",
                    "is_accepted": false,
                    "score": 20
                }
            ],
            "body": "<p>Can we call the function written in one JS file in another JS file? Can anyone help me how to call the function from another JS file? </p>\n",
            "last_activity_date": 1424781746,
            "question_id": 3809862,
            "score": 43,
            "tags": [
                "javascript"
            ],
            "title": "Can we call the function written in one JavaScript in another JS file?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Both <code>:</code> and whitespace are permitted in identifiers. Without the quotes, this would cause ambiguity when trying to determine what exactly constitutes the identifier.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>Question 1: why not allow the name in the name/value pairs to be unquoted identifiers?</p>\n</blockquote>\n\n<p>The design philosophy of JSON is \"Keep it simple\"</p>\n\n<p><em>\"Quote names with <code>\"</code>\"</em> is a lot simpler than <em>\"You may quote names with <code>\"</code> or <code>'</code> but you don't have to, unless they contain certain characters (or combinations of characters that would make it a keyword) and <code>'</code> or <code>\"</code> may need to be quoted depending on what delimiter you selected\"</em>.</p>\n\n<blockquote>\n  <p>Question 2: Is there a semantic difference between the two representations above, when evaluated in Javascript? </p>\n</blockquote>\n\n<p>No. In JavaScript they are identical.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>I leave a quote from a presentation that Douglas Crockford (the creator of the JSON standard) gave to Yahoo.</p>\n\n<p>He talks about how he <em>discovered</em> JSON, and amongst other things why he decided to use <em>quoted keys</em>:</p>\n\n<blockquote>\n  <p>....\n  That was when we discovered the\n  unquoted name problem. It turns out\n  ECMA Script 3 has a whack reserved\n  word policy. Reserved words must be\n  quoted in the key position, which is\n  really a nuisance. When I got around\n  to formulizing this into a standard, I\n  didn't want to have to put all of the\n  reserved words in the standard,\n  because it would look really stupid.</p>\n  \n  <p>At the time, I was trying to convince\n  people: yeah, you can write\n  applications in JavaScript, it's\n  actually going to work and it's a good\n  language. I didn't want to say, then,\n  at the same time: and look at this\n  really stupid thing they did! So I\n  decided, instead, let's just quote the\n  keys.<br>\n  That way, we don't have to tell\n  anybody about how whack it is.</p>\n  \n  <p>That's why, to this day, keys are quoted in\n  JSON.</p>\n</blockquote>\n\n<p>You can find the complete video and transcript <a href=\"http://developer.yahoo.com/yui/theater/video.php?v=crockford-json\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 71
                },
                {
                    "body": "<p>If json describes objects, then in practise you get the following</p>\n\n<pre><code>var foo = {};\n\nvar bar = 1;\n\nfoo[\"bar\"] = \"hello\";\nfoo[bar] = \"goodbye\";\n</code></pre>\n\n<p>so then,</p>\n\n<pre><code>foo.bar == \"hello\";\nfoo[1] == \"goodbye\" // in setting it used the value of var bar\n</code></pre>\n\n<p>so even if your examples do produce the same result, their equivalents in \"raw code\" wouldn't.  Maybe that's why?? dunno, just an idea.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>In javascript objects can be used like a hash/hashtable with key pairs.  </p>\n\n<p>However if your key has characters that javascript could not tokenize as a name, it would fail when trying it access like a property on an object rather than a key.  </p>\n\n<pre><code>var test  = {};\ntest[\"key\"] = 1;\ntest[\"#my-div\"] = \"&lt;div&gt; stuff &lt;/div&gt;\";\n\n// test = { \"key\": 1, \"#my-div\": \"&lt;div&gt; stuff &lt;/div&gt;\" };\n\nconsole.log(test.key);           // should be 1\nconsole.log(test[\"key\"]);        // should be 1\nconsole.log(test[\"#my-div\"]);    // should be \"&lt;div&gt; stuff &lt;/div&gt;\";\nconsole.log(test.#my-div);       // would not work.\n</code></pre>\n\n<p>identifiers can sometimes have characters that can not be evaluated as a token/identifier in javascript, thus its best to put all identifiers in strings for consistency.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think the right answer to Cheeso's question is that the implementation surpassed the documentation.  It no longer requires a string as the key, but rather something else, which can either be a string (ie quoted) or (probably) anything that can be used as a variable name, which I will guess means start with a letter, _, or $, and include only letters, numbers, and the $ and _.</p>\n\n<p>I wanted to simplify the rest for the next person who visits this question with the same idea I did.  Here's the meat:</p>\n\n<p><strong>Variable names are not interpolated in JSON when used as an object key</strong> (Thanks Friedo!)</p>\n\n<p>Breton, using \"identifier\" instead of \"key\", wrote that \"if an identifier happens to be a reserved word, it is interpreted as that word rather than as an identifier.\"  This may be true, but I tried it without any trouble:</p>\n\n<pre><code>var a = {do:1,long:2,super:3,abstract:4,var:5,break:6,boolean:7};\na.break\n</code></pre>\n\n<p>=> 6</p>\n\n<p>About using quotes, Quentin wrote \"...but you don't have to, unless [the key] contains <strong>certain characters</strong> (or combinations of characters that would make it a keyword)\"</p>\n\n<p>I found the former part (certain characters) is true, using the @ sign (in fact, I think $ and _ are the only characters that don't cause the error):</p>\n\n<pre><code>var a = {a@b:1};\n</code></pre>\n\n<p>=> Syntax error</p>\n\n<pre><code>var a = {\"a@b\":1};\na['a@b']\n</code></pre>\n\n<p>=> 1</p>\n\n<p>but the parenthetical about keywords, as I showed above, isn't true.</p>\n\n<p>What I wanted works because the text between the opening { and the colon, or between the comma and the colon for subsequent properties is used as an unquoted string to make an object key, or, as Friedo put it, a variable name there doesn't get interpolated:</p>\n\n<pre><code>var uid = getUID();\nvar token = getToken();            // Returns ABC123\nvar data = {uid:uid,token:token};\ndata.token\n</code></pre>\n\n<p>=> ABC123</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well Jim actually answers exaclty that question right here:\n<a href=\"https://www.youtube.com/watch?feature=player_detailpage&amp;v=hQVTIJBZook#t=3629\" rel=\"nofollow\">https://www.youtube.com/watch?feature=player_detailpage&amp;v=hQVTIJBZook#t=3629</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><a href=\"http://tools.ietf.org/html/rfc4627\">The JSON spec</a> says that JSON is an object or an array.  In the case of an object, </p>\n\n<blockquote>\n  <p>An object structure is represented as a pair of curly brackets\n     surrounding zero or more name/value pairs (or members).  <strong>A name is a\n     string.</strong>  ...</p>\n</blockquote>\n\n<p>And later, the spec says that a string is surrounded in quotes.</p>\n\n<p>Why? </p>\n\n<p>Thus, </p>\n\n<pre><code>{\"Property1\":\"Value1\",\"Property2\":18}\n</code></pre>\n\n<p>and not</p>\n\n<pre><code>{Property1:\"Value1\",Property2:18}\n</code></pre>\n\n<p><strong>Question 1</strong>: why not allow the name in the name/value pairs to be unquoted identifiers? </p>\n\n<hr>\n\n<p><strong>Question 2</strong>: Is there a semantic difference between the two representations above, when evaluated in Javascript? </p>\n",
            "last_activity_date": 1400467231,
            "question_id": 2067974,
            "score": 42,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "in JSON, Why is each name quoted?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>No. <a href=\"http://es5.github.com/#x12.12\">They did not include that in ECMAScript:</a></p>\n\n<blockquote>\n  <p>ECMAScript has no goto statement.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<p>Absolutely! There is a project called <a href=\"http://summerofgoto.com/\">Summer of Goto</a> that allows you use Javascript at it's fullest potential and will revolutionize the way you can write your code.</p>\n\n<p>This Javascript preprocessing tool allows you to create a label and then goto it using this syntax:</p>\n\n<pre><code>[lbl] &lt;label-name&gt;\ngoto &lt;label-name&gt;\n</code></pre>\n\n<p>For example, the example in the question can be written as follows:</p>\n\n<pre><code>[lbl] start:\nalert(\"LATHER\");\nalert(\"RINSE\");\n[lbl] repeat: goto start;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/dBUAL/\">You can see this example in action on jsFiddle</a>, but be warned that it will be an infinite loop and you might have to forcefully shut down your browser to get out of it.</p>\n\n<p>Note that you are not just limited to simple trivial programs like an endless <code>LATHER</code> <code>RINSE</code> repeat cycle--the possibilities afforded by <code>goto</code> are endless and you can even make a <code>Hello, world!</code> message to the Javascript console 538 times, like this:</p>\n\n<pre><code>var i = 0;\n[lbl] start:\nconsole.log(\"Hello, world!\");\ni++;\nif(i &lt; 538) goto start;\n</code></pre>\n\n<p>Again, you can <a href=\"http://jsfiddle.net/knLGk/\">see this in action on jsFiddle</a>, and this time you don't have to worry about having to end the program forcefully.</p>\n\n<p><a href=\"http://alexsexton.com/?p=11\">You can read more about how goto is implemented</a>, but basically, it does some Javascript preprocessing that takes advantage of the fact that you can simulate a goto with a <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Statements/label\">labelled <code>while</code> loop</a>. So, when you write the \"Hello, world!\" program above, it gets translated to something like this:</p>\n\n<pre><code>var i = 0;\nstart: while(true) {\n  console.log(\"Hello, world!\");\n  i++;\n  if(i &lt; 538) continue start;\n  break;\n}\n</code></pre>\n\n<p>There are some limitations to this preprocessing process, because while loops cannot stretch across multiple functions or blocks. That's not a big deal, though--I'm sure the benefits of being able to take advantage of <code>goto</code> in Javascript will absolutely overwhelm you.</p>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p>You should probably read some JS tutorials like this <strong><a href=\"http://en.wikibooks.org/wiki/JavaScript/Control_Structures\" rel=\"nofollow\">one</a></strong>.</p>\n\n<p>Not sure if <code>goto</code> exists in JS at all, but, either way, it encourages bad coding style and should be avoided.</p>\n\n<p>You could do:</p>\n\n<pre><code>while ( some_condition ){\n    alert('RINSE');\n    alert('LATHER');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Generally, I'd prefer not using GoTo for bad readability. To me, it's a bad excuse for programming simple iterative functions instead of having to program recursive functions, or even better (if things like a Stack Overflow is feared), their true iterative alternatives (which may sometimes be complex).</p>\n\n<p>Something like this would do:</p>\n\n<pre><code>while(true) {\n   alert(\"RINSE\");\n   alert(\"LATHER\");\n}\n</code></pre>\n\n<p>That right there is an infinite loop. The expression (\"true\") inside the parantheses of the while clause is what the Javascript engine will check for - and if the expression is true, it'll keep the loop running. Writing \"true\" here always evaluates to true, hence an infinite loop.</p>\n\n<p>A similar example (to explain these conditions and the while clause), the following would be the same:</p>\n\n<pre><code>while(2 + 2 == 4) {\n   alert(\"RINSE\");\n   alert(\"LATHER\");\n}\n</code></pre>\n\n<p>One could (however) argue why you need an infinite loop of alert boxes. I hope you're using this for something good, not for something bad.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>How about a <code>for</code> loop?  Repeat as many times as you like.  Or a <code>while</code> loop, repeat until a condition is met.  There are control structures that will let you repeat code.  I remember <code>GOTO</code> in Basic... it made such bad code!  Modern programming languages give you better options that you can actually maintain.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>const\n    start = 0,\n    more = 1,\n    pass = 2,\n    loop = 3,\n    skip = 4,\n    done = 5;\n\nvar label = start;\n\n\nwhile (true){\n    var goto = null;\n    switch (label){\n        case start:\n            console.log('start');\n        case more:\n            console.log('more');\n        case pass:\n            console.log('pass');\n        case loop:\n            console.log('loop');\n            goto = pass; break;\n        case skip:\n            console.log('skip');\n        case done:\n            console.log('done');\n\n    }\n    if (goto == null) break;\n    label = goto;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Actually, I see that ECMAScript (JavaScript) DOES INDEED have a goto statement. However, the JavaScript goto has two flavors! </p>\n\n<p>The two JavaScript flavors of goto are called labeled continue and labeled break. There is no keyword \"goto\" in JavaScript. The goto is accomplished in JavaScript using the break and continue keywords.</p>\n\n<p>And this is more or less explicitly stated on the w3schools website here <a href=\"http://www.w3schools.com/js/js_switch.asp\">http://www.w3schools.com/js/js_switch.asp</a>. </p>\n\n<p>I find the documentation of the labeled continue and labeled break somewhat awkwardly expressed.</p>\n\n<p>The difference between the labeled continue and labeled break is where they may be used. The labeled continue can only be used inside a while loop. See w3schools for some more information.</p>\n\n<p>===========</p>\n\n<p>Another approach that will work is to have a giant while statement with a giant switch statement inside:</p>\n\n<pre><code>while (true)\n{\n    switch (goto_variable)\n    {\n        case 1:\n            // some code\n            goto_variable = 2\n            break;\n        case 2:\n            goto_variable = 5   // case in etc. below\n            break;\n        case 3:\n            goto_variable = 1\n            break;\n\n         etc. ...\n    }\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>You can simple use a function:</p>\n\n<pre><code>function hello() {\n    alert(\"RINSE\");\n    alert(\"LATHER\");\n    hello();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In classic JavaScript you need to use do-while loops to achieve this type of code. I presume you are maybe generating code for some other thing.</p>\n\n<p>The way to do it, like for backending bytecode to JavaScript is to wrap every label target in a \"labelled\" do-while. </p>\n\n<pre><code>LABEL1: do {\n  x = x + 2;\n  ...\n  // JUMP TO THE END OF THE DO-WHILE - A FORWARDS GOTO\n  if (x &lt; 100) break LABEL1;\n  // JUMP TO THE START OF THE DO WHILE - A BACKWARDS GOTO...\n  if (x &lt; 100) continue LABEL1;\n} while(0);\n</code></pre>\n\n<p>Every labelled do-while loop you use like this actually creates the two label points for the one label. One at the the top and one at the end of the loop. Jumping back uses continue and jumping forwards uses break.</p>\n\n<pre><code>// NORMAL CODE\n\nMYLOOP:\n  DoStuff();\n  x = x + 1;\n  if (x &gt; 100) goto DONE_LOOP;\n  GOTO MYLOOP;\n\n\n// JAVASCRIPT STYLE\nMYLOOP: do {\n  DoStuff();\n  x = x + 1;\n  if (x &gt; 100) break MYLOOP;\n  continue MYLOOP;// Not necessary since you can just put do {} while (1) but it     illustrates\n} while (0)\n</code></pre>\n\n<p>Unfortunately there is no other way to do it.</p>\n\n<p>Normal Example Code:</p>\n\n<pre><code>while (x &lt; 10 &amp;&amp; Ok) {\n  z = 0;\n  while (z &lt; 10) {\n    if (!DoStuff()) {\n      Ok = FALSE;\n      break;\n    }\n    z++;\n  }\n  x++;\n} \n</code></pre>\n\n<p>So say the code gets encoded to bytecodes so now you must put the bytecodes into JavaScript to simulate your backend for some purpose.</p>\n\n<p>JavaScript style:</p>\n\n<pre><code>LOOP1: do {\n  if (x &gt;= 10) break LOOP1;\n  if (!Ok) break LOOP1;\n  z = 0;\n  LOOP2: do {\n    if (z &gt;= 10) break LOOP2;\n    if (!DoStuff()) {\n      Ok = FALSE;\n      break LOOP2;\n    }\n    z++;\n  } while (1);// Note While (1) I can just skip saying continue LOOP2!\n  x++;\n  continue LOOP1;// Again can skip this line and just say do {} while (1)\n} while(0)\n</code></pre>\n\n<p>So using this technique does the job fine for simple purposes. Other than that not much else you can do.</p>\n\n<p>For normal Javacript you should not need to use goto ever, so you should probably avoid this technique here unless you are specificaly translating other style code to run on JavaScript. I assume that is how they get the Linux kernel to boot in JavaScript for example. </p>\n\n<p>NOTE! This is all naive explanation. For proper Js backend of bytecodes also consider examining the loops before outputting the code. Many simple while loops can be detected as such and then you can rather use loops instead of goto.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There is a way this can be done, but it needs to be planned carefully.\nTake for example the following QBASIC program:</p>\n\n<pre><code>1 A = 1; B = 10;\n10 print \"A = \",A;\n20 IF (A &lt; B) THEN A = A + 1; GOTO 10\n30 PRINT \"That's the end.\"\n</code></pre>\n\n<p>Then create your JavaScript to initialize all variables first, followed by making an initial function call to start the ball rolling (we execute this initial function call at the end), and set up functions for every set of lines that you know will be executed in the one unit.</p>\n\n<p>Follow this with the initial function call...</p>\n\n<pre><code>var a, b;\nfunction fa(){\n    a = 1;\n    b = 10;\n    fb();\n}\nfunction fb(){\n    document.write(\"a = \"+ a + \"&lt;br&gt;\");\n    fc();\n}\nfunction fc(){\n    if(a&lt;b){\n        a++;\n        fb();\n        return;\n    }\n    else\n    {\n    document.write(\"That's the end.&lt;br&gt;\");\n    }\n}\nfa();\n</code></pre>\n\n<p>The result in this instance is:</p>\n\n<pre><code>a = 1\na = 2\na = 3\na = 4\na = 5\na = 6\na = 7\na = 8\na = 9\na = 10\nThat's the end.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>goto begin and end of all parents closures</p>\n\n<pre><code>var foo=false;\nvar loop1=true;\nLABEL1: do {var LABEL1GOTO=false;\n    console.log(\"here be 2 times\");\n    if (foo==false){\n        foo=true;\n        LABEL1GOTO=true;continue LABEL1;// goto up\n    }else{\n        break LABEL1; //goto down\n    }\n    console.log(\"newer go here\");\n} while(LABEL1GOTO);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Most people here seem to be against using Goto/Gosub; in fact, it's a prevalent view I see repeated everywhere, but I encounter many cases in my programming where a Gosub equivalent would have absolutely no rival, because it (1) keeps the variable context (2) allows a chunk of code to be called from several separated points with different options (3) is much faster than a function call, which can be important.\nThe alternatives are often very messy or convoluted where a Gosub would have been extremely neat and simple. It doesn't mean we should be using it all the time, but including it would have been ideal for certain circumstances and it is a mistake to idealise its absence.\nHaving Goto of some nature is also very convenient such as when you have a function which ends with a terminating sequence, and you want to break out to it from different points to abort the function. There's no virtue in my eyes in having to make a piece of more complicated code to get around its absence. A well-named label is all that suffices.\ndavid</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have some code that I absolutely must implement using <code>goto</code>. For example, I want to write a program like this:</p>\n\n<pre><code>start:\nalert(\"RINSE\");\nalert(\"LATHER\");\nrepeat: goto start\n</code></pre>\n\n<p>Is there a way to do that in Javascript?</p>\n",
            "last_activity_date": 1416821924,
            "question_id": 9751207,
            "score": 36,
            "tags": [
                "javascript",
                "goto"
            ],
            "title": "How can I use goto in Javascript?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Try layerX, layerY</p>\n\n<pre><code>var x = e.offsetX==undefined?e.layerX:e.offsetX;\nvar y = e.offsetY==undefined?e.layerY:e.offsetY;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Pnx4D/\">FIDDLE</a></p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>There's a bug in Musa's solution: think what happens if <code>e.offsetX === 0</code> and <code>e.layerX === undefined</code>...</p>\n\n<pre><code>var x = e.offsetX || e.layerX; // x is now undefined!\n</code></pre>\n\n<p>A more robust version is as follows:</p>\n\n<pre><code>var x = e.hasOwnProperty('offsetX') ? e.offsetX : e.layerX;\nvar y = e.hasOwnProperty('offsetY') ? e.offsetY : e.layerY;\n</code></pre>\n\n<p>Or, because we can assume that if <code>offsetX</code> is defined, <code>offsetY</code> will be too:</p>\n\n<pre><code>var hasOffset = e.hasOwnProperty('offsetX'),\n    x         = hasOffset ? e.offsetX : e.layerX,\n    y         = hasOffset ? e.offsetY : e.layerY;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Unfortunately offsetX and layerX are not exactly the same as offsetX is the offset within the current element but layerX is the offset from the page. Below is a fix I am currently using for this:</p>\n\n<pre><code>function fixEvent(e) {\n    if (! e.hasOwnProperty('offsetX')) {\n        var curleft = curtop = 0;\n        if (e.offsetParent) {\n           var obj=e;\n           do {\n              curleft += obj.offsetLeft;\n              curtop += obj.offsetTop;\n           } while (obj = obj.offsetParent);\n        }\n        e.offsetX=e.layerX-curleft;\n        e.offsetY=e.layerY-curtop;\n    }\n    return e;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>From a <a href=\"http://bugs.jquery.com/ticket/8523#comment:14\">JQuery bug tracker page</a> - a nice polyfill is this:</p>\n\n<pre><code>var offX  = (e.offsetX || e.clientX - $(e.target).offset().left);\n</code></pre>\n\n<p>.. where e is the event returned from a jquery event. Obviously, only if you've got Jquery already on your project, otherwise will have to do the <code>offset()</code> stuff manually.</p>\n",
                    "is_accepted": false,
                    "score": 63
                },
                {
                    "body": "<p><code>offset</code> actually doesn't translate directly into <code>layer</code>; the <code>offset</code> property doesn't account for the element's margin. The code below should account for this.</p>\n\n<pre><code>function(e) {\n    var x = e.offsetX, y = e.offsetY;\n    if(e.hasOwnProperty('layerX')) {\n      x = e.layerX - e.currentTarget.offsetLeft;\n      y = e.layerY - e.currentTarget.offsetTop;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>None of the non-jquery versions work completely for various reasons. With your help however i got this to work:</p>\n\n<pre><code>if(!event.hasOwnProperty('offsetX')) {\n    event.offsetX = event.layerX - event.currentTarget.offsetLeft;\n    event.offsetY = event.layerY - event.currentTarget.offsetTop;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>But , what you will do if there is not <code>layerX</code>,<code>layerY</code> fields ?</p>\n\n<pre><code> var xe=e.offsetX,ye=e.offsetY;\n  if(!xe){\n     xe=e.clientX - $(e.target).offset().left;\n  }\n  if(!ye){\n    ye= e.clientY - $(e.target).offset().top;\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I found that all answers posted here <em>except</em> the last two answers by EnotionZ and laz brannigan (previously with zero votes each) where wrong in cases where several elements were contained within a div.  In my case I have several canvas elements inside of a single div and I am listening to each canvas separately.</p>\n\n<p>After considerable trial and error the final correct answer I came to, which works perfectly and identically for me in FireFox and Chrome is as follows:</p>\n\n<pre><code>//inside my mouse events handler:\nvar anOffsetX = (inEvent.offsetX !== undefined) ? inEvent.offsetX : (inEvent.layerX - inEvent.target.offsetLeft);\nvar anOffsetY = (inEvent.offsetY !== undefined) ? inEvent.offsetY : (inEvent.layerY - inEvent.target.offsetTop);\n</code></pre>\n\n<p>Presumably this will also work for margins and such as EnotionZ indicated in his post, but I have not tried that.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Unfortunately no solution worked for me.</p>\n\n<p>I found a good implementation <a href=\"http://www.jacklmoore.com/notes/mouse-position/\">here</a>:</p>\n\n<pre><code>var target  = e.target || e.srcElement,\n              rect    = target.getBoundingClientRect(),\n              offsetX = e.clientX - rect.left,\n              ffsetY  = e.clientY - rect.top;\n\ne.offsetX   = offsetX;\ne.offsetY   = offsetY;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"&gt;\n&lt;title&gt;Insert title here&lt;/title&gt;\n&lt;script language=\"javascript\"&gt;\nfunction main(){\n    var canvas = document.getElementById(\"canvas\");\n    canvas.addEventListener(\"mousemove\", function(e){\n        if (!e) e = window.event;\n        var ctx = canvas.getContext(\"2d\");\n\n        var x = e.offsetX;\n        var y = e.offsetY;\n\n        ctx.fillRect(x, y, 1, 1);\n    });\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body onload=\"main();\"&gt;\n&lt;div style=\"width: 800px; height: 600px; -webkit-transform: scale(0.75,0.75); -moz-transform: scale(0.75,0.75)\"&gt;\n    &lt;canvas id=\"canvas\" width=\"400px\" height=\"400px\" style=\"background-color: #cccccc;\"&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Please consider the above quick and dirty example.\nPlease notice that my canvas in contained by a div having a scale transform applied.\nThe above code works perfectly on any webkit based browser. While moving the mouse it draws points on the canvas.\nUnfortunately it doesn't in Firefox as its event model does not support the offsetX / Y properties.\nHow can I transform mouse coordinates from (perhaps) event.clientX (which is supported in firefox too) into canvas relative coordinates taking into account canvas position, transform etc?\nThanks, Luca.</p>\n",
            "last_activity_date": 1408520403,
            "question_id": 11334452,
            "score": 31,
            "tags": [
                "javascript",
                "html5",
                "events",
                "firefox",
                "html5-canvas"
            ],
            "title": "event.offsetX in Firefox"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Pros: It may already be cached on the user's system. Google has big pipes. You don't pay for the bandwidth.</p>\n\n<p>Cons: You now have two different ways for your site to become unavailable: A service interruption on your server or one on Google's server.</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>Pros:</p>\n\n<ul>\n<li>Google's connectivity is probably way better than yours</li>\n<li>It's a free CDN (content distribution network)</li>\n<li>Your webapp <em>might</em> load faster, since you're using a CDN</li>\n</ul>\n\n<p>Cons:</p>\n\n<ul>\n<li>If/when you need to optimize by repackaging a subset of that third-party JS library, you're on your own, and your webapp <em>might</em> then load slower</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think what would be cool to do is run A/B tests and see what the latency is to load minified version of jquery from Google's servers vs your server. Hopefully that'll put things into perspective. Chances are the Google server might be faster, but in terms of accepting responsibility of down time, nothing beats hosting it yourself.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've been looking at the real-world performance of the Google loader for jQuery, particularly, and here's what I've found:</p>\n\n<ol>\n<li>Google's servers are quick and plenty reliable.</li>\n<li>They are serving from a CDN, which means if you have a lot of overseas users they'll get <em>much</em> better load times.</li>\n<li>They are <em>not</em> serving gzipped files. So they're serving a lot more bytes than they need to.</li>\n</ol>\n\n<p>If you know what you're doing in Apache, Lighttpd, or whatever you're serving files with, you could set your cache headers just like Google's and significantly reduce the amount of data your end user has to download by serving it from your own server. You could also combine your scripts at that point and reduce your overall HTTP requests.</p>\n\n<p>Bottom line: Google's performance is good but not great. If you have many many overseas users then Google is probably better, if your users are mostly US-based and maximum performance is your concern, learn about caching, Etags, gzipping, etc. and serve it yourself.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<h3>Con</h3>\n\n<ul>\n<li>Users in countries embargoed by the U.S. (e.g. Iran) won't get a response from Google</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>In addition to points made by others I'll point out two additional cons:</p>\n\n<ul>\n<li>An additional external HTTP request, so assuming you have a Javascript file of your own (almost certain) that's two minimum instead of one minimum; and</li>\n<li>IMHO because jQuery load is async your entire page can load before the library has loaded so the effects that you do on document ready are sometimes visibly noticeable to the user when they are applied. I think this is not a great user experience.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Pro:</strong></p>\n\n<p>Google's Ajaxlibs offer a very fine-grained \"version control\" for the included libraries. You can enforce a certain version (e.g. JQuery 1.3.2) or automatically request the latest version from a certain branch (e.g. JQuery 1.3 series -> would currently deliver 1.3.2, but maybe soon 1.3.3).</p>\n\n<p>The later has definitely has benefits: you'll profit from smaller bugfixes/performance improvements without breaking your scripts/plugins.</p>\n\n<p>Maintaining such a multi-library repository on your own can become quite ressource intensive.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The pros are quite obvious and are in the other answers : </p>\n\n<ul>\n<li>you save bandwidth</li>\n<li>google is probably more reliable than your server</li>\n<li>probably cached in most browsers (anyone stats on this ?)</li>\n</ul>\n\n<p>But the cons can be very tricky : </p>\n\n<ul>\n<li>If you are using https, you will get an error on most browsers as your certificate isn't valid for google's domain, only yours. This is a major issue for https.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Con:</p>\n\n<ul>\n<li><p>When afraid of DNS poisoning, or when afraid that some public wireless network might not be trusted, then the non-SSL versions might actually not be served by Google at all, opening up <a href=\"http://blog.dasient.com/2010/09/continued-growth-in-web-based-malware_9357.html\" rel=\"nofollow\">drive-by installation</a> of malware. (But: caching is set <a href=\"http://web-sniffer.net/?url=http%3A%2F%2Fajax.googleapis.com%2Fajax%2Flibs%2Fjquery%2F1.4.4%2Fjquery.min.js\" rel=\"nofollow\">to be a full year</a>, so even though many browsers will issue a <code>If-Modified-Since</code> request for cached content when hitting refresh, this might still be a theoretical issue as most users will already have cached the resources while using another network.)</p></li>\n<li><p>When taking extreme care for your visitors' privacy, you might not want Google to record visits to your site by using their CDN. (Quite theoretical as well, as the same note on caching applies.)</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm looking for the pros/cons of pulling jQuery &amp; other JS libraries from Google API's cloud as opposed to downloading files and deploying directly. </p>\n\n<p>What say you?</p>\n\n<p><hr /></p>\n\n<h3>My decision</h3>\n\n<p>The likelihood of the lib already cached on the users system is the overriding factor for me, so I'm going with a permalink to googleapis.com (e.g. ajax.googleapis.com/ajax/libs/\u2026). I agree with others here that loss of access to the Google server cloud is a minimal concern.</p>\n",
            "last_activity_date": 1290252456,
            "question_id": 936399,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "dependencies"
            ],
            "title": "Should I link to Google API&#39;s cloud for JS libraries?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Not to my knowledge, but you can simulate it by initializing the function to <code>null</code> at first and then replacing the implementation later.</p>\n\n<pre><code>var foo = null;\nvar bar = function() { alert(foo()); } // Appear to use foo before definition\n\n// ...\n\nfoo = function() { return \"ABC\"; } /* Define the function */\nbar(); /* Alert box pops up with \"ABC\" */\n</code></pre>\n\n<p>This trick is similar to a C# trick for implementing recursive lambdas, as described <a href=\"http://blogs.msdn.com/b/ericlippert/archive/2006/08/18/why-does-a-recursive-lambda-cause-a-definite-assignment-error.aspx\" rel=\"nofollow\">here</a>.</p>\n\n<p>The only downside is that if you <em>do</em> use <code>foo</code> before it's defined, you'll get an error for trying to call <code>null</code> as though it were a function, rather than a more descriptive error message.  But you would expect to get <em>some</em> error message for using a function before it's defined.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>No, there is no metaprogramming capability in javascript directly analogous to ruby's method_missing hook. The interpreter simply raises an Error which the calling code can catch but cannot be detected by the object being accessed. There are some answers here about defining functions at run time, but that's not the same thing. You can do lots of metaprogramming, changing specific instances of objects, defining functions, doing functional things like memoizing and decorators. But there's no dynamic metaprogramming of missing functions as there is in ruby or python.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The ruby feature that you are explaining is called \"method_missing\" <a href=\"http://rubylearning.com/satishtalim/ruby_method_missing.htm\">http://rubylearning.com/satishtalim/ruby_method_missing.htm</a>.</p>\n\n<p>It's a brand new feature that is present only in some browsers like Firefox (in the spider monkey Javascript engine). In SpiderMonkey it's called \"__noSuchMethod__\" <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/NoSuchMethod\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/NoSuchMethod</a></p>\n\n<p>Please read this article from Yehuda Katz <a href=\"http://yehudakatz.com/2008/08/18/method_missing-in-javascript/\">http://yehudakatz.com/2008/08/18/method_missing-in-javascript/</a> for more details about the upcoming implementation.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Calling things that don't exist yet... Sounds like <a href=\"http://wiki.commonjs.org/wiki/Promises\" rel=\"nofollow\">Promises</a> to me. Most of the libraries/apis described there have a method to invoke a function that will be delivered in future - returning a promise for it's result.</p>\n\n<p>Of course you can refer to functions/variables not defined yet and introduce them later, as suggested in the other answers, but calling them immidiately will always raise an error.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>Not at the moment, no. There is <a href=\"http://Wiki.ECMAScript.Org/doku.php?id=harmony%3adirect_proxies\" rel=\"nofollow\">a proposal for ECMAScript Harmony, called <em>proxies</em></a>, which implements a similar (actually, much more powerful) feature, but ECMAScript Harmony isn't out yet and probably won't be for a couple of years.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>method_missing</strong> does not fit well with JavaScript for the same reason it does not exist in Python: in both languages, methods are just attributes that happen to be functions; and objects often have public attributes that are not callable. Contrast with Ruby, where the public interface of an object is 100% methods.</p>\n\n<p>What is needed in JavaScript is a hook to catch access to missing attributes, whether they are methods or not. Python has it: see the <a href=\"http://docs.python.org/2/reference/datamodel.html#object.__getattr__\">__getattr__</a> special method.</p>\n\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/noSuchMethod\">__noSuchMethod__</a> proposal by Mozilla introduced yet another inconsistency in a language riddled with them. </p>\n\n<p>The way forward for JavaScript is the <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Proxy\">Proxy mechanism</a> (also in <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony%3adirect_proxies\">ECMAscript Harmony</a>), which is closer to the Python protocol for <a href=\"http://docs.python.org/2/reference/datamodel.html#customizing-attribute-access\">customizing attribute access</a> than to Ruby's <strong>method_missing</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>I came to this question because I was looking for a way to fall through to another object if the method wasn't present on the first object.  It's not quite as flexible as what your asking - for instance if a method is missing from both then it will fail.</p>\n\n<p>I was thinking of doing this for a little library I've got that helps configure extjs objects in a way that also makes them more testable.  I had seperate calls to actually get hold of the objects for interaction and thought this might be a nice way of sticking those calls together by effectively returning an augmented type</p>\n\n<p>I can think of two ways of doing this:</p>\n\n<p><strong>Prototypes</strong></p>\n\n<p>You can do this using prototypes - as stuff falls through to the prototype if it isn't on the actual object.  It seems like this wouldn't work if the set of functions you want drop through to use the this keyword - obviously your object wont know or care about stuff that the other one knows about.</p>\n\n<p>If its all your own code and you aren't using this and constructors ... which is a good idea for lots of reasons then you can do it like this:</p>\n\n<pre><code>    var makeHorse = function () {\n        var neigh = \"neigh\";\n\n        return {\n            doTheNoise: function () {\n                return neigh + \" is all im saying\"\n            },\n            setNeigh: function (newNoise) {\n                neigh = newNoise;\n            }\n        }\n    };\n\n    var createSomething = function (fallThrough) {\n        var constructor = function () {};\n        constructor.prototype = fallThrough;\n        var instance = new constructor();\n\n        instance.someMethod = function () {\n            console.log(\"aaaaa\");\n        };\n        instance.callTheOther = function () {\n            var theNoise = instance.doTheNoise();\n            console.log(theNoise);\n        };\n\n        return instance;\n    };\n\n    var firstHorse = makeHorse();\n    var secondHorse = makeHorse();\n    secondHorse.setNeigh(\"mooo\");\n\n    var firstWrapper = createSomething(firstHorse);\n    var secondWrapper = createSomething(secondHorse);\n    var nothingWrapper = createSomething();\n\n    firstWrapper.someMethod();\n    firstWrapper.callTheOther();\n    console.log(firstWrapper.doTheNoise());\n\n    secondWrapper.someMethod();\n    secondWrapper.callTheOther();\n    console.log(secondWrapper.doTheNoise());\n\n    nothingWrapper.someMethod();\n    //this call fails as we dont have this method on the fall through object (which is undefined)\n    console.log(nothingWrapper.doTheNoise());\n</code></pre>\n\n<p>This doesn't work for my use case as the extjs guys have not only mistakenly used 'this' they've also built a whole crazy classical inheritance type system on the principal of using prototypes and 'this'.</p>\n\n<p>This is actually the first time I've used prototypes/constructors and I was slightly baffled that you can't just set the prototype - you also have to use a constructor.  There is a magic field in objects (at least in firefox) call __proto which is basically the real prototype.  it seems the actual prototype field is only used at construction time... how confusing!</p>\n\n<hr>\n\n<p><strong>Copying methods</strong></p>\n\n<p>This method is probably more expensive but seems more elegant to me and will also work on code that is using <code>this</code> (eg so you can use it to wrap library objects).  It will also work on stuff written using the functional/closure style aswell - I've just illustrated it with this/constructors to show it works with stuff like that.</p>\n\n<p>Here's the mods:</p>\n\n<pre><code>    //this is now a constructor\n    var MakeHorse = function () {\n        this.neigh = \"neigh\";\n    };\n\n    MakeHorse.prototype.doTheNoise = function () {\n        return this.neigh + \" is all im saying\"\n    };\n    MakeHorse.prototype.setNeigh = function (newNoise) {\n        this.neigh = newNoise;\n    };\n\n    var createSomething = function (fallThrough) {\n        var instance = {\n            someMethod : function () {\n                console.log(\"aaaaa\");\n            },\n            callTheOther : function () {\n                //note this has had to change to directly call the fallThrough object\n                var theNoise = fallThrough.doTheNoise();\n                console.log(theNoise);\n            }\n        };\n\n        //copy stuff over but not if it already exists\n        for (var propertyName in fallThrough)\n            if (!instance.hasOwnProperty(propertyName))\n                instance[propertyName] = fallThrough[propertyName];\n\n        return instance;\n    };\n\n    var firstHorse = new MakeHorse();\n    var secondHorse = new MakeHorse();\n    secondHorse.setNeigh(\"mooo\");\n\n    var firstWrapper = createSomething(firstHorse);\n    var secondWrapper = createSomething(secondHorse);\n    var nothingWrapper = createSomething();\n\n    firstWrapper.someMethod();\n    firstWrapper.callTheOther();\n    console.log(firstWrapper.doTheNoise());\n\n    secondWrapper.someMethod();\n    secondWrapper.callTheOther();\n    console.log(secondWrapper.doTheNoise());\n\n    nothingWrapper.someMethod();\n    //this call fails as we dont have this method on the fall through object (which is undefined)\n    console.log(nothingWrapper.doTheNoise());\n</code></pre>\n\n<p>I was actually anticipating having to use <code>bind</code> in there somewhere but it appears not to be necessary.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In Ruby I think you can call a method that hasn't been defined and yet capture the name of the method called and do processing of this method at runtime.</p>\n\n<p>Can Javascript do the same kind of thing ?</p>\n",
            "last_activity_date": 1410865859,
            "question_id": 9779624,
            "score": 28,
            "tags": [
                "javascript",
                "ruby",
                "metaprogramming"
            ],
            "title": "Does Javascript have something like Ruby&#39;s method_missing feature?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try    </p>\n\n<pre><code>num.toString(2);\n</code></pre>\n\n<p>The 2 is the radix and can be any base between 2 and 36</p>\n\n<p>source <a href=\"http://www.w3schools.com/jsref/jsref_tostring_number.asp\">here</a></p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>This will only work for positive numbers, Javascript represents negative binary integers in two's-complement notation. I made this little function which should do the trick, I haven't tested it out properly:</p>\n\n<pre><code>function dec2Bin(dec)\n{\n    if(dec &gt;= 0) {\n        return dec.toString(2);\n    }\n    else {\n        /* Here you could represent the number in 2s compliment but this is not what \n           JS uses as its not sure how many bits are in your number range. There are \n           some suggestions http://stackoverflow.com/questions/10936600/javascript-decimal-to-binary-64-bit \n        */\n        return (~dec).toString(2);\n    }\n}\n</code></pre>\n\n<p>I had some help from <a href=\"http://stackoverflow.com/questions/4338315/javascript-inverting-a-binary-value-of-a-number\">here</a></p>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>I don't know exactly why, but this worked on Chrome.\nI just made a \"fake\" bit shift operation and worked fine to me...</p>\n\n<pre><code>function dec2Bin(dec){\n    return (dec &gt;&gt;&gt; 0).toString(2);\n}\n</code></pre>\n\n<p>Hope it helps..</p>\n\n<p><hr>\nEDIT:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/16155592/negative-numbers-to-binary-string\">Here</a> is the explanation.</p>\n\n<blockquote>\n  <p>-3 >>> 0 (right logical shift) coerces its arguments to unsigned integers, which is why you get the 32-bit two's complement representation of -3.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>A simple way is just...</p>\n\n<pre><code>Number(42).toString(2);\n\n// \"101010\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p><strong>Number System</strong></p>\n\n<p><code>(123456).toString(2)</code> will convert numbers to the base 2 <a href=\"http://en.wikipedia.org/wiki/Positional_notation\">positional numeral system</a>. In this system negative numbers are written with minus signs just like in decimal.</p>\n\n<p><strong>Internal Representation</strong></p>\n\n<p>The internal representation of numbers is <a href=\"http://en.wikipedia.org/wiki/IEEE_754-1985#Double_precision\">64 bit floating point</a> and some limitations are discussed in <a href=\"http://stackoverflow.com/questions/2983206/bitwise-and-in-javascript-with-a-64-bit-integer\">this answer</a>. There is <strong>no easy way</strong> to create a bit-string representation of this in javascript nor access specific bits.</p>\n\n<p><strong>Masks &amp; Bitwise Operators</strong></p>\n\n<p>MDN has a <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators\">good overview</a> of how bitwise operators work. Importantly:</p>\n\n<blockquote>\n  <p>Bitwise operators treat their operands as a sequence of <strong>32 bits</strong> (zeros and ones)</p>\n</blockquote>\n\n<p>Before operations are applied the 64 bit floating points numbers are cast to 32 bit signed integers. After they are converted back.</p>\n\n<p>Here is the MDN example code for converting numbers into 32-bit strings.</p>\n\n<pre><code>function createBinaryString (nMask) {\n  // nMask must be between -2147483648 and 2147483647\n  for (var nFlag = 0, nShifted = nMask, sMask = \"\"; nFlag &lt; 32;\n       nFlag++, sMask += String(nShifted &gt;&gt;&gt; 31), nShifted &lt;&lt;= 1);\n  return sMask;\n}\n\ncreateBinaryString(0) //-&gt; \"00000000000000000000000000000000\"\ncreateBinaryString(123) //-&gt; \"00000000000000000000000001111011\"\ncreateBinaryString(-1) //-&gt; \"11111111111111111111111111111111\"\ncreateBinaryString(-1123456) //-&gt; \"11111111111011101101101110000000\"\ncreateBinaryString(0x7fffffff) //-&gt; \"01111111111111111111111111111111\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I'd like to see integers, positive or negative, in binary.</p>\n\n<p>Rather like this question, but for javascript.\n<a href=\"http://stackoverflow.com/questions/5263187/how-can-i-print-a-integer-in-binary-format-in-java\">Print an integer in binary format in Java</a></p>\n",
            "last_activity_date": 1421954049,
            "question_id": 9939760,
            "score": 27,
            "tags": [
                "javascript"
            ],
            "title": "how do I convert an integer to binary in javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can but they must be called within the scope of the <code>ready()</code> method otherwise they lose scope when the <code>ready()</code> method exits.</p>\n\n<p>For example, the code below will work:</p>\n\n<pre><code>$(document).ready(function(){\n  function foo()\n  {\n    alert('Bar');\n  }\n\n  foo(); // still in the scope of the ready method\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Your function is defined within the scope of the <code>$(document).ready()</code> callback and cannot be <em>seen</em> from the <em>outside</em>. Either define the function outside the <code>$(document).ready()</code> scope of call it only from within.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Not sure why defining the function with in the scope of <code>ready()</code> is important to you, but you can make it work by declaring <code>foo</code> up front:</p>\n\n<pre><code>&lt;html&gt;&lt;head&gt;\n&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.1/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\nvar foo;                           // Here's the difference\n$(document).ready(function(){\n  foo = function ()\n  {\n    alert('Bar');\n  }\n});\n&lt;/script&gt;&lt;/head&gt;&lt;body&gt;\n&lt;input type=\"button\" onclick=\"foo()\" value=\"Click me\"&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>Obviously you can't call <code>foo()</code> from the inline script immediately after <code>ready()</code> because the <code>ready()</code> code hasn't yet run, but you can call the function later on.</p>\n\n<p>Just make sure that nothing can try to call <code>foo()</code> before the <code>ready()</code> code has run (or make the initial declaration of <code>foo()</code> a harmless function).</p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>They will come up as undefined if you put them in any scope that is not theirs.  If you really want to use them outside of the scope of $(document).ready(...) then you need to declare them externally.  Such as:</p>\n\n<pre><code>var foo;\n\n$(document).ready(function(){\n  foo = function()\n  {\n    alert('Bar');\n  }\n});\n\nfoo(); // works now because it is in scope\n</code></pre>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>&lt;script&gt;\n    $(document).ready(function(){\n      myfnc = function (param1, param2)\n      {\n        alert('Hello');\n      }\n      myfnc();\n    });\n&lt;/script&gt;\n&lt;input type=\"button\" onclick=\"myfnc('arg1', 'arg2')\" value=\"Click me\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Functions come up as undefined if I place them in the document.ready() function:</p>\n\n<pre><code>$(document).ready(function(){\n  function foo()\n  {\n    alert('Bar');\n  }\n});\n\nfoo(); // Undefined\n</code></pre>\n\n<p>Why does this happen? I'm sure I'm just in need of some simple understanding :)</p>\n",
            "last_activity_date": 1409989961,
            "question_id": 1055767,
            "score": 25,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Why can I not define functions in jQuery&#39;s document.ready()?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<pre><code> function secondsToString(seconds)\n{\nvar numyears = Math.floor(seconds / 31536000);\nvar numdays = Math.floor((seconds % 31536000) / 86400); \nvar numhours = Math.floor(((seconds % 31536000) % 86400) / 3600);\nvar numminutes = Math.floor((((seconds % 31536000) % 86400) % 3600) / 60);\nvar numseconds = (((seconds % 31536000) % 86400) % 3600) % 60;\nreturn numyears + \" years \" +  numdays + \" days \" + numhours + \" hours \" + numminutes + \" minutes \" + numseconds + \" seconds\";\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>Try following:</p>\n\n<pre><code>seconds = ~~(milliseconds / 1000);\nminutes = ~~(seconds / 60);\nhours = ~~(minutes / 60);\ndays = ~~(hours / 24);\nweeks = ~~(days / 7);\nyear = ~~(days / 365);\n</code></pre>\n\n<p>Note:</p>\n\n<ul>\n<li>A usual year has 365 days. A leap year has 366 days, so you need additional check if this is an issue for you.</li>\n<li>The similar problem with daylight saving. Some days have 23 and some 25 hours when time's changed.</li>\n</ul>\n\n<p>Conclusion: this is a rude but small and simple snippet :)</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>With help of Royi we've got code that <strong>outputs time interval in a human readable form</strong>:</p>\n\n<pre><code>function millisecondsToStr (milliseconds) {\n    // TIP: to find current time in milliseconds, use:\n    // var  current_time_milliseconds = new Date().getTime();\n\n    function numberEnding (number) {\n        return (number &gt; 1) ? 's' : '';\n    }\n\n    var temp = Math.floor(milliseconds / 1000);\n    var years = Math.floor(temp / 31536000);\n    if (years) {\n        return years + ' year' + numberEnding(years);\n    }\n    //TODO: Months! Maybe weeks? \n    var days = Math.floor((temp %= 31536000) / 86400);\n    if (days) {\n        return days + ' day' + numberEnding(days);\n    }\n    var hours = Math.floor((temp %= 86400) / 3600);\n    if (hours) {\n        return hours + ' hour' + numberEnding(hours);\n    }\n    var minutes = Math.floor((temp %= 3600) / 60);\n    if (minutes) {\n        return minutes + ' minute' + numberEnding(minutes);\n    }\n    var seconds = temp % 60;\n    if (seconds) {\n        return seconds + ' second' + numberEnding(seconds);\n    }\n    return 'less than a second'; //'just now' //or other string you like;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<pre><code>function millisecondsToString(milliseconds) {\n    var oneHour = 3600000;\n    var oneMinute = 60000;\n    var oneSecond = 1000;\n    var seconds = 0;\n    var minutes = 0;\n    var hours = 0;\n    var result;\n\n    if (milliseconds &gt;= oneHour) {\n        hours = Math.floor(milliseconds / oneHour);\n    }\n\n    milliseconds = hours &gt; 0 ? (milliseconds - hours * oneHour) : milliseconds;\n\n    if (milliseconds &gt;= oneMinute) {\n        minutes = Math.floor(milliseconds / oneMinute);\n    }\n\n    milliseconds = minutes &gt; 0 ? (milliseconds - minutes * oneMinute) : milliseconds;\n\n    if (milliseconds &gt;= oneSecond) {\n        seconds = Math.floor(milliseconds / oneSecond);\n    }\n\n    milliseconds = seconds &gt; 0 ? (milliseconds - seconds * oneSecond) : milliseconds;\n\n    if (hours &gt; 0) {\n        result = (hours &gt; 9 ? hours : \"0\" + hours) + \":\";\n    } else {\n        result = \"00:\";\n    }\n\n    if (minutes &gt; 0) {\n        result += (minutes &gt; 9 ? minutes : \"0\" + minutes) + \":\";\n    } else {\n        result += \"00:\";\n    }\n\n    if (seconds &gt; 0) {\n        result += (seconds &gt; 9 ? seconds : \"0\" + seconds) + \":\";\n    } else {\n        result += \"00:\";\n    }\n\n    if (milliseconds &gt; 0) {\n        result += (milliseconds &gt; 9 ? milliseconds : \"0\" + milliseconds);\n    } else {\n        result += \"00\";\n    }\n\n    return result;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This function outputs seconds in this format : 11h 22m, 1y 244d, 42m 4s etc\nSet the max variable to show as many identifiers as you want.</p>\n\n<pre><code>function secondsToString (seconds) {\n\nvar years = Math.floor(seconds / 31536000);\nvar max =2;\nvar current = 0;\nvar str = \"\";\nif (years &amp;&amp; current&lt;max) {\n    str+= years + 'y ';\n    current++;\n}\nvar days = Math.floor((seconds %= 31536000) / 86400);\nif (days &amp;&amp; current&lt;max) {\n    str+= days + 'd ';\n    current++;\n}\nvar hours = Math.floor((seconds %= 86400) / 3600);\nif (hours &amp;&amp; current&lt;max) {\n    str+= hours + 'h ';\n    current++;\n}\nvar minutes = Math.floor((seconds %= 3600) / 60);\nif (minutes &amp;&amp; current&lt;max) {\n    str+= minutes + 'm ';\n    current++;\n}\nvar seconds = seconds % 60;\nif (seconds &amp;&amp; current&lt;max) {\n    str+= seconds + 's ';\n    current++;\n}\n\nreturn str;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is a solution. Later you can split by \":\" and take the values of the array</p>\n\n<pre><code> /**\n * Converts milliseconds to human readeable language separated by \":\"\n * Example: 190980000 --&gt; 2:05:3 --&gt; 2days 5hours 3min\n */\nfunction dhm(t){\n    var cd = 24 * 60 * 60 * 1000,\n        ch = 60 * 60 * 1000,\n        d = Math.floor(t / cd),\n        h = '0' + Math.floor( (t - d * cd) / ch),\n        m = '0' + Math.round( (t - d * cd - h * ch) / 60000);\n    return [d, h.substr(-2), m.substr(-2)].join(':');\n}\n\n//Example\nvar delay = 190980000;                   \nvar fullTime = dhm(delay);\nconsole.log(fullTime);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>millisToTime = function(ms){\n\n    x = ms / 1000;\n    seconds = Math.round(x % 60);\n    x /= 60;\n    minutes = Math.round(x % 60);\n    x /= 60;\n    hours = Math.round(x % 24);\n    x /= 24;\n    days = Math.round(x);\n\n    return {\"Days\" : days, \"Hours\" : hours, \"Minutes\" : minutes, \"Seconds\" : seconds};\n}\n</code></pre>\n\n<p>This will take milliseconds as an int, and give you an JSON object containing all the info you could need</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>To show only what you need and not day 0, hours 0...</p>\n\n<pre><code>formatTime = function(time) {\n        var ret = time % 1000 + ' ms';\n        time = Math.floor(time / 1000);\n        if (time !== 0) {\n            ret = time % 60 + \"s \"+ret;\n            time = Math.floor(time / 60);\n            if (time !== 0) {\n                ret = time % 60 + \"min \"+ret;\n                time = Math.floor(time / 60);\n                if (time !== 0) {\n                    ret = time % 60 + \"h \"+ret;\n                     ...\n                }\n            }           \n        }\n        return ret;\n    };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm a big fan of objects, so I created this from <a href=\"https://metacpan.org/pod/Time::Seconds\" rel=\"nofollow\">https://metacpan.org/pod/Time::Seconds</a></p>\n\n<p>Usage:</p>\n\n<pre><code>var human_readable = new TimeSeconds(986543).pretty(); // 11 days, 10 hours, 2 minutes, 23 seconds\n\n;(function(w) {\n  var interval = {\n    second: 1,\n    minute: 60,\n    hour: 3600,\n    day: 86400,\n    week: 604800,\n    month: 2629744, // year / 12\n    year: 31556930 // 365.24225 days\n  };\n\n  var TimeSeconds = function(seconds) { this.val = seconds; };\n\n  TimeSeconds.prototype.seconds = function() { return parseInt(this.val); };\n  TimeSeconds.prototype.minutes = function() { return parseInt(this.val / interval.minute); };\n  TimeSeconds.prototype.hours = function() { return parseInt(this.val / interval.hour); };\n  TimeSeconds.prototype.days = function() { return parseInt(this.val / interval.day); };\n  TimeSeconds.prototype.weeks = function() { return parseInt(this.val / interval.week); };\n  TimeSeconds.prototype.months = function() { return parseInt(this.val / interval.month); };\n  TimeSeconds.prototype.years = function() { return parseInt(this.val / interval.year); };\n\n  TimeSeconds.prototype.pretty = function(chunks) {\n    var val = this.val;\n    var str = [];\n\n    if(!chunks) chunks = ['day', 'hour', 'minute', 'second'];\n\n    while(chunks.length) {\n      var i = chunks.shift();\n      var x = parseInt(val / interval[i]);\n      if(!x &amp;&amp; chunks.length) continue;\n      val -= interval[i] * x;\n      str.push(x + ' ' + (x == 1 ? i : i + 's'));\n    }\n\n    return str.join(', ').replace(/^-/, 'minus ');\n  };\n\n  w.TimeSeconds = TimeSeconds;\n})(window);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are interested in an existing javascript library that does the job very well, you may want to check <a href=\"http://momentjs.com/\" rel=\"nofollow\">moment.js</a>.</p>\n\n<p>More specifically, the relevant moment.js piece for your question is <a href=\"http://momentjs.com/docs/#/durations/\" rel=\"nofollow\">durations</a>. </p>\n\n<p>Here are some examples of how you can take advantage of it to achieve your task:</p>\n\n<pre><code>var duration = moment.duration(31536000);\n\n// Using the built-in humanize function:\nconsole.log(duration.humanize());   // Output: \"9 hours\"\nconsole.log(duration.humanize(true));   // Output: \"in 9 hours\"\n</code></pre>\n\n<p>moment.js has built-in support for 50+ human languages, so if you use the <code>humanize()</code> method you get multi-language support for free.</p>\n\n<p>If you want to display the exact time information, you can take advantage of the <a href=\"https://github.com/codebox/moment-precise-range\" rel=\"nofollow\">moment-precise-range</a> plug-in for moment.js that was created exactly for this purpose:</p>\n\n<pre><code>console.log(moment.preciseDiff(0, 39240754000);\n// Output: 1 year 2 months 30 days 5 hours 12 minutes 34 seconds\n</code></pre>\n\n<p>One thing to note is that currently moment.js does not support weeks / days (in week) for duration object.</p>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I cleaned up one of the other answers a bit provides nice '10 seconds ago' style strings:</p>\n\n<pre><code>function msago (ms) {\n    function suffix (number) { return ((number &gt; 1) ? 's' : '') + ' ago'; }\n    var temp = ms / 1000;\n    var years = Math.floor(temp / 31536000);\n    if (years) return years + ' year' + suffix(years);\n    var days = Math.floor((temp %= 31536000) / 86400);\n    if (days) return days + ' day' + suffix(days);\n    var hours = Math.floor((temp %= 86400) / 3600);\n    if (hours) return hours + ' hour' + suffix(hours);\n    var minutes = Math.floor((temp %= 3600) / 60);\n    if (minutes) return minutes + ' minute' + suffix(minutes);\n    var seconds = Math.floor(temp % 60);\n    if (seconds) return seconds + ' second' + suffix(seconds);\n    return 'less then a second ago';\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Way more simple and readable.</p>\n\n<pre><code>milliseconds = 12345678;\nmydate=new Date(milliseconds);\nhumandate=mydate.getUTCHours()+\" hours, \"+mydate.getUTCMinutes()+\" minutes and \"+mydate.getUTCSeconds()+\" second(s)\";\n</code></pre>\n\n<p>Which gives:</p>\n\n<blockquote>\n  <p>\"3 hours, 25 minutes and 45 second(s)\"</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>With the help of Dan answer, I came up with this if you want to calculate the difference between the post created time (from DB it should be retrieved as UTC) and the users system time and then show them the elapsed time, you could use below function</p>\n\n<p>`\nfunction dateToStr(input_date) {</p>\n\n<pre><code>input_date= input_date+\" UTC\";\n// convert times in milliseconds\nvar input_time_in_ms = new Date(input_date).getTime();\nvar current_time_in_ms = new Date().getTime();\nvar elapsed_time = current_time_in_ms - input_time_in_ms;\n\nfunction numberEnding (number) {\n    return (number &gt; 1) ? 's' : '';\n}\n\nvar temp = Math.floor(elapsed_time / 1000);\nvar years = Math.floor(temp / 31536000);\nif (years) {\n    return years + ' year' + numberEnding(years);\n}\n//TODO: Months! Maybe weeks? \nvar days = Math.floor((temp %= 31536000) / 86400);\nif (days) {\n    return days + ' day' + numberEnding(days);\n}\nvar hours = Math.floor((temp %= 86400) / 3600);\nif (hours) {\n    return hours + ' hour' + numberEnding(hours);\n}\nvar minutes = Math.floor((temp %= 3600) / 60);\nif (minutes) {\n    return minutes + ' minute' + numberEnding(minutes);\n}\nvar seconds = temp % 60;\nif (seconds) {\n    return seconds + ' second' + numberEnding(seconds);\n}\nreturn 'less than a second'; //'just now' //or other string you like;\n</code></pre>\n\n<p>}`</p>\n\n<p>eg: usage </p>\n\n<pre><code>var str = dateToStr('2014-10-05 15:22:16');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need a code snippet for converting amount of time given by number of seconds into some human readable form. The function should receive a number and output a string like this:</p>\n\n<pre><code>34 seconds \n12 minutes \n4 hours \n5 days \n4 months\n1 year\n</code></pre>\n\n<p>No formatting required, hard-coded format will go.</p>\n",
            "last_activity_date": 1412888077,
            "question_id": 8211744,
            "score": 23,
            "tags": [
                "javascript",
                "datetime",
                "time"
            ],
            "title": "Convert time interval given in seconds into more human readable form"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>var l_lang;\n  if (navigator.userLanguage) // Explorer\n    l_lang = navigator.userLanguage;\n  else if (navigator.language) // FF\n    l_lang = navigator.language;\n  else\n    l_lang = \"en\";\n</code></pre>\n\n<p>Source: <a href=\"http://forums.digitalpoint.com/showthread.php?t=631706\">http://forums.digitalpoint.com/showthread.php?t=631706</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>The following properties exist on the <code>navigator</code> object (which can also be known as <code>clientInformation</code> on IE but there's no reason ever to use that name):</p>\n\n<ul>\n<li><code>language</code> (non-IE, browser install language)</li>\n<li><code>browserLanguage</code> (IE, browser install language)</li>\n<li><code>userLanguage</code> (IE, user-level OS-wide language setting)</li>\n<li><code>systemLanguage</code> (IE, OS installation language)</li>\n</ul>\n\n<p>But! <strong>You should never use any of these properties!</strong> They will be the wrong language in many cases.</p>\n\n<p>None of them reflect the language settings the user actually gets to configure in the browser's \u2018preferred languages\u2019 UI, and they are difficult-to-impossible for users to change. You will cause big frustration by using any of these values without an additional easy manual way to switch languages.</p>\n\n<p>The correct place you should sniff to decide what language to use by default, as configured by the normal browser UI, is the <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4\"><code>Accept-Language</code></a> header passed to your server in the HTTP request. This is a ranked list of preferred languages from which you can pick, and it's what ASP.NET uses to guess an automatic client Culture, if you use that.</p>\n\n<p>Unfortunately, this property is not available from JavaScript!</p>\n\n<p>What you typically do is use your server side to parse the <code>Accept-Language</code> header and choose a single appropriate language to use from it. In ASP.NET you can get a pre-sorted list from <a href=\"http://msdn.microsoft.com/en-us/library/system.web.httprequest.userlanguages.aspx\">HttpRequest.UserLanguages</a> and pick the first that you like.</p>\n\n<p>You then spit that language name out into a <code>&lt;script&gt;</code> element to pass the language information to the client side.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p><code>navigator.languages</code> is an array and contains all the selected languages in order. And only works for Chrome and Firefox.</p>\n\n<p>It is not the same as <code>navigator.language</code> and by that I mean that <code>navigator.language</code> does not necessarily match <code>navigator.languages[0]</code>.</p>\n\n<p>Just to be clear.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Does anyone know how to obtain the browser culture from Firefox and Google Chrome using javascript?  Note: This is an asp.net 3.5 web application.</p>\n\n<p>The requirement is to try and set the application's display culture based on the browser culture.  I have found very few bits and pieces of information for the other browsers but they do not seem to work.</p>\n\n<p>I am able to get it in IE with the following snippet of code:</p>\n\n<pre><code>var browserCulture = this.clientInformation.browserLanguage;\n</code></pre>\n\n<p>Any info would be great!</p>\n",
            "last_activity_date": 1422452671,
            "question_id": 2678230,
            "score": 23,
            "tags": [
                "javascript",
                "internet-explorer",
                "firefox",
                "google-chrome",
                "culture"
            ],
            "title": "How to getting browser current locale preference using javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Try</p>\n\n<pre><code>$.getJSON(urlOnDiffDomain, function(data, textStatus){\n    alert('success...');\n});\n</code></pre>\n\n<p>Works for me, usally. You need to add &amp;callback=? to urlOnDiffDomain, where jQuery automatically replaces the callback used in JSONP.</p>\n\n<p>The error callback is not triggered, but you can use the global $.ajaxError, like this</p>\n\n<pre><code>$('.somenode').ajaxError(function(e, xhr, settings, exception) {\n    alert('failed');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The <code>success</code> callback method is called when the server responds. The <code>$.ajax</code> method sets up a function that handles the response by calling the <code>success</code> callback method.</p>\n\n<p>The most likely reason that the <code>success</code> method is not called, is that the response from the server is not correct. The <code>$.ajax</code> method sends a value in the <code>callback</code> query string that the server should use as function name in the JSONP response. If the server is using a different name, the function that the <code>$.ajax</code> method has set up is never called.</p>\n\n<p>If the server can not use the value in the <code>callback</code> query string to set the function name in the response, you can specify what function name the <code>$.ajax</code> method should expect from the server. Add the property <code>jsonpCallback</code> to the option object, and set the value to the name of the function that the server uses in the response.</p>\n\n<p>If for example the <code>$.ajax</code> method is sending a request to the server using the URL <code>http://service.mydomain.com/getdata?callback=jsonp12345</code>, the server should respond with something looking like:</p>\n\n<pre><code>jsonp12345({...});\n</code></pre>\n\n<p>If the server ignores the <code>callback</code> query string, and instead responds with something like:</p>\n\n<pre><code>mycallback({...});\n</code></pre>\n\n<p>Then you will have to override the function name by adding a property to the options object:</p>\n\n<pre><code>$.ajax({\n  url: urlOnDiffDomain,\n  dataType: 'jsonp',\n  data: {},\n  success: function(data, textStatus) {\n    alert('success...');\n  },\n  jsonpCallback: 'mycallback'\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Alright.  In case anyone needs to know in the future...In hindsight, the solution probably should have been more obvious than it was, but you need to have the web-response write directly to the response <em>stream</em>.  Simply returning a string of JSON doesn't do it, you need to someone construct it and stream it back.  The code in my original post will work fine if you do indeed do that.  </p>\n\n<p>Example of service code:</p>\n\n<pre><code>public void DoWork()\n{\n  //it will work without this, but just to be safe\n  HttpContext.Current.Response.ContentType = \"application/json\"; \n  string qs = HttpContext.Current.Request.QueryString[\"callback\"];\n  HttpContext.Current.Response.Write(qs + \"( [{ \\\"x\\\": 10, \\\"y\\\": 15}] )\");\n}\n</code></pre>\n\n<p>Just for the sake of being explicit, this is the client-side code.</p>\n\n<pre><code>function localDemo(){\n  $.getJSON(\"http://someOtherDomain.com/Service1.svc/DoWork?callback=?\",\n    function(data){\n      $.each(data, function(i,item){            \n        alert(item.x);\n      });\n  });\n}\n</code></pre>\n\n<p>If there is a better way to do this, I am all ears.  For everyone else, I know there is some concept of native support in WCF 4.0 for JSONP.  Also, you may want to do a little <a href=\"http://blog.altosresearch.com/supporting-the-jsonp-callback-protocol-with-jquery-and-java/\">checking</a> for security purposes - though I have not investigated much.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>This is not a complete answer to your question, but I think someone who passes by would like to know this: </p>\n\n<p>When you deal with <a href=\"http://msdn.microsoft.com/en-us/library/ee816916.aspx\" rel=\"nofollow\">JSONP from WCF REST</a> try to use: </p>\n\n<p><code>[JavascriptCallbackBehavior(UrlParameterName = \"$callback\")]</code></p>\n\n<p>for your service implementation; this should give you JSONP out-of-the-box.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>    $.ajax({\n                url:' &lt;?php echo URL::site('ajax/editing?action=artistSeracher') ?&gt;',\n                dataType: \"json\",\n                data: {\n                    featureClass: \"P\",\n                    style: \"full\",\n                    maxRows: 12,\n                    artist: request.term\n                },\n                success: function( data ) {\n                    response( $.map( data, function( item ) {\n                        return {\n                            label: item.artist,\n                            value: item.artist,\n                            id: item.id\n                        }\n                    }));\n                },\n                error: function (xhr, ajaxOptions, thrownError) {\n                    alert(xhr.status);\n                    alert(thrownError);\n                  }\n            });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Been doing some playing call my service which is on a different domain using jQuery.  The call to the service is successfully made (my debug point gets tripped), and the correct response is returned (I sniff the traffic). </p>\n\n<p>My problem is mainly that the success and failure callbacks don't get fired.  I have read some <a href=\"http://stackoverflow.com/questions/309953/how-do-i-catch-jquery-getjson-or-ajax-with-datatype-set-to-jsonp-error-wh\">other posts</a> on SO that indicate the error event is not fired when using JSONP.  Is that the case with the success event (perhaps because it is assumed that I am providing my own callback function), as well, or is there a way to fire my success callback.  Thanks in advance.</p>\n\n<pre><code>$.ajax({\n  type: \"GET\",\n  url: urlOnDiffDomain,\n  async: false,\n  cache: false,\n  dataType: 'jsonp',\n  data: {},\n  success: function(data, textStatus) {\n    alert('success...');\n  },\n  error: function(xhr, ajaxOptions, thrownError) {\n   alert('failed....');\n  }\n}); \n</code></pre>\n",
            "last_activity_date": 1348772870,
            "question_id": 2380551,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "jsonp"
            ],
            "title": "Jquery success function not firing using JSONP"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I couldn't get something similar to work, so my solution was to locate the character position of the caret in the textarea, cut out the current paragraph and display this next to the textarea. </p>\n\n<p>Using the offset, I placed a fake cursor (<code>div</code>, <code>display:inline</code>, 1px wide, <code>border-left: 1px solid black</code>) in this view of the editable text.</p>\n\n<p>This way, you can create a visual feedback area where you can show the result of effects (quite like stackoverflow does when you write an answer).</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You can create a separate (invisible) element and fill it with textarea content from start to the cursor position. Textarea and the \"clone\" should have matching CSS (font properties, padding/margin/border and width). Then stack these elements on top of each other.</p>\n\n<p>Let me start with a working example, then walk through the code: <a href=\"http://jsfiddle.net/g7rBk/\" rel=\"nofollow\">http://jsfiddle.net/g7rBk/</a></p>\n\n<h3><a href=\"http://jsfiddle.net/mLocgoeq/\" rel=\"nofollow\">Updated Fiddle</a> (<em>with IE8 fix</em>)</h3>\n\n<p>HTML:</p>\n\n<pre><code>&lt;textarea id=\"input\"&gt;&lt;/textarea&gt;\n&lt;div id=\"output\"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;\n&lt;div id=\"xy\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Textarea is self-explanatory. Output is a hidden element to which we'll pass text content and make measures. What's important is that we'll use an inline element. the \"xy\" div is just an indicator for testing purposes.</p>\n\n<p>CSS:</p>\n\n<pre><code>/* identical styling to match the dimensions and position of textarea and its \"clone\"\n*/\n#input, #output {\n    position:absolute;\n    top:0;\n    left:0;\n    font:14px/1 monospace;\n    padding:5px;\n    border:1px solid #999;\n    white-space:pre;\n    margin:0;\n    background:transparent;\n    width:300px;\n    max-width:300px;\n}\n/* make sure the textarea isn't obscured by clone */\n#input { \n    z-index:2;\n    min-height:200px;\n}\n\n#output { \n    border-color:transparent; \n}\n\n/* hide the span visually using opacity (not display:none), so it's still measurable; make it break long words inside like textarea does. */\n#output span {\n    opacity:0;\n    word-wrap: break-word;\n    overflow-wrap: break-word;\n}\n/* the cursor position indicator */\n#xy { \n    position:absolute; \n    width:4px;\n    height:4px;\n    background:#f00;\n}\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>/* get references to DOM nodes we'll use */\nvar input = document.getElementById('input'),\n    output = document.getElementById('output').firstChild,\n    position = document.getElementById('position'),\n\n/* And finally, here it goes: */\n    update = function(){\n         /* Fill the clone with textarea content from start to the position of the caret. You may need to expand here to support older IE [1]. The replace /\\n$/ is necessary to get position when cursor is at the beginning of empty new line.\n          */\n         output.innerHTML = input.value.substr( 0, input.selectionStart ).replace(/\\n$/,\"\\n\\001\");\n\n        /* the fun part! \n           We use an inline element, so getClientRects[2] will return a collection of rectangles wrapping each line of text.\n           We only need the position of the last rectangle.\n         */\n        var rects = output.getClientRects(),\n            lastRect = rects[ rects.length - 1 ],\n            top = lastRect.top - input.scrollTop,\n            left = lastRect.left+lastRect.width;\n        /* position the little div and see if it matches caret position :) */\n        xy.style.cssText = \"top: \"+top+\"px;left: \"+left+\"px\";\n    }\n</code></pre>\n\n<p>[1] <a href=\"http://stackoverflow.com/questions/263743/how-to-get-caret-position-in-textarea\">Caret position in textarea, in characters from the start</a></p>\n\n<p>[2] <a href=\"https://developer.mozilla.org/en/docs/DOM/element.getClientRects\" rel=\"nofollow\">https://developer.mozilla.org/en/docs/DOM/element.getClientRects</a></p>\n\n<p>Edit: This example only works for fixed-width textarea. To make it work with user-resizable textarea you'd need to add an event listener to the resize event and set the #output dimensions to match new #input dimensions.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Here's an approach using <a href=\"https://code.google.com/p/rangyinputs/\" rel=\"nofollow\">rangyinputs</a>, <a href=\"https://code.google.com/p/rangy/\" rel=\"nofollow\">rangy</a> and <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a>.</p>\n\n<p>It basically copies the whole text from inside the <code>textarea</code> into a <code>div</code> of the same size. I have set some CSS to ensure that in every browser, the <code>textarea</code> and the <code>div</code> wrap their content in exactly the same way. </p>\n\n<p>When the <code>textarea</code> is clicked, I read out at which character index the caret is positioned, then I insert a caret <code>span</code> at the same index inside the <code>div</code>. By only doing that I ended up having an issue with the caret <code>span</code> jumping back to the previous line if the user clicked at the start of a line. To fix that I check if the previous character is a <code>space</code> (which would allow a wrap to occur), if that is <code>true</code>, I wrap it in a <code>span</code>, and I wrap the next word (the one directly after the caret position) in a <code>span</code>. Now I compare the top values between these two <code>span</code>'s, if they differ, there was some wrapping going on, so I assume that the <code>top</code> and the <code>left</code> value of the <code>#nextword</code> <code>span</code> are equivalent to the caret position.</p>\n\n<p>This approach can still be improved upon, I'm sure I haven't thought of everything that could possibly go wrong, and even if I have, then I haven't bothered implementing a fix for all of them as I don't have the time to do so at the moment, a number of things that you would need to look at:</p>\n\n<ul>\n<li>it doesn't yet handle hard returns inserted with <kbd>Enter</kbd></li>\n<li>positioning breaks when entering multiple spaces in a row</li>\n<li>I think hyphens would allow a content wrap to occur as well..</li>\n</ul>\n\n<p>Currently it works exactly the same way across browsers here on Windows 8 with the latest versions of Chrome, Firefox, IE and Safari. My testing has not been very rigorous though.</p>\n\n<p>Here's a <kbd><a href=\"http://jsfiddle.net/wrzPk/55/\" rel=\"nofollow\"><strong>jsFiddle</strong></a></kbd>.</p>\n\n<p>I hope it will help you, at the very least it might give you some ideas to build on.</p>\n\n<h3>Some Features:</h3>\n\n<ul>\n<li><p>I have included a <code>ul</code> for you which is positioned in the right spot, and fixed a Firefox issue where the <code>textarea</code> selection was not re-set back to its original spot after the DOM manipulations. </p></li>\n<li><p>I have added IE7 - IE9 support and fixed the multiple word selection issue pointed out in the comments.</p></li>\n<li><p>I have added support for hard returns inserted with <kbd>Enter</kbd> and multiple spaces in a row.</p></li>\n<li><p>I have fixed an issue with the default behaviour for the <kbd>ctrl</kbd>+<kbd>shift</kbd>+<kbd>left arrow</kbd> text selection method.</p></li>\n</ul>\n\n<p><strong>JavaScript</strong></p>\n\n<pre><code>function getTextAreaXandY() {\n\n    // Don't do anything if key pressed is left arrow\n    if (e.which == 37) return;     \n\n    // Save selection start\n    var selection = $(this).getSelection();\n    var index = selection.start;\n\n    // Copy text to div\n    $(this).blur();\n    $(\"div\").text($(this).val());\n\n    // Get current character\n    $(this).setSelection(index, index + 1);\n    currentcharacter = $(this).getSelection().text;\n\n    // Get previous character\n    $(this).setSelection(index - 1, index)\n    previouscharacter = $(this).getSelection().text;\n\n    var start, endchar;\n    var end = 0;\n    var range = rangy.createRange();\n\n    // If current or previous character is a space or a line break, find the next word and wrap it in a span\n    var linebreak = previouscharacter.match(/(\\r\\n|\\n|\\r)/gm) == undefined ? false : true;\n\n    if (previouscharacter == ' ' || currentcharacter == ' ' || linebreak) {\n        i = index + 1; // Start at the end of the current space        \n        while (endchar != ' ' &amp;&amp; end &lt; $(this).val().length) {\n            i++;\n            $(this).setSelection(i, i + 1)\n            var sel = $(this).getSelection();\n            endchar = sel.text;\n            end = sel.start;\n        }\n\n        range.setStart($(\"div\")[0].childNodes[0], index);\n        range.setEnd($(\"div\")[0].childNodes[0], end);\n        var nextword = range.toHtml();\n        range.deleteContents();\n        var position = $(\"&lt;span id='nextword'&gt;\" + nextword + \"&lt;/span&gt;\")[0];\n        range.insertNode(position);\n        var nextwordtop = $(\"#nextword\").position().top;\n    }\n\n    // Insert `#caret` at the position of the caret\n    range.setStart($(\"div\")[0].childNodes[0], index);\n    var caret = $(\"&lt;span id='caret'&gt;&lt;/span&gt;\")[0];\n    range.insertNode(caret);\n    var carettop = $(\"#caret\").position().top;\n\n    // If preceding character is a space, wrap it in a span\n    if (previouscharacter == ' ') {\n        range.setStart($(\"div\")[0].childNodes[0], index - 1);\n        range.setEnd($(\"div\")[0].childNodes[0], index);\n        var prevchar = $(\"&lt;span id='prevchar'&gt;&lt;/span&gt;\")[0];\n        range.insertNode(prevchar);\n        var prevchartop = $(\"#prevchar\").position().top;\n    }\n\n    // Set textarea selection back to selection start\n    $(this).focus();\n    $(this).setSelection(index, selection.end);\n\n    // If the top value of the previous character span is not equal to the top value of the next word,\n    // there must have been some wrapping going on, the previous character was a space, so the wrapping\n    // would have occured after this space, its safe to assume that the left and top value of `#nextword`\n    // indicate the caret position\n    if (prevchartop != undefined &amp;&amp; prevchartop != nextwordtop) {\n        $(\"label\").text('X: ' + $(\"#nextword\").position().left + 'px, Y: ' + $(\"#nextword\").position().top);\n        $('ul').css('left', ($(\"#nextword\").position().left) + 'px');\n        $('ul').css('top', ($(\"#nextword\").position().top + 13) + 'px');\n    }\n    // if not, then there was no wrapping, we can take the left and the top value from `#caret`    \n    else {\n        $(\"label\").text('X: ' + $(\"#caret\").position().left + 'px, Y: ' + $(\"#caret\").position().top);\n        $('ul').css('left', ($(\"#caret\").position().left) + 'px');\n        $('ul').css('top', ($(\"#caret\").position().top + 14) + 'px');\n    }\n\n    $('ul').css('display', 'block');\n}\n\n$(\"textarea\").click(getTextAreaXandY);\n$(\"textarea\").keyup(getTextAreaXandY);\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div&gt;&lt;/div&gt;\n&lt;textarea&gt;Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.&lt;/textarea&gt;\n&lt;label&gt;&lt;/label&gt;\n&lt;ul&gt;\n    &lt;li&gt;Why don't you type this..&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>body {\n    font-family: Verdana;\n    font-size: 12px;\n    line-height: 14px;\n}\ntextarea, div {\n    font-family: Verdana;\n    font-size: 12px;\n    line-height: 14px;\n    width: 300px;\n    display: block;\n    overflow: hidden;\n    border: 1px solid black;\n    padding: 0;\n    margin: 0;\n    resize: none;\n    min-height: 300px;\n    position: absolute;\n    -moz-box-sizing: border-box;\n    white-space: pre-wrap;\n}\nspan {\n    display: inline-block;\n    height: 14px;\n    position: relative;\n}\nspan#caret {\n    display: inline;\n}\nlabel {\n    display: block;\n    margin-left: 320px;\n}\nul {\n    padding: 0px;\n    margin: 9px;\n    position: absolute;\n    z-index: 999;\n    border: 1px solid #000;\n    background-color: #FFF;\n    list-style-type:none;\n    display: none;\n}\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n    span {\n        white-space: pre-wrap;\n    }\n}\ndiv {\n    /* Firefox wrapping fix */\n    -moz-padding-end: 1.5px;\n    -moz-padding-start: 1.5px;\n    /* IE8/IE9 wrapping fix */\n    padding-right: 5px\\0/;\n    width: 295px\\0/;\n}\nspan#caret\n{\n    display: inline-block\\0/;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>JsFiddle of working example: <a href=\"http://jsfiddle.net/42zHC/2/\" rel=\"nofollow\">http://jsfiddle.net/42zHC/2/</a></p>\n\n<p>Basically, we figure out how many columns fit in the width (since it will be monospace).  We have to force scrollbars to always be there otherwise the calculation is off.  Then we divide the number of columns that fit with the width, and we get the x offset per character.  Then we set the line height on the textarea.  Since we know how many characters are in a row, we can divide that with the number of characters and we get the row number.  With the line height, we now have the y offset.  Then we get the scrollTop of the textarea and subtract that, so that once it starts using the scrollbar, it still shows up in the right position.</p>\n\n<p>Javascript: </p>\n\n<pre><code>$(document).ready(function () {\n  var cols = document.getElementById('t').cols;\n  var width = document.getElementById('t').clientWidth;\n  var height = $('textarea').css('line-height');\n  var pos = $('textarea').position();\n  $('#t').on('keyup', function () {\n    el = document.getElementById(\"t\");\n    if (el.selectionStart) { \n        selection = el.selectionStart; \n      } else if (document.selection) { \n        el.focus(); \n        var r = document.selection.createRange(); \n        if (r == null) { \n           selection = 0; \n        } \n        var re = el.createTextRange(), \n        rc = re.duplicate(); \n        re.moveToBookmark(r.getBookmark()); \n        rc.setEndPoint('EndToStart', re); \n        selection = rc.text.length; \n      } else { selection = 0 }\n    var row = Math.floor((selection-1) / cols);\n    var col = (selection - (row * cols));\n    var x = Math.floor((col*(width/cols)));\n    var y = (parseInt(height)*row);\n    $('span').html(\"row: \" + row + \"&lt;br&gt;columns\" + col + \"&lt;br&gt;width: \" + width + \"&lt;br&gt;x: \" + x +\"px&lt;br&gt;y: \" + y +\"px&lt;br&gt;Scrolltop: \"+$(this).scrollTop()).css('top',pos.top+y-$(this).scrollTop()).css('left',pos.left+x+10);\n  });\n});\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;textarea id=\"t\"&gt;&lt;/textarea&gt;\n&lt;br&gt;\n&lt;span id=\"tooltip\" style=\"background:yellow\"&gt;&lt;/span&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>textarea {\n  height: 80px;\n  line-height: 12px;\n  overflow-y:scroll;\n}\nspan {\n  position: absolute;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There's a much simpler solution for getting the caret position in pixels, than what's been presented in the other answers.</p>\n\n<p>Note that this question is a duplicate of a 2008 one, and I've answered it <strong><a href=\"http://stackoverflow.com/a/22446703/1269037\">here</a></strong>. I'll only maintain the answer at that link, since this question should have been closed as duplicate years ago.</p>\n\n<h3>Copy of the answer</h3>\n\n<p>I've looked for a textarea caret coordinates plugin for <a href=\"https://github.com/mizzao/meteor-autocomplete\">meteor-autocomplete</a>, so I've evaluated all the 8 plugins on GitHub. The winner is, by far, <a href=\"https://github.com/component/textarea-caret-position\">textarea-caret-position</a> from <strong>Component</strong>.</p>\n\n<h2>Features</h2>\n\n<ul>\n<li>pixel precision</li>\n<li>no dependencies whatsoever</li>\n<li>browser compatibility: Chrome, Safari, Firefox (despite <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=753662\">two</a> <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=984275\">bugs</a> it has), IE9+; may work but not tested in Opera, IE8 or older</li>\n<li>supports any font family and size, as well as text-transforms</li>\n<li>the text area can have arbitrary padding or borders</li>\n<li>not confused by horizontal or vertical scrollbars in the textarea</li>\n<li>supports hard returns, tabs (except on IE) and consecutive spaces in the text</li>\n<li>correct position on lines longer than the columns in the text area</li>\n<li>no <a href=\"https://github.com/component/textarea-caret-position/blob/06d2197f85f96405b43724e56dc56f220c0092a5/test/position_off_after_wrapping_with_whitespace_before_EOL.gif\">\"ghost\" position in the empty space</a> at the end of a line when wrapping long words</li>\n</ul>\n\n<h3>Here's a demo - <a href=\"http://jsfiddle.net/dandv/aFPA7/\">http://jsfiddle.net/dandv/aFPA7/</a></h3>\n\n<p><img src=\"http://i.stack.imgur.com/LJiUS.png\" alt=\"enter image description here\"></p>\n\n<h2>How it works</h2>\n\n<p>A mirror <code>&lt;div&gt;</code> is created off-screen and styled exactly like the <code>&lt;textarea&gt;</code>. Then, the text of the textarea up to the caret is copied into the div and a <code>&lt;span&gt;</code> is inserted right after it. Then, the text content of the span is set to the remainder of the text in the textarea, in order to faithfully reproduce the wrapping in the faux div.</p>\n\n<p>This is the only method guaranteed to handle all the edge cases pertaining to wrapping long lines. It's also used by GitHub to determine the position of its <strong>@</strong> user dropdown.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>In my project I'm trying to get the offset position of the caret in a <code>textarea</code> in pixels. Can this be done? </p>\n\n<p>Before asking here, I have gone through many <a href=\"http://stackoverflow.com/a/7948715/1577396\">links</a>, especially Tim Down's, but I couldn't find a solution which works in IE8+, Chrome and Firefox. It seems <a href=\"https://code.google.com/p/rangy/wiki/PositionModule\">Tim Down is working on this</a>.</p>\n\n<p>Some <a href=\"http://stackoverflow.com/a/2897510/1577396\">other</a> <a href=\"http://stackoverflow.com/a/13402035/1577396\">links</a> which I have found have many issues like not finding the top offset of the caret position.</p>\n\n<p>I am trying to get the offset position of the caret because I want to show an auto-complete suggestion box inside the <code>textarea</code> by positioning it based on the offset position of the caret.</p>\n\n<p><strong>PS:</strong> I can't use a <code>contenteditable div</code> because I have written lots of code related to a <code>textarea</code>.</p>\n",
            "last_activity_date": 1418818523,
            "question_id": 16212871,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "cross-browser",
                "textarea"
            ],
            "title": "Get the offset position of the caret in a textarea in pixels"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It seems using <code>javascript:</code> and <code>data:</code> URLs (directly in the address bar) are currently not allowed <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=527530#c6\">as per this comment</a>:</p>\n\n<blockquote>\n  <p>FYI, I'm probably going to split this bug into multiple, short and longer term fixes.  </p>\n  \n  <p>Short term: disallow pasting of javascript: URLs into the URL bar<br>\n  Longer term: additionally require that bookmarklets be \"whitelisted\" in the \n               Bookmark Manager before it can run JavaScript</p>\n</blockquote>\n\n<p>And <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=656433\">this is the \"bug\"</a> that was resolved in the <a href=\"http://www.mozilla.com/en-US/firefox/6.0beta/releasenotes/buglist.html\">latest version</a>. The <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=656433#c42\">last comment</a> also states:</p>\n\n<blockquote>\n  <p>javascript: is not actually ignored - they're run, but in an \"empty\" context that doesn't have any of the usual DOM methods you would expect, so most common uses (e.g. javascript:alert(1)) just throw (and thus are effectively ignored). javascript:1+1 works fine, though.</p>\n</blockquote>\n\n<p>Now:</p>\n\n<blockquote>\n  <p>How do I fix this?</p>\n</blockquote>\n\n<p>You can't, you have to wait until they decided for a proper solution. As the comment said, bookmarklets will work, but must be explicitly allowed. If you just want to test code, use either <a href=\"http://getfirebug.com/\">Firebug</a> or the new <a href=\"http://antennasoft.net/robcee/2011/06/08/scratchpad-canvas-demo/\">Scratchpad</a> feature.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Felix's answer correctly states why <code>javascript:</code> in the URL bar doesn't work any more.</p>\n\n<p>The <em>replacement</em> for this, if you're trying to debug your web page, is the Web Console (not to be confused with the Error Console).  In the compact menu, it's under Web Developer; in the full menu bar, it's under Tools.  Or you can press ctrl-shift-K (cmd-shift-K on macs).  The bar with a greater-than sign is a JavaScript prompt; code entered there will be evaluated in the context of the current page.  Anything in the area above that bar that's underlined can be clicked on to bring up an inspector window.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>If your clickable bookmarklet got broken and you want it back, you can create a <strong>clickable button</strong> instead using <a href=\"https://addons.mozilla.org/en-US/firefox/addon/custom-buttons/\" rel=\"nofollow\">Custom Buttons</a> Firefox extension.</p>\n\n<p>The advantages of button over running from Scratchpad:</p>\n\n<ul>\n<li>you can actually <strong>save</strong> the bookmarklet (button),</li>\n<li>you can have a <strong>nice own icon</strong> (create some image e.g. PNG file, import it and base64_encode it inside the new button dialog).</li>\n</ul>\n\n<p>The extension is a bit special because <strong>the buttons run at Firefox chrome level</strong>, so they're a bit more privileged (you can interact with the browser's API), and there's no 1-to-1 correspondence between normal JS and the button code (<strong>it needs some tweaking</strong>). More precisely, <code>document</code> and <code>window</code> seen from button are not the ones you were expecting.</p>\n\n<p>However, you can assign the 'good' <code>window</code> and <code>document</code> to your variables, and then work on these variables instead (better not redefine window;)</p>\n\n<p>Here's a sample code I written which works pretty well in Fx10:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// get proper 'window' and 'document' into our private variables\nvar theWindow = window.top.getBrowser().selectedBrowser.contentWindow;\nvar theDocument = theWindow.document;\n\n// here we go\nvar input = theDocument.getElementById(\"foo\");\ninput.focus(); // just to show you it's working, unnecessary in fact\n\n// simulate keyboard event\nvar evt = theDocument.createEvent(\"KeyboardEvent\");\nevt.initKeyEvent (\"keypress\", true, true, theWindow ,\n            0, 0, 0, 0, 0, 65); // 65 == \"A\"\ninput.dispatchEvent(evt);\n\n// show alert after 2 sec\ntheWindow.setTimeout( function(){\n  input.value += \"B\";\n  theWindow.alert(input.value); // alerts \"AB\"\n},2000);\n</code></pre>\n\n<p>Instead of using global functions directly (like <code>setTimeout</code>, or <code>alert</code>), you have to put <code>theWindow.</code> before them, and replace <code>document</code>/<code>window</code> with local <code>theDocument</code>/<code>theWindow</code> and it's seems to be working. I haven't tested it thoroughly however with very complicated cases.</p>\n\n<p><strong>To add a button,</strong> right click on any button you already have and choose 'Add new button...'.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I tried running this JavaScript code in the address bar in Firefox 6: </p>\n\n<pre><code>javascript:alert(\"Hello\")\n</code></pre>\n\n<p>I get a </p>\n\n<blockquote>\n  <p>ReferenceError: alert not defined.</p>\n</blockquote>\n\n<p>It used to work fine in Firefox 5 though, and still works on Opera, Safari and Chrome. How do I fix this? </p>\n",
            "last_activity_date": 1331136622,
            "question_id": 6643414,
            "score": 20,
            "tags": [
                "javascript",
                "browser",
                "alert",
                "firefox6"
            ],
            "title": "JavaScript alert not working in Firefox 6"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If this is what you said:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar hello = 'test';\n&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n  alert (hello);\n&lt;/script&gt;\n</code></pre>\n\n<p>It works because script are finally available to the document and you can access their vars.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Do you want to do something like this?</p>\n\n<pre><code>&lt;script&gt;\n//in one script\nvar someVarName_10 = 20;\n\nalert(window[\"someVarName_10\"]); //alert 20\n\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>Update</strong>: because OP edited the question.</p>\n\n<pre><code>&lt;script&gt;\n  num=10;\n  alert(window['someVar' + 'Name_' + num]); //alert 20\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>Try</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar hello = 'test';\nalert(window.hallo);\n&lt;/script&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar hello = 'test';\nalert(window[\"test\"]);\n&lt;/script&gt;\n</code></pre>\n\n<p>Where \"test\" may be any Stringname of a variable</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I've noticed that everyone is advising global var creation this will lead to variables leak to global namespace. \nWhen you dynamically creating classnames or just variables it's easy to keep em local:</p>\n\n<pre><code>this['className'] = 123;\n</code></pre>\n\n<p>or </p>\n\n<pre><code>this['varName'] = 123;\n</code></pre>\n\n<p>Name-spacing would look like this:</p>\n\n<pre><code>vars = {};\nvars['varName'] = 123;\nvars.varName // 123\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>&lt;script&gt;\n    var someVarName_10 = 20;\n    var num = 10;\n    alert(eval('someVar' + 'Name_' + num)); //alert 20\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code>&lt;script&gt;\n//in one script\nvar someVarName_10 = 20;\n&lt;/script&gt;\n</code></pre>\n\n<p>I want to get access to this variable from another script by name of variable. With window object its simple, is it possible with local variable?</p>\n\n<p>I mean access this var by code like this:</p>\n\n<pre><code>&lt;script&gt;\n  alert(all_vars['someVar' + 'Name' + num]);\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1421426398,
            "question_id": 1920867,
            "score": 20,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript: Get local variable dynamicly by name string"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>This is just the mode.  Here's a <s>quick, non-optimized</s> solution.  It should be O(n).</p>\n\n<pre><code>function mode(array)\n{\n    if(array.length == 0)\n    \treturn null;\n    var modeMap = {};\n    var maxEl = array[0], maxCount = 1;\n    for(var i = 0; i &lt; array.length; i++)\n    {\n    \tvar el = array[i];\n    \tif(modeMap[el] == null)\n    \t\tmodeMap[el] = 1;\n    \telse\n    \t\tmodeMap[el]++;\t\n    \tif(modeMap[el] &gt; maxCount)\n    \t{\n    \t\tmaxEl = el;\n    \t\tmaxCount = modeMap[el];\n    \t}\n    }\n    return maxEl;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<pre>\na=['pear', 'apple', 'orange', 'apple'];\nb=[];\nmax='', maxi=0;\nfor(var k in a) {\n  if(b[k]) b[k]++ else b[k]=1;\n  if(maxi&lt;b[k]) { max=k; maxi=b[k] }\n}\n</pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>var mode = 0;\nvar c = 0;\nvar num = new Array();\nvar value = 0;\nvar greatest = 0;\nvar ct = 0;\n</code></pre>\n\n<p>Note: ct is the length of the array.</p>\n\n<pre><code>function getMode()\n{\n    for (var i = 0; i &lt; ct; i++)\n    {\n        value = num[i];\n        if (i != ct)\n        {\n            while (value == num[i + 1])\n            {\n                c = c + 1;\n                i = i + 1;\n            }\n        }\n        if (c &gt; greatest)\n        {\n            greatest = c;\n            mode = value;\n        }\n        c = 0;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As per <code>George Jempty's</code> request to have the algorithm account for ties, I propose a modified version of <code>Matthew Flaschen's</code> algorithm.</p>\n\n<pre><code>function modeString(array)\n{\n    if (array.length == 0)\n        return null;\n\n    var modeMap = {},\n        maxEl = array[0],\n        maxCount = 1;\n\n    for(var i = 0; i &lt; array.length; i++)\n    {\n        var el = array[i];\n\n        if (modeMap[el] == null)\n            modeMap[el] = 1;\n        else\n            modeMap[el]++;\n\n        if (modeMap[el] &gt; maxCount)\n        {\n            maxEl = el;\n            maxCount = modeMap[el];\n        }\n        else if (modeMap[el] == maxCount)\n        {\n            maxEl += '&amp;' + el;\n            maxCount = modeMap[el];\n        }\n    }\n    return maxEl;\n}\n</code></pre>\n\n<p>This will now return a string with the mode element(s) delimited by a <code>'&amp;'</code> symbol. When the result is received it can be split on that <code>'&amp;'</code> element and you have your mode(s). </p>\n\n<p>Another option would be to return an array of mode element(s) like so:</p>\n\n<pre><code>function modeArray(array)\n{\n    if (array.length == 0)\n        return null;\n    var modeMap = {},\n        maxCount = 1, \n        modes = [array[0]];\n\n    for(var i = 0; i &lt; array.length; i++)\n    {\n        var el = array[i];\n\n        if (modeMap[el] == null)\n            modeMap[el] = 1;\n        else\n            modeMap[el]++;\n\n        if (modeMap[el] &gt; maxCount)\n        {\n            modes = [el];\n            maxCount = modeMap[el];\n        }\n        else if (modeMap[el] == maxCount)\n        {\n            modes.push(el);\n            maxCount = modeMap[el];\n        }\n    }\n    return modes;\n}\n</code></pre>\n\n<p>In the above example you would then be able to handle the result of the function as an array of modes.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I guess you have two approaches. Both of which have advantages.</p>\n\n<p>Sort then Count or Loop through and use a hash table to do the counting for you. </p>\n\n<p>The hashtable is nice because once you are done processing you also have all the distinct elements. If you had millions of items though, the hash table could end up using a lot of memory if the duplication rate is low. The sort, then count approach would have a much more controllable memory footprint.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Time for another solution:</p>\n\n<pre><code>function getMaxOccurrence(arr) {\n    var o = {}, maxCount = 0, maxValue, m;\n    for (var i=0, iLen=arr.length; i&lt;iLen; i++) {\n        m = arr[i];\n\n        if (!o.hasOwnProperty(m)) {\n            o[m] = 0;\n        }\n        ++o[m];\n\n        if (o[m] &gt; maxCount) {\n            maxCount = o[m];\n            maxValue = m;\n        }\n    }\n    return maxValue;\n}\n</code></pre>\n\n<p>If brevity matters (it doesn't), then:</p>\n\n<pre><code>function getMaxOccurrence(a) {\n    var o = {}, mC = 0, mV, m;\n    for (var i=0, iL=a.length; i&lt;iL; i++) {\n        m = a[i];\n        o.hasOwnProperty(m)? ++o[m] : o[m] = 1;\n        if (o[m] &gt; mC) mC = o[m], mV = m;\n    }\n    return mV;\n}\n</code></pre>\n\n<p>If non\u2013existent members are to be avoided (e.g. sparse array), an additional <em>hasOwnProperty</em> test is required:</p>\n\n<pre><code>function getMaxOccurrence(a) {\n    var o = {}, mC = 0, mV, m;\n    for (var i=0, iL=a.length; i&lt;iL; i++) {\n        if (a.hasOwnProperty(i)) {\n            m = a[i];\n            o.hasOwnProperty(m)? ++o[m] : o[m] = 1;\n            if (o[m] &gt; mC) mC = o[m], mV = m;\n        }\n    }\n    return mV;\n}\n\ngetMaxOccurrence([,,,,,1,1]); // 1\n</code></pre>\n\n<p>Other answers here will return <em>undefined</em>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There have been some developments in javascript since 2009 - I thought I'd add another option.  I'm less concerned with efficiency until it's actually a problem so my definition of <em>\"elegant\"</em> code (as stipulated by the OP) favours readability - which is of course subjective...</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function mode(arr){\n    return arr.sort(function(a,b){\n        return arr.filter(function(v){ return v===a }).length\n             - arr.filter(function(v){ return v===b }).length\n    }).pop();\n}\n\nmode(['pear', 'apple', 'orange', 'apple']); // apple\n</code></pre>\n\n<p>In this particular example, should two or more elements of the set have equal occurrences then the one that appears latest in the array will be returned.  It's also worth pointing out that it will modify your original array - which can be prevented if you wish with an  <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\" rel=\"nofollow\"><code>Array.slice</code></a> call beforehand.</p>\n\n<hr>\n\n<p>For backwards compatibility it's still worth noting the polyfill for <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\" rel=\"nofollow\"><code>Array.filter</code></a> on MDN.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var array = [1, 3, 6, 6, 6, 6, 7, 7, 12, 12, 17],\n    c = {}, // counters\n    s = []; // sortable array\n\nfor (var i=0; i&lt;array.length; i++) {\n    c[array[i]] = c[array[i]] || 0; // initialize\n    c[array[i]]++;\n} // count occurrences\n\nfor (var key in c) {\n    s.push([key, c[key]])\n} // build sortable array from counters\n\ns.sort(function(a, b) {return b[1]-a[1];});\n\nvar firstMode = s[0][0];\nconsole.log(firstMode);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking for an elegant way of determining which element has the highest occurrence (<a href=\"http://en.wikipedia.org/wiki/Mode_%28statistics%29\">mode</a>) in a JavaScript array. </p>\n\n<p>For example, in</p>\n\n<pre><code>['pear', 'apple', 'orange', 'apple']\n</code></pre>\n\n<p>the <code>'apple'</code> element is the most frequent one.</p>\n",
            "last_activity_date": 1424231190,
            "question_id": 1053843,
            "score": 19,
            "tags": [
                "javascript",
                "mode"
            ],
            "title": "Get the element with the highest occurrence in an array"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You could use jQuery to remove the contents of the title attribte, or move it into some other parameter for later use.</p>\n\n<p>This does mean you lose some accessibility though.</p>\n\n<p><strong>RE: ClueTip</strong>\nA search of Google seems to suggest this is a common problem - is this only happening in IE? ClueTip seems to work as expected in FireFox.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You could remove the <code>title</code> attribute on page load.</p>\n\n<pre><code>$(document).ready(function() {\n    $('[title]').removeAttr('title');\n});\n</code></pre>\n\n<p>If you need to use the title later, you can store it in the element's jQuery <code>data()</code>.</p>\n\n<pre><code>$(document).ready(function() {\n    $('[title]').each(function() {\n        $this = $(this);\n        $.data(this, 'title', $this.attr('title'));\n        $this.removeAttr('title');\n    });\n});\n</code></pre>\n\n<p>Another option is to change the name of the <code>title</code> attribute to <code>aTitle</code>, or something else that the browser would ignore, and then update any JavaScript to read the new attribute name instead of <code>title</code>.</p>\n\n<p><strong>Update:</strong></p>\n\n<p>An interesting idea you could use is to \"lazily\" remove the title when hovering over an element. When the user hovers off the element, you can then put the title value back.</p>\n\n<p>This isn't as straightforward as it should be because IE doesn't correctly remove the tooltip on the hover event if you set the title attribute to <code>null</code> or remove the title attribute. However, if you set the tooltip to an empty string (<code>\"\"</code>) on hover, it will remove the tooltip from all browsers including Internet Explorer. </p>\n\n<p>You can use the method I mentioned above to store the title attribute in jQuery's <code>data(...)</code> method and then put it back on <code>mouseout</code>.</p>\n\n<pre><code>$(document).ready(function() {\n    $('[title]').mouseover(function () {\n        $this = $(this);\n        $this.data('title', $this.attr('title'));\n        // Using null here wouldn't work in IE, but empty string will work just fine.\n        $this.attr('title', '');\n    }).mouseout(function () {\n        $this = $(this);\n        $this.attr('title', $this.data('title'));\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>Hack up <code>ClueTip</code> to use a renamed title attribute.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is the <em>modern</em> jQuery way to do it (IMO)...</p>\n\n<pre><code>$('[title]').attr('title', function(i, title) {\n    $(this).data('title', title).removeAttr('title');\n});\n</code></pre>\n\n<p>...and of course, reading the <code>title</code> attribute back is done with...</p>\n\n<pre><code>$('#whatever').data('title');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Following Dan Herbert's suggestion above, here is the code:</p>\n\n<pre><code>$(element).hover(\n    function () {\n        $(this).data('title', $(this).attr('title'));\n        $(this).removeAttr('title');\n    },\n    function () {\n        $(this).attr('title', $(this).data('title'));\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>function hideTips(event) {  \n    var saveAlt = $(this).attr('alt');\n    var saveTitle = $(this).attr('title');\n    if (event.type == 'mouseenter') {\n        $(this).attr('title','');\n        $(this).attr('alt','');\n    } else {\n        if (event.type == 'mouseleave'){\n            $(this).attr('alt',saveAlt);\n            $(this).attr('title',saveTitle);\n        }\n   }\n}\n\n$(document).ready(function(){\n $(\"a\").live(\"hover\", hideTips);\n});\n</code></pre>\n\n<p>Hi all. I am using this solution and it works fine in all browsers.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there a way to disable browser tooltip from displaying when hovering over elements that have attribute 'title' populated? Note that I don't want to remove title content.\nHere is the code are requested:</p>\n\n<pre><code>  $(document).ready(function() {\n     $('a.clickableSticky').cluetip({\n         splitTitle: '|',\n         showTitle: false,\n         titleAttribute: 'description',\n         activation: 'click',\n         sticky: true,\n         arrows: true,\n         closePosition: 'title'\n     });\n });\n</code></pre>\n\n<p>and in asp.net</p>\n\n<pre><code>  &lt;ItemTemplate&gt;\n     &lt;a class=\"clickableSticky\" href=\"#\"\n     title=' &lt;%#((Limit)Container.DataItem).Tip %&gt;'&gt;\n     &lt;img src=\"..\\App_Themes\\default\\images\\icons\\information.png\"/&gt;\n     &lt;/a&gt;\n\n &lt;/ItemTemplate&gt;\n</code></pre>\n",
            "last_activity_date": 1345136704,
            "question_id": 1027762,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "jquery-plugins"
            ],
            "title": "How to disable tooltip in the browser with jQuery?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><a href=\"https://github.com/twitter/typeahead.js\">Typeahead.js</a> version 0.10.0 now uses a separate component called a suggestion engine for providing the suggestion data. The suggestion engine which ships with Typeahead.js is called <a href=\"https://github.com/twitter/typeahead.js/blob/master/doc/bloodhound.md\">Bloodhound</a>.</p>\n\n<p>Hence you cannot \"define remote without having to define a dataset function\".</p>\n\n<p>An example of this working with a remote data source (I'm querying the TheMovieDb API, try searching for \"Aliens\" for example) can be found here:</p>\n\n<p><a href=\"http://jsfiddle.net/Fresh/UkB7u/\">http://jsfiddle.net/Fresh/UkB7u/</a></p>\n\n<p>The code is here:</p>\n\n<pre><code>// Instantiate the Bloodhound suggestion engine\nvar movies = new Bloodhound({\n    datumTokenizer: function (datum) {\n        return Bloodhound.tokenizers.whitespace(datum.value);\n    },\n    queryTokenizer: Bloodhound.tokenizers.whitespace,\n    remote: {\n        url: 'http://api.themoviedb.org/3/search/movie?query=%QUERY&amp;api_key=470fd2ec8853e25d2f8d86f685d2270e',\n        filter: function (movies) {\n            // Map the remote source JSON array to a JavaScript object array\n            return $.map(movies.results, function (movie) {\n                return {\n                    value: movie.original_title\n                };\n            });\n        }\n    }\n});\n\n// Initialize the Bloodhound suggestion engine\nmovies.initialize();\n\n// Instantiate the Typeahead UI\n$('.typeahead').typeahead(null, {\n    displayKey: 'value',\n    source: movies.ttAdapter()\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>If you want to use ajax POST data instead GET data for more controlled ajax calls, you may use this structure:</p>\n\n<pre><code>var meslekler = new Bloodhound({\n    datumTokenizer: function (d) {\n            return Bloodhound.tokenizers.whitespace(d.isim);\n        },\n    queryTokenizer: Bloodhound.tokenizers.whitespace,\n    remote: {\n        url: 'my_url_with_or_without_%query_token.php',\n        ajax:{\n            type:\"POST\",\n            cache:false,\n            data:{\n                limit:5\n            },\n            beforeSend:function(jqXHR,settings){\n                settings.data+=\"&amp;q=\"+$('.tt-input').typeahead('val');\n            },\n            complete:function(jqXHR,textStatus){\n            meslekler.clearRemoteCache();\n            }\n        }\n    }\n});\nmeslekler.initialize();\n$('.typeahead').typeahead(null, {\n    name:'meslekler',\n    displayKey: 'isim',\n    source: meslekler.ttAdapter()\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>In previous versions I could do:</p>\n\n<pre><code>$('#search').typeahead({\n  name: 'Search',\n  remote: '/search?query=%QUERY'\n});\n</code></pre>\n\n<p>But since the <code>0.10</code> update, typeahead.js is asking us to define <code>source</code> which I cannot make to work. How do I define remote without having to define a dataset function?</p>\n",
            "last_activity_date": 1421443620,
            "question_id": 21530063,
            "score": 16,
            "tags": [
                "javascript",
                "autocomplete",
                "remote-server",
                "typeahead",
                "typeahead.js"
            ],
            "title": "How do we set remote in Typeahead.js 0.10?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I don't know of any way of intersecting a whole rectangle. But you can intersect a point, so you could build a more complicated check out of that:</p>\n\n<pre><code>var el= document.elementFromPoint(x, y);\n</code></pre>\n\n<p>will give you the highest-stacked element at a particular page-relative co-ordinate. You'll get the <code>&lt;svg&gt;</code> element if no shapes inside the SVG are hit.</p>\n\n<p>This is a non-standard <a href=\"https://developer.mozilla.org/En/DOM/document.elementFromPoint\">Mozilla extension</a>, but it works on WebKit as well. Unfortunately, though it exists in Opera, it won't look inside <code>&lt;svg&gt;</code>, so on that browser the element will always be the SVGSVGElement.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The SVG 1.1 DOM has just the right method (unfortunately it's not yet implemented in mozilla):</p>\n\n<pre><code>var nodelist = svgroot.getIntersectionList(hitrect, null);\n</code></pre>\n\n<p>For a full working example see <a href=\"http://xn--dahlstrm-t4a.net/svg/interactivity/intersection/sandbox_hover.svg\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>getIntersectionList works fine in Opera. My problem is that the functions in the SVG 1.1 Full spec regarding this requires that elements must be rendered (and possible target for pointer events) in order to be detected as hit. Unfortunately this makes these functions useless for hit testing in a game world where only part of the world is currently visible.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The browsers which have implemented parts of the SVG spec (Firefox etc) do hit-testing for us for free - if I attach a mousedown listener on an SVG object, I get notified whenever the shape is clicked. This is amazing, especially for complex polygon shapes.</p>\n\n<p>I'm wondering if there's a way I can utilize this feature for a bit more hit testing. I want to know if a given rectangle intersects any of my SVG shapes. </p>\n\n<p>For example, I add 3 complex polygons to my  element. Now I want to know if rectangle (40, 40, 100, 100) intersects any of them. Does anyone have an idea how I could possibly hook into the already great hit-testing support available, instead of adding all this code myself?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1400244848,
            "question_id": 2174640,
            "score": 15,
            "tags": [
                "javascript",
                "svg",
                "hittest"
            ],
            "title": "Hit-testing SVG shapes?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><strong>Why <em>does</em> it work in Chrome and not Firefox?</strong></p>\n\n<p>The <a href=\"https://dvcs.w3.org/hg/cors/raw-file/tip/Overview.html#preflight-request\">W3 spec for CORS preflight requests</a> clearly states that user credentials should be excluded. There is a bug in <a href=\"https://code.google.com/p/chromium/issues/detail?id=139566\">Chrome</a> and <a href=\"https://bugs.webkit.org/show_bug.cgi?id=92755\">WebKit</a> where <code>OPTIONS</code> requests returning a status of 401 still send the subsequent request. </p>\n\n<p><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=778548\">Firefox</a> has a related bug filed that ends with a link to the <a href=\"http://lists.w3.org/Archives/Public/public-webapps/2012JulSep/0252.html\">W3 public webapps mailing list</a> asking for the CORS spec to be changed to allow authentication headers to be sent on the <code>OPTIONS</code> request at the benefit of IIS users. Basically, they are waiting for those servers to be obsoleted.</p>\n\n<p><strong>How can I get the <code>OPTIONS</code> request to send and respond consistently?</strong></p>\n\n<p>Simply have the server (API in this example) respond to <code>OPTIONS</code> requests without requiring authentication. </p>\n\n<p><a href=\"http://www.kinvey.com/blog/60/kinvey-adds-cross-origin-resource-sharing-cors\">Kinvey</a> did a good job expanding on this while also linking to <a href=\"https://code.google.com/p/twitter-api/issues/detail?id=2273\">an issue of the Twitter API</a> outlining the catch-22 problem of this exact scenario interestingly a couple weeks before any of the browser issues were filed.</p>\n",
                    "is_accepted": true,
                    "score": 32
                }
            ],
            "body": "<p>I am writing a JavaScript client to be included on 3rd party sites (think Facebook Like button). It needs to retrieve information from an API that requires basic HTTP authentication. The simplified setup looks like this:</p>\n\n<p>A 3rd party site includes this snippet on their page:</p>\n\n<pre><code>&lt;script \nasync=\"true\"\nid=\"web-dev-widget\"\ndata-public-key=\"pUbl1c_ap1k3y\"\nsrc=\"http://web.dev/widget.js\"&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>widget.js</strong> calls the API:</p>\n\n<pre><code>var el = document.getElementById('web-dev-widget'),\n    user = 'token',\n    pass = el.getAttribute('data-public-key'),\n    url = 'https://api.dev/',\n    httpRequest = new XMLHttpRequest(),\n    handler = function() {\n      if (httpRequest.readyState === 4) {\n        if (httpRequest.status === 200) {\n          console.log(httpRequest.responseText);\n        } else {\n          console.log('There was a problem with the request.', httpRequest);\n        }\n      }\n    };\n\nhttpRequest.open('GET', url, true, user, pass);\nhttpRequest.onreadystatechange = handler;\nhttpRequest.withCredentials = true;\nhttpRequest.send();\n</code></pre>\n\n<p>The API has been configured to respond with appropriate headers:</p>\n\n<pre><code>Header set Access-Control-Allow-Credentials: true\nHeader set Access-Control-Allow-Methods: \"GET, OPTIONS\"\nHeader set Access-Control-Allow-Headers: \"origin, authorization, accept\"\nSetEnvIf Origin \"http(s)?://(.+?\\.[a-z]{3})$\" AccessControlAllowOrigin=$0\nHeader set Access-Control-Allow-Origin %{AccessControlAllowOrigin}e env=AccessControlAllowOrigin\n</code></pre>\n\n<p>Note that the <code>Access-Control-Allow-Origin</code> is set to the <code>Origin</code> instead of using a wildcard because I am sending a credentialed request (<code>withCredentials</code>).</p>\n\n<p>Everything is now in place to make an asynchronous cross-domain authenticated request, and it works great in Chrome 25 on OS X 10.8.2. In Dev Tools, I can see the network request for the <code>OPTIONS</code> request before the <code>GET</code> request, and the response comes back as expected.</p>\n\n<p>When testing in Firefox 19, no network requests appear in Firebug to the API, and this error is logged in the console: <code>NS_ERROR_DOM_BAD_URI: Access to restricted URI denied</code></p>\n\n<p>After much digging, I found that <a href=\"http://stackoverflow.com/questions/11255173/firefox-wont-send-cross-origin-resource-sharing-pre-flight\">Gecko doesn't allow the username and password to be directly in a cross-site URI</a> according to the comments. I assumed this was from using the optional user and password params to <code>open()</code> so I tried the other method of making authenticated requests which is to Base64 encode the credentials and send in an Authorization header:</p>\n\n<pre><code>// Base64 from http://www.webtoolkit.info/javascript-base64.html\nauth = \"Basic \" + Base64.encode(user + \":\" + pass);\n\n...\n// after open() and before send()\nhttpRequest.setRequestHeader('Authorization', auth);\n</code></pre>\n\n<p>This results in a <code>401 Unauthorized</code> response to the <code>OPTIONS</code> request which lead to Google searches like, \"Why does this work in Chrome and not Firefox!?\" That's when I knew I was in trouble.</p>\n\n<p>Why <em>does</em> it work in Chrome and not Firefox? How can I get the <code>OPTIONS</code> request to send and respond consistently?</p>\n",
            "last_activity_date": 1364760882,
            "question_id": 15734031,
            "score": 11,
            "tags": [
                "javascript",
                "ajax",
                "cors"
            ],
            "title": "Why does the preflight OPTIONS request of an authenticated CORS request work in Chrome but not Firefox?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You'll need <a href=\"https://developer.mozilla.org/en/DOM/window.setTimeout\">setTimeout</a> to set a timer and <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date\">Date</a> to calculate how long the timer needs to go until it triggers.</p>\n\n<pre><code>var now = new Date();\nvar millisTill10 = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 10, 0, 0, 0) - now;\nif (millisTill10 &lt; 0) {\n     millisTill10 += 86400000; // it's after 10am, try 10am tomorrow.\n}\nsetTimeout(function(){alert(\"It's 10am!\")}, millisTill10);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Assuming the code is located on a web page that will be loaded before 10:00 and will still be viewed at 10:00, you can use <code>setTimeout()</code> to set up a timed event. the function takes some JS statement to execute, and the number of milliseconds before it should execute. You can find this second part pretty easily with the built-in date functions.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My solution for running a script at a specific time, btw no error checking for negative timeout.</p>\n\n<pre><code>//year, month 0-11, date, hour, min (can add ,sec,msec)\nvar eta_ms = new Date(2015, 0, 21, 17, 0).getTime() - Date.now();\nvar timeout = setTimeout(function(){}, eta_ms);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>for example i want to call a js function at 10.00.00.00 am \nhow can i do?</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\nvar now = new Date();\n\nvar millisTill10 = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 30, 0, 0) - now;\n\nsetTimeout(function{openAPage(), setInterval(openAPage, 60*1000)}, millisTill10)\n\nfunction openAPage() {\n\nvar startTime = new Date().getTime();\nvar myWin = window.open(\"http://google.com\",\"_blank\")\nvar endTime = new Date().getTime();\nvar timeTaken = endTime-startTime;\n\n\ndocument.write(\"&lt;br&gt;button pressed@&lt;/br&gt;\")\ndocument.write(new Date(startTime));\ndocument.write(\"&lt;br&gt;page loaded@&lt;/br&gt;\")\ndocument.write(new Date(endTime));\ndocument.write(\"&lt;br&gt;time taken&lt;/br&gt;\")\ndocument.write(timeTaken);\n\nmyWin.close()\n\n}\n\n&lt;/script&gt;\n</code></pre>\n\n<p>i expect from this code at 00.30 it will open google and then every 1 minute later it will do it again? whats wrong with that code?</p>\n",
            "last_activity_date": 1421852155,
            "question_id": 4455282,
            "score": 11,
            "tags": [
                "javascript"
            ],
            "title": "Call a javascript function at a specific time of day"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here are a few alternatives:</p>\n\n<ul>\n<li><a href=\"http://www.swfupload.org/\">SWFUpload</a></li>\n<li><a href=\"http://developer.yahoo.com/yui/uploader/\">YUI Uploader</a></li>\n<li><a href=\"http://www.pixeline.be/experiments/jqUploader/\">jqUploader</a> (jQuery plugin)</li>\n<li><a href=\"http://www.fyneworks.com/jquery/multiple-file-upload/\">jQuery Multiple File Uploader</a> (jQuery plugin)</li>\n<li><a href=\"https://user.sitepen.com/~mwilcox/dojotoolkit/demos/uploader/demo.html\">Dojo FileUploader</a></li>\n<li><a href=\"http://jupload.sourceforge.net/\">jUpload</a> (Applet)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>As far as I know there is no possibility to upload a file with pure JavaScript. You alway need some like a swf movie or a java applet (probably it will also work with a silverlight app).\nIf you do not like to write your own, use one the existing ones from the last answer (<a href=\"http://stackoverflow.com/questions/408735/javascript-file-uploads#408736\">http://stackoverflow.com/questions/408735/javascript-file-uploads#408736</a>).</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Any alternate thing in JavaScript to make a file upload control ?</p>\n\n<hr>\n\n<p>actually the problem was, i am creating file upload control dynamically using htmlwriter, and when i use <code>request.form[fileuplodctrl].tostring()</code> , i am getting only the file name not path... </p>\n\n<p>can any one suggest me any other ways to get full file path :)</p>\n",
            "last_activity_date": 1374110562,
            "question_id": 408735,
            "score": 6,
            "tags": [
                "javascript"
            ],
            "title": "Javascript file uploads"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You cannot move the mousepointer with javascript.</p>\n\n<p>Just think about the implications for a second, if you could ;)</p>\n\n<ol>\n<li>User thinks: \"hey I'd like to click this link\"</li>\n<li>Javascript moves mousecursor to another link</li>\n<li>User clicks wrong link and inadvertently downloads malware that formats his c-drive and eats his candy</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 57
                },
                {
                    "body": "<p>You can't move the mouse pointer using javascript, and thus for obvious security reasons. The best way to achieve this effect would be to actually place the control under the mouse pointer.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would imagine you could accomplish placing the mouse cursor to a given area of the screen if you didn't use the real (system) mouse cursor.</p>\n\n<p>For instance, you could create an image to act in place of your cursor, handle an event which upon detecting mouseenter into your scene, set the style on the system cursor to 'none' (<code>sceneElement.style.cursor = 'none'</code>), then would bring up a hidden image element acting as a cursor to be anywhere you like with in the scene based on a predefined axis/bounding box translation. </p>\n\n<p>This way no matter how you moved the real cursor your translation method would keep your image cursor wherever you needed it.</p>\n\n<p>edit: <a href=\"http://jsfiddle.net/jaakkytt/9uczV/\">an example in jsFiddle using an image representation and forced mouse movement</a></p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>Great question. This is really something missing from the Javascript browser API. I'm also working on a WebGL game with my team, and we need this feature. I opened an issue on Firefox's bugzilla so that we can start talking about the possibility of having an API to allow for mouse locking. This is going to be useful for all HTML5/WebGL game developers out there.</p>\n\n<p>If you like, come over and leave a comment with your feedback, and upvote the issue:</p>\n\n<p><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=630979\">https://bugzilla.mozilla.org/show_bug.cgi?id=630979</a></p>\n\n<p>Thanks!</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<ol>\n<li>Run a small web server on the client machine.  Can be a small 100kb thing.  A Python / Perl script, etc.</li>\n<li>Include a small, pre-compiled C <a href=\"http://hints.macworld.com/article.php?story=2008051406323031\">executable that can move the mouse.</a></li>\n<li><p>Run it as a CGI-script via a simple http call, AJAX, whatever - with the coordinates you want to move the mouse to, eg:</p>\n\n<p><code>http://localhost:9876/cgi/mousemover?x=200&amp;y=450</code></p></li>\n</ol>\n\n<p><em>PS: For any problem, there are hundreds of excuses as to why, and how - it can't, and shouldn't - be done.. But in this infinite universe, it's really just a matter of determination - as to whether YOU will make it happen.</em></p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>You could detect position of the mouse pointer and then move the web page so they hover over what you want them to click.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>So, I know this is an old topic, but I'll first say it isn't possible. The closest thing currently is locking the mouse to a single position, and tracking change in its x and y. This concept has been adopted by - it looks like - Chrome and Firefox. It's managed by what's called <i>Mouse Lock</i>, and hitting escape will break it. From my <i>brief</i> read-up, I think the idea is that it locks the mouse to one location, and reports motion events similar to click-and-drag events.</p>\n\n<p>Here's the release documentation:<br/>FireFox: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API</a><br/>Chrome: <a href=\"http://www.chromium.org/developers/design-documents/mouse-lock\" rel=\"nofollow\">http://www.chromium.org/developers/design-documents/mouse-lock</a></p>\n\n<p>And here's a pretty neat demonstration: <a href=\"http://media.tojicode.com/q3bsp/\" rel=\"nofollow\">http://media.tojicode.com/q3bsp/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm building a HTML5 game and I am trying to put the mouse cursor over a certain control on a specific event so that moving in a specific direction always has the same result. Is this possible?</p>\n",
            "last_activity_date": 1423512960,
            "question_id": 4752501,
            "score": 34,
            "tags": [
                "javascript",
                "mouse"
            ],
            "title": "Move the mouse pointer to a specific position?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I'd say use hash, like this:</p>\n\n<pre><code>window.onload = function() {\n    if(!window.location.hash) {\n        window.location = window.location + '#loaded';\n        window.location.reload();\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>You'd need to use either GET or POST information. GET would be simplest. Your JS would check the URL, if a certain param wasn't found, it wouldn't just refresh the page, but rather send the user to a \"different\" url, which would be the same URL but with the GET parameter in it.</p>\n\n<p>For example:<br>\n<a href=\"http://example.com\" rel=\"nofollow\">http://example.com</a>  -->will refresh<br>\n<a href=\"http://example.com?refresh=no\" rel=\"nofollow\">http://example.com?refresh=no</a>  -->won't refresh</p>\n\n<p>If you don't want the messy URL, then I'd include some PHP right at the beginning of the body that echos a hidden value that essentitally says whether the necessary POST param for not refreshing the page was included in the initial page request. Right after that, you'd include some JS to check that value and refresh the page WITH that POST information if necessary.</p>\n\n<p>\n\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>i put this inside my head tags of the page i want a single reload on:</p>\n\n<pre><code>&lt;?php if(!isset($_GET['mc'])) {\necho '&lt;meta http-equiv=\"refresh\" content= \"0;URL=?mc=mobile\" /&gt;';\n} ?&gt;\n</code></pre>\n\n<p>the value \"mc\" can be set to whatever you want, but both must match in the 2 lines. and the \"=mobile\"  can be \"=anythingyouwant\"  it just needs a value to stop the refresh.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try with this</p>\n\n<pre><code>var element = document.getElementById('position');        \nelement.scrollIntoView(true);`\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Please try with the code below</p>\n\n<pre><code>var windowWidth = $(window).width();\n\n$(window).resize(function() {\n    if(windowWidth != $(window).width()){\n    location.reload();\n\n    return;\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Check this Link it contains a java-script code that you can use to refresh your page only once</p>\n\n<p><a href=\"http://www.hotscripts.com/forums/javascript/4460-how-do-i-have-page-automatically-refesh-only-once.html\" rel=\"nofollow\">http://www.hotscripts.com/forums/javascript/4460-how-do-i-have-page-automatically-refesh-only-once.html</a></p>\n\n<p>There are more than one way to refresh your page:</p>\n\n<p><strong>solution1</strong>:</p>\n\n<p>To refresh a page once each time it opens use:</p>\n\n<pre><code>&lt;head&gt;\n&lt;META HTTP-EQUIV=\"Pragma\" CONTENT=\"no-cache\"&gt;\n&lt;META HTTP-EQUIV=\"Expires\" CONTENT=\"-1\"&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p><strong>sollution2:</strong></p>\n\n<pre><code>&lt;script language=\" JavaScript\" &gt;\n&lt;!-- \nfunction LoadOnce() \n{ \nwindow.location.reload(); \n} \n//--&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>Then change your  to say</p>\n\n<pre><code>&lt;Body onLoad=\" LoadOnce()\" &gt;\n</code></pre>\n\n<p><strong>solution3:</strong></p>\n\n<p><code>response.setIntHeader(\"Refresh\", 1);</code> </p>\n\n<p>But this solution will refresh the page more than one time depend on the time you specifying</p>\n\n<p>I hope that will help you</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\n$(document).ready(function(){    \n    //Check if the current URL contains '#'\n    if(document.URL.indexOf(\"#\")==-1){\n        // Set the URL to whatever it was plus \"#\".\n        url = document.URL+\"#\";\n        location = \"#\";\n\n        //Reload the page\n        location.reload(true);\n    }\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>Due to the if condition the page will reload only once.I faced this problem too and when I search ,I found a nice solution.\nThis works for me fine.And thanks for <a href=\"http://www.webdeveloper.com/forum/showthread.php?267853-Auto-refresh-page-once-only-after-first-load\" rel=\"nofollow\">http://www.webdeveloper.com/forum/showthread.php?267853-Auto-refresh-page-once-only-after-first-load</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>When I meet this problem, I search to here but most of answers are trying to modify existing url. Here is another answer which works for me using localStorage.</p>\n\n<pre><code>&lt;script type='text/javascript'&gt;\n\n(function()\n{\n  if( window.localStorage )\n  {\n    if( !localStorage.getItem('firstLoad') )\n    {\n      localStorage['firstLoad'] = true;\n      window.location.reload();\n    }  \n    else\n      localStorage.removeItem('firstLoad');\n  }\n})();\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I would like to implement a javascript code which states this:\nif the page is loaded completely, refresh the page immediately, but only once.\nI'm stuck at the \"only once\":</p>\n\n<pre><code>window.onload = function () {window.location.reload()}\n</code></pre>\n\n<p>this gives a loop without the \"only once\"... JQuery is loaded if this helps.</p>\n\n<p>thanks, \nmartin</p>\n",
            "last_activity_date": 1425899290,
            "question_id": 6985507,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "refresh",
                "reload"
            ],
            "title": "One time page refresh after first page load"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>This article is quite explanatory: <a href=\"http://msdn.microsoft.com/en-us/library/ms537509%28v=vs.85%29.aspx\">http://msdn.microsoft.com/en-us/library/ms537509%28v=vs.85%29.aspx</a>.</p>\n\n<p>If your JS is unobtrusive, you can just use:</p>\n\n<pre><code>&lt;![if !IE]&gt;\n   &lt;script src...\n&lt;![endif]&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>You can do something like this to include IE-specific javascript: </p>\n\n<pre><code>&lt;!--[IF IE]&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        // IE stuff\n    &lt;/script&gt;\n&lt;![endif]--&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>You define a boolean value with default of true, and then inside an <a href=\"http://www.quirksmode.org/css/condcom.html\">IE conditional comment</a>, set the value to false, and use the value of this to determine whether your advanced code should run.  Something like:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;var runFancy = true;&lt;/script&gt;\n&lt;!--[if IE]&gt;\n&lt;script type=\"text/javascript\"&gt;\n    runFancy = false;\n    //any other IE specific stuff here\n&lt;/script&gt;\n&lt;![endif]--&gt;\n&lt;script type=\"text/javascript\"&gt;\n    if (runFancy) {\n         //do your code that works with sane browsers\n    }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Here is the script i used and it works like a charm. I used the boolean method Ender suggested as the other ones using only the IE specific script adds something to IE but doesn\u00b4t take the original code out.</p>\n\n<pre><code>    &lt;script&gt;runFancy = true;&lt;/script&gt;\n&lt;!--[if IE]&gt;\n&lt;script type=\"text/javascript\"&gt;\n    runFancy = false;\n &lt;/script&gt; // &lt;div&gt;The HTML version for IE went here&lt;/div&gt;\n&lt;![endif]--&gt;\n\n    // Below is the script used for all other browsers:\n    &lt;script src=\"accmenu/acac1.js\" charset=\"utf-8\" type=\"text/javascript\"&gt;&lt;/script&gt;&lt;script&gt;ac1init_doc('',0)&lt;/script&gt; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>this code works well on my site because it detects whether its ie or not and activates the javascript if it is its below you can check it out live on ie or other browser <a href=\"http://socialplusmo.tumblr.com/\" rel=\"nofollow\" title=\"Live Demo\">Just a demo of the if ie javascript in action</a></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n&lt;!--[if IE]&gt;\nwindow.location.href = \"http://yoursite.com/\";\n&lt;![endif]--&gt;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Note that you can also determine in pure js in what browser you script is beeing executed through : window.navigator.userAgent</p>\n\n<p>However, that's not a recommended way as it's configurable in the browser settings. More info available there: <a href=\"https://developer.mozilla.org/fr/docs/DOM/window.navigator.userAgent\" rel=\"nofollow\">https://developer.mozilla.org/fr/docs/DOM/window.navigator.userAgent</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>var browserName=navigator.appName; if (browserName==\"Microsoft Internet Explorer\") { \n  document.write(\"Your html for IE\")\n  }</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>For IE10+ standart conditions don't work cause of engine change or some another reasons, cause, you know, it's MSIE. But for IE10+ you need to run smth like this in your scripts </p>\n\n<pre><code>if (!!navigator.userAgent.match(/Trident\\/7\\./)){\n//do stuff for IE.\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm using an image carousel script that is quite heavy on the browser. It works great in Opera and Chrome, half decent in FF and absolutely breaks my balls in IE. So i'd like to give IE users an alternative of simple HTML without any action/JS. </p>\n\n<p>The script doesn't use MT or jQuery and its like 380 lines of JS. Would it be possible to give IE users a plain HTML alternative?</p>\n\n<p><code>var browserName=navigator.appName; \nif (browserName==\"Microsoft Internet Explorer\")\n{\n// what command can i use?\n}</code></p>\n",
            "last_activity_date": 1408968301,
            "question_id": 4411551,
            "score": 23,
            "tags": [
                "javascript",
                "browser-detection"
            ],
            "title": "If Browser is Internet Explorer: run an alternative script instead"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>check this page out of <a href=\"http://books.google.com/books?id=ED6ph4WEIoQC&amp;lpg=PP1&amp;dq=high%20performance%20javascript&amp;pg=PA11#v=onepage&amp;q&amp;f=false\" rel=\"nofollow\">High Performance Javascript</a></p>\n\n<p>basically you tell it which script to load and then you can give it a callback function to run once it's done. i use this in production and it's awesome.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You <strike>can't and</strike> shouldn't perform server operations synchronously for obvious reasons. What you can do, though, is to have an event handler telling you when the script is loaded:</p>\n\n<pre><code>tag.onreadystatechange = function() { if (this.readyState == 'complete' || this.readyState == 'loaded') this.onload({ target: this }); };\n\ntag.onload = function(load) {/*init code here*/}\n</code></pre>\n\n<p><code>onreadystatechange</code> delegation is, from memory, a workaround for IE, which has patchy support for <code>onload</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is only one way to synchronously load and execute a script resource, and that is using a synchronous XHR</p>\n\n<p>This is an example of how to do this</p>\n\n<pre><code>// get some kind of XMLHttpRequest\nvar xhrObj = createXMLHTTPObject();\n// open and send a synchronous request\nxhrObj.open('GET', \"script.js\", false);\nxhrObj.send('');\n// add the returned content to a newly created script tag\nvar se = document.createElement('script');\nse.type = \"text/javascript\";\nse.text = xhrObj.responseText;\ndocument.getElementsByTagName('head')[0].appendChild(se);\n</code></pre>\n\n<p>But you shouldn't in general use synchronous requests as this will block everything else.\nBut that being said, there are of course scenarios where this is appropriate.</p>\n\n<p>I would probably refactor the containing function into an asynchronous pattern though using an onload handler.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>I use jquery <em>load</em> method applied to div element. something like</p>\n\n<pre><code>&lt;div id=\"js\"&gt;\n&lt;!-- script will be inserted here --&gt; \n&lt;/div&gt;\n\n...\n\n$(\"#js\").load(\"path\", function() {  alert(\"callback!\" });\n</code></pre>\n\n<p>You can load scripts several times and each time one script will completely replace the one loaded earlier</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>same as Sean's answer, but instead of creating a script tag, just evaluate it.  this ensures that the code is actually ready to use.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is the code that I'm using for multiple file load in my app.</p>\n\n<pre><code>Utilities.require = function (file, callback) {\n    callback = callback ||\n    function () {};\n    var filenode;\n    var jsfile_extension = /(.js)$/i;\n    var cssfile_extension = /(.css)$/i;\n\n    if (jsfile_extension.test(file)) {\n        filenode = document.createElement('script');\n        filenode.src = file;\n        // IE\n        filenode.onreadystatechange = function () {\n            if (filenode.readyState === 'loaded' || filenode.readyState === 'complete') {\n                filenode.onreadystatechange = null;\n                callback();\n            }\n        };\n        // others\n        filenode.onload = function () {\n            callback();\n        };\n        document.head.appendChild(filenode);\n    } else if (cssfile_extension.test(file)) {\n        filenode = document.createElement('link');\n        filenode.rel = 'stylesheet';\n        filenode.type = 'text/css';\n        filenode.href = file;\n        document.head.appendChild(filenode);\n        callback();\n    } else {\n        console.log(\"Unknown file type to load.\")\n    }\n};\n\nUtilities.requireFiles = function () {\n    var index = 0;\n    return function (files, callback) {\n        index += 1;\n        Utilities.require(files[index - 1], callBackCounter);\n\n        function callBackCounter() {\n            if (index === files.length) {\n                index = 0;\n                callback();\n            } else {\n                Utilities.requireFiles(files, callback);\n            }\n        };\n    };\n}();\n</code></pre>\n\n<p>And this utilities can be used by</p>\n\n<pre><code>Utilities.requireFiles([\"url1\", \"url2\",....], function(){\n    //Call the init function in the loaded file.\n    })\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If you need to load an arbitrary number of scripts and only proceed when the last one is done, and you cannot use XHR (e.g. due to CORS limitations) you can do the following. It is not synchronous, but does allow a callback to occur exactly when the last file is done loading:</p>\n\n<pre><code>// Load &lt;script&gt; elements for all uris\n// Invoke the whenDone callback function after the last URI has loaded\nfunction loadScripts(uris,whenDone){\n  if (!uris.length) whenDone &amp;&amp; whenDone();\n  else{\n    for (var wait=[],i=uris.length;i--;){\n      var tag  = document.createElement('script');\n      tag.type = 'text/javascript';\n      tag.src  = uris[i];\n      if (whenDone){\n        wait.push(tag)\n        tag.onload = maybeDone; \n        tag.onreadystatechange = maybeDone; // For IE8-\n      }\n      document.body.appendChild(tag);\n    }\n  }\n  function maybeDone(){\n    if (this.readyState===undefined || this.readyState==='complete'){\n      // Pull the tags out based on the actual element in case IE ever\n      // intermingles the onload and onreadystatechange handlers for the same\n      // script block before notifying for another one.\n      for (var i=wait.length;i--;) if (wait[i]==this) wait.splice(i,1);\n      if (!wait.length) whenDone();\n    }\n  }\n}\n</code></pre>\n\n<p><strong>Edit</strong>: Updated to work with IE7, IE8, and IE9 (in quirks mode). These IE versions do not fire an <code>onload</code> event, but do for <code>onreadystatechange</code>. IE9 in standards mode fires <em>both</em> (with <code>onreadystatechange</code> for all scripts firing before <code>onload</code> for any).</p>\n\n<p>Based on <a href=\"http://www.phpied.com/javascript-include-ready-onload/\" rel=\"nofollow\">this page</a> there may be a small chance that old versions of IE will never send an <code>onreadystatechange</code> event with <code>readyState=='complete'</code>; if this is the case (I could not reproduce this problem) then the above script will fail and your callback will never be invoked.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The accepted answer is <strong>NOT</strong> correct.</p>\n\n<p>Loading a file synchronously is not the same as executing the file synchronously - which is what the OP requested.</p>\n\n<p>The accepted answer loads the file sync, but does nothing more than append a script tag to the DOM.  Just because <em>appendChild()</em> has returned does not in anyway guarantee that the script has finished executing and it's members are initialised for use.</p>\n\n<p>The only (see caveat) way to achieve the OPs question is to sync load the script over XHR as stated, then read as text and pass into either eval() or a new Function() call and wait for that function to return.  This is the only way to guarantee the script is loaded <strong>AND</strong> executed synchronously.</p>\n\n<p>I make no comment as to whether this is a wise thing to do either from a UI or security perspective, but there are certainly use cases that justify a sync load &amp; execute.</p>\n\n<p><em>Caveat</em>:\nUnless you're using web workers in which case just call loadScripts();</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I had the following problem(s) with the existing answers to this question (and variations of this question on other stackoverflow threads):</p>\n\n<ul>\n<li><strong>None of the loaded code was debuggable</strong></li>\n<li>Many of the solutions required callbacks to know when loading was finished instead of truly blocking, meaning I would get execution errors from immediately calling loaded (ie loading) code.</li>\n</ul>\n\n<p>Or, slightly more accurately:</p>\n\n<ul>\n<li>None of the loaded code was debuggable <em>(except from the HTML script tag block, if and only if the solution added a script elements to the dom, and never ever as individual viewable scripts.)</em> => Given how many scripts I have to load (and debug), this was unacceptable.</li>\n<li>Solutions using 'onreadystatechange' or 'onload' events failed to block, which was a big problem since the code originally loaded dynamic scripts synchronously using 'require([filename, 'dojo/domReady']);' and I was stripping out dojo.</li>\n</ul>\n\n<p>My final solution, which loads the script before returning, AND has all scripts properly accessible in the debugger (for Chrome at least) is as follows:</p>\n\n<p><strong>WARNING: The following code should PROBABLY be used only in 'development' mode.</strong> <em>(For 'release' mode I recommend prepackaging and minification WITHOUT dynamic script loading, or at least without eval).</em></p>\n\n<pre><code>//Code User TODO: you must create and set your own 'noEval' variable\n\nrequire = function require(inFileName)\n{\n    var aRequest\n        ,aScript\n        ,aScriptSource\n        ;\n\n    //setup the full relative filename\n    inFileName = \n        window.location.protocol + '//'\n        + window.location.host + '/'\n        + inFileName;\n\n    //synchronously get the code\n    aRequest = new XMLHttpRequest();\n    aRequest.open('GET', inFileName, false);\n    aRequest.send();\n\n    //set the returned script text while adding special comment to auto include in debugger source listing:\n    aScriptSource = aRequest.responseText + '\\n////# sourceURL=' + inFileName + '\\n';\n\n    if(noEval)//&lt;== **TODO: Provide + set condition variable yourself!!!!**\n    {\n        //create a dom element to hold the code\n        aScript = document.createElement('script');\n        aScript.type = 'text/javascript';\n\n        //set the script tag text, including the debugger id at the end!!\n        aScript.text = aScriptSource;\n\n        //append the code to the dom\n        document.getElementsByTagName('body')[0].appendChild(aScript);\n    }\n    else\n    {\n        eval(aScriptSource);\n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var xhrObj = new XMLHttpRequest();\nxhrObj.open('GET', '/filename.js', false);\nxhrObj.send(null);\neval(xhrObj.responseText);\n</code></pre>\n\n<p>If this is a cross-domain request, it will not work. In that case you have to upload the requested file to your server, or make a mirror php that outputs it, and require that php.</p>\n\n<p>With jquery (works with cross-domain request too):</p>\n\n<pre><code>$.getScript('/filename.js',callbackFunction);\n</code></pre>\n\n<p><code>callbackFunction</code> will be called synchronously.</p>\n\n<p>For loading more scripts see <a href=\"http://stackoverflow.com/q/11803215/669677\">this</a> thread.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm using the <a href=\"http://yuiblog.com/blog/2007/06/12/module-pattern/\">module pattern</a>, one of the things I want to do is dynamically include an external JavaScript file, execute the file, and then use the functions/variables in the file in the <code>return { }</code> of my module.</p>\n\n<p>I can't figure out how to do this easily.  Are there any standard ways of performing a pseudo synchronous external script load?</p>\n\n<pre><code>function myModule() {\n    var tag = document.createElement(\"script\");\n    tag.type = \"text/javascript\";\n    tag.src = \"http://some/script.js\";\n    document.getElementsByTagName('head')[0].appendChild(tag);\n\n    //something should go here to ensure file is loaded before return is executed\n\n    return {\n        external: externalVariable \n    }\n}\n</code></pre>\n",
            "last_activity_date": 1408115253,
            "question_id": 2879509,
            "score": 23,
            "tags": [
                "javascript"
            ],
            "title": "Dynamically loading JavaScript synchronously"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>$('a[href=#top]').click(function(){\n    $('html, body').animate({scrollTop:0}, 'slow');\n});\n</code></pre>\n\n<p>Perhaps?</p>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>When you pass 50 as the second parameter to animate, that is 50 milliseconds. See the <a href=\"http://api.jquery.com/animate/\">animate</a> documentation. Either pass a larger number, or as c0mrade suggested, simply pass 'slow' .</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I'd like my page to go to the top when certain anchor is clicked. </p>\n\n<p>Here is how I tried to do it but it's not working, it's scrolling super fast.</p>\n\n<pre><code> $('a[href=#top]').click(function () {\n        $('body').animate({\n                scrollTop: 0\n        },\n        50);\n});\n</code></pre>\n\n<p>I want to slow it down.</p>\n",
            "last_activity_date": 1416556656,
            "question_id": 2123690,
            "score": 22,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Slow down scroll to top event by jQuery animate"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Change the loading order of your scripts so that <code>function1</code> was defined before using it in <code>ready</code> callback. </p>\n\n<p>Plus I always found it better to define <code>ready</code> callback as an anonymous method then named one.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't have a reference for it handy, but script tags are processed in order, and so if you put your <code>$(document).ready(function1)</code> in a script tag after the script tags that define function1, etc., you should be good to go.</p>\n\n<pre><code>&lt;script type='text/javascript' src='...'&gt;&lt;/script&gt;\n&lt;script type='text/javascript' src='...'&gt;&lt;/script&gt;\n&lt;script type='text/javascript'&gt;\n$(document).ready(function1);\n&lt;/script&gt;\n</code></pre>\n\n<p>Of course, another approach would be to ensure that you're using only one script tag, in total, by combining files as part of your build process.  (Unless you're loading the other ones from a CDN somewhere.)  That will also help improve the perceived speed of your page.</p>\n\n<p>EDIT:  Just realized that I didn't actually answer your question: <s>I don't think there's a cross-browser event that's fired, no.</s> <em>There is if you work hard enough, see below.</em> You can test for symbols and use setTimeout to reschedule:</p>\n\n<pre><code>&lt;script type='text/javascript'&gt;\nfunction fireWhenReady() {\n    if (typeof function1 != 'undefined') {\n        function1();\n    }\n    else {\n        setTimeout(fireWhenReady, 100);\n    }\n}\n$(document).ready(fireWhenReady);\n&lt;/script&gt;\n</code></pre>\n\n<p>...but you shouldn't have to do that if you get your script tag order correct.</p>\n\n<hr>\n\n<p>Update: You can get load notifications for <code>script</code> elements you add to the page dynamically if you like. To get broad browser support, you have to do two different things, but as a combined technique this works:</p>\n\n<pre><code>function loadScript(path, callback) {\n\n    var done = false;\n    var scr = document.createElement('script');\n\n    scr.onload = handleLoad;\n    scr.onreadystatechange = handleReadyStateChange;\n    scr.onerror = handleError;\n    scr.src = path;\n\n    function handleLoad() {\n        if (!done) {\n            done = true;\n            callback(path, \"ok\");\n        }\n    }\n\n    function handleReadyStateChange() {\n        var state;\n\n        if (!done) {\n            state = scr.readyState;\n            if (state === \"complete\") {\n                handleLoad();\n            }\n        }\n    }\n    function handleError() {\n        if (!done) {\n            done = true;\n            callback(path, \"error\");\n        }\n    }\n}\n</code></pre>\n\n<p>In my experience, error notification (<code>onerror</code>) is not 100% cross-browser reliable. Also note that some browsers will do both mechanisms, hence the <code>done</code> variable to avoid duplicate notifications.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>When they say \"The bottom of the page\" they don't literally mean the bottom: they mean just before the closing <code>&lt;/body&gt;</code> tag. Place your scripts there and they will be loaded before the DOMReady event; place them afterwards and the DOM will be ready before they are loaded (because it's complete when the closing <code>&lt;/html&gt;</code> tag is parsed), which as you have found will not work.</p>\n\n<p>If you're wondering how I know that this is what they mean: I have worked at Yahoo! and we put our scripts just before the <code>&lt;/body&gt;</code> tag :-)</p>\n\n<p>EDIT: also, see T.J. Crowder's reply and make sure you have things in the correct order.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Like T.J. <a href=\"http://stackoverflow.com/questions/1293367/how-to-detect-if-javascript-files-are-loaded/1293389#1293389\">wrote</a>: the order <em>is</em> defined (at least it's sequential when your browser is about <em>to execute</em> any JavaScript, even if it may download the scripts in parallel somehow). However, as apparently you're having trouble, maybe you're using third-party JavaScript libraries that yield some 404 Not Found or timeout? If so, then read <a href=\"http://stackoverflow.com/questions/1014203/best-way-to-use-googles-hosted-jquery-but-fall-back-to-my-hosted-library-on-goo\">Best way to use Google\u2019s hosted jQuery, but fall back to my hosted library on Google fail.</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I always make a call from the end of the JavaScript files for registering its loading and it used to work perfect for me for all the browsers.</p>\n\n<p>Ex: I have an index.htm, Js1.js and Js2.js. I add the function IAmReady(Id) in index.htm header and call it with parameters 1 and 2 from the end of the files, Js1 and Js2 respectively. The IAmReady function will have a logic to run the boot code once it gets two calls (storing the the number of calls in a static/global variable) from the two js files.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Take a look at jQuery's .load() <a href=\"http://api.jquery.com/load-event/\" rel=\"nofollow\">http://api.jquery.com/load-event/</a></p>\n\n<pre><code>$('script').load(function () { }); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Is there a event that fires when javascript files are loaded. The problem occured because YSlow recoment to move javascript files in bottom of the page. This means that \n$(document).ready(function1) is fired before js file that contains code of function1 event is loaded.</p>\n\n<p>How to avoid this kind of situation?</p>\n",
            "last_activity_date": 1337352640,
            "question_id": 1293367,
            "score": 20,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to detect if javascript files are loaded"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>depending on what is in the js. if only want it to 'go' when the page loads either surround your code by jquery's: <code>$(function(){})</code> or place it at the bottom of the page</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A Google search will return a large number of results as to why you want to do so and what improvement you'll see. Check out some of these following links:</p>\n\n<ul>\n<li><a href=\"http://developer.yahoo.com/blogs/ydn/posts/2007/07/high_performanc_5/\" rel=\"nofollow\">High Performance Web Sites: Rule 6 - Move Scripts to the Bottom</a></li>\n<li><a href=\"http://rails-bestpractices.com/posts/50-put-scripts-at-the-bottom\" rel=\"nofollow\">Rails Best Practices: Scripts at Bottom</a></li>\n</ul>\n\n<p>Basically, the main reason for doing so is that you'll improve render times of your page. From the first article:</p>\n\n<blockquote>\n  <p>[I]t\u2019s better to move scripts from the\n  top to as low in the page as possible.\n  One reason is to enable progressive\n  rendering, but another is to achieve\n  greater download parallelization.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>As scripts that are referred to are being downloaded, browsers typically won't download other files in parallel, thus slowing the page load.</p>\n\n<p>refer: <a href=\"http://developer.yahoo.com/performance/rules.html#js_bottom\" rel=\"nofollow\">Best Practices for Speeding Up Your Web Site</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<ol>\n<li><p>If you include external js files at the bottom of your page, you give the priority of your HTTP requests to the visual display that will be presented to the client instead of to the logic of interaction or dynamics. I believe, if you do not use a content delivery network to deliver images to the client then you are only allowed to process a maximum of 2 HTTP requests at a time. You do not want to waste these requests on logic because we all know how impatient the end user is. </p></li>\n<li><p>By loading js at then end of the file you can access the DOM(most of the time) without having to call a document.ready() function. You know that if the page render finally makes it to your javascript code that the necessary page elements have usually loaded already.</p></li>\n</ol>\n\n<p>There are a few more reasons out there but these are the important ones that I try to remember when it feels so awkward to place all js at the bottom.</p>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<p>What are the real benefits is any to loading your JS at the bottom of the document as opposed to the top.  It seems there is a brief delay in page loading and JS dependent functionality.  </p>\n\n<p>I am using <a href=\"http://html5boilerplate.com\">html5boilerplate</a> for beginning all my templates but am not really sure on how beneficial loading the JS at the bottom is.</p>\n\n<p>Does it really make all that much of a difference and if so why?</p>\n",
            "last_activity_date": 1410018062,
            "question_id": 5329807,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "html5"
            ],
            "title": "Benefits of loading js at the bottom as opposed to the top of the document"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Something like (warning: untested code ahead)</p>\n\n<pre><code>var testProperty = function(obj, proplist) {\n   for (var i=0; i &lt; proplist.length; i++) {\n      if (obj.hasOwnProperty(proplist[i])) {\n         obj = obj[proplist[i]];\n      } else {\n        return false;\n      }\n   }\n   return true;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>if (someObject.member &amp;&amp; someObject.member.member &amp;&amp;\n    someObject.member.member.member &amp;&amp; someObject.member.member.member.value) ...\n</code></pre>\n\n<p>or similarly:</p>\n\n<pre><code>var val = foo.bar &amp;&amp; foo.bar.jim &amp;&amp; foo.bar.jim.jam &amp;&amp; foo.bar.jim.jam.value;\n</code></pre>\n\n<p>This will not 'work' if any particular value happens to be <code>null</code>, <code>false</code>, <code>0</code>, or <code>\"\"</code> (an empty string), but with the possible exception of the final value, this seems unlikely to be the case.</p>\n\n<p>Also, note that <code>typeof ____ !== \"undefined\"</code> is not the correct test to see if an object has a property. Instead you should use <code>___ in object</code>, e.g. <code>if (\"member\" in someObject)</code>. This is because you can set a property to an explicit value of <code>undefined</code>, which is different from removing it with <code>delete someObject.member</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In general, you can use <code>if(property in object)</code>, but this would be still cumbersome for nested members.</p>\n\n<p>You could write a function:</p>\n\n<pre><code>function test(obj, prop) {\n    var parts = prop.split('.');\n    for(var i = 0, l = parts.length; i &lt; l; i++) {\n        var part = parts[i];\n        if(obj !== null &amp;&amp; typeof obj === \"object\" &amp;&amp; part in obj) {\n            obj = obj[part];\n        }\n        else {\n            return false;\n        }\n    }\n    return true;\n}\n\ntest(someObject, 'member.member.member.value');\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/7nPnz/3/\"><strong>DEMO</strong></a></p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>Here's one way: <a href=\"http://jsfiddle.net/9McHq/\" rel=\"nofollow\">http://jsfiddle.net/9McHq/</a></p>\n\n<pre><code>var result = ((((someObject || {}).member || {}).member || {}).member || {}).value;\n\nalert( result );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You could also try/catch TypeError?</p>\n\n<pre><code>try {\n  console.log(someObject.member.member.member.value);\n} catch(e) {\n  if (e instanceof TypeError) {\n    console.log(\"Couldn't access someObject.member.member.member.value\");\n    console.log(someObject);\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Theres a safeRead function defined <a href=\"http://thecodeabode.blogspot.com.au/2013/04/javascript-safely-reading-nested.html\" rel=\"nofollow\">here on thecodeabode</a> which allows a safeRead of nested properties\ni.e.</p>\n\n<pre><code>safeRead(foo, 'bar', 'jim', 'jam');\n</code></pre>\n\n<p>if any of the properties are null or undefined a blank string is returned - useful for formatting / string interpolation</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Check out lodash-deep\u2019s <code>deepHas</code> <a href=\"https://github.com/marklagendijk/lodash-deep#_deephascollection-propertypath\" rel=\"nofollow\">https://github.com/marklagendijk/lodash-deep#_deephascollection-propertypath</a> </p>\n\n<p>And this too <a href=\"https://github.com/danielstjules/hoops\" rel=\"nofollow\">https://github.com/danielstjules/hoops</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a simpler way than using <code>___ in object</code> to check the existence of each level of an object to check the existence of a single member? </p>\n\n<p>More concisely: How can I check if <strong>someObject.member.member.member.value</strong> exists?</p>\n",
            "last_activity_date": 1418065991,
            "question_id": 4676223,
            "score": 18,
            "tags": [
                "javascript",
                "object"
            ],
            "title": "Check if object member exists in nested object"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Mozilla (maybe IE as well) will cache/delay executing changes to the DOM which affect display, so that it can calculate all the changes at once instead of repeatedly after each and every statement.</p>\n\n<p>To force an update (to force an immediate, synchronous reflow or relayout), your javascript should read a property that's affected by the change, e.g. the location of someSpan and otherSpan.</p>\n\n<p>(This Mozilla implementation detail is mentioned in the video <a href=\"http://www.youtube.com/watch?v=a2%5F6bGNZ7bA\">Faster HTML and CSS: Layout Engine Internals for Web Developers</a>.)</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Can your longRunningOperation be called asynchronously?</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>You can also wrap you longterm function in a setTimeout(function(){longTerm();},1);</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To continue what ChrisW says:</p>\n\n<p>here's flushing script to flash DOM, so you don't have to call alert(\"\"); (found at <a href=\"http://amolnw.wordpress.com/category/programming/javascript/\" rel=\"nofollow\">http://amolnw.wordpress.com/category/programming/javascript/</a>):</p>\n\n<pre><code>function flushThis(id){\n   var msie = 'Microsoft Internet Explorer';\n   var tmp = 0;\n   var elementOnShow = document.getElementById(id);\n   if (navigator.appName == msie){\n      tmp = elementOnShow.parentNode.offsetTop  +  'px';\n   }else{\n      tmp = elementOnShow.offsetTop;\n   }\n}\n</code></pre>\n\n<p><strong>It works for me!!!</strong>\nThanks for the tip.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I had this problem in Chrome 21 dragging a word that had a letter with a descender ('g'). It was leaving a trail of moth dust behind on the screen, which would vanish the next time something made the screen refresh. ChrisW's solution (interrogating a layout-sensitive property) didn't work.</p>\n\n<p>What did work was to add a 1-pixel blank div at the top of the page, then remove it a millisecond later, by calling the following the function at the end of the drag operation:</p>\n\n<pre><code>// Needed by Chrome, as of Release 21. Triggers a screen refresh, removing drag garbage.\nfunction cleanDisplay() {\n    var c = document.createElement('div');\n    c.innerHTML = 'x';\n    c.style.visibility = 'hidden';\n    c.style.height = '1px';\n    document.body.insertBefore(c, document.body.firstChild);\n    window.setTimeout(function() {document.body.removeChild(c)}, 1);\n}\n</code></pre>\n\n<p>Note: You need the delay. Simply adding and removing the <code>div</code> doesn't work. Also, the <code>div</code> needs to be added above the part of the page that needs to be redrawn.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>element.focus() works for me in IE10</p>\n\n<pre><code>function displayOnOff(){\n    var elm = document.getElementById(\"myDiv\");\n    elm.style.display=\"block\";\n    elm.focus();\n    for(var i=0; i&lt;1000000; i++){\n        console.log(\"waiting...............\");\n    }\n    elm.style.display = \"none\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Here is the situation. I have some javascript that looks like this:</p>\n\n<pre><code>function onSubmit() {\n    doSomeStuff();\n    someSpan.style.display=\"block\";\n    otherSpan.style.display=\"none\";\n    return doLongRunningOperation;\n}\n</code></pre>\n\n<p>When I make this a form submit action, and run it from a non IE browser, it quickly swaps the two spans visibility and run the long javascript operation. If I do this in IE it does not do the swap until after onSubmit() completely returns.</p>\n\n<p>I can force a dom redraw by sticking an alert box in like so:</p>\n\n<pre><code>function onSubmit() {\n    doSomeStuff();\n    someSpan.style.display=\"block\";\n    otherSpan.style.display=\"none\";\n    alert(\"refresh forced\");\n    return doLongRunningOperation;\n}\n</code></pre>\n\n<p>Also, the obvious jquery refactoring does not affect the IE behavior:</p>\n\n<pre><code>function onSubmit() {\n    doSomeStuff();\n    $(\"#someSpan\").show();\n    $(\"#otherSpan\").hide();\n    return doLongRunningOperation;\n}\n</code></pre>\n\n<p>This behavior exists on IE8 and IE6. Is there anyway to force a redraw of the DOM in these browsers?</p>\n",
            "last_activity_date": 1423559349,
            "question_id": 1397478,
            "score": 18,
            "tags": [
                "javascript",
                "internet-explorer",
                "dom"
            ],
            "title": "Forcing a DOM refresh in Internet explorer after javascript dom manipulation"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>IE8 beta 2 has a nice debugger</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Take a look at Venkman, the JavaScript debugger for Firefox:</p>\n\n<p><a href=\"http://www.mozilla.org/projects/venkman/\" rel=\"nofollow\">http://www.mozilla.org/projects/venkman/</a></p>\n\n<p>It's a real source-level javascript debugger where you can set breakpoints and step through code.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Opera has <a href=\"http://www.opera.com/products/dragonfly/\" rel=\"nofollow\">Dragonfly</a>, though I still prefer Firebug. Before Firebug there was <a href=\"http://www.mozilla.org/projects/venkman/\" rel=\"nofollow\">Venkman</a>, though it's future is uncertain at this point.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here is an article, <a href=\"http://www.sitepen.com/blog/2008/04/03/advanced-javascript-debugging-techniques/\">Advanced JavaScript Debugging Techniques</a>, that describes the use of several tools.  One new tool I learned about that I hadn't heard of before is <a href=\"http://www.jslint.com/\">JSLint</a>.  Sometimes <a href=\"http://www.jslint.com/\">JSLint</a> just immediately shows you your dodgy code that is causing the issue.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>The <a href=\"http://www.google.com/chrome\" rel=\"nofollow\">Google chrome</a> browser has a reasonable wee JS debugger built-in. There's a good list of the available commands <a href=\"http://www.pascarello.com/lessons/browsers/ChromeDebugHelp.html\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://www.aptana.com/studio\" rel=\"nofollow\">Aptana Studio IDE</a> has a nice javascript debugger. </p>\n\n<p>The community version supports only Firefox, the professional one also supports Internet Explorer.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For Internet Explorer debugging (and when you don't have VS 2008), you can use MS Script Editor. This is a good writeup on how to get it configured correctly: </p>\n\n<p><a href=\"http://www.jonathanboutelle.com/mt/archives/2006/01/howto_debug_jav.html\" rel=\"nofollow\">http://www.jonathanboutelle.com/mt/archives/2006/01/howto_debug_jav.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I work in Aptana. You set breakpoints, hover over variables, and do watches right in the editor. Love it. Never thought I'd move away from Firebug as my chief debugger.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you're accustomed to using Firebug, you might like <a href=\"http://getfirebug.com/lite.html\" rel=\"nofollow\">Firebug Lite</a>, implemented in JavaScript. You can use it as a bookmarklet, which is nice. I'm not sure how powerful it is, I imagine other, \"real\" solutions are better, but it's handy in a pinch.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've been using <a href=\"http://www.javascript-debugger.com\">splinetech javascript debugger</a> for complex javascript debugging for years now. Can't imagine going back to built-in debuggers. It's only for IE though.\nHope this helps. \nCheers,\nAlex Stevens</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Does anyone know of a really  good editor to debug JavaScript (other then Visual Studio 2008 and FireBug)?</p>\n",
            "last_activity_date": 1346787737,
            "question_id": 103155,
            "score": 18,
            "tags": [
                "javascript",
                "ide",
                "editor",
                "debugging"
            ],
            "title": "JavaScript Debugger"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Javascript is a single threaded language, you don't want to block your whole server! Async code eliminates, race conditions by making dependencies explicit.</p>\n\n<p><strong>Learn to love asynchronous code!</strong></p>\n\n<p>Have a look at <code>promises</code> for asynchronous code without creating a pyramid of callback hell.\nI recommend the <a href=\"https://github.com/bellbind/using-promise-q\" rel=\"nofollow\">promiseQ library for node.js</a></p>\n\n<pre><code>httpGet(url.parse(\"http://example.org/\")).then(function (res) {\n    console.log(res.statusCode);  // maybe 302\n    return httpGet(url.parse(res.headers[\"location\"]));\n}).then(function (res) {\n    console.log(res.statusCode);  // maybe 200\n});\n</code></pre>\n\n<p><a href=\"http://howtonode.org/promises\" rel=\"nofollow\">http://howtonode.org/promises</a></p>\n\n<p>EDIT: this is by far my most controversial answer, node now has yield keyword, which allows you to treat async code as if it were sychronous. <a href=\"http://blog.alexmaccaw.com/how-yield-will-transform-node\" rel=\"nofollow\">http://blog.alexmaccaw.com/how-yield-will-transform-node</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You shouldn't be looking at what happens <em>around</em> the call that creates the fiber but rather at what happens <em>inside</em> the fiber. Once you are inside the fiber you can program in sync style. For example:</p>\n\n<pre>\nfunction f1() {\n    console.log('wait... ' + new Date);\n    sleep(1000);\n    console.log('ok... ' + new Date);   \n}\n\nfunction f2() {\n    f1();\n    f1();\n}\n\nFiber(function() {\n    f2();\n}).run();\n</pre>\n\n<p>Inside the fiber you call <code>f1</code>, <code>f2</code> and <code>sleep</code> as if they were sync.</p>\n\n<p>In a typical web application, you will create the Fiber in your HTTP request dispatcher. Once you've done that you can write all your request handling logic in sync style, even if it calls async functions (fs, databases, etc.). </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>If function Fiber really turns async function sleep into sync</p>\n</blockquote>\n\n<p>Yes. Inside the fiber, the function waits before logging <code>ok</code>. Afaik, fibers do not make async functions synchronous, but allow to write synchronous-looking code that uses async functions and then will run asynchronously.</p>\n\n<blockquote>\n  <p>From time to time I find the need to encapsulate an async function into a sync function in order to avoid massive global re-factoring.</p>\n</blockquote>\n\n<p>You cannot. It is impossible to make asynchronous code synchronous. You will need to anticipate that in your global code, and write it in async style from the beginning. Whether you wrap the global code in a fiber, use promises, promise generators, or simple callbacks depends on your preferences.</p>\n\n<blockquote>\n  <p>My objective is to minimize impact on the caller when data acquisition method is changed from sync to async</p>\n</blockquote>\n\n<p>Both promises and fibers can do that.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"https://github.com/abbr/deasync\" rel=\"nofollow\">deasync</a> turns async function into sync, implemented with a blocking mechanism by calling Node.js event loop at JavaScript layer. As a result, deasync only blocks subsequent code from running without blocking entire thread, nor incuring busy wait. With this module, here is the answer to the jsFiddle challenge:</p>\n\n<pre><code>function AnticipatedSyncFunction(){\n  var ret;\n  setTimeout(function(){\n      ret = \"hello\";\n  },3000);\n  while(ret === undefined) {\n    require('deasync').runLoopOnce();\n  }\n  return ret;    \n}\n\n\nvar output = AnticipatedSyncFunction();\n//expected: output=hello (after waiting for 3 sec)\nconsole.log(\"output=\"+output);\n//actual: output=hello (after waiting for 3 sec)\n</code></pre>\n\n<p>(disclaimer: I am the co-author of <code>deasync</code>. The module was created after posting this question and found no workable proposal.)</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I struggled with this at first with node.js and async.js is the best library I have found to help you deal with this.  If you want to write synchronous code with node, approach is this way.</p>\n\n<pre><code>var async = require('async');\n\nconsole.log('in main');\n\ndoABunchOfThings(function() {\n  console.log('back in main');\n});\n\nfunction doABunchOfThings(fnCallback) {\n  async.series([\n    function(callback) {\n      console.log('step 1');\n      callback();\n    },\n    function(callback) {\n      setTimeout(callback, 1000);\n    },\n    function(callback) {\n      console.log('step 2');\n      callback();\n    },\n    function(callback) {\n      setTimeout(callback, 2000);\n    },\n    function(callback) {\n      console.log('step 3');\n      callback();\n    },\n  ], function(err, results) {\n    console.log('done with things');\n    fnCallback();\n  });\n}\n</code></pre>\n\n<p>this program will ALWAYS produce the following...</p>\n\n<pre><code>in main\nstep 1\nstep 2\nstep 3\ndone with things\nback in main\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Suppose you maintain a library that exposes a function <code>getData</code>. Your users call it to get actual data:<br>\n<code>var output = getData();</code><br>\nUnder the hood data is saved in a file so you implemented <code>getData</code> using Node.js built-in <code>fs.readFileSync</code>. It's obvious both <code>getData</code> and <code>fs.readFileSync</code> are sync functions. One day you were told to switch the underlying data source to a repo such as MongoDB which can only be accessed asynchronously. You were also told to avoid pissing off your users, <code>getData</code> API cannot be changed to return merely a promise or demand a callback parameter. How do you meet both requirements?</p>\n\n<p>Asynchronous function using callback/promise is the DNA of JavasSript and Node.js. Any non-trivial JS app is probably permeated with this coding style. But this practice can easily lead to so called callback pyramid of doom. Even worse, if any code in any caller in the call chain depends on the result of the async function, those code has to be wrapped in callback function as well, imposing a coding style constraint on caller. From time to time I find the need to encapsulate an async function (often provided in a 3rd party library) into a sync function in order to avoid massive global re-factoring. Searching for a solution on this subject usually ended up with <a href=\"https://github.com/laverdet/node-fibers\">Node Fibers</a> or npm packages derived from it. But Fibers just cannot solve the problem I am facing. Even the example provided by Fibers' author illustrated the deficiency:</p>\n\n<pre><code>...\nFiber(function() {\n    console.log('wait... ' + new Date);\n    sleep(1000);\n    console.log('ok... ' + new Date);\n}).run();\nconsole.log('back in main');\n</code></pre>\n\n<p>Actual output:</p>\n\n<pre><code>wait... Fri Jan 21 2011 22:42:04 GMT+0900 (JST)\nback in main\nok... Fri Jan 21 2011 22:42:05 GMT+0900 (JST)\n</code></pre>\n\n<p>If function Fiber really turns async function sleep into sync, the output should be:</p>\n\n<pre><code>wait... Fri Jan 21 2011 22:42:04 GMT+0900 (JST)\nok... Fri Jan 21 2011 22:42:05 GMT+0900 (JST)\nback in main\n</code></pre>\n\n<p>I have created another simple example in <a href=\"http://jsfiddle.net/4YN35/\">JSFiddle</a> and looking for code to yield expected output. I'll accept a solution that only works in Node.js so you are free to require any npm package despite not working in JSFiddle.</p>\n",
            "last_activity_date": 1424997719,
            "question_id": 21819858,
            "score": 16,
            "tags": [
                "javascript",
                "node.js",
                "asynchronous",
                "synchronous",
                "node-fibers"
            ],
            "title": "How to wrap async function calls into a sync function in Node.js or Javascript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>IE7 is trying to resize the image before the DOM tree is fully rendered. You need to run it on document.onload... you'll just need to make sure your function can handle being passed a reference to the element that isn't \"this.\"</p>\n\n<p>Alternatively... and I hope this isn't a flameable offense... jQuery makes stuff like this really, really easy.</p>\n\n<p>EDIT in response to EDIT 1:</p>\n\n<p>You can put <code>document.onload(runFunction);</code> in any script tag, anywhere in the body. it will still wait until the document is loaded to run the function.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>The way I would do it is to use jQuery to do something like:</p>\n\n<pre><code>$(document).load(function(){\n    // applies to all images, could be replaced \n    //by img.resize to resize all images with class=\"resize\"\n    $('img').each(function(){\n        // sizing code here\n    });\n});\n</code></pre>\n\n<p>But I'm no javascript expert ;)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you don't have to support IE 6, you can just use this CSS.</p>\n\n<pre><code>yourImageSelector {\n    max-width: 150px;\n    max-height: 150px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>setTimeout() may be a workaround if you are really stuck. Just set it for 2 or 3 seconds - or after the page is expected to load. </p>\n\n<p>EDIT: You may want to have a look at <a href=\"http://www.jibbering.com/faq/faq_notes/closures.html#clMem\" rel=\"nofollow\">this article</a> - all the way at the bottom about IE mem leaks...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've noticed that Firefox and Safari both fire \"load\" events on new images no matter what, but IE 6&amp;7 only fire \"load\" if they actually have to get the image from the server -- they don't if the image is already in local cache.  I played with two solutions:</p>\n\n<p>1) Give the image a unique http argument every time, that the web server ignores, like</p>\n\n<pre><code>&lt;img src=\"mypicture.jpg?keepfresh=12345\" /&gt;\n</code></pre>\n\n<p>This has the downside that it actually defeats caching, so you're wasting bandwidth.  But it might solve the problem without having to screw with your JavaScript.</p>\n\n<p>2) In my app, the images that need load handlers are being inserted dynamically by JavaScript.  Instead of just appending the image, then building a handler, I use this code, which is tested good in Safari, FF, and IE6 &amp; 7.</p>\n\n<pre><code>document.body.appendChild(newPicture);\nif(newPicture.complete){\n    doStuff.apply(newPicture);\n}else{\n    YAHOO.util.Event.addListener(newPicture, \"load\", doStuff);\n}\n</code></pre>\n\n<p>I'm using YUI (obviously) but you can attache the handler using whatever works in your framework.  The function doStuff expects to run with <strong>this</strong> attached to the affected IMG element, that's why I call it in the <strong>.apply</strong> style, your mileage may vary. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<blockquote>\n  <p>Edit: Due to the structure of our app,\n  it is impractical (bordering on\n  impossible) to run this script in the\n  document's onload.</p>\n</blockquote>\n\n<p>It is always possible to add handlers to <code>window.onload</code> (or any event really), even if other frameworks, library or code attaches handlers to that event.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction addOnloadHandler(func) {\n    if (window.onload) {\n        var windowOnload = window.onload;\n        window.onload = function(evt) {\n            windowOnload(evt);\n            func(evt);\n        }\n    } else {\n        window.onload = function(evt) {\n            func(evt);\n        }\n    }\n}\n\n// attach a handler to window.onload as you normally might\nwindow.onload = function() { alert('Watch'); };\n\n// demonstrate that you can now attach as many other handlers\n// to the onload event as you want\naddOnloadHandler(function() { alert('as'); });\naddOnloadHandler(function() { alert('window.onload'); });\naddOnloadHandler(function() { alert('runs'); });\naddOnloadHandler(function() { alert('as'); });\naddOnloadHandler(function() { alert('many'); });\naddOnloadHandler(function() { alert('handlers'); });\naddOnloadHandler(function() { alert('as'); });\naddOnloadHandler(function() { alert('you'); });\naddOnloadHandler(function() { alert('want.'); });\n&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"http://stackoverflow.com/questions/807878/javascript-that-executes-after-page-load/807997#807997\">This answer</a> has a slightly different version of my <code>addOnloadHandler()</code> code using <code>attachEvent</code>. But I discovered in testing that <code>attachEvent</code> doesn't seem to guarantee the handlers fire in the order you added them, which may be important. The function as presented guarantees handlers are fired in the order added.</p>\n\n<p>Note that I pass <code>evt</code> into the added event handlers. This is not strictly necessary and the code should work without it, but I work with a library that expects the event to be passed to the <code>onload</code> handler and that code fails unless I include it in my function.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Code for jQuery. But it's easy to make dial with other frameworks. Really helpful.</p>\n\n<pre><code>var onload = function(){ /** your awesome onload method **/ };\nvar img = new Image();\nimg.src = 'test.png';\n\n// IE 7 workarond\nif($.browser.version.substr(0,1) == 7){\n    function testImg(){\n    \tif(img.complete != null && img.complete == true){ \n        \tonload();\n        \treturn;\n    \t}\n    \tsetTimeout(testImg, 1000);\n    }\n    setTimeout(testImg, 1000);\n}else{\n    img.onload = onload\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can do something like : </p>\n\n<pre><code>var img = new Image();\nimg.src = '/output/preview_image.jpg' + '?' + Math.random();\nimg.onload = function() {\n  alert('pass')\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an img tag in my webapp that uses the onload handler to resize the image:</p>\n\n<pre><code>&lt;img onLoad=\"SizeImage(this);\" src=\"foo\" &gt;\n</code></pre>\n\n<p>This works fine in Firefox 3, but fails in IE7 because the image object being passed to the <code>SizeImage()</code> function has a width and height of 0 for some reason -- maybe IE calls the function before it finishes loading?.  In researching this, I have discovered that other people have had this same problem with IE.  I have also discovered that this isn't valid HTML 4.  This is our doctype, so I don't know if it's valid or not:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n</code></pre>\n\n<p>Is there a reasonable solution for resizing an image as it is loaded, preferably one that is standards-compliant?  The image is being used for the user to upload a photo of themselves, which can be nearly any size, and we want to display it at a maximum of 150x150.  If your solution is to resize the image server-side on upload, I know that is the correct solution, but I am forbidden from implementing it :(  It must be done client side, and it must be done on display.</p>\n\n<p>Thanks.</p>\n\n<p><strong>Edit</strong>: Due to the structure of our app, it is impractical (bordering on impossible) to run this script in the document's onload.  I can only reasonably edit the image tag and the code near it (for instance I could add a <code>&lt;script&gt;</code> right below it).  Also, we already have Prototype and EXT JS libraries... management would prefer to not have to add another (some answers have suggested jQuery).  If this can be solved using those frameworks, that would be great.</p>\n\n<p><strong>Edit 2</strong>: Unfortunately, we must support Firefox 3, IE 6 and IE 7.  It is desirable to support all Webkit-based browsers as well, but as our site doesn't currently support them, we can tolerate solutions that only work in the Big 3.</p>\n",
            "last_activity_date": 1339663898,
            "question_id": 198892,
            "score": 15,
            "tags": [
                "javascript",
                "html",
                "internet-explorer",
                "image"
            ],
            "title": "img onload doesn&#39;t work well in IE7"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>there is <a href=\"http://jqueryui.com/demos/draggable/\" rel=\"nofollow\">Draggable</a> in the jquery UI</p>\n\n<p>all you would have to do is:</p>\n\n<pre><code>$(selector).draggable(); // and you are done!\n</code></pre>\n\n<p>see example here: <a href=\"http://jsfiddle.net/maniator/zVZFq/\" rel=\"nofollow\">http://jsfiddle.net/maniator/zVZFq/</a></p>\n",
                    "is_accepted": true,
                    "score": -4
                },
                {
                    "body": "<p>I am the author of the jquery drag/drop events plugin. I added this functionality for supporting multiple elements, because I could not find a satisfactory solution anywhere else. </p>\n\n<p>If you need a solution that works with the jQuery UI, here is a plugin which adds some multi-drag functionality, though the demos don't seem to work correctly in firefox 4 mac.</p>\n\n<p><a href=\"http://www.myphpetc.com/2009/11/jquery-ui-multiple-draggable-plugin.html\">http://www.myphpetc.com/2009/11/jquery-ui-multiple-draggable-plugin.html</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>var selectedObjs;\nvar draggableOptions = {\n    start: function(event, ui) {\n        //get all selected...\n        selectedObjs = $('div.selected').filter('[id!='+$(this).attr('id')+']');\n    },\n    drag: function(event, ui) {\n        var currentLoc = $(this).position();\n        var orig = ui.originalPosition;\n\n        var offsetLeft = currentLoc.left-orig.left;\n        var offsetTop = currentLoc.top-orig.top;\n\n        moveSelected(offsetLeft, offsetTop);\n    }       \n};\n\n$(document).ready(function() {\n    $('#dragOne, #dragTwo').draggable(draggableOptions);\n});\n\nfunction moveSelected(ol, ot){\n    console.log(selectedObjs.length);\n    selectedObjs.each(function(){\n        $this =$(this);\n        var pos = $this.position();\n\n        var l = $this.context.clientLeft;\n        var t = $this.context.clientTop;\n\n        $this.css('left', l+ol);\n        $this.css('top', t+ot);\n    })\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Check this out:</p>\n\n<p><a href=\"https://github.com/someshwara/MultiDraggable\" rel=\"nofollow\">https://github.com/someshwara/MultiDraggable</a></p>\n\n<p>Usage:<code>$(\".className\").multiDraggable({ group: $(\".className\")});</code></p>\n\n<p>Drags the group of elements together. Group can also be an array specifying individual elements.</p>\n\n<p>Like:<code>$(\"#drag1\").multiDraggable({ group: [$(\"#drag1\"),$(\"#drag2\") ]});</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I wanted to add (this coming up high in google), since none of the plugins in this thread worked and it is not nativity supported by jquery ui, a simple elegant solution.</p>\n\n<p>Wrap the draggable elements in a container and use an event to drag them all at once, this allows for singles draggables and multidraggables (but not really selective draggables).</p>\n\n<pre><code>jQuery(document).click(function(e) {\n\n  if(e.shiftKey) {\n      jQuery('#parent-container').draggable();\n  }\n}); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Put your items into some container and make this container draggable. You will need to set <code>handle</code> option to be a class of your item element. Also you will need to recalculate items position after drag. And obviously when you deselect items you have to take them from this container and put back to their origin.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is what i used, Worked in my case. </p>\n\n<pre><code>function selectable(){\n$('#selectable').selectable({\n  stop: function() {\n    $('.ui-selectee', this).each(function(){\n        if ($('.ui-selectee').parent().is( 'div' ) ) {\n            $('.ui-selectee li').unwrap('&lt;div /&gt;');\n        }\n\n\n    });\n\n    $('.ui-selected').wrapAll('&lt;div class=\\\"draggable\\\" /&gt;');\n\n    $('.draggable').draggable({ revert : true });   \n  }\n});\n</code></pre>\n\n<p>};</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to be able to drag a group of elements with jQuery, like if I selected and dragged multiple icons on the Windows desktop.</p>\n\n<p>I found the demo of <strong>threedubmedia's jQuery.event.drag</strong>:</p>\n\n<p><a href=\"http://threedubmedia.com/code/event/drag/demo/multi\" rel=\"nofollow\">http://threedubmedia.com/code/event/drag/demo/multi</a><br/>\n<a href=\"http://threedubmedia.com/code/event/drag#demos\" rel=\"nofollow\">http://threedubmedia.com/code/event/drag#demos</a></p>\n\n<p>I think this plugin is great. Is this good and popular library? Do you know websites or applications which use it?</p>\n\n<p>Are there any other libraries or plugins to drag multiple objects?<br></p>\n\n<p>Can <strong>jQuery UI</strong> drag multiple objects?</p>\n",
            "last_activity_date": 1424983308,
            "question_id": 5677993,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "jquery-plugins",
                "drag-and-drop"
            ],
            "title": "How do I drag multiple elements at once with JavaScript or jQuery?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<h3>The CSS Method</h3>\n\n<p>You can set an explicit height and line-height on your container to center an image:</p>\n\n<pre><code>&lt;div id=\"container\"&gt;\n    &lt;img src=\"http://placekitten.com/200/200\" /&gt;\n&lt;/div&gt;\n\n&lt;style&gt;\n    #container { height: 600px; line-height: 600px; text-align: center }\n    #container img { vertical-align: middle }\n&lt;/style&gt;\n</code></pre>\n\n<p>See it in action: <a href=\"http://jsfiddle.net/jonathansampson/qN3nm/\" rel=\"nofollow\">http://jsfiddle.net/jonathansampson/qN3nm/</a></p>\n\n<h3>The HTML/Table Method</h3>\n\n<p>The table method follows. It's merely utilizing the <code>valign</code> (vertical-align) property:</p>\n\n<pre><code>&lt;table&gt;\n  &lt;tbody&gt;\n    &lt;tr&gt;\n      &lt;td align=\"center\" valign=\"middle\"&gt;\n        &lt;img src=\"someHeight.jpg\" /&gt;\n      &lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n\n<h3>A jQuery Plugin</h3>\n\n<p>Since you tagged this question \"jQuery,\" I'll provide a reference to the jQuery Center Plugin that also achieves vertical/horizontal centering by using CSS positioning and dynamic reading of an elements dimensions: <a href=\"http://plugins.jquery.com/project/elementcenter\" rel=\"nofollow\">http://plugins.jquery.com/project/elementcenter</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>With a table:</p>\n\n<pre><code>&lt;table height=\"400\"&gt;\n    &lt;tbody&gt;\n        &lt;tr&gt;\n            &lt;td valign=\"middle\"&gt;&lt;img /&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>The 400 is just something I picked. You will need to define a height on table so it is taller than your image. </p>\n\n<p>A jquery solution would be good if you wanted to try and use divs and junk, but if you don't care you don't care. You also have to rely on JS being turned on. </p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"imgContainer\" style=\"position:relative;\"&gt;\n    &lt;img style=\"position:absolute;\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>$('#imgContainer &gt; img').each(function(){\n    //get img dimensions\n    var h = $(this).height();\n    var w = $(this).width();\n\n    //get div dimensions\n    var div_h =$('#imgContainer').height();\n    var div_w =$('#imgContainer').width();\n\n    //set img position\n    this.style.top = Math.round((div_h - h) / 2) + 'px';\n    this.style.left = '50%';\n    this.style.marginLeft = Math.round(w/2) + 'px';\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>Basically, you should be able to create a table in HTML, and the styling for the <code>td</code> tag should set the <code>text-align</code> attribute to <code>center</code> and the <code>vertical-align</code> attribute to <code>middle</code>. And, you can mess with other attributes, like borders, padding, etc...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Using CSS there is no easy way to vertically align an image center. Though to align it center horizontally you can use the following</p>\n\n<pre><code>&lt;img src=\"randomimage.jpg\" style=\"margin: 0px auto;\" /&gt;\n</code></pre>\n\n<p>I would not reccommend a table for laying out an image as it is not really good practice anymore. Tables should only be used for tabular data.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is some bad way to do it. Just display this image as block with absolute positioning (parent element must have \"position: relative\"). So you can play with margin-left and margin-top with negative values ~= a half of image sizes (respectively width and height)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you don't mind losing IE compatibility (IE7 and older don't support this at all), you can use some CSS to simulate tables, without ever using one:</p>\n\n<pre><code>&lt;div style=\"display: table; height: 500px; width: 500px;\"&gt;\n   &lt;img src=\"pic.jpg\" style=\"display: table-cell; vertical-align:middle; margin: 0 auto; text-align: center\"&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Just pick appropriate height/width for the containing &lt;div&gt;.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Pretty easy, this is the format of all my images/containers:</p>\n\n<pre><code>&lt;div class=\"photo\"&gt;&lt;img /&gt;&lt;/div&gt;\n&lt;style type=\"text/css\"&gt;\n  div.photo { height: 100px; line-height: 100px;text-align:center; }\n  div.photo img { vertical-align:middle;}\n&lt;/style&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>DON'T USE TABLES. Terrible practice unless your using tabular data.</p>\n\n<p>The best way to do this is with the following code.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;&lt;/title&gt;\n    &lt;style media=\"screen\"&gt;\n    .centered {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        margin: -50px 0 0 -50px;*/\n    }\n\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;img class=\"centered\" src=\"\" width=\"100\" height=\"100\" alt=\"Centered Image\"/&gt;\n\n&lt;/body&gt;\n</code></pre>\n\n<p></p>\n\n<p>This will work as long as it is not inside any elements without static positioning. All containing elements must be static positioning which is the default anyway.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I end up doing the below. Tested with firefox, chrome, IE8 and opera. All good.</p>\n\n<pre><code>table.NAME\n{\n    background: green; //test color\n    text-align: center;\n    vertical-align:middle;\n}\ntable.NAME tr td\n{\n    width: 150px;\n    height: 150px;\n}\n</code></pre>\n\n<p>html</p>\n\n<pre><code>&lt;table class=\"NAME\"&gt;&lt;tr&gt;\n&lt;td&gt;&lt;a href=\"jdhfdjsfl\"&gt;&lt;img src=\"dfgdfgfdgf.gif\" alt=\"dfgdfgfdgf.gif\"/&gt;&lt;/a&gt;&lt;/td&gt;\n&lt;td&gt;&lt;a href=\"jdhfdjsfl\"&gt;&lt;img src=\"dfgdfgfdgf.gif\" alt=\"dfgdfgfdgf.gif\"/&gt;&lt;/a&gt;&lt;/td&gt;\n...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you don't mind losing the img-tag, you can use background-image to center an image in a container block. </p>\n\n<p>markup:</p>\n\n<pre><code>&lt;div class=\"imagebox\" style=\"background-image: url(theimage.png);\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>style:</p>\n\n<pre><code>.imagebox\n{\n  width: 500px;\n  height: 500px;\n  border: solid 1px black;\n  background-repeat: no-repeat;\n  background-position: 50% 50%;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How do I vertically and horizontally center an image when I do not know the size of it? I asked <a href=\"http://stackoverflow.com/questions/2478168/how-do-i-make-a-background-image-right-click-able/\">this question</a> and someone suggested using a table. This isn't the first time I heard a table can do it but I tried without luck.</p>\n\n<p>Searching SO only got me results when I do know the size of the image. How do I do this with a table?</p>\n\n<p>NOTE: JavaScript/jQuery is not preferred but if there's a solution with it I'm open to it.</p>\n",
            "last_activity_date": 1341015071,
            "question_id": 2478434,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "image"
            ],
            "title": "Center an Image vertically and horizontally using CSS"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You have to use <a href=\"https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history#The_pushState%28%29.C2.A0method\">HTML5's pushState() method</a> to change browser history.</p>\n\n<pre><code>window.history.pushState(data, \"Title\", \"/new-url\");\n</code></pre>\n\n<p>Doc says:</p>\n\n<blockquote>\n  <p>pushState() takes three parameters: a state object, a title (which is\n  currently ignored), and (optionally) a URL.</p>\n</blockquote>\n\n<p>The last argument is the new URL.  For security reasons you can only change the path of the URL, not the domain itself.  The second argument is a description of the new state.  And the first argument is some data that you might want to store along with the state.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Well, as was described in the comments by <a href=\"http://stackoverflow.com/u/281995\">Dav</a>, it appears that GitHub does not use the pAjax library. Due to the fact that I ended up answering with an \"incorrect\" information (actually I think I had seen something related to GitHub using pAjax when I was answering this question, but at the moment I can not find the source), I went after the correct answer.</p>\n\n<p>I did not find anything official on the part of developers regarding whether any library was used, only found a post saying that the History API was used: <a href=\"https://github.com/blog/760-the-tree-slider\" rel=\"nofollow\">https://github.com/blog/760-the-tree-slider</a></p>\n\n<p>Then came to my head, why not ask the code itself?</p>\n\n<p>Using Chrome (in reality any browser with a decent developer tools), open a repository (in this case, pAjax), right-clicking on any directory, simply choose inspect element.</p>\n\n<p><img src=\"http://i.stack.imgur.com/nh4mV.png\" alt=\"Inpect Element\"></p>\n\n<p>This will display the <code>a</code> element responsible for the directory link.</p>\n\n<p><img src=\"http://i.stack.imgur.com/OyGp8.png\" alt=\"HTML Structure\"></p>\n\n<p>A \"suspect\" class showed up, let's search for it on the javascript source of the page.</p>\n\n<p><img src=\"http://i.stack.imgur.com/HdIDO.png\" alt=\"The Codez!\"></p>\n\n<p>And here it's, the click event handler for the directory link, in addition to the entire code related to the animation and the History Api. And as can be noted, it's not used any library behind the History Api. Don't forget to mark the Pretty Print option.</p>\n\n<hr>\n\n<h2>Old and incorrect answer</h2>\n\n<p><strike>GitHub uses the jQuery plugin <a href=\"https://github.com/defunkt/jquery-pjax\" rel=\"nofollow\">pJax</a> (pushState + Ajax), which uses the HTML5 history API.</strike></p>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>Github has a really nice source browser. Navigating between different paths in the repo generates ajax calls to load the content (as you can clearly see in the firebug log). The ajax  call returns the html of the new list of files to be displayed. In addition to changing the view list of files, the url changes as well. However it does not use fragments like most ajax deep-linked sites (use of #). At github the whole url changes.</p>\n\n<p>For example at django repo at <a href=\"https://github.com/django/django\" rel=\"nofollow\">https://github.com/django/django</a> going to <code>django</code> folder will generate ajax request to <code>https://github.com/django/django/tree/master/django?slide=1&amp;_=1327709883334</code> which will return the html content of the folder. The link will also change to <a href=\"https://github.com/django/django/tree/master/django\" rel=\"nofollow\">https://github.com/django/django/tree/master/django</a>. As you can see this new link does not use a fragment.</p>\n\n<p>How is that done? I always thought that ajax based sites have to use url fragments (#) to achieve deep linking but apparently it is not so. </p>\n",
            "last_activity_date": 1350507223,
            "question_id": 9041872,
            "score": 4,
            "tags": [
                "javascript",
                "ajax",
                "dom",
                "github",
                "deep-linking"
            ],
            "title": "How AJAX is done in github source browse?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Checkout the wikipedia article:</p>\n\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Unobtrusive_JavaScript\">Unobtrusive JavaScript</a></li>\n</ul>\n\n<blockquote>\n  <p>\"Unobtrusive JavaScript\" is a general\n  approach to the use of JavaScript in\n  web pages. Though the term is not\n  formally defined, its basic principles\n  are generally understood to include:</p>\n  \n  <ul>\n  <li>Separation of functionality (the \"behavior layer\") from a Web page's\n  structure/content and presentation  </li>\n  <li>Best practices to avoid the problems of traditional JavaScript\n  programming (such as browser\n  inconsistencies and lack of\n  scalability)  </li>\n  <li>Progressive enhancement to support user agents that may not\n  support advanced JavaScript\n  functionality[2]</li>\n  </ul>\n</blockquote>\n\n<p>So it is basically separating behavior or javascript from presentation or html.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>&lt;input type=\"button\" id=\"btn\" onclick=\"alert('Test')\" /&gt;\n</code></pre>\n\n<p>That is not unobstrusive javascript because behaviour and presentation are mixed. The <code>onclick</code> shouldn't be there in html and should be part of javascript itself not html.</p>\n\n<p>With above example, you can go unobstrusive like this:</p>\n\n<pre><code>&lt;input type=\"button\" id=\"btn\" /&gt;\n</code></pre>\n\n<p><strong>JavaScript:</strong></p>\n\n<pre><code>var el = document.getElementById('btn');\nel.onclick = function(){\n  alert('Test');\n};\n</code></pre>\n\n<p>That time we have separated javascript from html with a very basic example.</p>\n\n<p><strong>Note:</strong></p>\n\n<p>There is more to unobstrusive javascript as can be checked out on wikipedia article.</p>\n",
                    "is_accepted": true,
                    "score": 56
                }
            ],
            "body": "<p>What is Unobtrusive Javascript in layman terms? An example would be nice to aid my understanding.</p>\n",
            "last_activity_date": 1361088512,
            "question_id": 4478795,
            "score": 40,
            "tags": [
                "javascript",
                "javascript-events",
                "javascript-library",
                "unobtrusive-javascript"
            ],
            "title": "What is Unobtrusive Javascript in layman terms?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>No, JavaScript is not multi-threaded.  It is event driven and your assumption of the events firing sequentially (assuming they load sequentially) is what you will see.  Your current implementation appears correct.  I believe jQuery's <code>.getScript()</code> injects a new <code>&lt;script&gt;</code> tag, which should also force them to load in the correct order.</p>\n",
                    "is_accepted": true,
                    "score": 62
                },
                {
                    "body": "<p>No, all the browsers give you only one thread for JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Currently JavaScript is not multithreaded, but the things will change in near future. There is a <a href=\"http://www.whatwg.org/specs/web-workers/current-work/\">new thing in HTML5</a> called <a href=\"https://developer.mozilla.org/En/Using%5Fweb%5Fworkers\">Worker</a>. It allows you to do some job in background.</p>\n\n<p>But it's currently is not supported by all browsers.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>JavaScript is absolutely not multithreaded - you have a guarantee that any handler you use will not be interrupted by another event. Any other events, like mouse clicks, XMLHttpRequest returns, and timers will queue up while your code is executing, and run one after another.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\">JavaScript (ECMAScript) specification</a> does not define any threading or synchronization mechanisms.</p>\n\n<p>Moreover, the JavaScript engines in our browsers are deliberately single-threaded, in part because allowing more than one UI thread to operate concurrently would open an enormous can of worms. So your assumption and implementation are correct.</p>\n\n<p>As a sidenote, <a href=\"http://stackoverflow.com/users/166712/aforloney\">another commenter</a> alluded to the fact that any JavaScriptengine vendor could add threading and synchronization features, or a vendor could enable users to implement those features themselves, as described in this article: <a href=\"http://ajaxian.com/archives/multi-threaded-javascript\">Multi-threaded JavaScript</a>?</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Thought it might be interesting to try this out with a \"<em>forced</em>\", delayed script delivery ...</p>\n\n<ol>\n<li>added two available scripts from\ngoogle</li>\n<li>added delayjs.php as the 2nd\narray element. delayjs.php sleeps\nfor 5 seconds before delivering an empty js\nobject.</li>\n<li>added a callback that\n\"<em>verifies</em>\" the existence of the\nexpected objects from the script\nfiles.</li>\n<li>added a few js commands that\nare executed on the line after the\nGetScripts() call, to \"<em>test</em>\" sequential js commands.</li>\n</ol>\n\n<p>The result with the script load is as expected; the callback is triggered only after the last script has loaded. What surprised me was that the js commands that followed the GetScripts() call triggered without the need to wait for the last script to load. I was under the impression that no js commands would be executed while the browser was waiting on a js script to load ... </p>\n\n<pre><code>var scripts = [];\nscripts.push('http://ajax.googleapis.com/ajax/libs/prototype/1.6.1.0/prototype.js');\nscripts.push('http://localhost/delayjs.php');\nscripts.push('http://ajax.googleapis.com/ajax/libs/scriptaculous/1.8.3/scriptaculous.js');\n\n\nfunction logem() {\n    console.log(typeof Prototype);\n    console.log(typeof Scriptaculous);\n    console.log(typeof delayedjs);\n}\n\nGetScripts( scripts, logem );\n\nconsole.log('Try to do something before GetScripts finishes.\\n');\n$('#testdiv').text('test content');\n\n&lt;?php\n\nsleep(5);\necho 'var delayedjs = {};';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can probably get some kind of multithreadedness if you create a number of frames in an HTML document, and run a script in each of them, each calling a function in the main frame that should make sense of the results of those functions. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To be clear, the <strong>browser JS implementation</strong> is <strong>not multithreaded</strong>. </p>\n\n<p>The <strong>language, JS,</strong> can be <strong>multi-threaded</strong>. </p>\n\n<p>The question does not apply here however. </p>\n\n<p>What applies is that getScript() is asynchronous (returns immediately and get's queued), however, the browser will execute DOM attached <code>&lt;script&gt;</code> content sequentially so your dependent JS code will see them loaded sequentially. This is a browser feature and not dependent on the JS threading or the getScript() call. </p>\n\n<p>If getScript() retrieved scripts with xmlHTTPRequest, setTimeout(), websockets or any other async call then your scripts would not be guaranteed to execute in order. However, your callback would still get called after all scripts execute since the execution context of your 'len' variable is in a closure which persists it's context through asynchronous invocations of your function. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Here's my issue - I need to dynamically download several scripts using jQuery.getScript() and execute certain <a href=\"http://en.wikipedia.org/wiki/JavaScript\">JavaScript</a> code after all the scripts were loaded, so my plan was to do something like this:</p>\n\n<pre><code>function GetScripts(scripts, callback)\n{\n  var len = scripts.length\n  for (var i in scripts)\n  {\n    jQuery.getScript(scripts[i], function() \n    {\n      len --;\n      // executing callback function if this is the last script that loaded\n      if (len == 0)\n        callback()  \n    })\n  }\n}\n</code></pre>\n\n<p>This will only work reliably if we assume that script.onload events for each script fire and execute sequentially and synchronously, so there would never be a situation when two or more of the event handlers would pass check for (len == 0) and execute callback method.</p>\n\n<p>So my question - is that assumption correct and if not, what's the way to achieve what I am trying to do?</p>\n",
            "last_activity_date": 1415696940,
            "question_id": 1663125,
            "score": 36,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Is JavaScript multithreaded?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The problem with your initial code is that you are missing the <a href=\"http://www.javascriptkit.com/jsref/regexp.shtml\">global identifier</a>:</p>\n\n<pre><code>&gt;&gt;&gt; 'hi there how are you'.match(/\\s/g).length;\n4\n</code></pre>\n\n<p>Without the <code>g</code> part of the regex it will only match the first occurrence and stop there.</p>\n\n<p>Also note that your regex will count successive spaces twice:</p>\n\n<pre><code>&gt;&gt;&gt; 'hi  there'.match(/\\s/g).length;\n2\n</code></pre>\n\n<p>If that is not desirable, you could do this:</p>\n\n<pre><code>&gt;&gt;&gt; 'hi  there'.match(/\\s+/g).length;\n1\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 65
                },
                {
                    "body": "<p>As mentioned in <a href=\"http://stackoverflow.com/a/23385429/1338292\">my earlier answer</a>, you can use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec\" rel=\"nofollow\"><code>RegExp.exec()</code></a> to iterate over all matches and count each occurrence; the advantage is limited to memory only, because on the whole it's about 20% slower than using <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match\" rel=\"nofollow\"><code>String.match()</code></a>.</p>\n\n<pre><code>var re = /\\s/g,\ncount = 0;\n\nwhile (re.exec(text) !== null) {\n    ++count;\n}\n\nreturn count;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I wanted to write a regex to count the number of spaces/tabs/newline in a chunk of text. So I naively wrote the following:-</p>\n\n<pre><code>numSpaces : function(text) { return text.match(/\\s/).length; }\n</code></pre>\n\n<p>For some unknown reasons it always returns <code>1</code>. What is the problem with the above statement? I have since solved the problem with the following:-</p>\n\n<pre><code>numSpaces : function(text) { return (text.split(/\\s/).length -1); }\n</code></pre>\n",
            "last_activity_date": 1398858080,
            "question_id": 1072765,
            "score": 35,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Count number of matches of a regex in Javascript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I think your best approach is to combine the suggestion of the \"sniffer\" image with a matrix of known DPIs for devices (via user agent and other methods). It won't be exact and will be a pain to maintain, but without knowing more about the app you're trying to make that's the best suggestion I can offer.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>DPI is by definition tied to the physical size of the display. So you won't be able to have the real DPI without knowing exactly the hardware behind.</p>\n\n<p>Modern OSes agreed on a common value in order to have compatible displays: 96 dpi. That's a shame but that's a fact.</p>\n\n<p>You will have to rely on sniffing in order to be able to guess the real screen size needed to compute the resolution (DPI = PixelSize / ScreenSize).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Can't you do anything else? For instance, if you are generating an image to be recognized by a camera (i.e. you run your program, swipe your cellphone across a camera, magic happens), can't you use something size-independent?</p>\n\n<p>If this is an application to be deployed in controlled environments, can you provide a calibration utility? (you could make something simple like print business cards with a small ruler in it, use it during the calibration process).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I also needed to display the same image at the same size at different screen dpi but only for Windows IE. I used:</p>\n\n<pre>\n&lt;img src=\"image.jpg\" style=\"\n    height:expression(scale(438, 192)); \n    width:expression(scale(270, 192))\" />\n\nfunction scale(x, dpi) {\n\n    // dpi is for orignal dimensions of the image\n    return x * screen.deviceXDPI/dpi;\n}\n</pre>\n\n<p>In this case the original image width/height are 270 and 438 and the image was developed on 192dpi screen. screen.deviceXDPI is not defined in Chrome and the scale function would need to be updated to support browsers other than IE</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here is what works for me (but didn't test it on mobile phones):</p>\n\n<pre><code>&lt;body&gt;&lt;div id=\"ppitest\" style=\"width:1in;visible:hidden;padding:0px\"&gt;&lt;/div&gt;&lt;/body&gt;\n</code></pre>\n\n<p>Then I put in the .js: <code>screenPPI = document.getElementById('ppitest').offsetWidth;</code></p>\n\n<p>This got me 96, which corresponds to my system's ppi.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There is the <code>resolution</code> CSS media query \u2014 it allows you to limit CSS styles to specific resolutions:</p>\n\n<ul>\n<li><a href=\"http://www.w3.org/TR/css3-mediaqueries/#resolution\">http://www.w3.org/TR/css3-mediaqueries/#resolution</a></li>\n</ul>\n\n<p>However, <a href=\"http://www.browsersupport.net/CSS/%40media_%28resolution%29\">it\u2019s only supported by Firefox 3.5 and above, Opera 9 and above, and IE 9</a>. Other browsers won\u2019t apply your resolution-specific styles at all (although I haven\u2019t checked non-desktop browsers).</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>function getPPI(){\n  // create an empty element\n  var div = document.createElement(\"div\");\n  // give it an absolute size of one inch\n  div.style.width=\"1in\";\n  // append it to the body\n  var body = document.getElementsByTagName(\"body\")[0];\n  body.appendChild(div);\n  // read the computed width\n var ppi = document.defaultView.getComputedStyle(div, null).getPropertyValue('width');\n // remove it again\n body.removeChild(div);\n // and return the value\n return parseFloat(ppi);\n</code></pre>\n\n<p>}</p>\n\n<p>(From VodaFone)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I just found this link: <a href=\"http://dpi.lv/\" rel=\"nofollow\">http://dpi.lv/</a>.  Basically it is a webtool to discover the client device resolution, dpi, and screen size.</p>\n\n<p>I visited on my computer and mobile phone and it provides the correct resolution and DPI for me.  There is a github repo for it, so you can see how it works.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;div id='testdiv' style='height: 1in; left: -100%; position: absolute; top: -100%; width: 1in;'&gt;&lt;/div&gt;\n&lt;script type='text/javascript'&gt;\n  var devicePixelRatio = window.devicePixelRatio || 1;\n  dpi_x = document.getElementById('testdiv').offsetWidth * devicePixelRatio;\n  dpi_y = document.getElementById('testdiv').offsetHeight * devicePixelRatio;\n&lt;/script&gt;\n</code></pre>\n\n<p>grabbed from here <a href=\"http://www.infobyip.com/detectmonitordpi.php\" rel=\"nofollow\">http://www.infobyip.com/detectmonitordpi.php</a>. Works on mobile devices! (android 4.2.2 tested)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm working on a kind of unique app which needs to generate images at specific resolutions according to the device they are displayed on. So the output is different on a regular Windows browser (96ppi), iPhone (163ppi), Android G1 (180ppi), and other devices. I'm wondering if there's a way to detect this automatically.</p>\n\n<p>My initial research seems to say no. The only suggestion I've seen is to make an element whose width is specified as \"1in\" in CSS, then check its offsetWidth (see also <a href=\"http://stackoverflow.com/q/476815/698168\">Can you access screen display\u2019s DPI settings in a Javascript function?</a>). Makes sense, but iPhone is lying to me with that technique, saying it's 96ppi.</p>\n\n<p>Another approach might be to get the dimensions of the display in inches and then divide by the width in pixels, but I'm not sure how to do that either.</p>\n",
            "last_activity_date": 1411507044,
            "question_id": 279749,
            "score": 28,
            "tags": [
                "javascript",
                "css",
                "mobile",
                "dpi",
                "ppi"
            ],
            "title": "Detecting the system DPI/PPI from JS/CSS?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It is possible to have read-only properties in JavaScript which are available via getter methods. This is usually called the 'Module' pattern.</p>\n\n<p>The YUI blog has a good writeup of it: <a href=\"http://yuiblog.com/blog/2007/06/12/module-pattern/\" rel=\"nofollow\">http://yuiblog.com/blog/2007/06/12/module-pattern/</a></p>\n\n<p>Snippet from the post:</p>\n\n<pre><code>YAHOO.myProject.myModule = function () {\n\n//\"private\" variables:\nvar myPrivateVar = \"I can be accessed only from within YAHOO.myProject.myModule.\";\n\n//\"private\" method:\nvar myPrivateMethod = function () {\n\tYAHOO.log(\"I can be accessed only from within YAHOO.myProject.myModule\");\n}\n\nreturn  {\n\tmyPublicProperty: \"I'm accessible as YAHOO.myProject.myModule.myPublicProperty.\"\n\tmyPublicMethod: function () {\n\t\tYAHOO.log(\"I'm accessible as YAHOO.myProject.myModule.myPublicMethod.\");\n\n\t\t//Within myProject, I can access \"private\" vars and methods:\n\t\tYAHOO.log(myPrivateVar);\n\t\tYAHOO.log(myPrivateMethod());\n\n\t\t//The native scope of myPublicMethod is myProject; we can\n\t\t//access public members using \"this\":\n\t\tYAHOO.log(this.myPublicProperty);\n\t}\n};\n\n}(); // the parens here cause the anonymous function to execute and return\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><strong>Edit:</strong> Since this answer was written, a new, better way using <code>Object.defineProperty</code> has been standardized in EcmaScript 5, with support in newer browsers. See <a href=\"http://stackoverflow.com/questions/366047/can-read-only-properties-be-implemented-in-pure-javascript/2964881#2964881\">Aidamina's answer</a>. If you need to support \"older\" browsers, you could use one of the methods in this answer as a fallback.</p>\n\n<hr>\n\n<p>In Firefox, Opera 9.5+, and Safari 3+, Chrome and IE (tested with v11) you can define getter and setter properties. If you only define a getter, it effectively creates a read-only property. You can define them in an object literal or by calling a method on an object.</p>\n\n<pre><code>var myObject = {\n    get readOnlyProperty() { return 42; }\n};\n\nalert(myObject.readOnlyProperty); // 42\nmyObject.readOnlyProperty = 5;    // Assignment is allowed, but doesn't do anything\nalert(myObject.readOnlyProperty); // 42\n</code></pre>\n\n<p>If you already have an object, you can call <code>__defineGetter__</code> and <code>__defineSetter__</code>:</p>\n\n<pre><code>var myObject = {};\nmyObject.__defineGetter__(\"readOnlyProperty\", function() { return 42; });\n</code></pre>\n\n<p>Of course, this isn't really useful on the web because it doesn't work in Internet Explorer.</p>\n\n<p>You can read more about it from <a href=\"http://ejohn.org/blog/javascript-getters-and-setters/\">John Resig's blog</a> or the <a href=\"https://developer.mozilla.org/En/Core_JavaScript_1.5_Guide/Creating_New_Objects/Defining_Getters_and_Setters\">Mozilla Developer Center</a>.</p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>Here's a link to Douglas Crockford's page on \"Private Members in Javascript\"....it would seem to me these would be read only if only getter methods are supplied, and no setters:</p>\n\n<p><a href=\"http://javascript.crockford.com/private.html\" rel=\"nofollow\">http://javascript.crockford.com/private.html</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>With <a href=\"http://kangax.github.io/compat-table/es5/#Object.defineProperty\" rel=\"nofollow\" title=\"show browser support\">any javascript interpreter that implements ECMAScript 5</a> you can use Object.defineProperty to define readonly properties. In loose mode the interpreter will ignore a write on the property, in strict mode it will throw an exception.</p>\n\n<p>Example from <a href=\"http://ejohn.org/blog/ecmascript-5-objects-and-properties/\" rel=\"nofollow\">ejohn.org</a>:</p>\n\n<pre><code>var obj = {};\nObject.defineProperty( obj, \"&lt;yourPropertyNameHere&gt;\", {\n  value: \"&lt;yourPropertyValueHere&gt;\",\n  writable: false,\n  enumerable: true,\n  configurable: true\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p><a href=\"http://www.bobjs.com\" rel=\"nofollow\">bob.js framework</a> provides a way to declare read-only properties. Under the hood, it declares a private field and exposes the getter/setter functions for it. bob.js provides multiple ways of doing this same thing, depending on the convenience and specific goals. Here's one approach that uses object-oriented instance of the <code>Property</code> (other approaches allow defining setters/getters on the object itself):</p>\n\n<pre><code>var Person = function(name, age) {  \n    this.name = new bob.prop.Property(name, true); \n    var setName = this.name.get_setter(); \n    this.age = new bob.prop.Property(age, true); \n    var setAge = this.age.get_setter();  \n    this.parent = new bob.prop.Property(null, false, true);  \n};  \nvar p = new Person('Bob', 20);  \np.parent.set_value(new Person('Martin', 50));  \nconsole.log('name: ' + p.name.get_value());  \nconsole.log('age: ' + p.age.get_value());  \nconsole.log('parent: ' + (p.parent.get_value ? p.parent.get_value().name.get_value() : 'N/A')); \n// Output: \n// name: Bob \n// age: 20 \n// parent: N/A \n</code></pre>\n\n<p>At the end, <code>p.name.set_value</code> is not defined because that's a read-only property.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As readonly property or variable here it is.  </p>\n\n<p>As <a href=\"http://stackoverflow.com/a/2964881/2985029\">aidamina said</a>, and here is a short code for testing, by the way, very usefull now that JQuery pretends deprecate the selector property.</p>\n\n<pre><code>&lt;script&gt;\nObject.defineProperties(window, {\n  \"selector\": { value: 'window', writable: false }\n});\n\nalert (window.selector);  // outputs window\n\nselector ='ddd';          // testing because it belong to the global object\nalert (window.selector);  // outputs window\nalert (selector);         // outputs window\n\nwindow.selector='abc';\nalert (window.selector);   // outputs window\nalert (selector);          // outputs window\n&lt;/script&gt;\n</code></pre>\n\n<p>So there you have a readonly property or variable tested.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Looking at the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array\">mozilla documentation</a>, looking at the regular expression example (headed \"Creating an array using the result of a match\"), we have statements like:</p>\n\n<blockquote>\n  <p>input: A read-only property that reflects the original string against which the regular expression was matched.</p>\n  \n  <p>index: A read-only property that is the zero-based index of the match in the string.</p>\n</blockquote>\n\n<p>etc... is it possible to create your own object in JavaScript which will have read-only properties, or is this a privilege reserved to built-in types implemented by particular browsers?</p>\n",
            "last_activity_date": 1423575409,
            "question_id": 366047,
            "score": 25,
            "tags": [
                "javascript",
                "browser"
            ],
            "title": "Can Read-Only Properties be Implemented in Pure JavaScript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>Answer from 2011</strong> <em>(see below for a 2013 update)</em>:</p>\n\n<p>No, JavaScript doesn't have a catch-all property feature. The accessor syntax you're using is covered in <a href=\"http://es5.github.com/#x11.1.5\">Section 11.1.5</a> of the spec, and doesn't offer any wildcard or something like that.</p>\n\n<p>You could, of course, implement a function to do it, but I'm guessing you probably don't want to use <code>f = obj.prop(\"foo\");</code> rather than <code>f = obj.foo;</code> and <code>obj.prop(\"foo\", value);</code> rather than <code>obj.foo = value;</code> (which would be necessary for the function to handle unknown properties).</p>\n\n<p>FWIW, the getter function (I didn't bother with setter logic) would look something like this:</p>\n\n<pre><code>MyObject.prototype.prop = function(propName) {\n    if (propName in this) {\n        // This object or its prototype already has this property,\n        // return the existing value.\n        return this[propName];\n    }\n\n    // ...Catch-all, deal with undefined property here...\n};\n</code></pre>\n\n<p>But again, I can't imagine you'd really want to do that, because of how it changes how you use the object.</p>\n\n<hr>\n\n<p><strong>Answer in 2013</strong>:</p>\n\n<p>This is going to change soon (and it <a href=\"http://kangax.github.io/es5-compat-table/es6/\">already has</a> for up-to-date Firefox users): ECMAScript 6th edition will have <em>proxies</em>. They're defined in the <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony%3aspecification_drafts\">draft specification</a>, and also on <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony%3adirect_proxies\">this page</a> (but the spec drafts take precedence).</p>\n\n<p>Proxies let you create objects that are true proxies (facades) for other objects. Here's a simple example that turns any property values that are strings to all caps on retrieval:</p>\n\n<pre><code>var original = {\"foo\": \"bar\"};\nvar proxy = new Proxy(original, {\n    get: function(target, name, receiver) {\n        var rv = target[name];\n        if (typeof rv === \"string\") {\n            rv = rv.toUpperCase();\n        }\n        return rv;\n    }\n});\n\nconsole.log(\"original.foo = \" + original.foo); // \"bar\"\nconsole.log(\"proxy.foo = \" + proxy.foo);       // \"BAR\"\n</code></pre>\n\n<p><a href=\"http://jsbin.com/eYAhesa/1\">Live Example</a> | <a href=\"http://jsbin.com/eYAhesa/1/edit\">Source</a></p>\n\n<p>Operations you don't override have their default behavior. In the above, all we override is <code>get</code>, but there's a whole list of operations you can hook into.</p>\n\n<p>In the <code>get</code> handler function's arguments list:</p>\n\n<ul>\n<li><code>target</code> is the object being proxied (<code>original</code>, in our case).</li>\n<li><code>name</code> is (of course) the name of the property being retrieved.</li>\n<li><code>receiver</code> is either the proxy itself or something that inherits from it. In our case, <code>receiver</code> is <code>===</code> <code>proxy</code>, but if <code>proxy</code> were used as a prototype, <code>receiver</code> could be a descendant object, hence it being on the function signature (but at the end, so you can readily leave it off if, as with our example above, you don't actually use it).</li>\n</ul>\n\n<p>This lets you create an object with the catch-all getter and setter feature you want:</p>\n\n<pre><code>var obj = new Proxy({}, {\n    get: function(target, name) {\n        if (!(name in target)) {\n            console.log(\"Getting non-existant property '\" + name + \"'\");\n            return undefined;\n        }\n        return target[name];\n    },\n    set: function(target, name, value) {\n        if (!(name in target)) {\n            console.log(\"Setting non-existant property '\" + name + \"', initial value: \" + value);\n        }\n        target[name] = value;\n    }\n});\n\nconsole.log(\"[before] obj.foo = \" + obj.foo);\nobj.foo = \"bar\";\nconsole.log(\"[after] obj.foo = \" + obj.foo);\n</code></pre>\n\n<p><a href=\"http://jsbin.com/eYAhesa/2\">Live Example</a> | <a href=\"http://jsbin.com/eYAhesa/2/edit\">Source</a> <em>(Note how I've left <code>receiver</code> off the functions, since we don't use it. <code>receiver</code> is an optional fourth arg on <code>set</code>.)</em></p>\n\n<p>The output of the above is:</p>\n\n<pre>Getting non-existant property 'foo'\n[before] obj.foo = undefined\nSetting non-existant property 'foo', initial value: bar\n[after] obj.foo = bar</pre>\n\n<p>Note how we get the \"non-existant\" message when we try to retrieve <code>foo</code> when it doesn't yet exist, and again when we create it, but not subsequently.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>Not 100% what you're asking but pretty close...</p>\n\n<pre><code>function Obj(){\n   var innerProp = new Array; // note it's not \"this\" so it's private\n\n   this.setInnerProp = function(key,val){\n      innerProp[key] = val;\n   }\n\n   this.getInnerProp = function(key){\n     return innerProp[key]\n   }\n }\n</code></pre>\n\n<p>You can obviously tailor this to prototype onto whatever object you already have.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In modern Javascript (FF4+, IE9+, Chrome 5+, Safari 5.1+, Opera 11.60+), there is <code>Object.defineProperty</code>. <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/defineProperty#section_6\">This example on the MDN</a> explains very well how <code>defineProperty</code> works, and makes dynamic getters and setters possible.</p>\n\n<p>Technically, this won't work on <em>any</em> dynamic query like you're looking for, but if your valid getters and setters are defined by, say, an AJAX call to a JSON-RPC server, for instance, then you could use this in the following way:</p>\n\n<pre><code>arrayOfNewProperties.forEach(function(property) {\n    Object.defineProperty(myObject, property.name, {\n        set: property.setter, get: property.getter\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>var x={}\nvar propName = 'value' \nvar get = Function(\"return this['\" + propName + \"']\")\nvar set = Function(\"newValue\", \"this['\" + propName + \"'] = newValue\")\nvar handler = { 'get': get, 'set': set, enumerable: true, configurable: true }\nObject.defineProperty(x, propName, handler)\n</code></pre>\n\n<p>this works for me</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The following could be an original approach to this problem:</p>\n\n<pre><code>var obj = {\n  emptyValue: null,\n  get: function(prop){\n    if(typeof this[prop] == \"undefined\")\n        return this.emptyValue;\n    else\n        return this[prop];\n  },\n  set: function(prop,value){\n    this[prop] = value;\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am aware of how to create getters and setters for properties whose names one already knows, by doing something like this:</p>\n\n<pre><code>// A trivial example:\nfunction MyObject(val){\n    this.count = 0;\n    this.value = val;\n}\nMyObject.prototype = {\n    get value(){\n        return this.count &lt; 2 ? \"Go away\" : this._value;\n    },\n    set value(val){\n        this._value = val + (++this.count);\n    }\n};\nvar a = new MyObject('foo');\n\nalert(a.value); // --&gt; \"Go away\"\na.value = 'bar';\nalert(a.value); // --&gt; \"bar2\"\n</code></pre>\n\n<p>Now, my question is, is it possible to define sort of catch-all getters and setters like these?  I.e., create getters and setters for any property name <em>which isn't already defined</em>.</p>\n\n<p>The concept is possible in PHP using the <code>__get()</code> and <code>__set()</code> magic methods (see <a href=\"http://uk3.php.net/manual/en/language.oop5.overloading.php\">the PHP documentation</a> for information on these), so I'm really asking is there a JavaScript equivalent to these?</p>\n\n<p>Needless to say, I'd ideally like a solution that is cross-browser compatible.</p>\n",
            "last_activity_date": 1401445436,
            "question_id": 7891937,
            "score": 24,
            "tags": [
                "javascript",
                "metaprogramming",
                "getter-setter"
            ],
            "title": "Is it possible to implement dynamic getters/setters in JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Use the <a href=\"http://api.jquery.com/trigger/\">trigger() method</a> </p>\n\n<pre><code>$(selector).trigger(\"change\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 72
                },
                {
                    "body": "<p>The parameterless form of the <a href=\"http://api.jquery.com/change/\" rel=\"nofollow\">change()</a> method triggers a <code>change</code> event. You can do something like:</p>\n\n<pre><code>$(document).ready(function() {\n    $(\"#yourInitialElementID\").change(function() {\n        // Do something here...\n        $(\".yourDropDownClass\").change();\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Put the function in a wrapper and just call it on the onchange event.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>for me $('#element').val('...').change() is the best way.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a change event that is working fine but I need to get it to recurse.</p>\n\n<p>So i have a function that is triggered on change that will \"change\" other drop downs based on a class selector (notice \"drop downS\", there could be more than one). This proxy change does not trigger the function and so fails. How can i get it to work?</p>\n\n<p>Many thanks all you kind ladies and gentlemen.</p>\n\n<h1>Code</h1>\n\n<pre><code>$(document).ready(function () {\n    var activeDropBox = null;\n\n    $(\"select.drop-box\").change(function () {\n        var questionId = $(this).attr(\"questionId\");\n        var selectedAnswer = $(this).val();\n        activeDropBox = this;\n\n        alert(this.questionId);\n\n        $.ajax(\n        {\n            type: \"POST\",\n            url: answerChangedActionUrl,\n            data: { questionId: questionId, selectedValue: selectedAnswer },\n            success: function (data) {\n                SetElementVisibility(data.ShowElement, questionId);\n            }, error: function (XMLHttpRequest, textStatus, errorThrown) {\n                alert('XMLHttpRequest:' + XMLHttpRequest.responseText);\n                alert('textStatus:' + textStatus);\n                alert('errorThrown:' + errorThrown);\n            }\n        });\n    });\n\n    function SetElementVisibility(visible, questionId) {\n        // I would like each child to then trigger the change event...\n        $(\".childOf\" + questionId)[visible ? 'show' : 'hide']('slow');\n\n        // Suggested code\n        //$(\".childOf\" + questionId + \" select\").trigger(\"change\");\n\n        if (!visible) {\n            $(\".childOf\" + questionId + \" select\").attr('selectedIndex', 0);\n        }\n    }\n}\n</code></pre>\n\n<p>The suggestions so far seem to work, but as the change event triggers an ajax post it now seems to fail here. I'm going to play around with it but that is something for another question i feel.</p>\n",
            "last_activity_date": 1422618649,
            "question_id": 4247264,
            "score": 24,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events"
            ],
            "title": "How to trigger jQuery change event in code"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>requestFullscreen()</code> can not be called automatically is because of security reasons (at least in Chrome). Therefore it can only be called by an user action such as:</p>\n\n<ul>\n<li>click (button, link...)</li>\n<li>key (keydown, keypress...)</li>\n<li><code>allowfullscreen</code> attribute of the HTML <code>&lt;iframe&gt;</code> element*</li>\n</ul>\n\n<blockquote>\n  <p>* W3 Spec:<br>\n  \"...To prevent embedded content from going fullscreen only embedded content specifically allowed via the <code>allowfullscreen</code> attribute of the HTML <code>iframe</code> element will be able to go fullscreen. This prevents untrusted content from going fullscreen...\"</p>\n</blockquote>\n\n<p>Read more: <a href=\"http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html\">W3 Spec on Fullscreen</a></p>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<p>You have nothing wrong with your function. In Firefox, if you call that function directly, it will prevent to for full-screen. As you know, Request for full-screen was denied because docElm.mozRequestFullScreen(); was not called from inside a short running user-generated event handler. So, You have to call the function on event such as onClick in Firefox. </p>\n\n<pre><code>&lt;a href=\"#\" onClick=\"DoFullScreen()\"&gt;Full Screen Mode&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I know this is a quite old question but it is still the top result in Google when searching for FireFox's error message when calling mozRequestFullScreen from code that wasn't trigger by user interaction.</p>\n\n<blockquote>\n  <p>Request for full-screen was denied because\n  Element.mozRequestFullScreen() was not called from inside a short\n  running user-generated event handler.</p>\n</blockquote>\n\n<p>As already discussed this is a security setting and therefore correct behaviour in normal browser environment (end user machine)</p>\n\n<p>But I am writting a HTML5 based digital signage application which runs under a controlled environment without any user interaction intended. It is vital for my apllication to be able to switch to fullscreen automatically.</p>\n\n<p>Luckily FireFox offers a possibilty to remove this restriction on the browser, which is rather hard to find. I will write it here as future reference for everybody finding this page via the Google search as I did</p>\n\n<p>On the <em>about:config</em> page serch for this key and set it to <strong>false</strong></p>\n\n<pre><code>full-screen-api.allow-trusted-requests-only\n</code></pre>\n\n<p>For my digital signage application I also remove the hint the browser shows when entering fullscren</p>\n\n<pre><code>full-screen-api.approval-required\n</code></pre>\n\n<p>Hopefully this might save someone the hours I wasted to find these settings</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm trying to use the JavaScript FullScreen API, using workarounds for current non-standard implementations from here:</p>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/Using_full-screen_mode#AutoCompatibilityTable\">https://developer.mozilla.org/en/DOM/Using_full-screen_mode#AutoCompatibilityTable</a></p>\n\n<p>Sadly, it behaves very erratically. I only care about Chrome (using v17), but since I was having problems I did some tests in Firefox 10 for comparison, results are similar. </p>\n\n<p>The code below attempts to set the browser to fullscreen, sometimes it works, sometimes not.  It ALWAYS calls the alert to indicate it is requesting fullscreen.  Here's what I've found:</p>\n\n<ul>\n<li>It USUALLY sets fullscreen.  It can get to a state where this stops working, but the alert still happens, i.e. it is still requesting FullScreen, but it doesn't work.</li>\n<li>It can work if called from a keypress handler (document.onkeypress), but not when called on page loading (window.onload).</li>\n</ul>\n\n<p>My code is as follows:</p>\n\n<pre><code>function DoFullScreen() {\n\n    var isInFullScreen = (document.fullScreenElement &amp;&amp; document.fullScreenElement !==     null) ||    // alternative standard method  \n            (document.mozFullScreen || document.webkitIsFullScreen);\n\n    var docElm = document.documentElement;\n    if (!isInFullScreen) {\n\n        if (docElm.requestFullscreen) {\n            docElm.requestFullscreen();\n        }\n        else if (docElm.mozRequestFullScreen) {\n            docElm.mozRequestFullScreen();\n            alert(\"Mozilla entering fullscreen!\");\n        }\n        else if (docElm.webkitRequestFullScreen) {\n            docElm.webkitRequestFullScreen();\n            alert(\"Webkit entering fullscreen!\");\n        }\n    }\n}\n</code></pre>\n",
            "last_activity_date": 1416669309,
            "question_id": 9454125,
            "score": 21,
            "tags": [
                "javascript"
            ],
            "title": "Javascript request fullscreen is unreliable"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>var x = \"anything\";\n\nfunction showName(s) {\n    alert(s + \" = \" + eval(s));\n}\n\nshowName(\"x\");\n</code></pre>\n\n<p>Not recommended, but there it is.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The short answer is that you can't.</p>\n\n<p>The longer, evil answer is that you sort of can with some real nastiness. And it only works when called from another function.</p>\n\n<p>there are two interesting attributes available to you that could help</p>\n\n<p>arguments.callee\ncaller</p>\n\n<p>for fn to do something like this:</p>\n\n<pre><code>(function(){\n  var showMe = function(s){\n    alert(arguments.callee.caller.toString().match(/showMe\\((\\S)\\)/)[1] + \n    ' = '+ s)\n  }\n  x = 1\n  showMe(x)\n})()\n</code></pre>\n\n<p>What arguments.callee.caller.toString().match(..)[1] does is look for the showMe being called in the function calling it and prints it and its value.</p>\n\n<p>But this is still pretty limited because it will only hit the first call of showMe(x). So if there is two calls to it, it won't work.</p>\n\n<p>But, it was fun to play with these arcane things.</p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>Not sure you can <em>directly</em> get what you want from JavaScript, since the variable name is not carried around with the value it references (think of variable names as identifiers only the compiler knows about; but which get thrown away at runtime).</p>\n\n<p>You <em>can</em>, however, do something slightly <em>different</em> which allows for passing around named arguments.  Create an anonymous object and pass that to your function:</p>\n\n<pre><code>function showNames(o)\n{\n    for( var ix in o )\n    {\n       alert( ix + \":\" + o[ix] );\n    }\n}\n\nvar z = { x : \"Anything\" }\nshowNames( z );\n// or\nshowNames( { a : \"ay\", b : \"bee\", c: \"see\" } )\n</code></pre>\n\n<p>For iterating object properties, I tend to prefer a functional-style, as in:</p>\n\n<pre><code>Array.iteri = function(o, f)\n{\n    for(var i in o) { f(i, o[i]) }\n}\n\nfunction showNames(o)\n{\n    Array.iteri( o, function(i,v)\n    {\n        alert( i + \": \" + v )\n    });\n}\nshowNames( { a : \"ay\", b : \"bee\", c: \"see\" } )\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could create a hash and pass that in:</p>\n\n<pre><code>var x = {a: 1,b:2}\nfunction showVars(y) {\n    for (var z in y) { alert(z + \" is \" + y[z]); }\n}\nshowVars(x);\n</code></pre>\n\n<p>This doesn't necessarily show the name of the variable, but it does allow for key-value pairs, which may be more to the point of what you need.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I already knew that I could pass in a object:</p>\n\n<pre><code>{a:\"this is a\"}\n</code></pre>\n\n<p>where <strong>a</strong> is name of the variable but I really want to just pass in a variable or the name of a variable (a or \"a\") and let the function somehow find the name of the variable and its value.</p>\n\n<p>The reason I want to do this somewhat weird thing is that I am writing a debug print routine. If I call it like this:</p>\n\n<pre><code>var x = \"some string\";\nsay(x);\n</code></pre>\n\n<p>or</p>\n\n<pre><code>say(\"x\");\n</code></pre>\n\n<p>I want it to print something like:</p>\n\n<pre><code>X (string) = some string\n</code></pre>\n\n<p>I can pretty reliably find the type of a variable passed, and so I know how to print it, but I really want to try to avoid the redunancy of having to call it like this:</p>\n\n<pre><code>say(\"x\", x);\n</code></pre>\n\n<p>which is what I have to do now. </p>\n\n<p>What seems to <em>almost</em> work is OrbMan's answer. Sure, <strong>eval</strong> is <em>evil</em>, but I think it's OK here because it's only for a debug utility and won't be in the published code. I've made a little test routine of my own using that solution:</p>\n\n<pre><code>var x = \"this is x\";\n\nfunction say(a) {\n   alert(a + \" = \" + eval(a));\n\n}\n\nsay(\"x\");\n</code></pre>\n\n<p>and it works but <strong>ONLY IF X IS GLOBAL</strong>. This doesn't work:</p>\n\n<pre><code>function wrapper() {\n\n   var x = \"this is x\";\n   say(\"x\");\n\n}\n</code></pre>\n\n<p>So, this solution is close, but since I use almost no Global variables, this isn't going to work. Darn, it is soooo close. What I think I need is \"call by name\" instead of \"by value\" or \"by reference\". And I need a function that will work whether it is being called from another function or not. </p>\n\n<p>Since I've put in a good many hours on this myself, asking the question here was an act of desperation, I've got to conclude that there really isn't any way to do this. Shucks.</p>\n\n<p>To everyone who responded, thanks for all your help.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The below code is about the best you can do. Unfortunately local variables in a function are properties of the hidden Call Object so they can't be accessed from Javascript like window[a] where a is a property of the window object.</p>\n\n<pre><code>x = \"this is x\";\nvar say = function(a) {\n    document.write(a + \" = \" + window[a]);\n}\nsay(\"x\");\n\nvar wrapper = function () {\n    var x = \"this is x\";\n    document.write(x + \" = \" + eval(\"x\"))\n}\nwrapper()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is what I use for debugging. No global variables, no eval, no arguments.callee or arguments.caller:</p>\n\n<pre><code>var Helpers = (function () {\n    // ECMAScript 5 strict mode\n    'use strict';\n\n    var Module = {};\n\n    Module.debug = function () {\n        var i;\n\n        for (i = 0; i &lt; arguments.length; i++) {\n            console.log(arguments[i] + ':', this[arguments[i]]);\n        }\n    };\n\n    Module.SomeObject = function SomeObject() {\n        this.someMember = 1;\n        this.anotherMember = 'Whatever';\n\n        Module.debug.call(this, 'someMember', 'anotherMember');\n\n        var privateMember = {\n            name: 'Rip Steakface',\n            battleCry: 'Raaaaaaaaahhhhhhhhhrrrrrrrrrg!'\n        };\n\n        Module.debug.call(privateMember, 'name', 'battleCry');\n    };\n\n    return Module;\n}());\n</code></pre>\n\n<p>For those who are wondering why you would want to do this, it's just a way to efficiently log multiple variables along with their names.</p>\n\n<p>If you want to be able to log nested members, as in <code>Module.debug.call(obj, 'hair.fluffiness')</code>, you can modify the function like so:</p>\n\n<pre><code>Module.debug = function () {\n    var i, j, props, tmp;\n\n    for (i = 0; i &lt; arguments.length; i++) {\n        tmp = this;\n        props = arguments[i].split('.');\n\n        for (j = 0; j &lt; props.length; j++) {\n            tmp = tmp[props[j]];\n        }\n\n        console.log(arguments[i] + ':', tmp);\n    }\n};\n</code></pre>\n\n<p>Unfortunately, I can't find any way to efficiently log multiple private variables that aren't members of an object, e.g. <code>var roll = 3, value = 4; Module.debug.call(???);</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>What I want to do is get the NAME of a variable passed to a function <em>and</em> the VALUE of that variable and only have to pass in one variable to the function. So:</p>\n\n<pre><code>var x = \"anything\";\n\nfunction showName() {\n\n}\n\nshowName(x);\n</code></pre>\n\n<p>or</p>\n\n<pre><code>showName(\"x\");\n</code></pre>\n\n<p>Which will return: \"x = anything\".</p>\n\n<p>Right now, I have to do:</p>\n\n<pre><code>showName(\"x\", x);\n</code></pre>\n\n<p>in order to get the name and value of the variable I am passing in. Note that I am not interested in the name of argument in the prototype of showName, but the name of the variable in the calling function. Also, the variable may be local, so I can't use the window object to find the variable.</p>\n",
            "last_activity_date": 1370683825,
            "question_id": 1009911,
            "score": 21,
            "tags": [
                "javascript",
                "arguments"
            ],
            "title": "JavaScript: Get Argument Value and NAME of Passed Variable"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>use <a href=\"http://php.net/manual/en/function.get-browser.php#101125\"><strong><code>get_browser()</code></strong></a> </p>\n\n<p>from manual</p>\n\n<pre><code>echo $_SERVER['HTTP_USER_AGENT'] . \"\\n\\n\";\n\n$browser = get_browser(null, true);\nprint_r($browser);\n</code></pre>\n\n<p>will returns</p>\n\n<pre><code>Array\n(\n    [browser_name_regex] =&gt; ^mozilla/5\\.0 (windows; .; windows nt 5\\.1; .*rv:.*) gecko/.* firefox/0\\.9.*$\n    [browser_name_pattern] =&gt; Mozilla/5.0 (Windows; ?; Windows NT 5.1; *rv:*) Gecko/* Firefox/0.9*/\n    [parent] =&gt; Firefox 0.9\n    [platform] =&gt; WinXP\n    [browser] =&gt; Firefox\n    [version] =&gt; 0.9\n    [majorver] =&gt; 0\n    [minorver] =&gt; 9\n    [cssversion] =&gt; 2\n    [frames] =&gt; 1\n    [iframes] =&gt; 1\n    [tables] =&gt; 1\n    [cookies] =&gt; 1\n    [backgroundsounds] =&gt;\n    [vbscript] =&gt;\n    [javascript] =&gt; 1\n    [javaapplets] =&gt; 1\n    [activexcontrols] =&gt;\n    [cdf] =&gt;\n    [aol] =&gt;\n    [beta] =&gt; 1\n    [win16] =&gt;\n    [crawler] =&gt;\n    [stripper] =&gt;\n    [wap] =&gt;\n    [netclr] =&gt;\n)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Use <code>get_browser()</code> <a href=\"http://php.net/manual/en/function.get-browser.php\">function</a>.</p>\n\n<p>It can give you output like this:</p>\n\n<pre><code>Array\n(\n    [browser_name_regex] =&gt; ^mozilla/5\\.0 (windows; .; windows nt 5\\.1; .*rv:.*) gecko/.* firefox/0\\.9.*$\n    [browser_name_pattern] =&gt; Mozilla/5.0 (Windows; ?; Windows NT 5.1; *rv:*) Gecko/* Firefox/0.9*\n    [parent] =&gt; Firefox 0.9\n    [platform] =&gt; WinXP\n    [browser] =&gt; Firefox\n    [version] =&gt; 0.9\n    [majorver] =&gt; 0\n    [minorver] =&gt; 9\n    .... \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>this JavaScript give you the browser name and the version,</p>\n\n<pre><code>var browser = '';\nvar browserVersion = 0;\n\nif (/Opera[\\/\\s](\\d+\\.\\d+)/.test(navigator.userAgent)) {\n    browser = 'Opera';\n} else if (/MSIE (\\d+\\.\\d+);/.test(navigator.userAgent)) {\n    browser = 'MSIE';\n} else if (/Navigator[\\/\\s](\\d+\\.\\d+)/.test(navigator.userAgent)) {\n    browser = 'Netscape';\n} else if (/Chrome[\\/\\s](\\d+\\.\\d+)/.test(navigator.userAgent)) {\n    browser = 'Chrome';\n} else if (/Safari[\\/\\s](\\d+\\.\\d+)/.test(navigator.userAgent)) {\n    browser = 'Safari';\n    /Version[\\/\\s](\\d+\\.\\d+)/.test(navigator.userAgent);\n    browserVersion = new Number(RegExp.$1);\n} else if (/Firefox[\\/\\s](\\d+\\.\\d+)/.test(navigator.userAgent)) {\n    browser = 'Firefox';\n}\nif(browserVersion === 0){\n    browserVersion = parseFloat(new Number(RegExp.$1));\n}\nalert(browser + \"*\" + browserVersion);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I would like to suggest you this amazing class. This worked very well for me.</p>\n\n<p><a href=\"http://chrisschuld.com/projects/browser-php-detecting-a-users-browser-from-php.html\">http://chrisschuld.com/projects/browser-php-detecting-a-users-browser-from-php.html/</a></p>\n\n<p>I am publishing the code I used with the copyright notice of original author. You can get latest code from the link above.</p>\n\n<pre><code>&lt;?php\n/**\n * File: Browser.php\n * Author: Chris Schuld (http://chrisschuld.com/)\n *\n * Copyright (C) 2008-2010 Chris Schuld  (chris@chrisschuld.com)\n *\n * Typical Usage:\n *\n *   $browser = new Browser();\n *   if( $browser-&gt;getBrowser() == Browser::BROWSER_FIREFOX &amp;&amp; $browser-&gt;getVersion() &gt;= 2 ) {\n *      echo 'You have FireFox version 2 or greater';\n *   }\n *\n*/\n\nclass Browser {\n    private $_agent = '';\n    private $_browser_name = '';\n    private $_version = '';\n    private $_platform = '';\n    private $_os = '';\n    private $_is_aol = false;\n    private $_is_mobile = false;\n    private $_is_robot = false;\n    private $_aol_version = '';\n\n    const BROWSER_UNKNOWN = 'unknown';\n    const VERSION_UNKNOWN = 'unknown';\n\n    const BROWSER_OPERA = 'Opera'; \n    const BROWSER_OPERA_MINI = 'Opera Mini';\n    const BROWSER_WEBTV = 'WebTV';\n    const BROWSER_IE = 'Internet Explorer'; \n    const BROWSER_POCKET_IE = 'Pocket Internet Explorer';\n    const BROWSER_KONQUEROR = 'Konqueror';\n    const BROWSER_ICAB = 'iCab';\n    const BROWSER_OMNIWEB = 'OmniWeb';\n    const BROWSER_FIREBIRD = 'Firebird';\n    const BROWSER_FIREFOX = 'Firefox';\n    const BROWSER_ICEWEASEL = 'Iceweasel';\n    const BROWSER_SHIRETOKO = 'Shiretoko';\n    const BROWSER_MOZILLA = 'Mozilla';\n    const BROWSER_AMAYA = 'Amaya';\n    const BROWSER_LYNX = 'Lynx';\n    const BROWSER_SAFARI = 'Safari';\n    const BROWSER_IPHONE = 'iPhone';\n    const BROWSER_IPOD = 'iPod';\n    const BROWSER_IPAD = 'iPad';\n    const BROWSER_CHROME = 'Chrome';\n    const BROWSER_ANDROID = 'Android';\n    const BROWSER_GOOGLEBOT = 'GoogleBot';\n    const BROWSER_SLURP = 'Yahoo! Slurp';\n    const BROWSER_W3CVALIDATOR = 'W3C Validator';\n    const BROWSER_BLACKBERRY = 'BlackBerry';\n    const BROWSER_ICECAT = 'IceCat';\n    const BROWSER_NOKIA_S60 = 'Nokia S60 OSS Browser';\n    const BROWSER_NOKIA = 'Nokia Browser';\n    const BROWSER_MSN = 'MSN Browser';\n    const BROWSER_MSNBOT = 'MSN Bot';\n\n    const BROWSER_NETSCAPE_NAVIGATOR = 'Netscape Navigator';\n    const BROWSER_GALEON = 'Galeon';\n    const BROWSER_NETPOSITIVE = 'NetPositive';\n    const BROWSER_PHOENIX = 'Phoenix';\n\n    const PLATFORM_UNKNOWN = 'unknown';\n    const PLATFORM_WINDOWS = 'Windows';\n    const PLATFORM_WINDOWS_CE = 'Windows CE';\n    const PLATFORM_APPLE = 'Apple';\n    const PLATFORM_LINUX = 'Linux';\n    const PLATFORM_OS2 = 'OS/2';\n    const PLATFORM_BEOS = 'BeOS';\n    const PLATFORM_IPHONE = 'iPhone';\n    const PLATFORM_IPOD = 'iPod';\n    const PLATFORM_IPAD = 'iPad';\n    const PLATFORM_BLACKBERRY = 'BlackBerry';\n    const PLATFORM_NOKIA = 'Nokia';\n    const PLATFORM_FREEBSD = 'FreeBSD';\n    const PLATFORM_OPENBSD = 'OpenBSD';\n    const PLATFORM_NETBSD = 'NetBSD';\n    const PLATFORM_SUNOS = 'SunOS';\n    const PLATFORM_OPENSOLARIS = 'OpenSolaris';\n    const PLATFORM_ANDROID = 'Android';\n\n    const OPERATING_SYSTEM_UNKNOWN = 'unknown';\n\n    public function Browser($useragent=\"\") {\n        $this-&gt;reset();\n        if( $useragent != \"\" ) {\n            $this-&gt;setUserAgent($useragent);\n        }\n        else {\n            $this-&gt;determine();\n        }\n    }\n\n    /**\n    * Reset all properties\n    */\n    public function reset() {\n        $this-&gt;_agent = isset($_SERVER['HTTP_USER_AGENT']) ? $_SERVER['HTTP_USER_AGENT'] : \"\";\n        $this-&gt;_browser_name = self::BROWSER_UNKNOWN;\n        $this-&gt;_version = self::VERSION_UNKNOWN;\n        $this-&gt;_platform = self::PLATFORM_UNKNOWN;\n        $this-&gt;_os = self::OPERATING_SYSTEM_UNKNOWN;\n        $this-&gt;_is_aol = false;\n        $this-&gt;_is_mobile = false;\n        $this-&gt;_is_robot = false;\n        $this-&gt;_aol_version = self::VERSION_UNKNOWN;\n    }\n\n    /**\n    * Check to see if the specific browser is valid\n    * @param string $browserName\n    * @return boolean\n    */\n    function isBrowser($browserName) { return( 0 == strcasecmp($this-&gt;_browser_name, trim($browserName))); }\n\n    /**\n    * The name of the browser.  All return types are from the class contants\n    * @return string Name of the browser\n    */\n    public function getBrowser() { return $this-&gt;_browser_name; }\n    /**\n    * Set the name of the browser\n    * @param $browser The name of the Browser\n    */\n    public function setBrowser($browser) { return $this-&gt;_browser_name = $browser; }\n    /**\n    * The name of the platform.  All return types are from the class contants\n    * @return string Name of the browser\n    */\n    public function getPlatform() { return $this-&gt;_platform; }\n    /**\n    * Set the name of the platform\n    * @param $platform The name of the Platform\n    */\n    public function setPlatform($platform) { return $this-&gt;_platform = $platform; }\n    /**\n    * The version of the browser.\n    * @return string Version of the browser (will only contain alpha-numeric characters and a period)\n    */\n    public function getVersion() { return $this-&gt;_version; }\n    /**\n    * Set the version of the browser\n    * @param $version The version of the Browser\n    */\n    public function setVersion($version) { $this-&gt;_version = preg_replace('/[^0-9,.,a-z,A-Z-]/','',$version); }\n    /**\n    * The version of AOL.\n    * @return string Version of AOL (will only contain alpha-numeric characters and a period)\n    */\n    public function getAolVersion() { return $this-&gt;_aol_version; }\n    /**\n    * Set the version of AOL\n    * @param $version The version of AOL\n    */\n    public function setAolVersion($version) { $this-&gt;_aol_version = preg_replace('/[^0-9,.,a-z,A-Z]/','',$version); }\n    /**\n    * Is the browser from AOL?\n    * @return boolean\n    */\n    public function isAol() { return $this-&gt;_is_aol; }\n    /**\n    * Is the browser from a mobile device?\n    * @return boolean\n    */\n    public function isMobile() { return $this-&gt;_is_mobile; }\n    /**\n    * Is the browser from a robot (ex Slurp,GoogleBot)?\n    * @return boolean\n    */\n    public function isRobot() { return $this-&gt;_is_robot; }\n    /**\n    * Set the browser to be from AOL\n    * @param $isAol\n    */\n    public function setAol($isAol) { $this-&gt;_is_aol = $isAol; }\n    /**\n     * Set the Browser to be mobile\n     * @param boolean\n     */\n    protected function setMobile($value=true) { $this-&gt;_is_mobile = $value; }\n    /**\n     * Set the Browser to be a robot\n     * @param boolean\n     */\n    protected function setRobot($value=true) { $this-&gt;_is_robot = $value; }\n    /**\n    * Get the user agent value in use to determine the browser\n    * @return string The user agent from the HTTP header\n    */\n    public function getUserAgent() { return $this-&gt;_agent; }\n    /**\n    * Set the user agent value (the construction will use the HTTP header value - this will overwrite it)\n    * @param $agent_string The value for the User Agent\n    */\n    public function setUserAgent($agent_string) {\n        $this-&gt;reset();\n        $this-&gt;_agent = $agent_string;\n        $this-&gt;determine();\n    }\n    /**\n     * Used to determine if the browser is actually \"chromeframe\"\n     * @return boolean\n     */\n    public function isChromeFrame() {\n        return( strpos($this-&gt;_agent,\"chromeframe\") !== false );\n    }\n    /**\n    * Returns a formatted string with a summary of the details of the browser.\n    * @return string formatted string with a summary of the browser\n    */\n    public function __toString() {\n        return \"&lt;strong&gt;Browser Name:&lt;/strong&gt;{$this-&gt;getBrowser()}&lt;br/&gt;\\n\" .\n               \"&lt;strong&gt;Browser Version:&lt;/strong&gt;{$this-&gt;getVersion()}&lt;br/&gt;\\n\" .\n               \"&lt;strong&gt;Browser User Agent String:&lt;/strong&gt;{$this-&gt;getUserAgent()}&lt;br/&gt;\\n\" .\n               \"&lt;strong&gt;Platform:&lt;/strong&gt;{$this-&gt;getPlatform()}&lt;br/&gt;\";\n    }\n    /**\n     * Protected routine to calculate and determine what the browser is in use (including platform)\n     */\n    protected function determine() {\n        $this-&gt;checkPlatform();\n        $this-&gt;checkBrowsers();\n        $this-&gt;checkForAol();\n    }\n    /**\n     * Protected routine to determine the browser type\n     * @return boolean\n     */\n     protected function checkBrowsers() {\n        return (\n            $this-&gt;checkBrowserWebTv() ||\n            $this-&gt;checkBrowserInternetExplorer() ||\n            $this-&gt;checkBrowserOpera() ||\n            $this-&gt;checkBrowserGaleon() ||\n            $this-&gt;checkBrowserNetscapeNavigator9Plus() ||\n            $this-&gt;checkBrowserFirefox() ||\n            $this-&gt;checkBrowserChrome() ||\n            $this-&gt;checkBrowserOmniWeb() ||\n\n            // common mobile\n            $this-&gt;checkBrowserAndroid() ||\n            $this-&gt;checkBrowseriPad() ||\n            $this-&gt;checkBrowseriPod() ||\n            $this-&gt;checkBrowseriPhone() ||\n            $this-&gt;checkBrowserBlackBerry() ||\n            $this-&gt;checkBrowserNokia() ||\n\n            // common bots\n            $this-&gt;checkBrowserGoogleBot() ||\n            $this-&gt;checkBrowserMSNBot() ||\n            $this-&gt;checkBrowserSlurp() ||\n\n            // WebKit base check (post mobile and others)\n            $this-&gt;checkBrowserSafari() ||\n\n            // everyone else\n            $this-&gt;checkBrowserNetPositive() ||\n            $this-&gt;checkBrowserFirebird() ||\n            $this-&gt;checkBrowserKonqueror() ||\n            $this-&gt;checkBrowserIcab() ||\n            $this-&gt;checkBrowserPhoenix() ||\n            $this-&gt;checkBrowserAmaya() ||\n            $this-&gt;checkBrowserLynx() ||\n            $this-&gt;checkBrowserShiretoko() ||\n            $this-&gt;checkBrowserIceCat() ||\n            $this-&gt;checkBrowserW3CValidator() ||\n            $this-&gt;checkBrowserMozilla() /* Mozilla is such an open standard that you must check it last */\n        );\n    }\n\n    protected function checkBrowserBlackBerry() {\n        if( stripos($this-&gt;_agent,'blackberry') !== false ) {\n            $aresult = explode(\"/\",stristr($this-&gt;_agent,\"BlackBerry\"));\n            $aversion = explode(' ',$aresult[1]);\n            $this-&gt;setVersion($aversion[0]);\n            $this-&gt;_browser_name = self::BROWSER_BLACKBERRY;\n            $this-&gt;setMobile(true);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkForAol() {\n        $this-&gt;setAol(false);\n        $this-&gt;setAolVersion(self::VERSION_UNKNOWN);\n\n        if( stripos($this-&gt;_agent,'aol') !== false ) {\n            $aversion = explode(' ',stristr($this-&gt;_agent, 'AOL'));\n            $this-&gt;setAol(true);\n            $this-&gt;setAolVersion(preg_replace('/[^0-9\\.a-z]/i', '', $aversion[1]));\n            return true;\n        }\n        return false;\n    }\n\n\n    protected function checkBrowserGoogleBot() {\n        if( stripos($this-&gt;_agent,'googlebot') !== false ) {\n            $aresult = explode('/',stristr($this-&gt;_agent,'googlebot'));\n            $aversion = explode(' ',$aresult[1]);\n            $this-&gt;setVersion(str_replace(';','',$aversion[0]));\n            $this-&gt;_browser_name = self::BROWSER_GOOGLEBOT;\n            $this-&gt;setRobot(true);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserMSNBot() {\n        if( stripos($this-&gt;_agent,\"msnbot\") !== false ) {\n            $aresult = explode(\"/\",stristr($this-&gt;_agent,\"msnbot\"));\n            $aversion = explode(\" \",$aresult[1]);\n            $this-&gt;setVersion(str_replace(\";\",\"\",$aversion[0]));\n            $this-&gt;_browser_name = self::BROWSER_MSNBOT;\n            $this-&gt;setRobot(true);\n            return true;\n        }\n        return false;\n    }       \n\n    protected function checkBrowserW3CValidator() {\n        if( stripos($this-&gt;_agent,'W3C-checklink') !== false ) {\n            $aresult = explode('/',stristr($this-&gt;_agent,'W3C-checklink'));\n            $aversion = explode(' ',$aresult[1]);\n            $this-&gt;setVersion($aversion[0]);\n            $this-&gt;_browser_name = self::BROWSER_W3CVALIDATOR;\n            return true;\n        }\n        else if( stripos($this-&gt;_agent,'W3C_Validator') !== false ) {\n            // Some of the Validator versions do not delineate w/ a slash - add it back in\n            $ua = str_replace(\"W3C_Validator \", \"W3C_Validator/\", $this-&gt;_agent);\n            $aresult = explode('/',stristr($ua,'W3C_Validator'));\n            $aversion = explode(' ',$aresult[1]);\n            $this-&gt;setVersion($aversion[0]);\n            $this-&gt;_browser_name = self::BROWSER_W3CVALIDATOR;\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserSlurp() {\n        if( stripos($this-&gt;_agent,'slurp') !== false ) {\n            $aresult = explode('/',stristr($this-&gt;_agent,'Slurp'));\n            $aversion = explode(' ',$aresult[1]);\n            $this-&gt;setVersion($aversion[0]);\n            $this-&gt;_browser_name = self::BROWSER_SLURP;\n            $this-&gt;setRobot(true);\n            $this-&gt;setMobile(false);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserInternetExplorer() {\n\n        // Test for v1 - v1.5 IE\n        if( stripos($this-&gt;_agent,'microsoft internet explorer') !== false ) {\n            $this-&gt;setBrowser(self::BROWSER_IE);\n            $this-&gt;setVersion('1.0');\n            $aresult = stristr($this-&gt;_agent, '/');\n            if( preg_match('/308|425|426|474|0b1/i', $aresult) ) {\n                $this-&gt;setVersion('1.5');\n            }\n            return true;\n        }\n        // Test for versions &gt; 1.5\n        else if( stripos($this-&gt;_agent,'msie') !== false &amp;&amp; stripos($this-&gt;_agent,'opera') === false ) {\n            // See if the browser is the odd MSN Explorer\n            if( stripos($this-&gt;_agent,'msnb') !== false ) {\n                $aresult = explode(' ',stristr(str_replace(';','; ',$this-&gt;_agent),'MSN'));\n                $this-&gt;setBrowser( self::BROWSER_MSN );\n                $this-&gt;setVersion(str_replace(array('(',')',';'),'',$aresult[1]));\n                return true;\n            }\n            $aresult = explode(' ',stristr(str_replace(';','; ',$this-&gt;_agent),'msie'));\n            $this-&gt;setBrowser( self::BROWSER_IE );\n            $this-&gt;setVersion(str_replace(array('(',')',';'),'',$aresult[1]));\n            return true;\n        }\n        // Test for Pocket IE\n        else if( stripos($this-&gt;_agent,'mspie') !== false || stripos($this-&gt;_agent,'pocket') !== false ) {\n            $aresult = explode(' ',stristr($this-&gt;_agent,'mspie'));\n            $this-&gt;setPlatform( self::PLATFORM_WINDOWS_CE );\n            $this-&gt;setBrowser( self::BROWSER_POCKET_IE );\n            $this-&gt;setMobile(true);\n\n            if( stripos($this-&gt;_agent,'mspie') !== false ) {\n                $this-&gt;setVersion($aresult[1]);\n            }\n            else {\n                $aversion = explode('/',$this-&gt;_agent);\n                $this-&gt;setVersion($aversion[1]);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserOpera() {\n        if( stripos($this-&gt;_agent,'opera mini') !== false ) {\n            $resultant = stristr($this-&gt;_agent, 'opera mini');\n            if( preg_match('/\\//',$resultant) ) {\n                $aresult = explode('/',$resultant);\n                $aversion = explode(' ',$aresult[1]);\n                $this-&gt;setVersion($aversion[0]);\n            }\n            else {\n                $aversion = explode(' ',stristr($resultant,'opera mini'));\n                $this-&gt;setVersion($aversion[1]);\n            }\n            $this-&gt;_browser_name = self::BROWSER_OPERA_MINI;\n            $this-&gt;setMobile(true);\n            return true;\n        }\n        else if( stripos($this-&gt;_agent,'opera') !== false ) {\n            $resultant = stristr($this-&gt;_agent, 'opera');\n            if( preg_match('/Version\\/(10.*)$/',$resultant,$matches) ) {\n                $this-&gt;setVersion($matches[1]);\n            }\n            else if( preg_match('/\\//',$resultant) ) {\n                $aresult = explode('/',str_replace(\"(\",\" \",$resultant));\n                $aversion = explode(' ',$aresult[1]);\n                $this-&gt;setVersion($aversion[0]);\n            }\n            else {\n                $aversion = explode(' ',stristr($resultant,'opera'));\n                $this-&gt;setVersion(isset($aversion[1])?$aversion[1]:\"\");\n            }\n            $this-&gt;_browser_name = self::BROWSER_OPERA;\n            return true;\n        }\n        return false;\n    }\n\n\n    protected function checkBrowserChrome() {\n        if( stripos($this-&gt;_agent,'Chrome') !== false ) {\n            $aresult = explode('/',stristr($this-&gt;_agent,'Chrome'));\n            $aversion = explode(' ',$aresult[1]);\n            $this-&gt;setVersion($aversion[0]);\n            $this-&gt;setBrowser(self::BROWSER_CHROME);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserWebTv() {\n        if( stripos($this-&gt;_agent,'webtv') !== false ) {\n            $aresult = explode('/',stristr($this-&gt;_agent,'webtv'));\n            $aversion = explode(' ',$aresult[1]);\n            $this-&gt;setVersion($aversion[0]);\n            $this-&gt;setBrowser(self::BROWSER_WEBTV);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserNetPositive() {\n        if( stripos($this-&gt;_agent,'NetPositive') !== false ) {\n            $aresult = explode('/',stristr($this-&gt;_agent,'NetPositive'));\n            $aversion = explode(' ',$aresult[1]);\n            $this-&gt;setVersion(str_replace(array('(',')',';'),'',$aversion[0]));\n            $this-&gt;setBrowser(self::BROWSER_NETPOSITIVE);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserGaleon() {\n        if( stripos($this-&gt;_agent,'galeon') !== false ) {\n            $aresult = explode(' ',stristr($this-&gt;_agent,'galeon'));\n            $aversion = explode('/',$aresult[0]);\n            $this-&gt;setVersion($aversion[1]);\n            $this-&gt;setBrowser(self::BROWSER_GALEON);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserKonqueror() {\n        if( stripos($this-&gt;_agent,'Konqueror') !== false ) {\n            $aresult = explode(' ',stristr($this-&gt;_agent,'Konqueror'));\n            $aversion = explode('/',$aresult[0]);\n            $this-&gt;setVersion($aversion[1]);\n            $this-&gt;setBrowser(self::BROWSER_KONQUEROR);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserIcab() {\n        if( stripos($this-&gt;_agent,'icab') !== false ) {\n            $aversion = explode(' ',stristr(str_replace('/',' ',$this-&gt;_agent),'icab'));\n            $this-&gt;setVersion($aversion[1]);\n            $this-&gt;setBrowser(self::BROWSER_ICAB);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserOmniWeb() {\n        if( stripos($this-&gt;_agent,'omniweb') !== false ) {\n            $aresult = explode('/',stristr($this-&gt;_agent,'omniweb'));\n            $aversion = explode(' ',isset($aresult[1])?$aresult[1]:\"\");\n            $this-&gt;setVersion($aversion[0]);\n            $this-&gt;setBrowser(self::BROWSER_OMNIWEB);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserPhoenix() {\n        if( stripos($this-&gt;_agent,'Phoenix') !== false ) {\n            $aversion = explode('/',stristr($this-&gt;_agent,'Phoenix'));\n            $this-&gt;setVersion($aversion[1]);\n            $this-&gt;setBrowser(self::BROWSER_PHOENIX);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserFirebird() {\n        if( stripos($this-&gt;_agent,'Firebird') !== false ) {\n            $aversion = explode('/',stristr($this-&gt;_agent,'Firebird'));\n            $this-&gt;setVersion($aversion[1]);\n            $this-&gt;setBrowser(self::BROWSER_FIREBIRD);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserNetscapeNavigator9Plus() {\n        if( stripos($this-&gt;_agent,'Firefox') !== false &amp;&amp; preg_match('/Navigator\\/([^ ]*)/i',$this-&gt;_agent,$matches) ) {\n            $this-&gt;setVersion($matches[1]);\n            $this-&gt;setBrowser(self::BROWSER_NETSCAPE_NAVIGATOR);\n            return true;\n        }\n        else if( stripos($this-&gt;_agent,'Firefox') === false &amp;&amp; preg_match('/Netscape6?\\/([^ ]*)/i',$this-&gt;_agent,$matches) ) {\n            $this-&gt;setVersion($matches[1]);\n            $this-&gt;setBrowser(self::BROWSER_NETSCAPE_NAVIGATOR);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserShiretoko() {\n        if( stripos($this-&gt;_agent,'Mozilla') !== false &amp;&amp; preg_match('/Shiretoko\\/([^ ]*)/i',$this-&gt;_agent,$matches) ) {\n            $this-&gt;setVersion($matches[1]);\n            $this-&gt;setBrowser(self::BROWSER_SHIRETOKO);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserIceCat() {\n        if( stripos($this-&gt;_agent,'Mozilla') !== false &amp;&amp; preg_match('/IceCat\\/([^ ]*)/i',$this-&gt;_agent,$matches) ) {\n            $this-&gt;setVersion($matches[1]);\n            $this-&gt;setBrowser(self::BROWSER_ICECAT);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserNokia() {\n        if( preg_match(\"/Nokia([^\\/]+)\\/([^ SP]+)/i\",$this-&gt;_agent,$matches) ) {\n            $this-&gt;setVersion($matches[2]);\n            if( stripos($this-&gt;_agent,'Series60') !== false || strpos($this-&gt;_agent,'S60') !== false ) {\n                $this-&gt;setBrowser(self::BROWSER_NOKIA_S60);\n            }\n            else {\n                $this-&gt;setBrowser( self::BROWSER_NOKIA );\n            }\n            $this-&gt;setMobile(true);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserFirefox() {\n        if( stripos($this-&gt;_agent,'safari') === false ) {\n            if( preg_match(\"/Firefox[\\/ \\(]([^ ;\\)]+)/i\",$this-&gt;_agent,$matches) ) {\n                $this-&gt;setVersion($matches[1]);\n                $this-&gt;setBrowser(self::BROWSER_FIREFOX);\n                return true;\n            }\n            else if( preg_match(\"/Firefox$/i\",$this-&gt;_agent,$matches) ) {\n                $this-&gt;setVersion(\"\");\n                $this-&gt;setBrowser(self::BROWSER_FIREFOX);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected function checkBrowserIceweasel() {\n        if( stripos($this-&gt;_agent,'Iceweasel') !== false ) {\n            $aresult = explode('/',stristr($this-&gt;_agent,'Iceweasel'));\n            $aversion = explode(' ',$aresult[1]);\n            $this-&gt;setVersion($aversion[0]);\n            $this-&gt;setBrowser(self::BROWSER_ICEWEASEL);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserMozilla() {\n        if( stripos($this-&gt;_agent,'mozilla') !== false  &amp;&amp; preg_match('/rv:[0-9].[0-9][a-b]?/i',$this-&gt;_agent) &amp;&amp; stripos($this-&gt;_agent,'netscape') === false) {\n            $aversion = explode(' ',stristr($this-&gt;_agent,'rv:'));\n            preg_match('/rv:[0-9].[0-9][a-b]?/i',$this-&gt;_agent,$aversion);\n            $this-&gt;setVersion(str_replace('rv:','',$aversion[0]));\n            $this-&gt;setBrowser(self::BROWSER_MOZILLA);\n            return true;\n        }\n        else if( stripos($this-&gt;_agent,'mozilla') !== false &amp;&amp; preg_match('/rv:[0-9]\\.[0-9]/i',$this-&gt;_agent) &amp;&amp; stripos($this-&gt;_agent,'netscape') === false ) {\n            $aversion = explode('',stristr($this-&gt;_agent,'rv:'));\n            $this-&gt;setVersion(str_replace('rv:','',$aversion[0]));\n            $this-&gt;setBrowser(self::BROWSER_MOZILLA);\n            return true;\n        }\n        else if( stripos($this-&gt;_agent,'mozilla') !== false  &amp;&amp; preg_match('/mozilla\\/([^ ]*)/i',$this-&gt;_agent,$matches) &amp;&amp; stripos($this-&gt;_agent,'netscape') === false ) {\n            $this-&gt;setVersion($matches[1]);\n            $this-&gt;setBrowser(self::BROWSER_MOZILLA);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserLynx() {\n        if( stripos($this-&gt;_agent,'lynx') !== false ) {\n            $aresult = explode('/',stristr($this-&gt;_agent,'Lynx'));\n            $aversion = explode(' ',(isset($aresult[1])?$aresult[1]:\"\"));\n            $this-&gt;setVersion($aversion[0]);\n            $this-&gt;setBrowser(self::BROWSER_LYNX);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserAmaya() {\n        if( stripos($this-&gt;_agent,'amaya') !== false ) {\n            $aresult = explode('/',stristr($this-&gt;_agent,'Amaya'));\n            $aversion = explode(' ',$aresult[1]);\n            $this-&gt;setVersion($aversion[0]);\n            $this-&gt;setBrowser(self::BROWSER_AMAYA);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserSafari() {\n        if( stripos($this-&gt;_agent,'Safari') !== false &amp;&amp; stripos($this-&gt;_agent,'iPhone') === false &amp;&amp; stripos($this-&gt;_agent,'iPod') === false ) {\n            $aresult = explode('/',stristr($this-&gt;_agent,'Version'));\n            if( isset($aresult[1]) ) {\n                $aversion = explode(' ',$aresult[1]);\n                $this-&gt;setVersion($aversion[0]);\n            }\n            else {\n                $this-&gt;setVersion(self::VERSION_UNKNOWN);\n            }\n            $this-&gt;setBrowser(self::BROWSER_SAFARI);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowseriPhone() {\n        if( stripos($this-&gt;_agent,'iPhone') !== false ) {\n            $aresult = explode('/',stristr($this-&gt;_agent,'Version'));\n            if( isset($aresult[1]) ) {\n                $aversion = explode(' ',$aresult[1]);\n                $this-&gt;setVersion($aversion[0]);\n            }\n            else {\n                $this-&gt;setVersion(self::VERSION_UNKNOWN);\n            }\n            $this-&gt;setMobile(true);\n            $this-&gt;setBrowser(self::BROWSER_IPHONE);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowseriPad() {\n        if( stripos($this-&gt;_agent,'iPad') !== false ) {\n            $aresult = explode('/',stristr($this-&gt;_agent,'Version'));\n            if( isset($aresult[1]) ) {\n                $aversion = explode(' ',$aresult[1]);\n                $this-&gt;setVersion($aversion[0]);\n            }\n            else {\n                $this-&gt;setVersion(self::VERSION_UNKNOWN);\n            }\n            $this-&gt;setMobile(true);\n            $this-&gt;setBrowser(self::BROWSER_IPAD);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowseriPod() {\n        if( stripos($this-&gt;_agent,'iPod') !== false ) {\n            $aresult = explode('/',stristr($this-&gt;_agent,'Version'));\n            if( isset($aresult[1]) ) {\n                $aversion = explode(' ',$aresult[1]);\n                $this-&gt;setVersion($aversion[0]);\n            }\n            else {\n                $this-&gt;setVersion(self::VERSION_UNKNOWN);\n            }\n            $this-&gt;setMobile(true);\n            $this-&gt;setBrowser(self::BROWSER_IPOD);\n            return true;\n        }\n        return false;\n    }\n\n    protected function checkBrowserAndroid() {\n        if( stripos($this-&gt;_agent,'Android') !== false ) {\n            $aresult = explode(' ',stristr($this-&gt;_agent,'Android'));\n            if( isset($aresult[1]) ) {\n                $aversion = explode(' ',$aresult[1]);\n                $this-&gt;setVersion($aversion[0]);\n            }\n            else {\n                $this-&gt;setVersion(self::VERSION_UNKNOWN);\n            }\n            $this-&gt;setMobile(true);\n            $this-&gt;setBrowser(self::BROWSER_ANDROID);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Determine the user's platform\n     */\n    protected function checkPlatform() {\n        if( stripos($this-&gt;_agent, 'windows') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_WINDOWS;\n        }\n        else if( stripos($this-&gt;_agent, 'iPad') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_IPAD;\n        }\n        else if( stripos($this-&gt;_agent, 'iPod') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_IPOD;\n        }\n        else if( stripos($this-&gt;_agent, 'iPhone') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_IPHONE;\n        }\n        elseif( stripos($this-&gt;_agent, 'mac') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_APPLE;\n        }\n        elseif( stripos($this-&gt;_agent, 'android') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_ANDROID;\n        }\n        elseif( stripos($this-&gt;_agent, 'linux') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_LINUX;\n        }\n        else if( stripos($this-&gt;_agent, 'Nokia') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_NOKIA;\n        }\n        else if( stripos($this-&gt;_agent, 'BlackBerry') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_BLACKBERRY;\n        }\n        elseif( stripos($this-&gt;_agent,'FreeBSD') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_FREEBSD;\n        }\n        elseif( stripos($this-&gt;_agent,'OpenBSD') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_OPENBSD;\n        }\n        elseif( stripos($this-&gt;_agent,'NetBSD') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_NETBSD;\n        }\n        elseif( stripos($this-&gt;_agent, 'OpenSolaris') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_OPENSOLARIS;\n        }\n        elseif( stripos($this-&gt;_agent, 'SunOS') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_SUNOS;\n        }\n        elseif( stripos($this-&gt;_agent, 'OS\\/2') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_OS2;\n        }\n        elseif( stripos($this-&gt;_agent, 'BeOS') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_BEOS;\n        }\n        elseif( stripos($this-&gt;_agent, 'win') !== false ) {\n            $this-&gt;_platform = self::PLATFORM_WINDOWS;\n        }\n\n    }\n}\n</code></pre>\n\n<p>?></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<ul>\n<li><p>There is a conflict between (Safari) and (Opera) and (Chrome) !!!</p></li>\n<li><p>The above codes couldn't work properly</p></li>\n</ul>\n\n<p>This is my code, and it works very well without any conflict:</p>\n\n<pre><code>function ExactBrowserName()\n{\n\n// Copyright 2013.1.5 Mehdi Jazini mr.jazini@gmail.com\n\n$ExactBrowserNameUA=$_SERVER['HTTP_USER_AGENT'];\n\nIf (strpos(strtolower($ExactBrowserNameUA), \"safari/\") and strpos(strtolower($ExactBrowserNameUA), \"opr/\")) {\n    // OPERA\n    $ExactBrowserNameBR=\"Opera\";\n} ElseIf (strpos(strtolower($ExactBrowserNameUA), \"safari/\") and strpos(strtolower($ExactBrowserNameUA), \"chrome/\")) {\n    // CHROME\n    $ExactBrowserNameBR=\"Chrome\";\n} ElseIf (strpos(strtolower($ExactBrowserNameUA), \"msie\")) {\n    // INTERNET EXPLORER\n    $ExactBrowserNameBR=\"Internet Explorer\";\n} ElseIf (strpos(strtolower($ExactBrowserNameUA), \"firefox/\")) {\n    // FIREFOX\n    $ExactBrowserNameBR=\"Firefox\";\n} ElseIf (strpos(strtolower($ExactBrowserNameUA), \"safari/\") and strpos(strtolower($ExactBrowserNameUA), \"opr/\")==false and strpos(strtolower($ExactBrowserNameUA), \"chrome/\")==false) {\n    // SAFARI\n    $ExactBrowserNameBR=\"Safari\";\n} Else {\n    // OUT OF DATA\n    $ExactBrowserNameBR=\"OUT OF DATA\";\n};\n\nreturn $ExactBrowserNameBR;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use 51Degrees.com device detection solution to detect browser name, vendor and version.</p>\n\n<p>First, follow the <a href=\"http://51degrees.com/Support/Documentation/PHP/Getting-Started\" rel=\"nofollow\">4-step guide</a> to incorporate device detector in to your project. When I say incorporate I mean download archive with PHP code and database file, extract them and include 2 files. That's all there is to do to incorporate.</p>\n\n<p>Once that's done you can use the following properties to get browser information:\n<br><a href=\"https://51degrees.com/Resources/Property-Dictionary#BrowserName\" rel=\"nofollow\">$_51d['BrowserName']</a> - Gives you the name of the browser (Safari, Molto, Motorola, MStarBrowser etc).\n<br><a href=\"https://51degrees.com/Resources/Property-Dictionary#BrowserVendor\" rel=\"nofollow\">$_51d['BrowserVendor']</a> - Gives you the company who created browser.\n<br><a href=\"https://51degrees.com/Resources/Property-Dictionary#BrowserVersion\" rel=\"nofollow\">$_51d['BrowserVersion']</a> - Version number of the browser</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Got an <strong>awesome</strong> function <a href=\"http://php.net/manual/en/function.get-browser.php#101125\" rel=\"nofollow\">here</a>.</p>\n\n<pre><code>&lt;?php\nfunction getBrowser() \n{ \n    $u_agent = $_SERVER['HTTP_USER_AGENT']; \n    $bname = 'Unknown';\n    $platform = 'Unknown';\n    $version= \"\";\n\n    //First get the platform?\n    if (preg_match('/linux/i', $u_agent)) {\n        $platform = 'linux';\n    }\n    elseif (preg_match('/macintosh|mac os x/i', $u_agent)) {\n        $platform = 'mac';\n    }\n    elseif (preg_match('/windows|win32/i', $u_agent)) {\n        $platform = 'windows';\n    }\n\n    // Next get the name of the useragent yes seperately and for good reason\n    if(preg_match('/MSIE/i',$u_agent) &amp;&amp; !preg_match('/Opera/i',$u_agent)) \n    { \n        $bname = 'Internet Explorer'; \n        $ub = \"MSIE\"; \n    } \n    elseif(preg_match('/Firefox/i',$u_agent)) \n    { \n        $bname = 'Mozilla Firefox'; \n        $ub = \"Firefox\"; \n    } \n    elseif(preg_match('/Chrome/i',$u_agent)) \n    { \n        $bname = 'Google Chrome'; \n        $ub = \"Chrome\"; \n    } \n    elseif(preg_match('/Safari/i',$u_agent)) \n    { \n        $bname = 'Apple Safari'; \n        $ub = \"Safari\"; \n    } \n    elseif(preg_match('/Opera/i',$u_agent)) \n    { \n        $bname = 'Opera'; \n        $ub = \"Opera\"; \n    } \n    elseif(preg_match('/Netscape/i',$u_agent)) \n    { \n        $bname = 'Netscape'; \n        $ub = \"Netscape\"; \n    } \n\n    // finally get the correct version number\n    $known = array('Version', $ub, 'other');\n    $pattern = '#(?&lt;browser&gt;' . join('|', $known) .\n    ')[/ ]+(?&lt;version&gt;[0-9.|a-zA-Z.]*)#';\n    if (!preg_match_all($pattern, $u_agent, $matches)) {\n        // we have no matching number just continue\n    }\n\n    // see how many we have\n    $i = count($matches['browser']);\n    if ($i != 1) {\n        //we will have two since we are not using 'other' argument yet\n        //see if version is before or after the name\n        if (strripos($u_agent,\"Version\") &lt; strripos($u_agent,$ub)){\n            $version= $matches['version'][0];\n        }\n        else {\n            $version= $matches['version'][1];\n        }\n    }\n    else {\n        $version= $matches['version'][0];\n    }\n\n    // check if we have a number\n    if ($version==null || $version==\"\") {$version=\"?\";}\n\n    return array(\n        'userAgent' =&gt; $u_agent,\n        'name'      =&gt; $bname,\n        'version'   =&gt; $version,\n        'platform'  =&gt; $platform,\n        'pattern'    =&gt; $pattern\n    );\n} \n\n// now try it\n$ua=getBrowser();\n$yourbrowser= \"Your browser: \" . $ua['name'] . \" \" . $ua['version'] . \" on \" .$ua['platform'] . \" reports: &lt;br &gt;\" . $ua['userAgent'];\nprint_r($yourbrowser);\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have tried some solutions but I am unable to get exact name and version:</p>\n\n<p><strong>I am trying following code:</strong></p>\n\n<pre><code>$browserAgent = $_SERVER['HTTP_USER_AGENT'];\necho $browserAgent;\n</code></pre>\n\n<p><strong>Output of above code:</strong></p>\n\n<pre><code>Mozilla/5.0 (X11; Linux i686) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.68 Safari/534.24\n</code></pre>\n\n<p><strong>But I am using:</strong></p>\n\n<pre><code>Google Chrome 11.0.696.68\non   \nUbuntu 10.04\n</code></pre>\n\n<p>So I can find in <code>Chrome/11.0.696.68</code> in output string but it is also showing some other browsers names that is confusing to extract exact browser <strong>name/version</strong> from string.</p>\n",
            "last_activity_date": 1422007587,
            "question_id": 8754080,
            "score": 19,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "browser"
            ],
            "title": "How to get exact browser name and version?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>There's no way for your web page to know, absolutely for sure, that the user is in private browsing mode.</p>\n\n<p>If the company is that paranoid about security, I'd suggest rolling your own local Firefox distribution with locked down privacy settings, and only allowing that client to connect to the extranet.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Well, you wouldn't really distinguish private mode from \"block all cookies\" in that way, but apart from that rare situation I guess it should work.</p>\n\n<hr>\n\n<p>The big problem IMO, is that this is a very very bad site design, not better than the good ol' \"you need browser xxx to see this website\" that was common in the '90s. Not all browser have a Private Browsing mode (as much as I despise IE, your cutting out IE7 users for instance) and those users won't be able to access your site at all.</p>\n\n<p>Also, when I'm on the Internet I often have several tabs open with multiple website. It would be really annoying for me to have to switch to private mode just to see that website and not being able to access the other sites at the same time.</p>\n\n<p>One thing you could do would be designing the site using sessions instead of cookies, so they won't be stored (as you don't use them...). And as for the history... really, what's the problem with that?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Web browsers <a href=\"https://wiki.mozilla.org/PrivateBrowsing\" rel=\"nofollow\">behave differently</a> when privacy mode is activated.  </p>\n\n<p>On many browsers the caching of resources is limited.   It is possible to detect <a href=\"http://ha.ckers.org/weird/CSS-history-hack.html\" rel=\"nofollow\">where a browser has been</a> based on their CSS cache.   Its possible to conduct this this attack <a href=\"http://ha.ckers.org/weird/CSS-history.cgi\" rel=\"nofollow\">without JavaScript</a>. </p>\n\n<p>The EFF is working on a project to <a href=\"https://www.eff.org/deeplinks/2010/01/primer-information-theory-and-privacy\" rel=\"nofollow\">fingerprint browsers</a>.   Parts of the browsers fingerprint will be different when privacy mode is activated.  Go ahead,  <a href=\"http://panopticlick.eff.org/index.php?action=log&amp;js=yes\" rel=\"nofollow\">try it</a>. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>You're not going to block them if they don't have private browsing enabled.</strong> </p>\n\n<p>Why have a smart message box at all?</p>\n\n<blockquote>\n  <p>Would attempting to set a unique cookie work for all browsers and platforms?  Anyone done this before?</p>\n</blockquote>\n\n<p>I think the most elegant solution would be to:</p>\n\n<ul>\n<li>Perform a security leak test</li>\n<li>If security leak test reveals issue\n<ul>\n<li>Tell user to check settings</li>\n<li>Suggest privacy mode</li>\n</ul></li>\n</ul>\n\n<p>Because as you said, not everyone can or needs to enable privacy mode.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've solved this issue by using two HTML pages. The main page define a status variable and set a cookie. The second page is opened in a new window (not tab), read the cookie and set status to the cookie value. Under MSIE, the cookie value is passed to the child page when the main page in normal mode. When in InPrivate Browsing mode, the cookie value is not passed to the child page (but is passed if you open a new tab).</p>\n\n<p>The <code>main.html</code> page:</p>\n\n<pre><code>&lt;script&gt;     \nvar myCookie=\"nocookie\";\ndocument.cookie=\"checkInPrivate=1\";\nvar h=window.open(\"child.html\", \"_blank\", \"left=9999,height=200,width=200\");\nsetTimeout(function() {\n    var status=null;\n    if (myCookie==\"nocookie\") {\n        status=\"unable to determine if we are InPrivate Browsing mode (child page did not set the cookie)\";\n    } else if (myCookie.indexOf(\"checkInPrivate\")&gt;=0) {\n        status=\"not in InPrivate Browsing mode (child page did set the cookie)\";\n    } else {\n        status=\"in InPrivate Browsing mode (child page set the cookie value but it was not provided)\";\n    }\n    alert(status);\n}, 200);\n&lt;/script&gt;\n</code></pre>\n\n<p>The <code>child.html</code> page:</p>\n\n<pre><code>Detecting MSIE's InPrivate Browsing mode...\n&lt;script&gt;\nwindow.opener.myCookie=document.cookie;\nwindow.close();\n&lt;/script&gt;\n</code></pre>\n\n<p>I'm using InPrivate Browsing mode in order to prevent Browser Helper Objects (BHO) and browser extensions to be enabled, since BHO are most often malwares which can modify the web pages even if HTTPS and strong authentication are used. Internet Explorer 9 has a \"Disable toolbars and extensions when InPrivate Browsing starts\" in its \"Privacy\" settings.</p>\n\n<p>However, this is not the ultimate way to prevent malicious browser extension: a malicious extension may change the main page behavior to make it think that the <code>myCookie</code> value has not been set and. We would wrongly assume that we are in InPrivate Browsing mode.</p>\n\n<p>Note that I need cookies for my application so I do not use InPrivate Browsing for that purpose.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's an easier way to do detect privacy mode. This works in Safari only. I created it because a web app I am developing uses localStorage. LocalStorage is not available in Safari when in privacy mode, thus my app will not work. \nOn page load, run the script below. It shows an alert box if we cannot use localStorage. </p>\n\n<pre><code>try {\n  // try to use localStorage\n  localStorage.test = 2;        \n} catch (e) {\n  // there was an error so...\n  alert('You are in Privacy Mode\\nPlease deactivate Privacy Mode and then reload the page.');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>To anyone else coming across this question, please note as of 2014, there is no reliable or accurate way to detect if someone is browsing in an incognito/private/safe browsing mode through Javascript or CSS. Previous solutions that once worked like the CSS history hack have since been rendered unusable by all browser vendors.</p>\n\n<p>There should never be a situation where needing to detect private browsing mode on a normal day-to-day website is ever needed. People are choosing to browsing anonymously and or not anonymously for their own reasons.</p>\n\n<p>Browsers like Chrome and Firefox do not disable functionality like localStorage any more. They simply namespace it in a temporary location to prevent websites that use it from erroring out. Once you're finished browsing, the namespace is erased and nothing is saved. If you are testing for localStorage support regardless of mode, it will always return true for browsers that support it.</p>\n\n<p>If it is required internally by a company, you should develop a browser plugin. Chrome and Firefox in particular expose internal API's which allow plugins to check if the user is in private browsing/incognito mode and action accordingly. It cannot be done outside of a plugin.</p>\n\n<p>If the decision is being made by the company and it is important, a plugin that simply checks if you're in private/incognito mode and prevents you from browsing until turned on should be an easy feat for any developer who knows a little Javascript. You would then ask all company employees to install this plugin.</p>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>I'm building an extranet for a company paranoid about security. They want to make sure that (among other things) their users are browsing the site with the Private Browsing mode switched on in their web browser so that no cookies or history is kept.</p>\n\n<p>I found only this\n<a href=\"http://jeremiahgrossman.blogspot.com/2009/03/detecting-private-browsing-mode.html\">http://jeremiahgrossman.blogspot.com/2009/03/detecting-private-browsing-mode.html</a>\nand\n<a href=\"http://serverfault.com/questions/18966/force-safari-to-operate-in-private-mode-and-detect-that-state-from-a-webserver\">http://serverfault.com/questions/18966/force-safari-to-operate-in-private-mode-and-detect-that-state-from-a-webserver</a></p>\n\n<p>The ideal solution would use no or minimal javascript. Would attempting to set a unique cookie work for all browsers and platforms? Anyone done this before?</p>\n\n<p>thanks!</p>\n\n<hr>\n\n<p>update </p>\n\n<p><a href=\"http://crypto.stanford.edu/~collinj/research/incognito/\">http://crypto.stanford.edu/~collinj/research/incognito/</a> uses the CSS visited technique of the browser fingerprinters mentioned by other posters- thanks for the hints.</p>\n\n<p>I like it because it is small and elegant, but still want to be able to do it without javascript if possible.  </p>\n",
            "last_activity_date": 1420820528,
            "question_id": 2860879,
            "score": 19,
            "tags": [
                "javascript",
                "html",
                "security",
                "browser",
                "cookies"
            ],
            "title": "Detecting if a browser is using Private Browsing mode"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Try setting the \"Referers\" to \"Any referer allowed\" for your project (just leave the field empty) if it is not already like that. </p>\n\n<p>To do this go to your console and open Api &amp; auth/ Credentials and click \"Edit allowed referers\" empty the input field.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>You must enable a couple API's (in new google console) for things to work as expected.</p>\n\n<p>Go to <a href=\"https://console.developers.google.com\">https://console.developers.google.com</a> and make sure under \"APIs\" that you have following APIs enabled:</p>\n\n<ol>\n<li>\"Contacts API\"</li>\n<li>\"Google+ API\"</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>I faced the same issue. While I am not sure of the reason and logic behind this, but the following steps worked - </p>\n\n<p>1) I left the referers field blank (Any referer allowed). However, this alone did not work.\n2) I regenerated the browser key. That did the trick.</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I had the same problem. I tried emptying the referral list, but that did not fix the problem. Then I regenerated the key. The new key gave an \"expired key\" error. So I reverted to the obsolete key, which now worked.  </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I ran into this same issue and what worked for me was using a \"Server Key\" instead of a \"Browser Key\". Not sure why that would matter since I was making the request from a browser in both cases, but it works :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Setting \"Referers\" to \"Any referer allowed\" for your project (just leave the field blank) </p>\n\n<p>to goes your console (<a href=\"https://console.developers.google.com/project\" rel=\"nofollow\">https://console.developers.google.com/project</a>)\n and open Api &amp; auth >>  Credentials and click under the  \"Edit allowed referers\" empty the input field. hard refresh the query </p>\n\n<p>work Fine.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Make sure that the 'Youtube Data API V3' is enabled for your project. You can find it under 'APIs &amp; Auth' -> 'APIs'. <br>\nAlso, after enabling the Youtube Data APIs for your project, wait for a minute before firing requests using the API key. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've faced the same problem just this morning, but I was just trying to login with a google account. I was getting the same exact message.</p>\n\n<p>What worked to me was to put ON this two APIs:\nGoogle+ API\nContacts API</p>\n\n<p>in your console:\n<a href=\"https://console.developers.google.com/project/your-project-id/apiui/api\" rel=\"nofollow\">https://console.developers.google.com/project/your-project-id/apiui/api</a></p>\n\n<p>I do not want to empty the \"allowed referers field\" as I prefer to have under control from where people can login to my app. I didn't have to change my API Key neither.\nJust for the records, I am using Spring Social Google 1.1.0</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>in api's and auth credentials in <a href=\"https://console.developers.google.com\" rel=\"nofollow\">https://console.developers.google.com</a> just leave the key for server applications Edit allowed ips empty this will work </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I encountered the same issue when I was using the Management API of Google Analytics. Here's what worked for me:</p>\n\n<ol>\n<li><p>Make sure the following APIs are enabled in your API console:</p>\n\n<ul>\n<li>YouTube Data API v3</li>\n<li>YouTube Analytics API</li>\n<li>Contacts API</li>\n<li>Google+ API</li>\n</ul></li>\n<li><p>Make sure the the scopes required by the API properly defined in your application. For Youtube, use scopes required to access API calls yuo </p></li>\n<li><p>Make sure the CLIENT_ID and CLIENT_SECRET of the Google Project in your API console are the correct ones defined in your client application.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you use <code>Public API access</code> for action, you must to add your server ip to Allowed IPs list (Select Project -> APIs and Auth ->  Credentials). If not, you will get an error as above: \"Access Not Configured. Please use Google Developers Console to activate the API for your project.\"</p>\n\n<p>Please view my attached file to view more\n<img src=\"http://i.stack.imgur.com/fZxGF.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to use the Youtube API to pull in all the videos from a particular channel. I set up the project in Google Developers Console and got an API browser key. I enabled YouTube Data API v3 and for safe measure, I enabled YouTube Analytics API. </p>\n\n<p>I do not know what I am getting this error. Can anyone help me.</p>\n\n<pre><code>{\n \"error\": {\n  \"errors\": [\n   {\n    \"domain\": \"usageLimits\",\n    \"reason\": \"accessNotConfigured\",\n    \"message\": \"Access Not Configured. Please use Google Developers Console to activate the API for your project.\"\n   }\n  ],\n  \"code\": 403,\n  \"message\": \"Access Not Configured. Please use Google Developers Console to activate the API for your project.\"\n }\n}\n</code></pre>\n\n<p>Code i'm using. It doesn't do anything yet, just try to fetch the data.</p>\n\n<pre><code>jQuery.getJSON('https://www.googleapis.com/youtube/v3/channels?part=UncleBens&amp;id=UncleBens&amp;key=AIzaSyDXD80S1mFHH2HSZFxLemkae-_Cl_nY5Xk', function(data){\n    console.log(data);\n    for(var i=0; i&lt;data.data.items.length; i++) {\n       console.log(data.data.items[i].title); // title\n       console.log(data.data.items[i].description); // description\n    }\n});\n</code></pre>\n",
            "last_activity_date": 1416272211,
            "question_id": 22870082,
            "score": 16,
            "tags": [
                "javascript",
                "youtube-api",
                "youtube-javascript-api"
            ],
            "title": "Getting Error 403: Access Not Configured. Please use Google Developers Console to activate the API for your project"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Have you checked your <a href=\"http://developer.android.com/guide/appendix/media-formats.html#core\" rel=\"nofollow\">audio format</a> ?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The latest Android browser in FroYo does not yet support the HTML5 audio element. This is not a bug, rather a feature that has yet to be implemented. It may come in Gingerbread.</p>\n\n<p>Update: The Gingerbread browser has the audio element.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I cannot figure this out either.  BUT, this test page created by Apple plays HTML5 audio on the Android: <a href=\"http://www.apple.com/html5/showcase/audio\" rel=\"nofollow\">http://www.apple.com/html5/showcase/audio</a></p>\n\n<p>how did apple do it?</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here is link to Google Android bug, which filed for lack of support of AUDIO tag in Android.\nPlease, vote on it.</p>\n\n<p><a href=\"http://code.google.com/p/android/issues/detail?id=10546\">http://code.google.com/p/android/issues/detail?id=10546</a></p>\n\n<p>BTW, there is work around, which let you play natively MP3 in Android 1.6 .. 2.2,  like that:</p>\n\n<pre><code>&lt;video src=\"test.mp3\" onclick=\"this.play();\"&gt;&lt;/video&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I was having trouble on my Kindle Fire, and found one small thing which seemed to fix it.</p>\n\n<pre><code>&lt;audio&gt;\n  &lt;source src=\"someclip.mp3\" type=\"audio/mpeg\" /&gt;\n&lt;/audio&gt;\n</code></pre>\n\n<p>I had mistakenly been using \"audio/mp3\". I'm using a player without its native controls (using HTML5/JS).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I got this working on a project using <a href=\"http://trigger.io\" rel=\"nofollow\">trigger.io</a> deploying to a Nexus 7 running Android Jellybean, but the audio only plays if I use absolute URLs at the moment. I'm not sure what the relative path is yet to use audio from within my project, but hopefully this will help somebody out...</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>(function() {\n\n    var currentSound;\n    // I have a div called \"page\"\n    var soundcv = document.body;\n\n    // This only works for one sound for simplicity's sake\n    function playSound(sound){\n\n        if (currentSound == null){\n            var audio = document.createElement('audio');\n            audio.src = sound;\n            soundcv.appendChild(audio);\n            currentSound = audio;\n        }\n\n        currentSound.play();\n    }\n\n    // This isn't a real audio file URL - replace it with one of your own\n    playSound('http://example.com/example.mp3');\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've been tinkering all day on this and I finally got mine to work on my old Samsung Droid browser with the yahoo webplayer:</p>\n\n<pre><code>&lt;a href=\"somefolder/file.mp3\"&gt;&lt;/a&gt;\n&lt;script type=\"text/javascript\" src=\"http://webplayer.yahooapis.com/player.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Works great puts a little arrow icon next to the text that you can click to play your mp3. Thanks Yahoo.</p>\n\n<p>I forgot to mention that the audio does NOT show up in my Chrome or Firefox browser when testing this locally. Works great on my phone browser though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know this is a hack, but it works everywhere (as far as I know)!</p>\n\n<p>You can use the video element and convert your mp3s into mp4 and ogg files (ogg for firefox on android). You could also style it so it doesn't display any uneccesary default players. See code below:</p>\n\n<pre><code>&lt;video id=\"audioTest\" width=\"1\" height=\"1\" style=\"top: -100px; left: -100px; position: absolute;\" preload &gt;\n    &lt;source src=\"audio.mp4\" type=\"video/mp4\"&gt;\n    &lt;source src=\"audio.ogv\" type=\"video/ogg\"&gt;\n&lt;/video&gt;\n</code></pre>\n\n<p>You could then play it in your js code using:</p>\n\n<pre><code>var audioTest = document.getElementById(\"audioTest\");\naudioTest.addEventListener(\"ended\",onSoundComplete,false);\naudioTest.play();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a javascript that plays audio in the browser, using the html5 <code>&lt;audio&gt;</code> tag. It works fine in the iPhone browser, but not in Android. (Testing using a htc desire with android 2.1.) Anyone know why?</p>\n\n<p>My code:</p>\n\n<pre><code>   function playHTML5(sound, soundcv){\n                // sound = url to m4a audio file\n                // soundcv = div in which the audioplayer should go\n\n  var audio = document.createElement('audio');\n  audio.src = sound;\n  audio.controls = \"controls\";\n  if (currentSound != null){\n   soundcv.replaceChild(audio,currentSound);\n  } else {\n   soundcv.appendChild(audio);\n  }\n  currentSound = audio;\n }\n</code></pre>\n\n<p>By the way, I am also trying to enlarge the audio button that shows up in the iphone (the default one is quite small), with no luck so far - would be grateful for any ideas!</p>\n",
            "last_activity_date": 1417601906,
            "question_id": 3069124,
            "score": 16,
            "tags": [
                "javascript",
                "iphone",
                "android",
                "audio",
                "html5"
            ],
            "title": "Playing html5 audio in android browser"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Look at the comments on this site, with a count down. I have done it like this before, and it is simple and effective. Stack&nbsp;Overflow makes good use of color too.</p>\n\n<p>Perhaps you don't have enough rep to see the comment box.</p>\n\n<p>It runs a little countdown while you type. At it approaches a threshold, the color changes from yellow to red. All using JavaScript, and I assume the keyup event of the textarea.</p>\n\n<p>EDIT: How about having it done with jQuery?</p>\n\n<pre><code>&lt;script language=\"javascript\" type=\"text/javascript\" src=\"js/jquery-1.2.6.min.js\"&gt;&lt;/script&gt;\n&lt;script language=\"javascript\" type=\"text/javascript\"&gt;\n    $(document).ready( function () {\n        setMaxLength();\n        $(\"textarea.checkMax\").bind(\"click mouseover keyup change\", function(){checkMaxLength(this.id); } )\n    });\n\n    function setMaxLength() {\n        $(\"textarea.checkMax\").each(function(i){\n            intMax = $(this).attr(\"maxlength\");\n            $(this).after(\"&lt;div&gt;&lt;span id='\"+this.id+\"Counter'&gt;\"+intMax+\"&lt;/span&gt; remaining&lt;/div&gt;\");\n        });\n    }\n\n    function checkMaxLength(strID){\n        intCount = $(\"#\"+strID).val().length;\n        intMax = $(\"#\"+strID).attr(\"maxlength\");\n        strID = \"#\"+strID+\"Counter\";\n        $(strID).text(parseInt(intMax) - parseInt(intCount));\n        if (intCount &lt; (intMax * .8)) {$(strID).css(\"color\", \"#006600\"); } //Good\n        if (intCount &gt; (intMax * .8)) { $(strID).css(\"color\", \"#FF9933\"); } //Warning at 80%\n        if (intCount &gt; (intMax)) { $(strID).text(0).css(\"color\", \"#990000\"); } //Over\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>And the HTML is</p>\n\n<pre><code>&lt;textarea id=\"text\" maxlength=\"250\" class=\"checkMax\"&gt;&lt;/textarea&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Here is JavaScript code that works OK for me:</p>\n\n<pre><code>onBlur=\"if (this.value.length &gt; 500) { alert('The notes field only allows 500 characters. You have ' + this.value.length + ' characters.'); this.focus(); return false; }\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think the following is as \"clean\" as it gets. Make an event handler in Javascript that takes the keydown event and the textarea field as input. Check the length of the text in the field in this handler and return false if the maxlength is reached. (Of course make any css style switching before returning). Return true otherwise. The textarea should look like this.</p>\n\n<pre><code>&lt;textarea onkeydown=\"return checkMaxLength(event, this, 1000);\"&gt;&lt;/textarea&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://www.quirksmode.org/dom/maxlength.html\" rel=\"nofollow\">PPK's Textarea Maxlength</a> script is available on his site. Nothing fancy, just plain old JavaScript.</p>\n\n<p>You can easily use this as a starting point and make changes to accommodate your CSS \"notification\" requirement. </p>\n\n<p>Note that the author states: \"The purpose of my script is not to enforce the maximum length, though it can easily be changed to do that. However, I decided to restrict my script to giving a polite reminder when the user exceeds the maximum amount of characters.\"</p>\n\n<p><strong>UPDATE:</strong>\nDue to linkrot on the attached article, here is the code that once existed on that link:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;textarea id=\"text\" name=\"text\" maxlength=\"1250\"&gt;&lt;/textarea&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>function setMaxLength() {\n    var x = document.getElementsByTagName('textarea');\n    var counter = document.createElement('div');\n    counter.className = 'counter';\n    for (var i=0;i&lt;x.length;i++) {\n        if (x[i].getAttribute('maxlength')) {\n            var counterClone = counter.cloneNode(true);\n            counterClone.relatedElement = x[i];\n            counterClone.innerHTML = '&lt;span&gt;0&lt;/span&gt;/'+x[i].getAttribute('maxlength');\n            x[i].parentNode.insertBefore(counterClone,x[i].nextSibling);\n            x[i].relatedElement = counterClone.getElementsByTagName('span')[0];\n\n            x[i].onkeyup = x[i].onchange = checkMaxLength;\n            x[i].onkeyup();\n        }\n    }\n}\n\nfunction checkMaxLength() {\n    var maxLength = this.getAttribute('maxlength');\n    var currentLength = this.value.length;\n    if (currentLength &gt; maxLength)\n        this.relatedElement.className = 'toomuch';\n    else\n        this.relatedElement.className = '';\n    this.relatedElement.firstChild.nodeValue = currentLength;\n    // not innerHTML\n}\n</code></pre>\n\n<p>Simply call the <code>setMaxLength();</code> function on load.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Use a JavaScript framework (<a href=\"http://en.wikipedia.org/wiki/Prototype_JavaScript_Framework\" rel=\"nofollow\">Prototype</a>, <a href=\"http://en.wikipedia.org/wiki/JQuery\" rel=\"nofollow\">jQuery</a>, etc.) so that you have cross-browser event support. Write a one liner on <code>keyup</code> to prevent the user from entering the maxlength.</p>\n\n<p>Note: You'll also have to check that length server side.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found a nice script <a href=\"http://psacake.com/web/js.asp\">here</a> that stops the user from entering more text after the length of the input string exceeds the MaxLen parameter, it has the undeniable benefit of mostly staying out of the user's face. </p>\n\n<p>My problem with that script was that it also blocked the navigation keys(arrows, home, end) along with backspace and delete, so I modified it slightly, otherwise the user couldn't delete the text he entered if he reached the limit set by MaxLen (which would be kind of hilarious :P).</p>\n\n<p>Javascript:</p>\n\n<pre><code>function imposeMaxLength(Event, Object, MaxLen)\n{\n    \treturn (Object.value.length &lt;= MaxLen)||(Event.keyCode == 8 ||Event.keyCode==46||(Event.keyCode&gt;=35&amp;&amp;Event.keyCode&lt;=40))\n}\n</code></pre>\n\n<p>And the HTML that goes with it:</p>\n\n<pre><code>&lt;textarea onkeypress=\"return imposeMaxLength(event, this, 110);\" rows=\"4\" cols=\"50\"&gt;\n</code></pre>\n\n<p>The user can still get around this limitation by pasting text into the textarea, but that can be easily solved inside imposeMaxLength.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I figure I can give this a go, just another way of doing the same thing.  I like this way of doing it because you could wrap this in some code to check if you're running in IE since maxlength does work on text areas in webkit and gecko browsers.  It depends on the maxlength property being set on the textarea element in the html.  Also because it actually works as the maxlength property works in the browser by default, preventing the user from adding more than the specified characters.</p>\n\n<pre><code>$(document).ready(function () {\n\n\n$('textarea').on('keyup', function () {\n    // Store the maxlength and value of the field.\n    if (!maxlength) {\n        var maxlength = $(this).attr('maxlength');\n    }\n    var val = $(this).val();\n    var vallength = val.length;\n\n    // alert\n    if (vallength &gt;= maxlength) {\n\n\n        alert('Please limit your response to ' + maxlength + ' characters');\n        $(this).blur();\n    }\n\n\n    // Trim the field if it has content over the maxlength.\n    if (vallength &gt; maxlength) {\n        $(this).val(val.slice(0, maxlength));\n    }\n});\n\n//remove maxlength on blur so that we can reset it later.\n$('textarea').on('blur', function () {\n        delete maxlength;\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>An HTML text input has an attribute called \"maxlength\", implemented by browsers, which if set blocks user input after a certain number of characters.</p>\n\n<p>An HTML textarea element, on the other hand, does not have this attribute. My goal is to emulate the behavior of maxlength on an HTML textarea. Requirements:</p>\n\n<ul>\n<li>At a minimum, show (CSS change) that the user typed in too many characters.</li>\n<li>Ideally, block the user from typing more characters, as happens on an HTML input.</li>\n</ul>\n\n<p>It is understood that server-side validation should check the length again. Here I am focusing on the client-side part only.</p>\n\n<p>My question is: what is the cleanest client-side way of emulating maxlength on an HTML textarea? Ideally, point to a proven, open source, piece of JavaScript that you have used.</p>\n",
            "last_activity_date": 1384493194,
            "question_id": 451491,
            "score": 14,
            "tags": [
                "javascript",
                "html",
                "textarea"
            ],
            "title": "What is the best way to emulate an HTML input &quot;maxlength&quot; attribute on an HTML textarea?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Yes .prototype= is just as bad, hence the wording \"no matter how it is accomplished\". prototype is a pseudo object for extending the functionality at the class level. Its dynamic nature slows down script execution. Adding a function on the instance level, on the other hand, incurs far less overhead.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>From what I understand, the reason <code>object.__proto__</code> is bad is because it is supposed to be used internally by JavaScript and although it is accessible in some browsers, according to <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-4.3.5\" rel=\"nofollow\">ECMAScript</a>, you should use <code>object.prototype</code> instead.</p>\n\n<p>In terms of performance, both are bad if not used properly because every property on the prototype chain becomes enumerable. So, when you use functions that loop over enumerable properties, if your prototype chain is extremely long it will make each function call take that much longer.</p>\n\n<p>In addition to the initial performance hit that comes from the extra enumerable properties, every object that is created based on the object with the prototype inherits its prototype property chain thus creating a (best case) linear or (worst case) exponential performance problem.</p>\n\n<p>Mozilla puts it like this:</p>\n\n<blockquote>\n  <p>The lookup time for properties that are high up on the prototype chain\n  can have a negative impact on performance, and this may be significant\n  in code where performance is critical. Additionally, trying to access\n  nonexistent properties will always traverse the full prototype chain.</p>\n  \n  <p>Also, when iterating over the properties of an object, every property\n  that is on the prototype chain will be enumerated.</p>\n  \n  <p>To check whether an object has a property defined on itself and not\n  somewhere on its prototype chain, it is necessary to use the\n  hasOwnProperty method which all objects inherit from Object.prototype.</p>\n</blockquote>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Inheritance_and_the_prototype_chain#Performance\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Inheritance_and_the_prototype_chain#Performance</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<blockquote>\n<pre><code>// This is bad: \n//foo.__proto__.bar = bar;\n\n// But this is okay\nFoo.prototype.bar = bar;\n</code></pre>\n</blockquote>\n\n<p>No. Both are doing the same thing (as <code>foo.__proto__ === Foo.prototype</code>), and both are fine. They're just creating a <code>bar</code> property on the <code>Object.getPrototypeOf(foo)</code> object.</p>\n\n<p>What the statement refers to is assigning to the <code>__proto__</code> property itself:</p>\n\n<pre><code>function Employee() {}\nvar fred = new Employee();\n\n// Assign a new object to __proto__\nfred.__proto__ = Object.prototype;\n// Or equally:\nObject.setPrototypeOf(fred, Object.prototype);\n</code></pre>\n\n<p>The warning at the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\" rel=\"nofollow\"><code>Object.prototype</code> page</a> goes into more detail:</p>\n\n<blockquote>\n  <p>Mutating the [[Prototype]] of an object is, by the nature of how <strong>modern JavaScript engines optimize property accesses</strong>, a very slow operation</p>\n</blockquote>\n\n<p>They simply state that <em>changing the prototype chain</em> of an already existing object <em>kills optimisations</em>. Instead, you're supposed to create a new object with a different prototype chain via <code>Object.create()</code>.</p>\n\n<p>I couldn't find an explicit reference, but if we consider how <a href=\"https://developers.google.com/v8/design#prop_access\" rel=\"nofollow\">V8's hidden classes</a> are implemented, we can see what might go on here. When changing the prototype chain of an object, its internal type changes - it does not simply become a subclass like when adding a property, but is completely swapped. It means that all property lookup optimisations are flushed, and precompiled code will need to be discarded. Or it simply falls back to non-optimized code.</p>\n\n<p>Some notable quotes:</p>\n\n<ul>\n<li><p><a href=\"http://brendaneich.com/2011/01/harmony-of-my-dreams/#div-comment-6121\" rel=\"nofollow\">Brendan Eich (you know him) said</a></p>\n\n<blockquote>\n  <p>Writable __proto__ is a giant pain to implement (must serialize to cycle-check) and it creates all sorts of type-confusion hazards.</p>\n</blockquote></li>\n<li><p><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=642500\" rel=\"nofollow\">Brian Hackett (Mozilla) said</a>:</p>\n\n<blockquote>\n  <p>Allowing scripts to mutate the prototype of pretty much any object makes it harder to reason about the behavior of a script and makes VM, JIT, and analysis implementation more complex and buggier.  Type inference has had several bugs due to mutable __proto__ and cannot maintain several desirable invariants because of this feature (i.e. 'type sets contain all the possible type objects which can realized for a var/property' and 'JSFunctions have types which are also functions').</p>\n</blockquote></li>\n<li><p><a href=\"http://mozilla.6506.n7.nabble.com/Fwd-B-3-1-The-proto-pseudo-property-tp279415p279620.html\" rel=\"nofollow\">Jeff Walden said</a>:</p>\n\n<blockquote>\n  <p>Prototype mutation after creation, with its erratic performance destabilization, and the impact upon proxies and [[SetInheritance]]</p>\n</blockquote></li>\n<li><p><a href=\"http://esdiscuss.org/topic/standardizing-proto#content-44\" rel=\"nofollow\">Erik Corry (Google) said</a>:</p>\n\n<blockquote>\n  <p>I don't expect big performance gains from making proto non-overwritable. In non-optimized code you have to check the prototype chain in case the prototype objects (not their identity) have been changed. In the case of optimized code you can fall back to nonoptimized code if someone writes to proto. So it wouldn't make all that much difference, at least in V8-Crankshaft.</p>\n</blockquote></li>\n<li><p><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=984146#c5\" rel=\"nofollow\">Eric Faust (Mozilla) said</a></p>\n\n<blockquote>\n  <p>When you set __proto__, not only are you ruining any chances you may have had for future optimizations from Ion on that object, but you also force the engine to go crawling around to all the other pieces of type inference (information about function return values, or property values, perhaps) which think they know about this object and tell them not to make many assumptions either, which involves further deoptimization and perhaps invalidation of existing jitcode.<br>\n  Changing the prototype of an object in the middle of execution is really a nasty sledgehammer, and the only way we have to keep from being wrong is to play it safe, but safe is slow.</p>\n</blockquote></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p><code>__proto__</code>/<code>setPrototypeOf</code> aren't the same as assigning to the object prototype. For example, when you have a function/object with members assigned to it:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function Constructor(){\n    if (!(this instanceof Constructor)){\n        return new Constructor();\n    } \n}\n\nConstructor.data = 1;\n\nConstructor.staticMember = function(){\n    return this.data;\n}\n\nConstructor.prototype.instanceMember = function(){\n    return this.constructor.data;\n}\n\nConstructor.prototype.constructor = Constructor;\n\n// By doing the following, you are almost doing the same as assigning to \n// __proto__, but actually not the same :P\nvar newObj = Object.create(Constructor);// BUT newObj is now an object and not a \n// function like !!!Constructor!!! \n// (typeof newObj === 'object' !== typeof Constructor === 'function'), and you \n// lost the ability to instantiate it, \"new newObj\" returns not a constructor, \n// you have .prototype but can't use it. \nnewObj = Object.create(Constructor.prototype); \n// now you have access to newObj.instanceMember \n// but staticMember is not available. newObj instanceof Constructor is true\n\n// we can use a function like the original constructor to retain \n// functionality, like self invoking it newObj(), accessing static \n// members, etc, which isn't possible with Object.create\nvar newObj = function(){\n    if (!(this instanceof newObj)){   \n        return new newObj();\n    }\n}; \nnewObj.__proto__ = Constructor;\nnewObj.prototype.__proto__ = Constructor.prototype;\nnewObj.data = 2;\n\n(new newObj()).instanceMember(); //2\nnewObj().instanceMember(); // 2\nnewObj.staticMember(); // 2\nnewObj() instanceof Constructor; // is true\nConstructor.staticMember(); // 1\n</code></pre>\n\n<p>Everybody seem to be focusing only on the prototype, and forget that functions can have members assigned to it and instantiated after mutation. There's currently no other way of doing this without using <code>__proto__</code>/<code>setPrototypeOf</code>. Barely anyone use a constructor without the ability to inherit from a parent constructor function, and <code>Object.create</code> fails to serve.</p>\n\n<p>And plus, that's two <code>Object.create</code> calls, which at the present moment, is ungodly slow in V8 (both browser and Node), which makes <code>__proto__</code> a more viable choice</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>From the MDN docs for the <em>standard</em> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>setPrototypeOf</code> function</a>  as well as the non-standard <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"> <code>__proto__</code> property</a>:</p>\n\n<blockquote>\n  <p>Mutating the [[Prototype]] of an object, no matter how this is accomplished, is strongly discouraged, because it is very slow and unavoidably slows down subsequent execution in modern JavaScript implementations.</p>\n</blockquote>\n\n<p>Using <code>Function.prototype</code> to add properties is <em>the</em> way to add member functions to javascript classes. Then as the following shows: </p>\n\n<pre><code>function Foo(){}\nfunction bar(){}\n\nvar foo = new Foo();\n\n// This is bad: \n//foo.__proto__.bar = bar;\n\n// But this is okay\nFoo.prototype.bar = bar;\n\n// Both cause this to be true: \nconsole.log(foo.__proto__.bar == bar); // true\n</code></pre>\n\n<p>Why is <code>foo.__proto__.bar = bar;</code> bad? If its bad isn't <code>Foo.prototype.bar = bar;</code> just as bad? </p>\n\n<p>Then why this warning: <strong><em>it is very slow and unavoidably slows down subsequent execution in modern JavaScript implementations</em></strong>. Surely <code>Foo.prototype.bar = bar;</code> is not that bad.</p>\n\n<p><strong>Update</strong> Perhaps by mutation they meant reassignment. See accepted answer. </p>\n",
            "last_activity_date": 1425049714,
            "question_id": 23807805,
            "score": 13,
            "tags": [
                "javascript",
                "performance",
                "prototype",
                "prototype-chain"
            ],
            "title": "Why is mutating the [[prototype]] of an object bad for performance?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>in jsf2.0 you can use the f:ajax tag in almost any other jsf tag e.g</p>\n\n<pre><code>&lt;h:selectOneRadio id=\"myComponent\" value=\"#{someBean.inputMethod}\"&gt;\n&lt;f:selectItem itemValue=\"#{someBean.A}\" itemLabel=\"A\" /&gt;\n&lt;f:selectItem itemValue=\"#{someBean.B}\" itemLabel=\"B\" /&gt;\n       &lt;f:ajax event=\"click\" action=#{someBean.someMethod} /&gt;\n&lt;/h:selectOneRadio&gt;\n</code></pre>\n\n<p>In this example the someMethod is excuted in the javasript onClick event for the \"myComponent\" selectOneRadio</p>\n\n<p>Not sure if this is what you are after ....</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In <em>theory</em> the following should do it.</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;h:body&gt;\n    &lt;f:ajax event=\"load\" listener=\"#{bean.onload}\" /&gt;\n&lt;/h:body&gt;\n</code></pre>\n\n<p>with</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>public void onload(AjaxBehaviourEvent event) {\n    // ...\n}\n</code></pre>\n\n<p>However, this is not supported for some reason. I've ever posted an <a href=\"http://java.net/jira/browse/JAVASERVERFACES-1781\">issue report</a> about that. </p>\n\n<p>The following works, but it's in essence a hack.</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;h:head&gt;\n    &lt;title&gt;JSF 2.0 onload hack&lt;/title&gt;\n    &lt;script&gt;\n        window.onload = function() {\n            document.getElementById('hidden:link').onclick();\n        }\n    &lt;/script&gt;\n&lt;/h:head&gt;\n&lt;h:body&gt;\n    &lt;h:form id=\"hidden\" style=\"display:none\"&gt;\n        &lt;h:commandLink id=\"link\"&gt;\n            &lt;f:ajax event=\"click\" listener=\"#{bean.onload}\" /&gt;\n        &lt;/h:commandLink&gt;\n    &lt;/h:form&gt;\n&lt;/h:body&gt;\n</code></pre>\n\n<p>If you happen to use PrimeFaces, then you can use its <a href=\"http://www.primefaces.org/showcase/ui/remoteCommand.jsf\"><code>&lt;p:remoteCommand&gt;</code></a> with <a href=\"http://www.primefaces.org/docs/vdl/3.5/primefaces-p/remoteCommand.html\"><code>autoRun</code> set to <code>true</code></a>.</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;h:body&gt;\n    &lt;h:form&gt;\n        &lt;p:remoteCommand name=\"onload\" action=\"#{bean.onload}\" autoRun=\"true\" /&gt;\n    &lt;/h:form&gt;\n&lt;/h:body&gt;\n</code></pre>\n\n<p>Or if you're using OmniFaces, then you can use its <code>&lt;o:commandScript&gt;</code></p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;h:body&gt;\n    &lt;h:form&gt;\n        &lt;o:commandScript name=\"onload\" action=\"#{bean.onload}\" /&gt;\n        &lt;h:outputScript target=\"body\"&gt;onload()&lt;/h:outputScript&gt;\n    &lt;/h:form&gt;\n&lt;/h:body&gt;\n</code></pre>\n\n<p>The <code>&lt;h:outputScript target=\"body\"&gt;</code> renders the <code>&lt;script&gt;</code> in the end of the <code>&lt;body&gt;</code>.</p>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>How can I make an ajax request that updates a <code>&lt;h:dataTable&gt;</code> from javascript? I am currently loading the initial data using <code>@Postconstruct</code> but that is significantly delaying the initial page load.</p>\n\n<p>I am thinking about using <code>onload</code> event of <code>&lt;body&gt;</code> HTML tag to fire the request and update the datatable.</p>\n",
            "last_activity_date": 1370613169,
            "question_id": 5522702,
            "score": 13,
            "tags": [
                "java",
                "javascript",
                "jsf",
                "jsf-2"
            ],
            "title": "Execute managebean method from javascript onload event"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Exactly the same, except that it is being invoked immediately after being converted into a function expression.</p>\n\n<pre><code>// v-----first set of parentheses makes the function an expression\n   (function () {\n       var x = 1;\n       ...\n   }());\n//  ^-----this set is used to invoke the function\n</code></pre>\n\n<p>Same as if you did:</p>\n\n<pre><code>   var myfunc = function () {\n       var x = 1;\n       ...\n   };\n   myfunc();\n</code></pre>\n\n<p>or (similar) this:</p>\n\n<pre><code>   var returnValue = function () {\n       var x = 1;\n       ...\n   }();\n</code></pre>\n\n<p>Get rid of the names, move the parentheses around, and you can see they're not that different.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>The area where I most often find this useful is in callback functions.  This notation can also used in cases where you need to include a variable in a callback function, but you need the variable state to not be affected by what goes on outside the function.</p>\n\n<pre><code> var someVal = 1;\n\n setTimeout( (function(one) {\n      return function() {\n           alert(one);  // alerts a 1 even 10 seconds after someVal++;\n      }\n })(someVal), 10000);\n\n someVal++;  // the value in the setTimeout will remain the same as it is locked inside.\n</code></pre>\n\n<p>In this context, setTimeout takes a function that takes no arguments.  So the question of how to pass in a value to that function is answered by creating a function that takes one argument that returns a function that takes 0 arguments.</p>\n\n<p>I suggest anyone wanting to learn more about the power of this notation to play around with it in the Firebug JavaScript console.  Once you wrap your head around this concept, you'll start to see areas where this powerful concept can be used.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have often see expressions such as:</p>\n\n<pre><code>(function () {\n    var x = 1;\n    ...\n}());\n</code></pre>\n\n<p>How do I interpret it? syntactically, this alone is a anonymous function definition.</p>\n\n<pre><code>function() {\n...\n}\n</code></pre>\n\n<p>what the () after that? and why put it in the enclosing ()?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1296055702,
            "question_id": 4806150,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "javascript function vs. ( function() { ... } ());"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<pre><code> function formatNumber1(number) {\n  var comma = ',',\n      string = Math.max(0, number).toFixed(0),\n      length = string.length,\n      end = /^\\d{4,}$/.test(string) ? length % 3 : 0;\n  return (end ? string.slice(0, end) + comma : '') + string.slice(end).replace(/(\\d{3})(?=\\d)/g, '$1' + comma);\n }\n\n function formatNumber2(number) {\n  return Math.max(0, number).toFixed(0).replace(/(?=(?:\\d{3})+$)(?!^)/g, ',');\n }\n</code></pre>\n\n<p>Source: <a href=\"http://jsperf.com/number-format\" rel=\"nofollow\">http://jsperf.com/number-format</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use the Number function <code>toFixed</code> and this function to add the commas.</p>\n\n<pre><code>function addCommas(nStr)\n{\n    nStr += '';\n    var x = nStr.split('.');\n    var x1 = x[0];\n    var x2 = x.length &gt; 1 ? '.' + x[1] : '';\n    var rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(x1)) {\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\n    }\n    return x1 + x2;\n}\nn = 10000;\nr = n.toFixed(2); //10000.00\n\naddCommas(r); // 10,000.00\n</code></pre>\n\n<p><a href=\"http://www.mredkj.com/javascript/numberFormat.html\" rel=\"nofollow\">http://www.mredkj.com/javascript/numberFormat.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use </p>\n\n<pre><code>num = num.toFixed(2);\n</code></pre>\n\n<p>Where 2 is the number of decimal places</p>\n\n<p>Edit:</p>\n\n<p>Here's the function to format number as you want</p>\n\n<pre><code>function formatNumber(number)\n{\n    number = number.toFixed(2) + '';\n    x = number.split('.');\n    x1 = x[0];\n    x2 = x.length &gt; 1 ? '.' + x[1] : '';\n    var rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(x1)) {\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\n    }\n    return x1 + x2;\n}\n</code></pre>\n\n<p>Sorce: <a href=\"http://www.mredkj.com/javascript/numberFormat.html\" rel=\"nofollow\">www.mredkj.com</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://www.mredkj.com/javascript/numberFormat.html\" rel=\"nofollow\">this</a> is a very good, short article about your problem. adding a thousands-seperator is not built in to javascript, so you'll have to write your own function like this (example taken from the liked page):</p>\n\n<pre><code>function addCommas(nStr)\n{\n  nStr += '';\n  x = nStr.split('.');\n  x1 = x[0];\n  x2 = x.length &gt; 1 ? '.' + x[1] : '';\n  var rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, '$1' + ',' + '$2');\n  }\n  return x1 + x2;\n}\n</code></pre>\n\n<p>(<code>addCommas</code> doesn't sound like a good name for this, but thats just my opinion - in fact, it works)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I think with this <a href=\"http://code.google.com/p/jquery-numberformatter/\" rel=\"nofollow\">jquery-numberformatter</a> you could solve your problem.</p>\n\n<pre><code>$(\"#salary\").blur(function(){\n   $(this).parseNumber({format:\"#,###.00\", locale:\"us\"});\n   $(this).formatNumber({format:\"#,###.00\", locale:\"us\"});\n});\n</code></pre>\n\n<p>Of course, this is assuming that you don't have problem with using jquery in your project.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you're using jQuery, you could use the <a href=\"http://plugins.jquery.com/project/jquery-format\" rel=\"nofollow\">format</a> or <a href=\"http://plugins.jquery.com/plugin-tags/number-format\" rel=\"nofollow\">number format</a> plugins.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This will get you your comma seperated values as well as add the fixed notation to the end.        </p>\n\n<pre><code>    nStr=\"1000\";\n    nStr += '';\n    x = nStr.split('.');\n    x1 = x[0];\n    x2 = x.length &gt; 1 ? '.' + x[1] : '';\n    var rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(x1)) {\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\n    }\n    commaSeperated = x1 + x2 + \".00\";\n    alert(commaSeperated);\n</code></pre>\n\n<p><a href=\"http://www.mredkj.com/javascript/numberFormat.html\" rel=\"nofollow\">Source</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>function formatNumber(number)\n{\n    var number = number.toFixed(2) + '';\n    var x = number.split('.');\n    var x1 = x[0];\n    var x2 = x.length &gt; 1 ? '.' + x[1] : '';\n    var rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(x1)) {\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\n    }\n    return x1 + x2;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Why use RegExp for this? &mdash; don't use a hammer when a toothpick will do i.e. use string manipulation:</p>\n\n<pre><code>var formatThousands = function(n, dp){\n  var s = ''+(Math.floor(n)), d = n % 1, i = s.length, r = '';\n  while ( (i -= 3) &gt; 0 ) { r = ',' + s.substr(i, 3) + r; }\n  return s.substr(0, i + 3) + r + \n    (d ? '.' + Math.round(d * Math.pow(10, dp || 2)) : '');\n};\n</code></pre>\n\n<h3>walk through</h3>\n\n<pre><code>formatThousands( 1000000.42 );\n</code></pre>\n\n<p>First strip off decimal:</p>\n\n<pre><code>s = '1000000', d = ~ 0.42\n</code></pre>\n\n<p>Work backwards from the end of the string:</p>\n\n<pre><code>',' + '000'\n',' + '000' + ',000'\n</code></pre>\n\n<p>Finalise by adding the leftover prefix and the decimal suffix (with rounding to <code>dp</code> no. decimal points):</p>\n\n<pre><code>'1' + ',000,000' + '.42'\n</code></pre>\n\n<h3>fiddlesticks</h3>\n\n<p><a href=\"http://jsfiddle.net/XC3sS/\" rel=\"nofollow\">http://jsfiddle.net/XC3sS/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Or you could use the  <a href=\"http://sugarjs.com/\" rel=\"nofollow\">sugar.js</a> library, and the <a href=\"http://sugarjs.com/api/Number/format\" rel=\"nofollow\">format</a> method:</p>\n\n<blockquote>\n  <p><strong>format( place = 0 , thousands = ',' , decimal = '.' )</strong> Formats the number to a readable string. If place is undefined, will automatically\n  determine the place. thousands is the character used for the thousands\n  separator. decimal is the character used for the decimal point.</p>\n</blockquote>\n\n<p>Examples:</p>\n\n<pre><code>(56782).format() &gt; \"56,782\"\n(56782).format(2) &gt; \"56,782.00\"\n(4388.43).format(2, ' ') &gt; \"4 388.43\"\n(4388.43).format(3, '.', ',') &gt; \"4.388,430\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is about 3 times faster version of the accepted answer. It doesn't create array and avoids object creation and string concatenation for whole numbers at the end. This might be useful if you render lots of values e.g. in a table.</p>\n\n<pre><code>function addThousandSeparators(number) {\n    var whole, fraction\n    var decIndex = number.lastIndexOf('.')\n    if (decIndex &gt; 0) {\n        whole = number.substr(0, decIndex)\n        fraction = number.substr(decIndex)\n    } else {\n        whole = number\n    }\n    var rgx = /(\\d+)(\\d{3})/\n    while (rgx.test(whole)) {\n        whole = whole.replace(rgx, '$1' + ',' + '$2')\n    }\n    return fraction ? whole + fraction : whole\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to format numbers using javascript.</p>\n\n<p>For example:</p>\n\n<pre><code>10     =&gt; 10.00\n100    =&gt; 100.00\n1000   =&gt; 1,000.00\n10000  =&gt; 10,000.00\n100000 =&gt; 1,00,000.00\n</code></pre>\n",
            "last_activity_date": 1425898734,
            "question_id": 5731193,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "How to format numbers using javascript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The optimization isn't the pre versus post increment. It's the use of bitwise 'shift' and 'and' operators rather than divide and mod.</p>\n\n<p>There is also the optimization of minifying the javascript to decrease the total size (but this is not a runtime optimization).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Sounds like premature optimization. When you're nearly done your app, check where the bottlenecks are and optimize those as needed. But if you want a thorough guide to loop performance, check this out:</p>\n\n<p><a href=\"http://blogs.oracle.com/greimer/entry/best_way_to_code_a\" rel=\"nofollow\">http://blogs.oracle.com/greimer/entry/best_way_to_code_a</a></p>\n\n<p>But you never know when this will become obsolete because of JS engine improvements and variations between browsers. Best choice is to not worry about it until it's a problem. Make your code clear to read.</p>\n\n<p>Edit: According to <a href=\"http://www.moddular.org/log/javascript-loops/\" rel=\"nofollow\">this guy</a> the pre vs. post is statistically insignificant. (with pre possibly being worse)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is what I read and could answer your question: \"preincrement (<code>++i</code>) adds one to the value of <code>i</code>, then returns <code>i</code>; in contrast, <code>i++</code> returns <code>i</code> then adds one to it, which <em>in theory</em> results in the creation of a temporary variable storing the value of <code>i</code> before the increment operation was applied\". </p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>Just tested it in firebug and found no difference between post- and preincrements. Maybe this optimization other platforms?\nHere is my code for firebug testing:</p>\n\n<pre><code>function test_post() {\n    console.time('postIncrement');\n    var i = 1000000, x = 0;\n    do x++; while(i--);\n    console.timeEnd('postIncrement');\n}\n\nfunction test_pre() {\n    console.time('preIncrement');\n    var i = 1000000, x = 0;\n    do ++x; while(i--);\n    console.timeEnd('preIncrement');\n}\n\ntest_post();\ntest_pre();\ntest_post();\ntest_pre();\ntest_post();\ntest_pre();\ntest_post();\ntest_pre();\n</code></pre>\n\n<p>Output is:</p>\n\n<pre><code>postIncrement: 140ms\npreIncrement: 160ms\npostIncrement: 136ms\npreIncrement: 157ms\npostIncrement: 148ms\npreIncrement: 137ms\npostIncrement: 136ms\npreIncrement: 148ms\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is a faux optimization.  You're saving like 1 op code.  If you're looking to optimize your code with this technique, then you've gone the wrong way.  Also, most compilers/interpreters will optimize this for you anyway (<a href=\"http://discuss.fogcreek.com/joelonsoftware/default.asp?cmd=show&amp;ixPost=171881\">reference 1</a>).  In short I wouldn't worry about.  <em>But</em>, if you're really worried, you should use <code>i+=1</code>.</p>\n\n<p>Here's the quick-and-dirty benchmark I just did</p>\n\n<pre><code>var MAX = 1000000, t=0,i=0;\n\nt = (new Date()).getTime();\nfor ( i=0; i&lt;MAX;i++ ) {}\nt = (new Date()).getTime() - t;\n\nconsole.log(t);\n\nt = (new Date()).getTime();\nfor ( i=0; i&lt;MAX;++i ) {}\nt = (new Date()).getTime() - t;\n\nconsole.log(t);\n\nt = (new Date()).getTime();\nfor ( i=0; i&lt;MAX;i+=1 ) {}\nt = (new Date()).getTime() - t;\n\nconsole.log(t);\n</code></pre>\n\n<p><strong>Raw results</strong></p>\n\n<pre><code>Post    Pre     +=\n1071    1073\t1060\n1065    1048\t1051\n1070    1065\t1060\n1090    1070\t1060\n1070    1063\t1068\n1066    1060\t1064\n1053    1063\t1054\n</code></pre>\n\n<p><strong>Removed lowest and highest</strong></p>\n\n<pre><code>Post    Pre     +=\n1071    ----\t1060\n1065    ----\t----\n1070    1065\t1060\n----    1070\t1060\n1070    1063\t----\n1066    1060\t1064\n----    1063\t1054\n</code></pre>\n\n<p><strong>Averages</strong></p>\n\n<pre><code>1068.4  1064.2\t1059.6\n</code></pre>\n\n<p>Notice that this is over <strong>one million iterations</strong> and the results are within <em>9</em> milliseconds on average.  Not really much of an optimization considering that most iterative processing in JavaScript is done over much smaller sets (DOM containers for example). </p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>This is probably cargo-cult programming.\nIt shouldn't make a difference when you're using a decent compilers/interpreters for languages that don't have arbitrary operator overloading.</p>\n\n<p>This optimization made sense for C++ where</p>\n\n<pre><code>T x = ...;\n++x\n</code></pre>\n\n<p>could modify a value in place whereas</p>\n\n<pre><code>T x = ...;\nx++\n</code></pre>\n\n<p>would have to create a copy by doing something under-the-hood like</p>\n\n<pre><code>T x = ...;\nT copy;\n(copy = T(x), ++x, copy)\n</code></pre>\n\n<p>which could be expensive for large struct types or for types that do lots of computation in their `copy constructor.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Anatoliy's test included a post-increment inside the pre-increment test function :(</p>\n\n<p>Here are the results without this side effect...</p>\n\n<pre><code>function test_post() {\n    console.time('postIncrement');\n    var i = 1000000, x = 0;\n    do x++; while(i--);\n    console.timeEnd('postIncrement');\n}\n\nfunction test_pre() {\n    console.time('preIncrement');\n    var i = 1000000, x = 0;\n    do ++x; while(--i);\n    console.timeEnd('preIncrement');\n}\n\ntest_post();\ntest_pre();\ntest_post();\ntest_pre();\ntest_post();\ntest_pre();\ntest_post();\ntest_pre();\n</code></pre>\n\n<p>Output</p>\n\n<pre><code>postIncrement: 3.21ms\npreIncrement: 2.4ms\npostIncrement: 3.03ms\npreIncrement: 2.3ms\npostIncrement: 2.53ms\npreIncrement: 1.93ms\npostIncrement: 2.54ms\npreIncrement: 1.9ms\n</code></pre>\n\n<p>That's a big difference.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I was browsing Google Code when I chanced upon this project called JSpeed - optimization for Javascript.</p>\n\n<p>I noticed one of the optimization was to change <code>i++</code> to <code>++i</code> in for loop statements.</p>\n\n<p><strong>Before Optimization</strong></p>\n\n<pre><code>for (i=0;i&lt;1;i++) {}\n\nfor (var i = 0, j = 0; i &lt; 1000000; i++, j++) {\n    if (i == 4) {\n        var tmp = i / 2;\n    }\n\n    if ((i % 2) == 0) {\n        var tmp = i / 2;\n        i++;\n    }\n}\nvar arr = new Array(1000000);\nfor (i = 0; i &lt; arr.length; i++) {}\n</code></pre>\n\n<p><strong>After optimization</strong></p>\n\n<pre><code>for(var i=0;i&lt;1;++i){}\nfor(var i=0,j=0;i&lt;1000000;++i,++j){if(i==4){var tmp=i&gt;&gt;1;}\nif((i&amp;1)==0){var tmp=i&gt;&gt;1;i++;}}\nvar arr=new Array(1000000);for(var i=0,arr_len=arr.length;i&lt;arr_len;++i){}\n</code></pre>\n\n<p>I know what pre and post increments do, but any idea how does this speeds the code up?</p>\n",
            "last_activity_date": 1406801591,
            "question_id": 1546981,
            "score": 12,
            "tags": [
                "javascript",
                "optimization",
                "increment"
            ],
            "title": "post increment vs pre increment - Javascript Optimization"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>In this case, I would write a specific handler for the <code>403</code> status code, which means unauthorized (my server would return a 403 too).  From the jquery ajax docs, you can do</p>\n\n<pre><code>$.ajax({\n  statusCode: {\n    403: function() {\n        relogin(onSuccess);\n    }\n  }\n});\n</code></pre>\n\n<p>to achieve that.</p>\n\n<p>In that handler, I would call a <code>relogin</code> method, passing a function that captures what to do when login succeeds.  In this case, you could pass in the method that contains the call you want to run again.</p>\n\n<p>In the code above, <code>relogin</code> should call the login code, and <code>onSuccess</code> should be a function that wraps the code you execute every minute.</p>\n\n<p>EDIT- based on your clarification in comment, that this scenario happens for multiple requests, I personally would create an API for your app that captures the interactions with the server.</p>\n\n<pre><code>app = {};\napp.api = {};\n// now define all your requests AND request callbacks, that way you can reuse them\napp.api.makeRequest1 = function(..){..} // make request 1\napp.api._request1Success = function(...){...}// success handler for request 1\napp.api._request1Fail = function(...){...}// general fail handler for request 1\n\n/**\n  A method that will construct a function that is intended to be executed\n  on auth failure.\n\n  @param attempted The method you were trying to execute\n  @param args      The args you want to pass to the method on retry\n  @return function A function that will retry the attempted method\n**/\napp.api.generalAuthFail = function(attempted, args){\n   return function(paramsForFail){ // whatever jquery returns on fail should be the args\n      if (attempted) attempted(args); \n   }  \n}\n</code></pre>\n\n<p>so with that structure, in your <code>request1</code> method you would do something like</p>\n\n<pre><code>$().ajax({\n    ....\n    statusCode: {\n        403: app.api.generalAuthFail(app.api.request1, someArgs);\n    }\n}}\n</code></pre>\n\n<p>the <code>generalAuthFailure</code> will return a callback that executes the method you pass in.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You could possibly go by the option of naming each one of your functions and then recalling them as stated in hvgotcodes' answers.</p>\n\n<p>Or</p>\n\n<p>You can use a reusable function to setup a request while extending the defaults:</p>\n\n<pre><code>function getRequest( options ){\n\n    var // always get json\n        defaults = { dataType: 'json' },\n        settings = $.extend( defaults, options );\n\n\n    return // send initial ajax, if it's all good return the jqxhr object\n           $.ajax( settings )\n           // on error\n           .fail(function( jqxhr, e ){\n                // if the users autherization has failed out server responds with a 401\n                if( jqxhr.status === 401 ){\n                    // Authenticate user again\n                    resetAuthentication()\n                    .done(function(){\n                        // resend original ajax also triggering initial callback\n                        $.ajax( settings );\n                    });\n                }\n           });\n};\n</code></pre>\n\n<p>To use the above function you would write something like this:</p>\n\n<pre><code>getRequest({\n    url: 'http://www.example.com/auth.php',\n    data: {user: 'Mike', pass: '12345'},\n    success: function(){ // do stuff }\n});\n</code></pre>\n\n<p>The <code>getRequest()</code> could probably be made recursive and/or converted into a jQuery plugin but this was sufficient for my needs.</p>\n\n<p><em><strong>Note:</em></strong> If the resetAutentication function might faile, <code>getRequest()</code> would have to be recursive.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Found <a href=\"http://www.moretechtips.net/2012/04/retrying-ajax-requests-with-jquery.html\">this post</a> that suggests a good solution to this problem </p>\n\n<p>The main thing is to use $.ajaxPrefilter and replace your error handler with a custom one that checks for retries and perform a retry by using the closure's 'originalOptions'.</p>\n\n<p>I'm posting the code just in case it will be offline in the future, again, the credit belongs to <a href=\"http://www.moretechtips.net/2012/04/retrying-ajax-requests-with-jquery.html\">the original writer</a></p>\n\n<pre><code>// register AJAX prefilter : options, original options\n$.ajaxPrefilter(function( options, originalOptions, jqXHR ) {\n\n   originalOptions._error = originalOptions.error;\n\n   // overwrite error handler for current request\n   options.error = function( _jqXHR, _textStatus, _errorThrown ){\n\n   if (... it should not retry ...){\n\n         if( originalOptions._error ) originalOptions._error( _jqXHR, _textStatus, _errorThrown );\n         return;\n      };\n\n      // else... Call AJAX again with original options\n      $.ajax( originalOptions);\n   };\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>The code below will keep the original request and it will try to success 3 times.</p>\n\n<pre><code>var trys = 0;\n$( document ).ajaxError(function( event, jqxhr, settings, thrownError ) {\n    if(trys &lt; 3){\n        limit++;\n        $.ajax(this).done(function(){limit=0;});\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have multiple ajax requests some request data every minute others are initiated by the user through a ui.</p>\n\n<pre><code>$.get('/myurl', data).done(function( data ){\n   // do stuff..\n});\n</code></pre>\n\n<p>The request might fail due to an authentication failure.\nI've setup a global <code>.ajaxError()</code> method for catching any failed requests.</p>\n\n<pre><code>$(document).ajaxError(function( e, jqxhr ){\n   // Correct error..\n});\n</code></pre>\n\n<p>After I catch the error I reset authorization.\nResetting the authorization works but the user has to manually re initiate the ajax call (through the ui).</p>\n\n<p>How do I resend the failed request using the jqxhr originally sent?</p>\n\n<p>(I'm using jQuery for the ajax)</p>\n",
            "last_activity_date": 1406282884,
            "question_id": 8881614,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "ajax"
            ],
            "title": "How do I resend a failed ajax request?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Probably something on the server. If you know it's there, I would just bypass it until solved.</p>\n\n<p><code>myString = myString.substring(1)</code></p>\n\n<p>Chops off the first character.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>After more testings, I've come down to this isolation of the problem:</p>\n\n<p>If I create a php file with:</p>\n\n<pre><code>&lt;?php\n  echo \"something\";\n?&gt;\n</code></pre>\n\n<p>Save it as utf-8 and run it -\nThe string is displayed <strong>fine</strong>, without the BOM prepended.</p>\n\n<p>If I create another php file, even with nothing, i.e.:</p>\n\n<pre><code>&lt;?php\n?&gt;\n</code></pre>\n\n<p>save it as utf-8,\nthen include the second file inside the first one</p>\n\n<pre><code>&lt;?php\n   require_once \"secondfile.php\";\n   echo \"something\";\n?&gt;\n</code></pre>\n\n<p><strong>Then the string 'something' does appear with the BOM character prepended to it!</strong></p>\n\n<p>A. Same thing with using include_once or include. <br/>\nB. If I look at the second file with an hex editor - NO BOM is  there...!</p>\n\n<p>What's going on here? :\\</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To conclude, and specify the solution:</p>\n\n<p>Windows Notepad adds the BOM character (the 3 bytes: EF BB BF) to files saved with utf-8 encoding.</p>\n\n<p>PHP doesn't seem to be bothered by it - unless you include one php file into another - \nthen things get messy and strings gets displayed with character(65279) prepended to them.</p>\n\n<p>You can edit the file with another text editor such as Notepad++ and use the encoding <br/>\n\"Encode in UTF-8 without BOM\", <br/>\nand this seems to fix the problem.</p>\n\n<p>Also, you can save the other php file with ANSI encoding in notepad - and this also seem to work (that is, in case you actually don't use any extended characters in the file, I guess...)</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>You can also remove the character in javascript with:</p>\n\n<p><code>myString = myString.replace(String.fromCharCode(65279), \"\" );</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have encountered a similar problem described <a href=\"http://stackoverflow.com/questions/3449316/how-to-compare-xmlhttp-responsetext\">here</a> (and in other places) - \nwhere as on an ajax callback I get a xmlhttp.responseText that seems ok (when I alert it - it shows the right text) - but when using an 'if' statement to compare it to the string - it returns false.</p>\n\n<p>(I am also the one who wrote the server-side code returning that string) - after much studying the string - I've discovered that the string had an \"invisible character\" as its first character. A character that was not shown. If I copied it to Notepad - then deleted the first character - it won't delete until pressing Delete again.</p>\n\n<p>I did a charCodeAt(0) for the returned string in xmlhttp.responseText. And it returned <strong>65279</strong>.</p>\n\n<p>Googling it reveals that it is some sort of a UTF-8 control character that is supposed to set \"big-endian\" or \"small-endian\" encoding.</p>\n\n<p>So, now I know the cause of the problem - but... why does that character is being echoed?\nIn the source php I simply use </p>\n\n<pre><code>echo 'the string'...\n</code></pre>\n\n<p>and it apparently somehow outputs [chr(65279)]the string...</p>\n\n<p>Why? And how can I avoid it?</p>\n",
            "last_activity_date": 1335204166,
            "question_id": 6538203,
            "score": 9,
            "tags": [
                "php",
                "javascript",
                "ajax",
                "utf-8"
            ],
            "title": "How to avoid echoing character 65279 in php? (This question also relates to Javascript xmlhttp.responseText (ajax))"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>you can use an .htaccess (assuming the original content is on an Apache server) to limit the access to a specific IP.</p>\n\n<p>Or, if the page is a PHP, you could limit it to a specific domain, like this:</p>\n\n<pre><code>    &lt;?php\n$continue = 0;\nif(isset($_SERVER['HTTP_REFERER'])) {\n\n    //correct domain:\n    $ar=parse_url($_SERVER['HTTP_REFERER']);\n    if( strpos($ar['host'], 'yourdomain.com') === false ){\n    } else {\n        $continue = 1;\n    }\n\n}\n\nif($continue == 0){\n    header('HTTP/1.0 403 Forbidden');\n    exit('Forbidden');\n}\n\n?&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Sounds like a check that is better made server side - you can check the iFrame markup against a list of valid domain names (or parent domain names) and reject it if they are invalid.</p>\n\n<p>You could do all of the above in javascript, before injecting the iFrame into the page, but if javascript is off, your validation will not work, not to mention that with development tools on the client any javascript can be modified.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I operate a service where a client's content is prepared and displayed in an iframe. The client then copies a rudimentary iframe html tag and pastes it into their web page. Some clients complain that other websites are copying the iframe tag and pasting it into their sites.</p>\n\n<p>Is it possible to restrict the display of an iframe's content to a specific domain or domains? Perhaps by programmatically telling the iframe that its parent must be some-domain.com or else don't display.</p>\n\n<p>Does this make sense? I can sometimes be too verbose.</p>\n",
            "last_activity_date": 1299527016,
            "question_id": 5224286,
            "score": 9,
            "tags": [
                "javascript",
                "iframe"
            ],
            "title": "How to limit display of iframe from an external site to specific domains only"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>-> <a href=\"https://developer.mozilla.org/en/XUL/Property/selectionStart\">selectionStart</a></p>\n\n<pre><code>&lt;!doctype html&gt;\n\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset = \"utf-8\"&gt;\n\n        &lt;script type = \"text/javascript\"&gt;\n            window.addEventListener (\"load\", function () {\n                var input = document.getElementsByTagName (\"input\");\n\n                input[0].addEventListener (\"keydown\", function () {\n                    alert (\"Caret position: \" + this.selectionStart);\n\n                    // You can also set the caret: this.selectionStart = 2;\n                }, false);\n            }, false);\n        &lt;/script&gt;\n\n        &lt;style&gt;&lt;/style&gt;\n\n        &lt;title&gt;Test&lt;/title&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;input type = \"text\" /&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>We had used something like this for an old javascript application, but I haven't tested it in a couple years:</p>\n\n<pre><code>function getCaretPos(input) {\n    // Internet Explorer Caret Position (TextArea)\n    if (document.selection &amp;&amp; document.selection.createRange) {\n        var range = document.selection.createRange();\n        var bookmark = range.getBookmark();\n        var caret_pos = bookmark.charCodeAt(2) - 2;\n    } else {\n        // Firefox Caret Position (TextArea)\n        if (input.setSelectionRange)\n            var caret_pos = input.selectionStart;\n    }\n\n    return caret_pos;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The following will get you the start and end of the selection as character indices. It works for text inputs and textareas, and is slightly complicated because of IE's strange handling of line breaks.</p>\n\n<pre><code>function getInputSelection(el) {\n    var start = 0, end = 0, normalizedValue, range,\n        textInputRange, len, endRange;\n\n    if (typeof el.selectionStart == \"number\" &amp;&amp; typeof el.selectionEnd == \"number\") {\n        start = el.selectionStart;\n        end = el.selectionEnd;\n    } else {\n        range = document.selection.createRange();\n\n        if (range &amp;&amp; range.parentElement() == el) {\n            len = el.value.length;\n            normalizedValue = el.value.replace(/\\r\\n/g, \"\\n\");\n\n            // Create a working TextRange that lives only in the input\n            textInputRange = el.createTextRange();\n            textInputRange.moveToBookmark(range.getBookmark());\n\n            // Check if the start and end of the selection are at the very end\n            // of the input, since moveStart/moveEnd doesn't return what we want\n            // in those cases\n            endRange = el.createTextRange();\n            endRange.collapse(false);\n\n            if (textInputRange.compareEndPoints(\"StartToEnd\", endRange) &gt; -1) {\n                start = end = len;\n            } else {\n                start = -textInputRange.moveStart(\"character\", -len);\n                start += normalizedValue.slice(0, start).split(\"\\n\").length - 1;\n\n                if (textInputRange.compareEndPoints(\"EndToEnd\", endRange) &gt; -1) {\n                    end = len;\n                } else {\n                    end = -textInputRange.moveEnd(\"character\", -len);\n                    end += normalizedValue.slice(0, end).split(\"\\n\").length - 1;\n                }\n            }\n        }\n    }\n\n    return {\n        start: start,\n        end: end\n    };\n}\n\nvar textBox = document.getElementById(\"textBoxId\");\ntextBox.focus();\nalert( getInputSelection(textBox).start ); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>There is now a nice jQuery plugin for this: <a href=\"http://code.accursoft.com/caret/overview\" rel=\"nofollow\">Caret plugin</a></p>\n\n<p>Then you can just call <code>$(\"#myTextBox\").caret();</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I get the index of the text caret in an input?</p>\n",
            "last_activity_date": 1390991403,
            "question_id": 4928586,
            "score": 9,
            "tags": [
                "javascript",
                "html",
                "caret"
            ],
            "title": "Get caret position in HTML input?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The problem is that jQuery doesn't trigger the native <code>click</code> event for <code>&lt;a&gt;</code> elements so that navigation doesn't happen (the normal behavior of an <code>&lt;a&gt;</code>), so you need to do that manually. For almost all other scenarios, the native DOM event is triggered (at least attempted to - it's in a try/catch).</p>\n\n<p>To trigger it manually, try:</p>\n\n<pre><code>var a = $(\"&lt;a&gt;\")\n    .attr(\"href\", \"http://i.stack.imgur.com/L8rHf.png\")\n    .attr(\"download\", \"img.png\")\n    .appendTo(\"body\");\n\na[0].click();\n\na.remove();\n</code></pre>\n\n<p><strong>DEMO:</strong> <a href=\"http://jsfiddle.net/HTggQ/\">http://jsfiddle.net/HTggQ/</a></p>\n\n<p>Relevant line in current jQuery source: <a href=\"https://github.com/jquery/jquery/blob/1.11.1/src/event.js#L332\">https://github.com/jquery/jquery/blob/1.11.1/src/event.js#L332</a></p>\n\n<pre><code>if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &amp;&amp;\n        jQuery.acceptData( elem ) ) {\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>As @Ian <a href=\"http://stackoverflow.com/a/17311705/1529630\">explained</a>, the problem is that jQuery's <code>click()</code> is not the same as the native one.</p>\n\n<p>Therefore, consider using vanilla-js instead of jQuery:</p>\n\n<pre><code>var a = document.createElement('a');\na.href = \"img.png\";\na.download = \"output.png\";\ndocument.body.appendChild(a);\na.click();\ndocument.body.removeChild(a);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/azw08zt5/\" rel=\"nofollow\">Demo</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Right now I have a <code>canvas</code> and I want to save it as PNG. I can do it with all those fancy complicated file system API, but I don't really like them.</p>\n\n<p>I know if there is a link with <code>download</code> attribute on it:</p>\n\n<pre><code>&lt;a href=\"img.png\" download=\"output.png\"&gt;Download&lt;/a&gt;\n</code></pre>\n\n<p>it will download the file if the user clicks on it. Therefore I came up with this:</p>\n\n<pre><code>$(\"&lt;a&gt;\")\n    .attr(\"href\", \"img.png\")\n    .attr(\"download\", \"output.png\")\n    .appendTo(\"body\")\n    .click()\n    .remove();\n</code></pre>\n\n<blockquote>\n  <p><code>\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000</code><a href=\"http://jsfiddle.net/DerekL/Wx7wn/\"><code>http://jsfiddle.net/DerekL/Wx7wn/</code></a></p>\n</blockquote>\n\n<p>However, it doesn't seem to work. Does it have to be trigger by an user action? Or else why didn't it work?</p>\n",
            "last_activity_date": 1425599696,
            "question_id": 17311645,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "download"
            ],
            "title": "Download image with JavaScript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Yeah, you don't need to do that much; assuming I understand you correctly, you just want the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/toUTCString\"><code>toUTCString</code> method</a>.</p>\n\n<pre><code>var UTCstring = (new Date()).toUTCString();\n</code></pre>\n\n<p>However, remember that the date values you get are based on the clock of the client's machine, not your server. If you need precise values for these dates (for instance, to properly order when this or that action was done relative to another user's action), you <em>can't</em> rely on the client-side date library, anyways, and you need to calculate the dates server-side based on when the client contacted you.</p>\n\n<p>Remember as well that basically all of your client-side code can be modified by the client and malicious values returned instead, you can only guarantee the code on the server-side -- treat the client-side like a possible attacker.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>1) Dates constructed that way will use your local timezone, so your constructed date will not be correct. To the best of my knowledge, the only way to set the timezone of a certain date object is to construct it from a date string that includes the timezone. For some reason I had problems getting that to work in an older Android browser.</p>\n\n<p>2) <code>.getTime()</code> returns milliseconds, you probably want plain seconds.</p>\n\n<p>If you want a UTC/unix timestamp, <code>Math.floor((new Date()).getTime() / 1000)</code> should suffice, it will factor your current timezone offset into the result. If you prefer a string representation, then David Ellis's answer will work.</p>\n\n<p>Edit to clarify some more confusion:\n<code>new Date(Y, M, D, h, m, s)</code> treats its input as <em>local time</em>. If you pass in <em>UTC time</em>, of course you will get different results. Observe (I'm in GMT +02:00 right now, and it's 07:50):</p>\n\n<pre><code>&gt; var d1 = new Date();\n&gt; d1.toUTCString();\n\"Sun, 18 Mar 2012 05:50:34 GMT\" // two hours less than my local time, that makes sense\n&gt; Math.floor(d1.getTime()/ 1000)\n1332049834 \n\n&gt; var d2 = new Date( d1.getUTCFullYear(), d1.getUTCMonth(), d1.getUTCDate(), d1.getUTCHours(), d1.getUTCMinutes(), d1.getUTCSeconds() );\n&gt; d2.toUTCString();\n\"Sun, 18 Mar 2012 03:50:34 GMT\" // four hours less than my local time, and two hours less than the original time - because my GMT+2 input was interpreted as GMT+0!\n&gt; Math.floor(d2.getTime()/ 1000)\n1332042634\n</code></pre>\n\n<hr>\n\n<p><strong>Edit:</strong> whoever proposed an edit changing <code>getUTCDate()</code> to <code>getUTCDay()</code>, you are wrong. <code>getUTCDate()</code> returns <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCDate\"><em>the day of the month</em></a>, <code>getUTCDay()</code> returns <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCDay\"><em>the day of the week</em></a>.</p>\n\n<p>Whoever <em>approved</em> that edit within moments of it showing up, shame on you.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>You could also do it utilizing getTimezoneOffset and getTime,</p>\n\n<pre><code>x = new Date()\nvar UTCseconds = (x.getTime() + x.getTimezoneOffset()*60*1000)/1000;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I actually think Date values in js are far better than say the C# DateTime objects. The C# DateTime objects have a Kind property, but no strict underlying time zone as such, and time zone conversions are difficult to track if you are converting between two non UTC and non local times. In js, all Date values have an underlying UTC value which is passed around and known regardless of the offest or time zone conversions that you do. My biggest complaint about the Date object is the amount of undefined behaviour that browser implementers have chosen to include, which can confuse people who attack dates in js with trial and error than reading the spec. Using something like iso8601.js solves this varying behaviour by defining a single implementation of the Date object.</p>\n\n<p>By default, the spec says you can create dates with an extended ISO 8601 date format like</p>\n\n<pre><code>var someDate = new Date('2010-12-12T12:00Z');\n</code></pre>\n\n<p>So you can infer the exact UTC time this way. </p>\n\n<p>When you want to pass the Date value back to the server you would call</p>\n\n<pre><code>someDate.toISOString();\n</code></pre>\n\n<p>or if you would rather work with a millisecond timestamp (number of milliseconds from the 1st January 1970 UTC)</p>\n\n<pre><code>someDate.getTime();\n</code></pre>\n\n<p>ISO 8601 is a standard. You can't be confused about what a date string means if you include the date offset. What this means for you as a developer is that you <strong>never have to deal with local time conversions yourself</strong>. The local time values exist purely for the benefit of the user, and date values by default display in their local time. All the local time manipulations allow you to display something sensible to the user and to convert strings from user input. It's good practice to convert to UTC as soon as you can, and the js Date object makes this fairly trivial.</p>\n\n<p>On the downside there is not a lot of scope for forcing the time zone or locale for the client (that I am aware of), which can be annoying for website-specific settings, but I guess the reasoning behind this is that it's a user configuration that shouldn't be touched.</p>\n\n<p>So, in short, the reason there isn't a lot of native support for time zone manipulation is because you simply don't want to be doing it.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>EDIT: The code below does NOT work. I was always assuming that new Date().getTime() returned the number of seconds since the 1st of January 1970 IN THE CURRENT TIMEZONE. This is not the case: getTime() returns the number of seconds in UTC. So, the code below does gross over-adjusting. Thank you everybody!]</p>\n\n<p>First of all, thank you for your fantastic insights.\nI guess my question had the wrong title... it should have been \"Get the UTC Unix Timestamp for an existing date\".</p>\n\n<p>So, if I have a date object:</p>\n\n<pre><code>var d = new Date(2009,01,31)\n</code></pre>\n\n<p>I was after a function that would tell me \"The UTC Unix Timestamp\".</p>\n\n<p>This function seems to be the real trick:</p>\n\n<pre><code>Date.prototype.getUTCUnixTime =  function (){\n  return Math.floor( new Date(\n    this.getUTCFullYear(),\n    this.getUTCMonth(),\n    this.getUTCDate(),\n    this.getUTCHours(),\n    this.getUTCMinutes(), \n    this.getUTCSeconds()\n  ).getTime() / 1000); \n}\n</code></pre>\n\n<p>Note that it works on \"this\"  This means that I can do:</p>\n\n<pre><code>var n = new Date(2008,10,10)\n...\n...\n\nn.getUTCUnixTime();\n</code></pre>\n\n<p>And get the number of seconds since the 1st of Jan 1970 in Unix time.\nRight?</p>\n\n<p>It's a little insane, to me, that Javascript stores everything in UTC times, but then in order to get that number I have to create a new Date object passing the individual UTC getters and then finally call getTime() for that...</p>\n\n<p>Merc.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I am amazed at how complex this question has become.</p>\n\n<p>These are all identical, and their integer values all === EPOCH time :D</p>\n\n<pre><code>console.log((new Date()).getTime() / 1000, new Date().valueOf() / 1000, (new Date() - new Date().getTimezoneOffset() * 60 * 1000) / 1000);\n</code></pre>\n\n<p>Do not believe me, checkout:\n<a href=\"http://www.epochconverter.com/\" rel=\"nofollow\">http://www.epochconverter.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You generally don't need to do much of \"Timezone manipulation\" on the client side. As a rule I try to store and work with UTC dates, in the form of <code>ticks</code> or \"<em>number of milliseconds since midnight of January 1, 1970</em>.\" This really simplifies storage, sorting, calculation of offsets, and most of all, rids you of the headache of the \"Daylight Saving Time\" adjustments. Here's a little JavaScript code that I use.</p>\n\n<p>To get the current UTC time:</p>\n\n<pre><code>function getCurrentTimeUTC()\n{\n    //RETURN:\n    //      = number of milliseconds between current UTC time and midnight of January 1, 1970\n    var tmLoc = new Date();\n    //The offset is in minutes -- convert it to ms\n    return tmLoc.getTime() + tmLoc.getTimezoneOffset() * 60000;\n}\n</code></pre>\n\n<p>Then what you'd generally need is to format date/time for the end-user for their <em>local</em> timezone and format. The following takes care of all the complexities of date and time formats on the client computer:</p>\n\n<pre><code>function formatDateTimeFromTicks(nTicks)\n{\n    //'nTicks' = number of milliseconds since midnight of January 1, 1970\n    //RETURN:\n    //      = Formatted date/time\n    return new Date(nTicks).toLocaleString();\n}\n\nfunction formatDateFromTicks(nTicks)\n{\n    //'nTicks' = number of milliseconds since midnight of January 1, 1970\n    //RETURN:\n    //      = Formatted date\n    return new Date(nTicks).toLocaleDateString();\n}\n\nfunction formatTimeFromTicks(nTicks)\n{\n    //'nTicks' = number of milliseconds since midnight of January 1, 1970\n    //RETURN:\n    //      = Formatted time\n    return new Date(nTicks).toLocaleTimeString();\n}\n</code></pre>\n\n<p>So the following example:</p>\n\n<pre><code>var ticks = getCurrentTimeUTC();  //Or get it from the server\n\nvar __s = \"ticks=\" + ticks + \n    \", DateTime=\" + formatDateTimeFromTicks(ticks) +\n    \", Date=\" + formatDateFromTicks(ticks) +\n    \", Time=\" + formatTimeFromTicks(ticks);\n\ndocument.write(\"&lt;span&gt;\" + __s + \"&lt;/span&gt;\");\n</code></pre>\n\n<p>Returns the following (for my U.S. English locale):</p>\n\n<blockquote>\n  <p>ticks=1409103400661, DateTime=8/26/2014 6:36:40 PM, Date=8/26/2014,\n  Time=6:36:40 PM</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>While writing a web application, it makes sense to store (server side) <em>all</em> datetimes in the DB as UTC timestamps.</p>\n\n<p>I was astonished when I noticed that you couldn't natively do much in terms of Timezone manipulation in Javascript.</p>\n\n<p>I extended the Date object a little. Does this function make sense? Basically, every time I send anything to the server, it's going to be a timestamp formatted with this function...</p>\n\n<p>Can you see any major problems here? Or maybe a solution from a different angle?</p>\n\n<pre><code>Date.prototype.getUTCTime = function(){ \n  return new Date(\n    this.getUTCFullYear(),\n    this.getUTCMonth(),\n    this.getUTCDate(),\n    this.getUTCHours(),\n    this.getUTCMinutes(), \n    this.getUTCSeconds()\n  ).getTime(); \n}\n</code></pre>\n\n<p>It just seems a little convoluted to me. And I am not so sure about performance either...</p>\n\n<p>Thanks!</p>\n\n<p>Merc.</p>\n",
            "last_activity_date": 1409079098,
            "question_id": 9756120,
            "score": 24,
            "tags": [
                "javascript",
                "timezone",
                "utc"
            ],
            "title": "How do I get a UTC Timestamp in JavaScript?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>Why don't you try jQuery.</p>\n\n<p><a href=\"http://docs.jquery.com/Traversing\" rel=\"nofollow\">jQuery Traverse API reference</a></p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>As far as I know, the <code>NodeList</code> type is immutable (see <a href=\"http://www.xul.fr/en/dom/nodelist.php\" rel=\"nofollow\">this article</a> for example), which means you'll have to generate your own object.</p>\n\n<p>A simple method would just be to create an array and copy all the elements into that array.</p>\n\n<pre><code>var inputs = documentElement.getElementsByTagName('input');\nvar selects = document.getElementsByTagName('select');\nvar all = new Array(inputs.length + selects.length);\n\nvar index = 0;\nfor (i = 0; i &lt; inputs.length; i++)\n    all[index++] = inputs[i];\nfor (i = 0; i &lt; selects.length; i++)\n    all[index++] = selects[i];\n</code></pre>\n\n<p>The <code>all</code> variable then contains the union of the two sets of nodes.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>First, I thought that this is possible to concat arrays using Array.prototype, like this:</p>\n\n<pre><code>Array.prototype.concat.call(selects, inputs);\n</code></pre>\n\n<p>But it doesn't work, so that I've made an arrays from node collections and concat it. Looks like that:</p>\n\n<pre><code>(function () {\n\n    var inputs = document.getElementsByTagName('input'),\n        selects = document.getElementsByTagName('select'),\n        result,\n        i,\n        node;\n\n    function convert (collection) {\n        var a = [];\n        for (var i = 0, length = collection.length; i &lt; length; i++) {\n            a.push(collection[i]);\n        }\n        return a;\n    }\n\n    // concatenation &amp;&amp; convertation\n    result = Array.prototype.concat(convert(inputs), convert(selects));\n    // traversing\n    i = result.length;\n    while(node = result[--i]) {\n        alert(node.getAttribute('name'));\n    }\n\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can't join them, but you can still loop through them sequentially in one loop like this:</p>\n\n<pre><code>for ( var i = 0; i &lt; inputs.length + selects.length; i++ ) {\n    var element = ( i &lt; inputs.length ) ? inputs[i] : selects[i-inputs.length];\n}\n</code></pre>\n\n<p>Alternatively, using jQuery, you could select them all in one go:</p>\n\n<pre><code>$('input, select')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Seems like you can use the same Array.prototype.slice.call that makes the args array-like object become an array. (<a href=\"http://stackoverflow.com/questions/499814/recursively-concatenating-a-javascript-functions-arguments\">See here</a>)</p>\n\n<pre><code>var inputs = document.getElementsByTagName('input');\nvar selects = document.getElementsByTagName('select');\n\ninputs = Array.prototype.slice.call(inputs);\nselects = Array.prototype.slice.call(selects);\n\nvar res = inputs.concat(selects);\n\nalert(res.length);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<pre><code>document.querySelectorAll(\"input, select\"); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I threw this together. There might be a bit of overhead from doing an <em>if</em> and <em>.length</em> for every loop, but I think its minor unless the number of elements get extreme.</p>\n\n<pre><code>inputs = div.getElementsByTagName('input');\nselects = div.getElementsByTagName('select');\nfor (i=0; i&lt;inputs.length+selects.length; i++) {\n    element = (i&lt;inputs.length ? inputs[i] : selects[i-inputs.length]);\n\n    // do whatever with element\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>My short code for bookmarklets:</p>\n\n<pre><code>var e, t = d.getElementsByTagName('textarea'), u = d.getElementsByTagName('input'), i = t.length;\n    while(e = (i &gt; 0) ? t[--i] : u[-i--]){ if(e.offsetHeight &gt; 0)... }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>function mergeNodeLists(a, b) {\n  var slice = Array.prototype.slice;\n  return slice.call(a).concat(slice.call(b));\n}\n</code></pre>\n\n<p><code>console.log( mergeNodeLists( inputs, selects ) ); // =&gt; [input, select]</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Nowadays I would definitely use the following:</p>\n\n<p>Chrome, Firefox 3.5+, IE8+</p>\n\n<pre><code>var elements = document.querySelectorAll('a');\n\nfor (var i = 0, element; (element = elements[i]); i++) {\n    console.log(element);\n}\n</code></pre>\n\n<p>IE11+, Firefox 24+, Chrome 30+ (with experiments enabled)</p>\n\n<pre><code>let elements = document.querySelectorAll('a');\n\nfor (let i = 0, element; (element = elements[i]); i++) {\n    console.log(element);\n}\n</code></pre>\n\n<p>\"element = elements[i]\" is preferred over \"elements.length\" since:</p>\n\n<p>\"Node lists are often implemented as node iterators with a filter. This means that getting a property like length is O(n), and iterating over the list by re-checking the length will be O(n^2).\"</p>\n\n<p>Unlike array access, which is as far as I remember O(1).</p>\n\n<p>More details:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document.querySelectorAll\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/Document.querySelectorAll</a></li>\n<li><a href=\"http://kangax.github.io/es5-compat-table/es6/\" rel=\"nofollow\">http://kangax.github.io/es5-compat-table/es6/</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Array.prototype.slice.call() fails in IE 7, use this:</p>\n\n<pre><code>Object.prototype.getMyElements = function(tags){\n    tags = tags.split(',');\n    var i, j, col=[], ci=0;\n    for(i=0; i&lt;tags.length; i++) {\n        var objs = this.getElementsByTagName(tags[i]);\n        for(j=0; j&lt;objs.length; j++) col[ci++] = objs[j];\n    }\n    return col;\n}\nvar objs = document.getMyElements('INPUT,TEXTAREA');\nvar objs = document.getElementById('myform').getMyElements('INPUT,TEXTAREA');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>try my way:</p>\n\n<pre><code> var allES = [];\n var inputs = document.getElementsByTagName(\"input\");\n        for (i = 0; i &lt; inputs.length; i++) {\n              allES.push(inputs[i]);\n            }\n    // gather SELECT elements\n         var selects = document.getElementsByTagName(\"select\");\n            for ( i=0; i &lt; selects.length; i++){\n                allES.push(selects[i]);\n                }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>is there a way to join 2 NodeLists returned by 2 calls of document.getElementsByTagName?</p>\n\n<p>Say, I have the following code</p>\n\n<pre><code>var inputs = documentElement.getElementsByTagName('input');\nvar selects = document.getElementsByTagName('select');\n</code></pre>\n\n<p>I want to loop through the results. Is it possible in one loop?</p>\n\n<p>Thank you in advance!</p>\n",
            "last_activity_date": 1424779551,
            "question_id": 914783,
            "score": 22,
            "tags": [
                "javascript",
                "dom",
                "concat",
                "nodelist"
            ],
            "title": "JavaScript NodeList"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>in you aspx file  you should put the first line as this : </p>\n\n<pre><code>&lt;%@ Page EnableEventValidation=\"false\" %&gt;\n</code></pre>\n\n<p>if you already have something like  <code>&lt;%@ Page</code>  so just add the rest => <code>EnableEventValidation=\"false\" %&gt;</code></p>\n\n<p>I recommend not to do it.</p>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>If you look at the first lines of text you can glean what your error is.  </p>\n\n<blockquote>\n  <p><strong>this feature verifies that arguments to postback or callback events originate from the server control that originally rendered them</strong></p>\n</blockquote>\n\n<p>You're dynamically editing the lstProblems dropdown, so when you post back ASP.NET says \"Warning!  Invalid entries in the dropdown!\" and freaks out throwing that error.  You have to determine if turning off event validation is an OK solution, but I would research it before doing it, since the idea behind it is to make your site more secure for free.</p>\n\n<p>Here's another stackoverflow answer that does a much better job explaining what to do than me:\n<a href=\"http://stackoverflow.com/questions/228969/invalid-postback-or-callback-argument-event-validation-is-enabled-using-pages\">Invalid postback or callback argument.  Event validation is enabled using &#39;&lt;pages enableEventValidation=&quot;true&quot;/&gt;&#39;</a></p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Ah its unfortunate. Since you add them essentially client side asp.net blows up. It is also unfortunate you'd have to turn off EventValidation as there are some important protections that helps (for instance evil injection into drop down boxes).\nThe other alternative is to make your own composite control, which of course here seems a bit more than the effort involved. I'd prob turn off event validation too but be very careful that you don't trust any values from the page that could be used in a bad manner by simply changing them - like hidden keys, sql injection through combo boxes, etc.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I had this same problem with a datalist I\"m dynamically binding, adding EnableViewState=\"false\" quieted the error message. I figure if I'm binding programmatically, then the control is being populated on each post back, the view state doesn't have to be maintained if it may or may not change on each call back, that's why I'm dynamically binding it, lol.  </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I had the same problem, two list boxes and two buttons.</p>\n\n<p>The data in the list boxes was being loaded from a database and you could move items between boxes by clicking the buttons.</p>\n\n<p>I was getting an invalid postback.</p>\n\n<p>turns out that it was the data had carriage return line feeds in it which you cannot see when displayed in the list box.</p>\n\n<p>worked fine in every browser except IE 10 and IE 11.</p>\n\n<p>Remove the carriage return line feeds and all works fine.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you have code in your Page_Load() event. Try adding this:</p>\n\n<pre><code>if (!Page.IsPostBack)\n{ \n//your code here \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>if you change <code>UseSubmitBehavior=\"True\"</code> to  <code>UseSubmitBehavior=\"False\"</code> your problem will be solved.</p>\n\n<pre><code>&lt;asp:Button ID=\"BtnDis\" runat=\"server\" CommandName=\"BtnDis\" CommandArgument='&lt;%#Eval(\"Id\")%&gt;' Text=\"Discription\" CausesValidation=\"True\" UseSubmitBehavior=\"False\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>i am getting this error:</p>\n\n<pre><code>Server Error in '/' Application.\n\nInvalid postback or callback argument.  Event validation is enabled using &lt;pages enableEventValidation=\"true\"/&gt; in configuration or &lt;%@ Page EnableEventValidation=\"true\" %&gt; in a page.  For security purposes, this feature verifies that arguments to postback or callback events originate from the server control that originally rendered them.  If the data is valid and expected, use the ClientScriptManager.RegisterForEventValidation method in order to register the postback or callback data for validation.\n\nDescription: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code. \n\nException Details: System.ArgumentException: Invalid postback or callback argument.  Event validation is enabled using &lt;pages enableEventValidation=\"true\"/&gt; in configuration or &lt;%@ Page EnableEventValidation=\"true\" %&gt; in a page.  For security purposes, this feature verifies that arguments to postback or callback events originate from the server control that originally rendered them.  If the data is valid and expected, use the ClientScriptManager.RegisterForEventValidation method in order to register the postback or callback data for validation.\n\nSource Error: \n\nAn unhandled exception was generated during the execution of the current web request. Information regarding the origin and location of the exception can be identified using the exception stack trace below.\n\nStack Trace: \n\n\n[ArgumentException: Invalid postback or callback argument.  Event validation is enabled using &lt;pages enableEventValidation=\"true\"/&gt; in configuration or &lt;%@ Page EnableEventValidation=\"true\" %&gt; in a page.  For security purposes, this feature verifies that arguments to postback or callback events originate from the server control that originally rendered them.  If the data is valid and expected, use the ClientScriptManager.RegisterForEventValidation method in order to register the postback or callback data for validation.]\n   System.Web.UI.ClientScriptManager.ValidateEvent(String uniqueId, String argument) +8627417\n   System.Web.UI.WebControls.ListBox.LoadPostData(String postDataKey, NameValueCollection postCollection) +360\n   System.Web.UI.WebControls.ListBox.System.Web.UI.IPostBackDataHandler.LoadPostData(String postDataKey, NameValueCollection postCollection) +13\n   System.Web.UI.Page.ProcessPostData(NameValueCollection postData, Boolean fBeforeLoad) +346\n   System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint) +1743\n\nVersion Information: Microsoft .NET Framework Version:2.0.50727.3623; ASP.NET Version:2.0.50727.3618\n</code></pre>\n\n<p>what does it mean?</p>\n\n<p>here is my code:</p>\n\n<pre><code>&lt;%@ Page EnableEventValidation=\"true\" Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"WebForm1.aspx.cs\" Inherits=\"EnterData.DataEntry.WebForm1\" %&gt;\n\n\n&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" &gt;\n&lt;head runat=\"server\"&gt;\n    &lt;title&gt;&lt;/title&gt;\n\n\n    &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    &lt;script src=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/jquery-ui.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n\n\n    &lt;link href=\"../niceforms/niceforms-default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n    &lt;script src=\"../niceforms/niceforms.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n\n    &lt;link href=\"../jquery-ui-1.8.16.custom.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n    &lt;style type=\"text/css\"&gt;\n        .list-problems {\n        height:600px !important;\n        width:200px !important;\n        display:inline-block;\n    }\n    &lt;/style&gt;\n\n\n\n    &lt;script&gt;\n        jQuery(function($) {\n        //$(\"#occurrence_dateTextBox\").mask(\"99/99/9999\");\n        //$(\"#&lt;%= report_dateTextBox.ClientID %&gt;\").mask(\"99/99/9999\");\n        $(\"#&lt;%= occurrence_dateTextBox.ClientID %&gt;\").datepicker();\n        $(\"#&lt;%= report_dateTextBox.ClientID %&gt;\").datepicker();\n        //$(\".datepicker\").datepicker(); \n\n    });\n    $(function() {\n        $.get('../file.txt', function(data) {\n            var output = data.split('\\n'),\n            tmp = '';\n            for (i = 0; i &lt; output.length; i++) {\n                tmp += '&lt;option value=' + output[i] + '&gt;' + output[i] + '&lt;/option&gt;';\n            }\n            $('#lstProblems').html(tmp);\n\n        });\n    });\n\n    $(function() {\n        $(\"select\").multiselect();\n    });\n\n\n    function getselectedproblems() {\n        var selectedLanguages = new Array();\n        jQuery('#lstProblems option:selected').each(function() {\n            selectedLanguages.push(jQuery(this).val());\n        });\n    }\n\n    &lt;/script&gt;\n\n\n\n&lt;/head&gt;\n&lt;body&gt;&lt;div id=\"container\"&gt;\n    &lt;form id=\"form1\" runat=\"server\" class=\"niceform\"&gt;\n\n        &lt;fieldset&gt;\n\n        &lt;legend&gt;Section A&lt;/legend&gt;\n\n        &lt;dl&gt;\n\n            &lt;dt&gt;&lt;label for=\"occurrence_dateTextBox\" &gt;Occurrence Date:&lt;/label&gt;&lt;/dt&gt;\n            &lt;dd&gt;&lt;asp:TextBox ID=\"occurrence_dateTextBox\" runat=\"server\" size=\"50\"/&gt;&lt;/dd&gt;\n        &lt;/dl&gt;\n\n        &lt;dl&gt;\n\n            &lt;dt&gt;&lt;label for=\"report_dateTextBox\"&gt;Report Date:&lt;/label&gt;&lt;/dt&gt;\n            &lt;dd&gt;&lt;asp:TextBox ID=\"report_dateTextBox\" runat=\"server\" size=\"50\"/&gt;&lt;/dd&gt;\n        &lt;/dl&gt;\n\n\n        &lt;dl&gt;\n\n            &lt;dt&gt;&lt;label for=\"spec_idTextBox\"&gt;Specimen ID:&lt;/label&gt;&lt;/dt&gt;\n            &lt;dd&gt;&lt;asp:TextBox ID=\"spec_idTextBox\" runat=\"server\" size=\"50\"/&gt;&lt;/dd&gt;\n        &lt;/dl&gt;\n\n        &lt;dl&gt;\n\n            &lt;dt&gt;&lt;label for=\"batch_idTextBox\"&gt;Batch ID:&lt;/label&gt;&lt;/dt&gt;\n            &lt;dd&gt;&lt;asp:TextBox ID=\"batch_idTextBox\" runat=\"server\" size=\"50\"/&gt;&lt;/dd&gt;\n        &lt;/dl&gt;\n\n        &lt;dl&gt;\n\n            &lt;dt&gt;&lt;label for=\"report_byTextBox\"&gt;Report By:&lt;/label&gt;&lt;/dt&gt;\n            &lt;dd&gt;&lt;asp:TextBox ID=\"report_byTextBox\" runat=\"server\" size=\"50\"/&gt;&lt;/dd&gt;\n        &lt;/dl&gt;\n\n        &lt;dl&gt;\n\n            &lt;dt&gt;&lt;label for=\"identified_byTextBox\"&gt;Identified ID:&lt;/label&gt;&lt;/dt&gt;\n            &lt;dd&gt;&lt;asp:TextBox ID=\"identified_byTextBox\" runat=\"server\" size=\"50\"/&gt;&lt;/dd&gt;\n        &lt;/dl&gt;\n\n        &lt;/fieldset&gt;\n\n        &lt;fieldset&gt;\n        &lt;legend&gt;Section B&lt;/legend&gt;\n\n        &lt;dl&gt;\n\n            &lt;dt&gt;&lt;label for=\"problemTextBox\"&gt;Problem:&lt;/label&gt;&lt;/dt&gt;\n            &lt;dd&gt;&lt;asp:TextBox ID=\"problemTextBox\" runat=\"server\" size=\"50\"/&gt;&lt;/dd&gt;\n\n\n        &lt;/dl&gt;\n\n        &lt;dl&gt;\n            &lt;dt&gt;&lt;label for=\"lstProblems\"&gt;Problems List:&lt;/label&gt;&lt;/dt&gt;\n            &lt;dd&gt;\n                &lt;asp:ListBox ID=\"lstProblems\" runat=\"server\" SelectionMode=\"Multiple\" CssClass=\"list-problems\"&gt;&lt;/asp:ListBox&gt;\n            &lt;/dd&gt;\n\n        &lt;/dl&gt;  \n\n        &lt;dl&gt;\n                &lt;dd&gt;&lt;select size=\"8\" multiple=\"true\" &gt;\n                &lt;optgroup label=\"Europe\"&gt;\n                    &lt;option&gt;United Kingdom&lt;/option&gt;\n                    &lt;option&gt;Luxembourg&lt;/option&gt;\n                &lt;/optgroup&gt;    \n                &lt;optgroup label=\"Asia\"&gt;\n                    &lt;option&gt;India&lt;/option&gt;\n                    &lt;option&gt;Dubai&lt;/option&gt;\n                &lt;/optgroup&gt;\n            &lt;/select&gt; &lt;/dd&gt;    \n        &lt;/dl&gt;\n        &lt;dl&gt;\n            &lt;asp:ListBox ID=\"ListBox1\" runat=\"server\" DataSourceID=\"SqlDataSource1\" \n                DataTextField=\"batch\" DataValueField=\"batch\" SelectionMode=\"Multiple\" \n                Height=\"100px\" Width=\"329px\"&gt;&lt;/asp:ListBox&gt;\n            &lt;asp:SqlDataSource ID=\"SqlDataSource1\" runat=\"server\" \n                ConnectionString=\"&lt;%$ ConnectionStrings:LOM %&gt;\" \n                SelectCommand=\"SELECT [batch] FROM [lom_batch]\"&gt;&lt;/asp:SqlDataSource&gt;\n        &lt;/dl&gt;\n\n\n\n        &lt;/fieldset&gt;\n\n        &lt;fieldset&gt;\n        &lt;legend&gt;Section C&lt;/legend&gt;\n        &lt;dl&gt;\n\n            &lt;dt&gt;&lt;label for=\"section_c_issue_error_identified_byTextBox\"&gt;Issue/Error Identified By:&lt;/label&gt;&lt;/dt&gt;\n            &lt;dd&gt;&lt;asp:TextBox ID=\"section_c_issue_error_identified_byTextBox\" runat=\"server\" size=\"50\"/&gt;&lt;/dd&gt;\n\n\n        &lt;/dl&gt;\n\n        &lt;dl&gt;\n\n            &lt;dt&gt;&lt;label for=\"section_c_commentsTextBox\"&gt;Comments:&lt;/label&gt;&lt;/dt&gt;\n            &lt;dd&gt;&lt;asp:TextBox ID=\"section_c_commentsTextBox\" runat=\"server\" size=\"50\"/&gt;&lt;/dd&gt;\n\n\n        &lt;/dl&gt;       \n\n        &lt;/fieldset&gt;\n\n        &lt;fieldset&gt;\n        &lt;legend&gt;Section D&lt;/legend&gt;\n        &lt;dl&gt;\n\n            &lt;dt&gt;&lt;label for=\"section_d_investigationTextBox\"&gt;Investigation:&lt;/label&gt;&lt;/dt&gt;\n            &lt;dd&gt;&lt;asp:TextBox ID=\"section_d_investigationTextBox\" runat=\"server\" size=\"50\"/&gt;&lt;/dd&gt;\n\n\n        &lt;/dl&gt;\n\n        &lt;/fieldset&gt;\n\n        &lt;fieldset&gt;\n        &lt;legend&gt;Section E&lt;/legend&gt;\n        &lt;dl&gt;\n\n            &lt;dt&gt;&lt;label for=\"section_e_corrective_actionTextBox\"&gt;Corrective Action:&lt;/label&gt;&lt;/dt&gt;\n            &lt;dd&gt;&lt;asp:TextBox ID=\"section_e_corrective_actionTextBox\" runat=\"server\" height=\"200\" TextMode=\"MultiLine\" size=\"50\"/&gt;&lt;/dd&gt;\n\n\n        &lt;/dl&gt;\n\n\n        &lt;/fieldset&gt;\n\n        &lt;fieldset&gt;\n        &lt;legend&gt;Section F&lt;/legend&gt;\n        &lt;dl&gt;\n\n            &lt;dt&gt;&lt;label for=\"section_f_commentsTextBox\"&gt;Comments:&lt;/label&gt;&lt;/dt&gt;\n            &lt;dd&gt;&lt;asp:TextBox ID=\"section_f_commentsTextBox\" runat=\"server\" size=\"50\"/&gt;&lt;/dd&gt;\n\n\n        &lt;/dl&gt;\n\n        &lt;/fieldset&gt;\n\n        &lt;fieldset&gt;\n        &lt;legend&gt;Pre-Analytical&lt;/legend&gt;\n        &lt;dl&gt;\n\n            &lt;dt&gt;&lt;label for=\"prePracticeCodeTextBox\"&gt;Practice Code:&lt;/label&gt;&lt;/dt&gt;\n            &lt;dd&gt;&lt;asp:TextBox ID=\"prePracticeCodeTextBox\" runat=\"server\" Visible=\"false\"/&gt;&lt;/dd&gt;\n\n\n        &lt;/dl&gt;\n\n        &lt;dl&gt;\n\n            &lt;dt&gt;&lt;label for=\"preContactTextBox1\"&gt;Contact:&lt;/label&gt;&lt;/dt&gt;\n\n            &lt;dd&gt;&lt;asp:TextBox ID=\"preContactTextBox\" runat=\"server\" Visible=\"false\"/&gt;&lt;/dd&gt;\n\n\n        &lt;/dl&gt;\n\n        &lt;dl&gt;\n            &lt;dt&gt;&lt;label for=\"CheckBox1\"&gt;PreAnalytical?&lt;/label&gt;&lt;/dt&gt;\n            &lt;dd&gt; &lt;asp:CheckBox ID=\"CheckBox1\" runat=\"server\" CausesValidation=\"false\"\n                            Visible=\"true\" AutoPostBack=\"true\" OnCheckChanged=\"CheckBox1_CheckedChanged\"/&gt;&lt;/dd&gt;\n        &lt;/dl&gt;\n\n\n        &lt;/fieldset&gt;\n\n\n\n        &lt;asp:Button ID=\"Button1\" runat=\"server\" Text=\"Button\" OnClick=\"SubmitData\"  OnClientClick=\"JSfunction()\"/&gt;\n\n\n    &lt;/form&gt;\n\n\n&lt;/div&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>what am i doing wrong? </p>\n\n<p>i am getting this error after i press the submit button</p>\n\n<p>thanks so much for any help!</p>\n",
            "last_activity_date": 1416903584,
            "question_id": 7476329,
            "score": 17,
            "tags": [
                "c#",
                "javascript",
                "asp.net",
                "html"
            ],
            "title": "asp.net: Invalid postback or callback argument"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>According to <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=565541\">this bug report</a>, this is a new feature, not a bug. Specifically:</p>\n\n<blockquote>\n  <p>Two rules:</p>\n  \n  <ol>\n  <li>Can't resize a window/tab that hasn't been created by window.open.</li>\n  <li>Can't resize a tab if the tab is in a window with more than one tab.</li>\n  </ol>\n</blockquote>\n\n<p>If I understand this \"fix\" correctly, you can resize only your own popup windows, not the main window.</p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>I'm trying to create a bookmarklet to do some very specific resizing to do browser size testing, and I can't seem to get the web browser to resize using <code>window.resizeTo</code>.</p>\n\n<p>Overly simplified example that doesn't work:</p>\n\n<pre><code>javascript:window.resizeTo(1024,600);\n</code></pre>\n\n<p>I can understand that browsers might have disabled this feature, but here's a screenshot of my JavaScript Settings in Firefox:</p>\n\n<p><img src=\"http://i.stack.imgur.com/ny9rp.png\" alt=\"Advanced JavaScript Settings clearly displaying the &quot;Move or resize existing windows&quot; option as checked\"></p>\n\n<p>Am I missing something obvious or should I file a bug report?</p>\n",
            "last_activity_date": 1317324229,
            "question_id": 7602078,
            "score": 16,
            "tags": [
                "javascript",
                "window-resize",
                "firefox7"
            ],
            "title": "Javascript&#39;s `window.resizeTo` isn&#39;t working"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You could simply keep on checking if the background colour is still the same, and then do your thing if ever it changes.</p>\n\n<pre><code>oldbackground=getbackground()\nfunction checkbackground(){\n    if(oldbackground!=getbackground()){\n        oldbackground=getbackground()\n        //Do your thing\n    }\n}\nsetInterval(checkbackground,100)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Rather than creating a new link element and appending it to the head, you could retrieve the contents of the stylesheet with an AJAX call, and insert it into an inline style block. That way, you can use jQuery's 'complete' callback to fire off your check.</p>\n\n<pre><code>$('#theme-selector a').click(function(){\n  var path = $(this).attr('href');\n  $.get(path, function(response){\n   //Check if the user theme element is in place - if not, create it.\n   if (!$('#userTheme').length) $('head').append('&lt;style id=\"userTheme\"&gt;&lt;/style&gt;');\n\n   //populate the theme element with the new style (replace the old one if necessary)\n   $('#userTheme').text(response);\n\n  //Check whatever you want about the new style:\n  alert($('body').css('background-color'));\n  });\n});\n</code></pre>\n\n<p>I haven't actually tested this code, so there may be some syntax-y errors, but the logic should be sound enough.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>The load event can be watched for any element associated with a url, does this not work for you when loading the css stylesheet? <a href=\"http://api.jquery.com/load-event/\">http://api.jquery.com/load-event/</a></p>\n\n<p>Try something like this:</p>\n\n<pre><code>var path = $(this).attr('href');\n$('head link').remove();\nvar styleSheet = $('&lt;link type=\"text/css\" href=\"'+path+'\" rel=\"stylesheet\" /&gt;');\nstyleSheet.load(function(){alert(\"Loaded\");});\n$('head').append(styleSheet);\n</code></pre>\n\n<p><strong>Edit:</strong> As pointed out below this only works in IE, who would have thought?</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<pre><code>var cssLoaded = function()\n{\n    alert($('body').css('background-color'));\n};\n$('#theme-selector a').click(function(){\n   var path = $(this).attr('href');\n   $('head link').remove();\n   $('head').append('&lt;link onload=\"cssLoaded();\" type=\"text/css\" href=\"'+path+'\" rel=\"stylesheet\" /&gt;');\n   return false;\n});\n</code></pre>\n\n<p>successfully tested in Chrome 28, IE 10, FF22</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use <a href=\"https://github.com/rgrove/lazyload/\" rel=\"nofollow\">lazyload</a> (jQuery plugin) to load a css file.\nIt has the ability to call a function when the file is included.</p>\n\n<p>Example:</p>\n\n<pre><code>// Load a CSS file and pass an argument to the callback function.\nLazyLoad.css('foo.css', function (arg) {\n  // put your code here\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a couple of links on my page (inside a <code>&lt;div id=\"theme-selector\"&gt;</code>) which allow you to change the CSS stylesheets:</p>\n\n<pre><code>$('#theme-selector a').click(function(){\n  var path = $(this).attr('href');\n  $('head link').remove();\n  $('head').append('&lt;link type=\"text/css\" href=\"'+path+'\" rel=\"stylesheet\" /&gt;');\n  return false;\n});\n</code></pre>\n\n<p>Now, after I've changed the style on the page, I want to get the new background color, using the following code (which I put after the <code>$('head').append</code> call):</p>\n\n<pre><code>var bgcolor = $('body').css('background-color');\nalert(bgcolor); \n</code></pre>\n\n<p>The problem is, I think, that it takes some time for the browser to download the new stylesheet and I sometimes get the old background color in my alert message. Is there some event I can bind that will only alert me after all the stylesheets are loaded on the page?</p>\n\n<p>At the moment, all I can think of is using a <code>setTimeout(function(){}, 5000);</code> which isn't great, because what if it takes longer/shorter to load all the CSS on the page.</p>\n\n<p>Let me know if I need to clarify anything and I can provide more code.</p>\n",
            "last_activity_date": 1399273431,
            "question_id": 2571164,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "events",
                "javascript-events"
            ],
            "title": "jQuery event that triggers after CSS is loaded?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It's a tilde and it is the bitwise NOT operator.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>~ is a bitwise NOT operator. It will invert the bits that make up the value of the stored variable.</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Bitwise_operations_in_C#Bitwise_NOT_.22.7E.22_.2F_one.27s_complement_.28unary.29\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Bitwise_operations_in_C#Bitwise_NOT_.22.7E.22_.2F_one.27s_complement_.28unary.29</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It is a <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/operators/bitwise_operators\">bitwise NOT</a>.</p>\n\n<p>Most common use I've seen is a <strong>double bitwise NOT</strong>, for removing the decimal part of a number, e.g:</p>\n\n<pre><code>var a = 1.2;\n~~a; // 1\n</code></pre>\n\n<p>Why not use <code>Math.floor</code>? The trivial reason is that it is faster and uses fewer bytes. The more important reason depends on how you want to treat negative numbers. Consider:</p>\n\n<pre><code>var a = -1.2;\nMath.floor(a); // -2\n~~a; // -1\n</code></pre>\n\n<p>So, use <code>Math.floor</code> for <strong>rounding down</strong>, use <code>~~</code> for <strong>chopping off</strong> <sup>(not a technical term)</sup>.</p>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>I can't google the ~ operator to find out more about it. Can someone please explain to me in simple words what it is for and how to use it?</p>\n",
            "last_activity_date": 1426121832,
            "question_id": 6260475,
            "score": 15,
            "tags": [
                "javascript"
            ],
            "title": "How to: The ~ operator?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>No, javascript's <code>Date</code> months start with <code>0</code>, so <code>9</code> is a 10th month and it is October</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\">Reference</a>:</p>\n\n<blockquote>\n  <p><code>new Date(year, month [, day, hour, minute, second, millisecond]);</code></p>\n  \n  <p>[...]</p>\n  \n  <p><strong>month</strong>\n  Integer value representing the month, beginning with 0 for January to 11 for December.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>In the javascript world months begin with zero!\nkind of weird to me.\nAnyhow, 9 is NOT September, but rather 9 is October.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>using Mozilla Firefox Firebug: </p>\n\n<pre><code>var myDate = new Date(2012, 9, 23, 0,0,0,0);\nmyDate;\n</code></pre>\n\n<p>Date {Tue Oct 23 2012 00:00:00 GMT-0400 (Eastern Daylight Time)}</p>\n\n<p>Why does javascript create the date with the wrong month?</p>\n",
            "last_activity_date": 1393333280,
            "question_id": 12254333,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "javascript is creating date wrong month"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Let's go through this:</p>\n\n<p><strong><a href=\"http://il.php.net/manual/en/features.cookies.php\">Cookies</a></strong> and <strong><a href=\"http://il.php.net/manual/en/features.sessions.php\">sessions</a></strong> are both ways to preserve the application's state between different requests the browser makes. It's thanks to them that, for instance, you don't need to log in every time you request a page on <strong><a href=\"http://stackoverflow.com\">StackOverflow</a></strong>.</p>\n\n<h2>Cookies</h2>\n\n<p>Cookies are small bits of data, (maximum of 4KB long), which hold data in a key=value pairs:</p>\n\n<pre><code>name=value; name2=value2\n</code></pre>\n\n<p>These are set either by <strong><a href=\"https://developer.mozilla.org/en/DOM/document.cookie\">JavaScript</a></strong>, or via the server using an <strong><a href=\"http://il.php.net/manual/en/function.setcookie.php\">HTTP header</a></strong>.</p>\n\n<p>Cookies have an expiry datetime set, example using HTTP headers:</p>\n\n<pre><code>Set-Cookie: name2=value2; Expires=Wed, 19 Jun 2021 10:18:14 GMT\n</code></pre>\n\n<p>Which would cause the browser to set a cookie named <code>name2</code> with a value of <code>value2</code>, which would expire in about 9 years.</p>\n\n<p>Cookies are considered <strong>highly insecure</strong> because the user can easily manipulate their content. That's why you should <strong>always validate cookie data</strong>. Don't assume what you get from a cookie is necessarily what you expect.</p>\n\n<p>Cookies are usually used to preserve login state, where a username and a special hash are sent from the browser, and the server checks them against the database to approve access.</p>\n\n<p>Cookies are also often used in <strong>sessions</strong> creation.</p>\n\n<h2>Sessions</h2>\n\n<p>Sessions are slightly different. Each user gets a <strong>session ID</strong>, which is sent back to the server for validation either by <strong>cookie</strong> or by <strong>GET variable</strong>.</p>\n\n<p>Sessions are usually short lived, which makes them ideal in saving temporary state between applications. Sessions also expire once the user closed her browser.</p>\n\n<p>Sessions are considered more secure than cookies, because the variables themselves are kept on the <strong>server</strong>. Here's how it works:</p>\n\n<ol>\n<li>Server opens a session (sets a cookie via HTTP header)</li>\n<li>Server sets a session variable.</li>\n<li>Client changes page</li>\n<li>Client sends all cookies, along with the session ID from step 1.</li>\n<li>Server reads session ID from cookie.</li>\n<li>Server matches session ID from a list in a database (or whatever).</li>\n<li>Server finds a match, reads variables which are now available on <code>$_SESSION</code> superglobal.</li>\n</ol>\n\n<p>If PHP does not find a match, it will start a new session, and repeat the steps from 1-7.</p>\n\n<p>You can store sensitive information on a session, because it is kept on the server, but be aware that the session ID can still be stolen if the user, let's say, logged in over an insecure WiFi. (An attacker can sniff the cookies, and set it as its own, he won't see the variables themselves, but the server will identify the attacker as the user).</p>\n\n<hr>\n\n<p>That's the gist of it. You can learn more on the PHP manual on both subjects.</p>\n",
                    "is_accepted": true,
                    "score": 32
                }
            ],
            "body": "<p>I am trying to understand Cookies and sessions professionally,\nI know that when browser enter a server the server \"ask\" the browser to \"Paste\" him self a cookie with \"phpsessid\" at the client browser cookies folder,\nNow when we have the \"phpsessid\" when client enter the server the browser send to the server the \"phpsessid\" and the server take a look at his tmp folder and if we have a match so it loads back every data he have for this client, but i am kinda confused with all the process.</p>\n\n<p>I will be thankful if some one can please help me understand thoes processes of creating a sessions and cookies (what is happend \"Behind the scenes\"). Thank you all.</p>\n",
            "last_activity_date": 1409134662,
            "question_id": 11142882,
            "score": 14,
            "tags": [
                "javascript",
                "php",
                "session",
                "cookies"
            ],
            "title": "How do Cookies and Sessions work?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Because <code>\"key\" + test</code> is an expression and not an identifier nor a string literal nor a number literal, which are the only things that are allowed as the key in an object literal.</p>\n\n<p>You have to use the <code>[]</code> notation after creating the object for such a dynamic key:</p>\n\n<pre><code>var test123 = {};\ntest123[\"key\" + test] = 123;\n</code></pre>\n\n<p>An identifier is basically the same subset of characters that you can call a variable (letters, numbers, <code>_</code> and <code>$</code>; may not start with a number), and a string literal is any string enclosed with <code>'</code> or <code>\"</code>.</p>\n\n<p>So, the only types of keys you can use in an object literal are:</p>\n\n<pre><code>{\n  a0:   true, // valid identifier\n  $$_:  true, // same\n  123:  true, // valid numeric literal\n  012:  true, // same (octal)\n  0xf:  true, // same (hex)\n  \"@\":  true, // not allowed as an identifier\n  '0a': true  // same\n}\n</code></pre>\n\n<p>Reference: <a href=\"http://es5.github.com/#x11.1.5\">http://es5.github.com/#x11.1.5</a>.</p>\n\n<blockquote>\n  <p><em>PropertyName</em> :</p>\n  \n  <p><em>IdentifierName</em></p>\n  \n  <p><em>StringLiteral</em></p>\n  \n  <p><em>NumericLiteral</em></p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>You can but not with literal notation.</p>\n\n<pre><code>var test123 = {};\ntest123[\"foo\" + \"bar\"] = 'baz';\n\ntest123.foobar === 'baz'\n// true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Your code is equivalent to <code>test123.(\"key\" + test) = 123</code> which may better help you to understand why it is wrong. </p>\n\n<p>You need <code>[\"name\"]</code> notation to be able to access fields by their name in string. Other notations (yours and <code>.</code> one) require identifiers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<pre><code>var test = \"test123\"\nvar test123 ={\n    \"key\" + test: 123\n}\n</code></pre>\n\n<p>This code doesn't work. What is wrong with \"key\" + test ?  </p>\n",
            "last_activity_date": 1331752394,
            "question_id": 9708192,
            "score": 13,
            "tags": [
                "javascript",
                "syntax",
                "object-literal"
            ],
            "title": "Use a concatenated (dynamic) string as JavaScript object key?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Google tells me that gameQuery, a JQuery plugin, has a \"collision\" function:</p>\n\n<p><a href=\"http://gamequery.onaluf.org/#manual\" rel=\"nofollow\">http://gamequery.onaluf.org/#manual</a></p>\n\n<p>Search for the word \"collision\" on the page above.</p>\n\n<p>This google search can give you a couple of other options:</p>\n\n<p><a href=\"http://www.google.com/search?q=jquery%2Bcollision%2Bdetection\" rel=\"nofollow\">http://www.google.com/search?q=jquery+collision+detection</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Quick search of jQuery plugins turns up:</p>\n\n<p><a href=\"http://plugins.jquery.com/project/collidable\" rel=\"nofollow\">Collidable Draggables</a></p>\n\n<p>Looks like it's still early, but might be worth checking out.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Assuming, but I think what you would need can be found here:</p>\n\n<p><a href=\"http://blog.threedubmedia.com/2008/08/eventspecialdrop.html\" rel=\"nofollow\">$.event.special.drop</a></p>\n\n<p>It uses the jQuery famous $.event.special.drag to create de drop event. You can put your own javascript code under the \n<code>.bind( \"drop\", function( event ){</code>\nthe this element inside this function represent the object with the class \"drop\" you have defined and the event.dragTarget is the object that is being dragged.</p>\n\n<p>More doc at the site linked above. This was what I needed anyway.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know this question is quite old, but maybe you will find this useful: our <a href=\"http://www.48design.de/news/2009/11/20/kollisionsabfrage-per-jquery-plugin-update-v11-8/\" rel=\"nofollow\" title=\"jQuery Collision Check Plugin\">Collision Check Plugin for jQuery</a>.</p>\n\n<p>The description is in German, but it should be self-explanatory. You can either use two single elements or even sets of elements and will get back a set of all colliding elements.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can try <a href=\"https://sourceforge.net/projects/jquerycollision/\">jquery-collision</a> plus <a href=\"https://sourceforge.net/projects/jquidragcollide/\">jquery-ui-draggable-collision</a>. Full disclosure: I just wrote and released these on sourceforge.</p>\n\n<p>The first allows this:</p>\n\n<pre><code>var hit_list = $(\"#collider\").collision(\".obstacle\");\n</code></pre>\n\n<p>which is the list of all \".obstacle\" that overlap \"#collider\".</p>\n\n<p>The second allows:</p>\n\n<pre><code>$(\"#collider\").draggable( { obstacle: \".obstacle\" } );\n</code></pre>\n\n<p>Which gives you (among other things), a \"collision\" event to bind to:</p>\n\n<pre><code>$(\"#collider\").bind( \"collision\", function(event,ui){...} );\n</code></pre>\n\n<p>And you can even set:</p>\n\n<pre><code>$(\"#collider\").draggable( { obstacle: \".obstacle\", preventCollision: true } );\n</code></pre>\n\n<p>to prevent \"#collider\" from ever overlapping any \".obstacle\" while dragging.</p>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>We're using the <a href=\"http://jqueryui.com/demos/draggable/\">Draggable</a> JQuery UI plugin and need to disallow overlapping among our elements. We could write some collision detection ourselves but would prefer to use a tested package. Any suggestions? </p>\n",
            "last_activity_date": 1305761778,
            "question_id": 773717,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "plugins",
                "draggable",
                "collision"
            ],
            "title": "Please recommend a JQuery plugin that handles collision detection for draggable elements"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>First, the technical answer: if you assign your script tag an ID, you can then grab its <code>src</code> and then parse out the query string.</p>\n\n<pre><code>&lt;script id=\"whatever\" type=\"text/javascript\" src=\"file.js?abc=123\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>&nbsp;</p>\n\n<pre><code>var path = document.getElementById('whatever').src;\n// ...\n</code></pre>\n\n<p>With that answered, I'd like to voice my concern &mdash; this reeks of poor design decisions.  Why are you including your script this way (with a querystring)?  If you're trying to optimize your site (by having one large script that can be cached for subsequent pages), this approch is actually <strong>counter-productive</strong> because browsers will make a fresh request for the script file on each page due to the differing query string.  The correct approach is to have one large shared file and then a small page-specific file on each page.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This is possible. See <a href=\"http://feather.elektrum.org/book/src.html\">Passing JavaScript arguments via the src attribute</a>. The punchline is that since scripts in HTML (<em>not</em> XHTML) are executed as loaded, this will allow a script to find itself as it is always the last script in the page when it\u2019s triggered\u2013</p>\n\n<pre><code>var scripts = document.getElementsByTagName('script');\nvar index = scripts.length - 1;\nvar myScript = scripts[index];\n// myScript now contains our script object\nvar queryString = myScript.src.replace(/^[^\\?]+\\??/,'');\n</code></pre>\n\n<p>Then you just apply the query string parsing.</p>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>I am adding my Javsacript file in pages with different query strings in the script path like this:</p>\n\n<p>Page1:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"file.js?abc=123\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Page2:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"file.js?abc=456\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Page3:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"file.js?abc=789\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>In my Javascript file, how can I get the value of the \"abc\" param? I tried using window.location for this, but that does not work.</p>\n\n<p>In case it helps, below is a function I use to find the value of a query string param:</p>\n\n<pre><code>function getQuerystring(key, defaultValue) {\n    if (defaultValue == null) defaultValue = \"\";\n    key = key.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");\n    var regex = new RegExp(\"[\\\\?&amp;]\" + key + \"=([^&amp;#]*)\");\n    var qs = regex.exec(window.location.href);\n    if (qs == null)\n        return defaultValue;\n    else\n        return qs[1];\n}\n</code></pre>\n",
            "last_activity_date": 1295292360,
            "question_id": 4716612,
            "score": 10,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "How do I get query string value from script path?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The UA picks the first font in the list that it finds installed. The fonts installed on the OS are not really a part of the DOM, so the best you can do is guess.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I don\u2019t think there are any methods to do it directly, but Lalit Patel came up with a clever technique that creates an element with some letters in it, and guesses the font from the width of the element.</p>\n\n<p>See <a href=\"http://www.lalit.org/lab/javascript-css-font-detect\">http://www.lalit.org/lab/javascript-css-font-detect</a></p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>This is a followup to <a href=\"http://stackoverflow.com/questions/1955048/get-computed-font-size-for-dom-element-in-js\">this question</a>.</p>\n\n<p>I am working on a component for the <a href=\"http://en.wikipedia.org/wiki/CKEditor\">CKEditor</a>, a tweaked version of the font drop-down menus that always display the currently selected font family / size values, no matter where they were defined, using <code>computedStyle</code> and consorts. </p>\n\n<p>As you can see in the other question, determining the font size works cross-browser now. Now I am having trouble working with the <code>fontFamily</code> attribute. My generic \"computed style\" function returns only the full font string that was defined, e.g.</p>\n\n<pre><code>Times New Roman, Georgia, Serif\n</code></pre>\n\n<p>What I need, in order to match the setting against the entries in the font family dropdown, is a <strong>fixed font name</strong> of the <strong>actual font</strong> of the DOM element I am checking. </p>\n\n<p>Can this be done somehow, at least for the most common web fonts?</p>\n",
            "last_activity_date": 1261784391,
            "question_id": 1960817,
            "score": 9,
            "tags": [
                "javascript",
                "css",
                "computed-style"
            ],
            "title": "Get computed font-family in JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Please try with the below code snippet.</p>\n\n<p><strong>VIEW</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;  \n\nfunction errorHandler(e) {  \n    if (e.errors) {  \n        var message = \"Errors:\\n\";  \n        $.each(e.errors, function (key, value) {  \n            if ('errors' in value) {  \n                $.each(value.errors, function () {  \n                    message += this + \"\\n\";  \n                });  \n            }  \n        });  \n        alert(message);  \n    }  \n}  \n\nfunction onGridEdit(arg) {  \n    if (arg.container.find(\"input[name=IsFkEnabled]\").length &gt; 0) {\n        arg.container.find(\"input[name=IsFkEnabled]\").click(function () {\n            if ($(this).is(\":checked\") == false) {  \n\n            }  \n            else {  \n                arg.model.IsFkEnabled = true;\n                $(\"#Grid\").data(\"kendoGrid\").closeCell(arg.container);  \n                $(\"#Grid\").data(\"kendoGrid\").editCell(arg.container.next());  \n            }  \n        });  \n    }  \n    if (arg.container.find(\"input[name=FID]\").length &gt; 0) {  \n        if (arg.model.IsFkEnabled == false) {\n            $(\"#Grid\").data(\"kendoGrid\").closeCell(arg.container)  \n        }  \n    }  \n}  \n&lt;/script&gt;  \n\n&lt;div&gt;\n@(Html.Kendo().Grid&lt;MvcApplication1.Models.TestModels&gt;()\n    .Name(\"Grid\")\n    .Columns(columns =&gt;\n    {\n        columns.Bound(p =&gt; p.ID);\n        columns.Bound(p =&gt; p.Name);\n        columns.Bound(p =&gt; p.IsFkEnabled);\n        columns.ForeignKey(p =&gt; p.FID,   (System.Collections.IEnumerable)ViewData[\"TestList\"], \"Value\", \"Text\");\n\n    })\n    .ToolBar(toolBar =&gt; toolBar.Save())\n    .Editable(editable =&gt; editable.Mode(GridEditMode.InCell))\n    .Pageable()\n    .Sortable()\n    .Scrollable()\n    .Filterable()\n    .Events(e =&gt; e.Edit(\"onGridEdit\"))\n    .DataSource(dataSource =&gt; dataSource\n        .Ajax()\n        .Batch(true)\n        .ServerOperation(false)\n        .Events(events =&gt; events.Error(\"errorHandler\"))\n        .Model(model =&gt;\n        {\n            model.Id(p =&gt; p.ID);\n            model.Field(p =&gt; p.ID).Editable(false);\n        })\n    .Read(read =&gt; read.Action(\"ForeignKeyColumn_Read\", \"Home\"))\n    .Update(update =&gt; update.Action(\"ForeignKeyColumn_Update\", \"Home\"))\n    )\n)\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>MODEL</strong></p>\n\n<pre><code>namespace MvcApplication1.Models\n{\n    public class TestModels\n    {\n        public int ID { get; set; }\n        public string Name { get; set; }\n        public bool IsFkEnabled { get; set; }\n        public int FID { get; set; }\n    }\n}\n</code></pre>\n\n<p><strong>CONTROLLER</strong></p>\n\n<pre><code>public class HomeController : Controller\n{\n    public ActionResult Index()\n    {\n\n        List&lt;SelectListItem&gt; items = new List&lt;SelectListItem&gt;();\n\n        for (int i = 1; i &lt; 6; i++)\n        {\n            SelectListItem item = new SelectListItem();\n            item.Text = \"text\" + i.ToString();\n            item.Value = i.ToString();\n            items.Add(item);\n        }\n\n        ViewData[\"TestList\"] = items;\n\n        return View();\n    }\n\n    public ActionResult ForeignKeyColumn_Read([DataSourceRequest] DataSourceRequest request)\n    {\n        List&lt;TestModels&gt; models = new List&lt;TestModels&gt;();\n\n        for (int i = 1; i &lt; 6; i++)\n        {\n            TestModels model = new TestModels();\n            model.ID = i;\n            model.Name = \"Name\" + i;\n\n            if (i % 2 == 0)\n            {\n                model.IsFkEnabled = true;\n\n            }\n\n            model.FID = i;\n\n\n            models.Add(model);\n        }\n\n        return Json(models.ToDataSourceResult(request));\n    }\n\n    [AcceptVerbs(HttpVerbs.Post)]\n    public ActionResult ForeignKeyColumn_Update([DataSourceRequest] DataSourceRequest request, [Bind(Prefix = \"models\")]IEnumerable&lt;TestModels&gt; tests)\n    {\n        if (tests != null &amp;&amp; ModelState.IsValid)\n        {\n            // Save/Update logic comes here  \n        }\n\n        return Json(ModelState.ToDataSourceResult());\n    }\n}\n</code></pre>\n\n<p>If you want to download demo then click <a href=\"http://jayeshgoyani.blogspot.in/2013/01/set-column-editable-mode-based-on_16.html\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Notes:</strong></p>\n\n<ul>\n<li>this solution works for in-cell editing only (inline or popup editing\nrequire a different approach) </li>\n<li>the first approach can lead to unwanted visual effects (grid\njumping) under certain circumstances; if you experience that, I\nrecommend approach #2</li>\n<li>approach #2 may not work if you want to use the MVC wrappers (although it may be possible to extend Kendo.Mvc.UI.Fluent.GridEventBuilder); in that case, you'll need to bind the edit handler in JS</li>\n</ul>\n\n<p><strong>Approach #1</strong></p>\n\n<p>Use the grid's <a href=\"http://docs.telerik.com/kendo-ui/api/web/grid#events-edit\" rel=\"nofollow\">edit</a> event and then do something like this:</p>\n\n<pre><code>$(\"#grid\").kendoGrid({\n    dataSource: dataSource,\n    height: \"300px\",\n    columns: columns,\n    editable: true,\n    edit: function (e) {\n        var fieldName = e.container.find(\"input\").attr(\"name\");\n        // alternative (if you don't have the name attribute in your editable):\n        // var columnIndex = this.cellIndex(e.container);\n        // var fieldName = this.thead.find(\"th\").eq(columnIndex).data(\"field\");\n\n        if (!isEditable(fieldName, e.model)) {\n            this.closeCell(); // prevent editing\n        }\n    }\n});\n\n/**\n * @returns {boolean} True if the column with the given field name is editable \n */\nfunction isEditable(fieldName, model)  {\n    if (fieldName === \"SomeForeignKeyID\") {\n        // condition for the field \"SomeForeignKeyID\" \n        // (default to true if defining property doesn't exist)\n        return model.hasOwnProperty(\"IsFkEnabled\") &amp;&amp; model.IsFkEnabled;\n    }\n    // additional checks, e.g. to only allow editing unsaved rows:\n    // if (!model.isNew()) { return false; }       \n\n    return true; // default to editable\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/lhoeppner/zbnH2/\" rel=\"nofollow\">Demo here</a> (<a href=\"http://jsfiddle.net/NX96g/3/\" rel=\"nofollow\">updated for Q1 2014</a>)</p>\n\n<p>To use this via the MVC fluent syntax, simply give the anonymous <code>edit</code> function above a name (e.g. <code>onEdit</code>):</p>\n\n<pre><code>function onEdit(e) {\n    var fieldName = e.container.find(\"input\").attr(\"name\");\n    // alternative (if you don't have the name attribute in your editable):\n    // var columnIndex = this.cellIndex(e.container);\n    // var fieldName = this.thead.find(\"th\").eq(columnIndex).data(\"field\");\n\n    if (!isEditable(fieldName, e.model)) {\n        this.closeCell(); // prevent editing\n    }\n}\n</code></pre>\n\n<p>and reference it like this:</p>\n\n<pre><code>@(Html.Kendo().Grid()\n    .Name(\"Grid\")\n    .Events(events =&gt; events.Edit(\"onEdit\"))\n)\n</code></pre>\n\n<p>The disadvantage to this is that the editor gets created first before the edit event is triggered, which can sometimes have undesirable visual effects.</p>\n\n<p><strong>Approach #2</strong></p>\n\n<p>Extend the grid by overriding its <code>editCell</code> method with a variation that triggers a <code>beforeEdit</code> event; for that to work with grid options, you'll also need to override the init method:</p>\n\n<pre><code>var oEditCell = kendo.ui.Grid.fn.editCell;\nvar oInit = kendo.ui.Grid.fn.init;\nkendo.ui.Grid = kendo.ui.Grid.extend({\n    init: function () {\n        oInit.apply(this, arguments);\n        if (typeof this.options.beforeEdit === \"function\") {\n            this.bind(\"beforeEdit\", this.options.beforeEdit.bind(this));\n        }\n    },\n    editCell: function (cell) {\n        var that = this,\n            cell = $(cell),\n            column = that.columns[that.cellIndex(cell)],\n            model = that._modelForContainer(cell),\n            event = {\n                container: cell,\n                model: model,\n                field: column.field\n            };\n\n        if (model &amp;&amp; this.trigger(\"beforeEdit\", event)) {\n            // don't edit if prevented in beforeEdit\n            if (event.isDefaultPrevented()) return;\n        }\n\n        oEditCell.call(this, cell);\n    }\n});\nkendo.ui.plugin(kendo.ui.Grid);\n</code></pre>\n\n<p>then use it similar to #1:</p>\n\n<pre><code>$(\"#grid\").kendoGrid({\n    dataSource: dataSource,\n    height: \"300px\",\n    columns: columns,\n    editable: true,\n    beforeEdit: function(e) {\n        var columnIndex = this.cellIndex(e.container);\n        var fieldName = this.thead.find(\"th\").eq(columnIndex).data(\"field\");\n\n        if (!isEditable(fieldName, e.model)) {\n            e.preventDefault();\n        }\n    }\n});\n</code></pre>\n\n<p>The difference of this approach is that the editor won't get created (and focused) first. The <code>beforeEdit</code> method is using the same <code>isEditable</code> method from #1.\nSee a <a href=\"http://jsfiddle.net/NX96g/27/\" rel=\"nofollow\">demo for this approach here</a>.</p>\n\n<p>If you want to use this approach with MVC wrappers but don't want / can't extend GridEventBuilder, you can still bind your event handler in JavaScript (place below the grid MVC initializer):</p>\n\n<pre><code>$(function() {\n    var grid = $(\"#grid\").data(\"kendoGrid\");\n    grid.bind(\"beforeEdit\", onEdit.bind(grid));\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>Let's say I have a data like this:</p>\n\n<pre><code>[\n    {ID: 1, SomeForeignKeyID: 4, IsFkEnabled: true},\n    {ID: 2, SomeForeignKeyID: 9, IsFkEnabled: false}\n]\n</code></pre>\n\n<p>Kendo Grid is using this data:</p>\n\n<pre><code>columns.Bound(m =&gt; m.ID);\ncolumns.ForeignKey(p =&gt; p.SomeForeignKeyID, ViewBag.ForeignKeys as IEnumerable&lt;object&gt;, \"Value\", \"Name\");\n</code></pre>\n\n<p>Here's the problem: how to make ForeignKey column editable, but only in rows, where IsFkEnabled == true? Edit mode is InCell.</p>\n",
            "last_activity_date": 1424671120,
            "question_id": 20881484,
            "score": 5,
            "tags": [
                "javascript",
                "kendo-ui",
                "kendo-grid",
                "kendo-asp.net-mvc"
            ],
            "title": "Make cell readonly in Kendo Grid if condition is met"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>For this you can use <code>eval()</code>. But <code>eval()</code> is evil. You should use an array for things like this.</p>\n\n<p>Example:</p>\n\n<pre><code>var i = 1337;\neval('var myvar' + i + ' = \\'value\\';');\n\nalert(myvar1337);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Not sure abote how that could be done in function scope, but global variable could be created like this:</p>\n\n<pre><code>window[variableName + variableDynamic] = {}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In JavaScript, an object's properties can be access either by <code>obj.prop</code> or <code>obj['prop']</code>.</p>\n\n<p>In the global scope, all variables are children of the <code>window</code> property. So you'll be able to do:</p>\n\n<pre><code>var variableDynamic = 'Test';\nwindow['variableName' + variableDynamic] = 'your value';\n</code></pre>\n\n<p>Check out <a href=\"http://jsfiddle.net/DUpsL/\" rel=\"nofollow\">this fiddle</a>.</p>\n\n<p>However, if you'd like to limit the scope of this variable to a function, you would have to define a parent object and use this in place of <code>window</code>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I don't think you can create dynamic variable names in javascript, but you can set object attributes by string. So if you create your dynamic variables as attributes of an object, you can accomplish your goal.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can create dynamic variables with <code>eval</code>.</p>\n\n<pre><code>eval(\"dynamic\" + i + \" = val[i]\");\n</code></pre>\n\n<p>Also have a look at this: <a href=\"http://stackoverflow.com/questions/5117127/javascript-dynamic-variable-name\">Javascript dynamic variable name</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To add to FAngels answer, you may use bracket notation anywhere. This means that in addition to using <code>window['var']</code>, you can use <code>this['var']</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have variable:</p>\n\n<pre><code>var variableDynamic = 1;\n// or    \nvar variableDynamic = 1 + i++;\n</code></pre>\n\n<p>Is there any way to use that to create dynamic variable names, for example something like this:</p>\n\n<pre><code>var variableName + variableDynamic = {};\n// or\nvar (variableName + variableDynamic) = {};\n</code></pre>\n\n<p>I know what I wrote above is absurd, but this is to explain the idea. Is it possible?</p>\n\n<hr>\n\n<p>Ok, what I want to do to create element (upload form) every time user click on add new file group, everything is working fine except that plugin that I use for it need special variable for each upload form to trigger upload button (.uploadStoredFiles();).</p>\n\n<p>This is rough code I did:</p>\n\n<pre><code>    $('#addOneMoreFileOrGroup').on('click', function(){\n\n    var latestFileUploaderId = parseInt($('.well-large .file-uploader').last().attr('id').split('-')[2]) + 1;\n\n    $('.well-large .control-group:last').after('&lt;div class=\"control-group deal-type-online\"&gt;  \\\n        &lt;label class=\"control-label\"&gt;File / File Group Title:&lt;/label&gt; \\\n        &lt;div class=\"controls\"&gt; \\\n            &lt;input class=\"span4 file-title\" type=\"text\"&gt; \\\n            &lt;span class=\"question label label-warning\" data-title=\"File / Group Name:\" data-content=\"Name for your file or group of related files (for example your brand logotype in different file formats).\" data-original-title=\"\"&gt;?&lt;/span&gt; \\\n            &lt;div id=\"file-uploader-' + latestFileUploaderId + '\" class=\"file-uploader\"&gt;&lt;/div&gt; \\\n        &lt;/div&gt; \\\n    &lt;/div&gt;');\n\n    var HERE_I_NEED_DYNAMIC_VAR = new qq.FileUploader({\n        element: document.getElementById('file-uploader-' + latestFileUploaderId + ''),\n        action: 'do-nothing.htm',\n        autoUpload: false,\n        debug: true,\n        uploadButtonText: '&lt;i class=\"icon icon-plus\"&gt;&lt;/i&gt; Select Files...',\n        onSubmit: function() {\n\n            $('#file-uploader-' + latestFileUploaderId + ' .qq-uploader').after('&lt;button id=\"file-uploader-trigger-' + latestFileUploaderId + '\" class=\"btn btn-primary\"&gt;&lt;i class=\"icon-upload icon-white\"&gt;&lt;/i&gt; Upload now&lt;/button&gt;');\n\n            $('#file-uploader-trigger-' + latestFileUploaderId + '').on('click', function() {\n\n                if($(this).parent().parent().parent().parent().find('.file-title').val() !== '') {\n                    HERE_I_NEED_DYNAMIC_VAR.uploadStoredFiles();\n                } else {\n\n                    $(this).parent().parent().parent().addClass('error');\n\n                }\n\n            });\n\n        }\n    });\n\n});\n\n}\n</code></pre>\n",
            "last_activity_date": 1421535724,
            "question_id": 13291554,
            "score": 3,
            "tags": [
                "javascript",
                "variables",
                "dynamic"
            ],
            "title": "Dynamic variables names in javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It's not possible to save content to the website using only client-side scripting such as JavaScript and jQuery, but by submitting the data in an AJAX POST request you could perform the other half very easily on the server-side.</p>\n\n<p>However, I would not recommend having raw content such as scripts so easily writeable to your hosting as this could easily be exploited. If you want to learn more about AJAX POST requests, you can read the jQuery API page:</p>\n\n<p><a href=\"http://api.jquery.com/jQuery.post/\" rel=\"nofollow\">http://api.jquery.com/jQuery.post/</a></p>\n\n<p>And here are some things you ought to be aware of if you still want to save raw script files on your hosting. You have to be very careful with security if you are handling files like this!</p>\n\n<p>File uploading (most of this applies if sending plain text too if javascript can choose the name of the file)\n<a href=\"http://www.developershome.com/wap/wapUpload/wap_upload.asp?page=security\" rel=\"nofollow\">http://www.developershome.com/wap/wapUpload/wap_upload.asp?page=security</a>\n<a href=\"https://www.owasp.org/index.php/Unrestricted_File_Upload\" rel=\"nofollow\">https://www.owasp.org/index.php/Unrestricted_File_Upload</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You must have a server-side script to handle your request, it can't be done using javascript.</p>\n\n<p>To send raw data without URIencoding or escaping special characters to the php and save it as new <code>txt</code> file you can send ajax request using <code>post</code> method and <code>FormData</code> like:</p>\n\n<p>JS:</p>\n\n<pre><code>var data = new FormData();\ndata.append(\"data\" , \"the_text_you_want_to_save\");\nvar xhr = (window.XMLHttpRequest) ? new XMLHttpRequest() : new activeXObject(\"Microsoft.XMLHTTP\");\nxhr.open( 'post', '/path/to/php', true );\nxhr.send(data);\n</code></pre>\n\n<p>PHP:</p>\n\n<pre><code>if(!empty($_POST['data'])){\n$data = $_POST['data'];\n$fname = mktime() . \".txt\";//generates random name\n\n$file = fopen(\"upload/\" .$fname, 'w');//creates new file\nfwrite($file, $data);\nfclose($file);\n}\n</code></pre>\n\n<p><strong>Edit:</strong></p>\n\n<p>As Florian mentioned below, the XHR fallback is not required since <code>FormData</code> is not supported in older browsers (<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FormData#Browser_compatibility\" rel=\"nofollow\">formdata browser compatibiltiy</a>), so you can declare XHR variable as:</p>\n\n<pre><code>var xhr = new XMLHttpRequest();\n</code></pre>\n\n<p>Also please note that this works only for browsers that support <code>FormData</code> such as IE +10.</p>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>is it possible to save text to a new text file using javascript/jquery without using PHP? the text i'm tying to save may contain HTML entities, js, html, css and php scripts that i don't want to escape or use urlencodeg!</p>\n\n<p>if it's only can be achieved using php how can i pass the text to php without encoding it?</p>\n",
            "last_activity_date": 1411371025,
            "question_id": 15722765,
            "score": 1,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "text"
            ],
            "title": "saving text file on server using javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It's a simple function call, no different than <code>foo()</code> except it's invoking an anonymous function literal, the result of the function is assigned to the <code>Browser</code> property.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>it calls the anonymous function that was just declared, effectively causing the \"block\" to be evaluated.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>The code is defining an anonymous function (the <code>(function (){ ... })</code> bit) and then calling it (with no arguments). It then assigns the value to the <code>Browser</code> property of the object that is presumably being defined outside of your code snippet. </p>\n\n<p>You could also define the function somewhere:</p>\n\n<pre><code>function myFunction() {\n    var ua = navigator.userAgent;\n    var isOpera = Object.prototype.toString.call(window.opera) == '[object Opera]';\n    return {\n      IE:             !!window.attachEvent &amp;&amp; !isOpera,\n      Opera:          isOpera,\n      WebKit:         ua.indexOf('AppleWebKit/') &gt; -1,\n      Gecko:          ua.indexOf('Gecko') &gt; -1 &amp;&amp; ua.indexOf('KHTML') === -1,\n      MobileSafari:   /Apple.*Mobile.*Safari/.test(ua)\n}\n</code></pre>\n\n<p>and then call it:</p>\n\n<pre><code>var foo = myFunction();\n</code></pre>\n\n<p>and then assign the value:</p>\n\n<pre><code>...\nBrowser: foo,\n...\n</code></pre>\n\n<p>One downside with doing it that way is that you \"pollute your namespace\" with a function and a variable that you won't use anywhere else. The second issue is that you can't use the value of any locally-scoped variables in your function definition (the anonymous function behaves as a closure). </p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p><code>(function () {})</code> creates an anonymous function.</p>\n\n<p>Adding the <code>()</code> to the end calls the function that was just created.</p>\n\n<p>In the case of this particular function, the anonymous function returns several properties to the <code>Browser</code> object. So, you end up with boolean values for, e.g., <code>Browser.IE</code>, <code>Browser.Opera</code>, etc.</p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I'm trying to read the Prototype source. I've come to this part.(Unfortunately, this snippet is in the beginnning).</p>\n\n<p>What does this () mean?</p>\n\n<pre><code>  Browser: (function(){\n    var ua = navigator.userAgent;\n    var isOpera = Object.prototype.toString.call(window.opera) == '[object Opera]';\n    return {\n      IE:             !!window.attachEvent &amp;&amp; !isOpera,\n      Opera:          isOpera,\n      WebKit:         ua.indexOf('AppleWebKit/') &gt; -1,\n      Gecko:          ua.indexOf('Gecko') &gt; -1 &amp;&amp; ua.indexOf('KHTML') === -1,\n      MobileSafari:   /Apple.*Mobile.*Safari/.test(ua)\n    }\n  })(),\n</code></pre>\n\n<p>I am referring to the last line before the comma?</p>\n",
            "last_activity_date": 1401127723,
            "question_id": 2422026,
            "score": 30,
            "tags": [
                "javascript"
            ],
            "title": "What do empty parentheses () after a function declaration do in javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>If you want to access referrer and user-agent, those are available to client-side Javascript, but not by accessing the headers directly.</p>\n\n<p>To retrieve the referrer, use <a href=\"https://developer.mozilla.org/en-US/docs/DOM/document.referrer\"><code>document.referrer</code></a>.<br>\nTo access the user-agent, use <a href=\"https://developer.mozilla.org/en-US/docs/DOM/window.navigator.userAgent\"><code>navigator.userAgent</code></a>.</p>\n\n<p>As others have indicated, the HTTP headers are not available, but you specifically asked about the referer and user-agent, which are available via Javascript.</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Almost by definition, the client-side JavaScript is not at the receiving end of a http request, so it has no headers to read.  Most commonly, your JavaScript is the result of an http response.  If you are trying to get the values of the http request that generated your response, you'll have to write server side code to embed those values in the JavaScript you produce.</p>\n\n<p>It gets a little tricky to have server-side code generate client side code, so be sure that is what you need. For instance, if you want the User-agent information, you might find it sufficient to get the various values that JavaScript provides for browser detection.  Start with navigator.appName and navigator.appVersion.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I would imagine Google grabs <em>some</em> data server-side - remember, when a page loads into your browser that has Google Analytics code within it, your browser makes a request to Google's servers; Google can obtain data in that way as well as through the JavaScript embedded in the page.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This can be accessed through Javascript because it's a property of the loaded document, not of its parent.</p>\n\n<p>Here's a quick example:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\ndocument.write(document.referrer);\n&lt;/script&gt;\n</code></pre>\n\n<p>The same thing in PHP would be:</p>\n\n<pre><code>&lt;?php echo $_SERVER[\"HTTP_REFERER\"]; ?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Referer and user-agent are request header, not response header.</p>\n\n<p>That means they are sent by browser, or your ajax call (which you can modify the value), and they are decided before you get HTTP response.</p>\n\n<p>So basically you are not asking for a HTTP header, but a browser setting.</p>\n\n<p>The value you get from document.referer and navigator.userAgent may not be the actual header, but a setting of browser.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var ref = Request.ServerVariables(\"HTTP_REFERER\");\n</code></pre>\n\n<p>Type within the quotes any other server variable name you want.</p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I want to capture the HTTP request header fields, primarily the Referer and User-Agent, within my client-side JavaScript.  How may I access them?</p>\n\n<hr>\n\n<p>Google Analytics manages to get the data via JavaScript that they have you embed in you pages, so it is definitely possible.</p>\n\n<blockquote>\n  <p><strong>Related:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/220231/accessing-http-headers-in-javascript\">Accessing HTTP Headers in Javascript?</a></p>\n</blockquote>\n",
            "last_activity_date": 1404763295,
            "question_id": 220149,
            "score": 26,
            "tags": [
                "javascript",
                "http",
                "http-headers"
            ],
            "title": "How do I access the HTTP request header fields via JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This is a known issue, reported for version 1.10.2 and has been resolved for the 1.11/2.1 jQuery milestone. See a proposed pull request <a href=\"https://github.com/jquery/jquery/pull/1294\">here</a>, and the report on the bug tracker <a href=\"http://bugs.jquery.com/ticket/14282\">here</a>.</p>\n\n<p>To fix this, just use a later version of jQuery, or change this line in <code>event.js</code> from:</p>\n\n<pre><code>this.isDefaultPrevented = ( src.defaultPrevented || src.getPreventDefault &amp;&amp; src.getPreventDefault() ) ? returnTrue : returnFalse;\n</code></pre>\n\n<p>To this line:</p>\n\n<pre><code>this.isDefaultPrevented = src.defaultPrevented ? returnTrue : returnFalse;\n</code></pre>\n\n<p><strong>Edit:</strong> The pull request linked above was never merged, although it did fix the problem. The issue was instead resolved by <a href=\"https://github.com/jquery/jquery/commit/4671ef15c2d62962048fd4863911146fcc085f26\">this</a> commit and looks like this:</p>\n\n<pre><code>this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined &amp;&amp; ( src.returnValue === false || src.getPreventDefault &amp;&amp; src.getPreventDefault() ) ? returnTrue : returnFalse;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>jQuery version 1.11.0 is out now. You may download it here (<a href=\"http://jquery.com/download/\" rel=\"nofollow\">http://jquery.com/download/</a>), which solve the warning issue on Firefox.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have the same problem with pure JS in Mozilla Firefox 34.0. </p>\n\n<blockquote>\n  <p>Use of getPreventDefault() is deprecated.  Use defaultPrevented\n  instead.</p>\n</blockquote>\n\n<p>It is strange because I do not use neither <code>getPreventDefault()</code> function, neither jQuery, neither any other JS library.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I tried to use latest jQuery for my website and I get this warning sign and message from Firefox 24.</p>\n\n<blockquote>\n  <p>Warning: Use of <code>getPreventDefault()</code> is deprecated.  Use <code>defaultPrevented</code> instead.</p>\n  \n  <p>Source File: file:///C:/wamp/www/bootstrap3/dist/js/jquery-1.10.2.min.js</p>\n  \n  <p>Line: 5</p>\n  \n  <p>Warning: SyntaxError: Using <code>//@</code> to indicate source map URL pragmas is deprecated. Use <code>//#</code> instead</p>\n  \n  <p>Source File: file:///C:/wamp/www/bootstrap3/dist/js/jquery-1.10.2.min.js</p>\n  \n  <p>Line: 1</p>\n</blockquote>\n\n<p>Is it fine to leave that problem? How to solve it?</p>\n",
            "last_activity_date": 1420051415,
            "question_id": 19372658,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "firefox"
            ],
            "title": "jQuery 1.10.2 warning issue from Firefox"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You don't have to use regex if you are using the response to fill a div or something. You can use getElementsByTagName. </p>\n\n<pre><code>div.innerHTML = response;\nvar scripts = div.getElementsByTagName('script');\nfor (var ix = 0; ix &lt; scripts.length; ix++) {\n    eval(scripts[ix].text);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I don't have the solution, but you may find what you're looking for here:</p>\n\n<p><a href=\"http://ajaxpatterns.org/On-Demand_Javascript\" rel=\"nofollow\">http://ajaxpatterns.org/On-Demand_Javascript</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The best method would probably be to identify and eval the contents of the script block directly via the DOM.</p>\n\n<p>I would be careful though.. if you are implementing this to overcome a limitation of some off site call you are opening up a security hole.</p>\n\n<p>Whatever you implement could be exploited for XSS.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>An alternative is to not just dump the return from the Ajax call into the DOM using InnerHTML.</p>\n\n<p>You can insert each node dynamically, and then the script will run.</p>\n\n<p>Otherwise, the browser just assumes you are inserting a text node, and ignores the scripts.</p>\n\n<p>Using Eval is rather evil, because it requires another instance of the Javascript VM to be fired up and JIT the passed string.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Script added by setting the innerHTML property of an element doesn't get executed.  Try creating a new div, setting its innerHTML, then adding this new div to the DOM.  For example:</p>\n\n<pre>\n&lt;html&gt;\n&lt;head&gt;\n&lt;script type='text/javascript'&gt;\nfunction addScript()\n{\n    var str = &quot;&lt;script&gt;alert('i am here');&lt;\\/script&gt;&quot;;\n    var newdiv = document.createElement('div');\n    newdiv.innerHTML = str;\n    document.getElementById('target').appendChild(newdiv);\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;input type=&quot;button&quot; value=&quot;add script&quot; onclick=&quot;addScript()&quot;/&gt;\n&lt;div&gt;hello world&lt;/div&gt;\n&lt;div id=&quot;target&quot;&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>You can use one of the popular Ajax libraries that do this for you natively. I like <a href=\"http://www.prototypejs.org/\" rel=\"nofollow\">Prototype</a>. You can just add evalScripts:true as part of your Ajax call and it happens automagically.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Below is a bit different approach which uses the fact that if  tag contains type=\"text/xml\" JavaScript inside will not execute:</p>\n\n<pre><code>function preventJS(html) {\n    return html.replace(/&lt;script(?=(\\s|&gt;))/i, '&lt;script type=\"text/xml\" ');\n}\n</code></pre>\n\n<p>You can read more here - <a href=\"http://dotnetfollower.com/wordpress/2013/02/javascript-how-to-prevent-execution-of-javascript-within-a-html-being-added-to-the-dom/\" rel=\"nofollow\">JavaScript: How to prevent execution of JavaScript within a html being added to the DOM</a>.\nIf it works for you, please leave here a comment with information which browser and version you have used.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm working on a web page where I'm making an AJAX call that returns a chunk of HTML like: </p>\n\n<pre><code>&lt;div&gt;\n  &lt;!-- some html --&gt;\n  &lt;script type=\"text/javascript\"&gt;\n    /** some javascript */\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I'm inserting the whole thing into the DOM, but the JavaScript isn't being run.  Is there a way to run it?  </p>\n\n<p>Some details: I can't control what's in the script block (so I can't change it to a function that could be called), I just need the whole block to be executed.  I can't call eval on the response because the JavaScript is within a larger block of HTML.  I could do some kind of regex to separate out the JavaScript and then call eval on it, but that's pretty yucky.  Anyone know a better way?</p>\n",
            "last_activity_date": 1360170397,
            "question_id": 75943,
            "score": 23,
            "tags": [
                "javascript",
                "ajax"
            ],
            "title": "How do you execute a dynamically loaded JavaScript block?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You may use the jquery's <a href=\"http://api.jquery.com/contents/\" rel=\"nofollow\">Contents</a> method to get the content of the iframe.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>That's the same behavior I've seen: iframe's <code>load()</code> will fire first on an empty iframe, then the second time when your page is loaded.</p>\n\n<p>Edit: Hmm, interesting. You could increment a counter in your event handler, and a) ignore the first <code>load</code> event, or b) ignore any duplicate <code>load</code> event.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If possible, you'd be better off handling the <code>load</code> event within the iframe's document and calling out to a function in the containing document. This has the advantage of working in all browsers and only running once.</p>\n\n<p>In the main document:</p>\n\n<pre><code>function iframeLoaded() {\n    alert(\"Iframe loaded!\");\n}\n</code></pre>\n\n<p>In the iframe document:</p>\n\n<pre><code>window.onload = function() {\n    parent.iframeLoaded();\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>If you want it to be more generic and independent, you can use cookie. Iframe content can set a cookie. With jquery.cookie and a timer (or in this case javascript timer), you can check if the cookie is set each second or so.</p>\n\n<pre><code>//token should be a unique random value which is also sent to ifame to get set\niframeLoadCheckTimer = window.setInterval(function () {\n        cookieValue = $.cookie('iframeToken');  \n        if (cookieValue == token)\n        {\n            window.clearInterval(iframeLoadCheckTimer );\n            $.cookie('iframeToken', null, {\n                expires: 1, \n                path: '/'\n         });\n        }\n }, 1000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Along the lines of <a href=\"http://stackoverflow.com/a/5788723/177710\">Tim Down's answer</a> but leveraging <code>jQuery</code> (mentioned by the OP) and loosely coupling the containing page and the iframe, you could do the following:</p>\n\n<p>In the iframe:</p>\n\n<pre><code>&lt;script&gt;\n    $(function() {\n        var w = window;\n        if (w.frameElement != null\n                &amp;&amp; w.frameElement.nodeName === \"IFRAME\"\n                &amp;&amp; w.parent.jQuery) {\n            w.parent.jQuery(w.parent.document).trigger('iframeready');\n        }\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>In the containing page:</p>\n\n<pre><code>&lt;script&gt;\n    function myHandler() {\n        alert('iframe (almost) loaded');\n    }\n    $(document).on('iframeready', myHandler);\n&lt;/script&gt;\n</code></pre>\n\n<p>The iframe fires an event on the (potentially existing) parent window's document - please beware that the parent document needs a jQuery instance of itself for this to work. Then, in the parent window you attach a handler to react to that event.</p>\n\n<p>This solution has the advantage of not breaking when the containing page does not contain the expected load handler. More generally speaking, it shouldn't be the concern of the iframe to know its surrounding environment.</p>\n\n<p>Please note, that we're leveraging the DOM ready event to fire the event - which should be suitable for most use cases. If it's not, simply attach the event trigger line to the window's load event like so:</p>\n\n<pre><code>$(window).on('load', function() { ... });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>use <a href=\"http://www.w3schools.com/jsref/event_frame_onload.asp\">iframe onload event</a> </p>\n\n<pre><code>$('#theiframe').bind(\"load\", function() {\nalert(1);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Does anyone know if there is such a thing?</p>\n\n<p>I have a iframe that's being inserted with <code>$.ajax()</code> and I want to do some stuff after the contents from the iframe are completely loaded:</p>\n\n<pre><code>....\n success: function(html){  // &lt;-- html is the IFRAME (#theiframe)\n          $(this).html(html);   // $(this) is the container element\n          $(this).show();\n          $('#theiframe').load(function(){\n             alert('loaded!');\n          } \n....\n</code></pre>\n\n<p>it works, but I see the IFRAME is loaded twice (the alert also shows twice). </p>\n",
            "last_activity_date": 1404714832,
            "question_id": 5788499,
            "score": 21,
            "tags": [
                "javascript",
                "ajax",
                "jquery",
                "iframe"
            ],
            "title": "jQuery iframe load() event?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>This has to do with the browser's box model. Use something like jQuery or another JavaScript abstraction library to normalize the DOM model.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>It may be caused by IE's box model bug. To fix this, you can use the <a href=\"http://en.wikipedia.org/wiki/Internet_Explorer_box_model_bug\" rel=\"nofollow\">Box Model Hack</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Paul A is right about why the discrepancy exists but the solution offered by Ngm is wrong (in the sense of JQuery).</p>\n\n<p>The equivalent of clientHeight and clientWidth in jquery (1.3) is</p>\n\n<pre><code>$(window).width(), $(window).height()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>The equivalent of offsetHeight and offsetWidth in jQuery is\n$(window).width(), $(window).height()\nIt's not the clientHeight and clientWidth</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>i had a similar problem - firefox returned the correct value of obj.clientHeight but ie did not- it returned 0. I changed it to obj.offsetHeight and it worked. Seems there is some state that ie has for clientheight - that makes it iffy...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The <strong>body</strong> element takes the available width, which is usually your browser viewport.\nAs such, it will be different dimensions cross browser due to browser chrome borders, scrollbars, vertical space being take up by menus and whatnot...</p>\n\n<p>The fact that the heights also vary, also tells me you set the <strong>body/html</strong> height to 100% through css since the height is usually dependant on elements inside the <strong>body</strong>..</p>\n\n<p>Unless you set the width of the <strong>body</strong> element to a fixed value through css or it's style property, it's dimensions will as a rule, always vary cross browsers/versions and perhaps even depending on plugins you installed for the browser. Constant values in such a case is more an exception to the rule...</p>\n\n<p>When you invoke .clientWidth on other elements that do not take the automatic width of the browser viewport, it will always return the elements 'width' + 'padding'. So a div with width 200 and a padding of 20 will have clientWidth = 240 (20 padding left and right).</p>\n\n<p>The main reason however, why one would invoke clientWidth, is exactly due to possible expected discrepancies in results. If you know you will get a constant width and the value is known, then invoking clientWidth is redundant...</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Some more info for Browser window :\n<a href=\"http://www.w3schools.com/js/js_window.asp?output=print\" rel=\"nofollow\">http://www.w3schools.com/js/js_window.asp?output=print</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>Element.clientWidth</code> &amp; <code>Element.clientHeight</code> \nreturn the height/width of that element's content in addition any applicable padding. </p>\n\n<p>The jQuery implementation of these are: \n<a href=\"http://api.jquery.com/outerwidth/\" rel=\"nofollow\"><code>$(target).outerWidth()</code></a> &amp; <a href=\"http://api.jquery.com/outerHeight/\" rel=\"nofollow\"><code>$(target).outerHeight()</code></a></p>\n\n<p><code>.clientWidth</code> &amp; <code>.clientHeight</code> are included in the CSSOM View Module specification which is currently in the working draft stage. While modern browsers have a consistent implementation of this specification, to insure consistent performance across legacy platforms, the jQuery implementation should still be used. </p>\n\n<p>Additional information:</p>\n\n<ul>\n<li>https://developer.mozilla[dot]org/en-US/docs/Web/API/Element.clientWidth</li>\n<li>https://developer.mozilla[dot]org/en-US/docs/Web/API/Element.clientHeight</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>What I did to fix my issue with clientHeight is to use the clientHight of the controls firstChild.  I use IE 11 to print labels from a database and the clientHeight that worked in IE 8 was returning the height of 0 in IE 11.  I found a property in that control that was listed as firstChild and that had a property if clientHeight and actually had the height I was looking for.  So if your control is returning a clientSize of 0 take a look at the property of its firstChild.  It helped me...</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Properties <code>document.body.clientHeight</code> and <code>document.body.clientWidth</code> return different values on IE7, IE8 and Firefox:</p>\n\n<p>IE 8:  </p>\n\n<pre><code>document.body.clientHeight : 704 \ndocument.body.clientWidth  : 1148\n</code></pre>\n\n<p>IE 7:  </p>\n\n<pre><code>document.body.clientHeight : 704 \ndocument.body.clientWidth  : 1132\n</code></pre>\n\n<p>FireFox:  </p>\n\n<pre><code>document.body.clientHeight : 620 \ndocument.body.clientWidth  : 1152\n</code></pre>\n\n<p>Why does this discrepancy exist?<br>\nAre there any equivalent properties that are consistent across different browsers (IE8, IE7, FireFox)?</p>\n",
            "last_activity_date": 1423595870,
            "question_id": 833699,
            "score": 19,
            "tags": [
                "javascript",
                "css",
                "firefox",
                "internet-explorer-8",
                "internet-explorer-7"
            ],
            "title": "clientHeight/clientWidth returning different values on different browsers"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Meta tags are awful in this case. What about search engines??</p>\n\n<p>What you should do is to make it something like I've outlined <strong><a href=\"http://stackoverflow.com/questions/3251263/best-way-to-implement-a-web-2-0-navigation-system/3251333#3251333\">here</a></strong>.\nYour links should point to full working sites as if it were a web 2.0 page. Then with event handlers (onclick) you enhance the user experience by using ajax.</p>\n\n<p>So ajax users will not go to links, the link is rather processed when clicked and sent an ajax request to the exact same url but with an ajax GET parameter.</p>\n\n<p>Now on the server side you have to be able to <strong>generate the whole site</strong> by some method. If it is an ajax request you send the related content. If it is not an ajax request, yo generate the full site with the related part <strong>embedded</strong>.</p>\n\n<p>Your site will be <strong>SEO friendly</strong>, <strong>available</strong> to mobile users, and <strong>progressively enhanced</strong> for people on modern browsers and platforms. Finally ajax generated hash links will be usable, even as links.</p>\n\n<p><strong>Awesomeness</strong>. :)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I agree that meta refresh is not the right way forward here. In addition to galambalazs' link, search on \"progressive enhancement\".</p>\n\n<p>However, in the spirit of answering the question, you could try the following. It's untested, may not work in all browsers, but should be along the right lines:</p>\n\n<pre><code>var i, refAttr;\nvar metaTags = document.getElementsByTagName('meta');\nfor i in metaTags {\n    if( (refAttr = metaTags[i].getAttribute(\"http-equiv\")) &amp;&amp; (refAttr == 'refresh') ) {\n        metaTags[i].parentNode.removeChild(metaTags[i]);\n    }\n}\n</code></pre>\n\n<p>Whether removing it would stop the browser from refreshing in time remains to be seen.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You cannot override meta refresh tag with JavaScript.</p>\n\n<p>However you can do this</p>\n\n<p>Suppose your page is at -></p>\n\n<p><a href=\"http://example.net/mike.html\">http://example.net/mike.html</a>\nPut the following code there-></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nwindow.location = 'http://example.net/mike/for_Those_With_JavaScript_Enabled.html';\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Just remove the meta tag with javascript:</p>\n\n<pre><code>&lt;meta http-equiv=\"refresh\" content=\"2;http://new-url/\" id=\"meta-refresh\"&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nvar mr = document.getElementById(\"meta-refresh\");\nmr.parentNode.removeChild(mr);\n&lt;/script&gt;\n</code></pre>\n\n<p>I've set the refresh timeout to 2 seconds above just as an example.  You could probably get away with 1 second as well, but don't set it to 0 because the javascript won't get a chance to execute in that case.  0 is also annoying because it breaks back-button usability.</p>\n\n<p><strong>Edit 2012-10-23</strong> This does not appear to work any more.  The node still gets removed, but it appears that browsers parse and hold in memory all meta tags any way.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've found that the noscript tag works quite nicely for this.  For example, you can place this just after you <strong>close</strong> the head element:</p>\n\n<pre><code>&lt;noscript&gt;\n    &lt;meta http-equiv=\"refresh\" content=\"5;URL=http://www.example.com\"&gt;\n&lt;/noscript&gt;\n</code></pre>\n\n<p>No need to remove the meta tag with script, since a browser that has script support will ignore everything inside the noscript element.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Unfortunately, from <a href=\"http://stackoverflow.com/questions/3252743/using-javascript-to-override-or-disable-meta-refresh-tag/3327668#3327668\">@bluesmoon's answer</a>, manipulating the DOM does not work anymore.</p>\n\n<p>The workaround is to retrieve the original markup, find and replace the meta refresh element, and then write the new document with the replaced markup.</p>\n\n<p>I am not sure how to retrieve the original markup using JavaScript except for sending an additional request using <code>XMLHttpRequest</code>.</p>\n\n<p>In Opera, here is what I am using:</p>\n\n<p><code>Disable meta refresh 1.00.js</code>:</p>\n\n<pre><code>// ==UserScript==\n// @name Disable meta refresh\n// @version 1.00\n// @description Disables meta refresh.\n// @namespace http://stackoverflow.com/questions/3252743/using-javascript-to-override-or-disable-meta-refresh-tag/13656851#13656851\n// @copyright 2012\n// @author XP1\n// @homepage https://github.com/XP1/\n// @license Apache License, Version 2.0; http://www.apache.org/licenses/LICENSE-2.0\n// @include http*://example.com/*\n// @include http*://*.example.com/*\n// ==/UserScript==\n\n/*\n * Copyright 2012 XP1\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browser: true, vars: true, maxerr: 50, indent: 4 */\n(function (window, XMLHttpRequest) {\n    \"use strict\";\n\n    if (window.self !== window.top) {\n        return;\n    }\n\n    window.stop();\n\n    var uri = window.location.href;\n\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", uri, false);\n    request.send(null);\n\n    if (!(request.readyState === 4 &amp;&amp; request.status === 200)) {\n        return;\n    }\n\n    var markup = request.responseText;\n    markup = markup.replace(/&lt;meta http-equiv=\"refresh\".*\\/?&gt;/gi, \"\");\n\n    var document = window.document;\n    document.open();\n    document.write(markup);\n    document.close();\n}(this, this.XMLHttpRequest));\n</code></pre>\n\n<p>Opera also has a built-in feature that disables meta refreshes. No need for JavaScript.</p>\n\n<ul>\n<li>Right click on webpage > Edit Site Preferences... > Network > Disable \"Enable automatic redirection\" > OK.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have a website, where I am trying to use Ajax to update some stuff on the page without reloading it. However, there is a good chance that many of my users will be using mobile browsers that don't support Javascript so I am trying to design the page with meta refresh tags, that somehow work only for users without Javascript. Is there any way to do this?</p>\n\n<p>I tried putting the tag within a noscript element, but my primitive cell phone browser wouldn't acknowledge it. I am thinking of maybe setting a cookie to remember if the user's browser supports Javascript, or having one version of the page that works without Javascript, and tries to use Javascript to redirect the user to a more sophisticated version, but I am wondering if there is a more elegant way to do it. Does anyone have any ideas?</p>\n",
            "last_activity_date": 1372457681,
            "question_id": 3252743,
            "score": 18,
            "tags": [
                "javascript",
                "html",
                "ajax",
                "meta-tags"
            ],
            "title": "Using Javascript to override or disable meta refresh tag"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>If matching the exact serialization format of Firefox is not your aim, you could use one of the JavaScript JSON serialization/deserialization libraries listed at <a href=\"http://json.org\">http://json.org</a>. Using a standard scheme like JSON may be better than mimicking the proprietary Gecko format.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You could do something like this:</p>\n\n<pre><code>Object.prototype.getSource = function() {\n    var output = [], temp;\n    for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n            temp = i + \":\";\n            switch (typeof this[i]) {\n                case \"object\" :\n                    temp += this[i].getSource();\n                    break;\n                case \"string\" :\n                    temp += \"\\\"\" + this[i] + \"\\\"\";    // add in some code to escape quotes\n                    break;\n                default :\n                    temp += this[i];\n            }\n            output.push(temp);\n        }\n    }\n    return \"{\" + output.join() + \"}\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>See also <a href=\"http://stackoverflow.com/questions/130404/javascript-data-formattingpretty-printer\" rel=\"nofollow\" title=\"JavaScript data formatting/pretty printer\">JavaScript data formatting/pretty printer</a>. I think the routine exports in valid JS format, so it can be eval to get it back.</p>\n\n<p>[EDIT] Actually, not! It is OK for quick dump but not for real serialization.\nI improved it, result below:</p>\n\n<pre><code>function SerializeObject(obj, indentValue)\n{\n  var hexDigits = \"0123456789ABCDEF\";\n  function ToHex(d)\n  {\n    return hexDigits[d &gt;&gt; 8] + hexDigits[d &amp; 0x0F];\n  }\n  function Escape(string)\n  {\n    return string.replace(/[\\x00-\\x1F'\\\\]/g,\n        function (x)\n        {\n          if (x == \"'\" || x == \"\\\\\") return \"\\\\\" + x;\n          return \"\\\\x\" + ToHex(String.charCodeAt(x, 0));\n        })\n  }\n\n  var indent;\n  if (indentValue == null)\n  {\n    indentValue = \"\";\n    indent = \"\"; // or \" \"\n  }\n  else\n  {\n    indent = \"\\n\";\n  }\n  return GetObject(obj, indent).replace(/,$/, \"\");\n\n  function GetObject(obj, indent)\n  {\n    if (typeof obj == 'string')\n    {\n      return \"'\" + Escape(obj) + \"',\";\n    }\n    if (obj instanceof Array)\n    {\n      result = indent + \"[\";\n      for (var i = 0; i &lt; obj.length; i++)\n      {\n        result += indent + indentValue +\n            GetObject(obj[i], indent + indentValue);\n      }\n      result += indent + \"],\";\n      return result;\n    }\n    var result = \"\";\n    if (typeof obj == 'object')\n    {\n      result += indent + \"{\";\n      for (var property in obj)\n      {\n        result += indent + indentValue + \"'\" +\n            Escape(property) + \"' : \" +\n            GetObject(obj[property], indent + indentValue);\n      }\n      result += indent + \"},\";\n    }\n    else\n    {\n      result += obj + \",\";\n    }\n    return result.replace(/,(\\n?\\s*)([\\]}])/g, \"$1$2\");\n  }\n}\n</code></pre>\n\n<p>indentValue can be null, \"\", \"  \", \"\\t\" or whatever. If null, no indentation, output a rather compact result (could use less spaces...).</p>\n\n<p>I could use an array to stack the results then join them, but unless you have giant objects, string concatenation should be good enough...<br />\nAlso doesn't handle cyclic references...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you need to serialise objects with circular references you can use the cycle.js extension to the JSON object by Douglas Crockford available at <a href=\"https://github.com/douglascrockford/JSON-js\" rel=\"nofollow\">https://github.com/douglascrockford/JSON-js</a>.  This works very like toSource(), although it won't serialise functions (but could probably be adapted to using a function's toString method).</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Consider the following: (when using FireFox 3.6)</p>\n\n<pre><code>javascript:\n  x=function(){alert('caveat compter')};\n  alert(['JSON:\\t',JSON.stringify(x),'\\n\\ntoSource():\\t',x.toSource()].join(''));\n</code></pre>\n\n<p>which displays:</p>\n\n<blockquote>\n  <p>JSON: </p>\n  \n  <p>toSource():   (function () {alert(\"caveat compter\");})</p>\n</blockquote>\n\n<p>or even:</p>\n\n<pre><code>javascript:\nx=[];x[3]=x;\nalert('toSource():\\t'+x.toSource());\nalert('JSON can not handle this at all and goes \"infinite\".');\nalert('JSON:\\n'+JSON.stringify(x));\n</code></pre>\n\n<p>which displays:</p>\n\n<blockquote>\n  <p>toSource():   #1=[, , , #1#]</p>\n</blockquote>\n\n<p>and the \"going 'infinite'\" message whence follows JSON's stackoverflow recursive digression.</p>\n\n<p>The examples emphasize the subtleties of expression explicitly excluded from JSON representation that are rendered by toSource().</p>\n\n<p>It is not easy to compose a program to replicate the same results, for ALL cases, as the Gecko toSource() primitive, which is exceptionally powerful. </p>\n\n<p>Below are a few of the 'moving targets' that a program duplicating toSource() functionality MUST handle successfully:</p>\n\n<pre><code>javascript:\nfunction render(title,src){ (function(objRA){\n    alert([ title, src,\n        '\\ntoSource():',objRA.toSource(),\n        '\\nJSON:',JSON.stringify(objRA)     ].join('\\n'));\n    })(eval(src));\n}\nrender('Simple Raw Object source code:',\n    '[new Array, new Object, new Number, new String, ' +\n        'new Boolean, new Date, new RegExp, new Function]'  );\n\nrender( 'Literal Instances source code:',\n    '[ [], 1, true, {}, \"\", /./, new Date(), function(){} ]'    );\n\nrender( 'some predefined entities:',\n    '[JSON, Math, null, Infinity, NaN, ' +\n        'void(0), Function, Array, Object, undefined]'      );\n</code></pre>\n\n<p>which displays:</p>\n\n<pre>\n    Simple Raw Object source code:\n    [new Array, new Object, new Number, new String, \n                new Boolean, new Date, new RegExp, new Function]\n\n    toSource():\n    [[], {}, (new Number(0)), (new String(\"\")), \n                (new Boolean(false)), (new Date(1302637995772)), /(?:)/, \n                            (function anonymous() {})]\n\n    JSON:\n    [[],{},0,\"\",false,\"2011-04-12T19:53:15.772Z\",{},null]\n</pre>\n\n<p>and then displays:</p>\n\n<pre>\n    Literal Instances source code: \n    [ [], 1, true, {}, \"\", /./, new Date(), function(){} ]\n\n    toSource():  \n    [[], 1, true, {}, \"\", /./, (new Date(1302638514097)), (function () {})]\n\n    JSON:  \n    [[],1,true,{},\"\",{},\"2011-04-12T20:01:54.097Z\",null]\n</pre>\n\n<p>and lastly:</p>\n\n<pre>\n    some predefined entities:\n    [JSON, Math, null, Infinity, NaN, void(0), \n                        Function, Array, Object, undefined]\n\n    toSource():\n    [JSON, Math, null, Infinity, NaN, (void 0), \n        function Function() {[native code]}, function Array() {[native code]}, \n            function Object() {[native code]}, (void 0)]\n\n    JSON:\n    [{},{},null,null,null,null,null,null,null,null]\n</pre>\n\n<p>The previous analysis is significant if the translations are 'to be used' or less stringent if the need is for simple benign human consumption to view an object's internals. A primary JSON feature, as a representation, is the transfer of some structured information 'to be used' between environments.</p>\n\n<p>The quality of a toSource() function is a factor in the denotational semantics of a programme influencing, but not limited to:<br />\nround trip computations, least fixed point properties, and inverse functions.</p>\n\n<ul>\n<li>Does repetition of code conversion\nquiesce to a static state?</li>\n<li>Does obj.toSource() ==\neval(eval(eval(obj.toSource()).toSource()).toSource()).toSource()?</li>\n<li>Does it make sense to consider\nwhether obj == eval(obj.toSource())?</li>\n<li>Does undoing a conversion result in, not\njust a similar object, but an\nIDENTICAL one?<br />\nThis is a loaded\nquestion with profound implications\nwhen cloning an operational object.</li>\n</ul>\n\n<p>and many, many more ...</p>\n\n<p>Note that the above questions take on added significance when obj contains an executed code object, such as (new Function ... )()!</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You don't have to use <code>toSource()</code>; wrap the code to be serialized in a function that returns the JSON struct, and use <code>function#toString()</code> instead:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var serialized = function () {\n    return {\n        n: 8,\n        o: null,\n        b: true,\n        s: 'text',\n        a: ['a', 'b', 'c'],\n        f: function () {\n            alert('!')\n        }\n    }\n};\nserialized.toString();\n</code></pre>\n\n<p>See a <strong><a href=\"http://jsfiddle.net/7zhUZ/\" rel=\"nofollow\">live demo on jsFiddle</a></strong>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In order to take this a little further: when you send something - to work on - a receiver must get it and be able to work on it. So this next bit of code will do the trick - adapted from the previous answer by <a href=\"http://stackoverflow.com/users/547020/eliran-malka\" title=\"Eliran Malka\">Eliran Malka</a>.</p>\n\n<pre><code>// SENDER IS WRAPPING OBJECT TO BE SENT AS STRING\n// object to serialize\nvar s1 = function (str) {\n    return {\n        n: 8,\n        o: null,\n        b: true,\n        s: 'text',\n        a: ['a', 'b', 'c'],\n        f: function () {\n            alert(str)\n        }\n    }\n};\n// test\ns1(\"this function call works!\").f();\n// serialized object; for newbies: object is now a string and can be sent ;)\nvar code = s1.toString();\n\n// RECEIVER KNOWS A WRAPPED OBJECT IS COMING IN\n// you have to assign your wrapped object to somevar\neval('var s2  = ' + code);\n// and then you can test somevar again\ns2(\"this also works!\").f();\n</code></pre>\n\n<p>Be aware of the use of <code>eval</code>. If you own all code being transferred: feel free to use it (although it can also have disadvantages). If you don't know where the source is coming from: it's a no-no.</p>\n\n<p><a href=\"/questions/tagged/javascript\" class=\"post-tag\" title=\"show questions tagged &#39;javascript&#39;\" rel=\"tag\">javascript</a> <a href=\"/questions/tagged/object\" class=\"post-tag\" title=\"show questions tagged &#39;object&#39;\" rel=\"tag\">object</a> <a href=\"/questions/tagged/tosource\" class=\"post-tag\" title=\"show questions tagged &#39;tosource&#39;\" rel=\"tag\">tosource</a> <a href=\"/questions/tagged/stringify\" class=\"post-tag\" title=\"show questions tagged &#39;stringify&#39;\" rel=\"tag\">stringify</a> <a href=\"/questions/tagged/eval\" class=\"post-tag\" title=\"show questions tagged &#39;eval&#39;\" rel=\"tag\">eval</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Has anyone implemented Mozilla's Object.toSource() method for Internet Explorer and other non-Gecko browsers?  I'm looking for a lightweight way to serialize simple objects into strings.</p>\n",
            "last_activity_date": 1410060079,
            "question_id": 171407,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "Implementing Mozilla&#39;s toSource() method in Internet Explorer"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Take a look at <a href=\"http://www.swfupload.org/\" rel=\"nofollow\">SWFUpload</a>, it should do what you want.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I did it with this jquery plugin. It pretty much mimics standard jquery ajax functionality, but also allows you to send data using iframe. No flash involved, pure javascript.</p>\n\n<p><a href=\"http://malsup.com/jquery/form/\" rel=\"nofollow\">http://malsup.com/jquery/form/</a></p>\n\n<p>Here is a file upload example<br>\n<a href=\"http://malsup.com/jquery/form/#file-upload\" rel=\"nofollow\">http://malsup.com/jquery/form/#file-upload</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<ul>\n<li>Use a hidden iframe and set your form's target to that iframe's name.  This way, when the form is submitted, only the iframe will be refreshed.</li>\n<li>Have an event handler registered for the iframe's load event to parse the response.</li>\n</ul>\n\n<p>More details on my blog post: <a href=\"http://blog.manki.in/2011/08/ajax-fie-upload.html\">http://blog.manki.in/2011/08/ajax-fie-upload.html</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>This plugin uses XHR for uploading multiple files with progress-bar in FF3.6+, Safari4+, Chrome and falls back to hidden iframe based upload in other browsers, providing good user experience everywhere.\ncheck this:\n<a href=\"http://valums.com/ajax-upload/\" rel=\"nofollow\">http://valums.com/ajax-upload/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here some I found <a href=\"http://blog.insicdesigns.com/2010/02/10-best-ajax-file-uploader-for-your-web-application/\" rel=\"nofollow\">http://blog.insicdesigns.com/2010/02/10-best-ajax-file-uploader-for-your-web-application/</a>\n and also   <a href=\"http://www.webdeveloperjuice.com/2010/02/13/7-trusted-ajax-file-upload-plugins-using-jquery/\" rel=\"nofollow\">jquery upload</a>\nplugins </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to upload a file using Ajax and php. I have a form with file inclusion tag. I want when user will  browse a file and click on submit then file should be uploaded without refresh. How will i do this ?It does't matter if refresh occur but i want to upload file with help of ajax.</p>\n",
            "last_activity_date": 1396547885,
            "question_id": 2751795,
            "score": 13,
            "tags": [
                "javascript",
                "ajax",
                "file-upload",
                "upload"
            ],
            "title": "Ajax file upload"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>html:</p>\n\n<pre><code>&lt;textarea id=\"countMe\" cols=\"30\" rows=\"5\"&gt;&lt;/textarea&gt;\n&lt;div class=\"theCount\"&gt;Lines used: &lt;span id=\"linesUsed\"&gt;0&lt;/span&gt;&lt;div&gt;\n</code></pre>\n\n<p>js:</p>\n\n<pre><code>$(document).ready(function(){\n\n    var lines = 10;\n    var linesUsed = $('#linesUsed');\n\n    $('#countMe').keydown(function(e) {\n\n        newLines = $(this).val().split(\"\\n\").length;\n        linesUsed.text(newLines);\n\n        if(e.keyCode == 13 &amp;&amp; newLines &gt;= lines) {\n            linesUsed.css('color', 'red');\n            return false;\n        }\n        else {\n            linesUsed.css('color', '');\n        }\n    });\n});\n</code></pre>\n\n<p>fiddle:\n<a href=\"http://jsfiddle.net/XNCkH/17/\">http://jsfiddle.net/XNCkH/17/</a></p>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>Using jQuery I would like to:</p>\n\n<ul>\n<li>Limit the number of lines a user can enter in a textarea to a set number</li>\n<li>Have a line counter appear that updates number of lines as lines are entered</li>\n<li>Return key or /n would count as line</li>\n</ul>\n\n<p>Kudos to anyone who can help!</p>\n\n<pre><code>$(document).ready(function(){\n  $('#countMe').keydown(function(event) {\n    // If number of lines is &gt; X (specified by me) return false\n    // Count number of lines/update as user enters them turn red if over limit.\n\n  });   \n});\n\n\n&lt;form class=\"lineCount\"&gt;\n  &lt;textarea id=\"countMe\" cols=\"30\" rows=\"5\"&gt;&lt;/textarea&gt;&lt;br&gt;\n  &lt;input type=\"submit\" value=\"Test Me\"&gt;\n&lt;/form&gt;\n\n&lt;div class=\"theCount\"&gt;Lines used = X (updates as lines entered)&lt;div&gt;\n</code></pre>\n\n<p>For this example lets say limit the number of lines allowed to 10.</p>\n\n<p>Thanks all!</p>\n",
            "last_activity_date": 1402887895,
            "question_id": 6501043,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "validation",
                "textarea"
            ],
            "title": "Limit number of lines in textarea and Display line count using jQuery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Store your functions in an object instead of making them top level.</p>\n\n<pre><code>var at = {\n    at_26: function() { },\n    at_21: function() { },\n    at_99: function() { }\n};\n</code></pre>\n\n<p>Then you can access them like any other object:</p>\n\n<pre><code>at['at_' + test_id]();\n</code></pre>\n\n<p>You could also access them directly from the <code>window</code> object\u2026</p>\n\n<pre><code>window['at_' + test_id]();\n</code></pre>\n\n<p>\u2026 and avoid having to store them in an object, but this means playing in the global scope which should be avoided.</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>You can also try </p>\n\n<pre><code>function at_26(){};\nfunction at_21(){};\nfunction at_99(){};\n\nvar test_id = 21;   \neval('at_'+test_id+'()'); \n</code></pre>\n\n<p>But use this code if you have very strong reasons for using eval. Using eval in javascript is not a good practice due to its disadvantages such as \"using it improperly can open your script to injection attacks.\"</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You were close.</p>\n\n<pre><code>var test_id = 21\nthis['at_'+test_id]()\n</code></pre>\n\n<p>However, what you may want:</p>\n\n<pre><code>at = []\nat[21] = function(){ xxx for 21 xxx }\nat[test_id]()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>i hope this question is not too simple, but i have no idea :(</p>\n\n<p>How can i start a function with a var in the function name?</p>\n\n<p>For example ...</p>\n\n<p><strong>my functions</strong></p>\n\n<pre><code>function at_26();\nfunction at_21();\nfunction at_99();\n</code></pre>\n\n<p><strong>start the function</strong></p>\n\n<pre><code>var test_id = 21;   \nat_'+test_id+'();   // doesn't work\n</code></pre>\n\n<p>I hope somebody can help me.</p>\n\n<p>Thanks in advance!\nPeter</p>\n",
            "last_activity_date": 1284762359,
            "question_id": 3733580,
            "score": 10,
            "tags": [
                "javascript"
            ],
            "title": "Javascript - Variable in function name, possible?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.quirksmode.org/js/findpos.html\" rel=\"nofollow\">http://www.quirksmode.org/js/findpos.html</a> Explains the best way to do it, all in all, you are on the right track you have to find the offsets and traverse up the tree of parents.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can traverse the <code>offsetParent</code> up to the top level of the DOM.</p>\n\n<pre><code>function getOffsetLeft( elem )\n{\n    var offsetLeft = 0;\n    do {\n      if ( !isNaN( elem.offsetLeft ) )\n      {\n          offsetLeft += elem.offsetLeft;\n      }\n    } while( elem = elem.offsetParent );\n    return offsetLeft;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>You can use <code>element.getBoundingClientRect()</code> to retrieve element position relative to the viewport.</p>\n\n<p>Use <code>scrollY</code> (<a href=\"http://stackoverflow.com/a/16618863/368691\"><code>document.documentElement.scrollTop</code></a> cross-browser compatible) to calculate the viewport offset.</p>\n\n<p>The sum of the two will give the element position relative to the document:</p>\n\n<pre><code>subjectRect.top + document.documentElement.scrollTop\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I suggest using</p>\n\n<pre><code>element.getBoundingClientRect()\n</code></pre>\n\n<p>as proposed <a href=\"http://stackoverflow.com/a/18673641/1439191\">here</a>\ninstead of manual offset calculation through <em>offsetLeft</em>, <em>offsetTop</em> and <em>offsetParent</em>. as proposed <a href=\"http://stackoverflow.com/a/5598797/1439191\">here</a>\nUnder some circumstances*  the manual traversal produces invalid results. See this Plunker: <a href=\"http://plnkr.co/pC8Kgj\" rel=\"nofollow\">http://plnkr.co/pC8Kgj</a></p>\n\n<p>*When element is inside of a scrollable parent with static (=default) positioning.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can get <em>top</em> and <em>left</em> without traversing DOM like this:</p>\n\n<pre><code>function getCoords(elem) { // crossbrowser version\n    var box = elem.getBoundingClientRect();\n\n    var body = document.body;\n    var docEl = document.documentElement;\n\n    var scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;\n    var scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;\n\n    var clientTop = docEl.clientTop || body.clientTop || 0;\n    var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n\n    var top  = box.top +  scrollTop - clientTop;\n    var left = box.left + scrollLeft - clientLeft;\n\n    return { top: Math.round(top), left: Math.round(left) };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>What's the easiest way to determine an elements position relative to the document/body/browser window? Right now I'm using \u00b4.offsetLeft/offsetTop\u00b4, but this method only gives you the position relative to the parent element, so you need to determine how many parents to the body element, to know the position relaltive to the body/browser window/document position. This method is also to cumbersome. </p>\n",
            "last_activity_date": 1424691539,
            "question_id": 5598743,
            "score": 9,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "finding element&#39;s position relative to the document"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can use regex to replace any character in a given unicode range with its html entity equivalent. The code would look something like this:</p>\n\n<pre><code>var encodedStr = rawStr.replace(/[\\u00A0-\\u9999&lt;&gt;\\&amp;]/gim, function(i) {\n   return '&amp;#'+i.charCodeAt(0)+';';\n});\n</code></pre>\n\n<p>This code will replace all characters in the given range (unicode 00A0 - 9999, as well as ampersand, greater &amp; less than) with their html entity equivalents, which is simply <code>&amp;#nnn;</code> where <code>nnn</code> is the unicode value we get from <code>charCodeAt</code>.</p>\n\n<p>See it in action here: <a href=\"http://jsfiddle.net/E3EqX/13/\">http://jsfiddle.net/E3EqX/13/</a> (this example uses jQuery for element selectors used in the example. The base code itself, above, does not use jQuery)</p>\n\n<p>Making these conversions does not solve all the problems -- make sure you're using UTF8 character encoding, make sure your database is storing the strings in UTF8. You <strong>still</strong> may see instances where the characters do not display correctly, depending on system font configuration and other issues out of your control.</p>\n\n<p><strong>Documentation</strong></p>\n\n<ul>\n<li><code>String.charCodeAt</code> - <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt</a></li>\n<li>HTML Character entities - <a href=\"http://www.chucke.com/entities.html\">http://www.chucke.com/entities.html</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>You can use the <code>charCodeAt()</code> method to check if the specified character has a value higher than 127 and convert it to a numeric character reference using <code>toString(16)</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/a/18750001/96656\">The currently accepted answer</a> has several issues. This post explains them, and offers a more robust solution. The solution suggested in that answer is:</p>\n\n<pre><code>var encodedStr = rawStr.replace(/[\\u00A0-\\u9999&lt;&gt;\\&amp;]/gim, function(i) {\n  return '&amp;#' + i.charCodeAt(0) + ';';\n});\n</code></pre>\n\n<p>The <code>i</code> flag is redundant since no Unicode symbol in the range from U+00A0 to U+9999 has an uppercase/lowercase variant that is outside of that same range.</p>\n\n<p>The <code>m</code> flag is redundant because <code>^</code> or <code>$</code> are not used in the regular expression.</p>\n\n<p>Why the range U+00A0 to U+9999? It seems arbitrary.</p>\n\n<p>Anyway, for a solution that correctly encodes <em>all</em> except safe &amp; printable ASCII symbols in the input (including astral symbols!), and implements all named character references (not just those in HTML4), <a href=\"http://mths.be/he\"><strong>use the <em>he</em> library</strong></a>. From its README:</p>\n\n<blockquote>\n  <p><em>he</em> (for \u201cHTML entities\u201d) is a robust HTML entity encoder/decoder written in JavaScript. It supports <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/named-character-references.html\">all standardized named character references as per HTML</a>, handles <a href=\"http://mathiasbynens.be/notes/ambiguous-ampersands\">ambiguous ampersands</a> and other edge cases <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references\">just like a browser would</a>, has an extensive test suite, and \u2014 contrary to many other JavaScript solutions \u2014 <em>he</em> handles astral Unicode symbols just fine. <a href=\"http://mothereff.in/html-entities\">An online demo is available.</a></p>\n</blockquote>\n\n<p>Also see <a href=\"http://stackoverflow.com/a/23831239/96656\">this relevant Stack Overflow answer</a>.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I had the same problem and created 2 functions to create entities and translate them back to normal characters.\nThe following methods translate any string to HTML entities and back on String prototype</p>\n\n<pre><code>/**\n * Convert a string to HTML entities\n */\nString.prototype.toHtmlEntities = function() {\n    return this.replace(/./gm, function(s) {\n        return \"&amp;#\" + s.charCodeAt(0) + \";\";\n    });\n};\n\n/**\n * Create string from HTML entities\n */\nString.fromHtmlEntities = function(string) {\n    return (string+\"\").replace(/&amp;#\\d+;/gm,function(s) {\n        return String.fromCharCode(s.match(/\\d+/gm)[0]);\n    })\n};\n</code></pre>\n\n<p>You can then use it as following:</p>\n\n<pre><code>var str = \"Test\u00b4\u2020\u00ae\u00a5\u00a8\u00a9\u02d9\u222b\u00f8\u2026\u02c6\u0192\u2206\u00f7\u2211\u2122\u0192\u2206\u00e6\u00f8\u03c0\u00a3\u00a8\u00a0\u0192\u2122en t\u00e9st\".toHtmlEntities();\nconsole.log(\"Entities:\", str);\nconsole.log(\"String:\", String.fromHtmlEntities(str));\n</code></pre>\n\n<p>Output in console:</p>\n\n<pre><code>Entities: &amp;#68;&amp;#105;&amp;#116;&amp;#32;&amp;#105;&amp;#115;&amp;#32;&amp;#101;&amp;#180;&amp;#8224;&amp;#174;&amp;#165;&amp;#168;&amp;#169;&amp;#729;&amp;#8747;&amp;#248;&amp;#8230;&amp;#710;&amp;#402;&amp;#8710;&amp;#247;&amp;#8721;&amp;#8482;&amp;#402;&amp;#8710;&amp;#230;&amp;#248;&amp;#960;&amp;#163;&amp;#168;&amp;#160;&amp;#402;&amp;#8482;&amp;#101;&amp;#110;&amp;#32;&amp;#116;&amp;#163;&amp;#101;&amp;#233;&amp;#115;&amp;#116;\nString: Dit is e\u00b4\u2020\u00ae\u00a5\u00a8\u00a9\u02d9\u222b\u00f8\u2026\u02c6\u0192\u2206\u00f7\u2211\u2122\u0192\u2206\u00e6\u00f8\u03c0\u00a3\u00a8\u00a0\u0192\u2122en t\u00a3e\u00e9st \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you're already using jQuery, try <a href=\"http://api.jquery.com/html/\" rel=\"nofollow\"><code>html()</code></a>.</p>\n\n<pre><code>$('&lt;div&gt;').text('&lt;script&gt;alert(\"gotcha!\")&lt;/script&gt;').html()\n// \"&amp;lt;script&amp;gt;alert(\"gotcha!\")&amp;lt;/script&amp;gt;\"\n</code></pre>\n\n<p>An in-memory text node is instantiated, and <code>html()</code> is called on it.</p>\n\n<p>It's ugly, it wastes a bit of memory, and I have no idea if it's as thorough as something like the <a href=\"http://mths.be/he\" rel=\"nofollow\"><code>he</code></a> library but if you're already using jQuery, maybe this is an option for you.</p>\n\n<p>Taken from blog post <a href=\"http://debuggable.com/posts/encode-html-entities-with-jquery:480f4dd6-13cc-4ce9-8071-4710cbdd56cb\" rel=\"nofollow\">Encode HTML entities with jQuery</a> by Felix Geisend\u00f6rfer.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am working in a CMS which allows users to enter content. The problem is that when they add symbols <code>\u00ae</code> , it may not display well in all browsers. I would like to set up a list of symbols that must be searched for, and then converted to the corresponding html entity. For example</p>\n\n<p>\u00ae => <code>&amp;reg;</code> <br>\n&amp; => <code>&amp;amp;</code><br>\n\u00a9 => <code>&amp;copy;</code><br>\n\u2122 => <code>&amp;trade;</code><br></p>\n\n<p>After the conversion, it needs to be wrapped in a <code>&lt;sup&gt;</code> tag, resulting in this:<br></p>\n\n<p><code>\u00ae</code> => <code>&lt;sup&gt;&amp;reg;&lt;/sup&gt;</code> <br></p>\n\n<p>Because a particular font size and padding style is necessary:</p>\n\n<p><code>sup { font-size: 0.6em; padding-top: 0.2em; }</code></p>\n\n<p>Would the Javascript be something like this?</p>\n\n<pre><code>var regs = document.querySelectorAll('\u00ae');\n  for ( var i = 0, l = imgs.length; i &lt; l; ++i ) {\n  var [?] = regs[i];\n  var [?] = document.createElement('sup');\n  img.parentNode.insertBefore([?]);\n  div.appendChild([?]);\n}\n</code></pre>\n\n<p>Where \"[?]\" means that there is something that I am not sure about.</p>\n\n<p><strong>Additional Details:</strong> <br></p>\n\n<ul>\n<li>I would like to do this with pure JavaScript, not something that\nrequires a library like jQuery, thanks. </li>\n<li>Backend is Ruby </li>\n<li>Using RefineryCMS which is built with Ruby on Rails</li>\n</ul>\n",
            "last_activity_date": 1424969314,
            "question_id": 18749591,
            "score": 8,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Encode html entities in javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>For what it's worth,</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/defineProperty\" rel=\"nofollow\">Object.defineProperty</a> works in ie8 and FF4.</p>\n\n<p>This means its worthwhile to feature sniff and implement it where it is useful seeing as you would hope the upgrade from ie 6/7 to 8/9 will occur in the next few years.</p>\n\n<p>Another thing to be wary of is that the dontEnum property has a bug in <a href=\"https://developer.mozilla.org/en/ECMAScript_DontEnum_attribute#JScript_DontEnum_Bug\" rel=\"nofollow\">JScript</a></p>\n\n<p>You will have to work around the way you use the dontEnum property in IE.</p>\n\n<p>[Edit]:</p>\n\n<p>Here's documentation for <a href=\"http://msdn.microsoft.com/en-us/library/dd548687%28VS.85%29.aspx\" rel=\"nofollow\">Internet explorer</a> and a link to the <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\" rel=\"nofollow\">ES5 specification</a> (Page 122 , 15.2.3.6)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There are several things that you can't emulate from the ECMAScript 5 <code>Object.create</code> method on an ECMAScript 3 environment.</p>\n\n<p>As you saw, the properties argument will give you problems since in E3-based implementations there is <strong>no way</strong> to change the property attributes.</p>\n\n<p>The <code>Object.defineProperty</code> method as <em>@Raynos</em> mentioned, works on IE8, but <strong>partially</strong>, it can be used <em>only</em> in DOM elements.</p>\n\n<p>Also <em>accessor properties</em> will give you problems, they could be <em>mimicked</em> with widely supported non-standard methods such as <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/defineGetter\"><code>__defineGetter__</code></a>/<a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/defineSetter\"><code>__defineSetter__</code></a>, but again, you <em>can't change the property attributes</em>.</p>\n\n<p>Another problem aside the property descriptors, is that the <code>Object.create</code> method can accept <code>null</code> as an argument, to create an object that doesn't inherits from anything.</p>\n\n<p>This can't be emulated with the <a href=\"http://javascript.crockford.com/prototypal.html\">Crockford's <code>Object.create</code> shim</a>, because when the <code>new</code> operator is used with a constructor function that has a <code>prototype</code> property containing <code>null</code> -or any other non-object value-, the newly created object will inherit from <code>Object.prototype</code> anyway by default.</p>\n\n<p>In some implementations -V8, Spidermonkey, Rhino, etc...- they have a setteable <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/proto\"><code>__proto__</code></a> property which could be used to set a <code>null</code> [[Prototype]], but again, that's non-standard, and for sure it will never work on IE.</p>\n\n<p>I would recommend, if you want to target old browsers to don't use those features, since there is no way to make them work properly on those environments.</p>\n\n<p>If you still want to use <code>Object.create</code>, without using the <em>properties</em> argument, you could, however I would recommend you to detect the things that can't be emulated.</p>\n\n<p>The following would be a <em>safer</em> version of the <a href=\"http://javascript.crockford.com/prototypal.html\">Crockford's <code>Object.create</code> shim</a>:</p>\n\n<pre><code>if (typeof Object.create != 'function') {\n  (function () {\n    var F = function () {};\n    Object.create = function (o) {\n      if (arguments.length &gt; 1) { throw Error('Second argument not supported');}\n      if (o === null) { throw Error('Cannot set a null [[Prototype]]');}\n      if (typeof o != 'object') { throw TypeError('Argument must be an object');}\n      F.prototype = o;\n      return new F;\n    };\n  })();\n}\n</code></pre>\n\n<p>Anyway, use it carefully.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>If you want a good defineProperty() implementation, take a look at <a href=\"https://github.com/kriskowal/es5-shim\" rel=\"nofollow\">https://github.com/kriskowal/es5-shim</a></p>\n\n<p>Unfortunately, you cannot make enumeration configurable in an ES3 environment. This shim will let you call the API in either environment, but the properties will still be enumerable under ES3.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm seeing posts about a 'new' Object.create that makes enumeration configurable.  However, it relies on a Object.defineProperty method.  I can't find a cross browser implementation for this method.  </p>\n\n<p>Are we stuck writing for the old Object.create?  I can't write things that won't work in IE6/7.</p>\n",
            "last_activity_date": 1301855788,
            "question_id": 3830800,
            "score": 8,
            "tags": [
                "javascript",
                "ecma262",
                "prototypal-inheritance",
                "ecmascript-5"
            ],
            "title": "Object.defineProperty in ES5?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You should be checking for the attribute <code>checked</code> and not the method.</p>\n\n<p>Updated fiddle : <a href=\"http://jsfiddle.net/8YBu5/7/\">http://jsfiddle.net/8YBu5/7/</a></p>\n\n<pre><code>$('#checky').click(function(){\n    if($(this).attr('checked') == false){\n         $('#postme').attr(\"disabled\",\"disabled\");   \n    } else {\n        $('#postme').removeAttr('disabled');\n    }\n});\n</code></pre>\n\n<p><strong>EDIT</strong></p>\n\n<p>Remember that this code needs to be wrapped inside <code>$(document).ready()</code> or put at the bottom of your html code, otherwise your JS will bind itself to DOM elements that have not been loaded yet and will fail.</p>\n\n<p><strong>Wrapping it in .ready()</strong></p>\n\n<pre><code>&lt;script type='text/javascript'&gt;\n$(document).ready(function(){\n    $('#checky').click(function(){\n        if($(this).attr('checked') == false){\n             $('#postme').attr(\"disabled\",\"disabled\");   \n        } else {\n            $('#postme').removeAttr('disabled');\n        }\n    });\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>This code can be put anywhere in the document and will only trigger once the DOM is ready so you don't have to worry about premature triggers.</p>\n\n<p><strong>Putting it at the bottom of your document</strong></p>\n\n<pre><code>&lt;!-- some HTML --&gt;\n&lt;script type='text/javascript'&gt;\n        $('#checky').click(function(){\n            if($(this).attr('checked') == false){\n                 $('#postme').attr(\"disabled\",\"disabled\");   \n            } else {\n                $('#postme').removeAttr('disabled');\n            }\n        });\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>If you're putting it at the bottom of your document, you don't need to wrap it in <code>.ready()</code> because the javascript will not be read until everything else has loaded. There is a performance boost in this method (if you have a lot of JS)</p>\n\n<p>You can use either one of these methods to make sure that your JS binds event handling methods to DOM elements only <em>after</em> they have finished loading. </p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Add to the button <code>#postme</code> a click event that checks if the check box is checked.  If it is checked, return false, otherwise return true.</p>\n\n<pre><code>$('#postme').click( function () {\n    if ( !$('#checky').attr('checked') ) {\n        return false;\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>change <code>$(this).checked</code>  to <code>if($(this).attr('checked') == false){</code></p>\n\n<p><a href=\"http://jsfiddle.net/8YBu5/21/\" rel=\"nofollow\">Here</a> you go.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>if(!$(this).is(':checked') ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try this way</p>\n\n<pre><code>$('#checky').click(function(){\n\n    if(this.checked == false){\n         $('#postme').attr(\"disabled\",\"disabled\");   \n    }\n    else {\n        $('#postme').removeAttr('disabled');\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Before jQuery 1.6 <code>attr</code> was OK, after 1.6 you must use <code>prop</code>.</p>\n\n<pre><code>$('#checky').click(function(){\n  $('#postme').prop('checked', !$(this).checked);\n})\n</code></pre>\n\n<p>Attributes and properties are different things, but unfortunately jQuery took a long time to differentiate between them.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have something <a href=\"http://jsfiddle.net/8YBu5/\">here</a> that cannot seem to help me disable the submit button. any ideas?</p>\n\n<pre><code>&lt;input type=\"checkbox\" checked=\"checked\" id=\"checky\"&gt;&lt;a href=\"#\"&gt;terms and conditions&lt;/a&gt;\n&lt;input type=\"submit\" id=\"postme\" value=\"submit\"&gt;\n\n$('#checky').click(function(){\n    if($(this).checked == false){\n         $('#postme').attr(\"disabled\",\"disabled\");   \n    } else {\n        $('#postme').removeAttr('disabled');\n    }\n});\n</code></pre>\n",
            "last_activity_date": 1404645614,
            "question_id": 5458531,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "checkbox"
            ],
            "title": "How do i disable a submit button when checkbox is uncheck?"
        }
    ]
}
