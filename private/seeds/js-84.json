{
    "items": [
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>you can use <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3aform_editing#properties\">editData</a> parameter of the <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3aform_editing#editgridrow\">editGridRow</a> method. In the most cases you use <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3aform_editing#editgridrow\">editGridRow</a> not directly, but using Navigator. In the case you can define <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3aform_editing#properties\">editData</a> as the part of <code>prmEdit</code> or <code>prmAdd</code> of the <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3anavigator#definition\">navGrid</a>:</p>\n\n<pre><code>$('#table').jqGrid('navGrid','#pager',\n                   {/*navGrid options*/},\n                   {/*Edit options*/\n                       editData: {\n                           group: function() {\n                               return id;\n                           }\n                       }\n                   }\n});\n</code></pre>\n\n<p>One more option is the <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3aform_editing#events\">serializeEditData</a>, <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3aform_editing#events\">onclickSubmit</a> or <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3aform_editing#events\">beforeSubmit</a> method. See details <a href=\"http://stackoverflow.com/questions/3364343/jqgrid-sending-edit-data/3364759#3364759\">here</a> and <a href=\"http://stackoverflow.com/questions/5246555/how-to-pass-additional-postdata-into-an-add-record-function-jqgrid-mvc-net/5252503#5252503\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>You can add additional dynamic parameter to jqGrid's POST data</p>\n\n<pre><code>$j(\"#listsg11\").jqGrid({\n    url: \"/summary_reports\",   \n    postData: {department:\"value1\", score_r1:\"value2\", designation:\"value3\" },\n    mtype: 'POST',\n    datatype: \"xml\",\n    height: 250,\n    width: '100%', .... and so on\n</code></pre>\n\n<p>This method appends values with default params (used by jqGrid) with call.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I need to add additional dynamic parameter to jqGrid's <code>POST</code> data when I'm adding new record with modal form.</p>\n\n<p>I tried:</p>\n\n<pre><code>$('#table').setPostData({group: id});\n$('#table').setPostDataItem('group', id);\n$('#table').setGridParam('group', id);\n</code></pre>\n\n<p>and nothing worked out.</p>\n",
            "last_activity_date": 1328878885,
            "question_id": 6184399,
            "score": 3,
            "tags": [
                "javascript",
                "jquery",
                "jqgrid"
            ],
            "title": "Add additional param to post data using jqGrid when adding new row with modal form"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here's a JS plugin that adds Unicode support to RegEx</p>\n\n<p><a href=\"http://xregexp.com/plugins/\">http://xregexp.com/plugins/</a></p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>I am using for defining unicode of a symbols this site <a href=\"http://www.fileformat.info\" rel=\"nofollow\">http://www.fileformat.info</a>. </p>\n\n<p><strong>Unicode Blocks (Basic Latin, .+, Cyrillic, .+, Arabic and other):</strong>\n<a href=\"http://www.fileformat.info/info/unicode/block/index.htm\" rel=\"nofollow\">http://www.fileformat.info/info/unicode/block/index.htm</a></p>\n\n<p><strong>Unicode Character Categories (this does not work in JS):</strong>\n<a href=\"http://www.fileformat.info/info/unicode/category/index.htm\" rel=\"nofollow\">http://www.fileformat.info/info/unicode/category/index.htm</a></p>\n\n<p><strong>Letters (A-\u044f):</strong>\n<a href=\"http://www.fileformat.info/info/unicode/char/a.htm\" rel=\"nofollow\">http://www.fileformat.info/info/unicode/char/a.htm</a></p>\n\n<p><strong>Fonts (which chars are supported in each font):</strong>\n<a href=\"http://www.fileformat.info/info/unicode/font/index.htm\" rel=\"nofollow\">http://www.fileformat.info/info/unicode/font/index.htm</a></p>\n\n<p><strong>Index for all above</strong>\n<a href=\"http://www.fileformat.info/info/unicode/index.htm\" rel=\"nofollow\">http://www.fileformat.info/info/unicode/index.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In JavaScript we can match individual Unicode codepoints or codepoint ranges by using the Unicode escape sequences, e.g.:</p>\n\n<pre><code>\"A\".match(/\\u0041/) // =&gt; [\"A\"]\n\"B\".match(/[\\u0041-\\u007A]/) // =&gt; [\"B\"]\n</code></pre>\n\n<p>But how could we create a regular expression to match a proper name which must include any Unicode \"letter\" using a JavaScript regular expression?  Is there a range of letters?  A special regex sequence or character class in JavaScript?</p>\n\n<p>Say my website must validate names that could be in latin based languages as well as Hebrew, Cyrillic, Japanese (Katakana, Hiragana, etc.) is this feasible in JavaScript or is the only sane choice to delegate to a backend language with better Unicode support?</p>\n",
            "last_activity_date": 1333046578,
            "question_id": 5571096,
            "score": 3,
            "tags": [
                "javascript",
                "regex",
                "unicode",
                "character-properties"
            ],
            "title": "Matching a Unicode &quot;name&quot; with a JavaScript Regular Expression"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Perhaps this helps you out:</p>\n\n<p><a href=\"http://help.dottoro.com/ljcvtcaw.php\" rel=\"nofollow\">Example code 1</a> on this page has the execcommand on a div by using a function. Not sure if that's what you're after? Good luck!</p>\n\n<p>Edit: I figured out how to put the code here :o</p>\n\n<pre><code>&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\n    function SetToBold () {\n        document.execCommand ('bold', false, null);\n    }\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n      &lt;div contenteditable=\"true\" onmouseup=\"SetToBold ();\"&gt;\n       Select a part of this text!      \n      &lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is easier to do in IE than other browsers because IE's <a href=\"http://msdn.microsoft.com/en-us/library/ms535872%28v=vs.85%29.aspx\"><code>TextRange</code></a> objects have an <code>execCommand()</code> method, meaning that a command can be executed on a section of the document without needing to change the selection and temporarily enable <code>designMode</code> (which is what you have to do in other browsers). Here's a function to do what you want cleanly:</p>\n\n<pre><code>function execCommandOnElement(el, commandName, value) {\n    if (typeof value == \"undefined\") {\n        value = null;\n    }\n\n    if (typeof window.getSelection != \"undefined\") {\n        // Non-IE case\n        var sel = window.getSelection();\n\n        // Save the current selection\n        var savedRanges = [];\n        for (var i = 0, len = sel.rangeCount; i &lt; len; ++i) {\n            savedRanges[i] = sel.getRangeAt(i).cloneRange();\n        }\n\n        // Temporarily enable designMode so that\n        // document.execCommand() will work\n        document.designMode = \"on\";\n\n        // Select the element's content\n        sel = window.getSelection();\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        sel.removeAllRanges();\n        sel.addRange(range);\n\n        // Execute the command\n        document.execCommand(commandName, false, value);\n\n        // Disable designMode\n        document.designMode = \"off\";\n\n        // Restore the previous selection\n        sel = window.getSelection();\n        sel.removeAllRanges();\n        for (var i = 0, len = savedRanges.length; i &lt; len; ++i) {\n            sel.addRange(savedRanges[i]);\n        }\n    } else if (typeof document.body.createTextRange != \"undefined\") {\n        // IE case\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.execCommand(commandName, false, value);\n    }\n}\n</code></pre>\n\n<p>Examples:</p>\n\n<pre><code>var testDiv = document.getElementById(\"test\");\nexecCommandOnElement(testDiv, \"Bold\");\nexecCommandOnElement(testDiv, \"ForeColor\", \"red\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>it has any way for bind execcommand with a div element not for whole document , i try this :</p>\n\n<pre><code>document.getElementById('div').execcommand(...)\n</code></pre>\n\n<p>but it has an error :</p>\n\n<pre><code>execcommand is not a function\n</code></pre>\n\n<p>it has any way for bind the execcommand with just div element not whole document !!\ni don't like use iframe method .</p>\n",
            "last_activity_date": 1299413274,
            "question_id": 5205544,
            "score": 3,
            "tags": [
                "javascript",
                "execcommand"
            ],
            "title": "set execcommand just for a div"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The <code>fitBounds()</code> method should work. However note that it always keeps some padding on the sizes of the map. Consider the following example:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt; \n&lt;head&gt; \n   &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/&gt; \n   &lt;title&gt;Google Maps fitBounds Padding&lt;/title&gt; \n   &lt;script src=\"http://maps.google.com/maps/api/js?sensor=false\" \n           type=\"text/javascript\"&gt;&lt;/script&gt; \n&lt;/head&gt; \n&lt;body&gt; \n   &lt;div id=\"map\" style=\"width: 543px; height: 350px;\"&gt;&lt;/div&gt; \n\n   &lt;script type=\"text/javascript\"&gt; \n      var map = new google.maps.Map(document.getElementById('map'), { \n        mapTypeId: google.maps.MapTypeId.ROADMAP \n      });\n\n      var bounds = new google.maps.LatLngBounds();\n\n      var points = [\n        new google.maps.LatLng(51.22, 4.40),\n        new google.maps.LatLng(50.94, 3.13)\n      ];\n\n      // Extend bounds with each point\n      for (var i = 0; i &lt; points.length; i++) {\n        bounds.extend(points[i]);\n        new google.maps.Marker({position: points[i], map: map});\n      }\n\n      // Apply fitBounds\n      map.fitBounds(bounds);  \n\n      // Draw the bounds rectangle on the map\n      var ne = bounds.getNorthEast();\n      var sw = bounds.getSouthWest();\n\n      var boundingBox = new google.maps.Polyline({\n        path: [\n          ne, new google.maps.LatLng(ne.lat(), sw.lng()),\n          sw, new google.maps.LatLng(sw.lat(), ne.lng()), ne\n        ],\n        strokeColor: '#FF0000',\n        strokeOpacity: 1.0,\n        strokeWeight: 2\n      });\n\n      boundingBox.setMap(map);\n   &lt;/script&gt; \n&lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n\n<p>Screenshot from the above example:</p>\n\n<p><img src=\"http://i.imgur.com/uXftXCa.png\" alt=\"Google Maps fitBounds Padding\"></p>\n\n<p>The red bounding box represents the <code>LatLngBounds</code> object when extended with both markers. Note that the map canvas is <code>543px</code> wide, and also note the padding margin to the left and right of the bounding box.</p>\n\n<p>Now if we reduce the width of the map canvas by just <code>1px</code>, using <code>542px</code>, the <code>fitBounds()</code> method will pop to a lower zoom level:</p>\n\n<p><img src=\"http://i.imgur.com/hAUaWms.png\" alt=\"Google Maps fitBounds Padding\"></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I have found the solution.</p>\n\n<p>Instead of doing a single </p>\n\n<pre><code>bounds.extend(myLatLng)\n</code></pre>\n\n<p>Everytime you add a myLatLng to your bounds, do these actions</p>\n\n<pre><code>bounds = map.getBounds();\nbounds.extend(results[0].geometry.location);\nmap.fitBounds(bounds);\n</code></pre>\n\n<p>Hope this helps anyone!</p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>I got here using a \"Related\" link to the right, and I think that the answer to your problem is the same as to the previous question. :p</p>\n\n<p>See, the thing is that every time you use a function that pans/zooms the map, the script ignores new, similar, input until it's ready for it again. Therefore, you have to detect this and only call fitBounds() when it's accepted. Try replacing your</p>\n\n<pre><code>map.fitBounds(bounds);\n</code></pre>\n\n<p>with</p>\n\n<pre><code>var listener = google.maps.event.addListener(map, \"idle\", function() { \n               map.fitBounds(bounds);\n               google.maps.event.removeListener(listener); });\n</code></pre>\n\n<p>Good luck.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Just use the setZoom function.</p>\n\n\n\n<pre><code>var geocoder = new google.maps.Geocoder();\ngeocoder.geocode({ 'address': zipcode }, function(results, status)\n{\n    if (status == google.maps.GeocoderStatus.OK)\n    {\n        map.setCenter(results[0].geometry.location);\n        map.setZoom(12);\n    }\n    else\n    {\n        alert(zipcode + \" not found\" + \"\\nstatus : \" + status);\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm having the possibility to have multiple markers.</p>\n\n<p>Currently i'm using the </p>\n\n<pre><code>    map.fitBounds(bounds);\n</code></pre>\n\n<p>In my css to have the map resized (bounds contains multiple latlng's).</p>\n\n<p>What am i doing wrong? Because it won't use the best zoom level :-(\n<img src=\"http://a.imageshack.us/img96/4128/gmapzoomlevel.png\" alt=\"alt text\" title=\"Google Maps screenshot\"></p>\n\n<p>Edit:</p>\n\n<p>Javascript source</p>\n\n<pre><code>    var geocoder, map;\n     $(document).ready(function(){\n        var coll_gmap = $(\".gmap\");\n        if ( coll_gmap.length != 0 )\n        {\n            //initiate map\n            geocoder = new google.maps.Geocoder();\n            var latlng = new google.maps.LatLng(-34.397, 150.644);\n            var myOptions = {\n                zoom: 13,\n                center: latlng,\n               mapTypeControl: true,\n                navigationControl: true,\n                scaleControl: true,\n                navigationControlOptions: {style: google.maps.NavigationControlStyle.ZOOM_PAN},\n                mapTypeId: google.maps.MapTypeId.ROADMAP\n            }\n            var bounds = new google.maps.LatLngBounds();\n            //loop all addressen + insert into map\n              map = new google.maps.Map(coll_gmap[0], myOptions);\n            coll_gmap.each(function(index)\n            {\n                 if (geocoder) {\n                        geocoder.geocode( { 'address': $(this).attr(\"address\")}, function(results, status) {\n                            if (status == google.maps.GeocoderStatus.OK) {\n                                map.setCenter(results[0].geometry.location);\n                                bounds.extend(results[0].geometry.location);\n\n                                var marker = new google.maps.Marker({\n                                    map: map, \n                                    position: results[0].geometry.location\n                                });\n                            } else {\n                                console.log(\"Geocode was not successful for the following reason: \" + status);\n                            }//end if status\n                        }); //end if geocoder.geocode\n                    } //end if geocoder   \n\n            }) //end coll_gmap each\n            map.fitBounds(bounds);\n\n            }//end if coll_gmap length\n           /* console.log(\"Script created by NicoJuicy\");*/   \n    }); //end onload\n</code></pre>\n\n<p>In html - Create this ;-)</p>\n\n\n\n\n",
            "last_activity_date": 1406168158,
            "question_id": 3245564,
            "score": 3,
            "tags": [
                "javascript",
                "google-maps",
                "fitbounds"
            ],
            "title": "Google Maps v3 - Automating Zoom Level?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Perhaps something like this might do what you're looking for? Though I'm not sure if it'll work with 1.11.</p>\n\n<pre><code>Element.implement({\n    addLiveEvent: function(event, selector, fn){\n        this.addEvent(event, function(e){\n            var t = $(e.target);\n\n            if (!t.match(selector)) return false;\n                fn.apply(t, [e]);\n        }.bindWithEvent(this, selector, fn));\n    }\n});\n\n$(document.body).addLiveEvent('click', 'a', function(e){ alert('This is a live event'); });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>anomareh is on the right track.  </p>\n\n<p>You would also want to check the ancestor elements of the event target.  </p>\n\n<p>I'm not sure if this works with all events since some of them do not bubble (not sure how Mootools handles this). </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is very cool idea, jQuery <code>.live()</code> works in similar way, but there is also problem with <strong>bubbling</strong>.\nIf some parent has attached <code>stopPropagation()</code> for this event nothing happens.</p>\n\n<p>I think the ideal solution is building custom events, here is very good post about custom events written by Nicholas Zakas:</p>\n\n<p><a href=\"http://www.nczonline.net/blog/2010/03/09/custom-events-in-javascript/\" rel=\"nofollow\">http://www.nczonline.net/blog/2010/03/09/custom-events-in-javascript/</a></p>\n\n<p>But this example doesn't have event bubbling implemented yet. \nSome kind of bubbling which has fallback for it's prevention should solve the problem.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use this way:</p>\n\n<pre><code>$(document.body).addEvent('click:relay(.filterButton)', function(){\n// do something\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How do I make elements that are loaded via ajax, adopt the events associated with the same class on mootools 1.11?</p>\n\n<p>As far as I know, in jQquery, if your ajax response consists of something like <code>&lt;div class='button'&gt;</code>,<br/> if there is an event bind using <code>live</code> to <code>$('.button')</code>, those events would automatically bind.</p>\n\n<p>Is that possible with MooTools 1.11?</p>\n",
            "last_activity_date": 1354963061,
            "question_id": 2107892,
            "score": 3,
            "tags": [
                "javascript",
                "jquery",
                "dom",
                "mootools"
            ],
            "title": "how to implement a jQuery live bind event on mootools?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Each function has a <code>caller</code> property defined.</p>\n\n<p>From <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Function/caller\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Function/caller</a>:</p>\n\n<pre><code>function myFunc() {\n    if (myFunc.caller == null) {\n        return (\"The function was called from the top!\");\n    } else\n        return (\"This function's caller was \" + myFunc.caller);\n    }\n}\n</code></pre>\n\n<p>The <code>Function.caller</code> property is not part of the ECMA3 standard but it's implemented across all major browsers, including IE and Firefox.</p>\n\n<p>If you're using an anonymous function, you can still access the <code>caller</code> property via the <a href=\"https://developer.mozilla.org/En/Core%5FJavaScript%5F1.5%5FReference/Functions%5Fand%5Ffunction%5Fscope/arguments/callee\"><code>arguments.calee</code></a> property:</p>\n\n<pre><code>function() {\n    if (arguments.callee.caller == null) {\n        return (\"The function was called from the top!\");\n    } else\n        return (\"This function's caller was \" + arguments.callee.caller);\n    }\n}\n</code></pre>\n\n<p>Note that this code is accessing the current function, and then referencing the same non-standard <code>caller</code> property on it. This is distinct from using the <b>deprecated</b> <a href=\"https://developer.mozilla.org/En/Core%5FJavaScript%5F1.5%5FReference/Functions%5Fand%5Ffunction%5Fscope/arguments/caller\"><code>arguments.caller</code></a> property directly, which is <b>not implemented</b> in some modern browsers.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>In chromeos on cr-48, arguments.callee.caller gives the whole function body as a string, for both named anonymous caller functions. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/280389/how-do-you-find-out-the-caller-function-in-javascript\">How do you find out the caller function in JavaScript?</a>  </p>\n</blockquote>\n\n\n\n<p>How can I find out in a javascript function which was the calling (the former in the call stack) function?</p>\n\n<p>I would like to determine if the former called function is a __doPostback in the onbeforeunload event.</p>\n",
            "last_activity_date": 1313350977,
            "question_id": 1333498,
            "score": 3,
            "tags": [
                "javascript",
                "function",
                "callstack"
            ],
            "title": "Determine calling function in javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Ok, I made this example for you.\nStart with HTML code (<strong>index.html</strong>):</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Stackoverflow&lt;/title&gt;\n        &lt;script type=\"text/javascript\" src=\"sof.js\"&gt; &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body onLoad=\"load();\"&gt;\n        &lt;ul id=\"menu\"&gt;\n            &lt;li&gt;&lt;a href=\"/home\"&gt;home&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"/about\"&gt;about&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"/blog\"&gt;blog&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"/photos\"&gt;photos&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;button onclick=\"back ();\"&gt;Back&lt;/button&gt;\n        &lt;button onclick=\"ff ();\"&gt;Forward&lt;/button&gt;\n        &lt;div&gt;\n            Action: &lt;span id=\"action\"&gt;&lt;/span&gt;&lt;br/&gt;\n            Url: &lt;span id=\"url\"&gt;&lt;/span&gt;&lt;br/&gt;\n            Description: &lt;span id=\"description\"&gt;&lt;/span&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>And then the javascript file (<strong>sof.js</strong>):</p>\n\n<p>var menu, url, description, action, data, historyState, act;</p>\n\n<pre><code>function $ (id) {return document.getElementById (id);}\n\n// Updates infos\nfunction update (state) {\n    action.innerHTML = act;\n    url.innerHTML = state.url;\n    description.innerHTML = state.description;\n}\n\n// Goes back\nfunction back () {\n    act = 'Back';\n    history.back ();\n}\n\n// Goes forward\nfunction ff () {\n    act = 'Forward';\n    history.forward ();\n}\n\nfunction load () {\n    menu = $ ('menu');\n    url = $ ('url');\n    description = $ ('description');\n    action = $ ('action');\n\n    // State to save\n    historyState = {\n        home: {\n            description: 'Homepage'\n        } ,\n        about: {\n            description: 'Infos about this website'\n        } ,\n        blog: {\n            description: 'My personal blog'\n        } ,\n        photos: {\n            description: 'View my photos'\n        }\n    };\n\n    // This is fired when history.back or history.forward is called\n    window.addEventListener ('popstate', function (event) {\n        var hs = history.state;\n\n        if ((hs === null) || (hs === undefined)) hs = event.state;\n        if ((hs === null) || (hs === undefined)) hs = window.event.state;\n\n        if (hs !== null) update (hs);\n    });\n\n    menu.addEventListener ('click', function (event) {\n        var el = event.target;\n        // Prevents url reload\n        event.preventDefault ();\n\n        // Handles anchors only\n        if (el.nodeName === 'A') {\n            // Gets url of the page\n            historyState[el.innerHTML].url = el.getAttribute ('href');\n            // Creates a new history instance and it saves state on it\n            history.pushState (historyState[el.innerHTML], null, el.href);\n            act = 'Normal navigation';\n            update (historyState[el.innerHTML]);\n        }\n    });\n\n    // Handles first visit navigation\n    var index = location.pathname.split ('/');\n    index = index[index.length-1];\n    if (index !== '') {\n        historyState[index].url = location.pathname;\n        history.pushState (historyState[index], null, location.pathname);\n        act = 'First visit';\n        update (historyState[index]);\n    }\n}\n</code></pre>\n\n<p>And a <strong>.htaccess</strong> for direct request:</p>\n\n<pre><code>RewriteEngine On\n\nRewriteRule ^home$ ./index.html\nRewriteRule ^about$ ./index.html\nRewriteRule ^blog$ ./index.html\nRewriteRule ^photos$ ./index.htm\n</code></pre>\n\n<p>Each time that an anchor is clicked, a new history instance is pushed onto history stack and an object (called state) is saved with it: the local url is changed but the loading is stopped by 'event.preventDefault()' method.\nFurther more, some information (as URL, Description and Action) are updated.</p>\n\n<p>Then, with 'back' and 'forward' buttons, you can travel through the history and use 'history.state' (or event.state or window.event.state, it depends on browsers) to retrieve the current state.</p>\n\n<p>And, in the end, if you type the entire url directly into the address bar, it works as the same with the above .htaccess ;)</p>\n\n<p>I hope this example helps you ;)</p>\n\n<p>Ciao</p>\n\n<p>Wilk</p>\n\n<p>PS: For further details:</p>\n\n<ol>\n<li><a href=\"https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history\" rel=\"nofollow\">Manipulating the browser history</a></li>\n<li><a href=\"https://developer.mozilla.org/en/DOM/window.history\" rel=\"nofollow\">History object</a></li>\n<li><a href=\"http://diveintohtml5.info/history.html\" rel=\"nofollow\">History howto</a></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>here you can see an simple example HTML5 History API: <a href=\"http://stackoverflow.com/a/9470183/1236238\">http://stackoverflow.com/a/9470183/1236238</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Ok, I created what I think is the SIMPLEST form of history API demo.</strong></p>\n\n<p>It can't work in jsfiddle because it needs to run in its own window. It will however work if you copy-paste the code in notepad, add a reference to jquery where indicated, and save it on your desktop as an html file. Of course, it doesn't work in IE, but we all know that.\nI've put in two versions: the one that works without the URL rewrite component (it'll work from your desktop) and I've also commented out the version where you can manipulate the URL. For the latter, you need to run it from a server, either remote or local.</p>\n\n<p>I've struggled to get it working across all browsers because Chrome, Safari and Firefox work differently! Here's the code:</p>\n\n<pre><code>    &lt;html&gt;\n    &lt;head&gt;\n    &lt;style type=\"text/css\"&gt;\n\n    .Panel{\n       width:200px;\n       height:100px;\n       background:red;\n       display:none;\n       color:white;\n       padding:20px 20px;}\n\n    .ChangeButton{\n       margin:10px 10px;\n       float:left;}   \n\n    &lt;/style&gt;\n\n   // add reference to jquery.js file here \n   // &lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"&gt;&lt;/script&gt;        \n\n    &lt;script type=\"text/javascript\"&gt;\n\n    var TheURL; // if you don't need URL rewrite, then we're always going to \n                // show the same URL. Remove this line if you want URL rewrite.\n\n    var MyDivs = { // this object stores the name and the URL of each possible state\n       ShowPanel1: {panelID:'Panel1', DisplayURL:'/panel1'},\n       ShowPanel2: {panelID:'Panel2', DisplayURL:'/panel2'},\n       ShowPanel3: {panelID:'Panel3', DisplayURL:'/panel3'},\n       ShowPanel4: {panelID:'Panel4', DisplayURL:'/panel4'},\n    };\n\n    $(document).ready(function () {\n\n    TheURL = document.URL; // You can remove this line if you're doing\n                           // URL rewrite\n\n    window.addEventListener('popstate', function (event) {\n\n       //cross-browser nightmare here!!!!!\n       var HistoryState = history.state;\n\n       if (HistoryState === null || HistoryState === undefined) {\n            HistoryState = event.state; }\n\n       if (HistoryState === null || HistoryState === undefined) {\n            HistoryState = window.event.state; }\n\n       SwitchPanel(HistoryState);\n    });\n\n    $('.ChangeButton').click(function () {\n           DoChange(parseInt($(this).attr('id').charAt(6), 10)); });\n\n    DoChange(1);\n\n    });\n\n    function DoChange(ButtonID) {\n\n       switch (ButtonID) {\n\n       // here's the 2-version option: \n       // toggle the commented and uncommented history.pushState\n       // lines to see the change to the URL in action\n       case 1:\n           SwitchPanel(MyDivs.ShowPanel1.panelID);\n           history.pushState(MyDivs.ShowPanel1.panelID, \"\", TheURL);\n           // history.pushState(MyDivs.ShowPanel1.panelID, \"\", MyDivs.ShowPanel1.DisplayURL);\n           break;\n       case 2:\n           SwitchPanel(MyDivs.ShowPanel2.panelID);\n           history.pushState(MyDivs.ShowPanel2.panelID, \"\", TheURL);\n           // history.pushState(MyDivs.ShowPanel2.panelID, \"\", MyDivs.ShowPanel2.DisplayURL);\n           break;\n       case 3:\n           SwitchPanel(MyDivs.ShowPanel3.panelID);\n           history.pushState(MyDivs.ShowPanel3.panelID, \"\", TheURL);\n           // history.pushState(MyDivs.ShowPanel3.panelID, \"\", MyDivs.ShowPanel3.DisplayURL);\n           break;\n       case 4:\n           SwitchPanel(MyDivs.ShowPanel4.panelID);\n           history.pushState(MyDivs.ShowPanel4.panelID, \"\", TheURL);\n           // history.pushState(MyDivs.ShowPanel4.panelID, \"\", MyDivs.ShowPanel4.DisplayURL);\n           break;\n       }\n    }\n\n    function SwitchPanel(PanelID) {\n\n       if (PanelID === null) {return false;}\n\n       $('.Panel').hide();\n       $('#' + PanelID).fadeIn('medium');\n    }\n\n    &lt;/script&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n\n    &lt;input type=\"button\" id=\"Button1\" class=\"ChangeButton\" value=\"panel 1\" /&gt;\n    &lt;input type=\"button\" id=\"Button2\" class=\"ChangeButton\" value=\"panel 2\" /&gt;\n    &lt;input type=\"button\" id=\"Button3\" class=\"ChangeButton\" value=\"panel 3\" /&gt;\n    &lt;input type=\"button\" id=\"Button4\" class=\"ChangeButton\" value=\"panel 4\" /&gt;\n\n    &lt;div id=\"PanelContainer\" style=\"clear:both;\"&gt;\n\n       &lt;div class=\"Panel\" id=\"Panel1\"&gt;panel 1&lt;/div&gt;\n       &lt;div class=\"Panel\" id=\"Panel2\"&gt;panel 2&lt;/div&gt;\n       &lt;div class=\"Panel\" id=\"Panel3\"&gt;panel 3&lt;/div&gt;\n       &lt;div class=\"Panel\" id=\"Panel4\"&gt;panel 4&lt;/div&gt;\n\n    &lt;/div&gt;\n\n    &lt;/body&gt;\n    &lt;/html&gt;\n</code></pre>\n\n<p>Upvote if it works for you.   </p>\n\n<p><strong>Enjoy!</strong></p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I've been reading about the HTML5 history API and so far, I haven't found a simple working demo that shows the mechanics with code.</p>\n\n<p><strong>Here is a working <a href=\"http://jsfiddle.net/KxkrV/\" rel=\"nofollow\">jsfiddle</a>: 4 buttons and 4 divs.</strong> When the user presses a button, it shows the corresponding panel.</p>\n\n<p>What I'm looking to do is:</p>\n\n<pre><code>1) rewrite the URL so that when the user is on panel 4 the url ends with /Panel4\n2) make the back button and forward button work with the history API.\n</code></pre>\n\n<p>I know there's the history.js plug-in but I want to understand how the API works in its simplest form.</p>\n\n<p>Hopefully, the jsfiddle will help others who'll come to this page looking for a code demo.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1337947062,
            "question_id": 10571734,
            "score": 2,
            "tags": [
                "javascript",
                "html5",
                "html5-history"
            ],
            "title": "HTML5 History API Demo"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Not possible, sorry.</p>\n\n<p>Without navigating away from the page, you can change the hash (as you noted); however, if you change a different part of the URL, a new page will be loaded.</p>\n\n<p>Anything appearing otherwise is a major security hole: \"Sure, you are on <a href=\"https://yourbank.example.com/\" rel=\"nofollow\">https://yourbank.example.com/</a> , of course you are not on <a href=\"http://evilsite.example.net/\" rel=\"nofollow\">http://evilsite.example.net/</a> \". The URL is there to show you where you are; looking pretty is a minor concern.</p>\n\n<p>Edit: apparently HTML5 makes such behavior possible, as seen in <a href=\"http://stackoverflow.com/a/8560766/19746\">Tilman Potthof</a>'s answer.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can do it with <code>history.pushState</code>, but only in browsers that support it. Just try the following line in your browsers JavaScript-Console.</p>\n\n<pre><code>history.pushState({},\"URL Rewrite Example\",\"http://stackoverflow.com/example\")\n</code></pre>\n\n<p>More on that in <a href=\"https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history#The_pushState%28%29.C2.A0method\">The pushState() method (Mozilla Developer)</a></p>\n\n<p>Similar question <a href=\"http://stackoverflow.com/questions/136458/how-do-i-with-javascript-change-the-url-in-the-browser-without-loading-the-new\">How do I, with JavaScript, change the URL in the browser without loading the new page?</a></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>As others have stated, HTML5's history.pushstate is the way to go. Try browsing a repo on github to see it in action (<a href=\"https://github.com/visionmedia/express\" rel=\"nofollow\">https://github.com/visionmedia/express</a>).</p>\n\n<p>Trouble is the only version of IE that supports history.pushstate is IE10, which kinda sucks.</p>\n\n<p>Plenty of sites use hashbang #! URL's such as Twitter (e.g. <a href=\"https://twitter.com/#!/Sironfoot\" rel=\"nofollow\">https://twitter.com/#!/Sironfoot</a> ). The hashbang is a URL pattern agreed on by search engines so that they can still trawl and index a heavily Ajax powered website (more info here <a href=\"http://code.google.com/web/ajaxcrawling/docs/specification.html\" rel=\"nofollow\">http://code.google.com/web/ajaxcrawling/docs/specification.html</a>), so you could go that route.</p>\n\n<p>The only other approach is to use history.pushstate for browsers that support it, and fall back to full-page refreshes for non-supporting browsers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am writing a complex AJAX application at the moment and the entire site has clean URLs. At the moment PHP creates the basic layout for each page however I don't want to have to navigate away from each page when the user clicks on a link, and I don't want to have a hash in the URL because it won't fit with the rest of the site. I know that this has cropped up loads before on the site and it seems to be quite commonly asked but I was wondering if there was a neat HTML5 way of just appearing to change the URL in the address bar even if it technically remains on the same page.</p>\n",
            "last_activity_date": 1324299788,
            "question_id": 8560617,
            "score": 2,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "html5"
            ],
            "title": "How to change URL in browser without navigating away from page?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>&gt;&gt;&gt; var x = [1, 2, 3], y = [4, 5, 6];\n&gt;&gt;&gt; x.push.apply(x, y) // or Array.prototype.push.apply(x, y)\n&gt;&gt;&gt; x\n[1, 2, 3, 4, 5, 6]\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<pre><code>function test(r){\n  var _r = r.slice(0), // copy to new array reference\n      arr = ['d','e','f'];\n\n  _r = _r.concat(arr); // can use concat now\n\n  return _r;\n}\nvar result = test(['a','b','c']);\nalert(result.length); // 6\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is <a href=\"http://stackoverflow.com/questions/5240335/add-two-arrays-without-using-the-concat-method/5240366#5240366\">emulbreh's answer</a>, I'm just posting the test I did to verify it.\nAll credit should go to emulbreh</p>\n\n<pre><code>// original array\nvar r = ['a','b','c'];\n\nfunction test(r){\n  var arr = ['d','e','f'];\n  r.push.apply(r, arr);\n\n  /*\n  More Code\n  */\n  return r;\n}\nvar result = test( r );\nconsole.log( r ); // [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]\nconsole.log( result === r ); // the returned array IS the original array but modified\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Here is a sample of what I would like to do</p>\n\n<pre><code>function test(r){\n  var arr = ['d','e','f'];\n  r.push(arr);\n  /*\n  More Code\n  */\n  return r;\n}\nvar result = test(['a','b','c']);\nalert(result.length);//I want this to alert 6\n</code></pre>\n\n<p>What I need to do is pass in an array and attach other arrays to the end of it and then return the array.  Because of passing by reference I cannot use <code>array.concat(array2);</code>.  Is there a way to do this without using something like a for loop to add the elements one by one.  I tried something like <code>r.push(arr.join());</code> but that did not work either.  Also, I would like the option of having objects in the arrays so really the <code>r.push(arr.join());</code> doesn't work very well.  </p>\n",
            "last_activity_date": 1299634999,
            "question_id": 5240335,
            "score": 2,
            "tags": [
                "javascript"
            ],
            "title": "Add two arrays without using the concat method"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The first parameter of new YT.Player needs to be the id of the HTML element (f.e. a DIV) to be replaced with an iframe to the video.\nAs you use 'player' for both of these objects, you will load both into the same element.</p>\n\n<pre><code>&lt;div id=\"ytplayer1\"&gt;&lt;/div&gt;\n&lt;div id=\"ytplayer2\"&gt;&lt;/div&gt;\n\n&lt;script&gt;\n  var player;\n  var player2;\n  function onYouTubePlayerAPIReady() {\n    player = new YT.Player('ytplayer1', {\n      height: '390',\n      width: '640',\n      videoId: 'hdy78ehsjdi'\n    });\n    player2 = new YT.Player('ytplayer2', {\n      height: '390',\n      width: '640',\n      videoId: '81hdjskilct'\n    });\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>Parameters of the functions are described in the Youtube API documentation: <br> <a href=\"https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player\">https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player</a> (EDIT: changed to the right link)</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Since <code>onYouTubeIframeAPIReady</code> function is supposed to called only once the following approach could be used:</p>\n\n<ul>\n<li><p>initialize and save video player information\n(<code>ControlId,width,height,VideoId</code>) in array</p></li>\n<li><p>call <code>onYouTubeIframeAPIReady</code> function to create all the video\nplayers  </p></li>\n</ul>\n\n<h2>Example</h2>\n\n<pre><code>var playerInfoList = [{id:'player',height:'390',width:'640',videoId:'M7lc1UVf-VE'},{id:'player1',height:'390',width:'640',videoId:'M7lc1UVf-VE'}];\n\n      function onYouTubeIframeAPIReady() {\n        if(typeof playerInfoList === 'undefined')\n           return; \n\n        for(var i = 0; i &lt; playerInfoList.length;i++) {\n          var curplayer = createPlayer(playerInfoList[i]);\n        }   \n      }\n      function createPlayer(playerInfo) {\n          return new YT.Player(playerInfo.id, {\n             height: playerInfo.height,\n             width: playerInfo.width,\n             videoId: playerInfo.videoId\n          });\n      }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I need to load more than one video with youtube's API. This is my first time using it so I'm not sure what I'm doing wrong, but this is what I'm trying:</p>\n\n<pre><code>  var player;\n  var player2;\n  function onYouTubePlayerAPIReady() {\n    player = new YT.Player('player', {\n      videoId: 'hdy78ehsjdi'\n    });\n    player2 = new YT.Player('player', {\n      videoId: '81hdjskilct'\n    });\n  }\n</code></pre>\n",
            "last_activity_date": 1379792266,
            "question_id": 17012886,
            "score": 1,
            "tags": [
                "javascript",
                "youtube",
                "youtube-api"
            ],
            "title": "loading multiple video players with youtube api"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>First make sure the object's matrices have been updated.</p>\n\n<pre><code>object.updateMatrixWorld();\n</code></pre>\n\n<p>The render loop usually calls this for you.</p>\n\n<p>Then, do this:</p>\n\n<pre><code>var vector = object.geometry.vertices[i].clone();\n\nvector.applyMatrix4( object.matrixWorld );\n</code></pre>\n\n<p>The vector will now contain the position in world coordinates.</p>\n\n<p>You might want to read some CG reference books.</p>\n\n<ol>\n<li><p>3D math primer for graphics and game development / by Fletcher Dunn and Ian Parberry</p></li>\n<li><p>Essential Mathematics for Games and Interactive Applications: A Programmer\u2019s Guide\nJames M. Van Verth and Lars M. Bishop</p></li>\n</ol>\n\n<p>three.js r69</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>Recent versions of Three.js (v50+) provide this functionality built into the Object3D class. In particular, to get the world coordinates of an Object3D named obj, use the code:</p>\n\n<pre><code>obj.localToWorld( o.position.clone() );\n</code></pre>\n\n<p>Similarly, there is a \"worldToLocal\" method for converting world coordinates into local coordinates, which is slightly more complicated, mathematically speaking.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>As far as I know obj3D.geometry.vertices[i].x, y, z will return with the relative position inside the object. But how to get the absolute position, if the object was moved, rotated or scaled? I have no idea how to make it.</p>\n\n<p>Thanks in advance,</p>\n",
            "last_activity_date": 1415819530,
            "question_id": 11495089,
            "score": 1,
            "tags": [
                "javascript",
                "webgl",
                "three.js"
            ],
            "title": "How to get the absolute position of a vertex in three.js?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here's some simple, naive code to do this that may well do the job for your use case. It does not take into account any text that may be made invisible (either by CSS or by being inside a  or  element, for example) and may have browser discrepancies (IE versus everything else) with line breaks, and takes no account of collapsed whitespace (such as 2 or more consecutive space characters collapsing to one visible space on the page). However, it does work for your example in all major browsers.</p>\n\n<p>Live demo: <a href=\"http://jsfiddle.net/UuDpL/2/\">http://jsfiddle.net/UuDpL/2/</a></p>\n\n<p>Code:</p>\n\n<pre><code>function getSelectionCharOffsetsWithin(element) {\n    var start = 0, end = 0;\n    var sel, range, priorRange;\n    if (typeof window.getSelection != \"undefined\") {\n        range = window.getSelection().getRangeAt(0);\n        priorRange = range.cloneRange();\n        priorRange.selectNodeContents(element);\n        priorRange.setEnd(range.startContainer, range.startOffset);\n        start = priorRange.toString().length;\n        end = start + range.toString().length;\n    } else if (typeof document.selection != \"undefined\" &amp;&amp;\n            (sel = document.selection).type != \"Control\") {\n        range = sel.createRange();\n        priorRange = document.body.createTextRange();\n        priorRange.moveToElementText(element);\n        priorRange.setEndPoint(\"EndToStart\", range);\n        start = priorRange.text.length;\n        end = start + range.text.length;\n    }\n    return {\n        start: start,\n        end: end\n    };\n}\n\nalert( getSelectionCharOffsetsWithin(document.body).start );\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Use following java script function for Highlighting the html page..</p>\n\n<pre><code>function stylizeHighlightedString() \n{\n    var range               = window.getSelection().getRangeAt(0);\n    var selectionContents   = range.extractContents();\n    var span                = document.createElement(\"span\");\n    span.appendChild(selectionContents);\n    span.setAttribute(\"class\",\"uiWebviewHighlight\");\n\n    span.style.backgroundColor  = \"red\";\n    span.style.color            = \"white\";\n\n    range.insertNode(span);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How to retrieve the position of selected text by calculating it's offset immediate after body tag?</p>\n\n<p>For Example consider the following html,</p>\n\n<pre><code>&lt;body&gt; &lt;div&gt;hi&lt;/div&gt; &lt;div&gt;dude!&lt;/div&gt; &lt;/body&gt;\n</code></pre>\n\n<p>on selecting from \"i\" (in hi) to \"du\" (in dude), I need to get 2 as start position &amp; 4 as end position.</p>\n\n<p>Note: Ignore the tag elements.</p>\n\n<p>Javascript is preferable!</p>\n",
            "last_activity_date": 1333439961,
            "question_id": 7991474,
            "score": 1,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "tags",
                "selection"
            ],
            "title": "Calculate Position of selected text javascript/JQuery?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Check this page <a href=\"http://ajaxpatterns.org/XMLHttpRequest_Call\" rel=\"nofollow\">http://ajaxpatterns.org/XMLHttpRequest_Call</a></p>\n\n<p>The whole site is worth a look too.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is assuming you download and include the jQuery javascript library:</p>\n\n<pre><code>$(function() {\n    $.get('getfilename.php', { dir : 'path/to/dir' }, function(data) {\n        // you should now have a json encoded PHP array\n        $.each(data, function(key, val) {\n            alert('index ' + key + ' points to file ' + val);\n        });\n    }, 'json');\n});\n</code></pre>\n\n<p>This should be your PHP (although very insecure):</p>\n\n<pre><code>&lt;?php\n$dir = $_REQUEST['dir'] ;\n\n$filesArray = array(); \n$Counter = 0; \n$files = scandir($dir); \n\nforeach ($files as &amp;$file) { \n    if ($file!='.' &amp;&amp; $file!='..' ) { \n        $filesArray[$Counter] = $file; \n        echo $filesArray[$Counter].''; \n        $Counter++;\n    }\n} \n\necho json_encode($filesArray); \n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>At the end, do this:</p>\n\n<pre><code>print json_encode($filesArray);\n</code></pre>\n\n<p>and it will send back a json object, which Javascript can read easily.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you're just using JavaScript, probably the simplest solution is to include that as a <code>&lt;script&gt;</code> tag. </p>\n\n<p>eg:</p>\n\n<pre><code>&lt;script src=\"Getfilename.php\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Then in your PHP, instead of:</p>\n\n<pre><code>return $filesArray;\n</code></pre>\n\n<p>have it write some JavaScript. </p>\n\n<pre><code>echo \"var result = \".json_encode($filesArray).\";\";\n</code></pre>\n\n<p>Your $filesArray value will now be in your javascript as the variable <code>result</code>. </p>\n\n<pre><code>&lt;script&gt;alert(result)&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use an asynchronous HTTP request in the JavaScript to load the output of the PHP script.</p>\n\n<p>For example, using the <a href=\"http://www.prototypejs.org/\" rel=\"nofollow\">Prototype</a> framework's <a href=\"http://www.prototypejs.org/api/ajax/request\" rel=\"nofollow\">Ajax.Request</a>, say you have an HTML element with <code>id=\"notice\"</code> and you want to update that based on the script's output (a simple \"true\" or \"false\" string).</p>\n\n<pre><code>new Ajax.Request('/validate.php', {\n  method: 'get',\n  onSuccess: function(transport) {\n    var notice = $('notice');\n    if (transport.responseText == 'true')\n      notice.update('Validation successful');\n    else\n      notice.update('Validation failed');\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The PHP should be stored on a remote server and called using a scripted HTTP request. Read up on AJAX for details of how this works and how to perform such tasks.</p>\n\n<p>You can't just do it in a browser as JavaScript has no PHP interpreter and neither do most browsers, and so can't just run a PHP file to get output.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If your not using a javascript framework like jquery or prototype then you will have to create a XMLHttpRequest object yourself which the javascript framework would normally wrap up.\nSomething like the following:</p>\n\n<pre><code>function GetHttpObject() \n{\n    if (typeof XMLHttpRequest != 'undefined')\n        return new XMLHttpRequest();\n\n    try \n    {\n        return new ActiveXObject(\"Msxml2.XMLHTTP\");\n    } \n    catch (e) \n    {\n        try \n        {\n            return new ActiveXObject(\"Microsoft.XMLHTTP\");\n        } \n        catch (e) {}\n    }\n\n    return false;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>function GetXmlHttpObject()\n{\nif (window.XMLHttpRequest)\n  {\n  // code for IE7+, Firefox, Chrome, Opera, Safari\n  return new XMLHttpRequest();\n  }\nif (window.ActiveXObject)\n  {\n  // code for IE6, IE5\n  return new ActiveXObject(\"Microsoft.XMLHTTP\");\n  }\nreturn null;\n}\n\nfunction CallSomePHP(username, password)\n{\n    xmlhttp=GetXmlHttpObject();\n    if (xmlhttp==null)\n    {\n    alert (\"Browser does not support HTTP Request\");\n    return;\n    }\n    var url=\"myPhp.php\";\n    url = url+\"?username=\"+username+\"&amp;password=\"+password;\n    xmlhttp.onreadystatechange=stateChanged;\n    xmlhttp.open(\"GET\",url,true);\n    xmlhttp.send(null);\n}\n\nfunction stateChanged()\n{\n    if (xmlhttp.readyState==4)\n    {\n    \talert(xmlhttp.responseText); // this will alert \"true\";\n    }\n}\n</code></pre>\n\n<p>myphp.php</p>\n\n<pre><code>&lt;?\n  // Get the values of username and password\n  $username = $_GET['username'];\n  $password = $_GET['password'];\n  echo\"true\";\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can get it easily by ajax. Even you can use Jquery to post the value to php and get the ajax response within a single line of code like below. </p>\n\n<pre><code>p['value']=2;//some input value to be posted\n$('#data').load('http://example.com/validator.php',p,function(str){}    );\n</code></pre>\n\n<p>html:</p>\n\n<pre><code>&lt;div id=\"data\"&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>In this piece of code you are posting p['value'] as 2 to the validator.php and getting the response and load that value to data div in the same page.\n<p>In our php code\n//get the posted value into some $value\nand </p>\n\n<pre><code>if($value==2)\necho 'true I got 2'\nelse\necho 'I didnot got 2 You posted wrong value';\n</code></pre>\n\n<p>This will print true I got 2 in the div #data.\nThis may not be your exact requirement but its very helpful.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You should try JQuery. I send and receive from JS to PHP the following way, assuming this is the form.</p>\n\n<pre><code>&lt;div id=\"form\"&gt; \n&lt;input type=\"text\" id=\"email\" /&gt;&lt;br /&gt; \n&lt;button id=\"submit\"&gt;Submit&lt;/button&gt; \n&lt;/div&gt; \n&lt;div id=\"response\"&gt; \n&lt;/div&gt; &lt;!-- load jquery --&gt; \n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js\" type=\"text/javascript\" &gt; &lt;/script&gt;\n</code></pre>\n\n<hr>\n\n<pre><code>// put this in script type=\"text/javascript\" tags\n$(document).ready(function(){\nvar emailValue;\n\n  $(\"#submit\").click(function(){\n  // when the user clicks the submit button\n\n    // get the value of email and put it in the variable we made above\n    emailValue=$(\"#email\").val();\n\n    /* am going to send a post variable called \"email\" \n    * with the value of \"emailValue\" to a script called receiver.php\n    */\n    $.post('receiver.php',{email:emailValue},function(e){\n     // \"e\" is variable that contains the echoed string\n     // check if it's true or false\n  if(e==\"true\")\n  alert (\"valid email\");\n  else\n  alert(\"invalid email\");\n    });\n\n  });\n\n});\n</code></pre>\n\n<h3>receiver.php</h3>\n\n<pre><code>$email=$_POST['email'];\n\n// checkMail is a fictional function that returns a bool\n$valid=checkMail($email);\n\nif($valid)\n{\n // email is valid\n echo \"true\";\n}else{\n // email is invalid\n echo \"false\";\n}\n</code></pre>\n\n<p><strong>Note:</strong> if you are not sending data to the PHP script you should use <code>$.get</code> instead of <code>$.post</code>, it's a little bit faster.</p>\n\n<p>You can also use the JavaScript variable <code>e</code> and load its contents in the <code>response</code> division in your form like this</p>\n\n<pre><code>$(\"#response\").html(e);\n</code></pre>\n\n<p>This would accomplish the same thing as if you used JQuery's <code>load()</code> function like Coder mentions below.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://www.computeledge.com/articles/maintemplatedb.php?How-to-pass-Php-variables-and-Arrays-to-JavaScript&amp;art_id=4\" rel=\"nofollow\">click here for best example</a></p>\n\n<p>I have the problem but above link help me to convert php array into javascript</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to write a function in javascript which will call the Getfilename.php and Get the $filesArray that is return in javascript.</p>\n\n<p>GetFilenme.php is another file and I am trying to access this from Config.html</p>\n\n<p>PHP :\nGetfilename.php </p>\n\n<pre><code>&lt;?php\n$dir = 'uploads/';\n\n$dir = $_REQUEST['dir'] ;\n\n$filesArray = array();\n$Counter = 0;\n$files = scandir($dir);\nforeach ($files as &amp;$file)\n{\n if ($file!='.' &amp;&amp; $file!='..' )\n {\n  $filesArray[$Counter] = $file;\n  echo $filesArray[$Counter].'&lt;br&gt;';\n  $Counter = $Counter + 1;\n\n }\n}\nreturn $filesArray;\n?&gt;\n</code></pre>\n",
            "last_activity_date": 1325762706,
            "question_id": 1594411,
            "score": 1,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "Call php from javascript and return an array from php to Javascript function"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Change <code>keypress</code> to <code>keyup</code>:</p>\n\n<pre><code>$(someTextInputField).on(\"keyup\", function() {\n  alert($(this).val());\n});\n</code></pre>\n\n<p><code>keypress</code> is fired when the key is pressed down, <code>keyup</code> is fired when the key is released.</p>\n",
                    "is_accepted": true,
                    "score": 69
                },
                {
                    "body": "<p>instead of keypress, use <strong><a href=\"http://api.jquery.com/keyup/\">keyup</a></strong>.</p>\n\n<p>Grz, Kris.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Try something like this:</p>\n\n<pre><code>$('#someField').keypress(function() {\n  setTimeout(function() {\n    if ($('#someField').val().length &gt; 0)\n      $('#theButton').attr('disabled', false);\n  }, 1);\n});\n</code></pre>\n\n<p><em>edit</em> &mdash; or be smart and use \"keyup\" like everybody else says :-)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You may want to hook up an <code>onchange</code> event handler instead of using any of the key events.</p>\n\n<pre><code>$(someTextInputField).change(function() {\n    alert($(this).val());\n});\n</code></pre>\n\n<p>Using <code>Edit &gt; Paste</code> or a Right-Click then Paste will fire a change event, but not a key event. Note <em>some</em> browsers may simulate a key event on a paste (though I don't know of any) but you can't <em>count on</em> that behavior.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Alternatively, you can use the keydown event with a timeout of 0. </p>\n\n<p>That way, the changes will be applied instantly, instead of being applied when the user stops holding the key.</p>\n\n<pre><code>$(someTextInputField).on(\"keydown\", function() {\n  setTimeout(function($elem){\n    alert($elem.val());\n  }, 0, $(this));\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Surprised that no one mentioned the js \"input\" event:</p>\n\n<pre><code>$(someTextInputField).on('input', function() {\n  alert($(this).val());\n});\n</code></pre>\n\n<p>Recommended.</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/Events/input\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/Events/input</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I got:</p>\n\n<pre><code>$(someTextInputField).keypress(function() {\n  alert($(this).val());\n});\n</code></pre>\n\n<p>Now the alert always returns the value BEFORE the keypress (e.g. the field is empty, I type 'a' and the alert gives me ''. Then I type 'b' and the alert gives me 'a'...). But I want the value AFTER the keypress - how can I do that?</p>\n\n<p>Background: I'd like to enable a button as soon as the text field contains at least one character. So I run this test on every keypress event, but using the returned val() the result is always one step behind. Using the change() event is not an option for me because then the button is disabled until you leave the text box. If there's a better way to do that, I'm glad to hear it!</p>\n",
            "last_activity_date": 1407372610,
            "question_id": 3063434,
            "score": 49,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "forms",
                "javascript-events"
            ],
            "title": "How can I get jquery .val() AFTER keypress event?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><code>.live()</code> is a deprecated function (from 1.7+) and removed completely from jQuery 1.9+.</p>\n\n<p>You can instead use <code>.on()</code> or <code>.bind()</code> methods:</p>\n\n<p><a href=\"http://api.jquery.com/on/\">http://api.jquery.com/on/</a> <br>\n<a href=\"http://api.jquery.com/bind/\">http://api.jquery.com/bind/</a></p>\n",
                    "is_accepted": true,
                    "score": 120
                },
                {
                    "body": "<p>If you are using jQuery 1.7+ use <code>on(...)</code> instead of <code>live(...)</code>.<br>\nCheck this: <a href=\"http://api.jquery.com/on/\" rel=\"nofollow\">http://api.jquery.com/on/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://api.jquery.com/on/\" rel=\"nofollow\">use .on</a></p>\n\n<pre><code>&lt;script&gt;\n$(document).ready(function(){\n    $('.delete').on('click', function(e){\n        alert('delete');\n        e.preventDefault();\n    });\n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<ol>\n<li><p>If the call to <code>.live()</code> is inside your own code, just change it to <code>.on()</code> using the rules shown at <a href=\"http://api.jquery.com/live\">http://api.jquery.com/live</a>.</p></li>\n<li><p>If the code is in a third-party jQuery plugin, use the jQuery Migrate plugin to restore <code>.live()</code> until the author updates their plugin: <a href=\"https://github.com/jquery/jquery-migrate#readme\">https://github.com/jquery/jquery-migrate#readme</a>.</p></li>\n<li><p>In production sites, do not use URLs that reference the \"latest\" version of jQuery such as <a href=\"http://code.jquery.com/jquery-latest.js\">http://code.jquery.com/jquery-latest.js</a> or <a href=\"http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js\">http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js</a> since they will automatically update when a new version of jQuery is released and your site will suddenly break if it is not compatible.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>There is a jQuery migrate plugin (use that) ....... it will resolve the issue</p>\n\n<p>ASP.NET MVC ajax-unobtrusive + jQuery 1.9 \n<a href=\"http://bugs.jquery.com/ticket/13220\" rel=\"nofollow\">http://bugs.jquery.com/ticket/13220</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is one scenario when neither .on(), nor .bind() won't work: when the element does not exist when the event handler is being added. And this was what live() did.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>See on <a href=\"http://api.jquery.com/live/\" rel=\"nofollow\">http://api.jquery.com/live/</a></p>\n\n<p>old</p>\n\n<pre><code>$(\"a.offsite\").live(\"click\", function(){ alert(\"Goodbye!\"); });                // jQuery 1.3+\n$(document).delegate(\"a.offsite\", \"click\", function(){ alert(\"Goodbye!\"); });  // jQuery 1.4.3+\n</code></pre>\n\n<p>new</p>\n\n<pre><code>$(document).on(\"click\", \"a.offsite\", function(){ alert(\"Goodbye!\"); });        // jQuery 1.7+\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<pre><code>&lt;script&gt;\n$(document).ready(function(){\n    $('.delete').live('click', function(e){\n        alert('delete');\n        e.preventDefault();\n    });\n});\n&lt;/script&gt;\n&lt;a href='#' id='_1' class='delete'&gt;Delete&lt;/a&gt;\n</code></pre>\n\n<p>Gives me an error:</p>\n\n<blockquote>\n  <p>Uncaught TypeError: Object [object Object] has no method 'live' </p>\n</blockquote>\n\n<p>I just don't see the problem?</p>\n",
            "last_activity_date": 1370690149,
            "question_id": 14526033,
            "score": 43,
            "tags": [
                "javascript",
                "jquery",
                "live"
            ],
            "title": "Object has no method &#39;live&#39; - jQuery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Once you know this:</p>\n\n<ul>\n<li>You can create a <code>Date</code> by calling the <a href=\"http://www.java2s.com/Tutorial/JavaScript/0240%5F%5FDate/CreateDateobjectbycalltheconstructor.htm\">constructor</a> with milliseconds since Jan 1, 1970.</li>\n<li>The <code>valueOf()</code> a <code>Date</code> is the number of milliseconds since Jan 1, 1970</li>\n<li>There are <code>60,000</code> milliseconds in a minute :-]</li>\n</ul>\n\n<p>...it isn't so hard.</p>\n\n<p>In the code below, a new <code>Date</code> is created by subtracting the appropriate number of milliseconds from <code>myEndDateTime</code>:</p>\n\n<pre><code>var MS_PER_MINUTE = 60000;\nvar myStartDate = new Date(myEndDateTime - durationInMinutes * MS_PER_MINUTE);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 82
                },
                {
                    "body": "<p>You can also use get and set minutes to achieve it:</p>\n\n<pre><code>var endDate = somedate;\n\nvar startdate = new Date(endDate);\n\nvar durationInMinutes = 20;\n\nstartdate.setMinutes(endDate.getMinutes() - durationInMinutes);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                }
            ],
            "body": "<p>How can I translate this pseudo code into working js [don't worry about where the end date comes from except that it's a valid javascript date].</p>\n\n<pre><code>var myEndDateTime = somedate;  //somedate is a valid js date  \nvar durationInMinutes = 100; //this can be any number of minutes from 1-7200 (5 days)\n\n//this is the calculation I don't know how to do\nvar myStartDate = somedate - durationInMuntes;\n\nalert(\"The event will start on \" + myStartDate.toDateString() + \" at \" + myStartDate.toTimeString());\n</code></pre>\n",
            "last_activity_date": 1237836530,
            "question_id": 674721,
            "score": 41,
            "tags": [
                "javascript"
            ],
            "title": "How do I subtract minutes from a date in javascript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Because <code>\"true\"</code> is converted to <code>NaN</code>, while <code>true</code> is converted to <code>1</code>. So they differ.</p>\n\n<p>Like you reported, both are converted to numbers, because at least <code>true</code> can be (see Erik Reppen's comment), and then compared.</p>\n",
                    "is_accepted": true,
                    "score": 35
                }
            ],
            "body": "<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Comparison_Operators\">MDC describes the <code>==</code> operator as follows</a>:</p>\n\n<blockquote>\n  <p>If the two operands are not of the same type, JavaScript converts the operands then applies strict comparison. If either operand is a number or a boolean, the operands are converted to numbers if possible; else if either operand is a string, the other operand is converted to a string if possible.</p>\n</blockquote>\n\n<p>With this in mind, I would evaluate <code>\"true\" == true</code> as follows:</p>\n\n<ol>\n<li>Are they of the same type? <strong>No</strong></li>\n<li>Is either operand a number or boolean? <strong>Yes</strong></li>\n<li>Can we convert both to a number? <strong>No</strong> (<code>isNaN(Number(\"true\")) // true</code>)</li>\n<li>Is either operand a string? <strong>Yes</strong></li>\n<li>Can we convert the other operand to a string? <strong>Yes</strong> (<code>String(true) === \"true\" // true</code>)</li>\n</ol>\n\n<p>I've ended up with the strings <code>\"true\"</code> and <code>\"true\"</code>, which should evaluate to <code>true</code>, but JavaScript shows false.</p>\n\n<p>What have I missed?</p>\n",
            "last_activity_date": 1341585349,
            "question_id": 11363659,
            "score": 36,
            "tags": [
                "javascript",
                "string",
                "equals"
            ],
            "title": "Why does &quot;true&quot; == true show false in JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Here's an example with a line chart: <a href=\"http://jsfiddle.net/aeZ6P/1/\">http://jsfiddle.net/aeZ6P/1/</a></p>\n\n<p>Important part:</p>\n\n<pre><code>plotOptions: {\n    line: {\n        marker: {\n            enabled: false\n        }\n    }\n}\n</code></pre>\n\n<p>See also: <a href=\"http://api.highcharts.com/highcharts#plotOptions.line\">http://api.highcharts.com/highcharts#plotOptions.line</a></p>\n\n<p>Same effect with spline: <a href=\"http://jsfiddle.net/aeZ6P/\">http://jsfiddle.net/aeZ6P/</a></p>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>Take a look at this from the HighCharts API reference:</p>\n\n<p><a href=\"http://api.highcharts.com/highcharts#plotOptions.series.marker.enabled\">http://api.highcharts.com/highcharts#plotOptions.series.marker.enabled</a></p>\n\n<p><a href=\"http://jsfiddle.net/gh/get/jquery/1.7.2/highslide-software/highcharts.com/tree/master/samples/highcharts/plotoptions/series-marker-enabled/\">http://jsfiddle.net/gh/get/jquery/1.7.2/highslide-software/highcharts.com/tree/master/samples/highcharts/plotoptions/series-marker-enabled/</a></p>\n\n<p>The options you need to add are this:</p>\n\n<pre><code>    plotOptions: {\n        series: {\n            marker: {\n                enabled: false\n            }\n        }\n    },\n</code></pre>\n\n<p>This method is nice as it will work with all charts with the point markers. If you want a specific chart type, check this out:</p>\n\n<pre><code>    plotOptions: {\n        line: { // &lt;--- Chart type here, check the API reference first!\n            marker: {\n                enabled: false\n            }\n        }\n    },\n</code></pre>\n\n<p>Enjoy!</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>In Highcharts are three ways to disable markers.</p>\n\n<p>1) Disable for all series by type:</p>\n\n<pre><code>plotOptions: {\n    line: { /* or spline, area, series, areaspline etc.*/\n        marker: {\n           enabled: false\n        }\n    }\n}\n</code></pre>\n\n<p>2) Disable for one specific series:</p>\n\n<pre><code>series: [{\n    data: [14,17,21],\n    marker: {\n       enabled: false\n    }\n}]\n</code></pre>\n\n<p>3) Disable marker for a certain point:</p>\n\n<pre><code>series: [{\n    data: [{\n        y: 14,\n        marker: {\n            enabled: false\n        }\n    },{\n        y: 17\n    },{\n        y: 21\n    }]\n}]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                }
            ],
            "body": "<p>I'm using HighCharts. <a href=\"http://api.highcharts.com/highcharts#chart\">Here</a> is the documentation. I would like to turn off those points but at first I do not know how is that called. Therefore I can not turn them off. Do you know how am I able to kill those points?</p>\n\n<p><img src=\"http://i.stack.imgur.com/bD0KQ.png\" alt=\"I would like to turn of those points\"></p>\n",
            "last_activity_date": 1399639590,
            "question_id": 14642779,
            "score": 33,
            "tags": [
                "javascript",
                "highcharts"
            ],
            "title": "HighCharts - How can I turn off the points?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>According to the <a href=\"http://www.w3.org/TR/REC-html40/interact/scripts.html\">w3c spec</a>, <code>type</code> is required. So... even though most browsers are going to be robust enough to work without <code>type</code> being properly specified, it is good practice to explicitly set it to <code>text/javascript</code>.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I suppose this should be updated now that the landscape has changed quite a bit:  </p>\n\n<p><strong>For an HTML5 doctype, it's no longer required</strong>. For example: we leave it out of the pages here at Stack Overflow.  If you're using an HTML5 doctype then it's completely optional and defaults to <code>text/javascript</code>, so you're absolutely fine leaving it off in every current (or even very old) browser. Realistically, this was also true even in HTML4 though not strictly valid HTML.</p>\n\n<p><strong>For an HTML4 doctype (to be valid), you need it</strong>.  For a browser to actually function, it's not strictly needed and will behave just fine (this has been true all the way back to Netscape 2) - but it won't be valid HTML. If you have an HTML4 doctype, then keep it around and be valid - cause hey, why not?</p>\n\n<hr>\n\n<p>Original Answer:</p>\n\n<p>I would use <code>type=\"text/javascript\"</code> to be safe in all current browsers, why leave the ambiguity in there to save 21 characters?  <a href=\"http://www.w3.org/TR/REC-html40/interact/scripts.html#h-18.2.2\"><code>language=\"\"</code> however is deprecated, I'd leave it out</a>.</p>\n\n<p>Also, any validator is going to throw an error, though it will likely work inside the browser (unless you're dealing with something <em>very</em> old).</p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>ASP.NET has nothing to do with anything. xhtml 1.0 dictates you use type=\"text/javascript\", with quotes, or else you're not producing valid xhmtl.</p>\n\n<p>Run the <a href=\"http://validator.w3.org/\" rel=\"nofollow\">w3c validator</a> against your pages, and please comply with what it asks.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If the document is parsed as HTML5, the language will default to JavaScript, and no attribute of any sort is required (for future reference, there is no language attribute in HTML5).</p>\n\n<p>If you're catering to HTML 4.x or XHTML 1.x, the default scripting language is supposedly determined from the value of the Content-Script-Type header, whether present locally in a META/meta tag (high priority) or as an HTTP header (low priority).  The type attribute is still required by HTML 4.x even if the Content-Script-Type header is present (locally or otherwise) since the default scripting language only affects how the values of attributes like onload, onclick, etc. are handled.  The type attribute with \"text/javascript\" as the value ought to be used in the case of JavaScript instead of the language attribute unless you're catering to old browsers (e.g. IE4, NN4, perhaps IE5/Mac? ; remember that there was a version of IE6 for Windows 98, so the language attribute is definitely outdated enough).</p>\n\n<p>One last bit of information: technically speaking, application/x-javascript is the correct value for JavaScript (unless it became application/javascript without me knowing), but unfortunately text/javascript is the one with the greatest support in terms of cross-browser compatibility.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><a href=\"http://javascript.crockford.com/script.html\">Douglas Crockford</a>, one of the great authorities and teachers of Javascript, <a href=\"http://javascript.crockford.com/script.html\">has this to say</a>:</p>\n\n<blockquote>\n  <p><code>language=\"javascript\"</code></p>\n  \n  <p>This attribute has been deprecated. It\n  was used to select other programming\n  languages and specific versions of\n  JavaScript. You don't need it. Don't\n  use it.</p>\n  \n  <p><code>type=\"text/javascript\"</code></p>\n  \n  <p>This attribute is optional. Since\n  Netscape 2, the default programming\n  language in all browsers has been\n  JavaScript. In XHTML, this attribute\n  is required and unnecessary. In HTML,\n  it is better to leave it out. The\n  browser knows what to do.</p>\n</blockquote>\n\n<p>Your boss may be doing this for the \"right\" or the \"wrong\" reasons (i.e. he may be following Crockford's advice, or he may just be lazy), but I don't think you can necessarily make a judgement.  If the rest of his HTML and JS is sloppy, that's another thing. I'd venture that the contents of the script tag could be more of a religious thing like tab size or brace placement.</p>\n\n<p><strong>Edit:</strong> @coffeeaddict has pointed out that not putting the proper attributes into the tag messes up his compiles. I'd say that trumps any consideration of whether the attributes are strictly correct or necessary, because projects should always build cleanly without errors or warnings.  Same goes for validators, etc, if they are part of the project standard.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>The W3C recommendation for HTML5 says that you do not need to include </p>\n\n<p><code>type=\"text/javascript\"</code></p>\n\n<p>The browser assumes that it is text/javascript unless otherwise stated as a different type.</p>\n\n<p><a href=\"http://dev.w3.org/html5/spec/Overview.html#the-script-block-s-type\">http://dev.w3.org/html5/spec/Overview.html#the-script-block-s-type</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>Most of the script tags I create, I always include <code>type=\"text/javascript\" language=\"javascript\"</code> in the tag.  My boss however does not.  Sometimes he excludes both, sometimes just has <code>language=javascript</code> even without the quotes</p>\n\n<p>Now we have not had an issue in any of the major browsers with his tags.  I'm talking about all versions of IE, FF, Safari, and Chrome.</p>\n\n<p>Personally I feel it's laziness and just totally improper and bad coding practice to leave stuff out like this even if it works without it.</p>\n\n<p>Anyone know if both should be included or just one or is it ok to leave both out in ASP.NET?</p>\n",
            "last_activity_date": 1399932927,
            "question_id": 2626563,
            "score": 32,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Leaving out type=&quot;text/javascript&quot; language=&quot;javascript&quot;"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Using jQuery:</p>\n\n<pre><code>&lt;form id=\"target\" action=\"destination.html\"&gt;\n  &lt;input type=\"file\" id=\"file\" value=\"Go\" /&gt;\n&lt;/form&gt;\n\n\n$('#file').change(function() {\n  $('#target').submit();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>You can simply call your form's <code>submit</code> method in the <code>onchange</code> event of your file input.</p>\n\n<pre><code>document.getElementById(\"file\").onchange = function() {\n    document.getElementById(\"form\").submit();\n};\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/cwvc4/73/\">http://jsfiddle.net/cwvc4/73/</a></p>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<p>jquery <a href=\"http://api.jquery.com/change/\" rel=\"nofollow\"><code>.change()</code></a> and <a href=\"http://api.jquery.com/submit/\" rel=\"nofollow\"><code>.submit()</code></a> will help you.</p>\n\n<p>or in javascript with <code>onchange</code> event :</p>\n\n<pre><code>&lt;form action=\"upload.php\" method=\"post\" enctype=\"multipart/form-data\"&gt;\n&lt;input type=\"file\" name=\"filename\" onchange=\"javascript:this.form.submit();\"&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>For those who are using .NET WebForms a full page submit may not be desired. Instead, use the same <code>onchange</code> idea to have javascript click a hidden button (e.g. &lt;asp:Button...) and the hidden button can take of the rest. Make sure you are doing a <code>display: none;</code> on the button and not <code>Visible=\"false\"</code>. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The smallest one is\n<code>&lt;input type=\"file\" name=\"file\" onchange=\"javascript:document.getElementById('form').submit();\" /&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I like @alex-turpin's answer. But I prefer to only use one id for to lookup the elemnts in the DOM:</p>\n\n<pre><code>var uploadElement = document.getElementById(\"file\");\nuploadElement.onchange = function() {\n    uploadElement.form.submit();\n};\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/4wb2r3op/\" rel=\"nofollow\">http://jsfiddle.net/4wb2r3op/</a></p>\n\n<hr>\n\n<p>edit: even shorter is defining the <code>submit</code> in the <code>onChange</code> setting:</p>\n\n<pre><code>&lt;form action=\"http://example.com\"&gt;\n    &lt;input type=\"file\" id=\"file\" onChange=\"form.submit()\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p><strong>No additional javascript required!</strong></p>\n\n<p><a href=\"http://jsfiddle.net/4ng96dkp/\" rel=\"nofollow\">http://jsfiddle.net/4ng96dkp/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>HTML</strong></p>\n\n<pre><code>&lt;form id=\"xtarget\" action=\"upload.php\"&gt;\n&lt;input type=\"file\" id=\"xfilename\"&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p><strong>JAVASCRIPT PURE</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nwindow.onload = function() {\n    document.getElementById(\"xfilename\").onchange = function() {\n        document.getElementById(\"xtarget\").submit();\n    }\n};\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a simple file upload form. How do I make it submit automatically when a file has been selected? I don't want the user to have to click the Submit button.</p>\n",
            "last_activity_date": 1418380341,
            "question_id": 7321855,
            "score": 31,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "How do I auto-submit an upload form when a file is selected?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.w3schools.com/jsref/jsref%5FfromCharCode.asp\">fromCharCode</a> method converts ascii to char : </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\ndocument.write(String.fromCharCode(65,66,67)); // ABC\n&lt;/script&gt;\n</code></pre>\n\n<p>hope this helps !</p>\n",
                    "is_accepted": false,
                    "score": 69
                },
                {
                    "body": "<p>The method you're looking for is String.fromCharCode (<a href=\"http://www.w3schools.com/jsref/jsref_fromCharCode.asp\">http://www.w3schools.com/jsref/jsref_fromCharCode.asp</a>).</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>A reference for those of us that don't like w3schools ;)</p>\n\n<p><a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode\" rel=\"nofollow\">https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>In JavaScript, how can you get a string representation of an ASCII value.</p>\n\n<p>e.g. how to turn 65 into \"A\"?</p>\n",
            "last_activity_date": 1410870533,
            "question_id": 602020,
            "score": 31,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript: create a string or char from an ASCII value"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>It's a common reference to a jQuery wrapped object.  It makes reading the code easier to know which variables are jQuery wrapped.</p>\n\n<pre><code>//Item has been \"cached\" for later use in the script as a jQuery object.\nvar $item = $(this);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>In my experience this is just a readability. Some developers like to prefix their variables so that they are easy to spot. It could also be a PHP habit creeping it's way in to Javascript.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Many people using jQuery will prefix variables that contain a jQuery object with a $, so that they are easily identified. Consider this example:</p>\n\n<pre><code>var $img = $(\".someclass span.otherclass img\");\n/* somewhere later in the code */\n$img.bind(\"click\", function() {/*...*/});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Dollar signs in code that uses JQuery commonly means that the variable in question is a jQuery variable (an object wrapped by jquery).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>for me a common practice is this:</p>\n\n<p>if a variable is private i use an underscore like this:</p>\n\n<pre><code>(function(){\n     var _foo = \"bar\";\n})()</code></pre>\n\n<p>if its public ill use no underscore:</p>\n\n<pre><code>var foo = \"bar\"</code></pre>\n\n<p>and if its a jQuery selector ill use the $:</p>\n\n<pre><code>var $foo = $('bar');\n//then you can access it like this\n$foo.attr('id')</code></pre>\n\n<p>its just coding convention and it allows you to quickly reference what type the variable is later in the code.</p>\n",
                    "is_accepted": false,
                    "score": 23
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/205853/why-would-a-javascript-variable-start-with-a-dollar-sign\">Why would a javascript variable start with a dollar sign?</a>  </p>\n</blockquote>\n\n\n\n<p>I see people using the dollar sign in front of variables when using jQuery. Is there any reason behind this? I'm I missing something basic or is it just a common practice?</p>\n",
            "last_activity_date": 1306979777,
            "question_id": 6209462,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "variables",
                "dollar-sign"
            ],
            "title": "When/why to prefix variables with &quot;$&quot; when using jQuery?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Of course it returns a string.  If you wanted to round the numeric variable you'd use Math.round() instead.  The point of toFixed is to format the number with a fixed number of decimal places <em>for display to the user</em>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>What would you expect it to return when it's supposed to format a number ? If you have a number you can't pretty much do anything with it because e.g.<code>2 == 2.0 == 2.00</code> etc. so it has to be a string.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Because its primary use is displaying numbers? If you want to round numbers, use <code>Math.round()</code> with apropriate factors.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://bclary.com/2004/11/07/#a-15.7.4.5\" rel=\"nofollow\"><code>Number.prototype.toFixed</code></a> is specified to work that way:</p>\n\n<blockquote>\n  <p><strong>Number.prototype.toFixed(<em>fractionDigits</em>)</strong></p>\n  \n  <p>Return a string containing the number represented in fixed-point notation with <em>fractionDigits</em> digits after the decimal point. [\u2026]</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It returns a string because 0.1, and powers thereof (which are used to display decimal fractions), are not representable (at least not with full accuracy) in binary floating-point systems.</p>\n\n<p>For example, 0.1 is really 0.1000000000000000055511151231257827021181583404541015625, and 0.01 is really 0.01000000000000000020816681711721685132943093776702880859375. (Thanks to <code>BigDecimal</code> for proving my point. :-P)</p>\n\n<p>Therefore (absent a decimal floating point or rational number type), outputting it as a string is the only way to get it trimmed to exactly the precision required for display.</p>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>I've solved this problem changing this:</p>\n\n<pre><code>someNumber = someNumber.toFixed(2)\n</code></pre>\n\n<p>with this:</p>\n\n<pre><code>someNumber = (someNumber.toFixed(2))/1;\n</code></pre>\n\n<p>Maybe could help someone!!</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>the '+' parse your string to number</p>\n\n<pre><code>someNumber = +(someNumber).toFixed(2);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I solved it with converting it back to number using JavaScript's <code>Number()</code> function</p>\n\n<pre><code>var x = 2.2873424;\nx = Number(x.toFixed(2));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Am I missing something here?</p>\n\n<pre><code>var someNumber = 123.456;\nsomeNumber = someNumber.toFixed(2);\nalert(typeof(someNumber));\n//alerts string\n</code></pre>\n\n<p><em><strong>Why</em></strong> does <code>.toFixed()</code> return a string?</p>\n",
            "last_activity_date": 1419851604,
            "question_id": 2283566,
            "score": 28,
            "tags": [
                "javascript",
                "types",
                "rounding"
            ],
            "title": ".toFixed() returns a string in JavaScript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>you're missing the class 'in' on accordion-body divs for Menu2 and Menu3</p>\n\n<p>each of your accordion-body divs needs to have <code>class=\"accordion-body collapse in\"</code>. Right now, a couple of them just have <code>class=\"accordion-body collapse\"</code></p>\n\n<p><a href=\"http://jsfiddle.net/fcJJT/\">http://jsfiddle.net/fcJJT/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Replacing</p>\n\n<pre><code>$(\".collapse\").collapse();\n$('#accordion').collapse({hide: true})\n</code></pre>\n\n<p>with:</p>\n\n<pre><code>$('#collapseOne').collapse(\"hide\");\n</code></pre>\n\n<p>should do the trick. I think the first one is toggled on by default and this one line switches it off.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>this is what i use for my accordian. it starts off fully closed.\nyou want</p>\n\n<pre><code> active: false;//this does the trick\n</code></pre>\n\n<p>full:</p>\n\n<pre><code>&lt;div id=\"accordian_div\"&gt;\n    &lt;h1&gt;first&lt;/h1&gt;\n        &lt;div&gt;\n            put something here\n        &lt;/div&gt;\n    &lt;h1&gt;second&lt;/h1&gt;\n        &lt;div&gt;\n            put something here\n        &lt;/div&gt;\n    &lt;h1&gt;third&lt;/h1&gt;\n        &lt;div&gt;\n            put something here\n        &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n     $(document).ready(function() {\n        $(\"#accordian_div\").accordion({\n            collapsible: true,\n            active: false,\n            clearStyle: true\n        });\n      });\n&lt;/script&gt;\n</code></pre>\n\n<p>Not familiar with bottstrap but this seems a bit cleaner than all the classes you have to deal with and works smoothly.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can pass the option <code>toggle: false</code> to the collapse statement to have all elements of the accordion hidden on load, like so:</p>\n\n<pre><code>$('.collapse').collapse({\n    toggle: false\n});\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/gqe7g/9/\" rel=\"nofollow\">http://jsfiddle.net/gqe7g/9/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>From the doc:</p>\n\n<blockquote>\n  <p>If you'd like it to default open, add the additional class in.</p>\n</blockquote>\n\n<p>In other words, leave out the \"in\" and it will default to close. <a href=\"http://jsfiddle.net/JBRh7/\">http://jsfiddle.net/JBRh7/</a></p>\n",
                    "is_accepted": false,
                    "score": 75
                },
                {
                    "body": "<p>Use the hide method that Bootstrap provides, </p>\n\n<pre><code>$('.collapse').collapse('hide')\n</code></pre>\n\n<p>Demo at <a href=\"http://thefanciful.com\" rel=\"nofollow\">http://thefanciful.com</a>. My information is hidden on load, and activates when the button is pushed. :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want the <a href=\"/questions/tagged/accordion\" class=\"post-tag\" title=\"show questions tagged &#39;accordion&#39;\" rel=\"tag\">accordion</a> to <a href=\"/questions/tagged/collapse\" class=\"post-tag\" title=\"show questions tagged &#39;collapse&#39;\" rel=\"tag\">collapse</a> initially you can do so with pre-existing <a href=\"/questions/tagged/bootstrap\" class=\"post-tag\" title=\"show questions tagged &#39;bootstrap&#39;\" rel=\"tag\">bootstrap</a> definitions, javascript is unnecessary.</p>\n\n<p>Adding the class <code>collapsed</code> to the anchor or handle which will be the click target for users to <a href=\"/questions/tagged/toggle\" class=\"post-tag\" title=\"show questions tagged &#39;toggle&#39;\" rel=\"tag\">toggle</a> them open/closed.  Also, remove the <code>in</code> class from the collapsing container.</p>\n\n<p>Bootstrap also provides a couple of optional specifications which can be passed by adding <code>data-parent=\"\"</code> and <code>data-toggle=\"\"</code></p>\n\n<ul>\n<li><code>data-parent</code> accepts a selector and specifies that all collapsible elements which are siblings of the data-parent will be toggled in unison.</li>\n<li><code>data-toggle</code> accepts a boolean <code>true</code> or <code>false</code> and sets invocation on the collapsible element.</li>\n</ul>\n\n<hr>\n\n<h2>Example Scenarios:</h2>\n\n<p>\u27a4 <strong>Will load collapsed</strong></p>\n\n<pre><code>&lt;div class=\"accordion\" id=\"accordion2\"&gt;\n    &lt;div class=\"accordion-group\"&gt;\n        &lt;div class=\"accordion-heading\"&gt;\n            &lt;a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-parent=\"#accordion2\" href=\"#collapseOne\"&gt;\n                Title\n            &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div id=\"collapseOne\" class=\"accordion-body collapse\"&gt;\n            &lt;div class=\"accordion-inner\"&gt;\n                Details\n</code></pre>\n\n<p>\u27a4 <strong>Will load expanded</strong></p>\n\n<pre><code>&lt;div class=\"accordion\" id=\"accordion2\"&gt;\n    &lt;div class=\"accordion-group\"&gt;\n        &lt;div class=\"accordion-heading\"&gt;\n            &lt;a class=\"accordion-toggle\" data-toggle=\"collapse\" data-parent=\"#accordion2\" href=\"#collapseOne\"&gt;\n                Title\n            &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div id=\"collapseOne\" class=\"accordion-body\"&gt;\n            &lt;div class=\"accordion-inner\"&gt;\n                Details\n</code></pre>\n\n<p>\u27a4  <strong>Will load expanded</strong></p>\n\n<pre><code>&lt;div class=\"accordion\" id=\"accordion2\"&gt;\n    &lt;div class=\"accordion-group\"&gt;\n        &lt;div class=\"accordion-heading\"&gt;\n            &lt;a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-parent=\"#accordion2\" href=\"#collapseOne\"&gt;\n                Title\n            &lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div id=\"collapseOne\" class=\"accordion-body collapse in\"&gt;\n            &lt;div class=\"accordion-inner\"&gt;\n                Details\n</code></pre>\n\n<p>In the 3rd example, the accordion will default to being expanded regardless of the fact that the <code>collapsed</code> class is specified because the <code>in</code> class on the container will receive more weight.</p>\n\n<hr>\n\n<p>If you do want to trigger the accordion via Javascript you only have to call the method <code>collapse()</code> along with the appropriate id or class selector which targets the collapsible element.</p>\n\n<p><code>collapse()</code> also accepts the same options as can be added to the markup.  <code>data-parent</code> and <code>data-toggle</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>Using jQuery</strong>, This worked for me having ALL containers <strong>collapsed</strong> at page load</p>\n\n<p>Adding <code>{active: false}</code> and must have <code>collapsible</code> enabled of course</p>\n\n<pre><code>  $(function () {\n      $(\"#accordion\").accordion({ collapsible: true, active: false });\n      $(\".selector\").accordion();\n  });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>if you want to close all collaps on page load \nin class \"collapse in\" replace it to class \"collapse\"</p>\n\n<p>id=\"collapseOne\" class=\"panel-collapse collapse <strong>in</strong>\" role=\"tabpanel\" aria-labelledby=\"headingOne\"></p>\n\n<p>update to </p>\n\n<p>id=\"collapseOne\" class=\"panel-collapse collapse\" role=\"tabpanel\" aria-labelledby=\"headingOne\"></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to follow the example here</p>\n\n<p><a href=\"http://twitter.github.com/bootstrap/javascript.html#collapse\">http://twitter.github.com/bootstrap/javascript.html#collapse</a></p>\n\n<p>I have placed a mockup here</p>\n\n<p><a href=\"http://jsfiddle.net/gqe7g/\">http://jsfiddle.net/gqe7g/</a></p>\n\n<p>Loading behavior is strange.  It shows Menu1 then collapses it then shows Menu2 and Menu3.  I would like everything to open collapsed.  I have tried the following without success</p>\n\n<pre><code>$('#accordion').collapse({hide: true})\n</code></pre>\n",
            "last_activity_date": 1417258422,
            "question_id": 9419470,
            "score": 26,
            "tags": [
                "javascript",
                "html",
                "javascript-events",
                "twitter-bootstrap"
            ],
            "title": "How do I get my accordion to load with all the menus closed?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The <a href=\"http://dev.w3.org/html5/markup/input.date.html\">HTML5 date input</a> field is specific about the format it uses:\n<a href=\"http://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339 full-date</a> </p>\n\n<p>Is it possible to change the legacy date picker to use yyyy-mm-dd format (and update the server side that reads that)? </p>\n\n<p>I assume not, so then you can add some Javascript glue code that listens for a change event on the HTML5 input and updates a hidden date value field to match the format of the legacy date picker (converts yyyy-mm-dd to dd-MMM-yyyy).</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>In Google Chrome, this has recently changed. The values displayed to the user are now based on the operating system locale. The readout, so <code>input.value</code>, always returns as <code>yyyy-mm-dd</code> regardless of the presentation format, however.</p>\n\n<p>Way more useful in my opinion.</p>\n\n<p>Source:</p>\n\n<p><a href=\"http://updates.html5rocks.com/2012/08/Quick-FAQs-on-input-type-date-in-Google-Chrome\">http://updates.html5rocks.com/2012/08/Quick-FAQs-on-input-type-date-in-Google-Chrome</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>The format of the HTML date field is standard. While it is not possible to change this, you can easily convert from a date object to the format you are looking for given your user has JavaScript enabled.</p>\n\n<pre><code>// Converts any valid Date string or Date object into the format dd-MMM-yyyy\nfunction dateTransform(d) {\n    var s = (new Date(d)).toString().split(' ');\n    return [s[2],s[1],s[3]].join('-');\n}\n</code></pre>\n\n<p>Otherwise you will need to submit in ISO format and implement a server-side solution. Perhaps in time, this could lead to more usage of the standard date format in every locality.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'd like to add native date pickers to my application, which currently uses a legacy, home-rolled system. Date input support isn't widespread, yet, but if I could present both implementations based on compatibility, that would be ideal.</p>\n\n<p>Is there any way to specify the output of the value given by an HTML datepicker? The default for opera is <code>yyyy-mm-dd</code>, and I very explicitly need <code>dd-MMM-yyyy</code>.</p>\n\n<p>Is there any way to control this output, currently?</p>\n",
            "last_activity_date": 1382423378,
            "question_id": 3496241,
            "score": 26,
            "tags": [
                "javascript",
                "jquery",
                "html5",
                "datepicker",
                "web-standards"
            ],
            "title": "Specifying the value output of of an HTML5 input type = date?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I think that the best approach is to assign the onclick handler <a href=\"http://en.wikipedia.org/wiki/Unobtrusive%5FJavaScript\" rel=\"nofollow\">unobtrusively</a>.</p>\n\n<p>Something like this:</p>\n\n<pre><code>window.onload = function(){\n    var myLink = document.getElementsById('myLinkId');\n    myLink.onclick = function(){ \n        parse('#', false, '&lt;a href=\"xyz');\n        return false;\n    }\n}\n\n//...\n\n\n&lt;a href=\"#\" id=\"myLink\"&gt;Test&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Did you try</p>\n\n<p><strong><code>&amp;quot;</code></strong> or <strong><code>\\x22</code></strong></p>\n\n<p>instead of</p>\n\n<pre><code>\\\"\n</code></pre>\n\n<p>?</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>You may also want to try two backslashes <code>(\\\\\")</code> to escape the escape character.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>While I agree with CMS about doing this in an unobtrusive manner (via a lib like jquery or dojo), here's what also work:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction parse(a, b, c) {\n    alert(c);\n  }\n\n&lt;/script&gt;\n\n&lt;a href=\"#x\" onclick=\"parse('#', false, 'xyc&amp;quot;foo');return false;\"&gt;Test&lt;/a&gt;\n</code></pre>\n\n<p>The reason it barfs is not because of JavaScript, it's because of the HTML parser.  It has no concept of escaped quotes to it trundles along looking for the end quote and finds it and returns that as the onclick function.  This is invalid javascript though so you don't find about the error until JavaScript tries to execute the function..</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It needs to be HTML-escaped, not Javascript-escaped. Change <code>\\\"</code> to <strong><code>&amp;quot;</code></strong>.</p>\n",
                    "is_accepted": false,
                    "score": 36
                }
            ],
            "body": "<p>The simple code block below can be served up in a static HTML page but results in a JavaScript error.  How should you escape the embedded double quote in the onClick handler (i.e. \\\"xyz)?  Note that the HTML is generated dynamically by pulling data from a database, the data of which is snippets of other HTML code that could have either single or double quotes.  It seems that adding a single backslash ahead of the double quote character doesn't do the trick.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function parse(a, b, c) {\n        alert(c);\n    }\n&lt;/script&gt;\n\n&lt;a href=\"#x\" onclick=\"parse('#', false, '&lt;a href=\\\"xyz'); return false\"&gt;Test&lt;/a&gt;\n</code></pre>\n",
            "last_activity_date": 1419402598,
            "question_id": 1081573,
            "score": 26,
            "tags": [
                "javascript",
                "html",
                "javascript-events",
                "escaping"
            ],
            "title": "Escaping double quotes in JavaScript onClick event handler"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>A possible solution might be to bind an event handler to <em>everything</em>:</p>\n\n<pre><code>var currentElement = null;\n\n$('body, body *').bind('mouseover', function(e) { // You might need to use .on(), too.\n    if(e.target === e.currentTarget) {\n        currentElement = $(this);\n    }\n});\n</code></pre>\n\n<p>If you have too many elements on your page, though, this may not be the best idea. <a href=\"http://jsfiddle.net/minitech/acGxc/\" rel=\"nofollow\">And here's a demo.</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h1><a href=\"http://jsfiddle.net/MPTTp/\">DEMO</a></h1>\n\n<p>There's a really cool function called <code>document.elementFromPoint</code> which does what it sounds like.</p>\n\n<p>What we need is to find the x and y coords of the mouse and then call it using those values:</p>\n\n<pre><code>var x = event.clientX, y = event.clientY,\n    elementMouseIsOver = document.elementFromPoint(x, y);\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/document.elementFromPoint\"><strong>document.elementFromPoint</strong></a></p>\n\n<p><a href=\"http://api.jquery.com/category/events/event-object/\"><strong>jQuery event object</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>Let me start out by saying that I don't recommend using the method I'm about to suggest. It's much better to use event driven development and bind events only to the elements you're interested in knowing whether or not the mouse is over with <code>mouseover</code>, <code>mouseout</code>, <code>mouseenter</code>, <code>mouseleave</code>, etc.</p>\n\n<p>If you absolutely MUST have the ability to know which element the mouse is over, you'd need to write a function that binds the <code>mouseover</code> event to everything in the DOM, and then store whatever the current element is in some variable.</p>\n\n<p>You could so something like this:</p>\n\n<pre><code>window.which_element_is_the_mouse_on = (function() {\n\n    var currentElement;\n\n    $(\"body *\").on('mouseover', function(e) {\n        if(e.target === e.currentTarget) {\n            currentElement = this;\n        }\n    });\n\n    return function() {\n        console.log(currentElement);    \n    }\n}());\n</code></pre>\n\n<p>Basically, I've created an immediate function which sets the event on all elements and stores the current element within the closure to minimize your footprint.</p>\n\n<p>Here's a working demo that calls <code>window.which_element_is_the_mouse_on</code> every second and logs what element the mouse is currently over to the console.</p>\n\n<p><a href=\"http://jsfiddle.net/LWFpJ/1/\" rel=\"nofollow\">http://jsfiddle.net/LWFpJ/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Mouseover events bubble, so you can put a single listener on the body and wait for them to bubble up, then grab the <code>event.target</code> or <code>event.srcElement</code>:</p>\n\n<pre><code>function getTarget(event) {\n    var el = event.target || event.srcElement;\n    return el.nodeType == 1? el : el.parentNode;\n}\n\n&lt;body onmouseover=\"doSomething(getTarget(event));\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>In newer browsers, you could do the following:</p>\n\n<pre><code>document.querySelectorAll( \":hover\" );\n</code></pre>\n\n<p>That'll give you a NodeList of items that the mouse is currently over in document order.  The last element in the NodeList is the most specific, each preceding one should be a parent, grandparent, and so on.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<pre><code>&lt;!-- One simple solution to your problem could be like this: --&gt;\n\n&lt;div&gt;\n&lt;input type=\"text\" id=\"fname\" onmousemove=\"javascript: alert(this.id);\" /&gt;\n&lt;!-- OR --&gt;\n&lt;input type=\"text\" id=\"fname\" onclick=\"javascript: alert(this.id);\" /&gt;\n&lt;/div&gt;\n&lt;!-- Both mousemove over the field &amp; click on the field displays \"fname\"--&gt;\n&lt;!-- Works fantastic in IE, FireFox, Chrome, Opera. --&gt;\n&lt;!-- I didn't test it for Safari. --&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Although the following may not actually answering the question, since this is the first result of googling (the googler may not asking exactly the same question:), hope it will provide some extra input.</p>\n\n<p>There are actually two different approaches to get a list of all elements the mouse is currently over (for newer browsers, perhaps):</p>\n\n<h2>The \"structual\" approach - Ascending DOM tree</h2>\n\n<p>As in dherman's answer, one can call</p>\n\n<pre><code>var elements = document.querySelectorAll(':hover');\n</code></pre>\n\n<p>However, this assumes that only children will overlay their ancestors, which is usually the case, but not true in general, especially when dealing with SVG where element in different branches of the DOM tree may overlap each other.</p>\n\n<h2>The \"visual\" approach - Based on \"visual\" overlapping</h2>\n\n<p>This method uses <code>document.elementFromPoint(x, y)</code> to find the topmost element, temporarily hide it (since we recover it immediately in the same context, the browser will not actually renders this), then go on to find the second topmost element... Looks a little hacky, but it returns what you expect when there are, e.g., siblings elements in a tree occluding each other. Please find <a href=\"http://bytes.com/topic/javascript/answers/567610-elements-below-point-under-cursor\" rel=\"nofollow\">this post</a> for more details,</p>\n\n<pre><code>function allElementsFromPoint(x, y) {\n    var element, elements = [];\n    var old_visibility = [];\n    while (true) {\n        element = document.elementFromPoint(x, y);\n        if (!element || element === document.documentElement) {\n            break;\n        }\n        elements.push(element);\n        old_visibility.push(element.style.visibility);\n        element.style.visibility = 'hidden'; // Temporarily hide the element (without changing the layout)\n    }\n    for (var k = 0; k &lt; elements.length; k++) {\n        elements[k].style.visibility = old_visibility[k];\n    }\n    elements.reverse();\n    return elements;\n}\n</code></pre>\n\n<p>Try both, and check their different returns.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The target of the <code>mousemove</code> DOM event is the top-most DOM element under the cursor when the mouse moves:</p>\n\n<pre><code>(function(){\n    //Don't fire multiple times in a row for the same element\n    var prevTarget=null;\n    document.addEventListener('mousemove', function(e) {\n        //This will be the top-most DOM element under cursor\n        var target=e.target;\n        if(target!==prevTarget){\n            console.log(target);\n            prevTarget=target;\n        }\n    });\n})();\n</code></pre>\n\n<p>This is similar to @Philip Walton's solution, but doesn't require jQuery or a setInterval.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want a function that tells me which element the mouse cursor is over.</p>\n\n<p>So, for example, if the user's mouse is over this textarea (with id <code>wmd-input</code>), calling <code>window.which_element_is_the_mouse_on()</code> will be functionally equivalent to <code>$(\"#wmd-input\")</code></p>\n",
            "last_activity_date": 1421332354,
            "question_id": 8813051,
            "score": 25,
            "tags": [
                "javascript",
                "dom",
                "mouse"
            ],
            "title": "Determine which element the mouse pointer is on top of in Javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Is object: </p>\n\n<pre><code>function isObject ( obj ) {\n   return obj &amp;&amp; (typeof obj  === \"object\");\n}\n</code></pre>\n\n<p>Is array:</p>\n\n<pre><code>function isArray ( obj ) { \n  return isObject(obj) &amp;&amp; (obj instanceof Array);\n}\n</code></pre>\n\n<p>Because arrays are objects you'll want to test if a variable is an array first, and then if it is an object:</p>\n\n<pre><code>if (isArray(myObject)) {\n   // do stuff for arrays\n}\nelse if (isObject(myObject)) {\n   // do stuff for objects\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>you can use the constuctor property of your output: </p>\n\n<pre><code>if(output.constructor == Array){\n}\nelse if(output.constructor == Object){\n}\n</code></pre>\n\n<p>Edit: It's the year 2014 now and my answer from 2008 still gets +1 every few weeks, so an update is due. </p>\n\n<p>Modern browsers support <code>Array.isArray</code> method. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\">See MDN</a> for documentation and a polyfill.</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>Check for \"constructor\" property on the object. It is Array - it is an array object.</p>\n\n<pre>\n\nvar a = {\n 'b':{length:0},\n 'c':[1,2]\n}\n\nif (a.c.constructor == Array)\n   for (var i = 0; i &lt; a.c.length; i++)\n      alert(a.c[i]);\nelse\n   for (var s in a.b);\n      alert(a.b[s]);\n\n</pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Did you mean \"Object\" instead of \"Hash\"?</p>\n\n<pre><code>&gt;&gt;&gt; var a = [];\n&gt;&gt;&gt; var o = {};\n&gt;&gt;&gt; a instanceof Array\ntrue\n&gt;&gt;&gt; o instanceof Array\nfalse\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I made a function for determining if it's a dictionary.</p>\n\n<pre><code>exports.is_dictionary = function (obj) {\n    if(!obj) return false;\n    if(Array.isArray(obj)) return false;\n    if(obj.constructor != Object) return false;\n    return true;\n};\n\n// return true\ntest.equal(nsa_utils.is_dictionary({}), true);\ntest.equal(nsa_utils.is_dictionary({abc:123, def:456}), true);\n\n// returns false\ntest.equal(nsa_utils.is_dictionary([]), false);\ntest.equal(nsa_utils.is_dictionary([123, 456]), false);\ntest.equal(nsa_utils.is_dictionary(null), false);\ntest.equal(nsa_utils.is_dictionary(NaN), false);\ntest.equal(nsa_utils.is_dictionary('hello'), false);\ntest.equal(nsa_utils.is_dictionary(0), false);\ntest.equal(nsa_utils.is_dictionary(123), false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The output of my JSON call can either be an Array or a Hash. How do I distinguish between these two?</p>\n",
            "last_activity_date": 1400363901,
            "question_id": 218798,
            "score": 25,
            "tags": [
                "javascript"
            ],
            "title": "In javascript how can we identify whether an object is a Hash or an Array?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I'm wondering if this issue is even relevant if you set body,html height to 100% so that the default document is the height of the viewport, so the max height of the div will be the height of the viewport if you set it to 100% height. Just a thought...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Is this what you're looking for?</p>\n\n<p><a href=\"http://andylangton.co.uk/articles/javascript/get-viewport-size-javascript/\" rel=\"nofollow\">http://andylangton.co.uk/articles/javascript/get-viewport-size-javascript/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here try this: <a href=\"http://jsfiddle.net/serkanyersen/yNfuX/\" rel=\"nofollow\">http://jsfiddle.net/serkanyersen/yNfuX/</a></p>\n\n<p>It will respect the parent's padding and margin properties. When you click MAX button, DIV will expand to most available space. I'm sure you can convert this according to your needs.</p>\n\n<p>It actually needs to be recursive, starting from itself to the very top, but I didn't have time to implement that.</p>\n\n<p>NOTE: Try resizing the page, and uncomment the parent DIV to see it fully work.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is your code, modified to use binary search (so it's much quicker).</p>\n\n<p><a href=\"http://jsfiddle.net/thai/zkuGv/4/\" rel=\"nofollow\">http://jsfiddle.net/thai/zkuGv/4/</a></p>\n\n<p>It begins at 1 pixel and doubling its size until the it hits the maximum (I use 2<sup>53</sup>, which is the biggest integer that can be stored in JavaScript without losing precision and would make the binary search buggy), or the div collapses to zero pixel.</p>\n\n<p>Suppose we set the div to size <em>h</em> and it disappears, then the maximum size must be between <em>h</em>/2 and <em>h</em>. We binary search from there for a height <em>h</em> that does not make the div disappear when set to height <em>h</em>, but disappears when set to <em>h</em>+1.</p>\n\n<p>Then we can come to a conclusion for Opera: 2147483583 pixels.</p>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>Is there a recommended way to determine the maximum height that a DIV can be set and remain visible per browser? This doesn't appear to be documented anywhere and is highly implementation specific.</p>\n\n<p>For example, see the following test script:</p>\n\n<p><a href=\"http://jsfiddle.net/NP5Pa/2/\">http://jsfiddle.net/NP5Pa/2/</a></p>\n\n<p>This is a simple test to find the maximum value you can set a DIV style height attribute before the corresponding <code>clientHeight</code> of the element becomes 0. You can confirm this by clicking \"Find Max\" then incrementing the found height by 1 and clicking \"Set Height\".</p>\n\n<p>Some examples (Win7/64):</p>\n\n<pre><code>Chrome (14.0) :    134,217,726 px\nSafari (5.1)  :    134,217,726 px\nIE (9.0)      :     10,737,418 px\nFF (7.0.1)    :     17,895,697 px\n</code></pre>\n\n<p>It's not surprising the WebKit produces the same result, I guess - more surprising that IE and FF are so different.</p>\n\n<p>Is there a better way? And do you get different results in 32bit systems?</p>\n\n<p><em>--EDIT: Updated the fiddle to stop at 10,000,000,000 (and get there quicker) for Opera. That's a lot of pixels.</em></p>\n",
            "last_activity_date": 1318638211,
            "question_id": 7719273,
            "score": 24,
            "tags": [
                "javascript",
                "css",
                "dom",
                "browser",
                "cross-browser"
            ],
            "title": "Determine Maximum Possible DIV Height"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>If you convert it to a string it will not display any trailing zeros, which aren't stored in the variable in the first place since it was created as a Number, not a String.</p>\n\n<pre><code>var n = 1.245000\nvar noZeroes = n.toString() // \"1.245\" \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>I had a similar instance where I wanted to use <code>.toFixed()</code> where necessary, but I didn't want the padding when it wasn't.  So I ended up using parseFloat in conjunction with toFixed.</p>\n\n<p><strong>toFixed without padding</strong></p>\n\n<pre><code>parseFloat(n.toFixed(4));\n</code></pre>\n\n<p><strong>Another option that does almost the same thing</strong><br>\n<em><a href=\"http://stackoverflow.com/a/13676265/731314\">This answer may help your decision</a></em></p>\n\n<pre><code>Number(n.toFixed(4));\n</code></pre>\n\n<hr>\n\n<p>Or you can use the function on a string already containing trailing 0's</p>\n\n<pre><code>var n = \"1.234000\";\n    n = parseFloat(n);\n // n is 1.23 and in number form\n</code></pre>\n\n<p>Note that setting a \"number variable\" with extra 0's is automatically trimmed</p>\n\n<pre><code>var n = 1.23000;\n // n == 1.23;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>I first used a combination of matti-lyra and gary's answers:</p>\n\n<pre><code>r=(+n).toFixed(4).replace(/\\.0+$/,'')\n</code></pre>\n\n<p>Results:</p>\n\n<ul>\n<li>1234870.98762341: \"1234870.9876\"</li>\n<li>1230009100: \"1230009100\"</li>\n<li>0.0012234: \"0.0012\"</li>\n<li>0.1200234: \"0.12\"</li>\n<li>0.000001231: \"0\"</li>\n<li>0.10001: \"0.1000\"</li>\n<li>\"asdf\": \"NaN\" (so no runtime error)</li>\n</ul>\n\n<p>The somewhat problematic case is 0.10001. I ended up using this longer version:</p>\n\n<pre><code>    r = (+n).toFixed(4);\n    if (r.match(/\\./)) {\n      r = r.replace(/\\.?0+$/, '');\n    }\n</code></pre>\n\n<ul>\n<li>1234870.98762341: \"1234870.9876\"</li>\n<li>1230009100: \"1230009100\"</li>\n<li>0.0012234: \"0.0012\"</li>\n<li>0.1200234: \"0.12\"</li>\n<li>0.000001231: \"0\"</li>\n<li>0.10001: \"0.1\"</li>\n<li>\"asdf\": \"NaN\" (so no runtime error)</li>\n</ul>\n\n<p><strong>Update</strong>: And this is Gary's newer version (see comments):</p>\n\n<pre><code>r=(+n).toFixed(4).replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/,'$1')\n</code></pre>\n\n<p>This gives the same results as above.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here's a possible solution:</p>\n\n<pre><code>var x = 1.234000 // to become 1.234;\nvar y = 1.234001; // stays 1.234001\n\neval(x) --&gt; 1.234\neval(y) --&gt; 1.234001\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I had the basically the same requirement, and found that there is no built-in mechanism for this functionality.  </p>\n\n<p>In addition to trimming the trailing zeros, I also has the need to round off and optionally format the output for the user's current locale (i.e. 123,456.789).</p>\n\n<p>All of my work on this has been included as prettyFloat.js (MIT Licensed) on GitHub:  <a href=\"https://github.com/dperish/prettyFloat.js\" rel=\"nofollow\">https://github.com/dperish/prettyFloat.js</a></p>\n\n<hr>\n\n<p>Usage Examples:</p>\n\n<pre><code>prettyFloat(1.111001, 3) // \"1.111\"\nprettyFloat(1.111001, 4) // \"1.111\"\nprettyFloat(1.1111001, 5) // \"1.1111\"\nprettyFloat(1234.5678, 2) // \"1234.57\"\nprettyFloat(1234.5678, 2, true) // \"1,234.57\" (en-us)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The <code>toFixed</code> method will do the appropriate rounding if necessary. It will also add trailing zeroes, which is not always ideal.</p>\n\n<pre><code>(4.55555).toFixed(2);\n//-&gt; \"4.56\"\n\n(4).toFixed(2);\n//-&gt; \"4.00\"\n</code></pre>\n\n<p>If you cast the return value to a number, those trailing zeroes will be dropped. This is a simpler approach than doing your own rounding or truncation math.</p>\n\n<pre><code>+(4.55555).toFixed(2);\n//-&gt; 4.56\n\n+(4).toFixed(2);\n//-&gt; 4\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>None of these solutions worked for me for very small numbers.  <a href=\"http://numeraljs.com/\" rel=\"nofollow\">http://numeraljs.com/</a> solved this for me.</p>\n\n<pre><code>parseFloat(0.00000001.toFixed(8));\n// 1e-8\n\nnumeral(0.00000001).format('0[.][00000000]');\n// \"0.00000001\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Have I missed a standard API call that removes trailing insignificant zeros from a number?</p>\n\n<p>Ex.</p>\n\n<pre><code>var x = 1.234000 // to become 1.234;\nvar y = 1.234001; // stays 1.234001\n</code></pre>\n\n<p>Number.toFixed() and Number.toPrecision() are not quite what I'm looking for.</p>\n",
            "last_activity_date": 1424871345,
            "question_id": 3612744,
            "score": 24,
            "tags": [
                "javascript",
                "regex",
                "math",
                "numbers"
            ],
            "title": "JavaScript: remove insignificant trailing zeros from a number?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You will want to check out the jQuery animate() feature.  The standard way of doing this is positioning an element absolutely and then animating the \"left\" or \"right\" CSS property. An equally popular way is to increase/decrease the left or right margin.</p>\n\n<p>Now, having said this, you need to be aware of severe performance loss for any type of animation that lasts longer than a second or two. Javascript was simply not meant to handle long, sustained, slow animations. This has to do with the way the DOM element is redrawn and recalculated for each \"frame\" of the animation. If you're doing a page-width animation that lasts more than a couple seconds, expect to see your processor spike by 50% or more. If you're on IE6, prepare to see your computer spontaneously combust into a flaming ball of browser incompetence.</p>\n\n<p>To read up on this, check out <a href=\"http://stackoverflow.com/questions/459302/cross-browser-jquery-transition-animation/459547#459547\">this thread</a> (from my very first Stackoverflow post no less)!</p>\n\n<p>Here's a link to the jQuery docs for the animate() feature: <a href=\"http://docs.jquery.com/Effects/animate\">http://docs.jquery.com/Effects/animate</a></p>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>In jQuery 1.2 and newer you no longer have to position the element absolutely; you can use normal relative positioning and use += or -= to add to or subtract from properties, e.g.</p>\n\n<pre><code>$(\"#startAnimation\").click(function(){\n    $(\".toBeAnimated\").animate({ \n        marginLeft: \"+=250px\",\n    }, 1000 );\n});\n</code></pre>\n\n<p>And to echo the guy who answered first's advice: Javascript is not performant. Don't overuse animations, or expect things than run nice and fast on your high performance PC on Chrome to look good on a bog-standard PC running IE. Test it, and make sure it degrades well!</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>have a look at <a href=\"http://webmove.org/2009/11/03/demo-how-to-use-jquery-animation-effect-for-moving-the-clouds-in-your-sky-in-5-steps.html\" rel=\"nofollow\">this demo - use jquery animation effect for moving a div</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here i have done complete bins for above query. below is demo link, i think it may help you</p>\n\n<p><strong>Demo:</strong> <a href=\"http://codebins.com/bin/4ldqp9b\" rel=\"nofollow\">http://codebins.com/bin/4ldqp9b</a></p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;div id=\"edge\"&gt;\n  &lt;div class=\"box\" style=\"top:20; background:#f8a2a4;\"&gt;\n  &lt;/div&gt;\n  &lt;div class=\"box\" style=\"top:70; background:#a2f8a4;\"&gt;\n  &lt;/div&gt;\n  &lt;div class=\"box\" style=\"top:120; background:#5599fd;\"&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;br/&gt;\n&lt;input type=\"button\" id=\"btnAnimate\" name=\"btnAnimate\" value=\"Animate\" /&gt;\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>body{\n  background:#ffffef;\n}\n#edge{\n  width:500px;\n  height:200px;\n  border:1px solid #3377af;\n  padding:5px;\n}\n\n.box{\n  position:absolute;\n  left:10;\n  width:40px;\n  height:40px;\n  border:1px solid #a82244;\n}\n</code></pre>\n\n<p><strong>JQuery:</strong></p>\n\n<pre><code>$(function() {\n    $(\"#btnAnimate\").click(function() {\n        var move = \"\";\n        if ($(\".box:eq(0)\").css('left') == \"10px\") {\n            move = \"+=\" + ($(\"#edge\").width() - 35);\n        } else {\n            move = \"-=\" + ($(\"#edge\").width() - 35);\n        }\n        $(\".box\").animate({\n            left: move\n        }, 500, function() {\n            if ($(\".box:eq(0)\").css('left') == \"475px\") {\n                $(this).css('background', '#afa799');\n            } else {\n                $(\".box:eq(0)\").css('background', '#f8a2a4');\n                $(\".box:eq(1)\").css('background', '#a2f8a4');\n                $(\".box:eq(2)\").css('background', '#5599fd');\n            }\n\n        });\n    });\n});\n</code></pre>\n\n<p><strong>Demo:</strong> <a href=\"http://codebins.com/bin/4ldqp9b\" rel=\"nofollow\">http://codebins.com/bin/4ldqp9b</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just a quick little function I drummed up that moves DIVs from their current spot to a target spot, one pixel step at a time. I tried to comment as best as I could, but the part you're interested in, is in example 1 and example 2, right after [$(function() { <em>// jquery document.ready</em>]. Put your bounds checking code there, and then exit the interval if conditions are met. Requires jQuery.</p>\n\n<p>First the <strong>Demo</strong>:\n<a href=\"http://jsfiddle.net/pnYWY/\" rel=\"nofollow\">http://jsfiddle.net/pnYWY/</a></p>\n\n<p>First the DIVs...</p>\n\n<pre><code>&lt;style&gt;\n  .moveDiv {\n    position:absolute;\n    left:20px;\n    top:20px;\n    width:10px;\n    height:10px;\n    background-color:#ccc;\n  }\n\n  .moveDivB {\n    position:absolute;\n    left:20px;\n    top:20px;\n    width:10px;\n    height:10px;\n    background-color:#ccc;\n  }\n&lt;/style&gt;\n\n\n&lt;div class=\"moveDiv\"&gt;&lt;/div&gt;\n&lt;div class=\"moveDivB\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>example 1) Start</p>\n\n<pre><code>// first animation (fire right away)\nvar myVar = setInterval(function(){\n    $(function() { // jquery document.ready\n\n        // returns true if it just took a step\n        // returns false if the div has arrived\n        if( !move_div_step(55,25,'.moveDiv') )\n        {\n            // arrived...\n            console.log('arrived'); \n            clearInterval(myVar);\n        }\n\n    });\n},50); // set speed here in ms for your delay\n</code></pre>\n\n<p>example 2) Delayed Start</p>\n\n<pre><code>// pause and then fire an animation..\nsetTimeout(function(){\n    var myVarB = setInterval(function(){\n        $(function() { // jquery document.ready\n            // returns true if it just took a step\n            // returns false if the div has arrived\n            if( !move_div_step(25,55,'.moveDivB') )\n            {\n                // arrived...\n                console.log('arrived'); \n                clearInterval(myVarB);\n            }\n        });\n    },50); // set speed here in ms for your delay\n},5000);// set speed here for delay before firing\n</code></pre>\n\n<p>Now the Function:</p>\n\n<pre><code>function move_div_step(xx,yy,target) // takes one pixel step toward target\n{\n    // using a line algorithm to move a div one step toward a given coordinate.\n    var div_target = $(target);\n\n    // get current x and current y\n    var x = div_target.position().left; // offset is relative to document; position() is relative to parent;\n    var y = div_target.position().top;\n\n    // if x and y are = to xx and yy (destination), then div has arrived at it's destination.\n    if(x == xx &amp;&amp; y == yy)\n        return false;\n\n    // find the distances travelled\n    var dx = xx - x;\n    var dy = yy - y;\n\n    // preventing time travel\n    if(dx &lt; 0)          dx *= -1;\n    if(dy &lt; 0)          dy *= -1;\n\n    // determine speed of pixel travel...\n    var sx=1, sy=1;\n\n    if(dx &gt; dy)         sy = dy/dx;\n    else if(dy &gt; dx)    sx = dx/dy;\n\n    // find our one...\n    if(sx == sy) // both are one..\n    {\n        if(x &lt;= xx) // are we going forwards?\n        {\n            x++; y++;\n        }\n        else  // .. we are going backwards.\n        {\n            x--; y--;\n        }       \n    }\n    else if(sx &gt; sy) // x is the 1\n    {\n        if(x &lt;= xx) // are we going forwards..?\n            x++;\n        else  // or backwards?\n            x--;\n\n        y += sy;\n    }\n    else if(sy &gt; sx) // y is the 1 (eg: for every 1 pixel step in the y dir, we take 0.xxx step in the x\n    {\n        if(y &lt;= yy) // going forwards?\n            y++;\n        else  // .. or backwards?\n            y--;\n\n        x += sx;\n    }\n\n    // move the div\n    div_target.css(\"left\", x);\n    div_target.css(\"top\",  y);\n\n    return true;\n}  // END :: function move_div_step(xx,yy,target)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use jQuery    </p>\n\n<p>html</p>\n\n<pre><code>&lt;div id=\"b\"&gt;&amp;nbsp;&lt;/div&gt;\n</code></pre>\n\n<p>css</p>\n\n<pre><code>div#b {\n    position: fixed;\n    top:40px;\n    left:0;\n    width: 40px;\n    height: 40px;\n    background: url(http://www.wiredforwords.com/IMAGES/FlyingBee.gif) 0 0 no-repeat;\n}\n</code></pre>\n\n<p>script</p>\n\n<pre><code>var b = function($b,speed){\n\n\n    $b.animate({\n        \"left\": \"50%\"\n    }, speed);\n};\n\n$(function(){\n    b($(\"#b\"), 5000);\n});\n</code></pre>\n\n<p>see jsfiddle <a href=\"http://jsfiddle.net/vishnurajv/Q4Jsh/\" rel=\"nofollow\">http://jsfiddle.net/vishnurajv/Q4Jsh/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to make multiple divs move from right to left across the screen and stop when it gets to the edge.  I have been playing with jQuery lately, and it seem like what I want can be done using that.  Does anyone have or know where I can find an example of this?</p>\n",
            "last_activity_date": 1398011925,
            "question_id": 510055,
            "score": 24,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How can I use jQuery to move a div across the screen"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Does this javascript work?</p>\n\n<pre><code>document.write(isFacebookPage()?\"YES, I'm in a Facebook Page!\":\"No, not a Facebook Page\");\n\nfunction isFacebookPage(){\n    return (document.location.href.indexOf('/pages/')&gt;0);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had this problem too, fixed it with:\nThe app was redirecting the user to a login screen from Facebook (auth dialog box), while the user was already logged in.\nSo I changed the code to redirect either to the success page if logged in, or to the dialog box if not logged in.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>This is a problem when facebook redirects to your app from a web browser and then you redirect to the facebook authorization sign in. You have to make sure that the form replaces the page and does not load into the facebook canvas as it does not like it.</p>\n\n<p>So you have to do a clean redirect like so -this is node example</p>\n\n<pre><code>res.send(\"&lt;script&gt; top.location.href='\"+ \"https://www.facebook.com/dialog/oauth?    \nclient_id=*********&amp;redirect_uri=http://apps.facebook.com/myapp\" + \"'&lt;/script&gt;\");\n</code></pre>\n\n<p>Look at this facebook dev page and its in step 3</p>\n\n<p><a href=\"https://developers.facebook.com/docs/howtos/login/server-side-login/\" rel=\"nofollow\">https://developers.facebook.com/docs/howtos/login/server-side-login/</a></p>\n\n<p>Does not seem to be a problem with mobile apps just desktop</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm building a Facebook app and I have noticed that when attempting to get the login status of the user using their Javascript API, I sometimes get the error:</p>\n\n<p>\"Refused to display document because display forbidden by X-Frame-Options.\"</p>\n\n<p>I've been able to reproduce this every time I hit the \"check login status\" page of the app only <em>while using Facebook as a page</em>, rather than my user account. This is easy enough to avoid now that I know this causes the problem, but obviously my users may not know this.</p>\n\n<p>Is there a way to determine whether or not the user is using Facebook as a Page or not? Since that seems to pretty much ruin my entire app.</p>\n",
            "last_activity_date": 1361454456,
            "question_id": 9491540,
            "score": 22,
            "tags": [
                "javascript",
                "facebook",
                "x-frame-options"
            ],
            "title": "Refused to display document because display forbidden by X-Frame-Options"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I wasn't aware of a problem with <code>setAttribute</code> in IE ? However you could directly set the expando property on the node itself:</p>\n\n<pre><code>hiddenInput.id = \"uniqueIdentifier\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use jquery <a href=\"http://api.jquery.com/attr/\" rel=\"nofollow\">attr</a> method. It works in all browsers.</p>\n\n<pre><code>var hiddenInput = document.createElement(\"input\");\n$(hiddenInput).attr({\n    'id':'uniqueIdentifier',\n    'type': 'hidden',\n    'value': ID,\n    'class': 'ListItem'\n});\n</code></pre>\n\n<p>Or you could use folowing code:</p>\n\n<pre><code>var e = $('&lt;input id = \"uniqueIdentifier\" type=\"hidden\" value=\"' + ID + '\" class=\"ListItem\" /&gt;');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The <a href=\"http://reference.sitepoint.com/javascript/Element/setAttribute\" rel=\"nofollow\">documentation</a> says:</p>\n\n<blockquote>\n  <p>When you need to set attributes that are also mapped to a JavaScript dot-property (such as href, style, src or event-handlers), favour that mapping instead.</p>\n</blockquote>\n\n<p>So, just change <strong>id</strong>, <strong>value</strong> assignment and you should be done.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Forget <code>setAttribute()</code>: it's badly broken and doesn't always do what you might expect in old IE (IE &lt;= 8 and compatibility modes in later versions). Use the element's properties instead. This is generally a good idea, not just for this particular case. Replace your code with the following, which will work in all major browsers:</p>\n\n<pre><code>var hiddenInput = document.createElement(\"input\");\nhiddenInput.id = \"uniqueIdentifier\";\nhiddenInput.type = \"hidden\";                     \nhiddenInput.value = ID;\nhiddenInput.className = \"ListItem\";\n</code></pre>\n\n<p><strong>Update</strong></p>\n\n<p>The nasty hack in the second code block in the question is unnecessary, and the code above works fine in all major browsers, including IE 6. See <a href=\"http://www.jsfiddle.net/timdown/aEvUT/\">http://www.jsfiddle.net/timdown/aEvUT/</a>. The reason why you get <code>null</code> in your <code>alert()</code> is that when it is called, the new input is not yet in the document, hence the <code>document.getElementById()</code> call cannot find it.</p>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p>This <a href=\"http://jsfiddle.net/5EqT2/\">code</a> work in IE7 and Chrome:</p>\n\n<pre><code>var hiddenInput = document.createElement(\"input\");\n    hiddenInput.setAttribute(\"id\", \"uniqueIdentifier\");\n    hiddenInput.setAttribute(\"type\", \"hidden\");                     \n    hiddenInput.setAttribute(\"value\", 'ID');\n    hiddenInput.setAttribute(\"class\", \"ListItem\");\n\n$('body').append(hiddenInput);\n</code></pre>\n\n<p>Maybe problem somewhere else ?</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>I had the same issue! I was unable to change/set the ID attribute of elements. It worked in all other browsers but not IE. It probably isn't relevant to your problem but here is what I ended up doing:</p>\n\n<p><strong>Background</strong></p>\n\n<p>I was building an MVC site with jquery tabs. I wanted to create tabs dynamically and do an AJAX postback to the server saving the tab in the database. I wanted to use a unique identifier, in the form of an int, for the tabs so I wouldn't get in to trouble if a user created two tabs with the same name. I then used the unique ID to identify the tabs like:</p>\n\n<pre><code>&lt;ul&gt;\n&lt;li&gt;&lt;a href='#{href}'&gt;#{label}&lt;/a&gt; &lt;span class='ui-icon ui-icon-close'&gt;Remove List&lt;/span&gt;&lt;/li&gt;\n&lt;ul&gt;\n</code></pre>\n\n<p>When I then implemented the remove functions on the tabs the callback uses the index, witch is 0 based. Then I had no way to sending back the unique ID to the server to trash the DB entry. The callback for the tabremove event gives the jquery event and ui parameters. With one line of code I could get the ID of the span:</p>\n\n<pre><code>var dbIndex = event.currentTarget.id;\n</code></pre>\n\n<p>The problem was that the span tag didn't have any ID. So in the create callback I tried to set the ID buy extracting the ID from the a href like this:</p>\n\n<pre><code>ui.tab.parentNode.id = ui.tab.href.substring(ui.tab.href.indexOf('#list-') + 6);\n</code></pre>\n\n<p>That worked fine in FireFox but not in IE. So I tried a few other:</p>\n\n<pre><code>//ui.tab.parentNode.setAttribute('id', ui.tab.href.substring(ui.tab.href.indexOf('#list-') + 6));\n//$(ui.tab.parentNode).attr({'id':ui.tab.href.substring(ui.tab.href.indexOf('#list-') + 6)});\n//ui.tab.parentNode.id.value = ui.tab.href.substring(ui.tab.href.indexOf('#list-') + 6);\n</code></pre>\n\n<p>None of them worked! So after a few hours of test and Googeling I gave up and draw the conclusion that IE cant set the ID attribute of an element dynamically. </p>\n\n<p>As I sad this is probably not relevant to your issue but I thought I would share.</p>\n\n<p><strong>Solution</strong></p>\n\n<p>And for all of you who found this by Googleing on the tabs issue I had here is what I ended up doing in the tabsremove callback to solve the issue:</p>\n\n<pre><code>var dbIndex = event.currentTarget.offsetParent.childNodes[0].href.substring(event.currentTarget.offsetParent.childNodes[0].href.indexOf('#list-') + 6);\n</code></pre>\n\n<p>Probably not the sexiest solution but hey it solved the issue. If anyone have any input please share...</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm looking at dynamically setting the ID attribute of HTML Input elements which are created dynamically in my application.</p>\n\n<p>My implementation works fine with the setAttribute method in Firefox. Any ideas or solutions on a working implementation in IE would be appreciated.  </p>\n\n<pre><code> var hiddenInput = document.createElement(\"input\");\n    hiddenInput.setAttribute(\"id\", \"uniqueIdentifier\");\n    hiddenInput.setAttribute(\"type\", \"hidden\");                     \n    hiddenInput.setAttribute(\"value\", ID);\n    hiddenInput.setAttribute(\"class\", \"ListItem\");\n</code></pre>\n\n<p>I modified some sample code from blogs relating to this problem that suggest the following workround. Again the Firefox bit works well but the IE bit doens't</p>\n\n<pre><code>var hiddenInput = null;\n\ntry { \nhiddenInput  = document.createElement('&lt;input name=\\''+\"hiddenInputName\"+'\\'   /&gt;');\n                    hiddenInput.id = \"uniqueIdentifier\";\n                    //alert(document.getElementById(\"uniqueIdentifier\")); \n                   hiddenInput.type = \"hidden\";\n                } catch (e) { }            \n                if (!hiddenInput || !hiddenInput.name) { // Not in IE, then\n                     var hiddenInput = document.createElement(\"input\");\n    hiddenInput.setAttribute(\"id\", \"uniqueIdentifier\");\n    hiddenInput.setAttribute(\"type\", \"hidden\");                     \n\n            }\n</code></pre>\n\n<p>Cheers.</p>\n",
            "last_activity_date": 1389653970,
            "question_id": 4851699,
            "score": 21,
            "tags": [
                "javascript",
                "html",
                "dom",
                "xhtml"
            ],
            "title": "setting the id attribute of an input element dynamically in IE: alternative for setAttribute method"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>no. the parser will interpret it as the subtract operator.</p>\n\n<p>you can do <code>settings['background-color']</code>.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>Change <code>settings.background-color</code> to <code>settings['background-color']</code>.</p>\n\n<p>Variables cannot contain <code>-</code> because that is read as the subtract operator.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can have dashes in strings. If you really wanted to keep that dash, you'd have to refer to the property using brackets and whatnot:</p>\n\n<pre><code>$this.css('backgroundColor', settings['background-color']);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Dashes are not legal in javascript variables.  A variable name must start with a letter, dollar sign or underscore and can be followed by the same or a number.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I was looking at <a href=\"http://docs.jquery.com/Plugins/Authoring#Defaults_and_Options\">http://docs.jquery.com/Plugins/Authoring#Defaults_and_Options</a> to create a simple plugin for jQuery. Following the section about options and settings, I did the following, which didn't work (the script quit when it encountered the setting).</p>\n\n<pre><code>var settings = {\n    'location' : 'top',\n    'background-color': 'blue'\n}\n...\n$this.css('backgroundColor', settings.background-color); // fails here\n</code></pre>\n\n<p>Once I removed the dash from the background color, things work properly. </p>\n\n<pre><code>var settings = {\n    'location' : 'top',\n    'backgroundColor': 'blue' // dash removed here\n}\n...\n$this.css('backgroundColor', settings.backgroundColor); \n</code></pre>\n\n<p>Am I missing something, or are the jQuery docs wrong?</p>\n",
            "last_activity_date": 1411480562,
            "question_id": 5516106,
            "score": 20,
            "tags": [
                "javascript"
            ],
            "title": "Are dashes allowed in javascript variable names?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Give a look to <a href=\"http://www.jslint.com/lint.html\" rel=\"nofollow\">JSLint</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can do this using <a href=\"http://aurochs.fr/jsure.html\" rel=\"nofollow\">Jsure</a>, a Javascript lint implementation. You'll be looking for the <code>-unused-funs</code> flag  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Faced the similar problem .. and happened to write utility to find out unused/undeclared local vars.  <a href=\"http://openwaf-js-mini.appspot.com/\" rel=\"nofollow\">http://openwaf-js-mini.appspot.com/</a> .. It will be open source soon (I have read the FAQ <a href=\"http://stackoverflow.com/faq#promotion\">http://stackoverflow.com/faq#promotion</a> )</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have around 100 .js files in my application.  I need to find the unused functions from these files.</p>\n\n<p>Which editor or tool can help me?</p>\n",
            "last_activity_date": 1355833688,
            "question_id": 1169889,
            "score": 20,
            "tags": [
                "javascript"
            ],
            "title": "Find unused Javascript functions?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>element.offsetLeft</code> and <code>element.offsetTop</code> are the pure javascript properties for finding an element's position with respect to its <code>offsetParent</code>; being the nearest parent element with a position of <code>relative</code> or <code>absolute</code></p>\n\n<p>Alternatively, you can always use Zepto to get the position of an element AND its parent, and simply subtract the two:</p>\n\n<pre><code>var childPos = obj.offset();\nvar parentPos = obj.parent().offset();\nvar childOffset = {\n    top: childPos.top - parentPos.top,\n    left: childPos.left - parentPos.left\n}\n</code></pre>\n\n<p>This has the benefit of giving you the offset of a child relative to its parent even if the parent isn't positioned.</p>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>in pure js just use <code>offsetLeft</code> and <code>offsetTop</code> properties.<br>\nExample fiddle: <a href=\"http://jsfiddle.net/WKZ8P/\">http://jsfiddle.net/WKZ8P/</a></p>\n\n<pre><code>var p = document.getElementById('par');\nconsole.log(p.offsetLeft, p.offsetTop);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I did it like this in IE.</p>\n\n<pre><code>function getWindowRelativeOffset(parentWindow, elem) {\n    var offset = {\n        left : 0,\n        top : 0\n    };\n    // relative to the target field's document\n    offset.left = elem.getBoundingClientRect().left;\n    offset.top = elem.getBoundingClientRect().top;\n    // now we will calculate according to the current document, this current\n    // document might be same as the document of target field or it may be\n    // parent of the document of the target field\n    var childWindow = elem.document.frames.window;\n    while (childWindow != parentWindow) {\n        offset.left = offset.left + childWindow.frameElement.getBoundingClientRect().left;\n        offset.top = offset.top + childWindow.frameElement.getBoundingClientRect().top;\n        childWindow = childWindow.parent;\n    }\n\n    return offset;\n};\n</code></pre>\n\n<p>===================\nyou can call it like this</p>\n\n<pre><code>getWindowRelativeOffset(top, inputElement);\n</code></pre>\n\n<p>I focus for IE only as per my focus but similar can be done foe other browsers</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm used to work with jQuery. In my current project however I use zepto.js. Zepto doesn't provide a <code>position()</code> method like jquery does. Zepto only comes with <code>offset()</code></p>\n\n<p>Any idea how I can retrieve a offset of a container relative to a parent with pure js or with Zepto?</p>\n\n<p>Thank you in advance.</p>\n",
            "last_activity_date": 1381220927,
            "question_id": 11634770,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "position",
                "offset",
                "zepto"
            ],
            "title": "Javascript: get position/offset of element relative to a parent container?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>From <a href=\"http://javascriptweblog.wordpress.com/2010/07/06/function-declarations-vs-function-expressions/\" rel=\"nofollow\">http://javascriptweblog.wordpress.com/2010/07/06/function-declarations-vs-function-expressions/</a></p>\n\n<p>In javascript, you have function declaration:</p>\n\n<pre><code>function foo() {\n}\n</code></pre>\n\n<p>and function expression</p>\n\n<pre><code>var foo = function() {\n}\n</code></pre>\n\n<p>Quoting from <a href=\"http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting\" rel=\"nofollow\">http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting</a></p>\n\n<blockquote>\n  <p>\u201cFunction declarations and function variables are always moved\n  (\u2018hoisted\u2019) to the top of their JavaScript scope by the JavaScript\n  interpreter\u201d.</p>\n</blockquote>\n\n<p>So what happened in your first example is that function declaration of <code>function a()</code>, gets hoisted to the top of the Javascript scope, thus producing 'foo' even though the if evaluates to false</p>\n\n<p>Think of <code>var foo</code> as a normal Javascript statement, it's only executed on the runtime of your javascript, unlike <code>function foo()</code>, that's why the below is valid:</p>\n\n<pre><code>alert(foo());\n\nfunction foo() {\n   return 'gw ganteng';\n}\n</code></pre>\n\n<p>Here, <code>function foo()</code> is parsed by the parser, putting <code>foo()</code> in the current scope, before attempting to call <code>alert(foo())</code></p>\n\n<p><a href=\"http://javascriptweblog.wordpress.com/2010/07/06/function-declarations-vs-function-expressions/\" rel=\"nofollow\">http://javascriptweblog.wordpress.com/2010/07/06/function-declarations-vs-function-expressions/</a></p>\n\n<blockquote>\n  <p>In JavaScript execution there is Context (which ECMA 5 breaks into\n  LexicalEnvironment, VariableEnvironment and ThisBinding) and Process\n  (a set of statements to be invoked in sequence). Declarations\n  contribute to the VariableEnvironment when the execution scope is\n  entered. They are distinct from Statements (such as return) and are\n  not subject to their rules of process.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Based on this blog post:</p>\n\n<p><a href=\"http://statichtml.com/2011/spidermonkey-function-hoisting.html\">http://statichtml.com/2011/spidermonkey-function-hoisting.html</a></p>\n\n<p>and a reading of the <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf#page=98\">ECMA-262 specification</a>, the first example in the question is not legal syntax, per the ECMA-262 spec.  Specifically, a <em>Block</em> is defined as one or more <em>Statements</em>, and a <em>FunctionDeclaration</em> is not a <em>Statement</em>.  There is even a note in the beginning of Chapter 12 of the spec (\"Statements\") that notes:</p>\n\n<blockquote>\n  <p>NOTE  Several widely used implementations of ECMAScript are known to\n  support the use of <em>FunctionDeclaration</em> as a  <em>Statement</em>. However there\n  are significant and irreconcilable variations among the\n  implementations in the semantics applied  to such\n  <em>FunctionDeclarations</em>. Because of these irreconcilable differences, the\n  use of a <em>FunctionDeclaration</em> as a <em>Statement</em>  results in code that is\n  not reliably portable among implementations. It is recommended that\n  ECMAScript implementations  either disallow this usage of\n  <em>FunctionDeclaration</em> or issue a warning when such a usage is\n  encountered. Future editions of  ECMAScript may define alternative\n  portable means for declaring functions in a <em>Statement</em> context.</p>\n</blockquote>\n\n<p>In other words, there is no consensus about what can happen if you use a function declaration inside an <code>if</code> block.  In that context, you should use function expressions, as in the second example of the original question.</p>\n\n<hr>\n\n<p><strong>EDIT</strong>: Also, in <a href=\"https://developer.mozilla.org/en/JavaScript/Strict_mode\">strict mode</a>, a function declaration in a block will throw an error (<a href=\"http://jsfiddle.net/Mqs8Y/1/\">fiddle</a>).</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>The ECMA-262 v5 requires implementations to register all function and variable declarations during the first pass when entering any new global or function-level execution context. Chrome is technically doing it right here because it is looking inside the <code>else</code> and <code>then</code> blocks and registering <code>a()</code> prior to execution. Unfortunately it produces the most unreadable results.</p>\n\n<p>FF is waiting until it evaluates the if statement before it evaluates and adds function and variable declarations to the current context. BTW. Both browsers do it this way inside catch and finally clauses.</p>\n\n<p>It really is just a matter of two different ECMA implementations dealing with a feature that shouldn't be there to begin with. The scenario at hand shows why function declarations shouldn't be inside control flow statements.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How are function declarations handled? </p>\n\n<pre><code>var abc = '';\nif(1 === 0){\n    function a(){\n        abc = 7;\n    }\n}else if('a' === 'a'){\n    function a(){\n        abc = 19;\n    }\n}else if('foo' === 'bar'){\n    function a(){\n        abc = 'foo';\n    }\n} \na();\ndocument.write(abc); //writes \"foo\" even though 'foo' !== 'bar'\n</code></pre>\n\n<p>This example produces different outputs in Chrome and Firefox. Chrome outputs <code>foo</code> while FF outputs <code>19</code>.<br /></p>\n",
            "last_activity_date": 1412796455,
            "question_id": 10069204,
            "score": 19,
            "tags": [
                "javascript",
                "function",
                "scope"
            ],
            "title": "Function declarations inside if/else statements?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You've added vertices, but forgot to put those vertices into a face and add that to the geometry:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>geom.faces.push( new THREE.Face3( 0, 1, 2 ) );\n</code></pre>\n\n<p>so your snippet becomes:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var geom = new THREE.Geometry(); \nvar v1 = new THREE.Vector3(0,0,0);\nvar v2 = new THREE.Vector3(0,500,0);\nvar v3 = new THREE.Vector3(0,500,500);\n\ngeom.vertices.push(v1);\ngeom.vertices.push(v2);\ngeom.vertices.push(v3);\n\ngeom.faces.push( new THREE.Face3( 0, 1, 2 ) );\n\nvar object = new THREE.Mesh( geom, new THREE.MeshNormalMaterial() );\nscene.addObject(object);\n</code></pre>\n\n<p>The idea is that a Face3 instance references 3 vertices(the x,y,z coords you've added previously to the geometry) by using the indices of the vertices in the list/array. Currently you only have 3 vertices and you want to connect them,so your face references index 0,1 and 2 in the vertices array.</p>\n\n<p>Since you're using a mesh normals material, you might want to compute normals for the geometry. Also, make sure your object can be visible (is not to big or to close to the camera to be clipped out, is facing the right direction - towards the camera, etc.)\nSince you're drawing in the YZ plane, to see your triangle, something like this should work:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var geom = new THREE.Geometry(); \nvar v1 = new THREE.Vector3(0,0,0);\nvar v2 = new THREE.Vector3(0,500,0);\nvar v3 = new THREE.Vector3(0,500,500);\n\ngeom.vertices.push(v1);\ngeom.vertices.push(v2);\ngeom.vertices.push(v3);\n\ngeom.faces.push( new THREE.Face3( 0, 1, 2 ) );\ngeom.computeFaceNormals();\n\nvar object = new THREE.Mesh( geom, new THREE.MeshNormalMaterial() );\n\nobject.position.z = -100;//move a bit back - size of 500 is a bit big\nobject.rotation.y = -Math.PI * .5;//triangle is pointing in depth, rotate it -90 degrees on Y\n\nscene.add(object);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>THREE.Vertex has been deprecated in the newest version of Three.js so that part is not needed anymore:</p>\n\n<pre><code>geom.vertices.push(v1);\ngeom.vertices.push(v2);\ngeom.vertices.push(v3);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<h2>You can automate your triangulation</h2>\n\n<p>For big polygons it can be quite a job to manually add the faces. You can automate the process of adding faces to the Mesh using the <code>triangulateShape</code> method in <code>THREE.Shape.Utils</code> like this:</p>\n\n<pre><code>var vertices = [your vertices array];\nvar holes = [];\nvar triangles, mesh;\nvar geometry = new THREE.Geometry();\nvar material = new THREE.MeshBasicMaterial();\n\ngeometry.vertices = vertices;\n\ntriangles = THREE.Shape.Utils.triangulateShape ( vertices, holes );\n\nfor( var i = 0; i &lt; triangles.length; i++ ){\n\n    geometry.faces.push( new THREE.Face3( triangles[i][0], triangles[i][1], triangles[i][2] ));\n\n}\n\nmesh = new THREE.Mesh( geometry, material );\n</code></pre>\n\n<p>Where <code>vertices</code> is your array of vertices and with <code>holes</code> you can define holes in your polygon.</p>\n\n<p><strong>Note:</strong> Be careful, if your polygon is self intersecting it will throw an error. Make sure your vertices array is representing a valid (non intersecting) polygon.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I've asked this and got the answer:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var geom = new THREE.Geometry(); \nvar v1 = new THREE.Vector3(0,0,0);\nvar v2 = new THREE.Vector3(0,500,0);\nvar v3 = new THREE.Vector3(0,500,500);\n\ngeom.vertices.push(new THREE.Vertex(v1));\ngeom.vertices.push(new THREE.Vertex(v2));\ngeom.vertices.push(new THREE.Vertex(v3));\n\nvar object = new THREE.Mesh( geom, new THREE.MeshNormalMaterial() );\nscene.addObject(object);\n</code></pre>\n\n<p>I expected this to work but it didn't.</p>\n",
            "last_activity_date": 1421777642,
            "question_id": 9252764,
            "score": 19,
            "tags": [
                "javascript",
                "three.js"
            ],
            "title": "How to create a custom mesh on THREE.JS?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can do it like this:</p>\n\n<pre><code>alert(parseFloat(\"1.1531531414\")); // alerts the float\nparseFloat = function(input) { return 1; };\nalert(parseFloat(\"1.1531531414\")); // alerts '1'\n</code></pre>\n\n<p>Check out a working example here: <a href=\"http://jsfiddle.net/LtjzW/1/\" rel=\"nofollow\">http://jsfiddle.net/LtjzW/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>var origParseFloat = parseFloat;\nparseFloat = function(str) {\n     alert(\"And I'm in your floats!\");\n     return origParseFloat(str);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>You can override any built-in function by just re-declaring it.</p>\n\n<pre><code>parseFloat = function(a){\n  alert(a)\n};\n</code></pre>\n\n<p>Now <code>parseFloat(3)</code> will alert 3.</p>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I'm trying to override a built in parseFloat function in js.  How would I go about doing that?</p>\n",
            "last_activity_date": 1337188311,
            "question_id": 5409428,
            "score": 19,
            "tags": [
                "javascript"
            ],
            "title": "how to override a javascript function"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>No, JavaScript doesn\u2019t support operator overloading. You will need to write a method that does this:</p>\n\n<pre><code>Vector.prototype.equalTo = function(other) {\n    if (!(other instanceof Vector)) return false;\n    return a.x == b.x &amp;&amp; a.y == b.y &amp;&amp; a.z == b.z;\n}\n</code></pre>\n\n<p>Then you can use that method like:</p>\n\n<pre><code>vect1.equalTo(vect2)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>No, it's not part of the spec (which doesn't mean that there aren't <a href=\"http://web.archive.org/web/20090406105627/http://blogger.xs4all.nl/peterned/archive/2009/04/01/462517.aspx\" rel=\"nofollow\">some hacks</a>).</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The best you can do if you want to stick with the <code>==</code> operator:</p>\n\n<pre><code>function Vector(x, y, z) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n}\n\nVector.prototype.toString = function () {\n  return this.x + \";\" + this.y + \";\" + this.z;\n};\n\nvar a = new Vector(1, 2, 3);\nvar b = new Vector(1, 2, 3);\nvar c = new Vector(4, 5, 6);\n\n\nalert( String(a) == b ); // true\nalert( String(a) == c ); // false\nalert( a == b + \"\" );    // true again (no object wrapper but a bit more ugly)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I agree that the equal function on the vector prototype is the best solution.  Note that you can also build other infix-like operators via chaining.</p>\n\n<pre><code>function Vector(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n}\n\nVector.prototype.add = function (v2) {\n    var v = new Vector(this.x + v2.x,\n                       this.y + v2.y,\n                       this.z + v2.z);\n    return v;\n}\n\nVector.prototype.equal = function (v2) {\n    return this.x == v2.x &amp;&amp; this.y == v2.y &amp;&amp; this.z == v2.z;\n}\n</code></pre>\n\n<p>You can see <a href=\"http://startpad.googlecode.com/hg/labs/js/misc/chaining.html\">online sample here</a>.</p>\n\n<p>Update: Here's a more extensive sample of creating a <a href=\"http://wiki.pageforest.com/#js-patterns/factory-function\">Factory function</a> that supports chaining.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Here is a simple emulation which tests for equality using the <a href=\"https://en.wikibooks.org/wiki/JavaScript/Print_version#Logical_operators\" rel=\"nofollow\">guard operator</a>:</p>\n\n<pre><code>function operator(node)\n  {\n  // Abstract the guard operator\n  var guard = \" &amp;&amp; \";\n  // Abstract the return statement\n  var action = \"return \";\n  // return a function which compares two vector arguments\n  return Function(\"a,b\", action + \"a.x\" + node + \"b.x\" + guard + \"a.y\" + node + \"b.y\" + guard + \"a.z\" + node + \"a.z\" );\n  }\n\n//Pass equals to operator; pass vectors to returned Function\nvar foo = operator(\"==\")({\"x\":1,\"y\":2,\"z\":3},{\"x\":1,\"y\":2,\"z\":3});\nvar bar = operator(\"==\")({\"x\":1,\"y\":2,\"z\":3},{\"x\":4,\"y\":5,\"z\":6});\n\n//Result\nconsole.log([\"foo\",foo,\"bar\",bar]);\n</code></pre>\n\n<blockquote>\n  <p>For non-strict mode functions the array index (defined in 15.4) named data properties of an arguments object whose numeric name values are less than the number of formal parameters of the corresponding function object initially share their values with the corresponding argument bindings in the function\u2019s execution context. This means that changing the property changes the corresponding value of the argument binding and vice-versa. This correspondence is broken if such a property is deleted and then redefined or if the property is changed into an accessor property. For strict mode functions, the values of the arguments object\u2018s properties are simply a copy of the arguments passed to the function and there is no dynamic linkage between the property values and the formal parameter values.</p>\n</blockquote>\n\n<p><strong>References</strong></p>\n\n<ul>\n<li><p><a href=\"http://stackoverflow.com/questions/21493562/1113772\">The `arguments` object changes if parameters change</a></p></li>\n<li><p><a href=\"http://people.w3.org/mike/bugs/es5-spec/#x10.6\" rel=\"nofollow\">Annotated ES5: The Arguments Object</a></p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It isn't a direct answer for you question but it's worth to note.</p>\n\n<p>PaperScript is a simple extension of JavaScript that adds support for operator overloading to any object.</p>\n\n<p>It used for for making Vector graphics on top of HTML5 Canvas.</p>\n\n<p>It parse PaperScript to JavaScript on script tag with type=\"text/paperscript\":</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;!-- Load the Paper.js library --&gt;\n&lt;script type=\"text/javascript\" src=\"js/paper.js\"&gt;&lt;/script&gt;\n&lt;!-- Define inlined PaperScript associate it with myCanvas --&gt;\n&lt;script type=\"text/paperscript\" canvas=\"myCanvas\"&gt;\n  // Define a point to start with\n  var point1 = new Point(10, 20);\n\n  // Create a second point that is 4 times the first one.\n  // This is the same as creating a new point with x and y\n  // of point1 multiplied by 4:\n  var point2 = point1 * 4;\n  console.log(point2); // { x: 40, y: 80 }\n\n  // Now we calculate the difference between the two.\n  var point3 = point2 - point1;\n  console.log(point3); // { x: 30, y: 60 }\n\n  // Create yet another point, with a numeric value added to point3:\n  var point4 = point3 + 30;\n  console.log(point4); // { x: 60, y: 90 }\n\n  // How about a third of that?\n  var point5 = point4 / 3;\n  console.log(point5); // { x: 20, y: 30 }\n\n  // Multiplying two points with each other multiplies each \n  // coordinate seperately\n  var point6 = point5 * new Point(3, 2);\n  console.log(point6); // { x: 60, y: 60 }\n\n  var point7 = new Point(10, 20);\n  var point8 = point7 + { x: 100, y: 100 };\n  console.log(point8); // { x: 110, y: 120 }\n\n  // Adding size objects to points work too,\n  // forcing them to be converted to a point first\n  var point9 = point8 + new Size(50, 100);\n  console.log(point9); // { x: 160, y: 220 }\n\n  // And using the object notation for size works just as well:\n  var point10 = point9 + { width: 40, height: 80 };\n  console.log(point10); // { x: 200, y: 300 }\n\n  // How about adding a point in array notation instead?\n  var point5 = point10 + [100, 0];\n  console.log(point5); // { x: 300, y: 300 }\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;canvas id=\"myCanvas\" resize&gt;&lt;/canvas&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to define custom operators between instances of a type in JavaScript?</p>\n\n<p>For example, given that I have a custom vector class, is it possible to use</p>\n\n<pre><code>vect1 == vect2\n</code></pre>\n\n<p>to check for equality, whilst the underlying code would be something like this?</p>\n\n<pre><code>operator ==(a, b) {\n    return a.x == b.x &amp;&amp; a.y == b.y &amp;&amp; a.z == b.z;\n}\n</code></pre>\n\n<p>(This is nonsense of course.)</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1423151640,
            "question_id": 4700085,
            "score": 19,
            "tags": [
                "javascript",
                "vector",
                "operator-overloading",
                "dsl",
                "equality"
            ],
            "title": "Can I define custom operator overloads in Javascript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>IE8 has it through <a href=\"http://msdn.microsoft.com/en-us/library/dd229916.aspx\"><code>defineProperty</code></a>, but only for DOM objects. But supposedly, it'll eventually come for JavaScript objects as well.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Resig's post references his env.js implementation being the first time he uses the getters and setters methodology you are looking for.  The reason this style of works fine for him is because they are not being used in a browser based environment, env.js is focused primarily for server-side JS or scripting environments like Rhino.</p>\n\n<p>To handle browser compatibility as well as focusing on an aspect that Javascript does very well, use closures for your getter and setter methods to protect object properties.</p>\n\n<p>for example:</p>\n\n<pre><code>foo: function(var){\n     var bar = val;\n     this.setBar: function( newBar ){ \n           bar = newBar;\n     },\n     this.getBar: function(){\n         return bar;\n     }\n\n}\n</code></pre>\n\n<p>which will result in:</p>\n\n<pre><code>var checkFoo = foo(\"cool!\");\nalert(checkFoo.getBar()); //cool!\ncheckFoo.setBar(\"nice!\");\nalert(checkFoo.getBar()); //nice!\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>A solution for IE6+ is available that uses the onpropertychange event and the newer spec defineProperty.  The slight catch is that you'll need to make your variable a dom object.</p>\n\n<p>Full details:</p>\n\n<p><a href=\"http://johndyer.name/native-browser-get-set-properties-in-javascript/\" rel=\"nofollow\">http://johndyer.name/native-browser-get-set-properties-in-javascript/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For old IE browsers you can also use VB to emulate getter and setter\nTake a look at this\n<a href=\"http://webreflection.blogspot.ch/2011/03/rewind-getters-setters-for-all-ie-with.html\" rel=\"nofollow\">getters &amp; setters for all IE with cross browser VBClass!</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>For whatever reason, <a href=\"http://ejohn.org/blog/javascript-getters-and-setters/\">Javascript getters/setters</a> for custom objects seem to work with any browser but IE.</p>\n\n<p>Does IE have any other non-standard mechanism for this? (As with many other features)</p>\n\n<p>If not, are there any workarounds to achieve the same functionality?</p>\n",
            "last_activity_date": 1410174922,
            "question_id": 1077106,
            "score": 19,
            "tags": [
                "javascript",
                "internet-explorer",
                "setter",
                "getter",
                "incompatibility"
            ],
            "title": "Javascript getters/setters in IE?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>There is an excellent blog entry by Eilon Lipton. It contains of lot of tips on how to avoid this error:</p>\n\n<p><strong><a href=\"http://weblogs.asp.net/leftslipper/archive/2007/02/26/sys-webforms-pagerequestmanagerparsererrorexception-what-it-is-and-how-to-avoid-it.aspx\">Sys.WebForms.PageRequestManagerParserErrorException - what it is and how to avoid it</a></strong></p>\n\n<p>Read the comments too. There is a comment of somebody with the same problem: \"<strong>I solved it changing server idle time of my app pool on IIS</strong>. It was only 5, so I incremented it and now works.\"</p>\n\n<p><em>\"The UpdatePanel control uses asynchronous postbacks to control which parts of the page get rendered. It does this using a whole bunch of JavaScript on the client and a whole bunch of C# on the server.</em></p>\n\n<p><em>Asynchronous postbacks are exactly the same as regular postbacks except for one important thing: the rendering. Asynchronous postbacks go through the same life cycles events as regular pages (this is a question I get asked often).</em></p>\n\n<p><em>Only at the render phase do things get different. We capture the rendering of only the UpdatePanels that we care about and send it down to the client using a special format. In addition, we send out some other pieces of information, such as the page title, hidden form values, the form action URL, and lists of scripts.\"</em></p>\n\n<p><strong>Most common reasons for that error:</strong></p>\n\n<ol>\n<li>Calls to Response.Write():</li>\n<li>Response filters</li>\n<li>HttpModules</li>\n<li>Server trace is enabled</li>\n<li>Calls to Server.Transfer()</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>I solved this exact same problem removing the <code>Content-Type:</code> form the <code>Custom HTTP Headers</code> section in the <code>HTTP Headers</code> tab in <code>IIS</code>. This was breaking the encoding of the page and somehow it affected Ajax in general.</p>\n\n<p>The <code>Content-Type</code> I had configured in <code>IIS</code> was setting the encoding to <code>ISO-8859-1</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This may be a little hacky, but it solved the issue for me.  I didn't have any of the common reasons for the error, so I just put in this band-aid in the page load:</p>\n\n<pre><code>if (Session.SessionID == \"\")\n{\n    Page.Session.Add(\"SessionID\", Session.SessionID);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Problem: Sys.WebForms.PageRequestManagerParserErrorException will occur when redirecting your page, lets say button click inside UpdatePanel in aspxAjax.</p>\n\n<p>SOlution:</p>\n\n<ol>\n<li><p>Add a \"GoTo\" button in your aspx page where update panel is using and add it outside Update panel</p></li>\n<li><p>In your code assign ur just registered userID to session variable , say <code>Session[\"UseridJustregistered\"]=Id</code> from DB or UsernameField</p></li>\n<li><p><code>Respose.Redirect(\"regSucces.aspx?urlid='\" + Session[\"UseridJustregistered\"] + \"'\");</code></p></li>\n<li><p>Check if <code>Session[\"UseridJustregistered\"]</code> is null or not</p></li>\n</ol>\n\n<p>This is OLD Classic ASP way which can solve our problem , by the time Microsoft find a solution we can tackle it this way.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Probably there is an error occuring on post back. In this case, you can view the details about the error by adding a PostBackTrigger to your updatepanel and referencing the button which causes the problem:</p>\n\n<pre><code>    &lt;asp:updatepanel ID=\"updatepanel1\" runat=\"server\"&gt;\n        &lt;Triggers&gt;\n            &lt;asp:PostBackTrigger ControlID=\"button1\" /&gt; \n        &lt;/Triggers&gt;\n        &lt;ContentTemplate&gt;\n\n        &lt;/ContentTemplate&gt;\n    &lt;/asp:updatepanel&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I solved this same problem by removing mistakenly-nested UpdatePanels.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had this happen to me and none of the causes on the list in the answer applied. I didn't find the root of the problem until I disabled my AJAX altogether. Discovered that the code was saving an object to the ViewState that contained an unserializable object. I made the object serializable and it started working again.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I finally solved my variant of this same problem.  I was attempting to copy/move a selected value between 2 listboxes in a webform.  In my case, I had to specifically call {listbox}.ClearSelection() prior performing the action the 2nd time around.</p>\n\n<p>So obviously this problem/error message can occur for a multitude of reasons.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Change of the app pool FROM INTEGRATED to asp.net classic solved the problem for me.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I also got this error. The solution reported by \"user1097991\" solved it for a while (I was using not-serialized objects on viewstate)</p>\n\n<p>But later the error returned again, now in a random fashion. After some search I got the answer: the viewstate was becoming too large and was been truncated. I disable some viewstates on grids and menus and the problem haven't shown again.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found that my issue was related to a nul character being rendered in the databinding of a GridView.  The expected length of the response wasn't matching the actual length of the response text which resulted in the error being thrown.  Once I fixed the data in the database, I no longer got the error.  The ultimate fix will be to sanitize the text getting rendered during the RowDataBound event.</p>\n\n<p>Looking through the database, I couldn't see the bad data since SQL Server 2008 doesn't show the text if the nul character (Char(0)) is in the string.  In the RowDataBound event of my GridView, I added code to throw an exception for any text that had special characters in it.  This is how I found the record that contained the nul characters.</p>\n\n<p>tl;dr - Check for nul characters in the rendered html.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Please also be aware that this can be caused by not properly html encoding what you may be rendering to the page through partial postbacks.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>My website has been giving me intermittent errors when trying to perform <em>any</em> Ajax activities.  The message I get is</p>\n\n<pre><code>Sys.WebForms.PageRequestManagerParserErrorException: The message received from the server could not be parsed. Common causes for this error are when the response is modified by calls to Response.Write(), response filters, HttpModules, or server trace is enabled.\n\nDetails: Error parsing near '\n\n&lt;!DOCTYPE html P'.\n</code></pre>\n\n<p>So its obviously some sort of server timeout or the server's just returning back mangled garbage.  This generally, unfortunately not always, happe</p>\n",
            "last_activity_date": 1364276701,
            "question_id": 290121,
            "score": 19,
            "tags": [
                "javascript",
                "asp.net",
                ".net",
                "exception-handling",
                "ajax.net"
            ],
            "title": "ASP.NET Ajax Error: Sys.WebForms.PageRequestManagerParserErrorException"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If there is no selection, you can use the properties <code>.selectionStart</code> or <code>.selectionEnd</code> (with no selection they're equal).</p>\n\n<pre><code>var cursorPosition = $('#myTextarea').prop(\"selectionStart\");\n</code></pre>\n\n<p>Note that this is not supported in older browsers, most notably IE8-. There you'll have to work with text ranges, but it's a complete frustration.</p>\n\n<p>I believe there is a library somewhere which is dedicated to getting and setting selections/cursor positions in input elements, though. I can't recall its name, but there seem to be dozens on articles about this subject.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>Here's a cross browser function I have in my standard library:</p>\n\n<pre><code>function getCursorPos(input) {\n    if (\"selectionStart\" in input &amp;&amp; document.activeElement == input) {\n        return {\n            start: input.selectionStart,\n            end: input.selectionEnd\n        };\n    }\n    else if (input.createTextRange) {\n        var sel = document.selection.createRange();\n        if (sel.parentElement() === input) {\n            var rng = input.createTextRange();\n            rng.moveToBookmark(sel.getBookmark());\n            for (var len = 0;\n                     rng.compareEndPoints(\"EndToStart\", rng) &gt; 0;\n                     rng.moveEnd(\"character\", -1)) {\n                len++;\n            }\n            rng.setEndPoint(\"StartToStart\", input.createTextRange());\n            for (var pos = { start: 0, end: len };\n                     rng.compareEndPoints(\"EndToStart\", rng) &gt; 0;\n                     rng.moveEnd(\"character\", -1)) {\n                pos.start++;\n                pos.end++;\n            }\n            return pos;\n        }\n    }\n    return -1;\n}\n</code></pre>\n\n<p>Use it in your code like this:</p>\n\n<pre><code>var cursorPosition = getCursorPos($('#myTextarea')[0])\n</code></pre>\n\n<p>Here's its complementary function:</p>\n\n<pre><code>function setCursorPos(input, start, end) {\n    if (arguments.length &lt; 3) end = start;\n    if (\"selectionStart\" in input) {\n        setTimeout(function() {\n            input.selectionStart = start;\n            input.selectionEnd = end;\n        }, 1);\n    }\n    else if (input.createTextRange) {\n        var rng = input.createTextRange();\n        rng.moveStart(\"character\", start);\n        rng.collapse();\n        rng.moveEnd(\"character\", end - start);\n        rng.select();\n    }\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/gilly3/6SUN8/\">http://jsfiddle.net/gilly3/6SUN8/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I've done a fair amount of work on this and posted a function for getting caret/selection position in textareas on Stack Overflow several times. Unlike pretty much every other code to do this out there, it works properly with line breaks in IE &lt; 9.</p>\n\n<p>Here's an example question with some background:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/235411/is-there-an-internet-explorer-approved-substitute-for-selectionstart-and-selectio/4207763#4207763\">Is there an Internet Explorer approved substitute for selectionStart and selectionEnd?</a></p>\n\n<p>And here's a link to a jQuery plug-in I've written that includes this function and other selection-related textarea functions:</p>\n\n<p><a href=\"http://code.google.com/p/rangyinputs/\">http://code.google.com/p/rangyinputs/</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>The function above can be improved (IE7 returns the wrong position for multi-row-textareas)</p>\n\n<p>just replace:</p>\n\n<pre><code>rc.text.length\n</code></pre>\n\n<p>with:</p>\n\n<pre><code>rc.text.split(\"\\n\").join(\"\").length\n</code></pre>\n\n<p>and it works on ie7 as well :-)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a textarea and I would like to know if I am on the last line in the textarea or the first line in the textarea with my cursor with javascript.</p>\n\n<p>I thought of grabbing the position of the first newline character and the last newline character and then grabbing the position of the cursor.</p>\n\n<pre><code>var firstNewline = $('#myTextarea').val().indexOf('\\n');\nvar lastNewline = $('#myTextarea').val().lastIndexOf('\\n');\n\nvar cursorPosition = ?????;\n\nif (cursorPosition &lt; firstNewline)\n    // I am on first line.\nelse if (cursorPosition &gt; lastNewline)\n    // I am on last line.\n</code></pre>\n\n<ul>\n<li>Is it possible to grab the cursor position within the textarea?</li>\n<li>Do you have a better suggestion for finding out if I am on the first or last line of a textarea?</li>\n</ul>\n\n<p>jQuery solutions preferred unless javascript is as simple or simpler.</p>\n\n<p>Any help is much appreciated.</p>\n",
            "last_activity_date": 1337729509,
            "question_id": 7745867,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "input",
                "textarea"
            ],
            "title": "How do you get the cursor position in a textarea?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Just wanted to add my experience here, though the question's old: The consensus above seems to be that jQuery's rounding is effectively just as good as an unrounded calculation -- but that doesn't seem to be the case in something I've been doing.</p>\n\n<p>My element has a fluid width, generally, but content that changes dynamically via AJAX. Before switching the content, I temporarily lock the dimensions of the element so my layout doesn't bounce around during the transition. I've found that using jQuery like this:</p>\n\n<pre><code>$element.width($element.width());\n</code></pre>\n\n<p>is causing some funniness, like there are sub-pixel differences between the actual width and the calculated width. (Specifically, I will see a word jump from one line of text to another, indicating the the width has been changed, not just locked.) From another question -- <a href=\"http://stackoverflow.com/questions/11907514/getting-the-actual-floating-point-width-of-an-element\">Getting the actual, floating-point width of an element</a> -- I found out that <code>window.getComputedStyle(element).width</code> will return an unrounded calculation. So I changed the above code to something like</p>\n\n<pre><code>var e = document.getElementById('element');\n$('#element').width(window.getComputedStyle(e).width);\n</code></pre>\n\n<p>And with THAT code -- <em>no funny bouncing!</em> That experience seems to suggest that the unrounded value actually <em>does</em> matter to the browser, right? (In my case, Chrome Version 26.0.1410.65.)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Use the native <a href=\"https://developer.mozilla.org/en-US/docs/DOM/element.getBoundingClientRect\"><code>Element.getBoundingClientRect</code></a> rather than the style of the element. It was introduced in IE4 and is supported by all browsers:</p>\n\n<pre><code>$(\"#container\")[0].getBoundingClientRect().width\n</code></pre>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$(\"#log\").html(\r\n  $(\"#container\")[0].getBoundingClientRect().width\r\n);</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>#container {\r\n    background: blue;\r\n    width: 543.5px;\r\n    height: 20px;\r\n    margin: 0;\r\n    padding: 0;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n\r\n&lt;div id=\"container\"&gt;&lt;/div&gt;\r\n&lt;p id=\"log\"&gt;&lt;/p&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 46
                }
            ],
            "body": "<p>I've searched around and couldn't find this. I'm trying to get the width of a div, but if it has a decimal point it rounds the number. </p>\n\n<p>Example: </p>\n\n<pre><code>#container{\n    background: blue;\n    width: 543.5px;\n    height: 20px;\n    margin: 0;\n    padding: 0;\n}\n</code></pre>\n\n<p>If I do <code>$('#container').width();</code> it will return 543 instead of 543.5. How do I get it to not round the number and return the full 543.5 (or whatever number it is).</p>\n",
            "last_activity_date": 1418238190,
            "question_id": 3603065,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "How to make jQuery to not round value returned by .width()?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You have to manually subtract that extra <code>1</code> from month number I'm afraid. JS Date object is a mess.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You can feed the Date constructor a date in mm/dd/yyyy or yyyy/mm/dd format and it will convert it:</p>\n\n<pre><code>&gt;&gt;&gt; new Date('7/30/2009');\nThu Jul 30 2009 00:00:00 GMT-0700 (Pacific Daylight Time)\n&gt;&gt;&gt; new Date('2009/7/30');\nThu Jul 30 2009 00:00:00 GMT-0700 (Pacific Daylight Time)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>My goal is to convert a timestamp from MySQL into a JavaScript Date object in an efficient manner.  Here is my current snippet that converts the MySQL timestamp into a formatted date in PHP:</p>\n\n<pre><code>&lt;?php\n// formats timestamp into following format: 2009, 7, 30\n$date =  date(\"Y, n, j\", strtotime($row[\"date\"]));\n?&gt;\n</code></pre>\n\n<p>I am then using this <code>$date</code> value for a chart using Google's charting API which requires JavaScript Date object:</p>\n\n<pre><code>data.setValue(&lt;?=$count;?&gt;, 0, new Date(&lt;?=$date;?&gt;));\n</code></pre>\n\n<p>The problem is that the JavaScript Date object begins the month index with 0 so the output is always 1 month <strong>in advance</strong>.  What is the most efficient way in dealing with this issue?</p>\n\n<p>Thanks in advance!</p>\n",
            "last_activity_date": 1248979662,
            "question_id": 1208519,
            "score": 18,
            "tags": [
                "php",
                "javascript",
                "mysql",
                "timestamp"
            ],
            "title": "JavaScript Date Object&#39;s month index begins with 0!"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I thiiink you should be able to do:</p>\n\n<pre><code>$(document).ready( function (){\n  $(\"#mydiv\").bind(\"movestart\", function (){ ...remember start position... });\n  $(\"#mydiv\").bind(\"moveend\", function (){ ...calculate offsets etc... });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The easy answer is that there events in the DOM for detecting layout updates.</p>\n\n<p>You have a couple options the way I see it:</p>\n\n<ol>\n<li><p>Poll, nasty but it may work depending on your update frequency requirements.</p></li>\n<li><p>Tap into whatever event causes the invisible DIV to change size and do whatever you need to do in that handler</p></li>\n</ol>\n\n<p><hr /></p>\n\n<p>I shall correct myself.</p>\n\n<p>I took a look at the DOM and noticed the DOMAttrModified event and found this <a href=\"http://www.west-wind.com/weblog/posts/478985.aspx\" rel=\"nofollow\">JQuery Plug-In</a> that you might be able to leverage to do what you want.</p>\n\n<p>As the article mentions, it works great in IE and Firefox but seems to have problems in WebKit.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I would like to know if there is a jQuery event that I can use to determine when a particular DIV's \"Top\" property has changed.</p>\n\n<p>For instance, I have invisible content above a DIV.  When that content becomes visible the DIV is shifted down.  I would like to capture that event and then use the offset() function to get the X/Y coordinates.</p>\n\n<p>Thanks!!</p>\n",
            "last_activity_date": 1262479031,
            "question_id": 355015,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "javascript-events"
            ],
            "title": "jQuery Event To Detect When Element Position Changes"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Use a backslash, which itself should be escaped so JavaScript doesn't eat it:</p>\n\n<pre><code>$(this).find(\"geo\\\\:lat\").text();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>That isn't just an ordinary element name.  That's a qualified name, meaning that it is a name that specifically refers to an element type within a namespace.  The element type name is 'lat', and the namespace prefix is 'geo'.</p>\n\n<p>Right now, jQuery can't deal with namespaces very well, see <a href=\"http://dev.jquery.com/ticket/155\">bug 155</a> for details.</p>\n\n<p>Right now, as a workaround, you should be able to select these elements with just the local name:</p>\n\n<pre><code>$(this).find(\"lat\").text();\n</code></pre>\n\n<p>If you have to distinguish between element types with the same local name, then you can use <code>filter()</code>:</p>\n\n<pre><code>var NS = \"http://example.com/whatever-the-namespace-is-for-geo\";\n$(this).find(\"lat\").filter(function() { return this.namespaceURI == NS; }).text();\n</code></pre>\n\n<p><strong>Edit:</strong> my mistake, I was under the impression that patch had already landed.  Use Adam's suggestion for the selector, and <code>filter()</code> if you need the namespacing too:</p>\n\n<pre><code>var NS = \"http://example.com/whatever-the-namespace-is-for-geo\";\n$(this).find(\"geo\\\\:lat\").filter(function() { return this.namespaceURI == NS; }).text();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>if you have a <strong>jquery selector problem with chrome or webkit</strong> not selecting it try </p>\n\n<pre><code>$(this).find('[nodeName=geo:lat]').text();\n</code></pre>\n\n<p>this way it works in all browsers</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm trying to get the contents of a XML document element, but the element has a colon in it's name.</p>\n\n<p>This line works for every element but the ones with a colon in the name:</p>\n\n<pre><code>$(this).find(\"geo:lat\").text();\n</code></pre>\n\n<p>I assume that the colon needs escaping. How do I fix this?</p>\n",
            "last_activity_date": 1305154710,
            "question_id": 128580,
            "score": 18,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery $().find problem"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<pre><code>&lt;video id=\"myvideo\"&gt;\n  &lt;source src=\"path/to/movie.mp4\" /&gt;\n&lt;/video&gt;\n\n&lt;p onclick=\"toggleControls();\"&gt;Toggle&lt;/p&gt;\n\n&lt;script&gt;\nvar video = document.getElementById(\"myvideo\");\n\nfunction toggleControls() {\n  if (video.hasAttribute(\"controls\")) {\n     video.removeAttribute(\"controls\")   \n  } else {\n     video.setAttribute(\"controls\",\"controls\")   \n  }\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>See it working on jsFiddle: <a href=\"http://jsfiddle.net/dgLds/\">http://jsfiddle.net/dgLds/</a></p>\n",
                    "is_accepted": true,
                    "score": 33
                }
            ],
            "body": "<p>I am looking for a way to show or hide HTML5 video controls at will via javascript. The controls are currently only visible when the video starts to play</p>\n\n<p>Is there a way to do this with the native video controls?</p>\n\n<p>I'm using google chrome browser.</p>\n",
            "last_activity_date": 1416841878,
            "question_id": 5399412,
            "score": 17,
            "tags": [
                "javascript",
                "google-chrome",
                "html5-video"
            ],
            "title": "HTML5 video - show/hide controls programatically"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No you would have to create your own solution. Like using the Observer design pattern or something.</p>\n\n<p>If you have no control over the variable or who is using it, I'm afraid you're doomed.\nEDIT: Or use Skilldrick's solution!</p>\n\n<p>Mike</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>a quick and easy solution goes like this:</p>\n\n<pre><code>var something=999;\nvar something_cachedValue=something;\n\nfunction doStuff() {\n    if(something===something_cachedValue) {//we want it to match\n        setTimeout(doStuff, 50);//wait 50 millisecnds then recheck\n        return;\n    }\n    something_cachedValue=something;\n    //real action\n}\n\ndoStuff();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>I would recommend a wrapper that will handle value being changed. For example you can have JavaScript function, like this:</p>\n\n<pre><code>\u200bfunction Variable(initVal, onChange)\n{\n    this.val = initVal;          //Value to be stored in this object\n    this.onChange = onChange;    //OnChange handler\n\n    //This method returns stored value\n    this.GetValue = function()  \n    {\n        return this.val;\n    }\n\n    //This method changes the value and calls the given handler       \n    this.SetValue = function(value)\n    {\n        this.val = value;\n        this.onChange();\n    }\n\n\n}\n</code></pre>\n\n<p>And then you can make an object out of it that will hold value that you want to monitor, and also a function that will be called when the value gets changed. For example, if you want to be alerted when the value changes, and initial value  is 10, you would write code like this:</p>\n\n<pre><code>var myVar = new Variable(10, function(){alert(\"Value changed!\");});\n</code></pre>\n\n<p>Handler <code>function(){alert(\"Value changed!\");}</code> will be called (if you look at the code) when <code>SetValue()</code> is called.</p>\n\n<p>You can get value like so:</p>\n\n<pre><code>alert(myVar.GetValue());\n</code></pre>\n\n<p>You can set value like so:</p>\n\n<pre><code>myVar.SetValue(12);\n</code></pre>\n\n<p>And immediately after, an alert will be shown on the screen. See how it works: <a href=\"http://jsfiddle.net/cDJsB/\" rel=\"nofollow\">http://jsfiddle.net/cDJsB/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>JavaScript interpreters are single threaded, so a variable can never change, when the code is waiting in some other code that does not change the variable.</p>\n\n<p>In my opinion it would be the best solution to wrap the variable in some kind of object that has a getter and setter function. You can then register a callback function in the object that is called when the setter function of the object is called. You can then use the getter function in the callback to retrieve the current value:</p>\n\n<pre><code>function Wrapper(callback)) {\n    var value;\n    this.set = function(v) {\n        value = v;\n        callback(this);\n    }\n    this.get = function() {\n        return value;\n    }  \n}\n</code></pre>\n\n<p>This could be easily used like this:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\" src=\"wrapper.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction callback(wrapper) {\n    alert(\"Value is now: \" + wrapper.get());\n}\n\nwrapper = new Wrapper(callback);\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;input type=\"text\" onchange=\"wrapper.set(this.value)\"/&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You can use <strong>porperties</strong>:</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty</a></p>\n\n<p>Example:</p>\n\n<pre><code>function def(varName, onChange) {\n    var _value;\n\n    Object.defineProperty(this, varName, {\n        get: function() {\n            return _value;\n        },\n        set: function(value) {\n            if (onChange)\n                onChange(_value, value);\n            _value = value;\n        }\n    });\n\n    return this[varName];\n}\n\ndef('myVar', function (oldValue, newValue) {\n    alert('Old value: ' + oldValue + '\\nNew value: ' + newValue);\n});\n\nmyVar = 1; // alert: Old value: undefined | New value: 1\nmyVar = 2; // alert: Old value: 1 | New value: 2\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to force a JavaScript program to wait in some particular points of its execution until a variable has changed. Is there a way to do it? I have already found an extension that is called \"narrative JavaScript\" that force the program to wait until an event to happen. Is there a way to create a new event, a \"variable change event\" for example that behaves like onclick event..</p>\n",
            "last_activity_date": 1417274024,
            "question_id": 3635924,
            "score": 17,
            "tags": [
                "javascript",
                "variables",
                "wait"
            ],
            "title": "How can I make a program wait for a variable change in javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>jQuery(\"li:not([style])\").hide();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>You can use the :not psuedo-selector to look up elements that <em>don't</em> match a certain selector. In your example, you want to select all li elements without the style attribute, so you'd use something like this:</p>\n\n<pre><code>$('li:not([style])').hide();\n</code></pre>\n\n<p>You can also combine this with other selectors:</p>\n\n<pre><code>$('#div input:not(:checked)').show();\n</code></pre>\n\n<p>It's a pretty powerful tool!</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Try: </p>\n\n<pre><code>$('li:not([style])').hide();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have several objects on a page and I want to perform an operation using jQuery only on some of them - the ones that don't have a specified attribute. So:</p>\n\n<pre><code>&lt;li style='...'&gt;some text&lt;/li&gt;\n&lt;li style='...'&gt;some other text&lt;/li&gt;\n&lt;li&gt;some very diffrent text&lt;/li&gt;\n</code></pre>\n\n<p>and in javascript I would have:</p>\n\n<pre><code>$('li[style]').hide();\n</code></pre>\n\n<p>that would hide all elements with a <code>style</code> sttribute. But if I want to hide the ones <strong>without</strong> it, how should my selector look like? </p>\n",
            "last_activity_date": 1412206503,
            "question_id": 1969141,
            "score": 17,
            "tags": [
                "javascript",
                "jquery",
                "css-selectors"
            ],
            "title": "jQuery selectors - find objects without specified attribute"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>If you are using java, take a look at the <a href=\"http://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html\" rel=\"nofollow\">Simple Date Format</a> class.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The javascript code in <a href=\"http://www.mattkruse.com/javascript/date/index.html\" rel=\"nofollow\">this page</a> implements some date functions and they \"use the same format strings as the java.text.SimpleDateFormat class, with a few minor exceptions\". It is not the very same as you want but it can be a good start point.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A similar topic has been answered here: \n<a href=\"http://stackoverflow.com/questions/758999/converting-dates-in-javascript\">Converting dates in JavaScript</a></p>\n\n<p>I personally have found this to be a rather large pain and took the author's suggestion and used a library.  As noted, jQuery datepicker has one that is a viable solution if you can afford the overhead of download for your application or already using it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you just need to pass a date from Java to JavaScript, the best way to do it, I think, would be to convert the Java date to milliseconds using <code>date.getTime()</code>, create a JavaScript date initialized with this milliseconds value with <code>new Date(milliseconds)</code>and then format the date with the means of the JavaScript Date object, like: <code>date.toLocaleString()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>See this:</p>\n\n<p><a href=\"http://www.javascripttoolbox.com/lib/date/examples.php\" rel=\"nofollow\">http://www.javascripttoolbox.com/lib/date/examples.php</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you just want to format dates my date extensions will do that well - it also parses data formats and does a lot of date math/compares as well:</p>\n\n<p><a href=\"http://www.depressedpress.com/Content/Development/JavaScript/Extensions/DP%5FDateExtensions/Index.cfm\" rel=\"nofollow\">DP_DateExtensions Library</a></p>\n\n<p>Not sure if it'll help, but I've found it invaluable in several projects.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use my plugin <a href=\"http://github.com/phstc/jquery-dateFormat\" rel=\"nofollow\">jquery-dateFormat</a>.</p>\n\n<pre><code>// Text\n$.format.date(\"2009-12-18 10:54:50.546\", \"dd/MM/yyyy\");\n// HTML Object\n$.format.date($(\"#spanDate\").text(), \"dd/MM/yyyy\");\n// Scriptlet\n$.format.date(\"&lt;%=java.util.Date().toString()%&gt;\", \"dd/MM/yyyy\");\n// JSON\nvar obj = ajaxRequest();\n$.format.date(obj.date, \"dd/MM/yyyy\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This JavaScript library should be able to help you.  </p>\n\n<p><a href=\"http://plugins.jquery.com/project/fIsForFormat\" rel=\"nofollow\">http://plugins.jquery.com/project/fIsForFormat</a></p>\n\n<p>(I don't know why they have it as a jQuery Plugin, because it works standalone.)</p>\n\n<p>You'd simply split the original formatted date into its individual elements and then create a new Date Object with those elements.  Then, use this library's \"Date.f()\" method to output it into any format you could want.</p>\n\n<p>For example:</p>\n\n<pre><code>var dateOld = \"11/27/2010\",\n    dateArr = date1.split(\"/\"),\n    dateObj = new Date(dateArr[2], dateArr[0], dateArr[1]),\n    dateNew = dateObj.f(\"MMM d, yyyy\");\n\ndocument.write(\"Old Format: \" + dateOld + \"&lt;br/&gt;New Format: \" + dateNew);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This works fine for me:</p>\n\n<pre><code>&lt;%\nDate date = Calendar.getInstance().getTime();\n%&gt;\n\n&lt;script&gt;\nvar d = new Date(&lt;%=date.getTime()%&gt;);\nalert(d);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Check out <a href=\"http://momentjs.com/\" rel=\"nofollow\">moment.js</a>! It's \"A lightweight javascript date library for parsing, manipulating, and formatting dates\". It is a really powerful little library.</p>\n\n<p>Here's an example...</p>\n\n<pre><code>var today = moment(new Date());\ntoday.format(\"MMMM D, YYYY h:m A\");        // outputs \"April 11, 2012 2:32 PM\"\n\n// in one line...\nmoment().format(\"MMMM D, YYYY h:m A\");     // outputs \"April 11, 2012 2:32 PM\"\n</code></pre>\n\n<p>Here's another example...</p>\n\n<pre><code>var a = moment([2012, 2, 12, 15, 25, 50, 125]);\na.format(\"dddd, MMMM Do YYYY, h:mm:ss a\"); // \"Monday, March 12th 2012, 3:25:50 pm\"\na.format(\"ddd, hA\");                       // \"Mon, 3PM\"\na.format(\"D/M/YYYY\");                      // \"12/3/2012\"\n</code></pre>\n\n<hr>\n\n<p>Also, its worth mentioning to checkout <a href=\"http://www.datejs.com/\" rel=\"nofollow\">date.js</a>. I think the two libraries complement each other.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I would like to be able to convert a Java date format string, e.g. <em>dd/MM/yyyy</em> (07/06/2009) to a JavaScript date format string, e.g. <em>dd/mm/yy</em> (07/06/2009). </p>\n\n<p>Has anyone done this before, or got any idea where I might find some code that already does this?</p>\n\n<p>Thanks in advance.</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>Thanks for all the replies but now I realize my mistake and possibly why so many of you were struggling to understand the question; JavaScript doesn't have a built in date formatting ability. I am using the jQuery UI datepicker and I have been setting its date format, assuming it would be calling a standard JS function at some point, not using its own library! When I googled for formatting strings I jumped straight to the tables of what letters could be used, skipping the bit at the beginning explaining how to use the script.</p>\n\n<p>Anyway I'll have to go ahead and possibly write my own I guess, converting a Java date format string into a jQuery date format string (or as close as possible) - I am working on the i18n of our product and have created a java class that stores the preferred date format string used throughout the application, my intention was to also have the ability to supply any jsps with the format string that is equivalent in JS.</p>\n\n<p>Thanks anyway.</p>\n",
            "last_activity_date": 1421077182,
            "question_id": 1007732,
            "score": 17,
            "tags": [
                "java",
                "javascript",
                "date-format"
            ],
            "title": "Java date format to JavaScript date format"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can do it in one line with <code>var originalElement = e.srcElement || e.originalTarget;</code> but it ain't pretty JQuery-like ;-)</p>\n\n<p>[Edit: But according to <a href=\"http://docs.jquery.com/Events/jQuery.Event#event.target\">http://docs.jquery.com/Events/jQuery.Event#event.target</a> <code>event.target</code> might do...]</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>I believe e.target is what you require</p>\n\n<pre><code>$('body').bind('click', function(e){\n                e.target // the original target\n                e.target.id // the id of the original target                                               \n});\n</code></pre>\n\n<p>If you go to the <a href=\"http://www.manning.com/bibeault/\">jQuery in Action website</a> and download the source code, take a look at </p>\n\n<ul>\n<li><strong>Chapter 4 -</strong> dom.2.propagation.html</li>\n</ul>\n\n<p>which deals with event propagation with bubble and capture handlers</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Using <code>event.originalTarget</code> can cause \"Permission denied to access property 'XYZ' from a non-chrome context\" -error, so i'd recommend using following:</p>\n\n<pre><code>var target = event.target || event.srcElement || event.originalTarget;\n</code></pre>\n\n<p><code>event.target</code> works on Firefox, Opera, Google Chrome and Safari.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>in normal Javascript, var t = (e.originalTarget)?e.originalTarget:e.srcElement; should be enough to read it across all browsers.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In conjunction with <a href=\"http://stackoverflow.com/questions/152975/how-to-detect-a-click-outside-an-element\" title=\"How to detect a click outside an element?\">How to detect a click outside an element?</a> here is how you might trap a sub-widget with similar hide-when-clicked-outside functionality to prevent your own pop-over from hiding along with it; in this case, we are trapping the JQuery UI Datepicker pop-over widget:</p>\n\n<pre><code>// not using jquery .one handler for this, so we can persist outside click later\n$('html').click(function(evt) {\n    // just return if element has the datepicker as a parent\n    if ($(evt.target).parents('#ui-datepicker-div').length&gt;0) return;\n\n    //toggle shut our widget pop-over\n    $('#mywidget').toggle();\n\n    // now, unbind this event since our widget is closed:\n    $(this).unbind(evt);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>What's a jQuery like and/or best practices way of getting the original target of an event in jQuery (or in browser javascript in general).  </p>\n\n<p>I've been using something like this</p>\n\n<pre><code>$('body').bind('click', function(e){\n\t\t//depending on the browser, either srcElement or \n\t\t//originalTarget will be populated with the first\n\t\t//element that intercepted the click before it bubbled up\n\t\tvar originalElement = e.srcElement;\n\t\tif(!originalElement){originalElement=e.originalTarget;} \t\t\t\t\t\t\n});\n</code></pre>\n\n<p>which works, but I'm not pleased with the two line feature sniffing.  Is there a better way?</p>\n",
            "last_activity_date": 1341252535,
            "question_id": 485453,
            "score": 17,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "dom",
                "delegates"
            ],
            "title": "Best way to get the Original Target"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Well it depends...\nDo you want so get productive fast? then JQuery or any other framework of your choice is the way.\nBut if you want to dive in to Javascript/Ajax and learn how stuff works then it would be better to try and write things yourself and also take a look at other frameworks out there and learn from them. Different people have different point of views so look at them and how they're doing it and learn from that. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Warning: I love jQuery, my opinion is biased</p>\n\n<p>For people that are new with javascript I believe it is important to learn the basics (read: do it from the ground up) rather than rely on libraries. That said the time savings and terseness of the resulting code is well worth using the library.</p>\n\n<p>To recap:\nLearning do if yourself\nOtherwise do yourself and your deadlines a favour and use the library.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For learning, yes, avoid libraries. Especially for something as conceptually simple as AJAX, forcing yourself to learn how the browser can be used \"raw\" will benefit you immensely later on, even if you are using a library to take care of the drudgery and abstract away browser differences.</p>\n\n<p>Once you have a solid understanding of how it works though, use a library, if for no other reason than spending time working around subtle browser differences is a waste. Better yet though, spending some time reading through the source of jQuery and others will give you insight into what well-written JavaScript looks like - and that in turn will benefit the code you <em>do</em> write!</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>While I think it is really important to understand conceptually what is going on and be able to correctly implement calls using an AJAX library, I disagree with @Shog9 that you need to write the actual code to perform an XmlHttpRequest in order to start using AJAX.  I'd say do some background reading to understand the concepts -- implement the code samples demonstrating them if you want -- but once you get the concept, find some tutorials on how to do stuff with AJAX with or without libraries.  You'll soon find that others have been there before and left pretty good sign-posts on how to get around.</p>\n\n<p>I agree with the sentiment about looking at framework code to see how to write good code.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I think it's all a matter of what your end goal is.  If your looking to have a good fundamental understanding of AJAX so you can make educated decisions about which framework is best and why certain things work then learning AJAX without the help of a framework is best for you.  If your goal to learn how to architect dynamic websites and AJAX is the missing link in your understanding, then I see no harm in learning based on a framework.  Besides, how often do you really need to understand the fundamentals of a technology.  In the same way that you don't really need to know how to use the WinHttp object to be able to make Http requests in .Net, for the most part you don't need to know how to use the XmlHttpRequest object because your likely going to be using some form of interface to access it anyway.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Every generation of technology makes learning the previous generation less useful, even though it could give you more power.</p>\n\n<p>Example: Millions learned Visual Basic even though writing your own C gives you more control.</p>\n\n<p><strong>Answer to the question:</strong>\nIf you want to learn about AJAX, study how the libraries use AJAX.  They are open source.  They have been matured over time and are commented well.</p>\n\n<p>If you want to <strong>USE</strong> AJAX, then just use one of the libraries and save yourself a world of headache.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is it better to learn how to code AJAX without the use of an AJAX library? What are the advantages of coding from scratch over using a library such as jQuery?</p>\n\n<h3>See also:</h3>\n\n<p><a href=\"http://stackoverflow.com/questions/122902/what-are-some-of-the-pros-and-cons-of-using-jquery\">What are some of the pros and cons of using jQuery?</a></p>\n",
            "last_activity_date": 1224723852,
            "question_id": 215589,
            "score": 17,
            "tags": [
                "javascript",
                "ajax"
            ],
            "title": "Should I avoid using a JavaScript library while learning how to write AJAX client code?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>JavaScript allows functions to be\n  treated as objects--you can add a\n  property to a function. How do you do\n  the reverse, and add a function to an\n  object?</p>\n</blockquote>\n\n<p>You appear to be a bit confused. Functions, in JavaScript, <em>are</em> objects. And <strong>variables <em>are</em> variable</strong>. You wouldn't expect this to work:</p>\n\n<pre><code>var three = 3;\nthree = 4;\nassert(three === 3);\n</code></pre>\n\n<p>...so why would you expect that assigning a function to your variable would somehow preserve its previous value? Perhaps some annotations will clarify things for you:</p>\n\n<pre><code>// assigns an anonymous function to the variable \"foo\"\nvar foo = function() { return 1; }; \n// assigns a string to the property \"baz\" on the object \n// referenced by \"foo\" (which, in this case, happens to be a function)\nfoo.baz = \"qqqq\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There doesn't appear to be a standard way to do it, but this works.</p>\n\n<p>WHY however, is the question.</p>\n\n<pre><code>function functionize( obj , func )\n{ \n   out = func; \n   for( i in obj ){ out[i] = obj[i]; } ; \n   return out; \n}\n\nx = { a: 1, b: 2 }; \nx = functionize( x , function(){ return \"hello world\"; } );\nx()   ==&gt; \"hello world\"\n</code></pre>\n\n<p>There is simply no other way to acheive this, \ndoing  </p>\n\n<pre><code>x={}\nx()\n</code></pre>\n\n<p>WILL return a \"type error\". because \"x\" is an \"object\"  and you can't change it. its about as sensible as trying to do </p>\n\n<pre><code> x = 1\n x[50] = 5\n print x[50]\n</code></pre>\n\n<p>it won't work.  1 is an integer. integers don't have array methods. you can't make it. </p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Use a temporary variable:</p>\n\n<pre><code>var xxx = function()...\n</code></pre>\n\n<p>then copy all the properties from the original object:</p>\n\n<pre><code>for (var p in bar) { xxx[p] = bar[p]; }\n</code></pre>\n\n<p>finally reassign the new function with the old properties to the original variable:</p>\n\n<pre><code>bar = xxx;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's easy to be confused here, but you can't (easily or clearly or as far as I know) do what you want.  Hopefully this will help clear things up.</p>\n\n<p>First, every object in Javascript inherits from the Object object.</p>\n\n<pre><code>//these do the same thing\nvar foo = new Object();\nvar bar = {};\n</code></pre>\n\n<p>Second, functions <strong>ARE</strong> objects in Javascript.  Specifically, they're a Function object.  The Function object inherits from the Object object. Checkout the <a href=\"http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Function\">Function constructor</a></p>\n\n<pre><code>var foo = new Function();\nvar bar = function(){};\nfunction baz(){};\n</code></pre>\n\n<p>Once you declare a variable to be an \"Object\" you can't (easily or clearly or as far as I know) convert it to a Function object.  You'd need to declare a new Object of type Function (with the function constructor, assigning a variable an anonymous function etc.), and copy over any properties of methods from your old object.</p>\n\n<p>Finally, anticipating a possible question, even once something is declared as a function, you can't (as far as I know) change the functionBody/source.  </p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<pre><code>var bar = { \n    baz: \"qqqq\",\n    runFunc: function() {\n        return 1;\n    }\n};\n\nalert(bar.baz); // should produce qqqq\nalert(bar.runFunc()); // should produce 1\n</code></pre>\n\n<p>I think you're looking for this.</p>\n\n<p>can also be written like this:</p>\n\n<pre><code>function Bar() {\n    this.baz = \"qqqq\";\n    this.runFunc = function() {\n        return 1;\n    }\n}\n\nnBar = new Bar(); \n\nalert(nBar.baz); // should produce qqqq\nalert(nBar.runFunc()); // should produce 1\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Object types are functions and an object itself is a function instantiation.</p>\n\n<pre><code>  javascript:alert([Array, Boolean, Date, Function,\n                       Number, Object, RegExp, String].join('\\n\\n'))\n</code></pre>\n\n<p>displays (in FireFox):</p>\n\n<pre><code>function Array() {\n    [native code]\n}\n\nfunction Boolean() {\n    [native code]\n}\n\nfunction Date() {\n    [native code]\n}\n\nfunction Function() {\n    [native code]\n}\n\nfunction Number() {\n    [native code]\n}\n\nfunction Object() {\n    [native code]\n}\n\nfunction RegExp() {\n    [native code]\n}\n\nfunction String() {\n    [native code]\n}\n</code></pre>\n\n<p>In particular, note a Function object, <code>function Function() { [native code] }</code>, is defined as a recurrence relation (a recursive definition using itself).</p>\n\n<p>Also, note that the <a href=\"http://stackoverflow.com/questions/124326/how-to-convert-an-object-into-a-function-in-javascript/124402#124402\">answer 124402#124402</a> is incomplete regarding <code>1[50]=5</code>. This DOES assign a property to a Number object and IS valid Javascript. Observe,</p>\n\n<pre><code>javascript:\n     alert([  [].prop=\"a\",   true.sna=\"fu\",   (new Date()).tar=\"fu\",\n                     function(){}.fu=\"bar\",   123[40]=4,   {}.forty=2,\n                         /(?:)/.forty2=\"life\",   \"abc\".def=\"ghi\"  ].join(\"\\t\"))\n</code></pre>\n\n<p>displays</p>\n\n<pre><code>a   fu  fu  bar 4   2   life    ghi\n</code></pre>\n\n<p>interpreting and executing correctly according to Javascript's \"Rules of Engagement\".</p>\n\n<p>Of course there is always a wrinkle and manifest by <code>=</code>. An object is often \"short-circuited\" to its value instead of a full fledged entity when assigned to a variable. This is an issue with Boolean objects and boolean values.</p>\n\n<p>Explicit object identification resolves this issue.</p>\n\n<pre><code>javascript: x=new Number(1);  x[50]=5;  alert(x[50]);\n</code></pre>\n\n<p>\"Overloading\" is quite a legitimate Javascript exercise and explicitly endorsed with mechanisms like <code>prototyping</code> though code obfuscation can be a hazard.</p>\n\n<p>Final note:</p>\n\n<pre><code>javascript: alert(  123 . x = \"not\"  );\n\njavascript: alert( (123). x = \"Yes!\" );  /* ()'s elevate to full object status */\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var A = function(foo) {                                                                                                      \n  var B = function() {                                                                                                       \n    return A.prototype.constructor.apply(B, arguments);\n  };\n  B.prototype = A.prototype;                                                                                                 \n  return B;                                                                                                                  \n}; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>JavaScript allows functions to be treated as objects--if you first define a variable as a function, you can subsequently add properties to that function.  How do you do the reverse, and add a function to an \"object\"?</p>\n\n<p>This works:</p>\n\n<pre><code>var foo = function() { return 1; };\nfoo.baz = \"qqqq\";\n</code></pre>\n\n<p>At this point, <code>foo()</code> calls the function, and <code>foo.baz</code> has the value \"qqqq\".</p>\n\n<p>However, if you do the property assignment part first, how do you subsequently assign a function to the variable?</p>\n\n<pre><code>var bar = { baz: \"qqqq\" };\n</code></pre>\n\n<p>What can I do now to arrange for <code>bar.baz</code> to have the value \"qqqq\" <em>and</em> <code>bar()</code> to call the function?</p>\n",
            "last_activity_date": 1326171204,
            "question_id": 124326,
            "score": 17,
            "tags": [
                "javascript",
                "function",
                "properties"
            ],
            "title": "How to convert an &quot;object&quot; into a function in JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Take this gist \n<a href=\"https://gist.github.com/wilsonwc/8358542\">https://gist.github.com/wilsonwc/8358542</a> and add it to a file called stateMock in your test/mock folder, include that file in your karma config if it isn't already picked up.</p>\n\n<p>The setup before your test should then look something like this:</p>\n\n<pre><code>beforeEach(module('stateMock'));\n\n// Initialize the controller and a mock scope\nbeforeEach(inject(function ($state //other vars as needed) {\n    state = $state;\n    //initialize other stuff\n}\n</code></pre>\n\n<p>Then in your test you should add</p>\n\n<pre><code>state.expectTransitionTo('project');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>For more info should have a look to : <a href=\"https://github.com/angular-ui/ui-router/issues/212\" rel=\"nofollow\">https://github.com/angular-ui/ui-router/issues/212</a></p>\n\n<p>Problem is that http.flush() triggers a broadcast which then trigger the otherwise case of the stateprovider.</p>\n\n<p>A simple solution can be to do the following setup, as mentionned by @darinclark in Github thread mentionned above. This is valid if you do not need to test state transitions. Otherwise have a look to @rosswil answer that is inspired by @Vratislav answer in Github</p>\n\n<pre><code>beforeEach(module(function ($urlRouterProvider) {\n    $urlRouterProvider.otherwise(function(){return false;});\n}));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Move your services to their own module that have no dependency on  ui.router.  have your main app depend on this module. When you test don\u2019t test the main app, test the module that has your services in it. The stateprovider won\u2019t try to change state/route because this module knows nothing about the ui.router. This worked for me. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>This is a controller with a submit function:</p>\n\n<pre><code>$scope.submit = function(){   \n\n $http.post('/api/project', $scope.project)\n      .success(function(data, status){\n        $modalInstance.dismiss(true);\n      })\n      .error(function(data){\n        console.log(data);\n      })\n  }\n}\n</code></pre>\n\n<p>This is my test</p>\n\n<pre><code>it('should make a post to /api/project on submit and close the modal on success', function() {\n    scope.submit();\n\n    $httpBackend.expectPOST('/api/project').respond(200, 'test');\n\n    $httpBackend.flush();\n\n    expect(modalInstance.dismiss).toHaveBeenCalledWith(true);\n  });\n</code></pre>\n\n<p>The error I get is: </p>\n\n<pre><code>Error: Unexpected request: GET views/appBar.html\n</code></pre>\n\n<p>views/appBar.html is my templateUrl:</p>\n\n<pre><code> .state('project', {\n    url: '/',\n    templateUrl:'views/appBar.html',\n    controller: 'ProjectsCtrl'\n  })\n</code></pre>\n\n<p>So somehow ui-router is making my $httpBackend point to this instead of my submit function. I have the same issue in all my tests using $httpBackend.</p>\n\n<p>Is there any solution to this?</p>\n",
            "last_activity_date": 1419076621,
            "question_id": 23655307,
            "score": 16,
            "tags": [
                "javascript",
                "angularjs",
                "angular-ui",
                "karma-runner",
                "angular-ui-router"
            ],
            "title": "UI-router interfers with $httpbackend unit test, angular js"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>class</code> is reserved as a future keyword by the ECMAScript specification</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Reserved_Words\" rel=\"nofollow\">Reserved Words - MDN</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Languages evolve. It is prudent to reserve a few keywords that might come in use later. <a href=\"http://stackoverflow.com/questions/26255/reserved-keywords-in-javascript\">According to the ECMA standard</a>, <code>class</code> is a Future Reserved Word.</p>\n\n<p>If you did not reserve them, introducing new keywords could conflict with existing code (which already might be using the word for other things). Happened with Java and <code>assert</code>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>It's reserved to <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-7.6.1.2\">future-proof ECMAScript</a></p>\n\n<blockquote>\n  <p>The following words are used as keywords in proposed extensions and are therefore reserved to allow for the possibility of future adoption of those extensions.</p>\n</blockquote>\n\n<p>Don't fret though, if you're using best-practices in your JavaScripts, you're placing all accessible functions/variables/constructors in a namespace, which will allow you to use whatever name you'd like:</p>\n\n<pre><code>foo = {};\nfoo['class'] = function(){...code...};\nvar myClass = new foo['class']();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>It is there so that support can be added in future without breaking existing programs. Please take a look at the following <a href=\"http://stackoverflow.com/questions/1728984/class-keyword-in-javascript\">post</a>.</p>\n\n<p>You can also look at </p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Reserved_Words\" rel=\"nofollow\">https://developer.mozilla.org/en/JavaScript/Reference/Reserved_Words</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am planning to implement class inherit interface using JavaScript. <code>class</code> is the perfect word as the name of the constructor.</p>\n\n<pre><code>class = function (classname) {}; // create a class with classname\nclassA = new class(\"classA\"); // create a class named classA\n</code></pre>\n\n<p>Unfortunately, <code>class</code> is a reserved word in JavaScript.</p>\n\n<p>Why does JavaScript reserve the word <code>class</code> (since it never uses it)?</p>\n",
            "last_activity_date": 1375993039,
            "question_id": 7524618,
            "score": 16,
            "tags": [
                "javascript"
            ],
            "title": "why is class a reserved word in JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Not sure if it\u2019s the most effective, but at least it works.</p>\n\n<pre><code>var links = top.document.getElementsByTagName('a');\nvar result = [];\nvar linkcount = links.length;\nfor ( var i = 0; i &lt; linkcount; i++) {\n    if (links[i].getAttribute('title') === 'some title text here') {\n        result.push(links[i]);\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>If you're using a modern browser, you could use this:</p>\n\n<pre><code>window.top.document.querySelectorAll('a[title=\"some title text here\"]')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Here is an example</p>\n\n<pre><code>var getElements = function(tagName, attribute, value, callback) {\n  var tags = window.document.getElementsByTagName(tagName);\n  for (var i=0; i &lt; tags.length; i++) {\n    var tag = tags[i];\n    if (tag.getAttribute(attribute) == value) {\n      callback(tag);\n    }\n  };\n};\n\ngetElements(\"a\", \"title\", \"PHP power player at Hettema &amp; Bergsten. Click to learn more.\", function(tag) {\n  console.log(tag);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I guess this will be voted down, as it doesn't contain enough jQuery, but here it goes :)</p>\n\n<p>What is the most effective way to get the element(s) returned by the jQuery selector below using plain <s>old</s> javascript?</p>\n\n<pre><code>$('a[title=\"some title text here\"]', top.document)\n</code></pre>\n",
            "last_activity_date": 1314860110,
            "question_id": 7266631,
            "score": 16,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Selecting elements without jQuery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Have the below js inside the iframe and use ajax to submit the form.</p>\n\n<pre><code>$(function(){\n\n   $(\"form\").submit(e){\n        e.preventDefault();\n\n       //Use ajax to submit the form\n       $.ajax({\n          url: this.action,\n          data: $(this).serialize(),\n          success: function(){\n             window.parent.$(\"#target\").load(\"urlOfThePageToLoad\");\n          });\n       });\n\n   });\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I think you can just use window.parent from the iframe.  window.parent returns the window object of the parent page, so you could do something like:</p>\n\n<pre><code>window.parent.document.getElementById('yourdiv');\n</code></pre>\n\n<p>Then do whatever you want with that div.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think the problem may be that you are not finding your element because of the \"#\" in your call to get it:</p>\n\n<pre><code>window.parent.document.getElementById('#target'); \n</code></pre>\n\n<p>You only need the # if you are using jquery. Here it should be:</p>\n\n<pre><code>window.parent.document.getElementById('target'); \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                }
            ],
            "body": "<p>I have a page we can call parent.php. In this page i have an iframe with a submit form and outside of that i have a div with the id \"target\". Is it possible to submit the form in the iframe and when success refresh the target div. Say load a new page into it or something?</p>\n\n<p>Edit:\nThe target div is in the parent page, so my question is basicly if you can make for an example a jquery call outside the iframe to the parent. And how that would look?</p>\n\n<p>Edit 2:\nSo this is how my jquery code looks like now. It is in the  of the iframe page. the div #target is in the parent.php</p>\n\n<pre><code>$(;\"form[name=my_form]\").submit(function(e){     \n e.preventDefault; \n window.parent.document.getElementById('#target'); \n $(\"#target\").load(\"mypage.php\", function() { \n $('form[name=my_form]').submit(); \n }); \n })\n</code></pre>\n\n<p>I dont know if the script is active cause the form submits succcessfully but nothing happens to target.</p>\n\n<p>Edit 3:</p>\n\n<p>Now im trying to call the parent page from a link within the iframe. And no success there either</p>\n\n<pre><code>&lt;a href=\"javascript:window.parent.getElementById('#target').load('mypage.php');\"&gt;Link&lt;/a&gt;\n</code></pre>\n",
            "last_activity_date": 1327511656,
            "question_id": 7027799,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "iframe"
            ],
            "title": "Access elements of parent window from iframe"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Try creating a variable (Boolean preferably) and making it change once you get a response from the Ajax call. And put the <code>bas_disconnect_only()</code> function inside a while loop.\nI also had a problem like this once. I think this happens because Chrome doesn't wait for the Ajax call. I don't know how I fixed it and I haven't tried this code out so I don't know if it works. Here is an example of this:</p>\n\n<pre><code>var has_disconnected = false;\nwindow.onbeforeunload = function () {\n    while (!has_disconnected) {\n        bas_disconnect_only();\n        // This doesn't have to be here but it doesn't hurt to add it:\n        return true;\n    }\n}\n</code></pre>\n\n<p>And inside the <code>bas_send_request()</code> function (<em>xmlhttp</em> is the HTTP request):</p>\n\n<pre><code>xmlhttp.onreadystatechange = function() {\n    if (xmlhttp.readyState == 4 &amp;&amp; xmlhttp.status == 200)\n        has_disconnected = true;\n}\n</code></pre>\n\n<p>Good luck and I hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I was having the same problem, where Chrome was not sending the AJAX request to the server in the window.unload event.</p>\n\n<p>I was only able to get it to work if the request was synchronous. I was able to do this with Jquery and setting the <strong>async</strong> property to <strong>false</strong>:</p>\n\n<pre><code>$(window).unload(function () {\n\n    $.ajax({\n        type: 'GET',\n        async: false,\n        url: 'SomeUrl.com?id=123'\n    });\n});\n</code></pre>\n\n<p>The above code is working for me in IE9, Chrome 19.0.1084.52 m, and Firefox 12.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I know this question was asked a while ago, and what I'm about to say is relevant for newer versions of Chrome, but I think this might be helpful for many developers.</p>\n\n<p>Like @Garry English <a href=\"http://stackoverflow.com/a/10952466/174944\">said</a>, sending an async request during page <em>onunload</em> will not work, as the browser will kill the thread before sending the request. sending a sync request should work though.</p>\n\n<p>This was right until version 29 of Chrome, but on Chrome V 30 it suddenly stopped working\n<a href=\"http://productforums.google.com/d/msg/chrome/5b3ePr9rMVQ/g0o5wOJTHQoJ\">as stated here</a>.</p>\n\n<p>It appears that the only way of doing this today is by using the <strong><em>onbeforeunload</em></strong> event <a href=\"http://productforums.google.com/d/msg/chrome/5b3ePr9rMVQ/dHZXtFotjQMJ\">as suggested here</a>.</p>\n\n<p>BUT NOTE: other browsers will not let you send Ajax requests in the onbeforeunload event at all. so what you will have to do is perform the action in both unload and beforeunload, and check whether it had already taken place.</p>\n\n<p>Something like this:</p>\n\n<pre><code>var _wasPageCleanedUp = false;\nfunction pageCleanup()\n{\n    if (!_wasPageCleanedUp)\n    {\n        $.ajax({\n            type: 'GET',\n            async: false,\n            url: 'SomeUrl.com/PageCleanup?id=123',\n            success: function ()\n            {\n                _wasPageCleanedUp = true;\n            }\n        });\n    }\n}\n\n\n$(window).on('beforeunload', function ()\n{\n    //this will work only for Chrome\n    pageCleanup();\n});\n\n$(window).on(\"unload\", function ()\n{\n    //this will work for other browsers\n    pageCleanup();\n});\n</code></pre>\n\n<p>Hopes this helps anybody.</p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I have a web page that handles remote control of a machine through Ajax. When user navigate away from the page, I'd like to automatically disconnect from the machine. So here is the code:</p>\n\n<pre><code>window.onbeforeunload = function () {\n        bas_disconnect_only();\n}\n</code></pre>\n\n<p>The disconnection function simply send a HTTP GET request to a PHP server side script, which does the actual work of disconnecting:</p>\n\n<pre><code>function bas_disconnect_only() {\n   var xhr = bas_send_request(\"req=10\", function() {\n      }\n      );\n      }\n</code></pre>\n\n<p>This works fine in FireFox. But with Chrome, the ajax request is not sent at all. There is a unacceptable workaround: adding alert to the callback function:</p>\n\n<pre><code> function bas_disconnect_only() {\n   var xhr = bas_send_request(\"req=10\", function() {\n        alert(\"You're been automatically disconnected.\");\n      }\n      );\n      }\n</code></pre>\n\n<p>After adding the alert call, the request would be sent successfully. But as you can see, it's not really a work around at all.</p>\n\n<p>Could somebody tell me if this is achievable with Chrome? What I'm doing looks completely legit to me.</p>\n\n<p>Thanks,</p>\n",
            "last_activity_date": 1385974687,
            "question_id": 4945932,
            "score": 16,
            "tags": [
                "javascript",
                "ajax",
                "google-chrome"
            ],
            "title": "window.onbeforeunload ajax request problem with Chrome"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I don't really know javascript, but it would be pretty odd behaviour if it DIDN'T allocate space for the entire array. Why would you think it wouldn't take up space? You're asking for a huge array. If it didn't give it to you, that would be a specific optimisation.</p>\n\n<p>This obviously ignores OS optimisations such as memory overcommit and other kernel and implementation specifics.</p>\n",
                    "is_accepted": false,
                    "score": -8
                },
                {
                    "body": "<p>I dont think so because javascript treats arrays kinda like dictionaries, but with integer keys.</p>\n\n<p>alpha[1000000] = alpha[\"1000000\"]</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>See this topic:\n<a href=\"http://stackoverflow.com/questions/1510778/are-javascript-arrays-sparse\">are-javascript-arrays-sparse</a></p>\n\n<p>In most implementations of Javascript (probably all modern ones) arrays are sparse. That means no, it's not going to allocate memory up to the maximum index.</p>\n\n<p>If it's anything like a Lua implementation there is actually an internal array and dictionary. Densely populated parts from the starting index will be stored in the array, sparse portions in the dictionary.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>About a year ago, I did some testing on how browsers handle arrays (<a href=\"http://www.outofwhatbox.com/blog/2009/12/javascript-array-performance-and-why-it-matters/\" rel=\"nofollow\">obligatory self-promotional link to my blog post</a>.) My testing was aimed more at CPU performance than at memory consumption, which is much harder to measure. The bottom line, though, was that every browser I tested with seemed to treat sparse arrays as hash tables. That is, unless you initialized the array from the get-go by putting values in consecutive indexes (starting from 0), the array would be implemented in a way that seemed to optimize for space.</p>\n\n<p>So while there's no guarantee, I don't think that setting <code>array[100000]</code> will take any more room than setting <code>array[1]</code> -- unless you also set all the indexes leading up to those.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is an old myth, the other indexes on the array will not be assigned.</p>\n\n<p>When you assign a property name that is an \"array index\" (e.g. <code>alpha[10] = 'foo'</code>, a name that represents an unsigned 32-bit integer) and it is greater than the current value of the <code>length</code> property of an <code>Array</code> object, two things will happen:</p>\n\n<ol>\n<li>The \"index named\" property will be created on the object.</li>\n<li>The <code>length</code> will be incremented to be that <code>index + 1</code>.</li>\n</ol>\n\n<p>Proof of concept:</p>\n\n<pre><code>var alpha = [];\nalpha[10] = 2;\nalpha.hasOwnProperty(0);  // false, the property doesn't exist\nalpha.hasOwnProperty(9);  // false\nalpha.hasOwnProperty(10); // true, the property exist\nalpha.length;             // 11\n</code></pre>\n\n<p>As you can see, the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/HasOwnProperty\"><code>hasOwnProperty</code></a> method returns <code>false</code> when we test the <em>presence</em> of the <code>0</code> or <code>9</code> properties, because they don't exist physically on the object, whereas it returns <code>true</code> for <code>10</code>, the property was created.</p>\n\n<p>This misconception probably comes from popular JS consoles, like Firebug, because when they detect that the object being <em>printed</em> is an <em>array-like</em> one, they will simply make a loop, showing each of the index values from <code>0</code> to <code>length - 1</code>.</p>\n\n<p>For example, <em>Firebug</em> detects array-like objects simply by looking if they have a <code>length</code> property whose its value is an unsigned 32-bit integer (less than 2^32 - 1), and if they have a <code>splice</code> property that is a function:</p>\n\n<pre><code>console.log({length:3, splice:function(){}});\n// Firebug will log: `[undefined, undefined, undefined]`\n</code></pre>\n\n<p>In the above case, Firebug will internally make a sequential loop, to show each of the property values, but no one of the indexes really exist and showing <code>[undefined, undefined, undefined]</code> will give you the false sensation that those properties exist, or that they were \"allocated\", but that's not the case...</p>\n\n<p>This has been like that since ever, it's specified even of the <a href=\"http://www.mozilla.org/js/language/E262.pdf\">ECMAScript 1st Edition Specification</a> (as of 1997), you shouldn't worry to have implementation differences.</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>In Javascript, if I do something like</p>\n\n<pre><code>var alpha = [];\nalpha[1000000] = 2;\n</code></pre>\n\n<p>does this waste memory somehow?  I remember reading something about Javascript arrays still setting values for unspecified indices (maybe sets them to undefined?), but I think this may have had something to do with delete.  I can't really remember.</p>\n",
            "last_activity_date": 1293166855,
            "question_id": 4524067,
            "score": 16,
            "tags": [
                "javascript",
                "arrays",
                "memory"
            ],
            "title": "If I set only a high index in an array, does it waste memory?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I am just doing this without even trying it. Would this work?</p>\n\n<pre><code>myDiv = getElementById(\"myDiv\");\nmyDiv.querySelectorAll(this.id + \" &gt; .foo\");\n</code></pre>\n\n<p>Give it a try, maybe it works maybe not. Apolovies, but I am not on a computer now to try it (responding from my iPhone).</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>if you know for sure the element is unique (such as your case with the ID):</p>\n\n<pre><code>myDiv.parentElement.querySelectorAll(\"#myDiv &gt; .foo\");\n</code></pre>\n\n<p>For a more \"global\" solution: (use a <a href=\"https://gist.github.com/jonathantneal/3062955\" rel=\"nofollow\">matchesSelector shim</a>)</p>\n\n<pre><code>function getDirectChildren(elm, sel){\n    var ret = [], i = 0, l = elm.childNodes.length;\n    for (var i; i &lt; l; ++i){\n        if (elm.childNodes[i].matchesSelector(sel)){\n            ret.push(elm.childNodes[i]);\n        }\n    }\n    return ret;\n}\n</code></pre>\n\n<p>where <code>elm</code> is your parent element, and <code>sel</code> is your selector. Could totally be used as a prototype as well.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Good question, but as you see there is no way to do \"combinator rooted queries\" as <a href=\"http://ejohn.org/blog/thoughts-on-queryselectorall/\" rel=\"nofollow\">John Resig names them</a>.</p>\n\n<p>However, in some cases you can just skip <code>.querySelectorAll</code> and use other good old-fashioned DOM API features. Instead of the unsupported <code>myDiv.querySelectorAll(\"&gt; *\")</code> you can just write <code>myDiv.children</code>, for example.</p>\n\n<p>Unfortunately I can't think of a way to handle your situation without adding more custom filter logic (e.g. find <code>myDiv.getElementsByClassName(\"foo\")</code> whose <code>.parentNode === myDiv</code>), and obviously not ideal if you're trying to support one code path that really just wants to take an arbitrary selector string as input and a list of matches as output! But if like me you ended up asking this question simply because you got stuck thinking \"all you had was a hammer\" don't forget there are a variety of <em>other</em> tools the DOM offers too.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>Here's a flexible method, written in vanilla JS, that allows you to run a CSS selector query over only the direct children of an element:</p>\n\n<pre><code>var count = 0;\nfunction queryChildren(element, selector) {\n  var id = element.id,\n      guid = element.id = id || 'query_children_' + count++,\n      attr = '#' + guid + ' &gt; ',\n      selector = attr + (selector + '').replace(',', ',' + attr, 'g');\n  var result = element.parentNode.querySelectorAll(selector);\n  if (!id) element.removeAttribute('id');\n  return result;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<blockquote>\n  <p>Does anyone know how to write a selector which gets just the direct children of the element that the selector is running on?</p>\n</blockquote>\n\n<p>The correct way to write a selector that is \"rooted\" to the current element is to use <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:scope\"><code>:scope</code></a>:</p>\n\n<pre><code>var myDiv = getElementById(\"myDiv\");\nvar fooEls = myDiv.querySelectorAll(\":scope &gt; .foo\");\n</code></pre>\n\n<p><strong>However,</strong> <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:scope#Browser_compatibility\">browser support is limited</a> and you'll need a shim if you want to use it. I built <a href=\"https://github.com/lazd/scopedQuerySelectorShim\">scopedQuerySelectorShim</a> for this purpose.</p>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>I am able to do this:</p>\n\n<pre><code>&lt;div id = \"myDiv\"&gt;\n   &lt;div class=\"foo\" &gt;&lt;/div&gt;\n&lt;/div&gt;\n\nmyDiv = getElementById(\"myDiv\");\nmyDiv.querySelectorAll(\"#myDiv &gt; .foo\");\n</code></pre>\n\n<p>That is, I can successfully retrieve all the direct children of the <strong>myDiv</strong> element that have class <strong>.foo</strong>.\nThe problem is, it bothers me that I must include the #myDiv in the selector, because I am running the query on the myDiv element (so it is obviously redundant).<br>\nI ought to be able to leave the #myDiv off, but then the selector is not legal syntax since it starts with a >.</p>\n\n<p>Does anyone know how to write a selector which gets just the direct children of the element that the selector is running on?</p>\n",
            "last_activity_date": 1412243945,
            "question_id": 3680876,
            "score": 16,
            "tags": [
                "javascript",
                "dom",
                "css-selectors"
            ],
            "title": "use querySelectorAll to retrieve direct children"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><a href=\"http://benalman.com/projects/jquery-resize-plugin/\" rel=\"nofollow\">There's a (Ben Alman) plugin for that.<sup>TM</sup></a></p>\n\n<p>This is a good plugin, although I suggest using it sparingly (i.e., not on too many elements), so as to keep the amount of polling down.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can't get a callback for element movement/resizing in general; you would have to keep constantly checking the dimensions in an interval poller, which would make it a bit less responsive. You could improve this by calling the checker on a window <code>resize</code> event too (and <code>scroll</code> if overflow or fixed positioning is involved. You could also add DOM Mutation Event listeners to get informed when elements are removed from the document tree, but this doesn't work in all browsers.</p>\n\n<p>Can't you do an overlay with plain CSS? eg. put <code>position: relative</code> on the element to be obscured, then add the overlay inside it, with <code>position: absolute; z-index: 10; left: 0; top: 0; width: 100%; height: 100%; opacity: 0.5;</code>?</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>I don't think this solution would be relevant after so long, but there's an excellent cross-browser solution based on the overflow and underflow events presented <a href=\"http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>There are some cross-browser solutions:</p>\n\n<ul>\n<li><a href=\"https://github.com/KyleAMathews/element-resize-event\" rel=\"nofollow\">https://github.com/KyleAMathews/element-resize-event</a></li>\n<li><a href=\"https://github.com/sdecima/javascript-detect-element-resize\" rel=\"nofollow\">https://github.com/sdecima/javascript-detect-element-resize</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'd like to know if there is a DOM event to listen for that tells me when a DOM element moves is repositioned or is resized on the page.  I am not talking about an elements being drag/dropped.  An example is if a have a list of three items on a page, and I use JS to remove one of the top two list items from the page (or hide it or whatever), I'd like to attach a handler to run when the third list item gets moved up in the page.</p>\n\n<p>I am using jQuery, so plain javascript or jQuery answers are acceptable.</p>\n\n<p>Maybe there are no move/position/resize events at the element level, so if there is a page/doc level event that will tell me that the page was repainted and I can check if I need to call a function again?</p>\n\n<p><strong>Background</strong></p>\n\n<p>I put a transparent div over an element while a webservice call is made  to delete that element.  Since I need to absolutely position that overlay div, I want it to track the element that it covers initially.  In effect anchoring it to the base element.</p>\n",
            "last_activity_date": 1422270476,
            "question_id": 3444719,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events",
                "dom-events"
            ],
            "title": "How to know when an DOM element moves or is resized"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This will alert the index of the clicked selector (starting with 0 for the first):</p>\n\n<pre><code>$('selector').click(function(){\n    alert( $('selector').index(this) );\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<pre><code>$('selector').click(function (event) {\n    alert($(this).index());\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/bCTAh/\">jsfiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>Just do this way:-</p>\n\n<pre><code>$('ul li').on('click', function(e) {\n    alert($(this).index()); \n});\n</code></pre>\n\n<p><strong>OR</strong></p>\n\n<pre><code>$('ul li').click(function() {\n    alert($(this).index());\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>How do I get the index of clicked item in the code below?</p>\n\n<pre><code>$('selector').click(function (event) {\n    // get index in collection of the clicked item ...\n});\n</code></pre>\n\n<p>With Firebug I saw this: <code>jQuery151017197709735298827: 2</code> (I've clicked in the second element).</p>\n",
            "last_activity_date": 1400636215,
            "question_id": 5545283,
            "score": 15,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "jquery-selectors"
            ],
            "title": "Get index of clicked element in collection with jQuery"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><strong>EDIT:</strong> Try this:</p>\n\n<pre><code>x.onreadystatechange = null;\nx.abort();\n</code></pre>\n\n<p>Seems to work. Not sure what side effects, if any.</p>\n\n<hr>\n\n<p><strong>Original answer:</strong></p>\n\n<p>Would it be sufficient to just test the response received?</p>\n\n<pre><code>var x = $.get(\"./\", function (d, e, xhr) {\n    if(d) {\n        // run your code with response\n        alert(d);\n    }\n    // otherwise, nothing will happen\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is by design. Test if <code>data</code> is null to determine if the request responded correctly.</p>\n\n<blockquote>\n  <p>If a request with jQuery.get() returns\n  an error code, it will fail silently\n  unless the script has also called the\n  global <a href=\"http://api.jquery.com/ajaxError/\" rel=\"nofollow\"><code>.ajaxError()</code></a>  method.</p>\n</blockquote>\n\n<p>It may be useful to handle this (from <a href=\"http://api.jquery.com/jQuery.get/\" rel=\"nofollow\">here</a>).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I found <a href=\"http://forum.jquery.com/topic/no-more-ajax-error-callbacks-fired-in-jq1-4-2-jq1-3-2-works-fine\">here</a> that the <code>xhr</code> will return with status <code>0</code>. Seems to be a jQuery 1.4+ bug. On 1.3 it called the error handler.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>The best way to detect request abortion and avoiding false positive from offline mode :\n</p>\n\n<pre><code>$(\"#loading\").ajaxError(function(event, xhr) {\n  if (xhr.status === 0) {\n    if (xhr.statusText === 'abort') {\n      // Has been aborted\n    } else {\n      // Offline mode\n    }\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>I am making a request and then right after it I abort.</p>\n\n<pre><code>var x = $.get(url, function (d, e, xhr) { alert(d); });\nx.abort();\n</code></pre>\n\n<p>The problem is that it executes the <code>success</code> function and returns empty data... <a href=\"http://jsfiddle.net/e5NBT/\">(example here)</a></p>\n\n<p>Is there a jQuery method to abort? or Is there a way to check if the <code>xhr</code> was aborted?</p>\n",
            "last_activity_date": 1355680433,
            "question_id": 3648309,
            "score": 15,
            "tags": [
                "javascript",
                "jquery",
                "ajax"
            ],
            "title": "How to detect if a request was aborted?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"http://ajaxian.com/archives/jstree-jquery-based-javascript-tree-component\" rel=\"nofollow\">http://ajaxian.com/archives/jstree-jquery-based-javascript-tree-component</a> Here you can find a bunch of js libs with solutions</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://www.codeproject.com/KB/scripting/Exsead2.aspx\">Creating An XML Viewer With JScript - Exsead XML Power Scripting</a></p>\n\n<p><a href=\"http://www.levmuchnik.net/Content/ProgrammingTips/WEB/XMLDisplay/DisplayXMLFileWithJavascript.html\">Display XML Files with Javascript</a></p>\n\n<p>Hope they help.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>This library does all the work for you:</p>\n\n<p><a href=\"http://www.openjsan.org/doc/k/ka/kawasaki/XML/ObjTree/0.24/lib/XML/ObjTree.html\" rel=\"nofollow\">http://www.openjsan.org/doc/k/ka/kawasaki/XML/ObjTree/0.24/lib/XML/ObjTree.html</a></p>\n\n<pre><code>var js = (new XML.ObjTree).parse(\"&lt;?xml version=\"1.0\"?&gt;&lt;response&gt;&lt;error&gt;0&lt;/error&gt;&lt;/response&gt;\");\n</code></pre>\n\n<p>Then you have a JavaScript tree and you can display it however you want. You might want to try the YAHOO.widget.TreeView module for that it will create a \"expandable and collapsible tree.\" That is if you like the YUI library, other wise there is Dojo and Ext libraries that can create a treeview for you.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are using ASP.NET application then there is no need for client side functionality. You can use the below specified method:-</p>\n\n<pre><code>//Populate the below varaible value from your business logic\nstring xmlContent = \"&lt;?xml version=\\\"1.0\\\"&gt;&lt;root&gt;&lt;emp&gt;&lt;name&gt;name 1&lt;/name&gt;&lt;/emp&gt;&lt;emp&gt;&lt;name&gt;name 2&lt;/name&gt;&lt;/emp&gt;&lt;/root&gt;\";\nResponse.Clear();\nResponse.ContentType = \"text/xml\"; //Set the contenttype to text/xml so the browser automatically recognises and displays it in the hierarchical structure\nResponse.Write(xmlContent);\nResponse.Flush();\nResponse.End();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Hi just add this to the header of your page.</p>\n\n<pre><code>&lt;?php\n\nheader(\"Content-type: text/xml\");\n\n$xml = new SimpleXMLElement('&lt;xml/&gt;');\n\nfor ($i = 1; $i &lt;= 8; ++$i) {\n    $track = $xml-&gt;addChild('track');\n    $track-&gt;addChild('path', \"song$i.mp3\");\n    $track-&gt;addChild('title', \"Track $i - Track Title\");\n}\n\nprint($xml-&gt;asXML());\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to display a XML document in a HTML page as a collapsible and expandable tree?</p>\n\n<p>I'd like to display a XML document inside a HTML page as a nicely pretty printed tree structure. I'd like to be able to expand and collapse tree branches. For example Firefox browser does this when you load a plain XML file. I am looking how to do this in client-side with JavaScript.</p>\n",
            "last_activity_date": 1374258538,
            "question_id": 1366179,
            "score": 15,
            "tags": [
                "javascript",
                "html",
                "xml",
                "tree"
            ],
            "title": "How to display XML in a HTML page as a collapsible and expandable tree using Javascript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The <a href=\"http://facebook.github.io/react/docs/component-api.html\">React docs</a> says:</p>\n\n<blockquote>\n  <p>Treat this.state as if it were immutable.</p>\n</blockquote>\n\n<p>Your <code>push</code> will mutate the state directly and that could potentially lead to error prone code, even if you are \"resetting\" the state again afterwards.</p>\n\n<p>A better option would be as you mentioned:</p>\n\n<pre><code>var arrayvar = this.state.arrayvar.slice()\narrayvar.push(newelement)\nthis.setState({ arrayvar: arrayvar })\n</code></pre>\n\n<p>The \"waste\" here is minimal compared to potential race conditions. You can also use <code>concat</code> to get a cleaner syntax since it returns a new array:</p>\n\n<pre><code>this.setState({ \n    arrayvar: this.state.arrayvar.concat([newelement])\n})\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                }
            ],
            "body": "<p>I want to add an element to the end of a <code>state</code> array, is this the correct way to do it?</p>\n\n<pre><code>this.state.arrayvar.push(newelement);\nthis.setState({arrayvar:this.state.arrayvar});\n</code></pre>\n\n<p>I am concerned that modifying the array in-place with <code>push</code> might cause trouble - is it safe?</p>\n\n<p>The alternative of making a copy of the array, and <code>setState</code>ing that seems wasteful.</p>\n",
            "last_activity_date": 1414095287,
            "question_id": 26253351,
            "score": 14,
            "tags": [
                "javascript",
                "reactjs"
            ],
            "title": "Correct modification of state arrays in ReactJS"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Where does the specification say that values of the Object type behave differently than primitives? Is it only that primitives are immutable, and objects are mutable?</p>\n</blockquote>\n\n<p>Yes, it bascially boils down to the mutability of objects, and the <a href=\"https://en.wikipedia.org/wiki/Identity_%28object-oriented_programming%29\"><strong>identity</strong> of objects</a>. Actually, this is not even specified anywhere, it is just assumed as a given core idea of object-oriented programming. The only mention of it is a comment in the <a href=\"http://es5.github.io/#E\"><em>Annex E</em></a>, which states that \"<em>the change</em> [of regex literal expression values] <em>is detectable by any programs that test the object identity of such literal values or that are sensitive to the shared side effects</em>\".</p>\n\n<p>Even the mutability of objects in nowhere explicitly stated, but implied by phrases as \"<em>In ECMAScript, the state and methods are carried by objects</em>\", \"<em>An ECMAScript object is a collection of properties</em>\" and severals notions of \"changing\" property values, \"creating\" properties or \"setting\" property attributes (in the <a href=\"http://es5.github.io/#x8.12.9\">[[DefineOwnProperty]]</a> method).</p>\n\n<blockquote>\n  <p>I'm asking because we always talk about \"object references\" and \"reference values\" when trying to explain the behavior of objects, but I couldn't find anything analogous to that in the specification.</p>\n</blockquote>\n\n<p>That's because the spec is not a guide to the language, and an explanation of its features, but merely a specification of its (inner) characteristics. The reader is expected to know OOP and its ideas.</p>\n\n<p>In fact, the language always talks of values only - regardless whether that may be primitive values or objects. The only things that can be mutated by the tools of the language are the binding of Environment Records (variables) and the properties Objects, everything else (including object identiy) is implicitly considered immutable.</p>\n\n<p>When we try to explain the \"behavior of objects\", we basically explain the concept of the identity of objects. Usually the audience is coming from lower-level, non-OOP languages, where assignments do copy by default, and sharing values is done by pointers (references). To them, we explain objects as a \"<strong>reference</strong> to the <em>collection of properties</em>\", and all appearances of an object are references that point to the same collection. There is no builtin way to copy the collection.</p>\n\n<p>However, to emphasize the lack of references in general<sup>1</sup> (one cannot make a reference to an identifier binding, i.e. a variable - regardless of it's value's type) and to comform with the official phrasing, we also use the term <strong>value</strong> for everything. This coined the term \"reference value\" for objects.</p>\n\n<p>Also, the wording in the <a href=\"http://es5.github.io/#x9.12\">Sameness</a>/<a href=\"http://es5.github.io/#x11.9.3\">Equality Algorithm</a><a href=\"http://es5.github.io/#x11.9.6\">(s)</a> matches this: \"<em>where <code>x</code> and <code>y</code> are <strong>values</strong>, \u2026, [when both are of type Object], \u2026, return <code>true</code> if <code>x</code> and <code>y</code> <strong>refer</strong> to the same object.</em>\"</p>\n\n<hr>\n\n<p><sub> 1. Actually, the spec describes <a href=\"http://es5.github.io/#x8.7\">References</a> as a <a href=\"http://es5.github.io/#specification-type\">Specification Type</a>. They do denote properties of objects, and are used to describe the behaviour of <code>delete</code>, property assignments, method calls etc. They however cannot be passed around (assignment, function call), are internal only and <a href=\"http://stackoverflow.com/q/13124417/1048572\">not obtainable</a>, <s>and will not point to variables</s>. Still, there is no builtin way to acquire some kind of pointer to a local variable.</sub></p>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>Consider this:</p>\n\n<pre><code>var a = {}, b = a;\n</code></pre>\n\n<p>In terms of the spec, <code>b = a</code> boils down to <code>PutValue(b, GetValue(a))</code>, right? And <code>GetValue(a)</code> uses <code>GetBindingValue(\"a\", strictFlag)</code> abstract operation, which returns \"the value\" in <code>a</code>. And \"the value\" is \"the object\" originally assigned to <code>a</code>. Then \"the object\" is stored in <code>b</code>, just like any other value would.</p>\n\n<p>But what is \"the object\" precisely? Where does the specification say that values of the Object type behave differently than primitives? Is it only that primitives are immutable, and objects are mutable?</p>\n\n<p>I'm asking because we always talk about \"object references\" and \"reference values\" when trying to explain the behavior of objects, but I couldn't find anything analogous to that in the specification. </p>\n",
            "last_activity_date": 1399608070,
            "question_id": 23554770,
            "score": 14,
            "tags": [
                "javascript",
                "ecmascript-5"
            ],
            "title": "How to explain object references in ECMAScript terms?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Your problem is that you load an external image, meaning from another domain. This causes a security error when you try to access any data of your canvas context.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You are \"tainting\" the canvas by loading from a cross origins domain. Check out this MDN article:</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/HTML/CORS_Enabled_Image\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/HTML/CORS_Enabled_Image</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You won't be able to draw images directly from another server into a canvas and then use <code>getImageData</code>. It's a security issue and the canvas will be considered \"tainted\".</p>\n\n<p>Would it work for you to save a copy of the image to your server using PHP and then just load the new image? For example, you could send the URL to the PHP script and save it to your server, then return the new filename to your javascript like this:</p>\n\n<pre><code>&lt;?php //The name of this file in this example is imgdata.php\n\n  $url=$_GET['url'];\n  $img = file_get_contents($url);\n  $fn = substr(strrchr($url, \"/\"), 1);\n  file_put_contents($fn,$img);\n  echo $fn;\n\n?&gt;\n</code></pre>\n\n<p>You'd use the PHP script with some ajax javascript like this:</p>\n\n<pre><code>xi=new XMLHttpRequest();\nxi.open(\"GET\",\"imgdata.php?url=\"+yourImageURL,true);\nxi.send();\n\nxi.onreadystatechange=function() {\n  if(xi.readyState==4 &amp;&amp; xi.status==200) {\n    img=new Image;\n    img.onload=function(){ \n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n    }\n    img.src=xi.responseText;\n  }\n}\n</code></pre>\n\n<p>If you use <code>getImageData</code> on the canvas after that, it will work fine. </p>\n\n<p>Alternatively, if you don't want to save the whole image, you could pass x &amp; y coordinates to your PHP script and calculate the pixel's rgba value on that side. I think there are good libraries for doing that kind of image processing in PHP.</p>\n\n<p>If you want to use this approach, let me know if you need help implementing it.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>As others have said you are \"tainting\" the canvas by loading from a cross origins domain.</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/HTML/CORS_Enabled_Image\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/HTML/CORS_Enabled_Image</a></p>\n\n<p>However, you may be able to prevent this by simply setting:</p>\n\n<pre><code>img.crossOrigin = \"Anonymous\";\n</code></pre>\n\n<p>This only works if the remote server sets the following header appropriately:</p>\n\n<pre><code>Access-Control-Allow-Origin \"*\"\n</code></pre>\n\n<p>The <a href=\"https://www.dropbox.com/developers/dropins/chooser/js\" rel=\"nofollow\">Dropbox file chooser</a> when using the \"direct link\" option is a great example of this. I use it on <a href=\"http://www.oddprints.com/\" rel=\"nofollow\">oddprints.com</a> to hover up images from the remote dropbox image url, into my canvas, and then submit the image data back into my server. All in javascript :)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>my code very good working in localhost...</p>\n\n<p>but not work in site!</p>\n\n<p><strong>i give this error from console: for this line .getImageData(x,y,1,1).data</strong></p>\n\n<pre><code>Uncaught SecurityError: Failed to execute 'getImageData' on 'CanvasRenderingContext2D': The canvas has been tainted by cross-origin data. \n</code></pre>\n\n<p>part of my code:</p>\n\n<pre><code>jQuery.Event.prototype.rgb=function(){\n        var x =  this.offsetX || (this.pageX - $(this.target).offset().left),y =  this.offsetY || (this.pageY - $(this.target).offset().top);\n        if (this.target.nodeName!==\"CANVAS\")return null;\n        return this.target.getContext('2d').getImageData(x,y,1,1).data;\n    }\n</code></pre>\n\n<p><strong>note: my image url (src) is from subdomain url</strong> </p>\n",
            "last_activity_date": 1420719831,
            "question_id": 22097747,
            "score": 14,
            "tags": [
                "javascript",
                "html5",
                "html5-canvas"
            ],
            "title": "getImageData() error The canvas has been tainted by cross-origin data"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Here's how you get the closest element by tag name without jQuery:</p>\n\n<pre><code>function getClosest(el, tag) {\n  // this is necessary since nodeName is always in upper case\n  tag = tag.toUpperCase();\n  do {\n    if (el.nodeName === tag) {\n      // tag name is found! let's return it. :)\n      return el;\n    }\n  } while (el = el.parentNode);\n\n  // not found :(\n  return null;\n}\n\ngetClosest(th, 'tbody');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here.</p>\n\n<pre><code>function findNearest(el, tag) {\n    while( el &amp;&amp; el.tagName &amp;&amp; el.tagName !== tag.toUpperCase()) {\n        el = el.nextSibling();     \n    } return el;\n} \n</code></pre>\n\n<p>Only finds siblings further down the tree. Use previousSibling() to go the other way\nOr use variables to traverse both ways and return whichever is found first.\nYou get the general idea, but if you want to traverse through parentNodes or children if a sibling doesn't match you may as-well use jQuery. At that point it's easily worth it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Little (very) late to the party, but nonetheless. This should do the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element.matches\">trick</a>:</p>\n\n<pre><code>function closest(el, selector) {\n    var matchesFn;\n\n    // find vendor prefix\n    ['matches','webkitMatchesSelector','mozMatchesSelector','msMatchesSelector','oMatchesSelector'].some(function(fn) {\n        if (typeof document.body[fn] == 'function') {\n            matchesFn = fn;\n            return true;\n        }\n        return false;\n    })\n\n    // traverse parents\n    while (el!==null) {\n        parent = el.parentElement;\n        if (parent!==null &amp;&amp; parent[matchesFn](selector)) {\n            return parent;\n        }\n        el = parent;\n    }\n\n    return null;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I wrote myself a little function to do this today. Maybe it helps:</p>\n\n<pre><code>function findClosestParent (startElement, fn) {\n  var parent = startElement.parentElement;\n  if (!parent) return undefined;\n  return fn(parent) ? parent : findClosestParent(parent, fn);\n}\n</code></pre>\n\n<p>To find the closest parent by tag name you could use it like this:</p>\n\n<pre><code>findClosestParent(x, function (element) { \n    return element.tagName == \"SECTION\";\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>function closest(el, sel) {\n    if (el != null)\n        return el.matches(sel) ? el \n            : (el.querySelector(sel) \n                || closest(el.parentNode, sel));\n}\n</code></pre>\n\n<p>This solution uses some of the more recent features of the HTML 5 spec, and using this on older/incompatible browsers (read: Internet Explorer) will require a polyfill. </p>\n\n<pre><code>Element.prototype.matches = (Element.prototype.matches || Element.prototype.mozMatchesSelector \n    || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector \n    || Element.prototype.webkitMatchesSelector || Element.prototype.webkitMatchesSelector);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I am trying to find the closest element with a specific tag name without jquery. When I click on a <code>&lt;th&gt;</code> I want to get access to the <code>&lt;tbody&gt;</code> for that table. Suggestions? I read about offset but didn't really understand it too much. Should I just use:</p>\n\n<p>Assume th is already set to clicked th element</p>\n\n<pre><code>th.offsetParent.getElementsByTagName('tbody')[0]\n</code></pre>\n\n<p>Thank you for the help!</p>\n",
            "last_activity_date": 1424673282,
            "question_id": 18663941,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "Finding closest element without jQuery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Yes, you can use RequireJS with angular. You need to do a bit of extra work to make it function, as in the link you included, but it's possible.</p>\n\n<p>In general, though, I haven't found any need for AMD with Angular. The whole idea of AMD is that it allows you to declaratively specify the dependencies between your scripts and not worry about the order in which you include them on the page. However, Angular takes care of that for you with its dependency injection mechanism, so you're not really getting any benefit by using AMD on top of that.</p>\n\n<p><strong>tl;dr</strong> I haven't found a compelling reason to use AMD with Angular.js.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Using RequireJS with AngularJS makes sense but only if you understand how each of them works regarding <strong>dependency injection</strong>, as although both of them injects dependencies, they inject very different things.</p>\n\n<p>AngularJS has its own dependency system that let you inject AngularJS modules to a newly created module in order to reuse implementations. Let's say you created a \"first\" module that implements an AngularJS filter \"greet\":</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>angular\n  .module('first', [])\n  .filter('greet', function() {\n    return function(name) {\n      return 'Hello, ' + name + '!';\n    }\n  });\n</code></pre>\n\n<p>And now let's say you want to use the \"greet\" filter in another module called \"second\" that implements a \"goodbye\" filter. You may do that injecting the \"first\" module to the \"second\" module:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>angular\n  .module('second', ['first'])\n  .filter('goodbye', function() {\n    return function(name) {\n      return 'Good bye, ' + name + '!';\n    }\n  });\n</code></pre>\n\n<p>The thing is that in order to make this work correctly without RequireJS, you have to make sure that the \"first\" AngularJS module is loaded on the page before you create the \"second\" AngularJS module. Quoting documentation:</p>\n\n<blockquote>\n  <p>Depending on a module implies that required module needs to be loaded\n  before the requiring module is loaded.</p>\n</blockquote>\n\n<p>In that sense, here is where RequireJS can help you as RequireJS provides a clean way to inject scripts to the page helping you organize script dependencies between each other.</p>\n\n<p>Going back to the \"first\" and \"second\" AngularJS modules, here is how you can do it using RequireJS separating the modules on different files to leverage script dependencies loading:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// firstModule.js file\ndefine(['angular'], function(angular) {\n  angular\n    .module('first', [])\n    .filter('greet', function() {\n      return function(name) {\n        return 'Hello, ' + name + '!';\n      }\n    });\n});\n</code></pre>\n\n<pre class=\"lang-js prettyprint-override\"><code>// secondModule.js file\ndefine(['angular', 'firstModule'], function(angular) {\n  angular\n    .module('second', ['first'])\n    .filter('goodbye', function() {\n      return function(name) {\n        return 'Good bye, ' + name + '!';\n      }\n    });\n});\n</code></pre>\n\n<p>You can see that we are depending on \"firstModule\" file to be injected before the content of the RequireJS callback can be executed which needs \"first\" AngularJS module to be loaded to create \"second\" AngularJS module.</p>\n\n<p>Side note: Injecting \"angular\" on the \"firstModule\" and \"secondModule\" files as dependency is required in order to use AngularJS inside the RequireJS callback function and it have to be configured on RequireJS config to map \"angular\" to the library code. You may have AngularJS loaded to the page in a traditional manner too (script tag) although defeats RequireJS benefits. </p>\n\n<p>More details on having RequireJS support from AngularJS core from 2.0 version on my blog post.</p>\n\n<p><strong>Based on my blog post <em>\"Making sense of RequireJS with AngularJS\"</em>, here is the <a href=\"http://leog.me/log/making-sense-of-requirejs-with-angularjs/\">link</a>.</strong></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>You can lazy load Angular.js components using providers. From the <a href=\"http://ify.io/lazy-loading-in-angularjs/\" rel=\"nofollow\">article</a>:</p>\n\n<blockquote>\n  <p>Providers are essentially objects that are used to create and configure instances of AngularJS artefacts. Hence, in order to register a lazy controller, you would use the <code>$controllerProvider</code>.\n  ...</p>\n  \n  <p>In summary, you would first define your app module to keep instances of the relevant providers. Then you would define your lazy artefacts to register themselves using the providers rather than the module API. Then using a \u2018resolve\u2019 function that returns a promise in your route definition, you would load all lazy artefacts and resolve the promise once they have been loaded. This ensures that all lazy artefacts will be available before the relevant route is rendered. Also, don\u2019t forget to resolve the promise inside $rootScope.$apply, if the resolution will be happening outside of AngularJS. Then you would create a \u2018bootstrap\u2019 script that first loads the app module before bootstrapping the app. Finally, you would link to the bootstrap script from your \u2018index.html\u2019 file.</p>\n</blockquote>\n\n<p><a href=\"http://ify.io/lazy-loading-in-angularjs/\" rel=\"nofollow\">http://ify.io/lazy-loading-in-angularjs/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In <a href=\"https://github.com/addyosmani/todomvc/tree/gh-pages/labs/dependency-examples/angularjs_require\"><strong>this repo</strong></a> AngularJS is implimented with RequireJS for AMD.</p>\n\n<p>In <a href=\"https://github.com/angular/angular-seed/blob/master/app/index-async.html\"><strong>this repo</strong></a> the AngularJS team seeds an AngularJS project with AMD that <em>does not</em> include RequireJS.</p>\n\n<ul>\n<li>Am I thinking about this the wrong way - I.E. are they solving different problems? </li>\n<li>Does the AngularJS libary support AMD now where it had not once before? </li>\n<li>Is it no longer necessary to use RequireJS with AngularJS projects?</li>\n</ul>\n",
            "last_activity_date": 1413683099,
            "question_id": 16108207,
            "score": 14,
            "tags": [
                "javascript",
                "angularjs",
                "requirejs"
            ],
            "title": "Does AngularJS support AMD like RequireJS?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Before I describe your available solutions you need to understand, this is not an error nor is there a perfect solution. The issue is that to animate the transition to another page the viewport has to be at the top of the page so that the current page and the page transitioning in are vertically lined-up.</p>\n\n<p>If you were half-way down a long list on one page (say 1000px) and the page you are transferring to is only a few hundred pixels tall then the current page would animate off the screen properly but the new page would not be visible as it would be above the viewport.</p>\n\n<p>There are 2 viable solutions:</p>\n\n<h2>1. iScroll and its jQuery Mobile derivate iScrollview</h2>\n\n<p>iScroll homepage: <a href=\"http://cubiq.org/iscroll-4\" rel=\"nofollow\">http://cubiq.org/iscroll-4</a></p>\n\n<p>iScrollview homepage: <a href=\"https://github.com/watusi/jquery-mobile-iscrollview\" rel=\"nofollow\">https://github.com/watusi/jquery-mobile-iscrollview</a></p>\n\n<p>iScroll is a javascript that can scroll content in a window within a web browser with very similar behaviour to native scrolling on mobile devices such as iPhone and Android. This means you can scroll a window within the browser using native-like scrollbars and physics.</p>\n\n<p>That is also a solution for our current problem. Because of iScroll implementation pages will occupy 100% of page height, no matter how far listview is scrolled. This is also a reason why on return listview will still stay at a same position.</p>\n\n<p>Of course in case you want to implement this solution you should pick iScrollview implementation. You would still be able to implement iScroll, but it would take you much more time.</p>\n\n<h2>2. Silent scroll</h2>\n\n<p>Official documentation: <a href=\"http://jquerymobile.com/demos/1.1.0-rc.1/docs/api/methods.html\" rel=\"nofollow\">http://jquerymobile.com/demos/1.1.0-rc.1/docs/api/methods.html</a></p>\n\n<p>This jQuery Mobile functionality is also the same reason why we have this problem at the first place. Before a page transition is triggered original page is silently scrolled to the top.</p>\n\n<p>In our case, when listview is selected, its position must be remembered (<a href=\"http://stackoverflow.com/a/14469041/1848600\">here</a> you will find solutions of data/parameteres storing during the page transition, just search for the chapter: <strong>Data/Parameters manipulation between page transitions</strong>) before page is changes. In that case, when we return to the previous page we could use <a href=\"http://api.jquerymobile.com/pagebeforeshow/\" rel=\"nofollow\">pagebefpreshow</a> event to silently scroll to the bottom before page is shown.</p>\n\n<pre><code>//scroll to Y 100px\n$.mobile.silentScroll(100);\n</code></pre>\n\n<p>And here's a working example of silent scroll: <a href=\"http://jsfiddle.net/Gajotres/5zZzz/\" rel=\"nofollow\">http://jsfiddle.net/Gajotres/5zZzz/</a></p>\n\n<h2>More info</h2>\n\n<p>If you want to find out more about this topic take a look at this <strong><a href=\"http://www.gajotres.net/prevent-scroll-to-the-top-before-page-transition-in-jquery-mobile/\" rel=\"nofollow\">article</a></strong>, you will also find working examples.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>I was able to fix this (for iOS) in the following way:</p>\n\n<ol>\n<li><p>Add a extra container div for the scrolling part. Usually surrounding the scrolling part of your page. In my case right after the header and before the footer code.</p></li>\n<li><p>Add the following CSS:</p>\n\n<pre>\n.extracontainer {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  margin: 0;\n  padding: 0;\n  overflow: auto;\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n}\n</pre></li>\n</ol>\n\n<p>Some of the CSS might be extra but in my case it was to avoid any issues with some other styles that I have using negative margins, paddings, etc.</p>\n\n<p>Also make sure to have the <strong>-webkit-overflow-scrolling: touch;</strong> to have smooth scrolling.</p>\n\n<p>I hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>When I click on a list-item, to go to another page, the current page jumps to the top of the screen before transitioning to the next page.</p>\n\n<p>This problem occured in jQM 1.2, and is still not fixed in the newly released 1.3 version.</p>\n\n<p>Does anybody know how to prevent the scroll-to-top, and remember the scroll position when using the back button?</p>\n\n<p>This annoying behaviour is unacceptable, and breaks the whole app experience.</p>\n\n<p>I'm using it as a webapp, on an iPhone 4S, with iOS 6.1.2.</p>\n",
            "last_activity_date": 1380285899,
            "question_id": 15255719,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "ios",
                "css3",
                "jquery-mobile"
            ],
            "title": "jQuery Mobile prevent scroll-to-top before page transition?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Its just a 16-bit value with no encoding specified in the ECMAScript standard.</p>\n\n<p>See section 7.8.4 String Literals in this document: <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\" rel=\"nofollow\">http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It's UTF-16/USC-2.  It can handle surrogate pairs, but the <code>charAt</code>/<code>charCodeAt</code> returns a 16-bit char and not the Unicode codepoint.  If you want to have it handle surrogate pairs, I suggest a quick read through <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/charAt\" rel=\"nofollow\">this</a>. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>JavaScript, strictly speaking, ECMAScript, pre-dates Unicode 2.0, so in some cases you may find references to UCS-2 simply because that was correct at the time the reference was written. Can you point us to specific citations of JavaScript being \"UCS-2\"?</p>\n\n<p>Specifications for ECMAScript versions 3 and 5 at least both explicitly declare a String to be a collection unsigned 16-bit integers and that <strong>if</strong> those integer values are meant to represent textual data, then they are UTF-16 code units. See section 8.4 of <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\">the ECMAScript Language Specification</a>.</p>\n\n<hr>\n\n<p><strong>EDIT</strong>: I'm no longer sure my answer is entirely correct. See the excellent article mentioned above, <a href=\"http://mathiasbynens.be/notes/javascript-encoding\">http://mathiasbynens.be/notes/javascript-encoding</a>, which in essence says that while a JavaScript engine may use UTF-16 internally, and most do, the language itself effectively exposes those characters as if they were UCS-2.</p>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>I've read in some places that JavaScript strings are UTF-16, and in other places they're UCS-2. I did some searching around to try to figure out the difference and found this:</p>\n\n<blockquote>\n  <p>Q: What is the difference between UCS-2 and UTF-16?</p>\n  \n  <p>A: UCS-2 is obsolete terminology which refers to a Unicode\n  implementation up to Unicode 1.1, before surrogate code points and\n  UTF-16 were added to Version 2.0 of the standard. This term should now\n  be avoided.</p>\n  \n  <p>UCS-2 does not define a distinct data format, because UTF-16 and UCS-2\n  are identical for purposes of data exchange. Both are 16-bit, and have\n  exactly the same code unit representation.</p>\n  \n  <p>Sometimes in the past an implementation has been labeled \"UCS-2\" to\n  indicate that it does not support supplementary characters and doesn't\n  interpret pairs of surrogate code points as characters. Such an\n  implementation would not handle processing of character properties,\n  code point boundaries, collation, etc. for supplementary characters.</p>\n</blockquote>\n\n<p>via: <a href=\"http://www.unicode.org/faq/basic_q.html#14\">http://www.unicode.org/faq/basic_q.html#14</a></p>\n\n<p>So my question is, is it because the JavaScript string object's methods and indexes act on 16-bit data values instead of characters what make some people consider it UCS-2? And if so, would a JavaScript string object oriented around characters instead of 16-bit data chunks be considered UTF-16? Or is there something else I'm missing?</p>\n\n<p>Edit: As requested, here are some sources saying JavaScript strings are UCS-2:</p>\n\n<p><a href=\"http://blog.mozilla.com/nnethercote/2011/07/01/faster-javascript-parsing/\">http://blog.mozilla.com/nnethercote/2011/07/01/faster-javascript-parsing/</a>\nhttp://terenceyim.wordpress.com/tag/ucs2/</p>\n\n<p><strong>EDIT</strong>: For anyone who may come across this, be sure to check out this link:</p>\n\n<p><a href=\"http://mathiasbynens.be/notes/javascript-encoding\">http://mathiasbynens.be/notes/javascript-encoding</a></p>\n",
            "last_activity_date": 1360940612,
            "question_id": 8715980,
            "score": 14,
            "tags": [
                "javascript",
                "utf-16"
            ],
            "title": "JavaScript strings - UTF-16 vs UCS-2?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>var clicks = 0\n\nonclick:\nclicks++;\nsetTimer(resetClicksToZero);\nif clicks == 3: tripleclickdetected(); clicks = 0;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You need to write your own triple-click implementation because no native event exists to capture 3 clicks in a row.</p>\n\n<p>The best approach (due to an unfortunate IE bug) is to capture a double-click, followed by a triple-click &mdash; something like this:</p>\n\n<pre><code>var timer,          // timer required to reset\n    timeout = 200;  // timer reset in ms\n\nwindow.addEventListener(\"dblclick\", function (evt) {\n    timer = setTimeout(function () {\n        timer = null;\n    }, timeout);\n});\nwindow.addEventListener(\"click\", function (evt) {\n    if (timer) {\n        clearTimeout(timer);\n        timer = null;\n        executeTripleClickFunction();\n    }\n});\n</code></pre>\n\n<blockquote>\n  <p><b>Working demo: <a href=\"http://jsfiddle.net/YDFLV/\">http://jsfiddle.net/YDFLV/</a> </b></p>\n</blockquote>\n\n<p>Of course, if you want this to be cross browser, you'd need to use <code>attachEvent</code> for IE.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I am working on a javascript code editor and I had to listen for triple click and here is the solution that will work for most browsers:</p>\n\n<pre><code>// Function to get mouse position\nvar getMousePosition = function (mouseEvent) {\n    var currentObject = container;\n    var currentLeft = 0;\n    var currentTop = 0;\n    do {\n        currentLeft += currentObject.offsetLeft;\n        currentTop += currentObject.offsetTop;\n        currentObject = currentObject.offsetParent;\n    } while (currentObject != document.body);\n    return {\n        x: mouseEvent.pageX - currentLeft,\n        y: mouseEvent.pageY - currentTop\n    }\n}\n\n// We will need a counter, the old position and a timer\nvar clickCounter = 0;\nvar clickPosition = {\n    x: null,\n    y: null\n};\nvar clickTimer;\n\n// The listener (container may be any HTML element)\ncontainer.addEventListener('click', function (event) {\n\n    // Get the current mouse position\n    var mousePosition = getMousePosition(event);\n\n    // Function to reset the data\n    var resetClick = function () {\n        clickCounter = 0;\n        var clickPosition = {\n            x: null,\n            y: null\n        };\n    }\n\n    // Function to wait for the next click\n    var conserveClick = function () {\n        clickPosition = mousePosition;\n        clearTimeout(clickTimer);\n        clickTimer = setTimeout(resetClick, 250);\n    }\n\n    // If position has not changed\n    if (clickCounter &amp;&amp; clickPosition.x == mousePosition.x &amp;&amp; clickPosition.y == mousePosition.y) {\n        clickCounter++;\n        if (clickCounter == 2) {\n            // Do something on double click\n        } else {\n            // Do something on triple click\n            resetClick();\n        }\n        conserveClick();\n    } else {\n        // Do something on single click\n        conserveClick();\n    }\n});\n</code></pre>\n\n<p>Tested on Firefox 12, Google Chrome 19, Opera 11.64, Internet Explorer 9</p>\n\n<p>This approach checks if the user has not changed cursor's position, you still can do something when you have single click or double click. Hope this solution will help everybody who will need to implement a triple click event listener :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since DOM Level 2 you could use mouse click handler and check the <code>detail</code> parameter of event which should be interpreted as:</p>\n\n<blockquote>\n  <p>The detail attribute inherited from UIEvent indicates the number of times a mouse button has been pressed and released over the same screen location during a user action. The attribute value is 1 when the user begins this action and increments by 1 for each full sequence of pressing and releasing. If the user moves the mouse between the mousedown and mouseup the value will be set to 0, indicating that no click is occurring.</p>\n</blockquote>\n\n<p>So the value of <code>detail === 3</code> will give you the triple-click event.</p>\n\n<p>More information in specification at <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-MouseEvent\">http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-MouseEvent</a>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Here is the real Triple click event, which triggers only when all of three clicks fired with equal interval.</p>\n\n<pre><code>// Default settings\nvar minClickInterval = 100,\n    maxClickInterval = 500,\n    minPercentThird = 85.0,\n    maxPercentThird = 130.0;\n\n// Runtime\nvar hasOne = false,\n    hasTwo = false,\n    time = [0, 0, 0],\n    diff = [0, 0];\n\n$('#btn').on('click', function() {\n    var now = Date.now();\n\n    // Clear runtime after timeout fot the 2nd click\n    if (time[1] &amp;&amp; now - time[1] &gt;= maxClickInterval) {\n        clearRuntime();\n    }\n    // Clear runtime after timeout fot the 3rd click\n    if (time[0] &amp;&amp; time[1] &amp;&amp; now - time[0] &gt;= maxClickInterval) {\n        clearRuntime();\n    }\n\n    // Catch the third click\n    if (hasTwo) {\n        time[2] = Date.now();\n        diff[1] = time[2] - time[1];\n\n        var deltaPercent = 100.0 * (diff[1] / diff[0]);\n\n        if (deltaPercent &gt;= minPercentThird &amp;&amp; deltaPercent &lt;= maxPercentThird) {\n            alert(\"Triple Click!\");\n        }\n        clearRuntime();\n    }\n\n    // Catch the first click\n    else if (!hasOne) {\n        hasOne = true;\n        time[0] = Date.now();\n    }\n\n    // Catch the second click\n    else if (hasOne) {\n        time[1] = Date.now();\n        diff[0] = time[1] - time[0];\n\n        (diff[0] &gt;= minClickInterval &amp;&amp; diff[0] &lt;= maxClickInterval) ?\n            hasTwo = true : clearRuntime();\n    }  \n});\n\nvar clearRuntime = function() {\n    hasOne = false;\n    hasTwo = false;\n    time[0] = 0;\n    time[1] = 0;\n    time[2] = 0;\n    diff[0] = 0;\n    diff[1] = 0;\n};\n</code></pre>\n\n<blockquote>\n  <p><strong>Working Demo <a href=\"http://jsfiddle.net/0mx56t1p/1/\" rel=\"nofollow\">here</a></strong></p>\n</blockquote>\n\n<p>Also, I wrote <a href=\"https://github.com/Deliaz/jquery-trplclick\" rel=\"nofollow\">jquery plugin TrplClick</a>, which enables 'trplclick' event</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>If this is for double click:</p>\n\n<pre><code>window.addEventListener(\"dblclick\", function(event) { }, false);\n</code></pre>\n\n<p>How can I capture a triple click? This is for a pinned tab in Google Chrome.</p>\n",
            "last_activity_date": 1419246861,
            "question_id": 6480060,
            "score": 14,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "How do I listen for triple clicks in JavaScript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Try this regular expression:</p>\n\n<pre><code>/([^/]+(?=\\.[^/.]*$)|[^/.]+$)/\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In your examples, assuming that the input string is the entire URL and nothing more, I've had success with</p>\n\n<pre><code>/\\/[^\\/]+(?=\\.[^.]+$)|\\/[^\\/]+$/\n</code></pre>\n\n<p>This first tries to match everything from the last <code>/</code> until the last <code>.</code>; if there is no dot, it will then try to match everything from the last <code>/</code> until the end of the string.</p>\n\n<p>The leading <code>/</code> is contained in the match (JavaScript doesn't support lookbehind, else I could have used that), so you'll need to chop off the first character of the match.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>[^/]+(?=\\.(jpg|gif|png))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I wouldn't actually use a regex in this case, but simply <code>lastIndexOf</code> and <code>substring</code>. Something like</p>\n\n<pre><code>function findBaseName(url) {\n    var fileName = url.substring(url.lastIndexOf('/') + 1);\n    var dot = fileName.lastIndexOf('.');\n    return dot == -1 ? fileName : fileName.substring(0, dot);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Yet another solution:</p>\n\n<pre><code>url.replace(/^.*\\/|\\.[^.]*$/g, '')\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>I recommend using the FileSystemObject activex. Sure, you need to mark it as safe in the registry to execute it without nag screens, but it' very useful. Your call... GetBaseName function does what you want.</p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I want to extract the base name from a image URL in Javascript. Would somebody care to give me a a hand on the Regex?</p>\n\n<p>The rule would be:</p>\n\n<ul>\n<li><p>return everything right of the last <code>/</code> left of the last <code>.</code> </p>\n\n<p>www.domain.com/images/<strong>image.hires</strong>.jpg</p></li>\n<li><p>if no <code>.</code> is found, return the full base name\nwww.domain.com/images/<strong>image_hi_res</strong></p></li>\n</ul>\n\n<p>I have a clumsy <code>/\\/[^.]+\\.[^.]+$/</code> but don't know how to make the <code>/</code> and the <code>.</code> optional and how to seek for the last <code>.</code> only. </p>\n\n<blockquote>\n  <p>Cheers folks for all the great input, as always. I chose the one Regex that worked for me out of the box. </p>\n</blockquote>\n",
            "last_activity_date": 1264620578,
            "question_id": 1991608,
            "score": 14,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Find base name in URL in Javascript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You could do</p>\n\n<pre><code>str = \"\\\nline 1\\\nline 2\\\nline 3\";\n</code></pre>\n\n<p>As mentioned in the comments, javascript parsers handle this fine (it works in all major browsers), but is not officially part of ECMA Script syntax. As such it may or may not work with compressors, error checkers, and isn't guaranteed to work in browsers.</p>\n\n<p>This may be more readable, but isn't the 'best' way to do it. Maybe ECMA script will support something like c#'s @\"\" someday.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Yes! You can <a href=\"http://www.componentart.com/community/blogs/jovan/archive/2007/10/17/multiline-strings-in-javascript.aspx\" rel=\"nofollow\">use the \\ character to have JavaScript ignore end of line characters</a>.</p>\n\n<pre><code>str = 'line 1 \\\nline 2 \\\nline 3';\n</code></pre>\n\n<p>However, as <a href=\"http://stackoverflow.com/questions/1589234/whats-the-cleanest-way-to-write-a-multiline-string-in-javascript/1589277#1589277\">pointed out by Elzo Valugi</a>, this will not validate using JSLint.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>FYI.\nThe way you suggest it is the correct way and better than the other answers. <a href=\"http://jslint.com/\">JsLint</a> only validates your version.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Consistently.</p>\n\n<p>Whichever way you choose, do it exactly the same way throughout your application.  If you're working on an application that already has code written, accept the convention they set and go with it.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I like this version (different than yours just in formatting of the code):</p>\n\n<pre><code>var str = \"line 1\"\n        + \"line 2\"\n        + \"line 3\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<pre><code>var str = [\n    \"line 1\",\n    \"line 2\",\n    \"line 3\"\n].join(\"\");\n// str will contain \"line1line2line3\"\n</code></pre>\n\n<p>If you actually want newlines in the string, then replace <code>.join(\"\")</code> with <code>.join(\"\\n\")</code>/</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><strong>This will only work in browsers with <a href=\"https://developer.mozilla.org/en/E4X\" rel=\"nofollow\">E4X</a> support</strong> - I wish we could use it in IE</p>\n\n<pre><code>var str = &lt;&gt;&lt;![CDATA[\n\n   Look, a multi-line\n   string! &lt; \" // ' ? &amp;\n\n]]&gt;&lt;/&gt;.toString();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Almost identical to NickFitz's answer:</strong></p>\n\n<pre><code>var str = [\"\"\n    ,\"line 1\"\n    ,\"line 2\"\n    ,\"line 3\"\n].join(\"\");\n// str will contain \"line1line2line3\"\n</code></pre>\n\n<p>The difference, the code is slightly more maintainable because the lines can be re-ordered without regard to where the commas are. No syntax errors.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Here's one that may be helpful during development when using Chrome.</p>\n\n<pre><code>function FSTR(f) {\n    // remove up to comment start and trailing spaces and one newline\n    s = f.toString().replace(/^.*\\/\\* *\\r?\\n/,\"\");\n    // remove the trailing */} with preceeding spaces and newline\n    s = s.replace(/\\n *\\*\\/\\s*\\}\\s*$/,\"\")\n    return s;\n}\n\ns = FSTR(function(){/*\nuniform vec2 resolution;\nuniform float time;\n\nvoid main(void)\n{\n    vec2 p = -1.0 + 2.0 * gl_FragCoord.xy / resolution.xy;\n    vec2 cc = vec2( cos(.25*time), sin(.25*time*1.423) );\n    ...\n    float color = sqrt(sqrt(dmin))*0.7;\n    gl_FragColor = vec4(color,color,color,1.0);\n}\n*/});\n</code></pre>\n\n<p>This does not work for <strong>Firefox</strong>, although it works in Chrome.</p>\n\n<p>Example use would be for writing/testing webgl shaders.\nDuring development this is much nicer to work with and \nlater you can always run over this with a simple regexp\nthat converts that syntax into a cross-browser version.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>It doesn't really have to add newlines, just something readable.</p>\n\n<p>Anything better than this?</p>\n\n<pre><code>str = \"line 1\" +\n      \"line 2\" +\n      \"line 3\";\n</code></pre>\n",
            "last_activity_date": 1314948625,
            "question_id": 1589234,
            "score": 14,
            "tags": [
                "javascript",
                "string",
                "readability",
                "maintainability"
            ],
            "title": "What&#39;s the cleanest way to write a multiline string in JavaScript?"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>JQuery is currently extremely popular, so you're probably going to have the most luck finding recent tutorials/plugins/etc for it, as opposed to one of the other frameworks. That's probably a fairly good selling-point from the perspective of someone new to this.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I use JQuery now because it is easy and has lots of features. Before I was using prototype and scriptaculous.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Microsoft apparently blessed JQuery, so for now that's your best bet.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Jquery is probably the best of the lot, it actually lets you \"do more, write less\"</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>One more for Jquery..Awesome plugins!!</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><a href=\"http://forkjavascript.org/ajax/docs\" rel=\"nofollow\">FORK Ajax</a>. It does the job well, and it's very small (5KB minified) and simple.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I noticed Dojo wasn't included on your list.  It's a framework that's geared to heavy-weight AJAXified pages.</p>\n\n<p><a href=\"http://dojotoolkit.org/\" rel=\"nofollow\">http://dojotoolkit.org/</a></p>\n\n<p>That said, JQuery appears to have the most momentum at the moment, and other frameworks (like Dojo) are working on putting more JQuery-like functionality into their product, so I would recommend learning that.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Built in intellisense for jQuery in VS2008 (sp1 I think?) was one consideration for us, but essentially we've played with mootools, prototype, scriptaculous and jquery, and have found jquery to be the easiest for us all to understand/support.</p>\n\n<p>We have a mixed team here, and even our business logic guys can pickup the logic/approach in jquery.</p>\n\n<p>We also use telerik controls, and they've now announced more support for jquery - it certainly seems its star is in the ascension.</p>\n\n<p>Try all of them, but if you're from a .net background, I think it's the logical choice at the moment.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I'm currently writing a paper on JavaScript frameworks. After all the research I've done so far, I can tell you this...</p>\n\n<p>Seriously, nobody can tell you which framework is best for you. There's only one way to find out: try playing around with all the different libraries you're considering. It's a matter of personal preference.</p>\n\n<p>See this excellent <a href=\"http://slideshare.net/jeresig/javascript-library-overview-presentation\">JavaScript Library Overview</a>, a presentation by John Resig (who happens to be the lead developer of jQuery). It contains small code samples for all the listed frameworks. After viewing those, you'll probably know which framework to choose, depending on which coding style you prefer.</p>\n\n<p>Also, <a href=\"http://stackoverflow.com/questions/176324/why-does-everyone-like-jquery-more-than-prototype-script-aclo-us-or-mootools-or-w\">this SO topic</a> might be of interest.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I'll plug Mootools. Of course the reason anyone prefers any of these over another is \"I started using XYZ first.\"</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>jQuery is my go-to framework of choice, but you really have to look at each ones' strengths and see how they align with your project</p>\n\n<p>The important thing is, <strong>use a framework</strong> -- really any framework. The benefits of using a framework, no matter which one, are so enormous. The best ones get rid of all or most of the cross-browser headaches you are bound to experience.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Im having a really good time with jQuery myself. Thers lots of good documentation and tutorials for it, which is excellent if your new to Javascript.</p>\n\n<p>If its only the ajax features your after I recommend checking out <a href=\"http://docs.jquery.com/Ajax\" rel=\"nofollow\">http://docs.jquery.com/Ajax</a> . Also the tutorials at Themeforest is really brilliant. For example the jquery tutorial for absolute beginners <a href=\"http://blog.themeforest.net/tutorials/jquery-for-absolute-beginners-day-10/\" rel=\"nofollow\">day 10</a> is showing you the basics of jQuery + Ajax.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>When I was new to JavaScript, after a week I found out that life is much easier with a framework. Anyway, I did not even knew, what exactly they are for; I've got some glue about <i>$()</i> that it's a smart replacement for <i>window.getElementById()</i>, and I assumed that there are some other comfortable methods for other purposes, like AJAX request.</p>\n\n<p>I did not wanted to spend lot of time on learning a framework, so I was decided that I will choose that which I <b>fall in love first sight</b>. Then I was spending about a whole month with googling. I have not missed any of the \"big names\", but I dropped them soon. The main reason of the dissatisfaction was their site, the documentation: after reading a whole page of text, I was yet as dumb as before. What is it for? What they do? What is the input, what is the aim, what is the output?</p>\n\n<p>Then, I found <a href=\"http://www.domassistant.com/\" rel=\"nofollow\">DOMAssistant</a>. It's small, perfect, and well-documented. Just take a look on the first paragraph of the opening page, it's a totally clear definition of the JS framework:</p>\n\n<blockquote>\n  <p>What is DOMAssistant?</p>\n  \n  <p>The idea of DOMAssistant is to provide\n  a simpler and more consistent way to\n  script against the Document Object\n  Model (DOM) in web browsers. The idea\n  is that everything starts with the\n  element(s) in question, selected\n  through id or CSS selectors, and then\n  perform various methods on it, such as\n  adding or removing classes, events\n  etc.</p>\n</blockquote>\n\n<p>So, I say, if you finally choose another, more fashionable framework, DOMAssistant is a must-to-see. And if you have no need for animated flying windows, it's also a good choice.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The best thing to consider is what you want the framework for. jQuery was designed to make manipulating the DOM easier. So if that is the main focus of what you want to be doing, then great. It is a super rad framework and it is really is amazingly natural and easy to pick up.</p>\n\n<p>That having been said, it is worth considering what the others have to offer. Other frameworks like prototype and mootools are most interested in turning javascript into a more powerful programming language with richer object oriented programming capabilities and functionality for arrays, strings and numbers. I don't know enough to be able to compare/contrast prototype and mootools, but maybe someone else could fill in on that.</p>\n\n<p>This is a great article that explains the difference between mootools and jquery - jqueryvsmootools.com/</p>\n\n<p>The good news is that you don't necessarily have to decide. Although you might occasionally come up with bugs, you should be able to use jQuery with either mootools or prototype (see <a href=\"http://docs.jquery.com/Using_jQuery_with_Other_Libraries\" rel=\"nofollow\">here</a>). Basically just call jQuery.noConflict(); before any script on which you want to use jQuery and everything should work just fine. This allows you to use jQuery for all of it's slick DOM manipulation and rad UI library while also giving access to a more powerful framework when that is what you need.</p>\n\n<p>Please let me know if I've missed anything here and I hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p><strong>Duplicate:</strong> <a href=\"http://stackoverflow.com/questions/394601/which-javascript-framework-jquery-vs-dojo-vs\">Which Javascript framework (jQuery vs Dojo vs \u2026 )?</a></p>\n\n<p>I am totally new to javascript, but i want to implement ajax features into my website. Which JS framework should i learn? Please recommend or which one you are using and why you use it?</p>\n",
            "last_activity_date": 1301538321,
            "question_id": 798840,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "frameworks"
            ],
            "title": "What should i choose? jquery, mootools, yui, scriptaculous or prototype?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can't focus a canvas element. A simple work around this, would be to make your \"own\" focus.</p>\n\n<pre><code>var lastDownTarget, canvas;\nwindow.onload = function() {\n    canvas = document.getElementById('canvas');\n\n    document.addEventListener('mousedown', function(event) {\n        lastDownTarget = event.target;\n        alert('mousedown');\n    }, false);\n\n    document.addEventListener('keydown', function(event) {\n        if(lastDownTarget == canvas) {\n            alert('keydown');\n        }\n    }, false);\n}\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/AustinBrunkhorst/qsULv/\">JSFIDDLE</a></strong></p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>Just set the tabindex of the canvas element to 1 or something like this</p>\n\n<pre><code>&lt;canvas tabindex='1'&gt;&lt;/canvas&gt;\n</code></pre>\n\n<p>It's an old trick to make any element focusable</p>\n",
                    "is_accepted": false,
                    "score": 33
                }
            ],
            "body": "<p>I am trying to make a canvas app that responds to keyboard and mouse input. I have this code:</p>\n\n<pre><code>canvas = document.getElementById('canvas');\ncanvas.addEventListener('mousedown', function(event) {\n    alert('mousedown');\n        }, false);\ncanvas.addEventListener('keydown', function(event) {\n    alert('keydown');\n        }, false);\n</code></pre>\n\n<p>The 'mousedown' alert comes up whenever I click the mouse, but the 'keydown' alert never comes up. The same code works fine on JS Bin: <a href=\"http://jsbin.com/uteha3/66/\">http://jsbin.com/uteha3/66/</a></p>\n\n<p>Why isn't it working on my page? Does canvas not recognize keyboard input?</p>\n",
            "last_activity_date": 1350254102,
            "question_id": 12886286,
            "score": 13,
            "tags": [
                "javascript",
                "html5",
                "canvas",
                "html5-canvas"
            ],
            "title": "addEventListener for keydown on Canvas"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Every time <code>innerHTML</code> is set, the HTML has to be parsed, a DOM constructed, and inserted into the document.  This takes time.</p>\n\n<p>For example, if <code>elm.innerHTML</code> has thousands of divs, tables, lists, images, etc, then calling <code>.innerHTML += ...</code> is going to cause the parser to re-parse <em>all that stuff</em> over again.  This could also break references to already constructed DOM elements and cause other chaos.  In reality, all you want to do is append a single new element to the end.</p>\n\n<p>It's better to just call <code>appendChild</code>:</p>\n\n<pre><code>var newElement = document.createElement('div');\nnewElement.innerHTML = '&lt;div&gt;Hello World!&lt;/div&gt;';\nelm.appendChild(newElement);\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\n</code></pre>\n\n<p>This way, the existing contents of <code>elm</code> are not parsed again.</p>\n\n<p><strong>NOTE:</strong> It's possible that [some] browsers are smart enough to optimize the <code>+=</code> operator and not re-parse the existing contents.  I have not researched this.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>If the user has older versions of IE (or maybe newer ones too, haven't tried), innerHTML on a <code>td</code> will cause issues.  Table elements in IE are read-only, tsk tsk tsk.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Mike's answer is probably the better one, but another consideration is that you are dealing with strings.  And string concatenation in JavaScript can be really slow especially in some older browsers.  If you are just concatenating little fragments from HTML then it probably isn't noticeable, but if you have a major part of the page that you are appending something to repeatedly you very well could see a noticeable pause in the browser.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The alternative is <code>.createElement()</code>, <code>.textContent</code>, and <code>.appendChild()</code>. Appending with <code>+=</code> is only an issue if you're dealing with a lot of data.</p>\n\n<p><strong>Demo:</strong> <a href=\"http://jsfiddle.net/ThinkingStiff/v6WgG/\" rel=\"nofollow\">http://jsfiddle.net/ThinkingStiff/v6WgG/</a></p>\n\n<h3>Script</h3>\n\n<pre class=\"lang-js prettyprint-override\"><code>var elm = document.getElementById( 'targetID' ),\n    div = document.createElement( 'div' );\ndiv.textContent = 'goodbye world';\nelm.appendChild( div );\n</code></pre>\n\n<h3>HTML</h3>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;div id=\"targetID\"&gt;hello world&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have been told not to append stuff using <code>element.innerHTML += ...</code> like this:</p>\n\n<pre><code>var str = \"&lt;div&gt;hello world&lt;/div&gt;\";\nvar elm = document.getElementById(\"targetID\");\n\nelm.innerHTML += str; //not a good idea?\n</code></pre>\n\n<p>What is wrong with it?, what other alternatives do I have?</p>\n",
            "last_activity_date": 1372608581,
            "question_id": 11515383,
            "score": 13,
            "tags": [
                "javascript",
                "html",
                "innerhtml",
                "anti-patterns"
            ],
            "title": "Why is &quot;element.innerHTML+=&quot; bad code?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Please check the javascript code convetions bellow and you will find your answer.</p>\n\n<blockquote>\n  <p><a href=\"http://javascript.crockford.com/code.html\" rel=\"nofollow\">http://javascript.crockford.com/code.html</a></p>\n  \n  <p>There should be no space between the name of a function and the ( (left parenthesis) of its parameter list. There should be one space between the ) (right parenthesis) and the { (left curly brace) that begins the statement body. The body itself is indented four spaces. The } (right curly brace) is aligned with the line containing the beginning of the declaration of the function.</p>\n</blockquote>\n\n<p><strong>Example for a <em>function</em>:</strong></p>\n\n<pre><code>function outer(c, d) {\n    var e = c * d;\n\n    function inner(a, b) {\n        return (e * a) + b;\n    }\n\n    return inner(0, 1);\n }\n</code></pre>\n\n<p><strong>Example for <em>anonymous function</em>:</strong></p>\n\n<pre><code>div.onclick = function (e) {\n    return false;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>JSLint is not a Javascript syntax checker as much as it is a Javascript style checker. The style guidelines it uses are those written by Douglas Crockford.</p>\n\n<p>Some people do not agree with his style decisions, some people do. They are not law and you are not required to follow them. Alternative JS linters such as <a href=\"http://www.jshint.com/\">JSHint</a> exist.</p>\n\n<p>The particular rule you are running into is <a href=\"http://javascript.crockford.com/code.html#variable%20declarations\">here</a>:</p>\n\n<blockquote>\n  <p>There should be no space between the name of a function and the (left parenthesis) of its parameter list. </p>\n</blockquote>\n\n<p>Javascript is not whitespace-sensitive. You can add this space if it makes you feel better. (It is not standard, however.)</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Technically speaking, your code is perfectly valid, although some code style standards dictate that there should not be such space (for example, the one that @Bodgan cited).</p>\n\n<p>In fact, when you compress your code (using one of many tools like <a href=\"http://developer.yahoo.com/yui/compressor/\" rel=\"nofollow\">YUI Compressor</a> or <a href=\"https://developers.google.com/closure/compiler/\" rel=\"nofollow\">Google Closure Compiler</a>) these spaces are entirely removed - including the ones before/after curly brackets as cited by @Bodgan. And it's valid JS of course.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://javascript.crockford.com/code.html#variable%20declarations\">According to Crockford</a>,</p>\n\n<p>NO space between  and parentheses:</p>\n\n<pre><code>function n() {\n  //stuff here\n}\n</code></pre>\n\n<p>Space between \"function\" and parentheses (anonymous functions):</p>\n\n<pre><code>function () {\n  //stuff here\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I was using JSLint and I got an error for putting a space after the function name. Why is that bad?</p>\n\n<pre><code>function coolness () {\n    var hi = \"this\";\n}\n</code></pre>\n\n<p>ERROR: Problem at line 1 character 19: Unexpected space between 'coolness' and '('.</p>\n",
            "last_activity_date": 1417677806,
            "question_id": 9765942,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "Space after function name is wrong?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Many thanks to the Chromium list contributor who pointed out that to create a <code>Function</code> object in the way underscore is doing it requires the <code>manifest.json</code> option for <code>content_security_policy</code> to include 'unsafe-eval'.</p>\n\n<p><a href=\"http://github.com/djmccormick/content-security-policy-test\" rel=\"nofollow\">http://github.com/djmccormick/content-security-policy-test</a></p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Unfortunately I don't think you can use underscore.js's _.template() from within a chrome extension...at least with the new manifest.json version 2.  The same holds true for trying to use the <a href=\"http://api.jquery.com/jquery.tmpl/\" rel=\"nofollow\">jQuery Template plugin</a>.</p>\n\n<blockquote>\n  <p>From the Google Chrome Extension's <a href=\"http://code.google.com/chrome/extensions/contentSecurityPolicy.html#H2-3\" rel=\"nofollow\">Content Security Policy</a> page:</p>\n  \n  <blockquote>\n    <p>There is no mechanism for relaxing the restriction against executing inline JavaScript. In particular, setting a script policy that includes unsafe-inline will have no effect. This is intentional.</p>\n  </blockquote>\n</blockquote>\n\n<p>I am going to look at other templating engines that will hopefully not use the <strong>new Function</strong> object.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Manifest v2 limitations, as said above, forbid to use Eval, new Function, and inline scripts - even when playing with the Content Security Policy: <a href=\"http://code.google.com/chrome/extensions/contentSecurityPolicy.html#H2-3\" rel=\"nofollow\">there's no way to relax this security policy</a> in v2 extensions.</p>\n\n<p>Most template libraries use, at some point or another, evals.\nOne solution is to rewrite your extensions so that all logic resides in a javascript, and nothing in a template; a solution such as <a href=\"http://code.google.com/p/google-jstemplate/\" rel=\"nofollow\">google jstemplate</a> should in this case be usable.</p>\n\n<p>There's, though, the option to do Eval and new Function inside a <a href=\"http://developer.chrome.com/trunk/apps/manifest.html#sandbox\" rel=\"nofollow\">sandboxed iframe</a>, for instance with the following lines in the manifest:</p>\n\n<pre><code>\"sandbox\": {\n    \"pages\": [\n      \"page1.html\",\n      \"directory/page2.html\"\n    ]\n},\n</code></pre>\n\n<p>A sandboxed page will not have access to extension or app APIs, or direct access to non-sandboxed pages (it may communicate with them via postMessage()). You can further restrict the sandbox rights with a specific CSP</p>\n\n<p>There's now a full example from the Google Chrome team on the <a href=\"https://github.com/GoogleChrome/chrome-app-samples/tree/master/eval-in-iframe\" rel=\"nofollow\">github eval in iframe</a> on how to circumvent the problem by communicating with a sandboxed iframe, as well as a <a href=\"http://code.google.com/chrome/extensions/tut_analytics.html\" rel=\"nofollow\">short analytics tutorial</a></p>\n\n<p>Hopefully some library will show up using this mechanism to provide full compatibility with standard templates usage, though I'd advise removing as much logic from the templates as possible for performance reasons...</p>\n\n<p>Thanks to Google, there's a lot of extension rewriting in the lineup :(</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Google just released a new document discussing the solution for this problem ?</p>\n\n<p><a href=\"http://code.google.com/chrome/extensions/trunk/sandboxingEval.html\" rel=\"nofollow\">http://code.google.com/chrome/extensions/trunk/sandboxingEval.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can write your own template mini-engine using jQuery's <code>$('&lt;element .../&gt;')</code> construction.</p>\n\n<p>The clean way:</p>\n\n<pre><code>function myElement(text) {\n  var d = $('&lt;div class=\"abc\"/&gt;');\n  d.text(text);\n  return d;\n}\n\nmyElement('my text').appendTo(domParent);\n</code></pre>\n\n<p>The dirty way:</p>\n\n<pre><code>var yourTemplate = '&lt;div&gt;${somevar}&lt;/div&gt;';\n\nfunction instTemplate(tmpl, text) {\n  return $(tmpl.replace(/\\$\\{somevar\\}/g, text));\n}\n\ninstTemplate(yourTemplate, 'your text').appendTo(domParent);\n</code></pre>\n\n<p>E.g. it's pretty quick to rewrite simple jquery.tmpl templates using the dirty method, if you know that the replacement data is not harmful, etc.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I use <code>Underscore.js</code> because I want <code>Backbone.js</code> for my Chrome extension, I just changed the Template engine to <code>Mustache</code> ~ if you have the same reason, you can also use Underscore.js for Backbone, just do not use <code>_.template()</code> function.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>If I use <a href=\"http://documentcloud.github.com/underscore/\">underscore.js</a>'s <a href=\"http://documentcloud.github.com/underscore/#template\">_.template()</a> from inside a Google Chrome extension I get the following error in the console:</p>\n\n<blockquote>\n  <p>Uncaught Error: Code generation from strings disallowed for this context</p>\n</blockquote>\n\n<p>Is there any way to get past this error?</p>\n",
            "last_activity_date": 1385297291,
            "question_id": 8807437,
            "score": 13,
            "tags": [
                "javascript",
                "google-chrome-extension",
                "underscore.js"
            ],
            "title": "Underscore.js _.template causes error from Chrome extension"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It's the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Special/Comma_Operator\" rel=\"nofollow\">comma operator</a>, which evaluates both of its operands and returns the value of the second one.</p>\n\n<p>So, something like <code>(null, alert)</code> evaluates to the <code>alert</code> function, which you can immediately call using parentheses.</p>\n\n<p>It's described in section 11.14 of <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\" rel=\"nofollow\">ECMA-262</a> (PDF).</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The <a href=\"http://msdn.microsoft.com/en-us/library/9b37css7%28VS.85%29.aspx\" rel=\"nofollow\">comma operator</a> causes expressions to be evaluated sequentially.  Wrapping the expressions in parentheses returns the value of the last expression.  So <code>(1, alert)(\"hello\")</code> is functionally equivalent to:</p>\n\n<pre><code>1;\nalert(\"hello\");\n</code></pre>\n\n<p>Off the top of my head, I can't think of a reason to do this.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You are just using <a href=\"http://es5.github.com/#x11.14\">The Comma Operator</a>.</p>\n\n<p>This operator only evaluates its operands from left to right, and returns the value from the second one, for example:</p>\n\n<pre><code>(0, 1); // 1\n('foo', 'bar'); // 'bar'\n</code></pre>\n\n<p>In the context of calling a function, the evaluation of the operand will simply get a value, not a reference, this causes that the <code>this</code> value inside the invoked function point to the global object (or it will be <code>undefined</code> in the new ECMAScript 5 Strict Mode).</p>\n\n<p>For example:</p>\n\n<pre><code>var foo = 'global.foo';\n\nvar obj = {\n  foo: 'obj.foo',\n  method: function () {\n    return this.foo;\n  }\n};\n\nobj.method();      // \"obj.foo\"\n(1, obj.method)(); // \"global.foo\"\n</code></pre>\n\n<p>As you can see, the first call, which is a direct call, the <code>this</code> value inside the <code>method</code> will properly refer to <code>obj</code> (returning <code>\"obj.foo\"</code>), the second call, the evaluation made by the comma operator will make the <code>this</code> value to point to the global object (yielding <code>\"global.foo\"</code>).</p>\n\n<p>That pattern has been getting quite popular these days, to make indirect <a href=\"http://es5.github.com/#x15.1.2.1.1\">calls to <code>eval</code></a>, this can be useful under ES5 strict mode, to get a reference to the global object, for example, (imagine you are in a non-browser environment, <code>window</code> is not available):</p>\n\n<pre><code>(function () {\n  \"use strict\";\n  var global = (function () { return this || (1,eval)(\"this\"); })();\n})();\n</code></pre>\n\n<p>In the above code, the inner anonymous function will execute within a strict mode code unit, that will result on having the <code>this</code> value as <code>undefined</code>.</p>\n\n<p>The <code>||</code> operator will now take the second operand, the <code>eval</code> call, which is an indirect call, and it will evaluate the code on the global lexical and variable environment.</p>\n\n<p>But personally, in this case, under strict mode I prefer using the <code>Function</code> constructor to get the global object:</p>\n\n<pre><code>(function () {\n  \"use strict\";\n  var global = Function('return this')();\n})();\n</code></pre>\n\n<p>Functions that are created with the <code>Function</code> constructor are strict only if they start with a Use Strict Directive, they don't \"inherit\" the strictness of the current context as Function Declarations or Function Expressions do.</p>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<p>There are things like</p>\n\n<pre><code>f.call(...)\nf.apply(...)\n</code></pre>\n\n<p>But then there's this</p>\n\n<pre><code>(1, alert)('Zomg what is this????!!!11')\n</code></pre>\n\n<p>\"1\" does not seem to mean much in this context, the following works just fine:</p>\n\n<pre><code>(null, alert)('Zomg what is this????!!!11')\n(1, null, alert)('Zomg what is this????!!!11')\n(undefined, alert)('Zomg what is this????!!!11')\n</code></pre>\n\n<p>Could you point to a specific part of ECMAScript which describes that syntax?</p>\n",
            "last_activity_date": 1315235685,
            "question_id": 5161502,
            "score": 13,
            "tags": [
                "javascript",
                "ecma262"
            ],
            "title": "Indirect function call in JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I <em>think</em> this might be a hard constraint on the XHR functionality. </p>\n\n<p>Setting the clientside document.cookie caused the Cookie header to be sent in requests as expected. If you want to pass a cookie value in an an ajax request this might be the way to go.</p>\n\n<p>A workaround is to send a custom header to the php script with the cookie string you want to set:</p>\n\n<pre><code>// in the js...\nxhr.open(\"GET\", \"showcookie.php\",true);\n//xhr.setRequestHeader(\"Cookie\", \"foo=quux\");\nxhr.setRequestHeader(\"X-Set-Cookie\", \"foo2=quux\");\n\nxhr.withCredentials = true;\n</code></pre>\n\n<p>Then in your showcookie.php you can grab the custom header value and fire a set-cookie response header:</p>\n\n<pre><code>$cookie = $_SERVER['HTTP_X_SET_COOKIE'];\n\n// NOTE: really should sanitise the cookie input.\nheader('Set-Cookie: ' . $cookie);\n\n\nprint_r($_COOKIE);\n</code></pre>\n\n<p>Note that you wont see a cookie header until the response is parsed by the browser. Also please make sure you sanitise the contents of the X_SET_COOKIE header - this is a proof of concept only:)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The Cookie header is one of several which cannot be modified in an <code>XMLHttpRequest</code>. From the <a href=\"http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader-method\">specification</a>:</p>\n\n<blockquote>\n  <p>Terminate <em>[execution of the <code>setRequestHeader</code> method]</em> if header is a\n  case-insensitive match for one of the\n  following headers:</p>\n  \n  <ul>\n  <li>Accept-Charset</li>\n  <li>Accept-Encoding</li>\n  <li>Connection</li>\n  <li>Content-Length</li>\n  <li>Cookie</li>\n  <li>Cookie2</li>\n  <li>Content-Transfer-Encoding</li>\n  <li>Date</li>\n  <li>Expect</li>\n  <li>Host</li>\n  <li>Keep-Alive</li>\n  <li>Referer</li>\n  <li>TE</li>\n  <li>Trailer</li>\n  <li>Transfer-Encoding</li>\n  <li>Upgrade</li>\n  <li>User-Agent</li>\n  <li>Via</li>\n  </ul>\n  \n  <p>\u2026 or if the start of header is a\n  case-insensitive match for Proxy- or\n  Sec- (including when header is just\n  Proxy- or Sec-).</p>\n  \n  <p>The above headers are controlled by\n  the user agent to let it control those\n  aspects of transport. This guarantees\n  data integrity to some extent. Header\n  names starting with Sec- are not\n  allowed to be set to allow new headers\n  to be minted that are guaranteed not\n  to come from XMLHttpRequest.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<p>I have this code:</p>\n\n<pre><code>window.onload = function() {\n        document.cookie = 'foo=bar; expires=Sun, 01 Jan 2012 00:00:00 +0100; path=/';\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", \"/showcookie.php\",true);\n        xhr.setRequestHeader(\"Cookie\", \"foo=quux\");\n\n        xhr.setRequestHeader(\"Foo\", \"Bar\");\n        xhr.setRequestHeader(\"Foo\", \"Baz\");\n\n        xhr.withCredentials = true;\n        var pre = document.getElementById('output');\n        xhr.onreadystatechange = function() {\n            if (4 == xhr.readyState) {\n                pre.innerHTML += xhr.responseText + \"\\n\";\n            }\n        };\n        xhr.send(null);\n    };\n</code></pre>\n\n<p>and this /showcookie.php</p>\n\n<pre><code>&lt;?php\n\nprint_r($_COOKIE);\n\n?&gt;\n</code></pre>\n\n<p>and it always show</p>\n\n<pre><code>Array\n(\n    [Host] =&gt; localhost\n    [User-Agent] =&gt; \n    [Accept] =&gt; \n    [Accept-Language] =&gt; pl,en-us;q=0.7,en;q=0.3\n    [Accept-Encoding] =&gt; gzip,deflate\n    [Accept-Charset] =&gt; ISO-8859-2,utf-8;q=0.7,*;q=0.7\n    [Keep-Alive] =&gt; 115\n    [Connection] =&gt; keep-alive\n    [foo] =&gt; Baz\n    [Referer] =&gt;\n    [Cookie] =&gt; foo=bar\n)\n\nArray\n(\n    [foo] =&gt; bar\n)\n</code></pre>\n\n<p>I'm using Firefox 3.6.13, Opera 11.00 and Chromium 9.0 on Ubuntu. </p>\n\n<p>Is anybody have the same problem or maybe it's impossible to modify Cookie header.</p>\n",
            "last_activity_date": 1298674931,
            "question_id": 5077998,
            "score": 13,
            "tags": [
                "javascript",
                "cookies",
                "xmlhttprequest"
            ],
            "title": "How to modify Cookie from Ajax call"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>When the page loads totally (dom, images, ...)</p>\n\n<pre><code>$(window).load(function(){\n    // full load\n});\n</code></pre>\n\n<p>When DOM elements load (not necessary all images will be loaded)</p>\n\n<pre><code>$(function(){\n    // DOM Ready\n});\n</code></pre>\n\n<p>Then you can trigger any event</p>\n\n<pre><code>$(\"element\").trigger(\"event\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<pre><code>$(document).ready(function() {\n    // do things\n}\n</code></pre>\n\n<p>This will trigger once the DOM structure is ready.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>jQuery:</strong></p>\n\n<pre><code>$(function(){\n  // your code...this will run when DOM is ready\n});\n</code></pre>\n\n<p>If you want to run your code after all page resources including images/frames/DOM have loaded, you need to use <code>load</code> event:</p>\n\n<pre><code>$(window).load(function(){\n  // your code...\n});\n</code></pre>\n\n<p><strong>JavaScript:</strong></p>\n\n<pre><code>window.onload = function(){\n  // your code...\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Isn't </p>\n\n<pre><code>  $(document).ready(function() {\n\n  });\n</code></pre>\n\n<p>what you are looking for?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>$(document).ready( function() { YOUR CODE HERE } )\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Everyone's mentioned the <code>ready</code> function (and its shortcuts), but even earlier than that, you can just put code in a <code>script</code> tag just before the closing <code>body</code> tag (this is what the YUI and Google Closure folks recommend), like this:</p>\n\n<pre><code>&lt;script type='text/javascript'&gt;\npageLoad();\n&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>At this point, everything above that script tag is available in the DOM.</p>\n\n<p>So your options in order of occurrence:</p>\n\n<ol>\n<li><p>Earliest: Function call in <code>script</code> tag just before closing the <code>body</code> tag. The DOM <strong>is</strong> ready at this point (according to the Google Closure folks, and they should know; I've also tested it on a bunch of browsers).</p></li>\n<li><p>Earlyish: the <code>jQuery.ready</code> callback (and its shortcut forms).</p></li>\n<li><p>Late, after <strong>all</strong> page elements including images are fully loaded: <code>window</code> <code>onload</code> event.</p></li>\n</ol>\n\n<p>Here's a live example: <a href=\"http://jsbin.com/icazi4\">http://jsbin.com/icazi4</a>, relevant extract:</p>\n\n<pre><code>&lt;/body&gt;\n&lt;script type='text/javascript'&gt;\n  runPage();\n\n  jQuery(function() {\n    display(\"From &lt;tt&gt;jQuery.ready&lt;/tt&gt; callback.\");\n  });\n\n  $(window).load(function() {\n    display(\"From &lt;tt&gt;window.onload&lt;/tt&gt; callback.\");\n  });\n\n  function runPage() {\n    display(\"From function call at end of &lt;tt&gt;body&lt;/tt&gt; tag.\");\n  }\n\n  function display(msg) {\n    var p = document.createElement('p');\n    p.innerHTML = msg;\n    document.body.appendChild(p);\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>(Yes, I could have used jQuery for the <code>display</code> function, but I was starting with a non-jQuery template.)</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>The windows.load function is useful if you want to do something when everything is loaded.</p>\n\n<pre><code>$(window).load(function(){\n    // full load\n});\n</code></pre>\n\n<p>But you can also use the .load function on any other element. So if you have one particularly large image and you want to do something when that loads but the rest of your page loading code when the dom has loaded you could do:</p>\n\n<pre><code>$(function(){\n    // Dom loaded code\n\n    $('#largeImage').load({\n        // Image loaded code\n    });\n});\n</code></pre>\n\n<p>Also the jquery .load function is pretty much the same as a normal .onload.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I want to trigger one event on page load complete using javascript/jquery.</p>\n\n<p>Is there any way to trigger event or call a simple function once page loading fully completes.</p>\n\n<p>Please suggest folks if you any reference.</p>\n",
            "last_activity_date": 1286447212,
            "question_id": 3880307,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Trigger event on body load complete js/jquery"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><code>.onclick</code> should be set to a function instead of a string. Try</p>\n\n<pre><code>elemm.onclick = function() { alert('blah'); };\n</code></pre>\n\n<p>instead.</p>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>Not sure but try :</p>\n\n<pre><code>elemm.addEventListener('click', function(){ alert('blah');}, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>you can't assign an event by string. Use that:</p>\n\n<p>elemm.onclick = function(){ alert('blah'); };</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Short answer: you want to set the handler to a function:</p>\n\n<pre><code>elemm.onclick = function() { alert('blah'); };\n</code></pre>\n\n<p>Slightly longer answer: you'll have to write a few more lines of code to get that to work consistently across browsers.</p>\n\n<p>The fact is that even the sligthly-longer-code that might solve that particular problem across a set of common browsers will still come with problems of its own. So if you don't care about cross-browser support, go with the totally short one. If you care about it and absolutely only want to get this one single thing working, go with a combination of <code>addEventListener</code> and <code>attachEvent</code>. If you want to be able to extensively create objects and add and remove event listeners throughout your code, and want that to work across browsers, you definitely want to delegate that responsibility to a library such as jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't think you can do that this way. You should use :</p>\n\n<pre><code>void addEventListener( \n  in DOMString type, \n  in EventListener listener, \n  in boolean useCapture \n); \n</code></pre>\n\n<p>Documentation <a href=\"https://developer.mozilla.org/en/DOM/element.addEventListener\" rel=\"nofollow\">right here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You have three different problems. First of all, values in HTML tags should be quoted! Not doing this can confuse the browser, and may cause some troubles (although it is likely not the case here). Second, you should actually assign a function to the onclick variable, as someone else meantioned. Not only is this the proper way to do it going forward, but it makes things much simpler if you are trying to use local variables in the onclick function. Finally, you can try either addEventListener or jQuery, jQuery has the advantage of a nicer interface.</p>\n\n<p>Oh, and make sure your HTML validates! That could be an issue.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Hi\nI have been trying to add onclick event to new elements I added with javascript.\nthe problem is when I check document.body.innerHTML I can actually see the onclick=alert('blah') is added to the new element.</p>\n\n<p>but when I click that element I don't see the alert box is working. in fact anything related to javascript is not working..\nhere is what I use to add new element:</p>\n\n<pre><code>function add_img()\n{ \nvar elemm = document.createElement('rvml:image'); \nelemm.src = 'blah.png';\nelemm.className = 'rvml';\nelemm.onclick = \"alert('blah')\";\ndocument.body.appendChild(elemm);\nelemm.id = \"gogo\";\nelemm.style.position='absolute';\nelemm.style.width=55;\nelemm.style.height=55;\nelemm.style.top=200;\nelemm.style.left=300;\nelemm.style.rotation=200; \n}\n</code></pre>\n\n<p>here is how I call this function:</p>\n\n<pre><code>&lt;button onclick=add_img()&gt;add image&lt;/button&gt;\n</code></pre>\n\n<p>now the image draws perfectly inside the browser. but when I click the image I don't get that alert.</p>\n\n<p>any help would be appreciated..</p>\n",
            "last_activity_date": 1279871501,
            "question_id": 3316207,
            "score": 13,
            "tags": [
                "javascript",
                "events",
                "new-operator",
                "element",
                "add"
            ],
            "title": "add onclick event to newly added element in javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Put it in a public folder. A public folder is a folder placed next to a client folder in the same package where your gwt.xml file is located. See also <a href=\"http://code.google.com/webtoolkit/doc/1.6/DevGuideOrganizingProjects.html#DevGuideModules\">http://code.google.com/webtoolkit/doc/1.6/DevGuideOrganizingProjects.html#DevGuideModules</a></p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>In my Google web toolkit application, my gwt.xml file includes the following line in the module:</p>\n\n<pre><code>&lt;module rename-to='foo'&gt;\n...\n  &lt;script src=\"foo.js\"&gt;&lt;/script&gt;\n...\n</code></pre>\n\n<p>My question is: where in my GWT project do I actually place foo.js so that it gets packed into the war when I compile my project?</p>\n",
            "last_activity_date": 1358757166,
            "question_id": 1659433,
            "score": 13,
            "tags": [
                "javascript",
                "gwt"
            ],
            "title": "gwt and javascript files"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>so that it doesn't get evaluated but gets inserted as a string.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It's a bad way to prevent XML/XHTML and HTML validators from yelling at the source code.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Consider this simplified example:</p>\n\n<pre><code>&lt;script&gt;\ndocument.write(\"something &lt;/script&gt; something\");\n&lt;/script&gt;\n</code></pre>\n\n<p>The browser's HTML parser would see the <code>&lt;/script&gt;</code> within the JavaScript string and interpret that as the end of the script element.</p>\n\n<p>The HTML parser doesn't know about JavaScript syntax - all it knows is that the <code>&lt;script&gt;</code> element ends at the next <code>&lt;/script&gt;</code>.</p>\n\n<p>(It also knows that you can't have nested <code>&lt;script&gt;</code> elements, hence the breaking of the opening <code>&lt;script&gt;</code> as well as the closing <code>&lt;/script&gt;</code> in your example.)</p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>Some browsers tend to \"act\" to fast when parsing a document and immediately try to execute the javascript when they find a script tag (even though it is itself in a piece of js). To avoid this they break the decalration of the tag.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Suppose you are writing a tool that detects the beginning and end of script blocks in a chunk of text. Suppose you see</p>\n\n<pre><code>&lt;blah&gt;&lt;blahdeblah&gt;&lt;script&gt;\n\nblah blah blah\n\nblah\n\nprint(\"&lt;/script&gt;\")\n\nprint(\"&lt;script&gt;\")\n\nblah\n\n&lt;/script&gt;\n\n&lt;/blahdeblah&gt;&lt;/blah&gt;\n</code></pre>\n\n<p>Without knowing the syntax of the script language, how does your tool know that this is ONE script block and not TWO script blocks with \")blah between them?</p>\n\n<p>A web browser is such a tool. It's a reasonable practice to make sure you never confuse the web browser by never having <code>&lt;script&gt;</code> or <code>&lt;/script&gt;</code> in your file unless it actually is a script tag.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For a full discussion of this, see:<BR>\n&nbsp;&nbsp; <a href=\"http://www.wwco.com/~wls/blog/2007/04/25/using-script-in-a-javascript-literal/\" rel=\"nofollow\">http://www.wwco.com/~wls/blog/2007/04/25/using-script-in-a-javascript-literal/</a></p>\n\n<p>The short answer is that your code is parsed in two discrete steps.</p>\n\n<p>The first one is XML. And that means that the element &lt;SCRIPT&gt; is looking for a &lt;/SCRIPT&gt;. It's important to remember that XML elements are content agnostic. That means that the parser doesn't know <em>yet</em> that there's JavaScript in there.</p>\n\n<p>Once it has the contents of the &lt;SCRIPT&gt; element, <em>then</em> it processes that chunk of text, which presumably is JavaScript.</p>\n\n<p>By splitting up the tag with a string concatenate operator you prevent a constant from tripping up the XML phase.</p>\n\n<p>One simple solution is to put &amp;lt; and &amp;gt; in the Javascript text.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've seen this on every Yahoo! <a href=\"http://news.yahoo.com/s/ap/20090924/ap%5Fon%5Fhe%5Fme/med%5Faids%5Fvaccine\">news page</a>, at the bottom of the source code,<br />\nand failed to understand why they break the <strong>script</strong> word like that.<br /></p>\n\n<p>Does anybody know if there's any reason for this?</p>\n\n<pre><code>document.write(\"&lt;scr\"+\"ipt language=javascript src=http://l.yimg.com/d/lib/bc/bc_2.0.4.js&gt;&lt;/scr\"+\"ipt&gt;\");\n</code></pre>\n",
            "last_activity_date": 1329801525,
            "question_id": 1474185,
            "score": 13,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "What does this mean: &quot;document.write(&#39;&lt;scr&#39;+&#39;ipt... &quot;?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you topmost element is contained within the element below, you can let the event \"bubble through\". If it is not, you have to trigger the click manually. There is no way to fire the event handler just by clicking.</p>\n\n<p>To fire the event manually, you could do this:</p>\n\n<pre><code>$(\"#topelement\").click(function() {\n   $(\"#elementbelow\").click();\n   return false;\n});\n</code></pre>\n\n<p><em>EDIT (response to comments):</em></p>\n\n<p>To enumerate all boxes, you can do this (off the top of my head. no testing, could not even be syntax-error free)</p>\n\n<pre><code>$(\"#topelement\").click(function(e) {\n    $(\".box\").each(function() {\n       // check if clicked point (taken from event) is inside element\n       var mouseX = e.pageX;\n       var mouseY = e.pageY;\n       var offset = $(this).offset;\n       var width = $(this).width();\n       var height = $(this).height();\n\n       if (mouseX &gt; offset.left &amp;&amp; mouseX &lt; offset.left+width \n           &amp;&amp; mouseY &gt; offset.top &amp;&amp; mouseY &lt; offset.top+height)\n         $(this).click(); // force click event\n    });\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>OK, so there are 2 things I think I would do: (1) a CSS3 answer, that isn't yet widely adopted, and (2) a Javascript backup-plan for the rest.  (not sure what to do about users without JS on older browsers that don't support the CSS part).  Read on...</p>\n\n<p>First: Use this CSS3 code to make the upper element 'invisible' to mouse-interaction:</p>\n\n<pre><code>pointer-events: none;\n</code></pre>\n\n<p>This is not yet cross-browser compatible.  It only works on SVG &amp; HTML Elements in Gecko &amp; Webkit browsers, but only on SVG elements in Opera, and not at all in IE.</p>\n\n<p>Per the MDN:</p>\n\n<blockquote>\n  <p>The CSS property pointer-events allows\n  authors to control whether or when an\n  element may be the target of a mouse\n  event. This property is used to\n  specify under which circumstance (if\n  any) a mouse event should go \"through\"\n  an element and target whatever is\n  \"underneath\" that element instead.</p>\n</blockquote>\n\n<p>Here's that documentation: <a href=\"https://developer.mozilla.org/en/css/pointer-events\">https://developer.mozilla.org/en/css/pointer-events</a></p>\n\n<p>Second: Use some javascript Feature Detection for those browsers that don't yet support this CSS.  You'll have to roll your own, similar to <a href=\"http://www.modernizr.com/\">Modernizr</a>, since it doesn't test for this yet (to my knowledge).  The idea is that you create an element, apply the pointer-events CSS to it, check for it, and if the browser supports the feature, you'll get the expected result, as opposed to something null or undefined; then destroy the element.  Anyway, once you have feature detection, you can use jQuery or similar to attach a listener to the uppermost element and assign a click from it to click through to something else.  Check out jQuery and it's use of the click() function for more info (not enough reputation to post the link, sry).</p>\n\n<p>If I get time later, I might be able to work up a quick jsFiddle on it.  I hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I have modified the code from above into jquery function, somebody might find it useful:</p>\n\n<p>Find alternative clicked-on elements:</p>\n\n<pre><code>$('.child').click(function(e) {\n    $(this).siblingsUnderMouse(e).each(fn);\n});\n</code></pre>\n\n<p>If you want to ignore transparent pixels in images:</p>\n\n<pre><code>$('.child').click(function(e) {\n    $(this).siblingsUnderMouse(e).each(function() {\n        var clickOnVisiblePixel = $(this).isOnVisiblePixel(e);\n    });\n});\n</code></pre>\n\n<p>Code:</p>\n\n<pre><code>$.fn.reverse = [].reverse;\n$.fn.siblingsUnderMouse = function(e, filter)\n{\n    filter = filter || '*';\n\n    var arr = $();\n    this.parent().children().filter(filter).reverse().each(function()\n    {\n        var t = $(this);\n        // check if clicked point (taken from event) is inside element\n        var x = (e.pageX - t.offset().left).toFixed();\n        var y = (e.pageY - t.offset().top).toFixed();\n        var w = t.width();\n        var h = t.height();\n\n        if (x &lt; 0 || x &gt;= w || y &lt; 0 || y &gt;= h)\n            return;\n\n        arr.push(t);\n    });\n    return arr;\n}\n\n$.fn.isOnVisiblePixel = function(e)\n{\n    if (e.type == 'mouseleave') return false;\n\n    var t = this[0];\n    if (!t || t.tagName != 'IMG')\n        t = this.find('img')[0];\n    if (!t) return;\n\n    var w = $(t).width();\n    var h = $(t).height();\n    var o = $(t).offset();\n    var x = (e.pageX - o.left).toFixed();\n    var y = (e.pageY - o.top).toFixed();\n    if (x &lt; 0 || y &lt; 0 || x &gt;= w || y &gt;= h)\n        return false;\n\n    var c = $('&lt;canvas&gt;')[0];\n    c.width = w;\n    c.height = h;\n\n    var ctx = c.getContext('2d');\n    ctx.drawImage(t, 0, 0, w, h);\n\n    var a = ctx.getImageData(x, y, 1, 1).data[3];\n    return (a &gt; 128);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have elements that are under an element with opacity:0.5 that I want to be able to click on. How can I click \"through\" the topmost element?</p>\n\n<p>Here's an example that demonstrates my problem. Click on the boxes to toggle them on and off. You can edit it <a href=\"http://jsbin.com/uhehe/edit\">on jsbin</a> to try out your solution.</p>\n\n<p><strong>Bonus points if you can have the boxes toggle on hover.</strong></p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \n  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt; \n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\"&gt; \n&lt;head&gt; \n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js\"&gt;&lt;/script&gt; \n&lt;title&gt;Sandbox&lt;/title&gt; \n&lt;meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" /&gt; \n&lt;style type=\"text/css\" media=\"screen\"&gt; \nbody { background-color: #000; } \n.box {width: 50px; height: 50px; border: 1px solid white} \n.highlight {background-color: yellow;} \n&lt;/style&gt;\n&lt;script type=\"text/javascript\"&gt;\nvar dthen = new Date();\n$('&lt;div id=\"past\"&gt;').css({'height':  (dthen.getMinutes()*60)+dthen.getSeconds() +'px'\n    \t\t,'position': 'absolute'\n    \t\t,'width': '200px'\n    \t\t,'top': '0px'\n    \t\t,'background-color': 'grey'\n    \t\t,'opacity': '0.5'\n    \t\t})\n    \t.appendTo(\"#container\");\n\nsetInterval(function(){\n    dNow = new Date();\n    $('#past').css('height', ((dNow.getSeconds()+(dNow.getMilliseconds()/1000))*50)%300 +'px');\n},10)\n\n $(\".box\").click(function(){\n      $(this).toggleClass(\"highlight\");\n    });\n&lt;/script&gt;\n&lt;/head&gt; \n&lt;body&gt; \n  &lt;div id=\"container\"&gt; \n     &lt;div class=\"box\" style=\"position:absolute; top: 25px; left: 25px;\"&gt;&lt;/div&gt; \n     &lt;div class=\"box\" style=\"position:absolute; top: 50px; left: 125px;\"&gt;&lt;/div&gt; \n     &lt;div class=\"box\" style=\"position:absolute; top: 100px; left: 25px;\"&gt;&lt;/div&gt; \n     &lt;div class=\"box\" style=\"position:absolute; top: 125px; left: 125px;\"&gt;&lt;/div&gt; \n     &lt;div class=\"box\" style=\"position:absolute; top: 225px; left: 25px;\"&gt;&lt;/div&gt; \n     &lt;div class=\"box\" style=\"position:absolute; top: 185px; left: 125px;\"&gt;&lt;/div&gt; \n  &lt;/div&gt; \n&lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1354387581,
            "question_id": 1148424,
            "score": 13,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "registering clicks on an element that is under another element"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Change <code>&lt;%# textDateSent.ClientID %&gt;</code> to <code>&lt;%= textDateSent.ClientID %&gt;</code>.</p>\n\n<p>Argh, you may need to use the OnDataBinding event of the grid view.  Then put a literal control in your javascript.  Then you can get the clientID of the text box and feed that into your literal control.</p>\n\n<pre><code>protected void GridViewName_RowDataBound(object sender, GridViewRowEventArgs e)\n    {\n        if (e.Row.RowType == DataControlRowType.DataRow)\n        {\n            //Create an instance of the datarow\n            DataRowView rowData = (DataRowView)e.Row.DataItem;\n\n            //locate your text box\n            //locate your literal control\n            //insert the clientID of the textbox into the literal control\n        }\n    }\n</code></pre>\n\n<p>Look here for a <a href=\"http://weblogs.asp.net/meligy/archive/2008/01/25/gridview-databinding-events.aspx\" rel=\"nofollow\">great detailed tutorial</a> on working within this context.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>&lt;asp:TemplateField&gt;\n    &lt;ItemTemplate&gt;\n        &lt;asp:TextBox ID=\"textDateSent\" runat=\"server\"&gt;\n        &lt;/asp:TextBox&gt;                      \n       &lt;input type=\"button\" value='Today' onclick=\"setToday('&lt;%# ((GridViewRow)Container).FindControl(\"textDateSent\").ClientID %&gt;');\" /&gt; \n    &lt;/ItemTemplate&gt;\n&lt;/asp:TemplateField&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>Maybe you don't want to do it where you need the ClientID.  Check out this post <a href=\"http://blog.digitaltools.com/post/2009/07/14/How-to-Work-With-a-GridView-Row-in-JavaScript.aspx\" rel=\"nofollow\">here</a> where the controls in a row are referenced in a generic way.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can get client id like this:</p>\n\n<pre><code>protected void Gv_RowDataBound(object sender, GridViewRowEventArgs e)\n{\n    if (e.Row.RowType == DataControlRowType.DataRow)\n    {\n        string strClientID = ((TextBox)e.Row.FindControl(\"txtName\")).ClientID;\n    }\n}\n</code></pre>\n\n<p>This will give unique client ID for each textbox in all rows.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a asp:GridView which contains a asp:TextBox within a TemplateField. I would like to obtain it's ID for use in javascript. Something like this:</p>\n\n<pre><code>&lt;asp:TemplateField&gt;\n    &lt;ItemTemplate&gt;\n        &lt;asp:TextBox ID=\"textDateSent\" runat=\"server\" /&gt;\n        &lt;input type=\"button\" value='Today' \n            onclick=\"setToday('&lt;%# textDateSent.ClientID %&gt;');\" /&gt;\n    &lt;/ItemTemplate&gt;\n&lt;/asp:TemplateField&gt;\n</code></pre>\n\n<p>But when I compile, I get an error:</p>\n\n<blockquote>\n  <p>The name 'textDateSent' does not exist in the current context</p>\n</blockquote>\n\n<p>Anybody know how to get the client ID of this TextBox?</p>\n",
            "last_activity_date": 1376048307,
            "question_id": 1128746,
            "score": 13,
            "tags": [
                "asp.net",
                "javascript",
                "gridview",
                "databound"
            ],
            "title": "How do I find the Client ID of control within an ASP.NET GridView?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There's the non-standard element wbr that is supported by at least</p>\n\n<p>Firefox, <a href=\"http://developer.mozilla.org/En/HTML/Element\" rel=\"nofollow\">http://developer.mozilla.org/En/HTML/Element</a></p>\n\n<p>Internet Explorer, <a href=\"http://msdn.microsoft.com/en-us/library/ms535917\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/ms535917</a>(VS.85).aspx</p>\n\n<p>and Opera.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<ul>\n<li>quirksmode.org has an <a href=\"http://www.quirksmode.org/oddsandends/wbr.html\" rel=\"nofollow\">overview of various methods</a>.</li>\n<li>There's a related SO question: <a href=\"http://stackoverflow.com/questions/904/in-html-how-to-word-break-on-a-dash\" rel=\"nofollow\">\"In HTML, how to word-break on a dash?\"</a></li>\n<li>In browsers that support it, <a href=\"http://www.w3.org/TR/css3-text/#word-wrap\" rel=\"nofollow\"><code>word-wrap: break-word</code></a> might give the desired effect as well.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I tested the <strong>&lt;wbr&gt;</strong>, <strong>&amp;#8203;</strong> and <strong>&amp;shy;</strong> techniques. All three worked well in IE 7, Firefox 3 and Chrome. </p>\n\n<p>The only one that did not break the copy/paste was the <strong>&lt;wbr&gt;</strong> tag.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The CSS settings <code>word-wrap:break-word</code> and <code>text-wrap:unrestricted</code> appear to be CSS 3 features.  Good luck finding a way to do this on current implementations.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>According to my tests, only Firefox has the described behavior among current browsers. So I guess your best bet is to wait for the imminent release of Firefox 3.1 to solve your problem :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Html Textarea elements only wrap when they reach a space or tab character. This is fine, until the user types a looooooooooooooooooooooong enough word. I'm looking for a way to strictly enforce line breaks (eg.: even if it results in \"loooooooooooo \\n ooooooooooong\").</p>\n\n<p><img src=\"http://img357.imageshack.us/img357/5097/examplero9.png\" alt=\"alt text\" /></p>\n\n<p>The best I've found is to add a zero-width unicode space after every letter, but this breaks copy and paste operations. Anyone know of a better way?</p>\n\n<p>Note: I'm referring to the \"textarea\" element here (i.e.: the one that behaves similarly to a text input) - not just a plain old block of text.</p>\n",
            "last_activity_date": 1245069501,
            "question_id": 47817,
            "score": 13,
            "tags": [
                "javascript",
                "html",
                "css",
                "text"
            ],
            "title": "Most elegant way to force a TEXTAREA element to line-wrap, *regardless* of whitespace"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>By default, jQuery serializes the data (passed in <code>data</code> property) - and it means <code>0xFD008001</code> <em>number</em> gets passed to the server as '4244668417' <em>string</em> (10 bytes, not 4), that's why the server treats it not as expected. </p>\n\n<p>It's necessary to prevent such behaviour by setting <code>$.ajax</code> property <code>processData</code> to <code>false</code>:</p>\n\n<blockquote>\n  <p>By default, data passed in to the data option as an object\n  (technically, anything other than a string) will be processed and\n  transformed into a query string, fitting to the default content-type\n  \"application/x-www-form-urlencoded\". If you want to send a\n  DOMDocument, or other non-processed data, set this option to false.</p>\n</blockquote>\n\n<p>... but that's only part of the whole story: <code>XMLHttpRequest.send</code> implementation has its own <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#Browser_Compatibility\" rel=\"nofollow\">restrictions</a>. That's why your best bet, I suppose, is to make your own serializer using <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\" rel=\"nofollow\"><strong>TypedArrays</strong></a>:</p>\n\n<pre><code>var bytesToSend = [253, 0, 128, 1],\n    bytesToSendCount = bytesToSend.length;\n\nvar bytesArray = new Uint8Array(bytesToSendCount);\nfor (var i = 0, l = bytesToSendCount; i &lt; l; i++) {\n  bytesArray[i] = bytesToSend[i];\n}\n\n$.ajax({\n   url: '%your_service_url%',\n   type: 'POST',\n   contentType: 'application/octet-stream',  \n   data: bytesArray,\n   processData: false\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>You can send binary data via ajax with xhr2, you can send the data as a typed array or a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Blob\">blob</a>.</p>\n\n<pre><code>(function ($) {\n   var data = new Uint32Array(1);\n   data[0] = 0xFD008001; \n   $.ajax({\n      url: '&lt;IP of Address&gt;',\n      type: 'POST',\n      contentType: false,\n      processData: false,\n      //data:'253,0,128,1',\n      data:data,\n\n      crossDomain: true\n   });\n})(jQuery);\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Uint32Array\">https://developer.mozilla.org/en-US/docs/Web/API/Uint32Array</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I'm trying to send a HTTP POST to a device on my network.  I want to send four specific bytes of data to the device unfortunately I only seem to be able to send strings to the device.  Is there anyway to send raw binary using javascript?  </p>\n\n<p>Here's the script I'm using to do the POST, it currently doesn't run unless I put a string in the data field.  Any ideas?</p>\n\n<pre><code>(function ($) {\n   $.ajax({\n      url: '&lt;IP of Address&gt;',\n      type: 'POST',\n      contentType: 'application/octet-stream',\n\n      //data:'253,0,128,1',\n      data:0xFD008001,\n\n      crossDomain: true\n   });\n})(jQuery);\n</code></pre>\n",
            "last_activity_date": 1404719200,
            "question_id": 19959072,
            "score": 12,
            "tags": [
                "javascript",
                "ajax",
                "binary",
                "hex"
            ],
            "title": "Sending binary data in javascript over HTTP"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Your <code>userInfo</code> service has to return the promise returned by <code>$http</code>. That promise will then be injected into your controller, and the view will be updated as soon as the promise successfully resolves.</p>\n\n<hr>\n\n<p>If you don't want the view to be rendered at all before <code>userInfo</code> resolves, you should set a <code>resolve</code> property on your route, and inject your service there:</p>\n\n<pre><code>$routeProvider.when('/profile', {\n    templateUrl: 'profile',\n    controller: userProfile,\n    resolve: {\n         userInfoData: function ($q, userInfo) {\n             return userInfo;\n         }\n    }\n});\n</code></pre>\n\n<p>Then just inject <code>userInfoData</code> into your controller in place of the <code>userInfo</code> service.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can make the factory to return a promise like this:</p>\n\n<pre><code>angular.module('myApp', ['myApp.filters', 'myApp.services', 'myApp.directives', 'ngResource', 'infinite-scroll', 'ui.bootstrap', 'ngCookies', 'seo'])\n    .service('userInfo', function ($http, $cookies) {\n    var promise = $http.get('/api/users/' + $cookies.id).\n    success(function (data) {\n        var userInfo = data.user[0];\n        return userInfo;\n    });\n    return promise;\n}) // other stuff comes after this\n</code></pre>\n\n<p>And in your controller, do</p>\n\n<pre><code>function userProfile($scope, $cookies, userInfo, $http, $resource, $routeParams, $rootScope){\n    userInfo.then(function(data){\n        $scope.user = data;\n    });\n}\n</code></pre>\n\n<p>This can guarantee whenever you use the service, it always gives you the data <em>synchronously</em>, you don't have to necessarily to load data before loading the controller.</p>\n",
                    "is_accepted": true,
                    "score": 20
                }
            ],
            "body": "<p>I have a service in Angular which uses my API to get user information and provides it to my controllers. It's set up like this:</p>\n\n<pre><code>angular.module('myApp', ['myApp.filters', 'myApp.services', 'myApp.directives', 'ngResource', 'infinite-scroll', 'ui.bootstrap', 'ngCookies', 'seo'])\n  .service('userInfo', function($http, $cookies){\n    $http.get('/api/users/' + $cookies.id).\n    success(function(data) {\n      var userInfo = data.user[0];\n\n      return userInfo;\n    });\n  }). // other stuff comes after this\n</code></pre>\n\n<p>In my controllers, I include it like:</p>\n\n<pre><code>function userProfile($scope, $cookies, userInfo, $http, $resource, $routeParams, $rootScope){\n    $scope.user = userInfo;\n    console.log('user info is')\n    console.log(userInfo);\n</code></pre>\n\n<p>This is returning no data, while if I put the same service function in the controller itself it returns just fine. What am I missing here? Never used DI/Services in Angular before so might be a simple mistake somewhere.</p>\n\n<p>I need to ensure that the service returns data <strong><em>before</em></strong> the controller loads. How can this be accomplished</p>\n",
            "last_activity_date": 1379054543,
            "question_id": 18477711,
            "score": 12,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-service"
            ],
            "title": "Force AngularJS service to return data before loading controller"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>There is no reason a simple recursive algorithm shouldn't work :)</p>\n\n<p>Assuming they're both the result of JSON.stringify or similar: </p>\n\n<pre><code>function merge(obj1,obj2){ // Our merge function\n    var result = {}; // return result\n    for(var i in obj1){      // for every property in obj1 \n        if((i in obj2) &amp;&amp; (typeof obj1[i] === \"object\") &amp;&amp; (i !== null)){\n            result[i] = merge(obj1[i],obj2[i]); // if it's an object, merge   \n        }else{\n           result[i] = obj1[i]; // add it to result\n        }\n    }\n    for(i in obj2){ // add the remaining properties from object 2\n        if(i in result){ //conflict\n            continue;\n        }\n        result[i] = obj2[i];\n    }\n    return result;\n}\n</code></pre>\n\n<h3><a href=\"http://jsfiddle.net/VrHUD/\" rel=\"nofollow\">Here is a working fiddle</a></h3>\n\n<p>(Note, arrays are not handled here)</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>If you don't want to introduce a new merge function, then here is the way to do in AngularJS</p>\n\n<pre><code>console.log( angular.extend( object1, angular.copy( object2 ) ) );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/a/15311842/846634\">here</a> is a solution that handels multiple objects merge (more than two objects):</p>\n\n<p>Here is an extendDeep function based off of the angular.extend function. If you add this to your $scope, you would then be able to call </p>\n\n<pre><code>$scope.meta = $scope.extendDeep(ajaxResponse1.myMeta, ajaxResponse2.defaultMeta);\n</code></pre>\n\n<p>and get the answer you are looking for.</p>\n\n<pre><code>$scope.extendDeep = function extendDeep(dst) {\n  angular.forEach(arguments, function(obj) {\n    if (obj !== dst) {\n      angular.forEach(obj, function(value, key) {\n        if (dst[key] &amp;&amp; dst[key].constructor &amp;&amp; dst[key].constructor === Object) {\n          extendDeep(dst[key], value);\n        } else {\n          dst[key] = value;\n        }     \n      });   \n    }\n  });\n  return dst;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In the new version of Angularjs they added merge function which will perform the deep copy.</p>\n\n<p>For the older versions, I have created my custom function by copying the code of merge function from new version of Angularjs. Below is the code for the same,</p>\n\n<pre><code>function merge(dst){\n  var slice = [].slice;\n  var isArray = Array.isArray;\n  function baseExtend(dst, objs, deep) {\n    for (var i = 0, ii = objs.length; i &lt; ii; ++i) {\n      var obj = objs[i];\n      if (!angular.isObject(obj) &amp;&amp; !angular.isFunction(obj)) continue;\n      var keys = Object.keys(obj);\n      for (var j = 0, jj = keys.length; j &lt; jj; j++) {\n        var key = keys[j];\n        var src = obj[key];\n        if (deep &amp;&amp; angular.isObject(src)) {\n          if (!angular.isObject(dst[key])) dst[key] = isArray(src) ? [] : {};\n          baseExtend(dst[key], [src], true);\n        } else {\n          dst[key] = src;\n        }\n      }\n    }\n\n    return dst;\n  }\n  return baseExtend(dst, slice.call(arguments, 1), true);\n}\n</code></pre>\n\n<p>Hope this will help someone who is wondering why angular.merge is not working in older versions.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Normally to shallow copy objects I would use <code>angular.extend()</code></p>\n\n<p>Here's an example of that:</p>\n\n<pre><code>var object1 = {\n  \"key\": \"abc123def456\",\n  \"message\": {\n    \"subject\": \"Has a Question\",\n    \"from\": \"example1@example.com\",\n    \"to\": \"example2@example.com\"\n   }\n};\n\nvar object2 = {\n  \"key\": \"00700916391\"\n};\n\nconsole.log(angular.extend({}, object1, object2));\n</code></pre>\n\n<p>Would give us:</p>\n\n<pre><code>{\n \"key\": \"00700916391\",\n \"message\": {\n   \"subject\": \"Has a Question\",\n   \"from\": \"example1@example.com\",\n   \"to\": \"example2@example.com\"\n  }\n}\n</code></pre>\n\n<p>But what if I wanted to merge objects so that parent keys are not over written by child objects:</p>\n\n<pre><code>var object1 = {\n  \"key\": \"abc123def456\",\n  \"message\": {\n    \"subject\": \"Has a Question\",\n    \"from\": \"example1@example.com\",\n    \"to\": \"example2@example.com\"\n   }\n};\n\nvar object2 = {\n  \"key\": \"00700916391\",              //Overwrite me\n  \"message\": {                       //Dont overwrite me!\n    \"subject\": \"Hey what's up?\",     //Overwrite me\n    \"something\": \"something new\"     //Add me\n   }\n};\n\nconsole.log(merge(object1, object2));\n</code></pre>\n\n<p>Would give us:</p>\n\n<pre><code>{\n \"key\": \"00700916391\",\n \"message\": {\n   \"subject\": \"Hey what's up?\",\n   \"from\": \"example1@example.com\",\n   \"to\": \"example2@example.com\",\n   \"something\": \"something new\"\n  }\n}\n</code></pre>\n\n<ul>\n<li><p>Is there an Angular function that already does a deep merge that I am not aware of?</p></li>\n<li><p>If not is there a native way to do this in javascript recursively for n levels deep?</p></li>\n</ul>\n",
            "last_activity_date": 1426142803,
            "question_id": 17242927,
            "score": 12,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "deep merge objects with AngularJS"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>What is meant by <code>function($)</code>?</p>\n</blockquote>\n\n<p>Passing <code>$</code> as an argument to your function makes it possible for you to use the <code>jQuery</code> shorthand object, which, as you clearly identified, is just an alias of the <code>jQuery</code> object (also take a look at <a href=\"http://api.jquery.com/jQuery.noConflict/\" rel=\"nofollow\"><code>jQuery.noConflict()</code></a>).</p>\n\n<blockquote>\n  <p>Why should I include <code>window</code>, <code>document</code> and <code>undefined</code> as arguments of <code>function($)</code>?\n  I have a crude idea why window and document have been included in the argument of the anonymous function that wraps the plugin (I don't know what else to call it) because it is given in the comments that it sorta kinda shortens the execution time. But how does that work? Any argument of the said anonymous function wrapping the plugin gets passed on to where? </p>\n</blockquote>\n\n<p>Passing <code>window</code> and <code>document</code> as local variables <em>kinda shortens the execution time</em> because it is easier and faster to access a local variable than a global variable, because <a href=\"http://jonraasch.com/blog/10-javascript-performance-boosting-tips-from-nicholas-zakas\" rel=\"nofollow\">local variables are first in the chain</a>. Which sort of answers your second question: the arguments get passed inside the anonymous function <strong>scope</strong>, which is the whole point of you making an anonymous function anyways: to create a closure.</p>\n\n<p>Those arguments are passed at the end of your function, where you see the last parenthesis. The variable <code>window</code> in your closure refers to the <code>global window</code> because you passed it at the end.</p>\n\n<p>The reason why you pass <code>undefined</code> is because <code>undefined</code> is a Javascript confusing mess. Basically, <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/undefined\" rel=\"nofollow\"><strong><code>undefined</code> is a property of the <em>global object</em></strong></a>, that is, it is a variable, a <em>singleton</em>. <strong>It is not protected</strong>, that means that can be overridden. It means you could have an <code>undefined</code> which is actually defined.</p>\n\n<p>By passing <code>undefined</code> you make sure that, even if anyone messed with <code>undefined</code> in the global scope (never trust the global scope! :)), you still get a correct <code>undefined</code>.</p>\n\n<p>Also, the same performance reasons apply to <code>undefined</code>.</p>\n\n<blockquote>\n  <p>If I do it, how do I access the actual window and document objects?</p>\n</blockquote>\n\n<p>You are already accessing them, because you are passing them to your function. And as such you are able to manipulate them.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>When you write a function like:</p>\n\n<pre><code>(function (foo, bar) {\n    return foo.getElementById(bar);\n})(document, \"myElement\")\n</code></pre>\n\n<p>then the function is immediately called with arguments <code>document</code> and <code>\"myElement\"</code> for parameters <code>foo</code> and <code>bar</code>. Therefore, inside the function, <code>foo.getElementById(bar)</code> is equivalent to <code>document.getElementById(\"myElement\")</code>.</p>\n\n<p>Similarly, in your plugin example, you are immediately calling the function with the arguments <code>jQuery, document, window</code>.</p>\n\n<blockquote>\n  <p>What indeed is meant by <code>function($)</code>?</p>\n</blockquote>\n\n<p>The <code>$</code> simply represents a reference to a <code>jQuery</code> object that is passed in to the wrapper function. Later, when the anonymous function is called with <code>(jQuery, window, document)</code>, the <code>$</code> reference inside the function references the <code>jQuery</code> object. This is done for a number of reasons, not least of which is that <code>$</code> is quicker to type. It also allows the user to apply your plugin in wrapper to a <em>particular instance</em> of <code>jQuery</code>, produced perhaps by <code>jQuery.noConflict()</code>.</p>\n\n<blockquote>\n  <p>Why should I include <code>window</code>, <code>document</code> and <code>undefined</code> as arguments of <code>function($)</code>?</p>\n</blockquote>\n\n<p>You don't <em>need</em> to include these. The original author's reasoning is that assigning function-local variables to reference these will shorten the time it takes to resolve these variables. I assert that the savings are negligible; I personally wouldn't bother unless I used <em>a lot</em> of references to <code>window</code> and/or <code>document</code>.</p>\n\n<p>As for <code>undefined</code>, the original author's purpose in including this is to ensure that someone hasn't altered the <code>undefined</code> global variable in EcmaScript 4 (edit: actually ECMAScript 3 -- version 4 never made it) or earlier. Again, I can't envision this problem cropping up. If you're truly worried that this could be a problem, just include something like this in your function:</p>\n\n<pre><code>if(typeof undefined !== \"undefined\") {\n    undefined = void 0;\n}\n</code></pre>\n\n<blockquote>\n  <p>If I do it, how do I access the actual <code>window</code> and <code>document</code> objects?</p>\n</blockquote>\n\n<p>All you have to do is make sure that the function call at the end of your anonymous function passes in the actual (jQuery, window, document) parameters. Or, don't include the <code>window</code> and <code>document</code> arguments in your function signature. Either way, you will be referring to the <em>actual</em> objects, regardless of the level of indirection.</p>\n\n<blockquote>\n  <p><code>undefined</code> what, and why?</p>\n</blockquote>\n\n<p><code>undefined</code> is a global variable of type \"undefined\". Fields that have not been initialized are exactly equal (===) to undefined. It allows the programmer to differentiate between a deliberately null value and a simple uninitialized one. In ECMAScript 5 and later, <code>undefined</code> is read only. Prior to that, it is possible that other code could modify the value of <code>undefined</code>. You can <em>always</em> get the true value <code>undefined</code> with the expression <code>void 0</code>... as in <code>myUndefinedVar = void 0;</code>.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Before answering in detail let me note that unlike other programming languages, javascript is a bit odd for two reasons: first, it was created in haste this meant lots of things didn't get refined or implemented well. Second it was adopted by the internet very, very quickly and Microsoft copied the language very quickly and very accurately (including the bugs in the language). The result of this is that trying to correct mistakes in the design of the language was hard and/or impossible because they didn't want to break compatibility with existing websites.</p>\n\n<p>Now to go into the details:</p>\n\n<h2>What indeed is meant by function($)</h2>\n\n<p>Nothing special. In javascript function and variable names are allowed to use the letters <code>a-z</code> including uppercase, the numbers <code>0-9</code> and the symbols <code>$</code> and <code>_</code>. There are no other restrictions on how they can be used. Though there are guidelines and conventions, some mentioned by the language spec itself, some grew with the programming community.</p>\n\n<p>Therefore, <code>$</code> is just a variable name. There is no difference between:</p>\n\n<pre><code>function foo ($) {alert($)}\n</code></pre>\n\n<p>and</p>\n\n<pre><code>function foo (x) {alert(x)}\n</code></pre>\n\n<p>It's just the name chosen for the parameter. However, the spec strongly suggests that <code>$</code> shouldn't be used by code written by humans. It's ok for computer generated code (a coffeescript compiler for example) but not ok for regular scripts. On the other hand it is strongly encouraged in scripts that use jQuery that <code>$</code> always refer to the jQuery object (which incidentally happens to also be a function, that's fine in javascript since functions are objects).</p>\n\n<p>Since you're writing jQuery the meaning of <code>function ($)</code> is an anonymous function that accepts one argument and the argument it expects is a jQuery object.</p>\n\n<h2>Why should I include window, document and undefined as arguments of function($)?</h2>\n\n<p>Arguably, one of the design mistakes in javascript is the lack of support for constants and/or immutable/protected variables/objects. As such, <code>window</code>, <code>document</code> and <code>undefined</code> are actually regular global variables - anyone can reassign them to anything.</p>\n\n<p>The following is crazy but valid javascript code:</p>\n\n<pre><code>window = 42;\n</code></pre>\n\n<p>No sane programmer would do this but it's possible none the less. The jQuery developers were very concerned by this and so jQuery tries its best to pass the real <code>window</code>, <code>document</code> and <code>undefined</code> into plugins in case anyone is crazy enough to do crazy things.</p>\n\n<p>One of the features of javascript is that function arguments override global variables. So if any of the above variables have been hijacked by someone else they are reassigned to their proper names in the function.</p>\n\n<h2>If I do it, how do I access the actual window and document objects?</h2>\n\n<p>You are expected to pass the correct <code>window</code>, <code>document</code> and <code>undefined</code> as arguments named <code>window</code>, <code>document</code> and <code>undefined</code> into the function. Doing anything else means that you no longer have access to the <code>window</code>, <code>document</code> and <code>undefined</code> objects.</p>\n\n<p>There are crazy workarounds that you can do to try go grab a hold of the <code>window</code> object (also know as the global object) and from there you can get a hold of <code>document</code>. The jQuery code is actually one workaround to get back <code>undefined</code> in case it has been hijacked.</p>\n\n<h2>undefined what, and why?</h2>\n\n<p>As you correctly stated. <code>undefined</code> is the value javascript gives to things that are declared but have no values assigned to them. But in javascript <code>undefined</code> is just a global variable. If you don't touch it it initially has the value of <code>undefined</code> (circular logic, I know). But it can be modified:</p>\n\n<pre><code>undefined = 'boom!';\n</code></pre>\n\n<p>And henceforth all undefined variables will have the value of <code>\"boom!\"</code>. The latest spec of the javascript language actually disallows reassigning to undefined but as of today only Safari does this.</p>\n\n<p>Again, no sane programmer will do this.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The inclusion of an identifier in a parameter list is effectively the same as declaring the variable in the function body, e.g.</p>\n\n<pre><code>function bar(foo) {\n}\n</code></pre>\n\n<p>is equivalent to </p>\n\n<pre><code>function bar(foo) {\n  var foo;\n}\n</code></pre>\n\n<p>but of course you just do the first if you want to pass a value to <em>foo</em>.</p>\n\n<p>The primary reason for doing:</p>\n\n<pre><code>(function($) {\n    // use $ here instead of jQuery\n}(jQuery));\n</code></pre>\n\n<p>is that when jQuery was released, Prototype.js had already been using \"$\" as an identifier for its main function for some time. The above pattern allows jQuery and prototype.js to be used in the same page, using \"$\" as an identifier for different things.</p>\n\n<p>Passing in <em>document</em> and <em>window</em> is, at best, a micro optimisation that has little benefit. It offers no protection against them being assigned different values than expected. Just don't bother and use <em>window</em> and <em>document</em> inside the function as global identifiers.</p>\n\n<p>Including <em>undefined</em> in the parameters and not passing it a value is not a sensible way of ensuring <em>undefined</em> really is undefined as it can still be affected if a value is accidentally passed. A safer way is:</p>\n\n<pre><code>(function() {\n    var undefined;\n    ...\n}());\n</code></pre>\n\n<p>Now you are <strong>certain</strong> that <em>undefined</em> in the scope of the function really is undefined. Or if you want an assignment:</p>\n\n<pre><code>(function() {\n    var undefined = void 0;\n    ...\n}());\n</code></pre>\n\n<p>But that is just extra typing.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Honestly, I didn't know how to make the title shorter.</p>\n\n<p>I learnt how to write a jQuery plugin by studying the source of <a href=\"http://slidesjs.com/\">SlidesJS</a> plugin. When I encountered something new, I just asked my good friend <strong>Google</strong> and most of the times, got a satisfactory answer. Honestly though, I never made much effort. All I know is that <code>$</code> is (probably) a shorthand jQuery object constructor and that <code>$()</code> and <code>jQuery()</code> are the same thing provided jQuery is included.</p>\n\n<p>Recently, though, I tried to understand the science behind jQuery and how to write a <strong>good</strong> jQuery plugin. I came across a very good <a href=\"http://coding.smashingmagazine.com/2011/10/11/essential-jquery-plugin-patterns/\">article</a> in which the author listed several <em>templates</em> for creating a jQuery plugin. Since the rest were too complex for me to understand, I liked the first one: <em>A Lightweight Start</em>. Now, here is the code for the said template.</p>\n\n<pre><code>/*!\n * jQuery lightweight plugin boilerplate\n * Original author: @ajpiano\n * Further changes, comments: @addyosmani\n * Licensed under the MIT license\n */\n\n\n// the semi-colon before the function invocation is a safety \n// net against concatenated scripts and/or other plugins \n// that are not closed properly.\n;(function ( $, window, document, undefined ) {\n\n    // undefined is used here as the undefined global \n    // variable in ECMAScript 3 and is mutable (i.e. it can \n    // be changed by someone else). undefined isn't really \n    // being passed in so we can ensure that its value is \n    // truly undefined. In ES5, undefined can no longer be \n    // modified.\n\n    // window and document are passed through as local \n    // variables rather than as globals, because this (slightly) \n    // quickens the resolution process and can be more \n    // efficiently minified (especially when both are \n    // regularly referenced in your plugin).\n\n    // Create the defaults once\n    var pluginName = 'defaultPluginName',\n        defaults = {\n            propertyName: \"value\"\n        };\n\n    // The actual plugin constructor\n    function Plugin( element, options ) {\n        this.element = element;\n\n        // jQuery has an extend method that merges the \n        // contents of two or more objects, storing the \n        // result in the first object. The first object \n        // is generally empty because we don't want to alter \n        // the default options for future instances of the plugin\n        this.options = $.extend( {}, defaults, options) ;\n\n        this._defaults = defaults;\n        this._name = pluginName;\n\n        this.init();\n    }\n\n    Plugin.prototype.init = function () {\n        // Place initialization logic here\n        // You already have access to the DOM element and\n        // the options via the instance, e.g. this.element \n        // and this.options\n    };\n\n    // A really lightweight plugin wrapper around the constructor, \n    // preventing against multiple instantiations\n    $.fn[pluginName] = function ( options ) {\n        return this.each(function () {\n            if (!$.data(this, 'plugin_' + pluginName)) {\n                $.data(this, 'plugin_' + pluginName, \n                new Plugin( this, options ));\n            }\n        });\n    }\n\n})( jQuery, window, document );\n</code></pre>\n\n<p>I have included the comments so as to refer to them in my questions.</p>\n\n<p>I have a crude idea why <code>window</code> and <code>document</code> have been included in the argument of the anonymous function that wraps the plugin <em>(I don't know what else to call it)</em> because it is given in the comments that it sorta kinda shortens the execution time. But how does that work? Any argument of the said anonymous function wrapping the plugin gets passed on to where? And how are these addressed in the plugin?</p>\n\n<p>Normally, I would do <code>$(window).resize(function(){})</code> but that doesn't work in this case. If I do <code>console.log(window)</code> inside the Plugin function, it says 'undefined'.</p>\n\n<p>Which brings me to the other question which is: what is <strong>undefined</strong>? Isn't it a <strong>data type</strong> that is assigned to an <strong>object</strong> that isn't defined in the scope? How can it be passed as an argument? Don't the arguments have to be objects? There are a few lines written about this in the comments, but I don't understand a word of it: &lt;<em>so we can ensure that its value is truly undefined</em>> whaaa?</p>\n\n<p>To sum up:</p>\n\n<ul>\n<li>What indeed is meant by <code>function($)</code>?</li>\n<li>Why should I include <code>window</code>, <code>document</code> and <code>undefined</code> as arguments of <code>function($)</code>?</li>\n<li>If I do it, how do I access the actual <code>window</code> and <code>document</code> objects?</li>\n<li><code>undefined</code> what, and why?</li>\n</ul>\n\n<hr>\n\n<p>Please go easy on me. I never studied programming language as a subject for the express purpose of writing applications. I studied basic C for writing hardware oriented low-level routines for tiny core microcontrollers and that's just about it. I did learn C++ extensively and a bit of Java on my own. Just so you'd know what to expect.</p>\n",
            "last_activity_date": 1364959818,
            "question_id": 15777519,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "jquery-plugins",
                "boilerplate",
                "dollar-sign"
            ],
            "title": "Using &#39;window&#39;, &#39;document&#39; and &#39;undefined&#39; as arguments in anonymous function that wraps a jQuery plugin"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Use <strong>prop('checked', true / false)</strong> instead of removeAttr</p>\n\n<pre><code>$('input[name=foo]').prop('checked', true);\n$('input[name=foo]').prop('checked', false);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                }
            ],
            "body": "<p>I have a problem finding reason for the following jquery/checkbox behaviour.</p>\n\n<pre><code>$( this.obj + ' table.sgrid-content &gt; thead &gt; tr &gt; th &gt; input.select_all' ).on( 'click' , {grid:this} , function(event){\n\nvar grid = event.data.grid;\n\nif( $(this).is(':checked') ){\n\n    $( grid.obj + ' table.sgrid-content &gt; tbody &gt; tr &gt; td &gt; input.select ' ).attr('checked','checked');\n    $( grid.obj + ' .sgrid-content &gt; tbody &gt; tr &gt; td &gt; input.select ' ).parents('tr').addClass('ui-state-highlight');\n\n} else {\n\n    $( grid.obj + ' table.sgrid-content &gt; tbody &gt; tr &gt; td &gt; input.select ' ).removeAttr('checked');\n    $( grid.obj + ' table.sgrid-content &gt; tbody &gt; tr &gt; td &gt; input.select ' ).parents('tr').removeClass('ui-state-highlight');\n\n}\n\n});\n</code></pre>\n\n<p>The code is intended to work as follows:\n - click on input.select_all triggers the event\n - if input.select_all is checked: add attribute checked to all checkboxes marked as .select within table.sgrid-content\n - if not: remove the 'checked' attribute from all input.select items.</p>\n\n<p>Yet another simple grid function. And it works. The weird part is, it works only once. By that I mean, you can select all the checkboxes and deselect them. After that operation \"Select all\" function stops working. </p>\n\n<p>Another weird thing is, when i check dom elements with firebug they all become checked='checked' attr as they should, but they display and behave as they were not checked. </p>\n\n<p>Selectors work as they should. The code part with adding/removing <em>ui-state-highlight</em> works all the time.</p>\n\n<p>Word of explenation:\n<em>grid</em> - is the object that I pass to get grid.obj ( basically ID of a ceratain div )</p>\n\n<p>Please give me your opinion.</p>\n",
            "last_activity_date": 1380310292,
            "question_id": 15266533,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "checkbox",
                "checked"
            ],
            "title": "jquery attr(&#39;checked&#39;,&#39;checked&#39;) works only once"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This works just as well: <a href=\"http://jsfiddle.net/maniator/ge59E/3/\" rel=\"nofollow\">http://jsfiddle.net/maniator/ge59E/3/</a></p>\n\n<pre><code>var reg = new RegExp(\" \",\"g\"); //&lt;&lt; just look for a space.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>str.replace(/\\s/g,'')\n</code></pre>\n\n<p>Works for me.</p>\n\n<p><code>jQuery.trim</code> has the following hack for IE, although I'm not sure what versions it affects:</p>\n\n<pre><code>// Check if a string has a non-whitespace character in it\nrnotwhite = /\\S/\n\n// IE doesn't match non-breaking spaces with \\s\nif ( rnotwhite.test( \"\\xA0\" ) ) {\n    trimLeft = /^[\\s\\xA0]+/;\n    trimRight = /[\\s\\xA0]+$/;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>\"foo is bar\".replace(/ /g, '')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I would recommend you to use the literal notation, and using the <code>\\s</code> character class:</p>\n\n<pre><code>//..\nreturn str.replace(/\\s/g, '');\n//..\n</code></pre>\n\n<p>There's a difference between using the character class <code>\\s</code> and just <code>' '</code>,  this will match a lot of more white-space characters, for example <code>'\\t\\r\\n'</code> etc.., looking for <code>' '</code> will replace only the ASCII 32 blank space.</p>\n\n<p>The <code>RegExp</code> constructor is useful when you want to <em>build</em> a dynamic pattern, in this case you don't need it.</p>\n\n<p>Moreover, as you said, <code>\"[\\s]+\"</code> didn't worked with the <code>RegExp</code> constructor, that's because you are passing a string, and you should \"double escape\" the back-slashes, otherwise they will be interpreted as character escapes inside the string (e.g.: <code>\"\\s\" === \"s\"</code> (unknown escape)).</p>\n",
                    "is_accepted": true,
                    "score": 47
                }
            ],
            "body": "<p>So i'm writing a tiny little plugin for JQuery to remove spaces from a string. <a href=\"http://jsfiddle.net/rlemon/ge59E/\">see here</a></p>\n\n<pre><code>(function($) {\n    $.stripSpaces = function(str) {\n        var reg = new RegExp(\"[ ]+\",\"g\");\n        return str.replace(reg,\"\");\n    }\n})(jQuery);\n</code></pre>\n\n<p>my regular expression is currently <code>[ ]+</code> to collect all spaces. \nThis works.. however It doesn't leave a good taste in my mouth.. \nI also tried <code>[\\s]+</code> and <code>[\\W]+</code> but neither worked.. </p>\n\n<p>There has to be a better (more concise) way of searching for only spaces. </p>\n",
            "last_activity_date": 1418324437,
            "question_id": 7151159,
            "score": 12,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Javascript Regular Expression Remove Spaces"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Just inline it?</p>\n\n<pre><code>&lt;script type='text/javascript'&gt;\nalert(\"funload\");\n&lt;/script&gt;\n</code></pre>\n\n<p>Or put it in a function and call it immediately. Try to put it to the topmost of your page, however since the DOM isnt loaded yet you cant get any other elements.</p>\n\n<p>What is it you want to do?</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>just insert a &lt;script&gt; tag wherever inside the body you want it to run. it will be executed as soon as the parser reads it, as long as it doesn't reference an element not yet created</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Why not Use the <code>ClientScriptManager.RegisterClientScriptBlock Method</code>\n<a href=\"http://msdn.microsoft.com/en-us/library/btf44dc9.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/btf44dc9.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use window.onpaint for such purpose like :</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function preloadFunc()\n    {\n        alert(\"PreLoad\");\n    }\n    window.onpaint = preloadFunc();\n&lt;/script&gt;\n</code></pre>\n\n<p>I hope it helps you....</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>try to put your script in head section of the page:</p>\n\n<pre><code>&lt;head&gt;\n  &lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n        alert(\"funinit\");\n        alert(\"funRender\");\n  &lt;/script&gt;\n&lt;/head&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>inside of your head tags, add your script starting with an if statement instead of a function and force it to be always true.</p>\n\n<pre><code>If (1&lt;2)\n{\n    Your code;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I have working in asp.net web application. Here I need to run javascript before page load.</p>\n\n<p>I have gone through </p>\n\n<pre><code>&lt;body oninit=\"funinit();\" onprerender=\"funRender();\" onload=\"funload();\"&gt;\n\n\n&lt;/body&gt;\n\n &lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n    function funinit() {\n        alert(\"funinit\");\n    }\n    function funload() {\n        alert(\"funload\");\n    }\n    function funRender() {\n        alert(\"funRender\");\n    }      \n\n&lt;/script&gt;\n</code></pre>\n\n<p>here only funload() is working.\nplz give me any solution to run script before page load.</p>\n",
            "last_activity_date": 1404276294,
            "question_id": 6944037,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "asp.net"
            ],
            "title": "How to run java script code before page load?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><em>usage</em> and <strong><a href=\"http://jsbin.com/ecede3/3\">demo</a></strong></p>\n\n<pre><code>dojo.query(\"body\").delegate(selector, eventName, fn);\n</code></pre>\n\n<p><em>code - rewrites the original mixin-like <code>delegate</code> function of dojo</em></p>\n\n<pre><code>dojo.provide(\"dojox.NodeList.delegate\");\ndojo.require(\"dojo.NodeList-traverse\");\ndojo.extend(dojo.NodeList, {\n    delegate: function ( selector,eventName, fn) {\n        return this.connect(eventName, function (evt) {\n            var closest = dojo.query(evt.target).closest(selector, this);\n            if (closest.length) {\n                fn.call(closest[0], evt);\n            }\n        }); //dojo.NodeList\n    }\n});\n</code></pre>\n\n<p><em>see <a href=\"http://bugs.dojotoolkit.org/ticket/11459\">ticket#11459</a></em>  </p>\n\n<p>You can use this more generally like jQuery <code>delegate</code>, not just as <code>live</code>, because <code>live</code> is basically a <code>delegate</code> on the document level.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I think dojo.behavior performs similar function</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just use </p>\n\n<pre><code>on(document, \"xxx\", function(){})\n</code></pre>\n\n<p>eg. in jquery: <code>$(\".className\").live(function(){})</code></p>\n\n<p>in dojo, it is evquilant to : <code>on(document, \".className\", function(){})</code></p>\n\n<p>Actually that is what jquery.live does, it bind the event to the document to achieve the function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is the Dojo equivalent to jQuery .live()?<br>\n<a href=\"http://api.jquery.com/live/\">http://api.jquery.com/live/</a>  </p>\n\n<p>The only solution I found was to dojo.disconnect the event handlers and re-connect them once a dynamic piece of markup was added to the page.</p>\n",
            "last_activity_date": 1368173333,
            "question_id": 5083540,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "dojo",
                "live"
            ],
            "title": "What is the Dojo equivalent to jQuery .live()?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>It's simple:</p>\n\n<pre><code>photo[':original'].id\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Member_Operators\">Dot/bracket notation</a></p>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<p>I'm using a third party tool that POSTs a JSON responce.  It works great, but one of the keys I need to use has a colon in it.  For the life of me I have no idea how to select this object in javascript.</p>\n\n<p>For exsample:</p>\n\n<pre><code>{\n  \"photo\": {\n    \"reg\": {\n      \"id\": 50\n    },\n    \"thumb\": {\n      \"id\": 51\n    },\n    \":original\": {\n      \"id\": 53\"\n    }\n  }\n}\n</code></pre>\n\n<p>How do I select <code>photo.:original.id</code>?  I get syntax errors when I leave the colon in, and <code> undefined </code> when I try dropping the colon.</p>\n\n<p>Any help here would be awesome.</p>\n\n<p>Thank you.</p>\n",
            "last_activity_date": 1297108153,
            "question_id": 4925760,
            "score": 12,
            "tags": [
                "javascript",
                "json",
                "node.js"
            ],
            "title": "Selecting a JSON object with a colon in the key"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>try not to Destroy/Create, but <code>.trigger(\"reloadGrid\");</code></p>\n\n<p><strong>UPD:</strong>: try to pass loadonce:false to grid creation params</p>\n\n<p><strong>UPD2:</strong>: Seemed like jQgrid cant operate with column changes \"On fly\". Try to destroy first grid and create another one instead of it. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can do about following</p>\n\n<pre><code>var counter=1; // to be able to click more then one time\n$(\"#add_column\").click(function() {\n    $(\"#list\").jqGrid('GridUnload');\n\n    col_names.push('New'+counter);\n    col_model.push({name: 'test'+counter, index: 'test'+counter, width: 100});\n    counter++;\n\n    createGrid();\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>it's an addition for previous my question about adding columns into jqGrid-based table. Here my new js-code:</p>\n\n<pre><code>var col_names = ['First', 'Second', 'Third', 'Fourth', 'Fifth'];\nvar col_model = [\n      {name:'invid', index:'invid', width:100}, \n      {name:'invdate', index:'invdate', width:90}, \n      {name:'amount', index:'amount', width:80, align:'right'}, \n      {name:'tax', index:'tax', width:80, align:'right'}, \n      {name:'total', index:'total', width:80, align:'right'}, \n];\n\nfunction createGrid()\n{\n  var handle = $(\"#list\").jqGrid({\n    url:'data.xml',\n    datatype: 'xml',\n    mtype: 'GET',\n    colNames: col_names,\n    colModel : col_model,\n  }); \n}\n</code></pre>\n\n<p>Now I call <code>createGrid();</code> after document is loaded, everything works fine. Now I want to add a new column (with empty data) and reload jqGrid:</p>\n\n<pre><code>  $(\"#add_column\").click(function() {\n        $('#list').trigger(\"DestroyGrid\"); // Also tried UnloadGrid\n\n        col_names.push('New');\n        col_model.push({name: 'test', index: 'test', width: 100});\n\n        createGrid(); // And recreate grid\n  });\n</code></pre>\n\n<p>But nothing happens, why?</p>\n\n<hr>\n\n<p><strong>UPD</strong></p>\n\n<pre><code>  $(\"#add_column\").click(function() {\n        col_names.push('New');\n        col_model.push({name: 'test', index: 'test', width: 100});\n\n        $('#list').trigger(\"reloadGrid\");\n  });\n</code></pre>\n\n<p>The same situation</p>\n\n<hr>\n\n<p><strong>UPD2</strong>\nI tried these:</p>\n\n<pre><code>ajaxGridOptions: {cache: false},\nloadonce:false\n</code></pre>\n\n<p>Didn't change the situation.</p>\n",
            "last_activity_date": 1290262319,
            "question_id": 4232430,
            "score": 12,
            "tags": [
                "javascript",
                "table",
                "jqgrid",
                "grid"
            ],
            "title": "jqGrid reload grid"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I think given XML and JSON are two well defined structures, most of the libraries should be able to do the conversion seamlessly.</p>\n\n<p>What it really comes down to is any special features you may need (like tag ignoring), of if you want a library that is going to be compatible with whatever JS framework you are using (if any).</p>\n\n<p>My recommendation is probably anything on the first page of Google (give or take)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a nice xml2json and json2xml converter:</p>\n\n<ul>\n<li><a href=\"http://goessner.net/download/prj/jsonxml/\" rel=\"nofollow\">http://goessner.net/download/prj/jsonxml/</a>\n<ul>\n<li>Related tutorial: <a href=\"http://www.xml.com/pub/a/2006/05/31/converting-between-xml-and-json.html\" rel=\"nofollow\">http://www.xml.com/pub/a/2006/05/31/converting-between-xml-and-json.html</a></li>\n</ul></li>\n</ul>\n\n<p>Here's another one:</p>\n\n<ul>\n<li><a href=\"http://www.kawa.net/works/js/xml/objtree-e.html\" rel=\"nofollow\">http://www.kawa.net/works/js/xml/objtree-e.html</a></li>\n</ul>\n\n<p>Depending on your needs, you might be able to use a standard parser (see <a href=\"http://www.w3schools.com/XML/tryit.asp?filename=tryxml_parsertest2\" rel=\"nofollow\">http://www.w3schools.com/XML/tryit.asp?filename=tryxml_parsertest2</a>) and xpath (http://www.w3schools.com/xpath/default.asp) - here's an example:</p>\n\n<ul>\n<li><a href=\"http://snippets.dzone.com/posts/show/5272\" rel=\"nofollow\">http://snippets.dzone.com/posts/show/5272</a></li>\n</ul>\n\n<p>and a few nice tutorials:</p>\n\n<ul>\n<li><a href=\"http://www.nczonline.net/blog/2009/03/17/xpath-in-javascript-part-1/\" rel=\"nofollow\">http://www.nczonline.net/blog/2009/03/17/xpath-in-javascript-part-1/</a></li>\n<li><a href=\"https://developer.mozilla.org/en/introduction_to_using_xpath_in_javascript\" rel=\"nofollow\">https://developer.mozilla.org/en/introduction_to_using_xpath_in_javascript</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The xml2json javascript file from <a href=\"https://bitbucket.org/surenrao/xml2json\" rel=\"nofollow\">https://bitbucket.org/surenrao/xml2json</a> is all you need to do this.</p>\n\n<p>Here's the download link for quick download: <a href=\"https://bitbucket.org/surenrao/xml2json/get/0e0989dfe48e.zip\" rel=\"nofollow\">https://bitbucket.org/surenrao/xml2json/get/0e0989dfe48e.zip</a></p>\n\n<p>Once included in your project, here's some sample code to get you started:</p>\n\n<pre><code>var xmlStr = \"&lt;root&gt;&lt;person&gt;&lt;name&gt;Bob Dylan&lt;/name&gt;&lt;/person&gt;&lt;/root&gt;\";\nvar jsObj = X2J.parseXml(xmlStr);\nvar result = jsObj[0].root[0].person[0].name[0].jValue; //Bob Dylan\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>parses XML and returns a javascript object w/ a scheme that corresponds the xml. xml siblings w/ the same name are collapsed into arrays. nodes with names that can be found in the arrayTags parameter (array of tag name strings) always yeld arrays even in case of only one tag occurrence. arrayTags can be omitted. text nodes w/ only spaces are discarded. use console.log(parseXml(myxml)) to explore the output</p>\n\n<pre><code>parseXml(xml, arrayTags)\n{\n    var dom = null;\n    if (window.DOMParser)\n    {\n        dom = (new DOMParser()).parseFromString(xml, \"text/xml\");\n    }\n    else if (window.ActiveXObject)\n    {\n        dom = new ActiveXObject('Microsoft.XMLDOM');\n        dom.async = false;\n        if (!dom.loadXML(xml))\n        {\n            throw dom.parseError.reason + \" \" + dom.parseError.srcText;\n        }\n    }\n    else\n    {\n        throw \"cannot parse xml string!\";\n    }\n\n    function isArray(o)\n    {\n        return Object.prototype.toString.apply(o) === '[object Array]';\n    }\n\n    function parseNode(xmlNode, result)\n    {\n        if(xmlNode.nodeName == \"#text\" &amp;&amp; xmlNode.nodeValue.trim() == \"\")\n        {\n            return;\n        }\n\n        var jsonNode = {};\n        var existing = result[xmlNode.nodeName];\n        if(existing)\n        {\n            if(!isArray(existing))\n            {\n                result[xmlNode.nodeName] = [existing, jsonNode];\n            }\n            else\n            {\n                result[xmlNode.nodeName].push(jsonNode);\n            }\n        }\n        else\n        {\n            if(arrayTags &amp;&amp; arrayTags.indexOf(xmlNode.nodeName) != -1)\n            {\n                result[xmlNode.nodeName] = [jsonNode];\n            }\n            else\n            {\n                result[xmlNode.nodeName] = jsonNode;\n            }\n        }\n\n        if(xmlNode.attributes)\n        {\n            var length = xmlNode.attributes.length;\n            for(var i = 0; i &lt; length; i++)\n            {\n                var attribute = xmlNode.attributes[i];\n                jsonNode[attribute.nodeName] = attribute.nodeValue;\n            }\n        }\n\n        var length = xmlNode.childNodes.length;\n        for(var i = 0; i &lt; length; i++)\n        {\n            parseNode(xmlNode.childNodes[i], jsonNode);\n        }\n    }\n\n    var result = {};\n    if(dom.childNodes.length)\n    {\n        parseNode(dom.childNodes[0], result);\n    }\n\n    return result;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I am looking for a JavaScript library that parses an XML string and converts it to a JavaScript object. What are some good ones?</p>\n",
            "last_activity_date": 1382353594,
            "question_id": 4200913,
            "score": 12,
            "tags": [
                "javascript",
                "xml",
                "json"
            ],
            "title": "XML to JavaScript Object"
        }
    ]
}
