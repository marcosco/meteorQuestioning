{
    "items": [
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can override the styles of GWT by using the keyword <code>!important</code> in all your css of the html files, for example, if one of your html file contains this css:</p>\n\n<pre><code>background-color:#000000;\n</code></pre>\n\n<p>Then you should write it like this:</p>\n\n<pre><code>background-color:#000000 !important;\n</code></pre>\n\n<p>Do the same for all your styles in html files.</p>\n\n<p>Note that using <code>!important</code> is not the best way, if you can find any <em>better</em> alternatives you should go for them first.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Like Sarfaz said - <code>!important</code> should be your last resort as it kind of defeats the whole concept of <strong>Cascading</strong> Style Sheets.</p>\n\n<p>Anyway, in GWT, in order to easily override the core GWT styles contained in the theme you selected, you should locate your module file (the one that has a file name ending on *.gwt.xml), then locate the line where you declare your theme and put your custom/whatever stylesheet <em>after</em> it, like this:</p>\n\n<pre><code>&lt;inherits name='com.google.gwt.user.theme.standard.Standard' /&gt;\n&lt;stylesheet src=\"CustomStylesheet.css\" /&gt;\n</code></pre>\n\n<p>Note, however, that for GWT 2.0 <a href=\"http://code.google.com/webtoolkit/doc/latest/DevGuideClientBundle.html#CssResource\"><code>CssResource</code></a> and <a href=\"http://code.google.com/webtoolkit/doc/latest/DevGuideUiBinder.html#Hello_Stylish_World\">UiBinder</a> is recommended.</p>\n\n<p>Be sure to read the <a href=\"http://code.google.com/webtoolkit/doc/latest/DevGuideUiCss.html\">appropriate section</a> of the docs for more pointers.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>In addition to using <code>!important</code> you can also rely on <a href=\"http://www.smashingmagazine.com/2007/07/27/css-specificity-things-you-should-know/\" rel=\"nofollow\">CSS Selector Specificity</a>.</p>\n\n<p>Most (all?) of the GWT styles are stated using just class eg:</p>\n\n<pre><code>.gwt-DisclosurePanel .header {\n    color: black;\n    cursor: pointer;\n    text-decoration: none;\n}\n</code></pre>\n\n<p>To override this you can use <code>!important</code> <strong>or</strong> you can be more specific in your selectors eg:</p>\n\n<pre><code>table.gwt-DisclosurePanel .header {\n    text-decoration: underline;\n}\n</code></pre>\n\n<p><em>How does this work?</em> This works because adding the element name (table) to the class in the selector makes it more specific than just the class alone. This will override other styles even from stylesheets listed lower in the header.</p>\n\n<p>Giving your widgets IDs and using those is even more specific.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This <a href=\"http://groups.google.com/group/google-web-toolkit/msg/c2686706b45b8f60\">post</a> on the GWT mailing list describes an alternative solution. You have to create a new <code>ClientBundle</code> which references your CSS file:</p>\n\n<pre><code>import com.google.gwt.core.client.GWT;\nimport com.google.gwt.resources.client.ClientBundle;\nimport com.google.gwt.resources.client.CssResource;\n\npublic interface Resources extends ClientBundle {\n\n      public static final Resources INSTANCE = GWT.create(Resources.class); \n\n      @Source(\"style.css\")\n      @CssResource.NotStrict\n      CssResource css();\n}\n</code></pre>\n\n<p>And then inside your <code>onModuleLoad()</code> method you have to <a href=\"http://code.google.com/p/google-web-toolkit/wiki/StyleInjector\">inject</a> the CSS file:</p>\n\n<pre><code>public class YourApp implements EntryPoint {\n\n    public void onModuleLoad() {\n        //...\n        Resources.INSTANCE.css().ensureInjected(); \n        //...\n    }\n</code></pre>\n\n<p>In my opinion this is the cleanest and easiest way to override the styles.</p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>I know it's not very elegant but I found it rather effective to replace the <code>standard.css</code> file in the output files generated by GWT with an <strong>empty file</strong>.</p>\n\n<p>(Maven can take care of that reliably.)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The solution <code>&lt;stylesheet src=\"CustomStylesheet.css\" /&gt;</code> is <a href=\"http://www.gwtproject.org/doc/latest/DevGuideUiCss.html\" rel=\"nofollow\">deprecated</a> and did not work with the new superdevmode.</p>\n\n<p>A solution that worked for me (using GWT 2.7) was to create a new custom theme:</p>\n\n<p><strong>projectPackage/themes/MyCustomTheme/MyCustomTheme.gwt.xml</strong></p>\n\n<pre><code>&lt;module&gt;\n    &lt;stylesheet src=\"gwt/MyCustomTheme/MyCss.css\"/&gt;\n&lt;/module&gt;\n</code></pre>\n\n<p><strong>projectPackage/themes/MyCustomTheme/MyCustomThemeRessources.gwt.xml</strong></p>\n\n<pre><code>&lt;/module&gt;\n</code></pre>\n\n<p><strong>projectPackage/themes/MyCustomTheme/public/gwt/MyCustomTheme/MyCss.css</strong>\n(Note: removing the gwt/MyCustomTheme/ part of the path worked in devmode but didn't work in deployed version, of cause you can still rename 'MyCustomTheme' to something of your liking)</p>\n\n<blockquote>\n  <p>The css file you want to use</p>\n</blockquote>\n\n<p><strong>Project.gwt.xml</strong></p>\n\n<pre><code>&lt;!DOCTYPE module PUBLIC \"-//Google Inc.//DTD Google Web Toolkit 2.0//EN\"\n        \"http://google-web-toolkit.googlecode.com/svn/releases/2.0/distro-source/core/src/gwt-module.dtd\"&gt;\n&lt;module rename-to=\"Project\"&gt;\n\n(...)\n\n&lt;!-- Inherit GWT theme.  e.g. the Clean theme --&gt;\n&lt;inherits name='com.google.gwt.user.theme.clean.Clean'/&gt;\n&lt;!-- Our custom theme      --&gt;\n&lt;inherits name='projectPackage.themes.MyCustomTheme.MyCustomTheme'/&gt;\n\n(...)\n\n&lt;/module&gt;\n</code></pre>\n\n<p><br/>Note: You can get a sample custom theme using <a href=\"http://gwt-theme-generator.appspot.com/\" rel=\"nofollow\">http://gwt-theme-generator.appspot.com/</a> and extracting the downloaded .jar file.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have some html files with their own css. I want to use them in a gwt application so i copied the html and the css files in the application.</p>\n\n<p>The problem is when i open the html it uses the gwt theme style. For example in my css the html 'body' background color is black, but it looks white unless i deactivate the theme.</p>\n\n<p>How could I override the gwt theme style and use my css styles?</p>\n",
            "last_activity_date": 1417978975,
            "question_id": 2322779,
            "score": 31,
            "tags": [
                "css",
                "gwt",
                "themes"
            ],
            "title": "GWT theme style overrides my css style"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>A pseudo-class filters existing elements.<br>\n<code>a:link</code> means all <code>&lt;a&gt;</code>s that are <code>:link</code>.</p>\n\n<p>A pseudo-element is a new fake element.<br>\n<code>div::after</code> means non-existing elements after <code>&lt;div&gt;</code>s.</p>\n\n<p><code>::selection</code> is another example of a pseudo-element.<br>\nIt doesn't mean all elements that are selected; it means the range of content that is selected, which may span portions of multiple elements.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>From the Sitepoint docs:</p>\n\n<blockquote>\n  <p>A <strong>pseudo-class</strong> is similar to a class in HTML, but it\u2019s not specified explicitly in the markup. Some pseudo-classes are dynamic\u2014they\u2019re applied as a result of user interaction with the document. - <a href=\"http://reference.sitepoint.com/css/pseudoclasses\">http://reference.sitepoint.com/css/pseudoclasses</a>.  These would be things like <code>:hover, :active, :visited</code>. </p>\n  \n  <p><strong>Pseudo-elements</strong> match virtual elements that don\u2019t exist explicitly in the document tree. Pseudo-elements can be dynamic, inasmuch as the virtual elements they represent can change, for example, when the width of the browser window is altered. They can also represent content that\u2019s generated by CSS rules. - <a href=\"http://reference.sitepoint.com/css/pseudoelements\">http://reference.sitepoint.com/css/pseudoelements</a>. These would be things like <code>before, :after, :first-letter</code>.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The <a href=\"http://www.w3.org/TR/2011/REC-css3-selectors-20110929/\">CSS 3 selector recommendation</a> is pretty clear about both, but I'll try to show the differences anyway.</p>\n\n<h2>Pseudo-classes</h2>\n\n<h3>Official description</h3>\n\n<blockquote>\n  <p>The pseudo-class concept is introduced to permit selection based on information that lies outside of the document tree or that cannot be expressed using the other simple selectors.</p>\n  \n  <p>A pseudo-class always consists of a \"colon\" (<code>:</code>) followed by the name of the pseudo-class and optionally by a value between parentheses.</p>\n  \n  <p>Pseudo-classes are allowed in all sequences of simple selectors contained in a selector. Pseudo-classes are allowed anywhere in sequences of simple selectors, after the leading type selector or universal selector (possibly omitted). Pseudo-class names are case-insensitive. Some pseudo-classes are mutually exclusive, while others can be applied simultaneously to the same element. Pseudo-classes may be dynamic, in the sense that an element may acquire or lose a pseudo-class while a user interacts with the document. </p>\n</blockquote>\n\n<p><a href=\"http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#pseudo-classes\">Source</a></p>\n\n<h3>What does this mean?</h3>\n\n<p>The important nature of pseudo-classes is stated in the very first sentence: <em>\"the pseudo-class concept [...] <strong>permit selection</strong>\"</em>. It enables the author of an stylesheet to differ between elements based on information that <em>\"lies outside of the document tree\"</em>, for example the current status of a link (<code>:active</code>,<code>:visited</code>). Those aren't saved anywhere in the DOM, and there exists no DOM interface to access these options.</p>\n\n<p>On the other hand, <code>:target</code> could be accessed via DOM manipulation (you could use <code>window.location.hash</code> in order to find the object with JavaScript), but this  <em>\"cannot be expressed using the other simple selectors\"</em>.</p>\n\n<p>So basically a pseudo-class will refine the set of selected elements as any other <a href=\"http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#selector-syntax\">simple selector</a> in a <a href=\"http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#selector-syntax\">sequence of simple selectors</a>. Note that all simple selectors in a sequence of simple selectors will be evaluated at the same time. For a complete list of pseudo-class check the CSS3 selector recommendation.</p>\n\n<h3>Example</h3>\n\n<p>The following example will color all even rows gray (<code>#ccc</code>), all uneven rows which aren't dividable by 5 white and every other row magenta.</p>\n\n<pre><code>table tr:nth-child(2n) td{\n   background-color: #ccc;\n}\n\ntable tr:nth-child(2n+1) td{\n   background-color: #fff;\n}\n\ntable tr:nth-child(2n+1):nth-child(5n) td{\n   background-color: #f0f;\n}\n</code></pre>\n\n<h2>Pseudo-elements</h2>\n\n<h3>Official description</h3>\n\n<blockquote>\n  <p>Pseudo-elements create abstractions about the document tree beyond those specified by the document language. For instance, document languages do not offer mechanisms to access the first letter or first line of an element's content. Pseudo-elements allow authors to refer to this otherwise inaccessible information. Pseudo-elements may also provide authors a way to refer to content that does not exist in the source document (e.g., the <code>::before</code> and <code>::after</code> pseudo-elements give access to generated content).</p>\n  \n  <p>A pseudo-element is made of two colons (<code>::</code>) followed by the name of the pseudo-element.</p>\n  \n  <p>This <code>::</code> notation is introduced by the current document in order to establish a discrimination between pseudo-classes and pseudo-elements. For compatibility with existing style sheets, user agents must also accept the previous one-colon notation for pseudo-elements introduced in CSS levels 1 and 2 (namely, :first-line, :first-letter, :before and :after). This compatibility is not allowed for the new pseudo-elements introduced in this specification.</p>\n  \n  <p>Only one pseudo-element may appear per selector, and if present it must appear after the sequence of simple selectors that represents the subjects of the selector.</p>\n  \n  <p>Note: A future version of this specification may allow multiple pseudo-elements per selector.</p>\n</blockquote>\n\n<p><a href=\"http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#pseudo-elements\">Source</a></p>\n\n<h3>What does this mean?</h3>\n\n<p>The most important part here is that <em>\"pseudo-elements allow authors to <strong>refer to [..] otherwise inaccessible information</strong>\"</em> and that they <em>\"may also provide authors a way to refer to content that does not exist in the source document (e.g., the <code>::before</code> and <code>::after</code> pseudo-elements give access to generated content).</em>\". The biggest difference is that they actually create a new virtual element on which rules and even pseudo-class selectors can be applied to. They don't filter elements, they basically filter content (<code>::first-line</code>,<code>::first-letter</code>) and wrap it in a virtual container, which the author can style however he want (well, almost).</p>\n\n<p>For example the <code>::first-line</code> pseudo-element cannot be reconstructed with JavaScript, as it heavily depends on the current used font, the fonts size, the elements width, floating elements (and probably the time of the day). Well, that's not entirely true: one could still calculate all those values and extract the first line, however doing so is a very cumbersome activity.</p>\n\n<p>I guess the biggest difference is that <em>\"only one pseudo-element may appear per selector\"</em>. The note says that this could be subject to change, but as of 2012 I don't believe we see any different behavior in the future (<a href=\"http://dev.w3.org/csswg/selectors4/#pseudo-elements\">it's still in CSS4</a>).</p>\n\n<h3>Example</h3>\n\n<p>The following example will add a language-tag to every quote on a given page using the pseudo-class <code>:lang</code> and the pseudo-element <code>::after</code>:</p>\n\n<pre><code>q:lang(de)::after{\n    content: \" (German) \";\n}\n\nq:lang(en)::after{\n    content: \" (English) \";\n}\n\nq:lang(fr)::after{\n    content: \" (French) \";\n}\n\nq:not(:lang(fr)):not(:lang(de)):not(:lang(en))::after{\n    content: \" (Unrecognized language) \";\n}\n</code></pre>\n\n<h1>TL;DR</h1>\n\n<p>Pseudo-classes act as simple selectors in a sequence of selectors and thereby classify elements on non-presentational characteristics, pseudo-elements create new virtual elements.</p>\n\n<h1>References</h1>\n\n<h2>W3C</h2>\n\n<p><ul>\n<li><a href=\"http://www.w3.org/TR/2011/REC-css3-selectors-20110929/\">Selectors Level 3</a>\n<ul>\n<li><a href=\"http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#selector-syntax\">4. Selector syntax</a></li>\n<li><a href=\"http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#pseudo-classes\">6.6 Pseudo-classes</a></li>\n<li><a href=\"http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#pseudo-elements\">7. Pseudo-elements</a></li>\n</ul></li>\n<li><a href=\"http://www.w3.org/TR/CSS21/\">CSS 2.1 Specification</a> (outdated but still informative)\n<ul>\n<li><a href=\"http://www.w3.org/TR/CSS21/selector.html#selector-syntax\">5.2 Selector syntax</a>:</p>\n\n<blockquote>\n  <p>A simple selector is either a type selector or universal selector followed immediately by zero or more attribute selectors, ID selectors, or pseudo-classes, in any order. The simple selector matches if all of its components match.</li>\n  <li><a href=\"http://www.w3.org/TR/CSS21/selector.html#pseudo-elements\">5.10 Pseudo-elements and pseudo-classes</a></li>\n  </ul></li>\n  </ul></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p><strong>Pseudo-Class</strong></p>\n\n<p>A pseudo-class is way of selecting certain parts of a HTML document, based in principle not on the HTML document tree itself and its elements or on characteristics like name, attributes or contents, but on other phantom conditions like language encoding or the dynamic state of an element.</p>\n\n<p>The original pseudo-class defined dynamic states of an element that are entered and exited over time, or through user intervention. CSS2 expanded on this concept to include virtual conceptual document components or inferred portions of the document tree e.g. first-child. Pseudo-classes operate as if phantom classes were added to various elements.</p>\n\n<p>RESTRICTIONS: Unlike pseudo-elements, pseudo-classes can appear anywhere in selector chain.</p>\n\n<p>Example pseudo-class code:</p>\n\n<pre><code>a:link /* This selects any \"a\" element whose target has not been visited.*/\n{\npadding : 4px;\ntext-decoration : none;\nwidth : 10%;\ncolor : #000000; /* black text color */\nbackground-color : #99FF99; /* set to a pastel green */\nborder-top : 2px solid #ccffcc; /* highlight color */\nborder-left : 2px solid #ccffcc; /* highlight color */\nborder-bottom : 2px solid #003300; /* shadow color */\nborder-right : 2px solid #003300; /* shadow color */\n}\n\na:visited /* This selects any \"a\" element whose target has been visited.*/\n{ padding : 4px;\ntext-decoration : none;\ncolor : #000000; /* black text color */\nbackground-color : #ccccff; /* set to a lavender */\nborder-top : 2px solid #ffffff; /* highlight color */\nborder-left : 2px solid #ffffff; /* highlight color */\nborder-bottom : 2px solid #333366; /* shadow color *\nborder-right : 2px solid #333366; /* shadow color */\n}\n\na:hover /* This selects any \"a\" element which is in a hover state. This is a state during pointer movement within the rendering region of an element. The user designates an element but does not activate it. */\n{\ncolor : #000000; /* black text color */\nbackground-color : #99cc99; /* desaturated color */\nborder-top : 2px solid #003300; /* shadow color */\nborder-left : 2px solid #003300; /* shadow color */\nborder-bottom : 2px solid #ccffcc; /* highlight color */\nborder-right : 2px solid #ccffcc; /* highlight color */\n}\n\na:focus /* This selects any \"a\" element which currently has focus. Focus is a state during which an element accepts keyboard input or other forms of text input. */\n{\npadding : 4px;\ntext-decoration : none;\nwidth : 10%;\ncolor : #000000; /* black text color */\nbackground-color : #ffff99; /* set to a pastel yellow */\nborder-top : 2px solid #ffffcc; /* highlight color */\nborder-left : 2px solid #ffffcc; /* highlight color */\nborder-bottom : 2px solid #666633; /* shadow color */\nborder-right : 2px solid #666633; /* shadow color */\n}\n\na:active /* This selects any \"a\" element which is in a state of activation. Active is a state during pointer activation (eg: press and release of a mouse) within the rendering region of an element.*/\n{\npadding : 4px;\ntext-decoration : none;\nwidth : 10%;\ncolor : #000000; /* black text color */\nbackground-color : #ff99ff; /* set to a pink */\nborder-top : 2px solid #ffccff; /* highlight color */\nborder-left : 2px solid #ffccff; /* highlight color */\nborder-bottom : 2px solid #663366; /* shadow color */\nborder-right : 2px solid #663366; /* shadow color */\n}\n</code></pre>\n\n<p>A page that demonstrates a rendering of the above pseudo-class code</p>\n\n<p><strong>Pseudo-elements</strong></p>\n\n<p>PSEUDO-ELEMENTS are used to address sub-parts of elements. They allow you to set style on a part of an element's content beyond what is specified in the documents. In other words they allow logical elements to be defined which are not actually in the document element tree. Logical elements allow implied semantic structure to be addressed in CSS selectors.</p>\n\n<p>RESTRICTIONS: Pseudo-elements may only be applied to external and document-level contexts - not to in-line styles. Pseudo-elements are restricted in where they can appear in a rule. They may only appear at the end of a selector chain (after the subject of the selector). They should come after any class or ID names found in the selector. Only one pseudo-element can be specified per selector. To address multiple pseudo-elements on a single element structure, multiple style selector/declaration statements must be made.</p>\n\n<p>Pseudo-elements can be used for common typographic effects such as initial caps and drop caps. They can also address generated content that is not in the source document (with the \"before\" and \"after\") An example style sheet of some pseudo-elements with properties and values added follows.</p>\n\n<p>/* The following rule selects the first letter of a heading 1 and sets the font to 2em, cursive, with a green background. First-letter selects the first rendered letter/character for a block-level element. */</p>\n\n<pre><code>h1:first-letter {\nfont-size : 2em;\nfont-family : \"Lucida Handwriting\", \"Lucida Sans\", \"Lucida Console\", cursive;\nbackground-color : #ccffcc;\n}\n\n/* The following rule selects the first displayed line in a paragraph and makes it bold. First-line selects the first rendered line on the output device of a block-level element. */\n\np:first-line {\nfont-weight : bold;\n}\n\n/* The following rule selects any content placed before a blockquote and inserts the phrase \"Quote of the day:\" in bold small caps with a green background. */\n\nblockquote:before {\ncontent : \"Quote of the day:\";\nbackground-color : #ccffcc;\nfont-weight : bold;\nfont-variant : small-caps;\n}\n\n/* The following rule selects any content placed before a \"q\" element and inserts the smart open quote. */\n\nq:before {\ncontent : open-quote;\n}\n\n/* The following rule selects any content placed after a \"q\" element and inserts the smart close quote. */\n\nq:after{\ncontent : close-quote;\n}\n</code></pre>\n\n<p>Sources:<a href=\"http://www.d.umn.edu/~lcarlson/csswork/selectors/pseudo_dif.html\" rel=\"nofollow\">Link</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Things like <code>a:link</code> or <code>div::after</code>...</p>\n\n<p>Information on the difference seems scarce.</p>\n",
            "last_activity_date": 1386593305,
            "question_id": 8069973,
            "score": 28,
            "tags": [
                "css",
                "css-selectors",
                "pseudo-class",
                "pseudo-element"
            ],
            "title": "What is the difference between a pseudo-class and a pseudo-element in CSS?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>How about a solution where you put the actual \"data\" of the table inside its own div, with <code>overflow: scroll;</code>? Then the browser will automatically create scrollbars for the portion of the \"table\" you do not want to lock, and you can put the \"table header\"/first row just above that <code>&lt;div&gt;</code>.</p>\n\n<p>Not sure how that would work with scrolling horizontally though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://javascript.internet.com/miscellaneous/sort-and-lock-table.html\" rel=\"nofollow\">Sort and Lock Table</a> is the only solution I have seen which does work on other browsers than IE. (although this \"<a href=\"http://www.webdeveloper.com/forum/showthread.php?t=105305\" rel=\"nofollow\">locked column css</a>\" might do the trick as well)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I ran across a site a few weeks back. This is a working example of the first column locked but it is not browser compatible with Firefox. I didn't do a lot of checking around but it seems it only works in IE. There are some notes the author provided along with it that you can read.</p>\n\n<p>Lock the First column:\n<a href=\"http://home.tampabay.rr.com/bmerkey/examples/locked-column-csv.html\" rel=\"nofollow\">http://home.tampabay.rr.com/bmerkey/examples/locked-column-csv.html</a></p>\n\n<p>Let me know if you need the Javascript to lock the Table headers too.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You'd have to test it but if you embedded an iframe within your page then used CSS to absolutely position the 1st row &amp; column at 0,0 in the iframe page would that solve your problem?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You need two tables, where the first one is an exact overlay over the second one. The second one contains all the data, where the first one just contains the first column. You have to synchronize it's width and depending on the content also the height of it's rows. </p>\n\n<p>Additional to this two tables, you need a third one. That's the first row, which lays exactly between the other two and has to be synchronized in the same way.</p>\n\n<p>You will need absolute positioning here. Next, you would synchronize the scrolling of the data table with the scrolling positions of the head row and first column table.</p>\n\n<p>That works very well in all major browsers, except for one issue: The synchronized scrolling will flutter. To fix that, you need two outher div containers that hold a clone of the content of the header row and the first column. When scrolling vertically, you display the header row clone to prevent fluttering, while you reposition the original in the background.\nWhen scrolling horizontally, you would show the first row clone. Same thing here.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've posted my jQuery plugin solution here: <a href=\"http://stackoverflow.com/questions/486576/frozen-table-header-inside-scrollable-div/1533619#1533619\">http://stackoverflow.com/questions/486576/frozen-table-header-inside-scrollable-div/1533619#1533619</a></p>\n\n<p>It does exactly what you want and is really lightweight and easy to use.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are quite a few cross browser solutions for this today, among which are <a href=\"http://www.matts411.com/post/super_tables/\" rel=\"nofollow\">SuperTable</a> which I like due to its elegance and simplicity (now being continued with MooGrid) and <a href=\"https://github.com/mleibman/SlickGrid/wiki\" rel=\"nofollow\">SlickGrid</a> with its awesome set of features.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Oh well, I looked up for scrollable table with fixed column to understand the need of this specific requirement and your question was one of it with no close answers.. </p>\n\n<p>I answered this question <a href=\"http://stackoverflow.com/questions/10838700/large-dynamically-sized-html-table-with-a-fixed-scroll-row-and-fixed-scroll-colu/10922732#10922732\">Large dynamically sized html table with a fixed scroll row and fixed scroll column</a> which inspired to showcase my work as a plugin <a href=\"https://github.com/meetselva/fixed-table-rows-cols\">https://github.com/meetselva/fixed-table-rows-cols</a></p>\n\n<p>The plugin basically converts a well formatted HTML table to a scrollable table with fixed table header and columns.</p>\n\n<p>The usage is as below,</p>\n\n<pre><code>$('#myTable').fxdHdrCol({\n    fixedCols    : 3,       /* 3 fixed columns */\n    width        : \"100%\",  /* set the width of the container (fixed or percentage)*/\n    height       : 500      /* set the height of the container */\n});\n</code></pre>\n\n<p>You can check the <a href=\"http://meetselva.github.io/fixed-table-rows-cols/\">demo and documentation here</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I did this with a combination of: </p>\n\n<ul>\n<li>Using multiple tables</li>\n<li>Fixed-size cells</li>\n<li>jQuery's scrollTop and scrollLeft functions</li>\n</ul>\n\n<p>Here's a <a href=\"http://jsfiddle.net/software_christian/Fp9a3/8/\" rel=\"nofollow\">jsfiddle example</a> to demonstrate. </p>\n\n<p>Haven't tested on all browsers but I imagine it's not great on older IE versions.</p>\n\n<p><strong>jQuery</strong></p>\n\n<pre><code>$(\"#clscroll-content\").scroll(function() {\n    $(\"#clscroll-row-headers\").scrollTop($(\"#clscroll-content\").scrollTop());\n    $(\"#clscroll-column-headers\").scrollLeft($(\"#clscroll-content\").scrollLeft());\n});\n\n$(\"#clscroll-column-headers\").scroll(function() {\n    $(\"#clscroll-content\").scrollLeft($(\"#clscroll-column-headers\").scrollLeft());\n});\n\n$(\"#clscroll-row-headers\").scroll(function() {\n    $(\"#clscroll-content\").scrollTop($(\"#clscroll-row-headers\").scrollTop());\n});\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div class=\"clscroll corner-header\"&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;th&gt;&amp;nbsp;&lt;/th&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/div&gt;\n&lt;div class=\"clscroll column-headers\" id=\"clscroll-column-headers\"&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Bus&lt;/th&gt;\n            &lt;th&gt;Plane&lt;/th&gt;\n            &lt;th&gt;Boat&lt;/th&gt;\n            &lt;th&gt;Bicycle&lt;/th&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/div&gt;\n&lt;div class=\"clscroll row-headers\" id=\"clscroll-row-headers\"&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Red&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Green&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Blue&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Orange&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Purple&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Yellow&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Pink&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Brown&lt;/th&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/div&gt;\n&lt;div class=\"clscroll table-content\" id=\"clscroll-content\"&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Red Bus&lt;/td&gt;\n            &lt;td&gt;Red Plane&lt;/td&gt;\n            &lt;td&gt;Red Boat&lt;/td&gt;\n            &lt;td&gt;Red Bicycle&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Green Bus&lt;/td&gt;\n            &lt;td&gt;Green Plane&lt;/td&gt;\n            &lt;td&gt;Green Boat&lt;/td&gt;\n            &lt;td&gt;Green Bicycle&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Blue Bus&lt;/td&gt;\n            &lt;td&gt;Blue Plane&lt;/td&gt;\n            &lt;td&gt;Blue Boat&lt;/td&gt;\n            &lt;td&gt;Blue Bicycle&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Orange Bus&lt;/td&gt;\n            &lt;td&gt;Orange Plane&lt;/td&gt;\n            &lt;td&gt;Orange Boat&lt;/td&gt;\n            &lt;td&gt;Orange Bicycle&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Purple Bus&lt;/td&gt;\n            &lt;td&gt;Purple Plane&lt;/td&gt;\n            &lt;td&gt;Purple Boat&lt;/td&gt;\n            &lt;td&gt;Purple Bicycle&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Yellow Bus&lt;/td&gt;\n            &lt;td&gt;Yellow Plane&lt;/td&gt;\n            &lt;td&gt;Yellow Boat&lt;/td&gt;\n            &lt;td&gt;Yellow Bicycle&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Pink Bus&lt;/td&gt;\n            &lt;td&gt;Pink Plane&lt;/td&gt;\n            &lt;td&gt;Pink Boat&lt;/td&gt;\n            &lt;td&gt;Pink Bicycle&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Brown Bus&lt;/td&gt;\n            &lt;td&gt;Brown Plane&lt;/td&gt;\n            &lt;td&gt;Brown Boat&lt;/td&gt;\n            &lt;td&gt;Brown Bicycle&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>.clscroll table {\n    table-layout: fixed;\n}\n\n.clscroll td, .clscroll th { \n    overflow: hidden;\n}\n\n.corner-header {\n    float: left;\n}\n\n.column-headers {\n    float: left;\n    overflow: scroll;\n}\n\n.row-headers {\n    clear: both;\n    float: left;    \n    overflow: scroll;\n}\n\n.table-content {\n    table-layout: fixed;\n    float: left;\n    overflow: scroll;\n}\n\n.clscroll td, .clscroll th { \n    width: 200px;\n    border: 1px solid black;\n}\n\n.row-headers, .table-content {\n    height: 100px;\n}\n\n.column-headers, .table-content, .table-content table, .column-headers table {\n    width: 400px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can do it, without javascript</p>\n\n<p>see this link:\n<a href=\"http://yonax73.blogspot.com/2014/09/tabla-con-cabecera-estatica-cuerpo-con.html\" rel=\"nofollow\">http://yonax73.blogspot.com/2014/09/tabla-con-cabecera-estatica-cuerpo-con.html</a></p>\n\n<p>or live demo:\n<a href=\"http://jsfiddle.net/yonatanalexis22/aeeme8mt/7/\" rel=\"nofollow\">http://jsfiddle.net/yonatanalexis22/aeeme8mt/7/</a></p>\n\n<pre><code>table{\nborder-spacing: 0;\ndisplay: flex;/*Se ajuste dinamicamente al tamano del dispositivo**/\nmax-height: 40vh; /*El alto que necesitemos**/\noverflow-y: auto; /**El scroll verticalmente cuando sea necesario*/\noverflow-x: hidden;/*Sin scroll horizontal*/\ntable-layout: fixed;/**Forzamos a que las filas tenga el mismo ancho**/\nwidth: 98vw; /*El ancho que necesitemos*/\nborder:1px solid gray;}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I create a table that has its first row and first column both locked, as in Excel, when you activate 'freeze panes'?  I need the table to both scroll horizontally and vertically (a lot of solutions for this exist, but only allow vertical scrolling).</p>\n\n<p>So, when you scroll down in the table, the first row will stay put, since it will have the column headings.  This may end up being in a <code>thead</code>, or it may not, whatever makes the solution easier.</p>\n\n<p>When you scroll right, the first column stays put, since it holds the labels for the rows.</p>\n\n<p>I am pretty certain this is impossible with CSS alone, but can anyone point me toward a javascript solution?  It needs to work in all major browsers.</p>\n\n<p>Thanks in advance!</p>\n",
            "last_activity_date": 1411664604,
            "question_id": 296020,
            "score": 18,
            "tags": [
                "javascript",
                "css",
                "excel",
                "table",
                "scroll"
            ],
            "title": "How can I lock the first row and first column of a table when scrolling, possibly using javascript and CSS?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I've seen it done in a kind of iffy, but pretty reliable way.  Basically, an element is set to use a specific font and a string is set to that element.  If the font set for the element does not exist, it takes the font of the parent element.  So, what they do is measure the width of the rendered string.  If it matches what they expected for the desired font as opposed to the derived font, it's present.</p>\n\n<p>Here's where it came from:\n<a href=\"http://ajaxian.com/archives/javascriptcss-font-detector\">Javascript/CSS Font Detector (ajaxian.com; 12 Mar 2007)</a></p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>I ran across this:</p>\n\n<p><a href=\"http://www.lalit.org/lab/javascript-css-font-detect\" rel=\"nofollow\">Javascript/CSS Font Detector</a></p>\n\n<p>which lets you detect what fonts are available based on the size of fonts. </p>\n\n<p>From here you can tell what font was loaded onto the page by using the same technique. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>A technique that works is to look at the computed style of the element. This is supported in Opera and Firefox (and I recon in safari, but haven't tested). IE (7 at least), provides a method to get a style, but it seems to be whatever was in the stylesheet, not the computed style. More details on quirksmode: <a href=\"http://www.quirksmode.org/dom/getstyles.html\" rel=\"nofollow\">Get Styles</a></p>\n\n<p>Here's a simple function to grab the font used in an element:</p>\n\n<pre><code>/**\n * Get the font used for a given element\n * @argument {HTMLElement} the element to check font for\n * @returns {string} The name of the used font or null if font could not be detected\n */\nfunction getFontForElement(ele) {\n    if (ele.currentStyle) { // sort of, but not really, works in IE\n        return ele.currentStyle[\"fontFamily\"];\n    } else if (document.defaultView) { // works in Opera and FF\n        return document.defaultView.getComputedStyle(ele,null).getPropertyValue(\"font-family\");\n    } else {\n        return null;\n    }\n}\n</code></pre>\n\n<p>If the CSS rule for this was:</p>\n\n<pre><code>#fonttester {\n    font-family: sans-serif, arial, helvetica;\n}\n</code></pre>\n\n<p>Then it should return helvetica if that is installed, if not, arial, and lastly, the name of the system default sans-serif font. Note that the ordering of fonts in your CSS declaration is significant.</p>\n\n<p>An interesting hack you could also try is to create lots of hidden elements with lots of different fonts to try to detect which fonts are installed on a machine. I'm sure someone could make a nifty font statistics gathering page with this technique.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>@pat Actually, Safari does not give the font used, Safari instead always returns the first font in the stack regardless of whether it is installed, at least in my experience.</p>\n\n<pre><code>    font-family: \"my fake font\", helvetica, san-serif;\n</code></pre>\n\n<p>Assuming Helvetica is the one installed/used, you'll get:</p>\n\n<ul>\n<li>\"my fake font\" in Safari (and I believe other webkit browsers).</li>\n<li>\"my fake font, helvetica, san-serif\" in Gecko browsers and IE. </li>\n<li>\"helvetica\" in Opera 9, though I read that they are changing this in Opera 10 to match\nGecko.</li>\n</ul>\n\n<p>I took a pass at this problem and created Font Unstack, which tests each font in a stack and returns the first installed one only. It uses the trick that @MojoFilter mentions, but only returns the first one if multiple are installed. Though it does suffer from the weakness that @tlrobinson mentions (Windows will substitute Arial for Helvetica silently and report that Helvetica is installed), it otherwise works well.</p>\n\n<p><a href=\"http://github.com/philoye/fontunstack/tree/master\" rel=\"nofollow\">FontUnstack</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I wrote a simple JavaScript tool that you can use it to check if a font is installed or not.<br>\nIt uses simple technique and should be correct most of the time.\n<br></p>\n\n<p><strong><a href=\"https://github.com/derek1906/jFont-Checker/\" rel=\"nofollow\">jFont Checker</a></strong> on github</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>A simplified form is:</p>\n\n<pre><code>function getFont() {\n    return document.getElementById('header').style.font;\n}\n</code></pre>\n\n<p>If you need something more complete, check <a href=\"http://www.lalit.org/lab/javascript-css-font-detect/#comment-43\" rel=\"nofollow\">this</a> out.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There is a simple solution</p>\n\n<pre><code>function getUserBrowsersFont() \n{\n    var browserHeader = document.getElementById('header');\n    return browserHeader.style.font;\n}\n</code></pre>\n\n<p>this function will  exactly do what you want. On execution It will return the User/visitor Browsers Font Type. Hope this will help</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Another solution would be to install the font automatically via <code>@font-face</code> which might negate the need for detection.</p>\n\n<pre><code>@font-face { \nfont-family: \"Calibri\"; \nsrc: url(\"http://www.yourwebsite.com/fonts/Calibri.eot\"); \nsrc: local(\"Calibri\"), url(\"http://www.yourwebsite.com/fonts/Calibri.ttf\") format(\"truetype\");\n}\n</code></pre>\n\n<p>Of course it wouldn't solve any copyright issues, however you could always use a freeware font or even make your own font. You will need both <code>.eot</code> &amp; <code>.ttf</code> files to work best.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Calibri is a font owned by Microsoft, and shouldn't be distributed for free. Also, requiring a user to download a specific font isn't very user-friendly. </p>\n\n<p>I would suggest purchasing a license for the font and embedding it into your application.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Suppose I have the following CSS rule in my HTML.</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>body {\n    font-family: Calibri, Trebuchet MS, Helvetica, sans-serif;\n}\n</code></pre>\n\n<p>How can I detect which one of the defined fonts was used in the user's browser?</p>\n\n<p>Edit for people wondering why I want to do this: The font I am detecting contains glyphs not available in other fonts and when the user does not have it I want to display a link asking the user to download that font so they can use my web application.</p>\n\n<p>Currently I am displaying the download font link for all users, now I can only display it for people who do not have the correct font installed.</p>\n",
            "last_activity_date": 1422351281,
            "question_id": 845,
            "score": 58,
            "tags": [
                "javascript",
                "html",
                "css",
                "fonts"
            ],
            "title": "How can I detect which font was used in a web page?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>You can certainly do it with canvas, try out this code as an example:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;Testing min-width and max-width&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n\n    &lt;/style&gt;\n\n  &lt;/head&gt;\n  &lt;body&gt;\n      &lt;canvas id=\"cnv\"&gt;&lt;/canvas&gt;\n      &lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n          cnv = document.getElementById(\"cnv\");\n          cnv.width = 500;\n          cnv.height = 300;\n          ctx = cnv.getContext(\"2d\");\n          ctx.font = \"bold 12px sans-serif\";\n          text = \"abcdefghijklm\"\n          for (i = 0; i &lt; text.length; i++) {\n              ctx.fillText(text[i], 300, 100);\n              ctx.rotate(0.1);\n          }\n      &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>It doesn't do it exactly right, but I'm certain you'll manage to tweak it to your likening ;)</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>I was able to run examples from \n<a href=\"http://apike.ca/prog_svg_text.html\" rel=\"nofollow\">http://apike.ca/prog_svg_text.html</a> into Chrome but it does not work in IE.</p>\n\n<p>You can use SVGWeb, <a href=\"http://code.google.com/p/svgweb/\" rel=\"nofollow\">http://code.google.com/p/svgweb/</a></p>\n\n<p>Alternatively, you can write your own image generating utility at server site (in .NET/PHP) like an Http Handler and pass text to it and it would return GIF/PNG by using the graphics library and rendering image on the fly for you.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Or you can do it using some CSS, however I'm sure you won't get it running on IE any time soon. On the other hand the cool thing is that the text is selectable :D</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;Testing min-width and max-width&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n        .num1 {\n            -webkit-transform: translate(0px, 30px) rotate(-35deg); \n        }\n        .num2 {\n            -webkit-transform: translate(0px, 25px) rotate(-25deg); \n        }\n        .num3 {\n            -webkit-transform: translate(0px, 23px) rotate(0deg); \n        }\n        .num4 {\n            -webkit-transform: translate(0px, 25px) rotate(25deg); \n        }\n        .num5 {\n            -webkit-transform: translate(0px, 30px) rotate(35deg); \n        }\n\n       span {display: inline-block; margin: 1px;}\n    &lt;/style&gt;\n\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div style=\"width: 300px; height: 300px; margin: 50px auto\"&gt;\n      &lt;span class=\"num1\"&gt;a&lt;/span&gt;&lt;span class=\"num2\"&gt;b&lt;/span&gt;&lt;span class=\"num3\"&gt;c&lt;/span&gt;&lt;span class=\"num4\"&gt;d&lt;/span&gt;&lt;span class=\"num5\"&gt;e&lt;/span&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>SVG supports text-on-a-path directly, though it does not 'bend' the individual glyphs along the path. Here's <a href=\"http://www.kevlindev.com/tutorials/basics/text/svg/index.htm\">an example</a> of how you create it:</p>\n\n<pre><code>...\n&lt;defs&gt;\n  &lt;path id=\"textPath\" d=\"M10 50 C10 0 90 0 90 50\"/&gt;\n&lt;/defs&gt;\n&lt;text fill=\"red\"&gt;\n  &lt;textPath xlink:href=\"#textPath\"&gt;Text on a Path&lt;/textPath&gt;\n&lt;/text&gt;\n...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>I realize this is over a year late, but here is my solution</p>\n\n<p><a href=\"http://jsfiddle.net/pukster/EazNL/2/\" rel=\"nofollow\">JS Fiddle snippet</a></p>\n\n<p>it wraps the text around but I can't figure out how to flip the letters vertically along the bottom because I really really really hate the canvas transformations and I can't wrap my head around how to do two rotations on text (flip once along the y axis and once again about the center of an imaginary circle).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;embed width=\"100\" height=\"100\" type=\"image/svg+xml\" src=\"path.svg\"&gt;\n  &lt;svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt;\n    &lt;defs&gt;\n      &lt;path id=\"textPath\" d=\"M10 50 C10 0 90 0 90 50\"/&gt;\n    &lt;/defs&gt;\n  &lt;/svg&gt;\n&lt;/embed&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This <a href=\"http://www.html5canvastutorials.com/labs/html5-canvas-text-along-arc-path/\" rel=\"nofollow\" title=\"tutorial\">tutorial</a> shows you exactly how to do it using HTML5 and canvas.  One of the other replies, above, had a similar idea, to use the canvas.rotate method.  This one also uses canvas.translate.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a jQuery Plugin to curve text using CSS3 called <a href=\"http://tympanus.net/codrops/2012/01/24/arctext-js-curving-text-with-css3-and-jquery/\" rel=\"nofollow\">arctext.js</a>.  It's pretty good and has a range of configuration options.  I guess it won't work on IE8 but I guess most CSS3 thing don't!</p>\n\n<p>There's also a demo page with some example of it in action <a href=\"http://tympanus.net/Development/Arctext/\" rel=\"nofollow\">here</a>. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can try this jQuery plugin <a href=\"http://codecanyon.net/item/jquery-text-arch/3669779\" rel=\"nofollow\">http://codecanyon.net/item/jquery-text-arch/3669779</a><br/>\nIt has a lot of options for customizing text arches and text circles.<br/>\nWorks in all major browsers and OS's</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's not a pure CSS solution but CircleText.js works great for arced text.</p>\n\n<p><a href=\"http://circletype.labwire.ca/\">http://circletype.labwire.ca/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I used the tutorial mentioned above (by Simon Tewsi) to write a better solution, regarding the kerning issue. Uses no library, pure JS.</p>\n\n<p>See it at <a href=\"http://jsfiddle.net/fidnut/cjccg74f/\" rel=\"nofollow\">http://jsfiddle.net/fidnut/cjccg74f/</a></p>\n\n<pre><code>function drawTextAlongArcInside(ctx, str, font, color, radius, angle, centerX, centerY, wspace)\n</code></pre>\n\n<p>Note: SO is demanding that I put all the code from JSFiddle in here too. I don't think this is wise, too much code, so I am adding only the name of the function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to curve text this effect using CSS3, HTML Canvas, or even SVG (see image below for example)? Is this possible? If so, how can I achieve this effect?</p>\n\n<p><strong>Update:</strong> To clarify: The text that will be styled this way will be dynamic.</p>\n\n<p><img src=\"http://img685.yfrog.com/img685/6952/nvv.png\" alt=\"Curved Text Example\"></p>\n",
            "last_activity_date": 1422237254,
            "question_id": 2840862,
            "score": 40,
            "tags": [
                "javascript",
                "html",
                "css",
                "canvas",
                "css3"
            ],
            "title": "Is there a way to curve / arc text using CSS3 / Canvas"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Googling doesn't reveal anything even remotely promising, so I'm going to say that it's not possible.</p>\n\n<p>I did find <code>text-overflow: -o-ellipsis-lastline</code>, but it <strong>only works in Opera</strong>: <a href=\"http://people.opera.com/dstorey/text/text-overflow.html\">http://people.opera.com/dstorey/text/text-overflow.html</a> (mirror: <a href=\"http://jsbin.com/exugux/\">http://jsbin.com/exugux/</a>)</p>\n\n<p>There's also a similar WebKit-only solution: <a href=\"http://dropshado.ws/post/1015351370/webkit-line-clamp\">http://dropshado.ws/post/1015351370/webkit-line-clamp</a></p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>HTML offers no such feature, and this is very frustrating.</p>\n\n<p>That's why i have developped a small library to deal with this issue. The library provides objects to modelize and perform letter-level text rendering. This should do just what you need:</p>\n\n<p>Read more at <a href=\"http://www.samuelrossille.com/home/jstext\" rel=\"nofollow\">http://www.samuelrossille.com/home/jstext</a> for screenshot, tutorial, and dowload link.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I wrote a javascript function to fix the multiline ellipsis problem</p>\n\n<pre><code>function ellipsizeTextBox(id) {\n\n    var el = document.getElementById(id);\n    var keep = el.innerHTML;\n    while(el.scrollHeight &gt; el.offsetHeight) {\n        el.innerHTML = keep;\n        el.innerHTML = el.innerHTML.substring(0, el.innerHTML.length-1);\n        keep = el.innerHTML;\n        el.innerHTML = el.innerHTML + \"...\";\n    }   \n}\n</code></pre>\n\n<p>hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Somebody appears to have emulated this functionality in pure CSS. Here's the blog post:</p>\n\n<p><a href=\"http://www.mobify.com/dev/multiline-ellipsis-in-pure-css/\">http://www.mobify.com/dev/multiline-ellipsis-in-pure-css/</a></p>\n\n<p>He gives a step-by-step. You can <a href=\"http://codepen.io/romanrudenko/pen/ymHFh\">try out the final version here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I'm posting this because I believe my solution is less complex than the popular one, which involves pseudo elements and float behaviour. I recently had to create a solution which would work in IE7, so pseudo elements weren't an option in the first place.</p>\n\n<p>The technique involves 4 elements:</p>\n\n<ul>\n<li>A block level container which determines the maximum height of the contents</li>\n<li>An inline wrapper for the text content</li>\n<li>An ellipsis contained within the inline wrapper</li>\n<li>A 'fill' element, also inside the inline wrapper, that occludes the ellipsis when the text content doesn't exceed the dimensions of the container</li>\n</ul>\n\n<p>As with previous CSS-only solutions, the technique demands a solid colour background or fixed position background image for the contents: the ellipsis needs to obscure parts of the text, and the fill needs to obscure the ellipsis. You can do a fancy gradient effect to make the text fade into the ellipsis, but I'll leave that cosmetic detail to discretion.</p>\n\n<h3>HTML structure</h3>\n\n<pre><code>&lt;!-- The block level container. `clamped-2` for 2 lines height --&gt;\n&lt;p class=\"clamped clamped-2\"&gt;\n  &lt;!-- The inline wrapper --&gt;\n  &lt;span class=\"text\"&gt;\n    Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy\n    nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. \n    Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit\n    lobortis nisl ut aliquip ex ea commodo consequat.\n    &lt;!-- The ellipsis, which can contain anything you want - \n         (a 'more' link, for example) --&gt;\n    &lt;span class=\"ellipsis\"&gt;\n      &amp;#133;\n    &lt;/span&gt;\n    &lt;!-- The fill, which covers the ellipsis when the text doesn't overflow --&gt;\n    &lt;span class=\"fill\"&gt;&lt;/span&gt;\n  &lt;/span&gt;\n&lt;/p&gt;\n</code></pre>\n\n<h3>CSS</h3>\n\n<pre><code>body {\n  /* We need a solid background or background-position: fixed */\n  background: #fff;\n  /* You'll need to know the line height to clamp on line breaks */\n  line-height: 1.5;\n}\n\n.clamped {\n  overflow: hidden;\n  position: relative;\n}\n\n/* Clamp to 2 lines, ie line-height x 2:\n   Obviously any number of these classes can be written as needed\n */\n.clamped-2 {\n  max-height: 3em;\n}\n\n/* The ellipsis is always at the bottom right of the container,\n   but when the text doesn't reach the bottom right...\n */\n.clamped .ellipsis {\n  background: #fff;\n  bottom: 0;\n  position: absolute;\n  right: 0;\n}\n\n/* ...It's obscured by the fill, which is positioned at the bottom right \n   of the text, and occupies any remaining space.\n */\n.clamped .fill {\n  background: #fff; \n  height: 100%;\n  position: absolute;\n  width: 100%;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/barney/TPP8g/\">Here's a fiddle demonstrating it</a>: resize your browser's width or change the text to see it shift from ellipsis to no-ellipsis.</p>\n\n<p>Aside from the arbitrary elegance factor, I believe this is more performant than the popular solution because it doesn't rely on floats (which require a lot of repainting) \u2014 absolute positioning is much simpler to compute since there are no inter-dependencies when calculating layout.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can do it with css. It only works in webkit browsers but has a fallback for the other ones.</p>\n\n<p>use :</p>\n\n<pre><code>display: -webkit-box;\n-webkit-line-clamp: $lines-to-show;\n-webkit-box-orient: vertical;\nheight: $font-size*$line-height*$lines-to-show; /* Fallback for non-webkit */\n</code></pre>\n\n<p>along with:</p>\n\n<pre><code>max-width: $maxwidth;\noverflow: hidden;\ntext-overflow: ellipsis;\n</code></pre>\n\n<p>Here is the fiddle: <a href=\"http://jsfiddle.net/anchu/p3ZQP/1/\" rel=\"nofollow\">demo</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Modified the <a href=\"http://stackoverflow.com/a/12069001/228429\">function by user1152475</a> so it works word by word (space delimited) rather than character by character.</p>\n\n<pre><code>function ellipsizeTextBox(id) {\n    var el = document.getElementById(id);\n    var wordArray = el.innerHTML.split(' ');\n    while(el.scrollHeight &gt; el.offsetHeight) {\n        wordArray.pop();\n        el.innerHTML = wordArray.join(' ')  + '...';\n    }   \n}\n</code></pre>\n\n<p>Note, for both solutions, the box must have a set height.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a <code>p</code>-tag with a specific <code>width</code> and <code>height</code>. I want to use <code>text-overflow:ellipsis</code> to get <code>...</code> if the text in the tag is too long. I this possible to solve with css on multiline text?</p>\n",
            "last_activity_date": 1422008542,
            "question_id": 6572330,
            "score": 27,
            "tags": [
                "html",
                "css",
                "css3"
            ],
            "title": "Is it possible to use text-overflow:ellipsis on multiline text?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I've had to do this myself. What I did was that I set a base text size for the body, and percentages for all other sizes. I then used a simple jQuery script to change the base size on window resize. The other sizes then update as well. </p>\n\n<p>I used something like this:</p>\n\n<pre><code>$(function() {\n    $(window).bind('resize', function()\n    {\n        resizeMe();\n        }).trigger('resize');\n    });\n</code></pre>\n\n<p>and in the resizeMe-function, I had this:</p>\n\n<pre><code>//Standard height, for which the body font size is correct\nvar preferredHeight = 768;\n//Base font size for the page\nvar fontsize = 18;\n\nvar displayHeight = $(window).height();\nvar percentage = displayHeight / preferredHeight;\nvar newFontSize = Math.floor(fontsize * percentage) - 1;\n$(\"body\").css(\"font-size\", newFontSize);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>You can do this with <a href=\"http://www.w3.org/TR/css3-mediaqueries/\">CSS3 media queries</a>, specifying different base font-sizes depending on browser size. There is a good article for this on <a href=\"http://www.alistapart.com/articles/responsive-web-design/\">A List Apart</a></p>\n\n<p>For IE support you might be able to hack it using <a href=\"http://www.google.com/search?q=ie+css+expression\">CSS expressions</a></p>\n\n<p>This requires you to use a fixed base font-size, for instance on the <code>body</code> tag, and percentage or <code>em</code> based sizes elsewhere.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Try a jQuery plugin like <a href=\"http://fittextjs.com/\">FitText</a>. It automatically sizes text to fit the width of the parent element.</p>\n\n<p>Another jQuery plugin with the same goal is <a href=\"http://www.zachleat.com/web/bigtext-makes-text-big/\">BigText</a> (<a href=\"http://www.zachleat.com/bigtext/demo/\">demo</a>).</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Lizzans answer is perfect! Leave the -1 where it is! Kittens were dying all over the place when I removed it.</p>\n\n<p>Instead of the fontsize variable, just set it to the standard fontsize for your page. Mine was 16.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm using the trick from <a href=\"http://practicaltypography.com/end-credits.html#bio\" rel=\"nofollow\">http://practicaltypography.com/end-credits.html#bio</a> M. Butterick:</p>\n\n<pre><code>    &lt;style type=\"text/css\"&gt;\n&lt;!--adattamento font-size a browser width--&gt;\n        @media all {html {font-size: 24px;}}@media all and (max-width:2200px){html {font-size: 27px;}}@media all and (max-width:1800px){html {font-size: 26px;}}@media all and (max-width:1400px){html {font-size: 25px;}}@media all and (max-width:1000px){html {font-size: 24px;}}@media all and (max-width:960px){html {font-size: 23px;}}@media all and (max-width:920px){html {font-size: 22px;}}@media all and (max-width:880px){html {font-size: 21px;}}@media all and (max-width:840px){html {font-size: 20px;}}@media all and (max-width:800px){html {font-size: 19px;}}@media all and (max-width:760px){html {font-size: 18px;}}@media all and (max-width:720px){html {font-size: 17px;}}@media all and (max-width:680px){html {font-size: 16px;}}@media all and (max-width:640px){html {font-size: 15px;}}@media all and (max-width:600px){html {font-size: 14px;}}@media all and (max-width:560px){html {font-size: 13px;}}@media all and (max-width:520px){html {font-size: 12px;}}\n&lt;!--body-format--&gt;\n            body {\n        max-width:1000px;\n        min-width:520px;\n        line-height:1.33em;\n        margin:1em;\n        background-color:#f7f7f7;\n        font-family:Source Sans Pro;\n        color:#361800;\n        }\n    &lt;/style&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>roryf is on the right track!</p>\n\n<p>Media Queries is (one of) the answer(s).</p>\n\n<p>The trick here is to use % for font sizes everywhere starting from body. This way the font size get's inherited and when you change it in body, it get's changed everywhere.</p>\n\n<p>Try something like: </p>\n\n<pre><code>body { font-size: 100% }\nh1 {font-size: 200% }\n\n@media all and (max-width:600px) {\n    body {font-size: 70%}\n}\n</code></pre>\n\n<p>When the website width gets smaller then 600px, then the font size will turn to 70% of what it was everywhere, where % is used (also h1 in this example.)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Building on Lizzan's answer, here is a version using the <em>square root of both width and height</em> to get a proportional sizing:</p>\n\n<pre><code>// When document has finished loading\n$(document).ready(function() {\n\n    var resizeText = function () {\n        // Standard height, for which the body font size is correct\n        var preferredFontSize = 180; // %\n        var preferredSize = 1024 * 768;\n\n        var currentSize = $(window).width() * $(window).height();\n        var scalePercentage = Math.sqrt(currentSize) / Math.sqrt(preferredSize);\n        var newFontSize = preferredFontSize * scalePercentage;\n        $(\"body\").css(\"font-size\", newFontSize + '%');\n    };\n\n    $(window).bind('resize', function() {\n        resizeText();\n    }).trigger('resize');\n\n});\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/tomsoderlund/26Gad/embedded/result/\" rel=\"nofollow\">http://jsfiddle.net/tomsoderlund/26Gad/embedded/result/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have been trying(in vain) to build a page whose elements would resize as I changed the window size. I have it working in css for images no problem, but I can't seem to accomplish the same for text, and I am not sure it is even possible in CSS. And I can't seem to find a jquery script that accomplishes this.</p>\n\n<p>When a user resizes the window, I essentially want the page to scale dynamically and fluidly, without the user having to invoke page zoom. This works fine on my img divs via css, but not for the text, which stays the same size.</p>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1424377579,
            "question_id": 2989950,
            "score": 10,
            "tags": [
                "jquery",
                "css",
                "text",
                "resize",
                "fluid-layout"
            ],
            "title": "auto resize text (font size) when resizing window?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>A 50% padding wont center your child, it will place it below the center. I think you really want a padding-top of 25%. Maybe you're just running out of space as your content gets taller? Also have you tried setting the margin-top instead of padding-top?</p>\n\n<p>EDIT: Nevermind, the w3schools site says </p>\n\n<blockquote>\n  <p>% Specifies the padding in percent of the width of the containing element</p>\n</blockquote>\n\n<p>So maybe it always uses width? I'd never noticed.</p>\n\n<p>What you are doing can be acheived using display:table though (at least for modern browsers). <a href=\"http://www.vdotmedia.com/blog/vertically-center-content-with-css/\" rel=\"nofollow\">The technique is explained here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I also had this problem (+1). I'm seriously annoyed by it, it is stupid to have to do this.</p>\n\n<p>The fix is that yes, vertical padding and margin are relative to width, but <code>top</code> and <code>bottom</code> <strong><em>aren't.</em></strong></p>\n\n<p>So just place a div inside another, and in the inner div, use something like <code>top:50%</code> (remember <code>position</code> matters if it still doesn't work)</p>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p>You can somehow emulate top and bottom padding with <code>::before</code> and <code>::after</code></p>\n\n<pre><code>&lt;div id=\"outer\"&gt;\n    &lt;div id=\"inner\"&gt;\n        content\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>#outer {\n    padding-left: 10%;\n    padding-right: 10%;\n    position: relative;\n}\n#outer::before {\n    display: block;\n    content: \"\";\n    width: 100%;\n    height: 10%;\n}\n#outer::after {\n    display: block;\n    content: \"\";\n    width: 100%;\n    height: 10%;\n}\n\n#inner {\n    width: 100%;\n    height: 80%;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/HWmq4/1/\">Demo</a>.</p>\n\n<p>For IE8 support you must replace <code>::</code> with <code>:</code>.</p>\n\n<p>If you need relative-to-height padding only for centering text vertically, then take a look at \"<a href=\"http://stackoverflow.com/questions/8865458/how-to-align-text-vertical-center-in-div-with-css\">how to align text vertical center in div with css</a>\"</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Other way to center one line text is:</p>\n\n<pre><code>.parent{\n  position: relative;\n}\n\n.child{\n   position: absolute;\n   top: 50%;\n   line-height: 0;\n}\n</code></pre>\n\n<p>or just</p>\n\n<pre><code>.parent{\n  overflow: hidden; /* if this ins't here the parent will adopt the 50% margin of the child */\n}\n\n.child{\n   margin-top: 50%;\n   line-height: 0;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I had been racking my brains over creating a vertical alignment in css using the following</p>\n\n<pre><code>.base{\nbackground-color:green;\nwidth:200px;\nheight:200px;\noverflow:auto;\nposition:relative;\n    }\n\n    .vert-align{\n        padding-top:50%;\n        height:50%;\n    }\n</code></pre>\n\n<p>and used the following div structure.</p>\n\n<pre><code>&lt;div class=\"base\"&gt;\n&lt;div class=\"vert-align\"&gt;\n    Content Here        \n&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>While this seemed to work for this case, i was surprised that when i increased or decreased the width of my base div, the vertical alignment would snap. I was expecting that when I set the padding-top property, it would take the padding as a percentage of the height of the parent container, which is base in our case, but the above value of 50 percent is calculated as a percentage of the width. :(</p>\n\n<p>Is there a way to set the padding and/or margin as a percentage of the height, without resorting to using javascript? </p>\n\n<p>Thanks in advance.</p>\n",
            "last_activity_date": 1401000290,
            "question_id": 4982480,
            "score": 47,
            "tags": [
                "html",
                "css",
                "vertical-alignment"
            ],
            "title": "How to set the margin or padding as percentage of height or parent container?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Rather than using IE's <code>filter</code> style for this, have you considered using <a href=\"http://css3pie.com/\" rel=\"nofollow\">CSS3Pie</a>?</p>\n\n<p>This is a script for IE that adds support for standard CSS <code>box-shadow</code> and gradients, so you can write the same code in all browsers rather than having to have all those IE-specific styles.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I already gave my preferred solution (use CSS3Pie), but I'll post this as a separate answer.</p>\n\n<p>The likely reason why IE8 fails to work with <code>filter</code> where IE7 works is because IE8 changed the syntax for <code>filter</code>.</p>\n\n<p><code>filter</code> is an IE-specific proprietary style. When Microsoft released IE8, they made a big point of trying to be \"standards compliant\". The \"standards compliant\" way of supporting a non-standard style is to give it a vendor prefix, and that is what Microsoft did.</p>\n\n<p>So therefore in IE8, you need to do the following:</p>\n\n<pre><code>-ms-filter: \"progid:DXImageTransform.Microsoft.gradient( startColorstr='#80ffffff', endColorstr='#00ffffff',GradientType=0 )\";\n</code></pre>\n\n<p>IE7 doesn't support this syntax, so you need them both.</p>\n\n<p>IE8 does in fact work with the old syntax <em>in some cases</em>. The cases where it doesn't work tend to be the ones where you use the <code>progid:</code> syntax. The reason for this is that the colon after <code>progid</code> causes it to be invalid CSS syntax, which is why MS added quotes around the whole thin for the IE8 <code>-ms-filter</code> version.</p>\n\n<p>So the short answer is, use both versions in your stylesheets, and you'll be fine.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Wow, this is a tough one.</p>\n\n<p><a href=\"http://css-tricks.com/browser-support-pseudo-elements/\" rel=\"nofollow\">After reviewing this chart</a>, confirming that <a href=\"http://www.red-team-design.com/before-after-pseudo-elements\" rel=\"nofollow\">IE8 only likes single colons on its pseudo-elements</a>, reading this <a href=\"http://www.pixelastic.com/blog/255%3aie8-ghost-pseudo-elements\" rel=\"nofollow\">possibly related blog article</a>, and doing a lot of <a href=\"http://jsfiddle.net/3PTkG/10/\" rel=\"nofollow\">testing in jsFiddle</a> (although, it's little in comparison to your 73?? jsFiddles), I would have to conclude that this is a bug in IE8.</p>\n\n<p>IE9 can do gradients on pseudo-elements (with base64 nonsense) but IE8 is stubbornly broken.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The documentation on <a href=\"http://msdn.microsoft.com/en-us/library/ms533754%28v=vs.85%29.aspx\"><code>-ms-filter</code></a> -a synonym for <code>filter</code>- states:</p>\n\n<blockquote>\n  <p>An object must have layout for the filter to render.</p>\n</blockquote>\n\n<p>My first guess was that the <code>:before</code> content doesn't have <code>hasLayout</code> set to true. And while it's probably not set to true, it's probably <em>not set to false either</em>. For starters, when I followed the <a href=\"http://msdn.microsoft.com/en-us/library/ms533776%28v=vs.85%29.aspx\">hasLayout docs</a> to force the content to get <code>hasLayout = true</code> (see <a href=\"http://jsfiddle.net/7w7j9/\">jsfiddle</a>) it didn't solve anything. </p>\n\n<p>So I'd say it's neither true nor false. Instead, it's probably <em>undefined</em>. I noted in the same docs it says about the source of this property:</p>\n\n<blockquote>\n  <p><em>object</em><strong>.currentStyle.hasLayout</strong></p>\n</blockquote>\n\n<p>If we have a look at the <a href=\"http://www.w3.org/TR/CSS21/generate.html#content\">W3 documentation on the content property</a> it says:</p>\n\n<blockquote>\n  <p>Generated content does not alter the document tree. In particular, it is not fed back to the document language processor (e.g., for reparsing).</p>\n</blockquote>\n\n<p>So, <strong>a possible conclusion</strong> would be that the generated content is not an <em>object</em>, as such it does not have a <code>currentStyle</code> property, and thus also doesn't have <code>hasLayout</code> set to <code>true</code>. This would be the reason that filters don't work on the generated content, and thus answer the question.</p>\n\n<hr>\n\n<p>At first sight I thought I had found a hint in the console of the above fiddle:</p>\n\n<pre><code>document.querySelectorAll('div')[0].currentStyle.hasLayout; \n// true\n\ndocument.querySelectorAll('div:before')[0].currentStyle.hasLayout\n// Unable to get value of the property 'currentStyle': \n// object is null or undefined\n</code></pre>\n\n<p>But as mentioned in the comments by @BoltClock: <a href=\"http://www.w3.org/TR/selectors-api/#processing-selectors\">querySelectorAll cannot access pseudo-elements</a>.</p>\n\n<hr>\n\n<p>Another hint (though -again- nothing more than a hint) that <code>filter</code> won't work on pseudo-elements can be found in <a href=\"http://msdn.microsoft.com/en-us/library/ms533035.aspx#CSS_Filters\">this msdn introduction on filters</a>, stating (emphasis mine):</p>\n\n<blockquote>\n  <p>Filters are applied to <em>HTML controls</em> through the filter property</p>\n</blockquote>\n\n<p>Although I'm not sure what is meant by \"HTML controls\", I wouldn't expect content generated by the <code>:before</code> pseudo-element to be considered a \"HTML Control\".</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The question is \"Why don't filters work on pseudo elements in IE8?\" The following is as close to a definitive answer as I can muster. It comes from the information on <a href=\"http://msdn.microsoft.com/en-us/library/ms532853%28v=vs.85%29.aspx\">this page</a>. </p>\n\n<p>The <code>gradient</code> filter is a \"procedural surface\" (along with <code>alphaimageloader</code>). A procedural surface is defined so:</p>\n\n<blockquote>\n  <p>Procedural surfaces are colored surfaces that display between the\n  content of an object and the object's background.</p>\n</blockquote>\n\n<p>Read that carefully. It is essentially another \"layer\" you might say between the content of an object and that object's background. Do you see the answer to the question? What is created by <code>:before</code> and <code>:after</code>... Yes! <em>Content</em>. Specifically as <a href=\"http://msdn.microsoft.com/en-us/library/cc304078%28v=vs.85%29.aspx\">MSDN notes</a>:</p>\n\n<blockquote>\n  <p>The ::before and ::after pseudo-elements specify the location of\n  content before and after an element in the document tree. The content\n  attribute, in conjunction with these pseudo-elements, specifies what\n  is inserted.</p>\n  \n  <p>The generated content interacts with other boxes as if they were real\n  elements inserted just inside their associated element.</p>\n</blockquote>\n\n<p>Now, if it is <em>content</em> that is generated, then it is <em>not</em> an \"object\" containing content, but the <em>content itself</em> (which happens to have some behavior similar to an element object that might contain content).</p>\n\n<p>Thus, there is no \"object\" <em>containing</em> \"content\" (since it <em>is</em> content) between which the <code>filter</code> can place a procedural surface for content generated by a pseudo-element (i.e. \"false element\"). A <code>gradient</code> must be applied to the <em>object</em>, and then the procedural surface is placed between it and the content.</p>\n",
                    "is_accepted": true,
                    "score": 36
                }
            ],
            "body": "<p>I want to create buttons like these:\n<img src=\"http://img822.imageshack.us/img822/9448/previewpau.png\" alt=\"pseudo 3d button\"></p>\n\n<p>In modern browsers the effect is created using inset box-shadow and filters.<br>\nFor IE8 - pseudo-elements are chosen.<br>\nFor IE7 - I use special tags wrapped in conditional comments.</p>\n\n<p>Demo: <a href=\"http://jsfiddle.net/8M5Tt/68/embedded/result/\">http://jsfiddle.net/8M5Tt/68/embedded/result/</a></p>\n\n<p><strong>Main Question:</strong> Why don't filters work on pseudo elements in IE8?</p>\n\n<hr>\n\n<p><strong>Update:</strong></p>\n\n<p>I guess that filters do not work on css-generated content, despite the fact that it is not mentioned on this <a href=\"http://msdn.microsoft.com/en-us/library/ms532847%28v=vs.85%29.aspx\">msdn page</a>.</p>\n\n<p>I solved my problem in IE8 by applying filters to conditional elements like I do for IE7.</p>\n\n<p>Final demo: <a href=\"http://jsfiddle.net/matmuchrapna/8M5Tt/73/\">http://jsfiddle.net/matmuchrapna/8M5Tt/73/</a></p>\n\n<hr>\n\n<p><strong>Update 2:</strong></p>\n\n<p>I solved my problem, but the main question is still unanswered:</p>\n\n<blockquote>\n  <p><strong>\u201cWhy don't filters work on pseudo elements in IE8?\u201d</strong></p>\n</blockquote>\n\n<p>Started a bounty.</p>\n\n<p><strong>Update 3:</strong>\nI created <a href=\"http://jsfiddle.net/matmuchrapna/QvPJv/40/\">testcase</a> only for filters(and also -ms-filter) on ie8:</p>\n\n<p><img src=\"http://i.stack.imgur.com/AgL1l.png\" alt=\"enter image description here\"></p>\n\n<p>But the filters still don't want to work on pseudo-elements.</p>\n\n<p><strong>Update 4:</strong>\nI think <a href=\"http://stackoverflow.com/a/10669986/1057730\">Scotts answer</a> is closest to truth.</p>\n",
            "last_activity_date": 1337687204,
            "question_id": 10403916,
            "score": 29,
            "tags": [
                "html",
                "css",
                "internet-explorer-8",
                "pseudo-element"
            ],
            "title": "Why does a filter gradient on a pseudo element not work in IE8?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>\"Cascading\" in this context means that because more than one stylesheet rule could apply to a particular piece of HTML, there has to be a known way of determining which specific stylesheet rule applies to which piece of HTML. </p>\n\n<p>The rule used is chosen by cascading down from the more general rules to the specific rule required. The most specific rule is chosen. </p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<pre><code>CSS doc    \np{font-size: 12pt;}\np{font-size: 14pt;}\n\n&lt;p&gt;My Headline&lt;p&gt;\n</code></pre>\n\n<p>would render the p at 14pt font because it's \"closer\" to the actual element (external style sheets loading from top of file to bottom of file). If you use a linked style sheet and then include some CSS in the head of your document <em>after</em> linking to the external CSS doc, the \"in head\" declaration would win because it's even closer to the element defined. This is only true of equally weighted selectors. Check out <a href=\"http://www.stuffandnonsense.co.uk/archives/css_specificity_wars.html\" rel=\"nofollow\">http://www.stuffandnonsense.co.uk/archives/css_specificity_wars.html</a> for a good description of the weight of a given selector.</p>\n\n<p>All that said, you could consider 'inheritance' as part of the cascade as well - for all practical purposes. Things \"cascade\" down from containing elements.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When I teach CSS, I always tell the students that \"cascading style sheets\" means something like \"<em>fighting</em> style sheets\".</p>\n\n<p>One rule tells your H3 tag to be red, another rule tells it to be green -- the rules are contradicting each other, who will win!? Style sheet deathmatch!</p>\n\n<p>OK maybe that's a slight exaggeration, but it's far more amenable to non-code, non-programming people who are just starting out than any notion of a cascade, or  inheritance.</p>\n\n<p>I do of course make sure to tell them that it's not a problem for the style sheets to be fighting each other, that's the way the language was designed.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>It is a process which is used to resolve the conflicts in style sheet specification.</p>\n\n<p>That is primely the conflict resolution process done according to the precedence mention in CSS.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>H\u00e5kon Wium Lie (CSS co-creator) defines \"cascade\" in his PHD-thesis on CSS as\n\"The process of combining several style sheets and resolving conflicts between them\" (<a href=\"http://people.opera.com/howcome/2006/phd/#h-357\" rel=\"nofollow\">http://people.opera.com/howcome/2006/phd/#h-357</a>)</p>\n\n<p>Also, for an excellent explaination on how it works, check out <a href=\"http://www.maxdesign.com.au/articles/css-cascade/\" rel=\"nofollow\">http://www.maxdesign.com.au/articles/css-cascade/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The following article answers your question perfectly.</p>\n\n<p>It's the order in which properties are applied on a particular element(s).</p>\n\n<p><a href=\"http://www.blooberry.com/indexdot/css/topics/cascade.htm\" rel=\"nofollow\">http://www.blooberry.com/indexdot/css/topics/cascade.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You have to think of it from the outside in. If you have a rule that that is on the body tag it will \"cascade\" through every child tag. If you put a rule on any tag inside the body it will adopt that rule, and so on. So the rule cascades through all the content unless interrupted by a rule from an embedded tag. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can treat the CSS processing as a waterfall contains several cascades. Here are those cascades from top to bottom in order: (The lower can override the same property in the higher.)</p>\n\n<ol>\n<li>user agent declarations</li>\n<li>user normal declarations</li>\n<li>author normal declarations</li>\n<li>author important declarations</li>\n<li>user important declarations</li>\n</ol>\n\n<p>See more in the <a href=\"http://dev.w3.org/csswg/css2/cascade.html#cascade\" rel=\"nofollow\">spec</a></p>\n\n<p>The <strong>cascading</strong> is to pick the right value from multiple origins. But it's different from <strong>sorting</strong>. Only something not in order need we to sort. But in CSS these origins have fixed precedence. And thus the pseudo-code might look like the follows:</p>\n\n<ol>\n<li>initialize the value array;</li>\n<li>apply the values from 1st origin;</li>\n<li>apply the values from 2st origin, override if the value exists;</li>\n<li>...</li>\n<li>apply the values from Nth origin, override if the values exists;</li>\n</ol>\n\n<p>From the pseudo-code you can see it quite looks like a waterfall of several cascades.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What's the exact meaning of the term \"Cascading\" in CSS? I am getting different views, so I ask here. An example would help :-)</p>\n",
            "last_activity_date": 1424003234,
            "question_id": 1043001,
            "score": 27,
            "tags": [
                "css",
                "terminology"
            ],
            "title": "What is the meaning of &quot;cascading&#39; in CSS?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>an addition to cssparser.sourcefourge.net,</p>\n\n<p>Cobra:</p>\n\n<p><a href=\"http://lobobrowser.org/cobra.jsp\" rel=\"nofollow\">http://lobobrowser.org/cobra.jsp</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I've used <a href=\"http://cssparser.sourceforge.net/\">CSSParser</a> and I like it- it gives good feedback on errors as well.</p>\n\n<p>Here's some sample code I've found and modified:</p>\n\n<pre><code>package com.dlogic;\n\nimport com.steadystate.css.parser.CSSOMParser;\nimport org.w3c.css.sac.InputSource;\nimport org.w3c.dom.css.CSSStyleSheet;\nimport org.w3c.dom.css.CSSRuleList;\nimport org.w3c.dom.css.CSSRule;\nimport org.w3c.dom.css.CSSStyleRule;\nimport org.w3c.dom.css.CSSStyleDeclaration;\nimport java.io.*;\n\n\npublic class CSSParserTest \n{\n\n    protected static CSSParserTest oParser;\n\n    public static void main(String[] args) {\n\n            oParser = new CSSParserTest();\n\n            if (oParser.Parse(\"design.css\")) {\n\n                System.out.println(\"Parsing completed OK\");\n\n            } else {\n\n                System.out.println(\"Unable to parse CSS\");\n\n            }   \n    }\n\n\n     public boolean Parse(String cssfile) \n     {\n\n         FileOutputStream out = null; \n         PrintStream ps = null; \n         boolean rtn = false;\n\n         try\n         {\n\n                // cssfile accessed as a resource, so must be in the pkg (in src dir).\n                InputStream stream = oParser.getClass().getResourceAsStream(cssfile);\n\n                 // overwrites and existing file contents\n                 out = new FileOutputStream(\"log.txt\");\n\n                 if (out != null)\n                 {\n                     //log file\n                     ps = new PrintStream( out );\n                     System.setErr(ps); //redirects stderr to the log file as well\n\n                 } else {\n\n                     return rtn; \n\n                }\n\n\n                InputSource source = new InputSource(new InputStreamReader(stream));\n                CSSOMParser parser = new CSSOMParser();\n                // parse and create a stylesheet composition\n                CSSStyleSheet stylesheet = parser.parseStyleSheet(source, null, null);\n\n                //ANY ERRORS IN THE DOM WILL BE SENT TO STDERR HERE!!\n                // now iterate through the dom and inspect.\n\n                CSSRuleList ruleList = stylesheet.getCssRules();\n\n                ps.println(\"Number of rules: \" + ruleList.getLength());\n\n\n               for (int i = 0; i &lt; ruleList.getLength(); i++) \n               {\n                 CSSRule rule = ruleList.item(i);\n                 if (rule instanceof CSSStyleRule) \n                 {\n                     CSSStyleRule styleRule=(CSSStyleRule)rule;\n                     ps.println(\"selector:\" + i + \": \" + styleRule.getSelectorText());\n                     CSSStyleDeclaration styleDeclaration = styleRule.getStyle();\n\n\n                     for (int j = 0; j &lt; styleDeclaration.getLength(); j++) \n                     {\n                          String property = styleDeclaration.item(j);\n                          ps.println(\"property: \" + property);\n                          ps.println(\"value: \" + styleDeclaration.getPropertyCSSValue(property).getCssText());\n                          ps.println(\"priority: \" + styleDeclaration.getPropertyPriority(property));   \n                     }\n\n\n\n                  }// end of StyleRule instance test\n                } // end of ruleList loop\n\n               if (out != null) out.close();\n               if (stream != null) stream.close();\n               rtn = true;\n            }\n            catch (IOException ioe)\n            {\n                System.err.println (\"IO Error: \" + ioe);\n            }\n            catch (Exception e)\n            {\n                System.err.println (\"Error: \" + e);\n\n            }\n            finally\n            {\n                if (ps != null) ps.close(); \n            }\n\n            return rtn;\n\n    }\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Check out SAC and its implementstions here: <a href=\"http://www.w3.org/Style/CSS/SAC/\" rel=\"nofollow\">http://www.w3.org/Style/CSS/SAC/</a></p>\n\n<p>CSSParser is a little bit out of date</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I needed a CSS parser for an own project, but I found \"CSSParser\" to be too tedious and inflexible to work with (but that could have just been me), so I ended up writing my own simple but functional CSS parser.</p>\n\n<p>Feel free to use it if you want to :-)</p>\n\n<p><a href=\"https://github.com/corgrath/osbcp-css-parser\">OSBCP CSS Parser</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>A CSS library for reading and writing CSS2 and CSS3 files in Java is <strong>ph-css</strong> from <a href=\"https://github.com/phax/ph-css\" rel=\"nofollow\">https://github.com/phax/ph-css</a>\nIt is based on a JavaCC grammar and supports both CSS2 as well as CSS3 and additionally lets you parse HTML style attributes.</p>\n\n<ul>\n<li>It supports the most common hacks \"*\", \"_\" and \"$\" which are not spec compliant</li>\n<li>It supports CSS math - the calc() expression</li>\n<li>It supports the @page rule</li>\n<li>It supports the CSS3 media queries</li>\n<li>It supports @viewport rules</li>\n<li>It supports @keyframes rules</li>\n<li>It supports @supports rules - quite new</li>\n<li>It supports the @namespace rules</li>\n<li>You can get source location information for the different elements (line + column number for start and end - both for the tag as well as for the complete construct)</li>\n</ul>\n\n<p>Since May 21st, 2013 a JDK 1.5 version is also available, which makes it more interesting for Android development</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><a href=\"http://cssbox.sourceforge.net/jstyleparser/\" rel=\"nofollow\">jStyleParser</a> provides exactly this functionality. It parses all the referenced style sheets and maps them to the DOM tree nodes.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you struggle with CSSParser, because there seems to be no documentation at all, and you perhaps want to parse just a CSS String, like value from style parameter, here is my simple sample of use:</p>\n\n<pre><code>import org.junit.Test;\nimport org.w3c.css.sac.InputSource;\nimport org.w3c.dom.css.CSSRule;\nimport org.w3c.dom.css.CSSStyleDeclaration;\nimport org.w3c.dom.css.CSSValue;\n\nimport com.steadystate.css.parser.CSSOMParser;\n\npublic class ParseCssTest {\n\n@Test\npublic void testParseStyleDeclaration() throws IOException {\n    String cssSample = \"margin-top: 0cm; margin-bottom: 0cm; background: #e6e6e6\";\n    CSSOMParser parser = new CSSOMParser();\n    CSSStyleDeclaration o = parser.parseStyleDeclaration(new InputSource(new StringReader(cssSample)));\n    assertEquals(\"margin-top: 0cm; margin-bottom: 0cm; background: rgb(230, 230, 230)\", o.toString());\n    assertEquals(\"0cm\", o.getPropertyCSSValue(\"margin-bottom\").toString());\n    assertEquals(\"0cm\", o.getPropertyCSSValue(\"margin-bottom\").getCssText());\n    assertEquals(null, o.getPropertyCSSValue(\"foo\"));\n}\n\n@Test\npublic void testParseARule() throws IOException {\n    String cssSample = \"r1 { margin-top: 0cm; margin-bottom: 0cm; background: #e6e6e6 }\";\n    CSSOMParser parser = new CSSOMParser();\n    CSSRule o = parser.parseRule(new InputSource(new StringReader(cssSample)));\n    assertEquals(\"r1 { margin-top: 0cm; margin-bottom: 0cm; background: rgb(230, 230, 230) }\", o.toString());\n}\n\n@Test\npublic void parseStyleDeclarationWithAdvancedTests() throws IOException {\n    String cssSample = \"margin-top: 0 cm; margin-bottom: 0cm; background: #e6e6e6\";\n    CSSOMParser parser = new CSSOMParser();\n    CSSStyleDeclaration o = parser.parseStyleDeclaration(new InputSource(new StringReader(cssSample)));\n    assertEquals(\"margin-top: 0 cm; margin-bottom: 0cm; background: rgb(230, 230, 230)\", o.toString());\n\n    assertEquals(\"0cm\", o.getPropertyCSSValue(\"margin-bottom\").toString());\n    assertEquals(\"0cm\", o.getPropertyCSSValue(\"margin-bottom\").getCssText());\n    assertEquals(CSSValue.CSS_VALUE_LIST, o.getPropertyCSSValue(\"margin-top\").getCssValueType());\n\n    assertEquals(\"0 cm\", o.getPropertyCSSValue(\"margin-top\").toString());\n    assertEquals(\"0 cm\", o.getPropertyCSSValue(\"margin-top\").getCssText());\n    assertEquals(CSSValue.CSS_VALUE_LIST, o.getPropertyCSSValue(\"margin-top\").getCssValueType());\n}\n}\n</code></pre>\n\n<p>Big advantage of CSSParser is that it is currently in Maven. So if you look for something rather simple and straightforwardly usable CSSParser seems to be good option.</p>\n\n<p>Notes: it does automatic conversion for colors from hex format to rgb() format, but provides no help with sizes with units, it sees them as list of values! Not so good.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I just rolled out my own CSS Stream Parser for Java, available on <a href=\"http://bit.ly/css-parser\" rel=\"nofollow\">github</a>. What sets this parser apart includes:</p>\n\n<ul>\n<li>It is a stream parser, so the parser handler will receive notification of all new content immediately after each item has been parsed</li>\n<li>Full support for all currently-documented At-Rules</li>\n<li>Custom classes <code>TokenSequence</code> and <code>Token</code> simplify processes for handling selectors, etc.</li>\n<li>Easy to use and to understand</li>\n<li>Useful for validation or for more advanced applications</li>\n<li>Scalable: designed to be able to handle changes to CSS definitions.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm looking for a CSS Parser in java. In particular my requirement is, for a given node/element in an HTML document, to be able to ask/get the css styles for that element from the Parser.</p>\n\n<p>I know there is the W3C SAC interface and one or 2 implementations based on this - but turorials/examples appear non-existant.</p>\n\n<p>Any help/points in right direction much appreciated.</p>\n\n<p>Thanks </p>\n",
            "last_activity_date": 1414441393,
            "question_id": 1513587,
            "score": 26,
            "tags": [
                "java",
                "css",
                "parsing"
            ],
            "title": "Looking for a CSS Parser in java"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>I prefer to use Class as the selector, so I can use it with more than one element at the same page. Using the id as the selector, does not allow this, since the id must be unique.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I guess they always use the id in examples because it's less ambiguous. You know that they're talking specifically about <em>that</em> one element and its styles.</p>\n\n<p>In general, the rule of thumb is that you should ask yourself: \"is there more than one element which requires the same style, now or at any time in the future?\", and the answer is even \"maybe\", then make it a class.</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>ID selectors have a high specificity, which is often what you need in CSS. The tighter you can get the CSS to apply to exactly what it needs to the less work the CSS renderer has to do in establishing rules.</p>\n\n<p>Design to task, and do so in an OO manner - use classes where the objects <em>are</em> classlike, IDs where you mean to target instances, and treat tag refs as something like interfaces (and beware when you do so!). That's the best practice I can think of.</p>\n\n<p>edit: and yeah MS really shafted CSS with ASP.NET thanks guys!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The practice depends on the 'resolution' of what you're trying to select.</p>\n\n<p>I use classes when I want to change a whole swag of elements.  IDs give me a much more fine-grained control which is sometimes necessary.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You should use an \"id\" when you're always talking about a single (and will always be single) seciton of your site.</p>\n\n<p>Basically, it comes down to semantics.</p>\n\n<pre><code>div.header\n</code></pre>\n\n<p>That's tells me that you allow multiple \"headers\" in your site. Perhaps these are sub headers.</p>\n\n<pre><code>div#header\n</code></pre>\n\n<p>That tells me that you're talking about the single \"header section\" of your site layout.</p>\n\n<p>EDIT: Here's a semi-old article about a Pure CSS design... if you just scan the CSS examples, you'll see why I use ID's in there: <a href=\"http://www.singingeels.com/Articles/How_To_Pure_CSS_Design.aspx\" rel=\"nofollow\">How To: Pure CSS Design</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Don't forget that class and ID are not mutually exclusive. There is nothing to stop you from having both! This is sometimes very useful as it allows an item to inherit common styling along with other elements of the same class as well as giving you precise control of that specific item. Another handy technique is to apply multiple classes to the same object (yes, class=\"someClass someOtherClass\" is perfectly valid) For example: </p>\n\n<pre><code>&lt;style&gt;\ndiv.box {\nfloat: left;\nborder: 1px solid blue;\npadding: 1em;\n}\n\ndiv.wide {\nwidth: 40em; \n}\n\ndiv.narrow {\nwidth: 10em; \n}\n\ndiv#oddOneOut {\nfloat: right;\n}\n&lt;/style&gt;\n\n&lt;div class=\"box wide\"&gt;a wide box&lt;/div&gt;\n&lt;div class=\"box narrow\"&gt;a narrow box&lt;/div&gt;\n&lt;div class=\"box wide\" id=\"oddOneOut\"&gt;an odd box&lt;/div&gt;\n</code></pre>\n\n<p>In theory it is also possible to get CSS to only apply to items that belong to several classes, e.g. div.box.narrow {something: somevalue;} but unfortunately this is not supported in all browsers. <strong>Update 2011:</strong> Multiple class selectors now have near universal browser support so go ahead and use them! </p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Don't forget that you can <strong>link to an element that has an ID</strong>. This can be very important for accessibility, among the other benefits. This is a good reason why for layout elements like header, navigation, main content, footer, search form and so on, you should always use an ID instead of a Class (or together with a Class). </p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>IDs are for uniquely identifying elements, Classes are for identifying an element as being part of a class of elements.</p>\n\n<p>In practical terms, id attributes should only be used one per document, class attributes can be used on more than one element on a document.</p>\n\n<p>Check the <a href=\"http://www.w3.org/TR/REC-html40/struct/global.html#h-7.5.2\" rel=\"nofollow\">W3C spec</a> and also the <a href=\"http://css-discuss.incutio.com/?page=ClassesVsIds\" rel=\"nofollow\">CSS-Discuss</a> page on this issue.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Another useful resource is the <a href=\"http://www.w3.org/TR/CSS1/#cascading-order\">W3C spec on Cascading Order</a>: <code>id</code> selectors are given <em>ten times</em> the weight of <code>class</code> selectors. This is especially important if you plan to override styles depending on different scenarios or state changes. The more specific the initial selector, the more work you have to do to override it in additional declarations.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Use only classes, almost never use IDs if you don't have to worry about speed or compatibility.</p>\n\n<p>Using IDs is bad just like using global variables in Visual Basic code. The reason is that IDs have to be unique which introduces unnecessary and bad dependency between different independent parts of your code. Using something like .page1 .tab1>.field1 is better because you don't have to worry about uniqueness of field1 inside tab1 or uniqueness of tab1 inside page1. With IDs you have to keep registry of your IDs to keep control and avoid collisions.</p>\n\n<p>Use IDs only if you have to, for example href='#name' or if some library requires you to.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Please refer to:</p>\n\n<p>Don\u2019t use ID selectors in CSS: <a href=\"http://screwlewse.com/2010/07/dont-use-id-selectors-in-css/\" rel=\"nofollow\">http://screwlewse.com/2010/07/dont-use-id-selectors-in-css/</a></p>\n\n<p>Don\u2019t use IDs in CSS selectors?: <a href=\"http://oli.jp/2011/ids/\" rel=\"nofollow\">http://oli.jp/2011/ids/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been dipping into SitePoint book concerning CSS.</p>\n\n<p>The thing that struck me about the examples was the use of ID as a CSS selector.</p>\n\n<p>Some bits of CSS design I've done, I've always found it easier and more versatile to use Class as the selector.</p>\n\n<p>Maybe its a .Net thing as we don't always have control of the ID of an element...</p>\n\n<p>Is the best practice here to use CLASS or ID as the selector?</p>\n",
            "last_activity_date": 1419921114,
            "question_id": 298607,
            "score": 24,
            "tags": [
                "css"
            ],
            "title": "CSS Best Practice about ID and Class?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You cannot (using a CSS selector) select elements based on the CSS properties that have been applied to them.</p>\n\n<p>If you want to do this manually, you could select every element in the document, loop over them, and check the computed value of the property you are interested in (this would probably only work with real CSS properties though, not made up ones such as <code>rounded</code>). It would also would be slow.</p>\n\n<p>Update in response to edits \u2014 <a href=\"http://www.w3.org/TR/CSS21/selector.html#grouping\">group selectors</a>:</p>\n\n<pre><code>$(\".Title, .Caption\").corner();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>This is a two year old thread, but it was still useful to me so it could be useful to others, perhaps. Here's what I ended up doing:</p>\n\n<pre><code>var x = $('.myselector').filter(function () { \n    return this.style.some_prop == 'whatever' \n});\n</code></pre>\n\n<p>not as succinct as I would like, but I have never needed something like this except now, and it's not very efficient for general use anyway, as I see it.</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>Thank you, Bijou. I used your solution, but used the jQuery .css instead of pure javascript, like this:</p>\n\n<pre><code>$('*').filter(function(){ return $(this).css('font-family').toLowerCase().indexOf('futura') &gt; -1 })\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Custom CSS properties aren't inherited, so must be applied directly to each element (even if you use js to dynamically add properties, you should do it by adding a class), so...</p>\n\n<p>CSS</p>\n\n<pre><code>.Title\n{\n    color:red;\n}\n\n.Caption\n{\n    color:black;\n}\n</code></pre>\n\n<p>HTML</p>\n\n<p>You don't need to define a rounded:true property at all.  Just use the presence of the 'Rounded' class:</p>\n\n<pre><code>&lt;div class='Title Rounded'&gt;&lt;h1&gt;Title&lt;/h1&gt;&lt;/div&gt;\n&lt;div class='Caption Rounded'&gt;Caption&lt;/div&gt;\n</code></pre>\n\n<p>JS</p>\n\n<pre><code>jQuery( '.Rounded' ).corner();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Similar as Bijou's. Just a little bit enhancement:</p>\n\n<pre><code>$('[class]').filter(function() {\n    return $(this).css('your css property') == 'the expected value';\n  }\n).corner();\n</code></pre>\n\n<p>I think using $('[class]') is better: </p>\n\n<ul>\n<li>no need to hard code the selector(s)</li>\n<li>won't check all HTML elements one by one.</li>\n</ul>\n\n<p>Here is an <a href=\"http://jsfiddle.net/anthony_yuan/5fWjK/1/\">example</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>How can I select all elements that have a specific CSS property applied, using jQuery? For example:</p>\n\n<pre><code>.Title\n{\n    color:red;\n    rounded:true;\n}\n\n.Caption\n{\n    color:black;\n    rounded:true;\n}\n</code></pre>\n\n<p>How to select by property named \"rounded\"?</p>\n\n<p>CSS class name is very flexible.</p>\n\n<pre><code>$(\".Title\").corner();\n$(\".Caption\").corner();\n</code></pre>\n\n<p>How to replace this two operation to one operation. Maybe something like this:</p>\n\n<pre><code>$(\".*-&gt;rounded\").corner();\n</code></pre>\n\n<p>Is there any better way to do this?</p>\n",
            "last_activity_date": 1400519206,
            "question_id": 1220834,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "jquery-selectors"
            ],
            "title": "Select all elements that have a specific CSS, using jQuery"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>No, media queries aren't designed to work based on elements in a page. They are designed to work based on devices or <a href=\"http://www.w3.org/TR/CSS21/media.html\">media types</a> (hence why they are called <em>media</em> queries). <a href=\"http://www.w3.org/TR/css3-mediaqueries/#width\"><code>width</code></a>, <a href=\"http://www.w3.org/TR/css3-mediaqueries/#height\"><code>height</code></a>, and other dimension-based media features all refer to the dimensions of either the viewport or the device's screen in screen-based media. They cannot be used to refer to a certain element on a page.</p>\n\n<p>If you need to apply styles depending on the size of a certain <code>div</code> element on your page, you'll have to use JavaScript to observe changes in the size of that <code>div</code> element instead of media queries.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>The question is very vague.  As BoltClock says, media queries only know the dimensions of the device.  However, you can use media queries in combination with descender selectors to perform adjustments.</p>\n\n<pre><code>.wide_container { width: 50em }\n\n.narrow_container { width: 20em }\n\n.my_element { border: 1px solid }\n\n@media (max-width: 30em) {\n    .wide_container .my_element {\n        color: blue;\n    }\n\n    .narrow_container .my_element {\n        color: red;\n    }\n}\n\n@media (max-width: 50em) {\n    .wide_container .my_element {\n        color: orange;\n    }\n\n    .narrow_container .my_element {\n        color: green;\n    }\n}\n</code></pre>\n\n<p>The only other solution requires JS.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I've just created a javascript shim to achieve this goal. Take a look if you want, it's a proof-of-concept, but take care: it's a early version and still needs some work.</p>\n\n<p><a href=\"https://github.com/marcj/css-element-queries\">https://github.com/marcj/css-element-queries</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>A Media Query inside of an iframe can function as an element query. I've successfully implement this. The idea came from a recent post about <a href=\"http://zurb.com/playground/responsive-ads\" rel=\"nofollow\">Responsive Ads</a> by Zurb. No Javascript!</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I would like to use media queries to resize elements based on the size of a <code>div</code> element they are in. I cannot use the screen size as the <code>div</code> is just used like a widget within the webpage, and its size can vary.</p>\n\n<h1>Update</h1>\n\n<p>Looks like there is work being done on this now:\n<a href=\"http://responsiveimagescg.github.io/eq-usecases/?utm_source=dlvr.it&amp;utm_medium=twitter\">http://responsiveimagescg.github.io/eq-usecases/?utm_source=dlvr.it&amp;utm_medium=twitter</a></p>\n",
            "last_activity_date": 1405538753,
            "question_id": 12251750,
            "score": 31,
            "tags": [
                "css",
                "css3",
                "media-queries"
            ],
            "title": "Can media queries resize based on a div element instead of the screen?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>To cater for ie you have to set the stylesheet to be disabled as it keeps the css styles in memory so removing the element will not work, it can also cause it to crash in some instances if I remember correctly.</p>\n\n<p>This also works for cross browser.</p>\n\n<p>e.g</p>\n\n<pre><code>document.styleSheets[0].disabled = true;\n</code></pre>\n\n<p>//so in your case using jquery try</p>\n\n<pre><code>$('link[title=mystyle]')[0].disabled=true;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>I managed to do it with:</p>\n\n<pre><code>$('link[title=\"mystyle\"]').attr('disabled', 'disabled');\n</code></pre>\n\n<p>it seems this is the only way to remove the styles from memory.\nthen I added:</p>\n\n<pre><code>$('link[title=\"mystyle\"]').remove();\n</code></pre>\n\n<p>to remove the element too.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>To disable your selected stylesheet:</p>\n\n\n\n<pre class=\"lang-js prettyprint-override\"><code>$('link[title=\"mystyle\"]').prop('disabled', true);\n</code></pre>\n\n<p>If you never want that stylesheet to be applied again, you can then <a href=\"http://api.jquery.com/remove/\"><code>.remove()</code></a> it. But don\u2019t do that if you want to be able to re-enable it later.</p>\n\n<p>To re-enable the stylesheet, do this (as long as you didn\u2019t <code>remove</code> the stylesheet\u2019s element):</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$('link[title=\"mystyle\"]').prop('disabled', false);\n</code></pre>\n\n<p>In the code above, it is important to use <a href=\"http://api.jquery.com/prop/\"><code>.prop</code></a>, not <a href=\"http://api.jquery.com/attr/\"><code>.attr</code></a>. If you use <code>.attr</code>, the code will work in some browsers, but not Firefox. This is because, <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link#attr-disabled\">according to MDN</a>, <code>disabled</code> is a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLinkElement#Properties\">property of the <code>HTMLLinkElement</code> DOM object</a>, but <em>not</em> an attribute of the <code>link</code> HTML element. Using <code>disabled</code> as an HTML attribute is nonstandard.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>To remove a stylesheet:</p>\n\n<pre><code>$('link[src=\"&lt;path&gt;\"]').remove();\n</code></pre>\n\n<p>To Replace a stylesheet:</p>\n\n<pre><code>$('link[src=\"&lt;path&gt;\"]').attr('src','&lt;NEW_FILE_PATH&gt;');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>no jQuery solution</p>\n\n<p>if you can add id to your link tag</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" href=\"css/animations.css\" id=\"styles-animations\"&gt;\n\ndocument.getElementById(\"styles-animations\").disabled = true;\n</code></pre>\n\n<p>if you know index position of your css file in document</p>\n\n<pre><code>document.styleSheets[0].disabled = true; // first\ndocument.styleSheets[document.styleSheets.length - 1].disabled = true; // last\n</code></pre>\n\n<p>if you want to disable style by name you can use this function</p>\n\n<pre><code>/**\n * @param [string]  [styleName] [filename with suffix e.g. \"style.css\"]\n * @param [boolean] [disabled]  [true disables style]\n */\nvar disableStyle = function(styleName, disabled) {\n    var styles = document.styleSheets;\n    var href = \"\";\n    for (var i = 0; i &lt; styles.length; i++) {\n        href = styles[i].href.split(\"/\");\n        href = href[href.length - 1];\n\n        if (href === styleName) {\n            styles[i].disabled = disabled;\n            break;\n        }\n    }\n};\n</code></pre>\n\n<p>note: make sure style file name is unique so you don't have \"dir1/style.css\" and \"dir2/style.css\". In that case it would disable only first style.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I do this?</p>\n\n<p>I tried</p>\n\n\n\n<pre class=\"lang-js prettyprint-override\"><code>$('link[title=\"mystyle\"]').remove();\n</code></pre>\n\n<p>and although the element is removed, the styles are still applied to the current page (in both Opera and Firefox).</p>\n\n<p>Is there any other way?</p>\n",
            "last_activity_date": 1423238860,
            "question_id": 3182840,
            "score": 24,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "Removing or replacing a stylesheet (a &lt;link&gt;) with JavaScript/jQuery"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can use <code>&amp;</code>, it will be replaced by the parent selector after compilation:</p>\n\n<p>For your example:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.container {\n    background:red;\n    &amp;.desc{\n       background:blue;\n    }\n}\n\n/* compiles to: */\n.container {\n    background: red;\n}\n.container.desc {\n    background: blue;\n}\n</code></pre>\n\n<p>See the Docs at <a href=\"http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#referencing_parent_selectors_\">Section Parent References</a>.<br>\nThe <code>&amp;</code> will completely resolve, so if your parent selector is nested itself, the nesting will be resolved before replacing the <code>&amp;</code>.  </p>\n\n<p>This notation is most often used to write <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\">pseudo-elements and -classes</a>:</p>\n\n<pre><code>.element{\n    &amp;:hover{ ... }\n    &amp;:nth-child(1){ ... }\n}\n</code></pre>\n\n<p>However, you can place the <code>&amp;</code> at virtually any position you like<sup>*</sup>, so the following is possible too:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.container {\n    background:red;\n    #id &amp;{\n       background:blue;\n    }\n}\n\n/* compiles to: */\n.container {\n    background: red;\n}\n#id .container {\n    background: blue;\n}\n</code></pre>\n\n<p>However be aware, that this somehow breaks your nesting structure and thus may increase the effort of finding a specific rule in your stylesheet.</p>\n\n<p>*: No other characters than whitespaces are allowed in front of the <code>&amp;</code>. So you cannot do a direct concatenation of <code>selector</code>+<code>&amp;</code> - <code>#id&amp;</code> would throw an error. </p>\n",
                    "is_accepted": true,
                    "score": 94
                }
            ],
            "body": "<p>I'm using Sass (.scss) for my current project. </p>\n\n<p>Following example:</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div class=\"container desc\"&gt;\n    &lt;div class=\"hello&gt;\n        Hello World\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>SCSS</strong></p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.container {\n    background:red;\n    color:white;\n\n    .hello {\n        padding-left:50px;\n    }\n}\n</code></pre>\n\n<p>This works great. </p>\n\n<p>Can I handle multiple classes while using nested styles.</p>\n\n<p>In the sample above I'm talking about this:</p>\n\n<p><strong>CSS</strong></p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.container.desc {\n    background:blue;\n}\n</code></pre>\n\n<p>In this case all <code>div.container</code> would normally be <code>red</code> but <code>div.container.desc</code> would be blue.</p>\n\n<p>How can I nest this inside <code>container</code> with Sass?</p>\n\n<p>Any ideas on that? Is that even possible?</p>\n",
            "last_activity_date": 1417473202,
            "question_id": 11084757,
            "score": 36,
            "tags": [
                "css",
                "sass",
                "stylesheet"
            ],
            "title": "Sass .scss: Nesting and multiple classes?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"http://social.msdn.microsoft.com/Forums/en-US/iewebdevelopment/thread/ad1b6e88-bbfa-4cc4-9e95-3889b82a7c1d\">This thread</a> suggests there is a limit of 31 CSS references per page/CSS file but that you can achieve more than that by using @import and a nested hierarchy of CSS files.</p>\n\n<p><a href=\"http://blogs.telerik.com/blogs/posts/10-05-03/internet_explorer_css_limits.aspx\">More info</a> from a Telerik blog on the issue making it clearer that this applies to IE8.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Yes, IE8 (and even IE9 apparently) limit the number of style sheets to 31 per page.</p>\n\n<p>Telerik has <a href=\"http://blogs.telerik.com/aspnetmvcteam/posts/10-05-03/internet-explorer-css-limits.aspx\">an article</a> and <a href=\"http://demos.telerik.com/testcases/BrokenTheme.aspx\">test page</a> which demonstrate the issue. According to comments in the same article, the 4096 rules per file limitation has been marked as Won't Fix in Microsoft Connect but I've been unable to verify that.</p>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p><a href=\"http://support.microsoft.com/kb/262161\" rel=\"nofollow\">Microsoft</a> claims the limit is 30, but the limit is apparently 31 according to <a href=\"http://blogs.telerik.com/blogs/posts/10-05-03/internet_explorer_css_limits.aspx\" rel=\"nofollow\">Telerik</a>. The Telerik blog also mentions a 4095 selectors per file limit.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Thanks to the above <a href=\"http://demos.telerik.com/testcases/BrokenTheme.aspx\" rel=\"nofollow\">testing script</a> I have just confirmed this limitation (apparently 30) still exists even in Internet Explorer 9!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I was building a site and hit this issue myself. It was driving me batty until a co-worker pointed this 31 CSS files issue out. Looking into it what struck me that it's more complicated than that because IE8 seemed to be loading some of the styles from the sheet but not all of them. It was ignoring media queries and chained classes just like it was behaving in Quirks mode \u2014\u00a0even though it wasn't in Quirks mode and both those were in the same CSS file as other CSS that was being used. Once I aggregated the CSS files into one file it all worked fine. Anyway I just wanted to point out that somehow this 31 limit also seems to trigger something like Quirks mode.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In <a href=\"http://stackoverflow.com/questions/3211885/is-there-any-limit-on-css-file-size/3211946#3211946\">an answer about CSS</a>, a user said:</p>\n\n<blockquote>\n  <p>Internet Explorer <strike>has</strike> is said to have a limit of 4096 CSS <em>rules</em> per file. <a href=\"http://msdn.microsoft.com/en-us/library/aa358796%28VS.85%29.aspx\">Reference</a> </p>\n  \n  <p>Also, it has a limit on the number of style sheets you can embed in a single document. I think it is 20.</p>\n</blockquote>\n\n<p>While the <a href=\"http://msdn.microsoft.com/en-us/library/aa358796%28VS.85%29.aspx\">reference on MSDN</a> seems to confirm this (and there's <a href=\"http://joshua.perina.com/africa/gambia/fajara/post/internet-explorer-css-file-size-limit\">a blog post</a> which confirms this in IE7), is this still the case for IE8?</p>\n",
            "last_activity_date": 1397775954,
            "question_id": 3211991,
            "score": 34,
            "tags": [
                "css",
                "internet-explorer",
                "internet-explorer-8"
            ],
            "title": "Does IE 8 have a limit on number of stylesheets per page?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>This is a native part of the <em>webkit</em> browsers and you cannot remove it. You should think about a hacky solution like <em>covering</em> or <em>hiding</em> the file inputs. </p>\n\n<p>A <em>hacky</em> solution:</p>\n\n<pre><code>input[type='file'] {\n  opacity:0    \n}\n</code></pre>\n\n<p>\n\n<pre><code>&lt;div&gt;\n    &lt;input type='file'/&gt;\n    &lt;span id='val'&gt;&lt;/span&gt;\n    &lt;span id='button'&gt;Select File&lt;/span&gt;\n&lt;/div&gt;   \n</code></pre>\n\n<p>\n\n<pre><code>$('#button').click(function(){\n   $(\"input[type='file']\").trigger('click');\n})\n\n$(\"input[type='file']\").change(function(){\n   $('#val').text(this.value.replace(/C:\\\\fakepath\\\\/i, ''))\n})    \n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/a8qN2/\">Fiddle</a></strong></p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>You will need to customise the control quite a lot to achieve this.</p>\n\n<p>Please follow the guide at: <a href=\"http://www.quirksmode.org/dom/inputfile.html\" rel=\"nofollow\">http://www.quirksmode.org/dom/inputfile.html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Give <code>-webkit-appearance:</code> a go. Worth a try anyway.</p>\n\n<p><a href=\"http://css-infos.net/property/-webkit-appearance\" rel=\"nofollow\">http://css-infos.net/property/-webkit-appearance</a></p>\n\n<p>Hope that helps :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Directly you can't modify much about <strong>input[type=file].</strong></p>\n\n<p>Make input type file opacity:0 and try to place a relative element [div/span/button] over it with custom CSS </p>\n\n<p>Try this\n<a href=\"http://jsfiddle.net/gajjuthechamp/pvyVZ/8/\" rel=\"nofollow\">http://jsfiddle.net/gajjuthechamp/pvyVZ/8/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>you can set a width for yor element which will show only the button and will hide the \"no file chosen\".</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is a tricky one. I could not find a way to select the 'no file chosen' element so I created a mask using the :after pseudo selector.</p>\n\n<p>My solution also requires the use of the following pseudo selector to style the button:</p>\n\n<pre><code>::-webkit-file-upload-button\n</code></pre>\n\n<p>Try this: <a href=\"http://jsfiddle.net/J8Wfx/1/\" rel=\"nofollow\">http://jsfiddle.net/J8Wfx/1/</a></p>\n\n<p>FYI: This will only work in webkit browsers.</p>\n\n<p>P.S if anyone knows how to view webkit pseudo selectors like the one above in the webkit inspector please let me know</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For me, I just wanted the text to be invisible and still use the native browser button.</p>\n\n<pre><code>input[type='file'] {\n  color: transparent;\n}\n</code></pre>\n\n<p>I like all of undefined's suggestions but I had a different use case, hope this helps someone in the same situation.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I think the most simple solution is:</p>\n\n<pre><code>font-size: 0\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I look for good answer for this... and I found this:</p>\n\n<p>First delete the 'no file chosen'</p>\n\n<pre><code>input[type=\"file\"]{\nfont-size: 0px;\n}\n</code></pre>\n\n<p>then work the button with the <code>-webkit-file-upload-button</code>, this way:</p>\n\n<pre><code>input[type=\"file\"]::-webkit-file-input-button{\nfont-size: 16px; /*normal size*/\n}\n</code></pre>\n\n<p>hope this is what you were looking for, it works for me.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can disable the tooltip setting a title with a space on webkit browsers like Chrome and an empty string on Firefox or IE (tested on Chrome 35, FF 29, IE 11, safari mobile)</p>\n\n<pre><code>if (window.webkitURL)\n    $('input[type=\"file\"]').attr('title', ' ');\nelse\n    $('input[type=\"file\"]').attr('title', '');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Combining some of the suggestions above, using jQuery, here is what I did:</p>\n\n<pre><code>input[type='file'].unused {\n  color: transparent;\n}\n</code></pre>\n\n<p>And:</p>\n\n<pre><code>$(function() {\n  $(\"input[type='file'].unused\").click( function() {$(this).removeClass('unused')});\n};\n</code></pre>\n\n<p>And put the class \"unused\" on your file inputs.  This is simple and works pretty well.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I would like to remove the \"No file chosen\" tooltip from a file input in Google Chrome (I see that no tooltip is displayed in Firefox).</p>\n\n<p>Please notice that I'm talking not about the text inside the input field, but about the tooltip that appears when you move the mouse over the input.</p>\n\n<p>I've tried this with no luck:</p>\n\n<pre><code>$('#myFileInput').attr('title', '');\n</code></pre>\n",
            "last_activity_date": 1410278069,
            "question_id": 12035400,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "google-chrome"
            ],
            "title": "How can I remove the &quot;No file chosen&quot; tooltip from a file input in Chrome?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><strong>Pure JavaScript:</strong></p>\n\n<pre><code>var button = document.getElementById('button'); // Assumes element with id='button'\n\nbutton.onclick = function() {\n    var div = document.getElementById('newpost');\n    if (div.style.display !== 'none') {\n        div.style.display = 'none';\n    }\n    else {\n        div.style.display = 'block';\n    }\n};\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/andrewwhitaker/hefGK/\">http://jsfiddle.net/andrewwhitaker/hefGK/</a></p>\n\n<p><strong>jQuery</strong>:</p>\n\n<pre><code>$(\"#button\").click(function() { \n    // assumes element with id='button'\n    $(\"#newpost\").toggle();\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/andrewwhitaker/KpFRb/\">http://jsfiddle.net/andrewwhitaker/KpFRb/</a></p>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>Look at <a href=\"http://api.jquery.com/toggle/\">jQuery Toggle</a></p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;div id='content'&gt;Hello World&lt;/div&gt;\n&lt;input type='button' id='hideshow' value='hide/show'&gt;\n</code></pre>\n\n<p><strong>jQuery:</strong></p>\n\n<pre><code>jQuery(document).ready(function(){\n    jQuery('#hideshow').live('click', function(event) {        \n         jQuery('#content').toggle('show');\n    });\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/vVsAn/1/\"><strong>Demo</strong></a></p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Here's a plain Javascript way of doing toggle:</p>\n\n<pre><code>&lt;script&gt;\n  var toggle = function() {\n  var mydiv = document.getElementById('newpost');\n  if (mydiv.style.display === 'block' || mydiv.style.display === '')\n    mydiv.style.display = 'none';\n  else\n    mydiv.style.display = 'block'\n  }\n&lt;/script&gt;\n\n&lt;div id=\"newpost\"&gt;asdf&lt;/div&gt;\n&lt;input type=\"submit\" value=\"btn\" onclick=\"toggle();\"&gt;&lt;/input&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Here is a javascript solution</p>\n\n<pre><code>var post = document.getElementById('newpost');\n\npost.style.display = 'none'; // to hide\npost.style.display = 'block'; // to show\n</code></pre>\n\n<p><strong>demo</strong>: <a href=\"http://www.jsfiddle.net/gaby/tKWmv/\" rel=\"nofollow\">http://www.jsfiddle.net/gaby/tKWmv/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use the following:</p>\n\n<p><code>mydiv.style.display === 'block' = (mydiv.style.display === 'block' ? 'none' : 'block');</code></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This is how I hide and show content using a class. changing the class to nothing will change the display to block, changing the class to 'a' will show the display as none.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;style&gt;\nbody  {\n  background-color:#777777;\n  }\nblock1{\n  display:block; background-color:black; color:white; padding:20px; margin:20px;\n  }\nblock1.a{\n  display:none; background-color:black; color:white; padding:20px; margin:20px;\n  }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;button onclick=\"document.getElementById('ID').setAttribute('class', '');\"&gt;Open&lt;/button&gt;\n&lt;button onclick=\"document.getElementById('ID').setAttribute('class', 'a');\"&gt;Close&lt;/button&gt;\n&lt;block1 id=\"ID\" class=\"a\"&gt;\n&lt;p&gt;Testing&lt;/p&gt;\n&lt;/block1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Hopefully this is an easy question.  I have a div that I want to toggle hidden/shown with a button.</p>\n\n<pre><code>&lt;div id=\"newpost\"&gt;\n</code></pre>\n",
            "last_activity_date": 1420744191,
            "question_id": 4528085,
            "score": 20,
            "tags": [
                "javascript",
                "css"
            ],
            "title": "toggle show/hide div with button?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>taken from <a href=\"http://www.catchmyfame.com/2007/06/02/leader-dots-with-css/\">catchmyfame</a>:</p>\n\n<p>\"How is this done? Basically field label is wrapped in a div which has a small image of a dot applied repeatedly in the x direction as a background. This alone would cause the dots to flow under the text so to nullify that effect, the text itself is then wrapped in a span where the background color is set to match the color of the background of the containing element. Here is the CSS:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.dots { \n  background: url('dot.gif') repeat-x bottom; \n}\n.field {\n  background-color: #FFFFFF;\n} \n</code></pre>\n\n<p>To apply this to the example form, you would just use it as: </p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;td&gt;\n    &lt;div class=\"dots\"&gt;\n        &lt;span class=\"field\"&gt;LastName&lt;/span&gt;\n    &lt;/div&gt;\n&lt;/td&gt;\n</code></pre>\n\n<p><a href=\"http://www.catchmyfame.com/images/dot.gif\">image</a> for the dot</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>This is the best CSS-only solution I have found for this issue of dot leaders:</p>\n\n<p><a href=\"http://www.w3.org/Style/Examples/007/leaders.en.html\" rel=\"nofollow\">http://www.w3.org/Style/Examples/007/leaders.en.html</a></p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;ul class=\"leaders\"&gt;\n &lt;li&gt;&lt;span&gt;Salmon Ravioli&lt;/span&gt; &lt;span&gt;7.95&lt;/span&gt;&lt;/li&gt;\n &lt;li&gt;&lt;span&gt;Fried Calamari&lt;/span&gt; &lt;span&gt;8.95&lt;/span&gt;&lt;/li&gt;\n &lt;li&gt;&lt;span&gt;Almond Prawn Cocktail&lt;/span&gt; &lt;span&gt;7.95&lt;/span&gt;&lt;/li&gt;\n &lt;li&gt;&lt;span&gt;Bruschetta&lt;/span&gt; &lt;span&gt;5.25&lt;/span&gt;&lt;/li&gt;\n &lt;li&gt;&lt;span&gt;Margherita Pizza&lt;/span&gt; &lt;span&gt;10.95&lt;/span&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p><strong>CSS2/CSS3</strong> </p>\n\n<pre><code>ul.leaders {\nmax-width: 40em;\npadding: 0;\noverflow-x: hidden;\nlist-style: none\n}\n\nul.leaders li:before {\nfloat: left;\nwidth: 0;\nwhite-space: nowrap;\ncontent:\n\". . . . . . . . . . . . . . . . . . . . \"\n\". . . . . . . . . . . . . . . . . . . . \"\n\". . . . . . . . . . . . . . . . . . . . \"\n\". . . . . . . . . . . . . . . . . . . . \"\n}\n\nul.leaders span:first-child {\npadding-right: 0.33em;\nbackground: white\n}\n\nul.leaders span + span {\nfloat: right;\npadding-left: 0.33em;\nbackground: white\n}\n</code></pre>\n\n<blockquote>\n  <p>We create the dot leaders with a \u2018:before\u2019 pseudo-element attached to\n  the LI elements. The pseudo-element fills the whole width of the list\n  item with dots and the SPANs are put on top. A white background on the\n  SPANs hides the dots behind them and an \u2018overflow: hidden\u2019 on the UL\n  ensures the dots do not extend outside the list.</p>\n  \n  <p>I used an arbitrary 80 dots, which is enough to fill about 38em, hence\n  the maximum width on the list.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>Acutally the W3C has a working draft describing the functionality you are looking for</p>\n\n<p><a href=\"http://www.w3.org/TR/css3-gcpm/#leaders\" rel=\"nofollow\">http://www.w3.org/TR/css3-gcpm/#leaders</a></p>\n\n<p>Even back in 2005 A List Apart published an article for it. (<a href=\"http://www.alistapart.com/articles/boom\" rel=\"nofollow\">http://www.alistapart.com/articles/boom</a>) Unfortunately It doesn't seem to work for me and I haven't found much more. But maybe it's worth keeping it in mind that one day in the near future will be possible with CSS only :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I mashed-up a couple examples to create what I think is a pretty good solution. Doesn't rely on background color to hide the leader dots. Works on IE8 too.</p>\n\n<p><a href=\"http://jsfiddle.net/westy808/g0d8x8c5/1/\" rel=\"nofollow\">http://jsfiddle.net/westy808/g0d8x8c5/1/</a></p>\n\n<pre><code>&lt;ul class=\"leaders\"&gt;\n    &lt;li&gt;&lt;span&gt;Item&lt;/span&gt;&lt;span&gt;12.234&lt;/span&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;span&gt;Another Item&lt;/span&gt;&lt;span&gt;1,000.25&lt;/span&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\nul.leaders li { clear: both; }\n\nul.leaders li span:first-child {\n    float: left;\n    padding: 0 .4em 0 0;\n    margin: 0;\n}\nul.leaders li span + span {\n    float: right;\n    padding: 0 0 0 .4em;\n    margin: 0;\n}\n\nul.leaders li:after {\n    content: \"\";\n    display: block;\n    overflow: hidden;\n    height: 1em;\n    border-bottom: 1px dotted;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It is possible to combine the <a href=\"http://www.w3.org/Style/Examples/007/leaders.en.html\" rel=\"nofollow\">classic technique of \"leaders\" described by the w3c</a> Thanks to <a href=\"http://stackoverflow.com/a/8132612/3244925\">@nootrope</a> with the joy of flexbox.</p>\n\n<h2>Here is an alternative approach, for <a href=\"http://caniuse.com/#feat=flexbox\" rel=\"nofollow\">Modern Browsers and IE 10+</a>.</h2>\n\n<p><strong>Demo: <a href=\"http://jsfiddle.net/tbm62z6L/2/\" rel=\"nofollow\">http://jsfiddle.net/tbm62z6L/2/</a></strong></p>\n\n<p>Some Basic HTML:</p>\n\n<pre><code>&lt;div class=\"article\"&gt;\n    &lt;span class=\"item\"&gt;sandwichtoaster&lt;/span&gt;\n    &lt;span class=\"dots\"&gt;&lt;/span&gt;\n    &lt;span class=\"price\"&gt;$35&lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>And some new CSS:</p>\n\n<pre><code>.article\n{\n    display: flex;\n}\n.article .item,\n.article .price\n{\n    flex: 1 0 auto;\n}\n\n.article .dots\n{\n    flex: 0 1 auto;\n}\n\n.dots::before\n{\n    display: block;\n    white-space: nowrap;\n    overflow: hidden;  \n    text-overflow: clip;\n    content:\n    \". . . . . . . . . . . . . . . . . . . . \"\n    \". . . . . . . . . . . . . . . . . . . . \"\n    \". . . . . . . . . . . . . . . . . . . . \"\n    \". . . . . . . . . . . . . . . . . . . . \"\n}\n</code></pre>\n\n<p>This is a very flexible way to display leading dots, using the current font and no need to use images. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Building up on <a href=\"http://stackoverflow.com/users/3244925/nico-o\">@Nico O</a>\u2018s <a href=\"http://stackoverflow.com/a/27279246/2444959\">answer</a>, there is no need for the un-semantic <code>.dots</code> element. One can simply write</p>\n\n<pre><code>&lt;ul class=\"toc\"&gt;\n  &lt;li&gt;&lt;span class=\"title\"&gt;Foo&lt;/span&gt;\n      &lt;span class=\"chapter\"&gt;Chapter 1&lt;/span&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;span class=\"title\"&gt;Bar&lt;/span&gt;\n      &lt;span class=\"chapter\"&gt;Chapter 2&lt;/span&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>as one would expect and apply the following styles</p>\n\n<pre><code>.toc li {\n  display: flex;\n}\n.toc li .title {\n  order: 1;\n}\n.toc li .chapter {\n  order: 3;\n}\n.toc li::after {\n  content: \"\";\n  border-bottom: 1px dotted;\n  flex-grow: 1;\n  order: 2;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/hmquvmvp/\" rel=\"nofollow\">JSFiddle here</a></p>\n\n<p>We take advantage of the fact that we can order the children of our flex container however we want, and the fact that a pseudo element behaves like a child of where it was defined. The key is the <code>flex-grow</code> rule. a <code>flex-grow</code> of <code>1</code> while all other siblings have the default <code>0</code> will grow to the remaining space even though it has no content.</p>\n\n<p>This will work until the <code>.title</code> and <code>.chapter</code> elements together fill all the space. Then the <code>::after</code> pseudo element will have a <code>width</code> of <code>0</code> and the dotted border wont be displayed, even though the <code>.title</code> and <code>.chapter</code> will wrap their content. So if you're sure that won't happen, and your viewers use <a href=\"http://caniuse.com/#feat=flexbox\" rel=\"nofollow\">modern browsers</a> this might be the optimal solution.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is a nice way to do leading dots in a table of contents with CSS?</p>\n\n<p>Example:</p>\n\n<pre><code>Link.............Chapter 1\nLink.............Chapter 2\nLink.............Chapter 3\n</code></pre>\n",
            "last_activity_date": 1425577724,
            "question_id": 2508732,
            "score": 13,
            "tags": [
                "css"
            ],
            "title": "Create leading dots in CSS"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can use CSS to embed fonts in web-pages.</p>\n\n<blockquote>\n  <p>Want to get away from \u2018Web Safe\u2019 fonts for some attractive headers AND do it without using an image? Use CSS 3 and embed a font-face!</p>\n</blockquote>\n\n<p><a href=\"http://www.zenelements.com/blog/css3-embed-font-face/\" rel=\"nofollow\">http://www.zenelements.com/blog/css3-embed-font-face/</a></p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>As Simon pointed out, the CSS @font-face declaration can be used to implement traditionally non-web-safe fonts on your site.  If you want to try it yourself, definitely check out Paul Irish's now famous <a href=\"http://paulirish.com/2009/bulletproof-font-face-implementation-syntax/\">bulletproof font face implementation</a>, which links to <a href=\"http://www.fontsquirrel.com/fontface/generator\">FontSquirrel's font file generator</a>.  It's now supported cross-browser with the right implementation, although with most fonts you'll have to deal with licensing, and consistent rendering is still an issue.</p>\n\n<p>The site you asked about though uses <a href=\"http://typekit.com/\">Typekit</a>, one of several new services that will host and serve font files for you (for a fee), and offers you an easy implementation that masks the complications of @font-face.  Google's <a href=\"http://code.google.com/apis/webfonts/\">Font API</a> is similar, although it's free and only hosts/serves a small selection of free fonts.</p>\n\n<p>Also, non-native alternative techniques for embedding fonts have been around for a while (although they wouldn't be indicated in the CSS), see <a href=\"http://cufon.shoqolate.com/generate/\">cufon</a> and <a href=\"http://www.mikeindustries.com/blog/sifr\">sIFR</a>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Here's a sample page I was playing around with recently to view math formulas in Firefox.  The part you are (likely) most interested in is the css <code>@font-face</code> declaration at the top, and the <code>style=\"font-family: DejaVu Serif Web;\"</code> assigned to the <code>&lt;div&gt;</code> and <code>&lt;math&gt;</code> tags.</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN\" \"http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;title&gt;mathy fonts test&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n        @font-face {\n            font-family: DejaVu Serif Web;\n            src: url(/fonts/DejaVu/ttf/DejaVuSerif.ttf) format(\"truetype\");\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;DejaVu Serif&lt;/h1&gt;\n    &lt;div style=\"font-family: DejaVu Serif Web;\"&gt;\n        &lt;p&gt;\n            Nulla eu commodo neque. Donec nec nisi libero. Integer sollicitudin leo\n            vel arcu elementum mattis. Vivamus eu sodales odio. Curabitur eu auctor\n            leo. Pellentesque adipiscing nulla iaculis ante commodo aliquet. Donec\n            egestas tincidunt tincidunt. Nunc ut condimentum orci. Aenean in egestas\n            tortor. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices\n            posuere cubilia Curae; Curabitur suscipit, sapien ut dignissim\n            pellentesque, lacus risus facilisis odio, et tristique nunc quam et\n            mauris. Quisque pellentesque nulla et dui bibendum suscipit. Aenean\n            consectetur adipiscing nulla, a molestie nunc semper non. Quisque at\n            ipsum quis turpis gravida commodo et vel felis. Integer lobortis augue\n            eu tortor aliquet nec mattis nulla aliquam. Sed ornare cursus urna et\n            congue.\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;math style=\"font-family: DejaVu Serif Web;\" mode=\"display\" xmlns=\"http://www.w3.org/1998/Math/MathML\"&gt;\n                &lt;mrow&gt;\n                    &lt;mi&gt;x&lt;/mi&gt;\n                    &lt;mo&gt;=&lt;/mo&gt;\n                    &lt;mfrac&gt;\n                        &lt;mrow&gt;\n                            &lt;mo form=\"prefix\"&gt;&amp;#x2212;&lt;!-- &amp;minus; --&gt;&lt;/mo&gt;\n                            &lt;mi&gt;b&lt;/mi&gt;\n                            &lt;mo&gt;&amp;#x00B1;&lt;!-- &amp;PlusMinus; --&gt;&lt;/mo&gt;\n                            &lt;msqrt&gt;\n                                &lt;msup&gt;\n                                    &lt;mi&gt;b&lt;/mi&gt;\n                                    &lt;mn&gt;2&lt;/mn&gt;\n                                &lt;/msup&gt;\n                                &lt;mo&gt;&amp;#x2212;&lt;!-- &amp;minus; --&gt;&lt;/mo&gt;\n                                &lt;mn&gt;4&lt;/mn&gt;\n                                &lt;mo&gt;&amp;#x2062;&lt;!-- &amp;InvisibleTimes; --&gt;&lt;/mo&gt;\n                                &lt;mi&gt;a&lt;/mi&gt;\n                                &lt;mo&gt;&amp;#x2062;&lt;!-- &amp;InvisibleTimes; --&gt;&lt;/mo&gt;\n                                &lt;mi&gt;c&lt;/mi&gt;\n                            &lt;/msqrt&gt;\n                        &lt;/mrow&gt;\n                        &lt;mrow&gt;\n                            &lt;mn&gt;2&lt;/mn&gt;\n                            &lt;mo&gt;&amp;#x2062;&lt;!-- &amp;InvisibleTimes; --&gt;&lt;/mo&gt;\n                            &lt;mi&gt;a&lt;/mi&gt;\n                        &lt;/mrow&gt;\n                    &lt;/mfrac&gt;\n                &lt;/mrow&gt;\n            &lt;/math&gt;\n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>If viewing locally, it has to be saved as .xhtml, not just .html, which got me for a bit.  This is, of course, related to the math-y stuff, not the font-face, so it's only a note if you're trying to use this code whole.</p>\n\n<hr>\n\n<p>There's a decent list of fonts you can (legally) embed in your document <a href=\"http://webfonts.info/wiki/index.php?title=Fonts_available_for_%40font-face_embedding\" rel=\"nofollow\">here</a>.</p>\n\n<p><a href=\"http://typekit.com/\" rel=\"nofollow\">Typekit</a> also provides a nifty way to embed fonts that do require licensing deals with type foundries.  They currently offer the ability to use one font (of your choice) for free.</p>\n\n<p>Font linking has been in browsers for quite some time; the issue was with what format you could use.  Microsoft, of course, supported a proprietary font format, and Mozilla did not.  <em>sigh</em></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The Google Font Directory is an interesting resource for understanding the direction web fonts are moving in:</p>\n\n<p><a href=\"http://code.google.com/webfonts/preview\" rel=\"nofollow\">http://code.google.com/webfonts/preview</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Google recently released <a href=\"http://code.google.com/apis/webfonts/\" rel=\"nofollow\">Font API</a>, it might be of some use to you.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I recently came across <a href=\"http://cykod.com/blog/\">a web page using the font \u201cff-tisa-web-pro-1\u201d</a> (specified in their CSS file).</p>\n\n<p>How does that work? I definitely don\u2019t have this font on my computer, yet it was displayed.</p>\n",
            "last_activity_date": 1279015360,
            "question_id": 2969323,
            "score": 11,
            "tags": [
                "css",
                "fonts",
                "font-face"
            ],
            "title": "Non-Standard fonts in web?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The style sheet is actually injected, but not applied, because other styles override the rules. To get the rules to work, you have some options:</p>\n\n<ol>\n<li>Increase the <a href=\"http://css-tricks.com/specifics-on-css-specificity/\">specificity</a> of your CSS rules. </li>\n<li><p>Suffice every rule with <code>!important</code>:</p>\n\n<pre><code>#test {\n    margin: 0 10px !important;\n    background: #fff !important;\n    padding: 3px !important;\n    color: #000 !important;\n}\n</code></pre></li>\n<li><p>Inject the CSS via a content script:</p>\n\n<p><code>myScript.js</code>:</p>\n\n<pre><code>var style = document.createElement('link');\nstyle.rel = 'stylesheet';\nstyle.type = 'text/css';\nstyle.href = chrome.extension.getURL('myStyles.css');\n(document.head||document.documentElement).appendChild(style);\n</code></pre>\n\n<p><code>manifest.json</code></p>\n\n<pre><code>{\n  \"name\": \"Extension\",\n  \"version\": \"0\",\n  \"description\": \"\",\n  \"manifest_version\": 2,\n  \"permissions\": [\"tabs\", \"http://*/*\", \"https://*/*\", \"file:///*/*\"],\n    \"content_scripts\": [\n    {\n        \"matches\": [ \"http://*/*\", \"https://*/*\", \"file:///*/*\"],\n        \"js\": [\"myScript.js\"],\n        \"all_frames\": true\n    }\n  ],\n  \"web_accessible_resources\": [\"myStyles.css\"]\n}\n</code></pre>\n\n<p>The last key, <code>web_accessible_resources</code> is necessary when <a href=\"http://developer.chrome.com/extensions/manifestVersion.html\">manifest version</a> 2 is active, so that the CSS file can be read from a non-extension page.</p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>Can anyone explain this to me. I'm trying to inject a CSS file onto a webpage using the content_script with Google extensions, but my css file never gets added to the webpage. Can someone tell me what I'm doing wrong and help me fix it? thanks</p>\n\n<p>Manifest:</p>\n\n<pre><code>{\n  \"name\": \"Extension\",\n  \"version\": \"0\",\n  \"description\": \"\",\n\n\n  \"permissions\": [\"tabs\", \"http://*/*\", \"https://*/*\", \"file:///*/*\"],\n    \"content_scripts\": [\n    {\n        \"matches\": [ \"http://*/*\", \"https://*/*\", \"file:///*/*\"],\n        \"css\": [\"myStyles.css\"],\n        \"js\": [\"myScript.js\"],\n        \"all_frames\": true\n    }\n  ]\n}\n</code></pre>\n\n<p>myStyles.css</p>\n\n<pre><code>#test {\n    margin: 0 10px;\n    background: #fff;\n    padding: 3px;\n    color: #000;\n}\n</code></pre>\n",
            "last_activity_date": 1364376972,
            "question_id": 9721344,
            "score": 7,
            "tags": [
                "css",
                "google-chrome-extension",
                "content-script"
            ],
            "title": "My CSS is not getting injected through my content script"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>How about this?</p>\n\n<pre><code>$('&lt;span class=\"highlight\"&gt;&lt;/span&gt;').appendTo('body');\n$(this).animate({\n    color: $('.highlight').css('color')\n}, 750);\n$('.highlight').remove();\n</code></pre>\n\n<p>It's kind of dirty but will give you an (empty) element to reference to get the CSS value for which you are looking.</p>\n\n<p><strong>Update</strong> Here is a decent solution from <a href=\"http://stackoverflow.com/questions/2226869/css-parser-abstracter-how-to-convert-stylesheet-into-object\">CSS parser/abstracter? How to convert stylesheet into object</a></p>\n\n<pre><code>function findColorProperty(selector) {\n    rules = document.styleSheets[0].cssRules\n    for(i in rules) {\n        //if(rules[i].selectorText==selector) \n            //return rules[i].cssText; // Original\n        if(rules[i].selectorText == selector) \n            return rules[i].style.color; // Get color property specifically\n    }\n    return false;\n}\n</code></pre>\n\n<p>Usage</p>\n\n<pre><code>$(this).animate({\n    color: findColorProperty('.highlight')\n}, 750);\n</code></pre>\n\n<p>Here is a fiddle <a href=\"http://jsfiddle.net/wzXDx/1/\" rel=\"nofollow\">http://jsfiddle.net/wzXDx/1/</a>.  I had to use <code>styleSheets[1]</code> to get this to work in the fiddle due to the embedded nature of the environment.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Since you are already using jQuery try using the jQuery-ui's function <a href=\"http://jqueryui.com/switchClass/\" rel=\"nofollow\"><code>switchClass</code></a> which would allow you to animate to this new color.</p>\n\n<p>For example: </p>\n\n<pre><code> $('div').switchClass( \"\", \"highlight\", 1000 );\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/JKX7v/\" rel=\"nofollow\"><strong>Demo</strong></a></p>\n\n<hr>\n\n<p>In case you do not want to include the <strong>whole</strong> UI library here is the code they use:</p>\n\n<pre><code>switchClass: function( remove, add, speed, easing, callback) {\n    return $.effects.animateClass.call( this, {\n        add: add,\n        remove: remove\n    }, speed, easing, callback );\n}\n</code></pre>\n\n<p>And the animateClass fn:</p>\n\n<pre><code>var classAnimationActions = [ \"add\", \"remove\", \"toggle\" ],\n    shorthandStyles = {\n        border: 1,\n        borderBottom: 1,\n        borderColor: 1,\n        borderLeft: 1,\n        borderRight: 1,\n        borderTop: 1,\n        borderWidth: 1,\n        margin: 1,\n        padding: 1\n    };\nfunction styleDifference( oldStyle, newStyle ) {\n    var diff = {},\n        name, value;\n\n\n\n\n    for ( name in newStyle ) {\n        value = newStyle[ name ];\n        if ( oldStyle[ name ] !== value ) {\n            if ( !shorthandStyles[ name ] ) {\n                if ( $.fx.step[ name ] || !isNaN( parseFloat( value ) ) ) {\n                    diff[ name ] = value;\n                }\n            }\n        }\n    }\n\n\n\n\n    return diff;\n}\nfunction getElementStyles( elem ) {\n    var key, len,\n        style = elem.ownerDocument.defaultView ?\n            elem.ownerDocument.defaultView.getComputedStyle( elem, null ) :\n            elem.currentStyle,\n        styles = {};\n\n\n\n\n    if ( style &amp;&amp; style.length &amp;&amp; style[ 0 ] &amp;&amp; style[ style[ 0 ] ] ) {\n        len = style.length;\n        while ( len-- ) {\n            key = style[ len ];\n            if ( typeof style[ key ] === \"string\" ) {\n                styles[ $.camelCase( key ) ] = style[ key ];\n            }\n        }\n    // support: Opera, IE &lt;9\n    } else {\n        for ( key in style ) {\n            if ( typeof style[ key ] === \"string\" ) {\n                styles[ key ] = style[ key ];\n            }\n        }\n    }\n\n\n\n\n    return styles;\n}\n$.effects.animateClass = function( value, duration, easing, callback ) {\n    var o = $.speed( duration, easing, callback );\n\n    return this.queue( function() {\n        var animated = $( this ),\n            baseClass = animated.attr( \"class\" ) || \"\",\n            applyClassChange,\n            allAnimations = o.children ? animated.find( \"*\" ).addBack() : animated;\n\n        // map the animated objects to store the original styles.\n        allAnimations = allAnimations.map(function() {\n            var el = $( this );\n            return {\n                el: el,\n                start: getElementStyles( this )\n            };\n        });\n\n        // apply class change\n        applyClassChange = function() {\n            $.each( classAnimationActions, function(i, action) {\n                if ( value[ action ] ) {\n                    animated[ action + \"Class\" ]( value[ action ] );\n                }\n            });\n        };\n        applyClassChange();\n\n        // map all animated objects again - calculate new styles and diff\n        allAnimations = allAnimations.map(function() {\n            this.end = getElementStyles( this.el[ 0 ] );\n            this.diff = styleDifference( this.start, this.end );\n            return this;\n        });\n\n        // apply original class\n        animated.attr( \"class\", baseClass );\n\n        // map all animated objects again - this time collecting a promise\n        allAnimations = allAnimations.map(function() {\n            var styleInfo = this,\n                dfd = $.Deferred(),\n                opts = $.extend({}, o, {\n                    queue: false,\n                    complete: function() {\n                        dfd.resolve( styleInfo );\n                    }\n                });\n\n            this.el.animate( this.diff, opts );\n            return dfd.promise();\n        });\n\n        // once all animations have completed:\n        $.when.apply( $, allAnimations.get() ).done(function() {\n\n            // set the final class\n            applyClassChange();\n\n            // for each animated element,\n            // clear all css properties that were animated\n            $.each( arguments, function() {\n                var el = this.el;\n                $.each( this.diff, function(key) {\n                    el.css( key, \"\" );\n                });\n            });\n\n            // this is guarnteed to be there if you use jQuery.speed()\n            // it also handles dequeuing the next anim...\n            o.complete.call( animated[ 0 ] );\n        });\n    });\n};\n</code></pre>\n\n<p>Working fiddle with all the functions that are needed: <a href=\"http://jsfiddle.net/maniator/3C5ZQ/\" rel=\"nofollow\">http://jsfiddle.net/maniator/3C5ZQ/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I wrote a small function that traverses the stylesheets on the document looking for the matched selector, then style.</p>\n\n<p>There is one caveat, this will only work for style sheets defined with a style tag, or external sheets from the same domain. </p>\n\n<p>If the sheet is known you can pass it in and save yourself from having to look in multiple sheets (faster and if you have colliding rules it's more exact).</p>\n\n<p>I only tested on jsFiddle with some weak test cases, let me know if this works for you. </p>\n\n<pre><code>function getStyleRuleValue(style, selector, sheet) {\n    var sheets = typeof sheet !== 'undefined' ? [sheet] : document.styleSheets;\n    for (var i = 0, l = sheets.length; i &lt; l; i++) {\n        var sheet = sheets[i];\n        if( !sheet.cssRules ) { continue; }\n        for (var j = 0, k = sheet.cssRules.length; j &lt; k; j++) {\n            var rule = sheet.cssRules[j];\n            if (rule.selectorText &amp;&amp; rule.selectorText.split(',').indexOf(selector) !== -1) {\n                return rule.style[style];\n            }\n        }\n    }\n    return null;\n}\n</code></pre>\n\n<p>example usage: </p>\n\n<pre><code>var color = getStyleRuleValue('color', '.foo'); // searches all sheets for the first .foo rule and returns the set color style.\n\nvar color = getStyleRuleValue('color', '.foo', document.styleSheets[2]); \n</code></pre>\n\n<h2>edit:</h2>\n\n<p>I neglected to take into consideration grouped rules. I changed the selector check to this: </p>\n\n<pre><code>if (rule.selectorText.split(',').indexOf(selector) !== -1) {\n</code></pre>\n\n<p>now it will check if any of the selectors in a grouped rules matches. </p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>I've just wrote this function get all styles by a selector. Notice: The selector must be the same as in the CSS.</p>\n\n<pre><code>    /**\n     * Gets styles by a classname\n     * \n     * @notice The className must be 1:1 the same as in the CSS\n     * @param string className_\n     */\n    function getStyle(className_) {\n\n        var styleSheets = global_.document.styleSheets;\n        var styleSheetsLength = styleSheets.length;\n        for(var i = 0; i &lt; styleSheetsLength; i++){\n            var classes = styleSheets[i].rules || styleSheets[i].cssRules;\n            var classesLength = classes.length;\n            for (var x = 0; x &lt; classesLength; x++) {\n                if (classes[x].selectorText == className_) {\n                    var ret;\n                    if(classes[x].cssText){\n                        ret = classes[x].cssText;\n                    } else {\n                        ret = classes[x].style.cssText;\n                    }\n                    if(ret.indexOf(classes[x].selectorText) == -1){\n                        ret = classes[x].selectorText + \"{\" + ret + \"}\";\n                    }\n                    return ret;\n                }\n            }\n        }\n\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I access an attribute from a css class by jquery?</p>\n\n<p>I have a css class like:</p>\n\n<pre><code>.highlight { \n    color: red; \n}\n</code></pre>\n\n<p>And I need to do a color animation on an object:</p>\n\n<pre><code>$(this).animate({\n    color: [color of highlight class]\n}, 750);\n</code></pre>\n\n<p>So that I can change from 'red' to 'blue' (in the css) and my animation will works according my css.</p>\n\n<p>An approach would be to place a invisible element with the 'highlight' class and then get the color of the element to use in the animation, but i guess this is a very very bad practice.</p>\n\n<p>Any suggestions?</p>\n",
            "last_activity_date": 1422874930,
            "question_id": 16965515,
            "score": 5,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "class"
            ],
            "title": "How to get a style attribute from a css class by javascript/jquery?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I dont see any problems here. Works in IE9 and GG11</p>\n\n<p><a href=\"http://jsfiddle.net/tSBjk/1/\" rel=\"nofollow\">Working example</a></p>\n\n<pre><code>&lt;select name=\"color\"&gt;\n  &lt;option class=\"red\" value=\"red\"&gt;Red&lt;/option&gt;\n  &lt;option value=\"white\"&gt;White&lt;/option&gt;\n  &lt;option value=\"blue\"&gt;Blue&lt;/option&gt;\n  &lt;option value=\"green\"&gt;Green&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>and css </p>\n\n<pre><code>option.red\n    {\n    background-color: #cc0000;\n    font-weight: bold;\n    font-size: 12px;\n    color: white;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Unfortunately, webkit browsers do not support styling of <code>&lt;option&gt;</code> tags yet.</p>\n\n<p>The most widely used cross browser solution is to use <code>&lt;ul&gt;</code> / <code>&lt;li&gt;</code> and style them using CSS. \nFrameworks like <a href=\"http://twitter.github.io/bootstrap/\" rel=\"nofollow\">Bootstrap</a> do this well.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I can't find any W3C specification about styling select options, but I'm sure it is not any browsers bug.</p>\n\n<p>I think it's a choice (from browser devs or W3C) not allowing to style select options.</p>\n\n<p>I suspect this choice would be to keep consistency between standard choice lists.<br>\n(think about mobile devices for example).</p>\n\n<p>3 solutions come to my mind:</p>\n\n<ul>\n<li>Use <a href=\"http://ivaynberg.github.io/select2/\" rel=\"nofollow\">Select2</a> which actually converts your selects into <code>ul</code>s (allowing many things)</li>\n<li>Split your <code>select</code>s into multiple in order to group values</li>\n<li>Split into <code>optgroup</code></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I actually discovered something recently that seems to work for styling individual <code>&lt;option&gt;&lt;/option&gt;</code> elements within Chrome, Firefox, and IE using pure CSS.</p>\n\n<p>Maybe, try the following:</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;select&gt;\n    &lt;option value=\"blank\"&gt;Blank&lt;/option&gt;\n    &lt;option class=\"white\" value=\"white\"&gt;White&lt;/option&gt;\n    &lt;option class=\"red\" value=\"red\"&gt;Red&lt;/option&gt;\n    &lt;option class=\"blue\" value=\"blue\"&gt;Blue&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>select {\n    background-color:#000;\n    color: #FFF;\n}\n\nselect * {\n    background-color:#000;\n    color:#FFF;\n}\n\nselect *.red { /* This, miraculously, styles the '&lt;option class=\"red\"&gt;&lt;/option&gt;' elements. */\n    background-color:#F00;\n    color:#FFF;\n}\n\nselect *.white {\n    background-color:#FFF;\n    color:#000;\n}\n\nselect *.blue {\n    background-color:#06F;\n    color:#FFF;\n}\n</code></pre>\n\n<p>Strange what throwing caution to the wind does. It doesn't seem to support the <code>:active :hover :focus :link :visited :after :before</code>, though.</p>\n\n<p>Example on JSFiddle: <a href=\"http://jsfiddle.net/Xd7TJ/2/\" rel=\"nofollow\">http://jsfiddle.net/Xd7TJ/2/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm trying to set the style of an <code>option</code> in a <code>select</code> dropdown menu in Google Chrome. It works in all browsers except IE9 and Chrome.</p>\n\n<pre><code>&lt;style&gt;\noption.red {\n  background-color: #cc0000; font-weight: bold; font-size: 12px; color: white;\n}\n&lt;/style&gt;\n\n&lt;select name=\"color\"&gt;\n  &lt;option class=\"red\" value=\"red\"&gt;Red&lt;/option&gt;\n  &lt;option value=\"white\"&gt;White&lt;/option&gt;\n  &lt;option value=\"blue\"&gt;Blue&lt;/option&gt;\n  &lt;option value=\"green\"&gt;Green&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>Without using JavaScript, is there a way to set style to the options in Google Chrome? Once selected the background color does not display.</p>\n",
            "last_activity_date": 1395789932,
            "question_id": 5887133,
            "score": 20,
            "tags": [
                "css",
                "google-chrome"
            ],
            "title": "CSS+Select Dropdown Option"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You don't need a Strict DOCTYPE for <code>fixed</code> support. You only need a DOCTYPE that triggers <a href=\"http://en.wikipedia.org/wiki/Quirks%5Fmode#Comparison%5Fof%5Fdocument%5Ftypes\">Standards Mode</a> (or \u2018almost standards\u2019). That can be a transitional doctype such as:</p>\n\n<pre><code>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;\n</code></pre>\n\n<p>or XHTML:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n</code></pre>\n\n<p>as long as the system ID (the URI at the end) is included.</p>\n\n<p>If your pages really <em>are</em> relying on Quirks Mode (ugh!), I'm sorry but you cannot use <code>fixed</code> and will have to resort to JavaScript hacks (but then you might need those for IE6 anyway).</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>Fixed position does not work for me even with the Transitional/Strict Doc types. However I am using IE9 in compatibility mode and that is suppose to render using the IE8 runtime libraries. To fix this issue I had to add the following CSS to element.</p>\n\n<pre><code>.elementToBeFixed {\n    position: fixed;\n    top: 0;\n    left: 0;\n}\n</code></pre>\n\n<p>It does not work with Top or Left being missing you have to explicitly set them to zero (or your desired value) for it to work in all versions of IE....Needless to say IE sucks.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I know that <code>position:fixed;</code> was not supported by IE until IE 7, and it only works in IE 7 if you have a <code>STRICT DOCTYPE</code>. </p>\n\n<p>My question is: \"How do I get it work with IE 7 with <code>TRANSITIONAL DOCTYPE</code>?\"</p>\n\n<p>Please don't suggest changing a <code>DOCTYPE</code>, as this does not answer my question, thank you.</p>\n",
            "last_activity_date": 1330721416,
            "question_id": 1628265,
            "score": 15,
            "tags": [
                "css",
                "internet-explorer-7",
                "doctype"
            ],
            "title": "How to get &quot;position:fixed&quot; css to work in IE 7+ with TRANSITIONAL doctype?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The <code>area</code> tag just defines space in which the user can click, there is no visual representation of it so you can't really use CSS to style it.  I like where you're headed but unfortunately you will probably need to use javascript to overlay a transparent image over the top of your image map to accomplish what you're trying to do.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<h3>jQuery Plugin, MapHilight:</h3>\n\n<p>You might find the <a href=\"http://davidlynch.org/js/maphilight/docs/\">jQuery plugin MapHilight</a> to be of interest here.</p>\n\n<ul>\n<li><a href=\"http://davidlynch.org/js/maphilight/docs/demo%5Fusa.html\">Map of the United States Demo</a></li>\n</ul>\n\n<h3>HTML/CSS Alternative</h3>\n\n<p>I would suggest using a div, with absolute links within. The reason being, this will degrade very nicely and show all of the options as a list of links. Image maps won't be so friendly. Furthermore, this alternative will deliver the same results, with cleaner and more modern practices.</p>\n\n<pre><code>#myImage {\n  position:relative; width:640px; height:100px; \n  background-image:url(\"bkg.jpg\");\n}\na.apples {\n  display:block; position:absolute; \n  top:0; left:0; width:100px; height:100px;\n  border:1px solid red;\n}\na.taters {\n  display:block; position:absolute;\n  top:0; left:200px; width:25px; height:25px;\n  border:1px dotted orange;\n}\n#myImage a span {\n  display:none;\n}\n</code></pre>\n\n<p>--</p>\n\n<pre><code>&lt;div id=\"myImage\"&gt;\n  &lt;ul&gt;\n    &lt;li&gt;&lt;a href=\"page1.html\" class=\"apples\"&gt;&lt;span&gt;Apples&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"page2.html\" class=\"taters\"&gt;&lt;span&gt;Taters&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>If only it were so easy.</p>\n\n<p>If you want to draw simple shapes, you might be able to get there using the HTML &lt;canvas&gt; element, which is what libraries like flot use (IE requires the excanvas emulator).</p>\n\n<p>It'll still require a fair amount of Javascript, but it might be easier/more effective than messing around with overlay images, especially if the sizes of your shapes aren't static.  There's a pretty good tutorial <a href=\"http://permadi.com/blog/?p=418\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>So your question hit home for me. I'd love to be able to do something similar using area tags to get nice little \"shapes\" other than square for areas of interest. So I did a little research and here's what I found:</p>\n\n<p><a href=\"http://www.netzgesta.de/mapper/\" rel=\"nofollow\">http://www.netzgesta.de/mapper/</a></p>\n\n<p>Doesn't look like it will 100% do what you want, but maybe it is a starting point.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>How do I make an html &lt; area /> visible at all times, not just on focus?</p>\n\n<p>Seems it <em>should</em> be as simple as this:</p>\n\n<p>html:</p>\n\n<pre><code>&lt;img src=\"image.png\" width=\"100\" height=\"100\" usemap=\"#Map\" /&gt;\n&lt;map name=\"Map\" id=\"Map\"&gt;\n&lt;area shape=\"circle\" coords=\"50,50,50\" href=\"#\" alt=\"circle\" /&gt;\n&lt;/map&gt;\n</code></pre>\n\n<p>css:</p>\n\n<pre><code>area {border: 1px solid red}\n</code></pre>\n\n<p>No matter what I do, it seems I cannot affect the styling of an area at all, it genuinely appears immune to css.  Any ideas?  Also, any other examples of un-style-able tags?</p>\n",
            "last_activity_date": 1354144551,
            "question_id": 1906734,
            "score": 12,
            "tags": [
                "html",
                "css"
            ],
            "title": "Visible Area tag?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>It will have to be done with JavaScript, using jquery you can permanently add the style like this:</p>\n\n<pre><code>$(#onabout).onmouseover().css(\"display\",\"block\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can't permanently stay as hover state using CSS as it merely defines the rules on styling the tags, classes, IDs, pseudo-classes, and states. So unfortunately, you need Javascript to solve the problem.</p>\n\n<p>Being a fan of <a href=\"http://jquery.com/\">jQuery library</a> (hehehe), here is my solution.</p>\n\n<h2>CSS</h2>\n\n<pre><code>ul li ul {\n    display: none;\n}\nul li.permahover ul {\n    display: block;\n}\n</code></pre>\n\n<h2>Javascript using jQuery</h2>\n\n<pre><code>$(\"#onabout\").one(\"mouseover\", function() {\n  $(\"#onabout\").addClass('permahover');\n});\n</code></pre>\n\n<p>The <code>one</code> event attaches a handler to an event for the elements. The handler is executed at most <strong>once</strong> per element.</p>\n\n<h2>Demo</h2>\n\n<p><a href=\"http://jsfiddle.net/jlratwil/w83BW/\">http://jsfiddle.net/jlratwil/w83BW/</a></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>the best solution is adding or removing classes to an element like this(done with JQUERY)</p>\n\n<pre><code>#about {\nheight: 25px;\nwidth: 84px;\nbackground-image: url('about.png');\nposition: absolute;\ntop: 200px;\nleft: 0px;\n}\n\n#onabout {\nheight: 200px;\nwidth: 940px;\nposition: absolute;\ntop: 60px;\nleft: 0px;\ncolor: #fff;\nfont-family: 'Lato', sans-serif;\nfont-size: 15px;\nfont-weight: 300;\ndisplay: none;\n}\n\n#about.hover #onabout {\ndisplay: block;\n}\n</code></pre>\n\n<p>notice that I chang :hover to .hover(Class Name)</p>\n\n<pre><code>$(\"#about\").hover(function(){\n   $(this).addClass(\"hover\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h2>Some Pure CSS Ideas</h2>\n\n<p>I'm not quite sure what you intend by \"stay visible.\" Here are some differing thoughts based off your possible purposes, but each has possible side effects not intended. The only purely permanent solution is going to be through javascript (as others have noted).</p>\n\n<p><strong>Longer 'Stay' But Still Not Permanent</strong></p>\n\n<p>If you mean stay visible as long as <em>one might also be hovering over the revealed image itself</em>, then a simple change in your code will work:</p>\n\n<pre><code>#about:hover #onabout,\n#onabout:hover {\n   display: block;\n}\n</code></pre>\n\n<p><strong>Permanent 'Stay'</strong></p>\n\n<p>If you wrap your <code>#onabout</code> in a <code>position: fixed</code> wrapper <em>that is also revealed on hover</em>, and set that wrapper to fix to the top, right, bottom, and left of the screen, then use that wrapper's <code>:hover</code> to keep the <code>#onabout</code> it will stay permanently. But it is also going to be in a fixed position relation, and other hover events or clicks may be prevented. That is likely not desirable, but again, I don't know your specific application, so it is possible that the idea would work for you. You would actually set the <code>display: block</code> as default on the <code>#onabout</code> and hide it through the wrapper. Code for the wrapper and the hover would be something like:</p>\n\n<pre><code>#permaHoverWrap {\n   position: fixed;\n   top: 0;\n   right: 0;\n   bottom: 0;\n   left: 0;\n   display: none;\n}\n\n#about:hover #permaHoverWrap,\n#permaHoverWrap:hover {\n   display: block;\n}\n</code></pre>\n\n<p>Since the <code>#onabout</code> is in the <code>#permaHoverWrap</code> in this solution, it becomes visible through the display of the fixed wrapper, and then stays that way through the guaranteed hover of that wrapper. Again, the side effects of this solution could be too severe except under the right circumstances. However, as a proof of concept, it can be done purely through CSS.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here i go with my CSS idea.</p>\n\n<p>You may use transition-delay;\n<a href=\"http://jsfiddle.net/nAg7W/\" rel=\"nofollow\">http://jsfiddle.net/nAg7W/</a>\n</p>\n\n<pre><code>div img {\n    position:absolute;\n    opacity:0;\n    transition:0s 180s;\n}\ndiv:hover img {\n    opacity:1;\n    transition:0s;\n}\ndiv {\n    line-height:1.2em;\n    font-size:1em;\n    color:black;\n    transition:0s 180s;\n}\ndiv:hover {\n    line-height:0;\n    font-size:0;\n    color:transparent;\n    transition:0;\n}\n</code></pre>\n\n<p>markup:\n</p>\n\n<pre><code>&lt;div&gt;some text to hover to see an image wich is hidden as you read this\n&lt;img src=\"http://placehold.it/200x200&amp;text=zi image\" /&gt;\n</code></pre>\n\n<p></p>\n\n<p>it could be possible as well, to click, so it fades away.\n<a href=\"http://jsfiddle.net/nAg7W/1/\" rel=\"nofollow\">http://jsfiddle.net/nAg7W/1/</a>\n</p>\n\n<pre><code>div:hover img:focus {/* includes tabindex in html tag for img */\n   opacity:0;\n   transition:3s;\n   -webkit-transform:rotate(-360deg) scale(0.23);\n   -webkit-transform:rotate(-360deg) scale(0.23);\n   -moz-transform:rotate(-360deg) scale(0.23);\n   -o-transform:rotate(-360deg) scale(0.23);\n   -ms-transform:rotate(-360deg) scale(0.23);\n   transform:rotate(-360deg) scale(0.23);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>I don't think that there is any possibility to do this with :hover, when relying on pure css.\nIf you insist on using css, you might change it to clicking. So that when the user clicks on the div, the other one gets shown permanently.\nLike this: </p>\n\n<pre><code>&lt;style&gt;\n.onabout\n{\n    display: none;\n}\n\ninput#activate\n{\n    display: none;\n}\n\ninput#activate:checked + .onabout\n{\n    display: block;\n}\n&lt;/style&gt;\n\n&lt;label for=\"activate\"&gt;\n    &lt;div class=\"about\"&gt;Click me&lt;/div&gt;\n&lt;/label&gt;\n&lt;input id=\"activate\" type=\"checkbox\"&gt;&lt;/input&gt;\n&lt;div class=\"onabout\"&gt;Visible while checkbox:checked true or Radiobutton:checked true&lt;/div&gt;\n</code></pre>\n\n<p>checkbox makes you able to click it away. if you don't want that check the input type to radio.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As @<a href=\"http://stackoverflow.com/users/2834652/leo-pflug\">Leo Pflug</a> indicates, you can do this with some confidence in <strong>pure CSS <em>on and after click</em></strong> by using the techniques detailed here <a href=\"http://cssconf.com/talk-seddon.html\" rel=\"nofollow\">http://cssconf.com/talk-seddon.html</a>.</p>\n\n<p>With a dash of <strong>JavaScript</strong>, it's possible and simple and reliable, as shown by @<a href=\"http://stackoverflow.com/users/698661/wind-shear\">Wind Shear</a>.</p>\n\n<p>Pure CSS <em>on and after hover</em>, however, is a lot more difficult and perhaps even not possible in a truly production-worthy way.  The problem is that anything you change with the :hover pseudo-class selector will not (and/or should not) match elements over which you are no longer hovering.</p>\n\n<p>The only way you are likely to be able to do this with pure CSS is with CSS3 Animations.  To that end, I have created a demo <strong><a href=\"http://cdpn.io/GLjpK\" rel=\"nofollow\">http://cdpn.io/GLjpK</a></strong> (v2 w/FF &amp; IE) that uses CSS animations to swap to a hover state on hover and then persist that state until the page is reloaded.</p>\n\n<pre><code>@keyframes hover {\n  0% {\n    // normal styles\n  }\n  100% {\n    // hover styles\n  }\n}\n\n.class {\n  animation-name: hover;\n  animation-duration: 1ms;\n  animation-fill-mode: backwards;\n  animation-play-state: paused;      \n}\n\n.class:active,\n.class:focus,\n.class:hover {\n  animation-fill-mode: forwards;\n  animation-play-state: running;\n}\n</code></pre>\n\n<p>I tested in it Chrome latest, Firefox latest, and IE 10.  Worked in all three.</p>\n\n<p>Note I had some trouble with codepen not displaying the latest saved code, so I created a fresh one here <strong><a href=\"http://cdpn.io/GLjpK\" rel=\"nofollow\">http://cdpn.io/GLjpK</a></strong>.</p>\n\n<p>See <a href=\"http://stackoverflow.com/questions/15644246/stop-a-css3-animation-at-the-last-frame-of-the-iteration-count\">Stop a CSS3 Animation at the last frame of the iteration-count</a> and <a href=\"http://stackoverflow.com/questions/4359627/stopping-a-css3-animation-on-last-frame\">Stopping a CSS3 Animation on last frame</a> for what/why/how.</p>\n\n<p><strong>UPDATE: Lea Verou has now also demonstrated this technique <a href=\"http://lea.verou.me/2014/01/smooth-state-animations-with-animation-play-state/\" rel=\"nofollow\">Smooth state animations with animation-play-state</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>One can apparently use CSS animation, with an infinite delay to handle this. See an article here...\n<a href=\"http://joelb.me/blog/2012/maintaining-css-style-states-using-infinite-transition-delays/\" rel=\"nofollow\">http://joelb.me/blog/2012/maintaining-css-style-states-using-infinite-transition-delays/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm facing a small issue that I've never really had to deal with before. I'm a beginner web designer, and I recently used the CSS hover feature on a div on my webpage. Another image is revealed when one hovers over this div; however, the new image disappears when you \"unhover\", and I would like it to stay visible.</p>\n\n<p>Here is an example of the code that I am using:</p>\n\n<pre><code>#about {\nheight: 25px;\nwidth: 84px;\nbackground-image: url('about.png');\nposition: absolute;\ntop: 200px;\nleft: 0px;\n}\n\n#onabout {\nheight: 200px;\nwidth: 940px;\nposition: absolute;\ntop: 60px;\nleft: 0px;\ncolor: #fff;\nfont-family: 'Lato', sans-serif;\nfont-size: 15px;\nfont-weight: 300;\ndisplay: none;\n}\n\n#about:hover #onabout {\ndisplay: block;\n}\n</code></pre>\n\n<p>Is there any way to solve this using just CSS? I haven't used any javascript thus far and I'm not very comfortable with it. </p>\n\n<p>Either way, any solutions will be gladly accepted! Thanks so much.</p>\n",
            "last_activity_date": 1418694448,
            "question_id": 17100235,
            "score": 9,
            "tags": [
                "html",
                "css"
            ],
            "title": "Make CSS Hover state remain after &quot;unhovering&quot;"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can use the :hover pseudo class</p>\n\n<p>eg</p>\n\n<pre><code>.classOfElementToColor:hover {background-color:red; color:black}\n</code></pre>\n\n<p>Works with most browsers, but not on all elements in IE6</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>No idea what you mean about \"the color that highlights <code>&lt;li&gt;</code>\", but it sounds like you want to change the background colour of <code>&lt;option&gt;</code> elements. I tried it and it doesn't work, you always get the system color.</p>\n\n<p>If you wanted to highlight the entire <code>&lt;select&gt;</code> element on mouseover, this kinda works:</p>\n\n<pre><code>select:hover { background-color: red; }\n</code></pre>\n\n<p>However the behaviour is different in different browsers. For example, Chrome doesn't highlight the options in the drop down; Firefox does, but then it doesn't change them back if you move the mouse away and they are still pulled down.</p>\n\n<p>As has been stated on many, many similar questions, you <em>can't reliably style form controls</em>. <a href=\"http://www.456bereastreet.com/archive/200409/styling%5Fform%5Fcontrols/\">See here</a> for more details.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Simply use this CSS selector:</p>\n\n<pre><code>select option:hover {\n    background-color: yellow;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>As mentioned above, setting <code>background-color</code> will work however <code>:hover</code> is buggy in IE7 - setting your doctype to strict will help.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I change the highlighting color of <code>&lt;select&gt;</code> that is the color that highlights <code>&lt;li&gt;</code> while cursor passes over it by using CSS?</p>\n",
            "last_activity_date": 1396142173,
            "question_id": 1667086,
            "score": 16,
            "tags": [
                "html",
                "css",
                "colors",
                "html-select"
            ],
            "title": "Changing &lt;select&gt; highlight color"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>*  p:nth-child(2)\n</code></pre>\n\n<p>of course it's better if you can specify the parent selector (for a matter of performance)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>To directly answer your question: if only one element will ever contain <code>&lt;p class=\"select-me\"&gt;</code> paragraphs, this will do:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>p.select-me:nth-child(2)\n</code></pre>\n\n<p>If there will only be two <code>&lt;p class=\"select-me\"&gt;</code> in that element, choose either one of these:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>p.select-me:last-child /* CSS3 */\np.select-me:first-child + p.select-me /* CSS2, repetitive but most compatible */\n</code></pre>\n\n<hr>\n\n<p>Now, from reading your question, I think you're misunderstanding the <code>*-child</code> selectors. The selectors <code>div:first-child</code> and <code>div:last-child</code> don't do what you describe.</p>\n\n<p>That is, this selector:</p>\n\n<pre><code>E:first-child\n</code></pre>\n\n<p>really means</p>\n\n<blockquote>\n  <p>Select any <code>E</code> element<br>\n  <strong>that is the first child of its parent</strong>.</p>\n</blockquote>\n\n<p>and not</p>\n\n<blockquote>\n  <p>Select <strong>the first child of</strong><br>\n  any <code>E</code> element.</p>\n</blockquote>\n\n<p>This is because the <code>*-child</code> selectors are <em>pseudo-classes</em>, not <em>pseudo-elements</em>. Pseudo-classes apply to the same selector sequences you attach them to, the same way you attach concrete classes to their respective selector sequences (as in <code>p.select-me</code>). Pseudo-classes and regular classes are similar in that they both <em>describe the element</em> that you attach them to. Pseudo-elements, however, refer to an imaginary element in your structure (that's drawn for real anyway).</p>\n\n<p>You can also say that they're on the same hierarchy as elements that you use the sibling combinators <code>+</code> or <code>~</code> to build a relationship with.</p>\n\n<p>An illustration, for the above selectors:</p>\n\n<pre><code>&lt;div&gt;\n    &lt;p class=\"select-me\"&gt;Text not in a span&lt;/p&gt; &lt;!-- [1] Not selected --&gt;\n    &lt;p class=\"select-me\"&gt;                       &lt;!-- [2] Selected --&gt;\n        &lt;span&gt;Text in a span&lt;/span&gt;             &lt;!-- [3] Not selected --&gt;\n    &lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<ol>\n<li><p><strong>Not selected</strong><br>\nThis <code>&lt;p&gt;</code> is a child of the <code>&lt;div&gt;</code>. However, it is its first child, so it won't match after the sibling combinator or the <code>:nth-child(2)</code> or <code>:last-child</code> pseudo-classes.</p></li>\n<li><p><strong>Selected</strong><br>\nThis <code>&lt;p&gt;</code> is a child of the <code>&lt;div&gt;</code>. It is also its second (or last) child.</p></li>\n<li><p><strong>Not selected</strong><br>\nThis is a <code>&lt;span&gt;</code> and not a <code>&lt;p&gt;</code>. You're looking for a <code>&lt;p&gt;</code> child, not a child of <code>&lt;p&gt;</code>.</p></li>\n</ol>\n\n<p>As an aside, in order to select <strong>the first child of</strong> an element, you would need to place a child combinator <code>&gt;</code> between the <code>:first-child</code> selector and whatever you were originally attaching it to:</p>\n\n<pre><code>p.select-me &gt; :first-child\n</code></pre>\n\n<p>Using the same example HTML for illustration:</p>\n\n<pre><code>&lt;div&gt;\n    &lt;p class=\"select-me\"&gt;Text not in a span&lt;/p&gt; &lt;!-- [1] Not selected --&gt;\n    &lt;p class=\"select-me\"&gt;                       &lt;!-- [2] Not selected --&gt;\n        &lt;span&gt;Text in a span&lt;/span&gt;             &lt;!-- [3] Selected --&gt;\n    &lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<ol>\n<li><p><strong>Not selected</strong><br>\nThis is a <code>&lt;p class=\"select-me\"&gt;</code> element. However, although it's the first child, it's not the first child of another <code>&lt;p class=\"select-me\"&gt;</code> element. Instead, it's the first child of a <code>&lt;div&gt;</code>.</p></li>\n<li><p><strong>Not selected</strong><br>\nThis is a <code>&lt;p&gt;</code> element, but it's not the first child of its parent, so <code>:first-child</code> doesn't match.</p>\n\n<p>Given that <a href=\"http://stackoverflow.com/a/5813672/106224\">selectors are parsed from right to left</a> in most implementations, the <code>p.select-me &gt;</code> part is then safely and immediately ignored.</p></li>\n<li><p><strong>Selected</strong><br>\nThis <code>&lt;span&gt;</code> is the first child of a <code>&lt;p class=\"select-me\"&gt;</code>.</p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<p>Well, there are so many new css selectors, but I can't figure out a way of selecting nth-element or last-element or first-element. It's supported and it works, but only for children, for example:</p>\n\n<pre><code>&lt;div&gt;\n   &lt;p&gt;One&lt;/p&gt;\n   &lt;p&gt;Two&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><code>div:last-child</code> selects \"Two\" paragraph, and <code>div:first-child</code> selects \"one paragraph.\nBut what when I have really dynamic code and have no idea what's the parent name or even what the parent really is (may be div, span, link, list)?</p>\n\n<p>For example:</p>\n\n<pre><code>&lt;youdontknowwhat!&gt;\n   &lt;p class=\"select-me\"&gt;One&lt;/p&gt;\n   &lt;p class=\"select-me\"&gt;Two&lt;/p&gt;\n&lt;/youdontknowwhat!&gt;\n</code></pre>\n\n<p>How to select the second paragraph here? (yeah, you're unable to call to \"youdontknowwhat!\" since you really don't know what's that! just hypothetical name ;))).</p>\n\n<p>Why there are <code>first-child</code>, <code>last-child</code> and <code>nth-child</code> selectors and NO <code>:first</code>, <code>:last</code>, <code>:nth</code> (like <code>.select-me:first</code>)?</p>\n",
            "last_activity_date": 1335503162,
            "question_id": 4195161,
            "score": 5,
            "tags": [
                "css",
                "css3",
                "css-selectors"
            ],
            "title": "Any way to select nth element STRAIGHT?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If there are discrepancies in behavior of the same web page loaded into <code>WebBrowser</code> control and standalone IE browser, the problem can often be fixed by implementing <a href=\"http://stackoverflow.com/a/18333982/1768303\">WebBrowser Feature Control</a>.</p>\n\n<p>Once the feature control has been implemented, it makes sense to verify that <code>&lt;!DOCTYPE html&gt;</code> is observed by <code>WebBrowser</code> and the page is actually rendered in HTML5 standard mode, <a href=\"http://stackoverflow.com/a/18583141/1768303\">here's how</a>.</p>\n\n<p><strong>[UPDATE]</strong> The OP's sample page actually renders correctly when <a href=\"http://stackoverflow.com/a/18333982/1768303\">FEATURE_BROWSER_EMULATION</a> is set to <code>9000</code> and the <code>META</code> tag is fixed to be <code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\" /&gt;</code> (<em>content=\"IE9\"</em> is <a href=\"http://msdn.microsoft.com/en-us/library/ie/jj676915%28v=vs.85%29.aspx\" rel=\"nofollow\">not a valid value</a>).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>We checked again on a new Machine also running Windows 8 and the error was gone, after some checks we determined that the new Machine had some new Updates for Windows 8 installed. We went to check for Updates on the Surface and after applying all Updates the Error seems to be gone.</p>\n\n<p><strong>Without any recompilation or further settings just by applying the latest Win 8 Updates the error is fixed.</strong></p>\n\n<p>Scrolling is smooth now. Same executable no changes, so i guess it was some bug in the runtime libs after all.  </p>\n",
                    "is_accepted": true,
                    "score": 0
                }
            ],
            "body": "<p>We use the WPF WebBrowser control to display an embedded page. On Windows 8 we observe a strange jumping behavior of elements with css position:fixed while scrolling. </p>\n\n<p><img src=\"http://i.stack.imgur.com/76qCv.jpg\" alt=\"position:fixed is jumping when scrolling\"></p>\n\n<p>The same page works fine in IE10 on Windows 8 (also FF, Chrome) and in the WPF WebBrowser control on Windows 7.</p>\n\n<p>Has anyone seen this behavior before and knows a fix for the jumping motion?</p>\n\n<p>Is it possible the .NET Version 4.5 used on the test machine (Surface with Win 8) be the Problem as compared to the .Net Version 4 on the dev machine?</p>\n\n<p><strong>The Development Environment:</strong></p>\n\n<ul>\n<li>Windows 7</li>\n<li>Microsoft Visual Studio 2010 Version 10.0.30319.1 RTMRel</li>\n<li>Microsoft .NET Framework Version 4</li>\n</ul>\n\n<p><strong>The Test Environment:</strong></p>\n\n<ul>\n<li>Surface</li>\n<li>Windows 8</li>\n<li>Microsoft .NET Framework Version 4.5</li>\n</ul>\n\n<p><strong>Client XAML:</strong></p>\n\n<pre><code>&lt;Window x:Class=\"EmbeddedBrowserTest.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        Title=\"MainWindow\" Height=\"350\" Width=\"525\"&gt;\n    &lt;Grid&gt;\n        &lt;WebBrowser HorizontalAlignment=\"Stretch\" Name=\"webBrowser\" VerticalAlignment=\"Stretch\" Grid.Row=\"1\" /&gt;\n    &lt;/Grid&gt;\n&lt;/Window&gt;\n</code></pre>\n\n<p><strong>Demo Page HTML:</strong></p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\" /&gt;\n    &lt;title&gt;minimal position fixed example&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            margin: 0px\n        }           \n        .header{\n            height: 60px;\n            width: 960px;\n            background-color: #cccccc;\n            top: 0px;\n            left: 0px;\n            position: fixed;\n            z-index: 10;\n        }    \n        .content{\n            padding-top: 60px;\n            height: 420px;\n            width: 960px;\n            background-color: lightsteelblue;\n        }    \n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div class=\"header\"&gt;\n        header\n    &lt;/div&gt;    \n    &lt;div class=\"content\"&gt;\n        content &lt;br&gt; 1 &lt;br&gt; 2 &lt;br&gt; 3 &lt;br&gt; 4 &lt;br&gt; 5 &lt;br&gt; 6 &lt;br&gt; 7 &lt;br&gt;\n    &lt;/div&gt;                \n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1380533646,
            "question_id": 17209626,
            "score": 3,
            "tags": [
                "c#",
                "css",
                "wpf",
                "windows-8",
                "css-position"
            ],
            "title": "WPF WebBrowser Control - position:fixed Element jumps while scrolling (Windows 8)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You need to float the yellow <code>div</code> as well, then it will work;</p>\n\n<pre><code>.inline {\n    float:left;\n}\n\n.yellow {\n    background-color:yellow;\n    float: left;\n}\n</code></pre>\n\n<p>However, just floating elements doesn't put it on the left of the next element automatically, so you need <code>display: inline-block;</code> to show the next div on the same line and <code>display: block;</code> to show underneath.</p>\n\n<p>You should also give a width (in percent if you want) for both divs that add up to 100% or less <strong>including any left and right margins and padding</strong> if displaying inline.</p>\n\n<p>The other thing you could do is set a width for <code>.inline</code> and float it, then give <code>.yellow</code> the same value as its left margin and don't float it.</p>\n\n<pre><code>.inline {\n    float:left;\n    width:50px;\n}\n\n.yellow {\n    background-color:yellow;\n    margin-left:50px;\n}\n</code></pre>\n\n<p>This will allow the <code>.yellow</code> div to fill the remaining width.</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>CSS:</strong></p>\n\n<pre><code>.inline {\n    float:left;\n    position:relative;\n    width:auto\n}\n\n.yellow {\n    background-color:yellow;\n    position:relative;\n    float:left;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/u14dwpqx/3/\" rel=\"nofollow\">see fiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is just an expected behavior when you use float positioning.</p>\n\n<p>When an element is floated to the left (in your case the <code>.inline</code> div), the following content flows down the right side of that element, line boxes get shortened <strong>BUT</strong>  width of the <a href=\"http://www.w3.org/TR/CSS21/visuren.html#containing-block\" rel=\"nofollow\">containing block</a> which is established by the following element (in your case the <code>.yellow</code> div) is <em>reserved</em>.</p>\n\n<p>This is documented id CSS spec:</p>\n\n<blockquote>\n  <p><strong><a href=\"http://www.w3.org/TR/CSS21/visuren.html#floats\" rel=\"nofollow\">9.5 Floats</a></strong></p>\n  \n  <p>Since a float is not in the flow, <strong>non-positioned block boxes</strong> created\n  before and after the float box flow vertically as <strong>if the float did not\n  exist.</strong>\n  However, the current and subsequent line boxes created next to\n  the float are shortened as necessary to make room for the margin box\n  of the float.</p>\n</blockquote>\n\n<p>Which means block level elements (such as <code>&lt;div&gt;</code>, <code>&lt;p&gt;</code>, ...)<sup>That are not positioned</sup> ignore the float, whereas line boxes flow along its side.</p>\n\n<p>An example given by <a href=\"http://www.w3.org/TR/CSS21/visuren.html#img-floateg\" rel=\"nofollow\">W3C</a>:</p>\n\n<p><img src=\"http://i.stack.imgur.com/SmCIB.png\" alt=\"CSS float overlapping\"><sup><a href=\"http://www.w3.org/TR/CSS21/images/longdesc/floateg-desc.html\" rel=\"nofollow\">[D]</a></sup></p>\n\n<blockquote>\n  <p>The IMG box is floated to the left. The content that follows is\n  formatted to the right of the float, starting on the same line as the\n  float. The line boxes to the right of the float are shortened due to\n  the float's presence, but resume their \"normal\" width (that of the\n  containing block established by the P element) after the float.</p>\n</blockquote>\n\n<p>Hence if you give the <code>.yellow</code> element a background, you'll see that it spans the container and continues through the floated element.</p>\n\n<h2>The solution</h2>\n\n<p>From <a href=\"http://www.w3.org/TR/CSS21/visuren.html#floats\" rel=\"nofollow\">CSS level 2.1 spec</a>:</p>\n\n<blockquote>\n  <p>The border box of a table, a block-level replaced element, <em>or an\n  element in the normal flow that establishes a new <a href=\"http://www.w3.org/TR/CSS21/visuren.html#block-formatting\" rel=\"nofollow\">block formatting\n  context</a> (such as an element with 'overflow' other than 'visible')</em> must\n  not overlap the margin box of any floats in the same <a href=\"http://www.w3.org/TR/CSS21/visuren.html#block-formatting\" rel=\"nofollow\">block formatting\n  context</a> as the element itself.</p>\n</blockquote>\n\n<p>Hence if you add an <code>overflow</code> property with value other than <code>visible</code> to the <code>.yellow</code> div, it prevents the div from overlapping the floated element:</p>\n\n<p><strong><a href=\"http://jsfiddle.net/hashem/u14dwpqx/2/\" rel=\"nofollow\">EXAMPLE HERE</a></strong></p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.yellow {\n    overflow: hidden;\n}\n</code></pre>\n\n<hr>\n\n<p>Overlapping makes sense specially in situations where the <a href=\"http://jsfiddle.net/hashem/u14dwpqx/7/\" rel=\"nofollow\">length of the following content is large enough</a> to continue <em>normally</em> after the floated element.</p>\n\n<p>If it was restricted by default, <a href=\"http://jsfiddle.net/hashem/u14dwpqx/5/\" rel=\"nofollow\">the content wouldn't be continued</a> under the floated element. </p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>As I understand <code>float:left</code>, it will push the subsequent element to its left rather than on a new line.</p>\n\n<p>In the following example I would expect that the second div begins to the right of the first div, but as you can see in the jsfiddle below, it still spans the whole width.</p>\n\n<p>The content on the other hand magically begins where it's supposed to. Does the <code>float</code> rule only float the content but not the margins?</p>\n\n<p><strong><a href=\"http://jsfiddle.net/u14dwpqx/\" rel=\"nofollow\">Example here</a></strong></p>\n\n<pre><code>&lt;div class=\"inline\"&gt;\n    first line&lt;br&gt;\n    second line&lt;br&gt;\n    third line&lt;br&gt;\n&lt;/div&gt;\n\n&lt;div class=\"yellow\" &gt;floated div&lt;/div&gt;\n</code></pre>\n\n<pre class=\"lang-css prettyprint-override\"><code>.inline {\n    float:left;\n}\n\n.yellow {\n    background-color:yellow;\n}\n</code></pre>\n\n<p><strong>EDIT:</strong> I would expect that the code above looks something <strong><a href=\"http://jsfiddle.net/u14dwpqx/1/\" rel=\"nofollow\">like this</a></strong> but without the explicit need to use margins.</p>\n",
            "last_activity_date": 1408918952,
            "question_id": 25475822,
            "score": 1,
            "tags": [
                "css",
                "css-float"
            ],
            "title": "Why does CSS float not change the width of the following div?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You just have to set a width of 33% on the the column, this will constraint it to take up 33% of the entire width of the div.</p>\n\n<p><a href=\"http://jsfiddle.net/Ge6g7/1/\" rel=\"nofollow\">http://jsfiddle.net/Ge6g7/1/</a></p>\n\n<pre><code>.cont {\n    height:60px;\n    background: #ffff88;\n}\n.cont span {\n    display: inline-block;\n    height:100%;\n    line-height: 100%;\n    width: 33%; /* Added Css */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You should add <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align\" rel=\"nofollow\"><code>vertical-align: top;</code></a> CSS declaration to align the columns vertically at the top:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.cont span {\n    display: inline-block;\n    vertical-align: top;     /* Vertically align the inline-block elements */\n    height:100%;\n    line-height: 100%;\n    width: 33.33%;           /* Just for Demo */\n    outline: 1px dashed red; /* Just for Demo */\n}\n</code></pre>\n\n<p>Here is a <strong><a href=\"http://jsfiddle.net/Ge6g7/5/\" rel=\"nofollow\">online demo</a></strong>.</p>\n\n<hr>\n\n<p>Honestly, I'm not a fan of using <code>inline-block</code> to create columns on the page, because of the <a href=\"http://css-tricks.com/fighting-the-space-between-inline-block-elements/\" rel=\"nofollow\">white spaces between them</a>.</p>\n\n<p>The best approach I could suggest is using CSS <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/float\" rel=\"nofollow\"><code>float</code></a> property. </p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I am trying to use the <code>display:inline-block</code> in order to build 3 columns.</p>\n\n<p>It works fine in the begging but when I add content to the first column it affects the rest of the layout and renders the rest of the columns in a lower level.</p>\n\n<p>what can I do to avoid this effect?</p>\n\n<p><a href=\"http://jsfiddle.net/petran/DcFCd/\" rel=\"nofollow\">JSFiddle demo</a>.</p>\n",
            "last_activity_date": 1395351420,
            "question_id": 17154707,
            "score": 1,
            "tags": [
                "html",
                "css"
            ],
            "title": "Using display inline-block columns move down"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Sass gave you the answer:  you're using strings when you shouldn't be (note the quotations in the error, that's a sure sign of a string).  Interpolation gives you a string all the time no matter what.  Because <code>hsla()</code> expects all arguments to be numbers, passing it a string results in getting the string <code>hsla()</code> instead of the Sass color representation for <code>hsla()</code>, and the <code>lighten()</code> function can only accept colors.</p>\n\n<p>So just stop giving it a string:</p>\n\n<pre><code>.foo {\n    background: hsla(60, 1, ($base - $math), 1);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I'm trying to loop a set amount of times gradually decreasing the lightness value of hsla but when I run the loop I get an error <code>$lightness: \"96.77419\" is not a number for</code>hsla'`. Can anyone advise me where I'm going wrong with this or how it can be improved?</p>\n\n<p><strong>Code</strong></p>\n\n<pre><code>$iterations: 31;\n$base: 100;\n$math: $base / $iterations;\n\nli {\n  background: #919190;\n  height: 40px;\n  line-height: 40px;\n  color: #191919;\n  text-align: center;\n}\n\n@for $i from 1 through $iterations {\n .options:nth-of-type(#{$i}) {\n    background: hsla(60, 1, #{($base - $math)}, 1);\n}\n</code></pre>\n\n<p>Codepen <a href=\"http://codepen.io/styler/pen/BHwjc\" rel=\"nofollow\">http://codepen.io/styler/pen/BHwjc</a></p>\n\n<p>Sassmeister <a href=\"http://sassmeister.com/gist/e99733697e1b38b794fa\" rel=\"nofollow\">http://sassmeister.com/gist/e99733697e1b38b794fa</a></p>\n\n<p>What I really want to do is be able to gradually increase the colour to make a shade palette, really want to be able to use this multiple times with multiple different amounts etc so it would be great if you could give me some additional advice to make this.</p>\n",
            "last_activity_date": 1403198963,
            "question_id": 24312338,
            "score": 0,
            "tags": [
                "css",
                "sass"
            ],
            "title": "SASS for loop updating hsla lightness returns error $lightness: &quot;96.77419&quot; is not a number for `hsla&#39;"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The IE has a button for Compatibility View, check if the both are checked. This button change the IE compatibility version.</p>\n\n<p><a href=\"http://%20http://www.thesitewizard.com/css/excludecss.shtml\" rel=\"nofollow\">You can set differents css for differents versions</a>:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/chooser.css\" /&gt;\n&lt;!--[if IE]&gt; &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/chooser_ie.css\" /&gt; &lt;![endif]--&gt; \n&lt;!--[if IE 6]&gt; &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/chooser_IE6.css\" /&gt; &lt;![endif]--&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><em>Most</em> of the time I see this, the user is slightly zoomed in (or out, but normally in) causing things to be slightly askew.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>try to add this meta tag to your head:</p>\n\n<pre><code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n</code></pre>\n\n<p>That should prevent the compatibility mode in IE and force the standard mode.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Just change</p>\n\n<p><code> &lt;a&gt;Helpdsk Services Admins Site&lt;/a&gt;</code></p>\n\n<p>to\n<code> &lt;a style=\"float:left;\" &gt;Helpdsk Services Admins Site&lt;/a&gt;</code></p>\n\n<p>Works for me anyhow (I've had this issue before), one way the ie shows misallign, other way, it doesn't:</p>\n\n<p>PS.  If you prefer classes all the time, just make one for you &lt;a&gt; tag.</p>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>try taking below and put it above <code>&lt;div id=\"logo\"&gt;</code></p>\n\n<pre><code>&lt;div id=\"signOut\"&gt;\n    &lt;a id=\"LoginStatus1\"&gt;Logout&lt;/a&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have the following HTML and CSS code. It works fine in IE8 in one machine; but misaligns in second machine with IE8. What is to be changed in order to correct it? </p>\n\n<p>Note: The misalignment is for the \u201cLogout\u201d text.</p>\n\n<p>Note:  The dimension of the image is 214 X 57</p>\n\n<p>Note: Both systems are in same resolution and 100% zoom. </p>\n\n<p><img src=\"http://i.stack.imgur.com/POo9o.jpg\" alt=\"enter image description here\"></p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n\n&lt;head id=\"Head1\"&gt;\n\n&lt;title&gt;Helpdsk Services Admins Site &lt;/title&gt;\n\n&lt;link href=\"Styles/MasterStyle.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n\n&lt;/head&gt;\n\n&lt;body&gt;\n\n&lt;div id=\"wrapper\"&gt;\n\n    &lt;div id=\"container\"&gt;\n\n        &lt;div class=\"clear\"&gt;\n\n            &lt;div id=\"header\"&gt;\n\n                &lt;div id=\"logo\"&gt;\n\n                    &lt;img alt=\"logo\" src=\"Images/Logo.png\" /&gt;\n\n                &lt;/div&gt;\n\n                &lt;div id=\"titleInfo\"&gt;\n\n                    &lt;a&gt;Helpdsk Services Admins Site&lt;/a&gt;\n\n                    &lt;div id=\"signOut\"&gt;\n\n                        &lt;a id=\"LoginStatus1\"&gt;Logout&lt;/a&gt;\n\n                    &lt;/div&gt;\n\n                &lt;/div&gt;\n\n            &lt;/div&gt;\n\n        &lt;/div&gt;\n\n    &lt;/div&gt;\n\n &lt;/div&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n\n<p>MasterStyle.css</p>\n\n<pre><code>body\n\n{\n\n   margin: 0px; padding: 0px; text-align: center; background: Orange;\n\n}\n\n\n\n#wrapper\n\n{\n\n   width: 100%; height: auto; text-align:left; margin: 0 auto; background: Orange;\n\n}\n\n\n\n#container\n\n{\n\n   width: 850px; height: auto; margin: 0 auto; background: white;\n\n}\n\n\n\n#header\n\n{\n\n   width: 850px; height: 70px; background: white; padding: 0 0 10px 0;\n\n}\n\n\n\n#titleInfo\n\n{\n\nfont:bold 18pt Arial; color:#2377D1; width:590px; height:35px; float:left; margin:10px 0 0 10px; \n\nborder-bottom:3px solid #fcda55; padding: 10px 0 0 0; display:inline;\n\n}\n\n\n\n#signOut\n\n{\n\nfont:bold 9pt Arial;float:right;border-bottom:none;padding: 0px 10px 0 0;display:inline;\n\n}\n\n\n\n#logo\n\n{\n\n   width:200px; height:60px; float:left; margin:0 0 0 20px; display:inline; padding: 10px 0 0 0;\n\n}\n\n\n\n.clear\n\n{\n\n   clear: both;\n\n}\n</code></pre>\n\n<hr>\n\n<p>READING:</p>\n\n<ol>\n<li><a href=\"http://stackoverflow.com/questions/684634/align-contents-inside-a-div\">Align contents inside a div</a></li>\n</ol>\n\n<hr>\n",
            "last_activity_date": 1333164043,
            "question_id": 9943560,
            "score": 0,
            "tags": [
                "javascript",
                "asp.net",
                "html",
                "css",
                "jsp"
            ],
            "title": "HTML Alignment Issue in one machine only (both IE8)"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>They split entities by columns with ids (bad solution... better use class names) and then calculate positions by column groups</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I wrote the Pinterest script. The ID's are unrelated to the layout, and are used for other interaction-related JS. Here's the base of how it works:</p>\n\n<p>Beforehand:</p>\n\n<ul>\n<li>Absolutely position the pin containers</li>\n<li>Determine column width</li>\n<li>Determine margin between columns (the gutter)</li>\n</ul>\n\n<p>Setup an array:</p>\n\n<ul>\n<li>Get the width of the parent container; calculate the # of columns that will fit</li>\n<li>Create an empty array, with a length equaling the # of columns. Use this array to store the height of each column as you build the layout, e.g. the height of column 1 is stored as array[0]</li>\n</ul>\n\n<p>Loop through each pin: </p>\n\n<ul>\n<li>Put each pin in the shortest column at the moment it is added</li>\n<li>\"left:\" === the column # (index array) times the column width + margin</li>\n<li>\"top:\" === The value in the array (height) for the shortest column at that time</li>\n<li>Finally, add the height of the pin to the column height (array value)</li>\n</ul>\n\n<p>The result is lightweight. In Chrome, laying out a full page of 50+ pins takes &lt;10ms.</p>\n",
                    "is_accepted": false,
                    "score": 167
                },
                {
                    "body": "<p>We released a jQuery plugin because we got the same question several times for <a href=\"http://www.wookmark.com\">Wookmark</a>. It creates exactly this type of layout.\nView it here - <a href=\"http://www.wookmark.com/jquery-plugin\">Wookmark jQuery plugin</a></p>\n",
                    "is_accepted": false,
                    "score": 56
                },
                {
                    "body": "<p>You could also check on the jQuery Plug-in <a href=\"http://masonry.desandro.com/\">Masonry</a>, for this kind of functionality.</p>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p>You could use floats and size your div widths using percentages together with min-width to force divs to automatically fall of once minimum width is reached? Its the way we got it working on <a href=\"http://www.goldtree.co.za/work\" rel=\"nofollow\">http://www.goldtree.co.za/work</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Why dont you try this, simple js stuff</strong></p>\n\n<p><a href=\"http://vanilla-masonry.desandro.com/index.html\" rel=\"nofollow\">http://vanilla-masonry.desandro.com/index.html</a></p>\n\n<p>Or even this with jQuery and having scroll loading as well.</p>\n\n<p><a href=\"http://masonry.desandro.com/index.html\" rel=\"nofollow\">http://masonry.desandro.com/index.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Having looked at all options, I ended up implementing the layout similar to Pinterest in this way:</p>\n\n<p>All DIVs are:</p>\n\n<pre><code>div.tile {\n    display: inline-block;\n    vertical-align: top;\n}\n</code></pre>\n\n<p>This makes them position in rows better than when they are floated.</p>\n\n<p>Then when the page is loaded, I iterate all DIVs in JavaScript to remove gaps between them. It works acceptably well when:</p>\n\n<ol>\n<li>DIVs are not very different in height.</li>\n<li>You don't mind some minor violations of ordering (some elements that were below can be pulled up above).</li>\n<li>You don't mind the bottom line being of different height.</li>\n</ol>\n\n<p>The benefit of this approach - your HTMLs make sense for search engines, can work with Javascript disabled/blocked by firewall, the sequence of elements in HTML matches the logical sequence (the newer items before older). You can see it's working at <a href=\"http://SheepOrPig.com/news\" rel=\"nofollow\">http://SheepOrPig.com/news</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am looking to replicate Pinterest.com's div layout, specifically how the number of columns adjusts to fit more/less on browser resize and the vertical stacking is not dependent on adjacent column heights. The source code shows that each div is position absolute. A co-founder has answered a Quora post stating it is done with custom jQuery and CSS. I would like the results sorted left to right.  Any direction you could provide to make it myself would be greatly appreciated.</p>\n",
            "last_activity_date": 1373976406,
            "question_id": 7109362,
            "score": 95,
            "tags": [
                "jquery",
                "css",
                "layout"
            ],
            "title": "how to replicate pinterest.com&#39;s absolute div stacking layout"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>I think example one is more than enough as alt text will be shown if images are disabled. This  wil also help search engines to know about your site.</p>\n\n<p>Update : Looks like I was wrong. Check this <a href=\"http://trif3cta.com/blog/entry/not-just-semantics-seo-friendly-page-headings/\" rel=\"nofollow\">article</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I do it mostly like the one above, but for accessibility reasons, I need to support the possibility of images being disabled in the browser. So, rather than indent the text from the link off the page, I cover it by absolutely positioning the <code><code>&lt;span&gt;</code></code> to the full width and height of the <code>&lt;a&gt;</code> and using <code>z-index</code> to place it above the link text in the stacking order.</p>\n\n<p>The price is one empty <code>&lt;span&gt;</code>, but I'm willing to have it there for something as important as an <code>&lt;h1&gt;</code>.  </p>\n\n<pre><code>&lt;h1 id=\"logo&gt;\n  &lt;a href=\"\"&gt;Stack Overflow&lt;span&gt;&lt;/span&gt;&lt;/a&gt;\n&lt;/h1&gt;\n</code></pre>\n\n<pre class=\"lang-css prettyprint-override\"><code>#logo a {\n   position:relative;\n   display:block;\n   width:[image width];\n   height:[image height]; }\n\n#logo a span {\n   display:block;\n   position:absolute;\n   width:100%;\n   height:100%;\n   background:#ffffff url(image.png) no-repeat left top;\n   z-index:100; /* Places &lt;span&gt; on top of &lt;a&gt; text */  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>If accessibility reasons is important then use the first variant (when customer want to see image without styles)</p>\n\n<pre><code>&lt;div id=\"logo\"&gt;\n    &lt;a href=\"\"&gt;\n        &lt;img src=\"logo.png\" alt=\"Stack Overflow\" /&gt;\n    &lt;/a&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>No need to conform imaginary SEO requirements, because the HTML code above has correct structure and only you should decide does this suitable for you visitors. </p>\n\n<p>Also you can use the variant with less HTML code</p>\n\n<pre><code>&lt;h1 id=\"logo&gt;\n  &lt;a href=\"\"&gt;&lt;span&gt;Stack Overflow&lt;/span&gt;&lt;/a&gt;\n&lt;/h1&gt;\n</code></pre>\n\n<pre class=\"lang-css prettyprint-override\"><code>/* position code, it may be absolute position or normal - depends on other parts of your site */\n#logo {\n  ...\n}\n\n#logo a {\n   display:block;\n   width: actual_image_width;\n   height: actual_image_height\n   background: url(image.png) no-repeat left top;\n}\n\n/* for accessibility reasons - without styles variant*/\n#logo a span {display: none}\n</code></pre>\n\n<p>Please note that I have removed all other CSS styles and hacks because they didn't correspond to the task. They may be usefull in particular cases only.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I think you'd be interested in the <a href=\"http://www.h1debate.com/\" rel=\"nofollow\">H1 debate</a>. It's a debate about whether to use the h1 element for the page's title or for the logo. </p>\n\n<p>Personally I'd go with your first suggestion, something along these lines:</p>\n\n<pre><code>&lt;div id=\"header\"&gt;\n    &lt;a href=\"http://example.com/\"&gt;&lt;img src=\"images/logo.png\" id=\"site-logo\" alt=\"MyCorp\" /&gt;&lt;/a&gt;\n&lt;/div&gt;\n\n&lt;!-- or alternatively (with css in a stylesheet ofc--&gt;\n&lt;div id=\"header\"&gt;\n    &lt;div id=\"logo\" style=\"background: url('logo.png'); display: block; \n        float: left; width: 100px; height: 50px;\"&gt;\n        &lt;a href=\"#\" style=\"display: block; height: 50px; width: 100px;\"&gt;\n            &lt;span style=\"visibility: hidden;\"&gt;Homepage&lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/div&gt;\n    &lt;!-- with css in a stylesheet: --&gt;\n    &lt;div id=\"logo\"&gt;&lt;a href=\"#\"&gt;&lt;span&gt;Homepage&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n\n&lt;div id=\"body\"&gt;\n    &lt;h1&gt;About Us&lt;/h1&gt;\n    &lt;p&gt;MyCorp has been dealing in narcotics for over nine-thousand years...&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Of course this depends on whether your design uses page titles but this is my stance on this issue.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You're missing the option:</p>\n\n<pre><code>&lt;h1&gt;\n  &lt;a href=\"http://stackoverflow.com\"&gt;\n    &lt;img src=\"logo.png\" alt=\"Stack Overflow\" /&gt;\n  &lt;/a&gt;\n&lt;/h1&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 138
                },
                {
                    "body": "<pre><code>&lt;div class=\"logo\"&gt;\n    &lt;h1&gt;&lt;a href=\"index.html\"&gt;&lt;span&gt;Insert Website Name&lt;/span&gt;&lt;/a&gt;&lt;/h1&gt;\n    &lt;p&gt;Insert Slogan Here&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<pre class=\"lang-css prettyprint-override\"><code>#header .logo h1 {\n    background: red; /* replace with image of logo */\n    display:block;\n    height:40px; /* image height */\n    width:220px; /* image width */\n}\n\n#header .logo h1 a {\n    display:block;\n    height:40px; /* image height */\n    width:220px; /* image width */\n}\n\n#header .logo h1 a span {\n    display:none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You missed title in <code>&lt;a&gt;</code> element. </p>\n\n<pre><code>&lt;h1 id=\"logo\"&gt;\n  &lt;a href=\"#\" title=\"...\"&gt;&lt;span&gt;Stack Overflow&lt;/span&gt;&lt;/a&gt;\n&lt;/h1&gt;\n</code></pre>\n\n<p>I suggest to put title in <code>&lt;a&gt;</code> element because client would want to know what is the meaning of that image. Because you have set <code>text-indent</code> for the test of <code>&lt;h1&gt;</code> so, that front end user could get information of main logo while they hover on logo.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I don't know but this is the format have used...</p>\n\n<pre><code>&lt;h1&gt;\n    &lt;span id=\"site-logo\" title=\"xxx\" href=\"#\" target=\"_self\"&gt;\n        &lt;img src=\"http://www.xxx.com/images/xxx.png\" alt=\"xxx\" width=\"xxx\" height=\"xxx\" /&gt;\n        &lt;a style=\"display:none\"&gt;\n            &lt;strong&gt;xxx&lt;/strong&gt;\n        &lt;/a&gt;\n    &lt;/span&gt;\n&lt;/h1&gt;\n</code></pre>\n\n<p>Simple and it has not done my site any harm as far as I can see.  You could css it but I don't see it loading any faster.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;h1&gt;&lt;a href=\"/\" title=\"Some title\"&gt;Name&lt;/a&gt;&lt;/h1&gt;\n</code></pre>\n\n<pre class=\"lang-css prettyprint-override\"><code>h1 a{\n  width: {logo width};\n  height: {logo height};\n  display:block;\n  text-indent:-9999px;\n  background:url({ logo url});\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One point no one has touched on is the fact that the h1 attribute should be specific to every page and using the site logo will effectively replicate the H1 on every page of the site.</p>\n\n<p>I like to use a z index hidden h1 for each page as the best SEO h1 is often not the best for sales or aesthetic value.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A new (Keller) method is supposed to improve speed over the -9999px method:</p>\n\n<pre><code>.hide-text {\ntext-indent: 100%;\nwhite-space: nowrap;\noverflow: hidden;\n}\n</code></pre>\n\n<p>recommended here:<a href=\"http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/\" rel=\"nofollow\">http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>It seems like there are a few different techniques out there, so I was hoping to get a \"definitive\" answer on this...</p>\n\n<p>On a website, it's common practice to create a logo that links to the homepage. I want to do the same, while best optimizing for search engines, screen readers, IE 6+, and browsers who have disabled CSS and/or images.</p>\n\n<p><strong>Example One:</strong> Doesn't use an h1 tag. Not as good for SEO, right?</p>\n\n<pre><code>&lt;div id=\"logo\"&gt;\n    &lt;a href=\"\"&gt;\n        &lt;img src=\"logo.png\" alt=\"Stack Overflow\" /&gt;\n    &lt;/a&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>Example Two:</strong> Found this somewhere. The CSS seems a little hacky.</p>\n\n<pre><code>&lt;h1 id=\"logo\"&gt;\n    &lt;a href=\"\"&gt;Stack Overflow&lt;/a&gt;\n&lt;/h1&gt;\n</code></pre>\n\n<pre class=\"lang-css prettyprint-override\"><code>/* css */\n#logo {\n    padding: 70px 0 0 0;\n    overflow: hidden;\n    background-image: url(\"logo.png\");\n    background-repeat: no-repeat;\n    height: 0px !important;\n    height /**/:70px;\n}\n</code></pre>\n\n<p><strong>Example Three:</strong> Same HTML, different approach using text-indent. This is the \"Phark\" approach to image replacement.</p>\n\n<pre><code>&lt;h1 id=\"logo\"&gt;\n    &lt;a href=\"\"&gt;Stack Overflow&lt;/a&gt;\n&lt;/h1&gt;\n</code></pre>\n\n<pre class=\"lang-css prettyprint-override\"><code>/* css */\n#logo {\n    background: transparent url(\"logo.png\") no-repeat scroll 0% 0%;\n    width: 250px;\n    height: 70px;\n    text-indent: -3333px;\n    border: 0;\n    margin: 0;\n}\n\n#logo a {\n    display: block;\n    width: 280px; /* larger than actual image? */\n    height: 120px;\n    text-decoration: none;\n    border: 0;\n}\n</code></pre>\n\n<p><strong>Example Four:</strong> <a href=\"http://alicious.com/2009/new-css-image-replacement-jir/\">The Leahy-Langridge-Jefferies method</a>. Displays when images and/or css is turned off.</p>\n\n<pre><code>&lt;h1 id=\"logo\" class=\"logo\"&gt;\n    &lt;a href=\"\"&gt;Stack Overflow&lt;/a&gt;\n&lt;/h1&gt;\n</code></pre>\n\n<pre class=\"lang-css prettyprint-override\"><code>/* css */\nh1.logo {\n    margin-top: 15px; /* for this particular site, set this as you like */\n    position: relative; /* allows child element to be placed positioned wrt this one */\n    overflow:hidden; /* don\u2019t let content leak beyond the header - not needed as height of anchor will cover whole header */\n    padding: 0; /* needed to counter the reset/default styles */\n}\n\nh1.logo a {\n    position: absolute; /* defaults to top:0, left:0 and so these can be left out */\n    height: 0; /* hiding text, prevent it peaking out */\n    width: 100%; /* 686px; fill the parent element */\n    background-position: left top;\n    background-repeat: no-repeat;\n}\n\nh1#logo {\n    height: 60px; /* height of replacement image */\n}\n\nh1#logo a {\n    padding-top: 60px; /* height of the replacement image */\n    background-image: url(\"logo.png\"); /* the replacement image */\n}\n</code></pre>\n\n<p>What method is the best for this sort of thing? Please provide html and css in your answer.</p>\n",
            "last_activity_date": 1423679816,
            "question_id": 665037,
            "score": 153,
            "tags": [
                "css",
                "xhtml",
                "image",
                "seo"
            ],
            "title": "Replacing H1 text with a logo image: best method for SEO and accessibility?"
        },
        {
            "answer_count": 17,
            "answers": [
                {
                    "body": "<p>add this css to your product_container class</p>\n\n<pre><code>    margin: 0px auto;\n    padding: 0px;\n    border:0;\n    width: 700px;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>By default, <code>div</code> elements are displayed as block elements, so they have 100% width, making centering them meaningless.  As suggested by Arief, you must specify a <code>width</code> and you can then use <code>auto</code> when specifying <code>margin</code> in order to center a <code>div</code>.</p>\n\n<p>Alternatively, you could also force <code>display: inline</code>, but then you'd have something that pretty much behaves like a <code>span</code> instead of a <code>div</code>, so that doesn't make a lot of sense.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I'm afraid the only way to do this without explicitly specifying the width is to use (gasp) tables.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>An element with \u2018display: block\u2019 (as div is by default) has a width determined by the width of its container. You can't make a block's width dependent on the width of its contents (shrink-to-fit).</p>\n\n<p>(Except for blocks that are \u2018float: left/right\u2019 in CSS 2.1, but that's no use for centering.)</p>\n\n<p>You could set the \u2018display\u2019 property to \u2018inline-block\u2019 to turn a block into a shrink-to-fit object that can be controlled by its parent's text-align property, but browser support is spotty. You can mostly get away with it by using hacks (eg. see -moz-inline-stack) if you want to go that way.</p>\n\n<p>The other way to go is tables. This can be necessary when you have columns whose width really can't be known in advance. I can't really tell what you're trying to do from the example code\u2009\u2014\u2009there's nothing obvious in there that would <em>need</em> a shrink-to-fit block\u2009\u2014\u2009but a list of products could possibly be considered tabular.</p>\n\n<p>[PS. never use \u2018pt\u2019 for font sizes on the web. \u2018px\u2019 is more reliable if you really need fixed size text, otherwise relative units like \u2018%\u2019 are better. And \u201cclear: ccc both\u201d\u2009\u2014\u2009a typo?]</p>\n\n<pre><code>.center{\n   text-align:center; \n}\n\n.center &gt; div{ /* N.B. child combinators don't work in IE6 or less */\n   display:inline-block;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/ajr4Lhhr/1/\" rel=\"nofollow\">JSFiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 83
                },
                {
                    "body": "<p>Crappy fix, but it does work...</p>\n\n<p>CSS:</p>\n\n<pre><code>#mainContent {\n    position:absolute;\n    width:600px;\n    background:#FFFF99;\n}\n\n#sidebar {\n    float:left;\n    margin-left:610px;\n    max-width:300;\n    background:#FFCCCC;\n}\n#sidebar{\n\n\n    text-align:center;\n}\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;center&gt;\n&lt;table border=\"0\" cellspacing=\"0\"&gt;\n  &lt;tr&gt;\n    &lt;td&gt;\n&lt;div id=\"mainContent\"&gt;\n1&lt;br/&gt;\n&lt;br/&gt;\n123&lt;br/&gt;\n123&lt;br/&gt;\n123&lt;br/&gt;\n&lt;/div&gt;&lt;div id=\"sidebar\"&gt;&lt;br/&gt;\n&lt;/div&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n&lt;/center&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Update 27 Feb 2015:</strong> My original answer keeps getting voted up, but now I normally use @bobince's approach instead.</p>\n\n<pre><code>.child { /* This is the item to center... */\n  display: inline-block;\n}\n.parent { /* ...and this is its parent container. */\n  text-align: center;\n}\n</code></pre>\n\n<p><strong>My original post for historical purposes:</strong></p>\n\n<p>You might want to try this approach.</p>\n\n<pre><code>&lt;div class=\"product_container\"&gt;\n    &lt;div class=\"outer-center\"&gt;\n        &lt;div class=\"product inner-center\"&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"clear\"/&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Here's the matching style:</p>\n\n<pre><code>.outer-center {\n    float: right;\n    right: 50%;\n    position: relative;\n}\n.inner-center {\n    float: right;\n    right: -50%;\n    position: relative;\n}\n.clear {\n    clear: both;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/6350btvd/3/\" rel=\"nofollow\">JSFiddle</a></p>\n\n<p>The idea here is that you contain the content you want to center in two divs, an outer one and an inner one.  You float both divs so that their widths automatically shrink to fit your content.  Next, you relatively position the outer div with it's right edge in the center of the container.  Lastly, you relatively position the inner div the opposite direction by half of its own width (actually the outer div's width, but they are the same).  Ultimately that centers the content in whatever container it's in.</p>\n\n<p>You <em>may</em> need that empty div at the end if you depend on your \"product\" content to size the height for the \"product_container\".</p>\n",
                    "is_accepted": false,
                    "score": 129
                },
                {
                    "body": "<p>I found a more elegant solution, combining \"inline-block\" to avoid using float and the hacky clear:both. It still requires nested divs tho, which isnt very semantic but it just works...</p>\n\n<pre><code>div.outer{\n    display:inline-block;\n    position:relative;\n    left:50%;\n}\n\ndiv.inner{\n    position:relative;\n    left:-50%;\n}\n</code></pre>\n\n<p>Hope it helps!</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Slight variation on <a href=\"http://stackoverflow.com/a/6353345/185722\">Mike M. Lin's answer</a></p>\n\n<p>If you add <code>overflow: auto;</code> ( or <code>hidden</code> ) to <code>div.product_container</code>, then you don't need <code>div.clear</code>.</p>\n\n<p>This is derived from this article -> <a href=\"http://www.quirksmode.org/css/clearing.html\" rel=\"nofollow\">http://www.quirksmode.org/css/clearing.html</a></p>\n\n<p>Here is modified HTML:</p>\n\n<pre><code>&lt;div class=\"product_container\"&gt;\n    &lt;div class=\"outer-center\"&gt;\n        &lt;div class=\"product inner-center\"&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>And here is modified CSS:</p>\n\n<pre><code>.product_container {\n  overflow: auto;\n  /* width property only required if you want to support IE6 */\n  width: 100%;\n}\n\n.outer-center {\n  float: right;\n  right: 50%;\n  position: relative;\n}\n\n.inner-center {\n  float: right;\n  right: -50%;\n  position: relative;\n}\n</code></pre>\n\n<p>The reason, why it's better without <code>div.clear</code> (apart that it feels wrong to have an empty element) is Firefox'es overzealous margin assignment.</p>\n\n<p>If, for example, you have this html:</p>\n\n<pre><code>&lt;div class=\"product_container\"&gt;\n    &lt;div class=\"outer-center\"&gt;\n        &lt;div class=\"product inner-center\"&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div style=\"clear: both;\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p style=\"margin-top: 11px;\"&gt;Some text&lt;/p&gt;\n</code></pre>\n\n<p>then, in Firefox (8.0 at the point of writing), you will see <code>11px</code> margin <strong>before</strong> <code>product_container</code>.  What's worse, is that you will get a vertical scroll bar for the whole page, even if the content fits nicely into the screen dimensions.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this new css and markup</p>\n\n<p>Here is modified HTML:</p>\n\n<pre><code>&lt;div class=\"product_container\"&gt;\n&lt;div class=\"products\" id=\"products\"&gt;\n   &lt;div id=\"product_15\" class=\"products_box\"&gt;\n       &lt;img src=\"/images/ecommerce/card_default.png\"&gt;\n       &lt;div class=\"price\"&gt;R$ 0,01&lt;/div&gt;\n   &lt;/div&gt;\n   &lt;div id=\"product_15\" class=\"products_box\"&gt;\n       &lt;img src=\"/images/ecommerce/card_default.png\"&gt;\n       &lt;div class=\"price\"&gt;R$ 0,01&lt;/div&gt;\n   &lt;/div&gt;   \n   &lt;div id=\"product_15\" class=\"products_box\"&gt;\n       &lt;img src=\"/images/ecommerce/card_default.png\"&gt;\n       &lt;div class=\"price\"&gt;R$ 0,01&lt;/div&gt;\n   &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p></p>\n\n<p>And here is modified CSS:</p>\n\n<pre><code>&lt;pre&gt;\n.product_container \n {\n text-align:    center;\n height:        150px;\n }\n\n.products {\n    left: 50%;\nheight:35px;\nfloat:left;\nposition: relative;\nmargin: 0 auto;\nwidth:auto;\n}\n.products .products_box\n{\nwidth:auto;\nheight:auto;\nfloat:left;\n  right: 50%;\n  position: relative;\n}\n.price {\n    margin:        6px 2px;\n    width:         137px;\n    color:         #666;\n    font-size:     14pt;\n    font-style:    normal;\n    border:        1px solid #CCC;\n    background-color:   #EFEFEF;\n}\n</code></pre>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Simple fix that works in old browsers (but does use tables, and requires a height to be set):</p>\n\n<pre><code>&lt;div style=\"width:100%;height:40px;position:absolute;top:50%;margin-top:-20px;\"&gt;\n  &lt;table style=\"width:100%\"&gt;&lt;tr&gt;&lt;td align=\"center\"&gt;\n    In the middle\n  &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;div class=\"product_container\"&gt;\n&lt;div class=\"outer-center\"&gt;\n&lt;div class=\"product inner-center\"&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"clear\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n.outer-center\n{\nfloat: right;\nright: 50%;\nposition: relative;\n}\n.inner-center \n{\nfloat: right;\nright: -50%;\nposition: relative;\n}\n.clear \n{\nclear: both;\n}\n\n.product_container\n{\noverflow:hidden;\n}\n</code></pre>\n\n<p>If you dont provide \"overflow:hidden\" for \".product_container\"   the \"outer-center\" div will overlap other nearby contents to the right of it. Any links or buttons to the right of \"outer-center\" wont work. Try background color for \"outer-center\" to understand the need of \"overflow :hidden\"  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This will center an element such as an Ordered List, or Unordered List, or any element.\nJust wrap it with a Div with the class of outerElement and give the inner element the class of innerElement. </p>\n\n<p>The outerelement class accounts for IE, old Mozilla, and most newer browsers.   </p>\n\n<pre><code> .outerElement {\n        display: -moz-inline-stack;\n        display: inline-block;\n        vertical-align: middle;\n        zoom: 1;\n        position: relative;\n        left: 50%;\n    }\n\n.innerElement {\n    position: relative;\n    left: -50%;\n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>&lt;style type=\"text/css\"&gt;\n.container_box{\n    text-align:center\n}\n.content{\n    padding:10px;\n    background:#ff0000;\n    color:#ffffff;\n</code></pre>\n\n<p>}\n   </p>\n\n<p>use span istead of the inner divs</p>\n\n<pre><code>&lt;div class=\"container_box\"&gt;\n   &lt;span class=\"content\"&gt;Hello&lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found interesting solution, I was making slider and had to center slide controls and I did this and works fine. You can also add relative position to parent and move child position vertical. Take a look <a href=\"http://jsfiddle.net/bergb/6DvJz/\" rel=\"nofollow\">http://jsfiddle.net/bergb/6DvJz/</a></p>\n\n<p>CSS:</p>\n\n<pre><code>#parent{\n        width:600px;\n        height:400px;\n        background:#ffcc00;\n        text-align:center;\n    }\n\n#child{\n        display:inline-block;\n        margin:0 auto;\n        background:#fff;\n    }  \n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"parent\"&gt;\n    &lt;div id=\"child\"&gt;voila&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Most browsers support the <code>display: table;</code> CSS rule. This is a good trick to center a div in a container without adding extra HTML nor applying constraining styles to the container (like <code>text-align: center;</code> which would center all other inline content in the container), while keeping dynamic width for the contained div:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"container\"&gt;\n  &lt;div class=\"centered\"&gt;This content is centered&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.centered { display: table; margin: 0 auto; }\n</code></pre>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.container {\r\n  background-color: green;\r\n}\r\n.centered {\r\n  display: table;\r\n  margin: 0 auto;\r\n  background-color: red;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div class=\"container\"&gt;\r\n  &lt;div class=\"centered\"&gt;This content is centered&lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<hr>\n\n<p><strong>Update (2015-03-09):</strong></p>\n\n<p>The proper way to do this today is actually to use flexbox rules. Browser support is a little bit more restricted (<a href=\"http://caniuse.com/#feat=css-table\" rel=\"nofollow\">CSS table support</a> vs <a href=\"http://caniuse.com/#feat=flexbox\" rel=\"nofollow\">flexbox support</a>) but this method also allows many other things, and is a dedicated CSS rule for this type of behavior:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"container\"&gt;\n  &lt;div class=\"centered\"&gt;This content is centered&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.container {\n  display: flex;\n  flex-direction: column; /* put this if you want to stack elements vertically */\n}\n.centered { margin: 0 auto; }\n</code></pre>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.container {\r\n  display: flex;\r\n  flex-direction: column; /* put this if you want to stack elements vertically */\r\n  background-color: green;\r\n}\r\n.centered {\r\n  margin: 0 auto;\r\n  background-color: red;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div class=\"container\"&gt;\r\n  &lt;div class=\"centered\"&gt;This content is centered&lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>I know this question is old, but I'm taking a crack at it. Very similar to bobince's answer but with working code example. </p>\n\n<p>Make each product an inline-block. Center the contents of the container. Done.</p>\n\n<p><a href=\"http://jsfiddle.net/rgbk/6Z2Re/\" rel=\"nofollow\">http://jsfiddle.net/rgbk/6Z2Re/</a></p>\n\n<pre><code>&lt;style&gt;\n.products{\n    text-align:center;\n}\n\n.product{\n    display:inline-block;\n    text-align:left;\n\n    background-image: url('http://www.color.co.uk/wp-content/uploads/2013/11/New_Product.jpg');\n    background-size:25px;\n    padding-left:25px;\n    background-position:0 50%;\n    background-repeat:no-repeat;\n}\n\n.price {\n    margin:        6px 2px;\n    width:         137px;\n    color:         #666;\n    font-size:     14pt;\n    font-style:    normal;\n    border:        1px solid #CCC;\n    background-color:   #EFEFEF;\n}\n&lt;/style&gt;\n\n\n&lt;div class=\"products\"&gt;\n    &lt;div class=\"product\"&gt;\n        &lt;div class=\"price\"&gt;R$ 0,01&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"product\"&gt;\n        &lt;div class=\"price\"&gt;R$ 0,01&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"product\"&gt;\n        &lt;div class=\"price\"&gt;R$ 0,01&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"product\"&gt;\n        &lt;div class=\"price\"&gt;R$ 0,01&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"product\"&gt;\n        &lt;div class=\"price\"&gt;R$ 0,01&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"product\"&gt;\n        &lt;div class=\"price\"&gt;R$ 0,01&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>See also: <a href=\"http://stackoverflow.com/questions/9245755/center-inline-blocks-with-dynamic-width-in-css\">Center inline-blocks with dynamic width in CSS</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Do <code>display:table;</code> and set <code>margin</code> to <code>auto</code></p>\n\n<p>Important bit of code:</p>\n\n<pre><code>.relatedProducts {\n    display: table;\n    margin-left: auto;\n    margin-right: auto;\n}\n</code></pre>\n\n<p>No matter how many elements you got now it will auto align in center</p>\n\n<p>Example in code snippet:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.relatedProducts {\r\n    display: table;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n}\r\na {\r\n  text-decoration:none;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div class=\"row relatedProducts\"&gt;\r\n&lt;div class=\"homeContentTitle\" style=\"margin: 100px auto 35px; width: 250px\"&gt;Similar Products&lt;/div&gt;\r\n\t\t\t\t\t\r\n&lt;a href=\"#\"&gt;test1 &lt;/a&gt;\r\n&lt;a href=\"#\"&gt;test2 &lt;/a&gt;\r\n&lt;a href=\"#\"&gt;test3 &lt;/a&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a problem when I try to center the div block \"products\" because I don't know in advance the div width.  Anybody have a solution?</p>\n\n<p>Update: The problem I have is I don't know how many products I'll display, I can have 1, 2 or 3 products, I can center them if it was a fixed number as I'd know the width of the parent div, I just don't know how to do it when the content is dynamic.</p>\n\n<pre><code>&lt;style&gt;\n    .product_container {\n        text-align:    center;\n        height:        150px;\n    }\n\n    .products {\n        height:        140px;\n        text-align:    center;\n        margin:        0 auto;\n        clear:         ccc both; \n    }\n    .price {\n        margin:        6px 2px;\n        width:         137px;\n        color:         #666;\n        font-size:     14pt;\n        font-style:    normal;\n        border:        1px solid #CCC;\n        background-color:   #EFEFEF;\n    }\n&lt;/style&gt;\n\n&lt;div class=\"product_container\"&gt;\n    &lt;div class=\"products\" id=\"products\"&gt;\n       &lt;div id=\"product_15\"&gt;\n           &lt;img src=\"/images/ecommerce/card_default.png\"&gt;\n           &lt;div class=\"price\"&gt;R$ 0,01&lt;/div&gt;\n       &lt;/div&gt;\n\n       &lt;div id=\"product_15\"&gt;\n           &lt;img src=\"/images/ecommerce/card_default.png\"&gt;\n           &lt;div class=\"price\"&gt;R$ 0,01&lt;/div&gt;\n       &lt;/div&gt;   \n\n       &lt;div id=\"product_15\"&gt;\n           &lt;img src=\"/images/ecommerce/card_default.png\"&gt;\n           &lt;div class=\"price\"&gt;R$ 0,01&lt;/div&gt;\n       &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1425925701,
            "question_id": 283961,
            "score": 132,
            "tags": [
                "html",
                "css"
            ],
            "title": "Centering a div block without the width"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Only if you need to support ancient IE browsers.</p>\n\n<p>The modern approach is to do <code>margin: 0 auto</code> in your CSS.</p>\n\n<p>Example here: <a href=\"http://jsfiddle.net/bKRMY/\">http://jsfiddle.net/bKRMY/</a></p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;p&gt;Hello the following image is centered&lt;/p&gt;\n&lt;p class=\"pic\"&gt;&lt;img src=\"https://twimg0-a.akamaihd.net/profile_images/440228301/StackoverflowLogo_reasonably_small.png\"/&gt;&lt;/p&gt;\n&lt;p&gt;Did it work?&lt;/p&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>p.pic {\n    width: 48px;\n    margin: 0 auto;\n}\n</code></pre>\n\n<p>Only issue ihere is that <em>the width of the paragraph must be the same as the width of the image</em>.  If you don't put a width on the paragraph, it will not work, because it will assume 100% and your image will be aligned left, unless of course you use <code>text-align:center</code>.</p>\n\n<p>Try out the fiddle and experiment with it if you like.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>That doesn't always work... if it doesn't, try:</p>\n\n<pre><code>img {\n    display: block;\n    margin: 0 auto;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 58
                },
                {
                    "body": "<p>That is not the recommended way as it is not supported by W3C.</p>\n\n<p>Use this instead:</p>\n\n<pre><code>img.center {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 383
                },
                {
                    "body": "<p>Came across <a href=\"http://hungred.com/how-to/tutorial-align-center-screen-position-absolute-css/\">this post</a> and it worked for me:</p>\n\n<pre><code>img {\n    position: absolute;\n    top: 0; bottom:0; left: 0; right:0;\n    margin: auto;\n}\n</code></pre>\n\n<p>(Vertical and horizontal alignment)</p>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>Actually, the only problem with your code is that the <code>text-align</code> attribute applies to text (yes, images count as text) inside of the tag.  You would want to put a <code>span</code> tag around the image and set <em>its</em> style to <code>text-align: center</code>, as so:  </p>\n\n<p>HTML code:  </p>\n\n<pre><code>&lt;span class=\"centerImage\"&gt;&lt;img src=\"...\" /&gt;&lt;/span&gt;\n</code></pre>\n\n<p>CSS code:  </p>\n\n<pre><code>span.centerImage {\n     text-align: center;\n}\n</code></pre>\n\n<p>The image will be centered.  In response to your question, it is the easiest and most foolproof way to center images, as long as you remember to apply the rule to the image's containing <code>span</code> (or <code>div</code>).  </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Another way of doing would be centering an enclosing paragraph:</p>\n\n<pre><code>&lt;p style=\"text-align:center\"&gt;&lt;img src=\"...\"/&gt;&lt;/p&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>simply change parent align :)</p>\n\n<p>Try this one on parent properties <code>text-align:center</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>if you are using a class with image then the following will do</p>\n\n<pre><code>class{\n    display: block;\n    margin: 0 auto;\n}\n</code></pre>\n\n<p>if it is only an image in a specific calss that you want to center align then following will do</p>\n\n<pre><code>class img {\n    display: block;\n    margin: 0 auto;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Is the property <code>text-align: center;</code> a good way to center an image using CSS?</p>\n\n<pre><code>img {\n    text-align: center;\n}\n</code></pre>\n",
            "last_activity_date": 1389086325,
            "question_id": 7055393,
            "score": 181,
            "tags": [
                "html",
                "css"
            ],
            "title": "Center image using text-align center?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The cssrewrite filter is not compatible with the @bundle notation for now. So you have two choices:</p>\n\n<ul>\n<li><p>Reference the CSS files in the web folder (after: <code>console assets:install --symlink web</code>)</p>\n\n<pre><code>{% stylesheets '/bundles/myCompany/css/*.\" filter=\"cssrewrite\" %}\n</code></pre></li>\n<li><p>Use the cssembed filter to embed images in the CSS like this.</p>\n\n<pre><code>{% stylesheets '@MyCompanyMyBundle/Resources/assets/css/*.css' filter=\"cssembed\" %}\n</code></pre></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I have came across the very-very-same problem.</p>\n\n<p>In short:</p>\n\n<ul>\n<li>Willing to have original CSS in an \"internal\" dir (Resources/assets/css/a.css)</li>\n<li>Willing to have the images in the \"public\" dir (Resources/public/images/devil.png)</li>\n<li>Willing that twig takes that CSS, recompiles it into web/css/a.css and make it point the image in /web/bundles/mynicebundle/images/devil.png</li>\n</ul>\n\n<p>I have made a test with ALL possible (sane) combinations of the following:</p>\n\n<ul>\n<li>@notation, relative notation</li>\n<li>Parse with cssrewrite, without it</li>\n<li>CSS image background vs direct &lt;img> tag src= to the very same image than CSS</li>\n<li>CSS parsed with assetic and also without parsing with assetic direct output</li>\n<li>And all this multiplied by trying a \"public dir\" (as <code>Resources/public/css</code>) with the CSS and a \"private\" directory (as <code>Resources/assets/css</code>).</li>\n</ul>\n\n<p>This gave me a total of 14 combinations on the same twig, and this route was launched from</p>\n\n<ul>\n<li>\"/app_dev.php/\"</li>\n<li>\"/app.php/\"</li>\n<li>and \"/\"</li>\n</ul>\n\n<p>thus giving 14 x 3 = 42 tests.</p>\n\n<p>Additionally, all this has been tested working in a subdirectory, so there is no way to fool by giving absolute URLs because they would simply not work.</p>\n\n<p>The tests were two unnamed images and then divs named from 'a' to 'f' for the CSS built FROM the public folder and named 'g to 'l' for the ones built from the internal path.</p>\n\n<p>I observed the following:</p>\n\n<p>Only 3 of the 14 tests were shown adequately on the three URLs. And NONE was from the \"internal\" folder (Resources/assets). It was a pre-requisite to have the spare CSS PUBLIC and then build with assetic FROM there.</p>\n\n<p>These are the results:</p>\n\n<ol>\n<li><p>Result launched with /app_dev.php/\n<img src=\"http://i.stack.imgur.com/XF7n2.jpg\" alt=\"Result launched with /app_dev.php/\"></p></li>\n<li><p>Result launched with /app.php/\n<img src=\"http://i.stack.imgur.com/V93Zs.jpg\" alt=\"Result launched with /app.php/\"></p></li>\n<li><p>Result launched with /\n<img src=\"http://i.stack.imgur.com/M6aMj.jpg\" alt=\"enter image description here\"></p></li>\n</ol>\n\n<p>So... ONLY\n - The second image\n - Div B\n - Div C\nare the allowed syntaxes.</p>\n\n<p>Here there is the TWIG code:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n            {% stylesheets 'bundles/commondirty/css_original/container.css' filter=\"cssrewrite\" %}\n                &lt;link href=\"{{ asset_url }}\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n            {% endstylesheets %}\n\n    {# First Row: ABCDEF #}\n\n            &lt;link href=\"{{ '../bundles/commondirty/css_original/a.css' }}\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n            &lt;link href=\"{{ asset( 'bundles/commondirty/css_original/b.css' ) }}\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n\n            {% stylesheets 'bundles/commondirty/css_original/c.css' filter=\"cssrewrite\" %}\n                &lt;link href=\"{{ asset_url }}\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n            {% endstylesheets %}\n\n            {% stylesheets 'bundles/commondirty/css_original/d.css' %}\n                &lt;link href=\"{{ asset_url }}\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n            {% endstylesheets %}\n\n            {% stylesheets '@CommonDirtyBundle/Resources/public/css_original/e.css' filter=\"cssrewrite\" %}\n                &lt;link href=\"{{ asset_url }}\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n            {% endstylesheets %}\n\n            {% stylesheets '@CommonDirtyBundle/Resources/public/css_original/f.css' %}\n                &lt;link href=\"{{ asset_url }}\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n            {% endstylesheets %}\n\n    {# First Row: GHIJKL #}\n\n            &lt;link href=\"{{ '../../src/Common/DirtyBundle/Resources/assets/css/g.css' }}\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n            &lt;link href=\"{{ asset( '../src/Common/DirtyBundle/Resources/assets/css/h.css' ) }}\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n\n            {% stylesheets '../src/Common/DirtyBundle/Resources/assets/css/i.css' filter=\"cssrewrite\" %}\n                &lt;link href=\"{{ asset_url }}\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n            {% endstylesheets %}\n\n            {% stylesheets '../src/Common/DirtyBundle/Resources/assets/css/j.css' %}\n                &lt;link href=\"{{ asset_url }}\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n            {% endstylesheets %}\n\n            {% stylesheets '@CommonDirtyBundle/Resources/assets/css/k.css' filter=\"cssrewrite\" %}\n                &lt;link href=\"{{ asset_url }}\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n            {% endstylesheets %}\n\n            {% stylesheets '@CommonDirtyBundle/Resources/assets/css/l.css' %}\n                &lt;link href=\"{{ asset_url }}\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n            {% endstylesheets %}\n\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div class=\"container\"&gt;\n            &lt;p&gt;\n                &lt;img alt=\"Devil\" src=\"../bundles/commondirty/images/devil.png\"&gt;\n                &lt;img alt=\"Devil\" src=\"{{ asset('bundles/commondirty/images/devil.png') }}\"&gt;\n            &lt;/p&gt;\n            &lt;p&gt;\n                &lt;div class=\"a\"&gt;\n                    A\n                &lt;/div&gt;\n                &lt;div class=\"b\"&gt;\n                    B\n                &lt;/div&gt;\n                &lt;div class=\"c\"&gt;\n                    C\n                &lt;/div&gt;\n                &lt;div class=\"d\"&gt;\n                    D\n                &lt;/div&gt;\n                &lt;div class=\"e\"&gt;\n                    E\n                &lt;/div&gt;\n                &lt;div class=\"f\"&gt;\n                    F\n                &lt;/div&gt;\n            &lt;/p&gt;\n            &lt;p&gt;\n                &lt;div class=\"g\"&gt;\n                    G\n                &lt;/div&gt;\n                &lt;div class=\"h\"&gt;\n                    H\n                &lt;/div&gt;\n                &lt;div class=\"i\"&gt;\n                    I\n                &lt;/div&gt;\n                &lt;div class=\"j\"&gt;\n                    J\n                &lt;/div&gt;\n                &lt;div class=\"k\"&gt;\n                    K\n                &lt;/div&gt;\n                &lt;div class=\"l\"&gt;\n                    L\n                &lt;/div&gt;\n            &lt;/p&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>The container.css:</p>\n\n<pre><code>div.container\n{\n    border: 1px solid red;\n    padding: 0px;\n}\n\ndiv.container img, div.container div \n{\n    border: 1px solid green;\n    padding: 5px;\n    margin: 5px;\n    width: 64px;\n    height: 64px;\n    display: inline-block;\n    vertical-align: top;\n}\n</code></pre>\n\n<p>And a.css, b.css, c.css, etc: all identical, just changing the color and the CSS selector.</p>\n\n<pre><code>.a\n{\n    background: red url('../images/devil.png');\n}\n</code></pre>\n\n<p>The \"directories\" structure is:</p>\n\n<p><em>Directories</em>\n<img src=\"http://i.stack.imgur.com/uaXOE.jpg\" alt=\"Directories\"></p>\n\n<p><strong>All this came, because I did not want the individual original files exposed to the public, specially if I wanted to play with \"less\" filter or \"sass\" or similar... I did not want my \"originals\" published, only the compiled one.</strong></p>\n\n<p>But there are <strong>good news</strong>. If you don't want to have the \"spare CSS\" in the public directories... install them not with <code>--symlink</code>, but really making a copy. Once \"assetic\" has built the compound CSS, and you can DELETE the original CSS from the filesystem, and leave the images:</p>\n\n<p><em>Compilation process</em>\n<img src=\"http://i.stack.imgur.com/KIc7L.jpg\" alt=\"Compilation process\"></p>\n\n<p>Note I do this for the <code>--env=prod</code> environment.</p>\n\n<p>Just a few final thoughts:</p>\n\n<ul>\n<li><p>This desired behaviour can be achieved by having the images in \"public\" directory in <a href=\"http://en.wikipedia.org/wiki/Git_%28software%29\">Git</a> or <a href=\"http://en.wikipedia.org/wiki/Mercurial\">Mercurial</a> and the \"css\" in the \"assets\" directory. That is, instead of having them in \"public\" as shown in the directories, imagine a, b, c... residing in the \"assets\" instead of \"public\", than have your installer/deployer (probably a <a href=\"http://en.wikipedia.org/wiki/Bash_%28Unix_shell%29\">Bash</a> script) to put the CSS temporarily inside the \"public\" dir before <code>assets:install</code> is executed, then <code>assets:install</code>, then <code>assetic:dump</code>, and then automating the removal of CSS from the public directory after <code>assetic:dump</code> has been executed. This would achive EXACTLY the behaviour desired in the question.</p></li>\n<li><p>Another (unknown if possible) solution would be to explore if \"assets:install\" can only take \"public\" as the source or could also take \"assets\" as a source to publish. That would help when installed with the <code>--symlink</code> option when developing.</p></li>\n<li><p>Additionally, if we are going to script the removal from the \"public\" dir, then, the need of storing them in a separate directory (\"assets\") disappears. They can live inside \"public\" in our version-control system as there will be dropped upon deploy to the public. This allows also for the <code>--symlink</code> usage.</p></li>\n</ul>\n\n<p><strong>BUT ANYWAY, CAUTION NOW:</strong> As now the originals are not there anymore (<code>rm -Rf</code>), there are only two solutions, not three. The working div \"B\" does not work anymore as it was an asset() call assuming there was the original asset. Only \"C\" (the compiled one) will work.</p>\n\n<p>So... there is ONLY a FINAL WINNER: Div \"C\" allows EXACTLY what it was asked in the topic: To be compiled, respect the path to the images and do not expose the original source to the public.</p>\n\n<p><em>The winner is C</em></p>\n\n<p><img src=\"http://i.stack.imgur.com/3VDuS.jpg\" alt=\"The winner is C\"></p>\n",
                    "is_accepted": true,
                    "score": 137
                },
                {
                    "body": "<p>I'll post what worked for me, thanks to @xavi-montero.</p>\n\n<p>Put your CSS in your bundle's <code>Resource/public/css</code> directory, and your images in say <code>Resource/public/img</code>.</p>\n\n<p>Change assetic paths to the form <code>'bundles/mybundle/css/*.css'</code>, in your layout.</p>\n\n<p>In <code>config.yml</code>, add rule <code>css_rewrite</code> to assetic:</p>\n\n<pre><code>assetic:\n    filters:\n        cssrewrite:\n            apply_to: \"\\.css$\"\n</code></pre>\n\n<p>Now install assets and compile with assetic:</p>\n\n<pre><code>$ rm -r app/cache/* # just in case\n$ php app/console assets:install --symlink\n$ php app/console assetic:dump --env=prod\n</code></pre>\n\n<p>This is good enough for the development box, and <code>--symlink</code> is useful, so you don't have to reinstall your assets (for example, you add a new image) when you enter through <code>app_dev.php</code>.</p>\n\n<p>For the production server, I just removed the '--symlink' option (in my deployment script), and added this command at the end:</p>\n\n<pre><code>$ rm -r web/bundles/*/css web/bundles/*/js # all this is already compiled, we don't need the originals\n</code></pre>\n\n<p>All is done. With this, you can use paths like this in your .css files: <code>../img/picture.jpeg</code></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If it can help someone, we have struggled a lot with Assetic, and we are now doing the following in development mode:</p>\n\n<ul>\n<li><p>Set up like in <em><a href=\"http://symfony.com/doc/current/cookbook/assetic/asset_management.html#dumping-asset-files-in-the-dev-environment\" rel=\"nofollow\">Dumping Asset Files in the dev Environmen</a></em> so in <code>config_dev.yml</code>, we have commented:</p>\n\n<pre><code>#assetic:\n#    use_controller: true\n</code></pre>\n\n<p>And in routing_dev.yml</p>\n\n<pre><code>#_assetic:\n#    resource: .\n#    type:     assetic\n</code></pre></li>\n<li><p>Specify the URL as absolute from the web root. For example, background-image: <code>url(\"/bundles/core/dynatree/skins/skin/vline.gif\");</code> Note: our vhost web root is pointing on <code>web/</code>.</p></li>\n<li><p>No usage of cssrewrite filter</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I had the same problem and I just tried using the following as a workaround. Seems to work so far. You can even create a dummy template that just contains references to all those static assets.</p>\n\n<pre><code>{% stylesheets\n    output='assets/fonts/glyphicons-halflings-regular.ttf'\n    'bundles/bootstrap/fonts/glyphicons-halflings-regular.ttf'\n%}{% endstylesheets %}\n</code></pre>\n\n<p>Notice the omission of any output which means nothing shows up on the template. When I run assetic:dump the files are copied over to the desired location and the css includes work as expected.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>A solution that works for me is to run <code>sudo chmod 777 -R bundles/</code> in the /web folder.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<h3>Problem</h3>\n\n<p>I have a <a href=\"http://en.wikipedia.org/wiki/Cascading_Style_Sheets\">CSS</a> file with some paths in it (for images, fonts, etc.. <code>url(..)</code>).</p>\n\n<p>My path structure is like this:</p>\n\n<pre><code>...\n+-src/\n| +-MyCompany/\n|   +-MyBundle/\n|     +-Resources/\n|       +-assets/\n|         +-css/\n|           +-stylesheets...\n+-web/\n| +-images/\n|   +-images...\n...\n</code></pre>\n\n<p>I want to reference my images in the stylesheet. </p>\n\n<h3>First Solution</h3>\n\n<p>I changed all paths in the CSS file to absolute paths. This is no solution, as the application should (and has to!) be working in a subdirectory, too.</p>\n\n<h3>Second Solution</h3>\n\n<p>Use Assetic with <code>filter=\"cssrewrite\"</code>.</p>\n\n<p>So I changed all my paths in my CSS file to </p>\n\n<pre><code>url(\"../../../../../../web/images/myimage.png\")\n</code></pre>\n\n<p>to represent the actual path from my resources directory to the <code>/web/images</code> directory. This does not work, since cssrewrite produces the following code:</p>\n\n<pre><code>url(\"../../Resources/assets/\")\n</code></pre>\n\n<p>which is obviously the wrong path.</p>\n\n<p>After <code>assetic:dump</code> this path is created, which is still wrong:</p>\n\n<pre><code>url(\"../../../web/images/myimage.png\")\n</code></pre>\n\n<p>The twig code of Assetic:</p>\n\n<pre><code>{% stylesheets\n    '@MyCompanyMyBundle/Resources/assets/css/*.css'\n    filter=\"cssrewrite\"\n%}\n&lt;link rel=\"stylesheet\" href=\"{{ asset_url }}\" /&gt;\n{% endstylesheets %}\n</code></pre>\n\n<h3>Current (Third) Solution</h3>\n\n<p>Since all CSS files end up in <code>/web/css/stylexyz.css</code>, I changed all paths in the CSS file to be relative:</p>\n\n<pre><code>url(\"../images/myimage.png\")\n</code></pre>\n\n<p>This (bad) solution works, except in the <code>dev</code> environment:\nThe CSS path is <code>/app_dev.php/css/stylexyz.css</code> and therefore the image path resulting from this is <code>/app_dev.php/images/myimage.png</code>, which results in a <code>NotFoundHttpException</code>.</p>\n\n<p>Is there a better and working solution?</p>\n",
            "last_activity_date": 1425996514,
            "question_id": 9500573,
            "score": 58,
            "tags": [
                "php",
                "css",
                "symfony2",
                "assetic"
            ],
            "title": "Path of assets in CSS files in Symfony 2"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>Updated Answer</strong></p>\n\n<p><sup>* Updated answer which support the v2.1.1** bootstrap version stylesheet. </sup></p>\n\n<p><sup> **But be careful because this solution has been removed from v3 </sup></p>\n\n<p>Just wanted to point out that this solution is not needed anymore as the latest bootstrap now supports multi-level dropdowns by default. You can still use it if you're on older versions but for those who updated to the latest (v2.1.1 at the time of writing) it is not needed anymore. Here is a fiddle with the updated default multi-level dropdown straight from the documentation:</p>\n\n<p><a href=\"http://jsfiddle.net/2Smgv/2858/\">http://jsfiddle.net/2Smgv/2858/</a></p>\n\n<hr>\n\n<p><strong>Original Answer</strong></p>\n\n<p>There have been some issues raised on submenu support over at github and they are usually closed by the bootstrap developers, such as <a href=\"https://github.com/twitter/bootstrap/issues/160\">this one</a>, so i think it is left to the developers using the bootstrap to work something out. Here is a demo i put together showing you how you can hack together a working sub-menu. </p>\n\n<p>Relevant code</p>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>.dropdown-menu .sub-menu {\n    left: 100%;\n    position: absolute;\n    top: 0;\n    visibility: hidden;\n    margin-top: -1px;\n}\n\n.dropdown-menu li:hover .sub-menu {\n    visibility: visible;\n    display: block;\n}\n\n.navbar .sub-menu:before {\n    border-bottom: 7px solid transparent;\n    border-left: none;\n    border-right: 7px solid rgba(0, 0, 0, 0.2);\n    border-top: 7px solid transparent;\n    left: -7px;\n    top: 10px;\n}\n.navbar .sub-menu:after {\n    border-top: 6px solid transparent;\n    border-left: none;\n    border-right: 6px solid #fff;\n    border-bottom: 6px solid transparent;\n    left: 10px;\n    top: 11px;\n    left: -6px;\n}\n</code></pre>\n\n<p>Created my own <code>.sub-menu</code> class to apply to the 2-level drop down menus, this way we can position them next to our menu items. Also modified the arrow to display it on the left of the submenu group.</p>\n\n<p><a href=\"http://jsfiddle.net/2Smgv/224/\">Demo</a></p>\n",
                    "is_accepted": true,
                    "score": 95
                },
                {
                    "body": "<p>I just added <code>class=\"span2\"</code> to the <code>&lt;li&gt;</code> for the dropdown items and that worked.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I was able to fix the sub-menu's always pinning to the top of the parent menu from Andres's answer with the following addition:</p>\n\n<pre><code>.dropdown-menu li {\n    position: relative;\n}\n</code></pre>\n\n<p>I also add an icon \"icon-chevron-right\" on items which contain menu sub-menus, and change the icon from black to white on hover (to compliment the text changing to white and look better with the selected blue background).</p>\n\n<p>Here is the full less/css change (replace the above with this):</p>\n\n<pre><code>.dropdown-menu li {\n    position: relative;\n\n    [class^=\"icon-\"] {\n        float: right;\n    }\n\n    &amp;:hover {\n        // Switch to white icons on hover\n        [class^=\"icon-\"] {\n            background-image: url(\"../img/glyphicons-halflings-white.png\");\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p><strong>[Bootstrap v3]</strong></p>\n\n<p>To create a n-level dropdown menu (touch device friendly) in Bootstrap v3,</p>\n\n<ul>\n<li>jsfiddle-demo of n-level dropdown menu <a href=\"http://jsfiddle.net/chirayu45/YXkUT/16/\" rel=\"nofollow\">v3.0.0</a> | <a href=\"http://jsfiddle.net/chirayu45/Khh4C/1/\" rel=\"nofollow\">v3.1.1</a> | <a href=\"http://jsfiddle.net/chirayu45/e02t2jcc/1/\" rel=\"nofollow\">v3.3.0</a></li>\n</ul>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>.dropdown-menu&gt;li /* To prevent selection of text */\n{   position:relative;\n    -webkit-user-select: none; /* Chrome/Safari */        \n    -moz-user-select: none; /* Firefox */\n    -ms-user-select: none; /* IE10+ */\n    /* Rules below not implemented in browsers yet */\n    -o-user-select: none;\n    user-select: none;\n    cursor:pointer;\n}\n.dropdown-menu .sub-menu \n{\n    left: 100%;\n    position: absolute;\n    top: 0;\n    display:none;\n    margin-top: -1px;\n    border-top-left-radius:0;\n    border-bottom-left-radius:0;\n    border-left-color:#fff;\n    box-shadow:none;\n}\n.right-caret:after,.left-caret:after\n {  content:\"\";\n    border-bottom: 5px solid transparent;\n    border-top: 5px solid transparent;\n    display: inline-block;\n    height: 0;\n    vertical-align: middle;\n    width: 0;\n    margin-left:5px;\n}\n.right-caret:after\n{   border-left: 5px solid #ffaf46;\n}\n.left-caret:after\n{   border-right: 5px solid #ffaf46;\n}\n</code></pre>\n\n<p><strong>JQuery:</strong></p>\n\n<pre><code>$(function(){\n    $(\".dropdown-menu &gt; li &gt; a.trigger\").on(\"click\",function(e){\n        var current=$(this).next();\n        var grandparent=$(this).parent().parent();\n        if($(this).hasClass('left-caret')||$(this).hasClass('right-caret'))\n            $(this).toggleClass('right-caret left-caret');\n        grandparent.find('.left-caret').not(this).toggleClass('right-caret left-caret');\n        grandparent.find(\".sub-menu:visible\").not(current).hide();\n        current.toggle();\n        e.stopPropagation();\n    });\n    $(\".dropdown-menu &gt; li &gt; a:not(.trigger)\").on(\"click\",function(){\n        var root=$(this).closest('.dropdown');\n        root.find('.left-caret').toggleClass('right-caret left-caret');\n        root.find('.sub-menu:visible').hide();\n    });\n});\n</code></pre>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;div class=\"dropdown\" style=\"position:relative\"&gt;\n    &lt;a href=\"#\" class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\"&gt;Click Here &lt;span class=\"caret\"&gt;&lt;/span&gt;&lt;/a&gt;\n    &lt;ul class=\"dropdown-menu\"&gt;\n        &lt;li&gt;\n            &lt;a class=\"trigger right-caret\"&gt;Level 1&lt;/a&gt;\n            &lt;ul class=\"dropdown-menu sub-menu\"&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Level 2&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;\n                    &lt;a class=\"trigger right-caret\"&gt;Level 2&lt;/a&gt;\n                    &lt;ul class=\"dropdown-menu sub-menu\"&gt;\n                        &lt;li&gt;&lt;a href=\"#\"&gt;Level 3&lt;/a&gt;&lt;/li&gt;\n                        &lt;li&gt;&lt;a href=\"#\"&gt;Level 3&lt;/a&gt;&lt;/li&gt;\n                        &lt;li&gt;\n                            &lt;a class=\"trigger right-caret\"&gt;Level 3&lt;/a&gt;\n                            &lt;ul class=\"dropdown-menu sub-menu\"&gt;\n                                &lt;li&gt;&lt;a href=\"#\"&gt;Level 4&lt;/a&gt;&lt;/li&gt;\n                                &lt;li&gt;&lt;a href=\"#\"&gt;Level 4&lt;/a&gt;&lt;/li&gt;\n                                &lt;li&gt;&lt;a href=\"#\"&gt;Level 4&lt;/a&gt;&lt;/li&gt;\n                            &lt;/ul&gt;\n                        &lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Level 2&lt;/a&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#\"&gt;Level 1&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#\"&gt;Level 1&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>This example is from <a href=\"http://bootsnipp.com/snippets/featured/multi-level-dropdown-menu-bs3\">http://bootsnipp.com/snippets/featured/multi-level-dropdown-menu-bs3</a></p>\n\n<p>Works for me in Bootstrap v3.1.1.</p>\n\n<h3>HTML</h3>\n\n<pre><code>&lt;div class=\"container\"&gt;\n&lt;div class=\"row\"&gt;\n    &lt;h2&gt;Multi level dropdown menu in Bootstrap 3&lt;/h2&gt;\n    &lt;hr&gt;\n    &lt;div class=\"dropdown\"&gt;\n        &lt;a id=\"dLabel\" role=\"button\" data-toggle=\"dropdown\" class=\"btn btn-primary\" data-target=\"#\" href=\"/page.html\"&gt;\n            Dropdown &lt;span class=\"caret\"&gt;&lt;/span&gt;\n        &lt;/a&gt;\n        &lt;ul class=\"dropdown-menu multi-level\" role=\"menu\" aria-labelledby=\"dropdownMenu\"&gt;\n          &lt;li&gt;&lt;a href=\"#\"&gt;Some action&lt;/a&gt;&lt;/li&gt;\n          &lt;li&gt;&lt;a href=\"#\"&gt;Some other action&lt;/a&gt;&lt;/li&gt;\n          &lt;li class=\"divider\"&gt;&lt;/li&gt;\n          &lt;li class=\"dropdown-submenu\"&gt;\n            &lt;a tabindex=\"-1\" href=\"#\"&gt;Hover me for more options&lt;/a&gt;\n            &lt;ul class=\"dropdown-menu\"&gt;\n              &lt;li&gt;&lt;a tabindex=\"-1\" href=\"#\"&gt;Second level&lt;/a&gt;&lt;/li&gt;\n              &lt;li class=\"dropdown-submenu\"&gt;\n                &lt;a href=\"#\"&gt;Even More..&lt;/a&gt;\n                &lt;ul class=\"dropdown-menu\"&gt;\n                    &lt;li&gt;&lt;a href=\"#\"&gt;3rd level&lt;/a&gt;&lt;/li&gt;\n                    &lt;li&gt;&lt;a href=\"#\"&gt;3rd level&lt;/a&gt;&lt;/li&gt;\n                &lt;/ul&gt;\n              &lt;/li&gt;\n              &lt;li&gt;&lt;a href=\"#\"&gt;Second level&lt;/a&gt;&lt;/li&gt;\n              &lt;li&gt;&lt;a href=\"#\"&gt;Second level&lt;/a&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n          &lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p></p>\n\n<h3>CSS</h3>\n\n<pre><code>.dropdown-submenu {\nposition: relative;\n}\n\n.dropdown-submenu&gt;.dropdown-menu {\ntop: 0;\nleft: 100%;\nmargin-top: -6px;\nmargin-left: -1px;\n-webkit-border-radius: 0 6px 6px 6px;\n-moz-border-radius: 0 6px 6px;\nborder-radius: 0 6px 6px 6px;\n}\n\n.dropdown-submenu:hover&gt;.dropdown-menu {\ndisplay: block;\n}\n\n.dropdown-submenu&gt;a:after {\ndisplay: block;\ncontent: \" \";\nfloat: right;\nwidth: 0;\nheight: 0;\nborder-color: transparent;\nborder-style: solid;\nborder-width: 5px 0 5px 5px;\nborder-left-color: #ccc;\nmargin-top: 5px;\nmargin-right: -10px;\n}\n\n.dropdown-submenu:hover&gt;a:after {\nborder-left-color: #fff;\n}\n\n.dropdown-submenu.pull-left {\nfloat: none;\n}\n\n.dropdown-submenu.pull-left&gt;.dropdown-menu {\nleft: -100%;\nmargin-left: 10px;\n-webkit-border-radius: 6px 0 6px 6px;\n-moz-border-radius: 6px 0 6px 6px;\nborder-radius: 6px 0 6px 6px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>Is it possible to have a multi level dropdown menu by using the elements of twitter bootstrap 2?\nThe original version doesn't have this feature.</p>\n",
            "last_activity_date": 1424654565,
            "question_id": 9758587,
            "score": 54,
            "tags": [
                "css",
                "twitter-bootstrap"
            ],
            "title": "Twitter Bootstrap Multilevel Dropdown Menu"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>The class .show-grid is applying center aligned text in the example in the link.</p>\n\n<p>You can always add <code>style=\"text-align:center\"</code> to your row div or some other class I would think.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<h2>This is for Text Centering (<em>which is what the question was about</em>)</h2>\n\n<p>For other types of content, see <a href=\"http://stackoverflow.com/a/13099189/2812842\">Flavien's answer</a>.</p>\n\n<p><strong>Update: Bootstrap 2.3.0+ Answer</strong></p>\n\n<p>The original answer was for an early version of bootstrap. As of bootstrap 2.3.0, <strong>you can simply give the div the class <code>.text-center</code></strong>.</p>\n\n<hr>\n\n<p><strong>Original Answer (pre 2.3.0)</strong></p>\n\n<p>You need to define one of the two classes, <code>row</code> or <code>span12</code> with a <code>text-align: center</code>. See <a href=\"http://jsfiddle.net/xKSUH/\">http://jsfiddle.net/xKSUH/</a> or <a href=\"http://jsfiddle.net/xKSUH/1/\">http://jsfiddle.net/xKSUH/1/</a></p>\n",
                    "is_accepted": true,
                    "score": 270
                },
                {
                    "body": "<p>The best way to do this is define a css style:</p>\n\n<pre><code>.centered-text {\n    text-align:center\n}    \n</code></pre>\n\n<p>Then where ever you need centered text you add it like so:</p>\n\n<pre><code>&lt;div class=\"row\"&gt;\n    &lt;div class=\"span12 centered-text\"&gt;\n        &lt;h1&gt;Bootstrap starter template&lt;/h1&gt;\n        &lt;p&gt;Use this document as a way to quick start any new project.&lt;br&gt; All you get is this message and a barebones HTML document.&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>or if you just want the p tag centered:</p>\n\n<pre><code>&lt;div class=\"row\"&gt;\n    &lt;div class=\"span12 centered-text\"&gt;\n        &lt;h1&gt;Bootstrap starter template&lt;/h1&gt;\n        &lt;p class=\"centered-text\"&gt;Use this document as a way to quick start any new project.&lt;br&gt; All you get is this message and a barebones HTML document.&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>The less inline css you use the better.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>If you are using Bootstrap 2.0+</p>\n\n<p>This can make the div centered to the page.</p>\n\n<pre><code>&lt;div class=\"row\"&gt;\n    &lt;div class=\"span4 offset4\"&gt;\n        //your content here gets centered of the page\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I like the following since Bootstrap already has <code>.pull-right</code> and <code>.pull-left</code> for floats.</p>\n\n<p><code>.pull-center {\n     text-align: center;\n}</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>NOTE: this was <a href=\"http://stackoverflow.com/questions/15265253/centering-the-pagination-in-bootstrap#comment29641329_15265287\">removed in Bootstrap 3</a>.</p>\n\n<hr>\n\n<p>Pre-Bootstrap 3, you could use the CSS class <code>pagination-centered</code> like this:</p>\n\n<pre><code>&lt;div class=\"span12 pagination-centered\"&gt;\n    Centered content.\n&lt;/div&gt;\n</code></pre>\n\n<p>Class <code>pagination-centered</code> is already in bootstrap.css (or bootstrap.min.css) and has the only one rule:</p>\n\n<pre><code>.pagination-centered{text-align:center;}\n</code></pre>\n\n<p>With <strong>Bootstrap 2.3.0.</strong> just use class <code>text-center</code></p>\n",
                    "is_accepted": false,
                    "score": 219
                },
                {
                    "body": "<p>On my side I define new <code>CSS</code> styles ready to use and easy to remember:</p>\n\n<pre><code>.center { text-align: center;}\n.left { text-align: left;}\n.right { text-align: right;}\n.justify { text-align: justify;}\n.fleft { float: left;} /*-&gt; similar to .pull-left already existing in bootstrap*/\n.fright { float: right;}  /*-&gt; similar to .pull-right already existing in bootstrap*/\n.vab { vertical-align: bottom;}\n.bold { font-weight: bold;}\n.italic { font-style: italic;}\n</code></pre>\n\n<p>Is it a good idea? \nIs there any good practice for this?</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>My preferred method for centering blocks of information while maintaining responsiveness (mobile compatibility) is to place two empty <code>span1</code> divs before and after the content you wish to center.</p>\n\n<pre><code>&lt;div class=\"row-fluid\"&gt;\n\n    &lt;div class=\"span1\"&gt;\n    &lt;/div&gt;\n\n        &lt;div class=\"span10\"&gt;\n          &lt;div class=\"hero-unit\"&gt;\n            &lt;h1&gt;Reading Resources&lt;/h1&gt;\n            &lt;p&gt;Read here...&lt;/p&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;&lt;!--/span--&gt;\n\n    &lt;div class=\"span1\"&gt;\n    &lt;/div&gt;\n\n&lt;/div&gt;&lt;!--/row--&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You need to adjust with the SPAN - </p>\n\n<p>example:</p>\n\n<pre><code>&lt;div class=\"container-fluid\"&gt;\n    &lt;div class=\"row-fluid\"&gt;\n        &lt;div class=\"span4\"&gt;&lt;/div&gt;\n        &lt;!--/span--&gt;\n        &lt;div class=\"span4\" align=\"center\"&gt;\n            &lt;div class=\"hero-unit\" align=\"center\"&gt;\n                &lt;h3&gt;Sign In&lt;/h3&gt;\n                &lt;form&gt;\n                    &lt;div class=\"input-prepend\"&gt;\n                        &lt;span class=\"add-on\"&gt;&lt;i class=\"icon-envelope\"&gt;&lt;/i&gt; &lt;/span&gt; &lt;input\n                            class=\"span6\" type=\"text\" placeholder=\"Email address\"&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"input-prepend\"&gt;\n                        &lt;span class=\"add-on\"&gt;&lt;i class=\"icon-key\"&gt;&lt;/i&gt; &lt;/span&gt; &lt;input\n                            class=\"span6\" type=\"password\" placeholder=\"Password\"&gt;\n                    &lt;/div&gt;\n                &lt;/form&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;!--/span--&gt;\n        &lt;div class=\"span4\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;!--/row--&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I guess most of the people here are actually searching for the way to <em>center the whole <code>div</code></em> and not only the text content (which is trivial\u2026).</p>\n\n<p>The second way (instead of using text-align:center) to center things in html is to have an element with a fixed width and auto margin (left and right). With bootstrap, the style defining auto margins is the \"container\" class.</p>\n\n<pre><code>&lt;div class=\"container\"&gt;     \n    &lt;div class=\"span12\"&gt;      \n        \"Centered stuff there\"\n    &lt;/div&gt; \n&lt;/div&gt;\n</code></pre>\n\n<p>Take a look here for a fiddle: <a href=\"http://jsfiddle.net/D2RLR/7788/\" rel=\"nofollow\">http://jsfiddle.net/D2RLR/7788/</a></p>\n",
                    "is_accepted": false,
                    "score": 74
                },
                {
                    "body": "<p>Bootstrap 2.3 has a <code>text-center</code> class. </p>\n\n<pre><code>&lt;p class=\"text-left\"&gt;Left aligned text.&lt;/p&gt;\n&lt;p class=\"text-center\"&gt;Center aligned text.&lt;/p&gt;\n&lt;p class=\"text-right\"&gt;Right aligned text.&lt;/p&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>As of February 2013, in some cases, I add a \"centred\" class to the \"span\" div:</p>\n\n<pre><code>&lt;div class=\"container\"&gt;\n  &lt;div class=\"row\"&gt;\n    &lt;div class=\"span9 centred\"&gt;\n      This div will be centred.\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>and to CSS:</p>\n\n<pre><code>[class*=\"span\"].centred {\n  margin-left: auto;\n  margin-right: auto;\n  float: none;\n}\n</code></pre>\n\n<p>The reason for this is because the span* div's get floated to the left, and the \"auto margin\" centering technique works only if the div is not floated.</p>\n\n<p>Demo (on JSFiddle): <a href=\"http://jsfiddle.net/5RpSh/8/embedded/result/\">http://jsfiddle.net/5RpSh/8/embedded/result/</a></p>\n\n<p>JSFiddle: <a href=\"http://jsfiddle.net/5RpSh/8/\">http://jsfiddle.net/5RpSh/8/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I created this class to keep the  centered regardless of screen size while maintaining responsive features:</p>\n\n<pre><code>.container {\n    alignment-adjust: central;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you use bootstrap 3, it also has built-in css class named <strong>.text-center</strong>. That's what you want.</p>\n\n<pre><code>&lt;div class=\"text-left\"&gt;\n    left\n&lt;/div&gt;\n\n&lt;div class=\"text-center\"&gt;\n    center\n&lt;/div&gt;\n\n&lt;div class=\"text-right\"&gt;\n    right\n&lt;/div&gt;\n</code></pre>\n\n<p>please see the example in jsfiddle. <a href=\"http://jsfiddle.net/ucheng/Q4Fue/\" rel=\"nofollow\">http://jsfiddle.net/ucheng/Q4Fue/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>Bootstrap 3.1.1</strong> has a <code>.center-block</code> class for centering divs. See: <a href=\"http://getbootstrap.com/css/#helper-classes-center\">http://getbootstrap.com/css/#helper-classes-center</a>.</p>\n\n<blockquote>\n  <blockquote>\n    <p>Center content blocks Set an element to <code>display: block</code> and center via <code>margin</code>. Available as a mixin and class.</p>\n  </blockquote>\n</blockquote>\n\n<pre><code>&lt;div class=\"center-block\"&gt;...&lt;/div&gt;\n</code></pre>\n\n<p>Or, as others have already said, use the <code>.text-center</code> class to centre text.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I'm trying to follow a very basic example.  Using the <a href=\"http://getbootstrap.com/css/#grid\">starter page and the grid system</a>, I was hoping the following:</p>\n\n<pre><code>&lt;div class=\"row\"&gt;\n    &lt;div class=\"span12\"&gt;\n        &lt;h1&gt;Bootstrap starter template&lt;/h1&gt;\n        &lt;p&gt;Example text.&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>...would produce centered text.</p>\n\n<p>However, it still appears on the far left. What am I doing wrong?</p>\n",
            "last_activity_date": 1422782364,
            "question_id": 9184141,
            "score": 198,
            "tags": [
                "html",
                "css",
                "twitter-bootstrap"
            ],
            "title": "How do you get centered content using Twitter bootstrap?"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>This seems to accomplish what you're going for.</p>\n\n<pre><code>&lt;html&gt;\n\n&lt;head&gt;\n    &lt;title&gt;This is My Page's Title&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n        #left {\n            float:left;\n            width:180px;\n            background-color:#ff0000;\n        }\n        #right {\n            width: 100%;\n            background-color:#00FF00;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div&gt;\n        &lt;div id=\"left\"&gt;\n            left\n        &lt;/div&gt;\n        &lt;div id=\"right\"&gt;\n            right\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n\n &lt;/html&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/MHeqG/\">http://jsfiddle.net/MHeqG/</a></p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>@Boushley</p>\n\n<p>I'm pretty sure the design suggested by Boushley breaks down if #right is higher than #left. Try inserting:</p>\n\n<pre><code>&lt;p&gt;right&lt;/p&gt;\n&lt;p&gt;right&lt;/p&gt;\n&lt;p&gt;right&lt;/p&gt;\n</code></pre>\n\n<p>As the contents of #right to see what I mean.</p>\n\n<p>( I'm told <a href=\"http://meta.stackexchange.com/questions/25725/how-do-you-comment-on-a-specific-answer\">there is no way to comment directly</a> on Boushley's answer which is what I would have preferred. )</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The solution comes from the display property.</p>\n\n<p>Basically you need to make the two divs act like table cells. So instead of usign float:left, you'll have to use display:table-cell on both divs, and for the dynamic width div you need to set width:auto; also. The both divs should be placed into a 100% width container with the display:table property.</p>\n\n<p>Here is the css:</p>\n\n<pre><code>.container {display:table;width:100%}\n#search {\n  width: 160px;\n  height: 25px;\n  display:table-cell;\n  background-color: #FFF;\n}\n#navigation {\n  width: auto;\n  display:table-cell;\n  /*background-color: url('../images/transparent.png') ;*/\n  background-color: #A53030;\n}\n\n*html #navigation {float:left;}\n</code></pre>\n\n<p>And the HTML:</p>\n\n<pre><code>&lt;div class=\"container\"&gt;\n   &lt;div id=\"search\"&gt;&lt;/div&gt;\n   &lt;div id=\"navigation\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>IMPORTANT:For Internet Explorer you need to specify the float property on the dynamic width div, otherwise the space will not be filled.</p>\n\n<p>I hope that this will solve your problem. \nIf you want, you can read the full article I wrote about this on <a href=\"http://mihaifrentiu.com/how-to-fill-the-available-space-when-using-floated-divs\">my blog</a>.</p>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>@Boushley \n@Vyrotek is correct. I am also seeing this. Using firefox 4. This can be solved just by adding <code>overflow:hidden</code> in the <code>#right</code> CSS code of yours</p>\n\n<p>PS: i would have commented in the answer, but cant see the option</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The problem that I found with Boushley's answer is that if the right column is longer than the left it will just wrap around the left and resume filling the whole space. This is not the behavior I was looking for. After searching through lots of 'solutions' I found this <a href=\"http://www.boutell.com/newfaq/creating/threecolumnlayout.html\">awesome tutorial</a> on creating three column pages. </p>\n\n<p>The author offer's three different ways, one fixed width, one with three variable columns and one with fixed outer columns and a variable width middle. Much more elegant and effective than other examples I found. Significantly improved my understanding of CSS layout.</p>\n\n<p>Basically, in the simple case above, float the first column left and give it a fixed width. Then give the column on the right a left-margin that is a little wider than the first column. That's it. Done. Ala Boushley's code:</p>\n\n<pre><code>&lt;html&gt;\n\n&lt;head&gt;\n    &lt;title&gt;This is My Page's Title&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n            #left {\n                    float:left;\n                    width:180px;\n                    background-color:#ff0000;\n            }\n            #right {\n                    margin-left: 190px;\n                    background-color:#00FF00;\n            }\n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div&gt;\n            &lt;div id=\"left\"&gt;\n                    left\n            &lt;/div&gt;\n            &lt;div id=\"right\"&gt;\n                    right\n            &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/CSbbM/\">http://jsfiddle.net/CSbbM/</a></p>\n\n<p>With Boushley's example the left column holds the other column to the right. As soon as the left column ends the right begins filling the whole space again. Here the right column simply aligns further into the page and the left column occupies it's big fat margin. No flow interactions needed.  </p>\n",
                    "is_accepted": false,
                    "score": 122
                },
                {
                    "body": "<p>Boushley's answer seems to be the best way to go in order to arrange this using floats. However, it isn't without its problems. Nested floating within the expanded element will not be available to you; it will break the page.</p>\n\n<p>The method shown basically \"fakes it\" when it comes to the expanding element - it isn't actually floating, it's just playing along with the fixed-width floated elements using its margins.</p>\n\n<p>The problem then is exactly that: the expanding element isn't floated. If you try and have any nested floating within the expanding element, those \"nested\" floated items aren't really nested at all; when you try to stick a <code>clear: both;</code> under your \"nested\" floated items, you'll end up clearing the top-level floats as well.</p>\n\n<p>Then, to use Boushley's solution, I'd like to add that you should place a div such as the following:\n    .fakeFloat\n    {\n       height: 100%;\n       width: 100%;\n       float: left;\n    }\nand place this directly within the expanded div; all the expanded div's contents should go then within this fakeFloat element.</p>\n\n<p>For this reason, I'd recommend using tables in this specific case. Floated elements really aren't designed to do the expansion that you'd like, whereas the solution using a table is trivial. An argument is generally made that floating is more proper for layouts, not tables.. but you aren't using floating here anyways, you're faking it - and that sort of defeats the purpose of the stylistic argument for this specific case, in my humble opinion.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I ran into this same problem trying to layout some <a href=\"http://jqueryui.com/home\" rel=\"nofollow\">jqueryUI</a> controls.  Although the common philosophy now is \"use <code>DIV</code> instead of <code>TABLE</code>\", I found in my case using TABLE worked much better.  In particular, if you need to have straightforward alignment within the two elements (e.g., vertical centering, horizontal centering, etc.) the options available with TABLE give simple, intuitive controls for this.  </p>\n\n<p>Here's my solution:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n  &lt;title&gt;Sample solution for fixed left, variable right layout&lt;/title&gt;\n  &lt;style type=\"text/css\"&gt;\n    #controls {\n      width: 100%;\n    }\n    #RightSide {\n      background-color:green;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;div id=\"controls\"&gt;\n  &lt;table border=\"0\" cellspacing=\"2\" cellpadding=\"0\"&gt;\n    &lt;TR&gt;\n      &lt;TD&gt;\n        &lt;button&gt;\nFixedWidth\n        &lt;/button&gt;\n      &lt;/TD&gt;\n      &lt;TD width=\"99%\" ALIGN=\"CENTER\"&gt;\n        &lt;div id=\"RightSide\"&gt;Right&lt;/div&gt;\n      &lt;/TD&gt;\n    &lt;/TR&gt;\n  &lt;/table&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>@Boushley's answer was the closet, however there is one problem not addressed that has been pointed out. The <em>right</em> div takes the entire width of the browser; the content takes the expected width. To see this problem better:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;style type=\"text/css\"&gt;\n    * { margin: 0; padding: 0; }\n    body {\n        height: 100%;\n    }\n    #left {\n        opacity: 0;\n        height: inherit;\n        float: left;\n        width: 180px;\n        background: green;\n    }\n    #right {\n        height: inherit;\n        background: orange;\n    }\n    table {\n            width: 100%;\n            background: red;\n    }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"left\"&gt;\n        &lt;p&gt;Left&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;div id=\"right\"&gt;\n        &lt;table&gt;&lt;tr&gt;&lt;td&gt;Hello, World!&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/79hpS/\" rel=\"nofollow\">http://jsfiddle.net/79hpS/</a></p>\n\n<p>The content is in the correct place (in firefox), however, the width incorrect. When child elements start inheriting width (e.g. the table with <code>width: 100%</code>) they are given a width equal to that of the browser causing them to overflow off the right of the page and create a horizontal scrollbar (in firefox) or not float and be pushed down (in chrome).</p>\n\n<p>You can <strong>fix this</strong> easily by adding <code>overflow: hidden</code> to the right column. This gives you the correct width for both the content and the div. Furthermore, the table will receive the correct width and fill the remaining width available.</p>\n\n<p>I tried some of the other solutions above, they didn't work fully with certain edge cases and were just too convoluted to warrant fixing them. This works and it's simple.</p>\n\n<p>If there are any problems or concerns, feel free to raise them. Thanks!</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I tried the above solutions for a liquid left, and a fixed right but non of them worked (I am aware the question is for the reverse but I think this is relevant). Here's what did work:</p>\n\n<pre><code>.wrapper {margin-right:150px;}\n.wrapper .left {float:left; width:100%; margin-right:-150px;}\n\n.right {float:right; width:150px;}\n\n&lt;div class=\"wrapper\"&gt;&lt;div class=\"left\"&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;div class=\"right\"&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Tried all of these answers and none of them worked (Mihai's almost did, so +1 there, but I needed a larger inner element, so it broke).</p>\n\n<p>Best solution (as of the date of this answer) remains: Use jQuery to set your div widths at runtime, using a pre-set constant for your fixed-width div size. You will save yourself a lot of headaches.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>/*\n * css\n */</p>\n\n<pre><code>#search {\n position: absolute;\n width: 100px;\n}\n.right-wrapper {\n  display: table;\n  width: 100%;\n  padding-left:100px;\n}\n.right-wrapper #navigation {\n display: table-cell;\n background-color: #A53030;\n}\n</code></pre>\n\n<p>/*\n * html\n */</p>\n\n<pre><code>&lt;div id=\"search\"&gt;&lt;/div&gt;\n&lt;div class=\"right-wrapper\"&gt;\n   &lt;div id=\"navigation\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since this is a rather popular question, I'm inclined to share a nice solution using BFC.<br>\nCodepen sample of the following <a href=\"http://codepen.io/anon/pen/mdoej\">here</a>.</p>\n\n<pre><code>.left {\n  float: left;\n  width: 100px;\n}\n.right {\n  overflow: auto;\n}\n</code></pre>\n\n<p>In this case, <code>overflow: auto</code> triggers context behavior and makes the right element expand <em>only</em> to the available remaining width and it will naturally expand to full width if <code>.left</code> disappears. A highly useful and clean trick for many UI layouts, but perhaps hard to understand the \"why it works\" at first.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Now, use flex-box method (may be adapt to all browsers with -prefix-)</p>\n\n<pre><code>.container {\n    display: flex;\n}\n\n.left {\n    width: 180px;\n}\n\n.r {\n    flex-grow: 1;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had a similar problem and I found the solution here:\n<a href=\"http://stackoverflow.com/a/16909141/3934886\">http://stackoverflow.com/a/16909141/3934886</a></p>\n\n<p>The solution is for a fixed center div and liquid side columns.</p>\n\n<pre><code>.center{\n    background:#ddd;\n    width: 500px;\n    float:left;\n}\n\n.left{\n    background:#999;\n    width: calc(50% - 250px);\n    float:left;\n}\n\n.right{\n    background:#999;\n    width: calc(50% - 250px);\n    float:right;\n}\n</code></pre>\n\n<p>If you want a fixed left column, just change the formula accordingly.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have 2 divs: one in the left side and one in the right side of my page. The one in the left side has fixed width and I want the one of the right side to fill the remaining space.</p>\n\n<p>The one on the right side is the navigation and I want it to to fill the remaining space on it right side:</p>\n\n<p>My CSS:</p>\n\n<pre><code>#search {\n    width: 160px;\n    height: 25px;\n    float: left;\n    background-color: #FFF;\n}\n\n#navigation {\n    width: 780\n    float: left; \n    /*background-color: url('../images/transparent.png') ;*/\n    background-color: #A53030;\n}\n</code></pre>\n\n<p>My Html:</p>\n\n<pre><code>&lt;div id=\"search\"&gt;\n\n&lt;/div&gt;\n&lt;?php include(\"navigation.html\"); ?&gt;\n&lt;div id=\"left-column\"&gt;\n</code></pre>\n\n<p>Thank in advance!</p>\n",
            "last_activity_date": 1415373616,
            "question_id": 1032914,
            "score": 126,
            "tags": [
                "css",
                "html",
                "width",
                "fill"
            ],
            "title": "How to make a div to fill a remaining horizontal space (a very simple but annoying problem for CSS experts)"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>No, only Javascript can do this.</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Modern browsers with full CSS3 support will accept <a href=\"http://stackoverflow.com/a/12198561/744255\">L\u00fcbnah answer</a> like a charm.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>No, there is nothing like this in CSS. You can, however, use JavaScript to calculate the number of children and apply styles.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>No way of doing this in css but even with Javascript you don't have any way to controlling this. You can get the children count in JS but in order to apply the style to some specific number of elements, you first have to apply that style to all the elements and then after document has loaded you will have to fire javascript which will make sure that you remove the style from 9th and 10th element and keep it applied to 1-8th element. (Assuming you have 10 children elements and want to apply style to first 8 of them.)</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>yes we can do this using nth-child like so</p>\n\n<pre><code>div:nth-child(n + 8) {\n    background: red;\n}\n</code></pre>\n\n<p>This will make the 8th div child onwards become red. Hope this helps... </p>\n\n<p>Also, if someone ever says \"hey, they can't be done with styled using css, use JS!!!\" doubt them immediately. CSS is extremely flexible nowadays</p>\n\n<p>Example :: <a href=\"http://jsfiddle.net/uWrLE/1/\" rel=\"nofollow\">http://jsfiddle.net/uWrLE/1/</a></p>\n\n<p>In the example the first 7 children are blue, then 8 onwards are red...</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>No. Well, not really.  There are a couple of selectors that can get you somewhat close, but probably won't work in your example and don't have the best browser compatibility.</p>\n\n<h3><code>:only-child</code></h3>\n\n<p>The <code>:only-child</code> is one of the few true counting selectors in the sense that it's only applied when there is one child of the element's parent.  Using your idealized example, it acts like <code>children(1)</code> probably would.</p>\n\n<h3><code>:nth-child</code></h3>\n\n<p>The <code>:nth-child</code> selector might actually get you where you want to go depending on what you're really looking to do.  If you want to style all elements if there are 8 children, you're out of luck.  If, however, you want to apply styles to the 8th and later elements, try this:</p>\n\n<pre><code>p:nth-child( n + 8 ){\n    /* add styles to make it pretty */\n}\n</code></pre>\n\n<p>Unfortunately, these probably aren't the solutions you're looking for.  In the end, you'll probably need to use some Javascript wizardry to apply the styles based on the count - even if you were to use one of these, you'd need to have a hard look at browser compatibility before going with a pure CSS solution.</p>\n\n<p><a href=\"http://www.w3.org/TR/selectors/#pseudo-classes\">W3 CSS3 Spec on pseudo-classes</a></p>\n\n<p><strong>EDIT</strong> I read your question a little differently - there are a couple other ways to style the <em>parent</em>, not the children.  Let me throw a few other selectors your way:</p>\n\n<h3><code>:empty</code> and <code>:not</code></h3>\n\n<p>This styles elements that have no children.  Not that useful on its own, but when paired with the <code>:not</code> selector, you can style only the elements that have children:</p>\n\n<pre><code>div:not(:empty) {\n    /* We know it has stuff in it! */\n}\n</code></pre>\n\n<p>You can't count how many children are available with pure CSS here, but it is another interesting selector that lets you do cool things.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>NOTE: This solution will return the children of sets of certain lengths, not the parent element as you have asked. Hopefully, it's still useful.</p>\n\n<p>Andre Luis came up with a method: <a href=\"http://lea.verou.me/2011/01/styling-children-based-on-their-number-with-css3/\" rel=\"nofollow\">http://lea.verou.me/2011/01/styling-children-based-on-their-number-with-css3/</a> Unfortunately, it only works in IE9 and above.</p>\n\n<p>Essentially, you combine :nth-child() with other pseudo classes that deal with the position of an element. This approach allows you to specify elements from <em>sets of elements with specific lengths</em>.</p>\n\n<p>For instance <code>:nth-child(1):nth-last-child(3)</code> matches the first element in a set while also being the 3rd element from the end of the set. This does two things: guarantees that the set only has three elements and that we have the first of the three.  To specify the second element of the three element set, we'd use <code>:nth-child(2):nth-last-child(2)</code>.</p>\n\n<p><br/></p>\n\n<p><strong>Example 1 - Select all list elements if set has three elements:</strong></p>\n\n<pre><code>li:nth-child(1):nth-last-child(3),\nli:nth-child(2):nth-last-child(2),\nli:nth-child(3):nth-last-child(1) {\n    width: 33.3333%;\n}\n</code></pre>\n\n<p><strong>Example 1 alternative</strong> from Lea Verou:</p>\n\n<pre><code>li:first-child:nth-last-child(3),\nli:first-child:nth-last-child(3) ~ li {\n    width: 33.3333%;\n}\n</code></pre>\n\n<p><br/></p>\n\n<p><strong>Example 2 - target last element of set with three list elements:</strong></p>\n\n<pre><code>li:nth-child(3):last-child {\n    /* I'm the last of three */\n}\n</code></pre>\n\n<p><strong>Example 2 alternative:</strong></p>\n\n<pre><code>li:nth-child(3):nth-last-child(1) {\n    /* I'm the last of three */\n}\n</code></pre>\n\n<p><br/></p>\n\n<p><strong>Example 3 - target second element of set with four list elements:</strong></p>\n\n<pre><code>li:nth-child(2):nth-last-child(3) {\n    /* I'm the second of four */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><strong>Clarification:</strong></p>\n\n<p>Because of a previous phrasing in the original question, a few SO citizens have raised concerns that this answer could be misleading. Note that, in CSS3, styles cannot be applied to a <em>parent node</em> based on the number of children it has. However, styles <em>can</em> be applied to the children nodes based on the number of <em>siblings</em> they have.</p>\n\n<hr>\n\n<p><strong>Original answer:</strong></p>\n\n<p>Incredibly, this is now possible purely in CSS3.</p>\n\n<pre><code>/* one item */\nli:first-child:nth-last-child(1) {\n    width: 100%;\n}\n\n/* two items */\nli:first-child:nth-last-child(2),\nli:first-child:nth-last-child(2) ~ li {\n    width: 50%;\n}\n\n/* three items */\nli:first-child:nth-last-child(3),\nli:first-child:nth-last-child(3) ~ li {\n    width: 33.3333%;\n}\n\n/* four items */\nli:first-child:nth-last-child(4),\nli:first-child:nth-last-child(4) ~ li {\n    width: 25%;\n}\n</code></pre>\n\n<p>Credit for this technique goes to Andr\u00e9 Lu\u00eds (discovered) &amp; Lea Verou (refined).</p>\n\n<p>Don't you just love CSS3? :)</p>\n\n<p>Sources:</p>\n\n<ul>\n<li><a href=\"http://andr3.net/blog/post/142\">http://andr3.net/blog/post/142</a> (Andr\u00e9 Lu\u00eds)</li>\n<li><a href=\"http://lea.verou.me/2011/01/styling-children-based-on-their-number-with-css3/\">http://lea.verou.me/2011/01/styling-children-based-on-their-number-with-css3/</a> (Lea Verou)</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 135
                }
            ],
            "body": "<p>I'm probably answering my own question, but I'm extremely curious.</p>\n\n<p>I know that CSS can select individual children of a parent, but is there support to style the children of a container, if its parent has a certain amount of children.</p>\n\n<p>for example</p>\n\n<pre><code>container:children(8) .child {\n  //style the children this way if there are 8 children\n}\n</code></pre>\n\n<p>I know it sounds weird, but my manager asked me to check it out, haven't found anything on my own so I decided to turn to SO before ending the search.</p>\n",
            "last_activity_date": 1419884101,
            "question_id": 8720931,
            "score": 74,
            "tags": [
                "css",
                "css-selectors"
            ],
            "title": "can CSS detect the number of children an element has?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>You want to over-ride the max-width rule in the CSS section by using max-width: none; This seems to be the way around this problem</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>With Bootstrap 2.0, this seemed to do the trick:</p>\n\n<pre><code>#mapCanvas img {\n  max-width: none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 182
                },
                {
                    "body": "<p>There is also an issue with the dropdown selectors for terrain and overlays, adding both these will fix the issues...</p>\n\n<pre><code>#mapCanvas img { \n  max-width: none;\n}\n\n#mapCanvas label { \n  width: auto; display:inline; \n} \n</code></pre>\n\n<p>The second style will sort of other issues with the terrain and overlay box in some browsers.</p>\n",
                    "is_accepted": false,
                    "score": 79
                },
                {
                    "body": "<p>latest twitter bootstrap 2.0.4 includes this fix directly.</p>\n\n<p>If you are wrapping your content in the a (div class=\"container\") as in the demo page of twitter bootstrap,  you should add a style=\"height: 100%\" </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Give your map canvas div an id of <code>map_canvas</code>.</p>\n\n<p><a href=\"https://github.com/twbs/bootstrap/commit/fe30bd60553bea0f706725deb9a0ad9ef04f0247\" rel=\"nofollow\">This bootstrap commit</a> includes the <code>max-width: none</code> fix for the id <code>map_canvas</code> (but it won't work for <code>mapCanvas</code>).</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Changing the #MapCanvas didn't work for us using gmap4rails gem, but did when we changed to </p>\n\n<pre><code>.map_container img {\n    max-width: none;\n}\n\n.map_container label {\n    width: auto; display:inline;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I am using gmaps4rails, this fix did it for me:</p>\n\n<pre><code>.gmaps4rails_map img {\n    max-width: none;\n}\n.gmaps4rails_map label {\n    width: auto; display:inline;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>None of these answers worked for me, so I went in to my div and looked at its children I saw a new div with class \"gm-style\", so I put this in my CSS:</p>\n\n<pre><code>.gm-style img {\n    max-width: none;\n  }\n\n  .gm-style label {\n    width: auto; display:inline;\n  }\n</code></pre>\n\n<p>..and that solved the problem for me.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I also had to turn box-shadow off, and because of the order of my includes, I added the !important flag.</p>\n\n<pre><code>#mapCanvas img {\n    max-width: none !important;\n    box-shadow: none !important;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>All answers were max-widht:none</p>\n\n<p>for me, max-height:inherit worked.....</p>\n\n<p>People are using #map, #map_canvas, etc. Look at your parent div. \nIf it's blue, than it will be #blue img { }</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using Twitter Bootstrap, and have a Google map.</p>\n\n<p>Images on the map, such as marker are being skewed by the CSS in Bootstrap.</p>\n\n<p>In the Bootstrap CSS there is:</p>\n\n<pre><code>img {\n    border: 0 none;\n    height: auto;\n    max-width: 100%;\n}\n</code></pre>\n\n<p>When I disable the <code>max-width</code> property using Firebug, the marker image appears as normal.\nHow can I prevent the Bootstrap CSS from affecting the Google maps images?</p>\n",
            "last_activity_date": 1400598574,
            "question_id": 9141249,
            "score": 130,
            "tags": [
                "google-maps",
                "twitter-bootstrap",
                "css"
            ],
            "title": "Twitter Bootstrap CSS affecting Google Maps"
        },
        {
            "answer_count": 16,
            "answers": [
                {
                    "body": "<p>I prefer multiple CSS files. That way it is easier to swap \"skins\" in and out as you desire. The problem with one monolithic file is that it can get out of control and hard to manage. What if you want blue backgrounds but don't want the buttons to change? Just alter your backgrounds file. Etc.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is a hard one to answer.  Both options have their pros and cons in my opinion.</p>\n\n<p>I personally don't love reading through a single HUGE CSS file, and maintaining it is very difficult.  On the other hand, splitting it out causes extra http requests which could potentially slow things down.</p>\n\n<p>My opinion would be one of two things.</p>\n\n<p>1) If you know that your CSS will NEVER change once you've built it, I'd build multiple CSS files in the development stage (for readability), and then manually combine them before going live (to reduce http requests)</p>\n\n<p>2) If you know that you're going to change your CSS once in a while, and need to keep it readable, I would build separate files and use code (providing you're using some sort of programming language) to combine them at <strike>runtime</strike> build time (runtime minification/combination is a resource pig).</p>\n\n<p>With either option I would highly recommend caching on the client side in order to further reduce http requests.</p>\n\n<p><strong>EDIT:</strong><br>\n<strike>I found this <a href=\"http://madskristensen.net/post/Combine-multiple-stylesheets-at-runtime.aspx\">blog</a> that shows how to combine CSS at runtime using nothing but code.  Worth taking a look at (though I haven't tested it myself yet).</strike></p>\n\n<p><strong>EDIT 2:</strong><br>\nI've settled on using separate files in my design time, and a build process to minify and combine. This way I can have separate (manageable) css while I develop and a proper monolithic minified file at runtime. And I still have my static files and less system overhead because I'm not doing compression/minification at runtime.</p>\n\n<p><em>note: for you shoppers out there, I highly suggest using <a href=\"https://github.com/ServiceStack/Bundler\">bundler</a> as part of your build process. Whether you're building from within your IDE, or from a build script, bundler can be executed on Windows via the included <code>exe</code> or can be run on any machine that is already running node.js.</em></p>\n",
                    "is_accepted": true,
                    "score": 79
                },
                {
                    "body": "<p>Having only one CSS file is better for the loading-time of your pages, as it means less HTTP requests.</p>\n\n<p>Having several little CSS files means development is easier <em>(at least, I think so : having one CSS file per module of your application makes things easier)</em>.</p>\n\n<p>So, there are good reasons in both cases...</p>\n\n<p><br>\nA solution that would allow you to get the best of both ideas would be :</p>\n\n<ul>\n<li>To develop using several small CSS files\n<ul>\n<li>i.e. easier to develop</li>\n</ul></li>\n<li>To have a build process for your application, that \"combines\" those files into one\n<ul>\n<li>That build process could also minify that big file, btw</li>\n<li>It obviously means that your application must have some configuration stuff that allows it to swith from \"multi-files mode\" to \"mono-file mode\".</li>\n</ul></li>\n<li>And to use, in production, only the big file\n<ul>\n<li>i.e. faster loading pages</li>\n</ul></li>\n</ul>\n\n<p>There are also some software that do that combining of CSS files at run-time, and not at build-time ; but doing it at run-time means eating a bit more CPU <em>(and obvisouly requires some caching mecanism, to not re-generate the big file too often)</em></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I prefer multiple CSS files during development. Management and debugging is much easier that way. However, I suggest that come deployment time you instead use a CSS minify tool like <a href=\"http://developer.yahoo.com/yui/compressor/\">YUI Compressor</a> which will merge your CSS files into one monolithic file.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>The advantage to a single CSS file is transfer efficiency.  Each HTTP request means a HTTP header response for each file requested, and that takes bandwidth.</p>\n\n<p>I serve my CSS as a PHP file with the \"text/css\" mime type in the HTTP header.  This way I can have multiple CSS files on the server side and use PHP includes to push them into a single file when requested by the user.  Every modern browser receives the .php file with the CSS code and processes it as a .css file.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can just use one css file for performance and then comment out sections like this:</p>\n\n<pre><code>/******** Header ************/\n//some css here\n\n/******* End Header *********/\n\n\n/******** Footer ************/\n//some css here\n\n/******* End Footer *********/\n</code></pre>\n\n<p>etc</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You want both worlds.</p>\n\n<p>You want multiple CSS files because your sanity is a terrible thing to waste.</p>\n\n<p>At the same time, it's better to have a single, large file.</p>\n\n<p>The solution is to have some mechanism that combines the multiple files in to a single file.</p>\n\n<p>One example is something like</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"allcss.php?files=positions.css,buttons.css,copy.css\" /&gt;\n</code></pre>\n\n<p>Then, the allcss.php script handle concatenating the files and delivering them.</p>\n\n<p>Ideally, the script would check the mod dates on all the files, create a new composite if any of them change, then returns that composite, and then checks against the If-Modified HTTP headers so as to not send redundant CSS.</p>\n\n<p>This gives you the best of both worlds. Works great for JS as well.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Monolithic stylesheets do offer a lot of benefits (which are described in the other answers), however depending on the overall size of the stylesheet document you could run into problems in IE. IE has a limitation with how many selectors it will read from a <strong>single file</strong>. The limit is 4096 selectors. If you're monolithic stylesheet will have more than this you will want to split it. This limitation only rears it's ugly head in IE.</p>\n\n<p>This is for all versions of IE.</p>\n\n<p>See <a href=\"http://www.thecssdiv.co.uk/2009/08/28/another-weird-ie6-bug/\">Ross Bruniges Blog</a> and <a href=\"http://msdn.microsoft.com/en-us/library/aa358796%28VS.85%29.aspx\">MSDN AddRule page</a>.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I typically have a handful of CSS files:</p>\n\n<ul>\n<li>a \"global\" css file for resets and global styles</li>\n<li>\"module\" specific css files for pages that are logically grouped (maybe every page in a checkout wizard or something)</li>\n<li>\"page\" specific css files for overrides on the page (or, put this in a  block on the individual page)</li>\n</ul>\n\n<p>I am not really too concerned with multiple page requests for CSS files. Most people have decent bandwidth and I'm sure there are other optimizations that would have a far greater impact than combining all styles into one monolitic CSS file.  The trade-off is between speed and maintainability, and I always lean towards maintainability.  The YUI comperssor sounds pretty cool though, I might have to check that out.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'm using <a href=\"http://documentcloud.github.com/jammit/\" rel=\"nofollow\">Jammit</a> to deal with my css files and use many different files for readability. \nJammit doest all the dirty work of combining and compressing the files before deployment in production. \nThis way, I've got many files in development but only one file in production.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Maybe take a look at <a href=\"http://compass-style.org/\" rel=\"nofollow\">compass</a>, which is an open source CSS authoring framework. \nIt's based on <a href=\"http://sass-lang.com/\" rel=\"nofollow\">Sass</a> so it supports cool things like variables, nesting, mixins and imports. Especially imports are useful if you want to keep seperate smaller CSS files but have them combined into 1 automatically (avoiding multiple slow HTTP calls).\nCompass adds to this a big set of pre-defined mixins that are easy for handling cross-browser stuff.\nIt's written in Ruby but it can easily be used with any system....</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>here is the best way:</p>\n\n<ol>\n<li>create a general css file with all shared code</li>\n<li>insert all specific page css code into the same page, on the tag  or using the attribute style=\"\" for each page</li>\n</ol>\n\n<p>on this way you have only one css with all shared code and an html page.\nby the way (and i know that this is not the right topic) you can also encode your images in base64 (but you can also do it with your js and css files). in this way you reduce even more http requests to 1.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've created a systematic approach to CSS development. This way I can utilize a standard that never changes. First I started with the 960 grid system. Then I created single lines of css for basic layouts, margins, padding, fonts and sizes. I then string them together as needed. This allows me to keep a consistent layout across all of my projects and utilize the same css files over and over. Because they are not specific. Here's an example: ----div class=\"c12 bg0 m10 p5 white fl\"/div--- This means that the container is 12 columns across, utilizes bg0 has margins of 10px padding of 5 the text is white and it floats left. I could easily change this by removing or adding a new - What I call a \"light\" style- Instead of creating a single class with all these attributes; I simply combine the single styles as I code the page. This allows me to create any combination of styles and does not limit my creativity or cause me to create a massive number of styles that are similar. Your style sheets become a lot more manageable, minimized and allow you to re-use it over and over. This method I have found to be fantastic for rapid design. I also no longer design first in PSD but in the browser which also saves time. In addition because I have also created a naming system for my backgrounds and page design attributes I simply change out my image file when creating a new project.(bg0 = body background according to my naming system) That means that if I previously had a white background with one project simply changing it to black simply means that on the next project bg0 will be a black background or another image..... I have not found anything wrong with this method yet and it seems to work very well. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A CSS compiler like LESS or SASS is a great way to go. That way you'll be able to deliver a single, minimised CSS file for the site (which will be far smaller and faster than a normal single CSS source file), while maintaining the nicest development environment, with everything neatly split into components.</p>\n\n<p>LESS and SASS have the added advantage of variables, nesting and other ways to make CSS easier to write and maintain. Highly, highly recommended. I personally use LESS, but SASS is also great, with similar benefits (Edit: I\u2019m now using the SCSS variant of SASS and love it). Once you've written CSS with a compiler, it's unlikely you'd want to do without one.</p>\n\n<p><a href=\"http://lesscss.org\">http://lesscss.org</a></p>\n\n<p><a href=\"http://sass-lang.com\">http://sass-lang.com</a></p>\n\n<p>If you don't want to mess around with Ruby, this LESS compiler for Mac is great:</p>\n\n<p><a href=\"http://incident57.com/less/\">http://incident57.com/less/</a></p>\n\n<p>Or you could use CodeKit (by the same guys):</p>\n\n<p><a href=\"http://incident57.com/codekit/\">http://incident57.com/codekit/</a></p>\n\n<p>WinLess is a Windows GUI for comipiling LESS</p>\n\n<p><a href=\"http://winless.org/\">http://winless.org/</a></p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>There is a tipping point at which it's beneficial to have more than one css file.</p>\n\n<p>A site with 1M+ pages, which the average user is likely to only ever see say 5 of, might have a stylesheet of immense proportions, so trying to save the overhead of a single additional request per page load by having a massive initial download is false economy.</p>\n\n<p>Stretch the argument to the extreme limit - it's like suggesting that there should be one large stylesheet maintained for the entire web. Clearly nonsensical.</p>\n\n<p>The tipping point will be different for each site though so there's no hard and fast rule. It will depend upon the quantity of unique css per page, the number of pages, and the number of pages the average user is likely to routinely encounter while using the site.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>SASS and LESS make this all really a moot point. The developer can set up effective component files and on compile combine them all. In SASS you can toggle off the Compressed Mode while in development for easier reading, and toggle it back on for production. </p>\n\n<p><a href=\"http://sass-lang.com\" rel=\"nofollow\">http://sass-lang.com</a>\n<a href=\"http://lesscss.org\" rel=\"nofollow\">http://lesscss.org</a></p>\n\n<p>In the end a single minified CSS file is what you want regardless of the technique you use. Less CSS, Less HTTP requests, Less Demand on the server. </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there any advantage to having a single monster .css file that contains style elements that will be used on almost every page?</p>\n\n<p>I'm thinking that for ease of management, I'd like to pull out different types of CSS into a few files, and include every file in my main <code>&lt;link /&gt;</code> is that bad?</p>\n\n<p>I'm thinking this is better</p>\n\n<ol>\n<li>positions.css </li>\n<li>buttons.css </li>\n<li>tables.css</li>\n<li>copy.css</li>\n</ol>\n\n<p>vs.</p>\n\n<ol>\n<li>site.css</li>\n</ol>\n\n<p>Have you seen any gotchas with doing it one way vs. the other?</p>\n",
            "last_activity_date": 1414758769,
            "question_id": 2336302,
            "score": 125,
            "tags": [
                "html",
                "css",
                "design",
                "stylesheet"
            ],
            "title": "Single huge .css file vs. multiple smaller specific .css files?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>The dot signifies a class name while the # signifies an element with a specific id attribute.  The class will apply to any element decorated with that particular class, while the # style will only apply to the element with that particular id.</p>\n\n<p>Class name:</p>\n\n<pre><code>&lt;style&gt;\n.class { ... }\n&lt;/style&gt;\n&lt;div class=\"class\"&gt;&lt;/div&gt;\n&lt;span class=\"class&gt;&lt;/span&gt;\n&lt;a href=\"...\" class=\"class\"&gt;...&lt;/a&gt;\n</code></pre>\n\n<p>Named element:</p>\n\n<pre><code>&lt;style&gt;\n#name { ... }\n&lt;/style&gt;\n&lt;div id=\"name\"&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<h2>Yes, they are different...</h2>\n\n<p><code>#</code> is an <a href=\"http://css.maxdesign.com.au/selectutorial/selectors%5Fid.htm\">id selector</a>, used to target a <em>single</em> specific element with a unique id, but . is a <a href=\"http://css.maxdesign.com.au/selectutorial/selectors%5Fclass.htm\">class selector</a> used to target <em>multiple</em> elements with a particular class. To put it another way:</p>\n\n<ul>\n<li><code>#foo {}</code> will style the <em>single</em> element declared with an attribute <code>id=\"foo\"</code></li>\n<li><code>.foo {}</code> will style <em>all</em> elements with an attribute <code>class=\"foo\"</code> (you can have multiple classes assigned to an element too, just separate them with spaces, e.g. <code>class=\"foo bar\"</code>)</li>\n</ul>\n\n<h2>Typical uses</h2>\n\n<p>Generally speaking, you use # for styling something you know is only going to appear once, for example, things like high level layout divs such sidebars, banner areas etc.</p>\n\n<p>Classes are used where the style is repeated, e.g. say you head a special form of header for error messages, you could create a style <code>h1.error {}</code> which would only apply to <code>&lt;h1 class=\"error\"&gt;</code></p>\n\n<h2>Specificity</h2>\n\n<p>Another aspect where selectors differ is in their specificity - an id selector is deemed to be more specific than class selector. This means that where styles <a href=\"http://css.maxdesign.com.au/selectutorial/advanced%5Fconflict.htm\">conflict</a> on an element, the ones defined with the more specific selector will override less specific selectors. For example, given <code>&lt;div id=\"sidebar\" class=\"box\"&gt;</code> any rules for <code>#sidebar</code> with override conflicting rules for <code>.box</code></p>\n\n<h2>Learn more about CSS selectors</h2>\n\n<p>See <a href=\"http://css.maxdesign.com.au/selectutorial/\">Selectutorial</a> for more great primers on CSS selectors - they are incredibly powerful, and if your conception is simply that \"# is used for DIVs\" you'd do well to read up on exactly how to use CSS more effectively.</p>\n",
                    "is_accepted": true,
                    "score": 154
                },
                {
                    "body": "<p>The <code>#</code> means that it matches the <code>id</code> of an element. The <code>.</code> signifies the class name:</p>\n\n<pre><code>&lt;div id=\"myRedText\"&gt;This will be red.&lt;/div&gt;\n&lt;div class=\"blueText\"&gt;this will be blue.&lt;/div&gt;\n\n\n#myRedText {\n    color: red;\n}\n.blueText {\n    color: blue;\n}\n</code></pre>\n\n<p>Note that in a HTML document, <strong>the id attribute must be unique</strong>, so if you have more than one element needing a specific style, you should use a class name.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>The # is an id selector. It matches only elements with a matching id.\nNext style rule will match the element that has an id attribute with a value of \"green\":</p>\n\n<pre><code>#green {color: green}\n</code></pre>\n\n<p>See <a href=\"http://www.w3schools.com/css/css_syntax.asp\" rel=\"nofollow\">http://www.w3schools.com/css/css_syntax.asp</a> for more information</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>.class</code> targets the following element:</p>\n\n<pre><code>&lt;div class=\"class\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p><code>#class</code> targets the following element:</p>\n\n<pre><code>&lt;div id=\"class\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Note that the id MUST be unique throughout the document, whilst any number of elements may share a class.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A couple of quick extensions on what has already been said...</p>\n\n<p>An <code>id</code> must be unique, but you can use the same id to make different styles more specific.</p>\n\n<p>For example, given this HTML extract:</p>\n\n<pre><code>&lt;div id=\"sidebar\"&gt;\n    &lt;h2&gt;Heading&lt;/h2&gt;\n    &lt;ul class=\"menu\"&gt;\n        ...\n    &lt;/ul&gt;\n&lt;/div&gt;\n&lt;div id=\"content\"&gt;\n    &lt;h2&gt;Heading&lt;/h2&gt;\n    ...\n&lt;/div&gt;\n&lt;div id=\"footer\"&gt;\n    &lt;ul class=\"menu\"&gt;\n        ...\n    &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>You could apply different styles with these:</p>\n\n<pre><code>#sidebar h2\n{ ... }\n\n#sidebar .menu\n{ ... }\n\n#content h2\n{ ... }\n\n#footer .menu\n{ ... }\n</code></pre>\n\n<p><br/></p>\n\n<p>Another useful thing to know: you can have multiple classes on an element, by space-delimiting them...</p>\n\n<pre><code>&lt;ul class=\"main menu\"&gt;...&lt;/ul&gt;\n&lt;ul class=\"other menu\"&gt;...&lt;/ul&gt;\n</code></pre>\n\n<p>Which allows you to have common styling in <code>.menu</code> with specific styles using <code>.main.menu</code> and <code>.sub.menu</code></p>\n\n<pre><code>.menu\n{ ... }\n\n.main.menu\n{ ... }\n\n.other.menu\n{ ... }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It is also worth noting that in the <a href=\"http://www.w3.org/TR/CSS2/cascade.html\" rel=\"nofollow\">cascade</a>, an id (#) selector is more <a href=\"http://www.w3.org/TR/CSS2/cascade.html#specificity\" rel=\"nofollow\">specific</a> than a class (.) selector. Therefore, rules in the id statement will override rules in the class statement.</p>\n\n<p>For example, if both of the following statements:</p>\n\n<pre><code>.headline {\n  color:red;\n  font-size: 3em;\n}\n\n#specials {\n  color:blue;\n  font-style: italic;\n}\n</code></pre>\n\n<p>are applied to the same HTML element:</p>\n\n<pre><code>&lt;h1 id=\"specials\" class=\"headline\"&gt;Today's Specials&lt;/h1&gt;\n</code></pre>\n\n<p>the <strong>color:blue</strong> rule would override the <strong>color:red</strong> rule.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Like pretty much everyone has stated already:</p>\n\n<p>A period (\".\") indicates a class, and a hash (\"#\") indicates an ID.</p>\n\n<p>The fundamental difference between is that you can reuse a class on your page over and over, whereas an ID can be used once. That is, of course, if you are sticking to WC3 standards.</p>\n\n<p>A page will still render if you have multiple elements with the same ID, but you will run into problems if/when you try to dynamically update said elements by calling them with their ID, since they are not unique.</p>\n\n<p>It is also useful to note that ID properties will supersede class properties.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>What is the difference between \"#\" and \".\" when declaring a set of styles for an element and what are the semantics that come into play when deciding which one to use?</p>\n",
            "last_activity_date": 1394024240,
            "question_id": 602168,
            "score": 69,
            "tags": [
                "css",
                "css-selectors"
            ],
            "title": "In CSS what is the difference between &quot;.&quot; and &quot;#&quot; when declaring a set of styles?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>It does not noticeably affect performance. It does however reduce the maintainability of your code, and therefore is likely to degrade performance in the long run.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I don't think that <code>!important</code> is inherently bad in terms of how quickly the browser matches rules (it does not form part of the selector, only part of the declaration)</p>\n\n<p>However, as has already been stated, it will reduce the maintainability of your code, and thus likely cause it to grow unnecessarily in size due to future changes. The usage of <code>!important</code> would also likely reduce developer performance.</p>\n\n<p>If you were being <strong>really</strong> picky, you could also say that <code>!important</code> adds 11 extra bytes to your CSS file, this isn't really much, but I guess if you have a fair few <code>!important</code>s in your stylesheet it could add up.</p>\n\n<p>Just my thoughts, unfortunately I couldn't find any benchmarks on how <code>!important</code> could affect performance.</p>\n",
                    "is_accepted": true,
                    "score": 112
                },
                {
                    "body": "<p><code>!important</code> has its place. Trust me on that one. It's saved me many times and is often more useful as a short-term solution, before a longer and more elegant method to your problem can be found.</p>\n\n<p>However, like most things, it's been abused, but there's no need to worry about 'performance'. I'll bet one small 1x1 GIF has more of a performance hit on a web page than !important would.</p>\n\n<p>If you want to optimize your pages, there are many more <em>!important</em> routes to take ;) ;)</p>\n",
                    "is_accepted": false,
                    "score": 57
                },
                {
                    "body": "<p>I agree with you on not using it because it's bad practice, regardless of performance. On those grounds alone, I'd avoid using <code>!important</code> wherever possible.</p>\n\n<p>But on the question of performance: No, it shouldn't be noticeable. It might have some effect, but it should be so tiny you should never notice it, nor <em>should</em> you worry about it.</p>\n\n<p>If it is significant enough to be noticable then you've likely got bigger problems in your code than just <code>!important</code>. Simple use of a normal syntax element of the core languages you're using is never going to be a performance issue.</p>\n\n<p>Let me answer your question with a retorical question in return; an angle that you probably didn't consider: Which browser do you mean?</p>\n\n<p>Each browser obviously has its own rendering engine, with its own optimisations. So the question now becomes: what are the performance implications in each browser? Perhaps <code>!important</code> performs badly in one browser but really well in another? And perhaps in the next versions, it'll be the other way round?</p>\n\n<p>I guess my point here is that we as web developers shouldn't think about (or need to think about) the performance implications of individual syntax constructs of the languages we're using. We should use those syntax constructs because they're the right way to achieve what we want to do not because of how they perform.</p>\n\n<p>Performance questions should be asked in conjunction with the use of profilers to analyse where the pinch-points are in your system. Fix the things that are truly slowing you down first. There are almost certain to be far far bigger issues for you to fix before you get down to the level of individual CSS constructs.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<blockquote>\n  <p><a href=\"http://www.brightmeup.info/article.php?a_id=5\"><strong>Good Read: CSS !Important Complete Reference</strong></a></p>\n</blockquote>\n\n<p>What's going on here behind the scenes is that as your CSS is being processed, the browser reads it, encounters an <code>!important</code> attribute, and the browser goes back to apply the styles defined by <code>!important</code>. This extra process might seem like a small additional step, but if you are serving up many requests then you will take a hit in performance. <a href=\"http://www.ishmaelsanchez.com/using-important-your-css\">(Source)</a></p>\n\n<blockquote>\n  <p>Using !important in your CSS usually means developer  narcissistic &amp; selfish or lazy. Respect the devs to come...</p>\n</blockquote>\n\n<p>The thinking of a developer when using <code>!important</code>:</p>\n\n<ol>\n<li>My rocking CSS is not working... grrrr.</li>\n<li>What should I do now??</li>\n<li>And then <code>!important</code> yeah.... now it's working fine.</li>\n</ol>\n\n<p>However its not a good approach to use <code>!important</code> just because we did not manage the CSS well.  It creates lots of design issues -- which are worse than performance issues -- but it also forces us to use many extra lines of code since we are overriding other properties with <code>!important</code> and our CSS becomes cluttered with useless code. What we should do instead is first manage the CSS very well, and not let properties override one another.</p>\n\n<p>We <em>can</em> use <code>!important</code>.  But use it sparingly and only when there is no other way out.</p>\n\n<p><img src=\"http://i.stack.imgur.com/2usfA.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>It shouldn't have any effect upon the performance really. Seeing <strong>firefox's CSS parser at <a href=\"http://mxr.mozilla.org/mozilla2.0/source/layout/style/nsCSSDataBlock.cpp#562\"><code>/source/layout/style/nsCSSDataBlock.cpp#562</code></a></strong> and I think that is the relevant routine, handling <strong>overwriting</strong> of CSS rules.</p>\n\n<p>it just seems to be an simple check for \"important\".</p>\n\n<pre><code>  if (aIsImportant) {\n    if (!HasImportantBit(aPropID))\n      changed = PR_TRUE;\n    SetImportantBit(aPropID);\n  } else {\n    // ...\n</code></pre>\n\n<p>Also, comments at <strong><a href=\"http://mxr.mozilla.org/mozilla2.0/source/layout/style/nsCSSDataBlock.h#219\"><code>source/layout/style/nsCSSDataBlock.h#219</code></a></strong></p>\n\n<pre><code>    /**\n     * Transfer the state for |aPropID| (which may be a shorthand)\n     * from |aFromBlock| to this block.  The property being transferred\n     * is !important if |aIsImportant| is true, and should replace an\n     * existing !important property regardless of its own importance\n     * if |aOverrideImportant| is true.\n     * \n     * ...\n     */\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <ol>\n  <li><p>Firefox uses a top down parser written manually. In both cases each\n  CSS file is parsed into a StyleSheet object, each object contains CSS\n  rules.</p></li>\n  <li><p>Firefox then creates style context trees which contain the end values\n  (after applying all rules in the right order)</p></li>\n  </ol>\n</blockquote>\n\n<p><img src=\"http://i.stack.imgur.com/OE5Gq.png\" alt=\"CSS Parser Firefox\"></p>\n\n<p><strong><a href=\"http://taligarsiel.com/Projects/howbrowserswork1.htm#CSS_parsing\">From: http://taligarsiel.com/Projects/howbrowserswork1.htm#CSS_parsing</a></strong></p>\n\n<p>Now, you can easily see, in such as case with the Object Model described above, the parser can mark the rules affected by the <code>!important</code> easily, without much of a subsequent cost. Performance degradation <strong>is not</strong> a good argument against <code>!important</code>.</p>\n\n<p><strong>However, maintainability does take a hit (as other answers mentioned), which might be your only argument against them.</strong></p>\n",
                    "is_accepted": false,
                    "score": 248
                },
                {
                    "body": "<p>Having had to use <code>!important</code> several times before, I have personally noticed no demonstrable performance hit when using it.</p>\n\n<p>As a note see <a href=\"http://stackoverflow.com/questions/13607568/twitter-bootstrap-override-a-in-navbar/13607839#13607839\">the answer to this stack question</a> for a reason you might want to use <code>!important</code>.</p>\n\n<p>Also I'll mention something that everyone else has failed to mention. <code>!important</code> is the only way to override inline css short of writing a javascript function (which will effect your performance if even only a little bit). So it could actually <strong><em>save</em></strong> you some performance time if you need to override inline css. </p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>hmm... !important or !!important? </p>\n\n<p>Let's go through this step by step:</p>\n\n<ol>\n<li>The Parser has to check for !important for each property, regardless of whether you use it or not - so performance difference here is 0</li>\n<li>When overwriting a property, the parser has to check whether the property being overwritten is !important or not - so performance difference here is 0 again</li>\n<li>If the property being overwritten is !!important, it has to overwrite the property - performance hit of -1 for not using !important</li>\n<li>If the property being overwritten is !important, it skips overwriting the property - performance boost of +1 for using !important</li>\n<li>If the new property is !important, the parse has to overwrite it regardless of the property being overwritten is !important or !!important - performance difference 0 again</li>\n</ol>\n\n<p><strong>So I guess !important actually has better performance as it can help parser skip many properties that it won't skip otherwise.</strong></p>\n\n<p>and as @ryan mentions below, the only way to override inline css and avoid using javascript... so another way to avoid an unnecessary performance hit</p>\n\n<p>hmm... turns out out that !important is important</p>\n\n<p>and also, </p>\n\n<ul>\n<li>using !important saves a lot of time for a developer</li>\n<li>sometimes saves you from redesigning the whole css</li>\n<li>sometimes html or the parent css file is not in your control, so it saves your life there</li>\n<li>obviously prevents !important elements from being accidentally overwritten by other !!important elements</li>\n<li>and sometimes browsers just don't pick the right properties, without being too specific in selectors, so using !important really becomes important and saves you from writing tonnes of specific css selectors in your css. so i guess even if you use more bytes for writing !important, it could save you bytes in other places. and we all know, css selectors can get messy.</li>\n</ul>\n\n<p><strong>So I guess using !important can make developers happy, and I think that's very important</strong> :D</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I can't foresee <code>!important</code> impeding performance, not inherently anyway. If, however, your CSS is riddled with <code>!important</code>, that indicates that you've been over qualifying selectors and being too specific and you've run out of parents, or qualifiers to add specificity. Consequently, your CSS will have become bloated (which <em>will</em> impede performance) and difficult to maintain.  </p>\n\n<p><img src=\"http://i.stack.imgur.com/rzGss.jpg\" alt=\"Important CSS rule meme\"> </p>\n\n<p>If you want to write efficient CSS then you want to be <em>only</em> as specific as you need to be and write <a href=\"http://thesassway.com/advanced/modular-css-an-example\" rel=\"nofollow\">modular CSS</a>. It's advisable to refrain from using IDs (with hashes), chaining selectors, or qualifying selectors.</p>\n\n<p>IDs prefixed with <code>#</code> in CSS are viciously specific, to the point where <a href=\"http://jsfiddle.net/RKEJE/\" rel=\"nofollow\">255 classes won't override an id</a> (fiddle by: <a href=\"http://stackoverflow.com/questions/2809024/points-in-css-specificity#answer-11934505\">@Faust</a>). ID's have a deeper routed problem too though, they have to be unique, this means you can't re-use them for duplicate styles, so you end up writing linear css with repeating styles. The repercussion of doing this will vary project to project, depending on scale, but maintainability will suffer immensely and in edge cases, performance too.  </p>\n\n<h2>How can you add specificity without <code>!important</code>, chaining, qualifying, or IDs (namely <code>#</code>)</h2>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div class=\"eg1-foo\"&gt;\n    &lt;p class=\"eg1-bar\"&gt;foobar&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"eg2-foo\"&gt;\n    &lt;p id=\"eg2-bar\"&gt;foobar&lt;/p&gt;\n&lt;/div&gt;\n&lt;div class=\"eg3-foo\"&gt;\n    &lt;p class=\"eg3-foo\"&gt;foobar&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>.eg1-foo {\n    color: blue;\n}\n.eg1-bar {\n    color: red;\n}\n[id='eg2-foo'] {\n    color: blue;\n}\n[id='eg2-bar'] {\n    color: red;\n}\n.eg3-foo {\n    color: blue;\n}\n.eg3-foo.eg3-foo {\n    color: red;\n}\n</code></pre>\n\n<p><kbd><strong><a href=\"http://jsfiddle.net/gJ8gW/\" rel=\"nofollow\">JSFiddle</a></strong></kbd> </p>\n\n<h1>Okay, so how does that work?</h1>\n\n<p>The first and second examples work the same, the first is literally a class, and the second is the attribute selector. Classes and Attribute selectors have identical specificity. <code>.eg1/2-bar</code> doesn't inherit its color from <code>.eg1/2-foo</code> because it has its own rule. </p>\n\n<p>The third example looks like qualifying or chaining selectors, but it's neither. Chaining is when you prefix selectors with parents, ancestors, and so on; this adds specificity. Qualifying is similar, but you define the element the selector's applying to. qualifying: <code>ul.class</code> and chaining: <code>ul .class</code> </p>\n\n<p>I'm not sure what you'd call this technique, but the behavior is intentional and is <a href=\"http://www.w3.org/TR/css3-selectors/#specificity\" rel=\"nofollow\">documented by W3C</a></p>\n\n<blockquote>\n  <p>Repeated occurrances of the same simple selector are allowed and\n  do increase specificity.</p>\n</blockquote>\n\n<h2>What happens when the specificity between two rules is identical?</h2>\n\n<p>As <a href=\"http://stackoverflow.com/questions/13743671/is-important-bad-for-performance/24943801#comment-18887438\">@BoltClock pointed out</a>, If there's multiple !important declarations then\nspec dictates that the <em>most specific</em> one should take precedence.</p>\n\n<p>In the example below, both <code>.foo</code> and <code>.bar</code> have identical specificity, so the behavior fallsback to the cascading nature of CSS, whereby the last rule declared in CSS claims precedence i.e. <code>.foo</code>.  </p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div&gt;\n    &lt;p class=\"foo bar\"&gt;foobar&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>.bar {\n    color: blue !important;\n}\n.foo {\n    color: red !important;\n}\n</code></pre>\n\n<p><kbd><strong><a href=\"http://jsfiddle.net/Cd5x6/\" rel=\"nofollow\">JSFiddle</a></strong></kbd> </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I hate them, it defies the cascading nature of CSS, and if you don't use them with care you end up in a loop of adding more <code>!important</code>.</p>\n\n<p>But I want to know are they bad for performance?</p>\n\n<p><strong>EDIT</strong><br>\nFrom the (fast) replies I can conclude it won't have a (significant) impact on performance.\nBut it's nice to know, even if it's just as an extra argument for discouraging others ;).</p>\n\n<p><strong>EDIT 2</strong><br>\nBoltClock pointed out that if there are 2 <code>!important</code> declarations the specs says it will pick the most specific one.</p>\n",
            "last_activity_date": 1421395164,
            "question_id": 13743671,
            "score": 175,
            "tags": [
                "css",
                "performance"
            ],
            "title": "Is !important bad for performance?"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>This is a php but you maybe able to change it to javascript:</p>\n\n<pre><code>&lt;?php&gt;\n$colgroup = str_repeat(\"&lt;col width=86&gt;\",5);\n$data = \"\";\n$time = date(\"M d, y g:ia\");\n$excel = \"&lt;html xmlns:o=\\\"urn:schemas-microsoft-com:office:office\\\" xmlns:x=\\\"urn:schemas-microsoft-com:office:excel\\\" xmlns=\\\"http://www.w3.org/TR/REC-html40\\\"&gt;\n&lt;!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\"&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\\\"Content-type\\\" content=\\\"text/html;charset=utf-8\\\" /&gt;\n&lt;style id=\\\"Classeur1_16681_Styles\\\"&gt;\n.xl4566 {\ncolor: red;\n}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\\\"Classeur1_16681\\\" align=center x:publishsource=\\\"Excel\\\"&gt;\n&lt;table x:str border=0 cellpadding=0 cellspacing=0 style=\\\"border-collapse: collapse\\\"&gt;\n&lt;colgroup&gt;$colgroup&lt;/colgroup&gt;\n&lt;tr&gt;&lt;td class=xl2216681&gt;&lt;b&gt;Col1&lt;/b&gt;&lt;/td&gt;&lt;td class=xl2216681&gt;&lt;b&gt;Col2&lt;/b&gt;&lt;/td&gt;&lt;td class=xl2216681 &gt;&lt;b&gt;Col3&lt;/b&gt;&lt;/td&gt;&lt;td class=xl2216681 &gt;&lt;b&gt;Col4&lt;/b&gt;&lt;/td&gt;&lt;td class=xl2216681 &gt;&lt;b&gt;Col5&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td class=xl4566&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\";\n  $fname = \"Export\".time().\".xls\";\n  $file = fopen($fname,\"w+\");\n  fwrite($file,$excel);\n  fclose($file);\n  header('Content-Type: application/vnd.ms-excel');\n  header('Content-Disposition: attachment; filename=\"'.basename($fname).'\"');\n  readfile($fname);\n  unlink($fname); ?&gt;    \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is actually more simple than you'd think: \"Just\" copy the HTML table (that is: The HTML code for the table) into the clipboard. Excel knows how to decode HTML tables; it'll even try to preserve the attributes.</p>\n\n<p>The hard part is \"copy the table into the clipboard\" since there is no standard way to access the clipboard from JavaScript. See this blog post: <a href=\"http://brooknovak.wordpress.com/2009/07/28/accessing-the-system-clipboard-with-javascript/\" rel=\"nofollow\">Accessing the System Clipboard with JavaScript \u2013 A Holy Grail?</a></p>\n\n<p>Now all you need is the table as HTML. I suggest jQuery and the <a href=\"http://api.jquery.com/html/\" rel=\"nofollow\">html()</a> method.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are practical two ways to do this automaticly while only one solution can be used in all browsers. \nFirst of all you should use the open xml specification to build the excel sheet. There are free plugins from Microsoft available that make this format also available for older office versions. The open xml is standard since office 2007. The the two ways are obvious the serverside or the clientside. </p>\n\n<p>The clientside implementation use a new standard of CSS that allow you to store data instead of just the URL to the data. This is a great approach coz you dont need any servercall, just the data and some javascript. The killing downside is that microsoft don't support all parts of it in the current IE (I don't know about IE9) releases. Microsoft restrict the data to be a image but we will need a document. In firefox it works quite fine. For me the IE was the killing point. </p>\n\n<p>The other way is to user a serverside implementation. There should be a lot implementations of open XML for all languages. You just need to grap one. In most cases it will be the simplest way to modify a Viewmodel to result in a Document but for sure you can send all data from Clientside back to server and do the same.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This code is IE only so it is only useful in situations where you know all of your users will be using IE (like, for example, in some corporate environments.)</p>\n\n<pre><code>&lt;script Language=\"javascript\"&gt;\nfunction ExportHTMLTableToExcel()\n{\n   var thisTable = document.getElementById(\"tbl\").innerHTML;\n   window.clipboardData.setData(\"Text\", thisTable);\n   var objExcel = new ActiveXObject (\"Excel.Application\");\n   objExcel.visible = true;\n\n   var objWorkbook = objExcel.Workbooks.Add;\n   var objWorksheet = objWorkbook.Worksheets(1);\n   objWorksheet.Paste;\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It is possible to use the old <a href=\"http://blogs.msdn.com/b/brian_jones/archive/2005/06/27/433152.aspx\">Excel 2003 XML format</a> (before OpenXML) to create a string that contains your desired XML, then on the client side you could use a data URI to open the file using the XSL mime type, or send the file to the client using the Excel mimetype \"Content-Type: application/vnd.ms-excel\" from the server side.</p>\n\n<ol>\n<li>Open Excel and create a worksheet with your desired formatting and colors.</li>\n<li>Save the Excel workbook as \"XML Spreadsheet 2003 (*.xml)\"</li>\n<li>Open the resulting file in a text editor like notepad and copy the value into a string in your application</li>\n<li>Assuming you use the client side approach with a data uri the code would look like this: <pre>\n<code>\n&lt;script type=\"text/javascript\"&gt;\nvar worksheet_template = '&lt;?xml version=\"1.0\"?&gt;&lt;ss:Workbook xmlns:ss=\"urn:schemas-microsoft-com:office:spreadsheet\"&gt;'+\n             '&lt;ss:Styles&gt;&lt;ss:Style ss:ID=\"1\"&gt;&lt;ss:Font ss:Bold=\"1\"/&gt;&lt;/ss:Style&gt;&lt;/ss:Styles&gt;&lt;ss:Worksheet ss:Name=\"Sheet1\"&gt;'+\n             '&lt;ss:Table&gt;{{ROWS}}&lt;/ss:Table&gt;&lt;/ss:Worksheet&gt;&lt;/ss:Workbook&gt;';\nvar row_template = '&lt;ss:Row ss:StyleID=\"1\"&gt;&lt;ss:Cell&gt;&lt;ss:Data ss:Type=\"String\"&gt;{{name}}&lt;/ss:Data&gt;&lt;/ss:Cell&gt;/ss:Row&gt;';\n&lt;/script&gt;\n</code>\n</pre></li>\n<li>Then you can use string replace to create a collection of rows to be inserted into your worksheet template <pre>\n<code>\n&lt;script type=\"text/javascript\"&gt;\nvar rows = document.getElementById(\"my-table\").getElementsByTagName('tr'),\n  row_data = '';\nfor (var i = 0, length = rows.length; i &lt; length; ++i) {\nrow_data += row_template.replace('{{name}}', rows[i].getElementsByTagName('td')[0].innerHTML);\n}\n&lt;/script&gt;\n</code>\n</pre></li>\n<li><p>Once you have the information collected, create the final string and open a new window using the data URI <pre>\n<code>\n&lt;script type=\"text/javascript\"&gt;\nvar worksheet = worksheet_template.replace('{{ROWS}}', row_data);</p>\n\n<p>window.open('data:application/vnd.ms-excel,'+worksheet);\n&lt;/script&gt;\n</code>\n</pre></p></li>\n</ol>\n\n<p>It is worth noting that older browsers do not support the data URI scheme, so you may need to produce the file server side for those browser that do not support it.</p>\n\n<p>You may also need to perform base64 encoding on the data URI content, which may require a <a href=\"http://www.stringify.com/2007/jun/18/base64/\">js library</a>, as well as adding the string ';base64' after the mime type in the data URI.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Far and away, the cleanest, easiest export from tables to Excel is <a href=\"http://datatables.net/extras/tabletools/\">Jquery DataTables Table Tools plugin.</a>  You get a grid that sorts, filters, orders, and pages your data, and with just a few extra lines of code and two small files included, you get export to Excel, PDF, CSV, to clipboard and to the printer.</p>\n\n<p>This is all the code that's required:</p>\n\n<pre><code>  $(document).ready( function () {\n    $('#example').dataTable( {\n        \"sDom\": 'T&lt;\"clear\"&gt;lfrtip',\n        \"oTableTools\": {\n            \"sSwfPath\": \"/swf/copy_cvs_xls_pdf.swf\"\n        }\n    } );\n} );\n</code></pre>\n\n<p>So, quick to deploy, no browser limitations, no server-side language required, and most of all very EASY to understand.  It's a win-win.  The one thing it does have limits on, though, is strict formatting of columns.</p>\n\n<p>If formatting and colors are absolute dealbreakers, the only 100% reliable, cross browser method I've found is to use a server-side language to process proper Excel files from your code.  My solution of choice is <a href=\"http://phpexcel.codeplex.com/\">PHPExcel</a>  It is the only one I've found so far that positively handles export with formatting to a MODERN version of Excel from any browser when you give it nothing but HTML.  Let me clarify though, it's definitely not as easy as the first solution, and also is a bit of a resource hog.  However, on the plus side it also can output direct to PDF as well.  And, once you get it configured, it just works, every time.</p>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>simple google search turned up this:</p>\n\n<blockquote>\n  <p>If the data is actually an HTML page and has NOT been created by ASP, PHP, or some other scripting language, and you are using Internet Explorer 6, and you have Excel installed on your computer, simply right-click on the page and look through the menu. You should see \"Export to Microsoft Excel.\" If all these conditions are true, click on the menu item and after a few prompts it will be imported to Excel. </p>\n</blockquote>\n\n<p>if you can't do that, he gives an alternate \"drag-and-drop\" method:</p>\n\n<p><a href=\"http://www.mrkent.com/tools/converter/\" rel=\"nofollow\">http://www.mrkent.com/tools/converter/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>First, I would <em>not</em> recommend trying export Html and hope that the user's instance of Excel picks it up. My experience that this solution is fraught with problems including incompatibilities with Macintosh clients and throwing an error to the user that the file in question is not of the format specified. The most bullet-proof, user-friendly solution is a server-side one where you use a library to build an actual Excel file and send that back to the user. The next best solution and more universal solution would be to use the Open XML format. I've run into a few rare compatibility issues with older versions of Excel but on the whole this should give you a solution that will work on any version of Excel including Macs.</p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/aa338205.aspx\" rel=\"nofollow\">Open XML</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Excel has a little known feature called \"Web queries\" which let you retrieve data from almost every web page without additional programming. </p>\n\n<p>A web query basicly runs a HTTP request directly from within Excel and copies some or all of the received data (and optionally formatting) into the worksheet. </p>\n\n<p>After you've defined the web query you can refresh it at any time without even leaving excel. So you don't have to actually \"export\" data and save it to a file - you'd rather refresh the data just like from a database.</p>\n\n<p>You can even make use of URL parameters by having excel prompt you for certain filter criteria etc...</p>\n\n<p>However the cons I've noticed so far are:</p>\n\n<ul>\n<li>dynamicly loaded data is not accessible, because Javascript is not executed</li>\n<li>URL length is limited</li>\n</ul>\n\n<p><a href=\"http://stackoverflow.com/questions/2428851/excel-is-there-information-on-how-to-create-web-query-service-in-excel\">Here</a> is a question about how to create web queries in Excel. It links to a <a href=\"http://office.microsoft.com/en-us/excel-help/get-external-data-from-a-web-page-HA010218472.aspx\" rel=\"nofollow\">Microsoft Help site about How-To Get external data from a Web page</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A long time ago, I discovered that Excel would open an HTML file with a table if we send it with Excel content type. Consider the document above:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n  &lt;title&gt;Java Friends&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;table style=\"font-weight: bold\"&gt;\n    &lt;tr style=\"background-color:red\"&gt;&lt;td&gt;a&lt;/td&gt;&lt;td&gt;b&lt;/td&gt;&lt;/tr&gt;\n    &lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;\n  &lt;/table&gt;    \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>I ran the following bookmarklet on it:</p>\n\n<pre><code>javascript:window.open('data:application/vnd.ms-excel,'+document.documentElement.innerHTML);\n</code></pre>\n\n<p>and in fact I got it downloadable as a Excel file. <strong>However</strong>, I did not get the expected result - the file was open in OpenOffice.org Writer. That is my problem: I do not have Excel in this machine so I cannot try it better. Also, this trick worked more or less six years ago with older browsers and an antique version of MS Office, so I really cannot say if it will work today.</p>\n\n<p>Anyway, in the document above I added a button which would download the entire document as an Excel file, in theory:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n  &lt;title&gt;Java Friends&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;table style=\"font-weight: bold\"&gt;\n    &lt;tr style=\"background-color:red\"&gt;&lt;td&gt;a&lt;/td&gt;&lt;td&gt;b&lt;/td&gt;&lt;/tr&gt;\n    &lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td colspan=\"2\"&gt;\n        &lt;button onclick=\"window.open('data:application/vnd.ms-excel,'+document.documentElement.innerHTML);\"&gt;\n            Get as Excel spreadsheet\n        &lt;/button&gt;\n      &lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/table&gt;    \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Save it in a file and click on the button. I'd <em>love</em> to know if it worked or not, so I ask you to comment even for saying that it did not work.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p><strong>Assumptions:</strong> </p>\n\n<ol>\n<li><p>given url</p></li>\n<li><p>the conversion has to be done on client side</p></li>\n<li><p>systems are Windows, Mac and linux</p></li>\n</ol>\n\n<p><strong>Solution for Windows:</strong></p>\n\n<p>python code that open the ie window and has access to it:\ntheurl variable contain the url ('http://')</p>\n\n<pre><code>ie = Dispatch(\"InternetExplorer.Application\")\nie.Visible = 1\nie.Navigate(theurl)\n</code></pre>\n\n<p>Note: if the page is not accessible directly, but login, you will need to handle this by entering the form data and emulating the user actions with python</p>\n\n<p>here is the example</p>\n\n<pre><code>from win32com.client import Dispatch\nie.Document.all('username').value=usr\nie.Document.all('password').value=psw\n</code></pre>\n\n<p>the same manner for retrieval of data from web page. Let's say element with id 'el1' contain the data. \nretrieve the element text to the variable</p>\n\n<pre><code>el1 = ie.Document.all('el1').value\n</code></pre>\n\n<p>then when data is in python variable, you can open the excel screen in similar manner using python:</p>\n\n<pre><code>from win32com.client import Dispatch\nxlApp = Dispatch(\"Excel.Application\")\nxlWb = xlApp.Workbooks.Open(\"Read.xls\")\nxlSht = xlWb.WorkSheets(1)\nxlSht.Cells(row, col).Value = el1\n</code></pre>\n\n<p><strong>Solution for Mac:</strong></p>\n\n<p>only the tip: use AppleScript - it has simple and similar API as win32com.client Dispatch</p>\n\n<p><strong>Solution for Linux:</strong></p>\n\n<p>java.awt.Robot might work for this it has click, key press (hot keys can be used), but none API for Linux that I am aware about that can work as  simple as AppleScript</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>mozilla still support base 64 URIs. This allows you to compose dynamically the binary content using javascript:</p>\n\n<pre><code>&lt;a href=\"data:application/vnd.ms-excel&lt;base64 encoded binary excel content here&gt;\"&gt; download xls&lt;/a&gt;\n</code></pre>\n\n<p>if your excel file is not very fancy (no diagrams, formulas, macroses) you can dig into the format and compose bytes for your file, then encode them with base64 and put in to the href</p>\n\n<p>refer to\n<a href=\"https://developer.mozilla.org/en/data_URIs\" rel=\"nofollow\">https://developer.mozilla.org/en/data_URIs</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>   function normalexport() {\n\n       try {\n           var i;\n           var j;\n           var mycell;\n           var tableID = \"tblInnerHTML\";\n           var drop = document.getElementById('&lt;%= ddl_sections.ClientID %&gt;');\n           var objXL = new ActiveXObject(\"Excel.Application\");\n           var objWB = objXL.Workbooks.Add();\n           var objWS = objWB.ActiveSheet;\n           var str = filterNum(drop.options[drop.selectedIndex].text);\n           objWB.worksheets(\"Sheet1\").activate; //activate dirst worksheet\n           var XlSheet = objWB.activeSheet; //activate sheet\n           XlSheet.Name = str; //rename\n\n\n           for (i = 0; i &lt; document.getElementById(\"ctl00_ContentPlaceHolder1_1\").rows.length - 1; i++) {\n               for (j = 0; j &lt; document.getElementById(\"ctl00_ContentPlaceHolder1_1\").rows(i).cells.length; j++) {\n                   mycell = document.getElementById(\"ctl00_ContentPlaceHolder1_1\").rows(i).cells(j);\n\n                   objWS.Cells(i + 1, j + 1).Value = mycell.innerText;\n\n                   //                                                objWS.Cells(i + 1, j + 1).style.backgroundColor = mycell.style.backgroundColor;\n               }\n           }\n\n           objWS.Range(\"A1\", \"L1\").Font.Bold = true;\n           //                objWS.Range(\"A1\", \"L1\").Font.ColorIndex = 2;\n           //                 objWS.Range(\"A1\", \"Z1\").Interior.ColorIndex = 47;\n\n           objWS.Range(\"A1\", \"Z1\").EntireColumn.AutoFit();\n\n           //objWS.Range(\"C1\", \"C1\").ColumnWidth = 50;\n\n           objXL.Visible = true;\n\n       } catch (err) {\n           alert(\"Error. Scripting for ActiveX might be disabled\")\n           return\n       }\n       idTmr = window.setInterval(\"Cleanup();\", 1);\n\n   }\n\n\n   function filterNum(str) {\n\n       return str.replace(/[ / ]/g, '');\n   }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Since formatting, color and other styling is important, I'd recommend DocRaptor, an <a href=\"http://docraptor.com/documentation/examples_jquery\" rel=\"nofollow\">HTML to Excel </a>web application built by my company. DocRaptor is a RESTful web app that uses HTTP POST requests to convert HTML to Excel.</p>\n\n<p>Our web app is easy to integrate with your own web application, and we've provided full documentation for jQuery implementation.</p>\n\n<p>Here's a link to our jQuery coding example:</p>\n\n<p><a href=\"http://docraptor.com/documentation/examples_jquery\" rel=\"nofollow\">DocRaptor jQuery example</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>And now there is a better way.</p>\n\n<p>OpenXML SDK for JavaScript.</p>\n\n<p><a href=\"https://openxmlsdkjs.codeplex.com/\" rel=\"nofollow\">https://openxmlsdkjs.codeplex.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I export tables to excel from a webpage. I want the export to contain all the formatting and colours.</p>\n",
            "last_activity_date": 1402150310,
            "question_id": 5524143,
            "score": 47,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "table"
            ],
            "title": "How can I export tables to excel from a webpage"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can sit elements next to each other by using the CSS float property:</p>\n\n<pre><code>#first {\nfloat: left;\n}\n#second {\nfloat: left;\n}\n</code></pre>\n\n<p>You'd need to make sure that the wrapper div allows for the floating in terms of width, and margins etc are set correctly.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>float one or both inner divs..</p>\n\n<p><strong>Float One:</strong></p>\n\n<pre><code>#wrapper {\n    width: 500px;\n    border: 1px solid black;\n    overflow: hidden; /* will contain if #first is longer than #second */\n}\n#first {\n    width: 300px;\n    float:left; /* add this */\n    border: 1px solid red;\n}\n#second {\n    border: 1px solid green;\n    overflow: hidden; /* if you don't want #second to wrap below #first */\n}\n</code></pre>\n\n<p>or if you <strong>float both</strong>, you'll need to encourage the wrapper div to contain both the floated children, or it will think it's empty and not put the border around them</p>\n\n<pre><code>#wrapper {\n    width: 500px;\n    border: 1px solid black;\n    overflow: hidden; /* add this to contain floated children */\n}\n#first {\n    width: 300px;\n    float:left; /* add this */\n    border: 1px solid red;\n}\n#second {\n    border: 1px solid green;\n    float: left; /* add this */\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 168
                },
                {
                    "body": "<p>here is the solution:</p>\n\n<pre><code>#wrapper {\n    width: 500px;\n    border: 1px solid black;\n    overflow: auto; /* so the size of the wrapper is alway the size of the longest content */\n}\n#first {\n    float: left;\n    width: 300px;\n    border: 1px solid red;\n}\n#second {\n    border: 1px solid green;\n    margin: 0 0 0 302px; /* considering the border you need to use a margin so the content does not float under the first div*/\n}\n</code></pre>\n\n<p><strong>your demo updated;</strong></p>\n\n<p><a href=\"http://jsfiddle.net/dqC8t/1/\">http://jsfiddle.net/dqC8t/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Having two divs,</p>\n\n<pre><code>&lt;div id=\"div1\"&gt;The two divs are&lt;/div&gt;\n&lt;div id=\"div2\"&gt;next to each other.&lt;/div&gt;\n</code></pre>\n\n<p>you could also use the <code>display</code> property:</p>\n\n<pre><code>#div1 {\n    display: inline-block;\n}\n\n#div2 {\n    display: inline-block;\n}\n</code></pre>\n\n<p>jsFiddle example <a href=\"http://jsfiddle.net/dimitrios_87/d5Z6V/11/\">here</a>.</p>\n\n<p>If <code>div1</code> is too tall, <code>div2</code> will be placed next to <code>div1</code> at the bottom. To solve this, use <code>vertical-align:top;</code> on <code>div2</code>.</p>\n\n<p>jsFiddle example <a href=\"http://jsfiddle.net/dimitrios_87/b9hXU/\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>Consider the <a href=\"http://jsfiddle.net/dqC8t/\">following code</a>:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"wrapper\"&gt;\n    &lt;div id=\"first\"&gt;Stack Overflow is for professional and enthusiast programmers, people who write code because they love it.&lt;/div&gt;\n    &lt;div id=\"second\"&gt;When you post a new question, other users will almost immediately see it and try to provide good answers. This often happens in a matter of minutes, so be sure to check back frequently when your question is still new for the best response.&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>#wrapper {\n    width: 500px;\n    border: 1px solid black;\n}\n#first {\n    width: 300px;\n    border: 1px solid red;\n}\n#second {\n    border: 1px solid green;\n}\n</code></pre>\n\n<p>I would like the two divs to be next to each other inside the wrapper div. In this case, the height of the green div should determine the height of the wrapper.</p>\n\n<p>How could I achieve this via CSS ?</p>\n",
            "last_activity_date": 1409018137,
            "question_id": 5803023,
            "score": 135,
            "tags": [
                "css",
                "html"
            ],
            "title": "How to place two divs next to each other?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Well, it's called <code>:<b>n</b>th-child()</code>, so use the <code>n</code> variable and work with it. You can perform addition (<code>+</code>), subtraction (<code>-</code>) and <a href=\"http://en.wikipedia.org/wiki/Coefficient\">coefficient multiplication</a> (<code>an</code> where <code>a</code> is a number):</p>\n\n<pre><code>div:nth-child(4n)\n</code></pre>\n\n<p>See the <a href=\"http://www.w3.org/TR/selectors/#nth-child-pseudo\">spec</a> for details on how to write formulas for <code>:nth-child()</code>.</p>\n\n<hr>\n\n<p>By the way, there's not much of a difference between 4n and 4n + 4 with regards to <code>nth-child()</code>. If you use the <code>n</code> variable, it starts counting at 0. Subsequently, this is what each selector would select:</p>\n\n<p><strong><code>:nth-child(4n)</code></strong></p>\n\n<pre><code>4(0) = 0\n4(1) = 4\n4(2) = 8\n4(3) = 12\n4(4) = 16\n...\n</code></pre>\n\n<p><strong><code>:nth-child(4n+4)</code></strong></p>\n\n<pre><code>4(0) + 4 = 0  + 4 = 4\n4(1) + 4 = 4  + 4 = 8\n4(2) + 4 = 8  + 4 = 12\n4(3) + 4 = 12 + 4 = 16\n4(4) + 4 = 16 + 4 = 20\n...\n</code></pre>\n\n<p>Both select the 4th, 8th, 12th and 16th elements that you're looking for. Therefore, there's no difference in your question's context.</p>\n",
                    "is_accepted": true,
                    "score": 218
                },
                {
                    "body": "<pre><code>div:nth-child(4n+4) \n</code></pre>\n\n<p>See: <a href=\"http://css-tricks.com/how-nth-child-works/\">http://css-tricks.com/how-nth-child-works/</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p><strong>Try this</strong></p>\n\n<pre><code>div:nth-child(4n+4)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>Is it possible to select, say, every fourth element in a set of elements?</p>\n\n<p>Ex: I have 16 <code>&lt;div&gt;</code> elements... I could write something like.</p>\n\n<pre><code>div:nth-child(4),\ndiv:nth-child(8),\ndiv:nth-child(12),\ndiv:nth-child(16)\n</code></pre>\n\n<p>is there a better way to do this?</p>\n",
            "last_activity_date": 1343914523,
            "question_id": 3462298,
            "score": 110,
            "tags": [
                "css",
                "css3",
                "css-selectors"
            ],
            "title": "Select every Nth element in CSS"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.w3.org/TR/REC-html40/struct/global.html#h-7.5.4\">According to the HTML spec</a>, <code>&lt;span&gt;</code> is an inline element and <code>&lt;div&gt;</code> is a block element. Now that can be changed using the <code>display</code> CSS property but there is one issue: in terms of HTML validation, you can't put block elements inside inline elements so:</p>\n\n<pre><code>&lt;p&gt;...&lt;div&gt;foo&lt;/div&gt;...&lt;/p&gt;\n</code></pre>\n\n<p>is not strictly valid even if you change the <code>&lt;div&gt;</code> to <code>inline</code> or <code>inline-block</code>.</p>\n\n<p>So, if your element is <code>inline</code> or <code>inline-block</code> use a <code>&lt;span&gt;</code>. If it's a <code>block</code> level element, use a <code>&lt;div&gt;</code>.</p>\n",
                    "is_accepted": false,
                    "score": 146
                },
                {
                    "body": "<p>If you want to have a valid xhtml document then you cannot put a div inside of a paragraph. </p>\n\n<p>Also, a div with the property display: inline-block works differently than a span. A span is by default an inline element, you cannot set the width, height, and other properties associated with blocks. On the other hand, an element with the property inline-block will still \"flow\" with any surrounding text but you may set properties such as width, height, etc. A span with the property display:block will <b>not</b> flow in the same way as an inline-block element but will create a carriage return and have default margin. </p>\n\n<p>Note that inline-block is not supported in all browsers. For instance in Firefox 2 and less you must use:</p>\n\n<pre><code>display: -moz-inline-stack;\n</code></pre>\n\n<p>which displays slightly different than an inline block element in FF3.</p>\n\n<p>There is a great article <a href=\"http://blog.mozilla.com/webdev/2009/02/20/cross-browser-inline-block/\">here</a> on creating cross browser inline-block elements.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>I know this Q is old, but why not use all DIVs instead of the SPANs?\nThen everything plays all happy together.</p>\n\n<p>Example:</p>\n\n<pre><code>&lt;div&gt; \n   &lt;div&gt; content1(divs,p, spans, etc) &lt;/div&gt; \n   &lt;div&gt; content2(divs,p, spans, etc) &lt;/div&gt; \n   &lt;div&gt; content3(divs,p, spans, etc) &lt;/div&gt; \n&lt;/div&gt; \n&lt;div&gt; \n   &lt;div&gt; content4(divs,p, spans, etc) &lt;/div&gt; \n   &lt;div&gt; content5(divs,p, spans, etc) &lt;/div&gt; \n   &lt;div&gt; content6(divs,p, spans, etc) &lt;/div&gt; \n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<ol>\n<li><p><strong>Inline-block is a halfway point between setting an element\u2019s display to inline or to block.</strong> It keeps the element in the inline flow of the document like display:inline does, but you can manipulate the element\u2019s box attributes (width, height and vertical margins) like you can with display:block.</p></li>\n<li><p>We must not use block elements within inline elements. This is invalid and there is no reason to do such practices. </p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Is there any reason to use a <code>&lt;div style=\"display:inline-block\"&gt;</code> instead of a <code>&lt;span&gt;</code> to layout a webpage?</p>\n\n<p>Can I put content nested inside the span? What is valid and what isn't?</p>\n\n<p>It's ok to use this to make a 3x2 table like layout?</p>\n\n<pre><code>&lt;div&gt;\n   &lt;span&gt; content1(divs,p, spans, etc) &lt;/span&gt;\n   &lt;span&gt; content2(divs,p, spans, etc) &lt;/span&gt;\n   &lt;span&gt; content3(divs,p, spans, etc) &lt;/span&gt;\n&lt;/div&gt;\n&lt;div&gt;\n   &lt;span&gt; content4(divs,p, spans, etc) &lt;/span&gt;\n   &lt;span&gt; content5(divs,p, spans, etc) &lt;/span&gt;\n   &lt;span&gt; content6(divs,p, spans, etc) &lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1382022347,
            "question_id": 1611065,
            "score": 101,
            "tags": [
                "css",
                "html"
            ],
            "title": "SPAN vs DIV (inline-block)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There are numerous methods of accomplishing this:</p>\n\n<p><strong>1.) CSS-Only, using only one colored image</strong></p>\n\n<pre><code>img.grayscale {\n  filter: url(\"data:image/svg+xml;utf8,&lt;svg xmlns=\\'http://www.w3.org/2000/svg\\'&gt;&lt;filter id=\\'grayscale\\'&gt;&lt;feColorMatrix type=\\'matrix\\' values=\\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale\"); /* Firefox 3.5+ */\n  filter: gray; /* IE6-9 */\n  -webkit-filter: grayscale(100%); /* Chrome 19+ &amp; Safari 6+ */\n}\n\nimg.grayscale:hover {\n  filter: none;\n  -webkit-filter: grayscale(0%);\n}\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/KDtAX/105/\">Demo</a></strong> and <strong><a href=\"http://www.karlhorky.com/2012/06/cross-browser-image-grayscale-with-css.html\">Source</a></strong></p>\n\n<p><strong>2.) CSS-Only, using two sets of Images (Grayscale and Colored)</strong></p>\n\n<p>You would need two copies of the image, one in grayscale and the other in full color, and then using CSS, you could simply apply a hover style to use your colored image.</p>\n\n<pre><code>#yourimage { background: url(../YourBlackAndWhiteImage.png);}\n#yourImage:hover { background: url(../YourColoredImage.png};}\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/pJSaV/2/\">Working Demo</a></strong></p>\n\n<p>this could also be accomplished using the jQuery <a href=\"http://api.jquery.com/hover/\">hover()</a> method.</p>\n\n<p><strong>3.) Using a specific library to accomplish this functionality:</strong></p>\n\n<p>The <a href=\"http://www.pixastic.com/lib/docs/actions/desaturate/\"><strong>desaturate</strong></a> library manipulates images, allowing you to easily switch between a grayscale version and full-colored version.</p>\n",
                    "is_accepted": true,
                    "score": 115
                },
                {
                    "body": "<p>You can use a <a href=\"http://www.alistapart.com/articles/sprites\" rel=\"nofollow\">sprite</a> which has both version\u2014the colored and the monochrome\u2014stored into it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a demo. Even works in IE7:</p>\n\n<p><a href=\"http://james.padolsey.com/demos/grayscale/\" rel=\"nofollow\">http://james.padolsey.com/demos/grayscale/</a></p>\n\n<p>and</p>\n\n<p><a href=\"http://james.padolsey.com/javascript/grayscaling-in-non-ie-browsers/\" rel=\"nofollow\">http://james.padolsey.com/javascript/grayscaling-in-non-ie-browsers/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Answered here: <a href=\"http://stackoverflow.com/questions/609273/convert-an-image-to-grayscale-in-html-css\">Convert an image to grayscale in HTML/CSS</a></p>\n\n<p>You don't even need to use two images which sounds like a pain or an image manipulation library, you can do it with cross browser support (current versions) and just use CSS.  This is a progressive enhancement approach which just falls back to color versions on older browsers:</p>\n\n<pre><code>img\n{\n    filter: url(filters.svg#grayscale); /* Firefox 3.5+ */\n    filter: gray; /* IE6-9 */\n    -webkit-filter: grayscale(1); /* Google Chrome &amp; Safari 6+ */\n}\nimg:hover\n{\n    filter: none;\n    -webkit-filter: none;\n}\n</code></pre>\n\n<p>and filters.svg file like this:</p>\n\n<pre><code>&lt;svg xmlns=\"http://www.w3.org/2000/svg\"&gt;\n&lt;filter id=\"grayscale\"&gt;\n    &lt;feColorMatrix type=\"matrix\" values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"/&gt;\n&lt;/filter&gt;\n&lt;/svg&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I use the following code on <a href=\"http://www.diagnomics.com/\" rel=\"nofollow\">http://www.diagnomics.com/</a></p>\n\n<p>Smooth transition from b/w to color with magnifying effect (scale)</p>\n\n<pre><code>    img.color_flip {\n      filter: url(filters.svg#grayscale); /* Firefox 3.5+ */\n      filter: gray; /* IE5+ */\n      -webkit-filter: grayscale(1); /* Webkit Nightlies &amp; Chrome Canary */\n      -webkit-transition: all .5s ease-in-out;\n    }\n\n    img.color_flip:hover {\n      filter: none;\n      -webkit-filter: grayscale(0);\n      -webkit-transform: scale(1.1);\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am looking to take an icon that is colored (and will be a link) and turn it greyscale until the user places their mouse over the icon (where it would then color the image).</p>\n\n<p>Is this possible to do, and in a way that is IE &amp; Firefox supported?</p>\n",
            "last_activity_date": 1399562096,
            "question_id": 7273927,
            "score": 44,
            "tags": [
                "css",
                "mouseover",
                "grayscale"
            ],
            "title": "Image Greyscale with CSS &amp; re-color on mouse-over?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>There isn't one easy way to center div vertically which would do the trick in every situation.</p>\n\n<p>However, there are lots of ways to do it depending on the situation.</p>\n\n<p>Here are few of them:</p>\n\n<ul>\n<li>Set top and bottom padding of the parent element for example padding:20px 0px 20px 0px</li>\n<li>Use table, table cell centers its' content vertically</li>\n<li>Set parent element's position relative and the div's you want to vertically center to absolute and style it as top:50px; bottom:50px; for example</li>\n</ul>\n\n<p>You may also google for \"css vertical centering\"</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>If you know the height of the div you want to center</strong>, you can position it absolutely within its parent and then set the <code>top</code> value to <code>50%</code>.  That will put the top of the child div 50% of the way down its parent, i.e. too low.  Pull it back up by setting its <code>margin-top</code> to half its height.  So now you have the vertical midpoint of the child div sitting at the vertical midpoint of the parent - vertically centered!</p>\n\n<p>Example: <a href=\"http://jsfiddle.net/yWnZ2/2/\">http://jsfiddle.net/yWnZ2/2/</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><strong>You can't use:</strong></p>\n\n<p><code>vertical-align:middle</code> because <a href=\"http://www.w3.org/TR/CSS21/visudet.html#propdef-vertical-align\">it's <strong><em>not</em></strong> applicable to block-level elements</a></p>\n\n<p><code>margin-top:auto</code> and <code>margin-bottom:auto</code> because <a href=\"http://www.w3.org/TR/CSS2/visudet.html#Computing_heights_and_margins\">their used values would compute as <strong><em>zero</em></strong></a></p>\n\n<p><code>margin-top:-50%</code> because <a href=\"http://www.w3.org/TR/CSS2/box.html#margin-properties\">percentage-based margin values are calculated relative to the <strong><em>width</em></strong> of containing block </a></p>\n\n<p>In fact, the nature of document flow and <a href=\"http://www.w3.org/TR/CSS2/visudet.html#Computing_heights_and_margins\">element height calculation algorythms</a> make it impossible to use margins for centering an element vertically inside its parent. Whenever a vertical margin value is changed, it will trigger a parent element height re-calculation (reflow), which would in turn trigger a re-center of the original element... making it an infinite loop.</p>\n\n<p><strong>You can use:</strong></p>\n\n<p><a href=\"http://www.jakpsatweb.cz/css/css-vertical-center-solution.html\">A few workarounds like this</a> which work for your scenario:</p>\n\n<pre><code>.container {\n  display: table;\n  height: 100%;\n  position: absolute;\n  overflow: hidden;\n  width: 100%;}\n.helper {\n  #position: absolute; /*a variation of an \"lte ie7\" hack*/\n  #top: 50%;\n  display: table-cell;\n  vertical-align: middle;}\n.content {\n  #position: relative;\n  #top: -50%;\n  margin:0 auto;\n  width:200px;}\n</code></pre>\n\n<p>The three elements have to be nested like so:</p>\n\n<pre><code>&lt;div class=\"container\"&gt;\n  &lt;div class=\"helper\"&gt;\n    &lt;div class=\"content\"&gt;&lt;!--stuff--&gt;&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/ovfiddle/yVAW9/\">Fiddled</a> and works fine according to browsershot.</p>\n",
                    "is_accepted": true,
                    "score": 61
                },
                {
                    "body": "<p>Here's the best solution I've found: <a href=\"http://jsfiddle.net/shshaw/yWnZ2/21/\">http://jsfiddle.net/shshaw/yWnZ2/21/</a> Works in Chrome, Firefox, Safari, and IE8-10, with a few caveats for IE8/9 and Mobile Safari.</p>\n\n<p>If you have a declared width/height, then all you need for vertical centering is this:</p>\n\n<pre><code>.message {\n    margin: auto;\n    position: absolute;\n    top: 0; bottom: 0; left: 0; right: 0;\n}\n</code></pre>\n\n<p>To get around declaring a height, just add <code>display: table;</code> and it will be vertically centered regardless of content height, but this breaks IE8/9 compatibility. You'll usually want to specify a width so the content doesn't stretch the whole length of the screen/container.</p>\n\n<p>If you're using this for a modal that you want always centered in the viewport overlapping other content, use <code>position: fixed;</code> for both elements instead of <code>absolute</code>. <a href=\"http://jsfiddle.net/shshaw/yWnZ2/22/\">http://jsfiddle.net/shshaw/yWnZ2/22/</a></p>\n\n<p>Here's a more complete writeup: <a href=\"http://codepen.io/shshaw/pen/gEiDt\">http://codepen.io/shshaw/pen/gEiDt</a></p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>I know the question is from 2012, but I found the easiest way ever, and I wanted to share.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"parent\"&gt;\n     &lt;div id=\"child\"&gt;Content here&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>and CSS:</p>\n\n<pre><code>#parent{\n     height: 100%;\n     display: table;\n}    \n#child {\n     display: table-cell;\n     vertical-align: middle; \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Since this question was asked in 2012 and we have come a long way with browser support for flexboxes, I felt as though this answer was obligatory.</p>\n\n<p>If the display of your parent container is <code>flex</code>, then <strong>yes</strong>, <code>margin: auto auto</code> will work to center it both horizontally and vertically, regardless if it is an <code>inline</code> or <code>block</code> element.</p>\n\n<p>Example HTML:</p>\n\n<pre><code>&lt;div id=\"parent\"&gt;\n    &lt;div id=\"child\"&gt;hello world&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Example CSS:</p>\n\n<pre><code>#parent {\n    width: 200px;\n    height: 200px;\n    display: flex;\n}\n#child {\n    margin: auto;\n}\n</code></pre>\n\n<p>Note that the width/height do not have to be specified absolutely, as in this <strong><em><a href=\"http://jsfiddle.net/yea6r8n4/\" rel=\"nofollow\">example jfiddle</a></em></strong> which uses sizing relative to the viewport.</p>\n\n<p>Although browser support for flexboxes is at an all-time high at time of posting, many browsers still do not support it or require vendor prefixes. Refer to <a href=\"http://caniuse.com/flexbox\" rel=\"nofollow\">http://caniuse.com/flexbox</a> for updated browser support information.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>So I know we can center a div horizontally if we use <code>margin:0 auto;</code>. Should <code>margin:auto auto;</code> work how I think it should work? Centering it vertically as well? </p>\n\n<p>Why doesn't <code>vertical-align:middle;</code> work either?</p>\n\n<p><a href=\"http://jsfiddle.net/yWnZ2/\">jsFiddle</a></p>\n",
            "last_activity_date": 1411943743,
            "question_id": 12415661,
            "score": 32,
            "tags": [
                "html",
                "css",
                "html5"
            ],
            "title": "Using margin:auto to vertically align div"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>It's limiting the styles defined there to the screen (eg not print or some other media) and is further limiting the scope to viewports which are 1024px or less in width.</p>\n\n<p><a href=\"http://www.css3.info/preview/media-queries/\">http://www.css3.info/preview/media-queries/</a></p>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>It says: When the page render on the screen at a resolution of max 1024 pixels in width then apply the rule that follow.</p>\n\n<p>As you may already know in fact you can target some CSS to a media type that can be one of handheld, screen, printer and so on. </p>\n\n<p>Have a look <a href=\"http://www.w3.org/TR/CSS2/media.html\">here</a> for details..</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>That's <a href=\"http://www.w3.org/TR/css3-mediaqueries/#media0\" rel=\"nofollow\">Media Queries</a>. It allows you to apply part of CSS rules only to the specific devices on specific configuration.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>That\u2019s a media query. It prevents the CSS inside it from being run unless the browser passes the tests it contains.</p>\n\n<p>The tests in this media query are:</p>\n\n<ol>\n<li><p><code>@media screen</code> \u2014 The browser identifies itself as being in the \u201cscreen\u201d category. This roughly means the browser considers itself desktop-class \u2014 as opposed to e.g. an <em>older</em> mobile phone browser (note that the iPhone, and other smartphone browsers, <em>do</em> identify themselves as being in the screen category), or a screenreader \u2014 and that it\u2019s displaying the page on-screen, rather than printing it.</p></li>\n<li><p><code>max-width: 1024px</code> \u2014 the width of the browser window (including the scroll bar) is 1024 pixels or less. (<a href=\"http://www.quirksmode.org/mobile/viewports.html\">CSS pixels, not device pixels</a>.)</p></li>\n</ol>\n\n<p>That second test suggests this is intended to limit the CSS to the iPad, iPhone, and similar devices (because some older browsers don\u2019t support <code>max-width</code> in media queries, and a lot of desktop browsers are run wider than 1024 pixels).</p>\n\n<p>However, it will also apply to desktop browser windows less than 1024 pixels wide, in browsers that support the <code>max-width</code> media query.</p>\n\n<p>Here\u2019s the Media Queries spec, it\u2019s pretty readable:</p>\n\n<ul>\n<li><a href=\"http://www.w3.org/TR/css3-mediaqueries/\">http://www.w3.org/TR/css3-mediaqueries/</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 192
                },
                {
                    "body": "<p>It means if the screen size is 1024 then only apply below CSS rules.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If your media qruery condition is true then your css with that condition value will work that means css pixels within your media query condition pixels, otherwise condition will false  if device width is greater than 1024px and css will not work.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In my case I wanted to center my logo on a website when the browser has <code>800px</code> or less, then I did this by using the <code>@media</code> tag:</p>\n\n<pre><code>@media screen and (max-width: 800px) {\n  #logo {\n    float: none;\n    margin: 0;\n    text-align: center;\n    display: block;\n    width: auto;\n  }\n}\n</code></pre>\n\n<p>It worked for me, hope somebody find this solution useful. :) For more information see <a href=\"http://www.w3schools.com/css/css_mediatypes.asp\" rel=\"nofollow\">this</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I found this piece of code in a CSS file I inherited, but I can't make any sense out of it:</p>\n\n<pre><code>@media screen and (max-width: 1024px){\n    img.bg {\n        left: 50%;\n        margin-left: -512px; }\n}\n</code></pre>\n\n<p>Specifically, what is happening on the first line?</p>\n",
            "last_activity_date": 1425271540,
            "question_id": 4189868,
            "score": 135,
            "tags": [
                "css",
                "css3",
                "media-queries"
            ],
            "title": "What does @media screen and (max-width: 1024px) mean in CSS?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>CSS3: <a href=\"http://webdesign.about.com/od/styleproperties/p/blspbgsize.htm\">http://webdesign.about.com/od/styleproperties/p/blspbgsize.htm</a></p>\n\n<pre><code>.style1{\n   ...\n   background-size:100%;\n}\n</code></pre>\n\n<p>You can specify just width or height with:</p>\n\n<pre><code>background-size:100% 50%;\n</code></pre>\n\n<p>Which will stretch it 100% of the width and 50% of the height.</p>\n\n<hr>\n\n<p><strong>Browser support:</strong> <a href=\"http://caniuse.com/#feat=background-img-opts\">http://caniuse.com/#feat=background-img-opts</a></p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>You can't stretch a background image (until CSS 3).</p>\n\n<p>You would have to use absolute positioning, so that you can put an image tag inside the cell and stretch it to cover the entire cell, then put the content on top of the image.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>.style1 {\n        background: url(images/bg.jpg) no-repeat center center fixed;\n        -webkit-background-size: cover;\n        -moz-background-size: cover;\n        -o-background-size: cover;\n        background-size: cover;\n}\n</code></pre>\n\n<p>Works in:</p>\n\n<ul>\n<li>Safari 3+ </li>\n<li>Chrome Whatever+ </li>\n<li>IE 9+ </li>\n<li>Opera 10+ (Opera 9.5 supported background-size but not the keywords)</li>\n<li>Firefox 3.6+ (Firefox 4 supports non-vendor prefixed version)</li>\n</ul>\n\n<p>In addition you can try this for an ie solution</p>\n\n<pre><code>    filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='.myBackground.jpg', sizingMethod='scale');\n    -ms-filter: \"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='myBackground.jpg', sizingMethod='scale')\";\n    zoom:1;\n</code></pre>\n\n<p>Credit to this article by Chris Coyier\n<a href=\"http://css-tricks.com/perfect-full-page-background-image/\">http://css-tricks.com/perfect-full-page-background-image/</a></p>\n",
                    "is_accepted": true,
                    "score": 132
                },
                {
                    "body": "<p>I think what you are looking for is</p>\n\n<pre><code>.style1 {\n    background: url('http://localhost/msite/images/12.PNG');\n    background-repeat: no-repeat;\n    background-position: center;\n    -webkit-background-size: contain;\n    -moz-background-size: contain;\n    -o-background-size: contain;\n    background-size: contain;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code>&lt;td class=\"style1\" align='center' height='35'&gt;\n    &lt;div style='overflow: hidden; width: 230px;'&gt;\n        &lt;a class='link' herf='' onclick='topic(&lt;?=$key;?&gt;)'&gt;\n        &lt;span id='name&lt;?=$key;?&gt;'&gt;&lt;?=$name;?&gt;&lt;/span&gt; &lt;/a&gt;\n    &lt;/div&gt;\n&lt;/td&gt;\n</code></pre>\n\n<p>This is my CSS script</p>\n\n<pre><code>.style1 {\n    background-image:url('http://localhost/msite/images/12.PNG');\n    background-repeat:no-repeat;\n    background-position:left center;\n    }\n</code></pre>\n\n<p>I want to stretch the <code>background-image</code> all over the <code>&lt;td&gt;</code> cell</p>\n",
            "last_activity_date": 1390493827,
            "question_id": 5662735,
            "score": 72,
            "tags": [
                "html",
                "css",
                "background"
            ],
            "title": "Stretch background image css?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Use a comma to specify two (or more) different rules:</p>\n\n<pre><code>@media screen and (max-width: 995px) , screen and (max-height: 700px) {\n  ...\n}\n</code></pre>\n\n<p>From <a href=\"https://developer.mozilla.org/en/CSS/Media_queries/\">https://developer.mozilla.org/en/CSS/Media_queries/</a></p>\n\n<blockquote>\n  <p>...In addition, you can combine multiple media queries in a comma-separated list; if any of the media queries in the list is true, the associated style sheet is applied.  This is the equivalent of a logical \"or\" operation.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 230
                },
                {
                    "body": "<h1><strong>CSS Media Queries &amp; Logical Operators: A Brief Overview ;)</strong></h1>\n\n<p>This is a lot, but I've tried to make it information dense, not just fluffy writing. It's been a good chance to learn myself! <em>Take the time to systematically read though and I hope it will be helpful.</em></p>\n\n<hr>\n\n<h2>Media Queries</h2>\n\n<p><strong>Media queries essentially are used in web design to create device- or situation-specific browsing experiences; this is done using the <code>@media</code> declaration within a page's <a href=\"http://en.wikipedia.org/wiki/Css\">CSS</a>.</strong> This can be used to display a webpage differently under a large number of circumstances: whether you are on a tablet or TV with different aspect ratios, whether your device has a color or black-and-white screen, or, perhaps most frequently, when a user changes the size of their browser or switches between browsing devices with varying screen sizes (very generally speaking, designing like this is referred to as <a href=\"http://en.wikipedia.org/wiki/Responsive_Web_Design\">Responsive Web Design</a>)</p>\n\n<h2>Logical Operators</h2>\n\n<p>In designing for these situations, there appear to be <strong><em>four Logical Operators</em></strong> that can be used to require more complex combinations of requirements when targeting a variety of devices or <a href=\"http://en.wikipedia.org/wiki/Viewport#Computing\">viewport</a> sizes.</p>\n\n<p><em>(Note: If you don't understand the the differences between media rules, media queries, and feature queries, browse the bottom section of this answer first to get a bit better acquainted with the terminology associated with media query syntax</em></p>\n\n<p><strong>1. AND (<em>and</em> keyword)</strong></p>\n\n<p>Requires that <strong>all conditions specified must be met</strong> before the styling rules will take effect.</p>\n\n<p><code>@media screen and (min-width: 700px) and (orientation: landscape) { ... }</code></p>\n\n<p>The specified styling rules won't go into place unless <em>all</em> of the following evaluate as true:</p>\n\n<ul>\n<li>The media type is 'screen' <em>and</em></li>\n<li>The viewport is at least 700px wide <em>and</em></li>\n<li>Screen orientation is currently landscape.</li>\n</ul>\n\n<p>Note: I believe that used together, these three <em>feature queries</em> make up a single <em>media query</em>.</p>\n\n<p><strong>2. OR (<em>Comma-separated lists</em>)</strong></p>\n\n<p>Rather than an <em>or</em> keyword, comma-separated lists are used in chaining multiple media queries together to form a more complex media rule</p>\n\n<p><code>@media handheld, (min-width: 650px), (orientation: landscape) { ... }</code></p>\n\n<p>The specified styling <strong>rules will go into effect once <em>any one</em> media query evaluates as true</strong>:</p>\n\n<ol>\n<li>The media type is 'handheld' <em>or</em></li>\n<li>The viewport is at least 650px wide <em>or</em></li>\n<li>Screen orientation is currently landscape.</li>\n</ol>\n\n<p><strong>3. NOT (<em>not</em> keyword)</strong></p>\n\n<p>The <em>not</em> keyword can be <strong>used to negate a single <em>media query</em></strong> (and NOT a full media <em>rule</em>--meaning that it only negates entries between a set of commas and not the full media rule following the @media declaration). </p>\n\n<p>Similarly, <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries#not\">note</a> that the <em>not</em> keyword negates media queries, it <em>cannot</em> be used to negate an individual feature query within a media query.*</p>\n\n<p><code>@media not screen and (min-resolution: 300dpi), (min-width: 800px) { ... }</code></p>\n\n<p>The styling specified here will go into effect if</p>\n\n<ol>\n<li>The media type AND min-resolution <em>don't both</em> meet their requirements ('screen' and '300dpi' respectively) <em>or</em></li>\n<li>The viewport is at least 800 pixels wide.</li>\n</ol>\n\n<p>In other words, if the media type is 'screen' and the min-resolution is 300 dpi, the rule will <em>not</em> go into effect unless the min-width of the viewport is at least 800 pixels.</p>\n\n<p>(The not keyword can be a little funky to state. Let me know if I can do better. ;)</p>\n\n<p><strong>4. ONLY (<em>only</em> keyword)</strong></p>\n\n<p>As I understand it, the <em>only</em> keyword is <strong>used to prevent older browsers from misinterpreting newer media queries</strong> as the earlier-used, narrower media type. When used correctly, older/non-compliant browsers should just ignore the styling altogether.</p>\n\n<p><code>&lt;link rel=\"stylesheet\" media=\"only screen and (color)\" href=\"example.css\" /&gt;</code></p>\n\n<p>An older / non-compliant browser would just ignore this line of code altogether, I believe as it would read the <em>only</em> keyword and consider it an incorrect media <em>type</em>. (See <a href=\"http://stackoverflow.com/a/9286360/1963978\">here</a> and <a href=\"http://stackoverflow.com/q/8549529/1963978\">here</a> for more info from smarter people) </p>\n\n<p><strong>FOR MORE INFO</strong></p>\n\n<p>For more info (including more features that can be queried), see: <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries#Logical_operators\">https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries#Logical_operators</a></p>\n\n<hr>\n\n<h2>Understanding Media Query Terminology</h2>\n\n<p>Note: I needed to learn the following terminology for everything here to make sense, particularly concerning the <em>not</em> keyword. Here it is as I understand it:</p>\n\n<p>A <strong>media <em>rule</em></strong> (MDN also seems to call these media statements) includes the term <code>@media</code> with all of its ensuing media queries</p>\n\n<p><code>@media all and (min-width: 800px)</code></p>\n\n<p><code>@media only screen and (max-resolution:800dpi), not print</code></p>\n\n<p><code>@media screen and (min-width: 700px), (orientation: landscape)</code></p>\n\n<p><code>@media handheld, (min-width: 650px), (min-aspect-ratio: 1/1)</code></p>\n\n<p>A <strong>media <em>query</em></strong> is a set of feature queries. They can be as simple as one feature query or they can use the <em>and</em> keyword to form a more complex query. Media queries can be comma-separated to form more complex media rules (see the <em>or</em> keyword above).</p>\n\n<p><code>screen</code> (Note: Only one feature query in use here.)</p>\n\n<p><code>only screen</code></p>\n\n<p><code>only screen and (max-resolution:800dpi)</code></p>\n\n<p><code>only tv and (device-aspect-ratio: 16/9) and (color)</code></p>\n\n<p>NOT <code>handheld, (min-width: 650px)</code>. (Note the comma: there are two media queries here.)</p>\n\n<p>A <strong>feature <em>query</em></strong> is the most basic portion of a media rule and simply concerns a given feature and its status in a given browsing situation.</p>\n\n<p><code>screen</code></p>\n\n<p><code>(min-width: 650px)</code></p>\n\n<p><code>(orientation: landscape)</code></p>\n\n<p><code>(device-aspect-ratio: 16/9)</code></p>\n\n<hr>\n\n<p>Code snippets and information derived from: </p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries\">CSS media queries</a> by <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries%24history?page=1\">Mozilla Contributors</a> (licensed under <a href=\"http://creativecommons.org/licenses/by-sa/2.5/\">CC-BY-SA 2.5</a>). Some code samples were used with minor alterations to (hopefully) increase clarity of explanation.</p>\n",
                    "is_accepted": false,
                    "score": 35
                }
            ],
            "body": "<p>Is there anyway you can specify multiple conditions. I.e.: <code>max-width:995px</code> <em>OR</em> <code>max-height:700px</code>.</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>@media screen and (max-width: 995px) {\n  header { ... }\n  footer { ... }\n  ...\n}\n</code></pre>\n",
            "last_activity_date": 1404385616,
            "question_id": 11404744,
            "score": 99,
            "tags": [
                "css",
                "media-queries"
            ],
            "title": "Media queries: max-width OR max-height"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Yes there is! I'm so glad you asked this question because I now want to use this too.</p>\n\n<p>+1 for question, and here's your answer :)</p>\n\n<p><a href=\"http://www.lalit.org/lab/javascript-css-font-detect\">http://www.lalit.org/lab/javascript-css-font-detect</a></p>\n\n<p><strong>Code</strong> from <a href=\"http://www.lalit.org/wordpress/wp-content/uploads/2008/05/fontdetect.js?ver=0.3\">http://www.lalit.org/wordpress/wp-content/uploads/2008/05/fontdetect.js?ver=0.3</a></p>\n\n<pre><code>/**\n * JavaScript code to detect available availability of a\n * particular font in a browser using JavaScript and CSS.\n *\n * Author : Lalit Patel\n * Website: http://www.lalit.org/lab/javascript-css-font-detect/\n * License: Apache Software License 2.0\n *          http://www.apache.org/licenses/LICENSE-2.0\n * Version: 0.15 (21 Sep 2009)\n *          Changed comparision font to default from sans-default-default,\n *          as in FF3.0 font of child element didn't fallback\n *          to parent element if the font is missing.\n * Version: 0.2 (04 Mar 2012)\n *          Comparing font against all the 3 generic font families ie,\n *          'monospace', 'sans-serif' and 'sans'. If it doesn't match all 3\n *          then that font is 100% not available in the system\n * Version: 0.3 (24 Mar 2012)\n *          Replaced sans with serif in the list of baseFonts\n */\n\n/**\n * Usage: d = new Detector();\n *        d.detect('font name');\n */\nvar Detector = function() {\n    // a font will be compared against all the three default fonts.\n    // and if it doesn't match all 3 then that font is not available.\n    var baseFonts = ['monospace', 'sans-serif', 'serif'];\n\n    //we use m or w because these two characters take up the maximum width.\n    // And we use a LLi so that the same matching fonts can get separated\n    var testString = \"mmmmmmmmmmlli\";\n\n    //we test using 72px font size, we may use any size. I guess larger the better.\n    var testSize = '72px';\n\n    var h = document.getElementsByTagName(\"body\")[0];\n\n    // create a SPAN in the document to get the width of the text we use to test\n    var s = document.createElement(\"span\");\n    s.style.fontSize = testSize;\n    s.innerHTML = testString;\n    var defaultWidth = {};\n    var defaultHeight = {};\n    for (var index in baseFonts) {\n        //get the default width for the three base fonts\n        s.style.fontFamily = baseFonts[index];\n        h.appendChild(s);\n        defaultWidth[baseFonts[index]] = s.offsetWidth; //width for the default font\n        defaultHeight[baseFonts[index]] = s.offsetHeight; //height for the defualt font\n        h.removeChild(s);\n    }\n\n    function detect(font) {\n        var detected = false;\n        for (var index in baseFonts) {\n            s.style.fontFamily = font + ',' + baseFonts[index]; // name of the font along with the base font for fallback.\n            h.appendChild(s);\n            var matched = (s.offsetWidth != defaultWidth[baseFonts[index]] || s.offsetHeight != defaultHeight[baseFonts[index]]);\n            h.removeChild(s);\n            detected = detected || matched;\n        }\n        return detected;\n    }\n\n    this.detect = detect;\n};\n</code></pre>\n\n<p><strong>Summary</strong></p>\n\n<blockquote>\n  <p>How does it work?</p>\n  \n  <p>This code works on the simple principle that each character appears\n  differently in different fonts. So different fonts will take different\n  width and height for the same string of characters of same font-size.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>The JavaScript version is a bit flaky. It gets fonts by iterating through known fonts and testing. </p>\n\n<p>The most accurate way (albeit having to use a propriety plugin) is to <a href=\"http://hasseg.org/blog/post/526/getting-a-list-of-installed-fonts-with-flash-and-javascript/\">use Flash</a>. Here you can get the list of fonts without having to test for them individually using dimensions.</p>\n\n<p>You are going have to decide whether to have an exact list at the expense of not working on some devices ( iDevices, browsers without Flash plugin, etc), or a <a href=\"http://stackoverflow.com/a/3368855/31671\">partial list with better support via JavaScript only</a>.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<pre><code>&lt;SCRIPT&gt;\n    function getFonts()\n    {\n        var nFontLen = dlgHelper.fonts.count;\n        var rgFonts = new Array();\n        for ( var i = 1; i &lt; nFontLen + 1; i++ )\n            rgFonts[i] = dlgHelper.fonts(i); \n\n        rgFonts.sort();\n        for ( var j = 0; j &lt; nFontLen; j++ )\n            document.write( rgFonts[j] + \"&lt;BR&gt;\" );\n    }\n&lt;/SCRIPT&gt;\n\n&lt;BODY onload=\"getFonts()\"&gt;\n&lt;OBJECT id=dlgHelper CLASSID=\"clsid:3050f819-98b5-11cf-bb82-00aa00bdce0b\" width=\"0px\" height=\"0px\"&gt;\n&lt;/OBJECT&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In my search for this, I also found <a href=\"https://github.com/Pomax/Font.js\" rel=\"nofollow\">Font.js</a>, which adds a Font object much like Image, so it's possible to check when a font is actually ready to use. Also works on installed/system fonts. Downside is IE9+ only due to needing <code>Object.defineProperty</code> (other browsers have it), but if you are doing modern web, this seems like an even better option. (I will, sadly, have to go with the answer above, upvoted and moving on for now. :))</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way in javascript to obtain the names of all fonts (or font-families) that the browser can show?  (I want to give the user a dropdown with a list of all available fonts, and allow the user to choose a font.)\nI'd prefer not to have to hardcode this list ahead of time or send it down from the server.  (Intuitively, it seems like the browser should know what fonts it has and this should be exposed to javascript somehow.)</p>\n",
            "last_activity_date": 1419944135,
            "question_id": 3368837,
            "score": 37,
            "tags": [
                "javascript",
                "css",
                "browser",
                "fonts",
                "detection"
            ],
            "title": "list every font a user&#39;s browser can display"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>There is no vertical equivalent to the <a href=\"http://www.w3.org/TR/1999/REC-html401-19991224/present/graphics.html#h-15.3\"><code>&lt;hr&gt;</code></a> element. However, one approach you may want to try is to use a simple border to the left or right of whatever you are separating:</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n   #your_col {\n      border-left: 1px solid black;\n   }\n&lt;/style&gt;\n\n&lt;div id=\"your_col\"&gt;\n   Your content here\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Put a div around the markup where you want the line to appear to next and use CSS to style it:</p>\n\n<pre><code>&lt;div class=\"verticalLine\"&gt;\n\nsome other content\n\n&lt;/div&gt;\n</code></pre>\n\n<p>in CSS:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.verticalLine {\n    border-left: thick solid #ff0000;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 200
                },
                {
                    "body": "<p>There isn't any tag to create a vertical line in HTML. </p>\n\n<ol>\n<li><p>Method: You load a line image. Then you set its style like <code>\"height: 100px ; width: 2px\"</code> </p></li>\n<li><p>Method: You can use <code>&lt;td&gt;</code> tags <code>&lt;td style=\"border-left: 1px solid red; padding: 5px;\"&gt; X &lt;/td&gt;</code></p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>One other option is to use a 1-pixel image, and set the height - this option would allow you to float it to where you need to be.</p>\n\n<p>Not the most elegant solution though.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You can use an empty <code>&lt;div&gt;</code> that is styled exactly like you want the line to appear:</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;div class=\"vertical-line\" /&gt;\n</code></pre>\n\n<p>With exact height (overriding style in-line):</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;div class=\"vertical-line\" style=\"height: 45px;\" /&gt;\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre class=\"lang-css prettyprint-override\"><code>div.vertical-line{\n  width: 1px; /* Line width */\n  background-color: black; /* Line color */\n  height: 100%; /* Override in-line if you want specific height. */\n  float: left; /* Causes the line to float to left of content. \n    You can instead use position:absolute or display:inline-block\n    if this fits better with your design */\n}\n</code></pre>\n\n<p>Style the border if you want 3D look:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>div.vertical-line{\n  width: 0px; /* Use only border style */\n  height: 100%;\n  float: left; \n  border: 1px inset; /* This is default border style for &lt;hr&gt; tag */\n}\n</code></pre>\n\n<p>You can of course also experiment with advanced combinations:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>div.vertical-line{\n  width: 1px;\n  background-color: silver;\n  height: 100%;\n  float: left;\n  border: 2px ridge silver ;\n  border-radius: 2px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>You can use the horizontal rule tag to create vertical lines. <code>&lt;hr width=\"1\" size=\"500\"&gt;</code> By using minimal width and large size, horizontal rule becomes a vertical one.</p>\n",
                    "is_accepted": false,
                    "score": 97
                },
                {
                    "body": "<p>To make the vertical line to center in the middle use:</p>\n\n<pre><code>position: absolute; \nleft: 50%;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Why not use &amp;#124, which is the html special character for |</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can also make a vertical line using HTML horizontal line <code>&lt;hr /&gt;</code> </p>\n\n<pre><code>&lt;hr class=\"vertical\"/&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>hr.vertical\n{\n   width: 0px;\n   height: 100%; /* or height in PX */\n} \n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/8v1cpb0u/\">Working Example</a></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>to add a vertical line you need to style an hr \n<br/>\nnow when you make a vertical line it will appear in the middle of the page :<br/>\n<code>&lt;hr style=\"width:0.5px;height:500px;\"/&gt;</code><br/>\nnow to put it where you want you can use this code:<br/>\n<code>&lt;hr style=\"width:0.5px;height:500px;margin-left:-500px;margin-right:500px;\"/&gt;</code><br/>\nthis will position it to the left , you can inverse it to position it to the right<br/>\nwelcome </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I used a combination of the \"hr\" code suggested, and here's what my code looks like:</p>\n\n<pre><code>&lt;hr style=\"width:0.5px; height:500px; position: absolute; left: 315px;\"/&gt;\n</code></pre>\n\n<p>I simply changed the value of the \"left\" pixel value to position it. (I used the vertical line to line-up content on my webpage, and then I removed it.)</p>\n\n<p>Thanks to all for posting their solutions!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To create a vertical line centered inside a div I think you can use this code. \nThe 'container' may well be 100% width, I guess.</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"vertical-line\"&gt;&amp;nbsp;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>div.container{\n    width: 400px;\n}\ndiv.vertical-line{\n    border-left: 1px solid #808080;\n    height: 350px;\n    margin-left: auto;\n    margin-right: auto;\n    width: 1px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use hr (horizontal line) tag and than rotate it 90 degree with css below</p>\n\n<pre><code>hr {   \n    transform:rotate(90deg);\n    -o-transform:rotate(90deg);\n    -moz-transform:rotate(90deg);\n    -webkit-transform:rotate(90deg);\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/haykaghabekyan/0c969bm6/1/\" rel=\"nofollow\">http://jsfiddle.net/haykaghabekyan/0c969bm6/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How Do you make a vertical line using HTML?</p>\n",
            "last_activity_date": 1411448975,
            "question_id": 3148415,
            "score": 110,
            "tags": [
                "html",
                "css",
                "design",
                "web"
            ],
            "title": "How to make a vertical line in HTML"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Normally you would select IDs using the ID selector <code>#</code>, but for more complex matches you can use the attribute-starts-with selector (as a <a href=\"http://api.jquery.com/attribute-starts-with-selector\">jQuery selector</a>, or as a CSS3 selector):</p>\n\n<pre><code>div[id^=\"player_\"]\n</code></pre>\n\n<p>If you are able to modify that HTML, however, you should add a class to your player <code>div</code>s then target that class. You'll lose the additional specificity offered by ID selectors anyway, as attribute selectors share the same specificity as class selectors. Plus, just using a class makes things much simpler.</p>\n",
                    "is_accepted": true,
                    "score": 165
                },
                {
                    "body": "<p>try this:</p>\n\n<pre><code>$('div[id^=\"player_\"]')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>You can use meta characters like <code>*</code> (<a href=\"http://api.jquery.com/category/selectors/\">http://api.jquery.com/category/selectors/</a>).\nSo I think you just can use <code>$('#player_*')</code>.</p>\n\n<p>In your case you could also try the \"Attribute starts with\" selector:\n<a href=\"http://api.jquery.com/attribute-starts-with-selector/\">http://api.jquery.com/attribute-starts-with-selector/</a>: <code>$('div[id^=\"player_\"]')</code></p>\n",
                    "is_accepted": false,
                    "score": 17
                }
            ],
            "body": "<p>How can I select all elements whose <code>id</code> starts with \"player_\"?</p>\n\n<p>I have multiple elements like this:</p>\n\n<pre><code>&lt;div id=\"player_290x3dfda\"&gt;text&lt;/div&gt;\n</code></pre>\n\n<p>Every <code>id</code> has a unique stamp on it. How can I select all those elements, either with jQuery or with pure CSS?</p>\n",
            "last_activity_date": 1404264820,
            "question_id": 5002966,
            "score": 88,
            "tags": [
                "jquery",
                "css",
                "jquery-selectors",
                "css-selectors"
            ],
            "title": "jQuery or CSS selector to select all IDs that start with some string"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<pre><code>&lt;textarea style=\"width:100px; word-wrap:break-word;\"&gt;\n  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n&lt;/textarea&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 99
                },
                {
                    "body": "<p>I don't think you can do this with CSS. Instead, at regular 'word lengths' along the string, insert an HTML soft-hyphen:</p>\n\n<pre><code>ACTGATCG&amp;shy;AGCTGAAG&amp;shy;CGCAGTGC&amp;shy;GATGCTTC&amp;shy;GATGATGC&amp;shy;TGACGATG\n</code></pre>\n\n<p>This will display a hyphen at the end of the line, where it wraps, which may or may not be what you want.</p>\n\n<p>Note Safari seems to wrap the long string in a <code>&lt;textarea&gt;</code> anyway, unlike Firefox.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Place <a href=\"http://en.wikipedia.org/wiki/Zero%5FWidth%5FSpace\">zero-width spaces</a> at the points where you want to allow breaks. The zero-width space is <code>&amp;#8203;</code> in HTML. For example:</p>\n\n<p><code>ACTGATCG&amp;#8203;AGCTGAAG&amp;#8203;CGCAGTGC&amp;#8203;GATGCTTC&amp;#8203;GATGATGC</code></p>\n",
                    "is_accepted": false,
                    "score": 56
                },
                {
                    "body": "<p>For me this works,</p>\n\n<pre><code>&lt;td width=\"170px\" style=\"word-wrap:break-word;\"&gt;\n  &lt;div style=\"width:140px;overflow:auto\"&gt;\n    LONGTEXTGOESHERELONGDIVGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESLONGTEXTGOESHERELONGDIVLONGTEXTLONGTEXT\n  &lt;/div&gt;\n&lt;/td&gt;\n</code></pre>\n\n<p>You can also use a div inside another  div instead of <code>td</code>. I used <code>overflow:auto</code>, as it shows all the text both in my Opera and IE browsers.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>For <code>word-wrap:break-word;</code> to work for me, I had to make sure the <code>display</code> was set to <code>block</code>, and that the width was set on the element. In Safari, it had to have a <code>p</code> tag and the <code>width</code> had to be set in <code>ex</code>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you're using PHP then the wordwrap function works well for this:\n<a href=\"http://php.net/manual/en/function.wordwrap.php\" rel=\"nofollow\">http://php.net/manual/en/function.wordwrap.php</a></p>\n\n<p>The CSS solution <code>word-wrap: break-word;</code> does not seem to be consistent across all browsers.</p>\n\n<p>Other server-side languages have similar functions - or can be hand built.</p>\n\n<p>Here's how the the PHP wordwrap function works:</p>\n\n<pre><code>$string = \"ACTGATCGAGCTGAAGCGCAGTGCGATGCTTCGATGATGCTGACGATGCTACGATGCGAGCATCTACGATCAGTCGATGTAGCTAGTAGCATGTAGTGA\";\n\n$wrappedstring = wordwrap($string,50,\"&amp;lt;br&amp;gt;\",true);\n</code></pre>\n\n<p>This wraps the string at 50 characters with a &lt;br&gt; tag. The 'true' parameter forces the string to be cut.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use a CSS method to force wrap a string that has no white-spaces. Three methods:</p>\n\n<p>1) Use the CSS white-space property. To cover browser inconsistencies, you have to declare it several ways. So just put your looooong string into some block level element (e.g., div, pre, p) and give that element the following css:</p>\n\n<pre><code>some_block_level_tag {\n    white-space: pre;           /* CSS 2.0 */\n    white-space: pre-wrap;      /* CSS 2.1 */\n    white-space: pre-line;      /* CSS 3.0 */\n    white-space: -pre-wrap;     /* Opera 4-6 */\n    white-space: -o-pre-wrap;   /* Opera 7 */\n    white-space: -moz-pre-wrap; /* Mozilla */\n    white-space: -hp-pre-wrap;  /* HP Printers */\n    word-wrap: break-word;      /* IE 5+ */\n}\n</code></pre>\n\n<p>2)  use the <a href=\"http://compass-style.org/reference/compass/typography/text/force-wrap/\">force-wrap mixin from Compass</a>. </p>\n\n<p>3) I was just looking into this as well and I think might also work (but I need to test browser support more completely):</p>\n\n<pre><code>.break-me {\n    word-wrap: break-word;\n    overflow-wrap: break-word;\n}\n</code></pre>\n\n<p>Reference: <a href=\"http://perishablepress.com/wrapping-content/\">wrapping content</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Here are some very useful answers:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/320184/how-to-prevent-long-words-from-breaking-my-div\">How to prevent long words from breaking my div?</a></p>\n\n<p>to save you time, this can be solved with css: </p>\n\n<pre><code>white-space: -moz-pre-wrap; /* Mozilla */\nwhite-space: -hp-pre-wrap; /* HP printers */\nwhite-space: -o-pre-wrap; /* Opera 7 */\nwhite-space: -pre-wrap; /* Opera 4-6 */\nwhite-space: pre-wrap; /* CSS 2.1 */\nwhite-space: pre-line; /* CSS 3 (and 2.1 as well, actually) */\nword-wrap: break-word; /* IE */\nword-break: break-all;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>just setting width:100%; with float:left; worked for me :-)</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>My way to go (when there is no appropiate way to insert special chars) via CSS:</p>\n\n<pre><code>-ms-word-break: break-all;\nword-break: break-all;\nword-break: break-word;\n-webkit-hyphens: auto;\n-moz-hyphens: auto;\n-ms-hyphens: auto;\nhyphens: auto;\n</code></pre>\n\n<p>As found here: <a href=\"http://kenneth.io/blog/2012/03/04/word-wrapping-hypernation-using-css/\" rel=\"nofollow\">http://kenneth.io/blog/2012/03/04/word-wrapping-hypernation-using-css/</a>\nwith some additional research to be found there.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a long string (a DNA sequence). It does not contain any whitespace character. \ne.g.: </p>\n\n<pre><code>ACTGATCGAGCTGAAGCGCAGTGCGATGCTTCGATGATGCTGACGATGCTACGATGCGAGCATCTACGATCAGTCGATGTAGCTAGTAGCATGTAGTGA\n</code></pre>\n\n<p>what would be the css selector to force this text to be wrapped in an html:textarea or in a xul:textbox</p>\n",
            "last_activity_date": 1410874559,
            "question_id": 499137,
            "score": 72,
            "tags": [
                "html",
                "css",
                "string",
                "xul",
                "wrapping"
            ],
            "title": "CSS: how can I force a long string (without any blank) to be wrapped in XUL and/or HTML"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>try using background size: <a href=\"http://webdesign.about.com/od/styleproperties/p/blspbgsize.htm\" rel=\"nofollow\">http://webdesign.about.com/od/styleproperties/p/blspbgsize.htm</a></p>\n\n<p>is there something stopping you from rendering the images at the size you want them in the first place?</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>When you use sprites, you are limited to the dimensions of the image in the sprite. The <code>background-size</code> CSS property, mentioned by Stephen, isn't widely supported yet and might cause problems with browsers like IE8 and below - and given their market share, this isn't a viable option.</p>\n\n<p>Another way to solve the problem is to use two elements and scale the sprite by using it with an <code>img</code> tag, like this:</p>\n\n<pre><code>&lt;div class=\"sprite-image\"\n     style=\"width:20px; height:20px; overflow:hidden; position:relative\"&gt;\n    &lt;!-- set width/height proportionally, to scale the sprite image --&gt;\n    &lt;img src=\"sprite.png\" alt=\"icon\"\n         width=\"20\" height=\"80\"\n         style=\"position:absolute; top: -20px; left: 0;\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>This way, the outer element (<code>div.sprite-image</code>) is cropping a 20x20px image from the <code>img</code> tag, which acts like a scaled <code>background-image</code>.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Here's what I did to do this. Keep in mind it won't work on IE8 and below.</p>\n\n<pre><code>#element {\n  width:100%;\n  height:50px;\n  background:url(/path/to/image.png);\n  background-position:140.112201963534% 973.333333333333%;\n}\n</code></pre>\n\n<p>The background image's width will scale down as the parent of <code>#element</code> scales down. You can do the same with its height, too, if you convert <code>height</code> to a percentage. The only tricky bit are figuring out the percentages for <code>background-position</code>.</p>\n\n<p>The first percentage is the width of the targeted area of the sprite when at normal width divided by the sprite's total width, and multiplied by 100.</p>\n\n<p>The second percentage is the height of the targeted area of the sprite before being scaled divided by the sprite's total height, and multiplied by 100.</p>\n\n<p>The wording on those two equations is a little sloppy, so let me know if you need me to explain it better.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Try this: <a href=\"http://tobyj.net/responsive-sprites/\">http://tobyj.net/responsive-sprites/</a> (demo &amp; explanation)</p>\n\n<p>This method scales sprites 'responsively' so that the width/height adjust according to your browser window size. It <strong>doesn't use</strong> <code>background-size</code> as <a href=\"http://www.css3.info/preview/background-size/\">support</a> for this in older browsers is non-existent.</p>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>.stretchy {display:block; float:left; position:relative; overflow:hidden; max-width:160px;}\n.stretchy .spacer {width: 100%; height: auto;}\n.stretchy .sprite {position:absolute; top:0; left:0; max-width:none; max-height:100%;}\n.stretchy .sprite.s2 {left:-100%;}\n.stretchy .sprite.s3 {left:-200%;}\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;a class=\"stretchy\" href=\"#\"&gt;\n  &lt;img class=\"spacer\" alt=\"\" src=\"spacer.png\"&gt;\n  &lt;img class=\"sprite\" alt=\"icon\" src=\"sprite_800x160.jpg\"&gt;\n&lt;/a&gt;\n&lt;a class=\"stretchy s2\" href=\"#\"&gt;\n  &lt;img class=\"spacer\" alt=\"\" src=\"spacer.png\"&gt;\n  &lt;img class=\"sprite\" alt=\"icon\" src=\"sprite_800x160.jpg\"&gt;\n&lt;/a&gt;\n&lt;a class=\"stretchy s3\" href=\"#\"&gt;\n  &lt;img class=\"spacer\" alt=\"\" src=\"spacer.png\"&gt;\n  &lt;img class=\"sprite\" alt=\"icon\" src=\"sprite_800x160.jpg\"&gt;\n&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>You could use <strong>background-size</strong> if that works for you, as its not supported in all browsers. </p>\n\n<pre><code>background-size : 150% 150%;\n</code></pre>\n\n<p>Or </p>\n\n<p>You can use a combo of <strong>zoom</strong> for webkit/ie and <strong>transform:scale</strong> for Firefox(-moz-) and Opera(-o-) for cross-browser desktop &amp; mobile</p>\n\n<pre><code>[class^=\"icon-\"]{\n    display: inline-block;\n    background: url('../img/icons/icons.png') no-repeat;\n    width: 64px;\n    height: 51px;\n    overflow: hidden;\n    zoom:0.5;\n    -moz-transform:scale(0.5);\n    -moz-transform-origin: 0 0;\n}\n\n.icon-huge{\n    zoom:1;\n    -moz-transform:scale(1);\n    -moz-transform-origin: 0 0;\n}\n\n.icon-big{\n    zoom:0.60;\n    -moz-transform:scale(0.60);\n    -moz-transform-origin: 0 0;\n}\n\n.icon-small{\n    zoom:0.29;\n    -moz-transform:scale(0.29);\n    -moz-transform-origin: 0 0;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p>Well I think found a simpler solution for scaling images :  example - lets say there is an image with 3 equal sized sprites which you would want to use, use CSS to scale the image </p>\n\n<pre><code>background-size : 300% 100%;\n</code></pre>\n\n<p>and then specify the custom height and width that needs to be applied to your html element eg:</p>\n\n<pre><code> width :45%;\n height:100px;\n</code></pre>\n\n<p>A sample code would look something like this :</p>\n\n<pre><code>.customclass {\n    background: url(\"/sample/whatever.png\") 0 0 no-repeat ;\n    background-size : 300% 100%;\n    width :45%;\n    height:100px;\n}\n</code></pre>\n\n<p>im pretty new to css ,and styling is not my best area this could be a wrong way of doing it.. but it worked for me in Firefox/Chrome/Explorer 10 ,hope it works in older versions too..</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>set width and height to wrapper element of sprite image, and set css \n{ bacground-size: cover;} . that's it. </p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>In this article, <a href=\"http://css-tricks.com/css-sprites/\">http://css-tricks.com/css-sprites/</a>, it talks about how can I crop off a smaller image from 1 bigger image.  Can you please tell me if it is possible/how I can crop off a smaller image and then scale the cropped off region before I lay it out?</p>\n\n<p>Here is an example from that article:</p>\n\n<pre><code>A\n{\n  background-image: url(http://www.jaredhirsch.com/coolrunnings/public_images/3deb155981/spriteme1.png);\n  background-position: -10px -56px;\n}\n</code></pre>\n\n<p>I would like to know how can I scale that image after I crop it from from spriteme1.png</p>\n\n<p>Here is the URL of the example:\n<a href=\"http://css-tricks.com/examples/CSS-Sprites/Example1After/\">http://css-tricks.com/examples/CSS-Sprites/Example1After/</a></p>\n\n<p>So I would like to know if I can make the icons next to Item1,2,3,4 smaller?</p>\n",
            "last_activity_date": 1413213351,
            "question_id": 2430206,
            "score": 65,
            "tags": [
                "css",
                "css-sprites"
            ],
            "title": "How can I scale an image in a CSS sprite"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You can't, well, you can. </p>\n\n<pre><code>.pvw-title:after {\n  content: \"Test\";\n}\n</code></pre>\n\n<p>This will insert content <em>after</em> the current content of the element. It doesn't actually replace it, but you can choose for an empty div, and use CSS to add all the content.</p>\n\n<p>But while you more or less can, you shouldn't. Actual content should be put in the document. The content property is mainly intended for small markup, like quotation marks around text that should appear quoted.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This isn't really possible without tricks. Here is a way that works by replacing the text with an image of text.</p>\n\n<pre><code>.pvw-title{\n    text-indent:-9999px;\n    background-image:url(text_image.png)\n}\n</code></pre>\n\n<p>This type of thing is typically done with Javascript. Here is how it can be done with jQuery:</p>\n\n<pre><code>$('.pvw-title').text('new text');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Or maybe you could wrap 'Facts' round a <code>&lt;span&gt;</code> as follows:</p>\n\n<pre><code>&lt;div class=\"pvw-title\"&gt;&lt;span&gt;Facts&lt;/span&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Then use:</p>\n\n<pre><code>.pvw-title span {\n  display: none;\n}\n.pvw-title:after {\n  content: 'whatever it is you want to add';\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 69
                },
                {
                    "body": "<p><strong>Obligatory</strong>: This is a hack: CSS isn't the right place to do this, but if in some situation - eg, you have a third party library in an iframe that can only be customized by CSS - this kind of hack is the only option.</p>\n\n<p>You can. <strong>Let's replace a green button with 'hello' with a red button that says goodbye</strong>, using CSS. See <a href=\"http://jsfiddle.net/ZBj2m/274/\">http://jsfiddle.net/ZBj2m/274/</a> for a live demo:</p>\n\n<p>Here's our green button:</p>\n\n<pre><code>&lt;button&gt;Hello&lt;/button&gt;\n\nbutton {\n  background-color: green;\n  color: black;\n  padding: 5px;\n}\n</code></pre>\n\n<p>Now let's hide the original element, but add another block element afterwards:</p>\n\n<pre><code>button {\n  visibility: hidden;\n}\nbutton:after {\n  content:'goodbye'; \n  visibility: visible;\n  display: block;\n  position: absolute;\n  background-color: red;\n  padding: 5px;\n  top: 2px;\n}\n</code></pre>\n\n<p>Note:</p>\n\n<ul>\n<li>We explicitly need to mark this as a block element, 'after' elements are span by default</li>\n<li>We need to compensate for the original element by adjusting the pseudo-element's position. </li>\n<li>We must hide the original element and display the pseudo element using visibility. Note display: none on the original element doesn't seem to work.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 50
                },
                {
                    "body": "<p>Based on\n<a href=\"http://stackoverflow.com/a/14261898\">mikemaccana\u2019s answer</a>,\nthis worked for me</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>button {\n  position: absolute;\n  visibility: hidden;\n}\n\nbutton:before {\n  content: \"goodbye\";\n  visibility: visible;\n}\n</code></pre>\n\n<p><a href=\"http://developer.mozilla.org/en-US/docs/Web/CSS/position\" rel=\"nofollow\">&sect; Absolute positioning</a></p>\n\n<blockquote>\n  <p>an element that is positioned absolutely is taken out of the flow and thus \n  takes up no space when placing other elements.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>This worked for me with inline text. Tested in FF, Safari, Chrome and Opera</p>\n\n<pre><code>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur &lt;span&gt;Some Text&lt;/span&gt; adipiscing elit.&lt;/p&gt;\n\n\nspan {\nvisibility: hidden;\nword-spacing:-999px;\nletter-spacing: -999px; \n}\n\nspan:after {\ncontent: \"goodbye\";\nvisibility: visible;\nword-spacing:normal;\nletter-spacing:normal; \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you're willing to use pseudo elements and let them insert content, you can do the following. It doesn't assume knowledge of the original element and doesn't require additional markup.</p>\n\n<pre><code>.element {\n  text-indent: -9999px;\n  line-height: 0; /* Collapse the original line */\n}\n\n.element::after {\n  content: \"New text\";\n  text-indent: 0;\n  display: block;\n  line-height: initial; /* New content takes up original line height */\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/jvandyke/U52Tt/\">JSFiddle Example</a></p>\n",
                    "is_accepted": false,
                    "score": 25
                }
            ],
            "body": "<p>How can i replace text trough css using a method like this:</p>\n\n<pre><code>.pvw-title img[src*=\"IKON.img\"] { visibility:hidden; }\n</code></pre>\n\n<p>instead of  (  <code>img[src*=\"IKON.img\"]</code>  ), i need to use something that can replace text instead..</p>\n\n<p>I have to use [  ], to get it to work.</p>\n\n<p><code>&lt;div class=\"pvw-title\"&gt;Facts&lt;/div&gt;</code></p>\n\n<p>I need to replace \"Facts\".</p>\n",
            "last_activity_date": 1424297887,
            "question_id": 7896402,
            "score": 47,
            "tags": [
                "css",
                "text",
                "replace"
            ],
            "title": "How can I replace text through CSS?"
        },
        {
            "answer_count": 23,
            "answers": [
                {
                    "body": "<p>That's going to be very hard. The problem with the file input type is that it usually consists of two visual elements, while being treated as a single DOM-element. Add to that that several browsers have their own distinct look and feel for the file input, and you're set for nightmare. See this <a href=\"http://www.quirksmode.org/dom/inputfile.html\">article on quirksmode.org</a> about the quirks the file input has. I guarantee you it won't make you happy (I speak from experience).</p>\n\n<p>[EDIT]</p>\n\n<p>Actually, I think you might get away with putting your input in a container element (like a div), and adding a negative margin to the element. Effectively hiding the textbox part off screen.\nAnother option would be to use the technique in the article I linked, to try to style it like a button.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Ive a really hacky solution with this...</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt; \n    input[type=\"file\"]\n    { \n        width: 80px;        \n    } \n&lt;/style&gt;\n\n&lt;input id=\"File1\" type=\"file\" /&gt;\n</code></pre>\n\n<p>The problem is the width attribute that is hiding the text field will obvously vary between browsers, vary between Windows XP themes and so on. Maybe its something you can work with though?...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Resolved with the following code:</p>\n\n<p><code>&lt;div style=\"overflow: hidden;width:83px;\"&gt;\n   &lt;input style='float:right;' name=\"userfile\" id=\"userfile\" type=\"file\"/&gt;\n&lt;/div&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>my solution is just to set it within a div like \"druveen\" said, however i ad my own button style to the div (make it look like a button with a:hover) and i just set the style \"opacity:0;\" to the input. Works a charm for me, hope it does the same for you.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Fix to work in all browsers\nRESOLVED:</p>\n\n<pre><code>      &lt;input type = \"button\" value = \"Choose image\" \n       onclick =\"javascript:document.getElementById('imagefile').click();\"&gt;\n      &lt;input id = \"imagefile\" type=\"file\" style='visibility: hidden;' name=\"img\"/&gt;\n</code></pre>\n\n<p>I have tested in FF, Chrome &amp; IE - working fine, applied styles too :D</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I was having a heck of a time trying to accomplish this. I didn't want to use a Flash solution, and none of the jQuery libraries I looked at were reliable across all browsers.</p>\n\n<p>I came up with my own solution, which is implemented completely in CSS (except for the onclick style change to make the button appear 'clicked').</p>\n\n<p><strong>You can try a working example here:</strong> <a href=\"http://jsfiddle.net/VQJ9V/307/\">http://jsfiddle.net/VQJ9V/307/</a> (Tested in FF 7, IE 9, Safari 5, Opera 11 and Chrome 14)</p>\n\n<p>It works by creating a big file input (with font-size:50px), then wrapping it in a div that has a fixed size and overflow:hidden. The input is then only visible through this \"window\" div. The div can be given a background image or color, text can be added, and the input can be made transparent to reveal the div background:</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;div class=\"inputWrapper\"&gt;\n    &lt;input class=\"fileInput\" type=\"file\" name=\"file1\"/&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>.inputWrapper {\n    height: 32px;\n    width: 64px;\n    overflow: hidden;\n    position: relative;\n    cursor: pointer;\n    /*Using a background color, but you can use a background image to represent a button*/\n    background-color: #DDF;\n}\n.fileInput {\n    cursor: pointer;\n    height: 100%;\n    position:absolute;\n    top: 0;\n    right: 0;\n    z-index: 99;\n    /*This makes the button huge. If you want a bigger button, increase the font size*/\n    font-size:50px;\n    /*Opacity settings for all browsers*/\n    opacity: 0;\n    -moz-opacity: 0;\n    filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0)\n}\n</code></pre>\n\n<p>Let me know if there are any problems with it and I'll try to fix them.</p>\n",
                    "is_accepted": false,
                    "score": 48
                },
                {
                    "body": "<p>Hide the input-file element and create a visible button that will trigger the click event of that input-file.</p>\n\n<p>Try this:</p>\n\n<p>CSS</p>\n\n<pre><code>#file { width:0; height:0; } \n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;input type='file' id='file' name='file' /&gt;\n&lt;button id='btn-upload'&gt;Upload&lt;/button&gt;\n</code></pre>\n\n<p>JAVASCRIPT(jQuery):</p>\n\n<pre><code>$(function(){\n    $('#btn-upload').click(function(e){\n        e.preventDefault();\n        $('#file').click();}\n    );\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I wasted my day today getting this to work. I found none of the solutions here working each of my scenarios. </p>\n\n<p>Then I remembered I saw an <a href=\"http://blueimp.github.com/jQuery-File-Upload/\" rel=\"nofollow\">example for the JQuery File Upload</a> without text box. So what I did is that I took their example and stripped it down to the relevant part.</p>\n\n<p>This solution at least works for IE and FF and can be fully styled. In the below example the file input is hidden under the fancy \"Add Files\" button.</p>\n\n<pre><code>&lt;html&gt;\n\n&lt;head&gt;\n    &lt;title&gt;jQuery File Upload Example&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n        .myfileupload-buttonbar input\n        {\n            position: absolute;\n            top: 0;\n            right: 0;\n            margin: 0;\n            border: solid transparent;\n            border-width: 0 0 100px 200px;\n            opacity: 0.0;\n            filter: alpha(opacity=0);\n            -o-transform: translate(250px, -50px) scale(1);\n            -moz-transform: translate(-300px, 0) scale(4);\n            direction: ltr;\n            cursor: pointer;\n        }\n        .myui-button\n        {\n            position: relative;\n            cursor: pointer;\n            text-align: center;\n            overflow: visible;\n            background-color: red;\n            overflow: hidden;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"fileupload\" &gt;\n        &lt;div class=\"myfileupload-buttonbar \"&gt;\n            &lt;label class=\"myui-button\"&gt;\n                &lt;span &gt;Add Files&lt;/span&gt;\n                &lt;input id=\"file\" type=\"file\" name=\"files[]\" /&gt;\n            &lt;/label&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<pre><code>&lt;a href=\"#\" id=\"select_logo\"&gt;Select Logo&lt;/a&gt; &lt;input type=\"file\" id=\"logo\"&gt; \n\n$(\"#logo\").css('opacity','0');\n\n$(\"#select_logo\").click(function(){\n   $().trigger('click');\n   return false;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For me, the simplest way is using a font color like background color. Simple, not elegant, but usefull.</p>\n\n<pre><code>&lt;div style=\"color:#FFFFFF\"&gt;   &lt;!-- if background page is white, of course --&gt;\n&lt;input class=\"fileInput\" type=\"file\" name=\"file1\"/&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;input type=\"file\" id=\"selectedFile\" style=\"display: none;\" /&gt;\n&lt;input type=\"button\" value=\"Browse...\" onclick=\"document.getElementById('selectedFile').click();\" /&gt;\n</code></pre>\n\n<p>This will surely work i have used it in my projects.I hope this helps :)</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>So here's the best way to do this <strong>FOR ALL BROWSERS:</strong></p>\n\n<p>Forget CSS!</p>\n\n<pre><code>&lt;p&gt;Append Image:&lt;/p&gt; \n&lt;input type=\"button\" id=\"clickImage\" value=\"Add Image\" /&gt;\n&lt;input type=\"file\" name=\"images[]\" id=\"images\" multiple /&gt;\n\n&lt;script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n\n&lt;script&gt;\n$('#images').hide();        \n$('#clickImage').click( function() {    \n    $('#images').trigger('click');  \n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>All these answers are cute, but CSS won't work since it isn't the same across all browsers and devices, the first answer I wrote will work in everything but Safari. To get it to work accross all browsers all the time it must be created dynamically and recreated every time you want to clear the input text:</p>\n\n<pre><code>    var imageDiv = document.createElement(\"div\");   \n    imageDiv.setAttribute(\"id\", \"imagediv\");\n    imageDiv.style.cssText = 'position:relative; vertical-align: bottom;';  \n    var imageText = document.createTextNode(\"Append Image:\");\n    var newLine = document.createElement(\"br\"); \n    var image = document.createElement(\"input\");    \n    image.setAttribute(\"type\", \"file\");\n    image.setAttribute(\"id\", \"images\");\n    image.setAttribute(\"name\", \"images[]\");     \n    image.setAttribute(\"multiple\", \"multiple\");\n    imageDiv.appendChild(imageText); \n    imageDiv.appendChild(newLine); \n    imageDiv.appendChild(image); \n    questionParagraph.appendChild(imageDiv);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know this is an old post but a simple way to make the text dissapear is just to set text color to that of your background.</p>\n\n<p>eg if your text input background is white then:</p>\n\n<pre><code>input[type=\"file\"]{\ncolor:#fff;\n}\n</code></pre>\n\n<p>This will not effect the Choose File text which will still be black due to the browser.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The answer of tmanthey is quite good, except that you can't play with border-width in Firefox v20. If you see the <a href=\"http://blueimp.github.io/jQuery-File-Upload/\" rel=\"nofollow\">link</a> (demo, can't really show here) they solved the problem using font-size=23px, transform:translate(-300px, 0px) scale(4) for Firefox to get the button bigger.<br /><br />\nOther solutions using .click() on a different div is useless if you want to make it a drag'n'drop input box.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I used some of the code recommended above and after many hours of waisting my time, I eventually came to a css bag free solution.</p>\n\n<p>You can run it over here - <a href=\"http://jsfiddle.net/WqGph/\" rel=\"nofollow\">http://jsfiddle.net/WqGph/</a></p>\n\n<p>but then found a better solution - <a href=\"http://jsfiddle.net/XMMc4/5/\" rel=\"nofollow\">http://jsfiddle.net/XMMc4/5/</a></p>\n\n<pre><code> &lt;input type = \"button\" value = \"Choose image #2\" \n   onclick =\"javascript:document.getElementById('imagefile').click();\"&gt;\n       &lt;input id = \"imagefile\" type=\"file\" style='display:none;' name=\"img\" value=\"none\"/&gt;see jsfiddle code for examples&lt;br/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could label an image so when you click on it the click event of the button will be triggered. You can simply make the normal button invisible:</p>\n\n<pre><code>&lt;form&gt;\n    &lt;label for=\"fileButton\"&gt;&lt;img src=\"YourSource\"&gt;&lt;/label&gt;    &lt;!--You don't have to put an image here, it can be anything you like--&gt;\n    &lt;input type=\"file\" id=\"fileButton\" style=\"display:none;\"/&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>It worked for me on all browsers, and is very easy to use.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are several valid options here but thought I would give what I have come up with while trying to fix a similar issue.  <a href=\"http://jsfiddle.net/5RyrG/1/\" rel=\"nofollow\">http://jsfiddle.net/5RyrG/1/</a> </p>\n\n<pre><code>&lt;span class=\"btn fileinput-button\"&gt;\n    &lt;span&gt;Import Field(s)&lt;/span&gt;\n    &lt;input id=\"fileupload\" type=\"file\" name=\"files[]\" onchange=\"handleFiles(this.files)\" multiple&gt;\n&lt;/span&gt;\n&lt;div id=\"txt\"&gt;&lt;/div&gt;\n\nfunction handleFiles(files){\n    $('#txt').text(files[0].name);  \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Hide the input file tag with css, add a label and assign it to input button. label will be clickable and when clicked, it will fire up the file dialog.</p>\n\n<pre><code>&lt;input type=\"file\" name=\"imageUpload\" id=\"imageUpload\" class=\"hide\"/&gt; \n&lt;label for=\"imageUpload\" class=\"button-style\"&gt;Select file&lt;/label&gt;\n</code></pre>\n\n<p>Add the style to the label as a button.<br/>\n<strong><a href=\"http://jsfiddle.net/hEpEL/\" rel=\"nofollow\">Live Demo</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This works for me:</p>\n\n<pre><code>input[type=\"file\"]  {\n    color: white!important;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Unfortunately the work around provided many times here does not work in IE 10 (not sure about 9) as IE denies access when the .click method is called on a input type=file for security reasons.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just styled an input file with width: 85px, and the text field disappeared at all</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another easy way of doing this. Make a \"input type file\" tag in html and hide it. Then click a button and format it according to need. After this use javascript/jquery to programmatically click the input tag when the button is clicked.</p>\n\n<p>HTML :-</p>\n\n<pre><code>&lt;input id=\"file\" type=\"file\" style=\"display: none;\"&gt;\n&lt;button id=\"button\"&gt;Add file&lt;/button&gt;\n</code></pre>\n\n<p>JAVASCRIPT :-</p>\n\n<pre><code>$('#button').click(function(){\n    $('#file').click();\n});\n</code></pre>\n\n<p>CSS :-</p>\n\n<pre><code>#button\n{\n    background-color: blue;\n    color: white;\n}\n</code></pre>\n\n<p>Here is a working JS fiddle for the same :- <a href=\"http://jsfiddle.net/32na3/\" rel=\"nofollow\">http://jsfiddle.net/32na3/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to style (or script) <code>&lt;input type=file /&gt;</code> element to have visible only \"Browse\" button without text field?</p>\n\n<p>Thanks</p>\n\n<p><strong>Edit</strong>:\nJust to clarify why to I need this. I'm using multi file upload code from <a href=\"http://www.morningz.com/?p=5\">http://www.morningz.com/?p=5</a> and it doesn't need input text field because it never has value. Script just adds newly selected file to collection on page. It would look much better without text field, if it's possible.</p>\n",
            "last_activity_date": 1405630323,
            "question_id": 1084925,
            "score": 67,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "input type=file show only button"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Internet Explorer (under version 9) does not natively support rounded corners.</p>\n\n<p>There's an amazing script that will magically add it for you: <a href=\"http://css3pie.com/\">CSS3 PIE</a>.</p>\n\n<p>I've used it a lot of times, with amazing results.</p>\n",
                    "is_accepted": true,
                    "score": 64
                },
                {
                    "body": "<p>As Internet Explorer doesn't natively support rounded corners. \nSo a better cross-browser way to handle it would be to use rounded-corner images at the corners. Many famous websites use this approach.</p>\n\n<p>You can also find rounded image generators around the web. One such link is <a href=\"http://www.generateit.net/rounded-corner/\" rel=\"nofollow\">http://www.generateit.net/rounded-corner/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I didnt know about css3pie.com, a very useful site after seeing this post: </p>\n\n<p>But what after testing it out it didnt work for me either.  However I found that wrapping it in the .PHP file worked fine.  So instead of:</p>\n\n<pre><code>behavior: url(PIE.htc);\n</code></pre>\n\n<p>use this:</p>\n\n<pre><code>behavior: url(PIE.php);\n</code></pre>\n\n<p>I put mine in a folder called jquery, so mine was:</p>\n\n<pre><code> behavior: url(jquery/PIE.php);\n</code></pre>\n\n<p>So goto their downloads or get it here:</p>\n\n<p><a href=\"http://css3pie.com/download-latest\" rel=\"nofollow\">http://css3pie.com/download-latest</a></p>\n\n<p>And use their PHP file.  Inside the PHP file it explains that some servers are not configured for proper .HTC usage.  And that was the problem I had.</p>\n\n<p>Try it! I did, it works.  Hope this helps others out too.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://fetchak.com/ie-css3/\" rel=\"nofollow\">http://fetchak.com/ie-css3/</a> works for IE 6+. Use this if css3pie doesn't work for you.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>PIE.htc worked for me great (<a href=\"http://css3pie.com/\" rel=\"nofollow\">http://css3pie.com/</a>), but with one issue:</p>\n\n<p>You should write absolute path to PIE.htc. It hasn't worked for me when I used relative path.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<h1><a href=\"http://davidwalsh.name/css-rounded-corners\" rel=\"nofollow\">Rounded corners in IE8</a></h1>\n\n<p>Internet Explorer 8 (and earlier versions) <strong>doesn't</strong> support rounded corners, <strong>however</strong> there are <strong>few other solutions you may consider:</strong></p>\n\n<ul>\n<li><p>Use Rounded Corners <code>Images</code> instead (<a href=\"http://www.generateit.net/rounded-corner/\" rel=\"nofollow\"><strong>this</strong></a> generator is a good resource)</p></li>\n<li><p>Use a <code>jQuery Corner plugin</code> from <a href=\"http://jquery.malsup.com/corner\" rel=\"nofollow\"><strong>here</strong></a></p></li>\n<li><p>Use a very good script called <code>CSS3 PIE</code> from <strong><a href=\"http://css3pie.com\" rel=\"nofollow\">here</a></strong> (Pro's &amp; Con's <a href=\"http://css-plus.com/2011/05/ie-and-rounded-corners/\" rel=\"nofollow\">here</a>)</p></li>\n<li><p>Checkout <code>CSS Juice</code> from <a href=\"http://www.cssjuice.com/25-rounded-corners-techniques-with-css/\" rel=\"nofollow\"><strong>here</strong></a></p></li>\n<li><p>Another good script is <code>IE-CSS3</code> from <strong><a href=\"http://fetchak.com/ie-css3/\" rel=\"nofollow\">here</a></strong></p></li>\n</ul>\n\n<p>Even though CSS PIE is the most popular solution, I'm suggesting you to review all other solutions and choose what works best for your needs.</p>\n\n<p>Hope it was useful. Good Luck!</p>\n",
                    "is_accepted": false,
                    "score": 28
                }
            ],
            "body": "<p>I'm having issues with rounded corners in IE8. I've tried a few methods without success.</p>\n\n<p>Here is my code: </p>\n\n<pre><code>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n&lt;title&gt;Untitled Page&lt;/title&gt;\n\n&lt;style&gt;\n\nBODY\n{\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 0.8em;\n    padding: 2px;\n    margin: 2px;\n    color: #505050;\n    line-height: normal;\n}\n\nP\n{\n    margin: 4px;\n}\n\n.categoryheading3\n{\n    -moz-border-radius-topleft: 5px;\n    -moz-border-radius-topright: 5px;\n    -webkit-border-top-left-radius: 5px;\n    -webkit-border-top-right-radius: 5px;\n    background-color: #297BB6;\n    color: #FFFFFF;\n    font-size: 16px;\n    font-weight: 700;\n    padding: 8px 0;\n    text-align: center;\n    margin: 0px;\n}\n\n.leftcolumn\n{\n    width: 174px;\n    padding: 8px;\n    float: left;\n    display: inline-block;\n    background-color: transparent;\n/*--min-height: 500px*/\n    overflow: hidden;\n}\n\n.lefttop\n{\n    display: inline-block;\n    width: inherit;\n    margin: 0 5px 2em 0;\n    float: left;\n    width: 160px;\n    background-color: #FFFFFF;\n    border: 2px solid #297BB6;\n    -moz-border-radius: 10px;\n    -webkit-border-radius: 10px;\n    border-radius: 10px;    \n}\n&lt;/style&gt;\n\n\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;div class=\"leftcolumn\"&gt;\n&lt;div class=\"lefttop\"&gt;\n    &lt;H4 class=\"categoryheading3\"&gt;Heading&lt;/H4&gt;\n        &lt;p&gt;sample text sample text sample text sample text sample text sample text sample text sample text sample text sample text sample text sample text &lt;/p&gt;\n&lt;/div&gt;\n &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Which produces this in Firefox:</p>\n\n<p><img src=\"http://i.stack.imgur.com/QrsPO.jpg\" alt=\"firefox example\"></p>\n\n<p>But this in IE8:</p>\n\n<p><img src=\"http://i.stack.imgur.com/XzuCX.jpg\" alt=\"IE8 makes me sad\"></p>\n\n<p>If anyone has any tips I'd be very grateful! </p>\n\n<p>edit: Joseph helped by suggesting to use pie.htc, however I'm still struggling with this element not working:</p>\n\n<pre><code>.categoryheading3\n{\n    -moz-border-radius: 5px 5px 0 0;\n    -webkit-border-radius: 5px 5px 0 0;\n    behavior: url(PIE.htc);\n    background-color: #297BB6;\n    color: #FFFFFF;\n    font-size: 16px;\n    font-weight: 700;\n    padding: 8px 0;\n    text-align: center;\n    margin: 0px;\n\n}\n</code></pre>\n",
            "last_activity_date": 1423106653,
            "question_id": 7077331,
            "score": 51,
            "tags": [
                "css",
                "internet-explorer",
                "internet-explorer-8",
                "rounded-corners"
            ],
            "title": "CSS rounded corners in IE8"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Unfortunately there is no nice way of doing this, as you figured out you will need a copy of the main div:</p>\n\n<pre><code>&lt;div class=\"wrapper\"&gt;\n   &lt;div class=\"overlay\"&gt;&lt;/div&gt;\n   &lt;div id=\"main-copy\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Overlay will push the wrapper width around while, main-copy will be in the background with blur. Obviously there will be performance issues if the content in main-copy is complex.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://thiv.net/frost\" rel=\"nofollow\">http://thiv.net/frost</a> </p>\n\n<p>Live sample of what I did   ( and updated to look just like the image above )</p>\n\n<p>Code:</p>\n\n<pre><code>&lt;style&gt;\n  #partial-overlay {\n    width: 100%;\n    height: 45px;\n    background: #ffffff; /* TODO frost */\n    -webkit-opacity:0.70;\n    -webkit-filter: blur(5px);\n    position: absolute;\n    top: 20px;\n    left: 0px;\n    z-index:5;\n  }\n  #main-view\n  {\n   position: fixed;\n   top: 20px;\n   left: 80px;\n   z-index:-1;\n  }\n&lt;/style&gt;\n&lt;div id=\"main-view\"&gt;\n  &lt;div style=\"width: 50px; height: 50px; background: #f00; position:fixed; left:10px; top: 40px; -webkit-filter: blur(2px); \"&gt;&lt;/div&gt;\n    &lt;div style=\"width: 80px; height: 60px; background: #fff; position:fixed; left:0px; top: 66px; -webkit-filter: blur(5px);\"&gt;&lt;/div&gt;\n    &lt;div style=\"width: 50px; height: 30px; background: #f00; position:fixed; left:10px; top: 60px;\"&gt;&lt;/div&gt;\n  &lt;p style=\"font-family:Sans, Arial, Verdana;\"&gt;\n  To my left is a red box&lt;br&gt;\n  Now there is just text&lt;br&gt;\n  Text that goes on for a few pixels &lt;br&gt;\n  or even more\n  &lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"partial-overlay\"&gt;\n\n&lt;/div&gt;\n</code></pre>\n\n<p>I made it look a bit prettier than it needs to be, but It works!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<blockquote>\n  <p>Is there a better way to achieve this with minimal performance hit and\n  maximal generalizability?</p>\n</blockquote>\n\n<p>The answer to this is <strong>no</strong>.</p>\n\n<p>The reason is that in order to do what you want you would need direct access to the bitmap used for the browser window to extract or manipulate the pixels in the area you want to blur (I wish, \"aero\" in a browser could look pretty neat..) or a filter that works on the elements behind the one you apply it to (or can have a limiting region set to it).</p>\n\n<p>As there is no native support to do this (besides canvas and extension API, or a library that generate canvas image from the html -> relatively slow) this will need to be done with trickery (images, splitting divs etc.) in either case.</p>\n\n<p>If you made everything in your page on a canvas you could do a lot of interesting things, but you would also need to perform layout, update, filtering etc. yourselves and therefor you would be back no non-optimized as Javascript is slower than native (not to mention it would be error prone).</p>\n\n<p>Until browsers allow you to grab a section of the window as a canvas (never? as that would require everything on that page to be same-origin or have content with special accept headers set) there is no way around but to do tricks.</p>\n\n<p><strong>Update</strong></p>\n\n<p>As an demonstration that you can do it by using html2canvas etc, but having to use compromises (-> slow performance) - the demo is rough, experimental and needs tweaks to work well - but for the sake of demo only:<br>\n<a href=\"http://jsfiddle.net/AbdiasSoftware/RCaLR/\">http://jsfiddle.net/AbdiasSoftware/RCaLR/</a></p>\n\n<p>Result:</p>\n\n<p><img src=\"http://i.stack.imgur.com/i0SUs.png\" alt=\"enter image description here\"></p>\n\n<p>Generalized function to grab part of background:</p>\n\n<pre><code>getBlurredBG(x, y, width, height, id);\n</code></pre>\n\n<p>Get part of window using html2canvas:</p>\n\n<pre><code>function getBlurredBG(x, y, w, h, id) {\n\n    html2canvas(document.body, {\n        onrendered: function (canvas) {\n            process(canvas, x, y, w, h, id);\n        },\n        width: (x + w),\n        height: (y + h)\n    });\n}\n</code></pre>\n\n<p>Process the content:</p>\n\n<pre><code>function process(canvas, x, y, w, h, id) {\n\n    //create new canvas to enable clipping\n    //As html2canvas returns a canvas from 0,0 to width and height\n    //we need to clip it.\n    var ocanvas = document.createElement('canvas');\n    ocanvas.width = w;\n    ocanvas.height = h;\n    ocanvas.style.left = x + 'px';\n    ocanvas.style.top = y + 'px';\n    ocanvas.style.position = 'absolute';\n    ocanvas.id = id;\n\n    var ctx = ocanvas.getContext('2d');\n    ctx.drawImage(canvas, x, y, w, h,\n                          0, 0, w, h);\n\n    stackBlurCanvasRGB(ocanvas, x, y, w, h, 28)\n    lighten(ocanvas);\n\n    ctx.fillStyle = 'rgba(255,255,255,0.5)';\n    ctx.fillRect(x, y, w, h);\n\n    ctx.fillStyle = '#999';\n    ctx.font = '32px arial';\n    ctx.fillText(\"Partial overlay content\", 10, 60);\n\n    document.body.appendChild(ocanvas);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Thanks for the inspiration... It led me to this <a href=\"http://html2canvas.hertzen.com/examples.html\">canvas plugin</a> which does the trick</p>\n\n<p><strong>New and Improved: <a href=\"http://jsfiddle.net/apaul34208/TfWs3/79/\">-webkit- and Firefox Working Example</a></strong>, now re-sizable/fluid.</p>\n\n<p>JS</p>\n\n<pre><code>$(document).ready(function () {\n    frost = function () {\n        var w = $('#main-view').width();\n        html2canvas(document.body, {\n            onrendered: function (canvas) {\n                document.body.appendChild(canvas);\n                $('canvas').wrap('&lt;div id=\"contain\" /&gt;');\n            },\n            width: w,\n            height: 30\n        });\n        $('canvas, #partial-overlay, #cover').hide();\n        $('#cover').fadeIn('slow', function () {\n            $('#partial-overlay').fadeIn('slow');\n        });\n    };\n\n    $('body').append('&lt;div id=\"cover\"&gt;&lt;/div&gt;&lt;svg id=\"svg-image-blur\"&gt;&lt;filter id=\"blur-effect-1\"&gt;&lt;feGaussianBlur stdDeviation=\"2\"/&gt;&lt;/filter&gt;&lt;/svg&gt;');\n\n    $('#main-view').click(function () {\n        frost();\n        $('#partial-overlay').addClass('vis');\n        $(window).resize(function () {\n            $('canvas, #partial-overlay, #cover').hide();\n        });\n\n        function onResize() {\n            if ($('#partial-overlay').hasClass('vis')) {\n                frost();\n            }\n        }\n        var timer;\n        $(window).bind('resize', function () {\n            timer &amp;&amp; clearTimeout(timer);\n            timer = setTimeout(onResize, 50);\n        });\n\n    });\n\n    $('#partial-overlay').click(function () {\n        $('#partial-overlay').removeClass('vis');\n        $('canvas, #partial-overlay, #cover').hide();\n    });\n});\n</code></pre>\n\n<p>CSS</p>\n\n<pre><code>#main-view {\n    width:75%;\n    height:50%;\n    box-sizing: border-box;\n    margin:8px;\n}\n#partial-overlay {\n    display:none;\n    width: 100%;\n    height: 20px;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index:99;\n    background: rgba(255, 255, 255, 0.2);\n    cursor:pointer;\n}\ncanvas {\n    position: absolute;\n    top: 0;\n    left: 0;\n    -webkit-filter:blur(5px);\n    filter: url(#blur-effect-1);\n}\n#cover {\n    display:none;\n    height:19px;\n    width:100%;\n    background:#fff;\n    top:0;\n    left:0;\n    position:absolute;\n}\n#contain {\n    height:20px;\n    width:100%;\n    overflow:hidden;\n    position:absolute;\n    top:0;\n    left:0;\n}\nsvg {\n    height:0;\n    width:0;\n}\n</code></pre>\n\n<p>HTML</p>\n\n<pre><code>&lt;div id=\"main-view\"&gt;\n    &lt;div style=\"width: 10%; height: 20%; background: #f00; float: left\"&gt;&lt;/div&gt;To my left is a red box\n    &lt;br&gt;Now there is just text\n    &lt;br&gt;Text that goes on for a few pixels\n    &lt;br&gt;or even more&lt;/div&gt;\n&lt;div id=\"partial-overlay\"&gt;Here is some content&lt;/div&gt;\n</code></pre>\n\n<p>I put it in a click function, because I figured it would be the most likely use case. It will work just as well on document ready.</p>\n\n<p>Although the canvas representation wont be pixel perfect, I don't think it will really matter in most cases because its being blurred. </p>\n\n<p><strong>Update:</strong> As requested this is now re-sizable. I also moved the cover div into the JS and added an svg fall back for Firefox. The resizing requires the canvas to be redrawn on each re-size, so I set it up to hide the canvas, overlay, etc while you're resizing and then replace it when the re-size stops. </p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>It has still very limited suport (only Firefox) but one way to get it could be this:</p>\n\n<h2><a href=\"http://jsfiddle.net/vals/nD2dq/\" rel=\"nofollow\">Firefox only demo</a></h2>\n\n<p>The CSS is quite simple:</p>\n\n<pre><code>#partial-overlay {\n    width:400px; \n    height:100px; \n    background: -moz-element(#main-view);\n    top: 0px;\n    left: 200px;\n    position: absolute;\n    opacity: 0.3;\n}\n</code></pre>\n\n<p>and the key is to use as background for partial overlay the main-view element.</p>\n\n<p>This demo uses only opacity because filters are not availables for Firefox.</p>\n\n<p>The element property for the background has been approved by w3c, so it could show sometime in the future in webkit</p>\n\n<p>In the demo partial-overlay has been shift to the right to make more clear what is what</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is a library that will create the desired effect you're looking for.</p>\n\n<p><a href=\"http://www.blurjs.com/\" rel=\"nofollow\">http://www.blurjs.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Basically you could have a overlay placeholder where you duplicate the main content and sync the scrolling of both divs, than apply css blur filter on the overlay only.</p>\n\n<p>A simple javascript will do:</p>\n\n<pre><code>$(document).ready(function(){\n  $('.overlay').append( $('.content').html() );\n  $('.content').on('scroll', function(){\n    $('.overlay').scrollTop($(this).scrollTop());\n  });\n});\n</code></pre>\n\n<p>And for the CSS:</p>\n\n<pre><code>.overlay {\n    overflow:hidden;\n    -webkit-filter: blur(.25em);\n    background:#fff;\n}\n</code></pre>\n\n<p>I put together a working example for you (webkit only):</p>\n\n<p><a href=\"http://jsfiddle.net/kmxD3/1/\">http://jsfiddle.net/kmxD3/1/</a></p>\n\n<p>Have fun! :)</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I'm trying to create an iOS 7 style frosted look with HTML5, CSS3 and JavaScript which can work on webkit browsers.</p>\n\n<p>Technically, given the following HTML:</p>\n\n<pre><code>&lt;style&gt;\n  #partial-overlay {\n    width: 100%;\n    height: 20px;\n    background: rgba(255, 255, 255, .2); /* TODO frost */\n    position: fixed;\n    top: 0;\n    left: 0;\n  }\n&lt;/style&gt;\n&lt;div id=\"main-view\"&gt;\n  &lt;div style=\"width: 50px; height: 50px; background: #f00\"&gt;&lt;/div&gt;\n  To my left is a red box&lt;br&gt;\n  Now there is just text&lt;br&gt;\n  Text that goes on for a few pixels &lt;br&gt;\n  or even more\n&lt;/div&gt;\n&lt;div id=\"partial-overlay\"&gt;\n  Here is some content\n&lt;/div&gt;\n</code></pre>\n\n<p>I'd like to apply something like a <code>-webkit-filter: blur(5px)</code> to the first 20px horizontally of <code>#main-view</code>.</p>\n\n<p>If the CSS was modified to be <code>#partial-overlay { width: 20px; height: 100%; ...}</code> then I'd need to apply the <code>-webkit-filter: blur(5px)</code> to the first 20px vertically.</p>\n\n<p>The obvious solution is to use javascript to make a clone of the <code>#main-view</code>, set <code>overflow: hidden</code> and then change the width/height as appropriate but that seems to me hard to generalize to more complex pages/CSS structures.</p>\n\n<p>Is there a better way to achieve this with minimal performance hit and maximal generalizability?</p>\n\n<p><strong>EDIT</strong>: Here is an example of what I'm trying to achieve:\n<img src=\"http://i.stack.imgur.com/cyKkw.png\" alt=\"Mockup\"></p>\n",
            "last_activity_date": 1379976288,
            "question_id": 17092299,
            "score": 30,
            "tags": [
                "javascript",
                "css",
                "html5",
                "css3",
                "webkit"
            ],
            "title": "How to use CSS (and JavaScript?) to create a blurred, &quot;frosted&quot; background?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>html {\n  overflow-y: scroll;\n}\n</code></pre>\n\n<p>Is that what you want?</p>\n\n<p>Unfortunately, Opera 9.64 seems to ignore that CSS declaration when applied to <code>HTML</code> or <code>BODY</code>, although it works for other block-level elements like <code>DIV</code>.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<pre><code>html {\noverflow: -moz-scrollbars-vertical; \noverflow-y: scroll;\n}\n</code></pre>\n\n<p>This make the scrollbar always visible and only active when needed. </p>\n\n<p>Update: If the above does not work the just using this may. </p>\n\n<pre><code>html {\n    overflow-y:scroll;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 172
                },
                {
                    "body": "<p>Try make the body height:101%. Thats the best solution in my opinion.</p>\n\n<pre><code>body {height:101%; }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>html {height: 101%;}\n</code></pre>\n\n<p>I use <strong>this cross browsers solution</strong> <em>(note: I always use DOCTYPE declaration in 1st line, I don't know if it works in quirksmode, never tested it</em>).</p>\n\n<p>This will <strong>always show an ACTIVE vertical scroll bar</strong> in every page, vertical scrollbar will be scrollable only of few pixels.</p>\n\n<p>When page contents is <strong>shorter</strong> than browser's visible area (view port) you will still see the vertical scrollbar active, and it will be scrollable only of few pixels.</p>\n\n<p>In case you are obsessed with CSS validation (I'm obesessed only with HTML validation) by using this solution your CSS code would also validate for W3C because you are not using non standard CSS attributes like <code>-moz-scrollbars-vertical</code></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Setting height to 101% is my solution to the problem.\nYou pages will no longer 'flick' when switching between ones that exceed the viewport height and ones that do not.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I was able to get this to work by adding it to the body tag. Was nicer for me because I don't have anything on the html element.</p>\n\n<pre><code>body {\n    overflow-y: scroll;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Things have changed in the last years. The answers above are not valid in all cases any more. Apple is pushing <a href=\"http://www.macobserver.com/tmo/article/apple_granted_patent_for_disappearing_scrollbar\" rel=\"nofollow\">disappearing scrollbars</a> everywhere. Safari, Chrome and even Firefox on MacOs (and iOs) only show scrollbars when actually scrolling \u2014 I don't know about current Windows/IE. However there are non-standard ways to style <a href=\"http://css-tricks.com/custom-scrollbars-in-webkit/\" rel=\"nofollow\">scroll bars</a> on Webkit (IE dropped that a long time ago).</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What CSS is required to make the browser's vertical scrollbar remain visible when a user visits a web page (when the page hasn't enough content to trigger the scrollbar's activation)?</p>\n",
            "last_activity_date": 1407240967,
            "question_id": 1202425,
            "score": 88,
            "tags": [
                "html",
                "css",
                "xhtml"
            ],
            "title": "Making the main scrollbar always visible"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Yes, there is. The callback is an event, so you must add an event listener to catch it. This is an example with jQuery:</p>\n\n<pre><code>$(\"#sun\").bind('oanimationend animationend webkitAnimationEnd', function() { \n   alert(\"fin\") \n});\n</code></pre>\n\n<p>Or pure js:</p>\n\n<pre><code>element.addEventListener(\"webkitAnimationEnd\", callfunction,false);\nelement.addEventListener(\"animationend\", callfunction,false);\nelement.addEventListener(\"oanimationend\", callfunction,false);\n</code></pre>\n\n<p>Live demo:\n<a href=\"http://jsfiddle.net/W3y7h/\">http://jsfiddle.net/W3y7h/</a></p>\n",
                    "is_accepted": true,
                    "score": 62
                },
                {
                    "body": "<p>An easy way for you to do a callback that also handles your CSS3 transitions/browser compatibilities would be the <a href=\"http://ricostacruz.com/jquery.transit/\" rel=\"nofollow\">jQuery Transit Plugin</a>. Example:</p>\n\n<pre><code>//Pulsing, moving element\n$(\"#element\").click( function () {\n    $('#element').transition({ opacity: 0, x: '75%' }, function () { $(this).transition({ opacity: 1, x: '0%' }).trigger(\"click\"); });\n});\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/uUCFT/\" rel=\"nofollow\">JS Fiddle Demo</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there any way to implement a callback function in case of css3 animation? In case of Javascript animation its possible but not finding any way to do it in css3.</p>\n\n<p>One way I could see is to execute callback after the animation duration but that doesn't make sure that it will always be called right after the animation ends. It will depend on the browser UI queue. I want a more robust method. Any clue?</p>\n",
            "last_activity_date": 1363869614,
            "question_id": 6186454,
            "score": 36,
            "tags": [
                "javascript",
                "css",
                "css3",
                "frontend"
            ],
            "title": "Is there a callback on completion of a CSS3 animation?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The DOM ready fires when all the DOM nodes are available. It has nothing to do with CSS. Try positioning the style before or try loading it differently.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>To the best of my knowledge the ready event is fired when the DOM is loaded - which means that all the blocking requests (i.e. JS) have loaded and the DOM tree is completely graphed. The ready state in IE relies on a slower event trigger (document.readyState change vs DOMContentLoaded) than most other browsers so the timing is browser dependant also.</p>\n\n<p>The existence of non-blocking requests (such as CSS and images) is completely asynchronous and unrelated to the ready state. If you are in a position where you require such resources you need to depend on the good old onload event.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>From the <a href=\"http://docs.jquery.com/Release%3ajQuery_1.3\">1.3 release notes</a>: </p>\n\n<blockquote>\n  <p>The ready() method no longer tries to make any guarantees about waiting for all stylesheets to be loaded. Instead all CSS files should be included before the scripts on the page. <a href=\"http://docs.jquery.com/Events/ready\">More Information</a></p>\n</blockquote>\n\n<p>From the <a href=\"http://docs.jquery.com/Events/ready\">ready(fn) documentation</a>:</p>\n\n<blockquote>\n  <p>Note: Please make sure that all stylesheets are included before your scripts (especially those that call the ready function). Doing so will make sure that all element properties are correctly defined before jQuery code begins executing. Failure to do this will cause sporadic problems, especially on WebKit-based browsers such as Safari.</p>\n</blockquote>\n\n<p>Note that the above is not even about actually <em>rendering</em> the CSS, so you may still see the screen change when <code>ready()</code> kicks in. But it should save you from problems.</p>\n\n<p>Actually, I find it a bit strange that just putting the CSS above the JS will solve all issues. The CSS is loaded asynchronously, so JS loading can start <em>and finish</em> while the CSS is still being downloaded. So if the above is a solution, then <em>executing</em> any JS code is then halted until all earlier requests have completed?</p>\n\n<p>I did some testing, and indeed, <strong>sometimes</strong> JS is delayed until the CSS is loaded. I don't know why, because the waterfall shows that the JS has completed loading long before downloading the CSS has finished.</p>\n\n<p>See JS Bin for <a href=\"http://jsbin.com/akifu/edit\">some HTML</a> and <a href=\"http://jsbin.com/akifu\">its results</a> (this has a 10 second delay), and see webpagetest.org for <a href=\"http://www.webpagetest.org/result/090824_249J/1/details/\">its waterfall results</a>. This uses some script from Steve Souders' <a href=\"http://www.cuzillion.com\">cuzillion.com</a> to mimic slow responses. In the waterfall, the reference to <code>resource.cgi</code> is the CSS. So, in Internet Explorer, the first external JS starts to load right after the CSS was requested (but that CSS will take another 10 seconds to finish). But the second <code>&lt;script&gt;</code> tag is not executed until the CSS has finished loading as well:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\".../a script that delays.cgi\" /&gt;\n\n&lt;script type=\"text/javascript\" src=\".../jquery.min.js\"&gt;&lt;/script&gt; \n\n&lt;script type=\"text/javascript\"&gt; \n  alert(\"start after the CSS has fully loaded\"); \n  $(document).ready(function() { \n    $(\"p\").addClass(\"sleepcgi\"); \n    alert(\"ready\"); \n  });         \n&lt;/script&gt; \n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/jvLD2.png\" alt=\"Waterfall with a single external JS script\"></p>\n\n<p><a href=\"http://ttp://jsbin.com/ulayu/edit\">Another test</a> with a second external JS after getting jQuery, <a href=\"http://www.webpagetest.org/result/090824_249H/1/details/\">shows</a> that the download of the second JS is not started until the CSS has loaded. Here, the first reference to <code>resource.cgi</code> is the CSS, the second the JS:</p>\n\n<p><img src=\"http://i.stack.imgur.com/OLfKm.png\" alt=\"Waterfall with two external JS scripts\"></p>\n\n<p>Moving the stylesheet <em>below</em> all JS indeed shows that the JS (including the <code>ready</code> function) runs much earlier, but even then the jQuery-applied class --which is yet unknown when the JS runs-- is used correctly in my quick tests in Safari and Firefox. But it makes sense that things like <code>$(this).height()</code> will yield wrong values at that time.</p>\n\n<p>However, <a href=\"http://jsbin.com/aqeno/edit\">additional testing</a> shows that <strong>it is not a generic rule that JS is halted until earlier defined CSS is loaded</strong>. There seems to be some combination with using external JS and CSS. I don't know how this works.</p>\n\n<p>Last notes: as JS Bin includes Google Analytics in each script when running from the bare URL (like <a href=\"http://jsbin.com/aqeno/\">jsbin.com/aqeno</a>, <strong>the test results are actually changed by JS Bin</strong>... It seems that the Output tab on the edit URL such as <a href=\"http://jsbin.com/aqeno/edit\">jsbin.com/aqeno/edit</a> does not include the additional Google Analytics things, and surely yields different results, but that URL is hard to test using webpagetest.org. The reference to <a href=\"http://stevesouders.com/cuzillion/?ex=2&amp;title=Stylesheets+Block+Downloads\">Stylesheets Block Downloads in Firefox and JavaScript Execution in IE</a> as given by <a href=\"http://stackoverflow.com/users/39992/strager\">strager</a> is a good start for a better understanding, but I got many questions left... Also note Steve Souders' <a href=\"http://stevesouders.com/cuzillion/?ex=3&amp;title=IE8+Parallel+Script+Loading\">IE8 Parallel Script Loading</a> to make things even more complicated. (The waterfalls above are created using IE7.)</p>\n\n<p>Maybe one should simply believe the release notes and documentation...</p>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>CSS/JavaScript/JQuery ordering doesn't work for me, but the following does:</p>\n\n<pre><code>$(window).load(function() { $('#abc')...} );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<blockquote>\n  <p>According to HTML5, DOMContentLoaded is a plain DOM ready event without taking stylesheets into account. <strong>However</strong>, the HTML5 parsing algorithm require browsers to defer the execution of scripts until all previous stylesheets are loaded. (<a href=\"http://molily.de/weblog/domcontentloaded\" rel=\"nofollow\">DOMContentLoaded and stylesheets</a>)</p>\n</blockquote>\n\n<p>In <a href=\"http://molily.de/weblog/domcontentloaded#summary\" rel=\"nofollow\">molily's tests (2010)</a>,</p>\n\n<ul>\n<li>IE and Firefox blocked all subsequent script execution until stylesheets loaded</li>\n<li>Webkit blocked subsequent execution only for external scripts (<code>&lt;script src&gt;</code>)</li>\n<li>Opera did not block subsequent execution for any scripts</li>\n</ul>\n\n<p>I don't know the recent browser behavior. <a href=\"http://caniuse.com/#search=DOMContentLoaded\" rel=\"nofollow\">caniuse doesn't yet show DOMContentLoaded support</a> but they might if you <a href=\"http://www.google.com/moderator/#9/e=ae425&amp;g=DOMContentLoaded\" rel=\"nofollow\">vote for it</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I've got a script executing on $(document).ready() that's supposed to vertically align block element in my layout. 90% of the time, it works without issue. However, for that extra 10% one of two things happens:</p>\n\n<ul>\n<li><p>There's an obvious lag in the time it takes to do the centering, and the block elements jump into position. This could simply be performance related - as the page size is often large and there is a fair amount of javascript that is executing at once.</p></li>\n<li><p>The centering will completely mess up, and the block element will either pushed down too far or not far enough. It appears as if it tried to calculate the height, but was getting improper measurements.</p></li>\n</ul>\n\n<p>Is there any reason why executing a script on DOM-ready would not have all the correct CSS values injected into the DOM yet? (all CSS is in the <code>&lt;head&gt;</code> via a <code>&lt;link&gt;</code>).</p>\n\n<p>Also, here's the script that's causing the issue (yes, it's been taken straight from <a href=\"http://www.seodenver.com/simple-vertical-align-plugin-for-jquery/\">here</a>):</p>\n\n<pre><code> (function ($) {\n    // VERTICALLY ALIGN FUNCTION\n    $.fn.vAlign = function() {\n      return this.each(function(i) {\n        var ah = $(this).height();\n        var ph = $(this).parent().height();\n        var mh = (ph - ah) / 2;\n        $(this).css('margin-top', mh);\n      });\n    };\n  })(jQuery);\n</code></pre>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1381527562,
            "question_id": 1324568,
            "score": 32,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "Is $(document).ready() also CSS ready?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Use the <a href=\"http://code.google.com/p/js-hotkeys/\" rel=\"nofollow\">jQuery hotkeys</a> plugin and this code</p>\n\n<pre><code>jQuery(document).bind('keydown', 'shift+enter', \n         function (evt){ \n             $('textarea').val($('#textarea').val() + \"\\n\");// use the right id here\n             return true;\n         }\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I think you can do something like this..   </p>\n\n<p><strong>EDIT :</strong> Changed the code to work irrespective of the caret postion</p>\n\n<p>First part of the code is to get the caret position.</p>\n\n<p>Ref: <a href=\"http://stackoverflow.com/questions/263743/how-to-get-cursor-position-in-textarea\">How to get caret position in textarea?</a></p>\n\n<pre><code>function getCaret(el) {\n  if (el.selectionStart) {\n     return el.selectionStart;\n  } else if (document.selection) {\n     el.focus();\n\n   var r = document.selection.createRange();\n   if (r == null) {\n    return 0;\n   }\n\n    var re = el.createTextRange(),\n    rc = re.duplicate();\n    re.moveToBookmark(r.getBookmark());\n    rc.setEndPoint('EndToStart', re);\n\n    return rc.text.length;\n  }  \n  return 0;\n}\n</code></pre>\n\n<p>And then replacing the textarea value accordingly when <kbd>Shift</kbd> + <kbd>Enter</kbd> together , submit the form if <kbd>Enter</kbd> is pressed alone. </p>\n\n<pre><code>$('textarea').keyup(function (event) {\n   if (event.keyCode == 13 &amp;&amp; event.shiftKey) {\n       var content = this.value;\n       var caret = getCaret(this);\n       this.value = content.substring(0,caret)+\n                     \"\\n\"+content.substring(caret,content.length);\n       event.stopPropagation();\n\n  }\n });\n</code></pre>\n\n<p>Here is a <a href=\"http://jsfiddle.net/jishnuap/zYEMv/\">demo</a></p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>First, pressing <kbd>Enter</kbd> inside a textarea does not submit the form unless you have script to make it do that. That's the behaviour the user expects and I'd recommend against changing it. However, if you must do this, the easiest approach would be to find the script that is making <kbd>Enter</kbd> submit the form and change it. The code will have something like</p>\n\n<pre><code>if (evt.keyCode == 13) {\n    form.submit();\n}\n</code></pre>\n\n<p>... and you could just change it to </p>\n\n<pre><code>if (evt.keyCode == 13 &amp;&amp; !evt.shiftKey) {\n    form.submit();\n}\n</code></pre>\n\n<p>If you don't have access to this code for some reason, you need to do the following to make it work in all major browsers even if the caret is not at the end of the text:</p>\n\n<p>jsFiddle: <a href=\"http://jsfiddle.net/zd3gA/1/\">http://jsfiddle.net/zd3gA/1/</a></p>\n\n<p>Code:</p>\n\n<pre><code>function pasteIntoInput(el, text) {\n    el.focus();\n    if (typeof el.selectionStart == \"number\"\n            &amp;&amp; typeof el.selectionEnd == \"number\") {\n        var val = el.value;\n        var selStart = el.selectionStart;\n        el.value = val.slice(0, selStart) + text + val.slice(el.selectionEnd);\n        el.selectionEnd = el.selectionStart = selStart + text.length;\n    } else if (typeof document.selection != \"undefined\") {\n        var textRange = document.selection.createRange();\n        textRange.text = text;\n        textRange.collapse(false);\n        textRange.select();\n    }\n}\n\nfunction handleEnter(evt) {\n    if (evt.keyCode == 13 &amp;&amp; evt.shiftKey) {\n        if (evt.type == \"keypress\") {\n            pasteIntoInput(this, \"\\n\");\n        }\n        evt.preventDefault();\n    }\n}\n\n// Handle both keydown and keypress for Opera, which only allows default\n// key action to be suppressed in keypress\n$(\"#your_textarea_id\").keydown(handleEnter).keypress(handleEnter);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>Why not just</p>\n\n<pre><code>$(\".commentArea\").keypress(function(e) {\n    var textVal = $(this).val();\n    if(e.which == 13 &amp;&amp; e.shiftKey) {\n\n    }\n    else if (e.which == 13) {\n       e.preventDefault(); //Stops enter from creating a new line\n       this.form.submit(); //or ajax submit\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Most of these answers overcomplicate this.  Why not try it this way?</p>\n\n<pre><code>$(\"textarea\").keypress(function(event) {\n        if (event.keyCode == 13 &amp;&amp; !event.shiftKey) {\n         submitForm(); //Submit your form here\n         return false;\n         }\n});\n</code></pre>\n\n<p>No messing around with caret position or shoving line breaks into JS.  Basically, the function will not run if the shift key is being pressed, therefore allowing the enter/return key to perform its normal function.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>Currently, if the person presses <kbd>enter</kbd> inside the text area, the form will submit.<br>\nGood, I want that.</p>\n\n<p>But when they type <kbd>shift</kbd> + <kbd>enter</kbd>, I want the textarea to move to the next line: <code>\\n</code> </p>\n\n<p>How can I do that in <code>JQuery</code> or plain JavaScript as simple as possible?</p>\n",
            "last_activity_date": 1368219238,
            "question_id": 6014702,
            "score": 53,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css"
            ],
            "title": "How do I detect &quot;shift+enter&quot; and generate a new line in Textarea?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>Try this CSS:</p>\n\n<pre><code>a:active, a:selected, a:visited { \n    border: none;\n    outline: none;\n}\n</code></pre>\n\n<p>Note that this has to be after any <code>a:hover</code> rules. Thanks to <a href=\"http://stackoverflow.com/users/421508/pera\">PEra</a> in the comments for suggesting using the <code>a:selected</code> selector as well.</p>\n\n<p><strong>NOTE</strong></p>\n\n<p>The above does <em>not</em> work in IE 9.  Removing a:selected causes it to work in IE9.</p>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>Be careful. The dotted-border is a valuable part of keyboard-browsing. It highlights which link will be clicked.</p>\n\n<pre><code>a:active { outline: none; }\n</code></pre>\n\n<p>Author Nathan Smith gives <a href=\"http://sonspring.com/journal/removing-dotted-links\">a more thorough discussion of this</a>, and various related issues on his blog.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Typical and safe way to do it is this (in non-IE and IE6-7):</p>\n\n<pre><code>a:active, a:focus {\n   outline:  none;\n   ie-dummy: expression(this.hideFocus=true);\n}\n</code></pre>\n\n<p>Since <code>expresssion()</code> has been gutted in IE8, you may need a script:</p>\n\n<pre><code>\ufeffif (document.documentElement.attachEvent)\n    document.documentElement.attachEvent('onmousedown',function(){\n         event.srcElement.hideFocus=true\n    });\n</code></pre>\n\n<p>If you're going to remove default focus outline, <strong>you must  define your own distinct style for <code>:focus</code></strong>, otherwise keyboard users will have hard time using your site.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>The a <code>{ outline: none; }</code> breaks keyboard usability. And the <code>a:active {}</code> selector seems to break it just as good last time I checked in Firefox.</p>\n\n<p>There is a JS way to get rid of the border without breaking anything, as well as JS code to get rid of the border in IE6 and IE7.</p>\n\n<p>I described the method in <a href=\"http://haslayout.net/css-tuts/view?tut=Removing-Dotted-Border-on-Clicked-Links\" rel=\"nofollow\">my tutorial</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try with this CSS:</p>\n\n<p>For <strong>Mozilla</strong>:</p>\n\n<pre><code>|:-moz-any-link:focus { outline: none; }\n\n|:focus { outline: none; }\n\nbutton, input[type=\"reset\"], input[type=\"button\"], input[type=\"submit\"] { outline: none; }\n\nbutton::-moz-focus-inner, input[type=\"reset\"]::-moz-focus-inner, input[type=\"button\"]::-moz-focus-inner, input[type=\"submit\"]::-moz-focus-inner, input[type=\"file\"] &gt; input[type=\"button\"]::-moz-focus-inner { padding: 0px 2px 0px 2px; border: 1px dotted transparent; }\n</code></pre>\n\n<hr>\n\n<p>For <strong>IE8</strong>:</p>\n\n<pre><code>a:active, a:focus { \n    border:none;\n    outline:none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>a:active, a:focus {\n    outline:none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>a img {border: none; }\n</code></pre>\n\n<p>that's it, no need to complicate this.</p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>you can also use outline:0 on object and embed. some basic zeroing out css would look like this:</p>\n\n<pre><code>a, a:visited { \n    text-decoration:none;\n    color: #e3a512; \n    }\na:hover, a:active, a:focus { \n    text-decoration:none;\n    color: #fff;\n    outline:0;\n    }\nobject, embed, a, a img, a:active, a:selected, a:visited {\n    outline:0\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Solution in JavaScript to remove the active border on the links on all the browsers:\nadd the event <strong>onfocus=\"this.blur();\"</strong> on your link     </p>\n\n<pre><code>&lt;a href=\"#\" onfocus=\"this.blur()\"&gt; Link &lt;/a&gt;\n</code></pre>\n\n<p>NOTE: this will work in all browsers.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>a:focus, *:focus {\n    noFocusLine: expression(this.onFocus=this.blur());\n}\n</code></pre>\n\n<p>Taken from here:\n<a href=\"http://www.cssjunction.com/css/remove-dotted-border-in-ie7/\" rel=\"nofollow\">http://www.cssjunction.com/css/remove-dotted-border-in-ie7/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This one works the best for me</p>\n\n<pre><code>a{\n  outline: 0;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>i wanted to get this working for Button and this worked for me</p>\n\n<pre><code>button { \n\n    border-top-style: none;\n    border-right-style: none;\n    border-bottom-style: none;\n    border-left-style: none;    \n    background-color: transparent;\n    noFocusLine: expression(this.onFocus=this.blur());\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Active hyperlink texts are highlighted with dotted border. When using effects on such hyperlinks (fadeIn/fadeOut) it produces strange effects. How do I disable/remove the dotted border?</p>\n",
            "last_activity_date": 1416272366,
            "question_id": 1142819,
            "score": 36,
            "tags": [
                "css",
                "internet-explorer-8"
            ],
            "title": "How to remove dotted border around active hyperlinks in IE8 with CSS"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>There is an experimental webkit property called <code>text-stroke</code> in CSS3, I've been trying to get this to work for some time but have been unsuccessful so far. </p>\n\n<p>What I have done instead is used the already supported <code>text-shadow</code> property (supported in  Chrome, Firefox, Opera, and IE 9 I believe).</p>\n\n<p>Use four shadows to simulate a stroked text: </p>\n\n<p>HTML: </p>\n\n<pre><code>&lt;div class=\"strokeme\"&gt;\n    This text should have a stroke in some browsers\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.strokeme\n{\n    color: white;\n    text-shadow:\n    -1px -1px 0 #000,\n    1px -1px 0 #000,\n    -1px 1px 0 #000,\n    1px 1px 0 #000;  \n}\n</code></pre>\n\n<p>I have made a demo <a href=\"http://jsfiddle.net/Kyle_Sevenoaks/ZnfED/1/\">for you here</a> :)</p>\n\n<p>And a hovered example is <a href=\"http://jsfiddle.net/Kyle_Sevenoaks/ZnfED/2/\">available here</a> :)</p>\n\n<hr>\n\n<p>As Jason C has mentioned in the comments, the <code>text-stroke</code> css property is now supported by all major browsers, with the exception of Opera Mini. Where this solution will work for backwards compatibility (not really an issue regarding browsers that auto-update) I believe the <code>text-stroke</code> CSS should be used. </p>\n",
                    "is_accepted": true,
                    "score": 185
                },
                {
                    "body": "<p>I was looking for a cross-browser text-stroke solution that works when overlaid on background images. think I have a solution for this that doesn't involve extra mark-up, js and works in IE7-9 (I haven't tested 6), and doesn't cause aliasing problems.</p>\n\n<p>This is a combination of using CSS3 text-shadow, which has good support except IE (http://caniuse.com/#search=text-shadow), then using a combination of filters for IE.  CSS3 text-stroke support is poor at the moment.</p>\n\n<p><strong>IE Filters</strong></p>\n\n<p>The glow filter (http://www.impressivewebs.com/css3-text-shadow-ie/) looks terrible, so I didn't use that.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/4567677/simulating-text-stroke-in-internet-explorer\">David Hewitt's answer</a> involved adding dropshadow filters in a combination of directions. ClearType is then removed unfortunately so we end up with badly aliased text.</p>\n\n<p>I then combined some of the elements suggested on <a href=\"http://www.useragentman.com/blog/2010/09/02/how-to-make-cleartype-font-face-fonts-and-css-visual-filters-play-nicely-together/\">useragentman</a> with the dropshadow filters.</p>\n\n<p><strong>Putting it together</strong></p>\n\n<p>This example would be black text with a white stroke. I'm using conditional html classes by the way to target IE (http://paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/).</p>\n\n<pre><code>#myelement {\n    color: #000000;\n    text-shadow:\n    -1px -1px 0 #ffffff,  \n    1px -1px 0 #ffffff,\n    -1px 1px 0 #ffffff,\n    1px 1px 0 #ffffff;\n}\n\nhtml.ie7 #myelement,\nhtml.ie8 #myelement,\nhtml.ie9 #myelement {\n    background-color: white;\n    filter: progid:DXImageTransform.Microsoft.Chroma(color='white') progid:DXImageTransform.Microsoft.Alpha(opacity=100) progid:DXImageTransform.Microsoft.dropshadow(color=#ffffff,offX=1,offY=1) progid:DXImageTransform.Microsoft.dropshadow(color=#ffffff,offX=-1,offY=1) progid:DXImageTransform.Microsoft.dropshadow(color=#ffffff,offX=1,offY=-1) progid:DXImageTransform.Microsoft.dropshadow(color=#ffffff,offX=-1,offY=-1);\n    zoom: 1;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You could try stacking multiple blured shadows until the shadows look like a stroke, like so:</p>\n\n<pre><code>.shadowOutline {\n  text-shadow: 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black, 0 0 4px black;\n}\n</code></pre>\n\n<p>Here's a fiddle: <a href=\"http://jsfiddle.net/GGUYY/\">http://jsfiddle.net/GGUYY/</a></p>\n\n<p>I mention it just in case someone's interested, although I wouldn't call it a solution because it fails in various ways:</p>\n\n<ul>\n<li>it doesn't work in IE</li>\n<li>it renders completely different in every browser, I only tried FF and Chrome though</li>\n<li>applying so many shadows must be very heavy to process :S</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I got better results with 6 different shadows:</p>\n\n<pre><code>.strokeThis{\n    text-shadow:\n    -1px -1px 0 #ff0,\n    0px -1px 0 #ff0,\n    1px -1px 0 #ff0,\n    -1px 1px 0 #ff0,\n    0px 1px 0 #ff0,\n    1px 1px 0 #ff0;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here is CSS file hope you will get wht u want</p>\n\n<pre><code>/* ----- Logo ----- */\n\n#logo a {\n    background-image:url('../images/wflogo.png'); \n    min-height:0;\n    height:40px;\n    }\n* html #logo a {/* IE6 png Support */\n    background-image: none;\n    filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\"../images/wflogo.png\", sizingMethod=\"crop\");\n}\n\n/* ----- Backgrounds ----- */\nhtml{\n    background-image:none;  background-color:#336699;\n}\n#logo{\n    background-image:none;  background-color:#6699cc;\n}\n#container, html.embed{\n    background-color:#FFFFFF;\n}\n.safari .wufoo input.file{\n    background:none;\n    border:none;\n}\n\n.wufoo li.focused{\n    background-color:#FFF7C0;\n}\n.wufoo .instruct{\n    background-color:#F5F5F5;\n}\n\n/* ----- Borders ----- */\n#container{\n    border:0 solid #cccccc;\n}\n.wufoo .info, .wufoo .paging-context{\n    border-bottom:1px dotted #CCCCCC;\n}\n.wufoo .section h3, .wufoo .captcha, #payment .paging-context{\n    border-top:1px dotted #CCCCCC;\n}\n.wufoo input.text, .wufoo textarea.textarea{\n\n}\n.wufoo .instruct{\n    border:1px solid #E6E6E6;\n}\n.fixed .info{\n    border-bottom:none;\n}\n.wufoo li.section.scrollText{\n    border-color:#dedede;\n}\n\n/* ----- Typography ----- */\n.wufoo .info h2{\n    font-size:160%;\n    font-family:inherit;\n    font-style:normal;\n    font-weight:normal;\n    color:#000000;\n}\n.wufoo .info div{\n    font-size:95%;\n    font-family:inherit;\n    font-style:normal;\n    font-weight:normal;\n    color:#444444;\n}\n.wufoo .section h3{\n    font-size:110%;\n    font-family:inherit;\n    font-style:normal;\n    font-weight:normal;\n    color:#000000;\n}\n.wufoo .section div{\n    font-size:85%;\n    font-family:inherit;\n    font-style:normal;\n    font-weight:normal;\n    color:#444444;\n}\n\n.wufoo label.desc, .wufoo legend.desc{\n    font-size:95%;\n    font-family:inherit;\n    font-style:normal;\n    font-weight:bold;\n    color:#444444;\n}\n\n.wufoo label.choice{\n    font-size:100%;\n    font-family:inherit;\n    font-style:normal;\n    font-weight:normal;\n    color:#444444;\n}\n.wufoo input.text, .wufoo textarea.textarea, .wufoo input.file, .wufoo select.select{\n    font-style:normal;\n    font-weight:normal;\n    color:#333333;\n    font-size:100%;\n}\n{* Custom Fonts Break Dropdown Selection in IE *}\n.wufoo input.text, .wufoo textarea.textarea, .wufoo input.file{ \n    font-family:inherit;\n}\n\n\n.wufoo li div, .wufoo li span, .wufoo li div label, .wufoo li span label{\n    font-family:inherit;\n    color:#444444;\n}\n.safari .wufoo input.file{ /* Webkit */\n    font-size:100%;\n    font-family:inherit;\n    color:#444444;\n}\n.wufoo .instruct small{\n    font-size:80%;\n    font-family:inherit;\n    font-style:normal;\n    font-weight:normal;\n    color:#444444;\n}\n\n.altInstruct small, li.leftHalf small, li.rightHalf small,\nli.leftThird small, li.middleThird small, li.rightThird small,\n.iphone small{\n    color:#444444 !important;\n}\n\n/* ----- Button Styles ----- */\n\n.wufoo input.btTxt{\n\n}\n\n/* ----- Highlight Styles ----- */\n\n.wufoo li.focused label.desc, .wufoo li.focused legend.desc,\n.wufoo li.focused div, .wufoo li.focused span, .wufoo li.focused div label, .wufoo li.focused span label,\n.safari .wufoo li.focused input.file{ \n    color:#000000;\n}\n\n/* ----- Confirmation ----- */\n\n.confirm h2{\n    font-family:inherit;\n    color:#444444;\n}\na.powertiny b, a.powertiny em{\n    color:#1a1a1a !important;\n}\n.embed a.powertiny b, .embed a.powertiny em{\n    color:#1a1a1a !important;\n}\n\n/* ----- Pagination ----- */\n\n.pgStyle1 var, .pgStyle2 var, .pgStyle2 em, .page1 .pgStyle2 var, .pgStyle1 b, .wufoo .buttons .marker{\n    font-family:inherit;\n    color:#444444;\n}\n.pgStyle1 var, .pgStyle2 td{\n    border:1px solid #cccccc;\n}\n.pgStyle1 .done var{\n    background:#cccccc;\n}\n\n.pgStyle1 .selected var, .pgStyle2 var, .pgStyle2 var em{\n    background:#FFF7C0;\n    color:#000000;\n}\n.pgStyle1 .selected var{\n    border:1px solid #e6dead;\n}\n\n\n/* Likert Backgrounds */\n\n.likert table{\n    background-color:#FFFFFF;\n}\n.likert thead td, .likert thead th{\n    background-color:#e6e6e6;\n}\n.likert tbody tr.alt td, .likert tbody tr.alt th{\n    background-color:#f5f5f5;\n}\n\n/* Likert Borders */\n\n.likert table, .likert th, .likert td{\n    border-color:#dedede;\n}\n.likert td{\n    border-left:1px solid #cccccc;\n}\n\n/* Likert Typography */\n\n.likert caption, .likert thead td, .likert tbody th label{\n    color:#444444;\n    font-family:inherit;\n}\n.likert tbody td label{\n    color:#575757;\n    font-family:inherit;\n}\n.likert caption, .likert tbody th label{\n    font-size:95%;\n}\n\n/* Likert Hover */\n\n.likert tbody tr:hover td, .likert tbody tr:hover th, .likert tbody tr:hover label{\n    background-color:#FFF7C0;\n    color:#000000;\n}\n.likert tbody tr:hover td{\n    border-left:1px solid #ccc69a;\n}\n\n/* ----- Running Total ----- */\n\n.wufoo #lola{\n    background:#e6e6e6;\n}\n.wufoo #lola tbody td{\n    border-bottom:1px solid #cccccc;\n}\n.wufoo #lola{\n    font-family:inherit;\n    color:#444444;\n}\n.wufoo #lola tfoot th{\n    color:#696969;\n}\n\n/* ----- Report Styles ----- */\n\n.wufoo .wfo_graph h3{\n    font-size:95%;\n    font-family:inherit;\n    color:#444444;\n}\n.wfo_txt, .wfo_graph h4{\n    color:#444444;\n}\n.wufoo .footer h4{\n    color:#000000;\n}\n.wufoo .footer span{\n    color:#444444;\n}\n\n/* ----- Number Widget ----- */\n\n.wfo_number{\n    background-color:#f5f5f5;\n    border-color:#dedede;\n}\n.wfo_number strong, .wfo_number em{\n    color:#000000;\n}\n\n/* ----- Chart Widget Border and Background Colors ----- */\n\n#widget, #widget body{\n    background:#FFFFFF;\n}\n.fcNav a.show{\n    background-color:#FFFFFF;\n    border-color:#cccccc;\n}\n.fc table{\n    border-left:1px solid #dedede;  \n}\n.fc thead th, .fc .more th{\n    background-color:#dedede !important;\n    border-right:1px solid #cccccc !important;\n}\n.fc tbody td, .fc tbody th, .fc tfoot th, .fc tfoot td{\n    background-color:#FFFFFF;\n    border-right:1px solid #cccccc;\n    border-bottom:1px solid #dedede;\n}\n.fc tbody tr.alt td, .fc tbody tr.alt th, .fc tbody td.alt{\n    background-color:#f5f5f5;\n}\n\n/* ----- Chart Widget Typography Colors ----- */\n\n.fc caption, .fcNav, .fcNav a{\n    color:#444444;\n}\n.fc tfoot, \n.fc thead th,\n.fc tbody th div, \n.fc tbody td.count, .fc .cards tbody td a, .fc td.percent var,\n.fc .timestamp span{\n    color:#000000;\n}\n.fc .indent .count{\n    color:#4b4b4b;\n}\n.fc .cards tbody td a span{\n    color:#7d7d7d;\n}\n\n/* ----- Chart Widget Hover Colors ----- */\n\n.fc tbody tr:hover td, .fc tbody tr:hover th,\n.fc tfoot tr:hover td, .fc tfoot tr:hover th{\n    background-color:#FFF7C0;\n}\n.fc tbody tr:hover th div, .fc tbody tr:hover td, .fc tbody tr:hover var,\n.fc tfoot tr:hover th div, .fc tfoot tr:hover td, .fc tfoot tr:hover var{\n    color:#000000;\n}\n\n/* ----- Payment Summary ----- */\n\n.invoice thead th, \n.invoice tbody th, .invoice tbody td,\n.invoice tfoot th,\n.invoice .total,\n.invoice tfoot .last th, .invoice tfoot .last td,\n.invoice tfoot th, .invoice tfoot td{\n    border-color:#dedede;\n}\n.invoice thead th, .wufoo .checkNotice{\n    background:#f5f5f5;\n}\n.invoice th, .invoice td{\n    color:#000000;\n}\n#ppSection, #ccSection{\n    border-bottom:1px dotted #CCCCCC;\n}\n#shipSection, #invoiceSection{\n    border-top:1px dotted #CCCCCC;\n}\n\n/* Drop Shadows */\n\n/* - - - Local Fonts - - - */\n\n/* - - - Responsive - - - */\n\n@media only screen and (max-width: 480px) {\n    html{\n        background-color:#FFFFFF;\n    }\n    a.powertiny b, a.powertin em{\n        color:#1a1a1a !important;\n    }\n}\n\n/* - - - Custom Theme - - - */\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>Working with thicker strokes gets a bit messy, if you have the pleasure of sass try this mixin, not perfect and depending on stroke weight it generates a fair amount of css. </p>\n\n<pre><code> @mixin stroke($width, $colour: #000000) {\n      $shadow: 0 0 0 $colour; // doesn't do anything but I couldn't work out how to create a blank string and maintain commas\n      @for $i from 0 through $width {\n          $shadow: $shadow,\n          -$i + px -$width + px 0 $colour,\n          $i + px -$width + px 0 $colour,\n          -$i + px $width + px 0 $colour,\n          $i + px $width + px 0 $colour,\n          -$width + px -$i + px 0 $colour,\n          $width + px -$i + px 0 $colour,\n          -$width + px $i + px 0 $colour,\n          $width + px $i + px 0 $colour,\n      }\n      text-shadow: $shadow;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can and should do this with just the <code>text-shadow</code> effect without any offsets:</p>\n\n<pre><code>.outline {\n    color: #fff;\n    text-shadow: #000 0px 0px 1px;\n    -webkit-font-smoothing: antialiased;\n}\n</code></pre>\n\n<p>Why? When you offset multiple shadow effects, you\u2019ll begin to notice ungainly, jagged corners:\n<img src=\"http://i.stack.imgur.com/vE6au.png\" alt=\"Shadow effect offsets result in noticeable jagged corners.\">\n<br><br><br>\nHaving text-shadow effects in just one position eliminates the offsets, meaning \nIf you feel that\u2019s too thin and would prefer a darker outline instead, no problem \u2014 you can repeat the same effect (keeping the same position and blur), several times. Like so:</p>\n\n<pre><code>text-shadow: #000 0px 0px 1px,   #000 0px 0px 1px,   #000 0px 0px 1px,\n             #000 0px 0px 1px,   #000 0px 0px 1px,   #000 0px 0px 1px;\n</code></pre>\n\n<p>Here\u2019s a sample of just one effect (top), and the same effect repeated 14 times (bottom):</p>\n\n<p><br>\n<img src=\"http://i.stack.imgur.com/BdGB7.png\" alt=\"Sample text rendered with text-shadow\"></p>\n\n<p>Also note: Because the lines become so thin, it\u2019s a very good idea to turn off sub-pixel rendering using<br><code>-webkit-font-smoothing: antialiased</code>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>This can be done with a simple SVG, here's a more complex demo, but understand it could be achieved only with CSS:</p>\n\n<p><a href=\"http://codepen.io/vsync/pen/nheBL\" rel=\"nofollow\">http://codepen.io/vsync/pen/nheBL</a></p>\n\n<p>This is a simplified method:</p>\n\n<pre><code>&lt;svg&gt;\n  &lt;text y=\"50\" x='0'&gt;Scalable Title&lt;/text&gt;\n&lt;/svg&gt;\n\nsvg{\n  font-size: 50px;\n  font-family: 'Arial';\n  fill: #000;\n  color: #000;\n}\n\ntext{\n  // fill: none;\n  stroke: red;\n  stroke-width:5px;\n // stroke-dasharray: 2,2;\n  stroke-linejoin: round;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Are there any way in CSS to give outlines to text with different colors. i want to highlight some part of my text to make it more intuitive like the names link etc changing the link colors etc are common now a days so i want something new.</p>\n",
            "last_activity_date": 1417425443,
            "question_id": 4919076,
            "score": 108,
            "tags": [
                "css"
            ],
            "title": "Outline effect to text"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This selector should work but will be more efficient if you replace it with your suited markup:</p>\n\n<pre><code>//*[contains(@class, 'Test')]\n</code></pre>\n\n<p>But since this will also match cases like <code>class=\"Testvalue\"</code> or <code>class=\"newTest\"</code>, @Tomalak's version provided in the comments is <strong>better</strong>: </p>\n\n<pre><code>//*[contains(concat(' ', @class, ' '), ' Test ')]\n</code></pre>\n\n<p>If you wished to be really certain that it will match correctly, you could also use the normalize-space function to clean up stray whitespace characters around the class name (as mentioned by @Terry): </p>\n\n<pre><code>//*[contains(concat(' ', normalize-space(@class), ' '), ' Test ')]\n</code></pre>\n\n<p>Note that in all these versions, the * should best be replaced by whatever element name you actually wish to match, unless you wish to search each and every element in the document for the given condition. </p>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>I'm just providing this as an answer, as Tomalak provided as a comment to meder's answer a long time ago</p>\n\n<pre><code>//div[contains(concat(' ', @class, ' '), ' Test ')]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Most easiest way..</p>\n\n<pre><code>//div[@class=\"Test\"]\n</code></pre>\n\n<p>Assuming you want to find <code>&lt;div class=\"Test\"&gt;</code> as described.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In my webpage, there's a div with a class named Test. How can I find it with XPath?</p>\n",
            "last_activity_date": 1411472110,
            "question_id": 1604471,
            "score": 32,
            "tags": [
                "html",
                "css",
                "xpath"
            ],
            "title": "How can I find an element by CSS class with XPath?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>What if you enclose the url string with apostrohes?</p>\n\n<pre><code>a.heroshot img {\ncursor:url('/img/magnify.cur'), pointer;\n}\n</code></pre>\n\n<p>See also <a href=\"http://www.w3schools.com/CSS/pr_class_cursor.asp\" rel=\"nofollow\">http://www.w3schools.com/CSS/pr_class_cursor.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Your problem may be that cursor URLs don't work in Firefox for the Mac.</p>\n\n<p>You can get the same effect on Firefox by using the <code>-moz-zoom-in</code> keyword.</p>\n\n<pre><code>cursor:url(/img/magnify.cur), -moz-zoom-in, auto;\n</code></pre>\n\n<p>This will show magnify.cur, the Mozilla-specific zoom cursor or a system default cursor. The first cursor on the list that the browser supports is used.</p>\n\n<p>You can also see a <a href=\"http://www.worldtimzone.com/mozilla/testcase/css3cursors.html\">list of cursor keywords</a> supported by different browsers.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>This did the trick :)</p>\n\n<pre><code>a.heroshot img {\ncursor:url(/img/layout/backgrounds/moz-zoom.gif), -moz-zoom-in;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p><strong>UPDATE:</strong> The magnify icon is now supported natively in most browsers, so you can just use this CSS:</p>\n\n<pre><code>cursor: -webkit-zoom-in;\ncursor: -moz-zoom-in;\ncursor: zoom-in;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>My side url property is working for cursor in following way </p>\n\n<pre class=\"lang-css prettyprint-override\"><code> #myid{cursor:url('myimage.png') , auto}\n</code></pre>\n\n<p>But here I think image size issue. Because If I use 32*32 size or below this then this work perfectly.</p>\n\n<p>A comma separated list of URLs to custom cursors. Note: Always specify a generic cursor at the end of the list, in case none of the URL-defined cursors can be used</p>\n\n<pre class=\"lang-css prettyprint-override\"><code> #myid{cursor:url('myimage.png') , auto}\n #myid{cursor:url('myimage.png') ,url('myimage2.gif') , auto} etc\n</code></pre>\n\n<p>If you put only this then it will not work </p>\n\n<pre class=\"lang-css prettyprint-override\"><code> #myid{cursor:url('myimage.png')}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a number of heroshot images, that have a modal popup when clicked. \nI'm trying to get my cursor to turn into  magnifying glass whenever it is moved over the image. The following CSS does not appear to work even though my <code>magnify.cur</code> is present in the right location.</p>\n\n<pre><code>a.heroshot img {\n  cursor:url(/img/magnify.cur), pointer;\n}\n</code></pre>\n\n<p>Has anyone ever done anything similar? I don't mind a JavaScript solution if one exists.</p>\n\n<p><strong>EDIT</strong>: It works in Safari, but not in Firefox.</p>\n",
            "last_activity_date": 1413122568,
            "question_id": 336925,
            "score": 29,
            "tags": [
                "css",
                "firefox",
                "mouse-cursor"
            ],
            "title": "Custom Cursor Image CSS"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>if IE8 <em>thinks</em> it supports any other format other than <code>eot</code> of the ones listed below, then it will probably try to use that one. Maybe you could use a IE8 hack, like </p>\n\n<pre><code>src: local('\u00e2\u02dc\u00ba'), url('../fonts/klavika.woff') format('woff'), url('../fonts/klavika.ttf') format('truetype'), url('../fonts/klavika.svg') format('svg');\nsrc /*\\**/: url('../fonts/klavika.eot')\\9\n</code></pre>\n\n<p>so only IE8 will read the last <code>src</code> line and thus load the .eot.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try three kinds of CSS Formats for @font-face on <a href=\"http://www.fontsquirrel.com/fontface/generator\" rel=\"nofollow\">FontSquirrel Generator</a> (in \"EXPERT...\" mode > in section \"CSS Formats:\" > \"more information\")</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>this works in ie8/9 </p>\n\n<p><a href=\"http://dev.bowdenweb.com/a/fonts/serif/alegreya/demo.html\">http://dev.bowdenweb.com/a/fonts/serif/alegreya/demo.html</a></p>\n\n<pre><code>@font-face {\n    font-family: 'AftaserifRegular';\n    src: url('AftaSerifThin-Regular-webfont.eot');\n    src: url('AftaSerifThin-Regular-webfont.eot?#iefix') format('embedded-opentype'),\n         url('AftaSerifThin-Regular-webfont.woff') format('woff'),\n         url('AftaSerifThin-Regular-webfont.ttf') format('truetype'),\n         url('AftaSerifThin-Regular-webfont.svg#AftaserifRegular') format('svg');\n    font-weight: normal;\n    font-style: normal;\n\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>It's worth checking to see if your .htaccess file allows the file type.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have tried reading multiple articles on how to deal with custom fonts in IE, but they never seemed to work for me. I tried converting the fonts to <code>EOT</code>, but that didn't seem to work either. I am not sure what I am doing wrong, so I will post my code</p>\n\n<pre><code>@font-face {\n  font-family: \"Klavika Regular\";\n    src: url('../fonts/klavika.eot');\n    src: local('\u00e2\u02dc\u00ba'), url('../fonts/klavika.woff') format('woff'), url('../fonts/klavika.ttf') format('truetype'), url('../fonts/klavika.svg') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n</code></pre>\n",
            "last_activity_date": 1382006235,
            "question_id": 7582401,
            "score": 22,
            "tags": [
                "css",
                "font-face"
            ],
            "title": "CSS @font-face not working in IE8"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>IE8 and the older have a bug in their parsers for the src attribute. So if you include more than 1 font format in the SRC, IE fails to load it and reports a 404 error.<br/>\nThe question mark solves that problem as it fools IE into thinking the rest of the string (other src) is a query string, and therefore loading just the EOT file...<br/>\nOther browsers will follow the specification and load just their required font type ...<br/>\nYou may wanna read Paul Irish's <a href=\"http://paulirish.com/2009/bulletproof-font-face-implementation-syntax/\">Bulletproof @font-face syntax</a> to know more about some other of the why's ...</p>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>The <code>?#iefix</code> is there to stop the browser interpreting any characters after the <code>?</code> as a query string and therefore prevents another possible server error.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could do anything instead of <code>?#iefix</code>: The basic objective is to put a <code>?#something</code>after the first font file in the URL as @Rexyz has already answered. </p>\n\n<pre><code>@font-face {\nfont-family: 'MyWebFont';\nsrc: url('webfont.eot'); /* IE9 Compat Modes */\nsrc: url('webfont.eot?#FooAnything') format('embedded-opentype'), /* IE6-IE8 */\n     url('webfont.woff') format('woff'), /* Modern Browsers */\n     url('webfont.ttf')  format('truetype'), /* Safari, Android, iOS */\n     url('webfont.svg#svgFontName') format('svg'); /* Legacy iOS */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Lots of articles in the web like this : <a href=\"http://www.fontspring.com/blog/fixing-ie9-font-face-problems\">http://www.fontspring.com/blog/fixing-ie9-font-face-problems</a> suggest to add a <code>?#iefix</code>to the eot url. I was curious to know <em>how</em> is this going to solve the problem. Thanks.</p>\n",
            "last_activity_date": 1370588838,
            "question_id": 8050640,
            "score": 35,
            "tags": [
                "css",
                "internet-explorer",
                "webfonts"
            ],
            "title": "How does ?#iefix solve web fonts loading in IE6-IE8?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This provides an internal property known as <code>hasLayout</code> in Internet Explorer versions 7 and lower.</p>\n\n<p>The definitive article on the subject is here: <a href=\"http://www.satzansatz.de/cssd/onhavinglayout.html\">http://www.satzansatz.de/cssd/onhavinglayout.html</a></p>\n\n<blockquote>\n  <p>A lot of Internet Explorer's rendering\n  inconsistencies can be fixed by giving\n  an element \u201clayout.\u201d In this article,\n  the authors focus on some aspects of\n  this complicated matter.</p>\n  \n  <p>\u201cLayout\u201d is an IE/Win proprietary\n  concept that determines how elements\n  draw and bound their content, interact\n  with and relate to other elements, and\n  react on and transmit application/user\n  events.</p>\n</blockquote>\n\n<hr>\n\n<p>For an example of a specific bug that <code>zoom: 1</code> (and so <code>hasLayout</code>) helps to fix:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/5838454/inline-block-doesnt-work-in-internet-explorer-7-6/5838575#5838575\">Inline block doesn&#39;t work in internet explorer 7, 6</a></p>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>I had a new problem which has been solved by <code>zoom: 1</code> caused by using <code>SlideUp()</code>across IE 6 to IE10.</p>\n\n<p>Here is the link to my post: <a href=\"http://stackoverflow.com/questions/20047470/slideup-causes-vanish-of-an-element-in-ie10/20048821#20048821\">SlideUp() causes vanish of an element (in IE10)</a></p>\n\n<p>Here is the portal to <a href=\"http://api.jquery.com/slideUp/\" rel=\"nofollow\">SlideUp documentation</a> (Find the additional notes part)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have seen people apply the CSS attribute <code>zoom:1;</code> on HTML elements.</p>\n\n<p>Why do they do this, and what bug does it fix?</p>\n",
            "last_activity_date": 1384787233,
            "question_id": 6287023,
            "score": 30,
            "tags": [
                "css",
                "internet-explorer",
                "internet-explorer-7",
                "internet-explorer-6"
            ],
            "title": "What bug does zoom:1; fix in CSS?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Okay, not what your actual code looks like, but you can't throw JavaScript variables into CSS, it won't recognize them.</p>\n\n<p>Instead, you need to create the CSS rules through JavaScript and insert them into the CSSOM (CSS Object Model). This can be done a few ways -- you can either just create a keyframe animation and add it in, or you can overwrite an existing animation. For this sake of this question, I'm going to assume you want to continually overwrite an existing keyframe animation with different rotation values.</p>\n\n<p>I've put together (and documented) a JSFiddle for you to take a look at: <a href=\"http://jsfiddle.net/russelluresti/RHhBz/2/\">http://jsfiddle.net/russelluresti/RHhBz/2/</a></p>\n\n<p>It starts off running a -10 -> 10 degree rotation animation, but then you can click the button to have it execute a rotation between random values (between -360 and 360 degrees).</p>\n\n<p>This example was hacked together primarily from earlier experimentation done by Simon Hausmann. You can see the source here: <a href=\"http://www.gitorious.org/~simon/qtwebkit/simons-clone/blobs/ceaa977f87947290fa2d063861f90c820417827f/LayoutTests/animations/change-keyframes.html\">http://www.gitorious.org/~simon/qtwebkit/simons-clone/blobs/ceaa977f87947290fa2d063861f90c820417827f/LayoutTests/animations/change-keyframes.html</a> (for as long as that link works, gitorious is pretty bad at maintaining urls).</p>\n\n<p>I've also taken the randomFromTo JavaScript function code from here: <a href=\"http://www.admixweb.com/2010/08/24/javascript-tip-get-a-random-number-between-two-integers/\">http://www.admixweb.com/2010/08/24/javascript-tip-get-a-random-number-between-two-integers/</a></p>\n\n<p>I've added documentation to the parts of the Simon Hausmann script that I've taken from him (though I've slightly modified them). I've also used jQuery just to attach the click event to my button--all other script is written in native JavaScript.</p>\n\n<p>I've tested this for Chrome 18 and Safari 5.1, and it seems to work fine in both browsers.</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>I also use this jquery plugin that will generate and play css3 keyframes on the fly.</p>\n\n<p>With your existing numbers generator it will take no effort to implement.</p>\n\n<p><a href=\"https://github.com/krazyjakee/jQuery-Keyframes\" rel=\"nofollow\">https://github.com/krazyjakee/jQuery-Keyframes</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a piece of JS code to generate random numbers and output them as variables to be used here in place of the rotation values</p>\n\n<pre><code>@-webkit-keyframes rotate {\n    0% {-webkit-transform: rotate(-10deg);}\n    100% {-webkit-transform: rotate(10deg);}\n}\n\n#dog{\n/*irrelevant settings*/\n-webkit-animation: rotate 5s infinite alternate ease-in-out;\n}\n</code></pre>\n\n<p>The code above works fine however when I try to stick the variables from the javascript into <code>rotate(variable);</code> I cannot get it to work. I am new to this so I'm 90% sure I just haven't got the syntax right for the variable (seriously I am terrible at remembering if something needs brackets, quotes, squigglys etc and I have tried all I can think of).</p>\n\n<p>Or it might be because the variable is local to the function and CSS cannot read that.</p>\n\n<p>So basically I just need some kind stranger to tell me the correct syntax and how to get CSS to read the variable if possible.</p>\n\n<p>Otherwise it looks like I will need the function to create the entirety of:</p>\n\n<pre><code>@-webkit-keyframes rotate {\n    0% {-webkit-transform: rotate(-10deg);}\n    100% {-webkit-transform: rotate(10deg);}\n}\n</code></pre>\n\n<p>...which might be a bit messy since the random variable will likely be applied to multiple css elements.</p>\n\n<p>Oh and currently the variable is formatted to include the <code>deg</code> after the number so that is not the issue. In fact, for the sake of ease just assume I am using var dogValue = \"20deg\"; and forget the random element.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1359405753,
            "question_id": 10342494,
            "score": 12,
            "tags": [
                "javascript",
                "css",
                "variables",
                "webkit",
                "keyframe"
            ],
            "title": "Set Webkit Keyframes Values Using Javascript Variable"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>In short, no. You can not apply CSS to HTML that is loaded in an iframe, unless you have control over the page loaded in the iframe.</p>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p>probably not the way you are thinking.  the iframe would have to <code>&lt;link&gt;</code> in the css file too.  AND you can't do it even with javascript if it's on a different domain.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You need JavaScript. It is the same as doing it in the parent page, except you must prefix your JavaScript command with the name of the iframe.</p>\n\n<p>Remember, the same origin policy applies, so you can only do this to an iframe element which is coming from your own server.</p>\n\n<p>I use the <a href=\"http://prototypejs.org/\">Prototype</a> framework to make it easier:</p>\n\n<pre><code>frame1.$('mydiv').style.border = '1px solid #000000'\n</code></pre>\n\n<p>or</p>\n\n<pre><code>frame1.$('mydiv').addClassName('withborder')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<p>The quick answer is: No, sorry.</p>\n\n<p>It's not possible using just CSS. You basically need to have control over the iframe content in order to style it. There are methods using javascript or your web language of choice (which I've read a little about, but am not to familiar with myself) to insert some needed styles dynamically, but you would need direct control over the iframe content, which it sounds like you do not have.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Yes. Take a look at this other thread for details:\n<a href=\"http://stackoverflow.com/questions/217776/how-to-apply-css-to-iframe\">How to apply CSS to iFrame?</a></p>\n\n<pre><code>var cssLink = document.createElement(\"link\");\ncssLink.href = \"style.css\";  cssLink .rel = \"stylesheet\";  \ncssLink .type = \"text/css\";  \nframes['frame1'].document.body.appendChild(cssLink); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Actually, you can use  tags in the html that feeds your iframe, if you can edit it.</p>\n\n<p>In the HTML file that I'm calling up I could use something like this:</p>\n\n<pre><code>&lt;style&gt;\n  h1 { font 16px/1.25 Helvetica, Arial, sans-serif }\n  a { text-decoration: none: }\n&lt;/style&gt;\n</code></pre>\n\n<p>It may be a bit redundant with your main style sheets, but it works.</p>\n",
                    "is_accepted": false,
                    "score": -28
                },
                {
                    "body": "<p>Yes, it's possible although cumbersome. You would need to print/echo the HTML of the page into the body of your page then apply a CSS rule change function. Using the same examples given above, you would essentially be using a parsing method of finding the divs in the page, and then applying the CSS to it and then reprinting/echoing it out to the end user. I don't need this so I don't want to code that function into every item in the CSS of another webpage just to aphtply.</p>\n\n<p>References:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/5725851/printing-content-of-iframe\">Printing content of IFRAME </a></li>\n<li><a href=\"http://stackoverflow.com/questions/14062158/accessing-and-printing-html-source-code-using-php-or-javascript\">Accessing and printing HTML source code using PHP or JavaScript</a></li>\n<li><a href=\"http://www.w3schools.com/js/js_htmldom_html.asp\" rel=\"nofollow\">http://www.w3schools.com/js/js_htmldom_html.asp</a></li>\n<li><a href=\"http://www.w3schools.com/js/js_htmldom_css.asp\" rel=\"nofollow\">http://www.w3schools.com/js/js_htmldom_css.asp</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use Jquery and wait till the source is loaded,\nThis is how I have achieved(Used angular interval, you can use javascript setInterval method):</p>\n\n<pre><code>var addCssToIframe = function() {\n    if ($('#myIframe').contents().find(\"head\") != undefined) {\n        $('#myIframe')\n                .contents()\n                .find(\"head\")\n                .append(\n                        '&lt;link rel=\"stylesheet\" href=\"app/css/iframe.css\" type=\"text/css\" /&gt;');\n        $interval.cancel(addCssInterval);\n    }\n};\nvar addCssInterval = $interval(addCssToIframe, 500, 0, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can retrieve the contents of an Iframe first and then use JQuery selectors against them as usual..</p>\n\n<p>$(\"#iframe-id\").contents().find(\"img\").attr(\"style\",\"width:100%;height:100%\")</p>\n\n<p>$(\"#iframe-id\").contents().find(\"img\").addClass(\"fancy-zoom\")</p>\n\n<p>$(\"#iframe-id\").contents().find(\"img\").onclick(function(){ zoomit($(this)); });</p>\n\n<p>Good Luck..!!!  :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to change styles of a div that resides inside an iframe on the page using CSS only?</p>\n",
            "last_activity_date": 1426106076,
            "question_id": 583753,
            "score": 82,
            "tags": [
                "css",
                "iframe"
            ],
            "title": "Using CSS to affect div style inside iframe"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>When you create the button it adds some additional elements, some inner <code>&lt;span&gt;</code> elements that look like this:</p>\n\n<pre><code>&lt;a data-role=\"button\" href=\"#\" onclick=\"Podcast.consumed(); return false\" id=\"consumed\"&gt;\n  &lt;span class=\"ui-btn-inner ui-btn-corner-all\"&gt;\n    &lt;span class=\"ui-btn-text\"&gt;Mark Old&lt;/span&gt;\n  &lt;/span&gt;\n&lt;/a&gt;\n</code></pre>\n\n<p>To change the text, you'll want this selector:</p>\n\n<pre><code>$(\"#consumed .ui-btn-text\").text(\"Mark New\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 64
                },
                {
                    "body": "<p>For markup like </p>\n\n<pre><code>&lt;button id=\"consumed\"&gt;Mark Old&lt;/button&gt;\n\n$(\"#consumed\").html(\"Mark New\");\n$(\"span &gt; span\", $(\"#consumed\").parent()).html(\"Mark New\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I wrote a simple plugin to do this for either a link based button, or an <code>&lt;input type=\"button\"&gt;</code> button.  So if you have</p>\n\n<pre><code>&lt;input type=\"button\" id=\"start-button\" val=\"Start\"/&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;a href=\"#\" data-role=\"button\" id=\"start-button\"&gt;Start&lt;/a&gt;\n</code></pre>\n\n<p>Either way, you can change the displayed text with</p>\n\n<pre><code>$(\"#start-button\").changeButtonText(\"Stop\");\n</code></pre>\n\n<p>Here's the plugin:</p>\n\n<pre><code>(function($) {\n    /*\n     * Changes the displayed text for a jquery mobile button.\n     * Encapsulates the idiosyncracies of how jquery re-arranges the DOM\n     * to display a button for either an &lt;a&gt; link or &lt;input type=\"button\"&gt;\n     */\n    $.fn.changeButtonText = function(newText) {\n        return this.each(function() {\n            $this = $(this);\n            if( $this.is('a') ) {\n                $('span.ui-btn-text',$this).text(newText);\n                return;\n            }\n            if( $this.is('input') ) {\n                $this.val(newText);\n                // go up the tree\n                var ctx = $this.closest('.ui-btn');\n                $('span.ui-btn-text',ctx).text(newText);\n                return;\n            }\n        });\n    };\n})(jQuery);\n</code></pre>\n\n<p>... because sprinkling your code with dependencies on exactly how jQuery Mobile renders these buttons is not a good idea.  Programming rule: if you gotta use a hack, isolate it to a well-documented, re-usable chunk of code.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>This works for me:</p>\n\n<pre><code>$('#idOfOriginalButton').prev('.ui-btn-inner').children('.ui-btn-text').html('new text');\n</code></pre>\n\n<p>solution from:\n<a href=\"http://forum.jquery.com/topic/changing-text-works-except-for-buttons\" rel=\"nofollow\">http://forum.jquery.com/topic/changing-text-works-except-for-buttons</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>&lt;a data-role=\"button\" href=\"#\" id=\"consumed\"&gt;Mark Old&lt;/a&gt;\n</code></pre>\n\n<p>You want to:</p>\n\n<pre><code>$('#consumed').text('Mark New');\n$('#consumed').button('refresh');\n</code></pre>\n\n<p>The reason is to enable your changes to be backwards-compatible with future versions of jQuery mobile.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I read through this and various options online and think I may have a simpler solution. It definitely works for links you are turning into a button with the data-role=\"button\" attribute.</p>\n\n<p>Simply put the text of the button in a separate span, and then change the contents of the span in your JavaScript.</p>\n\n<p>e.g.</p>\n\n<pre><code>&lt;a data-role=\"button\" href=\"#\" id=\"consumed\"&gt;&lt;span id=\"oldBtnText\"&gt;Mark Old&lt;/span&gt;&lt;/a&gt;\n</code></pre>\n\n<p>Then a simple</p>\n\n<pre><code>$('#oldBtnText').html(\"Old\");\n</code></pre>\n\n<p>Will do the job. It also shouldn't be a problem if jQuery changes their structure.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>In the new jquery mobile version there is an inner span tag within the button.</p>\n\n<p>So you have not to change the text of the 'a' tag but to change the text of the inner span.</p>\n\n<p>e.g.</p>\n\n<p>$(\"#consumed .ui-btn-text\").text(\"test\");</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For those interested in a easy solution, I created a plugin called <a href=\"https://github.com/AurelioDeRosa/Audero-Text-Changer\" rel=\"nofollow\">Audero Text Changer</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As of JQM 1.3.1 (maybe earlier?) simple .text() seems to be supported.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For some reason I am not having an 'ui-btn-text' classed span the first time I want to change the button text. So I workaround it like this:</p>\n\n<pre><code>var button = $(\"#consumed\");\nvar innerTextSpan = button.find(\".ui-btn-text\");\n\n// not initialized - just change label\nif (innerTextSpan.size() == 0) {\n    button.text(label);\n\n// already initialized - find innerTextSpan and change its label    \n} else {\n    innerTextSpan.text(label);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using the new jquery mobile 1.0 alpha 1 release to build a mobile app and I need to be able to toggle the text of a button.  Toggling the text works fine, but as soon as you perform the text replacement the css formatting gets broken.</p>\n\n<p>Screenshot of the messed up formatting: <a href=\"http://awesomescreenshot.com/03e2r50d2\">http://awesomescreenshot.com/03e2r50d2</a></p>\n\n<pre><code>    &lt;div class=\"ui-bar\"&gt;\n        &lt;a data-role=\"button\" href=\"#\" onclick=\"Podcast.play(); return false\" id=\"play\"&gt;Play&lt;/a&gt;\n        &lt;a data-role=\"button\" href=\"#\" onclick=\"Podcast.download(); return false\" id=\"download\"&gt;Download&lt;/a&gt;\n        &lt;a data-role=\"button\" href=\"#\" onclick=\"Podcast.consumed(); return false\" id=\"consumed\"&gt;Mark Old&lt;/a&gt;\n    &lt;/div&gt;\n\n$(\"#consumed\").text(\"Mark New\");\n</code></pre>\n",
            "last_activity_date": 1378156284,
            "question_id": 4009524,
            "score": 29,
            "tags": [
                "jquery",
                "css",
                "jquery-mobile"
            ],
            "title": "Change button text jquery mobile"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I think the best way is to layer the same image over itself a few times and test different positioning and opacities on the overlayed ones.</p>\n\n<p>Here's the CSS that I came up with. Keep in mind I'm using the <code>nth-child</code> CSS3 selector (but you don't seem to have an issue with that):</p>\n\n<pre><code>img {\n    width:300px;\n    height:300px;\n    position:absolute;\n    opacity:0.2;\n}\n\n.container {\n    position:relative;\n    overflow:hidden;\n    width:300px;\n    height:300px;\n}\n\nimg:nth-child(1) {\n    opacity:1;   \n}\n\nimg:nth-child(2) {\n    left:2px;\n    top:2px;\n}\n\nimg:nth-child(3) {\n    left:-2px;\n    top:-2px;\n}\n\nimg:nth-child(4) {\n    left:-1px;\n    top:-1px;\n}\n\nimg:nth-child(5) {\n    left:1px;\n    top:1px;\n}\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"container\"&gt;\n    &lt;img src=\"...\"&gt;\n    &lt;img src=\"...\"&gt;\n    &lt;img src=\"...\"&gt;\n    &lt;img src=\"...\"&gt;\n    &lt;img src=\"...\"&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/purmou/jXm33/\">The result</a> is pretty promising.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>CSS does not have the ability to blur, besides techniques with <code>text-shadow</code> and <code>box-shadow</code>. But even with these, borders and images aren't able to be blurred.</p>\n\n<p><a href=\"http://www.pixastic.com/\" rel=\"nofollow\">This JavaScript library</a>, however, can handle images.</p>\n\n<p>Also, you may find this <a href=\"http://css-tricks.com/1820-blurry-background-effect/\" rel=\"nofollow\">technique</a> interesting. It's a neat illusion using pre-fabricated blurry images.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I saw a cool tutorial today about blurring content with CSS <code>box-shadow</code>s, <code>text-shadow</code>s, opacity, and color.</p>\n\n<p>Here's the demo: <a href=\"http://tympanus.net/Tutorials/ItemBlur/\">http://tympanus.net/Tutorials/ItemBlur/</a></p>\n\n<p>And the tutorial: <a href=\"http://tympanus.net/codrops/2011/12/14/item-blur-effect-with-css3-and-jquery/\">http://tympanus.net/codrops/2011/12/14/item-blur-effect-with-css3-and-jquery/</a></p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Webkit has a property called <code>-webkit-filter</code> that allows for the techniques of blurring: <code>-webkit-filter: blur(15px);</code></p>\n\n<p><a href=\"http://jsfiddle.net/danielfilho/KxWRA/\">http://jsfiddle.net/danielfilho/KxWRA/</a></p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>You can simply add this to your css, for an image:</p>\n\n<p>In the following example, you'll be using a blur with 5 pixels of radius. And it is <strong>extremely important</strong> to use all vendor prefixes available, so it works on all browsers with this feature implemented, untile it comes to a \"stable\" version.</p>\n\n<pre><code>img{\n  -webkit-filter: blur(5px);\n  -moz-filter: blur(5px);\n  -ms-filter: blur(5px);\n  -o-filter: blur(5px);\n  filter: blur(5px);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>With CSS3 we can easily adjust an image. But remember this does not change the image. It only displays the adjusted image.</p>\n\n<p>See live demo and complete source code here</p>\n\n<p><a href=\"http://purpledesign.in/blog/adjust-an-image-using-css3-html5/\" rel=\"nofollow\">http://purpledesign.in/blog/adjust-an-image-using-css3-html5/</a></p>\n\n<p>See the following code for more details.</p>\n\n<p>To make an image gray:</p>\n\n<pre><code>img {\n -webkit-filter: grayscale(100%);\n -moz-filter: grayscale(100%);\n}\n</code></pre>\n\n<p>To give a sepia look:</p>\n\n<pre><code>    img {\n     -webkit-filter: sepia(100%);\n    -moz-filter: sepia(100%);\n}\n</code></pre>\n\n<p>To adjust brightness:</p>\n\n<pre><code> img {\n     -webkit-filter: brightness(50%);\n     -moz-filter: brightness(50%);  \n  }\n</code></pre>\n\n<p>To adjust contrast:</p>\n\n<pre><code> img {\n     -webkit-filter: contrast(200%);\n     -moz-filter: contrast(200%);    \n}\n</code></pre>\n\n<p>To Blur an image:</p>\n\n<pre><code>    img {\n     -webkit-filter: blur(10px);\n    -moz-filter: blur(10px);\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had to pretty thoroughly research this problem not too long ago and came up with an extremely flexible solution, though it may be overkill for some people's needs. I needed not only blurred images, but also a dynamic blur radius, overlay color, and overlay opacity for various kinds of images. I also needed to have the option of just blurring an image in a background with other elements overlayed on top of it. Here's the best cross-browser (and performant) solution I was able to create.</p>\n\n<p>First, I'd have an SVG on hand, uninspiringly called <code>blur.svg</code>. It applies a blur filter and if you look closely, the <code>stdDeviation</code> (which sets the blur radius) is actually set programmatically from a passed in parameter to the URL requesting the asset.</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"&gt;\n&lt;svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"&gt;\n&lt;filter id=\"blur\"&gt;\n&lt;feGaussianBlur stdDeviation=\"#{params[:blur]}\" /&gt;\n&lt;/filter&gt;\n&lt;/svg&gt;\n</code></pre>\n\n<p>Then I had an SCSS mixin that would allow one to add a blur overlay to any wrapper, with a customizable blur radius, overlay color, and overlay opacity.</p>\n\n<pre><code>@mixin background_blurred($blur_radius:4, $overlay_color:white, $overlay_opacity:0.6) {\n  position: relative;\n  .background_blurred {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    filter: url('blur.svg#blur?blur=#{$blur_radius}');\n    filter: progid:DXImageTransform.Microsoft.Blur(PixelRadius='#{$blur_radius}');\n    transform: translateZ(0);\n    &amp;:after {\n      content: '';\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      top: 0;\n      left: 0;\n      background: $overlay_color;\n      opacity: $overlay_opacity;\n    }\n  }\n  .foreground {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 2;\n  }\n}\n</code></pre>\n\n<p>You may be wondering why I included a <code>transform: translateZ(0);</code>. The only effect that has is to force hardware acceleration on the render to keep things performant. You may also be wondering why there are no vendor prefixes. You can look up things like <code>filter</code> on <a href=\"http://caniuse.com/#feat=css-filters\" rel=\"nofollow\">CanIUse</a> if you want, but I used <a href=\"https://github.com/postcss/autoprefixer\" rel=\"nofollow\">autoprefixer</a> on this project to worry about that stuff for me. And of course, why filter using this SVG, rather than with something like <code>blur(4px)</code>? Wouldn't that be easier? It would, but Firefox (as of writing) only supports the <code>filter</code> property with a URL.</p>\n\n<p>Then you can apply the blur mixin to a wrapper class:</p>\n\n<pre><code>.my_wrapper_class {\n  @include background_blurred(3, #f9f7f5, 0.7);\n}\n</code></pre>\n\n<p>Notice that for this method, we have to use a class with a custom background set in a style attribute instead of an image tag with a src. You can tweak the background position and override the background size to your liking.</p>\n\n<pre><code>&lt;div class=\"my_wrapper_class\"&gt;\n  &lt;div class=\"background_blurred\" style=\"background: url('URL OF IMAGE TO BLUR') no-repeat; background-position: 50% 0;\"&gt;&lt;/div&gt;\n  &lt;div class=\"foreground\"&gt;\n    &lt;p&gt;Stuff that should appear above the blurred background and not be blurred.&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><strong>Is it possible to apply a blur to an HTML element(div &amp; img)?</strong></p>\n\n<p>I am developing solely for the iPad so cross-browser compatibility is not an issue &amp; I can use HTML5 CSS3 techniques.</p>\n\n<p>I know how to blur text but this CSS doesn't blur the actual HTML element or its border:</p>\n\n<pre><code>text-shadow: 0 0 8px #000;\ncolor: transparent;\n</code></pre>\n\n<p>I googled this but it doesn't blur the image in my browsers:</p>\n\n<pre><code>filter: blur(strength=50);\n</code></pre>\n",
            "last_activity_date": 1415809512,
            "question_id": 8514954,
            "score": 22,
            "tags": [
                "javascript",
                "html",
                "css",
                "css3"
            ],
            "title": "Blur Img&#39;s &amp; Div&#39;s in HTML using CSS"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>jQuery Mobile natively provides us with the ability to capture the swipeleft and swiperight. It does not however offer us swipeup and swipedown out of the box. Adapting what the jQuery team has done for swipeleft and swiperight, we are able to create and capture those events in the same manner. See the following code to implement swipeup and swipedown:</p>\n\n<pre><code>(function() {\n    var supportTouch = $.support.touch,\n            scrollEvent = \"touchmove scroll\",\n            touchStartEvent = supportTouch ? \"touchstart\" : \"mousedown\",\n            touchStopEvent = supportTouch ? \"touchend\" : \"mouseup\",\n            touchMoveEvent = supportTouch ? \"touchmove\" : \"mousemove\";\n    $.event.special.swipeupdown = {\n        setup: function() {\n            var thisObject = this;\n            var $this = $(thisObject);\n            $this.bind(touchStartEvent, function(event) {\n                var data = event.originalEvent.touches ?\n                        event.originalEvent.touches[ 0 ] :\n                        event,\n                        start = {\n                            time: (new Date).getTime(),\n                            coords: [ data.pageX, data.pageY ],\n                            origin: $(event.target)\n                        },\n                        stop;\n\n                function moveHandler(event) {\n                    if (!start) {\n                        return;\n                    }\n                    var data = event.originalEvent.touches ?\n                            event.originalEvent.touches[ 0 ] :\n                            event;\n                    stop = {\n                        time: (new Date).getTime(),\n                        coords: [ data.pageX, data.pageY ]\n                    };\n\n                    // prevent scrolling\n                    if (Math.abs(start.coords[1] - stop.coords[1]) &gt; 10) {\n                        event.preventDefault();\n                    }\n                }\n                $this\n                        .bind(touchMoveEvent, moveHandler)\n                        .one(touchStopEvent, function(event) {\n                    $this.unbind(touchMoveEvent, moveHandler);\n                    if (start &amp;&amp; stop) {\n                        if (stop.time - start.time &lt; 1000 &amp;&amp;\n                                Math.abs(start.coords[1] - stop.coords[1]) &gt; 30 &amp;&amp;\n                                Math.abs(start.coords[0] - stop.coords[0]) &lt; 75) {\n                            start.origin\n                                    .trigger(\"swipeupdown\")\n                                    .trigger(start.coords[1] &gt; stop.coords[1] ? \"swipeup\" : \"swipedown\");\n                        }\n                    }\n                    start = stop = undefined;\n                });\n            });\n        }\n    };\n    $.each({\n        swipedown: \"swipeupdown\",\n        swipeup: \"swipeupdown\"\n    }, function(event, sourceEvent){\n        $.event.special[event] = {\n            setup: function(){\n                $(this).bind(sourceEvent, $.noop);\n            }\n        };\n    });\n\n})();\n</code></pre>\n\n<p>and here is the answer from <a href=\"http://developingwithstyle.blogspot.com/2010/11/jquery-mobile-swipe-up-down-left-right.html\">Blackdynamo</a></p>\n",
                    "is_accepted": true,
                    "score": 30
                }
            ],
            "body": "<p>I'm trying to make event on swiping up and down  instead of left and right</p>\n\n<p>i have this roll as image shows:\n<img src=\"http://i.stack.imgur.com/KPCmG.png\" alt=\"how to make swipe top down\"></p>\n\n<p>I can handle the event using arrow icon (onClick()) but i want to add swipe up down event,\nwhen adding swipe event it works on left right\nI want it up down as image displays\nany help?</p>\n",
            "last_activity_date": 1371375031,
            "question_id": 17131815,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "html5",
                "jquery-mobile"
            ],
            "title": "How to swipe top down JQuery mobile"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you mean the scoll bar that Firefox creates (like the one on the right of this page)  then I don't think you can. See this <a href=\"http://social.msdn.microsoft.com/Forums/en/webgadgetdevelopment/thread/dabce561-3736-453d-897b-884aed0a7535\" rel=\"nofollow\">link</a> for a better explanation</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You must wrap your scrollable div in another div with <code>overflow:hidden</code> that hides the scrollbar.</p>\n\n<p>See <a href=\"http://jsfiddle.net/qqPcb/\">http://jsfiddle.net/qqPcb/</a> for an example.</p>\n\n<p>BTW: The same technique is used by <a href=\"http://jscrollpane.kelvinluck.com/scroll_on_left.html\">a nice little jQuery plugin called jScrollPane</a></p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>well, there`s a much more easy way! just put</p>\n\n<pre><code>    ::-webkit-scrollbar {\n    width: 0px;\n    height: 10px;\n    }           \n</code></pre>\n\n<p>in your css style and you're done with!</p>\n",
                    "is_accepted": false,
                    "score": -4
                }
            ],
            "body": "<p>I'd like to create a div that is able to scroll but does not display scrollbars.  I have found a solution for Webkit (below) but how can this be done in other browsers?</p>\n\n<p>I'd prefer to avoid using a javascript plugin.  Hoping to find a CSS or vendor specific solution.</p>\n\n<hr>\n\n<h1>Webkit Solution</h1>\n\n<pre><code>#photoreel::-webkit-scrollbar {\n    height: 0;\n    width: 0;\n}\n#photoreel {\n    overflow-x: scroll;\n    overflow-y: hidden;\n}\n</code></pre>\n",
            "last_activity_date": 1409288491,
            "question_id": 5820304,
            "score": 16,
            "tags": [
                "css",
                "firefox",
                "scrollbar"
            ],
            "title": "Hidden scrollbars in Firefox (allows scrolling but just no scrollbar)"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You could use <a href=\"http://docs.jquery.com/UI/Effects/Slide\" rel=\"nofollow\" title=\"jQuery Slide\">jQuery Slide</a> and <a href=\"http://www.w3schools.com/jsref/jsref_random.asp\" rel=\"nofollow\" title=\"Math.random&#40;&#41;\">Math.random()</a>, generating one random number to use as the distance to move and another random number to base your decision on which direction to move in. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>well you'll need to capture the dimensions of the <code>window</code></p>\n\n<p>then you'll need to <code>generate random numbers</code> <code>&lt;=</code> the <code>height</code> and <code>width</code> of the <code>screen</code> (minus the <code>width</code>/<code>height</code> of the <code>box</code>)</p>\n\n<p>give the box an <code>absolute</code> position, and give the box have the generated <code>x</code>,<code>y</code> <code>coordinates</code></p>\n\n<p>then set a timer to call <code>this function</code> again.</p>\n\n<p>:)</p>\n\n<pre><code>$(document).ready(function() {\n    randoBox = {\n      width:$(\"body\").width(),\n      height:$(\"body\").height(),\n      x:0,\n      y:0,\n      el:null,\n      time:1000,\n      state:\"active\",\n      init: function(){\n        el = $(document.createElement('div'));\n        el.attr(\"style\",\"position:absolute;left:\"+this.x+\";top:\"+this.y+\";\");\n        el.html(\"DVD\")            \n        el.height(100);\n        el.width(100);\n        $(\"body\").append(el);\n      },\n      move:function(){\n        this.y = Math.random()*this.height+1;\n        this.x = Math.random()*this.width+1;\n        el.attr(\"style\",\"position:absolute;left:\"+this.x+\";top:\"+this.y+\";\");            \n      },\n      run:function(state){\n        if (this.state == \"active\" || state){\n          this.move();\n          setTimeout(function(){this.run()},this.time);\n        }\n      }\n    }\n    randoBox.init();\n    randoBox.run(true);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You'll want to specify the borders of the animation - what is the maximum values for the <code>top</code> and <code>left</code> attributes...\nAfter that all you need is the <code>.animate()</code> function to be called again and again...</p>\n\n<p>Something like this should work - </p>\n\n<pre><code>var maxLeft = _left_border - $('#selectedElement').width(); // counter intuitively this is actually the right border\nvar maxTop = _top_border  - $('#selectedElement').height();\nvar animationDurration = _duration;\n\nfunction randomAnimation(){\n  var randomLeft = Math.floor(Math.random()*maxLeft);\n  var randomTop = Math.floor(Math.random()*maxTop);\n\n  $('#selectedElement').animate({\n     left: randomLeft,\n     top: randomTop\n   }, animationDurration, function() {\n     randomAnimation();\n   });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>EDIT</strong> Added random movement, like DVD idle screen but can bounce anywhere.</p>\n\n<p><a href=\"http://jsfiddle.net/ryXBM/2/\" rel=\"nofollow\">http://jsfiddle.net/ryXBM/2/</a></p>\n\n<pre><code>dirR = \"+=2\";\ndirL = \"+=2\";\n\nfunction moveDir() {\n if (Math.random() &gt; 0.95) {\n  swapDirL();\n }\n if (Math.random() &lt; 0.05) {\n  swapDirR();\n }\n}\n\nfunction swapDirL() {\n    dirL == \"+=2\" ? dirL = \"-=2\" : dirL = \"+=2\"; \n}\n\nfunction swapDirR() {\n    dirR == \"+=2\" ? dirR = \"-=2\" : dirR = \"+=2\";   \n}\n\nsetInterval (function() { $(\"#d\").css(\"left\", dirL); $(\"#d\").css(\"top\", dirR); moveDir(); } , 50)\u200b\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>#d { position: absolute;\n left: 100px;\n top: 100px;\n width: 100px;\n height: 100px;\n background-color: #fce;   \n}\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>function moveDiv() {\n    var $span = $(\"#random\");\n\n    $span.fadeOut(1000, function() {\n        var maxLeft = $(window).width() - $span.width();\n        var maxTop = $(window).height() - $span.height();\n        var leftPos = Math.floor(Math.random() * (maxLeft + 1))\n        var topPos = Math.floor(Math.random() * (maxTop + 1))\n\n        $span.css({ left: leftPos, top: topPos }).fadeIn(1000);\n    });\n};\n\nmoveDiv();\nsetInterval(moveDiv, 5000);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/3Z7HE/3/\" rel=\"nofollow\"><strong>Example fiddle</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The basic premise is to generate positional values, and use jquery's animate() function to move the div. The calculation of the next position is simple, you just need a bit of math. Here's a very basic jsfiddle i just knocked up. It could do with possibly a delay timer, a dynamically calculating speed based on how far its got too move e.c.t. But it gives you a start point i hope.</p>\n\n<p><a href=\"http://jsfiddle.net/Xw29r/\">http://jsfiddle.net/Xw29r/</a></p>\n\n<p>Updated example code with speed modifier:</p>\n\n<p><a href=\"http://jsfiddle.net/Xw29r/15/\">http://jsfiddle.net/Xw29r/15/</a></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;link rel=\"stylesheet\" href=\"sample1.css\"&gt;\n        &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            $(document).ready(function(){\n                    $('.btn').mouseover(function(){\n                        $(this).css({\n                            left:(Math.random()*$(window).width()-20),\n                            top:(Math.random()*$(window).height()-20),      \n                        });\n                    });              \n            });\n        &lt;/script&gt;\n    &lt;/head&gt; \n    &lt;body&gt;\n        &lt;div class=\"btn\" style=\"position: absolute\"&gt;button&lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been doing some Googling to find an answer to this, but I've had no luck.  It could be because I'm a bit of an amateur and I don't know the proper terms to search for, but maybe someone here can steer me in the right direction or help me out.</p>\n\n<p>Anyway, I'm looking for a way to get a div to randomly, smoothly move around a page.  There will be a background color, then this image which I want to seemingly randomly, infinitely move around the page.  Much like the background of a DVD player's home screen where \"DVD\" is just floating around. </p>\n\n<p>Starting point of the div doesn't matter, nor does the ending point.  It just needs to randomly move around the page for the duration a user is on that page.</p>\n\n<p>I've got decent HTML and CSS skills, very basic JS skills, and some experience implementing jQuery.  Ideally, I'd like something which I can implement myself.</p>\n\n<p>Thanks in advance!!!</p>\n",
            "last_activity_date": 1423549268,
            "question_id": 10385950,
            "score": 9,
            "tags": [
                "jquery",
                "css",
                "animation"
            ],
            "title": "how to get a div to randomly move around a page (using jQuery or CSS)"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You can use a little javascript.</p>\n\n<pre><code>  &lt;td onclick=\"window.location='http://www.google.com/'\"&gt;\n    &lt;a href=\"http://www.google.com/\"&gt;Cell 3&lt;/a&gt;\n  &lt;/td&gt;\n</code></pre>\n\n<p>Or, you can create an element which completely fills the cell (div, span, whatever) and wrap the  around your big invisible element.    </p>\n\n<pre><code>  &lt;td&gt;\n    &lt;a href=\"http://www.google.com/\"&gt;\n      &lt;div style=\"width:100%; height:100%;\"&gt;Cell 1&lt;br&gt;\n      second line\n      &lt;/div&gt;\n    &lt;/a&gt;\n  &lt;/td&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try <code>display: block</code>:</p>\n\n<pre><code>td a {display: block; height:100%;}\n</code></pre>\n\n<p>[EDIT] WTF ... I can confirm this doesn't work in FF 4 and Chrome. This works:</p>\n\n<pre><code>td a {display: block;  height: 2.5em; border: 1px solid red;}\n</code></pre>\n\n<p>That suggests that <code>height:100%;</code> isn't defined in a table cell. Maybe this is because the cell gets its size from the content (so the content can't say \"tell me your size\" because that would lead to a loop). It doesn't even work if you set a height for the cells like so:</p>\n\n<pre><code>td {width: 200px; height: 3em; padding: 0px}\n</code></pre>\n\n<p>Again the code above will fail. So my suggestion is to use a defined height for the links (you can omit the width; that is 100% by default for block elements).</p>\n\n<p>[EDIT2] I've clicked through a hundred examples at <a href=\"http://www.cssplay.co.uk/menus/\" rel=\"nofollow\">http://www.cssplay.co.uk/menus/</a> but none of them mix single line and multi-line cells. Seems like you hit a blind spot.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You need a small change in your CSS. Making <code>td</code> <code>height:100%;</code> works for IE 8 and FF 3.6, but it doesn't work for Chrome. </p>\n\n<pre><code>td {\n  width: 200px;\n  border: solid 1px green;\n  height: 100%\n}\ntd a {\n  display: block;\n  height:100%;\n  width:100%;\n}\n</code></pre>\n\n<p>But making <code>height</code> to <code>50px</code> works for Chrome in addition to IE and FF</p>\n\n<pre><code>td {\n  width: 200px;\n  border: solid 1px green;\n  height: 50px\n}\ntd a {\n  display: block;\n  height:100%;\n  width:100%;\n}\n</code></pre>\n\n<p><strong>Edit:</strong></p>\n\n<p>You have given the solution yourself in another post here; which is to use <code>display: inline-block;</code>.\nThis works when combined with my solution for Chrome, FF3.6, IE8</p>\n\n<pre><code>td {\n  width: 200px;\n  border: solid 1px green;\n  height: 100%}\ntd a {\n  display: inline-block;\n  height:100%;\n  width:100%;\n}\n</code></pre>\n\n<p><strong>Update</strong></p>\n\n<p>The following code is working for me in IE8, FF3.6 and chrome.</p>\n\n<p>CSS</p>\n\n<pre><code>td {\n  width: 200px;\n  border: solid 1px green;\n  height: 100%;\n}\ntd a {\n  display: inline-block;\n  height:100%;\n  width:100%;\n}\ntd a:hover {\n  background-color: yellow;\n}\n</code></pre>\n\n<p>HTML</p>\n\n<pre><code>&lt;table&gt;\n  &lt;tbody&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;a href=\"http://www.google.com/\"&gt;Cell 1&lt;br&gt;\n        second line&lt;/a&gt;\n      &lt;/td&gt;\n      &lt;td&gt;\n        &lt;a href=\"http://www.google.com/\"&gt;Cell 2&lt;/a&gt;\n      &lt;/td&gt;\n      &lt;td&gt;\n        &lt;a href=\"http://www.google.com/\"&gt;Cell 3&lt;/a&gt;\n      &lt;/td&gt;\n      &lt;td&gt;\n        &lt;a href=\"http://www.google.com/\"&gt;Cell 4&lt;/a&gt;\n      &lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>The example lays <a href=\"http://jsbin.com/oqaka3\">here</a></p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>I will post the same answer here, as I did on <a href=\"http://stackoverflow.com/questions/9127274/how-to-strech-a-link-over-the-whole-cell\">my own question</a>.</p>\n\n<p>Inspired by <a href=\"http://stackoverflow.com/users/1111363/jannis-m\">Jannis M</a>'s <a href=\"http://stackoverflow.com/a/9127507/60518\">answer</a>, I did the following:</p>\n\n<pre><code>$(document).ready(function(){    \n    $('table tr').each(function(){\n        var $row = $(this);\n        var height = $row.height();\n        $row.find('a').css('height', height).append('&amp;nbsp;');  \n    });       \n});\n</code></pre>\n\n<p>I added a <code>&amp;nbsp;</code> since empty links (not containing text nodes) can not be styled(?).</p>\n\n<p>See my updated <a href=\"http://jsfiddle.net/timbuethe/fNGEU/11/\" rel=\"nofollow\">fiddle</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Only problem here is that using display: block forces the browser to ignore the vertical align: center...</p>\n\n<p>oops.</p>\n\n<p>I jury rigged it to look right for one cell with height:60 and a font that occupied 20 pixels by adding a br... Then I realized that I had some items with 2-line text. Dang.</p>\n\n<p>I ended up using the javascript. The javascript doesn't give the nice mousey pointy clicker thing, but the line of text does, so it will actually trigger a visual response, just not where I want it to... Then the Javascript will catch all the clicks that 'miss' the actual href.</p>\n\n<p>Maybe not the most elegant solution, but it works well enough for now. </p>\n\n<p>Now if I could only figure out how to do this the right way....</p>\n\n<p>Any ideas on how to add the mouse icon change to a hand for the area covered by the onclick? Right now, the click to page works, but the icon only changes when it hits the href which only affects the text.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Set an arbitrarily large negative margin and equal padding on the block element and overflow hidden on the parent.</p>\n\n<pre><code>td {\n    overflow: hidden;\n}\ntd a {\n    display: block;\n    margin: -10em;\n    padding: 10em;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/RXHuE/213/\">http://jsfiddle.net/RXHuE/213/</a></p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>Following hack works [Tested on Chrome / Firefox / Safari]\nHave the same padding for td and anchor elements. And for anchor also have margin which is equal to -ve of padding value. </p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;&lt;a&gt;Hello&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>td {                          \n    background-color: yellow;                                                                              \n    padding: 10px;                                                                                                            \n}  \na {\n    cursor:pointer;\n    display:block;\n    padding: 10px;\n    margin: -10px;\n}\n</code></pre>\n\n<p>Working Fiddle :<a href=\"http://jsfiddle.net/JasYz/\" rel=\"nofollow\">http://jsfiddle.net/JasYz/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Check this out: <a href=\"http://jsfiddle.net/3NJ8c/\" rel=\"nofollow\">jsFiddle</a></p>\n\n<p>This may be a jQuery one, but isn't a hack. It just implements what <code>&lt;a&gt;</code> fails to do for you: it changes <code>&lt;a&gt;</code>'s height dynamically according to <code>&lt;td&gt;</code>'s height <strong>and keeps <code>&lt;a&gt;</code>'s content vertically aligned to the middle, even if the user resizes the browser window</strong>.</p>\n\n<p>Successfully tested on Firefox 24, Chrome 27 and IE 9.</p>\n\n<pre><code>function enlargeLink() {\n  $(\"td &gt; a\").each(function() {\n    $(this).height(\"100%\");\n    var aH = $(this).height();\n    var tdH = $(this).closest(\"td\").height();\n    $(this).css({height: tdH, paddingTop: tdH/2-aH/2});\n    $(this).height($(this).height() - (tdH/2-aH/2));\n  });\n}\nenlargeLink(); // Runs once on startup\n$(window).resize(function() {enlargeLink();}); // Runs on every browser resize\n</code></pre>\n\n<p>What it does on each line:</p>\n\n<ol>\n<li>Selects the first <code>&lt;a&gt;</code> from every <code>&lt;td&gt;</code>;</li>\n<li>Redefine the original height (for <code>window.resize()</code>);</li>\n<li>Gets <code>&lt;a&gt;</code> and <code>&lt;td&gt;</code>'s initial heights;</li>\n<li>Sets <code>&lt;a&gt;</code>'s height as <code>&lt;td&gt;</code>'s - but since it makes <code>&lt;a&gt;</code>'s text go to the top of the cell, it then pushes it to the middle;</li>\n<li>Fix back the height gained from <code>paddingTop</code>.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a table of data and each cell is a link.  I want to allow the user to click anywhere in the table cell and have them follow the link.  Sometimes the table cells are more than one line but not always.  I use td a {display: block} to get the link to cover most of the cell.  When there is one cell in a row that is two lines and the others are only one line the one liners don't fill the entire vertical space of the table row.  Here is the sample HTML and you can see it in action here <a href=\"http://www.jsfiddle.net/RXHuE/\">http://www.jsfiddle.net/RXHuE/</a>:</p>\n\n<pre><code>&lt;head&gt;\n&lt;style type=\"text/css\"&gt;\n  td {width: 200px}\n  td a {display: block; height:100%; width:100%;}\n  td a:hover {background-color: yellow;}\n&lt;/style&gt;\n&lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;table&gt;\n  &lt;tbody&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;a href=\"http://www.google.com/\"&gt;Cell 1&lt;br&gt;\n        second line&lt;/a&gt;\n      &lt;/td&gt;\n      &lt;td&gt;\n        &lt;a href=\"http://www.google.com/\"&gt;Cell 2&lt;/a&gt;\n      &lt;/td&gt;\n      &lt;td&gt;\n        &lt;a href=\"http://www.google.com/\"&gt;Cell 3&lt;/a&gt;\n      &lt;/td&gt;\n      &lt;td&gt;\n        &lt;a href=\"http://www.google.com/\"&gt;Cell 4&lt;/a&gt;\n      &lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;\n&lt;/body&gt;\n</code></pre>\n",
            "last_activity_date": 1379969933,
            "question_id": 3966027,
            "score": 24,
            "tags": [
                "html",
                "css"
            ],
            "title": "Make link in table cell fill the entire row height"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Thanks to <a href=\"http://stackoverflow.com/users/1652962/cimmanon\">http://stackoverflow.com/users/1652962/cimmanon</a> that gives me the answer.</p>\n\n<p>The solution is putting to the vertical scrollable element a height. For example:</p>\n\n<pre><code>#container article {\n    -webkit-flex: 1 1 auto;\n    overflow-y: auto;\n    height: 0px;\n}\n</code></pre>\n\n<p>The element <strong>will</strong> have height because flexbox recalculates it unless you want a min-height so you can use height: 100px that it is exactly the same as: min-height: 100px;</p>\n\n<pre><code>#container article {\n    -webkit-flex: 1 1 auto;\n    overflow-y: auto;\n    height: 100px; /* == min-height: 100px*/\n}\n</code></pre>\n\n<p>So the best solution if you want a min-height in the vertical scroll:</p>\n\n<pre><code>#container article {\n    -webkit-flex: 1 1 auto;\n    overflow-y: auto;\n    min-height: 100px;\n}\n</code></pre>\n\n<p>If you just want full vertical scroll in case there is no enough space to see the article:</p>\n\n<pre><code>#container article {\n    -webkit-flex: 1 1 auto;\n    overflow-y: auto;\n    min-height: 0px;\n}\n</code></pre>\n\n<p>The final code: <a href=\"http://jsfiddle.net/ch7n6/4/\">http://jsfiddle.net/ch7n6/4/</a></p>\n\n<p>Thanks you again.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>The current spec says this regarding <code>flex: 1 1 auto</code>:</p>\n\n<blockquote>\n  <p>Sizes the item based on the <code>width</code>/<code>height</code> properties, but makes\n  them fully flexible, so that they absorb any free space along the main\n  axis. If all items are either <code>flex: auto</code>, <code>flex: initial</code>, or <code>flex:\n  none</code>, any positive free space after the items have been sized will be\n  distributed evenly to the items with <code>flex: auto</code>.</p>\n</blockquote>\n\n<p><a href=\"http://www.w3.org/TR/2012/CR-css3-flexbox-20120918/#flex-common\" rel=\"nofollow\">http://www.w3.org/TR/2012/CR-css3-flexbox-20120918/#flex-common</a></p>\n\n<p>It sounds to me like if you say an element is 100px tall, it is treated more like a \"suggested\" size, not an absolute.  Because it is allowed to shrink and grow, it takes up as much space as its allowed to.  That's why adding this line to your \"main\" element works:  <code>height: 0</code> (or any other smallish number).</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I want to use a full-height app using flexbox. I found what I want using old flexbox (display: box; and other things) in this link: <a href=\"http://stackoverflow.com/questions/9251447/css3-flexbox-full-height-app-and-overflow\">CSS3 Flexbox full-height app and overflow</a></p>\n\n<p>This is a correct solution for the old version of the flexbox css properties.</p>\n\n<p>If I want to try using the newer flexbox properties I'll try to use the second solution in the same link but \"hacking\" flexbox <strong>using a container with height: 0px;</strong> It makes to show a vertical scroll.</p>\n\n<p>I don't like it a lot because It introduces other problems and <strong>it is more a workarround</strong> than a solution.</p>\n\n<p>I have prepared a jsfiddle with a base example: <a href=\"http://jsfiddle.net/ch7n6/\">http://jsfiddle.net/ch7n6/</a></p>\n\n<pre><code>#container {\n    display: -webkit-flex;\n    -webkit-flex-direction: column;\n    height: 100%;\n}\n#container article {\n    -webkit-flex: 1 1 auto;\n    overflow-y: scroll;\n}\n</code></pre>\n\n<p>It is a \"full-height html web\" and the footer are at the bottom because of the flexbox of the content element. I suggest you move the bar between css code and result to simulate different height.</p>\n\n<p>Thanks for your answer.</p>\n",
            "last_activity_date": 1361365801,
            "question_id": 14962468,
            "score": 8,
            "tags": [
                "html",
                "css",
                "html5",
                "css3",
                "flexbox"
            ],
            "title": "Flexbox and vertical scroll in a full-height app using NEWER flexbox api"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The short answer is that while nesting <code>@media</code> rules (and not just media queries) is allowed in <a href=\"http://www.w3.org/TR/css3-conditional/#processing\">CSS3</a>, it wasn't allowed in <a href=\"http://www.w3.org/TR/CSS2/media.html#at-media-rule\">CSS2.1</a>, mostly because there wasn't a reason to allow it seeing as media queries did not yet exist.</p>\n\n<p>Firefox was the first to support nested <code>@media</code> rules, however since the time this answer was first posted, other browsers have slowly caught up. Namely, Chrome (and similarly, Blink Opera) has been updated to support it.</p>\n\n<p>As far as I am aware, Safari and IE still do not support it yet.</p>\n\n<hr>\n\n<p>There's a bit of terminology confusion that needs clearing up in order for us to understand what exactly is happening.</p>\n\n<p>The code you have refers to <code>@media</code> rules, and not so much media queries \u2014 the media query itself is the component that follows the <code>@media</code> token, whereas the rule is the entire block of code consisting of <code>@media</code>, the media query, and the rules nested within its set of curly braces.</p>\n\n<p>This may cause confusion among many when it comes to using media queries in CSS, as well as your specific case where a <code>@media</code> rule in an imported stylesheet works correctly even when the <code>@import</code> is accompanied by another media query. Notice that media queries can occur in both <code>@media</code> and <code>@import</code> rules. They're the same thing, but they're being used to restrictively apply style rules in different ways.</p>\n\n<p>Now, the actual issue here is that nested <code>@media</code> rules are <a href=\"http://www.w3.org/TR/CSS2/media.html#at-media-rule\">not valid in CSS2.1</a> because you're not allowed to nest <em>any</em> at-rules within <code>@media</code> rules. However, things seem quite different in CSS3. Namely, the Conditional Rules module <a href=\"http://www.w3.org/TR/css3-conditional/#processing\">states very clearly</a> that <code>@media</code> rules <em>can</em> be nested, even providing an example:</p>\n\n<blockquote>\n  <p>For example, with this set of nested rules:</p>\n  \n  <pre class=\"lang-css prettyprint-override\"><code>@media print { // rule (1)\n  #navigation { display: none }\n  @media (max-width: 12cm) { // rule (2)\n    .note { float: none }\n  }\n}\n</code></pre>\n  \n  <p>the condition of the rule marked (1) is true for print media, and the condition of the rule marked (2) is true when the width of the display area (which for print media is the page box) is less than or equal to 12cm. Thus the rule \u2018#navigation { display: none }\u2019 applies whenever this style sheet is applied to print media, and the rule \u2018.note { float: none }\u2019 is applied only when the style sheet is applied to print media and the width of the page box is less than or equal to 12 centimeters.</p>\n</blockquote>\n\n<p>Furthermore, it looks like Firefox is following this specification and processing the rules accordingly, whereas the other browsers are still treating it the CSS2.1 way.</p>\n\n<p>The grammar in the <a href=\"http://www.w3.org/TR/css3-syntax/#detailed-grammar\">Syntax module</a> hasn't been updated to reflect this yet, though; it still disallows nesting of at-rules within <code>@media</code> rules as with CSS2.1. This specification is slated for a rewrite anyway, so I guess this doesn't matter.</p>\n\n<p>Basically, CSS3 allows it (pending rewriting the Syntax module), but not CSS2.1 (because it neither defines media queries nor allows nested <code>@media</code> rule blocks). And while at least one browser has begun supporting the new spec, I wouldn't call other browsers buggy; instead, I'll say that they simply haven't caught up yet as they're really conforming to an older, more stable spec.</p>\n\n<p>Lastly, the reason why your <code>@import</code> works is because <code>@import</code> is able to work conditionally with the help of a media query. However this has no relation to the <code>@media</code> rule in your imported stylesheet. These are in fact two separate things, and are treated as such by all browsers.</p>\n\n<p>To make your code work consistently across browsers, you can either use your <code>@import</code> statement, or, since both of your rules use <code>min-width</code>, simply remove the nesting of your <code>@media</code> rules:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>@media screen and (min-width: 480px) {\n    body {\n        background-color: #6aa6cc;\n        color: #000;\n    }\n}\n\n@media screen and (min-width: 768px) {\n    body {\n        background-color: #000;\n        color: #fff;\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 48
                }
            ],
            "body": "<p>Support seems to be different across browsers..</p>\n\n<p>Check the <a href=\"http://jsfiddle.net/uZnud/2/embedded/result/\">link</a> </p>\n\n<p>Firefox: Black with white text.</p>\n\n<p>Opera, Chrome, IE9: Blue with black text.</p>\n\n<p>Which is correct and how would I make it consistent?</p>\n\n<p>The code</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>@media screen and (min-width: 480px) {\n\n    body{\n        background-color:#6aa6cc;\n        color:#000;    \n    }\n\n    @media screen and (min-width: 768px) {\n\n        body{\n            background-color:#000;\n            color:#fff;    \n        }\n    }\n}\n</code></pre>\n\n<p>\u200b</p>\n\n<p>Interestingly enough it appears that nesting media queries within a conditional <code>@import</code> does seem to work.</p>\n\n<p>e.g:</p>\n\n<h3>Index.html</h3>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Media test&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"importer.css\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Why is this not consistent.&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<h3>importer.css</h3>\n\n<pre class=\"lang-css prettyprint-override\"><code>@import url(media.css) screen and (min-width: 480px);\n</code></pre>\n\n<h3>media.css</h3>\n\n<pre class=\"lang-css prettyprint-override\"><code>body {\n    background-color: #6aa6cc;\n    color: #000;\n}\n\n@media screen and (min-width:768px) {\n    body {\n        background-color: #000;\n        color: #fff;\n    }\n}\n</code></pre>\n",
            "last_activity_date": 1403885637,
            "question_id": 11746581,
            "score": 32,
            "tags": [
                "css",
                "css3",
                "media-queries"
            ],
            "title": "Nesting @media rules in CSS"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I think you can't. The SELECT element is rendered at a point beyond the reach of CSS and HTML.\nIs it grayed out?</p>\n\n<p>But you can try to add a \"size\" atribute.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>No, you can't control the look of a select box in such detail.</p>\n\n<p>A select box is usually displayed as a dropdown list, but there is nothing that says that it always has to be displayed that way. How it is displayed depends on the system, and on some mobile phones for example you don't get a dropdown at all, but a selector that covers most or all of the screen.</p>\n\n<p>If you want to control how your form elements look in such detail, you have to make your own form controls out of regular HTML elements (or find someone else who has already done that).</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Like Guffa said, you cannot reliably get that much control over native controls.  The best way is probably to make a box of elements with radio buttons beside each item, then use labels and JavaScript to make the 'rows' interactive, so clicking on a radio button or label will color the selected row.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use a <code>&lt;div&gt;</code> to cover the scrollbar if you really want it to disappear.<br>\nAlthough it won't work on IE6, modern browsers do let you put a <code>&lt;div&gt;</code> on top of it.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is where we appreciate all the power of CSS3</p>\n\n<pre><code>&lt;style&gt;\n .bloc { display:inline-block; vertical-align:top; overflow:hidden; border:solid grey 1px; }\n .bloc select { padding:10px; margin:-5px -20px -5px -5px; }\n&lt;/style&gt;\n\n&lt;!-- Ann\u00e9es --&gt;\n&lt;div class=\"bloc\"&gt;\n  &lt;select name=\"year\" size=\"5\"&gt;\n    &lt;option value=\"2010\" &gt;2010&lt;/option&gt;\n    &lt;option value=\"2011\" &gt;2011&lt;/option&gt;\n    &lt;option value=\"2012\" SELECTED&gt;2012&lt;/option&gt;\n    &lt;option value=\"2013\" &gt;2013&lt;/option&gt;\n    &lt;option value=\"2014\" &gt;2014&lt;/option&gt;\n   &lt;/select&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/N8Brx/\"><h2>Fiddle</h2></a></p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>Resolved link:</p>\n\n<p><a href=\"http://syakirurahman.blogspot.com.es/2013/06/css-trick-to-hide-selected-scrollbarr-in-web-pages.html#.UrLvmVTuKHc\" rel=\"nofollow\">http://syakirurahman.blogspot.com.es/2013/06/css-trick-to-hide-selected-scrollbarr-in-web-pages.html#.UrLvmVTuKHc</a></p>\n\n<p>I find with css properly tucked inside a style tag.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Hello I have select box with multiple choices and I need to hide the vertical scrollbar, is it possible?</p>\n\n<pre><code>&lt;select name=\"sCat\" multiple=\"true\"&gt;\n&lt;!-- My Option Here --&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>Okey, but how then I can achieve an effect where I can select item from list that has ID and then use jQuery to manage this id.click functions? What element I should use then?</p>\n",
            "last_activity_date": 1387460032,
            "question_id": 4531269,
            "score": 30,
            "tags": [
                "html",
                "css"
            ],
            "title": "Hide vertical scrollbar in &lt;select&gt; element"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>No, cross-browser form custimization is very hard if not impossible to get it right for all browsers. If you really care about the appearance of those widgets you should use a javascript implementation.</p>\n\n<p>see <a href=\"http://www.456bereastreet.com/archive/200409/styling_form_controls/\">http://www.456bereastreet.com/archive/200409/styling_form_controls/</a>\nand <a href=\"http://developer.yahoo.com/yui/examples/button/btn_example07.html\">http://developer.yahoo.com/yui/examples/button/btn_example07.html</a></p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>The <code>&lt;select&gt;</code> element is generated by the application and styling is not part of the CSS/HTML spec.</p>\n\n<p>You would have to fake it with your own DIV and overlay it on top of the existing one, or build your own control emulating the same functionality.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>No, you can't do it by using an actual <code>&lt;select&gt;</code>, but there are techniques that allow you to \"replace\" them with javascript solutions that look better.</p>\n\n<p>Here's a good article on the topic: <a href=\"http://v2.easy-designs.net/articles/replaceSelect/\" rel=\"nofollow\">&lt;select> Something New</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Unless you plan on creating your own drop down list (and not using a standard library drop down list), you are stuck. The DDL control's look is going to be based upon the system you are running and/or the browser that is rendering the output.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Not easily done I am afraid. The problem is Css cannot replace the arrow in a select as this is rendered by the browser. But you can build a new control from div and input elements and Javascript to perform the same function as the select. </p>\n\n<p>Try looking at some of the autocomplete plugins for Jquery for example.</p>\n\n<p>Otherwise there is some info on the select element here:</p>\n\n<p><a href=\"http://www.devarticles.com/c/a/Web-Style-Sheets/Taming-the-Select/\" rel=\"nofollow\">http://www.devarticles.com/c/a/Web-Style-Sheets/Taming-the-Select/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can acheive this with CSS but you are not techinically changing the arrow itself.</p>\n\n<p>In this example I am actually hiding the default arrow and displaying my own arrow instead.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"styleSelect\"&gt;\n  &lt;select class=\"units\"&gt;\n    &lt;option value=\"Metres\"&gt;Metres&lt;/option&gt;\n    &lt;option value=\"Feet\"&gt;Feet&lt;/option&gt;\n    &lt;option value=\"Fathoms\"&gt;Fathoms&lt;/option&gt;\n  &lt;/select&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.styleSelect select {\n  background: transparent;\n  width: 168px;\n  padding: 5px;\n  font-size: 16px;\n  line-height: 1;\n  border: 0;\n  border-radius: 0;\n  height: 34px;\n  -webkit-appearance: none;\n  color: #000;\n}\n\n.styleSelect {\n  width: 140px;\n  height: 34px;\n  overflow: hidden;\n  background: url(\"images/downArrow.png\") no-repeat right #fff;\n  border: 2px solid #000;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                }
            ],
            "body": "<p>I want to change the default appearance of the arrow of a dropdown list so that looks the same across browsers. Is there a way to override the default look and feel of the drop down arrow using CSS or otherwise ?</p>\n",
            "last_activity_date": 1359602852,
            "question_id": 611482,
            "score": 29,
            "tags": [
                "css",
                "drop-down-menu"
            ],
            "title": "Change color and appearance of drop down arrow"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The demo is keeping the element's  <code>position:fixed</code> and manipulating the <code>left</code> property of the element:</p>\n\n<pre><code>var leftInit = $(\".scroll_fixed\").offset().left;\nvar top = $('.scroll_fixed').offset().top - parseFloat($('.scroll_fixed').css('margin-top').replace(/auto/, 0));\n\n\n$(window).scroll(function(event) {\n    var x = 0 - $(this).scrollLeft();\n    var y = $(this).scrollTop();\n\n    // whether that's below the form\n    if (y &gt;= top) {\n        // if so, ad the fixed class\n        $('.scroll_fixed').addClass('fixed');\n    } else {\n        // otherwise remove it\n        $('.scroll_fixed').removeClass('fixed');\n    }\n\n    $(\".scroll_fixed\").offset({\n        left: x + leftInit\n    });\n\n});\n</code></pre>\n\n<p>Using <code>leftInit</code> takes a possible left margin into account.  Try it out here: <a href=\"http://jsfiddle.net/F7Bme/\">http://jsfiddle.net/F7Bme/</a></p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>You have probably moved on by now, but here is an answer for anyone else looking for a horizontally scrollable fixed element solution.  This jquery plugin was created to solve this exact problem.</p>\n\n<p>This demo uses a shopping cart summary that will still scroll horizontally when fixed to the top of the page; and, I have also used it for a header above tabular data:</p>\n\n<p>Demo: <a href=\"http://jsfiddle.net/y3qV5/434/\">http://jsfiddle.net/y3qV5/434/</a> (updated)</p>\n\n<p>Plugin and source: <a href=\"https://github.com/bigspotteddog/ScrollToFixed\">https://github.com/bigspotteddog/ScrollToFixed</a></p>\n\n<p>Usage:</p>\n\n<pre><code>$(document).ready(function() {\n    $('#cart').scrollToFixed( { marginTop: 10 } );\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>use css property <code>position:sticky</code> to get it.</p>\n\n<p>Here is the article explained and live demo.</p>\n\n<p><a href=\"http://updates.html5rocks.com/2012/08/Stick-your-landings-position-sticky-lands-in-WebKit\" rel=\"nofollow\">http://updates.html5rocks.com/2012/08/Stick-your-landings-position-sticky-lands-in-WebKit</a> </p>\n\n<p>the only drawback is browser compatibility.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a div.scroll_fixed with the following CSS</p>\n\n<pre><code>.scroll_fixed {\n    position:absolute\n    top:210px\n\n}\n.scroll_fixed.fixed {\n    position:fixed;\n    top:0;\n} \n</code></pre>\n\n<p>I'm using the following jQuery code to set the .fixed class when the div reaches the top of the page.</p>\n\n<pre><code>var top = $('.scroll_fixed').offset().top - parseFloat($('.scroll_fixed').css('margin-top').replace(/auto/, 0));\n\n$(window).scroll(function (event) {\n    // what the y position of the scroll is\n    var y = $(this).scrollTop();\n\n    // whether that's below the form\n    if (y &gt;= top) {\n        // if so, ad the fixed class\n        $('.scroll_fixed').addClass('fixed');\n    } else {\n        // otherwise remove it\n        $('.scroll_fixed').removeClass('fixed');\n    }\n});\n</code></pre>\n\n<p>This works great for the vertical scroll fixing.  But with a small browser window, horizontal scrolling causes a clash with content to the right of this fixed div.</p>\n\n<p>I would like the div to scroll with the content horizontally.</p>\n\n<p>Could anyone point me in the right direction.  Still getting my feet wet with JS/JQuery.</p>\n\n<p>I basically want it to work like the second box in this <a href=\"http://demo.rickyh.co.uk/css-position-x-and-position-y/\">example</a>.</p>\n",
            "last_activity_date": 1403788741,
            "question_id": 4676131,
            "score": 24,
            "tags": [
                "jquery",
                "css",
                "fixed"
            ],
            "title": "How do I get a fixed position div to scroll horizontally with the content? Using jQuery"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>CSS3 provides the <code>:first-of-type</code> pseudo-class for selecting the first element of its type in relation to its siblings. However it doesn't have a <code>:first-of-class</code> pseudo-class.</p>\n\n<p>As a workaround, if you know the default styles for your other <code>.A</code> elements, you can use an overriding rule with the general sibling combinator <code>~</code> to apply styles to them. This way, you sort of \"undo\" the first rule.</p>\n\n<p>The bad news is that <code>~</code> is a CSS3 selector.<br>\nThe good news is that IE recognizes it starting from IE7, like CSS2's <code>&gt;</code>, so if you're worried about browser compatibility, the only \"major browser\" this fails on is IE6.</p>\n\n<p>So you have these two rules:</p>\n\n<pre><code>.C &gt; * &gt; .A {\n    /* \n     * Style every .A that's a grandchild of .C.\n     * This is the element you're looking for.\n     */\n}\n\n.C &gt; * &gt; .A ~ .A {\n    /* \n     * Style only the .A elements following the first .A child\n     * of each element that's a child of .C.\n     * You need to manually revert/undo the styles in the above rule here.\n     */\n}\n</code></pre>\n\n<p>How styles are applied to elements is illustrated below:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;div class=\"C\"&gt;\n    &lt;!--\n    As in the question, this element may have a class other than B.\n    Hence the intermediate '*' selector above (I don't know what tag it is).\n    --&gt;\n    &lt;div class=\"B\"&gt;\n        &lt;div class=\"E\"&gt;Content&lt;/div&gt; &lt;!-- [1] --&gt;\n        &lt;div class=\"F\"&gt;Content&lt;/div&gt; &lt;!-- [1] --&gt;\n        &lt;div class=\"A\"&gt;Content&lt;/div&gt; &lt;!-- [2] --&gt;\n        &lt;div class=\"A\"&gt;Content&lt;/div&gt; &lt;!-- [3] --&gt;\n    &lt;/div&gt;\n    &lt;div class=\"D\"&gt;\n        &lt;div class=\"A\"&gt;Content&lt;/div&gt; &lt;!-- [2] --&gt;\n        &lt;div class=\"E\"&gt;Content&lt;/div&gt; &lt;!-- [1] --&gt;\n        &lt;div class=\"F\"&gt;Content&lt;/div&gt; &lt;!-- [1] --&gt;\n        &lt;div class=\"A\"&gt;Content&lt;/div&gt; &lt;!-- [3] --&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<ol>\n<li><p>This element does not have class <code>A</code>. No rules are applied.</p></li>\n<li><p>This element has class <code>A</code>, so the first rule is applied. However it doesn't have any other such elements occurring before it, which the <code>~</code> selector requires, so the second rule is <strong>not</strong> applied.</p></li>\n<li><p>This element has class <code>A</code>, so the first rule is applied. It also comes after other elements with the same class under the same parent, as required by <code>~</code>, so the second rule is also applied. The first rule is overridden.</p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<p>I'm trying to select a first element of class 'A' in an element with id or class 'B'. I've tried a combination of > + and first-child selectors, since it's not a first element inside class element 'B'. It worked, but ... i'm trying to override some default css and i have no control over the server side and it seems that the class 'A' element is sometimes generated in a different position. Here's an illustration:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;class-C&gt;\n  &lt;class-B&gt; might have a different name\n      &lt;some-other-classes&gt; structure and element count might differ\n      &lt;class-A&gt;&lt;/class-A&gt; our target\n      &lt;class-A&gt;&lt;/class-A&gt; this shouldn't be affected\n      &lt;class-A&gt;&lt;/class-A&gt; this shouldn't be affected\n  &lt;/class-B&gt;\n&lt;/class-C&gt;\n</code></pre>\n\n<p>Sometimes the name of the class 'B' differs and the elements before 'A' differ as well. So is there any way to select the first occurence of 'A' in an element 'C'? Because class 'C' is always there. I can't use + > and first-child selectors since the path to first 'A' element differs, but element 'C' is always there and it would be a nice starting point.</p>\n\n<p>Thanks for the help</p>\n",
            "last_activity_date": 1395232106,
            "question_id": 3615518,
            "score": 11,
            "tags": [
                "css",
                "css-selectors"
            ],
            "title": "CSS selector to select first element of a given class"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Here is <strong>a more efficient way of fading out</strong> an element:</p>\n\n<pre><code>function fade(element) {\n    var op = 1;  // initial opacity\n    var timer = setInterval(function () {\n        if (op &lt;= 0.1){\n            clearInterval(timer);\n            element.style.display = 'none';\n        }\n        element.style.opacity = op;\n        element.style.filter = 'alpha(opacity=' + op * 100 + \")\";\n        op -= op * 0.1;\n    }, 50);\n}\n</code></pre>\n\n<p>you can do the reverse for fade in</p>\n\n<p>setInterval or setTimeout should not get a string as argument</p>\n\n<p>google the evils of eval to know why</p>\n\n<p>And here is <strong>a more efficient way of fading in</strong> an element. </p>\n\n<pre><code>function unfade(element) {\n    var op = 0.1;  // initial opacity\n    element.style.display = 'block';\n    var timer = setInterval(function () {\n        if (op &gt;= 1){\n            clearInterval(timer);\n        }\n        element.style.opacity = op;\n        element.style.filter = 'alpha(opacity=' + op * 100 + \")\";\n        op += op * 0.1;\n        alert(\"here\");\n    }, 10);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>why do that to yourself?</p>\n\n<p>jQuery:</p>\n\n<pre><code>$(\"#element\").fadeOut();\n$(\"#element\").fadeIn();\n</code></pre>\n\n<p>I think that's easier.</p>\n\n<p><a href=\"http://jquery.com\">www.jquery.com</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I think i get the problem : </p>\n\n<p>Once you make the div fade out you aren't exiting the function : fadeout calls itself again over even after opacity has become 0</p>\n\n<pre><code>if(element.style.opacity &lt; 0.0) {\n            return;\n        } \n</code></pre>\n\n<p>And do the same for fadein too</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>if you are learner, so i advise you to view the google developer video</p>\n\n<p>[Google Developer Video] <a href=\"http://www.youtube.com/watch?v=qeFHv6bvDEI&amp;feature=relmfu\" rel=\"nofollow\">http://www.youtube.com/watch?v=qeFHv6bvDEI&amp;feature=relmfu</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Ok, I've worked it out</p>\n\n<pre><code>element.style.opacity = parseFloat(element.style.opacity) + 0.1;\n</code></pre>\n\n<p>Should be used instead of</p>\n\n<pre><code>element.style.opacity += 0.1;\n</code></pre>\n\n<p>Same with</p>\n\n<pre><code>element.style.opacity = parseFloat(element.style.opacity) - 0.1;\n</code></pre>\n\n<p>Instead of</p>\n\n<pre><code>element.style.opacity -= 0.1;\n</code></pre>\n\n<p>Because opacity value is stored as string, not as float. I'm still not sure though why the addition has worked.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Heres my code for a fade in/out toggle functions.</p>\n\n<pre><code>fadeIn: function (len) {\n                var obj = this.e;\n                obj.style.display = '';\n                var op = 0; \n                var timer = setInterval(function () {\n                    if (op &gt;= 1 || op &gt;= 1.0){\n                        console.log('done', op)\n                        clearInterval(timer);\n                    }\n                    obj.style.opacity = op.toFixed(1);\n                    op += 0.1;\n                    console.log(obj.style.opacity);\n                }, len);\n                return this;\n            },\n    fadeOut: function (len) {\n                var obj = this.e;\n                var op = 1; \n                var timer = setInterval(function () {\n                    if (op &lt;= 0){\n                        clearInterval(timer);\n                        console.log('done', op)\n                        obj.style.display = 'none';\n                    }\n                    obj.style.opacity = op.toFixed(1);\n                    op -= 0.1;\n                    console.log(obj.style.opacity)\n                }, len);\n                return this;\n            },\n</code></pre>\n\n<p>This was from a jQuery style lib i did. hope it's helpfull. link to lib on cloud9:\n<a href=\"https://c9.io/christopherdumas/magik_wb\" rel=\"nofollow\">https://c9.io/christopherdumas/magik_wb</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's my attempt with Javascript and CSS3 animation\nSo the HTML:</p>\n\n<pre><code> &lt;div id=\"handle\"&gt;Fade&lt;/div&gt; \n &lt;div id=\"slideSource\"&gt;Whatever you want images or  text here&lt;/div&gt;\n</code></pre>\n\n<p>The CSS3 with transitions:</p>\n\n<pre><code>div#slideSource {\nopacity:1;\n-webkit-transition: opacity 3s;\n-moz-transition: opacity 3s;     \ntransition: opacity 3s; \n}\n\ndiv#slideSource.fade {\nopacity:0;\n}\n</code></pre>\n\n<p>The Javascript part. Check if the className exists, if it does then add the class and transitions. </p>\n\n<pre><code>document.getElementById('handle').onclick = function(){\n    if(slideSource.className){\n        document.getElementById('slideSource').className = '';\n    } else {\n        document.getElementById('slideSource').className = 'fade';\n    }\n}\n</code></pre>\n\n<p>Just click and it will fade in and out. I would recommend using JQuery as Itai Sagi mentioned. I left out Opera and MS, so I would recommend using prefixr to add that in the css.  This is my first time posting on stackoverflow but it should work fine. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is a jsfiddle of what Seattle Ninja already said (and thanks for him).</p>\n\n<p><a href=\"http://jsfiddle.net/qrc8m/\" rel=\"nofollow\">http://jsfiddle.net/qrc8m/</a></p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"handle\"&gt;Fade&lt;/div&gt; \n&lt;div id=\"slideSource\"&gt;Whatever you want images or  text here&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>div#slideSource {\nopacity:1;\ntransition: opacity 1s; \n}\n\ndiv#slideSource.fade {\nopacity:0;\n}\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>var slideSource = document.getElementById('slideSource');\n\ndocument.getElementById('handle').onclick = function(){\n    slideSource.className = slideSource.className ? '' : 'fade';\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I want to make an HTML div tag fade in and fade out. </p>\n\n<p>I have some code that fades out, but when I fade in, the opacity of the div stays at 0.1 and doesn't increase.</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;\n\n &lt;html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"&gt;\n &lt;head&gt;\n    &lt;title&gt;Fade to Black&lt;/title&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        //&lt;![CDATA[\n        function slidePanel(elementToSlide, slideSource)\n        {\n            var element = document.getElementById(elementToSlide);\n\n            if(element.up == null || element.up == false) {\n                setTimeout(\"fadeOut(\\\"\" + elementToSlide + \"\\\")\", 100);\n                element.up = true;\n                slideSource.innerHTML = \"Bring it down\";\n            } else {\n                setTimeout(\"fadeIn(\\\"\" + elementToSlide + \"\\\")\", 100);\n                element.up = false;\n                slideSource.innerHTML = \"Take it up\";\n            }\n        }\n\n        function fadeIn(elementToFade)\n        {\n            var element = document.getElementById(elementToFade);\n\n            element.style.opacity += 0.1;\n            if(element.style.opacity &gt; 1.0) {\n                element.style.opacity = 1.0;\n            } else {\n                setTimeout(\"fadeIn(\\\"\" + elementToFade + \"\\\")\", 100);\n            }\n        }\n\n        function fadeOut(elementToFade)\n        {\n            var element = document.getElementById(elementToFade);\n\n            element.style.opacity -= 0.1;\n            if(element.style.opacity &lt; 0.0) {\n                element.style.opacity = 0.0;\n            } else {\n                setTimeout(\"fadeOut(\\\"\" + elementToFade + \"\\\")\", 100);\n            }\n        }\n        //]]&gt;\n    &lt;/script&gt;\n &lt;/head&gt;\n &lt;body&gt;\n    &lt;div&gt;\n        &lt;div id=\"slideSource\"\n              style=\"width:150px; height:20px;\n                    text-align:center; background:green\"\n             onclick=\"slidePanel('panel', this)\"&gt;\n            Take It up\n        &lt;/div&gt;\n        &lt;div id=\"panel\"\n              style=\"width:150px; height:130px;\n                    text-align:center; background:red;\n                    opacity:1.0;\"&gt;\n            Contents\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>What am I doing wrong and what is the best way to fade in and fade out an element?</p>\n",
            "last_activity_date": 1415237742,
            "question_id": 6121203,
            "score": 10,
            "tags": [
                "javascript",
                "css",
                "xhtml"
            ],
            "title": "How to do fade-in and fade-out with JavaScript and CSS"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>you can overcome Webkit's pseudo classes + general/adjacent sibling selectors bugs by faking animation on the body element:</p>\n\n<pre><code>body { -webkit-animation: bugfix infinite 1s; }\n\n@-webkit-keyframes bugfix { \n  from { padding: 0; } \n  to { padding: 0; } \n}\n</code></pre>\n\n<p>you can check it out here: <a href=\"http://jsfiddle.net/jalbertbowdenii/ds2yY/1/\">http://jsfiddle.net/jalbertbowdenii/ds2yY/1/</a></p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Alternatively, the fix can be applied only to the elements that are having the update issue rather than to the body element:</p>\n\n<p><a href=\"http://jsfiddle.net/ds2yY/12/\">http://jsfiddle.net/ds2yY/12/</a></p>\n\n<pre><code>.force-repaint { -webkit-animation: bugfix infinite 1s; }\n\n@-webkit-keyframes bugfix {\n    from { fill: 0; }\n    to { fill: 0; }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<h2>Easy Fix without Animations</h2>\n\n<p>Handled a similar issue <a href=\"http://stackoverflow.com/questions/17219286/why-does-the-general-sibling-combinator-allow-toggling-pseudo-elements-content\">here</a>, where <a href=\"http://jsfiddle.net/ds2yY/24/\">this idea of changed pseudo-classes solved it</a> (note: <code>nth-child(n)</code> will always match):</p>\n\n<pre><code>div:hover + a:nth-child(n) + div\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>Safari and Chrome, as well as Opera and Firefox, can handle the <code>:hover</code> pseudo-class and adjacent-sibling selectors:</p>\n\n<p><code>a:hover + div {}</code></p>\n\n<p>This works.</p>\n\n<p>However, when another adjacent-sibling is added:</p>\n\n<p><code>div:hover + a + div {}</code></p>\n\n<p>Webkit falls apart.</p>\n\n<p>However, if you first hover over <code>&lt;a&gt;</code> and <em>then</em> hover over the <code>&lt;div&gt;</code> the style is applied as it ought to.</p>\n\n<p>I'm further confounded, because if you add: </p>\n\n<p><code>div:hover ~ div {}</code></p>\n\n<p>with or without a style declared, it starts working as it ought to.</p>\n\n<p><a href=\"http://jsfiddle.net/ds2yY/\">Demo</a></p>\n\n<p>I see this problem in:</p>\n\n<ul>\n<li>Google Chrome 15.0.874.121</li>\n<li>Safari 5.1.1</li>\n</ul>\n\n<p>for OS X.</p>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1380898816,
            "question_id": 8320530,
            "score": 9,
            "tags": [
                "css",
                "google-chrome",
                "safari",
                "webkit",
                "css-selectors"
            ],
            "title": "Webkit bug with `:hover` and multiple adjacent-sibling selectors"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Images (and inline-block elements in general) are treated like a character.</p>\n\n<p>As such, they obey the rule of the baseline.</p>\n\n<p>In normal text, the baseline is the line across the bottom of most letters, such as in this sentence.</p>\n\n<p>But some letters, such as <code>p</code>, <code>q</code>, <code>j</code> and so on, have tails that drop below the baseline. In order to prevent these tails from colliding with letters on the next line, space is reserved between the baseline and the bottom line.</p>\n\n<p>This diagram illustrates the different lines used by text:</p>\n\n<p><a href=\"http://www.whatwg.org/specs/web-apps/current-work/images/baselines.png\"><img src=\"http://www.whatwg.org/specs/web-apps/current-work/images/baselines.png\" alt=\"WHATWG\"></a><br>\n(Image from <a href=\"http://www.whatwg.org/\">WHATWG</a>, click for fullsize)</p>\n\n<p>So, the image is aligned to the baseline, even if there is no text. Fortunately, the fix is very simple:</p>\n\n<pre><code>img {vertical-align:bottom}\n</code></pre>\n\n<p>This will align the image to the bottom of the line, also removing the mystery space.</p>\n\n<p><em>Just be careful, if your image is small (smaller than the line height), you may start seeing mystery space appearing above the image instead. To fix this, add <code>line-height:1px</code> to the container element.</em></p>\n\n<p>Hopefully this helps the many people I've seen ask about this and similar problems!</p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>Changing <code>img</code> to a block level element</p>\n\n<pre><code>img {\n  display: block;\n}\n</code></pre>\n\n<p>will also remove the space below the image.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>check out this CSS <a href=\"http://jsfiddle.net/vasanthanvas/g4gh1q9u/\" rel=\"nofollow\">jsfiddle</a>\nCSS</p>\n\n<pre><code>div {border:1px solid red;width:100px;line-height:0}\nimg {width:100px;}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Images gain a mysterious empty space underneath, even if <code>padding:0;margin:0</code> are applied.</p>\n\n<p><a href=\"http://jsfiddle.net/cLETP/\" rel=\"nofollow\">Demonstration</a></p>\n\n<p><img src=\"http://i.imgur.com/Cnmpu1P.png\" alt=\"screenshot\"></p>\n\n<p>The red border should hug the image, but there is space on the bottom side.</p>\n\n<p>What causes this, and how can I remove this space?</p>\n",
            "last_activity_date": 1423828213,
            "question_id": 17905827,
            "score": 16,
            "tags": [
                "html",
                "css",
                "image"
            ],
            "title": "Why does my image have space underneath?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Well, I don't do a ton of jQuery, but in the CSS/Javascript world I would just use the object model and write a statement as follows:</p>\n\n<pre><code>if(leftDiv.style.height &gt; rightDive.style.height)\n   rightDiv.style.height = leftDiv.style.height;\nelse\n   leftDiv.style.height = rightDiv.style.height)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You <em>could</em> use jQuery, but there are better ways to do this.</p>\n\n<p>This sort of question comes up a lot and there are generally 3 answers...</p>\n\n<h3><a href=\"http://www.alistapart.com/articles/holygrail\" rel=\"nofollow\">1. Use CSS</a></h3>\n\n<p>This is the 'best' way to do it, as it is the most semantically pure approach (without resorting to JS, which has its own problems). The best way is to use the <code>display: table-cell</code> and related values. You could also try using <a href=\"http://www.alistapart.com/articles/fauxcolumns/\" rel=\"nofollow\">the faux background technique</a> (which you can do with CSS3 gradients).</p>\n\n<h3><a href=\"http://www.sadtrombone.com/\" rel=\"nofollow\">2. Use Tables</a></h3>\n\n<p>This seems to work great, but at the expense of having an unsemantic layout. You'll also cause a stir with purists. I have all but avoided using tables, and you should too.</p>\n\n<h3><a href=\"http://www.filamentgroup.com/lab/setting_equal_heights_with_jquery/\" rel=\"nofollow\">3. Use jQuery / JavaScript</a></h3>\n\n<p>This benefits in having the most semantic markup, except with JS disabled, you will not get the effect you desire.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>There's also a jQuery plugin called equalHeights that I've used with some success.</p>\n\n<p>I'm not sure if the one I'm using is the one from the filament group mentioned above, or if it's <a href=\"http://www.cssnewbie.com/equalheights-jquery-plugin/\" rel=\"nofollow\">this one that was the first google result</a>... Either way a jquery plugin is probably the easiest, most flexible way to go.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a way to do it with pure CSS, however, as you'll notice in the example (which works in IE 7 and Firefox), borders can be difficult - but they aren't impossible, so it all depends what you want to do.  This example assumes a rather common CSS structure of body > wrapper > content container > column 1 and column 2.  </p>\n\n<p>The key is the bottom margin and its canceling padding.</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n&lt;title&gt;Equal Height Columns&lt;/title&gt;\n&lt;style type=\"text/css\"&gt;\n&lt;!--\n* { padding: 0; margin: 0; }\n#wrapper { margin: 10px auto; width: 600px; }\n#wrapper #main_container { width: 590px; padding: 10px 0px 10px 10px; background: #CCC; overflow: hidden; border-bottom: 10px solid #CCC; }\n#wrapper #main_container div { float: left; width: 263px; background: #999; padding: 10px; margin-right: 10px; border: 1px solid #000; margin-bottom: -1000px; padding-bottom: 1000px; }\n#wrapper #main_container #right_column { background: #FFF; }\n--&gt;\n&lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;div id=\"wrapper\"&gt;\n    &lt;div id=\"main_container\"&gt;\n        &lt;div id=\"left_column\"&gt;\n            &lt;p&gt;I have two divs inside of a container. One on the left, one on the right, side by side. How am I able to make each one be of equal height, even though they have different content.&lt;/p&gt;\n        &lt;/div&gt;&lt;!-- LEFT COLUMN --&gt;\n        &lt;div id=\"right_column\"&gt;\n          &lt;p&gt;I have two divs inside of a container. One on the left, one on the right, side by side. How am I able to make each one be of equal height, even though they have different content.&lt;/p&gt;\n          &lt;p&gt;&amp;nbsp;&lt;/p&gt;\n          &lt;p&gt;For example, the right div has a lot of content, and is double the height of the left div, how do I make the left div stretch to the same height of the right div?&lt;/p&gt;\n          &lt;p&gt;&amp;nbsp;&lt;/p&gt;\n          &lt;p&gt;Is there some JavaScript (jQuery) code to accomplish this?&lt;/p&gt;\n        &lt;/div&gt;&lt;!-- RIGHT COLUMN --&gt;\n    &lt;/div&gt;&lt;!-- MAIN CONTAINER --&gt;\n&lt;/div&gt;&lt;!-- WRAPPER --&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>This is what it looks like:</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/qdEzm.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Use this in jquery document ready function. Considering there are two divs having ids \"left\" and \"right.\"</p>\n\n<pre><code>var heightR = $(\"#right\").height();\nvar heightL = $(\"#left\").height();\n\nif(heightL &gt; heightR){\n    $(\"#right\").css({ height: heightL});\n} else {\n    $(\"#left\").css({ height: heightR});\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've seen many attempts to do this, though none met my OCD needs. You might need to dedicate a second to get your head around this, though it is better than using JavaScript.</p>\n\n<p>Known downsides:</p>\n\n<ul>\n<li>Does not support multiple element rows in case of a container with dynamic width.</li>\n<li>Does not work in IE6.</li>\n</ul>\n\n<p>The base:</p>\n\n<p><img src=\"http://i.stack.imgur.com/iReWq.png\" alt=\"base layout\"></p>\n\n<ul>\n<li><strong>red</strong> is (auxiliary) container that you would use to set margin to the content.</li>\n<li><strong>green</strong> is <code>position: relative; overflow: hidden</code> and (optionally, if you want columns to be centered) <code>text-align: center; font-size: 0; line-height: 0;</code></li>\n<li><strong>blue</strong> <code>display: block; float: left;</code> or (optionally, if you want columns to be centered) <code>display: inline-block; vertical-align: top;</code></li>\n</ul>\n\n<p>So far nothing out of ordinary. Whatever content that <strong>blue</strong> element has, you need to add an absolutely positioned element (<strong>yellow</strong>; note that the <code>z-index</code> of this element must be lower than the actual <em>content</em> of the blue box) with this element and set <code>top: 0; bottom: 0;</code> (don't set left or right position).</p>\n\n<p><img src=\"http://i.stack.imgur.com/hQCr3.png\" alt=\"base with absolute\"></p>\n\n<p>All your elements now have equal height. For most of the layouts, this is already sufficient. My scenario required to have dynamic content followed by a static content, where static content must be on the same line.</p>\n\n<p><img src=\"http://i.stack.imgur.com/4gbm3.png\" alt=\"enter image description here\"></p>\n\n<p>To achieve this, you need to add <code>padding-bottom</code> (<strong>dark green</strong>) eq to the fixed height content to the <strong>blue</strong> elements.</p>\n\n<p><img src=\"http://i.stack.imgur.com/37j6f.png\" alt=\"enter image description here\"></p>\n\n<p>Then within the <strong>yellow</strong> elements create another absolutely positioned (<code>left: 0; bottom: 0;</code>) element (<strong>dark blue</strong>).</p>\n\n<p><img src=\"http://i.stack.imgur.com/KSbUJ.png\" alt=\"enter image description here\"></p>\n\n<p>Supposedly, if these boxes (<strong>yellow</strong>) had to be active hyperlinks and you had any style that you wanted to apply to the original blue boxes, you'd use adjacent sibling selector:</p>\n\n<pre><code>yellow:hover + blue {}\n</code></pre>\n\n<p>Here is a the code and <a href=\"http://jsfiddle.net/AJ6Qh/\" rel=\"nofollow\">demo</a>:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"products\"&gt;\n    &lt;ul&gt;\n        &lt;li class=\"product a\"&gt;\n            &lt;a href=\"\"&gt;\n                &lt;p class=\"name\"&gt;Ordinary product description.&lt;/p&gt;\n                &lt;div class=\"icon-product\"&gt;&lt;/div&gt;\n            &lt;/a&gt;\n            &lt;p class=\"name\"&gt;Ordinary product description.&lt;/p&gt;\n        &lt;/li&gt;\n        &lt;li class=\"product b\"&gt;\n            &lt;a href=\"\"&gt;\n                &lt;p class=\"name\"&gt;That lenghty product description or whatever else that does not allow you have fixed height for these elements.&lt;/p&gt;\n                &lt;div class=\"icon-product\"&gt;&lt;/div&gt;\n            &lt;/a&gt;\n            &lt;p class=\"name\"&gt;That lenghty product description or whatever else that does not allow you have fixed height for these elements.&lt;/p&gt;\n        &lt;/li&gt;\n        &lt;li class=\"product c\"&gt;\n            &lt;a href=\"\"&gt;\n                &lt;p class=\"name\"&gt;Another ordinary product description.&lt;/p&gt;\n                &lt;div class=\"icon-product\"&gt;&lt;/div&gt;\n            &lt;/a&gt;\n            &lt;p class=\"name\"&gt;Another ordinary product description.&lt;/p&gt;\n        &lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>SCSS/LESS:</p>\n\n<pre><code>#products { \n    ul { position: relative; overflow: hidden; text-align: center; font-size: 0; line-height: 0;  padding: 0; margin: 0;\n        li { display: inline-block; vertical-align: top; width: 130px; padding: 0 0 130px 0; margin: 0; }\n    }\n\n    li {\n        a { display: block; position: absolute; width: 130px; background: rgba(255,0,0,.5); z-index: 3; top: 0; bottom: 0;\n            .icon-product { background: #ccc; width: 90px; height: 90px; position: absolute; left: 20px; bottom: 20px; }\n            .name { opacity: 1; }\n        }\n\n        .name { position: relative; margin: 20px 10px 0; font-size: 14px; line-height: 18px; opacity: 0; }\n\n        a:hover {\n            background: #ddd; text-decoration: none;\n\n            .icon-product { background: #333; }\n        }\n    }\n}\n</code></pre>\n\n<p>Note, that the demo is using a workaround that involves data-duplication to fix <code>z-index</code>. Alternatively, you could use <code>pointer-events: none</code> and whatever solution for IE.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>here is very simple solution with a short css display:table</p>\n\n<pre><code>&lt;div id=\"main\" class=\"_dt-no-rows\"&gt;\n  &lt;div id=\"aside\" contenteditable=\"true\"&gt;\n    Aside\n    &lt;br&gt;\n    Here's the aside content\n  &lt;/div&gt;\n  &lt;div id=\"content\" contenteditable=\"true\"&gt;\n    Content\n    &lt;br&gt;\n    geht's pellentesque wurscht elementum semper tellus s'guelt Pfourtz !. gal hopla\n    &lt;br&gt;\n    TIP : Just clic on this block to add/remove some text\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>here is css</p>\n\n<pre><code>#main {\n display: table;\n width: 100%;\n}\n#aside, #content {\n  display: table-cell;\n  padding: 5px;\n}\n#aside {\n  background: none repeat scroll 0 0 #333333;\n  width: 250px;\n}\n#content {\nbackground: none repeat scroll 0 0 #E69B00;\n}\n</code></pre>\n\n<p>its look like this </p>\n\n<p><img src=\"http://i.stack.imgur.com/eBmDK.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you can get it working with js:</p>\n\n<pre><code>&lt;script&gt;\n    $(document).ready(function() {\n        var height = Math.max($(\"#left\").height(), $(\"#right\").height());\n        $(\"#left\").height(height);\n        $(\"#right\").height(height);\n    });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Although many disagree with using javascript for this type of thing, here is a method that I used to acheive this using javascript alone:</p>\n\n<pre><code>var rightHeight = document.getElementById('right').clientHeight;\nvar leftHeight = document.getElementById('left').clientHeight;\nif (leftHeight &gt; rightHeight) {\ndocument.getElementById('right').style.height=leftHeight+'px';\n} else {\ndocument.getElementById('left').style.height=rightHeight+'px';\n}\n</code></pre>\n\n<p>With \"left\" and \"right\" being the id's of the two div tags.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have two divs inside of a container. One on the left, one on the right, side by side. How am I able to make each one be of equal height, even though they have different content.</p>\n\n<p>For example, the right div has a lot of content, and is double the height of the left div, how do I make the left div stretch to the same height of the right div?</p>\n\n<p>Is there some JavaScript (jQuery) code to accomplish this?</p>\n",
            "last_activity_date": 1415959364,
            "question_id": 1056212,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "xhtml"
            ],
            "title": "How do I achieve equal height divs (positioned side by side) with HTML / CSS ?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"http://jsfiddle.net/AWMMT/1/\" rel=\"nofollow\">http://jsfiddle.net/AWMMT/1/</a></p>\n\n<pre><code>&lt;div&gt;...&lt;/div&gt;&lt;div&gt;...&lt;/div&gt;\n              ^\n              |--- no whitespace/new line here.\n</code></pre>\n\n<p>Your spaces were the new lines the browser converted to \"spaces\" when displaying it.</p>\n\n<p>Or you could try to hack a bit with CSS:</p>\n\n<p><a href=\"http://jsfiddle.net/AWMMT/6/\" rel=\"nofollow\">http://jsfiddle.net/AWMMT/6/</a></p>\n\n<pre><code>body { white-space: -0.125em; }\nbody &gt; * { white-space: 0; /* reset to default */ }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>The space is in the HTML.  There are several possible solutions.  From best to worst:</p>\n\n<ol>\n<li>Remove the actual space in the HTML (ideally your server could do this for you when the file is served, or at least your input template could be spaced appropriately) <a href=\"http://jsfiddle.net/AWMMT/2/\">http://jsfiddle.net/AWMMT/2/</a></li>\n<li>Use <code>float: left</code> instead of <code>display: inline-block</code>, but this has undesirable effects on t he height: <a href=\"http://jsfiddle.net/AWMMT/3/\">http://jsfiddle.net/AWMMT/3/</a></li>\n<li>Set the container's <code>font-size</code> to 0 and set an appropriate <code>font-size</code> for the internal elements: <a href=\"http://jsfiddle.net/AWMMT/4/\">http://jsfiddle.net/AWMMT/4/</a> -- this is pretty simple, but then you can't take advantage of relative font size rules on the internal elements (percentages, em)</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>You can comment the whitespace out.</p>\n\n<p>Like:</p>\n\n<pre><code>&lt;span&gt;Text&lt;/span&gt;&lt;!--\n\n--&gt;&lt;span&gt;Text 2&lt;/span&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There\u2019s actually a really simple way to remove whitespace from inline-block that\u2019s both easy and semantic. It\u2019s called a custom font with zero-width spaces, which allows you to collapse the whitespace (added by the browser for inline elements when they're on separate lines) at the font level using a very tiny font. Once you declare the font, you just change the font-family on the container and back again on the children, and voila. Like this:</p>\n\n<pre><code>@font-face{ \n    font-family: 'NoSpace';\n    src: url('../Fonts/zerowidthspaces.eot');\n    src: url('../Fonts/zerowidthspaces.eot?#iefix') format('embedded-opentype'),\n         url('../Fonts/zerowidthspaces.woff') format('woff'),\n         url('../Fonts/zerowidthspaces.ttf') format('truetype'),\n         url('../Fonts/zerowidthspaces.svg#NoSpace') format('svg');\n}\n\nbody {\n    font-face: 'OpenSans', sans-serif;\n}\n\n.inline-container {\n    font-face: 'NoSpace';\n}\n\n.inline-container &gt; * {\n    display: inline-block;\n    font-face: 'OpenSans', sans-serif;\n}\n</code></pre>\n\n<p>Suit to taste. Here\u2019s a download to the font I just cooked up in font-forge and converted with FontSquirrel webfont generator. Took me all of 5 minutes. The css @font-face declaration is included: <a href=\"https://drive.google.com/file/d/0B8W6UmdG-DTVbThfWkI5M1NYRVE/edit?usp=sharing\" rel=\"nofollow\">zipped zero-width space font</a>. It's in Google Drive so you'll need to click File > Download to save it to your computer. You'll probably need to change the font paths as well if you copy the declaration to your main css file.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Also you can do it like this (which IMHO,I believe is sintatically correct)</p>\n\n<pre><code>&lt;div class=\"div1\"&gt;...&lt;/div&gt;\n&lt;div class=\"div1\"&gt;...&lt;/div&gt;\n.\n.\n\n.div1{\n    display:inline-block;\n}\n.div1::before, div1::after { white-space-collapse:collapse; }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Inline Blocks have this weird space in-between them. I could live with it, up to a point where, if I load more content with an AJAX Call, the tiny space goes away. I know I'm missing something here.</p>\n\n<pre><code>div {\n    width: 100px;\n    height: auto;\n    border: 1px solid red;\n    outline: 1px solid blue;\n    margin: 0;\n    padding: 0; \n    display: inline-block;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/AWMMT/\">http://jsfiddle.net/AWMMT/</a></p>\n\n<p>How to make the spacing consistent in Inline blocks ?</p>\n",
            "last_activity_date": 1404323609,
            "question_id": 16678929,
            "score": 5,
            "tags": [
                "width",
                "css"
            ],
            "title": "Display: Inline block - What is that space?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>What you are interested in is <a href=\"http://htmldog.com/guides/cssadvanced/specificity/\" rel=\"nofollow\">specificity</a>.</p>\n\n<p>Firebug is a great tool to help inspect this. But other browsers also have built in tools for inspecting the applied CSS rules.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'll just toss in a link to the CSS 2.1 spec itself, and how browsers are <em>supposed</em> to calculate specificity:</p>\n\n<p><a href=\"http://www.w3.org/TR/CSS2/cascade.html#specificity\">CSS 2.1 Section 6.4.3</a>:</p>\n\n<blockquote>\n  <p>A selector's specificity is calculated as follows:</p>\n  \n  <ul>\n  <li>count 1 if the declaration is from is a 'style' attribute rather than a rule with a selector, 0 otherwise (= a) (In HTML, values of an element's \"style\" attribute are style sheet rules. These rules have no selectors, so a=1, b=0, c=0, and d=0.)</li>\n  <li>count the number of ID attributes in the selector (= b)</li>\n  <li>count the number of other attributes and pseudo-classes in the selector (= c)</li>\n  <li>count the number of element names and pseudo-elements in the selector (= d)</li>\n  <li>The specificity is based only on the form of the selector. In particular, a selector of the form \"[id=p33]\" is counted as an attribute selector (a=0, b=0, c=1, d=0), even if the id attribute is defined as an \"ID\" in the source document's DTD.</li>\n  </ul>\n  \n  <p>Concatenating the four numbers a-b-c-d (in a number system with a large base) gives the specificity.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p>I'd like to understand how <code>CSS</code> selectors work with properties collisions, how a property is selected instead of another one?</p>\n\n<pre><code> div {\n      background-color:red;\n }\n div.my_class {\n      background-color:black;\n }\n div#my_id {\n      background-color:blue;\n }\n body div {\n      background-color:green;\n }\n body &gt; div {\n      background-color:orange;\n }\n body &gt; div#my_id {\n      background-color:white;\n }\n\n &lt;html&gt;\n      &lt;body&gt;\n           &lt;div id=\"my_id\" class=\"my_class\"&gt;hello&lt;/div&gt;\n      &lt;/body&gt;\n &lt;/html&gt;\n</code></pre>\n\n<p>For someone this could be obvious, but not for me!</p>\n\n<p>Does exist some guide or link where I can finally understand how selector priority works?</p>\n",
            "last_activity_date": 1308699214,
            "question_id": 4072365,
            "score": 17,
            "tags": [
                "html",
                "css",
                "css-selectors"
            ],
            "title": "CSS: Understanding the selector&#39;s priority / specificity"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You should also specify:</p>\n\n<pre><code>padding: 0;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>Perhaps you have:</p>\n\n<pre><code>&lt;div class=\"col1\"&gt;\n    Stuff 1\n&lt;/div&gt;\n&lt;div class=\"col2\"&gt;\n    Stuff 2\n&lt;/div&gt;\n</code></pre>\n\n<p>? If so then this is probably a whitespace problem (it turns out whitespace does matter in html). This should fix it:</p>\n\n<pre><code>&lt;div class=\"col1\"&gt;\n    Stuff 1\n&lt;/div&gt;&lt;div class=\"col2\"&gt;\n    Stuff 2\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>apply float:left and that will remove the space so the text doesn't have to be on 1 line.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Alternatively, to fix this without changing the formatting of your source code, you can create an additional element.</p>\n\n<p>If you were doing this in a list it would look like:</p>\n\n<pre><code>    &lt;ul &gt;\n        &lt;li&gt;\n          &lt;a href=\"#\"&gt;Solutions Overview&lt;/a&gt;\n        &lt;/li&gt;       \n    &lt;/ul&gt;   \n\n&lt;style type=\"text/css\"&gt;             \n    ul {word-spacing:-1em;}\n    ul li a{word-spacing:0;}\n&lt;/style&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Additionally, some helpful techniques can be found listed here:</p>\n\n<p><a href=\"http://css-tricks.com/fighting-the-space-between-inline-block-elements/\" rel=\"nofollow\">http://css-tricks.com/fighting-the-space-between-inline-block-elements/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The elements with attribute <code>inline-block</code> will behave as if they are inline (hence the name), and therefore any whitespace encountered will be treated as a space. For example:</p>\n\n<pre><code>&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;\n</code></pre>\n\n<p>will be rendered differently to</p>\n\n<pre><code>&lt;div&gt;&lt;/div&gt;\n&lt;div&gt;&lt;/div&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/4H8Fn/\" rel=\"nofollow\">See a live example here</a></p>\n\n<p><strong>You can solve this problem using HTML as follows:</strong></p>\n\n<p>Either place all your elements on the same line, i.e.</p>\n\n<pre><code>&lt;div&gt;\n    // CONTENT\n&lt;/div&gt;&lt;div&gt;\n    // CONTENT\n&lt;/div&gt;&lt;div&gt;\n    // CONTENT\n&lt;/div&gt;\n</code></pre>\n\n<p>or use HTML comments to remove the spaces</p>\n\n<pre><code>&lt;div&gt;\n    //CONTENT\n&lt;/div&gt;&lt;!--\n--&gt;&lt;div&gt;\n    //CONTENT\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>You can solve this problem using CSS as follows:</strong></p>\n\n<p>Set the attribute <code>font-size: 0</code> on the parent, i.e.</p>\n\n<pre><code>parent {\n    display: inline-block;\n    font-size: 0\n}\nparent * {\n    font-size: 12px\n}\n</code></pre>\n\n<p>or set the attribute <code>zoom: 1</code> on the parent, i.e.</p>\n\n<pre><code>parent {\n    display: inline-block;\n    zoom: 1\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A simple <code>font-size:0</code> to the parent element will work.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Making the parent element <code>font-size:0px</code> will also resolve the issue.</p>\n\n<pre><code>&lt;div class=\"col-set\"&gt;\n&lt;div class=\"col1\"&gt;\n    Stuff 1\n&lt;/div&gt;\n&lt;div class=\"col2\"&gt;\n    Stuff 2\n&lt;/div&gt;\n&lt;/div&gt;\n\n.col-set {font-size:0px}\n\n.col-set &gt; div {font-size:12px}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I am using this css to format two columns but I am still getting margin space between two. I can eliminate it with use of <code>margin-left: -4px;</code> or some such. Is there a more elegant way to do this or is there something wrong with the CSS code?</p>\n\n<pre><code>div.col1{\n  display: inline-block;\n  min-height: 900px;\n  height: 100%;\n  width 300px;\n  margin: 0px;\n  background-color: #272727;\n  overflow: hidden;\n  border: 1px dotted red;\n}\n\ndiv.col2{\n  display: inline-block;\n  min-height: 900px;\n  height: 100%;\n\n  width: 620px;\n  margin: 0px;\n\n  vertical-align: top;\n  border: 1px dotted red;\n  overflow: hidden;\n}\n</code></pre>\n",
            "last_activity_date": 1390543171,
            "question_id": 1801589,
            "score": 24,
            "tags": [
                "css"
            ],
            "title": "How do I remove extra margin space generated by inline blocks?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>you can read in this links\n :</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Quirks_mode\">http://en.wikipedia.org/wiki/Quirks_mode</a></p>\n\n<p><a href=\"http://www.quirksmode.org/css/quirksmode.html\">http://www.quirksmode.org/css/quirksmode.html</a></p>\n\n<p><a href=\"http://www.cs.tut.fi/~jkorpela/quirks-mode.html\">http://www.cs.tut.fi/~jkorpela/quirks-mode.html</a></p>\n\n<blockquote>\n  <p>Modern browsers generally try to\n  render HTML content according to the\n  W3C recommendations. However, to\n  provide compatibility with older web\n  pages, and to provide additional\n  \"intuitive\" functionality, all\n  browsers support an alternative\n  \"quirks mode\".</p>\n  \n  <p>Quirks mode is not, however, a\n  standard. The rendering of any page in\n  quirks mode in different browsers may\n  be different. Whenever possible, it is\n  better to adhere to the W3C standards\n  and try and avoid depending on any\n  past or present browser quirks.</p>\n  \n  <p>Generally, quirks mode is turned on\n  when there is no correct DOCTYPE\n  declaration, and turned off when there\n  is a DOCTYPE definition. However,\n  invalid HTML - with respect to the\n  chosen DOCTYPE - can also cause the\n  browser to switch to quirks mode.</p>\n  \n  <p>More information on the different\n  quirks modes in different browsers can\n  be found at <a href=\"http://QuirksMode.org\">QuirksMode.org</a></p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>Quirks mode means your page is running without a document type declared, the document type is defined at the very top of a page and it denotes how the browser should read the HTML. This is StackOverflows doctype:</p>\n\n<pre><code>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \n\"http://www.w3.org/TR/html4/strict.dtd\"&gt;\n</code></pre>\n\n<p>w3.org specifies web standards and document types, because Stack Overflow uses this doctype it must adhere to the <a href=\"http://www.w3.org/TR/html4/sgml/dtd.html\">specification</a> of that doctype. </p>\n\n<blockquote>\n  <p>This is HTML 4.01 Strict DTD, which\n  excludes the presentation  attributes\n  and elements that W3C expects to phase\n  out as  support for style sheets\n  matures. Authors should use the Strict\n  DTD when possible, but may use the\n  Transitional DTD when support for\n  presentation attribute and elements is\n  required.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>In past days when web browsers did not have full/correct implementations of CSS, developers relied on these idiosyncrasies to make their pages render properly. However, as browsers became more standards-compliant, these pages no longer rendered correctly, as they were written for what bascially was a different type of CSS. This is where quirks mode comes in, as it handles pages written for these broken CSS implementations.</p>\n\n<p>So in 2009, you don't really need to worry about quirks mode unless you're handling older CSS, or older browsers. Just write your CSS to current web standards, and you be OK.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>In  a lot of articles about design, quirks mode is mentioned. \nAnybody have an idea about this thing in plain text and in a development prospective? </p>\n",
            "last_activity_date": 1305629374,
            "question_id": 1695787,
            "score": 23,
            "tags": [
                "html",
                "css"
            ],
            "title": "What is quirks mode?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The linebreaks are causing it - <a href=\"http://jsfiddle.net/RhvjF/1/\">http://jsfiddle.net/RhvjF/1/</a></p>\n\n<p>Can't find the particular post, but smart people suggested 3 ways of fixing it:</p>\n\n<ol>\n<li>Put everything in one line (remove all line breaks)</li>\n<li><p>Comment out the line breaks, like </p>\n\n<pre><code>&lt;span style=\"display: inline\"&gt;Hello Wo&lt;/span&gt;&lt;!--\n--&gt;&lt;span style=\"display: none;\"&gt;&lt;/span&gt;&lt;!--\n--&gt;&lt;span style=\"display: inline\"&gt;rld&lt;/span&gt;\n</code></pre></li>\n<li><p>Set the container <code>font-size</code> to <code>0</code> and re-set it for <code>span</code>-s</p></li>\n</ol>\n\n<p><strong>UPDATE</strong></p>\n\n<p>There are at least 2 more ways:</p>\n\n<ol>\n<li><p>Break the tags, like </p>\n\n<pre><code>&lt;span style=\"display: inline\"&gt;Hello Wo&lt;/span\n&gt;&lt;span style=\"display: none;\"&gt;&lt;/span\n&gt;&lt;span style=\"display: inline\"&gt;rld&lt;/span&gt;\n</code></pre></li>\n<li>Float the elements, i.e. <code>span { float: left }</code></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>This is caused by line breaks. You have two choices:</p>\n\n<ol>\n<li>Remove the line breaks</li>\n<li>Float your content.</li>\n</ol>\n\n<p><strong>Option 1</strong></p>\n\n<pre><code>&lt;span style=\"display: inline\"&gt;Hello Wo&lt;/span&gt;&lt;span style=\"display: none;\"&gt;&lt;/span&gt;&lt;span style=\"display:inline\"&gt;rld&lt;/span&gt;\u200b\n</code></pre>\n\n<p><strong>Option 2</strong></p>\n\n<pre><code>&lt;style&gt;\n    #spanContainer &gt; span { float:left; }\u200b\n&lt;/style&gt;\n\n&lt;div id=\"spanContainer\"&gt;\n    &lt;span style=\"display: inline\"&gt;Hello Wo&lt;/span&gt;\n    &lt;span style=\"display: none;\"&gt;&lt;/span&gt;\n    &lt;span style=\"display: inline\"&gt;rld&lt;/span&gt;\u200b\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>See <a href=\"http://jsfiddle.net/RhvjF/2/\" rel=\"nofollow\">http://jsfiddle.net/RhvjF/2/</a></p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"wrapper\"&gt;\n    &lt;span style=\"display: inline\"&gt;Hello Wo&lt;/span&gt;\n    &lt;span style=\"display: none;\"&gt;&lt;/span&gt;\n    &lt;span style=\"display: inline\"&gt;rld&lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>#wrapper{\n    font-size:0;\n}\n#wrapper&gt;*{\n    font-size:16px; /* Or whatever you want */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/5256533/a-space-between-inline-block-list-items\">A Space between Inline-Block List Items</a>  </p>\n</blockquote>\n\n\n\n<p>I have a <a href=\"http://jsfiddle.net/RhvjF/\">JSFiddle demo</a> of my html code. Here is the code here:</p>\n\n<pre><code>&lt;span style=\"display: inline\"&gt;Hello Wo&lt;/span&gt;\n&lt;span style=\"display: none;\"&gt;&lt;/span&gt;\n&lt;span style=\"display: inline\"&gt;rld&lt;/span&gt;\u200b\n</code></pre>\n\n<p>The problem I'm having is that an extra space is being inserted between the 'o' and the 'r' in Hello World!. The <code>display</code> style is set to none, so can someone please tell me how I can get the <code>Hello World!</code> phrase without the space?</p>\n",
            "last_activity_date": 1364048475,
            "question_id": 12183341,
            "score": 8,
            "tags": [
                "html",
                "css"
            ],
            "title": "How to remove &quot;Invisible space&quot; from HTML"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>The closest you'll get is <a href=\"https://developer.mozilla.org/en-US/docs/CSS/%3aactive\"><code>:active</code></a>:</p>\n\n<pre><code>#btnLeft:active {\n    width: 70px;\n    height: 74px;\n}\n</code></pre>\n\n<p>However this will only apply the style when the mouse button is held down. The only way to apply a style <em>and keep it applied</em> onclick is to use a bit of JavaScript.</p>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<p>there isnt any <code>onclick</code>  in css you can obly do this by <code>:active</code></p>\n\n<p>or </p>\n\n<p>try jquery by this you can change style on  <a href=\"http://api.jquery.com/click/\" rel=\"nofollow\"><code>Click()</code></a>  </p>\n\n<p>as in comment to if it is an image than the jquery/javascript is way to do like</p>\n\n<pre><code>$(\"#btnLeft\").click(function(){\n\n     $(this).css(\"color\",\"red\");\n\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>@jamwaffles is right. Some jQuery will get you there if you want to use javascript. </p>\n\n<pre><code>$(\"#btnLeft\").click(function() {\n  $(\"#btnLeft\").css(\"width\",\"+=200\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Edit: Answered before OP clarified what he wanted. The following is for an onclick similar to javascripts onclick, not the <code>:active</code> pseudo class.</p>\n\n<p>This can only be achieved with either Javascript or the <a href=\"http://css-tricks.com/the-checkbox-hack/\">Checkbox Hack</a></p>\n\n<p>The checkbox hack essentially gets you to click on a label, that \"checks\" a checkbox, allowing you to style the label as you wish.</p>\n\n<p>The <a href=\"http://dabblet.com/gist/1506530\">demo</a></p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p><a href=\"http://api.jquery.com/mousedown/\" rel=\"nofollow\">Reffer to jQuery Docs <code>.mousedown() &amp; .mouseup()</code></a></p>\n\n<pre><code>$('#target').mousedown(function() {\n    $('body').css(\"background\", \"black\");\n    $(this).mouseup(function() {\n        $('body').css(\"background\", \"white\");\n    });\n}); \u200b\n</code></pre>\n\n<p><strong>Demo</strong>: <a href=\"http://jsfiddle.net/bZezzz/Se7nR/\" rel=\"nofollow\">http://jsfiddle.net/bZezzz/Se7nR/</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You can use pseudo class <code>:target</code> to mimic on click event, let me give you an example.</p>\n\n<p>Here's the HTML:</p>\n\n<pre><code>&lt;a href=\"#something\"&gt;Show&lt;/a&gt;\n&lt;div id=\"something\"&gt;Bingo!&lt;/div&gt;\n</code></pre>\n\n<p>And here's the CSS:</p>\n\n<pre><code>#something {\n  display: none;\n}\n\n#something:target {\n  display: block;\n}\n</code></pre>\n\n<p>Here's how it looks like: <a href=\"http://jsfiddle.net/TYhnb/\">http://jsfiddle.net/TYhnb/</a></p>\n\n<p>One thing to note, this is only limited to hyperlink, so if you need to use on other than hyperlink, such as a button, you might want to hack it a little bit, such as styling a hyperlink to look like a button.</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>There is no onclick alternative, but if it is a button you are targeting for :onclick then <strong>:active</strong> works just fine!</p>\n",
                    "is_accepted": false,
                    "score": -7
                },
                {
                    "body": "<p>If you give the element a <code>tabindex</code> then you can use the <code>:focus</code> pseudo class to simulate a click.</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;img id=\"btnLeft\" tabindex=\"0\" src=\"http://placehold.it/250x100\" /&gt;\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>#btnLeft:focus{\n    width:70px;\n    height:74px;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/NaTj5/\">http://jsfiddle.net/NaTj5/</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I agree that the closet :active if you only want to used css but i don't think that it can help your problem, you need either javascript or jquery:</p>\n\n<pre><code>Javascript you can used onlick: \n\n &lt;div id=\"btnLeft\" onclick=\"btnActive()\"&gt;&lt;/div&gt;\n\n &lt;script&gt;\n    function btnActive(){\n       $('#btnLeft').css('color', 'red');\n   }\n &lt;/script&gt;\n</code></pre>\n\n<p>jquery approach you can used click(); or on('click')</p>\n\n<pre><code>&lt;script&gt;\n  $(function(){\n    $('#btnLeft').on('click', function(){\n        $(this).css('color', 'red');\n\n    })\n  })\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>On your <strong>HTML</strong></p>\n\n<pre><code>&lt;button id=\"btnLeft\" onclick=\"myFunction()\"&gt;&lt;/button&gt;\n</code></pre>\n\n<p><strong>Javascript</strong></p>\n\n<pre><code>function myFunction() {\n    // Apply your style here\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Okay, this maybe an old post... but was first result in google and decided to make your own mix on this as..</p>\n\n<p><strong>FIRSTLY I WILL USE FOCUS</strong></p>\n\n<p>The reason for this is that it works nicely for the example i'm showing, if someone wants a mouse down type event then use <strong>active</strong></p>\n\n<p>THE HTML CODE:</p>\n\n<pre><code>&lt;button class=\"mdT mdI1\" &gt;&lt;/button&gt;\n&lt;button class=\"mdT mdI2\" &gt;&lt;/button&gt;\n&lt;button class=\"mdT mdI3\" &gt;&lt;/button&gt;\n&lt;button class=\"mdT mdI4\" &gt;&lt;/button&gt;\n</code></pre>\n\n<p>THE CSS CODE:</p>\n\n<pre><code>/* Change Button Size/Border/BG Color And Align To Middle */\n    .mdT {\n        width:96px;\n        height:96px;\n        border:0px;\n        outline:0;\n        vertical-align:middle;\n        background-color:#AAAAAA;\n    }\n    .mdT:focus {\n        width:256px;\n        height:256px;\n    }\n\n/* Change Images Depending On Focus */\n    .mdI1       {   background-image:url('http://placehold.it/96x96/AAAAAA&amp;text=img1');     }\n    .mdI1:focus {   background-image:url('http://placehold.it/256x256/555555&amp;text=Image+1');   }\n    .mdI2       {   background-image:url('http://placehold.it/96x96/AAAAAA&amp;text=img2');     }\n    .mdI2:focus {   background-image:url('http://placehold.it/256x256/555555&amp;text=Image+2');   }\n    .mdI3       {   background-image:url('http://placehold.it/96x96/AAAAAA&amp;text=img3');     }\n    .mdI3:focus {   background-image:url('http://placehold.it/256x256/555555&amp;text=Image+3');   }\n    .mdI4       {   background-image:url('http://placehold.it/96x96/AAAAAA&amp;text=img4');     }\n    .mdI4:focus {   background-image:url('http://placehold.it/256x256/555555&amp;text=Image+4');   }\n</code></pre>\n\n<p><strong>JS FIDDLE LINK:</strong> <a href=\"http://jsfiddle.net/00wwkjux/\" rel=\"nofollow\">http://jsfiddle.net/00wwkjux/</a></p>\n\n<p>So why am i posting this in an old thread, well because the examples here vary and i thought to provide one back to the community which is a working example.</p>\n\n<p>As already answered by the thread creator, they only want the effect to last during the click event. Now while this is not exact for that need, its close. active will animate while the mouse is down and any changes that you need to have last longer need to be done with javascript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>This works:</p>\n\n<pre><code>#btnLeft:hover{\n    width:70px;\n    height:74px;\n}\n</code></pre>\n\n<p>What I need is:</p>\n\n<pre><code>#btnLeft:onclick{\n    width:70px;\n    height:74px;\n}\n</code></pre>\n\n<p>But, it doesn't work.<br>\nIs it possible at all to have onclick in CSS ?</p>\n",
            "last_activity_date": 1425022074,
            "question_id": 13630229,
            "score": 45,
            "tags": [
                "css",
                "onclick"
            ],
            "title": "onclick in CSS?"
        }
    ]
}
