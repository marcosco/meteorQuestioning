{
    "items": [
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Support for downloading binary files in using ajax is not great, it is very much still <a href=\"http://caniuse.com/#search=blob\">under development as working drafts</a>. </p>\n\n<h1>Simple download method:</h1>\n\n<p>You can have the browser download the requested file simply by using the code below, and this is supported in all browsers, and will obviously trigger the WebApi request just the same.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$scope.downloadFile = function(downloadPath) { \n    window.open(downloadPath, '_blank', '');  \n}\n</code></pre>\n\n<h1>Ajax binary download method:</h1>\n\n<p>Using ajax to download the binary file can be done in some browsers and below is an implementation that will work in the latest flavours of Chrome, Internet Explorer, FireFox and Safari.</p>\n\n<p>It uses an <code>arraybuffer</code> response type, which is then converted into a JavaScript <code>blob</code>, which is then either presented to save using the <code>saveBlob</code> method - though this is only currently present in Internet Explorer - or turned into a blob data URL which is opened by the browser, triggering the download dialog if the mime type is supported for viewing in the browser.</p>\n\n<h3>Internet Explorer 11 Support (Fixed)</h3>\n\n<p><em>Note: Internet Explorer 11 did not like using the <code>msSaveBlob</code> function if it had been aliased - perhaps a security feature, but more likely a flaw, So using <code>var saveBlob = navigator.msSaveBlob || navigator.webkitSaveBlob ... etc.</code> to determine the available <code>saveBlob</code> support caused an exception; hence why the code below now tests for <code>navigator.msSaveBlob</code> separately. Thanks? Microsoft</em></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// Based on an implementation here: web.student.tuwien.ac.at/~e0427417/jsdownload.html\n$scope.downloadFile = function(httpPath) {\n    // Use an arraybuffer\n    $http.get(httpPath, { responseType: 'arraybuffer' })\n    .success( function(data, status, headers) {\n\n        var octetStreamMime = 'application/octet-stream';\n        var success = false;\n\n        // Get the headers\n        headers = headers();\n\n        // Get the filename from the x-filename header or default to \"download.bin\"\n        var filename = headers['x-filename'] || 'download.bin';\n\n        // Determine the content type from the header or default to \"application/octet-stream\"\n        var contentType = headers['content-type'] || octetStreamMime;\n\n        try\n        {\n            // Try using msSaveBlob if supported\n            console.log(\"Trying saveBlob method ...\");\n            var blob = new Blob([data], { type: contentType });\n            if(navigator.msSaveBlob)\n                navigator.msSaveBlob(blob, filename);\n            else {\n                // Try using other saveBlob implementations, if available\n                var saveBlob = navigator.webkitSaveBlob || navigator.mozSaveBlob || navigator.saveBlob;\n                if(saveBlob === undefined) throw \"Not supported\";\n                saveBlob(blob, filename);\n            }\n            console.log(\"saveBlob succeeded\");\n            success = true;\n        } catch(ex)\n        {\n            console.log(\"saveBlob method failed with the following exception:\");\n            console.log(ex);\n        }\n\n        if(!success)\n        {\n            // Get the blob url creator\n            var urlCreator = window.URL || window.webkitURL || window.mozURL || window.msURL;\n            if(urlCreator)\n            {\n                // Try to use a download link\n                var link = document.createElement('a');\n                if('download' in link)\n                {\n                    // Try to simulate a click\n                    try\n                    {\n                        // Prepare a blob URL\n                        console.log(\"Trying download link method with simulated click ...\");\n                        var blob = new Blob([data], { type: contentType });\n                        var url = urlCreator.createObjectURL(blob);\n                        link.setAttribute('href', url);\n\n                        // Set the download attribute (Supported in Chrome 14+ / Firefox 20+)\n                        link.setAttribute(\"download\", filename);\n\n                        // Simulate clicking the download link\n                        var event = document.createEvent('MouseEvents');\n                        event.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);\n                        link.dispatchEvent(event);\n                        console.log(\"Download link method with simulated click succeeded\");\n                        success = true;\n\n                    } catch(ex) {\n                        console.log(\"Download link method with simulated click failed with the following exception:\");\n                        console.log(ex);\n                    }\n                }\n\n                if(!success)\n                {\n                    // Fallback to window.location method\n                    try\n                    {\n                        // Prepare a blob URL\n                        // Use application/octet-stream when using window.location to force download\n                        console.log(\"Trying download link method with window.location ...\");\n                        var blob = new Blob([data], { type: octetStreamMime });\n                        var url = urlCreator.createObjectURL(blob);\n                        window.location = url;\n                        console.log(\"Download link method with window.location succeeded\");\n                        success = true;\n                    } catch(ex) {\n                        console.log(\"Download link method with window.location failed with the following exception:\");\n                        console.log(ex);\n                    }\n                }\n\n            }\n        }\n\n        if(!success)\n        {\n            // Fallback to window.open method\n            console.log(\"No methods worked for saving the arraybuffer, using last resort window.open\");\n            window.open(httpPath, '_blank', '');\n        }\n    })\n    .error(function(data, status) {\n        console.log(\"Request failed with status: \" + status);\n\n        // Optionally write the error out to scope\n        $scope.errorDetails = \"Request failed with status: \" + status;\n    });\n};\n</code></pre>\n\n<h2>Usage:</h2>\n\n<pre class=\"lang-js prettyprint-override\"><code>var downloadPath = \"/files/instructions.pdf\";\n$scope.downloadFile(downloadPath);\n</code></pre>\n\n<h3>Notes:</h3>\n\n<p>You should modify your WebApi method to return the following headers:</p>\n\n<ul>\n<li><p>I have used the <code>x-filename</code> header to send the filename. This is a custom header for convenience, you could however extract the filename from the <code>content-disposition</code> header using regular expressions.</p></li>\n<li><p>You should set the <code>content-type</code> mime header for your response too, so the browser knows the data format.</p></li>\n</ul>\n\n<p>I hope this helps.</p>\n",
                    "is_accepted": true,
                    "score": 65
                },
                {
                    "body": "<p>We also had to develop a solution which would even work with APIs requiring authentication (see <a href=\"http://blog.techdev.de/an-angularjs-directive-to-download-pdf-files/\" rel=\"nofollow\">this article</a>)</p>\n\n<p>Using AngularJS in a nutshell here is how we did it:</p>\n\n<p>Step 1: Create a dedicated directive</p>\n\n<pre><code>// jQuery needed, uses Bootstrap classes, adjust the path of templateUrl\napp.directive('pdfDownload', function() {\nreturn {\n    restrict: 'E',\n    templateUrl: '/path/to/pdfDownload.tpl.html',\n    scope: true,\n    link: function(scope, element, attr) {\n        var anchor = element.children()[0];\n\n        // When the download starts, disable the link\n        scope.$on('download-start', function() {\n            $(anchor).attr('disabled', 'disabled');\n        });\n\n        // When the download finishes, attach the data to the link. Enable the link and change its appearance.\n        scope.$on('downloaded', function(event, data) {\n            $(anchor).attr({\n                href: 'data:application/pdf;base64,' + data,\n                download: attr.filename\n            })\n                .removeAttr('disabled')\n                .text('Save')\n                .removeClass('btn-primary')\n                .addClass('btn-success');\n\n            // Also overwrite the download pdf function to do nothing.\n            scope.downloadPdf = function() {\n            };\n        });\n    },\n    controller: ['$scope', '$attrs', '$http', function($scope, $attrs, $http) {\n        $scope.downloadPdf = function() {\n            $scope.$emit('download-start');\n            $http.get($attrs.url).then(function(response) {\n                $scope.$emit('downloaded', response.data);\n            });\n        };\n    }] \n});\n</code></pre>\n\n<p>Step 2: Create a template</p>\n\n<pre><code>&lt;a href=\"\" class=\"btn btn-primary\" ng-click=\"downloadPdf()\"&gt;Download&lt;/a&gt;\n</code></pre>\n\n<p>Step 3: Use it</p>\n\n<pre><code>&lt;pdf-download url=\"/some/path/to/a.pdf\" filename=\"my-awesome-pdf\"&gt;&lt;/pdf-download&gt;\n</code></pre>\n\n<p>This will render a blue button. When clicked, a PDF will be downloaded (Caution: the backend has to deliver the PDF in Base64 encoding!) and put into the href. The button turns green and switches the text to <em>Save</em>. The user can click again and will be presented with a standard download file dialog for the file <em>my-awesome.pdf</em>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For me the Web API was Rails and client side Angular used with <a href=\"https://github.com/mgonto/restangular\" rel=\"nofollow\">Restangular</a> and <a href=\"https://github.com/eligrey/FileSaver.js/\" rel=\"nofollow\">FileSaver.js</a></p>\n\n<p><strong>Web API</strong></p>\n\n<pre><code>module Api\n  module V1\n    class DownloadsController &lt; BaseController\n\n      def show\n        @download = Download.find(params[:id])\n        send_data @download.blob_data\n      end\n    end\n  end\nend\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code> &lt;a ng-click=\"download('foo')\"&gt;download presentation&lt;/a&gt;\n</code></pre>\n\n<p><strong>Angular controller</strong></p>\n\n<pre><code> $scope.download = function(type) {\n    return Download.get(type);\n  };\n</code></pre>\n\n<p><strong>Angular Service</strong></p>\n\n<pre><code>'use strict';\n\napp.service('Download', function Download(Restangular) {\n\n  this.get = function(id) {\n    return Restangular.one('api/v1/downloads', id).withHttpConfig({responseType: 'arraybuffer'}).get().then(function(data){\n      console.log(data)\n      var blob = new Blob([data], {\n        type: \"application/pdf\"\n      });\n      //saveAs provided by FileSaver.js\n      saveAs(blob, id + '.pdf');\n    })\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Send your file as a base64 string.</p>\n\n<pre><code> var element = angular.element('&lt;a/&gt;');\n                         element.attr({\n                             href: 'data:attachment/csv;charset=utf-8,' + encodeURI(atob(response.payload)),\n                             target: '_blank',\n                             download: fname\n                         })[0].click();\n</code></pre>\n\n<p>If attr method not working in Firefox You can also use  javaScript setAttribute method</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In my angularjs project, I've an anchor tag which when clicked makes a get request to a WebAPI method that returns a file. Now, I want the file to be downloaded to the user after the request is successful. How do I do that?</p>\n\n<p>The anchor tag : </p>\n\n<pre><code>&lt;a href=\"#\" ng-click=\"getthefile()\"&gt;Download img&lt;/a&gt;\n</code></pre>\n\n<p>Angularjs :</p>\n\n<pre><code>$scope.getthefile = function () {        \n        $http({\n            method: 'GET',\n            cache: false,\n            url: $scope.appPath + 'CourseRegConfirm/getfile',            \n            headers: {\n                'Content-Type': 'application/json; charset=utf-8'\n            }\n        }).success(function (data, status) {\n            console.log(data) // displays text data if the file is a text file, binary if it's an image            \n// now what should I write here to download the file I receive from the WebAPI method.\n        }).error(function (data, status) {\n\n        });\n    }\n</code></pre>\n\n<p>My WebAPI method :</p>\n\n<pre><code>[Authorize]\n[Route(\"getfile\")]\npublic HttpResponseMessage GetTestFile()\n{\n    HttpResponseMessage result = null;\n    var localFilePath = HttpContext.Current.Server.MapPath(\"~/timetable.jpg\");\n\n    if (!File.Exists(localFilePath))\n    {\n        result = Request.CreateResponse(HttpStatusCode.Gone);\n    }\n    else\n    {// serve the file to the client\n        result = Request.CreateResponse(HttpStatusCode.OK);\n        result.Content = new StreamContent(new FileStream(localFilePath, FileMode.Open, FileAccess.Read));\n        result.Content.Headers.ContentDisposition = new System.Net.Http.Headers.ContentDispositionHeaderValue(\"attachment\");\n        result.Content.Headers.ContentDisposition.FileName = \"SampleImg\";                \n    }\n\n    return result;\n}\n</code></pre>\n\n<p>Please help!</p>\n",
            "last_activity_date": 1421990659,
            "question_id": 24080018,
            "score": 27,
            "tags": [
                "c#",
                "javascript",
                "html",
                "angularjs",
                "asp.net-web-api"
            ],
            "title": "Download file from a ASP.NET Web API method using angularjs"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Yes, you can use both side by side.  Backbone is for storing and manipulating data within the client browser.  It generally needs a server to talk to and fetch the data <strong>from</strong>.  This is where Rails comes in.  You can have a web application without heavy client-side code.  Backbone is for building out sites that feel more like apps--think of Gmail or Pandora.</p>\n\n<p>I advise just learning Rails first.  Once you can get static pages loading and styled as you wish, then understanding Backbone's place will make more sense</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've used rails as a backend server to serve a fairly large website, which included a few one-page apps (built in backbone). </p>\n\n<p>I'd suggest the <code>backbone-on-rails</code> gem. The idea is that your rails server will serve up the backbone app as a script tag in one of your views. You keep your backbone app itself in the rails <code>app/assets</code> folder.</p>\n\n<p>Backbone understands rails routing conventions, and you just need to give it a path to a json api that rails can almost generate for you with <code>rails generate resource</code>.</p>\n\n<p>Other than the syncing between the models, your backbone apps and rails apps are fairly separate. Backbone and Rails don't have quite the same MVC model, but getting them to cooperate is pretty easy.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Before anything else I'd suggest taking a look at thoughtbot's <a href=\"https://learn.thoughtbot.com/products/1-backbone-js-on-rails\">Backbone.js on Rails</a> book, which is a great starting point, although aimed at an intermediate to advanced audience. I bought this book having already worked with rails but as a total backbone.js beginner and it has served me very well.</p>\n\n<p>Beyond that, there are some fundamental issues with combining these frameworks which go beyond the details covered in this book and other books. Below are some things I'd suggest you think about, from my own experiences pairing RoR and backbone.js. This is a long answer and strays a bit from the specifics of your question, but I hope it might help you out in the \"big picture\" sense of understanding the problem you're facing.</p>\n\n<h2>Rails: Web Framework vs API</h2>\n\n<p>The first thing you confront when using backbone.js on top of a rails application is what to do about views, but this is really just the surface of a much deeper issue. The problem goes to the very heart of what it means to create a RESTful web service.</p>\n\n<p>Rails is set up out of the box to encourage its users to create RESTful services, by structuring routing in terms of a set of resources accessed at uniform URIs (defined in your <code>routes.rb</code> file) through standard HTTP actions. So if you have a <code>Post</code> model, you can:</p>\n\n<ul>\n<li>Get all posts by sending  <code>GET</code> request to <code>/posts</code></li>\n<li>Create a new post by sending a <code>GET</code> request to <code>/posts/new</code>, filling out the form and sending it (a <code>POST</code> request)  to <code>/posts</code></li>\n<li>Update a post with id <code>123</code> by sending a <code>GET</code> request to <code>/posts/123/edit</code>, filling out the form and sending it (a <code>PUT</code> request) to <code>posts/123</code></li>\n<li>Destroy a post with id <code>123</code> by sending a <code>DELETE</code> request to <code>/posts/123</code></li>\n</ul>\n\n<p>The key thing to remember about this aspect of Rails is that it is fundamentally <em>stateless</em>: regardless of what I was doing previously, I can create a new <code>Post</code> simply by sending a <code>POST</code> request with a valid form data to the correct URI, say <code>/posts</code>. Of course there are caveats: I may need to be logged in (have a session cookie identifying me), but in essence Rails doesn't really care what I was doing before I sent that request. I could follow it up by updating another post, or by sending a valid action to whatever other resources are made available to me.</p>\n\n<p>This aspect of how Rails is designed makes it relatively easy to turn a (Javascript-light) Rails web application into an API: the resources will be similar or the same, the web framework returning HTML pages while the API (typically) returns data in JSON or XML format.</p>\n\n<h2>Backbone.js: A new stateful layer</h2>\n\n<p>Backbone is also based on RESTful resources. Whenever you create, update or destroy a backbone.js model, you do so via the standard HTTP actions sent to URIs which assume a RESTful architecture of the kind described above. This makes it ideal for integrating with RESTful services like RoR.</p>\n\n<p>But there is a subtle point to be stressed here: backbone.js integrates seamlessly with Rails <strong>as an API</strong>. That is to say, if you strip away the HTML views and <em>just use Rails</em> for serving RESTful resources, integrating with the database, performing session management, etc., then it integrates very nicely with the structure that backbone.js provides for client-side code. Many people argue that <a href=\"http://blog.alexmaccaw.com/rails-is-just-and-api-and-that-s-ok\">there's nothing wrong with using rails this way</a>, and I think in many ways they are right.</p>\n\n<p>The complications arise though from the issue of what to do with that other part of Rails that we've just thrown away: the views and what they represent.</p>\n\n<h2>Stateful humans, stateless machines</h2>\n\n<p>This is actually more important than it may initially seem. HTML views represent the stateless interface that humans use for accessing the RESTful resources your service provides. Doing away with them leaves you with two access points:</p>\n\n<ol>\n<li>For humans: a rich, client-side interface provided by the backbone.js layer (stateful)</li>\n<li>For machines: a resource-oriented RESTful API provided by the rails layer (stateless)</li>\n</ol>\n\n<p>Notice that there is no longer a stateless (RESTful) interface for humans. In contrast, in a traditional rails app with an API, we had something closer to this:</p>\n\n<ol>\n<li>HTML resources for humans (stateless)</li>\n<li>JSON/XML resources (API) for machines (stateless)</li>\n</ol>\n\n<p>The latter two interfaces for accessing resources are <em>much</em> closer in nature to each other than the previous two. Just think for example of rails' <a href=\"http://apidock.com/rails/ActionController/MimeResponds/respond_with\">respond_with</a>, which takes advantage of the similarities to wrap various RESTful responders in a unified method.</p>\n\n<h2>Working together</h2>\n\n<p>This might all seem very abstract and beside the point, I know. To try to make it more concrete, consider the following problem, which gets back to your question about getting rails and backbone.js to work together. In this problem, you want to:</p>\n\n<ul>\n<li>Create a web service with a rich client-side experience using backbone.js, with rails as the back end serving resources in JSON format.</li>\n<li>Use <a href=\"http://zachlendon.github.com/blog/2012/02/21/backbone-dot-js-from-hashbangs-to-pushstate/\"><code>pushState</code></a> to give each page in the app a URL (e.g. <code>/posts/123</code>) which can be accessed directly (by entering it into the browser bar).</li>\n<li>For each of these URLs, also serve an HTML page for clients without javascript.</li>\n</ul>\n\n<p>These are not unusual demands for a modern web service, but they create a complex challenge. To make a long story short, you now have to create <em>two</em> \"human-oriented\" layers:</p>\n\n<ol>\n<li>Stateful client-side interface (backbone.js templates and views)</li>\n<li>Stateless HTML resources (Rails HTML views)</li>\n</ol>\n\n<p>The complexity of actually doing this leads many nowadays to abandon the latter of these two  and just offer a rich client-side interface. What you decide to do depends on your goals and what you want to achieve, but it's worth thinking about this problem carefully.</p>\n\n<p>As another possible reference for doing that, I'd suggest having a look at O'Reilly's <a href=\"http://shop.oreilly.com/product/9780596529260.do\">RESTful Web Services</a>. It might seem odd to be recommending a book on REST in a question about Rails and Backbone.js, but actually I think this is the key piece that fits these very different frameworks together, and understanding it more fully will help you take advantage of the strengths of both.</p>\n",
                    "is_accepted": true,
                    "score": 58
                }
            ],
            "body": "<p>I am just starting to look at MVC structure, first i looked at how <code>backbone.js</code> worked, and now I have just completed <a href=\"http://railsforzombies.org/\">rails for zombies</a>, by Code School. I know that I haven't delved too far into any of this, but I had a question to begin with.</p>\n\n<p><strong>Can you use these libraries together?</strong> </p>\n\n<p>I have learned how to create <code>models</code>, <code>views</code>, etc in both, but when creating a real application do you use both backbone and rails? </p>\n\n<p>If so... </p>\n\n<p><strong>When do you use a <code>backbone.js</code> model vs. a <code>rails</code> model?</strong> </p>\n\n<p>Maybe I am just getting ahead of myself and need to keep practicing and doing tutorials but I couldn't seem to find anything directly on this. </p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1357291426,
            "question_id": 11918586,
            "score": 27,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "ruby",
                "model-view-controller",
                "backbone.js"
            ],
            "title": "rails and backbone working together"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Try something like this:</p>\n\n<pre>\nvar height = {whatever height setting you want to detect};\nelement.style.webkitTransform = \"translate3d(0px,\" + height*i + \",0px)\";\n</pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I didn't get when you wanted to modify these values (i.e. use variables) but nevertheless here are 3 to 4 solutions and 1 impossible solution (for now).</p>\n\n<ul>\n<li><p><strong>server-side calculation</strong>: in order to serve a different CSS from time to time, you can tell PHP or any server-side language to parse <code>.css</code> files as well as <code>.php</code> or <code>.html</code> and then use PHP variables in-between PHP tags. Beware of file caching: to avoid it, you can load a stylesheet like style.css?1234567890random-or-time it will produce an apparent different file and thus won't be cached</p></li>\n<li><p><strong><a href=\"http://sass-lang.com/tutorial.html\" rel=\"nofollow\">SASS</a></strong> is also a server-side solution that needs Ruby and will provide you an existing syntax, probably cleaner than a hand-made solution as others have already about problems and solutions</p></li>\n<li><p><strong><a href=\"http://lesscss.org/\" rel=\"nofollow\">LESS</a></strong> is a client-side solution that will load your .less file and a less.js file that will parse the former and provide you variables in CSS whatever your server is. It can also work server-side with node.js</p></li>\n<li><p>CSS being <strong>dynamically modified</strong> while your page is displayed?<br>\nFor 2D there are <a href=\"http://www.benbarnett.net/2010/09/01/enhancing-jquerys-animate-function-to-automatically-use-css3-transitions/\" rel=\"nofollow\">jquery-animate-enhanced</a> from Ben Barnett, <a href=\"http://plugins.jquery.com/project/2d-transform\" rel=\"nofollow\">2d-transform</a> or <a href=\"http://plugins.jquery.com/project/Rotate\" rel=\"nofollow\">CSS3 rotate</a> are pitched the other way around (they use CSS3 where possible and where there are no such functions, they fallback to existing jQuery .animate() and IE matrix filter) but that's it.<br>\nYou could <a href=\"http://docs.jquery.com/Plugins/Authoring\" rel=\"nofollow\">create a plugin for jQuery</a> that would manage with a few parameters what you want to achieve with 3D Transformation and avoid the hassle of modifying long and complex CSS rules in the DOM</p></li>\n<li><p><em>CSS only</em>: you could use -moz-calc [<a href=\"https://developer.mozilla.org/en/CSS/-moz-calc\" rel=\"nofollow\">1</a>][<a href=\"https://hacks.mozilla.org/2010/06/css3-calc/\" rel=\"nofollow\">2</a>] that works only in Firefox 4.0 with -webkit-transform that works only in ... OK nevermind :-)</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A 'Chunky' solution?</p>\n\n<p>Create transforms for heights within your chosen granularity, say 0-99, 100-199, 200-299, etc. Each with a unique animation name identifier like:</p>\n\n<pre><code>@-webkit-keyframes run100 {\n        0%    { -webkit-transform: translate3d(0px,0px,0px); }            \n        100%  { -webkit-transform: translate3d(0px,100px,0px); }\n}\n\n@-webkit-keyframes run200 {\n        0%    { -webkit-transform: translate3d(0px,0px,0px); }            \n        100%  { -webkit-transform: translate3d(0px,200px,0px); }\n}\n</code></pre>\n\n<p>then create matching css classes:</p>\n\n<pre><code>.height-100 div { \n    -webkit-animation-name: run100;  \n}\n\n.height-200 div { \n    -webkit-animation-name: run200;  \n}\n</code></pre>\n\n<p>then with javascript decide which chunk you're in and assign the appropriate class to the surrounding element.</p>\n\n<pre><code>$('#frame').attr('class', '').addClass('height-100');\n</code></pre>\n\n<p>Might be ok if the granularity doesn't get too fine!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Have you tried declaring the keyframe portion of your css in a <code>&lt;style&gt;</code> element in the head of your html document. You can then give this element an id or whatever and change it's content whenever you like with javaScript. Something like this:</p>\n\n<pre><code>&lt;style id=\"keyframes\"&gt;\n        @-webkit-keyframes run {\n            0%    { -webkit-transform: translate3d(0px,0px,0px); }            \n            100%  { -webkit-transform: translate3d(0px, 1620px, 0px); }\n        }\n&lt;/style&gt;\n</code></pre>\n\n<p>Then your jquery can change this as normal:</p>\n\n<pre><code>$('#keyframes').text('whatever new values you want in here');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Well from your example it seems to me that CSS animations may be overkill. Use transitions instead:</p>\n\n<pre><code>-webkit-transition: -webkit-transform .4s linear; /* you could also use 'all' instead of '-webkit-transform' */\n</code></pre>\n\n<p>and then apply a new transform to the element via js:</p>\n\n<pre><code>$(\"&lt;yournode&gt;\")[0].webkitTransform = \"translate3d(0px,\"+ (height*i) +\"px,0px)\";\n</code></pre>\n\n<p>It should animate that.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/questions/3328933/set-the-webkit-keyframes-from-to-parameter-with-javascript\">Set the webkit-keyframes from/to parameter with JavaScript</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h1>Use the CSSOM</h1>\n\n<pre><code>var style = document.documentElement.appendChild(document.createElement(\"style\")),\nrule = \" run {\\\n    0%   {\\\n        -webkit-transform: translate3d(0, 0, 0); }\\\n        transform: translate3d(0, 0, 0); }\\\n    }\\\n    100% {\\\n        -webkit-transform: translate3d(0, \" + your_value_here + \"px, 0);\\\n        transform: translate3d(0, \" + your_value_here + \"px, 0);\\\n    }\\\n}\";\nif (CSSRule.KEYFRAMES_RULE) { // W3C\n    style.sheet.insertRule(\"@keyframes\" + rule, 0);\n} else if (CSSRule.WEBKIT_KEYFRAMES_RULE) { // WebKit\n    style.sheet.insertRule(\"@-webkit-keyframes\" + rule, 0);\n}\n</code></pre>\n\n<p>If you want to modify a keyframe rule in a stylesheet that's already included, do the following:</p>\n\n<pre><code>var\n      stylesheet = document.styleSheets[0] // replace 0 with the number of the stylesheet that you want to modify\n    , rules = stylesheet.rules\n    , i = rules.length\n    , keyframes\n    , keyframe\n;\n\nwhile (i--) {\n    keyframes = rules.item(i);\n    if (\n        (\n               keyframes.type === keyframes.KEYFRAMES_RULE\n            || keyframes.type === keyframes.WEBKIT_KEYFRAMES_RULE\n        )\n        &amp;&amp; keyframes.name === \"run\"\n    ) {\n        rules = keyframes.cssRules;\n        i = rules.length;\n        while (i--) {\n            keyframe = rules.item(i);\n            if (\n                (\n                       keyframe.type === keyframe.KEYFRAME_RULE\n                    || keyframe.type === keyframe.WEBKIT_KEYFRAME_RULE\n                )\n                &amp;&amp; keyframe.keyText === \"100%\"\n            ) {\n                keyframe.style.webkitTransform =\n                keyframe.style.transform =\n                    \"translate3d(0, \" + your_value_here + \"px, 0)\";\n                break;\n            }\n        }\n        break;\n    }\n}\n</code></pre>\n\n<p>If you don't know the order but do know the URL of the CSS file, replace <code>document.styleSheets[0]</code> with <code>document.querySelector(\"link[href='</code><strong><code>your-css-url.css</code></strong><code>']\").sheet</code>.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>I used warmanp's solution and it worked, but with a bit of very important tweaking.</p>\n\n<pre><code>$('#ticket-marquee-css').text(\n    \"@-webkit-keyframes marqueeR{ 0%{text-indent: -\" + distanceToMove + \"px;} 100%{text-indent: 0;} }\" + \n    \"@-webkit-keyframes marqueeL{ 0%{text-indent: 0;} 100%{text-indent: -\" + distanceToMove + \"px;} }\"\n);\n</code></pre>\n\n<p>In order to get the CSS transition to update, instead of using the previously-defined values, I had to make the animation stop, then restart. To do this, I placed a class of \"active\" on the elements, and made the CSS only apply the transition to the elements that had that class</p>\n\n<pre><code>#marquee1.active {-webkit-animation-name: marqueeL;}\n#marquee2.active {-webkit-animation-name: marqueeR;}\n</code></pre>\n\n<p>Then I just had to toggle the \"active\" class off, wait for it to apply in the DOM (hence the setTimeout), then reapply it.</p>\n\n<pre><code>$('.ticket-marquee').removeClass('active');\nsetTimeout(function() { $('.ticket-marquee').addClass('active'); },1);\n</code></pre>\n\n<p>And that works great! Now I can dynamically change the distance the text moves!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>i have this stylesheet:</p>\n\n<pre><code>        @-webkit-keyframes run {\n            0%    { -webkit-transform: translate3d(0px,0px,0px); }            \n            100%  { -webkit-transform: translate3d(0px,1620px,0px); }\n        }\n</code></pre>\n\n<p>not i would like to modify the value of 1620px depending on some parameters. like this:</p>\n\n<pre><code>        @-webkit-keyframes run {\n            0%    { -webkit-transform: translate3d(0px,0px,0px); }            \n            100%  { -webkit-transform: translate3d(0px, height*i, 0px); }\n        }\n</code></pre>\n\n<p>i would prefer to be able to use javascript and jquery, though a pure css solution would be ok.</p>\n\n<p>this is for an iphone game that runs in it's mobile-safari browser.</p>\n",
            "last_activity_date": 1376085489,
            "question_id": 5105530,
            "score": 19,
            "tags": [
                "javascript",
                "css",
                "safari",
                "webkit",
                "mobile-safari"
            ],
            "title": "programmatically changing webkit-transformation values in animation rules"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You cannot break a <code>forEach</code> in underscore, as it emulates EcmaScript 5 native behaviour.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can't break from the <code>each</code> method\u2014it emulates the native <code>forEach</code> method's behavior, and the native <code>forEach</code> doesn't provide to escape the loop (other than throwing an exception).</p>\n\n<p><strong>However, all hope is not lost!</strong> You can use the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/every\"><code>Array.every</code></a> method. :)</p>\n\n<p>From that link:</p>\n\n<blockquote>\n  <p><code>every</code> executes the provided <code>callback</code> function once for each element present in the array until it finds one where <code>callback</code> returns a false value. If such an element is found, the <code>every</code> method immediately returns false.</p>\n</blockquote>\n\n<p>In other words, you could do something convoluted like this (<a href=\"http://jsfiddle.net/AdleyEskridge/x2pVx/\">link to JSFiddle</a>):</p>\n\n<pre><code>[1, 2, 3, 4].every(function(n) {\n    alert(n);\n    return n !== 3;\n});\n</code></pre>\n\n<p>This will alert <code>1</code> through <code>3</code>, and then \"break\" out of the loop.</p>\n\n<p>You're using underscore.js, so you'll be pleased to learn that it <em>does</em> provide an <code>every</code> method\u2014they call it <a href=\"http://documentcloud.github.com/underscore/#every\"><code>every</code></a>, but as that link mentions, they also provide an alias called <code>all</code>.</p>\n",
                    "is_accepted": true,
                    "score": 165
                },
                {
                    "body": "<p>Maybe you want Underscore's any() or find(), which will stop processing when a condition is met.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Like the other answers, it's impossible.\nHere is the comment about breaker in underscore <a href=\"https://github.com/documentcloud/underscore/issues/211\" rel=\"nofollow\">underscore issue #21</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I believe if your array was actually an object you could return using an empty object.</p>\n\n<pre><code>_.({1,2,3,4,5}).each(function(v){  \n  if(v===3) return {}; \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Update:</p>\n\n<p>You can actually \"break\" by throwing an error inside and catching it outside: something like this:</p>\n\n<pre><code>try{\n  _([1,2,3]).each(function(v){\n    if (v==2) throw new Error('break');\n  });\n}catch(e){\n  if(e.message === 'break'){\n    //break successful\n  }\n}\n</code></pre>\n\n<p>This obviously has some implications regarding any other exceptions that your code trigger in the loop, so use with caution!</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Update:</p>\n\n<p>_.find would be better as it breaks out of the loop when the element is found:</p>\n\n<pre><code>var searchArr = [{id:1,text:\"foo\"},{id:2,text:\"bar\"}];\nvar count = 0;\nvar filteredEl = _.find(searchArr,function(arrEl){ \n              count = count +1;\n              if(arrEl.id === 1 ){\n                  return arrEl;\n              }\n            });\n\nconsole.log(filteredEl);\n//since we are searching the first element in the array, the count will be one\nconsole.log(count);\n//output: filteredEl : {id:1,text:\"foo\"} , count: 1\n</code></pre>\n\n<p>** Old **</p>\n\n<p>If you want to conditionally break out of a loop, use _.filter api instead of _.each. Here is a code snippet</p>\n\n<pre><code>var searchArr = [{id:1,text:\"foo\"},{id:2,text:\"bar\"}];\nvar filteredEl = _.filter(searchArr,function(arrEl){ \n                  if(arrEl.id === 1 ){\n                      return arrEl;\n                  }\n                });\nconsole.log(filteredEl);\n//output: {id:1,text:\"foo\"}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<pre><code>_([1,2,3]).find(function(v){\n    return v if (v==2);\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<blockquote>\n  <p>It's also good to note that an each loop cannot be broken out of \u2014 to\n  break, use _.find instead.</p>\n</blockquote>\n\n<p><a href=\"http://underscorejs.org/#each\" rel=\"nofollow\">http://underscorejs.org/#each</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking for a way to stop iterations of underscore.js .each() method, but can't find the solution. jQuery each() can break if you return false. \nIs there a way to stop underscore each()?</p>\n\n<pre><code>_([1,2,3]).each(function(v){\n    if (v==2) return /*what?*/;\n})\n</code></pre>\n",
            "last_activity_date": 1407191748,
            "question_id": 8779799,
            "score": 116,
            "tags": [
                "javascript",
                "jquery",
                "underscore.js"
            ],
            "title": "how to break the .each function in underscore.js"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>This works for me:</p>\n\n<p><a href=\"http://jsfiddle.net/zrBuL/291/\" rel=\"nofollow\">http://jsfiddle.net/zrBuL/291/</a></p>\n\n<pre><code>&lt;label&gt;Male\n   &lt;input type=\"radio\" name=\"IsMale\" value=\"1\" data-bind=\"checked:IsMale\"/&gt;\n&lt;/label&gt; \n&lt;label&gt;Female\n   &lt;input type=\"radio\" name=\"IsMale\" value=\"0\" data-bind=\"checked:IsMale\"/&gt;\n&lt;/label&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>One option is to use a <a href=\"http://knockoutjs.com/documentation/computedObservables.html#writeable_computed_observables\">writeable computed observable</a>.</p>\n\n<p>In this case, I think that a nice option is to make the writeable computed observable a \"sub-observable\" of your <code>IsMale</code> observable.  Your view model would look like:</p>\n\n<pre><code>var ViewModel = function() {\n   this.IsMale = ko.observable(true);\n\n   this.IsMale.ForEditing = ko.computed({\n        read: function() {\n            return this.IsMale().toString();  \n        },\n        write: function(newValue) {\n             this.IsMale(newValue === \"true\");\n        },\n        owner: this        \n    });          \n};\n</code></pre>\n\n<p>You would bind it in your UI like:</p>\n\n<pre><code>&lt;label&gt;Male\n   &lt;input type=\"radio\" name=\"IsMale\" value=\"true\" data-bind=\"checked:IsMale.ForEditing\"/&gt;\n&lt;/label&gt; \n&lt;label&gt;Female\n   &lt;input type=\"radio\" name=\"IsMale\" value=\"false\" data-bind=\"checked:IsMale.ForEditing\"/&gt;\n&lt;/label&gt;\n</code></pre>\n\n<p>Sample: <a href=\"http://jsfiddle.net/rniemeyer/Pjdse/\">http://jsfiddle.net/rniemeyer/Pjdse/</a></p>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>Why not simply true and false instead of 1 and 0?</p>\n\n<pre><code> &lt;label&gt;Male\n    &lt;input type=\"radio\" name=\"IsMale\" value=\"true\" data-bind=\"checked:IsMale\"/&gt;\n &lt;/label&gt; \n &lt;label&gt;Female\n    &lt;input type=\"radio\" name=\"IsMale\" value=\"false\" data-bind=\"checked:IsMale\"/&gt;\n &lt;/label&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>ko.bindingHandlers['radiobuttonyesno'] = {\n    'init': function (element, valueAccessor, allBindingsAccessor) {\n        var stateHandler = function (property, allBindingsAccessor, key, value, checkIfDifferent) {\n            if (!property || !ko.isObservable(property)) {\n                var propWriters = allBindingsAccessor()['_ko_property_writers'];\n                if (propWriters &amp;&amp; propWriters[key])\n                    propWriters[key](value);\n            } else if (ko.isWriteableObservable(property) &amp;&amp; (!checkIfDifferent || property.peek() !== value)) {\n                property(value);\n            }\n        };\n\n        var updateHandler = function () {\n            var valueToWrite;\n\n            if ((element.type == \"radio\") &amp;&amp; (element.checked)) {\n                valueToWrite = element.value;\n            } else {\n                return; // \"radiobuttonyesno\" binding only responds to selected radio buttons\n            }\n\n            valueToWrite = (valueToWrite === \"True\") ? true : false;\n\n            var modelValue = valueAccessor(), unwrappedValue = ko.utils.unwrapObservable(modelValue); //can be true of false\n\n            stateHandler(modelValue, allBindingsAccessor, 'checked', valueToWrite, true);\n        };\n        ko.utils.registerEventHandler(element, \"click\", updateHandler);\n\n        // IE 6 won't allow radio buttons to be selected unless they have a name\n        if ((element.type == \"radio\") &amp;&amp; !element.name)\n            ko.bindingHandlers['uniqueName']['init'](element, function () { return true });\n    },\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n\n        value = value ? \"True\" : \"False\";\n\n        if (element.type == \"radio\") {\n            element.checked = (element.value == value);\n        }\n    }\n};\n</code></pre>\n\n<p>Use this binder instead of creating stupid ko computed observables. </p>\n\n<p>Example:</p>\n\n<pre><code>&lt;label&gt;Male\n        &lt;input type=\"radio\" name=\"IsMale\" value=\"True\" data-bind=\"radiobuttonyesno:IsMale\"/&gt;\n     &lt;/label&gt; \n     &lt;label&gt;Female\n        &lt;input type=\"radio\" name=\"IsMale\" value=\"False\" data-bind=\"radiobuttonyesno:IsMale\"/&gt;\n     &lt;/label&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I know this is an old thread, but I was having the same problem and found out a much better solution that was probably added to knockout after this question was officially answered, so I'll just leave it for people with the same problem.</p>\n\n<p>Currently there is no need for extenders, custom binding handlers or computeds. \nJust provide a \"checkedValue\" option, it will use that instead of the html 'value' attribute, and with that you can pass any javascript value.</p>\n\n<pre><code>&lt;input type=\"radio\" name=\"a\" data-bind=\"checked:IsChecked, checkedValue: true\"/&gt;\n&lt;input type=\"radio\" name=\"a\" data-bind=\"checked:IsChecked, checkedValue: false\"/&gt;\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>&lt;input type=\"radio\" name=\"b\" data-bind=\"checked:Quantity, checkedValue: 1\"/&gt;\n&lt;input type=\"radio\" name=\"b\" data-bind=\"checked:Quantity, checkedValue: 2\"/&gt;\n&lt;input type=\"radio\" name=\"b\" data-bind=\"checked:Quantity, checkedValue: 3\"/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<p>You can also use an <a href=\"http://knockoutjs.com/documentation/extenders.html\" rel=\"nofollow\">extender</a> so it's easy to reuse them for more observables:</p>\n\n<pre><code>ko.extenders.boolForEditing = function (target, allowNull) {\n    var result = ko.computed({\n        read: function () {\n            var current = target();\n            var newValue = null;\n            if (current === undefined || current === null || current === '') {\n                if (!allowNull) {\n                    newValue = 'false';\n                }\n            } else {\n                newValue = current ? 'true' : 'false';\n            }\n            return newValue;\n        },\n        write: function (newValue) {\n            var current = target();\n            var valueToWrite = null;\n            if (newValue === undefined || newValue === null || newValue === '') {\n                if (!allowNull) {\n                    valueToWrite = false;\n                }\n            } else {\n                valueToWrite = newValue === 'true';\n            }\n            // only write if it changed\n            if (valueToWrite !== current) {\n                target(valueToWrite);\n            } else {\n                if (newValue !== current) {\n                    target.notifySubscribers(valueToWrite);\n                }\n            }\n        }\n    }).extend({\n        notify: 'always'\n    });\n\n    result(target());\n\n    return result;\n};\n</code></pre>\n\n<p>Then use it like this:</p>\n\n<pre><code>this.IsMale.forEditing = this.IsMale.extend({boolForEditing: true});\n</code></pre>\n\n<p>The parameter provided to <code>boolForEditing</code> indicates whether the value may be null.</p>\n\n<p>See <a href=\"http://jsfiddle.net/G8qs9/1/\" rel=\"nofollow\">http://jsfiddle.net/G8qs9/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Once you figure out that <strong>the initial match for the radio button wants to match only a string</strong> and wants to set the value to a string, <strong>it is simply a matter of converting your initial value to string.</strong> I had to fight this with Int values.</p>\n\n<p>After you have setup your observables, convert the value to string and KO will do its magic from there. If you are mapping with individual lines, do the conversion in those lines.</p>\n\n<p>In the example code, I'm using Json to map the whole Model in a single command.\nThen letting Razor insert the value between the quotes for the conversion.</p>\n\n<pre><code>script type=\"text/javascript\"&gt;\n    KoSetup.ViewModel = ko.mapping.fromJS(@Html.Raw(Json.Encode(Model)));\n    KoSetup.ViewModel.ManifestEntered(\"@Model.ManifestEntered\");       //Bool\n    KoSetup.ViewModel.OrderStatusID(\"@Model.OrderStatusID\");           //Int\n&lt;/script&gt;\n</code></pre>\n\n<p>I use a \"Dump it all to the screen\" at the bottom of my web page during development.</p>\n\n<pre><code>&lt;h4&gt;Debug&lt;/h4&gt;\n&lt;pre data-bind=\"text: ko.toJSON($data, null, 2)\"&gt;&lt;/pre&gt;\n</code></pre>\n\n<p>Here are the data values, <strong>Before</strong></p>\n\n<pre><code>\"OrderStatusID\": 6,\n\"ManifestEntered\": true,\n</code></pre>\n\n<p>and, <strong>After</strong></p>\n\n<pre><code>\"OrderStatusID\": \"6\",\n\"ManifestEntered\": \"True\",\n</code></pre>\n\n<p>In my project, I didn't need to convert Bools, because I'm able to use a checkbox that doesn't have the same frustration.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>After doing lot of research for older version of knockout prior to 3.0 there are possibly two best options<br></p>\n\n<p>Create a knockout extender like<br></p>\n\n<pre><code>ko.extenders[\"booleanValue\"] = function (target) {\n    target.formattedValue = ko.computed({\n        read: function () {\n            if (target() === true) return \"True\";\n            else if (target() === false) return \"False\";\n        },\n        write: function (newValue) {\n            if (newValue) {\n                if (newValue === \"False\") target(false);\n                else if (newValue === \"True\") target(true);\n            }\n        }\n    });\n\n    target.formattedValue(target());\n    return target;\n};\n</code></pre>\n\n<p>To use the extender on your model, you\u2019d do something like the following:</p>\n\n<pre><code>function Order() {\n  this.wantsFries= ko.observable(false).extend({ booleanValue: null });\n}\n\n&lt;span&gt;Do you want fries with that?&lt;/span&gt;\n&lt;label&gt;\n  &lt;input type=\"radio\" name=\"question\" value=\"True\"\n             data-bind=\"value: wantsFries.formattedValue\" /&gt; Yes\n&lt;/label&gt;\n&lt;label&gt;\n  &lt;input type=\"radio\" name=\"question\" value=\"False\"\n             data-bind=\"value: wantsFries.formattedValue\" /&gt; No\n&lt;/label&gt;\n</code></pre>\n\n<p>source:<a href=\"http://www.timlabonne.com/2013/02/building-a-knockout-js-extender-for-boolean-values/\" rel=\"nofollow\">http://www.timlabonne.com/2013/02/building-a-knockout-js-extender-for-boolean-values/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In my view model I have a IsMale value that has the value true or false.</p>\n\n<p>In my UI I wish to bind it to the following radio buttons:</p>\n\n<pre><code>&lt;label&gt;Male\n   &lt;input type=\"radio\" name=\"IsMale\" value=\"true\" data-bind=\"checked:IsMale\"/&gt;\n&lt;/label&gt; \n&lt;label&gt;Female\n   &lt;input type=\"radio\" name=\"IsMale\" value=\"false\" data-bind=\"checked:IsMale\"/&gt;\n&lt;/label&gt;\n</code></pre>\n\n<p>The problem I think is <code>checked</code> expects a string \"true\" / \"false\". So my question is, how can I get this 2-way binding w/ this UI and model?</p>\n",
            "last_activity_date": 1414704702,
            "question_id": 10127001,
            "score": 57,
            "tags": [
                "javascript",
                "knockout.js",
                "knockout-mapping-plugin",
                "knockout-2.0"
            ],
            "title": "Binding true / false to radio buttons in Knockout JS"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>require()</code> is not part of your standard JavaScript. In context to your question and tags, <code>require()</code> is built into Node.js to load <em>modules</em>. The concept is similar to C/Java/Python/[insert more languages here] imports or includes.</p>\n\n<p>The concept of modules is similar to just adding small bits of JavaScript code via a <code>&lt;script&gt;</code> tags. Unlike adding a <code>&lt;script&gt;</code> tag, it doesn't leak the file into the global scope. The file has its own scope, essentially trapping everything you define in that file, unless you decide to expose functionality.  <code>require</code> returns a value, depending on what the module exposes using <code>exports</code> or <code>module.exports</code>. <a href=\"http://stackoverflow.com/a/5311377/575527\">Another post</a> explains how <code>require()</code> works in conjunction with <code>exports</code>.</p>\n\n<p>In your code, it loads the <code>pg</code> module, which I guess is a PostgreSQL driver for NodeJS. The part where you do <code>npm install pg</code> downloads the <code>pg</code> module from npm (a package repository for NodeJS modules) and makes it available to your project via <code>require('pg');</code>.</p>\n\n<hr>\n\n<p>Just in case you were wondering why I mentioned \"in context to your question\", there are 3rd-party libraries that also use a function named <code>require</code> to do something. It's handy to identify which is which.</p>\n\n<ul>\n<li><p><a href=\"http://requirejs.org/docs/start.html\">RequireJS</a> exposes a function called <code>require</code>, along with <code>define</code> to load dependencies before running the code provided. The syntax is in AMD format.</p></li>\n<li><p><a href=\"https://www.npmjs.org/package/grunt-neuter\">Neuter</a>, which concatenates js files, also exposes a function named <code>require</code>. This one acts much closer to PHP's <code>import</code>.</p></li>\n<li><p><a href=\"http://browserify.org/\">Browserify</a> uses <code>require</code> on the browser, allowing scripts on the browser to be written NodeJS style (CommonJS module syntax).</p></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 125
                },
                {
                    "body": "<p>Its used to load modules: A sample example</p>\n\n<pre><code>\nCircle = function (radius) {\n    this.radius = radius\n}\nCircle.PI = 3.14\n\nCircle.prototype = {\n    area: function () {\n        return Circle.PI * this.radius * this.radius\n    }\n}\n</code></pre>\n\n<p>And we can use it using \"require\", like</p>\n\n<pre><code>\nnode> require('circle_object')\n{}\nnode> Circle\n{ [Function] PI: 3.14 }\nnode> var c = new Circle(3)\n{ radius: 3 }\nnode> c.area()\n</code></pre>\n\n<p><strong>require()</strong> method is used to load and cache Javascript modules. So, If you want to load a local, relative Javascript module into a Node.js application, you can simply use the require() method.\nExample:</p>\n\n<pre><code>\nvar yourModule = require( \"your_module_name\" ); //.js file extension is optional\n</code></pre>\n\n<p>Hope that helps</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Alright, so let's first start with making the distinction between Javascript, Javascript in a web browser, and Javascript on a server (CommonJS and Node).</p>\n\n<p>Javascript is a language traditionally confined to a web browser with a limited global context defined mostly by what came to be known as the Document Object Model (DOM) level 0 (the Netscape Navigator Javascript API)</p>\n\n<p>Server-side Javascript eliminates that restriction and allows Javascript to call into various pieces of native code (like the Postgres library) and open sockets.</p>\n\n<p>require() is a special function call defined as part of the CommonJS spec. In node, it resolves libraries and modules in the Node search path, now usually defined as node_modules in the same directory (or the directory of the invoked javascript file) or the system-wide search path.</p>\n\n<p>To try to answer the rest of your question, we need to use a proxy between the code running in the the browser and the database server.</p>\n\n<p>Since we are discussing Node and you are already familiar with how to run a query from there, it would make sense to use Node as that proxy.</p>\n\n<p>As a simple example:</p>\n\n<p>We're going to make a URL that returns a few facts about a Beatle, given a name, as JSON.</p>\n\n<pre><code>/* your connection code */\n\nvar express = require('express');\nvar app = express.createServer();\napp.get('/beatles/:name', function(req, res) {\n    var name = req.params.name || '';\n    name = name.replace(/[^a-zA_Z]/, '');\n    if(!name.lenght) {\n        res.send({});\n    } else {\n        var query = client.query('SELECT * FROM BEATLES WHERE name =\\''+name+'\\' LIMIT 1');\n        var data = {};\n        query.on('row', function(row) {\n            data = row;\n            res.send(data);\n        });\n    };\n});\napp.listen(80, '127.0.0.1');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                }
            ],
            "body": "<p>I'm trying to get Javascript to read/write to a PostgreSQL database. I found this <a href=\"https://github.com/brianc/node-postgres\">project</a> on github. I was able to get the following sample code to run in node.</p>\n\n<pre><code>var pg = require('pg'); //native libpq bindings = `var pg = require('pg').native`\nvar conString = \"tcp://postgres:1234@localhost/postgres\";\n\nvar client = new pg.Client(conString);\nclient.connect();\n\n//queries are queued and executed one after another once the connection becomes available\nclient.query(\"CREATE TEMP TABLE beatles(name varchar(10), height integer, birthday timestamptz)\");\nclient.query(\"INSERT INTO beatles(name, height, birthday) values($1, $2, $3)\", ['Ringo', 67, new Date(1945, 11, 2)]);\nclient.query(\"INSERT INTO beatles(name, height, birthday) values($1, $2, $3)\", ['John', 68, new Date(1944, 10, 13)]);\n\n//queries can be executed either via text/parameter values passed as individual arguments\n//or by passing an options object containing text, (optional) parameter values, and (optional) query name\nclient.query({\n  name: 'insert beatle',\n  text: \"INSERT INTO beatles(name, height, birthday) values($1, $2, $3)\",\n  values: ['George', 70, new Date(1946, 02, 14)]\n});\n\n//subsequent queries with the same name will be executed without re-parsing the query plan by postgres\nclient.query({\n  name: 'insert beatle',\n  values: ['Paul', 63, new Date(1945, 04, 03)]\n});\nvar query = client.query(\"SELECT * FROM beatles WHERE name = $1\", ['John']);\n\n//can stream row results back 1 at a time\nquery.on('row', function(row) {\n  console.log(row);\n  console.log(\"Beatle name: %s\", row.name); //Beatle name: John\n  console.log(\"Beatle birth year: %d\", row.birthday.getYear()); //dates are returned as javascript dates\n  console.log(\"Beatle height: %d' %d\\\"\", Math.floor(row.height/12), row.height%12); //integers are returned as javascript ints\n});\n\n//fired after last row is emitted\nquery.on('end', function() { \n  client.end();\n});\n</code></pre>\n\n<p>Next I tried to make it run on a webpage, but nothing seemed to happen. I checked on the Javascript console and it just says \"require not defined.\"</p>\n\n<p>So what is this \"require?\" Why does it work in node but not in a webpage?</p>\n\n<p>Also, before I got it to work in node, I had to do <code>npm install pg</code>. What's that about? I looked in the directory and didn't find a file pg. Where did it put it, and how does Javascript find it?</p>\n",
            "last_activity_date": 1423967311,
            "question_id": 9901082,
            "score": 57,
            "tags": [
                "javascript",
                "database",
                "postgresql",
                "node.js"
            ],
            "title": "What is this Javascript &quot;require&quot;?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><strong>UPDATE</strong>: Here's an easier way than what was there before.</p>\n\n<pre><code> &lt;input ng-model=\"query\"&gt;\n &lt;div ng-repeat=\"item in (filteredItems = (items | orderBy:'order_prop' | filter:query | limitTo:4))\"&gt;\n   {{item}}\n &lt;/div&gt;\n</code></pre>\n\n<p>Then <code>$scope.filteredItems</code> is accessible.</p>\n",
                    "is_accepted": true,
                    "score": 102
                },
                {
                    "body": "<p>Here's the filter version of Andy Joslin's solution.</p>\n\n<p><strong>Update:</strong> BREAKING CHANGE. As of version 1.3.0-beta.19 (<a href=\"https://github.com/angular/angular.js/commit/8863b9d04c722b278fa93c5d66ad1e578ad6eb1f\" rel=\"nofollow\">this commit</a>) filters do not have a context and <code>this</code> will be bound to the global scope. You can either pass the context as an argument or use the new aliasing syntax in <a href=\"https://docs.angularjs.org/api/ng/directive/ngRepeat\" rel=\"nofollow\">ngRepeat</a>, 1.3.0-beta.17+.</p>\n\n<pre><code>// pre 1.3.0-beta.19\nyourModule.filter(\"as\", function($parse) {\n  return function(value, path) {\n    return $parse(path).assign(this, value);\n  };\n});\n\n// 1.3.0-beta.19+\nyourModule.filter(\"as\", function($parse) {\n  return function(value, context, path) {\n    return $parse(path).assign(context, value);\n  };\n});\n</code></pre>\n\n<p>Then in your view</p>\n\n<pre><code>&lt;!-- pre 1.3.0-beta.19 --&gt;\n&lt;input ng-model=\"query\"&gt;\n&lt;div ng-repeat=\"item in items | orderBy:'order_prop' | filter:query | limitTo:4 | as:'filteredItems'\"&gt;\n {{item}}\n&lt;/div&gt;\n\n&lt;!-- 1.3.0-beta.19+ --&gt;\n&lt;input ng-model=\"query\"&gt;\n&lt;div ng-repeat=\"item in items | orderBy:'order_prop' | filter:query | limitTo:4 | as:this:'filteredItems'\"&gt;\n {{item}}\n&lt;/div&gt;\n\n&lt;!-- 1.3.0-beta.17+ ngRepeat aliasing --&gt;\n&lt;input ng-model=\"query\"&gt;\n&lt;div ng-repeat=\"item in items | orderBy:'order_prop' | filter:query | limitTo:4 as filteredItems\"&gt;\n {{item}}\n&lt;/div&gt;\n</code></pre>\n\n<p>Which gives you access to <code>$scope.filteredItems</code>.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I came up with a somewhat better version of Andy's solution. In his solution ng-repeat places a watch on the expression that contains the assignment. Each digest loop will evaluate that expression and assign the result to the scope variable.</p>\n\n<p>The problem with this solution is that you might run into assignment issues if you are in a child scope. This is the same reason why you should have a <a href=\"http://stackoverflow.com/questions/17178943/does-my-ng-model-really-need-to-have-a-dot-to-avoid-child-scope-problems\">dot in ng-model</a>.</p>\n\n<p>The other thing I don't like about this solution is that it buries the definition of the filtered array somewhere in the view markup. If it is used in multiple places in your view or your controller it can get confusing.</p>\n\n<p>A simpler solution is to just place a watch in your controller on a function that makes the assignment:</p>\n\n<pre><code>$scope.$watch(function () {\n    $scope.filteredItems = $scope.$eval(\"items | orderBy:'order_prop' | filter:query | limitTo:4\");\n});\n</code></pre>\n\n<p>This function will be evaluated during each digest cycle so performance should be comparable with Andy's solution. You can also add any number of assignments in the function to keep them all in one place rather than scattered about the view.</p>\n\n<p>In the view, you would just use the filtered list directly:</p>\n\n<pre><code>&lt;ul&gt;\n    &lt;li  ng-repeat=\"item in filteredItems\"&gt;{{item.name}}&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/dtjohnson/0xypj2z5/\" rel=\"nofollow\">Here's a fiddle where this is shown in a more complicated scenario.</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try something like this problem with the ng-repeat is that it create child scope because of that you can't access </p>\n\n<blockquote>\n  <p>filteritems</p>\n</blockquote>\n\n<p>from the controller </p>\n\n<pre><code>&lt;li ng-repeat=\"doc in $parent.filteritems = (docs | filter:searchitems)\" &gt;&lt;/li&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am using an ng-repeat directive with filter like so:</p>\n\n<pre><code>ng-repeat=\"item in items | orderBy:'order_prop' | filter:query | limitTo:4\"\n</code></pre>\n\n<p>and I can see the rendered results fine; now I want to run some logic on that result in my controller. The question is how can I grab the result items reference?</p>\n\n<p><strong>Update:</strong></p>\n\n<hr>\n\n<p>Just to clarify: I'm trying to create an auto complete, I have this input:</p>\n\n<pre><code>&lt;input id=\"queryInput\" ng-model=\"query\" type=\"text\" size=\"30\" placeholder=\"Enter query\"&gt;\n</code></pre>\n\n<p>and then the filtered results:</p>\n\n<pre><code>&lt;ul&gt;\n   &lt;li  ng-repeat=\"item in items | orderBy:'order_prop' | filter:query | limitTo:4\"&gt;{{item.name}}&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>now I want to navigate the result and select one of the items.</p>\n",
            "last_activity_date": 1421060559,
            "question_id": 11721863,
            "score": 45,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-ng-repeat"
            ],
            "title": "AngularJS - how to get an ngRepeat filtered result reference"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<pre><code>function getURLParameter(name) {\n  return decodeURIComponent((new RegExp('[?|&amp;]' + name + '=' + '([^&amp;;]+?)(&amp;|#|;|$)').exec(location.search)||[,\"\"])[1].replace(/\\+/g, '%20'))||null\n}\n</code></pre>\n\n<p>So you can use:</p>\n\n<pre><code>myvar = getURLParameter('myvar');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 118
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/831030/how-to-get-get-request-parameters-in-javascript\">How to get &ldquo;GET&rdquo; request parameters in JavaScript?</a><br>\n  <a href=\"http://stackoverflow.com/questions/3788125/jquery-querystring\">jQuery querystring</a>  </p>\n</blockquote>\n\n\n\n<p>Javascript does not provide a core method to do that, so how to do it?</p>\n",
            "last_activity_date": 1363195738,
            "question_id": 11582512,
            "score": 32,
            "tags": [
                "javascript"
            ],
            "title": "How to get URL parameters with Javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can look at the code here, as it seems to work in IE8 and FF3.5.  If you can understand his code great.\n<a href=\"http://www.walterzorn.de/en/dragdrop/dragdrop_e.htm\" rel=\"nofollow\">http://www.walterzorn.de/en/dragdrop/dragdrop_e.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>(Note: this answer refers exclusively to the \"standard\" drag implementation of <code>mousedown -&gt; mousemove -&gt; mouseup</code>. It is not applicable to the <a href=\"http://www.quirksmode.org/blog/archives/2009/09/the_html5_drag.html\">HTML5 drag specification</a>).</p>\n\n<p>Allowing dragging outside the browser window is an old problem that different browsers have solved in two ways.</p>\n\n<p>With the exception of IE, when a user initiates a drag operation via <code>mousedown</code> browsers have done something neat (and this is all just from observation): a kind of statemachine kicks in to handle the special case of mouse movements outside the window:</p>\n\n<ol>\n<li>User triggers <code>mousedown</code> event inside the <code>document</code></li>\n<li>User triggers <code>mousemove</code> event. Event fires <strong>even when triggered from outside the <code>document</code> (i.e. the window)</strong> </li>\n<li>User triggers <code>mouseup</code> event (inside or outside the <code>document</code>). <code>mousemove</code> events triggered from outside the document <strong>no longer fire</strong></li>\n</ol>\n\n<p>IE and older versions of Firefox [as late as 2.0.20] don't exhibit this behavior. Dragging outside the window just doesn't work<sup>1</sup>.</p>\n\n<p>The problem for IE and FF2 actually lies in whether an element is \"selectable\" or not (See <a href=\"https://developer.mozilla.org/En/CSS/-moz-user-select\">here</a> and <a href=\"http://msdn.microsoft.com/en-us/library/ms534706%28VS.85,loband%29.aspx\">here</a>). If a dragging implementation does nothing (thereby allowing selection by the mouse), then said implementation does not have to account for movements outside the window; the browser will go ahead and fire <code>mousemove</code> properly and the user is allowed to drag freely outside the window. Nice.</p>\n\n<p>However by letting the browser decide what to do on mousemove you get this effect where the browser thinks the user is trying to \"select\" something (eg the element), as opposed to moving it, and proceeds to frantically try to highlight the element or text therein as the mouse crosses in or out of the element during the drag.</p>\n\n<p>Most drag implementations I've seen do a little trick to make the element being dragged \"unselectable\", thereby taking full control of <code>mousemove</code> to simulate dragging:</p>\n\n<pre><code>elementToDrag.unselectable = \"on\";\nelementToDrag.onselectstart = function(){return false};\nelementToDrag.style.userSelect = \"none\"; // w3c standard\nelementToDrag.style.MozUserSelect = \"none\"; // Firefox\n</code></pre>\n\n<p>This works nicely, <strong>but breaks dragging outside the window</strong>. <sup>2</sup></p>\n\n<p><em>Anyway</em>, to answer your question, to get IE (all versions) to allow dragging outside the window, use <a href=\"http://msdn.microsoft.com/en-us/library/ms536742%28VS.85,loband%29.aspx\"><code>setCapture</code></a> (and inversely <a href=\"http://msdn.microsoft.com/en-us/library/ms536689%28VS.85,loband%29.aspx\"><code>releaseCapture</code></a> when the mouse is released).</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n&lt;title&gt;Simple drag demo&lt;/title&gt;\n&lt;style&gt;\n#dragme {\n  position:absolute;\n  cursor:move;\n  background:#eee;\n  border:1px solid #333;\n  padding:10px;\n}\n&lt;/style&gt;\n\n&lt;script&gt;\nfunction makeDraggable(element) {\n\n  /* Simple drag implementation */\n  element.onmousedown = function(event) {\n\n    document.onmousemove = function(event) {\n      event = event || window.event;\n      element.style.left = event.clientX + 'px';\n      element.style.top = event.clientY + 'px';\n    };\n\n    document.onmouseup = function() {\n      document.onmousemove = null;\n\n      if(element.releaseCapture) { element.releaseCapture(); }\n    };\n\n    if(element.setCapture) { element.setCapture(); }\n  };\n\n  /* These 3 lines are helpful for the browser to not accidentally \n   * think the user is trying to \"text select\" the draggable object\n   * when drag initiation happens on text nodes.\n   * Unfortunately they also break draggability outside the window.\n   */\n  element.unselectable = \"on\";\n  element.onselectstart = function(){return false};\n  element.style.userSelect = element.style.MozUserSelect = \"none\";\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body onload=\"makeDraggable(document.getElementById('dragme'))\"&gt;\n\n&lt;div id=\"dragme\"&gt;Drag me (outside window)&lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><a href=\"http://jsbin.com/ifuma#noedit\">Demo can be seen here</a>.</p>\n\n<p>This is exactly what Google maps does (as I discovered since reverse engineering google maps back in 2004 when it was first released).</p>\n\n<hr>\n\n<p><sup>1</sup><sub>I believe it actually only breaks when initiating a drag operation (i.e. <code>mousedown</code>) on a textnode. Element/container nodes do not exhibit the same behavior and can be dragged around inside or outside the document, provided the user moused down on an \"empty \" portion of the element</sub></p>\n\n<p><sup>2</sup><sub>Again, for drag initiations on textnodes.</sub></p>\n",
                    "is_accepted": true,
                    "score": 49
                }
            ],
            "body": "<p>In Internet Explorer 7 <em>body onmousemove</em> or <em>document.onmousemove</em> events only seem to fire while the mouse is inside the browser window, not when it's outside. Yet in Firefox the onmousemove event is called correctly when I move outside of the browser window.</p>\n\n<p>How can I setup an event to be called outside of the browser window in IE?</p>\n\n<p><a href=\"http://maps.google.com/\">Google Maps</a> does this in IE. If you hold the mouse button down and move the mouse outside of the browser window you can see that the map still moves.</p>\n",
            "last_activity_date": 1404143340,
            "question_id": 1685326,
            "score": 21,
            "tags": [
                "javascript",
                "internet-explorer",
                "google-maps",
                "javascript-events"
            ],
            "title": "Responding to the onmousemove event outside of the browser window in IE"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Are you looking for something like the <code>JSON.stringify()</code>?  it is what i use for my WCF calls.</p>\n\n<p><a href=\"http://www.json.org/js.html\">http://www.json.org/js.html</a></p>\n",
                    "is_accepted": true,
                    "score": 137
                },
                {
                    "body": "<p>Download <a href=\"https://github.com/douglascrockford/JSON-js/blob/master/json2.js\"><code>https://github.com/douglascrockford/JSON-js/blob/master/json2.js</code></a>, include it and do</p>\n\n<pre><code>json_data = JSON.stringify(obj);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>Just to keep it backward compatible I load Crockfords JSON-library from <a href=\"http://www.cloudflare.com/\" rel=\"nofollow\">cloudflare CDN</a> if no native JSON support is given (for simplicity using jQuery):</p>\n\n<pre><code>function winHasJSON(){\n  json_data = JSON.stringify(obj);\n  // ... (do stuff with json_data)\n}\nif(typeof JSON === 'object' &amp;&amp; typeof JSON.stringify === 'function'){\n  winHasJSON();\n} else {\n  $.getScript('//cdnjs.cloudflare.com/ajax/libs/json2/20121008/json2.min.js', winHasJSON)\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm a Javascript newbie so bear with me.  How can I serialise an object to JSON in Javascript?  Is there a common external library I can use?  I'm aware of <code>jquery.getJSON(...)</code> but this doesn't seem to quite do what I want, which is to simply get a string containing the JSON for an object in a piece of Javascript.</p>\n",
            "last_activity_date": 1370087252,
            "question_id": 558518,
            "score": 97,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "How can I serialise an object to JSON in Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>10.</code> is a <code>float number</code> an you can use toString on <code>float</code></p>\n\n<p>eg.</p>\n\n<pre><code>parseFloat(\"10\").toString() // \"10\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A <code>.</code> after a number might seem ambiguous. Is it a decimal or an object member operator? </p>\n\n<p>However, the interpreter <em>decides</em> that it's a decimal, so you're missing the member operator.</p>\n\n<p>It sees it as this: </p>\n\n<pre><code>(10.)toString();  // invalid syntax\n</code></pre>\n\n<p>When you include the second <code>.</code>, you have a decimal followed by the member operator.</p>\n\n<pre><code>(10.).toString();\n</code></pre>\n\n<hr>\n\n<p><em>@pedants and downvoters</em></p>\n\n<p>The <code>.</code> <em>character</em> presents an <em>ambiguity</em>. It can be understood to be the member operator, or a decimal, depending on its placement. If there was no ambiguity, there would be no question to ask.</p>\n\n<p>The specification's interpretation of the <code>.</code> character in that particular position is that it will be a decimal. This is defined by the numeric literal syntax of ECMAScript.</p>\n\n<p>Just because the specification resolves the ambiguity for the JS interpreter, doesn't mean that the ambiguity of the <code>.</code> character doesn't exist at all.</p>\n",
                    "is_accepted": true,
                    "score": 87
                },
                {
                    "body": "<p>The lexer (aka \"tokenizer\") when reading a new token, and upon first finding a digit, will keep consuming characters (i.e. digits or <strong>one</strong> dot) until it sees a character that is <em>not</em> part of a legal number.</p>\n\n<p><code>&lt;152.&gt;</code> is a legal token (the trailing 0 isn't required) but <code>&lt;152..&gt;</code> isn't, so your first example reduces to this series of tokens:</p>\n\n<pre><code>&lt;152.&gt; &lt;.&gt; &lt;toString&gt; &lt;(&gt; &lt;2&gt; &lt;)&gt;\n</code></pre>\n\n<p>which is the legal (and expected) sequence, whereas the second looks like</p>\n\n<pre><code>&lt;152.&gt; &lt;toString&gt; &lt;(&gt; &lt;2&gt; &lt;)&gt;\n</code></pre>\n\n<p>which is illegal - there's no period token separating the Number from the <code>toString</code> call.</p>\n",
                    "is_accepted": false,
                    "score": 95
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/6853865/usage-of-tostring-in-javascript\">Usage of toString in JavaScript</a>  </p>\n</blockquote>\n\n\n\n<pre><code>152..toString(2)\n</code></pre>\n\n<p>correctly creates the binary string \"10011000\", but</p>\n\n<pre><code>152.toString(2)\n</code></pre>\n\n<p>throws an exception</p>\n\n<blockquote>\n  <p>\"SyntaxError: identifier starts immediately after numeric literal\"</p>\n</blockquote>\n\n<p>Why? The latter syntax actually sounds more correct while the former looks very odd!</p>\n",
            "last_activity_date": 1406042939,
            "question_id": 13149282,
            "score": 59,
            "tags": [
                "javascript",
                "syntax"
            ],
            "title": "Why does 10..toString() work, but 10.toString() does not?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I have seen this error before (in node) with http.client, and as I recall, the problem had to do with not initializing the httpClient or setting bad options in the httpClient creation and/or in the url request.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>EADDRINUSE</code> means that the port number which <code>listen()</code> tries to bind the server to is already in use.</p>\n\n<p>So, in your case, there must be running a server on port 80 already.</p>\n\n<p>If you have another webserver running on this port you have to put node.js behind that server and proxy it through it.</p>\n\n<p>You should check for the <code>listening</code> event like this, to see if the server is really listening:</p>\n\n<pre><code>var http=require('http');\n\nvar server=http.createServer(function(req,res){\n    res.end('test');\n});\n\nserver.on('listening',function(){\n    console.log('ok, server is running');\n});\n\nserver.listen(80);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 75
                },
                {
                    "body": "<p>Just a head's up, Skype will sometimes listen on port 80 and therefore cause this error if you try to listen on port 80 from Node.js or any other app.</p>\n\n<p>You can turn off that behaviour in Skype by accessing the options and clicking Advanced -> Connection -> Use port 80 (Untick this)</p>\n\n<p><img src=\"http://i.stack.imgur.com/OXiXH.png\" alt=\"Turn off Skype port 80 usage\"></p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Another thing that can give this error, is two HTTP servers in the same node code. I was updating some Express 2 to Express 3 code, and had this...</p>\n\n<pre><code>http.createServer(app).listen(app.get('port'), function(){            \n  console.log('Express server listening on port ' + app.get('port')); \n});        \n\n// tons of shit.\n\nhttp.createServer(app).listen(app.get('port'), function(){            \n  console.log('Express server listening on port ' + app.get('port')); \n});                                                                   \n</code></pre>\n\n<p>And, it triggered this error.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>What really helped for me was:</p>\n\n<pre><code>killall -9 node\n</code></pre>\n\n<p>But this will kill a system process.</p>\n\n<p>With </p>\n\n<pre><code>ps ax\n</code></pre>\n\n<p>you can check if it worked.</p>\n",
                    "is_accepted": false,
                    "score": 67
                },
                {
                    "body": "<p>You should try killing the process that is listening on port 80.</p>\n\n<p>If using unix try this command: </p>\n\n<pre><code>sudo fuser -k 80/tcp    \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have the same problem too,and I simply close the terminal and open a new terminal and run </p>\n\n<pre><code>node server.js\n</code></pre>\n\n<p>again. that works for me, some time just need to wait for a few second till it work again.</p>\n\n<p>But this works only on a developer machine instead of a server console..</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>If I run a server with the port 80, and I try to use <a href=\"https://github.com/driverdan/node-XMLHttpRequest\">xmlHTTPrequest</a> i get this error: <code>Error: listen EADDRINUSE</code></p>\n\n<p>Why is it problem for nodejs, if I want to do a request, while I run a server on the port 80? For the webbrowsers it is not a problem: I can surf on the internet, while the server is running.</p>\n\n<p>The server is:</p>\n\n<pre><code>  net.createServer(function (socket) {\n    socket.name = socket.remoteAddress + \":\" + socket.remotePort;\n    console.log('connection request from: ' + socket.remoteAddress);\n    socket.destroy();\n  }).listen(options.port);\n</code></pre>\n\n<p>And the request:</p>\n\n<pre><code>var xhr = new XMLHttpRequest();\n\nxhr.onreadystatechange = function() {\n    sys.puts(\"State: \" + this.readyState);\n\n    if (this.readyState == 4) {\n        sys.puts(\"Complete.\\nBody length: \" + this.responseText.length);\n        sys.puts(\"Body:\\n\" + this.responseText);\n    }\n};\n\nxhr.open(\"GET\", \"http://mywebsite.com\");\nxhr.send();\n</code></pre>\n",
            "last_activity_date": 1423563818,
            "question_id": 9898372,
            "score": 49,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "nodejs Error: listen EADDRINUSE"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can use the <code>onerror</code> event in JavaScript to act when an image fails to load:</p>\n\n<pre><code>var img = document.getElementById(\"myImg\");\nimg.onerror = function () { \n    this.style.display = \"none\";\n}\n</code></pre>\n\n<p>In jQuery (since you asked):</p>\n\n<pre><code>$(\"#myImg\").error(function () { \n    $(this).hide(); \n});\n</code></pre>\n\n<p>Or for all images:</p>\n\n<pre><code>$(\"img\").error(function () { \n    $(this).hide();\n    // or $(this).css({visibility:\"hidden\"}); \n});\n</code></pre>\n\n<p>You should use <code>visibility: hidden</code> instead of <code>.hide()</code> if hiding the images might change the layout.  Many sites on the web use a default \"no image\" image instead, pointing the <code>src</code> attribute to that image when the specified image location is unavailable.</p>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p>Doing a quick research on  <strong>Andy E</strong>'s answer, its not possible to <code>live()</code> bind <code>error</code>.</p>\n\n<pre><code>// won't work (chrome 5)\n$('img').live('error', function(){\n     $(this).css('visibility', 'hidden');\n});\n</code></pre>\n\n<p>So you have to go like</p>\n\n<pre><code>$('&lt;img/&gt;', {\n  src:    'http://www.notarget.com/fake.jpg',\n  error:  function(e){\n    $(this).css('visibility', 'hidden');\n  }\n}).appendTo(document.body);\n</code></pre>\n\n<p>directly binding the <code>error event handler</code> on creating a new element.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>&lt;img onerror='this.style.display = \"none\"'&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>To hide every image error, just add this JavaScript at the bottom of your page (just before the closing body tag):</p>\n\n<pre><code>(function() {\n    var allimgs = document.images;\n    for (var i = 0; i &lt; allimgs.length; i++) {\n        allimgs[i].onerror = function() {\n            this.style.visibility = \"hidden\"; // Other elements aren't affected. \n        }\n    }\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It may be little late to answer, but here is my attempt.\nWhen I faced the same issue I fixed it by using a div of the size of image &amp; setting background-image to this div. If the image is not found, the div is rendered transparent, so its all done silently without java-script code.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Do you know how to hide the classic <em>\u201cImage not found\u201d</em> icon from a rendered HTML page when an image file is not found?</p>\n\n<p>Any working method using JavaScript/jQuery/CSS?</p>\n",
            "last_activity_date": 1409015248,
            "question_id": 3235913,
            "score": 47,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "image"
            ],
            "title": "How to silently hide &quot;Image not found&quot; icon when src source image is not found"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>Update</strong>: This solution does not seem to work anymore in many browsers. Kaitsu's comment:</p>\n\n<blockquote>\n  <p>This solution of sending false credentials to make browser forget the correct authenticated credentials doesn't work in Chrome (16) and IE (9). Works in Firefox (9).</p>\n</blockquote>\n\n<hr>\n\n<p>Actually you can implement a workaround by sending false credentials to the service. This works in Browsers by sending another (non-existent?) Username without a password. The Browser loses the information about the authenticated credentials.</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <p><a href=\"https://www.example.com/\">https://www.example.com/</a> => Log in\n  with basic auth as \"user1\"  </p>\n  \n  <p>Now open </p>\n  \n  <p><a href=\"https://foobar@www.example.com/\">https://foobar@www.example.com/</a></p>\n  \n  <p>You're Logged out. ;)</p>\n</blockquote>\n\n<p>Regards</p>\n\n<p>P.s.: But please test this with all needed Browsers before you rely on the given information.</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>just finishing an implementation that worked fine to me:\nAt the server I evaluate Session, User Name and password, so I keep track of that information, the login algoritm is as follows:</p>\n\n<p>1.Check if user and password is not empty, else return 401.</p>\n\n<p>2.Check if we have registered the session in our logged-in user list, if not then check if user and password is valid and if so save session id in our list, then return 401.\n  I'll explain this step: if the session id is different one of three things happened:\n    a) The user is opening another window.\n    b) The user session has finished, ie user logged out.\n    c) The session expired due to inactivity.\n  But we want to save the session as long as the user credentials are valid but return a        401 to ask once for password, if we don't save the session then the user could never log in because we don't have the new session id in our list.</p>\n\n<p>3.Check if user credentials are right, if so, save session info and continue serving pages, else return 401. </p>\n\n<p>So, the only thing I have to logout a user is to close the session at the server when the user requests the logout page and the web browser shows again the login dialog.</p>\n\n<p>I'm thinking as I write this that there has to be a step where the program checks if the user is already logged to avoid impersonation, maybe I can save more than one session id per user to allow multiple session, well, I would like your comments about it.</p>\n\n<p>Hope you get the idea, and comment if you see any security flaw ;)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can delete credentials with JavaScript:</p>\n\n<pre><code>    $(\"#logout\").click(function(){\n        try {\n            document.execCommand(\"ClearAuthenticationCache\");\n            window.location.href('/logout.html'); // page with logout message somewhere in not protected directory\n        } catch (exception) {}\n    });\n</code></pre>\n\n<p>This code works only in IE. This is the reason why try/catch block is added there.\nAlso, for the same reason the logout link you should show for IE users only:</p>\n\n<pre><code>    &lt;!--[if IE]&gt;\n        &lt;div id=\"logout\"&gt;[Logout]&lt;/div&gt;\n    &lt;![endif]--&gt;\n</code></pre>\n\n<p>And for other users my suggestion is something like:</p>\n\n<pre><code>    &lt;div id=\"logout2\" onclick=\"alert('Please close your browser window to logout')\"&gt;[Logout]&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can try a hack that is working at the moment with the latest Chrome and Firefox. Create a \"/logout\" page on your server which accepts only a certain credential such as username: false, password: false. Then using this AJAX request below, you can send the user to that page.</p>\n\n<pre><code>  $(\"#logout\").click(function(e){                                              \n    e.preventDefault();                                                        \n    var request = new XMLHttpRequest();                                        \n    request.open(\"get\", \"/logout\", false, \"false\", \"false\");                                                                                                                               \n    request.send();                                                            \n    window.location.replace(\"WHEREVER YOU WANT YOUR LOGGED OUT USER TO GO\");                                              \n  });\n</code></pre>\n\n<p>What happens is that the false username and password is cached from the valid XMLHttpRequest instead of the current user's credentials, and when a user tries to login into any page, it will use the cached fake credentials, failing to authenticate, it will ask the user to enter another one. Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you have control over the server code, you can create a \"logout\" function that replies \"401 Unauthorized\" regardless of the credentials given. This failure forces browsers to remove saved credentials.</p>\n\n<p>I just tested this with Chrome 34, IE 11, Firefox 25 - using Express.js server and HTTP basic authentication.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>HTTP basic authentication credentials are stored until the browser is closed, but is there a way to remove the credentials before the browser is closed?</p>\n\n<p>I read about a <a href=\"http://stackoverflow.com/questions/449788/http-authentication-logout-via-php/449914#449914\">trick with HTTP 401 status code</a>, but it seems to <a href=\"http://stackoverflow.com/questions/449788/http-authentication-logout-via-php/449813#449813\">work not properly</a> (see comment to answer). Maybe the <a href=\"http://trac-hacks.org/wiki/TrueHttpLogoutPatch\">mechanism trac uses is the solution</a>.</p>\n\n<p>Can the credentials be deleted with JavaScript? Or with a combination of JavaScript and the status 401 trick?</p>\n",
            "last_activity_date": 1401468164,
            "question_id": 4163122,
            "score": 46,
            "tags": [
                "javascript",
                "http",
                "basic-authentication",
                "logout"
            ],
            "title": "http basic authentication &quot;log out&quot;"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>There really isn't any such thing as an \"associative array\" in JavaScript. What you've got there is just a plain old object.  They work kind-of like associative arrays, of course, and the keys are available but there's no semantics around the order of keys.</p>\n\n<p>You could turn your object into an array of objects (key/value pairs) and sort that:</p>\n\n<pre><code>function sortObj(object, sortFunc) {\n  var rv = [];\n  for (var k in object) {\n    if (object.hasOwnProperty(k)) rv.push({key: k, value:  object[k]});\n  }\n  rv.sort(function(o1, o2) {\n    return sortFunc(o1.key, o2.key);\n  });\n  return rv;\n}\n</code></pre>\n\n<p>Then you'd call that with a comparator function.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Javascript doesn't have \"associative arrays\" the way you're thinking of them.  Instead, you simply have the ability to set object properties using array-like syntax (as in your example), plus the ability to iterate over an object's properties.</p>\n\n<p>The upshot of this is that there is no guarantee as to the <em>order</em> in which you iterate over the properties, so there is nothing like a sort for them.  Instead, you'll need to convert your object properties into a \"true\" array (which does guarantee order).  Here's a code snippet for converting an object into an array of two-tuples (two-element arrays), sorting it as you describe, then iterating over it:</p>\n\n<pre><code>var tuples = [];\n\nfor (var key in obj) tuples.push([key, obj[key]]);\n\ntuples.sort(function(a, b) {\n    a = a[1];\n    b = b[1];\n\n    return a &lt; b ? -1 : (a &gt; b ? 1 : 0);\n});\n\nfor (var i = 0; i &lt; tuples.length; i++) {\n    var key = tuples[i][0];\n    var value = tuples[i][1];\n\n    // do something with key and value\n}\n</code></pre>\n\n<p>You may find it more natural to wrap this in a function which takes a callback:</p>\n\n<pre><code>function bySortedValue(obj, callback, context) {\n    var tuples = [];\n\n    for (var key in obj) tuples.push([key, obj[key]]);\n\n    tuples.sort(function(a, b) { return a[1] &lt; b[1] ? 1 : a[1] &gt; b[1] ? -1 : 0 });\n\n    var length = tuples.length;\n    while (length--) callback.call(context, tuples[length][0], tuples[length][1]);\n}\n\nbySortedValue({\n    foo: 1,\n    bar: 7,\n    baz: 3\n}, function(key, value) {\n    alert(key + \": \" + value);\n});\n\nbySortedValue(someObj, this.method, this);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>i use $.each of jquery but you can make it with a for loop, an improvement is this:</p>\n\n<pre><code>        //.ArraySort(array)\n        /* Sort an array\n         */\n        ArraySort = function(array, sortFunc){\n              var tmp = [];\n              var aSorted=[];\n              var oSorted={};\n\n              for (var k in array) {\n                if (array.hasOwnProperty(k)) \n                    tmp.push({key: k, value:  array[k]});\n              }\n\n              tmp.sort(function(o1, o2) {\n                    return sortFunc(o1.value, o2.value);\n              });                     \n\n              if(Object.prototype.toString.call(array) === '[object Array]'){\n                  $.each(tmp, function(index, value){\n                      aSorted.push(value.value);\n                  });\n                  return aSorted;                     \n              }\n\n              if(Object.prototype.toString.call(array) === '[object Object]'){\n                  $.each(tmp, function(index, value){\n                      oSorted[value.key]=value.value;\n                  });                     \n                  return oSorted;\n              }               \n     };\n</code></pre>\n\n<p>So now you can do</p>\n\n<pre><code>    console.log(\"ArraySort\");\n    var arr1 = [4,3,6,1,2,8,5,9,9];\n    var arr2 = {'a':4, 'b':3, 'c':6, 'd':1, 'e':2, 'f':8, 'g':5, 'h':9};\n    var arr3 = {a: 'green', b: 'brown', c: 'blue', d: 'red'};\n    var result1 = ArraySort(arr1, function(a,b){return a-b});\n    var result2 = ArraySort(arr2, function(a,b){return a-b});\n    var result3 = ArraySort(arr3, function(a,b){return a&gt;b});\n    console.log(result1);\n    console.log(result2);       \n    console.log(result3);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Instead of correcting you on the semantics of an 'associative array', i think this is what you want:</p>\n\n<pre><code>function getSortedKeys(obj) {\n    var keys = []; for(var key in obj) keys.push(key);\n    return keys.sort(function(a,b){return obj[a]-obj[b]});\n}\n</code></pre>\n\n<p>you dump in an object (like yours) and get an array of the keys - eh properties - back, sorted by the (numerical) value of the, eh, values of the, eh, object.</p>\n\n<p>this only works if your values are numerical. tweek the little function(a,b) in there to change the sorting mechanism to work for string values (for example). left as an exercise for the reader.</p>\n\n<p>$2c,\n*-pike</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Continued discussion &amp; other solutions covered at <a href=\"http://stackoverflow.com/questions/12788051/\">How to sort an (associative) array by value?</a> with the best solution (for my case) being by <a href=\"http://stackoverflow.com/users/947970/saml\">saml</a> (quoted below).</p>\n\n<p>Arrays can only have numeric indexes.  You'd need to rewrite this as either an Object, or an Array of Objects.</p>\n\n<pre><code>var status = new Array();\nstatus.push({name: 'BOB', val: 10});\nstatus.push({name: 'TOM', val: 3});\nstatus.push({name: 'ROB', val: 22});\nstatus.push({name: 'JON', val: 7});\n</code></pre>\n\n<p>If you like the <code>status.push</code> method, you can sort it with:</p>\n\n<pre><code>status.sort(function(a,b) {\n    return a.val - b.val;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Here is a variation of ben blank's answer, if you don't like tuples.  </p>\n\n<p>This saves you a few characters.</p>\n\n<pre><code>var keys = [];\nfor (var key in sortme) {\n  keys.push(key);\n}\n\nkeys.sort(function(k0, k1) {\n  var a = sortme[k0];\n  var b = sortme[k1];\n  return a &lt; b ? -1 : (a &gt; b ? 1 : 0);\n});\n\nfor (var i = 0; i &lt; keys.length; ++i) {\n  var key = keys[i];\n  var value = sortme[key];\n  // Do something with key and value.\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>No unnecessary complication required...</p>\n\n<pre><code>function sortMapByValue(map)\n{\n    var tupleArray = [];\n    for (var key in map) tupleArray.push([key, map[key]]);\n    tupleArray.sort(function (a, b) { return a[1] - b[1] });\n    return tupleArray;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have the associative array:</p>\n\n<pre><code>array[\"sub2\"] = 1;\narray[\"sub0\"] = -1;\narray[\"sub1\"] = 0;\narray[\"sub3\"] = 1;\narray[\"sub4\"] = 0;\n</code></pre>\n\n<p>What is the most elegant way to sort (descending) by its values where the result would be an array with the respective indices in this order:</p>\n\n<pre><code>sub2, sub3, sub1, sub4, sub0?\n</code></pre>\n",
            "last_activity_date": 1421924697,
            "question_id": 5199901,
            "score": 38,
            "tags": [
                "javascript",
                "arrays",
                "sorting",
                "associative"
            ],
            "title": "How to sort an associative array by its values in Javascript?"
        },
        {
            "answer_count": 20,
            "answers": [
                {
                    "body": "<p>you can do multiple things like</p>\n\n<pre><code>overflow:hidden\n</code></pre>\n\n<p>this cuts the extra line</p>\n\n<p><code>overflow:auto</code> // this shows the scroll bar</p>\n\n<p>see this</p>\n\n<p><a href=\"http://www.w3schools.com/Css/pr_pos_overflow.asp\" rel=\"nofollow\">http://www.w3schools.com/Css/pr_pos_overflow.asp</a></p>\n\n<p>try to do this\n//check the length of the text</p>\n\n<pre><code>if($('#idfortext').length&gt;sometthing)\n{\nvar fontsize=10;\n}\n$('#yourid').css('font-size',fontsize)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Im not sure there is any accurate way to measure text's width in pixels (which is what you're really looking for at the root of your problem), as each browser may display the fonts differently. You might want to try using this CSS code, in addition to doing some \"Fuzzy\" resizing based on the number of letters in the sentence. You can try using a fixed-width font (or style) to display the text so that each character takes up the same amount of space. This way, you can make a best guess, and the CSS will at least give you a nice \"...\" before cropping the text, if needed.</p>\n\n<pre><code>.truncate \n{ \n    overflow: hidden; \n    white-space: nowrap; \n    text-overflow: ellipsis; \n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's not possible to do. I've thought about this quite a bit and researched it. The problem is that there are so many variables. Look at the same site on safari/firefox/IE. See how the font sizes look slightly different? Now go look at it on Linux/mac/iphone........</p>\n\n<p>If you do find out a solution please post it here!</p>\n\n<p>Solution found I see.... that's great!!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is somewhat of a hack, but will do what you want.</p>\n\n<pre><code>&lt;div id=\"hidden-resizer\" style=\"visibility: hidden\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Place this at the bottom of your page, where it will not be moving other elements on the page.</p>\n\n<p>Then do this:</p>\n\n<pre><code>var size;\nvar desired_width = 50;\nvar resizer = $(\"#hidden-resizer\");\n\nresizer.html(\"This is the text I want to resize.\");\n\nwhile(resizer.width() &gt; desired_width) {\n  size = parseInt(resizer.css(\"font-size\"), 10);\n  resizer.css(\"font-size\", size - 1);\n}\n\n$(\"#target-location\").css(\"font-size\", size).html(resizer.html());\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<p>I don't know of an exact way, but here's an approximation:</p>\n\n<pre><code>var factor = 1/3;  // approximate width-to-height ratio\nvar div = $('#mydiv');\ndiv.css('font-size', div.width() / (div.text().length * factor) + 'px');\n</code></pre>\n\n<p>You will need to adjust <code>factor</code> based on the font you are using. 1/3 seems to work okay for Times New Roman.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Inside your div, have the text in a span that has no padding. Then the span's width will be the length of the text.<br>\nUntested code for finding the correct font-size to use:</p>\n\n<pre><code>var objSpan = $('.spanThatHoldsText');  \nvar intDivWidth = $('.divThatHasAFixedWidth').width();  \nvar intResultSize;  \n\nfor (var intFontSize = 1; intFontSize &lt; 100; intFontSize++)  \n\n  objSpan.css('font-size', intFontSize);  \n\n  if (objSpan.width() &gt; intDivWidth) {  \n    intResultSize = intFontSize - 1;  \n    break;  \n  }  \n\n}\n\nobjSpan.css('font-size', intResultSize);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>HTML:</p>\n\n<pre><code>&lt;div class=\"box\" style=\"width:700px\"&gt;This is a sentence&lt;/div&gt;\n&lt;div class=\"box\" style=\"width:600px\"&gt;This is a sentence&lt;/div&gt;\n&lt;div class=\"box\" style=\"width:500px\"&gt;This is a sentence&lt;/div&gt;\n&lt;div class=\"box\" style=\"width:400px\"&gt;This is a sentence&lt;/div&gt;\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>$( '.box' ).each(function ( i, box ) {\n\n    var width = $( box ).width(),\n        html = '&lt;span style=\"white-space:nowrap\"&gt;&lt;/span&gt;',\n        line = $( box ).wrapInner( html ).children()[ 0 ],\n        n = 100;\n\n    $( box ).css( 'font-size', n );\n\n    while ( $( line ).width() &gt; width ) {\n        $( box ).css( 'font-size', --n );\n    }\n\n    $( box ).text( $( line ).text() );\n\n});\n</code></pre>\n\n<p><strong>Live demo:</strong> <a href=\"http://jsfiddle.net/e8B9j/2/show/\">http://jsfiddle.net/e8B9j/2/show/</a></p>\n\n<p><em>Remove \"/show/\" from the URL to view the code.</em></p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p><strike><a href=\"http://vidasp.net/tinydemos/adjust-font-size.html\" rel=\"nofollow\">Check this example!</a>\nIt uses jquery and works fine.</strike></p>\n\n<p>Edit: <strike><a href=\"http://plugins.jquery.com/project/TextFill\" rel=\"nofollow\">Even better one http://plugins.jquery.com/project/TextFill</a></strike></p>\n\n<p><a href=\"https://github.com/jquery-textfill/jquery-textfill\" rel=\"nofollow\">https://github.com/jquery-textfill/jquery-textfill</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I couldn't figure out how to add this to sworoc's post but i thought i would share anyway:\nLonesomeday's solution gets messed up if you are using any sort of AJAX navigation. I modified it slightly to:</p>\n\n<pre><code>if ($('#hidden-resizer').length == 0){ \n    $('&lt;div /&gt;', {id: 'hidden-resizer'}).hide().appendTo(document.body); \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I worked off a few posts here and made a jQuery plugin out of it. I found that starting from the bottom and going up wasn't very performant, so I make the assumption that the current font-size is close, and worked from there.</p>\n\n<pre><code>  $.fn.fitTextToWidth = function(desiredWidth) {\n    // In this method, we want to start at the current width and grow from there, assuming that we are close to the desired size already.\n    var $el = $(this);\n    var resizer = $('&lt;'+$el.get(0).tagName+' /&gt;').css({'vsibility':'hidden','position':'absolute','left':'-9999px','display':'inline'}).html($el.html());\n    resizer.appendTo(document.body);\n\n    var size = parseInt($el.css('font-size'));\n    resizer.css('font-size',size+'px');\n\n    var growing = desiredWidth &gt; resizer.width() ? true : false;\n    var adder = growing ? 1 : -1;\n    do {\n        size += adder;\n        resizer.css('font-size',size+'px');\n    } while(((growing &amp;&amp; resizer.width()&lt;desiredWidth) || (!growing &amp;&amp; resizer.width()&gt;desiredWidth)) &amp;&amp; size&gt;10 &amp;&amp; size&lt;100);\n    if (growing)\n        size -= 2; //we never want to go over\n    resizer.remove();\n\n    $el.css('font-size',size+'px'); \n  }\n\n  // Example use:\n  $('#main h1').fitTextToWidth(350);\n</code></pre>\n\n<p>The only gotcha with this is that it assumes the CSS for the element is global and only applied to the element type.  In other words, it creates a tag of the same name in  and assumes it will have the same CSS attributes as the element we want to change.  If this isn't true for you, just modify the line where <code>resizer</code> gets created.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is a coffeescript solution I came up with. I clone the element that is needing to have it's font resized then remove that at the end of the calculation. To increase performance I have some code that only executes the calculation after resizing has stopped for 200ms.</p>\n\n<p>Tag elements with class <strong>autofont</strong> for this to be done unobtrusively. </p>\n\n<pre><code># \n# Automagically resize fonts to fit the width of the \n# container they are in as much as possible. \n#\nfixfonts = -&gt;\n\n  scaler = 1.2\n\n  for element in $('.autofont')\n\n    size =  1\n    element = $(element)\n    desired_width = $(element).width()\n\n    resizer = $(element.clone())\n    resizer.css\n      'font-size': \"#{size}em\"\n      'max-width': desired_width\n      'display': 'inline'\n      'width': 'auto'\n    resizer.insertAfter(element)\n\n    while resizer.width() &lt; desired_width\n      size = size * scaler\n      resizer.css\n        'font-size':  \"#{size}em\"\n\n    $(element).css\n        'font-size': \"#{size / scaler }em\"\n\n    resizer.remove()\n\n$(document).ready =&gt;\n  fixfonts()\n\n  timeout = 0\n  doresize = -&gt;\n    timeout--\n    if timeout == 0\n      fixfonts()\n\n  $(window).resize -&gt;\n    timeout++\n    window.setTimeout doresize, 200\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I had a similar issue, which made me write my own plugin for this. One solution is to use the shrink-to-fit-approach, as described above. \nHowever if you have to fit multiple items or are concerned with performance, e.g., on window resize, have a look at <a href=\"https://github.com/chunksnbits/jquery-quickfit\" rel=\"nofollow\">jquery-quickfit</a>.</p>\n\n<p>It meassures and calculates a size invariant meassure for each letter of the text to fit and uses this to calculate the next best font-size which fits the text into the container.</p>\n\n<p>The calculations are cached, which makes it very fast (there is virtually no performance hit from the 2nd resize on forward) when dealing with multiple texts or having to fit a text multiple times, like e.g., on window resize.</p>\n\n<p><a href=\"http://www.four-downs.com/livedrafts/13533\" rel=\"nofollow\">Production example, fitting 14x16x2 texts</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have written a jQuery plugin to do this:</p>\n\n<p><a href=\"http://michikono.github.com/boxfit\">http://michikono.github.com/boxfit</a></p>\n\n<p>The plugin will scale the text both horizontally and vertically to the maximum available size inside the box and then center it.</p>\n\n<p>The only thing you need to do is define a div with text inside it:</p>\n\n<pre><code>&lt;div id=\"scale\"&gt;some text&lt;/div&gt;\n</code></pre>\n\n<p>And then call:</p>\n\n<pre><code>$('#scale').boxfit()\n</code></pre>\n\n<p>The method will accept some arguments to disable/enable text wrapping and centered alignment.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Modified version of @sworoc with the support of the target class</p>\n\n<pre><code>function resizeText(text, size, target) {\n\n    var fontSize = 0;\n    var resizer = $('&lt;span&gt;');\n\n    resizer.html(text).hide();\n    resizer.attr('class', target.attr('class'));\n    $('body').append(resizer);\n\n    while(resizer.width() &lt; size) {\n        fontSize++\n        resizer.css(\"font-size\", fontSize);\n    }\n\n    target.css('font-size', fontSize).html(text);\n    resizer.remove();\n}\n</code></pre>\n\n<h2>Usage</h2>\n\n<pre><code>resizeText(\"@arunoda\", 350, $('#username'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Most of the other answers use a loop to reduce the font-size until it fits on the div, this is VERY slow since the page needs to re-render the element each time the font changes size. I eventually had to write my own algorithm to make it perform in a way that allowed me to update its contents periodically without freezing the user browser. I added some other functionality (rotating text, adding padding) and packaged it as a jQuery plugin, you can get it at:</p>\n\n<p><a href=\"https://github.com/DanielHoffmann/jquery-bigtext\" rel=\"nofollow\">https://github.com/DanielHoffmann/jquery-bigtext</a></p>\n\n<p>simply call</p>\n\n<pre><code>$(\"#text\").bigText();\n</code></pre>\n\n<p>and it will fit nicely on your container.</p>\n\n<p>See it in action here:</p>\n\n<p><a href=\"https://rawgit.com/DanielHoffmann/jquery-bigtext/master/examples/examples.html\" rel=\"nofollow\">https://rawgit.com/DanielHoffmann/jquery-bigtext/master/examples/examples.html</a></p>\n\n<p>For now it has some limitations, the div must have a fixed height and width and it does not support wrapping text into multiple lines.</p>\n\n<p>Edit2: I have now fixed those problems and limitations and added more options. You can set maximum font-size and you can also choose to limit the font-size using either width, height or both (default is both). I will work into accepting a max-width and max-height values in the wrapper element.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For new Browsers you can use Inline-SVG. This can be scaled like an image via CSS .. !\n(<code>width: 100%;</code>)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>plugin to fit to the width and height of a container</p>\n\n<p><a href=\"http://blissitec.github.io/scaletextjs/\" rel=\"nofollow\">http://blissitec.github.io/scaletextjs/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's my modification to @teambob's suggestion (in <a href=\"http://stackoverflow.com/a/4166237/134536\">above comments</a>) that takes also the height of the container into account: </p>\n\n<pre><code>&lt;div class=\"box\" style=\"width:700px; height:200px\"&gt;This is a sentence&lt;/div&gt;\n&lt;div class=\"box\" style=\"width:600px; height:100px\"&gt;This is a sentence&lt;/div&gt;\n&lt;div class=\"box\" style=\"width:500px; height:50px\"&gt;This is a sentence&lt;/div&gt;\n&lt;div class=\"box\" style=\"width:400px; height:20px\"&gt;This is a sentence&lt;/div&gt;\n</code></pre>\n\n<p>And then..</p>\n\n<pre><code>$('.box').each(function(i, box) {\n\n    var width = $(box).width(),\n        height = $(box).height(),\n        html = '&lt;span style=\"white-space:nowrap\"&gt;',\n        line = $(box).wrapInner(html).children()[0],\n        maxSizePX = 2000;\n\n    $(box).css('font-size', maxSizePX);\n    var widthFontSize = Math.floor(width/$(line).width()*maxSizePX),\n        heightFontSize = Math.floor(height/$(line).height()*maxSizePX),\n        maximalFontSize = Math.min(widthFontSize, heightFontSize, maxSizePX);\n\n    $(box).css('font-size', maximalFontSize);\n    $(box).text($(line).text());\n\n});\n</code></pre>\n\n<p>See <a href=\"http://jsfiddle.net/Fu3Pt/\" rel=\"nofollow\">Fiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is my solution: I measure the text in a new div within the provided div, so that the styling should be inherited. Then I insert the text into the div with a span to set the font-size. It will max out to the default font size but will shrink to fit.</p>\n\n<p>It does not loop: it only draws the text once in a throw-away div before drawing directly to the supplied div. See @Hoffmann answer - I just did not like an entire 'plugin' to answer the question.</p>\n\n<p>requires jquery.</p>\n\n<pre><code>var txt = txt || {}\ntxt.pad_factor = 1.1;\ntxt.insertText_shrinkToFit = function(div,text)\n{\n  var d = txt.cache || $('&lt;div&gt;&lt;/div&gt;');\n  txt.cache = d;\n\n  d.css('white-space','nowrap');\n  d.css('position','absolute');\n  d.css('top','-10000px');\n  d.css('font-size','1000px');\n\n  var p = $(div);\n  var max_w = parseInt(p.css('max-width')) || p.width();\n  var max_h = parseInt(p.css('font-size'));\n\n  p.append(d);\n  d.html(text);\n  var w = d.width() * txt.pad_factor; \n  d.remove();\n\n  var h = Math.floor(max_w*1000/w);\n  var s = ( max_h &lt; h ? max_h : h ) + \"px\";\n\n  p.html('&lt;SPAN style=\"font-size:' + s + '\"&gt;' + text + '&lt;/SPAN&gt;');\n}\n</code></pre>\n\n<p>For example:</p>\n\n<pre><code>&lt;html&gt;&lt;head&gt;&lt;script src=http://code.jquery.com/jquery-latest.min.js&gt;&lt;/script&gt;\n&lt;script&gt;/*insert code, from above, here.*/&lt;/script&gt;&lt;/head&gt;&lt;body&gt;\n\n&lt;div id=mysmalldiv style=\"max-width:300px;font-size:50px\"&gt;&lt;/div&gt;\n&lt;script&gt;\n  txt.insertText_shrinkToFit(\"#mysmalldiv\",\"My super long text for this div.\");\n&lt;/script&gt;\n\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>For testing: this is how I found that I needed the 1.1 pad_factor; which you may tune to your needs.</p>\n\n<pre><code>&lt;div id=mytestdiv style=\"max-width:300px;font-size:50px\"&gt;&lt;/div&gt;\n&lt;script&gt;\n  var t = \"my text \";\n  var i = 0;\n  var f = function() {\n    t += i + \" \";\n    txt.insertText_shrinkToFit(\"#mytestdiv\",t);\n    i++;\n    if(i &lt; 100) \n      setTimeout(f,1000);\n  }\n  f();\n&lt;/script&gt;\n</code></pre>\n\n<p>Note: this is assuming px font-size. I have not tested with em or pt.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a great way to do this for single line texts, like headers and such, in pure CSS:</p>\n\n<pre><code>h1{\n    font-size: 4.5vw;\n    margin: 0 0 0 0;\n    line-height: 1em;\n    height: 1em;\n}\n\nh1:after{\n    content:\"\";\n    display: inline-block;\n    width: 100%;\n}\n</code></pre>\n\n<p>Make sure your font-size stays small enough to keep the header 1 line. Using 'vw' (viewport width) instead of 'px' makes it very easy to do this and scale at the same time. viewport width has the tendency to get nasty when you make your browser window very big, many sites use this to keep the site under a certain width on really wide screens:</p>\n\n<pre><code>body{\n   max-width: 820px;\n   margin: 0 auto;\n}\n</code></pre>\n\n<p>To make sure your font is not based on how big the viewport window is once the rest of your site stops scaling use this:</p>\n\n<pre><code>@media(min-width:820px){\n   h1{\n      font-size: 30px; \n   }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In JavaScript/jQuery, how can I scale a varying-length line of text inside a fixed-width Div so that the one line always fits inside the Div (as one line)?</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1421778195,
            "question_id": 4165836,
            "score": 35,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "text"
            ],
            "title": "JavaScript Scale Text to Fit in Fixed Div"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<h1>The bottom line is:</h1>\n\n<ul>\n<li><strong>You <em>CANNOT</em> inject a service into the provider configuration section</strong>.</li>\n<li><strong>You <em>CAN</em> inject a service into the section which initializes the provider's service</strong>.</li>\n</ul>\n\n<h1>Details:</h1>\n\n<p>Angular framework has a 2 phase initialization process:</p>\n\n<h3>PHASE 1: Config</h3>\n\n<p>During the <code>config</code> phase all of the providers are initialized and all of the <code>config</code> sections are executed. The <code>config</code> sections may contain code which configures the provider objects and therefore they can be injected with provider objects.\nHowever, since the providers are the factories for the service objects and at this stage the providers are not fully initialized/configured -> <strong>you cannot ask the provider to create a service for you at this stage -> at the configuration stage you cannot use/inject services</strong>.\nWhen this phase is completed all of the providers are ready (no more provider configuration can be done after the configuration phase is completed).</p>\n\n<h3>PHASE 2: Run</h3>\n\n<p>During <code>run</code> phase all the <code>run</code> sections are executed. At this stage <strong>the providers are ready and can create services -> during <code>run</code> phase you can use/inject services</strong>. </p>\n\n<h1>Examples:</h1>\n\n<h3>1. Injecting the <code>$http</code> service to the provider initialization function <em>WILL NOT</em> work</h3>\n\n<pre><code>angular.module('myModule').provider('myProvider', function($http) {\n    // SECTION 1: code to initialize/configure the PROVIDER goes here (executed during `config` phase)\n    ...\n\n    this.$get = function() {\n        // code to initialize/configure the SERVICE goes here (executed during `run` stage)\n\n        return myService;\n    };\n});\n</code></pre>\n\n<p>Since we are trying to inject the <code>$http</code> service into a function which is executed during the <code>config</code> phase we will get an error:</p>\n\n<pre><code>Uncaught Error: Unknown provider: $http from services \n</code></pre>\n\n<p>What this error is actually saying is that the <code>$httpProvider</code> which is used to create the <code>$http</code> service is not ready yet (since we are still in the <code>config</code> phase).</p>\n\n<h3>2. Injecting the <code>$http</code> service to the service initialization function <em>WILL</em> work:</h3>\n\n<pre class=\"lang-js prettyprint-override\"><code>angular.module('myModule').provider('myProvider', function() {\n    // SECTION 1: code to initialize/configure the PROVIDER goes here (executed during `config` phase)\n    ...\n\n    this.$get = function($http) {\n        // code to initialize/configure the SERVICE goes here (executed during `run` stage)\n\n        return myService;\n    };\n});\n</code></pre>\n\n<p>Since we are now injecting the service into the service initialization function, which is executed during <code>run</code> phase this code will work.</p>\n",
                    "is_accepted": true,
                    "score": 79
                },
                {
                    "body": "<p>This might give you a little leverage:</p>\n\n<pre><code>var initInjector = angular.injector(['ng']);\nvar $http = initInjector.get('$http');\n</code></pre>\n\n<p>But be careful, the success/error callbacks my keep you in a race-condition between app start and the server response.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>The main question - is it possible? I tried with no luck..</p>\n\n<p><strong>main app.js</strong></p>\n\n<pre><code>...\nvar app = angular.module('myApp', ['services']);\napp.config(['customProvider', function (customProvider) {\n\n}]);\n...\n</code></pre>\n\n<p><strong>provider itself</strong></p>\n\n<pre><code>var services = angular.module('services', []);\nservices.provider('custom', function ($http) {\n});\n</code></pre>\n\n<p>And I've got such error:</p>\n\n<pre><code>Uncaught Error: Unknown provider: $http from services \n</code></pre>\n\n<p>Any ideas?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1391458602,
            "question_id": 17497006,
            "score": 32,
            "tags": [
                "javascript",
                "angularjs",
                "angular-services"
            ],
            "title": "use $http inside custom provider in app config, angular.js"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Both terms are defined in the ECMAScript specfication:</p>\n\n<blockquote>\n  <h1>native object</h1>\n  \n  <p>object in an ECMAScript implementation whose semantics are fully\n  defined by this specification rather than by the host environment.</p>\n  \n  <p>NOTE Standard native objects are defined in this specification. Some\n  native objects are built-in; others may be constructed during the\n  course of execution of an ECMAScript program.</p>\n</blockquote>\n\n<p>Source: <a href=\"http://es5.github.com/#x4.3.6\">http://es5.github.com/#x4.3.6</a></p>\n\n<blockquote>\n  <h1>host object</h1>\n  \n  <p>object supplied by the host environment to complete the\n  execution environment of ECMAScript.</p>\n  \n  <p>NOTE Any object that is not native is a host object.</p>\n</blockquote>\n\n<p>Source: <a href=\"http://es5.github.com/#x4.3.8\">http://es5.github.com/#x4.3.8</a></p>\n\n<hr>\n\n<p>A few examples:</p>\n\n<p>Native objects: <code>Object</code> (constructor), <code>Date</code>, <code>Math</code>, <code>parseInt</code>, <code>eval</code>, string methods like <code>indexOf</code> and <code>replace</code>, array methods, ...</p>\n\n<p>Host objects (assuming browser environment): <code>window</code>, <code>document</code>, <code>location</code>, <code>history</code>, <code>XMLHttpRequest</code>, <code>setTimeout</code>, <code>getElementsByTagName</code>, <code>querySelectorAll</code>, ...</p>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>Here's my understanding of the spec.</p>\n\n<p>This:</p>\n\n<pre><code>var bird = new Bird();\n</code></pre>\n\n<p>...results in a native Object that simply happened to be created using the <code>new</code> operator.</p>\n\n<p>Native objects have an internal [[Class]] property of one of the following: </p>\n\n<blockquote>\n  <p><em>\"Arguments\", \"Array\", \"Boolean\", \"Date\", \"Error\", \"Function\", \"JSON\", \"Math\", \"Number\", \"Object\", \"RegExp\", and \"String\"</em>.</p>\n</blockquote>\n\n<p>For your <code>bird1</code> it will be:</p>\n\n<blockquote>\n  <p><em>\"Object\"</em></p>\n</blockquote>\n\n<p>Just like if you create a function:</p>\n\n<pre><code>function my_func() {\n    // ...\n}\n</code></pre>\n\n<p>...<code>my_func</code> isn't defined in ECMAScript, but it is still a native object with the internal [[Class]]:</p>\n\n<blockquote>\n  <p><em>\"Function\"</em></p>\n</blockquote>\n\n<p>A host object is an object provided by the environment in order to serve a specific purpose to that environment not defined in by the specification.</p>\n\n<p>For example:</p>\n\n<pre><code>var divs = document.getElementsByTagName('div')\n</code></pre>\n\n<p>The object referenced by <code>divs</code> is a <em>NodeList</em>, which is integrated into the environment in such a manner that it feels like a regular JavaScript object, yet it isn't defined anywhere by the specification.</p>\n\n<p>Its internal [[Class]] property is:</p>\n\n<blockquote>\n  <p><em>\"NodeList\"</em></p>\n</blockquote>\n\n<p>This provides implementation designers some flexibility in suiting the implementation to the specific need of the environment.</p>\n\n<p>There are requirements of <em>host objects</em> that are defined throughout the spec.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Native objects are objects that adhere to the specs, i.e. \"standard objects\".</p>\n\n<p>Host objects are objects that the browser (or other runtime environment like Node) provides.</p>\n\n<p>Most host objects are native objects, and whenever you instantiate something using <code>new</code>, you can be 99.99% sure that it is a native object, unless you mess around with weird host objects.</p>\n\n<p>This notion has been introduced due to the presence of very bizarre objects in IE<sub>(and other old browsers?)</sub>. For example:</p>\n\n<pre><code>typeof document.all == \"undefined\"; // true\ndocument.all.myElementId; // object\n</code></pre>\n\n<p>When seeing this, everyone would agree that <code>document.all</code> is clearly \"non-standard\", and thus a <em>non-native</em> host object.</p>\n\n<p>So why not call native objects <em>standard objects</em> in the first place? Simple: after all, the <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\" rel=\"nofollow\">Standard(!) document</a> talks about non-native objects too, and calling them <em>non-standard</em> would lead to a paradox. </p>\n\n<p>Again:</p>\n\n<ul>\n<li>native == \"standard\"</li>\n<li>host == provided by the browser or Node or \u2026</li>\n<li>most host objects are native, and all non-host objects are native too</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This may be overkill, but for simplicity a native object is one that exist and is usable in any environment that implements an ECMAScript compliant engine.  This is usually (but not always) a browser.  </p>\n\n<p>So, your Internet Explorer or your Google Chrome, doesn't make the String object available to you, for example.  The reason you can use the String object is because it is \"native\" (built-in) to the JavaScript language itself.</p>\n\n<p>However, if you'd like to create a pop-up window, you'll need to use the window object.  The window object is provided by the browser software itself, so it is not native to JavaScript, but it is part of the \"Browser Object Model\" or the BOM.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It is more clear if we distinguish between three kinds of objects:</p>\n\n<p><strong>Built-in objects</strong>: <code>String</code>, <code>Math</code>, <code>RegExp</code>, <code>Object</code>, <code>Function</code> etc. - core predefined objects always available in JavaScript. Defined in the ECMAScript spec.</p>\n\n<p><strong>Host objects</strong>: objects like <code>window</code>, <code>XmlHttpRequest</code>, DOM nodes and so on, which is provided by the browser environment. They are distinct from the built-in objects because not all environment will have the same host objects. If JavaScript runs outside of the browser, for example as server side scripting language like in Node.js, different host objects will be available.</p>\n\n<p><strong>User objects</strong>: objects defined in JavaScript code. So 'Bird' in your example would be a user object.</p>\n\n<p>The JavaScript spec groups built-in objects and user objects together as <em>native objects</em>. This is an unorthodox use of the term \"native\", since user objects are obviously implemented in JavaScript while the built-ins is most likely implemented in a different language under the hood, just as the host objects would be. But from the perspective of the JavaScript spec, both builtins and user objects are native to JavaScript because they are defined in the JavaScript spec, while host objects are not.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Does the latter simply refer to nonprimitive function objects that were created by a custom constructor (e.g., var bird1 = new Bird();)?</p>\n",
            "last_activity_date": 1414676225,
            "question_id": 7614317,
            "score": 28,
            "tags": [
                "javascript"
            ],
            "title": "What is the difference between native objects and host objects?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Here you go:</p>\n\n<pre><code>var imgs = document.querySelectorAll('.pic');\n\nfor ( var i = 0; i &lt; imgs.length; i++ ) {\n    imgs[i].onclick = toggleAnimation;  \n    imgs[i].style.webkitAnimationPlayState = 'running';  \n}\n\nfunction toggleAnimation() {\n    var style;\n    for ( var i = 0; i &lt; imgs.length; i++ ) {\n        style = imgs[i].style;\n        if ( style.webkitAnimationPlayState === 'running' ) {\n            style.webkitAnimationPlayState = 'paused';\n            document.body.className = 'paused';\n        } else {\n            style.webkitAnimationPlayState = 'running';\n            document.body.className = '';       \n        }\n    }      \n}\n</code></pre>\n\n<p><strong>Live demo:</strong> <a href=\"http://jsfiddle.net/simevidas/TnGhH/2/\">http://jsfiddle.net/simevidas/TnGhH/2/</a></p>\n\n<hr>\n\n<p>jQuery solution (= shorter and more readable):</p>\n\n<pre><code>var imgs = $('.pic'),\n    playState = '-webkit-animation-play-state';\n\nimgs.click(function() {    \n    imgs.css(playState, function(i, v) {\n        return v === 'paused' ? 'running' : 'paused';        \n    });      \n    $('body').toggleClass('paused', $(this).css(playState) === 'paused');    \n});\n</code></pre>\n\n<p><strong>Live demo:</strong> <a href=\"http://jsfiddle.net/simevidas/TnGhH/3/\">http://jsfiddle.net/simevidas/TnGhH/3/</a></p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>I find it easier to do it with a css class. With it, you can use prefixes for every browser.</p>\n\n<pre><code>.paused{\n    -webkit-animation-play-state:paused;\n    -moz-animation-play-state:paused;\n    -o-animation-play-state:paused; \n    animation-play-state:paused;\n}\n</code></pre>\n\n<p>Then you only have to add or remove this class to your animated element yo pause / resume the animation.</p>\n",
                    "is_accepted": false,
                    "score": 69
                },
                {
                    "body": "<p>I havent tested it but perhaps something like this?</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;&lt;/title&gt;\n&lt;style type=\"text/css\"&gt;\n.pic {   position: absolute;opacity: 0;  }\n.pic1 {  -webkit-animation: pic1 4s infinite linear;   }\n.pic2 {  -webkit-animation: pic2 4s infinite linear;   }\n@-webkit-keyframes pic1 {  0%   {opacity: 0;}\n                           5%   {opacity: 1;}\n                           45%  {opacity: 1;}\n                           50%  {opacity: 0;}\n                           100% {opacity: 0;}    }\n@-webkit-keyframes pic2 {  0%   {opacity: 0;}\n                           50%  {opacity: 0;}\n                           55%  {opacity: 1;}\n                           95%  {opacity: 1;}\n                           100% {opacity: 0;}    }\n&lt;/style&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction doStuff(){\n    var pic1 = document.getElementById(\"pic1\");\n    var pic2 = document.getElementById(\"pic2\");\n\n    pic1.className=\"pic paused\";\n    pic2.className=\"pic paused\";\n\n    pic1.onclick = function(){\n       pic1.className=\"pic pic1\";\n       pic2.className=\"pic pic2\";\n    }\n    pic2.onclick = function(){\n       pic1.className=\"pic pic1\";\n       pic2.className=\"pic pic2\";\n    }\n}\n&lt;/script&gt;\n&lt;/head&gt;  \n&lt;body&gt;\n    &lt;img id=\"pic1\" class=\"pic pic1\" src=\"photo1.jpg\" /&gt;\n    &lt;img id=\"pic2\" class=\"pic pic2\" src=\"photo2.jpg\" onclick=\"doStuff()\" /&gt;\n&lt;/body&gt;                                                                 \n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is to extend the answer given by Luis Hijarrubia</p>\n\n<pre><code>    .pause {\n        -webkit-animation-play-state: paused !important; \n        -moz-animation-play-state: paused !important; \n        -o-animation-play-state: paused !important;\n        animation-play-state: paused !important;\n   }\n</code></pre>\n\n<p>In my page I was triggering the change of class from the parent element. All I wanted to do was rotate the image inside. But it seems that because I was not using the hover, the adding of the paused class made no difference to the animation state. </p>\n\n<p>The use of !important ensured that these values were overwritten by the new added CSS values.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've tried to google and look from this forum a solution for my problem but no luck so far. I would like to pause my CSS3 animation (image slide show) by clicking a picture and also resume to the same animation by clicking a picture. </p>\n\n<p>I know how to pause the slide show and I was also able to resume it once, but then it stops working if try to pause and resume more than one time. Here is how my code looks like:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;&lt;/title&gt;\n&lt;style type=\"text/css\"&gt;\n.pic {\n    position: absolute;\n    opacity: 0;\n}\n#pic1 {\n    -webkit-animation: pic1 4s infinite linear;\n}\n#pic2 {\n    -webkit-animation: pic2 4s infinite linear;\n}\n@-webkit-keyframes pic1 {\n    0%   {opacity: 0;}\n    5%   {opacity: 1;}\n    45%  {opacity: 1;}\n    50%  {opacity: 0;}\n    100% {opacity: 0;}\n}\n@-webkit-keyframes pic2 {\n    0%   {opacity: 0;}\n    50%  {opacity: 0;}\n    55%  {opacity: 1;}\n    95%  {opacity: 1;}\n    100% {opacity: 0;}\n}\n&lt;/style&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction doStuff(){\n    var pic1 = document.getElementById(\"pic1\");\n    var pic2 = document.getElementById(\"pic2\");\n\n    pic1.style.webkitAnimationPlayState=\"paused\";\n    pic2.style.webkitAnimationPlayState=\"paused\";\n\n    pic1.onclick = function(){\n        pic1.style.webkitAnimationPlayState=\"running\";\n        pic2.style.webkitAnimationPlayState=\"running\";\n    }\n\n    pic2.onclick = function(){\n        pic1.style.webkitAnimationPlayState=\"running\";\n        pic2.style.webkitAnimationPlayState=\"running\";\n    }\n}\n&lt;/script&gt;\n&lt;/head&gt;  \n&lt;body&gt;\n    &lt;img id=\"pic1\" class=\"pic\" src=\"photo1.jpg\" /&gt;\n    &lt;img id=\"pic2\" class=\"pic\" src=\"photo2.jpg\" onclick=\"doStuff()\" /&gt;\n&lt;/body&gt;                                                                 \n&lt;/html&gt;\n</code></pre>\n\n<p>I don't want to use any JS libraries (e.g. jQuery) or any other external solution. </p>\n\n<p>My guess is that my functions inside <code>doStuff</code> function are still running and that's why <code>pause</code> and <code>resume</code> works only once. </p>\n\n<p>Is there a way to clear these functions after I have clicked them once? Or am I trying to do this in a totally wrong way? Help is appreciated. :)</p>\n",
            "last_activity_date": 1405575705,
            "question_id": 5804444,
            "score": 28,
            "tags": [
                "javascript",
                "animation",
                "css3",
                "resume"
            ],
            "title": "How to pause and resume CSS3 animation using JavaScript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Using <a href=\"http://en.wikipedia.org/wiki/Meta_refresh\">meta refresh</a> worked like a charm! Legacy FTW! Thanks, @Balexandre</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"refresh\" content=\"5; url=https://market.android.com/developer?pub=Fractal%20Systems\"&gt;\n&lt;script type=\"text/javascript\"&gt;\n\n  var _gaq = _gaq || [];\n  _gaq.push(['_setAccount', 'UA-1234567-8']);\n  _gaq.push(['_trackPageview']);\n\n  (function() {\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n  })();\n\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h2&gt;ADW.BuuF.Theme is no more! You will be redirected to new and better apps in 5 seconds.&lt;/h2&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>RECAP: I am now able to redirect while tracking those redirects using Google Analytics!</p>\n\n<p>Meta Refresh (Taken from <a href=\"http://en.wikipedia.org/wiki/Meta_refresh\">wikipedia</a>) </p>\n\n<p>Examples</p>\n\n<p>Place inside  to refresh page after 5 seconds:</p>\n\n<pre><code>&lt;meta http-equiv=\"refresh\" content=\"5\"&gt;\n</code></pre>\n\n<p>Redirect to <a href=\"http://example.com/\">http://example.com/</a> after 5 seconds:</p>\n\n<pre><code>&lt;meta http-equiv=\"refresh\" content=\"5; url=http://example.com/\"&gt;\n</code></pre>\n\n<p>Redirect to <a href=\"http://example.com/\">http://example.com/</a> immediately:</p>\n\n<pre><code>&lt;meta http-equiv=\"refresh\" content=\"0; url=http://example.com/\"&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>I'd suggest changing your Google Analytics code to be synchronous instead of asychronous by changing it to this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  var _gaq = _gaq || [];\n  _gaq.push(['_setAccount', 'UA-1234567-8']);\n  _gaq.push(['_trackPageview']);\n&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"http://www.google-analytics.com/ga.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>This should guarantee that it runs before your redirect code kicks in and it should be out of the way of your redirect script so there is no interference.  As you have it now, you're playing a guessing game for how long the GA script will take to load and that it will load and do it's job in under 3 seconds.  That may usually be the case, but there is no reason to load it asynchronously like you are and have to play that game.  Load it synchronously and it will do it's job before your javascript redirect fires.  </p>\n\n<p>It might even be possible to just put the redirect directly after the GA code like this and minimize the time that your placeholder page is displayed:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  var _gaq = _gaq || [];\n  _gaq.push(['_setAccount', 'UA-1234567-8']);\n  _gaq.push(['_trackPageview']);\n&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"http://www.google-analytics.com/ga.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n  window.location = \"https://market.android.com/developer?pub=Fractal%20Systems\";\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Note: <code>_gaq.push</code> allows pushing of functions onto the queue. The following code should redirect after 250 milliseconds (to allow time for the tracking pixel) after the _trackPageview:</p>\n\n<pre><code>var _gaq = _gaq || [];\n_gaq.push(['_setAccount', 'UA-1234567-8']);\n_gaq.push(['_trackPageview']);\n_gaq.push(function() {\n    setTimeout(function() {\n        window.location = \"https://market.android.com/developer?pub=Fractal%20Systems\";\n    }, 250);\n});\n\n(function() {\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>Meta refresh is generally discouraged because of usability concerns (especially with a short, or no delay), but as a <strong>fallback</strong> for clients with no javascript I think it's perfectly valid in this case.</p>\n\n<p>If you <strong>combine</strong> the synchronous ga.js call with a meta refresh you get the best of both worlds: an almost instant, tracked redirect if JS is enabled; a delayed but still effective redirect if not (and a hard link in the body just in case all else fails).</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;!--For JS disabled: decent delay, both for usability and to allow plenty of time for JS to work if enabled --&gt;\n    &lt;meta http-equiv=\"refresh\" content=\"5;https://market.android.com/developer?pub=Fractal%20Systems\"/&gt;\n    &lt;script&gt;\n        var _gaq = _gaq || [];\n        _gaq.push(['_setAccount', 'UA-1234567-8']);\n        _gaq.push(['_trackPageview']);\n    &lt;/script&gt;\n    &lt;!--Synchronous call to ensure tracking fires before JS redirect--&gt;\n    &lt;script type=\"text/javascript\" src=\"//www.google-analytics.com/ga.js\"&gt;&lt;/script&gt;\n    &lt;script&gt;\n        /* if JS is enabled this will normally fire well before the meta refresh delay ends: an almost instantaneous redirect */\n        window.location=\"https://market.android.com/developer?pub=Fractal%20Systems\";\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;!-- Include a hard link in case both js and the meta refresh fail --&gt;\n    &lt;p&gt;Redirecting you to &lt;a href=\"https://market.android.com/developer?pub=Fractal%20Systems\"&gt;https://market.android.com/developer?pub=Fractal%20Systems&lt;/a&gt;&lt;/p&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think maybe just use jquery ready method so it won't start the timer till the page is fully loaded...</p>\n\n<pre><code>&lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n$(document).ready(function() {       \n    setTimeout(function() {\n        //alert(\"redirecting!\");\n        window.location = '&lt;?= $url ?&gt;';\n    }, 3000);\n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The <a href=\"http://stackoverflow.com/a/8694071/1729516\">code provided</a> by <a href=\"http://stackoverflow.com/users/595070/mike\">Mike</a> works indeed. However, I found that removing the timer entirely works as well. The __utm.gif request is then aborted, but all information has been sent. The window just redirects and doesn't wait for the reply (which is simply a 200 status). I tested this and it seems to be working nicely. </p>\n\n<pre><code>var _gaq = _gaq || [];\n_gaq.push(['_setAccount', 'UA-1234567-8']);\n_gaq.push(['_trackPageview']);\n_gaq.push(function() {\n  window.location = \"https://market.android.com/developer?pub=Fractal%20Systems\";\n});\n\n\n(function() {\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>There's a good answer here:\n<a href=\"https://www.domsammut.com/code/setting-up-hitcallback-using-google-universal-analytics\" rel=\"nofollow\">https://www.domsammut.com/code/setting-up-hitcallback-using-google-universal-analytics</a></p>\n\n<p>In short, you'd do it using an event, and you use the hitCallback function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you're using the new GA code you can simply replace this line <code>ga('send', 'pageview');</code> with this code:</p>\n\n<pre><code>ga('send', 'pageview', {\n  'hitCallback': function() {\n      window.location = \"http://www.your-site.com\";\n  }\n});\n</code></pre>\n\n<p>Example in full:     </p>\n\n<pre><code>  (function(i,s,o,g,r,a,m){\n    i['GoogleAnalyticsObject']=r;\n    i[r]=i[r]||function() {\n        (i[r].q=i[r].q||[]).push(arguments)\n    },i[r].l=1*new Date();\n    a=s.createElement(o),\n    m=s.getElementsByTagName(o)[0];\n    a.async=1;\n    a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\nga('create', 'UA-xxxxxxx-2', 'auto');\n\nga('send', 'pageview', {\n  'hitCallback': function() {\n      window.location = \"http://www.your-site.com\";\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I need help figuring out how to successfully redirect while including Analytics code.</p>\n\n<ul>\n<li>I have a subdomain setup <a href=\"http://buuf.fractalsystems.org\">http://buuf.fractalsystems.org</a></li>\n<li>The subdomain is actually just a subfolder <a href=\"http://fractalsystems.org/buuf\">http://fractalsystems.org/buuf</a></li>\n<li>I have an HTML file in that subfolder which redirects to <a href=\"https://market.android.com/developer?pub=Fractal%20Systems\">https://market.android.com/developer?pub=Fractal%20Systems</a></li>\n</ul>\n\n<p>The code for that redirect file:</p>\n\n<pre><code>&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction delayedRedirect(){\n    window.location = \"https://market.android.com/developer?pub=Fractal%20Systems\"\n}\n&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n\n  var _gaq = _gaq || [];\n  _gaq.push(['_setAccount', 'UA-1234567-8']); &lt;!--I have my real ID there--&gt;\n  _gaq.push(['_trackPageview']);\n\n  (function() {\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n   var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n  })();\n\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body onLoad=\"setTimeout('delayedRedirect()', 3000)\"&gt;\n&lt;h2&gt;ADW.BuuF.Theme is no more! You will be redirected to new and better apps in 3 seconds.&lt;/h2&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>This works as a redirect only if I don't include my Analytics code. I've tried moving the code around with no change.</p>\n\n<p><strong>QUESTION</strong>\nHow can I add a redirect, of any kind, and still be able to track with Google Analytics?</p>\n\n<p>I've tried PHP redirects with no success and am pretty sure htaccess redirects wont help although I'm open to suggestions.</p>\n\n<p>The reason I'm using a JavaScript redirect is so I can continue to track with Google Analytics and also show a little message or make a custom page with the delay.</p>\n\n<p>Thanks for any help. Doesn't have to be JS, please, any input is welcome if you know of a solution.</p>\n",
            "last_activity_date": 1413153749,
            "question_id": 8692503,
            "score": 21,
            "tags": [
                "javascript",
                "redirect",
                "google-analytics",
                "subdomain",
                "subfolder"
            ],
            "title": "Javascript Redirect with Google Analytics"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<h3>Using Named Function Expressions:</h3>\n\n<p>You can give a function expression a name that is actually <strong>private</strong> and is only visible from inside of the function ifself:</p>\n\n<pre><code>var factorial = function myself (n) {\n    if (n &lt;= 1) {\n        return 1;\n    }\n    return n * myself(n-1);\n}\ntypeof myself === 'undefined'\n</code></pre>\n\n<p>Here <code>myself</code> is <strong>visible only inside of the function</strong> itself.</p>\n\n<p>You can use this private name to call the function recursively.</p>\n\n<p>See <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_13\"><code>13. Function Definition</code></a> of the ECMAScript 5 spec:</p>\n\n<blockquote>\n  <p>The Identifier in a FunctionExpression can be referenced from inside the FunctionExpression's FunctionBody to allow the function to call itself recursively. However, unlike in a FunctionDeclaration, the Identifier in a FunctionExpression cannot be referenced from and does not affect the scope enclosing the FunctionExpression.</p>\n</blockquote>\n\n<p>Please note that Internet Explorer up to version 8 doesn't behave correctly as the name is actually visible in the enclosing variable environment, and it references a duplicate of the actual function (see <em>patrick dw</em>'s comment below).</p>\n\n<h3>Using arguments.callee:</h3>\n\n<p>Alternatively you could use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Functions_and_function_scope/arguments/callee\"><code>arguments.callee</code></a> to refer to the current function:</p>\n\n<pre><code>var factorial = function (n) {\n    if (n &lt;= 1) {\n        return 1;\n    }\n    return n * arguments.callee(n-1);\n}\n</code></pre>\n\n<p>The 5th edition of ECMAScript forbids use of arguments.callee() in <a href=\"https://developer.mozilla.org/en/JavaScript/Strict_mode\">strict mode</a>, however:</p>\n\n<blockquote>\n  <p>(From <a href=\"https://developer.mozilla.org/en/JavaScript/Strict_mode\">MDN</a>): In normal code arguments.callee refers to the enclosing function. This use case is weak: simply name the enclosing function! Moreover, arguments.callee substantially hinders optimizations like inlining functions, because it must be made possible to provide a reference to the un-inlined function if arguments.callee is accessed. arguments.callee for strict mode functions is a non-deletable property which throws when set or retrieved.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>You can access the function itself using <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Functions_and_function_scope/arguments/callee\"><code>arguments.callee</code> <em><sup>[MDN]</sup></em></a>:</p>\n\n<pre><code>if (counter&gt;0) {\n    arguments.callee(counter-1);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<h3>Here's one very simple example:</h3>\n\n<pre><code>var counter = 0;\n\nfunction getSlug(tokens) {\n    var slug = '';\n\n    if (!!tokens.length) {\n        slug = tokens.shift();\n        slug = slug.toLowerCase();\n        slug += getSlug(tokens);\n\n        counter += 1;\n        console.log('THE SLUG ELEMENT IS: %s, counter is: %s', slug, counter);\n    }\n\n    return slug;\n}\n\nvar mySlug = getSlug(['This', 'Is', 'My', 'Slug']);\nconsole.log('THE SLUG IS: %s', mySlug);\n</code></pre>\n\n<p>Notice that the <code>counter</code> counts \"backwards\" in regards to what <code>slug</code>'s value is. This is because of the position at which we are logging these values, as the function <em>recurs</em> before logging -- so, we essentially keep nesting deeper and deeper into the <em>call-stack</em> <strong>before</strong> logging takes place.</p>\n\n<p>Once the recursion meets the final call-stack item, it <em>trampolines</em> \"out\" of the function calls, whereas, the first increment of <code>counter</code> occurs inside of the last nested call.</p>\n\n<p>I know this is not a \"fix\" on the Questioner's code, but given the title I thought I'd generically exemplify <em>Recursion</em> for a better understanding of recursion, outright.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I can create a recursive function in a variable like so:</p>\n\n<pre><code>/* Count down to 0 recursively.\n */\nvar functionHolder = function (counter) {\n    output(counter);\n    if (counter &gt; 0) {\n        functionHolder(counter-1);\n    }\n}\n</code></pre>\n\n<p>With this, <code>functionHolder(3);</code> would output <code>3</code> <code>2</code> <code>1</code> <code>0</code>. Let's say I did the following:</p>\n\n<pre><code>var copyFunction = functionHolder;\n</code></pre>\n\n<p><code>copyFunction(3);</code> would output <code>3</code> <code>2</code> <code>1</code> <code>0</code> as above. If I then changed <code>functionHolder</code> as follows:</p>\n\n<pre><code>functionHolder = function(whatever) {\n    output(\"Stop counting!\");\n</code></pre>\n\n<p>Then <code>functionHolder(3);</code> would give <code>Stop counting!</code>, as expected.</p>\n\n<p><code>copyFunction(3);</code> now gives <code>3</code> <code>Stop counting!</code> as it refers to <code>functionHolder</code>, not the function (which it itself points to). This could be desirable in some circumstances, but is there a way to write the function so that it calls itself rather than the variable that holds it?</p>\n\n<p>That is, is it possible to change <strong>only</strong> the line <code>functionHolder(counter-1);</code> so that going through all these steps still gives <code>3</code> <code>2</code> <code>1</code> <code>0</code> when we call <code>copyFunction(3);</code>? I tried <code>this(counter-1);</code> but that gives me the error <code>this is not a function</code>.</p>\n",
            "last_activity_date": 1413590842,
            "question_id": 7065120,
            "score": 20,
            "tags": [
                "javascript",
                "function",
                "recursion",
                "function-expression"
            ],
            "title": "Calling a javascript function recursively"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If you did literally this:</p>\n\n<pre><code>encodeURIComponent('&amp;')\n</code></pre>\n\n<p>Then the result is <code>%26</code>, <a href=\"http://jsfiddle.net/nick_craver/srepH/\">you can test it here</a>.  Make sure the string you are encoding is <em>just</em> <code>&amp;</code> and not <code>&amp;amp;</code> to begin with...otherwise it is encoding correctly, which is likely the case.  If you need a different result for some reason, you can do a <code>.replace(/&amp;amp;/g,'&amp;')</code> before the encoding.</p>\n",
                    "is_accepted": false,
                    "score": 76
                },
                {
                    "body": "<p>Without seeing your code, it's hard to answer other than a stab in the dark.  I would guess that the string you're passing to <em>encodeURIComponent()</em>, which is the correct method to use, is coming from the result of accessing the <em>innerHTML</em> property.  The solution is to get the <em>innerText</em>/<em>textContent</em> property value instead:</p>\n\n<pre><code>var str, \n    el = document.getElementById(\"myUrl\");\n\nif (\"textContent\" in el)\n    str = encodeURIComponent(el.textContent);\nelse\n    str = encodeURIComponent(el.innerText);\n</code></pre>\n\n<p>If that isn't the case, you can use the <em>replace()</em> method to replace the HTML entity:</p>\n\n<pre><code>encodeURIComponent(str.replace(/&amp;amp;/g, \"&amp;\"));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 336
                }
            ],
            "body": "<p>I am encoding a string that will be passed in a url (via get). But, if I use <code>escape</code>, <code>encodeURI</code> or e<code>ncodeURIComponent</code>, <code>&amp;</code> will be replaced with <code>%26amp%3B</code>, but I want it to be replaced with <code>%26</code>. What am I doing wrong?</p>\n",
            "last_activity_date": 1421802690,
            "question_id": 3541711,
            "score": 206,
            "tags": [
                "javascript",
                "urlencode"
            ],
            "title": "JavaScript URL encode"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Looks like the <code>change()</code> function is only called when you check a radio button, not when you uncheck it.  The solution I used is to bind the change event to every radio button:</p>\n\n<pre><code>$(\"#r1, #r2, #r3\").change(function () {\n</code></pre>\n\n<p>Or you could give all the radio buttons the same name:</p>\n\n<pre><code>$(\"input[name=someRadioGroup]:radio\").change(function () {\n</code></pre>\n\n<p>Here's a working <a href=\"http://jsfiddle.net/N9tBx/\">jsfiddle example</a> (updated from Chris Porter's comment.)</p>\n\n<p>Per @Ray's comment, you should avoid using names with <code>.</code> in them. Those names work in jQuery 1.7.2 but not in other versions (<a href=\"http://jsfiddle.net/zn7q2/2/\">jsfiddle example.</a>).</p>\n",
                    "is_accepted": true,
                    "score": 178
                },
                {
                    "body": "<pre><code>&lt;input id='r1' type='radio' class='rg' name=\"asdf\"/&gt;\n&lt;input id='r2' type='radio' class='rg' name=\"asdf\"/&gt;\n&lt;input id='r3' type='radio' class='rg' name=\"asdf\"/&gt;\n&lt;input id='r4' type='radio' class='rg' name=\"asdf\"/&gt;&lt;br/&gt;\n&lt;input type='text' id='r1edit'/&gt;                  \n</code></pre>\n\n<p>jquery part</p>\n\n<pre><code>$(\".rg\").change(function () {\n\nif ($(\"#r1\").attr(\"checked\")) {\n            $('#r1edit:input').removeAttr('disabled');\n        }\n        else {\n            $('#r1edit:input').attr('disabled', 'disabled');\n        }\n                    });\n</code></pre>\n\n<p>here is the <a href=\"http://jsfiddle.net/aqZgs/1/\"><strong>DEMO</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>You can bind to all of the radio buttons at once by name:</p>\n\n<pre><code>$('input[name=someRadioGroup]:radio').change(...);\n</code></pre>\n\n<p>Working example here:\n<a href=\"http://jsfiddle.net/Ey4fa/\" rel=\"nofollow\">http://jsfiddle.net/Ey4fa/</a></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>This normally works for me:</p>\n\n<p><code>if ($(\"#r1\").is(\":checked\")) {}</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Let's say those radio buttons are inside a div that has the id \"#radioButtons\" and that the radio buttons have the same name (for example \"commonName\") then:</p>\n\n<pre><code>$('#radioButtons').on('change', 'input[name=commonName]:radio', function (e) {\n    console.log('You have changed the selected radio button!');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My problem was similar and this worked for me:</p>\n\n<pre><code>$('body').on('change', '.radioClassNameHere', function() { ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>About a month ago Mitt's question went unanswered.  Sadly, I'm running into the same situation now.</p>\n\n<p><a href=\"http://api.jquery.com/change/#comment-133939395\">http://api.jquery.com/change/#comment-133939395</a></p>\n\n<p>Here's the situation.  I'm using JQuery to capture the changes in a radio button.  When the radio button is selected I enable an edit box.  When the radio button is de-selected, I would like the edit box to be disabled.</p>\n\n<p>The enabling works.  When I choose a different radio button in the group, the Change event is NOT fired.  Does anyone know how to fix this?</p>\n\n<pre><code>&lt;input type=\"radio\" id=\"r1\" name=\"someRadioGroup\"/&gt; \n\n\n                &lt;script type=\"text/javascript\"&gt;\n                    $(\"#r1\").change(function () {\n                        if ($(\"#r1\").attr(\"checked\")) {\n                            $('#r1edit:input').removeAttr('disabled');\n                        }\n                        else {\n                            $('#r1edit:input').attr('disabled', true);\n                        }\n                    });\n                &lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1425405170,
            "question_id": 5176803,
            "score": 83,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "radio-button"
            ],
            "title": "JQuery $(#radioButton).change(...) not firing during de-selection"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Douglas Crockford has a converter, but I'm not sure it will help with bad JSON to good JSON.</p>\n\n<p><a href=\"https://github.com/douglascrockford/JSON-js\" rel=\"nofollow\">https://github.com/douglascrockford/JSON-js</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://api.jquery.com/jQuery.parseJSON/\"><strong>jQuery.parseJSON</strong></a></p>\n\n<pre><code>str = jQuery.parseJSON(str)\n</code></pre>\n\n<p>Edit. This is provided you have a valid JSON string</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Use with caution (because of <code>eval()</code>):</p>\n\n<pre><code>function strToJson(str) {\n  eval(\"var x = \" + str + \";\");\n  return JSON.stringify(x);\n}\n</code></pre>\n\n<p>call as:</p>\n\n<pre><code>var str = \"{ hello: 'world', places: ['Africa', 'America', 'Asia', 'Australia'] }\";\nalert( strToJson(str) );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Disclaimer: don't try this at home, or for anything that requires other devs taking you seriously:</p>\n\n<pre><code>JSON.stringify(eval('(' + str + ')'));\n</code></pre>\n\n<p>There, I did it.<br>\nTry not to do it tho, eval is BAD for you. As told above, use Crockford's JSON shim for older browsers (IE7 and under)</p>\n\n<p>This method requires your string to be valid <em>javascript</em>, which will be converted to a javascript object that can then be serialized to JSON.</p>\n\n<p><em>edit:</em> fixed as Rocket suggested.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Your string is not valid JSON, so <code>JSON.parse</code> (or jQuery's <code>$.parseJSON</code>) won't work.</p>\n\n<p>One way would be to use <code>eval</code> to \"parse\" the \"invalid\" JSON, and then <code>stringify</code> it to \"convert\" it to valid JSON.</p>\n\n<pre><code>var str = \"{ hello: 'world', places: ['Africa', 'America', 'Asia', 'Australia'] }\"\nstr = JSON.stringify(eval('('+str+')'));\n</code></pre>\n\n<p>I suggest instead of trying to \"fix\" your invalid JSON, you start with valid JSON in the first place.  How is <code>str</code> being generated, it should be fixed there, before it's generated, not after.</p>\n\n<p><strong>EDIT</strong>: You said (in the comments) this string is stored in a data attribute:</p>\n\n<pre><code>&lt;div data-object=\"{hello:'world'}\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>I suggest you fix it here, so it can just be <code>JSON.parse</code>d.  First, both they keys and values need to be quoted in double quotes.  It should look like (single quoted attributes in HTML are valid):</p>\n\n<pre><code>&lt;div data-object='{\"hello\":\"world\"}'&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Now, you can just use <code>JSON.parse</code> (or jQuery's <code>$.parseJSON</code>).</p>\n\n<pre><code>var str = '{\"hello\":\"world\"}';\nvar obj = JSON.parse(str);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p><strong>If the string is from a trusted source</strong>, you could use <code>eval</code> then <code>JSON.stringify</code> the result. Like this:</p>\n\n<pre><code>var str = \"{ hello: 'world', places: ['Africa', 'America', 'Asia', 'Australia'] }\";\nvar json = JSON.stringify(eval(\"(\" + str + \")\"));\n</code></pre>\n\n<p>Note that when you <code>eval</code> an object literal, it has to be wrapped in parentheses, otherwise the braces are parsed as a block instead of an object.</p>\n\n<p>I also agree with the comments under the question that it would be much better to just encode the object in valid JSON to begin with and avoid having to parse, encode, then presumably parse it <em>again</em>. HTML supports single-quoted attributes (just be sure to HTML-encode any single quotes inside strings).</p>\n",
                    "is_accepted": true,
                    "score": 62
                },
                {
                    "body": "<p>You have to write round brackets, because without them <code>eval</code> will consider code inside curly brackets as block of commands.\n</p>\n\n<pre><code>var i = eval(\"({ hello: 'world', places: ['Africa', 'America', 'Asia', 'Australia'] })\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I put my answer for someone who are interested in this old thread.</p>\n\n<p>I created the <a href=\"https://github.com/tokkonopapa/jQuery-parseData\" rel=\"nofollow\">HTML5 data-* parser</a> for jQuery plugin and <a href=\"http://jsfiddle.net/tokkonoPapa/S6St8/\" rel=\"nofollow\">demo</a> which convert a malformed JSON string into a JavaScript object without using <code>eval()</code>.</p>\n\n<p>It can pass the HTML5 data-* attributes bellow:</p>\n\n<pre><code>&lt;div data-object='{\"hello\":\"world\"}'&gt;&lt;/div&gt;\n&lt;div data-object=\"{hello:'world'}\"&gt;&lt;/div&gt;\n&lt;div data-object=\"hello:world\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>into the object:</p>\n\n<pre><code>{\n    hello: \"world\"\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There's a much simpler way to accomplish this feat, just hijack the onclick attribute of a dummy element to force a return of your string as a JavaScript object:</p>\n\n<pre><code>var jsonify = (function(div){\n  return function(json){\n    div.setAttribute('onclick', 'this.__json__ = ' + json);\n    div.click();\n    return div.__json__;\n  }\n})(document.createElement('div'));\n\n// Let's say you had a string like '{ one: 1 }' (malformed, a key without quotes)\n// jsonify('{ one: 1 }') will output a good ol' JS object ;)\n</code></pre>\n\n<p><strong>Here's a demo:</strong> <a href=\"http://codepen.io/csuwldcat/pen/dfzsu\" rel=\"nofollow\">http://codepen.io/csuwldcat/pen/dfzsu</a> (open your console)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use simple code in the link below :</p>\n\n<p><a href=\"http://msdn.microsoft.com/es-es/library/ie/cc836466%28v=vs.94%29.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/es-es/library/ie/cc836466%28v=vs.94%29.aspx</a></p>\n\n<pre><code>var jsontext = '{\"firstname\":\"Jesper\",\"surname\":\"Aaberg\",\"phone\":[\"555-0100\",\"555-0120\"]}';\nvar contact = JSON.parse(jsontext);\n</code></pre>\n\n<p>and reverse</p>\n\n<pre><code>var str = JSON.stringify(arr);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I hope this little function converts invalid JSON string to valid one.</p>\n\n<pre><code>function JSONize(str) {\n  return str\n    // wrap keys without quote with valid double quote\n    .replace(/([\\$\\w]+)\\s*:/g, function(_, $1){return '\"'+$1+'\":'})    \n    // replacing single quote wrapped ones to double quote \n    .replace(/'([^']+)'/g, function(_, $1){return '\"'+$1+'\"'})         \n}\n</code></pre>\n\n<p>Result</p>\n\n<pre><code>var invalidJSON = \"{ hello: 'world',foo:1,  bar  : '2', foo1: 1, _bar : 2, $2: 3, 'xxx': 5, \\\"fuz\\\": 4, places: ['Africa', 'America', 'Asia', 'Australia'] }\"\nJSON.parse(invalidJSON) \n//Result: Uncaught SyntaxError: Unexpected token h VM1058:2\nJSON.parse(JSONize(invalidJSON)) \n//Result: Object {hello: \"world\", foo: 1, bar: \"2\", foo1: 1, _bar: 2\u2026}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How can I convert a string that describes an object into a JSON string using JavaScript (or jQuery)?</p>\n\n<p>e.g: Convert this (<em>NOT</em> a valid JSON string): \n</p>\n\n<pre><code>var str = \"{ hello: 'world', places: ['Africa', 'America', 'Asia', 'Australia'] }\"\n</code></pre>\n\n<p>into this:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>str = '{ \"hello\": \"world\", \"places\": [\"Africa\", \"America\", \"Asia\", \"Australia\"] }'\n</code></pre>\n\n<p>i would love to avoid using <code>eval()</code> if possible...</p>\n",
            "last_activity_date": 1412911600,
            "question_id": 9036429,
            "score": 55,
            "tags": [
                "javascript",
                "json",
                "object"
            ],
            "title": "convert object string to JSON"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p><strong>EDIT</strong>: Although, this solution works, I would recommend you try <a href=\"http://stackoverflow.com/questions/2984311/delete-default-value-of-an-input-text-on-click/2984337#answer-2984373\">MvanGeest's solution below</a> which uses the <code>placeholder</code>-attribute and a javascript fallback for browsers which don't support it yet.</p>\n\n<p>If you are looking for a Mootools equivalent to the JQuery fallback in MvanGeest's reply, <a href=\"http://mootools.net/forge/p/mootools_placeholder\">here is one</a>.</p>\n\n<p>--</p>\n\n<p>You should probably use <code>onfocus</code> and <code>onblur</code> events in order to support keyboard users who tab through forms.</p>\n\n<p>Here's an example:</p>\n\n<pre><code>&lt;input type=\"text\" value=\"email@abc.com\" name=\"Email\" id=\"Email\"\n onblur=\"if (this.value == '') {this.value = 'email@abc.com';}\"\n onfocus=\"if (this.value == 'email@abc.com') {this.value = '';}\" /&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>Using jQuery, you can do:</p>\n\n<pre><code>$(\"input:text\").each(function ()\n{\n    // store default value\n    var v = this.value;\n\n    $(this).blur(function ()\n    {\n        // if input is empty, reset value to default \n        if (this.value.length == 0) this.value = v;\n    }).focus(function ()\n    {\n        // when input is focused, clear its contents\n        this.value = \"\";\n    }); \n});\n</code></pre>\n\n<p>And you could stuff all this into a custom plug-in, like so:</p>\n\n<pre><code>jQuery.fn.hideObtrusiveText = function ()\n{\n    return this.each(function ()\n    {\n        var v = this.value;\n\n        $(this).blur(function ()\n        {\n            if (this.value.length == 0) this.value = v;\n        }).focus(function ()\n        {\n            this.value = \"\";\n        }); \n    });\n};\n</code></pre>\n\n<p>Here's how you would use the plug-in:</p>\n\n<pre><code>$(\"input:text\").hideObtrusiveText();\n</code></pre>\n\n<p>Advantages to using this code is:</p>\n\n<ul>\n<li>Its unobtrusive and doesn't pollute the DOM</li>\n<li>Code re-use: it works on multiple fields</li>\n<li>It figures out the default value of inputs by itself</li>\n</ul>\n\n<p><br /><br />\nNon-jQuery approach:</p>\n\n<pre><code>function hideObtrusiveText(id)\n{\n    var e = document.getElementById(id);\n\n    var v = e.value;\n\n    e.onfocus = function ()\n    {\n        e.value = \"\";\n    };\n\n    e.onblur = function ()\n    {\n        if (e.value.length == 0) e.value = v;\n    };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>For future reference, I <strong>have</strong> to include the HTML5 way to do this.</p>\n\n<pre><code>&lt;input name=\"Email\" type=\"text\" id=\"Email\" value=\"email@abc.com\" placeholder=\"What's your programming question ? be specific.\" /&gt;\n</code></pre>\n\n<p>If you have a HTML5 doctype and a HTML5-compliant browser, this will work. However, <strong>many browsers do not currently support this</strong>, so at least Internet Explorer users will not be able to see your placeholder. However, see <a href=\"http://www.kamikazemusic.com/quick-tips/jquery-html5-placeholder-fix/\">http://www.kamikazemusic.com/quick-tips/jquery-html5-placeholder-fix/</a> for a solution. Using that, you'll be very modern and standards-compliant, while also providing the functionality to most users.</p>\n\n<p>Also, the provided link is a well-tested and well-developed solution, which should work out of the box.</p>\n",
                    "is_accepted": false,
                    "score": 90
                },
                {
                    "body": "<p>This is somewhat cleaner, i think. Note the usage of the \"defaultValue\" property of the input:</p>\n\n<pre><code>&lt;script&gt;\nfunction onBlur(el) {\n    if (el.value == '') {\n        el.value = el.defaultValue;\n    }\n}\nfunction onFocus(el) {\n    if (el.value == el.defaultValue) {\n        el.value = '';\n    }\n}\n&lt;/script&gt;\n&lt;form&gt;\n&lt;input type=\"text\" value=\"[some default value]\" onblur=\"onBlur(this)\" onfocus=\"onFocus(this)\" /&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Here is very simple javascript. It works fine for me :</p>\n\n<pre><code>function sFocus (field) {\n    if(field.value == 'Enter your search') {\n        field.value = '';\n    }\n    field.className = \"darkinput\";\n}\n\nfunction sBlur (field) {\n    if (field.value == '') {\n        field.value = 'Enter your search';\n        field.className = \"lightinput\";\n    }\n    else {\n        field.className = \"darkinput\";\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Enter the following \ninside the <code></code> tag, just add onFocus=\"value=''\" so that your final code looks like this: </p>\n\n<pre><code>&lt;input type=\"email\" id=\"Email\" onFocus=\"value=''\"&gt; \n</code></pre>\n\n<p>This makes use of the javascript onFocus() event holder.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>we can do it without using js in the following way using the \"placeholder\" attribute of html5\n ( the default text disappears when the user starts to type in ,but not on just clicking )</p>\n\n<p><code>&lt;input type=\"email\" id=\"email\" placeholder=\"xyz@abc.com\"&gt;</code></p>\n\n<p>see this: <a href=\"http://www.w3schools.com/html/tryit.asp?filename=tryhtml5_input_placeholder\" rel=\"nofollow\">http://www.w3schools.com/html/tryit.asp?filename=tryhtml5_input_placeholder</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>&lt;input name=\"Email\" type=\"text\" id=\"Email\" placeholder=\"enter your question\" /&gt;</code></p>\n\n<p>The placeholder attribute specifies a short hint that describes the expected value of an input field (e.g. a sample value or a short description of the expected format).</p>\n\n<p>The short hint is displayed in the input field before the user enters a value.</p>\n\n<p>Note: The placeholder attribute works with the following input types: text, search, url, tel, email, and password.</p>\n\n<p>I think this will help.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an input text :</p>\n\n<pre><code>&lt;input name=\"Email\" type=\"text\" id=\"Email\" value=\"email@abc.com\" /&gt;\n</code></pre>\n\n<p>I want to put a default value like \"What's your programming question ? be specific.\" in StackOverFlow, and when the user click on it the default value disapear.</p>\n",
            "last_activity_date": 1416579562,
            "question_id": 2984311,
            "score": 45,
            "tags": [
                "javascript",
                "html",
                "input",
                "default-value"
            ],
            "title": "Delete default value of an input text on click"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I think it's because the Array() constructor can be redefined. However, that problem isn't really unique to arrays.</p>\n\n<p>I think the attack (or one possible way) is something like this:</p>\n\n<pre><code>function Array(n) {\n  var self = this;\n  setTimeout(function() {\n    sendToEvilHackers(self);\n  }, 10);\n  return this;\n}\n</code></pre>\n\n<p>The browser (or some browsers) use that constructor for <code>[n, n, n]</code> array notation. A CSRF attack can therefore exploit your open session with your bank, hit a known JSON URL with a <code>&lt;script&gt;</code> tag to fetch it, and then <em>poof</em> you are owned.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is because a few years ago Jeremiah Grossman found a very <a href=\"http://jeremiahgrossman.blogspot.com/2006/01/advanced-web-attack-techniques-using.html\" rel=\"nofollow\">interesting vulnerability that affects gmail</a>.  Some people have addressed this vulnerabilty by using an <a href=\"http://stackoverflow.com/questions/3146798/why-do-people-put-code-like-throw-1-dont-be-evil-and-for-in-front-of\">unparseable cruft</a> (Mr bobince's technical description on this page is fantastic.)</p>\n\n<p>The reason why Microsoft is talking about this is because they haven't patched their browser (yet).  Mozilla considers this to be a vulnerability in the json specification and therefore they patched it in <a href=\"http://ejohn.org/blog/re-securing-json/\" rel=\"nofollow\">Firefox 3</a>.  For the record I completely agree with Mozilla, and its unfortunate but each web app developer is going to have to defend them selves against this very obscure vulnerability. </p>\n",
                    "is_accepted": true,
                    "score": 20
                }
            ],
            "body": "<p>In the video below, at time marker 21:40, the Microsoft PDC presenter says it's important that all JSON be wrapped so it's not a top level array:</p>\n\n<p><a href=\"http://www.microsoftpdc.com/2009/FT12\">http://www.microsoftpdc.com/2009/FT12</a></p>\n\n<p>What is the risk of an unwrapped top level array?</p>\n\n<p>How should I check and see if I'm vulnerable?  I purchase many components from 3rd parties and have external vendors who develop my code.  </p>\n",
            "last_activity_date": 1414720682,
            "question_id": 3503102,
            "score": 26,
            "tags": [
                "javascript",
                "json",
                "security",
                "xss"
            ],
            "title": "What are &quot;top level JSON arrays&quot; and why are they a security risk?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You think that's it? <a href=\"http://ha.ckers.org/xss.html\">Check this out</a>.</p>\n\n<p>Whatever approach you take, you definitely need to use a whitelist. It's the only way to even come close to being safe about what you're allowing on your site.</p>\n\n<p><strong>EDIT</strong>:</p>\n\n<p>I'm not familiar with .NET, unfortunately, but you can check out stackoverflow's own battle with XSS (<a href=\"http://blog.stackoverflow.com/2008/06/safe-html-and-xss/\">http://blog.stackoverflow.com/2008/06/safe-html-and-xss/</a>) and the code that was written to parse HTML posted on this site (<a href=\"http://refactormycode.com/codes/333-sanitize-html\">http://refactormycode.com/codes/333-sanitize-html</a>) - obviously you might need to change this because your whitelist is bigger, but that should get you started.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Whitelist for elements and attributes is the <em>only</em> acceptable choice in my opinion. Anything not on your whitelist should be stripped out or encoded (change &lt;>&amp;\" to entities). Also be sure to check the values within the attributes you allow.</p>\n\n<p>Anything less and you are opening yourself up to problems - known exploits or those that will be discovered in the future.</p>\n\n<p>See also:\n<a href=\"http://ha.ckers.org/xss.html\" rel=\"nofollow\">XSS (Cross Site Scripting) Cheat Sheet</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>what server side code are you using? Depending on which there are a number or ways you can filter out malicious script but it's dangerous territory. Even seasoned proffesionals get caught out: <a href=\"http://www.codinghorror.com/blog/archives/001167.html\" rel=\"nofollow\">http://www.codinghorror.com/blog/archives/001167.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Basically, as Paolo said, you should try to focus on what the users are allowed to do, rather than trying to filter out the stuff they're not supposed to do.</p>\n\n<p>Keep a list of allowed HTML tags (things like b, i, u...) and filter out everything else. You probably also want to remove all attributes to the allowed HTML tags (because of your second example, for instance).</p>\n\n<p>Another solution would be to introduce so-called BB code, which is what a lot of forums use. It has similar syntax to HTML, but starts with the idea of a whitelist of allowed code, which is then transformed into HTML. For example, [b]example[/b] would result in <b>example</b>. Make sure when using BB code to still filter out HTML tags beforehand.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The only really safe way to go is to use a white-list. Encode everything, then convert the allowed codes back.</p>\n\n<p>I have seen rather advanced attempts to only disallow dangerous code, and it still doesn't work well. It's quite some feat to try to safely catch <em>everything</em> that anyone can think of, and it is prone to do annoying replacements of some things that aren't dangerous at all.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>you can use this restrict function.\n  `</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function restrict(elem){\r\n  var tf = _(elem);\r\n  var rx = new RegExp;\r\n  if(elem == \"email\"){\r\n\t   rx = /[ '\"]/gi;\r\n  }else if(elem == \"search\" || elem == \"comment\"){\r\n    rx = /[^a-z 0-9.,?]/gi;\r\n  }else{\r\n\t  rx =  /[^a-z0-9]/gi;\r\n  }\r\n  tf.value = tf.value.replace(rx , \"\" );\r\n }</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am saving user-submitted HTML (in a database). I must prevent Javascript injection attacks.  The most pernicious I have seen is the script in a style=\"expression(...)\".</p>\n\n<p>In addition to this, a fair amount of valid user content will include special characters and XML constructs, so I'd like to avoid a white-list approach if possible. (Listing every allowable HTML element and attribute).</p>\n\n<p>Examples of Javascript attack strings are:</p>\n\n<p>1)</p>\n\n<blockquote>\n  <p>\"Hello, I have a\n  &lt;script&gt;alert(\"bad!\")&lt;/script&gt;\n  problem with the &lt;dog&gt;\n  element...\"</p>\n</blockquote>\n\n<p>2)</p>\n\n<blockquote>\n  <p>\"Hi, this &lt;b\n  style=\"width:expression(alert('bad!'))\"&gt;dog&lt;/b&gt;\n  is black.\"</p>\n</blockquote>\n\n<p>Is there a way to prevent such Javascript, and leave the rest intact?</p>\n\n<p>The only solution I have so far is to use a regular expression to remove certain patterns.  It solves case 1, but not case 2.</p>\n\n<p><strong>Edit:</strong>\nSorry, forgot to mention environment - it's essentially the MS stack:</p>\n\n<ul>\n<li>SQL Server 2005 </li>\n<li>C# 3.5  (ASP.NET)</li>\n<li>Javascript (obviously) and jQuery.</li>\n</ul>\n\n<p>I would like the chokepoint to be the ASP.NET layer - anyone can craft a bad HTTP request.</p>\n\n<p><strong>Edit 2:</strong></p>\n\n<p>Thanks for the links everyone.  Assuming that I can define my list (he content will include many mathematical and programming constructs, so a whitelist is going to be very annoying)  I still have a question here:</p>\n\n<p>What kind of parser will allow me to just remove the \"bad\" parts?  The bad part could be an entire element, but then what about these scripts that reside in the attributes.  I can't remove &lt; a hrefs > willy-nilly.</p>\n",
            "last_activity_date": 1422427378,
            "question_id": 942011,
            "score": 23,
            "tags": [
                "javascript",
                "html",
                "regex",
                "parsing",
                "code-injection"
            ],
            "title": "How to prevent Javascript injection attacks within user-generated HTML"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I can solve that problem - with trigonometry :). </p>\n\n<p>See fiddle: <a href=\"http://jsfiddle.net/nrabinowitz/GQDUS/\">http://jsfiddle.net/nrabinowitz/GQDUS/</a></p>\n\n<p>Basically, calling <code>arc.centroid(d)</code> returns an <code>[x,y]</code> array. You can use the Pythagorean Theorem to calculate the hypotenuse, which is the length of the line from the center of the pie to the arc centroid. Then you can use the calculations <code>x/h * desiredLabelRadius</code> and <code>y/h * desiredLabelRadius</code> to calculate the desired <code>x,y</code> for your label anchor:</p>\n\n<pre><code>.attr(\"transform\", function(d) {\n    var c = arc.centroid(d),\n        x = c[0],\n        y = c[1],\n        // pythagorean theorem for hypotenuse\n        h = Math.sqrt(x*x + y*y);\n    return \"translate(\" + (x/h * labelr) +  ',' +\n       (y/h * labelr) +  \")\"; \n})\n</code></pre>\n\n<p>The only downside here is that <code>text-anchor: middle</code> isn't a great choice anymore - you'd be better off setting the <code>text-anchor</code> based on which side of the pie we're on:</p>\n\n<pre><code>.attr(\"text-anchor\", function(d) {\n    // are we past the center?\n    return (d.endAngle + d.startAngle)/2 &gt; Math.PI ?\n        \"end\" : \"start\";\n})\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>Thanks! </p>\n\n<p>I found a different way to solve this problem, but yours seems better :-) </p>\n\n<p>I created a second arc with a bigger radius and used it to position my labels. </p>\n\n<pre><code>///// Arc Labels ///// \n// Calculate position \nvar pos = d3.svg.arc().innerRadius(r + 20).outerRadius(r + 20); \n\n// Place Labels \narcs.append(\"svg:text\") \n       .attr(\"transform\", function(d) { return \"translate(\" + \n    pos.centroid(d) + \")\"; }) \n       .attr(\"dy\", 5) \n       .attr(\"text-anchor\", \"middle\") \n       .attr(\"fill\", function(d, i) { return colorL(i); }) //Colorarray Labels\n       .attr(\"display\", function(d) { return d.value &gt;= 2 ? null : \"none\"; })  \n       .text(function(d, i) { return d.value.toFixed(0) + \"%\"});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I don't know if this helps but I was able to create arcs where I place text, both, on the arc and just outside it.  In one case, where I place magnitudes of the arc within the arcs, I rotate the text on the arc to match the angle of the arc.  In the other, where I place the text outside of the arc, it is simply horizontal.  The code is located at: <a href=\"http://bl.ocks.org/2295263\" rel=\"nofollow\">http://bl.ocks.org/2295263</a></p>\n\n<p>My Best,</p>\n\n<p>Frank</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Specifically for pie charts, the <code>d3.layout.pie()</code> function will format data with a <code>startAngle</code> and <code>endAngle</code> attributes. The radius can be whatever you desire (how far out from the center you would like to place the label).</p>\n\n<p>Combining these pieces of information with a couple <a href=\"http://en.wikipedia.org/wiki/Trigonometric_functions#Sine.2C_cosine_and_tangent\">trigonometric functions</a> lets you determine the x and y coordinates for labels.</p>\n\n<p>Consider this <a href=\"https://gist.github.com/4290070\">gist</a>/<a href=\"http://bl.ocks.org/4290070\">block</a>.</p>\n\n<p>Regarding the x/y positioning of the text, the magic is in this line (formatted for readability):</p>\n\n<pre><code>.attr(\"transform\", function(d) {\n  return \"translate(\" + \n    ( (radius - 12) * Math.sin( ((d.endAngle - d.startAngle) / 2) + d.startAngle ) ) +\n    \", \" +\n    ( -1 * (radius - 12) * Math.cos( ((d.endAngle - d.startAngle) / 2) + d.startAngle ) ) +\n  \")\";\n })\n</code></pre>\n\n<ul>\n<li><code>((d.endAngle - d.startAngle) / 2) + d.startAngle</code> gives us our angle (theta) in radians.  </li>\n<li><code>(radius - 12)</code> is the arbitrary radius I chose for the position of the text.  </li>\n<li><code>-1 *</code> the y axis is inverted (see below).  </li>\n</ul>\n\n<p>The trig functions used are: <code>cos = adjacent / hypotenuse</code> and <code>sin = opposite / hypotenuse</code>. But there are a couple things we need to consider to make these work with our labels.</p>\n\n<ol>\n<li>0 angle is at 12 o'clock.</li>\n<li>The angle still increases in a clockwise direction.</li>\n<li>The y axis is inverted from the standard cartesian coordinate system. Positive y is in the direction of 6 o'clock - down.</li>\n<li>Positive x is still in the direction of 3 o'clock - right.</li>\n</ol>\n\n<p>That messes things up quite a bit and basically has the effect of swapping <code>sin</code> and <code>cos</code>. Our trig functions then become: <code>sin = adjacent / hypotenuse</code> and <code>cos = opposite / hypotenuse</code>.</p>\n\n<p>Substituting variable names we have <code>sin(radians) = x / r</code> and <code>cos(radians) = y / r</code>. After some algebraic manipulation we can get both functions in terms of x and y respectively <code>r * sin(radians) = x</code> and <code>r * cos(radians) = y</code>. From there, just plug those into the transform/translate attribute.</p>\n\n<p>That'll put the labels in the right location, to make them look fancy, you need some styling logic like this:</p>\n\n<pre><code>.style(\"text-anchor\", function(d) {\n    var rads = ((d.endAngle - d.startAngle) / 2) + d.startAngle;\n    if ( (rads &gt; 7 * Math.PI / 4 &amp;&amp; rads &lt; Math.PI / 4) || (rads &gt; 3 * Math.PI / 4 &amp;&amp; rads &lt; 5 * Math.PI / 4) ) {\n      return \"middle\";\n    } else if (rads &gt;= Math.PI / 4 &amp;&amp; rads &lt;= 3 * Math.PI / 4) {\n      return \"start\";\n    } else if (rads &gt;= 5 * Math.PI / 4 &amp;&amp; rads &lt;= 7 * Math.PI / 4) {\n      return \"end\";\n    } else {\n      return \"middle\";\n    }\n  })\n</code></pre>\n\n<p>This will make the labels from 10:30 o'clock to 1:30 o'clock and from 4:30 o'clock to 7:30 o'clock anchor in the middle (they are above and below), the labels from 1:30 o'clock to 4:30 o'clock anchor on the left (they are to the right), and the labels from 7:30 o'clock to 10:30 o'clock anchor on the right (they are to the left).</p>\n\n<p>The same formulas can be used for any D3 radial graph, the only difference is how you determine the angle.</p>\n\n<p>I hope this helps anyone stumbling across it!</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The following CoffeeScript worked for me to get labels still inside the pie slices, but toward the outer edge:</p>\n\n<pre><code>attr 'transform', (d) -&gt;\n  radius = width / 2 # radius of whole pie chart\n  d.innerRadius = radius * 0.5\n  d.outerRadius = radius * 1.5\n  'translate(' + arc.centroid(d) + ')'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This function calculated the center point of the pie slice for a pie graph. I add a function to get the center point of the arc. \nBelow is image based on my new function .\nrefer to link: <a href=\"https://github.com/mbostock/d3/issues/1124\" rel=\"nofollow\">https://github.com/mbostock/d3/issues/1124</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This was the low-cost answer I was happy with. It pushes all the labels out horizontally (that's where I had the extra space):</p>\n\n<pre><code>g.append(\"text\")\n  .attr(\"transform\", function(d) { \n      var pos = arc.centroid(d); \n      return \"translate(\" + (pos[0] + (.5 - (pos[0] &lt; 0)) * radius) + \",\" + (pos[1]*2) + \")\"; \n  })\n  .attr(\"dy\", \".35em\")\n  .style(\"text-anchor\", function(d) { \n      return arc.centroid(d)[0] &gt; 0 ? \"start\" : \"end\";\n   })\n  .text(function(d) { return d.label; });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>So if you want to go with a very nice looking legend instead of random text hanging around.  I found a pretty good solution to labels.  <a href=\"http://stackoverflow.com/questions/20675617/how-to-add-legend-to-a-pie-chart-using-d3js-and-how-to-centralise-the-pie-chart/22261120#22261120\">how to add legend to a pie chart using D3js? And how to centralise the pie chart?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm new to d3.js and I\"m trying to make a Pie-chart with it.\nI have only one problem: I can't get my labels outside my arcs...\nThe labels are positioned with arc.centroid</p>\n\n<pre><code>arcs.append(\"svg:text\")\n    .attr(\"transform\", function(d) {\n        return \"translate(\" + arc.centroid(d) + \")\";\n    })\n    .attr(\"text-anchor\", \"middle\")\n</code></pre>\n\n<p>Who can help me with this?</p>\n",
            "last_activity_date": 1400862345,
            "question_id": 8053424,
            "score": 20,
            "tags": [
                "javascript",
                "svg",
                "d3.js",
                "label",
                "pie-chart"
            ],
            "title": "Label outside arc (Pie chart) d3.js"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can do it in three steps.</p>\n\n<ol>\n<li>Use a regex global replace to extract all string body contents into a side-table.</li>\n<li>Do your comma translation</li>\n<li>Use a regex global replace to swap the string bodies back</li>\n</ol>\n\n<p>Code below</p>\n\n<pre><code>// Step 1\nvar sideTable = [];\nmyString = myString.replace(\n    /\"(?:[^\"\\\\]|\\\\.)*\"/g,\n    function (_) {\n      var index = sideTable.length;\n      sideTable[index] = _;\n      return '\"' + index + '\"';\n    });\n// Step 2, replace commas with newlines\nmyString = myString.replace(/,/g, \"\\n\");\n// Step 3, swap the string bodies back\nmyString = myString.replace(/\"(\\d+)\"/g,\n    function (_, index) {\n      return sideTable[index];\n    });\n</code></pre>\n\n<p>If you run that after setting</p>\n\n<pre><code>myString = '{:a \"ab,cd, efg\", :b \"ab,def, egf,\", :c \"Conjecture\"}';\n</code></pre>\n\n<p>you should get</p>\n\n<pre><code>{:a \"ab,cd, efg\"\n :b \"ab,def, egf,\"\n :c \"Conjecture\"}\n</code></pre>\n\n<p>It works, because after step 1,</p>\n\n<pre><code>myString = '{:a \"0\", :b \"1\", :c \"2\"}'\nsideTable = [\"ab,cd, efg\", \"ab,def, egf,\", \"Conjecture\"];\n</code></pre>\n\n<p>so the only commas in myString are outside strings.  Step 2, then turns</p>\n\n<pre><code>myString = '{:a \"0\"\\n :b \"1\"\\n :c \"2\"}'\n</code></pre>\n\n<p>and finally we replace the strings that only contain numbers with their original content.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Actually, you can match all instances of a regex not inside quotes for any string, where each opening quote is closed again. Say, as in you example above, you want to match <code>\\+</code>.</p>\n\n<p>The key observation here is, that a word is outside quotes if there are an even number of quotes following it. This can be modeled as a look-ahead assertion:</p>\n\n<pre><code>\\+(?=([^\"]*\"[^\"]*\")*[^\"]*$)\n</code></pre>\n\n<p>Now, you'd like to not count escaped quotes. This gets a little more complicated. Instead of <code>[^\"]*</code> , which advanced to the next quote, you need to consider backslashes as well and use <code>[^\"\\\\]*</code>. After you arrive at either a backslash or a quote, you need to ignore the next character if you encounter a backslash, or else advance to the next unescaped quote. That looks like <code>(\\\\.|\"([^\"\\\\]*\\\\.)*[^\"\\\\]*\")</code>. Combined, you arrive at</p>\n\n<pre><code>\\+(?=([^\"\\\\]*(\\\\.|\"([^\"\\\\]*\\\\.)*[^\"\\\\]*\"))*[^\"]*$)\n</code></pre>\n\n<p>I admit it is a <em>little</em> cryptic. =) </p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>Azmisov, resurrecting this question because you said you were looking for <code>any efficient alternative that could be used in JavaScript</code> and <code>any elegant solutions that would work in most, if not all, cases</code>. (Found your question while doing some research for a <a href=\"http://stackoverflow.com/q/23589174\">regex bounty quest</a>.) </p>\n\n<p>There happens to be a simple, general solution that wasn't mentioned. </p>\n\n<p>Compared with alternatives, the regex for this solution is amazingly simple:</p>\n\n<pre><code>\"[^\"]+\"|(\\+)\n</code></pre>\n\n<p>The idea is that we match but ignore anything within quotes to neutralize that content (on the left side of the alternation). On the right side, we capture all the <code>+</code> that were not neutralized into Group 1, and the replace function examines Group 1. Here is full working code:</p>\n\n<pre><code>&lt;script&gt;\nvar subject = '+bar+baz\"not+or\\\"+or+\\\"this+\"foo+bar+';\nvar regex = /\"[^\"]+\"|(\\+)/g;\nreplaced = subject.replace(regex, function(m, group1) {\n    if (group1 == \"\" ) return m;\n    else return \"#\";\n});\ndocument.write(replaced);\n&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"http://js.do/code/37960\" rel=\"nofollow\">Online demo</a></p>\n\n<p>You can use the same principle to match or split. See the question and article in the reference, which will also point you code samples.</p>\n\n<p>Hope this gives you a different idea of a very general way to do this. :)</p>\n\n<p><strong>Reference</strong> </p>\n\n<ol>\n<li><a href=\"http://stackoverflow.com/q/23589174\">How to match pattern except in situations s1, s2, s3</a></li>\n<li><a href=\"http://www.rexegg.com/regex-best-trick.html\" rel=\"nofollow\">How to match a pattern unless...</a></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>From <a href=\"http://stackoverflow.com/questions/2700953/a-regex-to-match-a-comma-that-isnt-surrounded-by-quotes\">this q/a</a>, I deduced that matching all instances of a given regex <em>not</em> inside quotes, is impossible. That is, it can't match escaped quotes (ex: <code>\"this whole \\\"match\\\" should be taken\"</code>). If there is a way to do it that I don't know about, that would solve my problem.</p>\n\n<p>If not, however, I'd like to know if there is any efficient alternative that could be used in JavaScript. I've thought about it a bit, but can't come with any elegant solutions that would work in most, if not all, cases.</p>\n\n<p>Specifically, I just need the alternative to work with .split() and .replace() methods, but if it could be more generalized, that would be the best.</p>\n\n<p><em>For Example:</em><br/>\nAn input string of:<br/> <code>+bar+baz\"not+or\\\"+or+\\\"this+\"foo+bar+</code><br/>\nreplacing + with #, not inside quotes, would return:<br/> <code>#bar#baz\"not+or\\\"+or+\\\"this+\"foo#bar#</code></p>\n",
            "last_activity_date": 1404398118,
            "question_id": 6462578,
            "score": 20,
            "tags": [
                "javascript",
                "regex",
                "escaping",
                "quotes"
            ],
            "title": "Alternative to regex: match all instances not inside quotes"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Pick and choose:</p>\n\n<ul>\n<li><sup><s><a href=\"https://developer.mozilla.org/en/DOM/window.showModalDialog\"><code>showModalDialog(&lt;String url&gt; [, &lt;object arguments&gt;])</code></a><br>\nOpens a dialog-like window, in which you can load a page within your chrome extension. HTML can be used.</s></sup><br>\nDo <strong>not</strong> use showModalDialog, <a href=\"https://code.google.com/p/chromium/issues/detail?id=345831\">it is going to be removed from Chrome</a>.</li>\n<li><a href=\"https://code.google.com/p/chromium/issues/detail?id=345831\"><code>window.open(&lt;String url&gt; [, &lt;String window_name&gt;[, &lt;String windowFeatures&gt;]])</code></a><br>\nOpens a window, which, unlike the previous method, does not appear as a dialog. The user can minimize the window, and continue with something else.</li>\n<li><a href=\"https://developer.chrome.com/extensions/windows.html#method-create\"><code>chrome.windows.create(&lt;object createData [, &lt;function callback&gt;]&gt;)</code></a><br>\n(Specific to Chrome extensions) Create a new window, with given arguments (size, url, position, ...).</li>\n</ul>\n\n<p>All of these methods allows you (your extension) to open a new window/dialog, and handle the logic from that page. This page should be packaged with your extension.<br>\nSee <a href=\"https://developer.chrome.com/extensions/messaging.html\">Message passing</a> to pass the entered data to your extension.</p>\n\n<h2>Demo</h2>\n\n<p>Tabs within your extension have direct access to the background page using <a href=\"https://developer.chrome.com/extensions/runtime.html#method-getBackgroundPage\"><code>chrome.runtime.getBackgroundPage</code></a>. I'll demonstrate this feature in this demo, as well as a conventional way of message passing:</p>\n\n<h2><code>manifest.json</code></h2>\n\n<pre><code>{\n  \"name\": \"Dialog tester\",\n  \"version\": \"1.0\",\n  \"manifest_version\": 2,\n  \"background\": {\n      \"scripts\": [\"background.js\"],\n      \"persistent\": false\n  },\n  \"content_scripts\": [{\n      \"matches\": [\"&lt;all_urls&gt;\"],\n      \"js\": [\"open-dialog.js\"]\n  }]\n}\n</code></pre>\n\n<h2><code>background.js</code></h2>\n\n<pre><code>// Handle requests for passwords\nchrome.runtime.onMessage.addListener(function(request) {\n    if (request.type === 'request_password') {\n        chrome.tabs.create({\n            url: chrome.extension.getURL('dialog.html'),\n            active: false\n        }, function(tab) {\n            // After the tab has been created, open a window to inject the tab\n            chrome.windows.create({\n                tabId: tab.id,\n                type: 'popup',\n                focused: true\n                // incognito, top, left, ...\n            });\n        });\n    }\n});\nfunction setPassword(password) {\n    // Do something, eg..:\n    console.log(password);\n};\n</code></pre>\n\n<h2><code>open-dialog.js</code></h2>\n\n<pre><code>if (confirm('Open dialog for testing?'))\n    chrome.runtime.sendMessage({type:'request_password'});\n</code></pre>\n\n<h2><code>dialog.html</code></h2>\n\n<pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Dialog test&lt;/title&gt;&lt;/head&gt;&lt;body&gt;\n&lt;form&gt;\n    &lt;input id=\"pass\" type=\"password\"&gt;\n    &lt;input type=\"submit\" value=\"OK\"&gt;\n&lt;/form&gt;\n&lt;script src=\"dialog.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<h2><code>dialog.js</code></h2>\n\n<pre><code>document.forms[0].onsubmit = function(e) {\n    e.preventDefault(); // Prevent submission\n    var password = document.getElementById('pass').value;\n    chrome.runtime.getBackgroundPage(function(bgWindow) {\n        bgWindow.setPassword(password);\n        window.close();     // Close dialog\n    });\n};\n</code></pre>\n\n<h1>Documentation for used methods</h1>\n\n<ul>\n<li><a href=\"https://developer.chrome.com/extensions/runtime.html#method-sendMessage\"><code>chrome.runtime.sendMessage(&lt;request&gt;, &lt;function callback&gt;)</code></a> and <a href=\"https://developer.chrome.com/extensions/runtime.html#event-onMessage\"><code>chrome.runtime.onMessage</code></a><code>.addListener(&lt;function listener&gt;)</code></li>\n<li><a href=\"https://developer.chrome.com/extensions/extension.html#method-getURL\"><code>chrome.extension.getURL(&lt;String path&gt;)</code></a></li>\n<li><a href=\"https://developer.chrome.com/extensions/runtime.html#method-getBackgroundPage\"><code>chrome.runtime.getBackgroundPage(&lt;function callback&gt;)</code></a></li>\n<li><a href=\"https://developer.chrome.com/extensions/tabs.html#method-create\"><code>chrome.tabs.create(&lt;object createData&gt; [, &lt;function callback&gt;])</code></a></li>\n<li><a href=\"https://developer.chrome.com/extensions/windows.html#method-create\"><code>chrome.windows.create(&lt;object createProperties&gt; [, &lt;function callback&gt;])</code></a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 39
                }
            ],
            "body": "<p>I am writing a Chrome extension, and I want a login window to be popped up when users click on the context menu so that user can input username and password. In Chrome extension, I only found <code>chrome.pageAction.setPopup</code> and <code>chrome.browserAction.setPopup</code> can be used to show popup windows,  but they show popups only when the page action's icon or browser action's icon is clicked, not the context menu. Of course, I can use javascript prompt box to do this, but the problem is the password cannot be masked in the prompt box. So I am wondering if there are some other ways to create a popup window in Chrome extension.</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1397215065,
            "question_id": 10340481,
            "score": 8,
            "tags": [
                "javascript",
                "google-chrome-extension",
                "popup"
            ],
            "title": "popup window in Chrome extension"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This is something you solve in the \"controller\", which is the point of logicless templating.</p>\n\n<pre><code>// some function that retreived data through ajax\nfunction( view ){\n\n   if ( !view.avatar ) {\n      // DEFAULTS can be a global settings object you define elsewhere\n      // so that you don't have to maintain these values all over the place\n      // in your code.\n      view.avatar = DEFAULTS.AVATAR;\n   }\n\n   // do template stuff here\n\n}\n</code></pre>\n\n<p>This is actually a LOT better then maintaining image url's or other media that might or might not change in your templates, but takes some getting used to. The point is to unlearn template tunnel vision, an avatar img url is bound to be used in other templates, are you going to maintain that url on X templates or a single DEFAULTS settings object? ;)</p>\n\n<p>Another option is to do the following:</p>\n\n<pre><code>// augment view\nview.hasAvatar = !!view.avatar;\nview.noAvatar = !view.avatar;\n</code></pre>\n\n<p>And in the template:</p>\n\n<pre><code>{{#hasAvatar}}\n    SHOW AVATAR\n{{/hasAvatar}}\n{{#noAvatar}}\n    SHOW DEFAULT\n{{/noAvatar}}\n</code></pre>\n\n<p>But that's going against the whole meaning of logicless templating. If that's what you want to do, you want logical templating and you should not use Mustache, though do give it yourself a fair chance of learning this concept ;)</p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>Your <em>else</em> statement should look like this (note the <code>^</code>):</p>\n\n<pre><code>{{^avatar}}\n ...\n{{/avatar}}\n</code></pre>\n\n<p>In mustache this is called 'Inverted sections'.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This is how you do if/else in Mustache (perfectly supported):</p>\n\n<pre><code>{{#repo}}\n  &lt;b&gt;{{name}}&lt;/b&gt;\n{{/repo}}\n{{^repo}}\n  No repos :({\n{{/repo}}\n</code></pre>\n\n<p>Or in your case:</p>\n\n<pre><code>{{#author}}\n  {{#avatar}}\n    &lt;img src=\"{{avatar}}\"/&gt;\n  {{/avatar}}\n  {{^avatar}}\n    &lt;img src=\"/images/default_avatar.png\" height=\"75\" width=\"75\" /&gt;\n  {{/avatar}}\n{{/author}}\n</code></pre>\n\n<p>Look for inverted sections in the docs: <a href=\"https://github.com/janl/mustache.js\">https://github.com/janl/mustache.js</a></p>\n",
                    "is_accepted": true,
                    "score": 235
                }
            ],
            "body": "<p>It seems rather odd that I can't figure how to do this in mustache. Is it supported?</p>\n\n<p>This is my sad attempt at trying:</p>\n\n<pre><code>    {{#author}}\n      {{#avatar}}\n        &lt;img src=\"{{avatar}}\"/&gt;\n      {{/avatar}}\n      {{#!avatar}}\n        &lt;img src=\"/images/default_avatar.png\" height=\"75\" width=\"75\" /&gt;\n      {{/avatar}}\n    {{/author}}\n</code></pre>\n\n<p>This obviously isn't right, but the documentation doesn't mention anything like this. The word \"else\" isn't even mentioned :(</p>\n\n<p>Also, why is mustache designed this way? Is this sort of thing considered bad? Is it trying to force me to set the default value in the model itself? What about the cases where that isn't possible?</p>\n",
            "last_activity_date": 1392594378,
            "question_id": 6027525,
            "score": 109,
            "tags": [
                "javascript",
                "templates",
                "mustache"
            ],
            "title": "How do I accomplish an if/else in mustache.js?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>All  hover is doing behind the scenes is binding to the mouseover and mouseout property.  I would bind and unbind your functions from those events individually.</p>\n\n<p>For example, say you have the following html:</p>\n\n<pre><code>&lt;a href=\"#\" class=\"myLink\"&gt;Link&lt;/a&gt;\n</code></pre>\n\n<p>then your jQuery would be:</p>\n\n<pre><code>$(document).ready(function() {\n\n  function mouseOver()\n  {\n    $(this).css('color', 'red');\n  }\n  function mouseOut()\n  {\n    $(this).css('color', 'blue');\n  }\n\n  // either of these might work\n  $('.myLink').hover(mouseOver, mouseOut); \n  $('.myLink').mouseover(mouseOver).mouseout(mouseOut); \n  // otherwise use this\n  $('.myLink').bind('mouseover', mouseOver).bind('mouseout', mouseOut);\n\n\n  // then to unbind\n  $('.myLink').click(function(e) {\n    e.preventDefault();\n    $('.myLink').unbind('mouseover', mouseOver).unbind('mouseout', mouseOut);\n  });\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>$(this).unbind('mouseenter').unbind('mouseleave')</code></p>\n\n<p>or more succinctly (thanks <em>@Chad Grant</em>):</p>\n\n<p><code>$(this).unbind('mouseenter mouseleave')</code></p>\n",
                    "is_accepted": true,
                    "score": 119
                },
                {
                    "body": "<p>Unbind the <code>mouseenter</code> and <code>mouseleave</code> events individually or unbind all events on the element(s).</p>\n\n<pre><code>$(this).unbind('mouseenter').unbind('mouseleave');\n</code></pre>\n\n<p>or</p>\n\n<pre><code>$(this).unbind();  // assuming you have no other handlers you want to keep\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Actually, the <a href=\"http://docs.jquery.com/Events/hover#overout\">jQuery documentation</a> has a more simple approach than the chained examples shown above (although they'll work just fine):</p>\n\n<pre><code>$(\"#myElement\").unbind('mouseenter mouseleave');\n</code></pre>\n\n<p>As of jQuery 1.7, you are also able use <a href=\"http://api.jquery.com/on/\"><code>$.on()</code></a> and <a href=\"http://api.jquery.com/off/\"><code>$.off()</code></a> for event binding, so to unbind the hover event, you would use the simpler and tidier:</p>\n\n<pre><code>$('#myElement').off('hover');\n</code></pre>\n\n<p>The pseudo-event-name \"hover\" <a href=\"http://api.jquery.com/on/#additional-notes\">is used as a shorthand</a> for \"mouseenter mouseleave\" but was handled differently in earlier jQuery versions; requiring you to expressly remove each of the literal event names. Using <code>$.off()</code> now allows you to drop both mouse events using the same shorthand.</p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>unbind() doesn't work with hardcoded inline events.</p>\n\n<p>So, for example, if you want to unbind the mouseover event from\n<code>&lt;div id=\"some_div\" onmouseover=\"do_something();\"&gt;</code>, I found that <code>$('#some_div').attr('onmouseover','')</code> is a quick and dirty way to achieve it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I found this works as second argument (function) to .hover()</p>\n\n<pre><code>$('#yourId').hover(\n\tfunction(){\n\t\t// Your code goes here\n\t},\n\tfunction(){\n\t\t$(this).unbind()\n\t}\n});\n</code></pre>\n\n<p>The first function (argument to .hover()) is mouseover and will execute your code. The second argument is mouseout which will unbind the hover event from #yourId.\nYour code will be executed only once.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another solution is <strong>.die()</strong> for events who that attached with <strong>.live()</strong>.</p>\n\n<p>Ex.:</p>\n\n<pre><code>// attach click event for &lt;a&gt; tags\n$('a').live('click', function(){});\n\n// deattach click event from &lt;a&gt; tags\n$('a').die('click');\n</code></pre>\n\n<p>You can find a good refference here: <a href=\"http://www.alfajango.com/blog/exploring-jquery-live-and-die/\" rel=\"nofollow\">Exploring jQuery .live() and .die()</a></p>\n\n<p><em>( Sorry for my english :\"> )</em></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How do I unbind \"hover\" in jQuery?</p>\n\n<p>This does not work:</p>\n\n<pre><code>$(this).unbind('hover');\n</code></pre>\n",
            "last_activity_date": 1320881181,
            "question_id": 805133,
            "score": 48,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How do I unbind &quot;hover&quot; in jQuery?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>By the time the image is loaded, the renderer has already drawn the scene, hence it is too late. The solution is to change</p>\n\n<pre><code>texture = THREE.ImageUtils.loadTexture('crate.gif'),\n</code></pre>\n\n<p>into</p>\n\n<pre><code>texture = THREE.ImageUtils.loadTexture('crate.gif', {}, function() {\n    renderer.render(scene);\n}),\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>Andrea solution is absolutely right, I will just write another implementation based on the same idea.\nIf you took a look at the THREE.ImageUtils.loadTexture() <a href=\"https://github.com/mrdoob/three.js/blob/master/src/extras/ImageUtils.js\">source</a> you will find it uses the javascript Image object. The $(window).load event is fired after all Images are loaded ! so at that event we can render our scene with the textures already loaded...</p>\n\n<ul>\n<li><p>CoffeeScript</p>\n\n<pre><code>$(document).ready -&gt;\n\n    material = new THREE.MeshLambertMaterial(map: THREE.ImageUtils.loadTexture(\"crate.gif\"))\n\n    sphere   = new THREE.Mesh(new THREE.SphereGeometry(radius, segments, rings), material)\n\n    $(window).load -&gt;\n        renderer.render scene, camera\n</code></pre></li>\n<li><p>JavaScript</p>\n\n<pre><code>$(document).ready(function() {\n\n    material = new THREE.MeshLambertMaterial({ map: THREE.ImageUtils.loadTexture(\"crate.gif\") });\n\n    sphere = new THREE.Mesh(new THREE.SphereGeometry(radius, segments, rings), material);\n\n    $(window).load(function() {\n        renderer.render(scene, camera);\n    });\n});\n</code></pre></li>\n</ul>\n\n<p>Thanks...</p>\n",
                    "is_accepted": false,
                    "score": 17
                }
            ],
            "body": "<p>I am starting with THREE.js, and I am trying to draw a rectangle with a texture on it, lit by a single source of light. I think this is as simple as it gets (HTML omitted for brevity):</p>\n\n<pre><code>function loadScene() {\n    var world = document.getElementById('world'),\n        WIDTH = 1200,\n        HEIGHT = 500,\n        VIEW_ANGLE = 45,\n        ASPECT = WIDTH / HEIGHT,\n        NEAR = 0.1,\n        FAR = 10000,\n\n        renderer = new THREE.WebGLRenderer(),\n        camera = new THREE.Camera(VIEW_ANGLE, ASPECT, NEAR, FAR),\n        scene = new THREE.Scene(),\n        texture = THREE.ImageUtils.loadTexture('crate.gif'),\n        material = new THREE.MeshBasicMaterial({map: texture}),\n        // material = new THREE.MeshPhongMaterial({color: 0xCC0000});\n        geometry = new THREE.PlaneGeometry(100, 100),\n        mesh = new THREE.Mesh(geometry, material),\n        pointLight = new THREE.PointLight(0xFFFFFF);\n\n    camera.position.z = 200;    \n    renderer.setSize(WIDTH, HEIGHT);\n    scene.addChild(mesh);\n    world.appendChild(renderer.domElement);\n    pointLight.position.x = 50;\n    pointLight.position.y = 50;\n    pointLight.position.z = 130;\n    scene.addLight(pointLight); \n    renderer.render(scene, camera);\n}\n</code></pre>\n\n<p>The problem is, I cannot see anything. If I change the material and use the commented one, a square appears as I would expect. Note that</p>\n\n<ul>\n<li>The texture is 256x256, so its sides are power of two</li>\n<li>The function is actually called when the body is loaded; indeed it works with a different material.</li>\n<li>It does not work even if I serve the file from a webserver, so it is not an issue of cross-domain policy not allowing to load the image.</li>\n</ul>\n\n<p>What I am I doing wrong?</p>\n",
            "last_activity_date": 1376146736,
            "question_id": 7919516,
            "score": 44,
            "tags": [
                "javascript",
                "3d",
                "webgl",
                "three.js"
            ],
            "title": "Using textures in THREE.js"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The proprietary variations of <code>user-select</code> will work in most modern browsers:</p>\n\n<pre><code>*.unselectable {\n   -moz-user-select: -moz-none;\n   -khtml-user-select: none;\n   -webkit-user-select: none;\n\n   /*\n     Introduced in IE 10.\n     See http://ie.microsoft.com/testdrive/HTML5/msUserSelect/\n   */\n   -ms-user-select: none;\n   user-select: none;\n}\n</code></pre>\n\n<p>For IE &lt; 10 and Opera, you will need to use the <code>unselectable</code> attribute of the element you wish to be unselectable. You can set this using an attribute in HTML:</p>\n\n<pre><code>&lt;div id=\"foo\" unselectable=\"on\" class=\"unselectable\"&gt;...&lt;/div&gt;\n</code></pre>\n\n<p>Sadly this property isn't inherited, meaning you have to put an attribute in the start tag of every element inside the <code>&lt;div&gt;</code>. If this is a problem, you could instead use JavaScript to do this recursively for an element's descendants:</p>\n\n<pre><code>function makeUnselectable(node) {\n    if (node.nodeType == 1) {\n        node.setAttribute(\"unselectable\", \"on\");\n    }\n    var child = node.firstChild;\n    while (child) {\n        makeUnselectable(child);\n        child = child.nextSibling;\n    }\n}\n\nmakeUnselectable(document.getElementById(\"foo\"));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 101
                },
                {
                    "body": "<p>Have you got some sort of transparent image that your selecting? Usually the \"cant drop\" icon appears when you drag an image. Otherwise it normally selects text when you drag. If so you might have to put the image behind everything using z-index.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I use cancelBubble=true and stopPropagetion() in the mouse down and move handlers.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It's seem CSS user-select don't prevent image drag and drop... so..</p>\n\n<p>HTML :</p>\n\n<pre><code>&lt;img src=\"ico.png\" width=\"20\" height=\"20\" alt=\"\" unselectable=\"on\" /&gt; Blabla bla blabla\n</code></pre>\n\n<p>CSS :</p>\n\n<pre><code>* {\n     user-select: none;\n    -khtml-user-select: none;\n    -o-user-select: none;\n    -moz-user-select: -moz-none;\n    -webkit-user-select: none;\n}\n\n::selection { background: transparent;color:inherit; }\n::-moz-selection { background: transparent;color:inherit; }\n</code></pre>\n\n<p>JS :</p>\n\n<pre><code>$(function(){\n    $('*:[unselectable=on]').mousedown(function(event) {\n        event.preventDefault();\n        return false;\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><code>event.preventDefault()</code> seems to do the trick (tested in IE7-9 and Chrome) :</p>\n\n<pre><code>jQuery('#slider').on('mousedown', function (e) {\n    var handler, doc = jQuery(document);\n    e.preventDefault();\n    doc.on('mousemove', handler = function (e) {\n        e.preventDefault();\n        // refresh your screen here\n    });\n    doc.one('mouseup', function (e) {\n        doc.off('mousemove', handler);\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a div on a HTML page and whenever I press the mouse and move it, it will show that \"can't drop\" cursor like it selects something. Is there a way to disable selection? I tried CSS user-select with none without success.</p>\n",
            "last_activity_date": 1369236582,
            "question_id": 2326004,
            "score": 38,
            "tags": [
                "javascript",
                "html",
                "selection"
            ],
            "title": "Prevent selection in HTML"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I think the closest you could get is to render into a <code>canvas</code>, call <code>toDataUrl()</code> on it to retrieve the contents as an image, and assignment that result to the desired element's <code>background-image</code> property. This will only give a static background, though. If you want to be able to further update the <code>canvas</code>, however, then you'll need to instead position the canvas behind another element, as Johan has already suggested.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>This has been possible in WebKit since 2008, see <strong><a href=\"http://webkit.org/blog/176/css-canvas-drawing/\" rel=\"nofollow\">here</a></strong>.</p>\n\n<pre><code>&lt;html&gt;\n &lt;head&gt;\n &lt;style&gt;\n div { background: -webkit-canvas(squares); width:600px; height:600px; border:2px solid black }\n &lt;/style&gt;\n\n &lt;script type=\"application/x-javascript\"&gt;\nfunction draw(w, h) {\n var ctx = document.getCSSCanvasContext(\"2d\", \"squares\", w, h);\n\n ctx.fillStyle = \"rgb(200,0,0)\";\n ctx.fillRect (10, 10, 55, 50);\n\n ctx.fillStyle = \"rgba(0, 0, 200, 0.5)\";\n ctx.fillRect (30, 30, 55, 50);\n}\n &lt;/script&gt;\n &lt;/head&gt;\n &lt;body onload=\"draw(300, 300)\"&gt;\n   &lt;div&gt;&lt;/div&gt;\n &lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n\n<p>Currently, Firefox 4 contains a feature, which allows you to use any element (including canvas) as a CSS background, in this fashion:</p>\n\n<pre><code>&lt;p id=\"myBackground1\" style=\"background: darkorange; color: white;  width: 300px; height: 40px;\"&gt;\n  This element will be used as a background.\n&lt;/p&gt;\n&lt;p style=\"background: -moz-element(#myBackground1); padding: 20px 10px; font-weight: bold;\"&gt;\n  This box uses #myBackground1 as its background!\n&lt;/p&gt;\n</code></pre>\n\n<p>See <a href=\"http://hacks.mozilla.org/2010/08/mozelement/\" rel=\"nofollow\"><strong>Mozilla hacks</strong></a> for specifics.</p>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>I've been triying to achieve this same feature past weeks, the best solution I've found its the same proposed by <strong>bcat</strong>:</p>\n\n<ol>\n<li>Render canvas (visible or hidden)  </li>\n<li>Get canvas image with \"canvas.toDataURL\"  </li>\n<li>Asign this image-data as background image for the element (I use MooTools)</li>\n</ol>\n\n<p>The bad news, <strong>for static images works great</strong>, but with animation in Chrome sometimes <strong>\"blinks\"</strong>, and in Firefox <strong>blinks-a-lot</strong>. Maybe someone knows a workaround to get rid of this \"nasty blinking\".</p>\n\n<p>Best regards.<br>\nP:.  </p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Asign canvas to element background&lt;/title&gt;\n&lt;script type=\"text/javascript\" src=\"/js/mootools.1.2.4.js\"&gt;&lt;/script&gt;\n&lt;style type=\"text/css\"&gt;\n* {\n    outline:0;\n    padding:0;\n    margin:0;\n    border:0;\n}\nbody {\n    color:#fff;\n    background:#242424;\n}\n&lt;/style&gt;\n&lt;script&gt;\nwindow.addEvent('domready',function() {\n\n//GET BODY\nvar mibodi = $('mibodi');\nvar viewportSize = mibodi.getSize();\n\n//GET CANVAS\nvar micanvas = $('micanvas');\nvar ctx = micanvas.getContext('2d');\nvar playAnimation = true;\n\n//GET DIV\nvar midiv = $('midiv');\n\n//VARIABLES\nvar rotate_angle = 0;\nvar rotate_angle_inc = 0.05;\n\n//FUNCI\u00d3N DE INICIALIZACI\u00d3N\nfunction init(){\n\n    ctx.clearRect (0, 0, 512, 512); //CLEAR CANVAS\n    ctx.fillStyle = 'rgba(128,128,128,1)';\n    ctx.strokeStyle = 'rgba(255,255,255,1)';\n\n    if (playAnimation) {\n    setInterval(draw,100);//\n  }\n\n} //INIT\n\n//FUNCI\u00d3N DE DIBUJADO\nfunction draw() {\n\n    //CLEAR BACKGROUND\n    ctx.clearRect (0, 0, 512, 512);\n\n    //DRAW ROTATING RECTANGLE\n    ctx.save();\n    ctx.translate( micanvas.width / 2, micanvas.height / 2 );\n    ctx.rotate( rotate_angle );\n    ctx.fillRect(0, 0, 100, 100);\n    ctx.restore();\n\n    //GET CANVAS IMAGE\n    var dataURL = micanvas.toDataURL(\"image/png\");\n\n    //SET IMAGE AS BACKGROUND OF THE ELEMENTS\n    midiv.setStyle('background-image', 'url(' + dataURL + ')');\n    mibodi.setStyle('background-image', 'url(' + dataURL + ')');\n\n    //ANGLE INCREMENT\n    rotate_angle = rotate_angle + rotate_angle_inc;\n\n} //DRAW\n\n//BEGIN TO DRAW\ninit();\n\n});//domeady\n\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body id=\"mibodi\" &gt;\n\n&lt;canvas id=\"micanvas\" width=\"512\" height=\"512\" style=\"float:left;\" style=\"display:none;\"&gt;\nEste texto se muestra para los navegadores no compatibles con canvas.\n&lt;br&gt;\nPor favor, utiliza Firefox, Chrome, Safari u Opera.\n&lt;/canvas&gt;\n\n&lt;div id=\"midiv\" style=\"width:512px;height:512px;background:#f00;float:left;\"&gt;\n    Sample\n&lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><strong>Yes!!!! You can put a canvas in CSS background.</strong></p>\n\n<pre><code>var Canvas = document.createElement(\"canvas\");\n... do your canvas drawing....\n$('body').css({'background-image':\"url(\" + Canvas.toDataURL(\"image/png\")+ \")\" });\n</code></pre>\n\n<p>I know this is a pretty old question but I felt like posting my answer for people who'd visit this page because this is the correct answer, in just one line of code, using the <code>.toDataURL</code> function. <strong>It works in every browser that supports canvas.</strong></p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>Try <code>-moz-element(#id)</code> for CSS <code>background</code> in Firefox.</p>\n\n<p>And <code>-webkit-canvas(name)</code> for CSS <code>background</code> in <strong>WebKit</strong> based browsers.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Can I use the canvas element as a css background?</p>\n",
            "last_activity_date": 1422018378,
            "question_id": 3397334,
            "score": 34,
            "tags": [
                "javascript",
                "css",
                "canvas"
            ],
            "title": "Use &lt;canvas&gt; as a CSS background"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Well, you can use the <code>typeof</code> operator, and if the identifier doesn't exist in any place of the scope chain, it will <em>not</em> throw a <code>ReferenceError</code>, it will just return <code>\"undefined\"</code>:</p>\n\n<pre><code>if (typeof ModuleName != 'undefined') {\n  //...\n}\n</code></pre>\n\n<p>Remember also that the <code>this</code> value on Global code, refers to the global object, meaning that if your <code>if</code> statement is on the global context, you can simply check <code>this.ModuleName</code>.</p>\n\n<p>About the <code>(function () { return this; }());</code> technique, you are right, on strict mode the <code>this</code> value will simply be <code>undefined</code>.</p>\n\n<p>Under strict mode there are two ways to get a reference to the Global object, no matter where you are:</p>\n\n<ul>\n<li><p>Through the <code>Function</code> constructor:</p>\n\n<pre><code>var global = Function('return this')();\n</code></pre></li>\n</ul>\n\n<p>Functions created with the <code>Function</code> constructor don't inherit the strictness of the caller, they are strict only if they start their body with the <code>'use strict'</code> directive, otherwise they are non-strict.</p>\n\n<p>This method is compatible with any ES3 implementation.</p>\n\n<ul>\n<li><p>Through an <em>indirect <code>eval</code> call</em>, for example:</p>\n\n<pre><code>\"use strict\";\nvar get = eval;\nvar global = get(\"this\");\n</code></pre></li>\n</ul>\n\n<p>The above will work because in ES5, indirect calls to <code>eval</code>, use the <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_10.4.1.1\">global environment</a> as both, the variable environment and lexical environment for the eval code.</p>\n\n<p>See details on <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_10.4.2\">Entering Eval Code</a>, Step 1.</p>\n\n<p>But be aware that the last solution will not work on ES3 implementations, because an indirect call to <code>eval</code> on ES3 will use the variable and lexical environments of the caller as the environments for the eval code itself.</p>\n\n<p>And at last, you may find useful to detect if strict mode is supported:</p>\n\n<pre><code>var isStrictSupported = (function () { \"use strict\"; return !this; })();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>Here you go :)</p>\n\n<pre><code>var globalObject = (function(){return this;})();\n</code></pre>\n\n<p>This should work from anywhere, for example from within another closure.</p>\n\n<p>Edit - just read your post more carefully and saw the part about ES5 strict mode. Can anyone shed some more light on that? This has been the accepted way to get the the global object for as long as I can remember... I sure hope it doesn't end up getting broken.</p>\n\n<p>Edit 2 - CMS' answer has more info on ES5 strict mode's treatment of <code>this</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had this problem before, I'm not happy with the solution, but it works and passes JSLint (assume browser|assume node):</p>\n\n<pre><code>\"use strict\";\nvar GLOBAL;\ntry{\n    /*BROWSER*/\n    GLOBAL = window;\n}catch(e){\n    /*NODE*/\n    GLOBAL = global;\n}\nif(GLOBAL.GLOBAL !== GLOBAL){\n    throw new Error(\"library cannot find the global object\");\n}\n</code></pre>\n\n<p>once you have the GLOBAL var you can do your checking, and at the end of the script type</p>\n\n<pre><code>delete GLOBAL.GLOBAL;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h1>Crazy one-line solution:</h1>\n\n<pre><code>var global = Function('return this')() || (42, eval)('this');\n</code></pre>\n\n<p>.</p>\n\n<p>.</p>\n\n<p>.</p>\n\n<h2>Works</h2>\n\n<ul>\n<li>in every environment (that I tested)</li>\n<li>in strict mode</li>\n<li>and even in a nested scope</li>\n</ul>\n\n<h2>Update 2014-Sept-23</h2>\n\n<p>This can now fail if HTTP headers in the latest browsers explicitly forbid eval.</p>\n\n<p>A workaround would be to try / catch the original solution as only browsers are known to run this type of subset of JavaScript.</p>\n\n<pre><code>var global;\n\ntry {\n  global = Function('return this')() || (42, eval)('this');\n} catch(e) {\n  global = window;\n}\n</code></pre>\n\n<p>```</p>\n\n<h2>Example:</h2>\n\n<pre><code>(function () {\n\n  var global = Function('return this')() || (42, eval)('this');\n  console.log(global);\n\n  // es3 context is `global`, es5 is `null`\n  (function () {\n    \"use strict\";\n\n    var global = Function('return this')() || (42, eval)('this');\n    console.log(global);\n\n  }());\n\n  // es3 and es5 context is 'someNewContext'\n  (function () {\n\n    var global = Function('return this')() || (42, eval)('this');\n    console.log(global);\n\n  }).call('someNewContext');\n\n}());\n</code></pre>\n\n<h2>Tested:</h2>\n\n<ul>\n<li>Chrome v12</li>\n<li>Node.JS v0.4.9</li>\n<li>Firefox v5</li>\n<li>MSIE 8</li>\n</ul>\n\n<h2>Why:</h2>\n\n<p>In short: it's some weird quirk. See the comments below (or the post above)</p>\n\n<p>In <code>strict mode</code> <code>this</code> is never the global, but also in <code>strict mode</code> <code>eval</code> operates in a separate context in which <code>this</code> <em>is</em> always the global.</p>\n\n<p>In non-strict mode <code>this</code> is the current context. If there is no current context, it assumes the global. An anonymous function has no context and hence in non-strict mode assumes the global.</p>\n\n<p>Sub Rant:</p>\n\n<p>There's a silly misfeature of JavaScript that 99.9% of the time just confuses people called the 'comma operator'.</p>\n\n<pre><code>var a = 0, b = 1;\na = 0, 1;          // 1\n(a = 0), 1;        // 1\na = (0, 1);        // 1\na = (42, eval);    // eval\na('this');         // the global object\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I think this is pretty much okay in rhino, node, browser and with <em>jslint</em> (without additional workaround flags) - would this help? Am I missing something?</p>\n\n<pre><code>x = 1;\n(function(global){\n    \"use strict\";\n    console.log(global.x);\n}(this));\n</code></pre>\n\n<p>Though I myself tend to use the window object and if I do need headless testing I can use env.js (rhino) or Phantom (node).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is not passing jslint: <code>var Fn = Function, global = Fn('return this')();</code></p>\n\n<p>Try it yourself: <a href=\"http://www.jslint.com/\" rel=\"nofollow\">http://www.jslint.com/</a></p>\n\n<p>this will: <code>var Fn = Function, global = new Fn('return this')();</code></p>\n\n<p>But effectively those are same thing according to <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\" rel=\"nofollow\">MDN</a>: </p>\n\n<blockquote>\n  <p>Invoking the Function constructor as a function (without using the new operator) has the same effect as invoking it as a constructor.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Why just don't simply use this in a global scope as param to a wrapper function, as follows?</p>\n\n<pre><code>(function (global) {\n    'use strict';\n    // Code\n}(this));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's what I am using:</p>\n\n<pre><code>\"use strict\";\nif(this &amp;&amp; this.hasOwnProperty &amp;&amp; !this.hasOwnProperty('globalScope')){\n    try {\n        globalScope = Function('return this')();\n    }catch(ex){\n        if(this.hasOwnProperty('window')){\n            globalScope = window;\n        }else{\n            throw 'globalScope not found';\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to check in a script if a certain other module is already loaded.</p>\n\n<pre><code>if (ModuleName) {\n    // extend this module\n}\n</code></pre>\n\n<p>But if <code>ModuleName</code> doesn't exist, that <code>throw</code>s.</p>\n\n<p>If I knew what the <code>Global Object</code> was I could use that. </p>\n\n<pre><code>if (window.ModuleName) {\n    // extend this module\n}\n</code></pre>\n\n<p>But since I want my module to work with both browsers and <code>node</code>, <code>rhino</code>, etc., I can't assume <code>window</code>.</p>\n\n<p>As I understand it, this doesn't work in ES 5 with <code>\"use strict\"</code>;</p>\n\n<pre><code>var MyGLOBAL = (function () {return this;}()); // MyGlobal becomes null\n</code></pre>\n\n<p>This will also fail with a thrown exception</p>\n\n<pre><code>var MyGLOBAL = window || GLOBAL\n</code></pre>\n\n<p>So it seems like I'm left with </p>\n\n<pre><code>try {\n    // Extend ModuleName\n} \ncatch(ignore) {\n}\n</code></pre>\n\n<p>None of these cases will pass JSLint.</p>\n\n<p>Am I missing anything?</p>\n",
            "last_activity_date": 1423132608,
            "question_id": 3277182,
            "score": 33,
            "tags": [
                "javascript",
                "global"
            ],
            "title": "How to get the global object in JavaScript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>In general; circular references are the cause of many problems.\nI remember IE 6 (not sure if it applies to 7) leaking quite badly with XMLHTTP... setting onreadystatechange = null once it was finished with fixed it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is a nice article about <a href=\"http://www.javascriptkit.com/javatutors/closuresleak/index.shtml\" rel=\"nofollow\"><strong>JavaScript and memory leaks</strong></a>. It does not specific about on browser, it rather describes the whole problematic of memory leaks and JavaScript.</p>\n\n<ul>\n<li><a href=\"http://www.javascriptkit.com/javatutors/closuresleak/index.shtml\" rel=\"nofollow\">JavaScript and memory leaks</a></li>\n<li><a href=\"http://www.javascriptkit.com/javatutors/closuresleak/index2.shtml\" rel=\"nofollow\">Introducing the closure</a></li>\n<li><a href=\"http://www.javascriptkit.com/javatutors/closuresleak/index3.shtml\" rel=\"nofollow\">More leakage patterns</a></li>\n<li><a href=\"http://www.javascriptkit.com/javatutors/closuresleak/index4.shtml\" rel=\"nofollow\">Conclusion</a></li>\n</ul>\n\n<p>I think it is a better approach to be as browser unspecific as possible insted of optimizing for a few browsers, when developing a website for the public.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Here is a classic memory leak in IE:-</p>\n\n<pre><code>function body_onload()\n{\n    var elem = document.getElementById('someElementId');\n    // do stuff with elem\n    elem.onclick = function() {\n        //Some code that doesn't need the elem variable\n    }\n }\n</code></pre>\n\n<p>After this code has run there is circular reference because an element has a function assigned its onclick event which references a scope object which in turn holds a reference to element.</p>\n\n<p>someElement->onclick->function-scope->elem->someElement</p>\n\n<p>In IE DOM elements are COM based reference counting objects that the Javascript GC can't cleanup.</p>\n\n<p>The addition of a final line in the above code would clean it up:-</p>\n\n<pre><code>var elem = null;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>You can check <a href=\"http://msdn.microsoft.com/en-us/library/bb250448(VS.85).aspx\" rel=\"nofollow\">this</a> MSDN article for Internet Explorer memory leak patterns. Also there are some tools for detecting memory leaks:</p>\n\n<ul>\n<li><a href=\"http://home.wanadoo.nl/jsrosman/\" rel=\"nofollow\">sIEve</a></li>\n<li><a href=\"http://blogs.msdn.com/gpde/pages/javascript-memory-leak-detector.aspx\" rel=\"nofollow\">JavaScript memory leak detector</a></li>\n<li><a href=\"https://addons.mozilla.org/en-US/firefox/addon/2490\" rel=\"nofollow\">Leak Monitor FireFox plugin</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You're dealing with 2 kinds of objects (and 2 garbage collectors), javascript and DOM objects, which can reference each other (the circular reference), and then neither GC can take care of all its objects even when the page unloads.  Here's a good description:</p>\n\n<p><a href=\"http://getben.com/archive/2006/05/30/Resolving-JavaScript-Memory-Leaks.aspx\" rel=\"nofollow\">http://getben.com/archive/2006/05/30/Resolving-JavaScript-Memory-Leaks.aspx</a></p>\n\n<p><a href=\"http://www.josh-davis.org/2007/04/11/javascript-built-in-listeners-and-memory-leaks/\" rel=\"nofollow\">http://www.josh-davis.org/2007/04/11/javascript-built-in-listeners-and-memory-leaks/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Do you know what may cause memory leaks in JavaScript?\nI am interested in browsers: IE 7, FireFox 3, Safari 3</p>\n",
            "last_activity_date": 1223132519,
            "question_id": 170415,
            "score": 19,
            "tags": [
                "javascript",
                "memory-leaks"
            ],
            "title": "Do you know what may cause memory leaks in JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<ol>\n<li><p>Your request should be to the server, NOT the server.js file which instantiates it. So, the request should look something like this: <code>xmlhttp.open(\"GET\",\"http://localhost:8001/\", true);</code> Also, you are trying to serve the front-end (index.html) AND serve AJAX requests at the same URI. To accomplish this, you are going to have to introduce logic to your server.js that will differentiate between your AJAX requests and a normal http access request. To do this, you'll want to either introduce GET/POST data (i.e. call <code>http://localhost:8001/?getstring=true</code>) or use a different path for your AJAX requests (i.e. call <code>http://localhost:8001/getstring</code>). On the server end then, you'll need to examine the request object to determine what to write on the response. For the latter option, you need to use the 'url' module to parse the request. </p></li>\n<li><p>You are correctly calling <code>listen()</code> but incorrectly writing the response. First of all, if you wish to serve index.html when navigating to <a href=\"http://localhost:8001/\">http://localhost:8001/</a>, you need to write the contents of the file to the response using <code>response.write()</code> or <code>response.end()</code>.  First, you need to include <code>fs=require('fs')</code> to get access to the filesystem. Then, you need to actually serve the file. </p></li>\n<li><p>XMLHttpRequest needs a callback function specified if you use it asynchronously (third parameter = true, as you have done) AND want to do something with the response. The way you have it now, <code>string</code> will be <code>undefined</code> (or perhaps <code>null</code>), because that line will execute before the AJAX request is complete (i.e. the responseText is still empty). If you use it synchronously (third parameter = false), you can write inline code as you have done. This is not recommended as it locks the browser during the request. Asynchronous operation is usually used with the onreadystatechange function, which can handle the response once it is complete. You need to learn the basics of XMLHttpRequest. Start <strong><a href=\"https://developer.mozilla.org/en/XMLHttpRequest\">here</a></strong>. </p></li>\n</ol>\n\n<p>Here is a simple implementation that incorporates all of the above:</p>\n\n<p>server.js:</p>\n\n<pre><code>var http = require('http'),\n      fs = require('fs'),\n     url = require('url'),\n choices = [\"hello world\", \"goodbye world\"];\n\nhttp.createServer(function(request, response){\n    var path = url.parse(request.url).pathname;\n    if(path==\"/getstring\"){\n        console.log(\"request recieved\");\n        var string = choices[Math.floor(Math.random()*choices.length)];\n        console.log(\"string '\" + string + \"' chosen\");\n        response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n        response.end(string);\n        console.log(\"string sent\");\n    }else{\n        fs.readFile('./index.html', function(err, file) {  \n            if(err) {  \n                // write an error response or nothing here  \n                return;  \n            }  \n            response.writeHead(200, { 'Content-Type': 'text/html' });  \n            response.end(file, \"utf-8\");  \n        });\n    }\n}).listen(8001);\nconsole.log(\"server initialized\");\n</code></pre>\n\n<p>frontend (part of index.html):</p>\n\n<pre><code>function newGame()\n{\n   guessCnt=0;\n   guess=\"\";\n   server();\n   displayHash();\n   displayGuessStr();\n   displayGuessCnt();\n}\n\nfunction server()\n{\n   xmlhttp = new XMLHttpRequest();\n   xmlhttp.open(\"GET\",\"http://localhost:8001/getstring\", true);\n   xmlhttp.onreadystatechange=function(){\n         if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200){\n           string=xmlhttp.responseText;\n         }\n   }\n   xmlhttp.send();\n}\n</code></pre>\n\n<p>You will need to be comfortable with AJAX. Use the mozilla learning center to learn about XMLHttpRequest. After you can use the basic XHR object, you will most likely want to use a good AJAX library instead of manually writing cross-browser AJAX requests (for example, in IE you'll need to use an ActiveXObject instead of XHR). The AJAX in jQuery is excellent, but if you don't need everything else <strong><a href=\"http://jquery.com\">jQuery</a></strong> offers, find a good AJAX library here: <a href=\"http://microjs.com/\">http://microjs.com/</a>. You will also need to get comfy with the node.js docs, found <strong><a href=\"http://nodejs.org/docs/v0.4.7/api/\">here</a></strong>. Search <a href=\"http://google.com\">http://google.com</a> for some good node.js server and static file server tutorials. <a href=\"http://nodetuts.com\">http://nodetuts.com</a> is a good place to start.  </p>\n\n<p>UPDATE: I have changed <code>response.sendHeader()</code> to the new <code>response.writeHead()</code> in the code above !!!</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Express makes this kind of stuff really intuitive. Then syntax looks like this:</p>\n\n<pre><code>var app = require('express').createServer();\napp.get(\"/string\", function(req, res) {\n    var strings = [\"rad\", \"bla\", \"ska\"]\n    var n = Math.floor(Math.random() * strings.length)\n    res.send(strings[n])\n})\napp.listen(8001)\n</code></pre>\n\n<p><a href=\"http://expressjs.com/guide.html\">http://expressjs.com/guide.html</a></p>\n\n<p>If you're using jQuery on the client side you can do something like this:</p>\n\n<pre><code>$.get(\"/string\", function(string) {\n    alert(string)\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I was facing following error with code (nodejs 0.10.13), provided by ampersand:</p>\n\n<p>origin is not allowed by access-control-allow-origin</p>\n\n<p>Issue was resolved changing</p>\n\n<pre><code>response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n</code></pre>\n\n<p>to </p>\n\n<pre><code>response.writeHead(200, {\n                 'Content-Type': 'text/html',\n                 'Access-Control-Allow-Origin' : '*'});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>So I'm trying to make a very basic node.js server that with take in a request for a string, randomly select one from an array and return the selected string.  Unfortunately I'm running into a few problems.</p>\n\n<p>Here's the front end:</p>\n\n<pre><code>function newGame()\n{\n   guessCnt=0;\n   guess=\"\";\n   server();\n   displayHash();\n   displayGuessStr();\n   displayGuessCnt();\n}\n\nfunction server()\n{\n   xmlhttp = new XMLHttpRequest();\n\n   xmlhttp.open(\"GET\",\"server.js\", true);\n   xmlhttp.send();\n\n   string=xmlhttp.responseText;\n}\n</code></pre>\n\n<p>This should send the request to server.js:</p>\n\n<pre><code>var http = require('http');\n\nvar choices=[\"hello world\", \"goodbye world\"];\n\nconsole.log(\"server initialized\");\n\nhttp.createServer(function(request, response)\n{\n    console.log(\"request recieved\");\n    var string = choices[Math.floor(Math.random()*choices.length)];\n    console.log(\"string '\" + string + \"' chosen\");\n    response.on(string);\n    console.log(\"string sent\");\n}).listen(8001);\n</code></pre>\n\n<p>So clearly there are several things going wrong here:</p>\n\n<ol>\n<li><p>I get the feeling the way I am \"connecting\" these two files isn't correct both in the <code>xmlhttp.open</code> method and in using <code>response.on</code> to send the string back to the front end.</p></li>\n<li><p>I'm a little confused with how I call this page on localhost.  The front end is named index.html and the sever posts to 8001.  What address should I be go to on localhost in order to access the initial html page after I have initialized server.js? Should I change it to <code>.listen(index.html)</code> or something like that?</p></li>\n<li><p>are there other obvious problems with how I am implementing this (using <code>.responsetext</code> etc.)</p></li>\n</ol>\n\n<p>(sorry for the long multi-question post but the various tutorials and the node.js source all assume that the user already has an understanding of these things.)</p>\n",
            "last_activity_date": 1375705654,
            "question_id": 6011984,
            "score": 16,
            "tags": [
                "javascript",
                "ajax",
                "node.js"
            ],
            "title": "Basic Ajax send/receive with node.js"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Use a global variable to hold the handle of the current request. In this case declare the <code>var a</code> out side the function and make it global. Before calling the ajax check it is not null. If it is not null <code>abort</code> it other wise assign it with new ajax. In the success/complete event make sure you clear the variable a. May not be best solution out there, but works best.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Create an array queue of all your requests. Then if you find a point where you need to abort all existing requests you can just loop through the array and call abort on all pending requests. Should be pretty simple.</p>\n\n<p>Though the other way is to just keep an internal flag that indicates whether a request is currently in process and skip the request if there is one. Or handle how you see fit.</p>\n\n<p>EDIT: Check this SO question for a similar situation: <a href=\"http://stackoverflow.com/questions/3251290/how-to-avoid-3-ajax-calls/3251360#3251360\">http://stackoverflow.com/questions/3251290/how-to-avoid-3-ajax-calls/3251360#3251360</a></p>\n\n<p>EDIT 2: So I what you can do is have an array that you append all your ajax calls to. Which is essentially just making an XmlHttpRequest and that is what is returned from the ajax call. So</p>\n\n<pre><code>requests.push(\n    $.ajax({\n        type: 'post',\n        url: '/test.php',\n        data: search_data,\n        success: function(data) {\n            $('#catalog').html(data);\n        }\n    }));\n</code></pre>\n\n<p>This will add all your requests to a requests array which you can define somewhere. Then when you want to kill all pending requests you can just loop through the array and call abort which will kill the request.</p>\n\n<pre><code>for(var i = 0; i &lt; requests.length; i++)\n    requests[i].abort();\n</code></pre>\n\n<p>Or just define a variable outside of your function that is a flag indicating whether a request is being made. You can even make it more specific and store the search data and only skip requests that have a pending request for the same data and allow other requests that are for different data.</p>\n\n<p>Hopefully that is enough to get you started.</p>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>Pretty easy with <a href=\"http://plugins.jquery.com/project/AjaxManager\">jQuery AjaxManager Plugin</a> which i use <a href=\"http://www.lilorealestate.com/\">here</a></p>\n\n<pre><code>$.manageAjax.create('unique_identifier',{\nqueue:'clear',cacheResponse:false,maxRequests:1,abortOld:true\n});\njQuery.manageAjax.abort('unique_identifier');\njQuery.manageAjax.clear('unique_identifier');\njQuery.manageAjax.add('unique_identifier',{success: function(data) {}});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Spinon's answer is great for aborting all ajax queries but not great for keeping track of just one. </p>\n\n<p>I often find myself doing something like</p>\n\n<pre><code>var ajax_request;\nfunction do_something()\n{\n    if(typeof ajax_request !== 'undefined')\n        ajax_request.abort();\n    ajax_request = $.ajax({\n        type: 'post',\n        url: '/test.php',\n        data: search_data,\n        success: function(data) {\n            $('#catalog').html(data);\n        }\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I had one situation that I had to handle data on the basis of more than 2 check boxes and  on every checkbox click one ajax req was present, my code is ..</p>\n\n<p>use a static variable to hold <code>xmlhttpreq</code> object value between all function calls</p>\n\n<pre><code>$(document).on('change', 'input[class=\"type_flter\"]:checkbox', typeSelection);\nfunction typeSelection() {\nif (typeSelection.req) {\n    typeSelection.req.abort();   //make a static variable functionname.var\n    delete typeSelection.req;\n}\ndata = {'param1': param2, 'param2': param2};\ntypeSelection.req = $.ajax({\n    url: \"../test.php\",\n    type: \"POST\",\n    data: data,\n    success: function(html) {\n        //handle the response\n    }\n});\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Based on: <a href=\"http://stackoverflow.com/questions/446594/kill-ajax-requests-using-javascript-using-jquery\">http://stackoverflow.com/questions/446594/kill-ajax-requests-using-javascript-using-jquery</a>... In inventory_search() - before the ajax request is made, how can I check for any current requests and abort() them before making a new request? Or... Is there a better way to do this?</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    $(function() {\n        $('form#internal_catalog').change(function() {\n            inventory_search();\n        });\n    });\n\n    function inventory_search() {\n        var search_data = $('form#internal_catalog').serialize();\n        var a = $.ajax({\n            type: 'post',\n            url: '/test.php',\n            data: search_data,\n            success: function(data) {\n                $('#catalog').html(data);\n            }\n        });\n    }\n\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1400842374,
            "question_id": 3312960,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "ajax"
            ],
            "title": "jquery abort() ajax request before sending another"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>The CSS one is much more maintainable and readable.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>The CSS approach doesn't require Javascript.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Use CSS, it makes for much easier management of the style itself.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The problem with :hover is that IE6 only supports it on links.  I use jQuery for this kind of thing these days:</p>\n\n<pre><code>$(\"div input\").hover(function() {\n  $(this).addClass(\"blue\");\n}, function() {\n  $(this).removeClass(\"blue\");\n});\n</code></pre>\n\n<p>Makes things a lot easier.  That'll work in IE6, FF, Chrome and Safari.</p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>Off the top of my head: </p>\n\n<p>With CSS, you may h have issues with browser support. </p>\n\n<p>With JScript, people can disable jscript (thats what I do).</p>\n\n<p>I believe the preferred method is to do content in HTML, Layout with CSS, and anything dynamic in JScript. So in this instance, you would probably want to take the CSS approach.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I would recommend using <strong>Whatever:hover</strong> : <a href=\"http://www.xs4all.nl/~peterned/csshover.html\" rel=\"nofollow\">http://www.xs4all.nl/~peterned/csshover.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you don't need 100% support for IE6 with javascript disabled you could use something like <a href=\"http://code.google.com/p/ie7-js/\" rel=\"nofollow\">ie7-js</a> with IE conditional comments. Then you just use css rules to apply hover effects. I don't know exactly how it works but it uses javascript to make a lot of css rules work that don't normally in IE7 and 8.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In reguards to <a href=\"http://stackoverflow.com/questions/608788/css-hover-vs-javascript-mouseover/608793#608793\">using jQuery to do hover</a>, I always use the plugin <a href=\"http://cherne.net/brian/resources/jquery.hoverIntent.html\" rel=\"nofollow\">HoverIntent</a> as it doesn't fire the event until you pause over an element for brief period of time... this stops firing off lots of mouse over events if you accidentally run the mouse over them or simply whilst choosing an option.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One additional benefit to doing it in javascript is you can add / remove the hover effect at different points in time - e.g. hover over table rows changes color, click disables the hover effect and starts edit in place mode.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Why not both?  Use jQuery for animated effects and CSS as the fallback. This gives you the benefits of jQuery with <a href=\"http://en.wikipedia.org/wiki/Graceful_degradation\" rel=\"nofollow\">graceful degradation</a>.</p>\n\n<p>CSS:</p>\n\n<pre><code>a {color: blue;}\na:hover {color: red;}\n</code></pre>\n\n<p>jQuery (uses <a href=\"http://jqueryui.com/\" rel=\"nofollow\">jQueryUI</a> to animate color):</p>\n\n<pre><code>$('a').hover( \n  function() {\n    $(this)\n      .css('color','blue')\n      .animate({'color': 'red'}, 400);\n  },\n  function() {\n    $(this)\n      .animate({'color': 'blue'}, 400);\n  }\n);\n</code></pre>\n\n<p><a href=\"http://jsbin.com/aqocuy/2/edit\" rel=\"nofollow\">demo</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>There is another difference to keep in mind between the two. With CSS, the <code>:hover</code> state is <em>always</em> deactivated when the mouse moves off an element. However, with JavaScript, the <code>onmouseout</code> event is not fired when the mouse moves off the element onto browser chrome rather than onto the rest of the page.</p>\n\n<p>This happens more often than you might think, especially when you're making a navbar at the top of your page with custom hover states.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In Internet Explorer, there must be declared a &lt;!DOCTYPE> for the :hover selector to work on other elements than the &lt;a> element.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>A very big difference is that \":hover\" state is automatically deactivated when the mouse moves out of the element. As a result any styles that are applied on hover are automatically reversed.\nOn the other hand, with the javascript approach, you would have to define both \"onmouseover\" and \"onmouseout\" events. If you only define \"onmouseover\" the styles that are applied \"onmouseover\" will persist even after you mouse out unless you have explicitly defined \"onmouseout\".</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>There are times when I have a choice between using a css element:hover or javascript onmouseover to control the appearance of html elements on a page.  Consider the following scenario where a DIV wraps an INPUT</p>\n\n<pre><code>&lt;div&gt;\n&lt;input id=\"input\"&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I want the input to change background color when the mouse cursor hovers over the div.  The CSS approach is</p>\n\n<pre><code>&lt;style&gt;\ninput {background-color:White;}\ndiv:hover input {background-color:Blue;}\n&lt;/style&gt;\n&lt;div&gt;&lt;input&gt;&lt;/div&gt;\n</code></pre>\n\n<p>The javascript approach is</p>\n\n<pre><code>&lt;div onmouseover=\"document.getElementById('input').style.backgroundColor='Blue';\"&gt;\n&lt;input id=\"input\"&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>What are the advantages and disadvantages of each approach?  Does the CSS approach work well with most web browsers?  Is javascript slower than css? </p>\n",
            "last_activity_date": 1402885950,
            "question_id": 608788,
            "score": 61,
            "tags": [
                "javascript",
                "css"
            ],
            "title": "css hover vs. javascript mouseover"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Looks perfectly random to me!\n(Hint: It's browser dependent.)</p>\n\n<p>Personally, I think my implementation would be better, although I stole it off from <a href=\"http://xkcd.com/221/\" rel=\"nofollow\">XKCD</a>, who should ALWAYS be acknowledged:</p>\n\n<pre><code>random = 4; // Chosen by a fair dice throw. Guaranteed to be random.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Your results are actually expected. If the random numbers are uniformly distributed in a range 1 to 10^n, then you would expect about 9/10 of the numbers to have n digits, and a further 9/100 to have n-1 digits.</p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>If you use a number like 10000000000000000000 you're going beyond the accuracy of the datatype Javascript is using.  Note that all the numbers generated end in \"00\".</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Given numbers between 1 and 100. </p>\n\n<ul>\n<li>9 have 1 digit (1-9)</li>\n<li>90 have 2 digits (10-99)</li>\n<li>1 has 3 digits (100)</li>\n</ul>\n\n<p>Given numbers between 1 and 1000.</p>\n\n<ul>\n<li>9 have 1 digit</li>\n<li>90 have 2 digits</li>\n<li>900 have 3 digits</li>\n<li>1 has 4 digits</li>\n</ul>\n\n<p>and so on.</p>\n\n<p>So if you select some at random, then that vast majority of selected numbers will have the same number of digits, because the vast majority of possible values have the same number of digits.</p>\n",
                    "is_accepted": true,
                    "score": 102
                },
                {
                    "body": "<p>Well, if you are generating numbers up to, say, 1e6, you will hopefully get all numbers with approximately equal probability. That also means that you only have a one in ten chance of getting a number with one digit less. A one in a hundred chance of getting two digits less, etc. I doubt you will see much difference when using another RNG, because you have a uniform distribution across the numbers, not their logarithm.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There different types of randomness. Math.random gives you an uniform distribution of numbers.\nIf you want different orders of magnitude, I would suggest using an exponential function to create what called a power law distribution:</p>\n\n<blockquote>\n  <p>Math.round(Math.exp(Math.random()*Math.log(maxmimum-minimum+1)))+minimum</p>\n</blockquote>\n\n<p>should give you rougly the same number of 1-digit numbers as 2-digit numbers and as 3-digit numbers.</p>\n\n<p>There are also other distributions for random numbers like the normal distribution (also called Gaussian distribution).</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>The following paper explains how math.random() in major Web browsers is (un)secure:\n<a href=\"http://www.trusteer.com/sites/default/files/Temporary_User_Tracking_in_Major_Browsers.pdf\" rel=\"nofollow\">\"Temporary user tracking in major browsers and Cross-domain information \nleakage and attacks\" by Amid Klein (2008)</a>. It's no stronger than typical Java or Windows built-in PRNG functions.</p>\n\n<p>On the other hand, implementing SFMT of the period 2^19937-1 requires 2496 bytes of the internal state maintained for each PRNG sequence. Some people may consider this as  unforgivable cost.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I tried JS pseudorandom number generator on <a href=\"http://en.wikipedia.org/wiki/Chaos_game\" rel=\"nofollow\">Chaos Game</a>.</p>\n\n<p>My <a href=\"http://en.wikipedia.org/wiki/Sierpinski_triangle\" rel=\"nofollow\">Sierpi\u0144ski triangle</a> says its pretty random:\n<img src=\"http://i.imgur.com/cj0Ar.png\" alt=\"Fractal\"></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>For 6 years I've had a <a href=\"http://andrew.hedges.name/experiments/random/\">random number generator</a> page on my website. For a long time, it was the first or second result on Google for \"random number generator\" and has been used to decide dozens, if not hundreds of contests and drawings on discussion forums and blogs (I know because I see the referrers in my web logs and usually go take a look).</p>\n\n<p>Today, someone emailed me to tell me <strong>it may not be as random as I thought.</strong> She tried generating very large random numbers (e.g., between 1 and 10000000000000000000) and found that they were almost always the same number of digits. Indeed, I wrapped the function in a loop so I could generate thousands of numbers and sure enough, for very large numbers, <strong>the variation was only about 2 orders of magnitude.</strong></p>\n\n<p>Why?</p>\n\n<p>Here is the looping version, so you can try it out for yourself:</p>\n\n<p><a href=\"http://andrew.hedges.name/experiments/random/randomness.html\">http://andrew.hedges.name/experiments/random/randomness.html</a></p>\n\n<p>It includes both a straightforward implementation taken from the <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Global%5FObjects/Math/random\">Mozilla Developer Center</a> and some code from 1997 that I swiped off a web page that no longer exists (Paul Houle's \"Central Randomizer 1.3\"). View source to see how each method works.</p>\n\n<p>I've read <a href=\"http://stackoverflow.com/questions/424292\">here</a> and <a href=\"http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/VERSIONS/JAVASCRIPT/java-script.html\">elsewhere</a> about <strong>Mersenne Twister.</strong> What I'm interested in is why there wouldn't be greater variation in the results from JavaScript's built-in <strong>Math.random</strong> function. Thanks!</p>\n",
            "last_activity_date": 1415893893,
            "question_id": 1062902,
            "score": 53,
            "tags": [
                "javascript",
                "random"
            ],
            "title": "How random is JavaScript&#39;s Math.random?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Try</p>\n\n<pre><code>encodeURIComponent() \n</code></pre>\n\n<p>in JS and </p>\n\n<p>urldecode($_POST['field']);</p>\n\n<p>In PHP</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The hexadecimal value you are looking for is <code>%2B</code></p>\n\n<p>To get it automatically in PHP run your string through <code>urlencode($stringVal)</code>. And then run it rhough <code>urldecode($stringVal)</code> to get it back.</p>\n\n<p><strike>If you want the JavaScript to handle it, use <code>escape( str ) </code></strike></p>\n\n<p><strong>Edit</strong></p>\n\n<p>After @bobince's comment I did more reading and he is correct. \nUse <code>encodeURIComponent(str)</code> and <code>decodeURIComponent(str)</code>. Escape will not convert the characters, only escape them with <code>\\</code>'s </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Use encodeURIComponent() in JS and in PHP you should receive the correct values. </p>\n\n<p>Note: When you access <code>$_GET</code>, <code>$_POST</code> or <code>$_REQUEST</code> in PHP, you are retrieving values that have already been decoded. </p>\n\n<p>Example: </p>\n\n<p>In your JS:</p>\n\n<pre><code>// url encode your string\nvar string = encodeURIComponent('+'); // \"%2B\"\n// send it to your server\nwindow.location = 'http://example.com/?string='+string; // http://example.com/?string=%2B\n</code></pre>\n\n<p>On your server:</p>\n\n<pre><code>echo $_GET['string']; // \"+\"\n</code></pre>\n\n<p>It is only the raw HTTP request that contains the url encoded data. </p>\n\n<p>For a GET request you can retrieve this from the <code>URI. $_SERVER['REQUEST_URI']</code> or <code>$_SERVER['QUERY_STRING']</code>. For a urlencoded POST, <code>file_get_contents('php://stdin')</code></p>\n\n<p>NB: </p>\n\n<p><code>decode()</code> only works for single byte encoded characters. It will not work for the full UTF-8 range. </p>\n\n<p>eg:</p>\n\n<pre><code>text = \"\\u0100\"; // \u0100\n// incorrect\nescape(text); // %u0100 \n// correct\nencodeURIComponent(text); // \"%C4%80\"\n</code></pre>\n\n<p>Note: <code>\"%C4%80\"</code> is equivalent to: <code>escape('\\xc4\\x80')</code></p>\n\n<p>Which is the byte sequence (<code>\\xc4\\x80</code>) that represents \u0100 in UTF-8. So if you use encodeURIComponent() your server side must know that it is receiving UTF-8. Otherwise PHP will mangle the encoding. </p>\n",
                    "is_accepted": true,
                    "score": 62
                },
                {
                    "body": "<p>If you have to do a curl in php, you should use <code>urlencode()</code> from PHP but individually!</p>\n\n<pre><code>strPOST = \"Item1=\" . $Value1 . \"&amp;Item2=\" . urlencode(\"+\")\n</code></pre>\n\n<p>If you do <code>urlencode(strPOST)</code>, you will bring you another problem, you will have one Item1 and &amp; will be change %xx value and be as one value, see down here the return!</p>\n\n<p>Example 1</p>\n\n<pre><code>$strPOST = \"Item1=\" . $Value1 . \"&amp;Item2=\" . urlencode(\"+\") will give Item1=Value1&amp;Item2=%2B\n</code></pre>\n\n<p>Example 2</p>\n\n<pre><code>$strPOST = urlencode(\"Item1=\" . $Value1 . \"&amp;Item2=+\") will give Item1%3DValue1%26Item2%3D%2B\n</code></pre>\n\n<p>Example 1 is the good way to prepare string for POST in curl</p>\n\n<p>Example 2 show that the receptor will not see the equal and the ampersand to distinguish both value!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>my problem was with the accents (\u00e1 \u00c9 \u00f1 ) and the plus sign (+) when i to try to save javascript \"code examples\" to mysql:</p>\n\n<p>my solution (not the better way, but it works):</p>\n\n<p>javascript:</p>\n\n<pre><code>function replaceAll( text, busca, reemplaza ){\n  while (text.toString().indexOf(busca) != -1)\n  text = text.toString().replace(busca,reemplaza);return text;\n}\n\n\nfunction cleanCode(cod){\ncode = replaceAll(cod , \"|\", \"{1}\" ); // error | palos de explode en java\ncode = replaceAll(code, \"+\", \"{0}\" ); // error con los signos mas   \nreturn code;\n}\n</code></pre>\n\n<p>function to save:</p>\n\n<pre><code>function save(pid,code){\ncode = cleanCode(code); // fix sign + and |\ncode = escape(code); // fix accents\nvar url = 'editor.php';\nvar variables = 'op=save';\nvar myData = variables +'&amp;code='+ code +'&amp;pid='+ pid +'&amp;newdate=' +(new Date()).getTime();    \nvar result = null;\n$.ajax({\ndatatype : \"html\",\ndata: myData,  \nurl: url,\nsuccess : function(result) {\n    alert(result); // result ok                     \n},\n}); \n} // end function\n</code></pre>\n\n<p>function in php:</p>\n\n<pre><code>&lt;?php\nfunction save($pid,$code){\n    $code= preg_replace(\"[\\{1\\}]\",\"|\",$code);\n    $code= preg_replace(\"[\\{0\\}]\",\"+\",$code);\n    mysql_query(\"update table set code= '\" . mysql_real_escape_string($code) . \"' where pid='$pid'\");\n}\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To make it more interesting and to hopefully enable less hair pulling for someone else. \nUsing python, built dictionary for a device which we can use curl to configure.</p>\n\n<p>Problem: <code>{\"timezone\":\"+5\"}  //throws an error \" 5\"</code></p>\n\n<p>Solution: <code>{\"timezone\":\"%2B\"+\"5\"}  //Works</code></p>\n\n<p>So, in a nutshell:</p>\n\n<pre><code>var = {\"timezone\":\"%2B\"+\"5\"}\njson = JSONEncoder().encode(var)\nsubprocess.call([\"curl\",ipaddress,\"-XPUT\",\"-d\",\"data=\"+json])\n</code></pre>\n\n<p>Thanks to this post!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm POSTing the contents of a form field via AJAX to a PHP script and using Javascript encode(field_contents).  The problem is that any plus signs are being stripped out and replaced by spaces.  How can I safely 'encode' the plus sign and then appropriately 'decode' it on the PHP side?</p>\n",
            "last_activity_date": 1425681519,
            "question_id": 1373414,
            "score": 43,
            "tags": [
                "javascript",
                "ajax",
                "post",
                "encode",
                "decode"
            ],
            "title": "AJAX POST and Plus Sign ( + ) -- How to Encode?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You can have a javascript variable which stores the number of checkboxes that are emitted, i.e in the <code>&lt;head&gt;</code> of the page:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar num_cboxes=&lt;?php echo $number_of_checkboxes;?&gt;;\n&lt;/script&gt;\n</code></pre>\n\n<p>So if there are 10 checkboxes, starting from <code>user_group-1</code> to <code>user_group-10</code>, in the javascript code you would get their value in this way:</p>\n\n<pre><code>var values=new Array();\nfor (x=1; x&lt;=num_cboxes; x++)\n{\n   values[x]=$(\"#user_group-\" + x).val();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use the checked selector to grab only the selected ones (negating the need to know the count or to iterate over them all yourself):</p>\n\n<pre><code>$(\"input[name='user_group[]']:checked\")\n</code></pre>\n\n<p>With those checked items, you can either create a collection of those values or do something to the collection:</p>\n\n<pre><code>var values = new Array();\n$.each($(\"input[name='user_group[]']:checked\"), function() {\n  values.push($(this).val());\n  // or you can do something to the actual checked checkboxes by working directly with  'this'\n  // something like $(this).hide() (only something useful, probably) :P\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 90
                },
                {
                    "body": "<p>I'm not 100% entirely sure how you want to \"grab\" the values.  But if you want to iterate over the checkboxes you can use .each like so:</p>\n\n<pre><code>(\"input[@name='user_group[]']\").each( function() {\n    alert($(this).val());\n});\n</code></pre>\n\n<p>Of course a better selector is available:</p>\n\n<pre><code>$(':checkbox')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I just shortened the answer I selected a bit:</p>\n\n<pre><code>var selectedGroups  = new Array();\n$(\"input[@name='user_group[]']:checked\").each(function() {\n    selectedGroups.push($(this).val());\n});\n</code></pre>\n\n<p>and it works like a charm, thanks!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>mhata dzenyu mese. its actually </p>\n\n<pre><code>var selectedGroups  = new Array();\n$(\".user_group[checked]\").each(function() {\n    selectedGroups.push($(this).val());\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I'm not sure about the \"@\" used in the selector.  At least with the latest jQuery, I had to remove the @ to get this to function with two different checkbox arrays, otherwise all checked items were selected for each array:</p>\n\n<pre><code>var items = [];\n$(\"input[name='items[]']:checked\").each(function(){items.push($(this).val());});\n\nvar about = [];\n$(\"input[name='about[]']:checked\").each(function(){about.push($(this).val());});\n</code></pre>\n\n<p>Now both, items and about work.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Use <code>.map()</code> (adapted from the example at <a href=\"http://api.jquery.com/map/\">http://api.jquery.com/map/</a>):</p>\n\n<pre><code>var values = $(\"input[name='user_group[]']:checked\").map(function(index,domElement) {\n    return $(domElement).val();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>With <code>map</code> in instead of <code>each</code> it is possible to avoid the array creation step:</p>\n\n<pre><code>var checkedCheckboxesValues = \n    $('input:checkbox[name=\"groupName\"]:checked')\n        .map(function() {\n            return $(this).val();\n        }).get();\n</code></pre>\n\n<p>From the <code>map()</code> page of the docs:</p>\n\n<blockquote>\n  <p>Pass each element in the current matched set through a function, producing a new jQuery object containing the return values</p>\n</blockquote>\n\n<p><code>get()</code> turns those values into an array.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var values = $(\"input[name='user_group']:checked\").map(function(){\n      return $(this).val();\n    }).get();\n</code></pre>\n\n<p>This will give you all the values of the checked boxed in an array.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using Zend_Form to output a set group of checkboxes:</p>\n\n<pre><code>&lt;label style=\"white-space: nowrap;\"&gt;&lt;input type=\"checkbox\" name=\"user_group[]\" id=\"user_group-20\" value=\"20\"&gt;This Group&lt;/label&gt;\n</code></pre>\n\n<p>With a normal HTTP Post these values are passed as an array, but when I'm somewhat stumped on how to grab all the values using jQuery. I figured I can select the group using:</p>\n\n<pre><code>$(\"input[@name='user_group[]']\").val()\n</code></pre>\n\n<p>but that just grabs the value of the first checkbox in the list regardless of if it is checked of not. Any ideas?</p>\n",
            "last_activity_date": 1402579183,
            "question_id": 416752,
            "score": 42,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Select values of checkbox group with jQuery"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You can get the value by using the <code>checked</code> property.</p>\n\n<pre><code>var rates = document.getElementsByName('rate');\nvar rate_value;\nfor(var i = 0; i &lt; rates.length; i++){\n    if(rates[i].checked){\n        rate_value = rates[i].value;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<pre><code>var rates = document.getElementById('rates').value;\n</code></pre>\n\n<p>The rates element is a <code>div</code>, so it won't have a value. This is probably where the <code>undefined</code> is coming from.</p>\n\n<p>The <code>checked</code> property will tell you whether the element is selected:</p>\n\n<pre><code>if (document.getElementById('r1').checked) {\n  rate_value = document.getElementById('r1').value;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>This works in IE9 and above and all other browsers.</p>\n\n<pre><code>document.querySelector('input[name=\"rate\"]:checked').value;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 63
                },
                {
                    "body": "<p>In Javascript we can get the values by using Id's \"<strong><code>getElementById()</code></strong>\" in the above code you posted has contain name not Id \nso you to modify like this</p>\n\n<pre><code>if (document.getElementById('r1').checked) {\n  rate_value = document.getElementById('r1').value;\n}\n</code></pre>\n\n<p>use this rate_value according to your code</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>directly calling a radio button many times gives you the value of the FIRST button, not the CHECKED button.  instead of looping thru radio buttons to see which one is checked, i prefer to call an <code>onclick</code> javascript function that sets a variable that can later be retrieved at will.</p>\n\n<pre><code>&lt;input type=\"radio\" onclick=\"handleClick(this)\" name=\"reportContent\" id=\"reportContent\" value=\"/reportFleet.php\" &gt;\n</code></pre>\n\n<p>which calls:</p>\n\n<pre><code>var currentValue = 0;\nfunction handleClick(myRadio) {\n    currentValue = myRadio.value;\n    document.getElementById(\"buttonSubmit\").disabled = false; \n}\n</code></pre>\n\n<p>additional advantage being that i can treat data and/or react to the checking of a button (in this case, enabling SUBMIT button).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A year or so has passed since the question was asked, but I thought a substantial improvement of the answers was possible. I find this the easiest and most versatile script, because it checks whether a button has been checked, and if so, what its value is: </p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;title&gt;Check radio checked and its value&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n    &lt;form name=\"theFormName\"&gt;\n        &lt;input type=\"radio\" name=\"theRadioGroupName\" value=\"10\"&gt;\n        &lt;input type=\"radio\" name=\"theRadioGroupName\" value=\"20\"&gt;\n        &lt;input type=\"radio\" name=\"theRadioGroupName\" value=\"30\"&gt;\n        &lt;input type=\"radio\" name=\"theRadioGroupName\" value=\"40\"&gt;\n        &lt;input type=\"button\" value=\"Check\" onclick=\"getRadioValue('theRadioGroupName')\"&gt;\n    &lt;/form&gt;\n\n    &lt;script&gt;\n        function getRadioValue(groupName) {\n            var radios = theFormName.elements[groupName];\n            window.rdValue; // declares the global variable 'rdValue'\n            for (var i=0; i&lt;radios.length; i++) {\n                var someRadio = radios[i];\n                if (someRadio.checked) {\n                    rdValue = someRadio.value;\n                    break;\n                }\n                else rdValue = 'noRadioChecked';\n            }\n            if (rdValue == '10') {\n                alert('10'); // or: console.log('10')\n            }\n            else if (rdValue == 'noRadioChecked') {\n                alert('no radio checked');\n            }\n        }\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>You can also call the function within another function, like this: </p>\n\n<pre><code>function doSomething() {\n    getRadioValue('theRadioGroupName');\n    if (rdValue == '10') {\n        // do something\n    }\n    else if (rdValue == 'noRadioChecked') {\n        // do something else\n    }  \n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>An improvement to the previous suggested functions:</p>\n\n<pre><code>function getRadioValue(groupName) {\n    var _result;\n    try {\n        var o_radio_group = document.getElementsByName(groupName);\n        for (var a = 0; a &lt; o_radio_group.length; a++) {\n            if (o_radio_group[a].checked) {\n                _result = o_radio_group[a].value;\n                break;\n            }\n        }\n    } catch (e) { }\n    return _result;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For you people living on the edge:</p>\n\n<p>There is now something called a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RadioNodeList\">RadioNodeList</a> and accessing it's value property will return the value of the currently checked input. This will remove the necessity of first filtering out the 'checked' input as we see in many of the posted answers. </p>\n\n<p>Example Form</p>\n\n<pre><code>&lt;form id=\"test\"&gt;\n&lt;label&gt;&lt;input type=\"radio\" name=\"test\" value=\"A\"&gt; A&lt;/label&gt;\n&lt;label&gt;&lt;input type=\"radio\" name=\"test\" value=\"B\" checked&gt; B&lt;/label&gt;\n&lt;label&gt;&lt;input type=\"radio\" name=\"test\" value=\"C\"&gt; C&lt;/label&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>To retrieve the checked value, you could do something like this:</p>\n\n<pre><code>var form = document.getElementById(\"test\");\nalert(form.elements[\"test\"].value);\n</code></pre>\n\n<p>The JSFiddle to prove it: <a href=\"http://jsfiddle.net/vjop5xtq/\">http://jsfiddle.net/vjop5xtq/</a></p>\n\n<p>Please note this was implemented in Firefox 33 (All other major browser seems to support it). Older browsers will require a polfyill for <code>RadioNodeList</code> for this to properly function</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Another (apparently older) option is to use the format:\n\"document.nameOfTheForm.nameOfTheInput.value;\"\ne.g. <strong>document.mainForm.rads.value;</strong></p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>document.mainForm.onclick = function(){\r\n    var radVal = document.mainForm.rads.value;\r\n    result.innerHTML = 'You selected: '+radVal;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;form id=\"mainForm\" name=\"mainForm\"&gt;\r\n    &lt;input type=\"radio\" name=\"rads\" value=\"1\" /&gt;\r\n    &lt;input type=\"radio\" name=\"rads\" value=\"2\" /&gt;\r\n    &lt;input type=\"radio\" name=\"rads\" value=\"3\" /&gt;\r\n    &lt;input type=\"radio\" name=\"rads\" value=\"4\" /&gt;\r\n&lt;/form&gt;\r\n&lt;span id=\"result\"&gt;&lt;/span&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>You can refer to the element by its name within a form. Your original HTML does not contain a form element though.</p>\n\n<p>Working Fiddle here:\n<a href=\"https://jsfiddle.net/Josh_Shields/23kg3tf4/1/\" rel=\"nofollow\">https://jsfiddle.net/Josh_Shields/23kg3tf4/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I looked everywhere and tried everything to get the selected value from a group of radio buttons. </p>\n\n<p>Here's my HTML:</p>\n\n<pre><code>&lt;div id=\"rates\"&gt;\n\n&lt;input type=\"radio\" id=\"r1\" name=\"rate\" value=\"Fixed Rate\"&gt; Fixed Rate\n\n&lt;input type=\"radio\" id=\"r2\" name=\"rate\" value=\"Variable Rate\"&gt; Variable Rate\n\n&lt;input type=\"radio\" id=\"r3\" name=\"rate\" value=\"Multi Rate\" checked=\"checked\"&gt; Multi Rate  \n</code></pre>\n\n<p></p>\n\n<p>Here's my .js:</p>\n\n<pre><code>var rates = document.getElementById('rates').value;\nvar rate_value;\n\nif(rates =='Fixed Rate'){\n    rate_value = document.getElementById('r1').value;\n\n}else if(rates =='Variable Rate'){\n    rate_value = document.getElementById('r2').value;\n\n}else if(rates =='Multi Rate'){\n    rate_value = document.getElementById('r3').value;\n}  \n\ndocument.getElementById('results').innerHTML = rate_value;\n</code></pre>\n\n<p>I keep getting undefined.</p>\n",
            "last_activity_date": 1425048762,
            "question_id": 15839169,
            "score": 40,
            "tags": [
                "javascript",
                "html",
                "radio-button"
            ],
            "title": "How to get value of selected radio button?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I've also find this fix that <a href=\"http://blog.shamess.info/2009/09/29/zoom-to-fit-all-markers-on-google-maps-api-v3/\">zooms to fit all markers</a></p>\n\n<p><strong>Update:</strong> another fix I've found online:</p>\n\n<pre><code>// map: an instance of GMap3\n// latlng: an array of instances of GLatLng\nvar latlngbounds = new google.maps.LatLngBounds();\nlatlng.each(function(n){\n   latlngbounds.extend(n);\n});\nmap.setCenter(latlngbounds.getCenter());\nmap.fitBounds(latlngbounds); \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 80
                },
                {
                    "body": "<p>Try this function....it works...</p>\n\n<pre><code>$(function() {\n        var myOptions = {\n            zoom: 10,\n            center: latlng,\n            mapTypeId: google.maps.MapTypeId.ROADMAP\n        };\n        var map = new google.maps.Map(document.getElementById(\"map_canvas\"),myOptions);\n        var latlng_pos=[];\n        var j=0;\n         $(\".property_item\").each(function(){\n            latlng_pos[j]=new google.maps.LatLng($(this).find(\".latitude\").val(),$(this).find(\".longitude\").val());\n            j++;\n            var marker = new google.maps.Marker({\n                position: new google.maps.LatLng($(this).find(\".latitude\").val(),$(this).find(\".longitude\").val()),\n                // position: new google.maps.LatLng(-35.397, 150.640),\n                map: map\n            });\n        }\n        );\n        // map: an instance of google.maps.Map object\n        // latlng: an array of google.maps.LatLng objects\n        var latlngbounds = new google.maps.LatLngBounds( );\n        for ( var i = 0; i &lt; latlng_pos.length; i++ ) {\n            latlngbounds.extend( latlng_pos[ i ] );\n        }\n        map.fitBounds( latlngbounds );\n\n\n\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In case you prefer more functional style:</p>\n\n<pre><code>// map - instance of google Map v3\n// markers - array of Markers\nmap.fitBounds(markers.reduce(function(bounds, marker) {\n    return bounds.extend(marker.getPosition());\n}, new google.maps.LatLngBounds()));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I use the following code to set markers on my map:</p>\n\n<pre><code>  var latLngs = []\n  $.each(locations.markers, function(i, m){\n   var myLatLng = new google.maps.LatLng(m.latitude, m.longitude);\n   latLngs[i] = myLatLng                                          \n   var marker = new google.maps.Marker({\n    position: myLatLng,\n    map: map,\n    shadow: shadow,\n    icon: image,\n    shape: shape,\n    title: m.city,\n    zIndex: i\n   });\n  }) \n</code></pre>\n\n<p>The markers show up on my map. Now I would like to center &amp; zoom the map on these markers. How can I accomplish this?\nI have tried:</p>\n\n<pre><code>map.fitBounds(getBoundsForLatLngs(latLngs));\n</code></pre>\n\n<p>The console.log of latLngs gives out:</p>\n\n<pre><code> [(46.793182, 7.146903) { b=46.793182,  more...}, (46.8077779, 7.1709386) { b=46.8077779,  more...}]\n</code></pre>\n\n<p>But it doesn't seem to work, and I get no error in the console. What am I doing wrong?</p>\n",
            "last_activity_date": 1414077406,
            "question_id": 2818984,
            "score": 33,
            "tags": [
                "javascript",
                "jquery",
                "google-maps-api-3"
            ],
            "title": "Google MAP API v3: Center &amp; Zoom on displayed markers"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You need to append the <code>tr</code> inside the <code>table</code> so I updated your selector inside your loop and removed the closing <code>table</code> because it is not necessary.</p>\n\n<pre><code>$('#here_table').append(  '&lt;table /&gt;' );\n\n for(i=0;i&lt;3;i++){\n    $('#here_table table').append( '&lt;tr&gt;&lt;td&gt;' + 'result' +  i + '&lt;/td&gt;&lt;/tr&gt;' );\n}\n</code></pre>\n\n<p>The main problem was that you were appending the <code>tr</code> to the <code>div</code> here_table.</p>\n\n<p><strong>Edit:</strong> <em>Here is a JavaScript version if performance is a concern. Using document fragment will not cause a reflow for every iteration of the loop</em></p>\n\n<pre><code>var doc = document;\n\nvar fragment = doc.createDocumentFragment();\n\nfor (i = 0; i &lt; 3; i++) {\n    var tr = doc.createElement(\"tr\");\n\n    var td = doc.createElement(\"td\");\n    td.innerHTML = \"content\";\n\n    tr.appendChild(td);\n\n    //does not trigger reflow\n    fragment.appendChild(tr);\n}\n\nvar table = doc.createElement(\"table\");\n\ntable.appendChild(fragment);\n\ndoc.getElementById(\"here_table\").appendChild(table);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>When you use <code>append</code>, jQuery expects it to be well-formed HTML (plain text counts).  <code>append</code> is not like doing <code>+=</code>.</p>\n\n<p>You need to make the table first, then append it.</p>\n\n<pre><code>var $table = $('&lt;table/&gt;');\nfor(var i=0; i&lt;3; i++){\n    $table.append( '&lt;tr&gt;&lt;td&gt;' + 'result' +  i + '&lt;/td&gt;&lt;/tr&gt;' );\n}\n$('#here_table').append($table);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>This line:</p>\n\n<pre><code>$('#here_table').append( '&lt;tr&gt;&lt;td&gt;' + 'result' +  i + '&lt;/td&gt;&lt;/tr&gt;' );\n</code></pre>\n\n<p>Appends to the <code>div#here_table</code> not the new <code>table</code>. </p>\n\n<p>There are several approaches:</p>\n\n<pre><code>/* Note that the whole content variable is just a string */\nvar content = \"&lt;table&gt;\"\nfor(i=0; i&lt;3; i++){\n    content += '&lt;tr&gt;&lt;td&gt;' + 'result ' +  i + '&lt;/td&gt;&lt;/tr&gt;';\n}\ncontent += \"&lt;/table&gt;\"\n\n$('#here_table').append(content);\n</code></pre>\n\n<p>But, with the above approach it is less manageable to add styles and do stuff dynamically with <code>&lt;table&gt;</code>.</p>\n\n<p>But how about this one, it does what you expect nearly great:</p>\n\n<pre><code>var table = $('&lt;table&gt;&lt;/table&gt;').addClass('foo');\nfor(i=0; i&lt;3; i++){\n    var row = $('&lt;tr&gt;&lt;/tr&gt;').addClass('bar').text('result ' + i);\n    table.append(row);\n}\n\n$('#here_table').append(table);\n</code></pre>\n\n<p>Hope this would help.</p>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>Here is what you can do: <a href=\"http://jsfiddle.net/n7cyE/4/\" rel=\"nofollow\">http://jsfiddle.net/n7cyE/4/</a></p>\n\n<pre><code>$('#here_table').append('&lt;table&gt;&lt;/table&gt;');\nvar table = $('#here_table').children();\n for(i=0;i&lt;3;i++){\n    table.append( '&lt;tr&gt;&lt;td&gt;' + 'result' +  i + '&lt;/td&gt;&lt;/tr&gt;' );\n}\n</code></pre>\n\n<p>Best regards!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Following is done for multiple file uploads using jquery:</p>\n\n<p><strong>File input button:</strong></p>\n\n<pre><code>&lt;div&gt;\n &lt;input type=\"file\" name=\"uploadFiles\" id=\"uploadFiles\" multiple=\"multiple\" class=\"input-xlarge\" onchange=\"getFileSizeandName(this);\"/&gt; \n&lt;/div&gt;\n</code></pre>\n\n<p><strong>Displaying File name and File size in a table:</strong></p>\n\n<pre><code>&lt;div id=\"uploadMultipleFilediv\"&gt;\n&lt;table id=\"uploadTable\" class=\"table table-striped table-bordered table-condensed\"&gt;&lt;/table&gt;&lt;/div&gt;\n</code></pre>\n\n<p><strong>Javascript for getting the file name and file size:</strong></p>\n\n<pre><code>function getFileSizeandName(input)\n{\n    var select = $('#uploadTable');\n    //select.empty();\n    var totalsizeOfUploadFiles = \"\";\n    for(var i =0; i&lt;input.files.length; i++)\n    {\n        var filesizeInBytes = input.files[i].size; // file size in bytes\n        var filesizeInMB = (filesizeInBytes / (1024*1024)).toFixed(2); // convert the file size from bytes to mb\n        var filename = input.files[i].name;\n        select.append($('&lt;tr&gt;&lt;td&gt;'+filename+'&lt;/td&gt;&lt;td&gt;'+filesizeInMB+'&lt;/td&gt;&lt;/tr&gt;'));\n        totalsizeOfUploadFiles = totalsizeOfUploadFiles+filesizeInMB;\n        //alert(\"File name is : \"+filename+\" || size : \"+filesizeInMB+\" MB || size : \"+filesizeInBytes+\" Bytes\");               \n    }           \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Or do it this way to use ALL jQuery. The each can loop through any data be it DOM elements or an array/object.</p>\n\n<pre><code>var data = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight'];\nvar numCols = 1;           \n\n\n$.each(data, function(i) {\n  if(!(i%numCols)) tRow = $('&lt;tr&gt;');\n\n  tCell = $('&lt;td&gt;').html(data[i]);\n\n  $('table').append(tRow.append(tCell));\n});\n\u200b\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/n7cyE/93/\">http://jsfiddle.net/n7cyE/93/</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>To add multiple columns and rows, we can also do a string concatenation. Not the best way, but it sure works. </p>\n\n<pre><code>             var resultstring='&lt;table&gt;';\n      for(var j=0;j&lt;arr.length;j++){\n              //array arr contains the field names in this case\n          resultstring+= '&lt;th&gt;'+ arr[j] + '&lt;/th&gt;';\n      }\n      $(resultset).each(function(i, result) {\n          // resultset is in json format\n          resultstring+='&lt;tr&gt;';\n          for(var j=0;j&lt;arr.length;j++){\n              resultstring+='&lt;td&gt;'+ result[arr[j]]+ '&lt;/td&gt;';\n          }\n          resultstring+='&lt;/tr&gt;';\n      });\n      resultstring+='&lt;/table&gt;';\n          $('#resultdisplay').html(resultstring);\n</code></pre>\n\n<p>This also allows you to add rows and columns to the table dynamically, without hardcoding the fieldnames.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Or static HTML without the loop for creating some links (or whatever). Place the <code>&lt;div id=\"menu\"&gt;</code> on any page to reproduce the HTML. </p>\n\n<pre><code>    &lt;!DOCTYPE html&gt;\n    &lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n    &lt;head&gt;\n        &lt;title&gt;HTML Masterpage&lt;/title&gt;\n        &lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js\"&gt;&lt;/script&gt;\n\n        &lt;script type=\"text/javascript\"&gt;\n            function nav() {\n                var menuHTML= '&lt;ul&gt;&lt;li&gt;&lt;a href=\"#\"&gt;link 1&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=\"#\"&gt;link 2&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;';\n                $('#menu').append(menuHTML);\n            }\n        &lt;/script&gt;\n\n        &lt;style type=\"text/css\"&gt;\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body onload=\"nav()\"&gt;\n        &lt;div id=\"menu\"&gt;&lt;/div&gt;\n    &lt;/body&gt;\n    &lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A working example using the method mentioned above and using JSON to represent the data. This is used in my project of dealing with ajax calls fetching data from server.</p>\n\n<p><a href=\"http://jsfiddle.net/vinocui/22mX6/1/\" rel=\"nofollow\">http://jsfiddle.net/vinocui/22mX6/1/</a></p>\n\n<p>In your html:\n        &lt; table id='here_table' >&lt; /table >    </p>\n\n<p>JS code:</p>\n\n<pre><code>function feed_table(tableobj){\n    // data is a JSON object with\n    //{'id': 'table id',\n    // 'header':[{'a': 'Asset Tpe', 'b' : 'Description', 'c' : 'Assets Value', 'd':'Action'}], \n    // 'data': [{'a': 'Non Real Estate',  'b' :'Credit card',  'c' :'$5000' , 'd': 'Edit/Delete' },...   ]}\n\n    $('#' + tableobj.id).html( '' );\n\n    $.each([tableobj.header, tableobj.data], function(_index, _obj){\n    $.each(_obj, function(index, row){\n        var line = \"\";\n        $.each(row, function(key, value){\n            if(0 === _index){\n                line += '&lt;th&gt;' + value + '&lt;/th&gt;';    \n            }else{\n                line += '&lt;td&gt;' + value + '&lt;/td&gt;';\n            }\n        });\n        line = '&lt;tr&gt;' + line + '&lt;/tr&gt;';\n        $('#' + tableobj.id).append(line);\n    });\n\n\n    });    \n}\n\n// testing\n$(function(){\n    var t = {\n    'id': 'here_table',\n    'header':[{'a': 'Asset Tpe', 'b' : 'Description', 'c' : 'Assets Value', 'd':'Action'}], \n    'data': [{'a': 'Non Real Estate',  'b' :'Credit card',  'c' :'$5000' , 'd': 'Edit/Delete' },\n         {'a': 'Real Estate',  'b' :'Property',  'c' :'$500000' , 'd': 'Edit/Delete' }\n        ]};\n\n    feed_table(t);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have on page div:</p>\n\n<pre><code>&lt;div id=\"here_table\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>and in jquery:</p>\n\n<pre><code>for(i=0;i&lt;3;i++){\n    $('#here_table').append( 'result' +  i );\n}\n</code></pre>\n\n<p>this generating for me:</p>\n\n<pre><code>&lt;div id=\"here_table\"&gt;\n    result1 result2 result3 etc\n&lt;/div&gt;\n</code></pre>\n\n<p>I would like receive this in table:</p>\n\n<pre><code>&lt;div id=\"here_table\"&gt;\n    &lt;table&gt;\n          &lt;tr&gt;&lt;td&gt;result1&lt;/td&gt;&lt;/tr&gt;\n          &lt;tr&gt;&lt;td&gt;result2&lt;/td&gt;&lt;/tr&gt;\n          &lt;tr&gt;&lt;td&gt;result3&lt;/td&gt;&lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I doing:</p>\n\n<pre><code>$('#here_table').append(  '&lt;table&gt;' );\n\n for(i=0;i&lt;3;i++){\n    $('#here_table').append( '&lt;tr&gt;&lt;td&gt;' + 'result' +  i + '&lt;/td&gt;&lt;/tr&gt;' );\n}\n\n $('#here_table').append(  '&lt;/table&gt;' );\n</code></pre>\n\n<p>but this generate for me:</p>\n\n<pre><code>&lt;div id=\"here_table\"&gt;\n    &lt;table&gt; &lt;/table&gt; !!!!!!!!!!\n          &lt;tr&gt;&lt;td&gt;result1&lt;/td&gt;&lt;/tr&gt;\n          &lt;tr&gt;&lt;td&gt;result2&lt;/td&gt;&lt;/tr&gt;\n          &lt;tr&gt;&lt;td&gt;result3&lt;/td&gt;&lt;/tr&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Why? how can i make this correctly?</p>\n\n<p>LIVE: <a href=\"http://jsfiddle.net/n7cyE/\">http://jsfiddle.net/n7cyE/</a></p>\n",
            "last_activity_date": 1385434961,
            "question_id": 8749236,
            "score": 32,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Create table with jQuery - append"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You probably meant <code>document.getElementsByClassName()</code> (and then grabbing the first item off the resulting node list):</p>\n\n<pre><code>var stopMusicExt = document.getElementsByClassName(\"stopButton\")[0];\n\nstopButton.onclick = function() {\n    var ta = document.getElementsByClassName(\"stopButton\")[0];\n    document['player'].stopMusicExt(ta.value);\n    ta.value = \"\";\n};\n</code></pre>\n\n<p>You may still get the error</p>\n\n<blockquote>\n  <p><code>document.getElementsByClassName</code> is not a function</p>\n</blockquote>\n\n<p>in older browsers, though, in which case you can provide a fallback implementation if you need to support those older browsers.</p>\n",
                    "is_accepted": true,
                    "score": 75
                },
                {
                    "body": "<p>It should be <code>getElementsByClassName</code>, and not <code>getElementByClass</code>. See this - <a href=\"https://developer.mozilla.org/en/DOM/document.getElementsByClassName\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM/document.getElementsByClassName</a>. </p>\n\n<p>Note that some browsers/versions may not support this.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As others have said, you're not using the right function name and it doesn't exist univerally in all browsers.</p>\n\n<p>If you need to do cross-browser fetching of anything other than an element with an id with <code>document.getElementById()</code>, then I would strongly suggest you get a library that supports CSS3 selectors across all browsers.  It will save you a massive amount of development time, testing and bug fixing.  The easiest thing to do is to just use <a href=\"http://jquery.com/\">jQuery</a> because it's so widely available, has excellent documentation, has free CDN access and has an excellent community of people behind it to answer questions.  If that seems like more than you need, then you can get <a href=\"http://sizzlejs.com/\">Sizzle</a> which is just a selector library (it's actually the selector engine inside of jQuery and others).  I've used it by itself in other projects and it's easy, productive and small.</p>\n\n<p>If you want to select multiple nodes at once, you can do that many different ways.  If you give them all the same class, you can do that with:</p>\n\n<pre><code>var list = document.getElementsByClassName(\"myButton\");\nfor (var i = 0; i &lt; list.length; i++) {\n    // list[i] is a node with the desired class name\n}\n</code></pre>\n\n<p>and it will return a list of nodes that have that class name.  </p>\n\n<p>In Sizzle, it would be this:</p>\n\n<pre><code>var list = Sizzle(\".myButton\");\nfor (var i = 0; i &lt; list.length; i++) {\n    // list[i] is a node with the desired class name\n}\n</code></pre>\n\n<p>In jQuery, it would be this:</p>\n\n<pre><code>$(\".myButton\").each(function(index, element) {\n    // element is a node with the desired class name\n});\n</code></pre>\n\n<p>In both Sizzle and jQuery, you can put multiple class names into the selector like this and use much more complicated and powerful selectors:</p>\n\n<pre><code>$(\".myButton, .myInput, .homepage.gallery, #submitButton\").each(function(index, element) {\n    // element is a node that matches the selector\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I am trying to run a function onClick of any button with <code>class=\"stopMusic\"</code>.I'm getting an error in Firebug </p>\n\n<blockquote>\n  <p>document.getElementByClass is not a function</p>\n</blockquote>\n\n<p>Here is my code:</p>\n\n<pre><code>var stopMusicExt = document.getElementByClass(\"stopButton\");\n    stopButton.onclick = function() {\n        var ta = document.getElementByClass(\"stopButton\");\n        document['player'].stopMusicExt(ta.value);\n        ta.value = \"\";\n    };\n</code></pre>\n",
            "last_activity_date": 1390304979,
            "question_id": 7480496,
            "score": 32,
            "tags": [
                "javascript"
            ],
            "title": "Javascript getElementByClass"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can use <code>$interpolateProvider</code> to change start / end symbols used for AngularJS expressions:</p>\n\n<pre><code>var myApp = angular.module('myApp', [], function($interpolateProvider) {\n    $interpolateProvider.startSymbol('[[');\n    $interpolateProvider.endSymbol(']]');\n});\n</code></pre>\n\n<p>and then, in your template:</p>\n\n<pre><code>Hello, [[name]]\n</code></pre>\n\n<p>Here is the working jsFiddle: <a href=\"http://jsfiddle.net/Bvc62/3/\">http://jsfiddle.net/Bvc62/3/</a></p>\n\n<p>Check the documentation on the <code>$interpolate</code> service here: <a href=\"http://docs.angularjs.org/api/ng.%24interpolate\">http://docs.angularjs.org/api/ng.$interpolate</a></p>\n",
                    "is_accepted": true,
                    "score": 63
                }
            ],
            "body": "<p>How do I use a custom delimiter for angular JS? I'd like to change from the <code>{{ var }}</code> syntax to <code>[[ var ]]</code>.</p>\n\n<p>Can somebody show me a complete example on how to implement this with Angular?</p>\n",
            "last_activity_date": 1415061240,
            "question_id": 12923521,
            "score": 31,
            "tags": [
                "javascript",
                "angularjs",
                "configuration",
                "delimiter"
            ],
            "title": "Angular JS custom delimiter"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>A Javascript framework allows you to do these things very easily</p>\n\n<h2>jQuery</h2>\n\n<pre><code>$('#myElement').css({\n  fontsize: '12px',\n  left: '200px',\n  top: '100px'\n});\n</code></pre>\n\n<hr>\n\n<h2>Object and a for-in-loop</h2>\n\n<p>Or, a much more elegant method is a basic object &amp; for-loop</p>\n\n<pre><code>var el = document.getElementById('#myElement'),\n    css = {\n      fontsize: '12px',\n      left: '200px',\n      top: '100px'\n    };  \n\nfor(i in css){\n   el.style[i] = css[i];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can have individual classes in your css files and then assign the classname to your element </p>\n\n<p>or you can loop through properties of styles as -</p>\n\n<pre><code>var css = { \"font-size\": \"12px\", \"left\": \"200px\", \"top\": \"100px\" };\n\nfor(var prop in css) {\n  document.getElementById(\"myId\").style[prop] = css[prop];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in\" rel=\"nofollow\">for .. in</a></p>\n\n<p>Example:</p>\n\n<pre><code>var myStyle = {};\nmyStyle.fontsize = \"12px\";\nmyStyle.left= \"200px\";\nmyStyle.top= \"100px\";\nvar elem = document.getElementById(\"myElement\");\nvar elemStyle = elem.style;\nfor(var prop in myStyle) {\n  elemStyle[prop] = myStyle[prop];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Don't think it is possible as such.</p>\n\n<p>But you could create an object out of the style definitions and just loop through them. </p>\n\n<pre><code>var allMyStyle = {\n  fontsize: '12px',\n  left: '200px',\n  top: '100px'\n};\n\nfor (i in allMyStyle)\n  document.getElementById(\"myElement\").style[i] = allMyStyle[i];\n</code></pre>\n\n<p>To develop further, make a function for it:</p>\n\n<pre><code>function setStyles(element, styles) {\n  for (i in styles)\n    element.style[i] = styles[i];\n}\n\nsetStyles(document.getElementById(\"myElement\"), allMyStyle);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Your best bet may be to create a function that sets styles on your own:</p>\n\n<pre><code>var setStyle = function(p_elem, p_styles)\n{\n    var s;\n    for (s in p_styles)\n    {\n        p_elem.style[s] = p_styles[s];\n    }\n}\n\nsetStyle(myDiv, {'color': '#F00', 'backgroundColor': '#000'});\nsetStyle(myDiv, {'color': mycolorvar, 'backgroundColor': mybgvar});\n</code></pre>\n\n<p>Note that you will still have to use the javascript-compatible property names (hence <code>backgroundColor</code>)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Make a function to take care of it, and pass it parameters with the styles you want changed..</p>\n\n<pre><code>function setStyle( objId, propertyObject )\n{\n var elem = document.getElementById(objId);\n for (var property in propertyObject)\n    elem.style[property] = propertyObject[property];\n}\n</code></pre>\n\n<p>and call it like this</p>\n\n<pre><code>setStyle('myElement', {'fontsize':'12px', 'left':'200px'});\n</code></pre>\n\n<p>for the values of the properties inside the propertyObject you can use variables..</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Using plain Javascript, you can't set all the styles at once; you need to use single lines for each of them.</p>\n\n<p>However, you don't have to repeat the <code>document.getElementById(...).style.</code> code over and over; create an object variable to reference it, and you'll make your code much more readable:</p>\n\n<pre><code>var obj=document.getElementById(\"myElement\").style;\nobj.top=top;\nobj.left=left;\n</code></pre>\n\n<p>...etc. Much easier to read than your example (and frankly, just as easy to read as the jQuery alternative).</p>\n\n<p>(if Javascript had been designed properly, you could also have used the <code>with</code> keyword, but that's best left alone, as it can cause some nasty namespace issues)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you have the CSS values as string and there is no other CSS already set for the element (or you don't care about overwriting), make use of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration\"><code>cssText</code> property</a>:</p>\n\n<pre><code>document.getElementById(\"myElement\").style.cssText = cssString;\n</code></pre>\n\n<p>This is good in a sense as it avoids repainting the element every time you change a property (you change them all \"at once\" somehow).</p>\n\n<p>On the other side, you would have to build the string first.</p>\n",
                    "is_accepted": true,
                    "score": 74
                },
                {
                    "body": "<p>@Mircea: It is very much easy to set the multiple styles for an element in a single statement.\nIt doesn't effect the existing properties and avoids the complexity of going for loops or plugins.</p>\n\n<pre><code>document.getElementById(\"demo\").setAttribute(\n   \"style\", \"font-size: 100px; font-style: italic; color:#ff0000;\");\n</code></pre>\n\n<p>BE CAREFUL: If, later on, you use this method to add or alter style properties, the previous properties set using 'setAttribute' will be erased.</p>\n",
                    "is_accepted": false,
                    "score": 17
                }
            ],
            "body": "<p>I have the following javascript variables:</p>\n\n<pre><code>var fontsize = \"12px\"\nvar left= \"200px\"\nvar top= \"100px\"\n</code></pre>\n\n<p>I know that I can set them to my element iteratively like this:</p>\n\n<pre><code>document.getElementById(\"myElement\").style.top=top\ndocument.getElementById(\"myElement\").style.left=left\n</code></pre>\n\n<p>Is it possible to set them all together at once, something like this?</p>\n\n<pre><code>document.getElementById(\"myElement\").style = allMyStyle \n</code></pre>\n",
            "last_activity_date": 1395597934,
            "question_id": 3968593,
            "score": 31,
            "tags": [
                "javascript",
                "coding-style"
            ],
            "title": "How to set multiple css style properties in Javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>JS does not have a sleep function, it has <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers.setTimeout\"><strong>setTimeout()</strong></a> or <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers.setInterval\"><strong>setInterval()</strong></a> functions. </p>\n\n<p>If you can move the code that you need to run after the pause into the <code>setTimeout()</code> callback, you can do something like this:</p>\n\n<pre><code>//code before the pause\nsetTimeout(function(){\n    //do what you need here\n}, 2000);\n</code></pre>\n\n<p>see example here : <a href=\"http://jsfiddle.net/9LZQp/\">http://jsfiddle.net/9LZQp/</a></p>\n\n<p>This won't halt the execution of your script, but as long as <code>setTimeout()</code> is an asynchronous function, this code</p>\n\n<pre><code>console.log(\"HELLO\");\nsetTimeout(function(){\n    console.log(\"THIS IS\");\n}, 2000);\nconsole.log(\"DOG\");\n</code></pre>\n\n<p>will print this in the console:</p>\n\n<pre><code>HELLO\nDOG\nTHIS IS\n</code></pre>\n\n<p>(note that <strong>DOG</strong> is printed before <strong>THIS IS</strong>)</p>\n\n<hr>\n\n<p>You can use the following code to simulate a sleep for short periods of time:</p>\n\n<pre><code>function sleep(milliseconds) {\n  var start = new Date().getTime();\n  for (var i = 0; i &lt; 1e7; i++) {\n    if ((new Date().getTime() - start) &gt; milliseconds){\n      break;\n    }\n  }\n}\n</code></pre>\n\n<p>now, if you want to sleep for 1 second, just use:</p>\n\n<pre><code>sleep(1000);\n</code></pre>\n\n<p>example: <a href=\"http://jsfiddle.net/HrJku/1/\">http://jsfiddle.net/HrJku/1/</a></p>\n\n<p>please note that <strong>this code will keep your script busy for <em>n milliseconds</em>. This will not only stop execution of Javascript on your page, but depending on the browser implementation, may possibly make the page completely unresponsive, and possibly make the entire browser unresponsive</strong>. In other words this is almost always the wrong thing to do.</p>\n",
                    "is_accepted": true,
                    "score": 72
                }
            ],
            "body": "<p>I have a JavaScript code that I need to add a sleep/wait function to. The code I am running is already in a function, eg:</p>\n\n<pre><code>function myFunction(time)\n{\nalert('time starts now');\n//code to make the program wait before continuing\nalert('time is up')\n}\n</code></pre>\n\n<p>I have heard that a possible solution might include</p>\n\n<pre><code>setTimeout\n</code></pre>\n\n<p>but I am not sure how to use it in this case.</p>\n\n<p>I can't use PHP, as my server does not support it, although using jQuery would be fine.</p>\n",
            "last_activity_date": 1424364946,
            "question_id": 16873323,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "delay",
                "sleep",
                "wait"
            ],
            "title": "JavaScript sleep/wait before continuing"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<pre><code>String.prototype.reverse = function () {\n    return this.split(\"\").reverse().join(\"\");\n}\n</code></pre>\n\n<p>Inspired by <a href=\"http://www.bytemycode.com/snippets/snippet/400/\">the first result</a> I got when I did a Google for <a href=\"http://www.google.com/search?q=javascript+string+reverse\">javascript string reverse</a>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><code>reverse()</code> is a method of array instances. It won't directly work on a string. You should first split the characters of the string into an array, reverse the array and then join back into a string:</p>\n\n<pre><code>var backway = oneway.split(\"\").reverse().join(\"\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 84
                },
                {
                    "body": "<p><code>reverse</code> is a function on an array and that is a string. You could explode the string into an array and then reverse it and then combine it back together though.</p>\n\n<pre><code>var str     = '0123456789';\nvar rev_str = str.split('').reverse().join('');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think you'll find that in fact reverse() isn't a function in jQuery. Incidentally, jQuery is really good at manipulating your DOM, but isn't really for string manipulation as such (although you can probably get plugins/write your own) to do this.</p>\n\n<p>The best way I've found to reverse a string in javascript is to do the following:</p>\n\n<pre><code>String.prototype.reverse = function(){\nsplitext = this.split(\"\");\nrevertext = splitext.reverse();\nreversed = revertext.join(\"\");\nreturn reversed;\n}\n</code></pre>\n\n<p>Found at: <a href=\"http://www.bytemycode.com/snippets/snippet/400/\" rel=\"nofollow\">http://www.bytemycode.com/snippets/snippet/400/</a></p>\n\n<p>I think you'll find that if you pop the above into your code somewhere, your call to .reverse() should work :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>// You could reverse a string without creating an array\n\nString.prototype.reverse= function(){\n var s= '', L= this.length;\n while(L){\n  s+= this[--L];\n }\n return s;\n}\n\nvar s1= 'the time has come, the walrus said, to speak of many things';\ns1.reverse()\n/*returned value: (String)\nsgniht ynam fo kaeps ot, dias surlaw eht, emoc sah emit eht\n*/\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The following technique (or similar) is commonly used to reverse a string in JavaScript:</p>\n\n<pre><code>// Don\u2019t use this!\nvar naiveReverse = function(string) {\n    return string.split('').reverse().join('');\n}\n</code></pre>\n\n<p>In fact, all the answers posted so far are a variation of this pattern. However, there are some problems with this solution. For example:</p>\n\n<pre><code>naiveReverse('foo \ud834\udf06 bar');\n// \u2192 'rab \ufffd\ufffd oof'\n// Where did the `\ud834\udf06` symbol go? Whoops!\n</code></pre>\n\n<p>If you\u2019re wondering why this happens, <a href=\"http://mathiasbynens.be/notes/javascript-encoding\">read up on JavaScript\u2019s internal character encoding</a>. (TL;DR: <code>\ud834\udf06</code> is an astral symbol, and JavaScript exposes it as two separate code units.)</p>\n\n<p>But there\u2019s more:</p>\n\n<pre><code>// To see which symbols are being used here, check:\n// http://mothereff.in/js-escapes#1ma%C3%B1ana%20man%CC%83ana\nnaiveReverse('ma\u00f1ana man\u0303ana');\n// \u2192 'ana\u0303nam ana\u00f1am'\n// Wait, so now the tilde is applied to the `a` instead of the `n`? WAT.\n</code></pre>\n\n<p>A good string to test string reverse implementations is <a href=\"http://mothereff.in/js-escapes#1foo%20%F0%9D%8C%86%20bar%20ma%C3%B1ana%20man%CC%83ana\">the following</a>:</p>\n\n<pre><code>'foo \ud834\udf06 bar ma\u00f1ana man\u0303ana'\n</code></pre>\n\n<p>Why? Because it contains an astral symbol (<code>\ud834\udf06</code>) (which are <a href=\"http://mathiasbynens.be/notes/javascript-encoding#surrogate-pairs\">represented by surrogate pairs in JavaScript</a>) and a combining mark (the <code>n\u0303</code> in the last <code>man\u0303ana</code> actually consists of two symbols: U+006E LATIN SMALL LETTER N and U+0303 COMBINING TILDE).</p>\n\n<p>The order in which surrogate pairs appear cannot be reversed, else the astral symbol won\u2019t show up anymore in the \u2018reversed\u2019 string. That\u2019s why you saw those <code>\ufffd\ufffd</code> marks in the output for the previous example.</p>\n\n<p>Combining marks always get applied to the previous symbol, so you have to treat both the main symbol (U+006E LATIN SMALL LETTER N) as the combining mark (U+0303 COMBINING TILDE) as a whole. Reversing their order will cause the combining mark to be paired with another symbol in the string. That\u2019s why the example output had <code>a\u0303</code> instead of <code>\u00f1</code>.</p>\n\n<p>Hopefully, this explains why all the answers posted so far are <strong>wrong</strong>.</p>\n\n<hr>\n\n<p>To answer your initial question \u2014 <em>how to [properly] reverse a string in JavaScript</em> \u2014, I\u2019ve written a small JavaScript library that is capable of Unicode-aware string reversal. It doesn\u2019t have any of the issues I just mentioned. The library is called <a href=\"http://mths.be/esrever\"><strong>Esrever</strong></a>; its code is on GitHub, and it works in pretty much any JavaScript environment. It comes with a shell utility/binary, so you can easily reverse strings from your terminal if you want.</p>\n\n<pre><code>var input = 'foo \ud834\udf06 bar ma\u00f1ana man\u0303ana';\nesrever.reverse(input);\n// \u2192 'anan\u0303am ana\u00f1am rab \ud834\udf06 oof'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>Google harder, bros. This is by Edd Mann.</p>\n\n<pre><code>function reverse (s) {\nfor (var i = s.length - 1, o = ''; i &gt;= 0; o += s[i--]) { }\nreturn o;\n}\n</code></pre>\n\n<p><a href=\"http://eddmann.com/posts/ten-ways-to-reverse-a-string-in-javascript/\" rel=\"nofollow\">http://eddmann.com/posts/ten-ways-to-reverse-a-string-in-javascript/</a></p>\n\n<p><a href=\"http://jsperf.com/string-reverse-function-performance\" rel=\"nofollow\">http://jsperf.com/string-reverse-function-performance</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>String.prototype.strReverse = function() {\n\n    var newstring = \"\";\n\n    for (var s=0; s &lt; this.length; s++) {\n        newstring = this.charAt(s) + newstring;\n    }\n\n    return newstring;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Mathias Bynens, your code works grate, thanks a lot!</p>\n\n<p>I convert your code to a function, in this way users are able to copy it from here.</p>\n\n<p>Thanks!</p>\n\n<pre><code>//The function reverse a string,  JavaScript\u2019s has internal character encoding so we are\n//unable to reverse the string in the \"easy ways\". For example the TL;DR: \ud834\udf06 is an astral\n//symbol, and JavaScript exposes it as two separate code units.\nfunction ReverseString(string){\n    //-\n    var regexSymbolWithCombiningMarks = /([\\0-\\u02FF\\u0370-\\u1DBF\\u1E00-\\u20CF\\u2100-\\uD7FF\\uDC00-\\uFE1F\\uFE30-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF])([\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F]+)/g;\n    var regexSurrogatePair = /([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])/g;\n    //-\n\n    //Step 1: deal with combining marks and astral symbols (surrogate pairs)\n    string = string\n        //Swap symbols with their combining marks so the combining marks go first\n        .replace(regexSymbolWithCombiningMarks, function($0, $1, $2) {\n            return reverse($2) + $1;\n        })\n        // Swap high and low surrogates so the low surrogates go first\n        .replace(regexSurrogatePair, '$2$1');\n\n    // Step 2: reverse the code units in the string\n    var result = '';\n    var index = string.length;\n    while (index--) {\n        result += string.charAt(index);\n    }\n\n    //Return value\n    return result;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h1>decremental loop with concatenation</h1>\n\n<pre><code>function reverse ( s )  { \n    var a =  '' ; \n    for  ( var i = s . length -  1 ; i &gt; =  0 ; i -)  { \n        a + = s [ i ]; \n    } \n    return a ; \n}\n</code></pre>\n\n<hr>\n\n<h1>Loop Incremental / decremental with two arrays</h1>\n\n<pre><code>Function Reverse ( s )  { \n    var a =  []; \n    for  ( var i = s . length -  1 , j =  0 , i &gt; =  0 ; i - j ++)  { \n        a [ j ]  = s [ i ] ; \n    } \n    return the . join ( '' ); \n}\n</code></pre>\n\n<hr>\n\n<h1>Incremental Loop array and pushing with charAt</h1>\n\n<pre><code>function reverse ( s )  { \n    var o =  []; \n    for  ( var i =  0 , len = s . length ; i &lt;= len ; i ++) \n        o . push ( s . charAt ( len - i )); \n    return o . join ( '' ); \n}\n</code></pre>\n\n<h1>native functions</h1>\n\n<pre><code>function reverse ( s )  { \n    return s . \u200b\u200bsplit ( '' ). reverse . () join ( '' ); \n}\n</code></pre>\n\n<hr>\n\n<h1>Loop with while with concatenation and substring</h1>\n\n<pre><code>function reverse ( s )  { \n    var i = s . length , \n        the =  '' ; \n    while  ( i &gt;  0 )  { \n        a + = s . substring ( i -  1 , i ), \n        i -; \n    } \n    return a ; \n}\n</code></pre>\n\n<hr>\n\n<h1>Simple Loop Statement using is concatenated</h1>\n\n<pre><code>function reverse ( s )  { \n    for  ( var i = s . length -  1 , the =  '' ; i &gt; =  0 , the + = s [ i -])  {  } \n    return a ; \n}\n</code></pre>\n\n<h1>Recursion with substring and charAt</h1>\n\n<pre><code>Function Reverse ( s )  { \n    return  ( s ===  ' )  ?  '  : reverse ( s . substr ( 1 ))  + s . charAt ( 0 ); \n}\n</code></pre>\n\n<hr>\n\n<h1>Recursion with internal function</h1>\n\n<pre><code>function reverse ( s )  { \n    function rev ( s , len , o )  { \n        return  ( len ===  0 )  ? o : rev ( s ,  -- len ,  ( o += s [ len ])); \n    }; \n    return rev ( s , s . length ,  '' ); \n}\n</code></pre>\n\n<hr>\n\n<h1>Exchange of using intermediate index is</h1>\n\n<pre><code>function reverse ( s )  { \n    s = s . split ( '' ); \n    var len = s . length , \n        halfIndex =  Math . floor ( len /  2 )  -  1 , \n        tmp ; \n    for  ( var i =  0 ; i &lt;= halfIndex ; i ++)  { \n        tmp = s [ len - i -  1 ]; \n        s [ len - i -  1 ]  = s [ i ]; \n        s [ i ]  = tmp ; \n    } \n    return s . join ( '' ); \n}\n</code></pre>\n\n<hr>\n\n<h1>Exchange of intermediate index using recursion</h1>\n\n<pre><code>function reverse ( s )  { \n    if  ( s . length &lt;  2 )  { \n        return s ; \n    } \n    var halfIndex =  Math . ceil ( s . length /  2 ); \n    return reverse ( s . substr ( halfIndex ))  + \n           reverse ( s . substr ( 0 , halfIndex )); \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This reverse prototype function is implemented using \"this\". \nIf you see log console of \"this\", it will generate the array, and it has length property.\nSo that it!!! Just use reverse \"for-loop\" as shown in the code snippet.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>String.prototype.reverse = function () {\r\n    console.log(this);\r\n    var result = \"\";\r\n    var len = this.length;\r\n    \r\n    for (i = (len-1); i &gt;= 0 ; i--) {\r\n        result += this[i];\r\n    }\r\n    return result;\r\n};\r\n\r\nalert(\"elahnu jaknap\".reverse());</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to reverse an input string</p>\n\n<pre><code>var oneway = $('#inputfield').val();\nvar backway = oneway.reverse();\n</code></pre>\n\n<p>but firebug is telling me that <code>oneway.reverse()</code> is not a function. Any ideas?</p>\n\n<p>Thank you</p>\n",
            "last_activity_date": 1419404578,
            "question_id": 1611427,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "string"
            ],
            "title": "Reversing a string in JavaScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Since you're using this in Chrome Extensions, the <a href=\"http://developer.chrome.com/extensions/tabs\">Tab API</a> has a method called <a href=\"http://developer.chrome.com/extensions/tabs#method-captureVisibleTab\">captureVisibleTab</a>, which allows captures the visible area of the currently selected tab in the specified window.</p>\n\n<p>To use that you just add \"tabs\" to your <a href=\"https://developer.chrome.com/extensions/manifest#permissions\">permissions</a> manifest. And from your background page, or popup (or any other extension page), you just call that method like this:</p>\n\n<pre><code>chrome.tabs.captureVisibleTab(null, {}, function (image) {\n   // You can add that image HTML5 canvas, or Element.\n});\n</code></pre>\n\n<p>You can control the property by adding {quality: 50} and change the format too, all described within the docs mentioned above.</p>\n\n<p>The beauty of HTML5, you can alter that image with HTML5 Canvas, you can manipulate, transform, modify, clip, anything you want, very easily!</p>\n\n<p>Hope that is what your looking for! Happy New Years!</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>I'm not sure if this was available when the original answer was given, but Google now has an example available that shows how to take screenshots:</p>\n\n<p><a href=\"http://developer.chrome.com/extensions/samples.html\">http://developer.chrome.com/extensions/samples.html</a></p>\n\n<p>Search for \"Test Screenshot Extension\" on this page.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If you are looking for working example, I have created repo with extension which take screenshot of the entire web page. Take a look here: <a href=\"https://github.com/marcinwieprzkowicz/take-screenshot\" rel=\"nofollow\">https://github.com/marcinwieprzkowicz/take-screenshot</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have made a lot of search regarding taking pictures using JS but none seem to be useful. Some say using activeX controls, which doesn't suit my situation. I was hoping to take picture using JS and upload it a server.</p>\n",
            "last_activity_date": 1394043705,
            "question_id": 4573956,
            "score": 29,
            "tags": [
                "javascript",
                "google-chrome-extension"
            ],
            "title": "Taking screenshot using javascript for chrome extensions"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>With the <a href=\"http://code.google.com/apis/maps/documentation/javascript/\">v3 API</a>, you can easily close the <code>InfoWindow</code> with the <a href=\"http://code.google.com/apis/maps/documentation/javascript/reference.html#InfoWindow\"><code>InfoWindow.close()</code></a> method. You simply need to keep a reference to the <code>InfoWindow</code> object that you are using. Consider the following example, which opens up an <code>InfoWindow</code> and closes it after 5 seconds:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt; \n&lt;head&gt; \n  &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/&gt; \n  &lt;title&gt;Google Maps API InfoWindow Demo&lt;/title&gt; \n  &lt;script src=\"http://maps.google.com/maps/api/js?sensor=false\" \n          type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;/head&gt; \n&lt;body&gt;\n  &lt;div id=\"map\" style=\"width: 400px; height: 500px;\"&gt;&lt;/div&gt;\n\n  &lt;script type=\"text/javascript\"&gt;\n    var map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 4,\n      center: new google.maps.LatLng(-25.36388, 131.04492),\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    });\n\n    var marker = new google.maps.Marker({\n      position: map.getCenter(),\n      map: map\n    });\n\n    var infowindow = new google.maps.InfoWindow({\n      content: 'An InfoWindow'\n    });\n\n    infowindow.open(map, marker);\n\n    setTimeout(function () { infowindow.close(); }, 5000);\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>If you have a separate <code>InfoWindow</code> object for each <code>Marker</code>, you may want to consider adding the <code>InfoWindow</code> object as a property of your <code>Marker</code> objects:</p>\n\n<pre><code>var marker = new google.maps.Marker({\n  position: map.getCenter(),\n   map: map\n});\n\nmarker.infowindow = new google.maps.InfoWindow({\n  content: 'An InfoWindow'\n});\n</code></pre>\n\n<p>Then you would be able to open and close that <code>InfoWindow</code> as follows:</p>\n\n<pre><code>marker.infowindow.open(map, marker);\nmarker.infowindow.close();\n</code></pre>\n\n<p>The same applies if you have an array of markers:</p>\n\n<pre><code>var markers = [];\n\nmarker[0] = new google.maps.Marker({\n  position: map.getCenter(),\n   map: map\n});\n\nmarker[0].infowindow = new google.maps.InfoWindow({\n  content: 'An InfoWindow'\n});\n\n// ...\n\nmarker[0].infowindow.open(map, marker);\nmarker[0].infowindow.close();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p>Or you can share/reuse the same infoWindow object. \nSee this google <a href=\"http://gmaps-samples-v3.googlecode.com/svn/trunk/single-infowindow/single-infowindow.html\">demo</a> for reference.</p>\n\n<p><em>Same code from demo</em></p>\n\n<pre><code>var Demo = { map: null,  infoWindow: null\n};\n\n/**\n * Called when clicking anywhere on the map and closes the info window.\n */\nDemo.closeInfoWindow = function() {\n  Demo.infoWindow.close();\n};\n\n/**\n * Opens the shared info window, anchors it to the specified marker, and\n * displays the marker's position as its content.\n */\nDemo.openInfoWindow = function(marker) {\n  var markerLatLng = marker.getPosition();\n  Demo.infoWindow.setContent([\n    '&lt;b&gt;Marker position is:&lt;/b&gt;&lt;br/&gt;',\n    markerLatLng.lat(),\n    ', ',\n    markerLatLng.lng()\n  ].join(''));\n  Demo.infoWindow.open(Demo.map, marker);\n},\n\n/**\n * Called only once on initial page load to initialize the map.\n */\nDemo.init = function() {\n  // Create single instance of a Google Map.\n  var centerLatLng = new google.maps.LatLng(37.789879, -122.390442);\n  Demo.map = new google.maps.Map(document.getElementById('map-canvas'), {\n    zoom: 13,\n    center: centerLatLng,\n    mapTypeId: google.maps.MapTypeId.ROADMAP\n  });\n\n  // Create a single instance of the InfoWindow object which will be shared\n  // by all Map objects to display information to the user.\n  Demo.infoWindow = new google.maps.InfoWindow();\n\n  // Make the info window close when clicking anywhere on the map.\n  google.maps.event.addListener(Demo.map, 'click', Demo.closeInfoWindow);\n\n  // Add multiple markers in a few random locations around San Francisco.\n  // First random marker\n  var marker1 = new google.maps.Marker({\n    map: Demo.map,\n    position: centerLatLng\n  });\n\n  // Register event listeners to each marker to open a shared info\n  // window displaying the marker's position when clicked or dragged.\n  google.maps.event.addListener(marker1, 'click', function() {\n    Demo.openInfoWindow(marker1);\n  });\n\n  // Second random marker\n  var marker2 = new google.maps.Marker({\n    map: Demo.map,\n    position: new google.maps.LatLng(37.787814,-122.40764),\n    draggable: true\n  });\n\n  // Register event listeners to each marker to open a shared info\n  // window displaying the marker's position when clicked or dragged.\n  google.maps.event.addListener(marker2, 'click', function() {\n    Demo.openInfoWindow(marker2);\n  });\n\n  // Third random marker\n  var marker3 = new google.maps.Marker({\n    map: Demo.map,\n    position: new google.maps.LatLng(37.767568,-122.391665),\n    draggable: true\n  });\n\n  // Register event listeners to each marker to open a shared info\n  // window displaying the marker's position when clicked or dragged.\n  google.maps.event.addListener(marker3, 'click', function() {\n    Demo.openInfoWindow(marker3);\n  });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I was having a similar issue. I simply added the following to my code:</p>\n\n<pre><code>closeInfoWindow = function() {\n    infoWindow.close();\n};\n\ngoogle.maps.event.addListener(map, 'click', closeInfoWindow);\n</code></pre>\n\n<p>The full js code is (the code above is about 15 lines from the bottom):</p>\n\n<pre><code>jQuery(window).load(function() {\nif (jQuery(\"#map_canvas\").length &gt; 0){\n    googlemap();\n}\n});\n\nfunction googlemap() {\n\njQuery('#map_canvas').css({'height': '400px'});\n\n// Create the map \n// No need to specify zoom and center as we fit the map further down.\nvar map = new google.maps.Map(document.getElementById(\"map_canvas\"), {\n  mapTypeId: google.maps.MapTypeId.ROADMAP,\n  streetViewControl: false\n});\n\n// Create the shared infowindow with two DIV placeholders\n// One for a text string, the other for the StreetView panorama.\nvar content = document.createElement(\"div\");\nvar title = document.createElement(\"div\");\nvar boxText = document.createElement(\"div\");\n\nvar myOptions = {\n         content: boxText\n        ,disableAutoPan: false\n        ,maxWidth: 0\n        ,pixelOffset: new google.maps.Size(-117,-200)\n        ,zIndex: null\n        ,boxStyle: { \n          background: \"url('\"+siteRoot+\"images/house-icon-flat.png') no-repeat\"\n          ,opacity: 1\n          ,width: \"236px\"\n          ,height: \"300px\"\n         }\n        ,closeBoxMargin: \"10px 0px 2px 2px\"\n        ,closeBoxURL: \"http://kdev.langley.com/wp-content/themes/langley/images/close.gif\"\n        ,infoBoxClearance: new google.maps.Size(1, 1)\n        ,isHidden: false\n        ,pane: \"floatPane\"\n        ,enableEventPropagation: false\n};\n\n\nvar infoWindow = new InfoBox(myOptions);\nvar MarkerImage = siteRoot+'images/house-web-marker.png';\n\n// Create the markers\nfor (index in markers) addMarker(markers[index]);\nfunction addMarker(data) {\n    var marker = new google.maps.Marker({\n        position: new google.maps.LatLng(data.lat, data.lng),\n        map: map,\n        title: data.title,\n        content: data.html,\n        icon: MarkerImage\n    });\n    google.maps.event.addListener(marker, \"click\", function() {\n        infoWindow.open(map, this);         \n        title.innerHTML = marker.getTitle();\n        infoWindow.setContent(marker.content);\n        infoWindow.open(map, marker);\n        jQuery(\".innerinfo\").parent().css({'overflow':'hidden', 'margin-right':'10px'});            \n    });\n}\n\n// Zoom and center the map to fit the markers\n// This logic could be conbined with the marker creation.\n// Just keeping it separate for code clarity.\nvar bounds = new google.maps.LatLngBounds();\nfor (index in markers) {\n    var data = markers[index];\n    bounds.extend(new google.maps.LatLng(data.lat, data.lng));\n}\nmap.fitBounds(bounds);\nvar origcent = new google.maps.LatLng(map.getCenter());\n// Handle the DOM ready event to create the StreetView panorama\n// as it can only be created once the DIV inside the infowindow is loaded in the DOM.\n\ncloseInfoWindow = function() {\n        infoWindow.close();\n    };\n\ngoogle.maps.event.addListener(map, 'click', closeInfoWindow);\n\ngoogle.maps.event.addListener(infoWindow, 'closeclick', function()\n{\n    centermap();\n});\n\nfunction centermap()\n{\n    map.setCenter(map.fitBounds(bounds));\n}\n}\n\njQuery(window).resize(function() {\ngooglemap();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>infowindow.open(null,null);\n</code></pre>\n\n<p>will close opened infowindow.\nIt will work same as </p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You could simply add a click listener on the map inside the function that creates the InfoWindow</p>\n\n<pre><code>google.maps.event.addListener(marker, 'click', function() {\n    var infoWindow = createInfoWindowForMarker(marker);\n    infoWindow.open(map, marker);\n    google.maps.event.addListener(map, 'click', function() {\n        infoWindow.close();\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This one would also work:</p>\n\n<pre><code>google.maps.event.addListener(marker, 'click', function() {\n                if(!marker.open){\n                    infowindow.open(map,marker);\n                    marker.open = true;\n                }\n                else{\n                    infowindow.close();\n                    marker.open = false;\n                }\n            });\n</code></pre>\n\n<p>Which will open an infoWindow when clicked on it, close it when clicked on it if it was opened.</p>\n\n<p>Also having seen Logan's solution, these 2 can be combined into this:</p>\n\n<pre><code>google.maps.event.addListener(marker, 'click', function() {\n                if(!marker.open){\n                    infowindow.open(map,marker);\n                    marker.open = true;\n                }\n                else{\n                    infowindow.close();\n                    marker.open = false;\n                }\n                google.maps.event.addListener(map, 'click', function() {\n                    infowindow.close();\n                    marker.open = false;\n                });\n            });\n</code></pre>\n\n<p>Which will open an infoWindow when clicked on it, close it when clicked on it and it was opened, and close it if it's clicked anywhere on the map and the infoWindows was opened.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Trying to simply close an infowindow?</p>\n\n<p>I already have an array of markers, so something like this would be good. Thanks</p>\n\n<pre><code>MyMarkers[i].infowindow.close();\n</code></pre>\n",
            "last_activity_date": 1383673463,
            "question_id": 2946165,
            "score": 28,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3"
            ],
            "title": "Google Map API v3 ~ Simply Close an infowindow?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Check out the jQuery <a href=\"http://plugins.jquery.com/project/dimensions\" rel=\"nofollow\">dimensions plugin</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To get screen resolution in JS use <code>screen</code> object</p>\n\n<pre><code>screen.height;\nscreen.width;\n</code></pre>\n\n<p>Based on that values you can calculate your margin to whatever suits you.</p>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>Here is an example on how to center an object vertically with jQuery:</p>\n\n<pre><code>var div= $('#div_SomeDivYouWantToAdjust');\ndiv.css(\"top\", ($(window).height() - div.height())/2  + 'px');\n</code></pre>\n\n<p>But you could easily change that to whatever your needs are.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Another example for vertically and horizontally centered div or any object(s):</p>\n\n<pre><code> var obj = $(\"#divID\");\n var halfsc = $(window).height()/2;\n var halfh = $(obj).height() / 2; \n\n var halfscrn = screen.width/2;\n var halfobj =$(obj).width() / 2; \n\n var goRight =  halfscrn - halfobj ;\n var goBottom = halfsc - halfh;\n\n $(obj).css({marginLeft: goRight }).css({marginTop: goBottom });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>var space = $(window).height();\nvar diff = space - HEIGHT;\nvar margin = (diff &gt; 0) ? (space - HEIGHT)/2 : 0;\n$('#container').css({'margin-top': margin});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In order to better balance out a page I am working on I would like to find a way to increase the top margin of a DIV depending on the screen resolution. What is my best way to set these dimensions with jQuery or Javascript?</p>\n",
            "last_activity_date": 1340986993,
            "question_id": 1271675,
            "score": 27,
            "tags": [
                "javascript",
                "jquery",
                "screen",
                "resolution",
                "margins"
            ],
            "title": "jQuery Screen Resolution Height Adjustment"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>$(document).ready(function() {\n       scope.$apply(function() {\n                applyHeight();\n            });\n});\n</code></pre>\n\n<p>This also ensures that all the scripts have been loaded before the execution of the statements. If you dont need that you can use </p>\n\n<pre><code>$(window).load(function() {\n       scope.$apply(function() {\n                applyHeight();\n            });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I came across your post as I was looking for a solution to  the same problem for myself. I am new to Angular but put together the following solution using a directive based on a number of posts. You can try it here (try resizing the browser window): <a href=\"http://jsfiddle.net/zbjLh/2/\">http://jsfiddle.net/zbjLh/2/</a></p>\n\n<p>View:</p>\n\n<pre><code>&lt;div ng-app=\"miniapp\" ng-controller=\"AppController\" ng-style=\"style()\" resize&gt;\n    window.height: {{windowHeight}} &lt;br /&gt;\n    window.width: {{windowWidth}} &lt;br /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Controller:</p>\n\n<pre><code>var app = angular.module('miniapp', []);\n\nfunction AppController($scope) {\n    /* Logic goes here */\n}\n\napp.directive('resize', function ($window) {\n    return function (scope, element) {\n        var w = angular.element($window);\n        scope.getWindowDimensions = function () {\n            return { 'h': w.height(), 'w': w.width() };\n        };\n        scope.$watch(scope.getWindowDimensions, function (newValue, oldValue) {\n            scope.windowHeight = newValue.h;\n            scope.windowWidth = newValue.w;\n\n            scope.style = function () {\n                return { \n                    'height': (newValue.h - 100) + 'px',\n                    'width': (newValue.w - 100) + 'px' \n                };\n            };\n\n        }, true);\n\n        w.bind('resize', function () {\n            scope.$apply();\n        });\n    }\n})\n</code></pre>\n\n<p>FYI I originally had it working in a controller (<a href=\"http://jsfiddle.net/zbjLh/\">http://jsfiddle.net/zbjLh/</a>), but from subsequent reading found that this is uncool from Angular's perspective, so I have now converted it to use a directive.</p>\n\n<p>Importantly, note the <code>true</code> flag at the end of the 'watch' function, for comparing the getWindowDimensions return object's equality (remove or change to false if not using an object).</p>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>It seems you require the following plugin:\n<a href=\"https://github.com/yearofmoo/AngularJS-Scope.onReady\" rel=\"nofollow\">https://github.com/yearofmoo/AngularJS-Scope.onReady</a></p>\n\n<p>It basically gives you the functionality to run your directive code after the your scope or data is loaded i.e. $scope.$whenReady</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Combining <a href=\"http://stackoverflow.com/users/1371408/matty-j\">matty-j</a> suggestion with the snippet of the question, I ended up with this code focusing on resizing the grid after the data was loaded.</p>\n\n<p>The HTML:</p>\n\n<pre><code>&lt;div ng-grid=\"gridOptions\" class=\"gridStyle\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>The directive:</p>\n\n<pre><code>angular.module('myApp.directives', [])\n    .directive('resize', function ($window) {\n        return function (scope, element) {\n\n            var w = angular.element($window);\n            scope.getWindowDimensions = function () {\n                return { 'h': w.height(), 'w': w.width() };\n            };\n            scope.$watch(scope.getWindowDimensions, function (newValue, oldValue) {\n\n                // resize Grid to optimize height\n                $('.gridStyle').height(newValue.h - 250);\n            }, true);\n\n            w.bind('resize', function () {\n                scope.$apply();\n            });\n        }\n    });\n</code></pre>\n\n<p>The controller:</p>\n\n<pre><code>angular.module('myApp').controller('Admin/SurveyCtrl', function ($scope, $routeParams, $location, $window, $timeout, Survey) {\n\n    // Retrieve data from the server\n    $scope.surveys = Survey.query(function(data) {\n\n        // Trigger resize event informing elements to resize according to the height of the window.\n        $timeout(function () {\n            angular.element($window).resize();\n        }, 0)\n    });\n\n    // Configure ng-grid.\n    $scope.gridOptions = {\n        data: 'surveys',\n        ...\n    };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My solution if your ng-grid depend of element parent(div, layout) :</p>\n\n<p>directive </p>\n\n<pre><code>myapp.directive('sizeelement', function ($window) {\nreturn{\n    scope:true,\n    priority: 0,\n    link: function (scope, element) {\n        scope.$watch(function(){return $(element).height(); }, function(newValue, oldValue) {\n            scope.height=$(element).height();\n        });\n    }}\n})\n</code></pre>\n\n<p>sample html</p>\n\n<pre><code>&lt;div class=\"portlet  box grey\" style=\"height: 100%\" sizeelement&gt;\n    &lt;div class=\"portlet-title\"&gt;\n        &lt;h4&gt;&lt;i class=\"icon-list\"&gt;&lt;/i&gt;Articles&lt;/h4&gt;\n    &lt;/div&gt;\n    &lt;div class=\"portlet-body\" style=\"height:{{height-34}}px\"&gt;\n        &lt;div class=\"gridStyle\" ng-grid=\"gridOrderLine\" =\"min-height: 250px;\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>height-34 : 34 is fix height of my title div, you can fix other height.</p>\n\n<p>It is easy directive but it work fine.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>angular.element(document).ready(function () {\n    //your logic here\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I'm AngularJS newbie. I want to create grid (using <a href=\"http://angular-ui.github.com/ng-grid\">ng-grid</a>) which height depends on window height ie. <code>$('.gridStyle').height($(window).height() - 100);</code></p>\n\n<p>I have written directive:</p>\n\n<pre><code>app.directive('resize', function($window) {\n\n    return function(scope, element) {\n\n        function applyHeight() {\n            scope.height = $window.innerHeight;\n            $('.gridStyle').height(scope.height - 100);\n        }\n\n        angular.element($window).bind('resize', function() {\n            scope.$apply(function() {\n                applyHeight();\n            });\n        });\n\n        applyHeight();\n    };\n});\n</code></pre>\n\n<p>This works well when I resize browser window but style is not applied when site is loaded for the first time. Where can I put code to initalize height?</p>\n",
            "last_activity_date": 1415163468,
            "question_id": 14703517,
            "score": 24,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Angular.js: set element height on page load"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>There are a lot of possible issues. Try with one of these solutions:</p>\n\n<ul>\n<li>protocols must be the same (so the page that attempts to access the iframe must have the same protocol of the site that deliver the iframe), so if you are testing your app in sandbox mode (http instead of https), disable the \"Secure browsing\" mode of your testing account</li>\n<li>channelUrl on <code>FB.init()</code> <em>(see code below)</em></li>\n<li>enable the headers mod of apache and put the below lines in your .htaccess</li>\n<li>put the <code>&lt;div id=\"fb-root\"&gt;&lt;/div&gt;</code> after the body tag as explained in the fb doc here: <a href=\"https://developers.facebook.com/docs/reference/javascript/\" rel=\"nofollow\">https://developers.facebook.com/docs/reference/javascript/</a></li>\n<li>try to put all the automated login code after a user action (like a click on a login button)</li>\n<li>remove the trailing slash from the Canvas URL (in app\u2192settings) like <code>http://yoursite.com?</code></li>\n<li>edit your <code>&lt;html&gt;</code> tag like this: <code>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:fb=\"https://www.facebook.com/2008/fbml\"&gt;</code></li>\n</ul>\n\n<p>Code for <strong>.htaccess</strong></p>\n\n<pre><code>&lt;IfModule mod_headers.c&gt;\n    Header set Access-Control-Allow-Origin \"*\"\n&lt;/IfModule&gt;\n</code></pre>\n\n<p>Code for <strong>channels</strong> issue:</p>\n\n<pre><code>FB.init({\n    appId: '1234567890',\n    status: true,\n    cookie: true,\n    xfbml: true,\n    channelUrl : '//yoursite.com/channel.html'\n});\n</code></pre>\n\n<p>The <strong>channel.html</strong> delivered by your server should contain this single line:</p>\n\n<pre><code>&lt;script src=\"//connect.facebook.net/en_US/all.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p><strong>EDIT</strong></p>\n\n<p>About your first issue:</p>\n\n<pre><code>The page at about:blank displayed insecure content from http://static.ak.facebook.com/connect/xd_arbiter.php?version=18#cb=f2e4fe7b\u2026os.com%2Ff4aeadb2&amp;domain=www.mydomain.com&amp;relation=parent&amp;error=unknown_user.\n</code></pre>\n\n<p>This is an expected exception that is used to test for a condition - this has no side effects so don't care about it.</p>\n\n<p>Please refer to this question: <a href=\"http://stackoverflow.com/questions/10577590/unsafe-javascript-attempt-to-access-frame-with-url-domains-protocols-and-ports\">Unsafe JavaScript attempt to access frame with URL: Domains, protocols and ports must match.</a></p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>In my case I had a \"facebook-like-box\" at \"_Layout\" view and I had to customize some CSS for it, at the <b>global.css</b> file.</p>\n\n<pre>\n.fb_iframe_widget, .fb_iframe_widget span, .fb_iframe_widget span iframe[style] {\n    width: 100% !important;\n}\n</pre>\n\n<p>Then, when I tried to load internal pages, such as Articles and News, which has a share button for facebook, it starts to give me this error:</p>\n\n<pre>\nUncaught SecurityError: Failed to read the 'contentDocument' property from 'HTMLIFrameElement': Blocked a frame with origin \"http://localhost:51826\" from accessing a frame with origin \"http://static.ak.facebook.com\". The frame being accessed set \"document.domain\" to \"facebook.com\", but the frame requesting access did not. Both must set \"document.domain\" to the same value to allow access.\n</pre>\n\n<p>Somehow I think that line of CSS code was causing this issue (by being at the global scope), trying to access and modify behavior of the iframe for my share button.</p>\n\n<ol>\n<li>Removing that line of CSS code solved the problem.</li>\n<li>Moving that line of CSS code to the specific page which has the \"facebook-like-box\" inside &lt; style > tags.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Mine is a FB App based on canvas. Facing an issue both on Chrome and Firefox, (although usually Chrome):</p>\n\n<p>1.When I hit my approved fb app secure URL on a new incognito Chrome window (<a href=\"https://apps.facebook.com/myfbappnamespace/\">https://apps.facebook.com/myfbappnamespace/</a>), the below error comes only for the first time, and when I refresh the page the error is gone (most of the times)</p>\n\n<blockquote>\n  <p>The page at about:blank displayed insecure content from\n  <a href=\"http://static.ak.facebook.com/connect/xd_arbiter.php?version=18#cb=f2e4fe7b\">http://static.ak.facebook.com/connect/xd_arbiter.php?version=18#cb=f2e4fe7b</a>\u2026os.com%2Ff4aeadb2&amp;domain=www.mydomain.com&amp;relation=parent&amp;error=unknown_user.</p>\n  \n  <p>Unsafe JavaScript attempt to access frame with URL\n  <a href=\"http://www.mydomain.com/control/myfacebookapp/\">http://www.mydomain.com/control/myfacebookapp/</a> from frame with URL\n  <a href=\"http://static.ak.facebook.com/connect/xd_arbiter.php?version=18#cb=f2e4fe7b\">http://static.ak.facebook.com/connect/xd_arbiter.php?version=18#cb=f2e4fe7b</a>\u2026os.com%2Ff4aeadb2&amp;domain=www.mydomain.com&amp;relation=parent&amp;error=unknown_user.\n  The frame requesting access set 'document.domain' to 'facebook.com',\n  but the frame being accessed did not. Both must set 'document.domain'\n  to the same value to allow access.<br>\n  xd_arbiter.php:18</p>\n  \n  <p>Unsafe JavaScript attempt to access frame with URL\n  <a href=\"http://www.mydomain.com/control/myfacebookapp/\">http://www.mydomain.com/control/myfacebookapp/</a> from frame with URL\n  <a href=\"http://static.ak.facebook.com/connect/xd_arbiter.php?version=18#cb=f2e4fe7b\">http://static.ak.facebook.com/connect/xd_arbiter.php?version=18#cb=f2e4fe7b</a>\u2026os.com%2Ff4aeadb2&amp;domain=www.mydomain.com&amp;relation=parent&amp;error=unknown_user.\n  The frame requesting access set 'document.domain' to 'facebook.com',\n  but the frame being accessed did not. Both must set 'document.domain'\n  to the same value to allow access.                                                                        xd_arbiter.php:18</p>\n</blockquote>\n\n<p>2.When I try the http url(<a href=\"http://apps.facebook.com/myfbappnamespace/\">http://apps.facebook.com/myfbappnamespace/</a>), the error shown in console is:</p>\n\n<blockquote>\n  <p>Unsafe JavaScript attempt to access frame with URL\n  <a href=\"http://apps.facebook.com/myfbappnamespace/\">http://apps.facebook.com/myfbappnamespace/</a> from frame with URL\n  <a href=\"https://s-static.ak.facebook.com/connect/xd_arbiter.php?version=18#channel=\">https://s-static.ak.facebook.com/connect/xd_arbiter.php?version=18#channel=</a>\u2026Fcontrol%2Ffacebookappchannelurl%3Ffb_xd_fragment%23xd_sig%3Df23e84e85c%26.\n  The frame requesting access has a protocol of 'https', the frame being\n  accessed has a protocol of 'http'. Protocols must match.</p>\n</blockquote>\n\n<p>Now when I login to my fb account to see what happens with these errors, they are gone, again only sometimes. I know that I am using \"most of the times\" and \"sometimes\" here in my query but that is exactly what is happening with me. I have also searched forums and realize that fb has already fixed this old issue which was supposed to be chrome specific. I have made sure that my FB.init and other calls are location.protocol value specific. Also configured correct values in canvas url (http) and secure canvas url (https). Also tried with both the settings:\nAccount Settings -> Security -> Secure Browsing -> (Enabled as well as Disabled)</p>\n\n<p>Can somebody please help if I am missing something somewhere?</p>\n",
            "last_activity_date": 1422356850,
            "question_id": 14892556,
            "score": 19,
            "tags": [
                "javascript",
                "facebook",
                "google-chrome",
                "cross-domain"
            ],
            "title": "Facebook: Unsafe JavaScript issue (document.domain values should be same)"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<h3>This is possible, and even quite easy!</h3>\n\n<p>Well, if we look at how <a href=\"http://stackoverflow.com/q/23363014/1348195\">Angular's own promises work</a>, we need to get Bluebird to <code>$evalAsync</code> somewhere in order to get the exact same behavior.</p>\n\n<p>If we do that, the fact both implementations are <a href=\"http://promisesaplus.com/\">Promises/A+</a> complaint means we can interop between $q code and Bluebird code meaning we can use all of Bluebird's features in Angular code freely.</p>\n\n<p>Bluebird exposes this functionality, with its <a href=\"https://github.com/petkaantonov/bluebird/blob/master/API.md#promisesetschedulerfunction-scheduler---void\"><code>Promise.setScheduler</code></a> functionality:</p>\n\n<pre><code>// after this, all promises will cause digests like $q promises.\nfunction trackDigests(app) {\n    app.run([\"$rootScope\",function ($rootScope) {\n        Promise.setScheduler(function (cb) {\n            $rootScope.$evalAsync(cb);\n        });\n    }]);\n}\n</code></pre>\n\n<p>Now all we have to do is add a:</p>\n\n<pre><code>trackDigests(app); \n</code></pre>\n\n<p>Line after the <code>var app = ...</code> line, and everything will work as expected. For bonus points, put Bluebird in a service so you can inject it rather than use it on the global namespace. </p>\n\n<p>Here is a [<a href=\"http://jsfiddle.net/X4mAR/\"><strong>Fiddle</strong></a>] illustrating this behavior. </p>\n\n<p>Note that besides all the features Bluebird has over <code>$q</code>, one of the more important ones is that Bluebird will <em>not</em> run <code>$exceptionHandler</code>, but instead will automatically track unhandled rejections, so you can <code>throw</code> freely with Bluebird promises and Bluebird will figure them out. Moreover calling <code>Promise.longStackTraces()</code> can help with debugging a lot.</p>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p>I tried using Angular with Bluebird promises:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;body ng-app=\"HelloApp\"&gt;\n    &lt;div ng-controller=\"HomeController\"&gt;{{name}} {{also}}&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>// javascript\nvar app = angular.module('HelloApp', []);\n\napp.controller(\"HomeController\", function ($scope) {\n    var p = Promise.delay(1000).then(function () {\n        $scope.name = \"Bluebird!\";\n        console.log(\"Here!\", $scope.name);\n    }).then(function () {\n        $scope.also = \"Promises\";\n    });\n    $scope.name = \"$q\";\n    $scope.also = \"promises\";\n});\n\nwindow.app = app;\n</code></pre>\n\n<p>[<a href=\"http://jsfiddle.net/5uMHh/\"><strong>Fiddle</strong></a>]</p>\n\n<p>However, no matter what I tried, it kept staying <code>\"$q promises\"</code> and did not update. Except if I added a manual <code>$scope.$apply</code> which I'd rather avoid.</p>\n\n<h3>How do I get Bluebird to work with AngularJS?</h3>\n\n<p>(I know it's possible since $q does it)</p>\n\n<p>I'm using Bluebird 2.0 which I got <a href=\"https://rawgit.com/petkaantonov/bluebird/2.0/js/browser/bluebird.js\">here</a>.</p>\n",
            "last_activity_date": 1406986289,
            "question_id": 23984471,
            "score": 15,
            "tags": [
                "javascript",
                "angularjs",
                "promise",
                "bluebird",
                "angular-promise"
            ],
            "title": "How do I use Bluebird with Angular?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>JavaScript inheritance is done through prototypes. You do not define anything with a <code>class</code> keyword, but you make a function that's used as a constructor to build new objects (with the <code>new</code> keyword ).</p>\n\n<pre><code>function person(name) {\n    this.name = name;\n}\n\nperson.prototype.getName = function() {\n    return this.name;\n}\n\nvar john = new person('john');\nalert( john.getName() );\n</code></pre>\n\n<p>You can access this prototypal method with:</p>\n\n<pre><code>person.prototype.getName\n</code></pre>\n\n<p>All newly created objects are constructed based on the core constructors (sometimes called classes by people coming from classical inheritance languages, or the core objects) such as <code>Object</code>, so every object in JavaScript has access to <code>Object.prototype</code>. If you were to make a custom method for all objects you would do:</p>\n\n<pre><code>Object.prototype.foo = function(){};\nalert( typeof ({}).foo ) // 'function'\n</code></pre>\n\n<p>Key notes:</p>\n\n<ul>\n<li>The <code>this</code> word is used to refer to the current object, so <code>this.name</code> sets the name property of the object being created when <code>new person</code> is invoked.</li>\n<li>You can define new prototypal methods on the constructor with <code>constructorName.prototype.nameOfMethod = function(){}</code> <em>after</em> you define the constructor. You do not need to define it inside of the constructor, and it's more efficient this way.</li>\n<li>Unless you explicitly define properties on the object, so with the <code>john</code> object I made, since there is no <code>getName</code> method directly attached to the <code>john</code> object, the interpreter needs to travel up to the prototype of the <code>john</code> object, which is the <code>person.prototype</code> and access the method from there. You can use <code>hasOwnProperty</code> to see if an object directly owns a property or not.</li>\n</ul>\n\n<p>Reference:</p>\n\n<ul>\n<li><em><a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Inheritance\" rel=\"nofollow\">Inheritance revisited</a></em> </li>\n<li><em><a href=\"http://www.crockford.com/javascript/inheritance.html\" rel=\"nofollow\">Classical Inheritance in JavaScript</a></em></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The JavaScript object oriented paradigm is <a href=\"http://en.wikipedia.org/wiki/Prototype-based_programming\">prototype based</a>. There are no \"classes\", just objects.</p>\n\n<p>You can implement inheritance in different ways. The two more popular alternatives are the \"pseudo-classical\" and the \"prototypal\" forms. For example:</p>\n\n<h3>Pseudo-classical inheritance</h3>\n\n<p>I think this is the most popular way. You create <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Creating_New_Objects/Using_a_Constructor_Function\">constructor functions</a> that you use with the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Operators/Special_Operators/new_Operator\">new</a> operator, and you add members through the constructor function prototype.</p>\n\n<pre><code>// Define the Person constructor function\nfunction Person() {}\n\nPerson.prototype.sayHello = function(){\n    alert ('hello');\n};\n\n// Define the Student constructor function\nfunction Student() {}\n\n// Inherit from Person\nStudent.prototype = new Person();\n\n// Correct the constructor pointer, because it points to Person\nStudent.prototype.constructor = Student;\n\n// Replace the sayHello method (a polymorphism example)\nStudent.prototype.sayHello = function () {\n    alert('hi, I am a student');\n}\n\nvar student1 = new Student();\nstudent1.sayHello();\n</code></pre>\n\n<h3><a href=\"http://javascript.crockford.com/prototypal.html\">Prototypal inheritance</a></h3>\n\n<p>Basically we make a helper function that takes an object as a parameter and returns an empty new object that inherits from the old one, <em>objects inherit from objects</em>.</p>\n\n<pre><code>// Helper function\nif (typeof Object.create !== 'function') {\n    Object.create = function (o) {\n        function F() {}\n        F.prototype = o;\n        return new F();\n    };\n}\n\nvar person = {\n    sayHello : function () {\n        alert('Person object');\n    },\n    walk : function () {\n        alert('walk');\n    }\n};\n\nvar student1 = Object.create(person);\nstudent1.sayHello = function () {\n    alert('hello I am a student');\n};\n</code></pre>\n\n<p>Another interesting form is the <strong>parasitic inheritance</strong>. In the \"derived\" constructor you create a \"base\" object instance. That object is augmented and that new instance is returned: </p>\n\n<pre><code>// Person constructor function\nfunction Person(name) {\n    this.name = name;\n}\n\nfunction Student(value) {\n    var that = new Person(value);\n    that.sayHello = function () {\n        alert('hello I am a student');\n    };\n    return that;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>If you have done Object Oriented Programming in JavaScript, you will know that you can create a class as follows:</p>\n\n<pre><code>Person = function(id, name, age){\n    this.id = id;\n    this.name = name;\n    this.age = age;\n    alert('A new person has been accepted');\n}\n</code></pre>\n\n<p>So far our class person only has two properties and we are going to give it some methods. A clean way of doing this is\nto use its 'prototype' object.\nStarting from JavaScript 1.1, the prototype object was introduced in JavaScript. This is a built in object that\nsimplifies the process of adding custom properties and methods to all instances of an object.\nLet's add 2 methods to our class using its 'prototype' object as follows:</p>\n\n<pre><code>Person.prototype = {\n    /** wake person up */\n    wake_up: function() {\n        alert('I am awake');\n    },\n\n    /** retrieve person's age */\n    get_age: function() {\n        return this.age;\n    }\n}\n</code></pre>\n\n<p>Now we have defined our class Person. What if we wanted to define another class called Manager which inherits some properties from Person. There is no point redefining all this properties again when we define our Manager class, we can just set it to inherit from the class Person.\nJavaScript doesn't have built in inheritance but we can use a technique to implement inheritance as follows:</p>\n\n<p><code>Inheritance_Manager = {};</code>//We create an inheritance manager class (the name is arbitrary)</p>\n\n<p>Now let's give our inheritance class a method called extend which takes the baseClass and subClassas arguments.\nWithin the extend method, we will create an inner class called inheritance function inheritance() { }. The reason why we are using this inner\nclass is to avoid confusion between the baseClass and subClass prototypes.\nNext we make the prototype of our inheritance class point to the baseClass prototype as with the following code:\ninheritance.prototype = baseClass. prototype;\nThen we copy the inheritance prototype into the subClass prototype as follows: subClass.prototype = new inheritance();\nThe next thing is to specify the constructor for our subClass as follows: subClass.prototype.constructor = subClass;\nOnce finished with our subClass prototyping, we can specify the next two lines of code to set some base class pointers.</p>\n\n<pre><code>subClass.baseConstructor = baseClass;\nsubClass.superClass = baseClass.prototype;\n</code></pre>\n\n<p>Here is the full code for our extend function:</p>\n\n<pre><code>Inheritance_Manager.extend = function(subClass, baseClass) {\n    function inheritance() { }\n    inheritance.prototype = baseClass.prototype;\n    subClass.prototype = new inheritance();\n    subClass.prototype.constructor = subClass;\n    subClass.baseConstructor = baseClass;\n    subClass.superClass = baseClass.prototype;\n}\n</code></pre>\n\n<p>Now that we have implemented our inheritance, we can start using it to extend our classes. In this case we are going to\nextend our Person class into a Manager class as follows:</p>\n\n<p>We define the Manager class</p>\n\n<pre><code>Manager = function(id, name, age, salary) {\n    Person.baseConstructor.call(this, id, name, age);\n    this.salary = salary;\n    alert('A manager has been registered.');\n}\n</code></pre>\n\n<p>we make it inherit form Person</p>\n\n<pre><code>Inheritance_Manager.extend(Manager, Person);\n</code></pre>\n\n<p>If you noticed, we have just called the extend method of our Inheritance_Manager class and passed the subClass Manager in our case and then the baseClass Person. Note that the order is very important here. If you swap them, the inheritance\nwill not work as you intended if at all.\nAlso note that you will need to specify this inheritance before you can actually define our subClass.\nNow let us define our subClass:</p>\n\n<p>We can add more methods as the one below. Our Manager class will always have the methods and properties defined in the Person class because it inherits from it.</p>\n\n<pre><code>Manager.prototype.lead = function(){\n   alert('I am a good leader');\n}\n</code></pre>\n\n<p>Now to test it let us create two objects, one from the class Person and one from the inherited class Manager:</p>\n\n<pre><code>var p = new Person(1, 'Joe Tester', 26);\nvar pm = new Manager(1, 'Joe Tester', 26, '20.000');\n</code></pre>\n\n<p>Feel free to get full code and more comments at: \n<a href=\"http://www.cyberminds.co.uk/blog/articles/how-to-implement-javascript-inheritance.aspx\" rel=\"nofollow\">http://www.cyberminds.co.uk/blog/articles/how-to-implement-javascript-inheritance.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>JavaScript is a <a href=\"http://javascript.crockford.com/prototypal.html\" rel=\"nofollow\">prototype based</a> inheritance.  However if you use Ext-js, it will allow you to have syntax more a classical inheritance syntax. Be warned it is still prototyping under the hood, so there will be some nuances that you should be aware of. Mainly that it is load and go, so the order you load your script matters and your class definitions sit essentially in memory. </p>\n\n<p>There are some good <a href=\"http://www.sencha.com/learn/sencha-class-system\" rel=\"nofollow\">tutorials</a> out there.  I suggest going through the initial docs and watching this <a href=\"https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=3&amp;cad=rja&amp;ved=0CEQQtwIwAg&amp;url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DhQVTIJBZook&amp;ei=TgfgUu-WCams2AW1xoGwDQ&amp;usg=AFQjCNHz_wKo-HGUhpQe1yivbnQ5Lzf0Dw&amp;sig2=7UAV2bKt248FZ75wFO_xGQ&amp;bvm=bv.59568121,d.b2I\" rel=\"nofollow\">video</a>. Ext does a pretty good job about making JavaScript feel more like Java or C#, and reducing the amount of markup you write. However the trade off is that you have a higher learning curve for customizing components. Once you get a stronger grasp of the scoping of the language, you will be able to use mixins, functions better to reduce the need for inheritance.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You may try</p>\n\n<pre><code>subClass.prototype.__proto__ = baseClass.prototype;\n</code></pre>\n\n<p>For details please visit <a href=\"http://object-oriented-concepts-javascript.blogspot.com\" rel=\"nofollow\">Here</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Now while I know that you can not perform inheritance like you would in C#, I have seen it mentioned on the Internet that it is kind of possible. If it's not possible using plain JavaScript code then would it be possible using <a href=\"http://en.wikipedia.org/wiki/Ext_JS\">Ext&nbsp;JS</a> and if so how?</p>\n",
            "last_activity_date": 1414921491,
            "question_id": 1586915,
            "score": 10,
            "tags": [
                "javascript",
                "inheritance",
                "extjs",
                "prototypal-inheritance"
            ],
            "title": "Performing inheritance in JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Formatted :</p>\n\n<pre><code>$(\"input:checkbox[name=type]:checked\").each(function()\n{\n    // add $(this).val() to your array\n});\n</code></pre>\n\n<p>Hopefully, it will work.</p>\n",
                    "is_accepted": true,
                    "score": 124
                },
                {
                    "body": "<p>This should do the trick:</p>\n\n<pre><code>$('input:checked');\n</code></pre>\n\n<p>I don't think you've got other elements that can be checked, but if you do, you'd have to make it more specific:</p>\n\n<pre><code>$('input:checkbox:checked');\n\n$('input:checkbox').filter(':checked');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I didnt test it but it should work</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar selected = new Array();\n\n$(document).ready(function() {\n\n  $(\"input:checkbox[name=type]:checked\").each(function() {\n       selected.push($(this).val());\n  });\n\n});\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>In MooTools 1.3 (latest at the time of writing):</p>\n\n<pre><code>var array = [];\n$$(\"input[type=checkbox]:checked\").each(function(i){\n    array.push( i.value );\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>var chk_arr =  document.getElementsByName(\"chkRights[]\");\nvar chklength = chk_arr.length;             \n\nfor(k=0;k&lt; chklength;k++)\n{\n    chk_arr[k].checked = false;\n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 31
                }
            ],
            "body": "<p>So I have these checkboxes:</p>\n\n<pre><code>&lt;input type=\"checkbox\" name=\"type\" value=\"4\" /&gt;\n&lt;input type=\"checkbox\" name=\"type\" value=\"3\" /&gt;\n&lt;input type=\"checkbox\" name=\"type\" value=\"1\" /&gt;\n&lt;input type=\"checkbox\" name=\"type\" value=\"5\" /&gt;\n</code></pre>\n\n<p>And so on. There are about 6 of them and are hand-coded (i.e not fetched from a db) so they are likely to remain the same for a while.</p>\n\n<p>My question is how I can get them all in an array (in javascript), so I can use them while making an AJAX <code>$.post</code> request using Jquery.</p>\n\n<p>Any thoughts?</p>\n\n<p>Edit: I would only want the selected checkboxes to be added to the array</p>\n",
            "last_activity_date": 1374606092,
            "question_id": 590018,
            "score": 63,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "dhtml"
            ],
            "title": "Getting all selected checkboxes in an array"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Does this work for you?</p>\n\n<pre><code>string1.indexOf(string2) &gt;= 0\n</code></pre>\n\n<p>Edit: This may not be faster than a RegExp if the string2 contains repeated patterns.  On some browsers, indexOf may be much slower than RegExp.  See comments.</p>\n\n<p>Edit 2: RegExp may be faster than indexOf when the strings are very long and/or contain repeated patterns.  See comments and @Felix's answer.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You have two possibilites:</p>\n\n<ol>\n<li><p><a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Regular_Expressions\">Regular expression</a>:</p>\n\n<pre><code>(new RegExp('word')).test(str)\n// or\n/word/.test(str)\n</code></pre></li>\n<li><p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/indexOf\"><code>indexOf</code></a>:</p>\n\n<pre><code>str.indexOf('word') !== -1\n</code></pre></li>\n</ol>\n\n<p><del><a href=\"http://jsperf.com/substring-test\">Regular expressions seem to be faster</a> (at least in Chrome 10).</del></p>\n\n<p><a href=\"http://jsperf.com/substring-test\"><strong>Performance test - short haystack</strong></a><br>\n<a href=\"http://jsperf.com/substring-test/3\"><strong>Performance test - long haystack</strong></a></p>\n\n<p><strong>Update:</strong></p>\n\n<p>It cannot be said with certainty which method is faster. The differences between the browsers is enormous. While in Chrome 10 <code>indexOf</code> seems to be faster, in Safari 5, <code>indexOf</code> is clearly slower than any other method.</p>\n\n<p>You have to see and try for your self. It depends on your needs. For example a <em>case-insensitive</em> search is way faster with regular expressions.</p>\n",
                    "is_accepted": true,
                    "score": 115
                },
                {
                    "body": "<p>For finding a simple string, using the indexOf() method and using regex is pretty much the same: <a href=\"http://jsperf.com/substring\" rel=\"nofollow\">http://jsperf.com/substring</a> - so choose which ever one that seems easier to write.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It's easy way to use <code>.match()</code> method to string.</p>\n\n<pre><code>var re = /(AND|OR|MAYBE)/;\nvar str = \"IT'S MAYBE BETTER WAY TO USE .MATCH() METHOD TO STRING\";\nconsole.log('Do we found something?', Boolean(str.match(re)));\n</code></pre>\n\n<p>Wish you a nice day, sir!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've found that using a simple for loop, iterating over all elements in the string and comparing using <code>charAt</code> performs faster than <code>indexOf</code> or <code>Regex</code>. The code and proof is available at <a href=\"http://jsperf.com/indexof-vs-looping-charat\" rel=\"nofollow\">JSPerf</a>.</p>\n\n<p>ETA: <code>indexOf</code> and <code>charAt</code> both perform similarly terrible on Chrome Mobile according to Browser Scope data listed on jsperf.com</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>this is function to check a substring is exists in a string or not</p>\n\n<pre><code>function isStringMatch(str, str_to_match)\n{\n\n   if(str.indexOf(str_to_match)&gt;0))\n   {\n       return true;\n   }\n   else \n    {\n       return false;\n   }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                }
            ],
            "body": "<p>I'm working with a performance issue on Javascript. So I just want to ask: what is the fastest way to check whether a string contain another substring (I just need the boolean value)? Could you please suggest your idea and sample snippet code?! Thank you so much!</p>\n",
            "last_activity_date": 1409662289,
            "question_id": 5296268,
            "score": 44,
            "tags": [
                "javascript",
                "regex",
                "substring"
            ],
            "title": "Fastest way to check a string contain another substring in Javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The current code (listed below) has been now in use in the Stackoverflow javascript chat room for a while\nand so far the toughest problem was <code>Array(5000000000).join(\"adasdadadasd\")</code> instantly crashing some\nbrowser tabs for me when I was running the code executor bot. Monkeypatching <code>Array.prototype.join</code> seems to have fixed this and the maximum\nexecution time of 50ms has worked for any other attempt to hog memory or crash the browser.</p>\n\n<pre><code>var global = this;\n\n/* Could possibly create some helper functions here so they are always available when executing code in chat?*/\n\n/* Most extra functions could be possibly unsafe */\n\nvar wl = {\n    \"self\": 1,\n    \"onmessage\": 1,\n    \"postMessage\": 1,\n    \"global\": 1,\n    \"wl\": 1,\n    \"eval\": 1,\n    \"Array\": 1,\n    \"Boolean\": 1,\n    \"Date\": 1,\n    \"Function\": 1,\n    \"Number\" : 1,\n    \"Object\": 1,\n    \"RegExp\": 1,\n    \"String\": 1,\n    \"Error\": 1,\n    \"EvalError\": 1,\n    \"RangeError\": 1,\n    \"ReferenceError\": 1,\n    \"SyntaxError\": 1,\n    \"TypeError\": 1,\n    \"URIError\": 1,\n    \"decodeURI\": 1,\n    \"decodeURIComponent\": 1,\n    \"encodeURI\": 1,\n    \"encodeURIComponent\": 1,\n    \"isFinite\": 1,\n    \"isNaN\": 1,\n    \"parseFloat\": 1,\n    \"parseInt\": 1,\n    \"Infinity\": 1,\n    \"JSON\": 1,\n    \"Math\": 1,\n    \"NaN\": 1,\n    \"undefined\": 1\n};\n\nObject.getOwnPropertyNames( global ).forEach( function( prop ) {\n    if( !wl.hasOwnProperty( prop ) ) {\n        Object.defineProperty( global, prop, {\n            get : function() {\n                throw \"Security Exception: cannot access \"+prop;\n                return 1;\n            }, \n            configurable : false\n        });    \n    }\n});\n\nObject.getOwnPropertyNames( global.__proto__ ).forEach( function( prop ) {\n    if( !wl.hasOwnProperty( prop ) ) {\n        Object.defineProperty( global.__proto__, prop, {\n            get : function() {\n                throw \"Security Exception: cannot access \"+prop;\n                return 1;\n            }, \n            configurable : false\n        });    \n    }\n});\n\nObject.defineProperty( Array.prototype, \"join\", {\n\n    writable: false,\n    configurable: false,\n    enumerable: false,\n\n    value: function(old){\n        return function(arg){\n            if( this.length &gt; 500 || (arg &amp;&amp; arg.length &gt; 500 ) ) {\n                throw \"Exception: too many items\";\n            }\n\n            return old.apply( this, arguments );\n        };\n    }(Array.prototype.join)\n\n});\n\n\n(function(){\n    var cvalues = [];\n\n    var console = {\n        log: function(){\n            cvalues = cvalues.concat( [].slice.call( arguments ) );\n        }\n    };\n\n    function objToResult( obj ) {\n        var result = obj;\n        switch( typeof result ) {\n            case \"string\":\n                return '\"' + result + '\"';\n                break;\n            case \"number\":\n            case \"boolean\":\n            case \"undefined\":\n            case \"null\":\n            case \"function\":\n                return result + \"\";\n                break;\n            case \"object\":\n                if( !result ) {\n                    return \"null\";\n                }\n                else if( result.constructor === Object || result.constructor === Array ) {\n                    var type = ({}).toString.call( result );\n                    var stringified;\n                    try {\n                        stringified = JSON.stringify(result);\n                    }\n                    catch(e) {\n                        return \"\"+e;\n                    }\n                    return type + \" \" + stringified;\n                }\n                else {\n                    return ({}).toString.call( result );\n                }\n                break;\n\n        }\n\n    }\n\n    onmessage = function( event ) {\n        \"use strict\";\n        var code = event.data.code;\n        var result;\n        try {\n            result = eval( '\"use strict\";\\n'+code );\n        }\n        catch(e) {\n            postMessage( e.toString() );\n            return;\n        }\n        result = objToResult( result );\n        if( cvalues &amp;&amp; cvalues.length ) {\n            result = result + cvalues.map( function( value, index ) {\n                return \"Console log \"+(index+1)+\":\" + objToResult(value);\n            }).join(\" \");\n        }\n        postMessage( (\"\"+result).substr(0,400) );\n    };\n\n})();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>The code currently (2014-11-07) shown in the question despite ostensibly disallowing access to <code>XMLHttpRequest</code> (since it is not whitelisted), still allows code to access it.</p>\n\n<p>If I put the code in the question (or the accepted answer) in a web page and worker combo and execute the following code on Chrome 38:</p>\n\n<pre><code>makeWorkerExecuteSomeCode('event.target.XMLHttpRequest', function (answer) { console.log( answer ); });\n</code></pre>\n\n<p>The result is:</p>\n\n<pre><code>function XMLHttpRequest() { [native code] } \n</code></pre>\n\n<p>However it does not work in FF. Bug in Chrome?</p>\n\n<p>Another thing I found but which does not seem to lead very far down the rabit hole is reinstating <code>console.log</code>. This works on FF 31 but not Chrome 38:</p>\n\n<pre><code>makeWorkerExecuteSomeCode(\n    'var c = self.__proto__.__proto__.__lookupGetter__(\"console\").call(self); c.log(\"FOO\");', \n    function (answer) { console.log(answer) });\n</code></pre>\n\n<p>This would log <code>\"FOO\"</code> to the console without passing through the fake <code>console.log</code> that the web worker provides. The code above uses <code>self</code>, which can be blacklisted (by removing it from the whitelist) but <code>this</code> and <code>global</code> also work. I've found that attempts to blacklist <code>global</code> fail on FF and Chrome: the worker dies with an error.</p>\n\n<p>Note: Chrome refuses to blacklist <code>Intl</code> so it has to be added to the whitelist for the code to run at all.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In a quest to have an interface capable of running arbitrary javascript code inside the browser, without having a security hole the size of a typical yo-mama joke, <a href=\"http://stackoverflow.com/users/995876/esailija\">Esailija</a> proposed using <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/workers.html\">Web Workers</a>. They run in a semi-sandboxed environment (no DOM access and already inside the browser) and can be killed so the user can't put them in an infinite loop.</p>\n\n<p>Here's the example he brought up: <a href=\"http://tuohiniemi.fi/~runeli/petka/workertest.html\">http://tuohiniemi.fi/~runeli/petka/workertest.html</a> (open your console)</p>\n\n<p><a href=\"http://jsfiddle.net/BwgKn/4/\">jsfiddle</a> (Google chrome only)</p>\n\n<p>Now, this seems like a good solution; however, is it a complete (or approaching complete) one? Is there anything obvious missing?</p>\n\n<p>The entire thing (as it's hooked up to a bot) can be found on github: <a href=\"https://github.com/Zirak/SO-ChatBot/blob/master/source/codeWorker.js\">worker</a>, <a href=\"https://github.com/Zirak/SO-ChatBot/blob/master/source/eval.js\">evaluator</a></p>\n\n<p>main:</p>\n\n<pre><code>workercode = \"worker.js\";\n\nfunction makeWorkerExecuteSomeCode( code, callback ) {\n    var timeout;\n\n    code = code + \"\";\n    var worker = new Worker( workercode );\n\n    worker.addEventListener( \"message\", function(event) {\n        clearTimeout(timeout);\n        callback( event.data );\n    });\n\n    worker.postMessage({\n        code: code\n    });\n\n    timeout = window.setTimeout( function() {\n        callback( \"Maximum execution time exceeded\" );\n        worker.terminate();\n    }, 1000 );\n}\n\nmakeWorkerExecuteSomeCode( '5 + 5', function(answer){\n    console.log( answer );\n});\n\nmakeWorkerExecuteSomeCode( 'while(true);', function(answer){\n    console.log( answer );\n});\n\nvar kertoma = 'function kertoma(n){return n === 1 ? 1 : n * kertoma(n-1)}; kertoma(15);';\n\nmakeWorkerExecuteSomeCode( kertoma, function(answer){\n    console.log( answer );\n});\n</code></pre>\n\n<p>worker:</p>\n\n<pre><code>var global = this;\n\n/* Could possibly create some helper functions here so they are always available when executing code in chat?*/\n\n/* Most extra functions could be possibly unsafe */\n\n    var wl = {\n        \"self\": 1,\n        \"onmessage\": 1,\n        \"postMessage\": 1,\n        \"global\": 1,\n        \"wl\": 1,\n        \"eval\": 1,\n        \"Array\": 1,\n        \"Boolean\": 1,\n        \"Date\": 1,\n        \"Function\": 1,\n        \"Number\" : 1,\n        \"Object\": 1,\n        \"RegExp\": 1,\n        \"String\": 1,\n        \"Error\": 1,\n        \"EvalError\": 1,\n        \"RangeError\": 1,\n        \"ReferenceError\": 1,\n        \"SyntaxError\": 1,\n        \"TypeError\": 1,\n        \"URIError\": 1,\n        \"decodeURI\": 1,\n        \"decodeURIComponent\": 1,\n        \"encodeURI\": 1,\n        \"encodeURIComponent\": 1,\n        \"isFinite\": 1,\n        \"isNaN\": 1,\n        \"parseFloat\": 1,\n        \"parseInt\": 1,\n        \"Infinity\": 1,\n        \"JSON\": 1,\n        \"Math\": 1,\n        \"NaN\": 1,\n        \"undefined\": 1\n    };\n\n    Object.getOwnPropertyNames( global ).forEach( function( prop ) {\n        if( !wl.hasOwnProperty( prop ) ) {\n            Object.defineProperty( global, prop, {\n                get : function() {\n                    throw new Error( \"Security Exception: cannot access \"+prop);\n                    return 1;\n                }, \n                configurable : false\n            });    \n        }\n    });\n\n    Object.getOwnPropertyNames( global.__proto__ ).forEach( function( prop ) {\n        if( !wl.hasOwnProperty( prop ) ) {\n            Object.defineProperty( global.__proto__, prop, {\n                get : function() {\n                    throw new Error( \"Security Exception: cannot access \"+prop);\n                    return 1;\n                }, \n                configurable : false\n            });    \n        }\n    });\n\n\n\n\nonmessage = function( event ) {\n    \"use strict\";\n    var code = event.data.code;\n    var result;\n    try {\n        result = eval( '\"use strict\";\\n'+code );\n    }\n    catch(e){\n        result = e.toString();\n    }\n    postMessage( \"(\" + typeof result + \")\" + \" \" + result );\n};\n</code></pre>\n",
            "last_activity_date": 1415370496,
            "question_id": 10653809,
            "score": 42,
            "tags": [
                "javascript",
                "web-worker"
            ],
            "title": "Making WebWorkers a safe environment"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>First, you can always grab the current time by</p>\n\n<pre><code>var currentTime = new Date();\n</code></pre>\n\n<p>Then you could check out this \"pretty date\" example at <a href=\"http://www.zachleat.com/Lib/jquery/humane.js\" rel=\"nofollow\">http://www.zachleat.com/Lib/jquery/humane.js</a></p>\n\n<p>If that doesn't work for you, just google \"javascript pretty date\" and you'll find dozens of example scripts.</p>\n\n<p>Good luck.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\n&lt;!-- Gracefully hide from old browsers\n\n// Javascript to compute elapsed time between \"Start\" and \"Finish\" button clicks\nfunction timestamp_class(this_current_time, this_start_time, this_end_time, this_time_difference) { \n    \tthis.this_current_time = this_current_time;\n    \tthis.this_start_time = this_start_time;\n    \tthis.this_end_time = this_end_time;\n    \tthis.this_time_difference = this_time_difference;\n    \tthis.GetCurrentTime = GetCurrentTime;\n    \tthis.StartTiming = StartTiming;\n    \tthis.EndTiming = EndTiming;\n    }\n\n    //Get current time from date timestamp\n    function GetCurrentTime() {\n    var my_current_timestamp;\n    \tmy_current_timestamp = new Date();\t\t//stamp current date &amp; time\n    \treturn my_current_timestamp.getTime();\n    \t}\n\n    //Stamp current time as start time and reset display textbox\n    function StartTiming() {\n    \tthis.this_start_time = GetCurrentTime();\t//stamp current time\n    \tdocument.TimeDisplayForm.TimeDisplayBox.value = 0;\t//init textbox display to zero\n    \t}\n\n    //Stamp current time as stop time, compute elapsed time difference and display in textbox\n    function EndTiming() {\n    \tthis.this_end_time = GetCurrentTime();\t\t//stamp current time\n    \tthis.this_time_difference = (this.this_end_time - this.this_start_time) / 1000;\t//compute elapsed time\n    \tdocument.TimeDisplayForm.TimeDisplayBox.value = this.this_time_difference;\t//set elapsed time in display box\n    \t}\n\nvar time_object = new timestamp_class(0, 0, 0, 0);  //create new time object and initialize it\n\n//--&gt;\n&lt;/script&gt;\n\n    &lt;form&gt;\n    \t&lt;input type=\"button\" value=\"Start\" onClick=\"time_object.StartTiming()\"; name=\"StartButton\"&gt;\n    &lt;/form&gt;\n    &lt;form&gt;\n    \t&lt;input type=\"button\" value=\"Finish\" onClick=\"time_object.EndTiming()\"; name=\"EndButton\"&gt;\n    &lt;/form&gt;\n    &lt;form name=\"TimeDisplayForm\"&gt;\n    Elapsed time:\n      &lt;input type=\"text\" name=\"TimeDisplayBox\" size=\"6\"&gt;\n    seconds\n    &lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try something like this (<a href=\"http://jsfiddle.net/cckSj/5/\" rel=\"nofollow\">FIDDLE</a>)</p>\n\n<pre><code>// record start time\nvar startTime = new Date();\n\n...\n\n// later record end time\nvar endTime = new Date();\n\n// time difference in ms\nvar timeDiff = endTime - startTime;\n\n// strip the ms\ntimeDiff /= 1000;\n\n// get seconds (Original had 'round' which incorrectly counts 0:28, 0:29, 1:30 ... 1:59, 1:0)\nvar seconds = Math.round(timeDiff % 60);\n\n// remove seconds from the date\ntimeDiff = Math.floor(timeDiff / 60);\n\n// get minutes\nvar minutes = Math.round(timeDiff % 60);\n\n// remove minutes from the date\ntimeDiff = Math.floor(timeDiff / 60);\n\n// get hours\nvar hours = Math.round(timeDiff % 24);\n\n// remove hours from the date\ntimeDiff = Math.floor(timeDiff / 24);\n\n// the rest of timeDiff is number of days\nvar days = timeDiff ;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 55
                },
                {
                    "body": "<p>Hope this will help:</p>\n\n<pre><code>&lt;!doctype html public \"-//w3c//dtd html 3.2//en\"&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;compute elapsed time in JavaScript&lt;/title&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n\nfunction display_c(start){\n    window.start = parseFloat(start);\n    var end = 0 // change this to stop the counter at a higher value\n    var refresh=1000; // Refresh rate in milli seconds\n    if(window.start &gt;= end ){\n        mytime=setTimeout('display_ct()',refresh)\n    } else {\n        alert(\"Time Over \");\n    }\n}\n\nfunction display_ct() {\n    // Calculate the number of days left\n    var days=Math.floor(window.start / 86400);\n    // After deducting the days calculate the number of hours left\n    var hours = Math.floor((window.start - (days * 86400 ))/3600)\n    // After days and hours , how many minutes are left\n    var minutes = Math.floor((window.start - (days * 86400 ) - (hours *3600 ))/60)\n    // Finally how many seconds left after removing days, hours and minutes.\n    var secs = Math.floor((window.start - (days * 86400 ) - (hours *3600 ) - (minutes*60)))\n\n    var x = window.start + \"(\" + days + \" Days \" + hours + \" Hours \" + minutes + \" Minutes and \" + secs + \" Secondes \" + \")\";\n\n\n    document.getElementById('ct').innerHTML = x;\n    window.start= window.start- 1;\n\n    tt=display_c(window.start);\n}\n\nfunction stop() {\n    clearTimeout(mytime);\n}\n\n&lt;/script&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;input type=\"button\" value=\"Start Timer\" onclick=\"display_c(86501);\"/&gt; | &lt;input type=\"button\" value=\"End Timer\" onclick=\"stop();\"/&gt;\n&lt;span id='ct' style=\"background-color: #FFFF00\"&gt;&lt;/span&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Something like a \"Stopwatch\" object comes to my mind:</p>\n\n<p>Usage:</p>\n\n<pre><code>var st = new Stopwatch();\nst.start(); //Start the stopwatch\n// As a test, I use the setTimeout function to delay st.stop();\nsetTimeout(function (){\n            st.stop(); // Stop it 5 seconds later...\n            alert(st.getSeconds());\n            }, 5000);\n</code></pre>\n\n<p>Implementation:</p>\n\n<pre><code>function Stopwatch(){\n  var startTime, endTime, instance = this;\n\n  this.start = function (){\n    startTime = new Date();\n  };\n\n  this.stop = function (){\n    endTime = new Date();\n  }\n\n  this.clear = function (){\n    startTime = null;\n    endTime = null;\n  }\n\n  this.getSeconds = function(){\n    if (!endTime){\n    return 0;\n    }\n    return Math.round((endTime.getTime() - startTime.getTime()) / 1000);\n  }\n\n  this.getMinutes = function(){\n    return instance.getSeconds() / 60;\n  }      \n  this.getHours = function(){\n    return instance.getSeconds() / 60 / 60;\n  }    \n  this.getDays = function(){\n    return instance.getHours() / 24;\n  }   \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Try this...</p>\n\n<pre><code>function Test()\n{\n    var s1 = new StopWatch();\n\n    s1.Start();        \n\n    // Do something.\n\n    s1.Stop();\n\n    alert( s1.ElapsedMilliseconds );\n} \n\n// Create a stopwatch \"class.\" \nStopWatch = function()\n{\n    this.StartMilliseconds = 0;\n    this.ElapsedMilliseconds = 0;\n}  \n\nStopWatch.prototype.Start = function()\n{\n    this.StartMilliseconds = new Date().getTime();\n}\n\nStopWatch.prototype.Stop = function()\n{\n    this.ElapsedMilliseconds = new Date().getTime() - this.StartMilliseconds;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>write java program that enter elapsed time in seconds for any cycling event &amp; the output format should be like (hour : minute : seconds ) for EX : elapsed time in 4150 seconds= 1:09:10 </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is what I am using:</p>\n\n<p>Milliseconds to a pretty format time string:</p>\n\n<pre><code>function ms2Time(ms) {\n    var secs = ms / 1000;\n    ms = Math.floor(ms % 1000);\n    var minutes = secs / 60;\n    secs = Math.floor(secs % 60);\n    var hours = minutes / 60;\n    minutes = Math.floor(minutes % 60);\n    hours = Math.floor(hours % 24);\n    return hours + \":\" + minutes + \":\" + secs + \".\" + ms;  \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var StopWatch = function (performance) {\n    this.startTime = 0;\n    this.stopTime = 0;\n    this.running = false;\n    this.performance = performance === false ? false : !!window.performance;\n};\n\nStopWatch.prototype.currentTime = function () {\n    return this.performance ? window.performance.now() : new Date().getTime();\n};\n\nStopWatch.prototype.start = function () {\n    this.startTime = this.currentTime();\n    this.running = true;\n};\n\nStopWatch.prototype.stop = function () {\n    this.stopTime = this.currentTime();\n    this.running = false;\n};\n\nStopWatch.prototype.getElapsedMilliseconds = function () {\n    if (this.running) {\n        this.stopTime = this.currentTime();\n    }\n\n    return this.stopTime - this.startTime;\n};\n\nStopWatch.prototype.getElapsedSeconds = function () {\n    return this.getElapsedMilliseconds() / 1000;\n};\n\nStopWatch.prototype.printElapsed = function (name) {\n    var currentName = name || 'Elapsed:';\n\n    console.log(currentName, '[' + this.getElapsedMilliseconds() + 'ms]', '[' + this.getElapsedSeconds() + 's]');\n};\n</code></pre>\n\n<p>Benchmark</p>\n\n<pre><code>var stopwatch = new StopWatch();\nstopwatch.start();\n\nfor (var index = 0; index &lt; 100; index++) {\n    stopwatch.printElapsed('Instance[' + index + ']');\n}\n\nstopwatch.stop();\n\nstopwatch.printElapsed();\n</code></pre>\n\n<p>Output</p>\n\n<pre><code>Instance[0] [0ms] [0s]\nInstance[1] [2.999999967869371ms] [0.002999999967869371s]\nInstance[2] [2.999999967869371ms] [0.002999999967869371s]\n/* ... */\nInstance[99] [10.999999998603016ms] [0.010999999998603016s]\nElapsed: [10.999999998603016ms] [0.010999999998603016s]\n</code></pre>\n\n<p><a href=\"http://updates.html5rocks.com/2012/08/When-milliseconds-are-not-enough-performance-nowhttp://updates.html5rocks.com/2012/08/When-milliseconds-are-not-enough-performance-now\" rel=\"nofollow\">performance.now()</a> is optional - just pass false into StopWatch constructor function.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I am looking for some JavaScript simple samples to compute elapsed time. My scenario is, for a specific point of execution in JavaScript code, I want to record a start time. And at another specific point of execution in JavaScript code, I want to record an end time.</p>\n\n<p>Then, I want to calculate the elapsed time in the form of: how many Days, Hours, Minutes and Seconds are elapsed between end time and start time, for example, 0 Days, 2 Hours, 3 minute and 10 seconds are elapsed. Any reference simple samples? :-)</p>\n\n<p>thanks in advance,\nGeorge</p>\n",
            "last_activity_date": 1426122529,
            "question_id": 1210701,
            "score": 34,
            "tags": [
                "javascript",
                "datetime"
            ],
            "title": "compute elapsed time"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>With <a href=\"http://getfirebug.com/wiki/index.php/Command_Line_API#monitorEvents.28object.5B.2C_types.5D.29\">firebug</a> or <a href=\"http://developer.apple.com/library/safari/#documentation/appleapplications/Conceptual/Safari_Developer_Guide/DebuggingYourWebsite/DebuggingYourWebsite.html\">web inspector</a> you can use <code>monitorEvents</code>:</p>\n\n<pre><code>monitorEvents(myDomElem);\n</code></pre>\n\n<p>This prints all events emitted by <code>myDomElem</code> to the console.  Use <code>unmonitorEvents</code> to stop monitoring events.</p>\n\n<p>If you're interested in getting events after the DOM has been manipulated, take a look at <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-eventgroupings-mutationevents\">Mutation Events</a>.</p>\n\n<p><strong>Edit</strong>:</p>\n\n<p>As far as I know, there is no easy way to intercept all <code>onreadystatechange</code> events from all XMLHttpRequest.  The only work-around I can think of is to override the native XMLHttpRequest object with you own implementation.  For example:</p>\n\n<pre><code>(function() { // Overriding XMLHttpRequest\n    var oldXHR = window.XMLHttpRequest;\n\n    function newXHR() {\n        var realXHR = new oldXHR();\n\n        realXHR.addEventListener(\"readystatechange\", function() { \n            console.log(\"an ajax request was made\") \n        }, false);\n\n        return realXHR;\n    }\n\n    window.XMLHttpRequest = newXHR;\n})();\n</code></pre>\n\n<p>Needless to say this is extremely hacky and generally ill-advised.</p>\n",
                    "is_accepted": true,
                    "score": 55
                }
            ],
            "body": "<p>Is it possible to listen to all javascript events?</p>\n\n<p>I'm trying to guess if there's an event triggered after the DOM is modified by an AJAX request.</p>\n",
            "last_activity_date": 1409225139,
            "question_id": 3489433,
            "score": 33,
            "tags": [
                "javascript",
                "events"
            ],
            "title": "Monitor all JavaScript events in the browser console"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There doesn't seem to be any 'easy-way' to do that.</p>\n\n<p>My idea:\n You know which are all the events, so you can handle all events for every DOM element:</p>\n\n<pre><code>var events =\n[   \n    \"onabort\",\n    \"onafterprint\",\n    \"onbeforeprint\",\n    \"onbeforeunload\",\n    ...\n\n];\n\nvar root = document.body;\nvar elms = root.childNodes;\n\nfor(var i = 0; i &lt; elms.length; i++)\n{\n    for(var j = 0; j &lt; events.length; j++)\n    {\n        elms[i][events[j]] = globalHandler;\n    }\n}\n\nfunction globalHandler()\n{\n    alert(\"Global handler called\");\n}\n</code></pre>\n\n<p>That's the 'intuitive idea' but doesn't seem to be very efficient. However, it should work.</p>\n\n<p>Good luck.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I highly doubt there's a way to do this in Firefox. Looking at <a href=\"http://fbug.googlecode.com/svn/trunk/content/firebug/lib.js\">Firebug's source code</a> (particularly the <code>attachAllListeners</code> method), turns out that iterating through a list of event names is obviously the way to go, but this doesn't solve the bubbling issues.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Old question, but answer might  be useful at the future\nuse: backbone and proxy method\nmore info at\nwhat i mean is to use \"backbone proxy function\"</p>\n\n<p><strong>EDIT:</strong> </p>\n\n<blockquote>\n  <p>Callbacks bound to the special \"all\" event will be triggered when any\n  event occurs, and are passed the name of the event as the first\n  argument. For example, to proxy all events from one object to another:</p>\n</blockquote>\n\n<pre><code>  proxy.on(\"all\", function(eventName) {\n    object.trigger(eventName);\n  });\n</code></pre>\n\n<p><a href=\"http://backbonejs.org/#Events-on\" rel=\"nofollow\">backbone events's on function</a></p>\n\n<p>if you want to capture all DOM event. just wrap your view with backbone view and you can capture </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>First of all, here is a list of event types that are defined by the W3C standards. (This list is based on the onevent attributes defined in the HTML5 standard. I assume that there are dozens of other event types, but this list is long enough as it is.)  </p>\n\n<ul>\n<li>abort</li>\n<li>afterprint</li>\n<li>beforeprint</li>\n<li>beforeunload</li>\n<li>blur</li>\n<li>canplay</li>\n<li>canplaythrough</li>\n<li>change</li>\n<li>click</li>\n<li>contextmenu</li>\n<li>copy</li>\n<li>cuechange</li>\n<li>cut</li>\n<li>dblclick</li>\n<li>DOMContentLoaded</li>\n<li>drag</li>\n<li>dragend</li>\n<li>dragenter</li>\n<li>dragleave</li>\n<li>dragover</li>\n<li>dragstart</li>\n<li>drop</li>\n<li>durationchange</li>\n<li>emptied</li>\n<li>ended</li>\n<li>error</li>\n<li>focus</li>\n<li>focusin</li>\n<li>focusout</li>\n<li>formchange</li>\n<li>forminput</li>\n<li>hashchange</li>\n<li>input</li>\n<li>invalid</li>\n<li>keydown</li>\n<li>keypress</li>\n<li>keyup</li>\n<li>load</li>\n<li>loadeddata</li>\n<li>loadedmetadata</li>\n<li>loadstart</li>\n<li>message</li>\n<li>mousedown</li>\n<li>mouseenter</li>\n<li>mouseleave</li>\n<li>mousemove</li>\n<li>mouseout</li>\n<li>mouseover</li>\n<li>mouseup</li>\n<li>mousewheel</li>\n<li>offline</li>\n<li>online</li>\n<li>pagehide</li>\n<li>pageshow</li>\n<li>paste</li>\n<li>pause</li>\n<li>play</li>\n<li>playing</li>\n<li>popstate</li>\n<li>progress</li>\n<li>ratechange</li>\n<li>readystatechange</li>\n<li>redo</li>\n<li>reset</li>\n<li>resize</li>\n<li>scroll</li>\n<li>seeked</li>\n<li>seeking</li>\n<li>select</li>\n<li>show</li>\n<li>stalled</li>\n<li>storage</li>\n<li>submit</li>\n<li>suspend</li>\n<li>timeupdate</li>\n<li>undo</li>\n<li>unload</li>\n<li>volumechange</li>\n<li>waiting</li>\n</ul>\n\n<p>Now, is it possible to define a global event handler that is called when <strong>any</strong> event originally occurs on <strong>any</strong> element on the page? (In this case, I don't want to count those events that occurred on elements because they bubbled up from a descendant element - that's why I wrote \"originally occurs\".)</p>\n\n<p>If that is not possible, is it at least possible to define an event handler that is called when <strong>any</strong> event bubbles up to the root of the DOM tree (which is either the <code>document</code> object or the <code>window</code> object - both should work)? (I know that it's possible to stop bubbling programmatically, but I would use this event handler on a page that has no other handlers defined on any other elements.) (Also, I believe some events don't bubble up, but let's ignore these cases for the sake of this argument.)</p>\n\n<p>I know that I can do this (using jQuery): </p>\n\n<pre><code>$(document).bind('abort afterprint beforeprint beforeunload etc.', function() {\n    // handle event\n});\n</code></pre>\n\n<p>but that would be a rather undesirable solution for me.</p>\n\n<p>btw I don't need a cross-browser solution. If it works in just one browser, I'm fine.</p>\n\n<p>Also, <a href=\"http://stackoverflow.com/questions/4089516/view-javascript-events-in-browser/4089542#4089542\">Firebug is able to log events</a>, but I would like to be able to catch the event programmatically (via JavaScript) rather then having them simply logged in the console.</p>\n\n<hr>\n\n<p><strong>Update:</strong> Added cut, copy, paste, focusin, focusout, mouseenter and mouseleave to the list.</p>\n",
            "last_activity_date": 1401262712,
            "question_id": 5107232,
            "score": 32,
            "tags": [
                "javascript",
                "events",
                "dom",
                "browser"
            ],
            "title": "Is it possible to programmatically catch all events on the page in the browser?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>one way to skip having to return a json with multiple parameters and your html encoded as json is to send an HTML always but you send a hidden field that has the status set in it or something like that..</p>\n\n<pre><code>success: function(data)\n{\n  if(data.find(\"#ajax-status\").val()===\"success\")\n  {\n    $(\"#someDiv\").html(data);\n  }\n  else\n  {\n    showPopup(\"You do not have access to that.\");\n  }\n}\n</code></pre>\n\n<p>I wouldnt recommend this appraoch I would have two partial views one for the normal view and the other for the error/unauthorized case..</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>So - using the following posts I got this working:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/1471066/partial-views-vs-json-or-both\">Partial Views vs. Json (or both)</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/483091/render-a-view-as-a-string\">Render a view as a string</a></p>\n\n<p>They both lay it out nicely, then I changed my code to the following:</p>\n\n<p>C#:</p>\n\n<pre><code>public ActionResult GetSomePartialView(SomeArgumentModel someArguments)\n{\n    ReturnArgs r = new ReturnArgs();\n\n    bool isAllowed = CheckPermissions(); \n\n    if (isAllowed) \n    {\n        r.Status = 400; //good status ... proceed normally\n        r.ViewString = this.RenderViewToString(\"_CaseManager\");\n    }\n    else\n    {\n        r.Status = 300; //not good ... display permissions pop up\n        r.ViewString = this.RenderViewToString(\"_DefaultView\");\n    }\n\n    return Json(r);\n}\n\npublic class ReturnArgs\n{\n    public ReturnArgs()\n    {\n    }\n\n    public int Status { get; set; }\n    public string ViewString { get; set; }\n}\n</code></pre>\n\n<p>JS: </p>\n\n<pre><code>$.ajax({\n    type: \"GET\",\n    url: \"/Home/GetSomePartialView/\",\n    data: someArguments,\n    success: function (jsReturnArgs) { \n\n        if (jsReturnArgs.Status === 300) { //300 is an arbitrary value I just made up right now\n            showPopup(\"You do not have access to that.\");\n        }\n\n        $(\"#someDiv\").html(jsReturnArgs.ViewString); //the HTML I returned from the controller\n    },\n    error: function (errorData) { onError(errorData); }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<p>I am writing a single page ajax app with ASP.NET MVC - making heavy use of jQuery.  I do something similar to the following throughout the app:</p>\n\n<p>JS:</p>\n\n<pre><code>$.ajax({\n    type: \"GET\",\n    url: \"/Home/GetSomePartialView/\",\n    data: someArguments,\n    success: function (viewHTML) { \n        $(\"#someDiv\").html(viewHTML); \n    },\n    error: function (errorData) { onError(errorData); }\n});\n</code></pre>\n\n<p>Controller C#:</p>\n\n<pre><code>public ActionResult GetSomePartialView(SomeArgumentModel someArguments)\n{\n\n    return PartialView(\"_CaseManager\");\n}\n</code></pre>\n\n<p>This works great.  The <code>viewHTML</code> (in the ajax <code>success</code> function) is returned as a string and I can shove it on the page no problem.</p>\n\n<p>Now what I would like to do is to return not only the PartialView HTML string, but also some sort of status indicator.  This is a permissions thing - for instance, if someone tries to get to a portion of they app they don't have permission to, I want to return a different PartialView than they asked for and also display a message in a popup window telling them why they got an View different from what they asked for.</p>\n\n<p>So - to do this, I would like to do the following:</p>\n\n<p>Controller C#:</p>\n\n<pre><code>public ActionResult GetSomePartialView(SomeArgumentModel someArguments)\n{\n    ReturnArgs r = new ReturnArgs();\n\n    bool isAllowed = CheckPermissions(); \n\n    if (isAllowed) \n    {\n        r.Status = 400; //good status ... proceed normally\n        r.View = PartialView(\"_CaseManager\");\n    }\n    else\n    {\n        r.Status = 300; //not good ... display permissions pop up\n        r.View = PartialView(\"_DefaultView\");\n    }\n\n    return Json(r);\n}\n\npublic class ReturnArgs\n{\n    public ReturnArgs()\n    {\n    }\n\n    public int Status { get; set; }\n    public PartialViewResult View { get; set; }\n}\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>$.ajax({\n    type: \"GET\",\n    url: \"/Home/GetSomePartialView/\",\n    data: someArguments,\n    success: function (jsReturnArgs) { \n\n        if (jsReturnArgs.Status === 300) { //300 is an arbitrary value I just made up right now\n            showPopup(\"You do not have access to that.\");\n        }\n\n        $(\"#someDiv\").html(jsReturnArgs.View); //the HTML I returned from the controller\n    },\n    error: function (errorData) { onError(errorData); }\n});\n</code></pre>\n\n<p>This <strong>SORTA</strong> works right now.  I get a good object in JavaScript (what I am expecting to see), however I cannot see how to get at the full HTML string of the <code>jsReturnArgs.View</code> property.  </p>\n\n<p>I am really just looking for the same string that would be returned if I were just returning the <code>PartialView</code> by itself.</p>\n\n<p>(As I mentioned at the beginning, this is a single page app - so I can't just redirect them to another View).</p>\n\n<p>Thanks in advance for any help!</p>\n",
            "last_activity_date": 1367578630,
            "question_id": 10589787,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "asp.net-mvc-3"
            ],
            "title": "ASP.NET MVC - Returning a PartialView to Ajax along with another object"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Checking for the existence of FileReader is the correct way to go about this. FileReader is an official part of the <a href=\"http://www.w3.org/TR/FileAPI/#dfn-filereader\">File Api</a>. I would combine this with <a href=\"http://www.modernizr.com\">Modernizr</a>. Drag and Drop support is <a href=\"http://github.com/Modernizr/Modernizr/issues/issue/20\">slated for release 1.2</a>. You should be able to grab the source on GitHub and start working with this now.\n<a href=\"http://github.com/Modernizr/Modernizr/blob/master/modernizr.js\">http://github.com/Modernizr/Modernizr/blob/master/modernizr.js</a></p>\n\n<pre><code>if (!!FileReader &amp;&amp; Modernizr.draganddrop) {\n  // sexy drag and drop action\n} else {\n  // no drag and drop support available :(\n}\n</code></pre>\n\n<p>If you haven't seen <a href=\"http://fortuito.us/diveintohtml5/\">Dive into HTML5</a>, you should definitely check out Mark Pilgrim's suggestions on <a href=\"http://fortuito.us/diveintohtml5/detect.html\">detecting HTML5</a>.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<pre><code>if (\"files\" in DataTransfer.prototype) {...}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I had to make a slight change to <a href=\"http://stackoverflow.com/users/32595/dshaw\">dshaw</a>'s answer for support in IE8:</p>\n\n<pre><code>if (!!window.FileReader &amp;&amp; Modernizr.draganddrop) {\n  // sexy drag and drop action\n} else {\n  // no drag and drop support available :(\n}\n</code></pre>\n\n<p>You can try it out <a href=\"http://www.stolencamerafinder.com/\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>This code fails in IE8.\nThis would probably be better:</p>\n\n<pre><code>if (typeof(FileReader) === 'function' &amp;&amp; Modernizr.draganddrop) {\n  //sexy drag and drop action\n} else {\n   //no drag and drop support available :(\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\n  alert('The File APIs are not fully supported in this browser. Please upgrade your browser.');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>either use pure Modernizr approach</p>\n\n<pre><code>if (Modernizr.filereader &amp;&amp; Modernizr.draganddrop) {\n  //sexy drag and drop action\n} else {\n   //no drag and drop support available :(\n};\n</code></pre>\n\n<p>or use underlying DOM check directly but with exception handling</p>\n\n<pre><code>var featuresSupported = false;\ntry {\n   if (!!(window.File &amp;&amp; window.FileList &amp;&amp; window.FileReader) &amp;&amp; Modernizr.draganddrop)\n     featuresSupported = true;\n)\ncatch (err)\n{\n}\n\nif (featuresSupported)\n  &lt;do sexy effects&gt;\nelse\n  &lt;perform rollback to legacy stuff&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you don't want to deal with Modernizr at all, you can just replicate what it does for drag'n'drop detection:</p>\n\n<pre><code>var supportsDragAndDrop = function() {\n    var div = document.createElement('div');\n    return ('draggable' in div) || ('ondragstart' in div &amp;&amp; 'ondrop' in div);\n}\n</code></pre>\n\n<p>Got it from Modernizr GitHub repository:</p>\n\n<p><a href=\"https://github.com/Modernizr/Modernizr/blob/master/feature-detects/draganddrop.js\" rel=\"nofollow\">https://github.com/Modernizr/Modernizr/blob/master/feature-detects/draganddrop.js</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Its a bit trickier. iOS7 reports that it supports both FileReader and draganddrop pictures uploading. Since I was looking for a more general file upload that I couldn't do with iOS, I needed another answer.</p>\n\n<p>Modernizr issue 57 at <a href=\"https://github.com/Modernizr/Modernizr/issues/57\" rel=\"nofollow\">here</a> talks about the issue. Now with windows 8 and both touch and mouse, its tricky. There's code in the middle by chriskeeble that I used successfully. It relies on Modernizr and agent detection.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am writing an application that's supposed to support HTML5 drag/drop API for file, much like the on described <a href=\"https://developer.mozilla.org/en/Using_files_from_web_applications#Selecting_files_using_drag_and_drop\">here</a>.\nI would like to perform a programmatic check on whether the browser support this kind of madness :)\nA solution that works for now is checking whether the browser provides a FileReader class, like this:</p>\n\n<pre><code>  if (typeof(FileReader) == \"undefined\") {\n    $(\"#dropbox\").hide();\n  } else {\n    // connect events\n    $(\"#filebox\").hide();\n  }\n</code></pre>\n\n<p>But it is obviously not a correct one (I don't use that class at all).</p>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1395509885,
            "question_id": 2311887,
            "score": 24,
            "tags": [
                "javascript",
                "drag-and-drop",
                "html5"
            ],
            "title": "How to determine presence of HTML5 drag&#39;n&#39;drop file upload API (like the one from FF3.6)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There seems to be no official method of doing this. However, <a href=\"http://stackoverflow.com/questions/1662473/how-to-call-objective-c-from-javascript\">the</a> <a href=\"http://tetontech.wordpress.com/2008/08/14/calling-objective-c-from-javascript-in-an-iphone-uiwebview/\">standard</a> <a href=\"http://www.codingventures.com/2008/12/using-uiwebview-to-render-svg-files/\">workaround</a> involves reading and parsing incoming URL requests, basically rolling your own serialized messaging protocol. The message handling should be done in the <a href=\"https://developer.apple.com/library/ios/documentation/uikit/reference/UIWebViewDelegate_Protocol/Reference/Reference.html//apple_ref/occ/intfm/UIWebViewDelegate/webView%3ashouldStartLoadWithRequest%3anavigationType#//apple_ref/occ/intfm/UIWebViewDelegate/webView%3ashouldStartLoadWithRequest%3anavigationType%3a\"><code>webView:shouldStartLoadWithRequest:navigationType</code></a> method of your view controller. </p>\n\n<p><em>Note: there are several free libraries (<a href=\"http://www.phonegap.com/\">PhoneGap</a>, <a href=\"http://quickconnect.sourceforge.net/browser/index.html\">QuickConnect</a>, <a href=\"http://code.google.com/p/jsbridge-to-cocoa/\">JS-to-Cocoa Bridge</a>) which wrap this functionality (plus do a whole lot more). To reinvent the wheel (or know why it's round, so to speak), read on.</em></p>\n\n<p>From JavaScript, you will invoke the callback by attempting to navigate to a new URL:</p>\n\n<pre><code>// In JavaScript\nwindow.location = 'myapp:myaction:param1:param2'; // etc...\n</code></pre>\n\n<p>In Objective-C, implement the <a href=\"http://developer.apple.com/library/ios/#documentation/uikit/reference/UIWebViewDelegate_Protocol/Reference/Reference.html\"><code>UIWebViewDelegate</code></a> protocol in your <code>.h</code> file:</p>\n\n<pre><code>// In your header file\n@interface MyAppViewController : UIViewController &lt;UIWebViewDelegate&gt; {\n  ...\n}\n@end\n</code></pre>\n\n<p>Next, implement the method in your <code>.m</code> file:</p>\n\n<pre><code>// In your implementation file\n-(BOOL)webView:(UIWebView *)webView2\n       shouldStartLoadWithRequest:(NSURLRequest *)request\n       navigationType:(UIWebViewNavigationType)navigationType\n{\n  // Break apart request URL\n  NSString *requestString = [[request URL] absoluteString];\n  NSArray *components = [requestString componentsSeparatedByString:@\":\"];\n\n  // Check for your protocol\n  if ([components count] &gt; 1 &amp;&amp;\n      [(NSString *)[components objectAtIndex:0] isEqualToString:@\"myapp\"])\n  {\n    // Look for specific actions\n    if ([(NSString *)[components objectAtIndex:1] isEqualToString:@\"myaction\"])\n    {\n      // Your parameters can be found at\n      //   [components objectAtIndex:n]\n      // where 'n' is the ordinal position of the colon-delimited parameter\n    }\n\n    // Return 'NO' to prevent navigation\n    return NO;\n  }\n\n  // Return 'YES', navigate to requested URL as normal\n  return YES;\n}\n</code></pre>\n\n<p>Two important notes:</p>\n\n<ol>\n<li><p><strong>Context</strong>: navigating to <code>myapp:whatever</code> will (of course) fail under any other context. Keep this in mind if you're loading cross-platform pages.</p></li>\n<li><p><strong>Timing</strong>: if a second <code>window.location =</code> call is made before the first returns, it will get 'lost.' So, either lump your calls together, manually delay execution, or implement a queue which combines the above with <a href=\"http://developer.apple.com/library/mac/#documentation/AppleApplications/Conceptual/SafariJSProgTopics/Tasks/ObjCFromJavaScript.html\">JS queries into Objective-C objects</a>.</p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>Actually for timing in iOS (maybe not for OSX?), if a second <code>window.location</code> call is made before the previous <code>window.location</code> call executes, then the first <code>window.location</code> call gets lost.  I think the <code>window.location</code> call executes asynchronisely with the JavaScript after it is called, and if another call is made it before it executes, it cancels the first.  </p>\n\n<p>For example, when capturing touch events, I have seen <code>ontouchstart</code> not get sent via <code>window.location</code>, if an <code>ontouchmove</code> event occurs to quickly afterwards (such as in a fast finger swipe).  Thus your Objective-C doesn't get the <code>ontouchstart</code> event.  This is more of a problem on the original iPad than the iPad2, I assume because of processing speed.  </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>zourtney's answer is correct , but forgot to mention one thing  .. needed to register delegate to webview by </p>\n\n<pre><code>- (void)viewDidLoad {\n    [super viewDidLoad];  --- instantiate _webview next .. then \n\n    _webview.delegate = self;  //important .. needed to register webview to delegate\n}\n</code></pre>\n\n<p>hope this helps .....</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to know what should be done to use JavaScript in a HTML sitting in <code>UIWebView</code> to notify Objective-C that something has happened?</p>\n\n<p>To be more exact, I'm playing some JavaScript animation in HTML and I need to alert the Objective-C code that the animation has ended.</p>\n",
            "last_activity_date": 1406529524,
            "question_id": 5671742,
            "score": 20,
            "tags": [
                "javascript",
                "objective-c",
                "ios"
            ],
            "title": "send a notification from javascript in UIWebView to ObjectiveC"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Try this: </p>\n\n<pre><code>var json_data = content.get_response().get_object();\n</code></pre>\n\n<p>this will give you result in JSON format and you can use <code>json_data[0]</code> to get the first record</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Try using the below code:</p>\n\n<pre><code>&lt;script type='text/javascript'&gt;\n    function onTestComplete(content) {\n        var result = eval( '(' + content.get_data() + ')' );\n        alert(result.UppercaseName);\n    }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Make sure you have included MicrosoftAjax.js and MicrosoftMvcAjax.js.  Then use the following calls on the returned context to get a json object out of the return.</p>\n\n<pre><code>var json = context.get_data();\nvar data = Sys.Serialization.JavaScriptSerializer.deserialize(json);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You can use <code>OnFailure</code> and <code>OnSuccess</code> instead of <code>OnComplete</code>; <code>OnSuccess</code> gives you the data as a proper JSON object. You can find the callback method signatures burried in <code>~/Scripts/jquery.unobtrusive-ajax.min.js</code> which you should load on your page.</p>\n\n<p>In your <code>Ajax.BeginForm</code>:</p>\n\n<pre><code>new AjaxOptions\n    {\n        OnFailure = \"onTestFailure\",\n        OnSuccess = \"onTestSuccess\"\n    }\n</code></pre>\n\n<p>Script block:</p>\n\n<pre><code>&lt;script&gt;\n//&lt;![CDATA[\n\n    function onTestFailure(xhr, status, error) {\n\n        console.log(\"Ajax form submission\", \"onTestFailure\");\n        console.log(\"xhr\", xhr);\n        console.log(\"status\", status);\n        console.log(\"error\", error);\n\n        // TODO: make me pretty\n        alert(error);\n    }\n\n    function onTestSuccess(data, status, xhr) {\n\n        console.log(\"Ajax form submission\", \"onTestSuccess\");\n        console.log(\"data\", data);\n        console.log(\"status\", status);\n        console.log(\"xhr\", xhr);\n\n        // Here's where you use the JSON object\n        //doSomethingUseful(data);\n    }\n\n//]]&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>These signatures match <a href=\"http://api.jquery.com/jQuery.ajax/\"><code>success</code> and <code>error</code> callbacks in $.ajax(...)</a>, which might not be such a surprise after all.</p>\n\n<p>This was tested using <a href=\"/questions/tagged/asp.net-mvc-3\" class=\"post-tag\" title=\"show questions tagged 'asp.net-mvc-3'\" rel=\"tag\">asp.net-mvc-3</a> with <a href=\"/questions/tagged/jquery\" class=\"post-tag\" title=\"show questions tagged 'jquery'\" rel=\"tag\">jquery</a> 1.6.3 and 1.7.2.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>I use: </p>\n\n<pre><code>    function onTestComplete(data, status, xhr) {\n       var data2 = JSON.parse(data.responseText);\n       //data2 is your object\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to use the ASP.NET MVC Ajax.BeginForm helper but don't want to use the existing content insertion options when the call completes. Instead, I want to use a custom JavaScript function as the callback.</p>\n\n<p>This works, but the result I want should be returned as JSON. Unfortunately, the framework just treats the data as a string. Below is the client code. The server code simply returns a JsonResult with one field, UppercaseName.</p>\n\n<pre><code>&lt;script type='text/javascript'&gt;\n    function onTestComplete(content) {\n        var result = content.get_data();\n        alert(result.UppercaseName);\n    }\n&lt;/script&gt;\n\n&lt;% using (Ajax.BeginForm(\"JsonTest\", new AjaxOptions() {OnComplete = \"onTestComplete\" })) { %&gt;\n    &lt;%= Html.TextBox(\"name\") %&gt;&lt;br /&gt;\n    &lt;input type=\"submit\" /&gt;\n&lt;%} %&gt;\n</code></pre>\n\n<p>Instead of showing the uppercase result, it is instead showing undefined. content.get_data() seems to hold the JSON, but only in string form. How do I go about converting this to an object?</p>\n\n<p>All of this seems a bit convoluted really. Is there a better way to get at the resulting content using Ajax.BeginForm? If it's this hard, I may skip Ajax.BeginForm entirely and just use the jQuery form library.</p>\n",
            "last_activity_date": 1393270401,
            "question_id": 304233,
            "score": 17,
            "tags": [
                "javascript",
                "asp.net-mvc",
                "asp.net-ajax"
            ],
            "title": "How to use Ajax.BeginForm MVC helper with JSON result?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>As far as I poked at it a bit on Chrome using JS live edit, delaying the execution of <code>resize</code> to wait for the modal animation might work :)</p>\n\n<p><a href=\"https://gist.github.com/1592330#L107\" rel=\"nofollow\">https://gist.github.com/1592330#L107</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I discovered that having <code>display: none</code> on the map's parent element (the modal) really messed things up. I changed it to <code>visibility: hidden</code> just in sheer desperation to see what would happen, and it worked!</p>\n\n<p>I also modified the modal JS code to set the modal to <code>visibility: visible/hidden</code> when the modal is shown/hid. Otherwise it would get <code>display: none/block</code> set again, which would create the grey boxes again.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The problem is that if you do something like this:</p>\n\n<pre><code>$(\"#mapModalLink\").click(function(){\n  google.maps.event.trigger(map,\"resize\");\n});\n</code></pre>\n\n<p>is that your modal probably wasn't open (and displayed at the right size) when the resize event is triggered. To solve this:</p>\n\n<pre><code>$(\"#mapModalLink\").click(function(){\n  $(\"#mapModal\").show();\n  google.maps.event.trigger(map, 'resize');\n});\n</code></pre>\n\n<p>Worked for me at least :)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>My solution for bootstrap-modal.js v 2.0</p>\n\n<p>replace class \"hide\" for \"invisible\" in Modal div</p>\n\n<pre><code>&lt;div id=\"map_modal\" class=\"modal fade invisible\"&gt;\n...\n&lt;/div&gt;\n</code></pre>\n\n<p>function javascript</p>\n\n<pre><code>function open_map()\n{   \n   $('#map_modal').removeClass(\"invisible\");\n   $('#map_modal').modal('toggle');   \n}\n</code></pre>\n\n<p>link html</p>\n\n<pre><code>&lt;a href=\"javascript:open_map()\"&gt;Open map&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try using the modal event handlers.  I think this is the most concise (and correct) way to ensure that you are resizing after the modal is shown without rewriting any plugins:</p>\n\n<pre><code>$('#map-modal').on('shown', function () {\n  google.maps.event.trigger(map, 'resize');\n})\n</code></pre>\n\n<p>UPDATE: I just realized that this solution still does not center the map properly, so I needed to add one more command:</p>\n\n<pre><code>$('#map-modal').on('shown', function () {\n  google.maps.event.trigger(map, 'resize');\n  map.setCenter(new google.maps.LatLng(42.3605336, -72.6362989));\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>I had this problem and I solved it doing a callback to the draw method. I think this happens because you draw your map erlier than showing the dialog.</p>\n\n<p>I used this code to solve it (it wasn\u00b4t a modal window):</p>\n\n<pre><code>$('#map').show(function()\n{\n    var punto = new google.maps.LatLng(this.latitud, this.longitud);\n    var myOptions = {zoom: 15, center: punto, mapTypeId: google.maps.MapTypeId.ROADMAP,mapTypeControl:false, draggable:false};\n    var map = new google.maps.Map(document.getElementById('mapa'),  myOptions);\n    var marker = new google.maps.Marker({\n    position:punto,\n    map: map,\n    title: this.nombre\n});\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>google.maps.event.addListenerOnce(map, 'tilesloaded', function() {\n     google.maps.event.addListenerOnce(map, 'tilesloaded', function() {\n          google.maps.event.trigger(map, 'resize');\n\n     });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm having a problem with embedding a Google Map via the v3 API in a modal box.</p>\n\n<p><strong>Grey boxes appear in the map canvas when the modal is shown.</strong> Resizing the browser window, bringing up Web Inspector, etc. makes all map tiles visible, i.e. it \"force re-render\" the map.</p>\n\n<p>The parent element of the map element (<code>section#map-modal</code>, see code below) has <code>display: none</code> set in its CSS on page load. The JS modal code automatically sets <code>display: block</code> when the show button is clicked. If I temporarily remove <code>display: none</code> from the modal element, the map renders correctly on page refresh. Isn't the Google Map liking having a hidden parent element?</p>\n\n<p>I'm using Twitter's Bootstrap modal jQuery plugin, and am controlling the modal itself with CSS. It's fixed positioned, have a pixel width, etc. Nothing unusual. </p>\n\n<p>I've of course googled around for solutions, and many points to the Google API method of triggering the <code>resize</code> event:</p>\n\n<pre><code>google.maps.event.trigger(map, 'resize');\n</code></pre>\n\n<p>I've indeed done so, but to no avail.</p>\n\n<p><strong>Relevant code: <a href=\"https://gist.github.com/1591488\" rel=\"nofollow\">https://gist.github.com/1591488</a></strong></p>\n\n<p>As you can see, I'me triggering the events at line 39. </p>\n\n<p>(press the <em>View larger map</em> button at the bottom of the sidebar).</p>\n\n<p>Files:</p>\n\n<ul>\n<li><code>fagerhult.js</code></li>\n<li><code>fagerhult.map.js</code></li>\n<li><code>bootstrap-modal.js</code></li>\n<li><code>master.css</code></li>\n</ul>\n\n<p>I would deeply appreciate any help or extra pair of eyes in this, as I'm soon going mad over it. </p>\n",
            "last_activity_date": 1409224743,
            "question_id": 8812268,
            "score": 14,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3",
                "modal-dialog"
            ],
            "title": "Grey boxes appear in parts of embedded Google Map in modal box"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>My suggestion would be that whatever you do you wrap it in a COM wrapper.  VBA deals best with COM objects so you could compile as a .NET Component then expose as a COM object using the interop functionality of .NET. </p>\n\n<p>As an alternative you could also look into using Windows Scripting Host objects to execute a Javascript File and return you the result.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The <a href=\"http://www.microsoft.com/downloads/details.aspx?FamilyID=47809025-d896-482e-a0d6-524e7e844d81&amp;DisplayLang=en#Overview\" rel=\"nofollow\">Windows Scripting Engine</a> will allow you to run the JavaScript library. It works well in my experience.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here's another option to consider, though I'm not by any means stating its the best one.</p>\n\n<ul>\n<li>Insure that the Python version compiles in IronPython. (There shouldn't be any problems here, or only a small amount of porting at most.)</li>\n<li>Create an Excel add-in library using C# and reference IronPython from it.</li>\n<li>Wrap the necessary functionality in your C# Excel add-in.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The simplest approach may be to embed the Javascript diff logic into a COM component directly using Javascript.  This is possible via something called \"<a href=\"http://msdn.microsoft.com/en-us/library/47004bz8%28VS.85%29.aspx\">Windows Script Components</a>\".  </p>\n\n<p>Here's <a href=\"http://www.microsoft.com/technet/scriptcenter/resources/scriptshop/default.mspx\">a tutorial on creating WSCs</a>.</p>\n\n<p>A Windows Script Component is a COM component that is defined in script. The interface to the component is via COM, which means it is VBA friendly.  The logic is implemented in any Windows Scripting Hosting -compatible language, like JavaScript or VBScript.  The WSC is defined in a single XML file, which embeds the logic, the component Class ID, the methods, the registration logic, and so on.   </p>\n\n<p>There's also a <a href=\"http://www.microsoft.com/downloads/details.aspx?familyid=408024ED-FAAD-4835-8E68-773CCC951A6B&amp;displaylang=en\">tool available to help in creating a WSC</a>. Basically it is a wizard-type thing that asks you questions and fills in the XML template. Myself, I just started with an example .wsc file and edited it by hand with a text editor. It's pretty self-explanatory.</p>\n\n<p>A COM component defined this way in script (in a .wsc file) is callable just like any other COM component, from any environment that can dance with COM. </p>\n\n<p><strong>UPDATE</strong>: I took a few minutes and produced the WSC for GoogleDiff. Here it is.</p>\n\n<pre><code>&lt;?xml version=\"1.0\"?&gt;\n\n&lt;package&gt;\n\n&lt;component id=\"Cheeso.Google.DiffMatchPatch\"&gt;\n\n  &lt;comment&gt;\n    COM Wrapper on the Diff/Match/Patch logic published by Google at http://code.google.com/p/google-diff-match-patch/.\n  &lt;/comment&gt;\n\n&lt;?component error=\"true\" debug=\"true\"?&gt;\n\n&lt;registration\n  description=\"WSC Component for Google Diff/Match/Patch\"\n  progid=\"Cheeso.Google.DiffMatchPatch\"\n  version=\"1.00\"\n  classid=\"{36e400d0-32f7-4778-a521-2a5e1dd7d11c}\"\n  remotable=\"False\"&gt;\n\n  &lt;script language=\"VBScript\"&gt;\n  &lt;![CDATA[\n\n    strComponent = \"Cheeso's COM wrapper for Google Diff/Match/Patch\"\n\n    Function Register\n      MsgBox strComponent &amp; \" - registered.\"\n    End Function\n\n    Function Unregister\n      MsgBox strComponent &amp; \" - unregistered.\"\n    End Function\n\n  ]]&gt;\n  &lt;/script&gt;\n&lt;/registration&gt;\n\n\n&lt;public&gt;\n  &lt;method name=\"Diff\"&gt;\n    &lt;parameter name=\"text1\"/&gt;\n    &lt;parameter name=\"text2\"/&gt;\n  &lt;/method&gt;\n  &lt;method name=\"DiffFast\"&gt;\n    &lt;parameter name=\"text1\"/&gt;\n    &lt;parameter name=\"text2\"/&gt;\n  &lt;/method&gt;\n&lt;/public&gt;\n\n\n&lt;script language=\"Javascript\"&gt;\n&lt;![CDATA[\n\n\n    // insert original google diff code here...\n\n\n// public methods on the component\nvar dpm = new diff_match_patch();\n\n\nfunction Diff(text1, text2)\n{\n   return dpm.diff_main(text1, text2, false);\n}\n\n\nfunction DiffFast(text1, text2)\n{\n   return dpm.diff_main(text1, text2, true);\n}\n\n\n]]&gt;\n&lt;/script&gt;\n\n&lt;/component&gt;\n\n&lt;/package&gt;\n</code></pre>\n\n<p>To use that thing, you have to register it.  In Explorer, right click on it, and select \"Register\". or, from the command line:\n    regsvr32 file:\\c:\\scripts\\GoogleDiff.wsc</p>\n\n<p>I didn't try using it from VBA, but here is some VBScript code that uses the component. </p>\n\n<pre><code>Sub TestDiff()\n    dim t1 \n    t1 = \"The quick brown fox jumped over the lazy dog.\"\n\n    dim t2 \n    t2 = \"The large fat elephant jumped over the cowering flea.\"\n\n    WScript.echo(\"\")\n\n    WScript.echo(\"Instantiating a Diff Component ...\")\n    dim d\n    set d = WScript.CreateObject(\"Cheeso.Google.DiffMatchPatch\")\n\n    WScript.echo(\"Doing the Diff...\")\n    x = d.Diff(t1, t2)\n\n    WScript.echo(\"\")\n    WScript.echo(\"Result was of type: \" &amp; TypeName(x))\n    ' result is all the diffs, joined by commas.  \n    ' Each diff is an integer (position), and a string.  These are separated by commas.\n    WScript.echo(\"Result : \" &amp; x)\n\n    WScript.echo(\"Transform result...\")\n    z= Split(x, \",\")\n    WScript.echo(\"\")\n    redim diffs(ubound(z)/2)\n    i = 0\n    j = 0\n    For Each item in z\n      If (j = 0) then\n        diffs(i) = item\n        j = j+ 1      \n      Else \n          diffs(i) = diffs(i) &amp; \",\" &amp; item\n        i = i + 1\n        j = 0\n      End If\n    Next\n\n    WScript.echo(\"Results:\")\n    For Each item in diffs\n      WScript.echo(\"  \" &amp; item)\n    Next\n\n    WScript.echo(\"Done.\")\n\nEnd Sub\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>There\u2019s a really cool diff class hosted by Google here:</p>\n\n<p><a href=\"http://code.google.com/p/google-diff-match-patch/\">http://code.google.com/p/google-diff-match-patch/</a></p>\n\n<p>I\u2019ve used it before on a few web sites, but now I need to use it <em>within</em> an Excel macro to compare text between two cells.</p>\n\n<p>However, it is only available in JavaScript, Python, Java, and C++, not VBA.</p>\n\n<p>My users are limited to Excel 2003, so a pure .NET solution wouldn't work. Translating the code to VBA manually would take too much time and make upgrading difficult.</p>\n\n<p>One option I considered was to compile the JavaScript or Java source using the .NET compilers (JScript.NET or J#), use Reflector to output as VB.NET, then finally downgrade the VB.NET code manually to VBA, giving me a pure VBA solution. After having problems getting it to compile with any .NET compiler, I abandoned this path.</p>\n\n<p>Assuming I could have gotten a working .NET library, I could have also used ExcelDna (<a href=\"http://www.codeplex.com/exceldna\">http://www.codeplex.com/exceldna</a>), an open-source Excel add-in to make .NET code integration easier.</p>\n\n<p>My last idea was to host an Internet Explorer object, send it the JavaScript source, and calling it. Even if I got this to work, my guess is it would be dirt-slow and messy.</p>\n\n<p><strong>UPDATE: Solution found!</strong></p>\n\n<p>I used the WSC method described below by the accepted answer. I had to change the WSC code a little to clean up the diffs and give me back a VBA-compatible array of arrays:</p>\n\n<pre><code>function DiffFast(text1, text2)\n{\n    var d = dmp.diff_main(text1, text2, true);\n    dmp.diff_cleanupSemantic(d);\n    var dictionary = new ActiveXObject(\"Scripting.Dictionary\"); // VBA-compatible array\n    for ( var i = 0; i &lt; d.length; i++ ) {\n    dictionary.add(i, JS2VBArray(d[i]));\n    }\n    return dictionary.Items();\n}\n\nfunction JS2VBArray(objJSArray)\n{\n    var dictionary = new ActiveXObject(\"Scripting.Dictionary\");\n    for (var i = 0; i &lt; objJSArray.length; i++) {\n        dictionary.add( i, objJSArray[ i ] );\n        }\n    return dictionary.Items();\n}\n</code></pre>\n\n<p>I registered the WSC and it worked just fine. The code in VBA for calling it is as follows:</p>\n\n<pre><code>Public Function GetDiffs(ByVal s1 As String, ByVal s2 As String) As Variant()\n    Dim objWMIService As Object\n    Dim objDiff As Object\n    Set objWMIService = GetObject(\"winmgmts:\")\n    Set objDiff = CreateObject(\"Google.DiffMatchPath.WSC\")\n    GetDiffs = objDiff.DiffFast(s1, s2)\n    Set objDiff = Nothing\n    Set objWMIService = Nothing\nEnd Function\n</code></pre>\n\n<p>(I tried keeping a single global objWMIService and objDiff around so I wouldn't have to create/destroy these for each cell, but it didn't seem to make a difference on performance.)</p>\n\n<p>I then wrote my main macro. It takes three parameters: a range (one column) of original values, a range of new values, and a range where the diff should dump the results. All are <em>assumed</em> to have the same number of row, I don't have any serious error-checking going on here.</p>\n\n<pre><code>Public Sub DiffAndFormat(ByRef OriginalRange As Range, ByRef NewRange As Range, ByRef DeltaRange As Range)\n    Dim idiff As Long\n    Dim thisDiff() As Variant\n    Dim diffop As String\n    Dim difftext As String\n    difftext = \"\"\n    Dim diffs() As Variant\n    Dim OriginalValue As String\n    Dim NewValue As String\n    Dim DeltaCell As Range\n    Dim row As Integer\n    Dim CalcMode As Integer\n</code></pre>\n\n<p>These next three lines speed up the update without botching the user's preferred calculation mode later:</p>\n\n<pre><code>    Application.ScreenUpdating = False\n    CalcMode = Application.Calculation\n    Application.Calculation = xlCalculationManual\n    For row = 1 To OriginalRange.Rows.Count\n        difftext = \"\"\n        OriginalValue = OriginalRange.Cells(row, 1).Value\n        NewValue = NewRange.Cells(row, 1).Value\n        Set DeltaCell = DeltaRange.Cells(row, 1)\n        If OriginalValue = \"\" And NewValue = \"\" Then\n</code></pre>\n\n<p>Erasing the previous diffs, if any, is important:</p>\n\n<pre><code>            Erase diffs\n</code></pre>\n\n<p>This test is a visual shortcut for my users so it's clear when there's no change at all:</p>\n\n<pre><code>        ElseIf OriginalValue = NewValue Then\n            difftext = \"No change.\"\n            Erase diffs\n        Else\n</code></pre>\n\n<p>Combine all the text together as the delta cell value, whether the text was identical, inserted, or deleted:</p>\n\n<pre><code>            diffs = GetDiffs(OriginalValue, NewValue)\n            For idiff = 0 To UBound(diffs)\n                thisDiff = diffs(idiff)\n                difftext = difftext &amp; thisDiff(1)\n            Next\n        End If\n</code></pre>\n\n<p>You have to set the value <em>before</em> starting the formatting:</p>\n\n<pre><code>        DeltaCell.value2 = difftext\n        Call FormatDiff(diffs, DeltaCell)\n    Next\n    Application.ScreenUpdating = True\n    Application.Calculation = CalcMode\nEnd Sub\n</code></pre>\n\n<p>Here's the code that interprets the diffs and formats the delta cell:</p>\n\n<pre><code>Public Sub FormatDiff(ByRef diffs() As Variant, ByVal cell As Range)\n    Dim idiff As Long\n    Dim thisDiff() As Variant\n    Dim diffop As String\n    Dim difftext As String\n    cell.Font.Strikethrough = False\n    cell.Font.ColorIndex = 0\n    cell.Font.Bold = False\n    If Not diffs Then Exit Sub\n    Dim lastlen As Long\n    Dim thislen As Long\n    lastlen = 1\n    For idiff = 0 To UBound(diffs)\n        thisDiff = diffs(idiff)\n        diffop = thisDiff(0)\n        thislen = Len(thisDiff(1))\n        Select Case diffop\n            Case -1\n                cell.Characters(lastlen, thislen).Font.Strikethrough = True\n                cell.Characters(lastlen, thislen).Font.ColorIndex = 16 ' Dark Gray http://www.microsoft.com/technet/scriptcenter/resources/officetips/mar05/tips0329.mspx\n            Case 1\n                cell.Characters(lastlen, thislen).Font.Bold = True\n                cell.Characters(lastlen, thislen).Font.ColorIndex = 32 ' Blue\n        End Select\n        lastlen = lastlen + thislen\n    Next\nEnd Sub\n</code></pre>\n\n<p>There are some opportunities for optimization, but so far it's working just fine. Thanks to everyone who helped!</p>\n",
            "last_activity_date": 1242182261,
            "question_id": 848246,
            "score": 9,
            "tags": [
                ".net",
                "javascript",
                "excel",
                "vba",
                "j#"
            ],
            "title": "How can I use JavaScript within an Excel macro?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Here is an example that works on Chrome 5.0.375.125.</p>\n\n<p>The page B (iframe content):</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;&lt;/head&gt;\n    &lt;body&gt;\n        &lt;script&gt;\n            top.postMessage('hello', 'A');\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Note the use of <code>top.postMessage</code> or <code>parent.postMessage</code> not <code>window.postMessage</code> here</p>\n\n<p>The page A:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;&lt;/head&gt;\n&lt;body&gt;\n    &lt;iframe src=\"B\"&gt;&lt;/iframe&gt;\n    &lt;script&gt;\n        window.addEventListener( \"message\",\n          function (e) {\n                if(e.origin !== 'B'){ return; } \n                alert(e.data);\n          },\n          false);\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>A and B must be something like <code>http://domain.com</code></p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>From <a href=\"http://stackoverflow.com/questions/6411762\">another question</a>, it looks the domains(A and B here) must have a <code>/</code> for the <code>postMessage</code> to work properly.</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>Probably you try to send your data from mydomain.com to www.mydomain.com or reverse, NOTE you missed \"www\". <a href=\"http://mydomain.com\" rel=\"nofollow\">http://mydomain.com</a> and <a href=\"http://www.mydomain.com\" rel=\"nofollow\">http://www.mydomain.com</a> are different domains to javascript.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You should post a message from frame to parent, after loaded.</p>\n\n<p>frame script:</p>\n\n<pre><code>$(document).ready(function() {\n    window.parent.postMessage(\"I'm loaded\", \"*\");\n});\n</code></pre>\n\n<p>And listen it in parent:</p>\n\n<pre><code>function listenMessage(msg) {\n    alert(msg);\n}\n\nif (window.addEventListener) {\n    window.addEventListener(\"message\", listenMessage, false);\n} else {\n    window.attachEvent(\"onmessage\", listenMessage);\n}\n</code></pre>\n\n<p>Use this link for more info: <a href=\"http://en.wikipedia.org/wiki/Web_Messaging\">http://en.wikipedia.org/wiki/Web_Messaging</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>It seems like the point of <a href=\"https://developer.mozilla.org/en/DOM/window.postMessage\">window.postMessage</a> is to allow safe communication between windows/frames hosted on different domains, but it doesn't actually seem to <em>allow</em> that in Chrome.</p>\n\n<p>Here's the scenario:  </p>\n\n<ol>\n<li>Embed an &lt;iframe&gt; (with a <code>src</code> on domain B<sup>*</sup>) in a page on domain A </li>\n<li>The &lt;iframe&gt; ends up being mostly a &lt;script&gt; tag, at the end of which's execution...</li>\n<li>I call window.postMessage( <em>some_data</em>, <em>page_on_A</em> )</li>\n</ol>\n\n<p>The &lt;iframe&gt; is most definitely in the context of domain B, and I've confirmed that the embedded javascript in that &lt;iframe&gt; executes properly and calls <code>postMessage</code> with the correct values.</p>\n\n<p>I get this error message in Chrome:  </p>\n\n<blockquote>\n  <p>Unable to post message to <em>A</em>.\n  Recipient has origin <em>B</em>.</p>\n</blockquote>\n\n<p>Here's the code that registers a message event listener in the page on A:</p>\n\n<pre><code>window.addEventListener(\n  \"message\",\n  function (event) {\n    // Do something\n  },\n  false);\n</code></pre>\n\n<p>I've also tried calling <code>window.postMessage(some_data, '*')</code>, but all that does is suppress the error.</p>\n\n<p>Am I just missing the point here, is window.postMessage(...) not meant for this?  Or am I just doing it horribly wrong?</p>\n\n<p><sub>*Mime-type text/html, which it must remain.</sub></p>\n",
            "last_activity_date": 1423738234,
            "question_id": 3457391,
            "score": 44,
            "tags": [
                "javascript",
                "html5",
                "google-chrome",
                "xss"
            ],
            "title": "How do you use window.postMessage across domains?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>The easiest way is to just learn how to do DOM traversing and manipulation with the plain DOM api (you would probably call this: normal JavaScript). </p>\n\n<p>This can however be a pain for some things. (which is why libraries where invented in the first place).</p>\n\n<p>Googling for \"javascript DOM traversing/manipulation\" should give plenty of helpful (and less helpful) resources.</p>\n\n<p>The articles on this website are pretty good: <a href=\"http://www.htmlgoodies.com/primers/jsp/\">http://www.htmlgoodies.com/primers/jsp/</a></p>\n\n<p>And as Nosredna points out in the comments: be sure to test in all browsers, because now jQuery won't be handling the inconsistencies for you.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Jeremy Keith's book \"<a href=\"http://domscripting.com/book\" rel=\"nofollow\">DOM Scripting</a>\" is a great intro to working with Javascript and the DOM. I highly recommend it, whether you want to use jQuery or not. It's good to know what's going on beneath.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There are several good books available. I like ppk on JavaScript. Here's C<a href=\"http://www.webreference.com/programming/javascript/ppk1/index.html\" rel=\"nofollow\">hapter 8 on the DOM</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you want to learn javascript, watch these Douglas Crockford videos.  They are very good.</p>\n\n<ol>\n<li><a href=\"http://www.youtube.com/watch?v=v2ifWcnQs6M\" rel=\"nofollow\"><strong>The Javascript programming language: History, Language, Advanced Features, Platforms, Standards, Style</strong></a> [<a href=\"http://yuiblog.com/assets/crockford/javascript.zip\" rel=\"nofollow\">download slides</a>]\n<ul>\n<li><a href=\"http://www.yuiblog.com/blog/2007/01/24/video-crockford-tjpl/\" rel=\"nofollow\">See YUI blog entry</a></li>\n</ul></li>\n<li><a href=\"http://www.youtube.com/watch?v=Y2Y0U-2qJMs\" rel=\"nofollow\"><strong>Theory of the DOM</strong></a> [<a href=\"http://yuiblog.com/assets/crockford/theory.zip\" rel=\"nofollow\">download slides</a>]\n<ul>\n<li><a href=\"http://www.yuiblog.com/blog/2006/10/20/video-crockford-domtheory/\" rel=\"nofollow\">See YUI blog entry</a></li>\n</ul></li>\n<li><a href=\"http://www.youtube.com/watch?v=DwYPG6vreJg\" rel=\"nofollow\"><strong>Advanced Javascript: Inheritance, modules, debugging, efficiency, JSON</strong></a>  [<a href=\"http://yuiblog.com/assets/crockford/advancedjavascript.zip\" rel=\"nofollow\">download slides</a>]\n<ul>\n<li><a href=\"http://www.yuiblog.com/blog/2006/11/27/video-crockford-advjs/\" rel=\"nofollow\">See YUI blog entry</a></li>\n</ul></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<blockquote>\n  <p>Is there an easy way to convert jQuery\n  code to regular javascript?</p>\n</blockquote>\n\n<p>No, especially if:</p>\n\n<blockquote>\n  <p>understanding the\n  examples of javascript solutions\n  written in jQuery [is] hard. </p>\n</blockquote>\n\n<p>JQuery and all the frameworks tend to make understanding the code easier.  If that's difficult to understand, then vanilla javascript will be torture :)</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I can see a reason, unrelated to the original post, to automatically compile jQuery code into standard JavaScript:</p>\n\n<p>16k -- or whatever the gzipped, minified jQuery library is -- might be too much for your website that is intended for a mobile browser.  The w3c is recommending that all HTTP requests for mobile websites should be a maximum of 20k.</p>\n\n<p><a href=\"http://www.w3.org/TR/mobileOK-basic10-tests/#PAGE%5FSIZE%5FLIMIT\" rel=\"nofollow\">w3c specs for mobile</a></p>\n\n<p>So I enjoy coding in my nice, terse, chained jQuery.  But now I need to optimize for mobile.  Should I really go back and do the difficult, tedious work of rewriting all the helper functions I used in the jQuery library?  Or is there some kind of convenient app that will help me recompile?</p>\n\n<p>That would be very sweet.  Sadly, I don't think such a thing exists.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can try <a href=\"http://www.jsobfuscate.com\" rel=\"nofollow\">http://www.jsobfuscate.com</a>. According to the site:</p>\n\n<blockquote>\n  <p>Obfuscation provides a way to protect your code by making it\n  unreadable using advanced algorithms and also reduces the size of your\n  files for speed.</p>\n</blockquote>\n\n<p>This means that you maybe not be able to 'read' the js code but the <strong>jQuery to Javascript</strong> conversion is totally working.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This will get you 90% of the way there ; )</p>\n\n<pre><code>var $ = function(e) {\n  if(typeof e !== \"undefined\")\n    return document.querySelectorAll(e);\n};\n\n$.id = function(i){return document.getElementById(i)};\n$.class = function(c){return document.getElementsByClassName(c)};\n$.tag = function(t){return document.getElementsByTagName(t)};\n</code></pre>\n\n<p>The bottom three are nearly fast as the native functions, which is about <a href=\"http://jsperf.com/zepto-vs-jquery-2013/23\">15x faster than jQuery</a>.  If you need to do Ajax (only crazy people do xmlhttprequests by hand) you can cut the jQuery fat by switching over to <a href=\"http://zeptojs.com/\">Zepto</a>.  Zepto tracks jQuery's API and is 1/8th the size but sacrifices some backwards and cross-platform compatibility.</p>\n\n<p>Update 2/1/2014\nThere is a nifty site called <a href=\"http://youmightnotneedjquery.com/?hn\">You Might Not Need jQuery</a> which gives equivalent native methods for many common jQuery functions.  It is still lame that there is no auto-conversion script that would just parse all this out for us.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I just found this quite impressive tutorial about jquery to javascript conversion from  <em>Jeffrey Way on Jan 19th 2012</em> <code>*Copyright \u00a9 2014 Envato*</code>  :</p>\n\n<p><a href=\"http://net.tutsplus.com/tutorials/javascript-ajax/from-jquery-to-javascript-a-reference/\" rel=\"nofollow\">http://net.tutsplus.com/tutorials/javascript-ajax/from-jquery-to-javascript-a-reference/</a></p>\n\n<blockquote>\n  <p>Whether we like it or not, more and more developers are being\n  introduced to the world of JavaScript through jQuery first. In many\n  ways, these newcomers are the lucky ones. They have access to a\n  plethora of new JavaScript APIs, which make the process of DOM\n  traversal (something that many folks depend on jQuery for)\n  considerably easier. Unfortunately, they don\u2019t know about these APIs!</p>\n  \n  <p>In this article, we\u2019ll take a variety of common jQuery tasks, and\n  convert them to both modern and legacy JavaScript.</p>\n</blockquote>\n\n<p>I proposed it in a comment to OP, and after his suggestion, i publish it has an answer for everyone to refer to.</p>\n\n<p>Also, Jeffrey Way mentioned about his inspiration witch seems to be a good primer for understanding : <a href=\"http://sharedfil.es/js-48hIfQE4XK.html\" rel=\"nofollow\">http://sharedfil.es/js-48hIfQE4XK.html</a></p>\n\n<p>Has a teaser, this document comparison of jQuery to javascript :</p>\n\n<pre><code>$(document).ready(function() {\n  // code\u2026\n});\n</code></pre>\n\n<p></p>\n\n<pre><code>document.addEventListener(\"DOMContentLoaded\", function() {\n  // code\u2026\n});\n</code></pre>\n\n<hr>\n\n<pre><code>$(\"a\").click(function() {\n  // code\u2026\n})\n</code></pre>\n\n<p></p>\n\n<pre><code>[].forEach.call(document.querySelectorAll(\"a\"), function(el) {\n  el.addEventListener(\"click\", function() {\n    // code\u2026\n  });\n});\n</code></pre>\n\n<p>You should take a look.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>hopefully the question doesn't sound stupid, but there are lots of examples out there of achieving certain things in javascript/dom using jQuery. Using jQuery is not always an option (or even a want) which can make understanding the examples of javascript solutions written in jQuery hard.</p>\n\n<p>Is there an easy way to convert jQuery code to regular javascript? I guess without having to access or understand the jQuery source code...</p>\n\n<p>edit (future readers): pretend there is a logical reason why jQuery isn't available!</p>\n\n<p>edit (almost 3 years since I asked this): there is no logical reason why jQuery isn't available :P</p>\n",
            "last_activity_date": 1400539791,
            "question_id": 978799,
            "score": 42,
            "tags": [
                "javascript",
                "jquery",
                "code-converter"
            ],
            "title": "is there an easy way to convert jquery code to javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Was taught this in my Java class. I would say they only have realistic differences in multithreaded scenarios, where message-passing is a very legitimate and often-used technique.</p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>Theoretically, they're different.</p>\n\n<p>Practically, not so much.</p>\n\n<p>They're different in that in Objective-C, objects can choose to not respond to messages, or forward messages on to different objects, or whatever.  In languages like C, function calls are really just jumping to a certain spot in memory and executing code.  There's no dynamic behavior involved.</p>\n\n<p>However, in standard use cases, when you send a message to an object, the method that the message represented will usually end up being called.  So about 99% of the time, sending a message will result in calling a method.  As such, we often say \"call a method\" when we really mean \"send a message\".  So practically, they're almost always the same, <em>but they don't have to be</em>.</p>\n\n<p>A while ago, I waxed philosophical on this topic and blogged about it:  <a href=\"http://davedelong.tumblr.com/post/58428190187/an-observation-on-objective-c\">http://davedelong.tumblr.com/post/58428190187/an-observation-on-objective-c</a></p>\n\n<p><strong>edit</strong></p>\n\n<p>To directly answer your question, there's usually nothing wrong with saying \"calling a method\" instead of \"sending a message\".  However, it's important to understand that there is a very significant implementation difference.</p>\n\n<p>(And as an aside, my personal preference is to say \"invoke a method on an object\")</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>No, there's nothing at all wrong with thinking of it like that. They are called messages because they are a layer of abstraction over functions. Part of this comes from Objective C's type system. A better understanding of messages helps:</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Objective-C#Messages\" rel=\"nofollow\">full source on wikipedia</a> (I've picked out some of the more relevant issues)</p>\n\n<blockquote>\n  <p>Internal names of the function are\n  rarely used directly. Generally,\n  messages are converted to function\n  calls defined in the Objective-C\n  runtime library. It is not necessarily\n  known at link time which method will\n  be called because the class of the\n  receiver (the object being sent the\n  message) need not be known until\n  runtime.</p>\n</blockquote>\n\n<p>from same article:</p>\n\n<blockquote>\n  <p>The Objective-C model of\n  object-oriented programming is based\n  on message passing to object\n  instances. In Objective-C one does not\n  call a method; one sends a message. The object to which the\n  message is directed \u2014 the receiver  \u2014\n  is not guaranteed to respond to a\n  message, and if it does not, it simply\n  raises an exception.\n  Smalltalk-style programming\n  allows messages to go unimplemented,\n  with the method resolved to its\n  implementation at runtime. For\n  example, a message may be sent to a\n  collection of objects, to which only\n  some will be expected to respond,\n  without fear of producing runtime\n  errors. (The Cocoa  platform takes\n  advantage of this, as all objects in a\n  Cocoa application are sent the\n  awakeFromNib: message as the\n  application launches. Objects may\n  respond by executing any\n  initialization required at launch.)\n  Message passing also does not require\n  that an object be defined at compile\n  time. </p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Because of Objective-C's dynamic messaging dispatch, message sending is actually different from calling a C function or a C++ method (although eventually, a C function will be called).  Messages are sent through selectors to the receiving object, which either responds to the message by invoking an <code>IMP</code> (a C function pointer) or by forwarding the message to its superclass.  If no class in the inheritance chain responds to the message, an exception is thrown.  It's also possible to intercept a message and forward it to a wholly different class (this is what <code>NSProxy</code> subclasses do).  </p>\n\n<p>When using Objective-C, there isn't a huge difference between message sending and C++-style method calling, but there are a few practical implications of the message passing system that I know of:</p>\n\n<ol>\n<li>Since the message processing happens at runtime, instead of compile time, there's no compile-time way to know whether a class responds to any particular message.  This is why you usually get compiler warnings instead of errors when you misspell a method, for instance.  </li>\n<li>You can safely send any message to <code>nil</code>, allowing for idioms like <code>[foo release]</code> without worrying about checking for NULL.  </li>\n<li>As @CrazyJugglerDrummer says, message dispatching allows you to send messages to a lot of objects at a time without worrying about whether they will respond to them.  This allows informal protocols and sending messages to all objects in a container.  </li>\n<li>I'm not 100% sure of this, but I think categories (adding methods to already-existing classes) are made possible through dynamic message dispatch.  </li>\n<li>Message sending allows for message forwarding (for instance with <code>NSProxy</code> subclasses).</li>\n<li>Message sending allows you to do interesting low-level hacking such as method swizzling (exchanging implementations of methods at runtime).  </li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>On a C function call, the compiler replaces the selector with a call to a function, and execution jumps in response to the function call.</p>\n\n<p>In Objective-C methods are dynamically bound to messages, which means that method names are resolved to implementations at runtime. Specifically, the object is examined at runtime to see if it contains a pointer to an implementation for the given selector.</p>\n\n<p>As a consequence, Objective-C lets you load and link new classes and categories while it\u2019s running, and perform techniques like swizzling, categories, object proxies, and others. None of this is possible in C.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In C or any ECMAscript based language you 'call a public method or function' on an object. But in documentation for Objective C, there are no public method calls, only the sending of messages.</p>\n\n<p>Is there anything wrong in thinking that when you 'send a message' in ObjC you are actually 'calling a public method on an Object'.?</p>\n",
            "last_activity_date": 1389465277,
            "question_id": 2852381,
            "score": 37,
            "tags": [
                "objective-c",
                "javascript"
            ],
            "title": "&#39;Calling a method&#39; OR &#39;sending a message&#39; in Objective C"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>What I want to know is what is wrong with escape/unescape ?</p>\n</blockquote>\n\n<p>They're not \u201cwrong\u201d as such, they're just their own special string format which looks a bit like URI-parameter-encoding but actually isn't. In particular:</p>\n\n<ul>\n<li>\u2018+\u2019 means plus, not space</li>\n<li>there is a special \u201c%uNNNN\u201d format for encoding Unicode UTF-16 code points, instead of encoding UTF-8 bytes</li>\n</ul>\n\n<p>So if you use escape() to create URI parameter values you will get the wrong results for strings containing a plus, or any non-ASCII characters.</p>\n\n<p>escape() could be used as an internal JavaScript-only encoding scheme, for example to escape cookie values. However now that all browsers support encodeURIComponent (which wasn't originally the case), there's no reason to use escape in preference to that.</p>\n\n<p>There is only one modern use for escape/unescape that I know of, and that's as a quick way to implement a UTF-8 encoder/decoder, by leveraging the UTF-8 processing in URIComponent handling:</p>\n\n<pre><code>utf8bytes= unescape(encodeURIComponent(unicodecharacters));\nunicodecharacters= decodeURIComponent(escape(utf8bytes));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Another \"modern\" use I've run into is parsing a URI-encoded string that may include invalid UTF8 byte sequences. In certain cases decodeURIComponent can throw an exception. You may need to catch this exception and fall back to using unescape.</p>\n\n<p>An example would be 't\u00fcr' encoded as 't%FCr' which I've seen Firefox produce (when characters are pasted into the address bar after the ?).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>escape</code> operates only on characters in the range 0 to 255 inclusive (ISO-8859-1, which is effectively unicode code points representable with a single byte). (*)</p>\n\n<p><code>encodeURIComponent</code> works for all strings javascript can represent (which is the whole range of unicode's basic multilingual plane, i e unicode code points 0 to 1,114,111 or 0x10FFFF that cover almost any human writing system in current use).</p>\n\n<p>Both functions produce url safe strings that only use code points 0 to 127 inclusive (US-ASCII), which the latter accomplishes by first encoding the string as UTF-8 and then applying the <code>%XX</code> hex encoding familiar from <code>escape</code>, to any code point that would not be url safe.</p>\n\n<p>This is incidentally why you can <a href=\"http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\" rel=\"nofollow\">make a two-funcall UTF-8 encoder/decoder</a> in javascript without any loops or garbage generation, by combining these primitives to cancel out all but the UTF-8-processing side effects, as the <code>unescape</code> and <code>decodeURIComponent</code> versions do the same in reverse.</p>\n\n<p>(*) Foot note: Some modern browsers like Google Chrome have been tweaked to produce %uXXXX for the above-255 range of characters escape wasn't originally defined for, but web server support for decoding that encoding is not as well-implemented as decoding the IETF-standardized UTF-8 based encoding.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The best Answer is this it's working online on this website <a href=\"http://meyerweb.com/eric/tools/dencoder/\" rel=\"nofollow\">http://meyerweb.com/eric/tools/dencoder/</a></p>\n\n<pre><code>function decode() {\n    var obj = document.getElementById('dencoder');\n    var encoded = obj.value;\n    obj.value = decodeURIComponent(encoded.replace(/\\+/g,  \" \"));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In answering another question I became aware that my Javascript/DOM knowledge had become a bit out of date in that I am still using <code>escape</code>/<code>unescape</code> to encode the contents of URL components whereas it appears I should now be using <code>encodeURIComponent</code>/<code>decodeURIComponent</code> instead.</p>\n\n<p>What I want to know is what is wrong with <code>escape</code>/<code>unescape</code> ? There are some vague suggestions that there is some sort of problem around Unicode characters, but I can't find any definite explanation.</p>\n\n<p>My web experience is fairly biased, almost all of it has been writing big Intranet apps tied to Internet Explorer. That has involved a lot of use of <code>escape</code>/<code>unescape</code> and the apps involved have fully supported Unicode for many years now.</p>\n\n<p>So what are the Unicode problems that <code>escape</code>/<code>unescape</code> are supposed to have ? Does anyone have any test cases to demonstrate the problems ?</p>\n",
            "last_activity_date": 1384563616,
            "question_id": 619323,
            "score": 28,
            "tags": [
                "javascript",
                "encoding",
                "escaping",
                "dhtml"
            ],
            "title": "decodeURIComponent vs unescape, what is wrong with unescape?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I think, it's nice behavior of jquery. What do you want to get when <code>$('div.black:eq(0)').css('line-height')</code>, false, or undefined? This is so confusing, because real value of <code>line-height</code> (inherited, yes) is 1 em.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>If you're interested in how the style is different from a parent element you could look at the css value which has been given to the parent by saying $('div.black:eq(0)').parent().css('line-height').  In this way you could tell if the child and the parent had the same value.  What you can glean from this, however, is limited.  It is possible that both the child and the parent have been explicitly assigned the same thing!</p>\n\n<p>If you're interested in the far-more-complex structure of the cascade (e.g. like what you can see in firebug) then I don't have a good answer for you that uses only jQuery. There will be some inefficient hack you can perform depending on the specific information you want (like cloning the object as others suggested, or toggling classes and checking the effect of the toggle), but it makes me upset just thinking about it!</p>\n\n<p>As I think someone noted, vanilla JS does allow you to inspect the properties of specific style items; so maybe a hybrid of jQuery and vanilla JS will get you what you need?</p>\n\n<p>Check out <a href=\"http://developer.apple.com/internet/webcontent/styles.html\" rel=\"nofollow\">http://developer.apple.com/internet/webcontent/styles.html</a> to see the javascript which gives you access to stylesheet information.  AFAIK this isn't going to be an \"out of the box for free\" type of thing from jQuery (could totally be wrong).  That said, it should be possible if you are willing to iterate through the stylesheet information.</p>\n\n<p><strong>Edit:</strong> Removed some stuff based on the original question's example code</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://jsfiddle.net/k7Dw6/\" rel=\"nofollow\">http://jsfiddle.net/k7Dw6/</a></p>\n\n<pre><code>var $black = $('div.black:eq(0)');\nalert($('&lt;div&gt;').attr('class', $black.attr('class')).css('line-height') === $black.css('line-height'));\n</code></pre>\n\n<p>You could create a new element with the same class (and ID I guess) and check if the CSS property is the same or not.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't think you can tell if the given style is inherited, I think the best you can do is to set the given CSS property to \"inherit\", capture its computed value, and compare it to the original value.  If they are different, the style is definitely <em>not</em> inherited.</p>\n\n<pre><code>var el = $('div.black:eq(0)');\nvar prop = el.css(\"color\");\nel.css(\"color\", \"inherit\");\nvar prop2 = el.css(\"color\");\nel.css(\"color\", prop);\nif(prop != prop2)\n  alert(\"Color is not inherited.\");\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/NMRSF/1/\">Demo on jsFiddle</a></p>\n\n<p>The point is this: If you set div.black to #fff in the CSS or via inline style, this method will consider that to be inherited. Not ideal, in my opinion, but it may suit your needs.  I'm afraid a perfect solution requires traversal of the entire stylesheet.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>To actually determine whether a css style was inherited or set on the element itself, you would have to implement the exact rules that the browsers apply to determine the used value for a particular style on an element.</p>\n\n<p>You would have to implement this <a href=\"http://www.w3.org/TR/CSS2/cascade.html\">spec</a> that specifies how the computed and used values are calculated.</p>\n\n<p>CSS selectors may not always follow a parent-child relationship which could have simplified matters. Consider this CSS.</p>\n\n<pre><code>body {\n    color: red;\n}\n\ndiv + div {\n    color: red;\n}\n</code></pre>\n\n<p>and the following HTML:</p>\n\n<pre><code>&lt;body&gt;\n    &lt;div&gt;first&lt;/div&gt;\n    &lt;div&gt;second&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>Both <code>first</code> and <code>second</code> wil show up in red, however, the first div is red because it inherits it from the parent. The second div is red because the <code>div + div</code> CSS rule applies to it, which is more <em>specific</em>. Looking at the parent, we would see it has the same color, but that's not where the second div is getting it from.</p>\n\n<p>Browsers don't expose any of the internal calculations, except the <code>getComputedStyle</code> interface.</p>\n\n<p>A simple, but <em>flawed</em> solution would be to run through each selector from the stylesheets, and check if a given element satisfies the selector. If yes, then <strong>assume</strong> that style was applied directly on the element. Say you wanted to go through each style in the first stylesheet,</p>\n\n<pre><code>var myElement = $('..');\nvar rules = document.styleSheets[0].cssRules;\nfor(var i = 0; i &lt; rules.length; i++) {\n    if (myElement.is(rules[i].selectorText)) {\n        console.log('style was directly applied to the element');\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>I know this is an old question, however I thought I'd share what I've done with Josh's answer, viz: modified it to remove the css if it was inherited, and turned it into a jQuery plugin. Please feel free to shoot it down, but so far it is working for me :-)</p>\n\n<pre><code>$.fn.isInheritedStyle = function(style) {\n    var current = this.css(style);\n    this.css(style, 'inherit');\n    var inherited = this.css(style);\n    if (current == inherited)\n        this.css(style, '');\n    else\n        this.css(style, current);\n    return (current == inherited);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The JS (not jQuery) element.style property returns a CSSStyleDeclaration object thus:  </p>\n\n<pre><code>{parentRule: null, \nlength: 0, \ncssText: \"\", \nalignContent: \"\", \nalignItems: \"\"\u2026\n</code></pre>\n\n<p>If the style you are interested in has a value then it's declared (or applied by JS) at the element level, else is inherited.<br>\nThe information came from <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style</a></p>\n\n<p>I was struggling with HTML5 Dnd adding display:list-item at the element level (li) and breaking another hide/show filter functionality; I was able to fix it this way.<br>\nMy specific code was: </p>\n\n<pre><code>// browser bug? it adds display:list-item to the moved elements, this\n// loops clear the explicit element-level \"display\" style\nvar cols = $('#columnNames li');\nfor( var icol = 0; icol &lt; cols.length; icol++) {\n    var d = cols[icol].style; // the CSSStyleDeclaration \n    d.display = \"\"; // clear the element-level style\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>This is a very simple question, so I'll keep it really brief:</p>\n\n<p><strong>How can I tell if a particular DOM element's CSS property is inherited?</strong></p>\n\n<p>Reason why I'm asking is because with <code>jQuery</code>'s <code>css</code> method it will return the computed style, which inherits the parent object's CSS properties. Is there a way to retrieve the properties set on the object itself?</p>\n\n<p>An example might explain what I'm getting at a bit better:</p>\n\n<p>CSS:</p>\n\n<pre><code>div#container {\n  color:#fff;\n}\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"container\"&gt;\n  Something that should be interesting\n  &lt;div class=\"black\"&gt;\n    Some other thing that should be interesting\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>So, in the instance of <code>div.black</code>, which inherits <code>color</code>, how can I tell if it is inherited? </p>\n\n<p><code>$('div.black:eq(0)').css('color')</code> will obviously give me <code>#fff</code>, but I want to retrieve the style of the element <em>itself</em>, not its parents.</p>\n",
            "last_activity_date": 1426016684,
            "question_id": 5000108,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "How can I tell if a particular CSS property is inherited with jQuery?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>$(\"td\")</code> is extended jQuery object and it has jQuery methods, it returns jquery object that contains array of html objects. <code>document.getElementsByTagName(\"td\")</code> is raw js method and returns NodeList. <a href=\"http://alebelcor.blogspot.com/2011/03/htmlcollections-nodelists.html\" rel=\"nofollow\">See this article</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>First I will explain the difference between <code>NodeList</code> and <code>HTMLCollection</code>.</p>\n\n<p>Both interfaces are <em>collections</em> of DOM nodes. They differ in the methods they provide and in the type of nodes they can contain. While a <code>NodeList</code> can contain any node type, an <code>HTMLCollection</code> is supposed to only contain Element nodes.<br>\nAn <code>HTMLCollection</code> provides the same methods as a <code>NodeList</code> and additionally a method called <code>namedItem</code>.</p>\n\n<p>Collections are always used when access has to be provided to multiple nodes, e.g. most selector methods (such as <code>getElementsByTagName</code>) return multiple nodes or getting a reference to all children (<code>element.childNodes</code>).</p>\n\n<p>For more information, have a look at <a href=\"http://www.w3.org/TR/domcore/#concept-collection\">DOM4 specification - Collections</a>.</p>\n\n<blockquote>\n  <p>What is the difference between <code>document.getElementsByTagName(\"td\")</code> and <code>$(\"td\")</code>?</p>\n</blockquote>\n\n<p><code>getElementsByTagName</code> is method of the DOM interface. It accepts a tag name as input and returns a <code>NodeList</code> (some browsers chose to return <code>HTMLCollection</code> instead, which is OK, since it is a superset of <code>NodeList</code>).</p>\n\n<p><code>$(\"td\")</code> is presumably jQuery. It accepts any valid CSS/jQuery selector and returns a jQuery object.</p>\n\n<p>The biggest differences between standard DOM collections and jQuery selections is that DOM collections are <em>typically</em> live (not all methods return a live collection though), i.e. any changes to the DOM are reflected in the collections if they are affected. They are like a <em>view</em> on the DOM tree, whereas jQuery selections are snapshots of the DOM tree in the moment the function was called.</p>\n\n<blockquote>\n  <p>Why is console.log also showing the array of DOM elements beside them, and are they not objects and not an array?</p>\n</blockquote>\n\n<p>jQuery objects are <em>array-like</em> objects, i.e. they have numeric properties and a <code>length</code> property (keep in mind that arrays are just objects themselves). Browsers tend to display arrays and array-like objects in a special way, like <code>[ ... , ... , ... ]</code>.</p>\n\n<blockquote>\n  <p>What is the elusive \"NodeLists\" all about, and how do I select one?</p>\n</blockquote>\n\n<p>See the first part of my answer. You cannot <em>select</em> <code>NodeList</code>s, they are the <em>result</em> of a selection. </p>\n\n<p>As far as I know there is not even a way to create <code>NodeList</code>s programatically (i.e. creating an empty one and adding nodes later on), they are only returned by some DOM methods/properties.</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<h2>0. <strong>What is the difference between an <code>HTMLCollection</code> and a <code>NodeList</code>?</strong></h2>\n\n<p>Here are some definitions for you.</p>\n\n<p><a href=\"http://www.w3.org/TR/REC-DOM-Level-1/level-one-html.html#ID-535378264\">DOM Level 1 Spec - Miscellaneous Object Definitions</a>:</p>\n\n<blockquote>\n  <p>Interface HTMLCollection</p>\n  \n  <p>An HTMLCollection is a list of nodes. An individual node may be accessed by either ordinal index or the node's name or id attributes. Note: Collections in the HTML DOM are assumed to be live meaning that they are automatically updated when the underlying document is changed.</p>\n</blockquote>\n\n<p><a href=\"http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-536297177\">DOM Level 3 Spec - NodeList</a></p>\n\n<blockquote>\n  <p>Interface NodeList</p>\n  \n  <p>The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.</p>\n  \n  <p>The items in the NodeList are accessible via an integral index, starting from 0.</p>\n</blockquote>\n\n<p>So they can both contain live data which means that the DOM will update when their values do. They also contain a different set of functions.</p>\n\n<p>You will note if you inspect the console if you run your scripts that the <code>table</code> DOM element contains both a <code>childNodes</code> <code>NodeList[2]</code> and a <code>children</code> <code>HTMLCollection[1]</code>. Why are they different? Because <code>HTMLCollection</code> can only contain element nodes, NodeList also contains a text node.</p>\n\n<p><img src=\"http://i.stack.imgur.com/CmCu3.png\" alt=\"enter image description here\"></p>\n\n<h2>1. What is the difference between <code>document.getElementsByTagName(\"td\")</code> and <code>$(\"td\")</code>?</h2>\n\n<p><code>document.getElementsByTagName(\"td\")</code> returns an array of DOM elements (a <code>NodeList</code>), <code>$(\"td\")</code> is called a jQuery object which has the the elements from <code>document.getElementsByTagName(\"td\")</code> on its properties <code>0</code>, <code>1</code>, <code>2</code>, etc. The main difference is that the jQuery object is a little slower to retrieve but gives access to all the handy jQuery functions.</p>\n\n<h2>2. <code>$(\"#myTable\")</code> and <code>$(\"td\")</code> are objects (<code>jQuery</code> objects). Why is <code>console.log</code> also showing the array of DOM elements beside them, and are they not objects and not an array?</h2>\n\n<p>They are objects with their properties <code>0</code>, <code>1</code>, <code>2</code>, etc. set to the DOM elements. Here's a simple example: of how it works:</p>\n\n<p><a href=\"http://jsfiddle.net/Tyriar/B6das/\">jsFiddle</a></p>\n\n<pre><code>    var a = {\n        1: \"first\",\n        2: \"second\"\n    }\n    alert(a[1]);\n</code></pre>\n\n<h2>3. What is the elusive \"NodeLists\" all about, and how do I select one?</h2>\n\n<p>You have been retrieving them in your code, <code>getElementsByClassName</code> and <code>getElementsByTagName</code> both return <code>NodeList</code>s</p>\n\n<p><img src=\"http://i.stack.imgur.com/t2ph3.png\" alt=\"NodeList\"></p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I've always been confused between HTMLCollections, objects, and arrays when it comes to DOM.  For instance...</p>\n\n<ol>\n<li>What is the difference between <code>document.getElementsByTagName(\"td\")</code> and <code>$(\"td\")</code>?</li>\n<li><code>$(\"#myTable\")</code> and <code>$(\"td\")</code> are objects (jQuery objects).  Why is console.log also showing the array of DOM elements beside them, and are they not objects and not an array?</li>\n<li>What is the elusive \"NodeLists\" all about, and how do I select one?</li>\n</ol>\n\n<p>Please also provide any interpretation of the below script.</p>\n\n<p>Thank you</p>\n\n<pre><code>[123,\"abc\",321,\"cba\"]=[123,\"abc\",321,\"cba\"]\n{123:123,abc:\"abc\",321:321,cba:\"cba\"}=Object { 123=123, abc=\"abc\", 321=321, more...}\nNode= Node { ELEMENT_NODE=1, ATTRIBUTE_NODE=2, TEXT_NODE=3, more...}\ndocument.links= HTMLCollection[a #, a #]\ndocument.getElementById(\"myTable\")= &lt;table id=\"myTable\"&gt;\ndocument.getElementsByClassName(\"myRow\")= HTMLCollection[tr.myRow, tr.myRow]\ndocument.getElementsByTagName(\"td\")= HTMLCollection[td, td, td, td]\n$(\"#myTable\")= Object[table#myTable]\n$(\"td\")= Object[td, td, td, td]\n\n\n&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt; \n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt; \n    &lt;head&gt; \n        &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /&gt; \n        &lt;title&gt;Collections?&lt;/title&gt;  \n        &lt;script src=\"http://code.jquery.com/jquery-latest.js\" type=\"text/javascript\"&gt;&lt;/script&gt; \n        &lt;script type=\"text/javascript\"&gt;\n            $(function(){\n                console.log('[123,\"abc\",321,\"cba\"]=',[123,\"abc\",321,\"cba\"]);\n                console.log('{123:123,abc:\"abc\",321:321,cba:\"cba\"}=',{123:123,abc:\"abc\",321:321,cba:\"cba\"});\n                console.log('Node=',Node);\n                console.log('document.links=',document.links);\n                console.log('document.getElementById(\"myTable\")=',document.getElementById(\"myTable\"));\n                console.log('document.getElementsByClassName(\"myRow\")=',document.getElementsByClassName(\"myRow\"))\n                console.log('document.getElementsByTagName(\"td\")=',document.getElementsByTagName(\"td\"));\n                console.log('$(\"#myTable\")=',$(\"#myTable\"));\n                console.log('$(\"td\")=',$(\"td\"));\n            });\n        &lt;/script&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;a href=\"#\"&gt;Link1&lt;/a&gt;\n        &lt;a href=\"#\"&gt;Link2&lt;/a&gt;\n        &lt;table id=\"myTable\"&gt;\n            &lt;tr class=\"myRow\"&gt;&lt;td&gt;td11&lt;/td&gt;&lt;td&gt;td12&lt;/td&gt;&lt;/tr&gt;\n            &lt;tr class=\"myRow\"&gt;&lt;td&gt;td21&lt;/td&gt;&lt;td&gt;td22&lt;/td&gt;&lt;/tr&gt;\n        &lt;/table&gt;\n    &lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1364905955,
            "question_id": 15763358,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "dom"
            ],
            "title": "Difference between HTMLCollection, NodeLists, and arrays of objects"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<h3>Specific Solution</h3>\n\n<p>You can use a function to replace each one.</p>\n\n<pre><code>var str = \"I have a cat, a dog, and a goat.\";\nvar mapObj = {\n   cat:\"dog\",\n   dog:\"goat\",\n   goat:\"cat\"\n};\nstr = str.replace(/cat|dog|goat/gi, function(matched){\n  return mapObj[matched];\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/L6LB2/\">jsfiddle example</a></p>\n\n<h3>Generalizing it</h3>\n\n<p>If you want to dynamically maintain the regex and just add future exchanges to the map, you can do this</p>\n\n<pre><code>new RegExp(Object.keys(mapObj).join(\"|\"),\"gi\"); \n</code></pre>\n\n<p>to generate the regex.  So then it would look like this</p>\n\n<pre><code>var mapObj = {cat:\"dog\",dog:\"goat\",goat:\"cat\"};\n\nvar re = new RegExp(Object.keys(mapObj).join(\"|\"),\"gi\");\nstr = str.replace(re, function(matched){\n  return mapObj[matched];\n});\n</code></pre>\n\n<p>And to add or change any more replacements you could just edit the map.\u00a0</p>\n\n<p><a href=\"http://jsfiddle.net/L6LB2/1/\">fiddle with dynamic regex</a></p>\n\n<h3>Making it Reusable</h3>\n\n<p>If you want this to be a general pattern you could pull this out to a function like this</p>\n\n<pre><code>function replaceAll(str,mapObj){\n    var re = new RegExp(Object.keys(mapObj).join(\"|\"),\"gi\");\n\n    return str.replace(re, function(matched){\n        return mapObj[matched.toLowerCase()];\n    });\n}\n</code></pre>\n\n<p>So then you could just pass the str and a map of the replacements you want to the function and it would return the transformed string.</p>\n\n<p><a href=\"http://jsfiddle.net/L6LB2/35/\">fiddle with function</a></p>\n\n<p>To ensure Object.keys works in older browsers, add a polyfill eg from <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\">MDN</a> or <a href=\"https://github.com/es-shims/es5-shim/blob/v2.0.5/es5-shim.js#L544\">Es5</a>.</p>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>This may not meet your exact need in this instance, but I've found this a useful way to replace multiple parameters in strings, as a general solution. It will replace all instances of the parameters, no matter how many times they are referenced:</p>\n\n<pre><code>String.prototype.fmt = function (hash) {\n        var string = this, key; for (key in hash) string = string.replace(new RegExp('\\\\{' + key + '\\\\}', 'gm'), hash[key]); return string\n}\n</code></pre>\n\n<p>You would invoke it as follows:</p>\n\n<pre><code>var person = '{title} {first} {last}'.fmt({ title: 'Agent', first: 'Jack', last: 'Bauer' });\n// person = 'Agent Jack Bauer'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>String.prototype.replaceSome = function() {\n    var replaceWith = Array.prototype.pop.apply(arguments),\n        i = 0,\n        r = this,\n        l = arguments.length;\n    for (;i&lt;l;i++) {\n        r = r.replace(arguments[i],replaceWith);\n    }\n    return r;\n}\n</code></pre>\n\n<p>/* \nreplaceSome method for strings\nit takes as ,much arguments as we want and replaces all \nof them with the last argument we specified \n2013 CopyRights saved for: Max Ahmed\nthis is an example:</p>\n\n<pre><code>var string = \"[hello i want to 'replace x' with eat]\";\nvar replaced = string.replaceSome(\"]\",\"[\",\"'replace x' with\",\"\");\ndocument.write(string + \"&lt;br&gt;\" + replaced); // returns hello i want to eat (without brackets)\n</code></pre>\n\n<p>*/</p>\n\n<p>jsFiddle: <a href=\"http://jsfiddle.net/CPj89/\" rel=\"nofollow\">http://jsfiddle.net/CPj89/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I expanded on @BenMcCormicks a bit. His worked for regular strings but not if I had escaped characters or wildcards. Here's what I did</p>\n\n<pre><code>str = \"[curl] 6: blah blah 234433 blah blah\";\nmapObj = {'\\\\[curl]':'','\\\\d:',''};\n\n\nreplaceAll: function (str, mapObj) {\n\n    var arr = Object.keys(mapObj),\n        re;\n\n    $.each(arr, function (key, value) {\n        re = new RegExp(value, \"g\");\n        str = str.replace(re, function (matched) {\n            return mapObj[value];\n        });\n    });\n\n    return str;\n\n}\n</code></pre>\n\n<p><strong>returns \"blah blah 234433 blah blah\"</strong></p>\n\n<p>This way it will match the key in the mapObj and not the matched word'</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to replace multiple words in a string with multiple other words. The string is \"I have a cat, a dog, and a goat.\"</p>\n\n<p>However, this does not produce \"I have a dog, a goat, and a cat\", but instead it produces \"I have a cat, a cat, and a cat\". Is it possible to replace multiple strings with multiple other strings at the same time in JavaScript, so that the correct result will be produced?</p>\n\n<pre><code>var str = \"I have a cat, a dog, and a goat.\";\nstr = str.replace(/cat/gi, \"dog\");\nstr = str.replace(/dog/gi, \"goat\");\nstr = str.replace(/goat/gi, \"cat\");\n\n//this produces \"I have a cat, a cat, and a cat\"\n//but I wanted to produce the string \"I have a dog, a goat, and a cat\".\n</code></pre>\n",
            "last_activity_date": 1416241982,
            "question_id": 15604140,
            "score": 21,
            "tags": [
                "javascript",
                "replace"
            ],
            "title": "Replace multiple strings with multiple other strings"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>If you're referring to the URL in the address bar, then</p>\n\n<pre><code>window.location.search\n</code></pre>\n\n<p>will give you just the query string part. Note that this includes the question mark at the beginning.</p>\n\n<p>If you're referring to any random URL stored in (e.g.) a string, you can get at the query string by taking a substring beginning at the index of the first question mark by doing something like:</p>\n\n<pre><code>url.substring(url.indexOf(\"?\"))\n</code></pre>\n\n<p>That assumes that any question marks in the fragment part of the URL have been properly encoded. If there's a target at the end (i.e., a # followed by the id of a DOM element) it'll include that too.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>You can easily build a dictionary style collection...</p>\n\n<pre><code>function getQueryStrings() { \n  var assoc  = {};\n  var decode = function (s) { return decodeURIComponent(s.replace(/\\+/g, \" \")); };\n  var queryString = location.search.substring(1); \n  var keyValues = queryString.split('&amp;'); \n\n  for(var i in keyValues) { \n    var key = keyValues[i].split('=');\n    if (key.length &gt; 1) {\n      assoc[decode(key[0])] = decode(key[1]);\n    }\n  } \n\n  return assoc; \n} \n</code></pre>\n\n<p>And use it like this...</p>\n\n<pre><code>var qs = getQueryStrings();\nvar myParam = qs[\"myParam\"]; \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>Here's the method I use...</p>\n\n<pre><code>function Querystring() {\n    var q = window.location.search.substr(1), qs = {};\n    if (q.length) {\n        var keys = q.split(\"&amp;\"), k, kv, key, val, v;\n        for (k = keys.length; k--; ) {\n            kv = keys[k].split(\"=\");\n            key = kv[0];\n            val = decodeURIComponent(kv[1]);\n            if (qs[key] === undefined) {\n                qs[key] = val;\n            } else {\n                v = qs[key];\n                if (v.constructor != Array) {\n                    qs[key] = [];\n                    qs[key].push(v);\n                }\n                qs[key].push(val);\n            }\n        }\n    }\n    return qs;\n}\n</code></pre>\n\n<p>It returns an object of strings and arrays and seems to work quite well.\n(Strings for single keys, arrays for the same key with multiple values.)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Very Straightforward!</p>\n\n<pre><code>function parseQueryString(){\n    var assoc = {};\n    var keyValues = location.search.slice(1).split('&amp;');\n    var decode = function(s){\n        return decodeURIComponent(s.replace(/\\+/g, ' '));\n    };\n\n    for (var i = 0; i &lt; keyValues.length; ++i) {\n        var key = keyValues[i].split('=');\n        if (1 &lt; key.length) {\n            assoc[decode(key[0])] = decode(key[1]);\n        }\n    }\n\n    return assoc;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Works for me-</p>\n\n<p>function querySt(Key) {</p>\n\n<pre><code>var url = window.location.href;\n\nKeysValues = url.split(/[\\?&amp;]+/); \n\nfor (i = 0; i &lt; KeysValues.length; i++) {\n\n        KeyValue= KeysValues[i].split(\"=\");\n\n        if (KeyValue[0] == Key) {\n\n            return KeyValue[1];\n\n    }\n\n}\n</code></pre>\n\n<p>}</p>\n\n<p>function GetQString(Key) {     </p>\n\n<pre><code>if (querySt(Key)) {\n\n     var value = querySt(Key);\n\n     return value;        \n\n}\n</code></pre>\n\n<p>}</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use this <strong>Javascript</strong> :</p>\n\n<pre><code>function getParameterByName(name) {\n    var match = RegExp('[?&amp;]' + name + '=([^&amp;]*)').exec(window.location.search);\n    return match &amp;&amp; decodeURIComponent(match[1].replace(/\\+/g, ' '));\n}\n</code></pre>\n\n<h2>OR</h2>\n\n<p>You can also use the plugin <strong><a href=\"https://github.com/allmarkedup/purl\" rel=\"nofollow\">jQuery-URL-Parser</a></strong> allows to retrieve all parts of URL, including anchor, host, etc.</p>\n\n<p>Usage is very simple and cool:</p>\n\n<pre><code>$.url().param(\"itemID\")\n</code></pre>\n\n<p>via James&amp;Alfa</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You need to simple use following function.</p>\n\n<pre><code>function GetQueryStringByParameter(name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&amp;]\" + name + \"=([^&amp;#]*)\"),\n        results = regex.exec(location.search);\n        return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    }\n</code></pre>\n\n<p>--- How to Use ---</p>\n\n<pre><code>var QueryString= GetQueryStringByParameter('QueryString');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How to extract the query string from the URL in javascript?</p>\n\n<p>Thank you!</p>\n",
            "last_activity_date": 1406189489,
            "question_id": 2907482,
            "score": 21,
            "tags": [
                "javascript",
                "query-string"
            ],
            "title": "How to get the query string by javascript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>If you use Firefox's error-console you should consider the <a href=\"http://getfirebug.com\" rel=\"nofollow\">Firebug</a> plugin.</p>\n\n<p>There is also Firebug Lite -- a bookmarklet that brings a scaled-down version of Firebug to other browsers.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I use Ctrl+Shift+J in Chrome, and it's got something close in there.  IE -- there's the <a href=\"http://www.microsoft.com/downloads/details.aspx?familyid=e59c3964-672d-4511-bb3e-2d5e1db91038&amp;displaylang=en\" rel=\"nofollow\">IE Developer Toolbar</a>, and I think IE8 has something like that, but let's face it, if you're using IE for Javascript debugging, you basically hate yourself and have more serious personal issues regarding your self-esteem to deal with.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You have following options</p>\n\n<ul>\n<li><strong>Chrome</strong>: Press <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>J</kbd> (<kbd>Cmd</kbd>+<kbd>Option</kbd>+<kbd>J</kbd> on Mac) and it will give similar functionality. Also consider checking out <a href=\"http://www.pascarello.com/lessons/browsers/ChromeDebugHelp.html\">JavaScript debugger</a> in Chrome</li>\n<li><strong>IE7</strong>: Nothing built in. But have a look at <a href=\"http://www.microsoft.com/downloads/details.aspx?familyid=e59c3964-672d-4511-bb3e-2d5e1db91038&amp;displaylang=en\">IE Developer Toolbar</a></li>\n<li><strong>IE8</strong>: Just hit <kbd>F12</kbd> and you will get access to some very capable built-in tools. Error console is on <code>Script</code> tab</li>\n<li><strong>Firefox</strong>: Just use <a href=\"http://getfirebug.com/\">FireBug</a></li>\n<li><strong>Opera</strong>: Press <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>I</kbd> (<kbd>Cmd</kbd>+<kbd>Option</kbd>+<kbd>I</kbd> on Mac) to launch <a href=\"http://www.opera.com/dragonfly/documentation/\">Opera Drangonfly</a> which is a fully featured development and debugging tool integrated into the Opera browser</li>\n<li><strong>Safari</strong>: Enable the Developer Menu from Safari's preferences. It will give access the various tools (Error Console, Web Inspector, JavaScript Profiler, etc). Of course there are also shortcuts, like <kbd>Cmd</kbd> + <kbd>Alt</kbd> + <kbd>C</kbd> for the console</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>In Opera it's under <code>Tools-&gt;Advanced-&gt;Error Console</code>. I find it very handy.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<ul>\n<li><strong>Safari:</strong> Enable the Developer Menu from Safari's preferences, then use that menu to access the various tools (Error Console, Web Inspector, JavaScript Profiler, ...). Of course there are also shortcuts, like CMD + ALT + C for the console. :)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have taken to the practice of the following before DOM load:</p>\n\n<pre><code>(function(window, undefined){\n  var debug_print = (location.search.indexOf('debug') != -1);\n  if(window['console'] == undefined){\n    var _logs = [];\n    var _console = {\n      log : function(){\n        _logs.push({'msg':Array.prototype.slice.call(arguments, 0), 'type':null});\n        this._out();\n      },\n      warn : function(){\n        _logs.push({'msg':Array.prototype.slice.call(arguments, 0), 'type':'warn'});\n        this._out();\n      },\n      error : function(){\n        _logs.push({'msg':Array.prototype.slice.call(arguments, 0), 'type':'error'});\n        this._out();\n      },\n      _out : function(){\n        if(debug_print &amp;&amp; typeof this['write'] == 'function'){\n          this.write(_logs.pop());\n        }\n      },\n      _print : function(){return debug_print;},\n      _q : function(){return _logs.length;},\n      _flush : function(){\n        if(typeof this['write'] == 'function'){\n          _logs.reverse();\n          for(var entry; entry = _logs.pop();){\n            this.write(entry);\n          }\n        }\n      }\n    }\n    window['console'] = _console;\n  }\n})(window)\n</code></pre>\n\n<p>and this after domload (place it at the end of the body tag):</p>\n\n<pre><code>(function(window, undefined){\n  if(window['console']){\n    if(console['_print']){\n      var console_pane = document.createElement('div');\n      console_pane.id = '_debug_console';\n      document.body.appendChild(console_pane);\n      console.write = function(log){\n        var msg = [new Date(), log.msg].join(\"$/&gt; \");\n        var entry_pane = document.createElement('div');\n        if(log.type !== undefined){\n          entry_pane.className = log.type;\n        };\n        console_pane.appendChild(entry_pane);\n        entry_pane.innerHTML = msg;\n      };\n      console._flush();\n    };\n  }\n})(window)\n</code></pre>\n\n<p>This allows you to do all the basics and turn the actual console display mechanism off and on with the <code>?debug</code> querystring (it can be placed anywhere in the querystring). To make it look less atrocious you might also want to bundle in the following css:</p>\n\n<pre><code>#_debug_console{\n  background : #ffffff;\n  margin: 0px;\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  height: 20%;\n  font-family: Arial;\n  font-size: 10px;\n  border-top: solid 5px #ddd;\n}\n#_debug_console .error{\n  color: #FF0000;\n}\n#_debug_console .warn{\n  color: #DDDD00;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Any of <a href=\"http://www.delightbite.com\" rel=\"nofollow\"><em>these</em></a>:</p>\n\n<blockquote>\n<pre><code>Hit F12 or Ctrl+Shift+I\nright-click on any element on the page, and \"Inspect Element\"\nWrench button -&gt; Tools -&gt; Developer Tools\n</code></pre>\n</blockquote>\n\n<p>Then go to Console tab</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there an equivalent to Firefox's \"Error console\" in other browsers? I find the error console handy for finding JavaScript errors, but there doesn't seem to be an equivalent simple way to see error messages on other browsers. I'm interested in Internet Explorer, Opera and Google Chrome.</p>\n\n<p><strong>Post script:</strong> I'm not looking for an alternative to Firefox's error console, it is fine for me. I don't need FireBug. Also I am aware of the Developer Tools in Google Chrome, but I can't make sense of it. I just want to get the error messages. Is there some way to get sane error messages out of it? I haven't been able to. My default browser is Chrome on Windows and Linux, but if I do something in JavaScript, I end up having to switch to Firefox to get the error messages from the error console.</p>\n",
            "last_activity_date": 1353742208,
            "question_id": 1648582,
            "score": 20,
            "tags": [
                "javascript",
                "browser"
            ],
            "title": "Equivalent of Firefox&#39;s &quot;error console&quot; in other browsers"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If the files are not on an external website, you could try making an ajax request for each file. If it comes back as a failure, then you know it doesn't exist, otherwise, if it completes and/or takes longer than a given threshold to return, you can guess that it exists. It's not always perfect, but generally 'filenotfound' requests are quick.</p>\n\n<pre><code>var threshold   = 500,\n    successFunc = function(){ console.log('It exists!'); };\n\nvar myXHR = $.ajax({\n  url: $('#checkme').attr('href'),\n  type: 'text',\n  method: 'get',\n  error: function() {\n    console.log('file does not exist');\n  },\n  success: successFunc\n});\n\nsetTimeout(function(){\n  myXHR.abort();\n  successFunc();\n}, threshold);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can <code>$.ajax</code> to it. If file does not exist you will get 404 error and then you can do whatever you need (UI-wise) in the error callback. It's up to you how to trigger the request (timer?) Of course if you also have ability to do some server-side coding you can do a single AJAX request - scan the directory and then return results as say JSON.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If the files are on the same domain, then you can use AJAX to test for their existence as <a href=\"http://stackoverflow.com/questions/1591401/javascript-jquery-check-broken-links/1591449#1591449\">Alex Sexton</a> said; <strong>however, you should not use the <code>GET</code> method, just <code>HEAD</code></strong> and then check the HTTP status for the expect value (200, or just less than 400).</p>\n\n<p>Here's a <a href=\"http://binarykitten.com/js/88-jquery-plugin-ajax-head-request.html\" rel=\"nofollow\">jQuery plugin</a> but it didn't seem to do just a HEAD.  Instead, here's a simple method provided from a <a href=\"http://stackoverflow.com/questions/333634/http-head-request-in-javascript-ajax\">related question</a>:</p>\n\n<pre><code>function UrlExists(url) {\n  var http = new XMLHttpRequest();\n  http.open('HEAD', url, false);\n  http.send();\n  return http.status != 404;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>Issue is that JavaScript has the same origin policy so you can not grab content from another domain. This won't change by upvoting it (wondering about the 17 votes).\nI think you need it for external links, so it is impossible just with .js ...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Like Sebastian says it is not possible due to the same origin policy. If the site can be published (temporarily) on a public domain you could use one of the link checker services out there. I am behind <a href=\"http://checkerr.org\" rel=\"nofollow\">checkerr.org</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I developed a small Javascript/jQuery program to access a collection of pdf files for internal use. And I wanted to have the information div of a pdf file highlighted if the file actually exist.</p>\n\n<p>Is there a way to programmatically determine if a link to a file is broken? If so, How?</p>\n\n<p>Any guide or suggestion is appropriated.</p>\n",
            "last_activity_date": 1423575539,
            "question_id": 1591401,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "broken-links"
            ],
            "title": "JavaScript/jQuery check broken links"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can't. You have to use a named function or store the reference somehow.</p>\n\n<pre><code>var handler;\n\nfunction doSomethingWith(param) {\n    handler = function(){\n        document.write(param);\n    };  \n    document.body.addEventListener('scroll', handler,false);\n}\nsetTimeout(function() {\n     document.body.removeEventListener('scroll', handler ,false);\n}, 3000);\n</code></pre>\n\n<p>The best would be to do this in a structured way, so that you can identify different handlers and remove them. In the example above, you obviously could only remove the last handler.</p>\n\n<p><strong>Update:</strong></p>\n\n<p>You could create your own handler handler (:)) :</p>\n\n<pre><code>var Handler = (function(){\n    var i = 1,\n        listeners = {};\n\n    return {\n        addListener: function(element, event, handler, capture) {\n            element.addEventListener(event, handler, capture);\n            listeners[i] = {element: element, \n                             event: event, \n                             handler: handler, \n                             capture: capture};\n            return i++;\n        },\n        removeListener: function(id) {\n            if(id in listeners) {\n                var h = listeners[id];\n                h.element.removeEventListener(h.event, h.handler, h.capture);\n                delete listeners[id];\n            }\n        }\n    };\n}());\n</code></pre>\n\n<p>Then you can use it with:</p>\n\n<pre><code>function doSomethingWith(param) {\n    return Handler.addListener(document.body, 'scroll', function() {\n        document.write(param);\n    }, false);\n}\n\nvar handler = doSomethingWith('Test. ');\n\nsetTimeout(function() {\n     Handler.removeListener(handler);\n}, 3000);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/fkling/cSTe4/\" rel=\"nofollow\"><strong>DEMO</strong></a></p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>You can't, you need a reference to the function:</p>\n\n<pre><code>function doSomethingWith(param) {\n   var fn = function(){ document.write(param); };\n   document.body.addEventListener('scroll', fn, false);\n   setTimeout(function(){ document.body.removeEventListener('scroll', fn, false); }, 3000);\n}\ndoSomethingWith('Test. ');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<pre><code>function doSomethingWith(param)\n{\n    document.body.addEventListener(\n        'scroll',\n        function()\n        {\n            document.write(param);\n        },\n        false\n    ); // An event that I want to remove later\n}\nsetTimeout(\n    function()\n    {\n        document.body.removeEventListener('scroll', HANDLER ,false);\n            // What HANDLER should I specify to remove the anonymous handler above?\n    },\n    3000\n);\ndoSomethingWith('Test. ');\n</code></pre>\n",
            "last_activity_date": 1425896140,
            "question_id": 5660131,
            "score": 16,
            "tags": [
                "javascript",
                "event-handling",
                "anonymous-function"
            ],
            "title": "How to removeEventListener that is addEventListener with anonymous function?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Do you mean something like this : <a href=\"http://innonesen.se/widgets/tabs/\" rel=\"nofollow\">http://innonesen.se/widgets/tabs/</a>  ?\nI played with this code fragmet few days ago ..</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>check the current address periodically using setTimeout/interval:</p>\n\n<pre><code> var oldLocation = location.href;\n setInterval(function() {\n      if(location.href != oldLocation) {\n           do your action\n           oldLocation = location.href\n      }\n  }, 1000); // check every second\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>You should extend the location object to expose an event that you can bind to.</p>\n\n<p>ie:</p>\n\n<pre><code>window.location.prototype.changed = function(e){};\n\n(function() //create a scope so 'location' is not global\n{\n    var location = window.location.href;\n    setInterval(function()\n    {\n    \tif(location != window.location.href)\n    \t{\n    \t\tlocation = window.location.href;\n    \t\twindow.location.changed(location);\n    \t}\n    }, 1000);\n})();\n\nwindow.location.changed = function(e)\n{\n    console.log(e);//outputs http://newhref.com\n    //this is fired when the window changes location\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://www.asual.com/swfaddress/\" rel=\"nofollow\">SWFaddress</a> is an excellent library for these types of things.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>HTML5 introduces a <em>hashchange</em> event which allows you to register for notifications of url hash changes without polling for them with a timer.</p>\n\n<p>It it supported by all major browsers (Firefox 3.6, IE8, Chrome, other Webkit-based browsers), but I'd still highly suggest to use a library which handles the event for you - i.e. by using a timer in browsers not supporting the HTML5 event and using the event otherwise.</p>\n\n<p>For further information on the event, see <a href=\"https://developer.mozilla.org/en/dom/window.onhashchange\">https://developer.mozilla.org/en/dom/window.onhashchange</a> and <a href=\"http://msdn.microsoft.com/en-us/library/cc288209%28VS.85%29.aspx\">http://msdn.microsoft.com/en-us/library/cc288209%28VS.85%29.aspx</a>.</p>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<p>I have a Ajax heavy application that may have a URL such as</p>\n\n<pre><code>http://mysite.com/myApp/#page=1\n</code></pre>\n\n<p>When a user manipulates the site, the address bar can change to something like</p>\n\n<pre><code>http://mysite.com/myApp/#page=5\n</code></pre>\n\n<p>without reloading the page.</p>\n\n<p>My problem is the following sequence:</p>\n\n<ol>\n<li>A user bookmarks the first URL.</li>\n<li>The user manipulates the application such that the second URL is the current state.</li>\n<li>The user clicks on the bookmark created in step 1.</li>\n<li>The URL in the address bar changes from <a href=\"http://mysite.com/myApp/#page=5\">http://mysite.com/myApp/#page=5</a> to <a href=\"http://mysite.com/myApp/#page=1\">http://mysite.com/myApp/#page=1</a>, but I don't know of a way to detect the change happened.</li>\n</ol>\n\n<p>If I detect a change some JavaScript would act on it.\nAny ideas?</p>\n",
            "last_activity_date": 1376898794,
            "question_id": 1930927,
            "score": 15,
            "tags": [
                "javascript",
                "javascript-events",
                "address-bar"
            ],
            "title": "How can I detect an address bar change with JavaScript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Generally speaking, you will need to have some sort of structure like this</p>\n\n<pre><code>....first page of content...\n....first page of content...\n....first page of content...\n....first page of content...\n....first page of content...\n....first page of content...\n....first page of content...\n&lt;div id=\"placeHolder\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Then, you will need to detect when you are getting close to the end of the page, and fetch more data</p>\n\n<pre><code> $(window).scroll(function(){\n      if  ($(window).scrollTop() == $(document).height() - $(window).height()){\n           AddMoreContent();\n      }\n });    \n\n function AddMoreContent(){\n      $.post('getMoreContent.php', function(data) {\n           //Assuming the returned data is pure HTML\n           $(data).insertBefore($('#placeHolder'));\n      });\n }\n</code></pre>\n\n<p>You may need to keep a javascript variable called something like <code>lastId</code> which stores the last displayed id and pass that to the AJAX receiver so it knows which new content to return. Then in your AJAX you could call </p>\n\n<pre><code>      $.post('getMoreContent.php', 'lastId=' + lastId, function(data) {\n           //Assuming the returned data is pure HTML\n           $(data).insertBefore($('#placeHolder'));\n      });\n</code></pre>\n\n<p>I did exactly this on <a href=\"http://alphacommunications.com/search.php?find=ir\">my company's search page</a>.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>You are referring to Dynamic Progressive Loading. </p>\n\n<p>Is a pretty well documented concept and there is even some built-in support for it from different libraries. JQuery actually has a GridView that supports progressive loading pretty easily for example.</p>\n\n<p>You will need to utilize AJAX to implement this feature.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can use some library like jQuery to retrieve the content , then append it to the page content, Or you can use some jquery plugin like this: <a href=\"http://gbin1.com/technology/jquerynews/20111017jquerypluginwaypoints/infinite-scroll/\" rel=\"nofollow\">http://gbin1.com/technology/jquerynews/20111017jquerypluginwaypoints/infinite-scroll/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just to expand on Dutchie432. In my experience the<br></p>\n\n<p><code>if ($(window).scrollTop() == $(document).height() - $(window).height())</code></p>\n\n<p>may not be true consistently( personally i couldnt make it true cause it was jumping numbers ).\n<br>\nAlso, if the user scrolls up and down it could fire many requests , while we are waiting for the first ajax call to return.</p>\n\n<p>So what i did to make it work, was to use >= instead of == .\nThen, unbinding the scrollTop before making my ajax request.\nThen binding it again if the ajax has returned any data (which means there may be more).</p>\n\n<p>Here it is <br></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  $(document).ready(function(){                \n        $(window).bind('scroll',fetchMore);\n   });\n\n   fetchMore = function (){\n       if ( $(window).scrollTop() &gt;= $(document).height()-$(window).height()-300 ){\n           $(window).unbind('scroll',fetchMore);\n            $.post('ajax/ajax_manager.php',{'action':'moreReviews','start':$('.review').length,'step':5 },\n            function(data) {\n               if(data.length&gt;10){\n                    $(data).insertBefore($('#moreHolder'));\n                    $(window).bind('scroll',fetchMore);\n               }\n            });\n        }\n   }\n&lt;/script&gt;\n</code></pre>\n\n<p>` </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can use jscroll a jquery plugin <br/></p>\n\n<p><a href=\"http://jscroll.com/\" rel=\"nofollow\">http://jscroll.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How to load the content while user scroll the web page. How to implement this?</p>\n",
            "last_activity_date": 1382850285,
            "question_id": 5020351,
            "score": 13,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to load the web page content based on user scrolling"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I tried the same thing, loading a bookmarklet (the javascript code in your loadUrl() call) into a third-party page.  My bookmarklet also depends on other assets (javascript and css files) which would not load with a file:///android_asset URL.</p>\n\n<p>That's because the security context of the page is still that of, e.g., <a href=\"http://www.google.com\">http://www.google.com</a>, and that's not allowed access to file: URLs.  You should be able to see the errors if you supply/override a WebChromeClient.onConsoleMessage().</p>\n\n<p>I ended up with a kludge where I changed the bookmarklet's asset references to a bogus URL scheme, like:</p>\n\n<pre><code>asset:foo/bar/baz.js\n</code></pre>\n\n<p>and added a WebViewClient.shouldInterceptRequest() override which looks for those and loads them from assets using AssetManager.open().</p>\n\n<p>One thing I don't like about this kludge is that the asset: scheme is open to any third-party HTML/Javascript on any page my view loads, giving them access to my app's assets.</p>\n\n<p>One alternative, which I didn't try, would be to embed the sub-assets in the bookmarklet using data: URLs, but that can get unwieldy.</p>\n\n<p>I'd much prefer it if there was a way to manipulate the security context of <strong>just</strong> the JS bookmarklet I'm loading in loadUrl(), but I can't find anything like that.</p>\n\n<p>Here's a snippet:</p>\n\n<pre><code>import android.webkit.WebResourceResponse;\n...\n    private final class FooViewClient extends WebViewClient\n    {\n    private final String bookmarklet;\n    private final String scheme;\n\n    private FooViewClient(String bookmarklet, String scheme)\n        {\n        this.bookmarklet = bookmarklet;\n        this.scheme = scheme;\n        }\n\n    @Override\n    public void onPageFinished(WebView view, String url)\n        {\n        view.loadUrl(bookmarklet);\n        }\n\n    @Override\n    public WebResourceResponse shouldInterceptRequest(WebView view, String url)\n        {\n        if (url.startsWith(scheme))\n            try\n                {\n                return new WebResourceResponse(url.endsWith(\"js\") ? \"text/javascript\" : \"text/css\", \"utf-8\",\n                        Foo.this.getAssets().open(url.substring(scheme.length())));\n                }\n            catch (IOException e)\n                {\n                Log.e(getClass().getSimpleName(), e.getMessage(), e);\n                }\n\n        return null;\n        }\n    }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Maybe you could have assets as 'html/javascript templates'. You could combine different of these text sources and string logic to compose your desired html to be loaded into the WebViewer. Then, you use .loadData instead of .loadUrl</p>\n\n<p>I'm using it on my own and it seems to work pretty well.</p>\n\n<p>Hope it helps!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think the iceam cream webview client of cordova does the very thing you want to do. </p>\n\n<p>It would be nice if this was documented somewhere but, as far as I can see, it is not.</p>\n\n<p>Take a look at cordova's android github:\n<a href=\"https://github.com/apache/incubator-cordova-android/blob/master/framework/src/org/apache/cordova/IceCreamCordovaWebViewClient.java\" rel=\"nofollow\">https://github.com/apache/incubator-cordova-android/blob/master/framework/src/org/apache/cordova/IceCreamCordovaWebViewClient.java</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is how i ended up doing it.  I used the Content:// protocol and set up a contentprovider to handle returning a file descriptor to the system</p>\n\n<p>Here is my fileContentProvider:</p>\n\n<pre><code>import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\n\nimport org.apache.commons.io.IOUtils;\n\n\nimport android.content.ContentProvider;\nimport android.content.ContentValues;\nimport android.database.Cursor;\nimport android.net.Uri;\nimport android.os.ParcelFileDescriptor;\nimport android.util.Log;\n\npublic class FileContentProvider extends ContentProvider {\n    @Override\n    public ParcelFileDescriptor openFile(Uri uri, String mode) {\n\n        Log.d(\"FileContentProvider\",\"fetching: \" + uri);\n\n        ParcelFileDescriptor parcel = null;\n\n        String fileNameRequested = uri.getLastPathSegment();\n        String[] name=fileNameRequested.split(\"\\\\.\");\n        String prefix=name[0];\n        String suffix=name[1];\n       // String path = getContext().getFilesDir().getAbsolutePath() + \"/\" + uri.getPath();\n        //String path=file:///android_asset/\"+Consts.FILE_JAVASCRIPT+\"\n\n/*check if this is a javascript file*/\n\n        if(suffix.equalsIgnoreCase(\"js\")){\n        InputStream is = null;\n        try {\n            is = getContext().getAssets().open(\"www/\"+Consts.FILE_JAVASCRIPT);\n        } catch (IOException e1) {\n            // TODO Auto-generated catch block\n            e1.printStackTrace();\n        }\n\n\n        File file = stream2file(is,prefix,suffix);\n        try {\n            parcel = ParcelFileDescriptor.open(file, ParcelFileDescriptor.MODE_READ_ONLY);\n        } catch (FileNotFoundException e) {\n            Log.e(\"FileContentProvider\", \"uri \" + uri.toString(), e);\n        }\n        }\n        return parcel;\n    }\n\n    /*converts an inputstream to a temp file*/\n\n    public File stream2file (InputStream in,String prefix,String suffix) {\n        File tempFile = null;\n        try {\n            tempFile = File.createTempFile(prefix, suffix);\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n        tempFile.deleteOnExit();\n\n            FileOutputStream out = null;\n            try {\n                out = new FileOutputStream(tempFile);\n            } catch (FileNotFoundException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            } \n\n            try {\n                IOUtils.copy(in, out);\n            } catch (IOException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n\n        return tempFile;\n    }\n\n\n    @Override\n    public boolean onCreate() {\n        return true;\n    }\n\n    @Override\n    public int delete(Uri uri, String s, String[] as) {\n        throw new UnsupportedOperationException(\"Not supported by this provider\");\n    }\n\n    @Override\n    public String getType(Uri uri) {\n        throw new UnsupportedOperationException(\"Not supported by this provider\");\n    }\n\n    @Override\n    public Uri insert(Uri uri, ContentValues contentvalues) {\n        throw new UnsupportedOperationException(\"Not supported by this provider\");\n    }\n\n    @Override\n    public Cursor query(Uri uri, String[] as, String s, String[] as1, String s1) {\n        throw new UnsupportedOperationException(\"Not supported by this provider\");\n    }\n\n    @Override\n    public int update(Uri uri, ContentValues contentvalues, String s, String[] as) {\n        throw new UnsupportedOperationException(\"Not supported by this provider\");\n    }\n}\n</code></pre>\n\n<p>in the manifest i defined the provider:</p>\n\n<pre><code>&lt;provider android:name=\"com.example.mypackage.FileContentProvider\"\n          android:authorities=\"com.example.fileprovider\"\n        /&gt;\n</code></pre>\n\n<p>Here is the javascript o inject into the webview:</p>\n\n<pre><code>webView.loadUrl(\"javascript:(function() { \"\n\n           + \"var script=document.createElement('script'); \"\n           + \" script.setAttribute('type','text/javascript'); \"\n           + \" script.setAttribute('src', 'content://com.example.fileprovider/myjavascriptfile.js'); \"\n      /*      + \" script.onload = function(){ \"\n           + \"     test(); \"\n           + \" }; \"\n      */     + \"document.body.appendChild(script); \"\n           + \"})();\");\n</code></pre>\n\n<p>and here is the myjavascriptfile.js (as an example):</p>\n\n<pre><code>   function changeBackground(color) {\n       document.body.style.backgroundColor = color;\n   }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've seen this question has been asked a lot of times, but still can't manage to get my code working.</p>\n\n<p>I want my <em>webview</em> to load some URL (say www.google.com) and then apply some javascript stored in <code>assets/jstest.js</code>, which contains the following:</p>\n\n<pre><code>function test(){\ndocument.bgColor=\"#00FF00\"; //turns to green the background color\n}\n</code></pre>\n\n<p>And here's where I try to load the JS:</p>\n\n<pre><code>@Override  \npublic void onPageFinished(WebView view, String url){\n    view.loadUrl(\"javascript:(function() { \"\n                + \" document.bgColor='#FF0000';\" //turns to red the background color\n                + \" var script=document.createElement('script'); \"\n                + \" script.setAttribute('type','text/javascript'); \"\n                + \" script.setAttribute('src', 'file:///android_asset/jstest.js'); \"\n                + \" script.onload = function(){ \"\n                + \"     test(); \"\n                + \" }; \"\n                + \" document.getElementsByTagName('head')[0].appendChild(script); \"\n                + \"})()\"); \n} \n</code></pre>\n\n<p>I know the javascript here works because the background color actually turns to red, but for some reason it won't load <code>jstest.js</code>. I think the problem might be in file path (I'm certain every other line of the javascript code is correct), but it looks correct to me. And the file is in the right folder.</p>\n\n<p>What am I missing?</p>\n\n<p><strong>EDIT</strong>:</p>\n\n<p>Since <code>WebResourceResponse</code> class is available only with API Level 11, here's what I've figured out in the end.</p>\n\n<pre><code>public void onPageFinished(WebView view, String url){\n        String jscontent = \"\";\n        try{\n            InputStream is = am.open(\"jstest.js\"); //am = Activity.getAssets()\n            InputStreamReader isr = new InputStreamReader(is);\n            BufferedReader br = new BufferedReader(isr);\n\n            String line;\n            while (( line = br.readLine()) != null) {\n                jscontent += line;\n            }\n            is.close(); \n        }\n        catch(Exception e){}\n        view.loadUrl(\"javascript:(\" + jscontent + \")()\"); \n    } \n</code></pre>\n\n<p>with the <code>jstest.js</code> simply containing:</p>\n\n<pre><code>function() {\n    document.bgColor=\"#00FF00\";\n}\n</code></pre>\n",
            "last_activity_date": 1392830741,
            "question_id": 5649111,
            "score": 12,
            "tags": [
                "javascript",
                "android",
                "webview",
                "android-webview"
            ],
            "title": "Android webview, loading javascript file in assets folder"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>What you'd have to do is set up a mechanism to set timeouts at small intervals, keeping track of total elapsed time. You'd also track \"mouseenter\" and \"mouseleave\" on the whole page (the <code>&lt;body&gt;</code> or something). When the short-term timeouts expire, they can check the window state (in or out) and not restart the process when the window is not in focus. The \"mouseenter\" handler would start all paused timers.</p>\n\n<p><em>edit</em> &mdash; @\u0160ime Vidas has posted an excellent example.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can do something like:</p>\n\n<pre><code>$([window, document]).blur(function(){\n        // Clear timeout here\n}).focus(function(){\n        // start timeout back up here\n});\n</code></pre>\n\n<p>Window is for IE, document is for the rest of the browser world.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here you go: </p>\n\n<pre><code>(function() {\n    var time = 10000,\n        delta = 100,\n        tid;\n\n    tid = setInterval(function() {\n        if ( window.blurred ) { return; }    \n        time -= delta;\n        if ( time &lt;= 0 ) {\n            clearInterval(tid);\n            myFunction(); // time passed - do your work\n        }\n    }, delta);\n})();\n\nwindow.onblur = function() { window.blurred = true; };\nwindow.onfocus = function() { window.blurred = false; };\n</code></pre>\n\n<p><strong>Live demo:</strong> <a href=\"http://jsfiddle.net/simevidas/J68dJ/3/show/\">http://jsfiddle.net/simevidas/J68dJ/3/show/</a></p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Great answer by \u0160ime Vidas, it helped me with my own coding. For completeness sake I made an example for if you want to use setTimeout instead of setInterval:</p>\n\n<pre><code>(function() {\n\n    function myFunction() {\n        if(window.blurred) {\n            setTimeout(myFunction, 100);\n            return;\n        }\n\n        // What you normally want to happen\n\n        setTimeout(myFunction, 10000);\n    };\n    setTimeout(myFunction, 10000);\n\n    window.onblur = function() {window.blurred = true;};\n    window.onfocus = function() {window.blurred = false;};\n\n})();\n</code></pre>\n\n<p>You'll see that the window blurred check has a shorter time set than normal, so you can set this depending on how soon you require the rest of the function to be run when the window regains focus.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there a way to stop <code>setTimeout(\"myfunction()\",10000);</code> from counting up when the page isn't active.  For instance,</p>\n\n<ol>\n<li>A user arrives at a \"some page\" and stays there for 2000ms</li>\n<li>User goes to another tab, leaves \"some page\" open.</li>\n<li><code>myfunction()</code> doesn't fire until they've come back for another 8000ms.</li>\n</ol>\n",
            "last_activity_date": 1359001248,
            "question_id": 5766263,
            "score": 8,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Run setTimeout only when tab is active"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Take a look at the information in <a href=\"http://en.wikipedia.org/wiki/Closure_%28computer_science%29\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Closure_%28computer_science%29</a> and <a href=\"http://en.wikipedia.org/wiki/Callback_%28computer_science%29\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Callback_%28computer_science%29</a>. There are Javascript examples in both texts.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://www.jibbering.com/faq/faq_notes/closures.html\" rel=\"nofollow\">1</a> <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Working_with_Closures\" rel=\"nofollow\">2</a> <a href=\"http://blog.morrisjohns.com/javascript_closures_for_dummies.html\" rel=\"nofollow\">3</a> <a href=\"http://james.padolsey.com/javascript/closures-in-javascript/\" rel=\"nofollow\">4</a> <a href=\"https://developer.mozilla.org/en/Creating_JavaScript_callbacks_in_components\" rel=\"nofollow\">5</a> <a href=\"http://dean.edwards.name/weblog/2009/03/callbacks-vs-events/\" rel=\"nofollow\">6</a></p>\n\n<p>Enough? Just a quick <a href=\"http://www.google.com/search?q=javascript+callback\" rel=\"nofollow\">google</a> <a href=\"http://www.google.com/search?q=javascript+closure\" rel=\"nofollow\">search</a> would help more than you think :)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>Closures</strong> have already been well handled in Stackoverflow here is just a selection:-</p>\n\n<p><a href=\"http://stackoverflow.com/questions/111102/how-does-a-javascript-closure-work\">How does a javascript closure work?</a><br>\n<a href=\"http://stackoverflow.com/questions/1801957/what-exactly-does-closure-refer-to-in-javascript\">What exactly does \u201cclosure\u201d refer to in JavaScript?</a><br>\n<a href=\"http://stackoverflow.com/questions/2055641/can-you-say-this-is-a-right-example-of-javascript-closure-where-the-places-we-n\">can you say this is a right example of Javascript Closure.. Where the places we need to consider avoiding the closures??</a><br>\n<a href=\"http://stackoverflow.com/questions/631187/javascript-scope-and-closure\">JavaScript scope and closure</a><br>\n<a href=\"http://stackoverflow.com/questions/346015/javascript-closures-and-this-context\">Javascript Closures and \u2018this\u2019 context</a><br>\n<a href=\"http://stackoverflow.com/questions/212401/javascript-how-do-i-learn-about-closures-usage\">JavaScript - How do I learn about \u201cclosures\u201d usage?</a>  </p>\n\n<p><strong>Callbacks</strong> are a simpler concept.  A callback is basically where a function accepts another function as a parameter.  At some point during execution the called function will execute the function passed as a parameter, this is a <em>callback</em>.  Quite often the callback actually happens as an asynchronous event, in which case the called function may return without having executed the callback, that may happen later.  Here is a common (browser based) example:-</p>\n\n<pre><code> function fn() { alert(\"Hello, World\"); }\n window.setTimeout(fn, 5000);\n</code></pre>\n\n<p>Here the function <code>fn</code> is passed as a <em>callback</em> to the <code>setTimeout</code> function.  Set timeout returns immediately however 5 seconds later the function passed as a <em>callback</em> is executed.</p>\n\n<p><strong>Closures and callbacks</strong></p>\n\n<p>Quite often the reason that closures get created (either incidentally, accidentally or deliberately) is the need to create a callback.  For example:-</p>\n\n<pre><code> function AlertThisLater(message, timeout)\n {\n     function fn() { alert(message); }\n     window.setTimeout(fn, timeout);\n }\n\n AlertThisLater(\"Hello, World!\", 5000);\n</code></pre>\n\n<p>(Please read some of the linked posts to grasp closures)</p>\n\n<p>A closure is created containing in part the <code>message</code> parameter, <code>fn</code> is executed quite some time after the call to <code>AlertThisLater</code> has returned, yet <code>fn</code> still has access to the original content of <code>message</code>.</p>\n",
                    "is_accepted": true,
                    "score": 18
                }
            ],
            "body": "<p>What are these two? I've yet to find a good explanation of either.</p>\n",
            "last_activity_date": 1263557975,
            "question_id": 2070275,
            "score": 6,
            "tags": [
                "javascript",
                "callback",
                "closures"
            ],
            "title": "Javascript: Closures and Callbacks"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>Number((6.688689).toFixed(1)); // 6.7\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 153
                },
                {
                    "body": "<pre><code>var number = 6.688689;\nvar roundedNumber = Math.round(number * 10) / 10;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>See below</p>\n\n<p><code>var original = 28.59;</code> </p>\n\n<p><code>var result=Math.round(original*10)/10</code>  will return you returns <code>28.6</code></p>\n\n<p>Hope this is what you want..</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Use <code>toFixed()</code> function.</p>\n\n<pre><code>(6.688689).toFixed(); // equal to 7\n(6.688689).toFixed(1); // equal to 6.7\n(6.688689).toFixed(2); // equal to 6.69\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p>You can use helper function from <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\" rel=\"nofollow\">MDN example</a>. Than you'll have more flexibility:</p>\n\n<pre><code>Math.round10(5.25, 0);  // 5\nMath.round10(5.25, -1); // 5.3\nMath.round10(5.25, -2); // 5.25\nMath.round10(5, 0);     // 5\nMath.round10(5, -1);    // 5\nMath.round10(5, -2);    // 5\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I think this function can help.</p>\n\n<pre><code> function round(value, ndec){\n    var n = 10;\n    for(var i = 1; i &lt; ndec; i++){\n        n *=10;\n    }\n\n    if(!ndec || ndec &lt;= 0)\n        return Math.round(value);\n    else\n        return Math.round(value * n) / n;\n}\n\n\nround(2.245, 2) //2.25\nround(2.245, 0) //2\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you don't only want to use <code>toFixed()</code> but also <code>ceil()</code> and <code>floor()</code> on a float then you can use the next function:</p>\n\n<pre><code>function roundUsing(func, number, prec) {\n    var tempnumber = number * Math.pow(10, prec);\n    tempnumber = func(tempnumber);\n    return tempnumber / Math.pow(10, prec);\n}\n</code></pre>\n\n<p>Produces:</p>\n\n<pre><code>&gt; roundUsing(Math.floor, 0.99999999, 3)\n0.999\n&gt; roundUsing(Math.ceil, 0.1111111, 3)\n0.112\n</code></pre>\n\n<p><strong>UPD:</strong></p>\n\n<p>The other possible way is this:</p>\n\n<pre><code>Number.prototype.roundUsing = function(func, prec){\n    var temp = this * Math.pow(10, prec)\n    temp = func(temp);\n    return temp / Math.pow(10, prec)\n}\n</code></pre>\n\n<p>Produces:</p>\n\n<pre><code>&gt; 6.688689.roundUsing(Math.ceil, 1)\n6.7\n&gt; 6.688689.roundUsing(Math.round, 1)\n6.7\n&gt; 6.688689.roundUsing(Math.floor, 1)\n6.6\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I need to round for example <code>6.688689</code> to <code>6.7</code>, but it always shows me <code>7</code>.</p>\n\n<p>My method:</p>\n\n<pre><code>Math.round(6.688689);\n//or\nMath.round(6.688689, 1);\n//or \nMath.round(6.688689, 2);\n</code></pre>\n\n<p>But result always is the same <code>7</code>... What am I doing wrong?</p>\n",
            "last_activity_date": 1421250147,
            "question_id": 9453421,
            "score": 59,
            "tags": [
                "javascript"
            ],
            "title": "How to round float numbers in javascript?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>As you said, you want hash to contain only numbers.</p>\n\n<pre><code>var reg = new RegExp('^[0-9]+$');\n</code></pre>\n\n<p>or </p>\n\n<pre><code>var reg = new RegExp('^\\\\d+$');\n</code></pre>\n\n<p><code>\\d</code> and <code>[0-9]</code> both mean the same thing.\nThe + used means that search for one or more occurring of [0-9].</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<pre><code>var reg = /^\\d+$/;\n</code></pre>\n\n<p>should do it.  The original matches anything that consists of exactly one digit.</p>\n",
                    "is_accepted": true,
                    "score": 79
                },
                {
                    "body": "<p>You need the <code>*</code> so it says \"zero or more of the previous character\" and this should do it:</p>\n\n<pre><code>var reg = new RegExp('^\\\\d*$');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This one will allow also for signed and float numbers or empty string:</p>\n\n<pre><code>var reg = /^-?\\d*\\.?\\d*$/\n</code></pre>\n\n<p>If you don't want allow to empty string use this one:</p>\n\n<pre><code>var reg = /^-?\\d+\\.?\\d*$/\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Number only regex </p>\n\n<pre><code> var reg = new RegExp('/[^0-9]/g');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>var validation = {\nisEmailAddress:function(str) {\n   var pattern =/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n   return pattern.test(str);  // returns a boolean\n},\nisNotEmpty:function (str) {\n   var pattern =/\\S+/;\n   return pattern.test(str);  // returns a boolean\n},\nisNumber:function(str) {\n   var pattern = /^\\d+$/;\n   return pattern.test(str);  // returns a boolean\n},\nisSame:function(str1,str2){\n  return str1 === str2;\n}};   \n\nalert(validation.isNotEmpty(\"dff\"));\nalert(validation.isNumber(44));\nalert(validation.isEmailAddress(\"mf@tl.ff\"));\nalert(validation.isSame(\"sf\",\"sf\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I see you have already gotten a lot of answers, but if you are looking for a regular expression that can match integers and floating point numbers, this one will work for you:</p>\n\n<pre><code>var reg = /^-?\\d*\\.?\\d+$/;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This function checks if it's input is numeric in the classical sense, as one expects a normal number detection function to work.<br>\nIt's a test one can use for HTML form input, for example.<br>\nIt bypasses all the JS folklore, like tipeof(NaN) = number, parseint('1 Kg') = 1, booleans coerced into numbers, and the like.<br>\nIt does it by rendering the argument as a string and checking that string against a regex like those by @codename- but allowing entries like 5. and .5  </p>\n\n<pre><code>  function isANumber( n ) {\n    var numStr = /^-?(\\d+\\.?\\d*)$|(\\d*\\.?\\d+)$/;\n    return numStr.test( n.toString() );\n  }\n\n  not numeric:\n  Logger.log( 'isANumber( \"aaa\" ): ' + isANumber( 'aaa' ) );\n  Logger.log( 'isANumber( \"\" ): ' + isANumber( '' ) );\n  Logger.log( 'isANumber( \"lkjh\" ): ' + isANumber( 'lkjh' ) );\n  Logger.log( 'isANumber( 0/0 ): ' + isANumber( 0 / 0 ) );\n  Logger.log( 'isANumber( 1/0 ): ' + isANumber( 1 / 0 ) );\n  Logger.log( 'isANumber( \"1Kg\" ): ' + isANumber( '1Kg' ) );\n  Logger.log( 'isANumber( \"1 Kg\" ): ' + isANumber( '1 Kg' ) );\n  Logger.log( 'isANumber( false ): ' + isANumber( false ) );\n  Logger.log( 'isANumber( true ): ' + isANumber( true ) );\n\n  numeric:\n  Logger.log( 'isANumber( \"0\" ): ' + isANumber( '0' ) );\n  Logger.log( 'isANumber( \"12.5\" ): ' + isANumber( '12.5' ) );\n  Logger.log( 'isANumber( \".5\" ): ' + isANumber( '.5' ) );\n  Logger.log( 'isANumber( \"5.\" ): ' + isANumber( '5.' ) );\n  Logger.log( 'isANumber( \"-5\" ): ' + isANumber( '-5' ) );\n  Logger.log( 'isANumber( \"-5.\" ): ' + isANumber( '-5.' ) );\n  Logger.log( 'isANumber( \"-.5\" ): ' + isANumber( '-5.' ) );\n  Logger.log( 'isANumber( \"1234567890\" ): ' + isANumber( '1234567890' ) );\n</code></pre>\n\n<p>Explanation of the regex:  </p>\n\n<p>/^-?(\\d+.?\\d*)$|(\\d*.?\\d+)$/  </p>\n\n<p>The initial \"^\" and the final \"$\" match the start and the end of the string, to ensure the check spans the whole string.<br>\nThe \"-?\" part is the minus sign with the \"?\" multiplier that allows zero or one instance of it.<br>\nThen there are two similar groups, delimited by parenthesis. The string has to match either of these groups. The first matches numbers like 5. and the second .5<br>\nThe first group is  </p>\n\n<p>\\d+.?\\d*</p>\n\n<p>The \"\\d+\" matches a digit (\\d) one or more times.<br>\nThe \"\\.?\" is the decimal point (escaped with \"\\\" to devoid it of its magic), zero or one times.<br>\nThe last part \"\\d*\" is again a digit, zero or more times.<br>\nAll the parts are optional but the first digit, so this group matches numbers like 5. and not .5 which are matched by the other half.  </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you want to match the numbers with signed values, you can use:</p>\n\n<p><strong><code>var reg = new RegExp('^(\\-?|\\+?)\\d*$');</code></strong></p>\n\n<p>It will validate the numbers of format: +1, -1, 1.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code>hash = window.location.hash.substr(1);\nvar reg = new RegExp('^[0-9]$');\nconsole.log(reg.test(hash));\n</code></pre>\n\n<p>I get false on both \"123\" and \"123f\". I would like to check if the hash only contains numbers. Did I miss something?</p>\n",
            "last_activity_date": 1421227488,
            "question_id": 9011524,
            "score": 36,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Javascript regexp number only check"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can. The page will not pass verification, however most browsers will accept it.</p>\n\n<p>It is almost certainly the wrong way of doing it. Try using class=\"hasTooltip_yes tipcolour_yellow\"</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Depending on the information you want to store you should look at some of the other attributes available. These don't look like good candidates, but 'rel' has been used for lots of interesting things.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Well, you can always create your own DTD to get new valid attributes for your tags. Browser won't hiccup, you should test your JavaScript if you can access these custom attributes. Or you can use the existing facilities provided by HTML and CSS. You can use multiple classes like</p>\n\n<pre><code>&lt;a href=\"...\" class=\"class-one class-two has-tooltip\"&gt;\n</code></pre>\n\n<p>For the colour selection I strongly discourage you to use hard-coded colour names in your HTML, you have CSS for declaring styles. Use the class attribute as a hook for the CSS declaration, and choose <em>semantic</em> class names, for example</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;a href=\"...\" class=\"has-tooltip common-tooltip\"&gt;\n&lt;a href=\"...\" class=\"has-tooltip long-tooltip\"&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>a.has-tooltip {\n   colour: red;\n}\na.common-tooltip {\n   background: #ddd;\n}\na.long-tooltip {\n   background: #ebf;\n}\n</code></pre>\n\n<p>And in your JavaScript code you can generate elements with classes like \"long-tooltip\" and \"common-tooltip\" instead of \"yellow-tooltip\", so you won't contradict yourself in case of redesigning the page to have green tooltips.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>In HTML5, yes. You just have to prefix them with <code>data-</code>. See <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#embedding-custom-non-visible-data-with-the-data-%2a-attributes\">the spec</a>.</p>\n\n<p>Of course, this implies you should be using the HTML5 doctype (<code>&lt;!doctype html></code>), even though browsers don't care.</p>\n",
                    "is_accepted": true,
                    "score": 39
                }
            ],
            "body": "<p>Am I allowed to add whatever attributes I want to HTML tags such that I can retrieve their value later on using javascript? For example:</p>\n\n<pre><code>&lt;a href=\"something.html\" hastooltip=\"yes\" tipcolour=\"yellow\"&gt;...&lt;/a&gt;\n</code></pre>\n\n<p>If that's not going to work, how would you store arbitrary pieces of information like this?</p>\n\n<p><strong>Edit:</strong> Since it appears that making up HTML attributes isn't technically valid, I've rephrased the second part of this question into its own question here: <a href=\"http://stackoverflow.com/questions/432174/\">http://stackoverflow.com/questions/432174/</a></p>\n",
            "last_activity_date": 1422808989,
            "question_id": 427262,
            "score": 36,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Can I just make up attributes on my HTML tags?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Just check to see if a <code>&lt;link&gt;</code> element exists with the <code>href</code> attribute set to your CSS file's URL:</p>\n\n<pre><code>if (!$(\"link[href='/path/to.css']\").length)\n    $('&lt;link href=\"/path/to.css\" rel=\"stylesheet\"&gt;').appendTo(\"head\");\n</code></pre>\n\n<p>The plain ol' JS method is simple too, using the <a href=\"https://developer.mozilla.org/en/DOM/document.styleSheets\">document.styleSheets collection</a>:</p>\n\n<pre><code>function loadCSSIfNotAlreadyLoadedForSomeReason () {\n    var ss = document.styleSheets;\n    for (var i = 0, max = ss.length; i &lt; max; i++) {\n        if (ss[i].href == \"/path/to.css\")\n            return;\n    }\n    var link = document.createElement(\"link\");\n    link.rel = \"stylesheet\";\n    link.href = \"/path/to.css\";\n\n    document.getElementsByTagName(\"head\")[0].appendChild(link);\n}\nloadCSSIfNotAlreadyLoadedForSomeReason();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>One way: use <code>document.getElementsByTagName(\"link\")</code> iterate over each and check if its <code>href</code> is equal to the CSS file you check.</p>\n\n<p>Another way: if you know some CSS rule being set only in that file, check if this rule really apply e.g. check if background of something is really red.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>var links = document.getElementsByTagName('link');\nvar file  = 'my/file.css';\nvar found = false;\n\nfor ( var i in links )\n{\n    if ( links[i].type == 'text/css' &amp;&amp; file == links[i].href ) {\n        found = true; break;\n    }\n}\n\nif ( !( found ) ) {\n    var styles = document.getElementsByTagName('style');\n    var regexp = new RegExp('/\\@import url\\(\"?' + file + '\"?\\);/');\n\n    for ( var i in styles )\n    {\n        if ( styles[i].src == file ) {\n            found = true; break;\n        } else if ( styles[i].innerHTML.match(regexp) ) {\n            found = true; break;\n        }\n    }\n}\n\nif ( !( found ) ) {\n    var elm = document.createElement('link');\n        elm.href = file;\n    document.documentElement.appendChild(elm);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can either check if the filename is within your markup, like:</p>\n\n<pre><code>var lnks    = document.getElementsByTagName('link'),\n    loadcss = true;\n\nfor(var link in lnks) {\n    href = link.getAttribute('href');\n\n    if( href.indexOf('foooobar.css') &gt; -1) ){\n            loadcss = false;\n            return false;\n    }\n});\n\nif( loadcss ) {\n        var lnk     = document.createElement('link'),\n            head    = document.getElementsByTagName('head')[0] || document.documentElement;        \n\n        lnk.rel     = 'stylesheet';\n        lnk.type    = 'text/css';\n        lnk.href    = '//' + location.host + 'foooobar.css';            \n\n        head.insertBefore(lnk, head.firstChild);\n}\n</code></pre>\n\n<p>or you could check for a specific <code>className</code> which should be available, if the stylesheet was loaded. This probably comes a little closer to a feature detection.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The document object contains a stylesheet collection with all the loaded stylesheets.</p>\n\n<p>For a reference see <a href=\"http://www.javascriptkit.com/domref/stylesheet.shtml\" rel=\"nofollow\">http://www.javascriptkit.com/domref/stylesheet.shtml</a></p>\n\n<p>You can loop this collection to verify that the stylesheet you want to verify is in it and thus loaded by the browser.</p>\n\n<pre><code>document.styleSheets[0] //access the first external style sheet on the page\n</code></pre>\n\n<p>There are some browser incompatibilities you should look out for though.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Something like this will do (using jQuery):</p>\n\n<pre><code>function checkStyleSheet(url){\n   var found = false;\n   for(var i = 0; i &lt; document.styleSheets.length; i++){\n      if(document.styleSheets[i].href==url){\n          found=true;\n          break;\n      }\n   }\n   if(!found){\n       $('head').append(\n           $('&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"' + url + '\" /&gt;')\n       );\n   }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Apart from all the nice answers above, you can simply put a dummy element inside your markup and in your css file, give it any style other than default. Then in the code check if the attribute is applied to the dummy element, and if not, load the css. Just a thought though, not a neat way to do that thing you want done.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For a nice consistent and repeatable experience, I've written these two jQuery plugins that mimic the <code>$.getScript(url, callback)</code> jQuery method (however they will NOT force reloading from the server like <code>$.getScript()</code>. There are two methods: one that will load a CSS file anytime it's called, and one that will only load it once. I find the former handy during development when I'm making changes, and the latter great for a speedy deployment.</p>\n\n<pre><code>/**\n * An AJAX method to asynchronously load a CACHED CSS resource\n * Note: This removes the jQuery default behaviour of forcing a refresh by means\n * of appending a datestamp to the request URL. Actual caching WILL be subject to\n * server/browser policies\n */\n$.getCachedCss = function getCachedCss(url, callback)\n{\n    $('&lt;link&gt;',{rel:'stylesheet', type:'text/css', 'href':url, media:'screen'}).appendTo('head');\n\n    if (typeof callback == 'function')\n        callback();\n}\n\n/**\n * An AJAX method to asynchronously load a CACHED CSS resource Only ONCE.\n * Note: This removes the jQuery default behaviour of forcing a refresh by means\n * of appending a datestamp to the request URL. Actual caching WILL be subject to\n * server/browser policies\n */\n$.getCachedCssOnce = function getCachedCssOnce(url, callback)\n{\n    if (!$(\"link[href='\" + url + \"']\").length) {\n        $.getCachedCss(url, callback);\n\n        if (typeof callback == 'function')\n            callback();\n    }\n}\n</code></pre>\n\n<p>Usage example:</p>\n\n<pre><code>$(function() {\n    $.getCachedCssOnce(\"pathToMyCss/main.css\");\n)}\n</code></pre>\n\n<p>Usage example with callback:</p>\n\n<pre><code>$(function() {\n    $.getCachedCssOnce(\"pathToMyCss/main.css\", function() {\n        // Do something once the CSS is loaded\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I just had to write something like that and I wanted to share it. This one is prepared for multiple cases.</p>\n\n<ul>\n<li>If there is no request for the css file (css file isn't linked ...)</li>\n<li>If there is a request for the css file, but if it failed (css file is no longer available ...)</li>\n</ul>\n\n<p><br></p>\n\n<pre><code>var styles = document.styleSheets;\nfor (var i = 0; i &lt; styles.length; i++) {\n    // checking if there is a request for template.css\n    if (styles[i].href.match(\"template\")) {\n        console.log(\"(Iteration: \" + i + \") Request for template.css is found.\");\n        // checking if the request is not successful\n        // when it is successful .cssRules property is set to null\n        if (styles[i].cssRules != null &amp;&amp; styles[i].cssRules.length == 0) {\n            console.log(\"(Iteration: \" + i + \") Request for template.css failed.\");\n            // fallback, make your modification\n            // since the request failed, we don't need to iterate through other stylesheets\n            break;\n        } else {\n            console.log(\"(Iteration: \" + i + \") Request for template.css is successful.\");\n            // template.css is loaded successfully, we don't need to iterate through other stylesheets\n            break;\n        }\n    }\n    // if there isn't a request, we fallback\n    // but we need to fallback when the iteration is done\n    // because we don't want to apply the fallback each iteration\n    // it's not like our css file is the first css to be loaded\n    else if (i == styles.length-1) {\n        console.log(\"(Iteration: \" + i + \") There is no request for template.css.\");\n        // fallback, make your modification\n    }\n}\n</code></pre>\n\n<p>TL;DR version</p>\n\n<pre><code>var styles = document.styleSheets;\nfor (var i = 0; i &lt; styles.length; i++) {\n    if (styles[i].href.match(\"css-file-name-here\")) {\n        if (styles[i].cssRules != null &amp;&amp; styles[i].cssRules.length == 0) {\n            // request for css file failed, make modification\n            break;\n        }\n    } else if (i == styles.length-1) {\n        // there is no request for the css file, make modification\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Peer to the comment made by JFK about the accepted answer:</p>\n\n<blockquote>\n  <p>I understood the question as \"how to check whether a css file is\n  loaded or not\" rather than \"how to check if the  element\n  exists\".</p>\n  \n  <p>The  element may exist (and the path may be correct too) but it\n  doesn't mean that the css file was successful loaded.</p>\n</blockquote>\n\n<p>If you access a link Element via  <code>getElementById</code> you'll not be able to check/read the style defined inside the CSS file. </p>\n\n<p>In order to check if a style has been successfully loaded we have to use <code>getComputedStyle</code> (or <code>currentStyle</code> for IE).</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>//somewhere in your html document\n\n&lt;div id=\"css_anchor\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>//somewhere in your main stylesheet\n\n#css_anchor{display:none;}\n</code></pre>\n\n<p><strong>JAVASCRIPT</strong></p>\n\n<pre><code>//js function to check the computed value of a style element\n\nfunction get_computed_style(id, name){\n\n        var element = document.getElementById(id);\n\n        return element.currentStyle ? element.currentStyle[name] : window.getComputedStyle ? window.getComputedStyle(element, null).getPropertyValue(name) : null;\n\n}\n\n //on document ready check if #css_anchor has been loaded\n\n    $(document).ready( function() {\n\n            if(get_computed_style('css_anchor', 'display')!='none'){\n\n            //if #css_anchor style doesn't exist append an alternate stylesheet\n\n                var alternateCssUrl = 'http://example.com/my_alternate_stylesheet.css';\n\n                var stylesheet = document.createElement('link');\n\n                stylesheet.href = alternateCssUrl;\n                stylesheet.rel = 'stylesheet';\n                stylesheet.type = 'text/css';\n                document.getElementsByTagName('head')[0].appendChild(stylesheet);\n\n            }\n    });\n</code></pre>\n\n<p>Part of the answer comes from: <a href=\"http://stackoverflow.com/questions/16748813/mydiv-style-display-returns-blank-when-set-in-master-stylesheet\">myDiv.style.display returns blank when set in master stylesheet</a></p>\n\n<p>Demo here: <a href=\"http://jsfiddle.net/R9F7R/\" rel=\"nofollow\">http://jsfiddle.net/R9F7R/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>My 2 cents. This checks whether there are any rules set on the css or not, meaning that it was or not successfully loaded</p>\n\n<pre><code>if(jQuery(\"link[href='/style.css']\").prop('sheet').cssRules.length == 0){\n    //Load the css you want\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I need to check (in Javascript) if a CSS file is loaded and if not then to load it. jQuery is fine.</p>\n",
            "last_activity_date": 1418114805,
            "question_id": 4724606,
            "score": 31,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "How to use Javascript to check and load CSS if not loaded?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>No, there isn't.</p>\n\n<p>However, you can simulate it like this:</p>\n\n<pre><code>$(':input')\n    .data('focused', false)\n    .focus(function() { $.data(this, 'focused', true); })\n    .blur(function() { $.data(this, 'focused', false); });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There is a plugin <a href=\"http://plugins.jquery.com/project/focused\" rel=\"nofollow\">http://plugins.jquery.com/project/focused</a></p>\n\n<p>Also you can check <a href=\"http://stackoverflow.com/questions/967096/using-jquery-to-test-if-an-input-has-focus\">http://stackoverflow.com/questions/967096/using-jquery-to-test-if-an-input-has-focus</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is no native solution but yes there is a more elegant way you can do it:</p>\n\n<pre><code>jQuery.extend(jQuery.expr[':'], {\n  focus: \"a == document.activeElement\"\n});\n</code></pre>\n\n<p>You're defining a new selector. See <a href=\"http://docs.jquery.com/Plugins/Authoring\">Plugins/Authoring</a>. Then you can do:</p>\n\n<pre><code>if ($(\"...\").is(\":focus\")) {\n  ...\n}\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>$(\"input:focus\").doStuff();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<p><code>$('input:focus')</code></p>\n\n<p>It's CSS. You don't need to create a \"custom selector.\" It already exists! <a href=\"http://www.w3schools.com/CSS/pr_pseudo_focus.asp\">http://www.w3schools.com/CSS/pr_pseudo_focus.asp</a></p>\n\n<p>Just attach whatever process you want to do to that selector, and it will weed it out if the element in question is not focused. I did this recently to keep a <code>keyup</code> from instantiating an email input error check when the e-mail input wasn't being used.</p>\n\n<p>If all you're trying to do is check if the user has focused on anything themselves, just do this:</p>\n\n<pre><code>if($('input:focus').size() == 0){\n    /* Perform your function! */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>I had trouble with <a href=\"#2683838\" rel=\"nofollow\">cletus</a> approach, using jQuery 1.3.2 and Firefox 3.6.8, because the string <code>\"a == document.activeElement\"</code> was not a valid function.</p>\n\n<p>I fixed it defining a function for the <code>focus</code> key. In fact, all other keys defined in <code>jQuery.expr[':']</code> are defined as functions. Here's the code:</p>\n\n<pre><code>jQuery.extend(jQuery.expr[':'], {\n    focus: function(e){ return e == document.activeElement; }\n});\n</code></pre>\n\n<p>So, now it works as expected.</p>\n\n<p>However, I was experiencing some strange behaviour in Firefox 3.6.8 (maybe a bug in FF?). If I clicked on an input text while the page was rendering, and if I called <code>is(\":focus\")</code> on page load, I would get an error from the browser, reported by FireBug, and the script would break.</p>\n\n<p>To solve this, I surrounded the code with a <code>try...catch</code> block, returning <code>false</code> on error. Use it if you want to prevent your users from experiencing the same error:</p>\n\n<pre><code>jQuery.extend(jQuery.expr[':'], {\n    focus: function(e){\n        try{ return e == document.activeElement; }\n        catch(err){ return false; }\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Here is a succinct way to do it.</p>\n\n<pre><code>$(document.activeElement)\n</code></pre>\n\n<p>or to plug it into your example..</p>\n\n<pre><code>if ($('form#contact input]')!=$(document.activeElement)) { ... }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>jQuery 1.6 now has a dedicated <a href=\"http://api.jquery.com/focus-selector/\"><code>:focus</code></a> selector.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I know this is an old question, but may be my solution will help someone :)</p>\n\n<p>since this didnt worked for me:</p>\n\n<pre><code>if ($(this)!=$(document.activeElement)) { ... }\n</code></pre>\n\n<p>..were \"this\" is returned from blur function. So i did this:</p>\n\n<pre><code>if ($(document.activeElement).attr(\"class\") != \"input_textbox\"){ ... }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>    $('*:focus')\n</code></pre>\n\n<p>(Necro ftw, but still valid and useful)</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Is there something I can do like this (perhap via a plugin)</p>\n\n<pre><code>if ( ! $('form#contact input]').hasFocus()) {\n  $('form#contact input:first]').focus();\n}\n</code></pre>\n\n<p>Basically, set focus to the first input, but only if the user has not already clicked into anything?</p>\n\n<p>I know this will work too, but is there anything more elegant?</p>\n\n<pre><code>$(function() {\n  var focused = false;\n  $('form#contact input]').focus(function() {\n    focused = true;\n  }); \n  setTimeout(function() {\n    if ( ! focused) {      \n      $('form#contact input:first]').focus();\n    }\n  }, 500);\n});\n</code></pre>\n",
            "last_activity_date": 1390910791,
            "question_id": 2683742,
            "score": 31,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors"
            ],
            "title": "Is there a &#39;has focus&#39; in JavaScript (or jQuery)?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<pre><code>$(\"#button_id\").click(function() {\n  if($(this).data('dont')==1) return;\n  $(this).data('dont',1);\n  //do something\n  $(this).data('dont',0);\n}\n</code></pre>\n\n<p>Remeber that $.data() would work only for items with ID.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>If #button_id implies a standard HTML button (like a submit button) you can use the 'disabled' attribute to make the button inactive to the browser. </p>\n\n<pre><code>$(\"#button_id\").click(function() {\n    $('#button_id').attr('disabled', 'true');\n\n    //do something\n\n     $('#button_id').removeAttr('disabled');\n});\n</code></pre>\n\n<p>What you may need to be careful with, however, is the order in which these things may happen. If you are using the jquery hide command, you may want to include the \"$('#button_id').removeAttr('disabled');\" as part of a call back, so that it does not happen until the hide is complete.</p>\n\n<p>[edit] example of function using a callback:</p>\n\n<pre><code>$(\"#button_id\").click(function() {\n    $('#button_id').attr('disabled', 'true');\n    $('#myDiv').hide(function() { $('#button_id').removeAttr('disabled'); });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is a more idiomatic alternative to the artificial state variable solutions:</p>\n\n<pre><code>$(\"#button_id\").one('click', DoSomething);\n\nfunction DoSomething() {\n  // do something.\n\n  $(\"#button_id\").one('click', DoSomething);\n}\n</code></pre>\n\n<p><strong>One</strong> will only execute once (until attached again).  More info here:  <a href=\"http://docs.jquery.com/Events/one\">http://docs.jquery.com/Events/one</a></p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>I was looking for a way to temporarily disable click events on elements while performing ajax requests with jQuery, but couldn't find a good solution so I made my own plugin to handle this case in elegant way. The code looks like this:</p>\n\n<pre><code>$('#mybutton').on('click', function() {\n    var me = $(this);\n    me.offtmp('click'); //disable the click event temporaraly while performing ajax request\n    $.post(...).always(function() {\n        me.ontmp('click'); //the ajax request is ready, now we can enable clicks again\n    });\n});\n</code></pre>\n\n<p>You can find the plugin with demo and docs <a href=\"http://bobef.net/bits/jquery.offtmp/\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A simple solution would be to comment the code inside the onclick attribute:</p>\n\n<p>To disable the onClick:</p>\n\n<pre><code>var code = $('#mybutton').attr(\"onclick\");  \nbtn.attr(\"onclick\", '/*' + code + '*/');\n</code></pre>\n\n<p>To enable the onClick:</p>\n\n<pre><code>var code = $('#mybutton').attr(\"onclick\");\ncode = code.replace(/\\*\\//gi, \" \");\ncode = code.replace(/\\/\\*/gi, \" \");\n$('#mybutton').attr(\"onclick\", code);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -6
                },
                {
                    "body": "<p>using jQuery 1.7.1 or latest you can just do </p>\n\n<pre><code>clickMe = function(){ \n   $(\"#button_id\").click(function() {\n        $(this).off('click');\n        //do something\n        $(this).on(\"click\", clickMe);\n   });\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<pre><code>$(\"#button_id\").click(function() {\n    $('#button_id').attr('disabled', 'true');\n    $('#myDiv').hide(function() { $('#button_id').removeAttr('disabled'); });\n}); \n</code></pre>\n\n<p>Don't use <code>.attr()</code> to do the disabled, use <code>.prop()</code>, it's better.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>This example work.</p>\n\n<hr>\n\n<p>HTML code:</p>\n\n<pre><code>  &lt;div class=\"wrapper\"&gt;\n     &lt;div class=\"mask\"&gt;Something&lt;/div&gt; \n  &lt;/div&gt;\n</code></pre>\n\n<p>jQuery:</p>\n\n<pre><code>    var fade = function(){\n        $(\".mask\").fadeToggle(500,function(){\n            $(this).parent().on(\"click\",function(){\n                $(this).off(\"click\");\n                fade();\n            });\n        });\n    };\n\n    $(\".wrapper\").on(\"click\",function(){\n        $(this).off(\"click\");\n        fade();     \n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This code will display loading on the button label, and set button to disable state, then after processing,  re-enable and return back the original button text:</p>\n\n<pre><code>$(function () {\n\n        $(\".btn-Loading\").each(function (idx, elm) {\n            $(elm).click(function () {\n                //do processing\n                if ($(\".input-validation-error\").length &gt; 0)\n                    return;\n                $(this).attr(\"label\", $(this).text()).text(\"loading ....\");\n                $(this).delay(1000).animate({ disabled: true }, 1000, function () {\n                    //original event call\n                    $.when($(elm).delay(1000).one(\"click\")).done(function () {\n                        $(this).animate({ disabled: false }, 1000, function () {\n                            $(this).text($(this).attr(\"label\"));\n                        })\n                    });\n                    //processing finalized\n                });\n            });\n        });\n        // and fire it after definition\n    }\n   );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I noticed this post was old but it appears top on google and this kind of solution was never offered so I decided to post it anyway.</p>\n\n<p>You can just disable cursor-events and enable them again later via css. It is supported on all major browsers and may prove useful in some situations.</p>\n\n<pre><code>$(\"#button_id\").click(function() {\n\n   $(\"#button_id\").css(\"pointer-events\", \"none\");\n   //do something\n   $(\"#button_id\").css(\"pointer-events\", \"auto\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>Say I have something like the following to trap the click even of a button:</p>\n\n<pre><code>$(\"#button_id\").click(function() {\n  //disable click event\n  //do something\n  //re-enable click event\n}\n</code></pre>\n\n<p>How do I temporarily disable the click event of the button until the end of the processing of the original click occurs? I basically have the div disappear after the button is clicked, but if the user clicks on the button fast several times, it processes all those clicks before the div gets a chance to disappear.  I want to \"debounce\" the button so that only the first click gets registered before the div disappears.</p>\n",
            "last_activity_date": 1406988733,
            "question_id": 1263042,
            "score": 31,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to temporarily disable a click handler in jQuery?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>IE11 keeps \"Trident\" in it's UA string, but drops MSIE. A simple way to detect the browser is IE11 or above (IE12, IE13, etc) is:</p>\n\n<pre><code>var isAtLeastIE11 = !!(navigator.userAgent.match(/Trident/) &amp;&amp; !navigator.userAgent.match(/MSIE/));\n</code></pre>\n\n<p>If you want <em>just</em> IE11 (and you don't want future versions of IE to match), do this:</p>\n\n<pre><code>var isIE11 = !!(navigator.userAgent.match(/Trident/) &amp;&amp; navigator.userAgent.match(/rv 11/));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Try this,</p>\n\n<pre><code>navigator.sayswho= (function(){\n   var N= navigator.appName, ua= navigator.userAgent, tem;\n   var M= ua.match(/(opera|chrome|safari|firefox|msie)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i);\n   if(M &amp;&amp; (tem= ua.match(/version\\/([\\.\\d]+)/i))!= null) M[2]= tem[1];\n   M= M? [M[1], M[2]]: [N, navigator.appVersion,'-?'];\n   return M;\n})();\n</code></pre>\n\n<p>Source from <a href=\"http://stackoverflow.com/questions/2400935/browser-detection-in-javascript\">Browser detection in javascript?</a></p>\n\n<p>Updated for <strong>IE=11</strong></p>\n\n<p>Use this </p>\n\n<pre><code>var isIE11 = navigator.userAgent.match(/Trident\\/7.0; rv 11.0/);\n</code></pre>\n\n<p>Read this <a href=\"http://msdn.microsoft.com/en-us/library/ie/bg182625%28v=vs.85%29.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/ie/bg182625%28v=vs.85%29.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var isIE11 = !!navigator.userAgent.match(/Trident\\/7.0; rv 11/);\n</code></pre>\n\n<p>Source: <a href=\"http://www.nczonline.net/blog/2013/07/02/internet-explorer-11-dont-call-me-ie/\">http://www.nczonline.net/blog/2013/07/02/internet-explorer-11-dont-call-me-ie/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The User-agent string for IE 11 is currently this one :</p>\n\n<pre><code>Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv 11.0) like Gecko\n</code></pre>\n\n<p>Which means your can simply test, for versions 11.xx, </p>\n\n<pre><code>var isIE11 = !!navigator.userAgent.match(/Trident.*rv[ :]*11\\./)\n</code></pre>\n\n<p>As <a href=\"http://msdn.microsoft.com/en-us/library/ie/hh920767%28v=vs.85%29.aspx\">IE10 user agent was</a></p>\n\n<pre><code>Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)\n</code></pre>\n\n<p>it's probably also safe to bet on the fact that now <code>Trident/X</code> is supposed to be the real versionning.</p>\n",
                    "is_accepted": true,
                    "score": 55
                }
            ],
            "body": "<p>What's the best way to target just IE11 with JavaScript?</p>\n\n<p>Note: This should really only be done for analytics or informing the user what browser they're using. For everything else, there's feature detection.</p>\n",
            "last_activity_date": 1405428209,
            "question_id": 17447373,
            "score": 30,
            "tags": [
                "javascript",
                "internet-explorer",
                "browser",
                "internet-explorer-11"
            ],
            "title": "How can I target only Internet Explorer 11 with JavaScript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>for (var i in tracks[racer_id].data.points) {\n    values = tracks[racer_id].data.points[i];                \n    point = new google.maps.LatLng(values.lat, values.lng);\n    if (values.qst) {\n        var marker = new google.maps.Marker({map: map, position: point, clickable: true});\n        tracks[racer_id].markers[i] = marker;\n        var info = new google.maps.InfoWindow({\n            content: '&lt;b&gt;Speed:&lt;/b&gt; ' + values.inst + ' knots'\n        });\n        tracks[racer_id].info[i] = info;\n        google.maps.event.addListener(tracks[racer_id].markers[i], 'click', function() {\n            tracks[racer_id].info[i].open(map, tracks[racer_id].markers[i]);\n        });\n    }\n    track_coordinates.push(point);\n    bd.extend(point);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had a very similar problem but in ActionScript 3:\n<a href=\"http://stackoverflow.com/questions/3048855/dynamic-google-maps-api-infowindow-html-content\">Stack Over Flow: Dynamic Google Maps API Info Window HTML Content Issue</a></p>\n\n<p>I was trying to pull unique information into the htmlcontent of the tooltips from a database and found that I was getting the information of the last marker I added in every marker.</p>\n\n<p>Assuming that it isn't an actionscript specific issue then JochenJung's solution won't work.  Look at the solution I posted in my problem and see if you can apply it here.  This appears to be a serious issue with the Map API.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You are having <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Working_with_Closures#Creating_closures_in_loops.3a_A_common_mistake\">a very common closure problem</a> in the <code>for in</code> loop:</p>\n\n<p>Variables enclosed in a closure share the same single environment, so by the time the <code>click</code> callback from the <code>addListener</code> is called, the loop will have run its course and the <code>info</code> variable will be left pointing to the last object, which happens to be the last <code>InfoWindow</code> created.</p>\n\n<p>In this case, one easy way to solve this problem would be to augment your <code>Marker</code> object with the <code>InfoWindow</code>:</p>\n\n<pre><code>var marker = new google.maps.Marker({map: map, position: point, clickable: true});\n\nmarker.info = new google.maps.InfoWindow({\n  content: '&lt;b&gt;Speed:&lt;/b&gt; ' + values.inst + ' knots'\n});\n\ngoogle.maps.event.addListener(marker, 'click', function() {\n  marker.info.open(map, marker);\n});\n</code></pre>\n\n<p>This can be quite a tricky topic, if you are not familiar with how closures work. You may to check out the following Mozilla article for a brief introduction:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Working_with_Closures\">Working with Closures</a></li>\n</ul>\n\n<p>Also keep in mind, that the v3 API allows multiple <code>InfoWindow</code>s on the map. If you intend to have just one <code>InfoWindow</code> visible at the time, you should instead use a single <code>InfoWindow</code> object, and then open it and change its content whenever the marker is clicked (<a href=\"http://code.google.com/apis/maps/documentation/javascript/overlays.html#InfoWindows\">Source</a>).</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>Hey everyone. I don't know if this is the optimal solution but I figured I'd post it here to hopefully help people out in the future. Please comment if you see anything that should be changed.</p>\n\n<p>My for loops is now:</p>\n\n<pre><code>for (var i in tracks[racer_id].data.points) {\n    values = tracks[racer_id].data.points[i];                \n    point = new google.maps.LatLng(values.lat, values.lng);\n    if (values.qst) {\n        tracks[racer_id].markers[i] = add_marker(racer_id, point, '&lt;b&gt;Speed:&lt;/b&gt; ' + values.inst + ' knots&lt;br /&gt;&lt;b&gt;Invalid:&lt;/b&gt; &lt;input type=\"button\" value=\"Yes\" /&gt; &lt;input type=\"button\" value=\"No\" /&gt;');\n    }\n    track_coordinates.push(point);\n    bd.extend(point);\n}\n</code></pre>\n\n<p>And <code>add_marker</code> is defined as:</p>\n\n<pre><code>var info_window = new google.maps.InfoWindow({content: ''});\n\nfunction add_marker(racer_id, point, note) {\n    var marker = new google.maps.Marker({map: map, position: point, clickable: true});\n    marker.note = note;\n    google.maps.event.addListener(marker, 'click', function() {\n        info_window.content = marker.note;\n        info_window.open(map, marker);\n    });\n    return marker;\n}\n</code></pre>\n\n<p>You can use info_window.close() to turn off the info_window at any time. Hope this helps someone.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The add_marker still has a closure issue, cause it uses the marker variable outside the google.maps.event.addListener scope.</p>\n\n<p>A better implementation would be:</p>\n\n<pre><code>function add_marker(racer_id, point, note) {\n    var marker = new google.maps.Marker({map: map, position: point, clickable: true});\n    marker.note = note;\n    google.maps.event.addListener(marker, 'click', function() {\n        info_window.content = this.note;\n        info_window.open(this.getMap(), this);\n    });\n    return marker;\n}\n</code></pre>\n\n<p>I also used the map from the marker, this way you don't need to pass the google map object, you probably want to use the map where the marker belongs to anyway.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>for Earth plugin APIs, create the balloon outside your loop and pass your counter to the function to get unique contents for each placemark!</p>\n\n<pre><code>function createBalloon(placemark, i, event) {\n            var p = placemark;\n            var j = i;\n            google.earth.addEventListener(p, 'click', function (event) {\n                    // prevent the default balloon from popping up\n                    event.preventDefault();\n                    var balloon = ge.createHtmlStringBalloon('');\n                    balloon.setFeature(event.getTarget());\n\n                    balloon.setContentString('iframePath#' + j);\n\n                    ge.setBalloon(balloon);\n            });\n        }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use <code>this</code> in event:  </p>\n\n<pre><code>google.maps.event.addListener(marker, 'click', function(point) {  \n    //this = marker  \n    this.info.open(map);//(map, this);  \n});  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The only way I could finally get this to work was by creating an array in JavaScript.  The array elements reference the various info-windows (one info-window is created for each marker on the map).  Each array element contains the unique text for its appropriate map marker.  I defined the JavaScript event for each info-window based on the array element.  And when the event fires, I use the \"this\" keyword to reference the array element to reference the appropriate value to display.</p>\n\n<pre><code>var map = new google.maps.Map(document.getElementById('map-div'), mapOptions);\nzipcircle = [];\nfor (var zip in zipmap) {\n    var circleoptions = {\n        strokeOpacity: 0.8,\n        strokeWeight: 1,\n        fillOpacity: 0.35,\n        map: map,\n        center: zipmap[zip].center,\n        radius: 100\n    };\n    zipcircle[zipmap[zip].zipkey] = new google.maps.Circle(circleoptions);\n    zipcircle[zipmap[zip].zipkey].infowindowtext = zipmap[zip].popuptext;\n    zipcircle[zipmap[zip].zipkey].infowindow = new google.maps.InfoWindow();\n    google.maps.event.addListener(zipcircle[zipmap[zip].zipkey], 'click', function() {\n        this.infowindow.setContent(this.infowindowtext);\n        this.infowindow.open(map, this);\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use event closures...</p>\n\n<p>This is how to do it in v3: <a href=\"https://developers.google.com/maps/documentation/javascript/examples/event-closure\" rel=\"nofollow\">https://developers.google.com/maps/documentation/javascript/examples/event-closure</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>NOTE: I'm using v3 of the Google Maps API</p>\n\n<p>I'm trying to add an info window to each marker I put on the map. Currently I'm doing this with the following code:</p>\n\n<pre><code>for (var i in tracks[racer_id].data.points) {\n    values = tracks[racer_id].data.points[i];                \n    point = new google.maps.LatLng(values.lat, values.lng);\n    if (values.qst) {\n        var marker = new google.maps.Marker({map: map, position: point, clickable: true});\n        tracks[racer_id].markers[i] = marker;\n        var info = new google.maps.InfoWindow({\n            content: '&lt;b&gt;Speed:&lt;/b&gt; ' + values.inst + ' knots'\n        });\n        tracks[racer_id].info[i] = info;\n        google.maps.event.addListener(marker, 'click', function() {\n            info.open(map, marker);\n        });\n    }\n    track_coordinates.push(point);\n    bd.extend(point);\n}\n</code></pre>\n\n<p>The problem is when I click on a marker it just displays the info window for the last marker added. Also just to be clear the info window appears next to the last marker not the marker clicked on. I'd imagine my problem is in the addListener portion but am not postitive. Any ideas?</p>\n",
            "last_activity_date": 1414479401,
            "question_id": 3158598,
            "score": 29,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3"
            ],
            "title": "Google Maps API v3 adding an InfoWindow to each marker"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Your string looks like a JSON string without the curly braces.</p>\n\n<p>This should work then:</p>\n\n<pre><code>obj = eval('{' + str + '}');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>If I'm understanding correctly:</p>\n\n<pre><code>var properties = string.split(', ');\nvar obj = {};\nproperties.forEach(function(property) {\n    var tup = property.split(':');\n    obj[tup[0]] = tup[1];\n});\n</code></pre>\n\n<p>I'm assuming that the property name is to the left of the colon and the string value that it takes on is to the right.</p>\n\n<p>Note that <code>Array.forEach</code> is JavaScript 1.6 -- you may want to use a toolkit for maximum compatibility.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>This simple way...</p>\n\n<pre><code>var string = \"{firstName:'name1', lastName:'last1'}\";\neval('var obj='+string);\nalert(obj.firstName);\n</code></pre>\n\n<p>output </p>\n\n<pre><code>name1\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>if you're using JQuery:</p>\n\n<pre><code>var obj = jQuery.parseJSON('{\"path\":\"/img/filename.jpg\"}');\nconsole.log(obj.path); // will print /img/filename.jpg\n</code></pre>\n\n<p>REMEMBER: eval is evil! :D</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Actually, the best solution is using JSON:</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\">Documentation</a></p>\n\n<p><code>JSON.parse(text[, reviver]);</code></p>\n\n<h2>Examples:</h2>\n\n<p>1)</p>\n\n<pre><code>var myobj = JSON.parse('{ \"hello\":\"world\" }');\nalert(myobj.hello); // 'world'\n</code></pre>\n\n<p>2)</p>\n\n<pre><code>var myobj = JSON.parse(JSON.stringify({\n    hello: \"world\"\n});\nalert(myobj.hello); // 'world'\n</code></pre>\n\n<p>3)\nPassing a function to JSON</p>\n\n<pre><code>var obj = {\n    hello: \"World\",\n    sayHello: (function() {\n        console.log(\"I say Hello!\");\n    }).toString()\n};\nvar myobj = JSON.parse(JSON.stringify(obj));\nmyobj.sayHello = new Function(\"return (\"+myobj.sayHello+\")\")();\nmyobj.sayHello();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>I implemented a solution in a few lines of code which works quite reliably.</p>\n\n<p>Having an HTML element like this where I want to pass custom options:</p>\n\n<pre><code>&lt;div class=\"my-element\"\n    data-options=\"background-color: #dadada; custom-key: custom-value;\"&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>a function parses the custom options and return an object to use that somewhere:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function readCustomOptions($elem){\n    var i, len, option, options, optionsObject = {};\n\n    options = $elem.data('options');\n    options = (options || '').replace(/\\s/g,'').split(';');\n    for (i = 0, len = options.length - 1; i &lt; len; i++){\n        option = options[i].split(':');\n        optionsObject[option[0]] = option[1];\n    }\n    return optionsObject;\n}\n\nconsole.log(readCustomOptions($('.my-element')));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>string = \"firstName:name1, lastName:last1\";\n</code></pre>\n\n<p>This will work:</p>\n\n<pre><code>var fields = string.split(', '),\n    fieldObject = {};\n\nif( typeof fields === 'object') ){\n   fields.each(function(field) {\n      var c = property.split(':');\n      fieldObject[c[0]] = c[1];\n   });\n}\n</code></pre>\n\n<p>However it's not efficient. What happens when you have something like this:</p>\n\n<pre><code>string = \"firstName:name1, lastName:last1, profileUrl:http://localhost/site/profile/1\";\n</code></pre>\n\n<p><code>split()</code> will split 'http'. So i suggest you use a special delimiter like pipe</p>\n\n<pre><code> string = \"firstName|name1, lastName|last1\";\n\n\n   var fields = string.split(', '),\n        fieldObject = {};\n\n    if( typeof fields === 'object') ){\n       fields.each(function(field) {\n          var c = property.split('|');\n          fieldObject[c[0]] = c[1];\n       });\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a string as </p>\n\n<pre><code>string = \"firstName:name1, lastName:last1\";\n</code></pre>\n\n<p>now I need one object obj such that </p>\n\n<pre><code>obj = {firstName:name1, lastName:last1}\n</code></pre>\n\n<p>How can I do this in JS?</p>\n",
            "last_activity_date": 1418299468,
            "question_id": 1086404,
            "score": 29,
            "tags": [
                "javascript",
                "string",
                "object"
            ],
            "title": "String to object in JS"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Put your if condition inside <code>resize</code> function:</p>\n\n<pre><code>var windowsize = $(window).width();\n\n$(window).resize(function() {\n  windowsize = $(window).width();\n  if (windowsize &gt; 440) {\n    //if the window is greater than 440px wide then turn on jScrollPane..\n      $('#pane1').jScrollPane({\n         scrollbarWidth:15, \n         scrollbarMargin:52\n      });\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Changing a variable doesn't magically execute code within the <code>if</code>-block. Place the common code in a function, then bind the event, and call the function:</p>\n\n<pre><code>$(document).ready(function() {\n    // Optimalisation: Store the references outside the event handler:\n    var $window = $(window);\n    var $pane = $('#pane1');\n\n    function checkWidth() {\n        var windowsize = $window.width();\n        if (windowsize &gt; 440) {\n            //if the window is greater than 440px wide then turn on jScrollPane..\n            $pane.jScrollPane({\n               scrollbarWidth:15, \n               scrollbarMargin:52\n            });\n        }\n    }\n    // Execute on load\n    checkWidth();\n    // Bind event listener\n    $(window).resize(checkWidth);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 59
                }
            ],
            "body": "<p>I have a scrolling element on my page (with the jScrollPane jQuery plugin). What I want to accomplish is a way to turn off the scrolling window by detecting the width of the browser window. I am doing a responsive layout and I want this scrolling feature to be turned off when the browser is below a certain width. I am able to make it work when I refresh the page, but when I resize the browser window the width value does not update on the fly. </p>\n\n<p>Right now if I start out with a window that is 1000px wide then resize to 350px the scroll feature remains. I want the scroll feature to shut off as soon as the browser width hits 440px.</p>\n\n<p>Here's the code I have so far..</p>\n\n<pre><code>var windowsize = $(window).width();\n\n$(window).resize(function() {\n  var windowsize = $(window).width();\n});\n\nif (windowsize &gt; 440) {\n  //if the window is greater than 440px wide then turn on jScrollPane..\n    $('#pane1').jScrollPane({\n       scrollbarWidth:15, \n       scrollbarMargin:52\n    });\n}\n</code></pre>\n",
            "last_activity_date": 1389674495,
            "question_id": 9720294,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "responsive-design"
            ],
            "title": "jQuery: How to detect window width on the fly?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>That's not a beauty solution but it's in common usage:</p>\n\n<pre><code>var self = this;\nvar ajax = null;\n//...\najax.onload = function() {\n    self.prefs....;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>prefs: null,\nstartup : function()\n    {\n        // init prefs\n        ...\n        this.retrieve_rate();\n        var context = this;\n        this.intervalID = setInterval(function()\n                                      {\n                                          context.retrieve_rate();\n                                      }, this.INTERVAL);\n    },\n\nretrieve_rate : function()\n    {\n        var ajax = null;\n        ajax = new XMLHttpRequest();\n        ajax.open('GET', 'http://xyz.com', true);\n        var context = this;\n        ajax.onload = function()\n        {\n            // access prefs using context.\n            // e.g. context.prefs\n        }\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The setInterval line should look like this:-</p>\n\n<pre><code> this.intervalID = setInterval(\n     (function(self) {         //Self-executing func which takes 'this' as self\n         return function() {   //Return a function in the context of 'self'\n             self.retrieve_rate(); //Thing you wanted to run as non-window 'this'\n         }\n     })(this),\n     this.INTERVAL     //normal interval, 'this' scope not impacted here.\n ); \n</code></pre>\n\n<p><strong>Edit</strong>:  The same principle applies to the \" <code>onload</code> \".  In this case its common for the \"outer\" code to do little, it just sets up the request an then sends it.  In this case the extra overhead an additinal function as in the above code is unnecessary.  Your retrieve_rate should look more like this:-</p>\n\n<pre><code>retrieve_rate : function()\n{\n    var self = this;\n    var ajax = new XMLHttpRequest();\n    ajax.open('GET', 'http://xyz.com', true);\n    ajax.onreadystatechanged= function()\n    {\n        if (ajax.readyState == 4 &amp;&amp; ajax.status == 200)\n        {\n            // prefs available as self.prefs\n        }\n    }\n    ajax.send(null);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 53
                },
                {
                    "body": "<p>The default behavior of <code>setInterval</code> is to bind to the global context. You can call a member function by saving a copy of the current context. Inside retrieve_rate the <code>this</code> variable will be correctly bound to the original context. Here is what your code would look like:</p>\n\n<pre><code>var self = this;\nthis.intervalID = setInterval(\n    function() { self.retrieve_rate(); },\n    this.INTERVAL);\n</code></pre>\n\n<p>Bonus tip: For a plain function reference (as opposed to an object reference which has a member function) you can change the context by using JavaScript's <code>call</code> or <code>apply</code> methods.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>this.intervalID = setInterval(this.retrieve_rate.bind(this), this.INTERVAL);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>This would be the cleanest solution, since most of the time you actually want to switch the this context for your consecutive method calls:</p>\n\n<p>Also it's easier to grasp the concept of.</p>\n\n<pre><code>    // store scope reference for our delegating method\n    var that = this;\n    setInterval(function() {\n        // this would be changed here because of method scope, \n        // but we still have a reference to that\n        OURMETHODNAME.call(that);\n    }, 200);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to access <code>this</code> from my <code>setInterval</code> handler</p>\n\n<pre><code>prefs: null,\nstartup : function()\n    {\n        // init prefs\n        ...\n        this.retrieve_rate();\n        this.intervalID = setInterval(this.retrieve_rate, this.INTERVAL);\n    },\n\nretrieve_rate : function()\n    {\n        var ajax = null;\n        ajax = new XMLHttpRequest();\n        ajax.open('GET', 'http://xyz.com', true);\n        ajax.onload = function()\n        {\n            // access prefs here\n        }\n    }\n</code></pre>\n\n<p>How can I access this.prefs in <code>ajax.onload</code> ?</p>\n",
            "last_activity_date": 1415198912,
            "question_id": 2749244,
            "score": 28,
            "tags": [
                "javascript",
                "this",
                "setinterval"
            ],
            "title": "Javascript setInterval and `this` solution"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p><a href=\"http://docs.jquery.com/Frequently%5FAsked%5FQuestions#How%5Fdo%5FI%5Fget%5Fand%5Fuse%5Fthe%5Fserver%5Fresponse%5Ffrom%5Fan%5FAJAX%5Frequest.3F\" rel=\"nofollow\">Check out this FAQ item on the jQuery site.</a> Specially the callback reference and the complete method.</p>\n\n<p>What you want is data from A to be passed to B and B's data passed to C. So you would do a callback on complete.</p>\n\n<p>I haven't tried this though.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Maybe what you can do is write a server-side wrapper function. That way your javascript only does a single asynchronous call to your own web server. Then your web server uses curl (or urllib, etc.) to interact with the remote API. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Don't use anonymous functions. Give them names. I don't know if you're able to do what I wrote below though:</p>\n\n<pre><code>var step_3 = function() {\n    c.finish();\n};\n\nvar step_2 = function(c, b) {\n    ajax(c(b.somedata), step_3);\n};\n\nvar step_1 = function(b, a) {\n  ajax(b(a.somedata), step_2);\n};\n\najax(a, step_1);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I believe that implementing a state machine will make the code more readable:</p>\n\n<pre><code>var state = -1;\nvar error = false;\n\n$.ajax({success: function() { \n                  state = 0;\n                  stateMachine(); },\n        error: function() {\n                  error = true;\n                  stateMachine();\n        }});\n\nfunction stateMachine() {\n  if (error) {\n     // Error handling\n     return;\n  }\n\n  if (state == 0) {\n    state = 1;\n    // Call stateMachine again in an ajax callback\n  }\n  else if (state == 1) {\n\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could have a single function which is passed an integer to state what step the request is in, then use a switch statement to figure out what request needs to be make next:</p>\n\n<pre><code>function ajaxQueue(step) {\n  switch(step) {\n    case 0: $.ajax({\n              type: \"GET\",\n              url: \"/some/service\",\n              complete: function() { ajaxQueue(1); } \n    }); break;\n    case 1: $.ajax({\n              type: \"GET\",\n              url: \"/some/service\",\n              complete: function() { ajaxQueue(2); }\n            }); break;\n    case 2: $.ajax({\n              type: \"GET\",\n              url: \"/some/service\",\n              complete: function() { alert('Done!'); }\n            }); break;\n  }\n}\n\najaxQueue(0);\n</code></pre>\n\n<p>Hope that helps!</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>This function should chain together a list of ajax requests, if the callbacks always return the parameters necessary for the next request:</p>\n\n<pre><code>function chainajax(params, callbacks) {\n  var cb = shift(callbacks);\n  params.complete = function() {\n    var newparams = cb(arguments);\n    if (callbacks)\n      chainajax(newparams, callbacks);\n  };\n  $.ajax(params);\n};\n</code></pre>\n\n<p>You can define these callback functions separately and then chain them together:</p>\n\n<pre><code>function a(data) {\n  ...\n  return {type: \"GET\", url: \"/step2.php?foo\"}\n};\n// ...\nfunction d(data) { alert(\"done!\"); };\n\nchainajax({type: \"GET\", url: \"/step1.php\"},\n  [a, b, c, d]);\n</code></pre>\n\n<p>You could also declare the functions \"inline\" in the call to chainajax, but that might get a little confusing.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><strong>Update: I've learn a better answer for this if you are using jQuery, see my update under the title: Using jQuery Deffered</strong></p>\n\n<p><strong>Old answer:</strong></p>\n\n<p>You can also use <code>Array.reduceRight</code> (when it's available) to wrap the <code>$.ajax</code> calls and transform a list like: <code>[resource1, resource2]</code> into <code>$.ajax({url:resource1,success: function(...) { $ajax({url: resource2...</code> (a trick that I've learn from Haskell and it's fold/foldRight function).</p>\n\n<p>Here is an example:</p>\n\n<pre><code>var withResources = function(resources, callback) {\n    var responses = [];\n    var chainedAjaxCalls = resources.reduceRight(function(previousValue, currentValue, index, array) {\n        return function() {\n            $.ajax({url: currentValue, success: function(data) {\n                responses.push(data);\n                previousValue();\n            }})\n        }\n    }, function() { callback.apply(null, responses); });\n    chainedAjaxCalls();\n};\n</code></pre>\n\n<p>Then you can use:</p>\n\n<pre><code>withResources(['/api/resource1', '/api/resource2'], function(response1, response2) {\n    // called only if the ajax call is successful with resource1 and resource2\n});\n</code></pre>\n\n<p><strong>Using jQuery Deffered</strong></p>\n\n<p>If you are using jQuery, you can take advantage of <a href=\"http://api.jquery.com/jQuery.when/\" rel=\"nofollow\">jQuery Deffered</a>, by using the <code>jQuery.when()</code> function:</p>\n\n<pre><code> jQuery.when($.get('/api/one'), $.get('/api/two'))\n       .done(function(result1, result2) { \n              /* one and two is done */\n        });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The complete callback is what you're looking for:</p>\n\n<pre><code>$.ajax({\n     type: 'post',\n     url: \"www.example.com\",\n     data: {/* Data to be sent to the server. It is converted to a query string, if not already a string. It's appended to the url for GET-requests. */},\n     success:\n          function(data) {\n              /* you can also chain requests here. will be fired if initial request is successful but will be fired before completion. */\n          },\n    complete: \n         function() {\n             /* For more a more synchronous approach use this callback. Will be fired when first function is completed. */\n         }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I made a method using Promises</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>// How to setup a chainable queue method\r\nvar sequence = Promise.resolve();\r\n\r\nfunction chain(next){\r\n    var promise = new Promise(function(resolve){\r\n        sequence.then(function(){\r\n            next(resolve);\r\n        });\t\r\n    });\r\n\r\n    sequence = promise;\r\n}\r\n\r\n// How to use it\r\nchain(function(next){\r\n    document.write(\"&lt;p&gt;start getting config.json&lt;/p&gt;\");\r\n    setTimeout(function(){\r\n    \tdocument.write(\"&lt;p&gt;Done fetching config.json&lt;/p&gt;\");\r\n        next();\r\n    }, 3000);\r\n});\r\n\r\nchain(function(next){\r\n    document.write(\"&lt;p&gt;start getting init.js&lt;/p&gt;\")\r\n    setTimeout(function(){\r\n        document.write(\"&lt;p&gt;starting eval scripting&lt;/p&gt;\");\r\n        next();\r\n    }, 3000);\r\n});\r\n\r\nchain(function(next){\r\n    document.write(\"&lt;p&gt;Everything is done&lt;/p&gt;\");\r\n});</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<hr>\n\n<p><strong>Bonus</strong>: A ultraligth 138 byte limited A- Promise (that can only resolve - without parameters, and only call the last then-method )</p>\n\n\n\n<p><strong>Background</strong>:\nI made this for node.js at the point where it dose not have promises ATM. I didn't want a complete full blown Promise library that I was dependent on and had to include in my package.json, I needed it to be fast and light and do mostly one thing only. I only needed it for one thing (chaining things like you want to)</p>\n\n<pre><code>function Q(a,b){b=this;a(function(){b.then&amp;&amp;b.then();b.then=i});return b}function i(a){a&amp;&amp;a()}Q.prototype={then:function(a){this.then=a}};\n</code></pre>\n\n<h3>How?</h3>\n\n<pre><code>// Start with a resolved object\nvar promise = new Q(function(a){a()});\n// equal to \n// var promise = Promise.resolve();\n\n// example usage\nnew Q(function(resolve){\n    // do some async stuff that takes time\n    // setTimeout(resolve, 3000);\n}).then(function(){\n    // its done\n    // can not return a new Promise\n}); // &lt;- can not add more then's (it only register the last one)\n</code></pre>\n\n<h3>and for the chainable queue method</h3>\n\n<pre><code>// How to setup a chainable queue method with ultraligth promise\nvar sequence = new Q(function(a){a()});\n\nfunction chain(next){\n    var promise = new Q(function(resolve){\n        sequence.then(function(){\n            next(resolve);\n        }); \n    });\n\n    sequence = promise;\n}\n</code></pre>\n\n \n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have to interact with a remote api that forces me to chain requests. Thats a callback-hell in asynchronous mode:</p>\n\n<pre><code>// pseudocode: ajax(request_object, callback)\najax(a, function() {\n  ajax(b(a.somedata), function() {\n    ajax(c(b.somedata), function() {\n      c.finish()\n    }\n  }) \n})\n</code></pre>\n\n<p>It would be much more readable in sync mode:</p>\n\n<pre><code>sjax(a)\nsjax(b(a.somedata))\nsjax(c(b.somedata))\nc.finish()\n</code></pre>\n\n<p>But <em>Sjax</em> is evil :) How do I do that in a <s>nice</s> not-so-evil and readable way?</p>\n",
            "last_activity_date": 1413391200,
            "question_id": 995529,
            "score": 24,
            "tags": [
                "javascript",
                "jquery",
                "asynchronous"
            ],
            "title": "How to chain ajax requests?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Non-jQuery solution. Note you can't just use <code>.click()</code> as some browsers does not support it.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction performClick(elemId) {\n   var elem = document.getElementById(elemId);\n   if(elem &amp;&amp; document.createEvent) {\n      var evt = document.createEvent(\"MouseEvents\");\n      evt.initEvent(\"click\", true, false);\n      elem.dispatchEvent(evt);\n   }\n}\n&lt;/script&gt;\n&lt;a href=\"#\" onclick=\"performClick('theFile');\"&gt;Open file dialog&lt;/a&gt;\n&lt;input type=\"file\" id=\"theFile\" /&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>I know this is an old post, but another simple option is using the INPUT TYPE=\"FILE\" tag according to compatibility most major browser support this feature.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use this.</p>\n\n<pre><code>&lt;script&gt;\n  function openFileOption()\n{\n  document.getElementById(\"file1\").click();\n}\n&lt;/script&gt;\n     &lt;input type=\"file\" id=\"file1\" style=\"display:none\"&gt;\n     &lt;a href=\"#\" onclick=\"openFileOption();return;\"&gt;open File Dialog&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I worked it around through this \"hiding\" div ...</p>\n\n<pre><code>&lt;div STYLE=\"position:absolute;display:none;\"&gt;&lt;INPUT type='file' id='file1' name='files[]'&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's is a way of doing it without any Javascript and it's also compatible with any browser.</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;label&gt;\n  Open file dialog\n  &lt;input type=\"file\" style=\"display: none\"&gt;\n&lt;/label&gt;\n</code></pre>\n\n\n\n<p>In case you find problems, you may need to use the <code>for</code> attribute in the <code>label</code> pointing to the <code>id</code> of the input.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there any way to open the browse for files dialog box when a <code>&lt;a href&gt;</code> link is clicked using javascript? It should function like a normal browse for files button and give the names/list of files selected in response.</p>\n",
            "last_activity_date": 1421868744,
            "question_id": 6463439,
            "score": 22,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to open a file / browse dialog using javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You are a genius you know. This is most definitely possible, you do need to write a flash-Javascript library, haven't heard of one, but the idea is totally doable. You just need the TCP in flash with well defined callback API for javascript (or you could just call strings to give you more flexibility).</p>\n\n<p>Anyways pure genius I say.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is an implementation with a similar approach: </p>\n\n<ul>\n<li><a href=\"http://sly.w3m.hu/socketjs\">socketjs</a></li>\n</ul>\n\n<p>It uses a Java Applet and bridges its API to JavaScript, interesting...</p>\n\n<p>And here another one:</p>\n\n<ul>\n<li><a href=\"http://code.google.com/p/jsocket/\">jSocket</a></li>\n</ul>\n\n<p>This one is a wrapper of the Actionscript 3 Socket API, bridged to JavaScript...</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p><a href=\"http://code.google.com/p/jsocket/wiki/Introduction\" rel=\"nofollow\">jSocket</a> and <a href=\"http://stream.stormtide.ca/\" rel=\"nofollow\">Stream</a> are two options that utilize Flash's built-in XML sockets, though neither appears to be production-ready.  I'd lean towards using a Flash-based solution rather than Java, as browser penetration is <a href=\"http://www.realchat.com/blog/java-vs-flash/\" rel=\"nofollow\">higher</a> and generally offers a better user experience (load times &amp; stability).</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><a href=\"http://en.wikipedia.org/wiki/WebSockets\">WebSockets</a> is designed to solve this problem.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>You can use <a href=\"http://nodejs.org/\">node.js</a> framework's <a href=\"http://socket.io/\">socket.io</a> package which can can be installed via <a href=\"http://npmjs.org/\">npm</a> (A node package manager).</p>\n\n<p>More detailed <a href=\"http://socket.io/#how-to-use\">usage</a>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I'm thinking about how limiting it is for AJAX apps to have to poll for updates, when what would be ideal is for javascript to be able to set up a real two way connection to the server. I'm wondering if there is some method of integrating javascript with a browser plugin that can make a tcp connection so that I could pass data into and out of the browser plugin. </p>\n",
            "last_activity_date": 1311890321,
            "question_id": 307539,
            "score": 22,
            "tags": [
                "javascript",
                "ajax",
                "user-interface",
                "sockets"
            ],
            "title": "How can I communicate over TCP sockets from JavaScript?"
        }
    ]
}
