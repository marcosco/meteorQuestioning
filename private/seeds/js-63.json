{
    "items": [
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Like google's</p>\n\n<pre><code>while(1);\n</code></pre>\n\n<p>it done for preventing of including this in <code>&lt;script&gt;</code> with further using the data</p>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>While surfing facebook and using the Firebug network debugger I noticed that facebook's AJAX responses all start with an empty for loop.</p>\n\n<p>Example:</p>\n\n<pre><code>for(;;);{...}\n</code></pre>\n\n<p>Does anyone know why this is done?  I assume it's to prevent some sort of XSS attack but I don't totally understand. Thanks!</p>\n",
            "last_activity_date": 1276739613,
            "question_id": 3058401,
            "score": 15,
            "tags": [
                "javascript",
                "ajax",
                "facebook"
            ],
            "title": "Empty &quot;for&quot; loop in Facebook ajax"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<pre><code>/^(?:[01]\\d|2[0-3]):?[0-5]\\d$/\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>/(00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23):?(0|1|2|3|4|5)\\d/\n</code></pre>\n\n<p>:)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't think regex is the right solution for this problem. Sure, it COULD be done, but it just seems wrong.</p>\n\n<p>Make sure your string is four characters long, or 5 characters with a colon in the middle. Then, parse each side and make sure that the left side is less than 24 and the right hand is less than 60.</p>\n\n<p>The regex solution is just so much more complicated.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This should do it:</p>\n\n<pre><code>^([01]\\d|2[0-3]):?([0-5]\\d)$\n</code></pre>\n\n<p>The expression reads:</p>\n\n<pre><code>^        Start of string (anchor)\n(        begin capturing group\n  [01]   a \"0\" or \"1\"\n  \\d     any digit\n |       or\n  2[0-3] \"2\" followed by a character between 0 and 3 inclusive\n)        end capturing group\n:?       optional colon\n(        start capturing\n  [0-5]  character between 0 and 5\n  \\d     digit\n)        end group\n$        end of string anchor\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>To keep the colon optional and allow all valid times:</p>\n\n<pre><code>([01]\\d|2[0-3]):?[0-5]\\d\n</code></pre>\n\n<p>Note that this assumes midnight will always be 0000 and never 2400.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://tgaw.wordpress.com/2007/03/15/javascript-regular-expression-for-military-time/\" rel=\"nofollow\">Here's a blog post, looking for the same thing</a> and a bunch of potential answers -- most of which don't work, but there is good discussion as to why each fails.</p>\n\n<p>Of course, <a href=\"http://stackoverflow.com/questions/1494671/what-is-a-javascript-regular-expression-for-matching-time-in-military-24-hour-f/1494690#1494690\">explicitly long and accurate</a> is always a possibility!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Remove the <code>':'</code> if the string has one, then if the string is of the form <code>\"DDDD\"</code>, convert it into an <code>int</code> and compare it to 2400.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is the one I've just come up with:</p>\n\n<p>(^((2[0-4])|([01]?[0-9])):[0-5][0-9]$)|(^((1[0-2])|(0?[1-9])(:[0-5][0-9])?)[pa]m$)</p>\n\n<p>Accepts:</p>\n\n<p>2pm\n4:30am\n07:05am\n18:45\n6:19\n00:55</p>\n\n<p>does not accept \"00:05am\" - I am not sure if there is such time as \"0am\"</p>\n\n<p>If you feel that \":\" is optional for 24h time format (military) - just add a question mark after it</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is a better solution than the top one above for military plus a civilian solution.</p>\n\n<p>Military</p>\n\n<pre><code>^(((([0-1][0-9])|(2[0-3])):?[0-5][0-9])|(24:?00))\n</code></pre>\n\n<p>I believe the or in the highest rated response is not properly parsing the subsets before and after without the extra set of parenthesis to group them. Also, I'm not certain that the <code>\\d</code> is just <code>0-9</code> in all iterations. It technically includes the special <code>[[:digit:]]</code> although I've never dealt with that being an issue before. Any how, this should provide every thing including the crossover 2400/24:00</p>\n\n<p>Civilian</p>\n\n<pre><code>^([0-9]|([1][0-2])):[0-5][0-9][[:space:]]?([ap][m]?|[AP][M]?)\n</code></pre>\n\n<p>This is a nice Civilian version that allows for the full range formatted like 12:30PM, 12:30P, 12:30pm, 12:30p, 12:30 PM, 12:30 P, 12:30 pm, or 12:30 p but requires the morning or post meridian characters to be the same case if both are included (no Am or pM).</p>\n\n<p>I use both of these in a bit of JavaScript to validate time strings.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I would like a JavaScript regular expression that will match time using the 24 hour clock, where the time is given with or without the colon.</p>\n\n<p>For example, I would like to match time in the following formats:</p>\n\n<ul>\n<li><code>0800</code></li>\n<li><code>23:45</code></li>\n<li><code>2345</code></li>\n</ul>\n\n<p>but that would not match invalid times such as</p>\n\n<ul>\n<li><code>34:68</code></li>\n<li><code>5672</code></li>\n</ul>\n",
            "last_activity_date": 1412792846,
            "question_id": 1494671,
            "score": 15,
            "tags": [
                "javascript",
                "regex",
                "time"
            ],
            "title": "Regular expression for matching time in military (24 hour) format"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If that number represents milliseconds, use the Date's constructor : </p>\n\n<pre><code>var myDate = new Date(1238540400000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You need to extract the number from the string, and pass it into the Date constructor:</p>\n\n<pre><code>var x = [ {\"id\":1,\"start\":\"\\/Date(1238540400000)\\/\"}, {\"id\":2,\"start\":\"\\/Date(1238626800000)\\/\"} ];\n\nvar myDate = new Date(x[0].start.match(/\\d+/)[0] * 1);\n</code></pre>\n\n<p>The parts are:</p>\n\n<pre><code>x[0].start                                - get the string from the JSON\nx[0].start.match(/\\d+/)[0]                - extract the numeric part\nx[0].start.match(/\\d+/)[0] * 1            - convert it to a numeric type\nnew Date(x[0].start.match(/\\d+/)[0] * 1)) - Create a date object\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<h2>If you use jQuery</h2>\n\n<p>In case you use jQuery on the client side, you may be interested in <a href=\"http://erraticdev.blogspot.com/2010/12/converting-dates-in-json-strings-using.html\" rel=\"nofollow\">this blog post</a> that provides code how to globally extend jQuery's <code>$.parseJSON()</code> function to automatically convert dates for you.</p>\n\n<p>You don't have to change existing code in case of adding this code. It doesn't affect existing calls to <code>$.parseJSON()</code>, but if you start using <code>$.parseJSON(data, true)</code>, dates in <code>data</code> string will be automatically converted to Javascript dates.</p>\n\n<p>It supports Asp.net date strings: <code>/Date(2934612301)/</code> as well as ISO strings <code>2010-01-01T12_34_56-789Z</code>. The first one is most common for most used back-end web platform, the second one is used by native browser JSON support (as well as other JSON client side libraries like json2.js).</p>\n\n<p>Anyway. Head over to blog post to get the code.\n<a href=\"http://erraticdev.blogspot.com/2010/12/converting-dates-in-json-strings-using.html\" rel=\"nofollow\">http://erraticdev.blogspot.com/2010/12/converting-dates-in-json-strings-using.html</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>i use this:</p>\n\n<pre><code> function parseJsonDate(jsonDateString) {\n                return new Date(parseInt(jsonDateString.replace('/Date(', '')));\n            }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/206384/how-to-format-a-json-date\">How to format a JSON date?</a>  </p>\n</blockquote>\n\n\n\n<p>I have the following result from a $getJSON call from JavaScript.  How do I convert the start property to a proper date in JavaScript?</p>\n\n<blockquote>\n  <p>[\n  {\"id\":1,\"start\":\"/Date(1238540400000)/\"},\n  {\"id\":2,\"start\":\"/Date(1238626800000)/\"}\n  ]</p>\n</blockquote>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1365103721,
            "question_id": 1244094,
            "score": 15,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "Converting json results to a date"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p><a href=\"http://weblogs.asp.net/jgalloway/archive/2008/02/10/getting-javascript-and-asp-net-talking-outside-of-ajax.aspx\" rel=\"nofollow\">This article</a> describes <del>the most pragmatic solution</del> several pragmatic solutions to your problem.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I'm not sure about SCORM or .ashx files (no experience there) but as far as getting values from ASP.NET you can do all sorts of things like </p>\n\n<pre><code>var xyz = '&lt;%= variable %&gt;';\n</code></pre>\n\n<p>from within your ASP.NET page. There are various ways to accomplish this but the end result is that the ASP.NET page renders the values of the variable in the HTML (or JavaScript) that is sent to the browser.</p>\n\n<p>This is a generic ASP.NET and JavaScript answer, there may be a more elegant solution out there for you.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Probably <del>best</del> easiest to expose them as properties of your page (or master page if used on every page) and reference them via page directives.</p>\n\n<pre><code> &lt;script type=\"text/javascript\"&gt;\n     var userID = '&lt;%= UserID %&gt;';\n     var courseID = '&lt;%= CourseID %&gt;';\n\n     .... more stuff....\n &lt;/script&gt;\n</code></pre>\n\n<p>Then set the values on Page_Load (or in the Page_Load for the master page).</p>\n\n<pre><code>  public void Page_Load( object source, EventArgs e )\n  {\n\n        UserID = Session[\"userID\"];\n        CourseID = Session[\"courseID\"];\n        ...\n  }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>You can also use HTTP cookies. That approach is nice if you need to pass values the other direction as well.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>All the answers here that suggest something like</p>\n\n<pre><code>var userID = '&lt;%= UserID %&gt;';\n</code></pre>\n\n<p>are all missing something important if the variable you are embedded can contain arbitrary string data. The embedded string data needs to be escaped so that if it contains backslashes, quotes or unprintable characters they don't cause your Javascript to error.</p>\n\n<p>Rick Strahl has some suggestions for the escaping code needed <a href=\"http://www.west-wind.com/weblog/posts/114530.aspx\">here</a>.\nUsing Rick's code the embedded variable will look like this:</p>\n\n<pre><code>var userId = &lt;%= EncodeJsString(UserID) %&gt;;\n</code></pre>\n\n<p>Note that there are no quotes now, Rick's code wraps the escaped string with quotes.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here are the steps that you will have to take:</p>\n\n<p>In your code behind page:</p>\n\n<pre><code>private int _userId;\nprivate int _courseId;\nprotected int CourseId\n{\n  get { return _courseId;}\n  set { _courseId = value;}\n}\nprotected int UserId\n{\n get { return _userId;}\n\nset { _userId = value;}\n}\n</code></pre>\n\n<p>Step 2 : based on your requirement now you have to set up those properties. The catch is that these properties should be set before they are referenced from the JavaScript. Maybe something like this in the <code>Page_Load</code> event:</p>\n\n<pre><code>_userId = Session[\"userId\"];\n_courseId = Request.QueryString[\"CourseId\"] != null ? Request.QueryString[\"CourseId\"] : String.empty;\n</code></pre>\n\n<p>Of course you can parse them to appropriate types based on your requirements.</p>\n\n<p>Finally, you can reference them in JavaScript as follows:</p>\n\n<pre><code>var currentUserId = '&lt;% = UserId %&gt;';\nvar currentCouseId = '&lt;% = CourseId %&gt;';\n</code></pre>\n\n<p>This should definitely work. I have used this approach many times.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I am in the process of doing the same thing.  I am just passing whatever values I may need upon initialization and such in the API object's constructor.  I have not seen any requirements as to how the API object can be created, just how it is located in the SCO's code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/a/553836/505893\">@tvanfosson's answer</a> is how I have normally done this in the past, but was just trying to think of something a bit more elegant.  Thought I'd throw this out there.</p>\n\n<p>You can set up a HashTable in the codebehind and also initialize a <code>JavaScriptSerializer</code>:</p>\n\n<pre><code>Protected json As New System.Web.Script.Serialization.JavaScriptSerializer\nProtected jsvars As New Hashtable\n</code></pre>\n\n<p>Then set variables like this:</p>\n\n<pre><code>jsvars.Add(\"name\", \"value\")\n</code></pre>\n\n<p>Then serialize the variables into JavaScript in your page:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var vars = &lt;%=json.Serialize(jsvars)%&gt;;\n    alert(vars.name);\n&lt;/script&gt;\n</code></pre>\n\n<p>This ensures that all variables are properly escaped and also minimizes the code if you need to work with a lot of variables.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>In <a href=\"https://blog.mariusschulz.com/2014/02/05/passing-net-server-side-data-to-javascript\" rel=\"nofollow\">Passing .NET Server-Side Data to JavaScript</a>, I list various approaches, including:</p>\n\n<ol>\n<li>Fetching Data by Making an AJAX Request</li>\n<li>Loading Data Through an External JavaScript File</li>\n<li>Opening a Persistent Connection with SignalR</li>\n<li>Attaching Data to HTML Elements</li>\n<li>Assigning Data Directly to a JavaScript Variable</li>\n<li>Serializing a .NET Object into a JavaScript Literal</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have created a SCORM API for our LMS and right now I am using hard coded userID and courseID variables (variables that reference things in the database). I need to pass the real userID and courseID instead of using hard coded ones. I know the userID is stored in the session and the courseID is passed over from the launch page.</p>\n\n<p>How do I get these into JavaScript so I can include them in my calls to the .ashx that handles the SCORM calls?</p>\n",
            "last_activity_date": 1416160795,
            "question_id": 553813,
            "score": 15,
            "tags": [
                "javascript",
                "asp.net",
                "escaping",
                "scorm"
            ],
            "title": "How do I give JavaScript variables data from ASP.NET variables?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You can only keep track of the postback if you are using AJAX requests or have a hidden field of some sort that the javascript reads on page load. Otherwise the page is regenerated and all POST data is lost; as you would expect and hope.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>ASPX:</p>\n\n<pre><code>&lt;input type=\"hidden\" id=\"_ispostback\" value=\"&lt;%=Page.IsPostBack.ToString()%&gt;\" /&gt;\n</code></pre>\n\n<p>Client-side Script:</p>\n\n<pre><code>function isPostBack() { //function to check if page is a postback-ed one\n  return document.getElementById('_ispostback').value == 'True';\n}\n</code></pre>\n\n<p>PS: I have not tested it but I've done somthing similar before and it works.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>See following:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\nfunction invokeMeMaster() {\n\nvar chkPostBack = '&lt;%= Page.IsPostBack ? \"true\" : \"false\" %&gt;';\n\nif (chkPostBack == 'false') {\n\nalert('Only the first time');\n\n}\n}\n\n\n\nwindow.onload = function() { invokeMeMaster(); };\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you want to check whether the current page will be a postback if the user clicks on a submit button, you can check for the presence of ViewState:</p>\n\n<pre><code>&lt;input type=\"hidden\" name=\"__VIEWSTATE\" id=\"__VIEWSTATE\" value=\"xxxxx\" /&gt;\n</code></pre>\n\n<p>You can use something like <code>document.getElementById(\"__VIEWSTATE\")</code> or the jQuery equivalent.</p>\n\n<p>However, if you want to see whether the current page was generated in response to a postback, then you need to insert that data into the page on the server side first.</p>\n\n<p>For example:</p>\n\n<pre><code>function isPostBack() {\n  return &lt;%= Page.IsPostBack %&gt;;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>In some cases, you may want to check for postback without any server-side code.  For example, in SharePoint, you cannot have code blocks in SharePoint Designer pages, so you can't use any solution that requires &lt;%=something %>.  Here is an alternative that involves no server-side code:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n function isPostBack()\n {\n\n  return document.referrer.indexOf(document.location.href) &gt; -1;\n }\n\n if (isPostBack()){\ndocument.write('&lt;span style=\"color:red;\"&gt;Your search returned no results.&lt;/span&gt;&lt;br/&gt;');\n }\n &lt;/script&gt;\n</code></pre>\n\n<p>One caveat (or feature, depending on how you look at it), this will detect not just postbacks, but any instance where the page links to itself.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>As JavaScript shouldn't be written with server-side code, and injecting new elements into the page seems like overkill, it seems to me that the simplest solution is to add <a href=\"http://www.w3.org/html/wg/drafts/html/master/single-page.html#attr-data-%2a\" rel=\"nofollow\"><code>[datat-*]</code></a> attributes to the <code>&lt;head&gt;</code> element:</p>\n\n<sub>In Page_Load:</sub>\n\n<pre><code>Page.Header.Attributes[\"data-is-postback\"] IsPostBack ? \"true\" : \"false\";\n</code></pre>\n\n<p>This can then be accessed as:</p>\n\n<sub>jQuery:</sub>\n\n<pre><code>$('head').data('isPostback');\n</code></pre>\n\n<sub>Vanilla JS:</sub>\n\n<pre><code>document.head.getAttribute('data-is-postback') === 'true';\n</code></pre>\n\n<p>Of course, if you treat the <code>[data-is-postback]</code> attribute as a boolean attribute, you could alternatively use:</p>\n\n<sub>In Page_Load:</sub>\n\n<pre><code>if (IsPostBack)\n{\n    Page.Header.Attributes.Add(\"data-is-postback\", \"\");\n}\nelse\n{\n    Page.Header.Attributes.Remove(\"data-is-postback\");\n}\n</code></pre>\n\n<sub>jQuery:</sub>\n\n<pre><code>$('head').is('[data-is-postback]');\n</code></pre>\n\n<sub>Vanilla JS:</sub>\n\n<pre><code>document.head.hasAttribute('data-is-postback')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here is solution using jQuery:</p>\n\n<pre><code>$(\"a[href^='javascript:__doPostBack']\").click(function () {\n    alert('ok');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have a solution that worked for me.</p>\n\n<pre><code>// Postback catch\nvar prm = Sys.WebForms.PageRequestManager.getInstance();\nprm.add_endRequest(function (s, e) {\n    alert(\"post back\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How to detect/track/check postback in javascript(e.g in asp.net Page.isPostBack())? \nAny suggestion?</p>\n",
            "last_activity_date": 1425631998,
            "question_id": 1857606,
            "score": 14,
            "tags": [
                "asp.net",
                "javascript",
                "postback"
            ],
            "title": "How to detect/track postback in javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>Date.parse('01/01/2011 10:20:45') &gt; Date.parse('01/01/2011 5:10:10')\n&gt; true\n</code></pre>\n\n<p>The 1st January is an arbitrary date, doesn't mean anything.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>Try this code.</p>\n\n<pre><code>var startTime = \"05:01:20\";\nvar endTime = \"09:00:00\";\nvar regExp = /(\\d{1,2})\\:(\\d{1,2})\\:(\\d{1,2})/;\nif(parseInt(endTime .replace(regExp, \"$1$2$3\")) &gt; parseInt(startTime .replace(regExp, \"$1$2$3\"))){\nalert(\"End time is greater\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could compare the two values right after splitting them with ':'.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As <em>Felix Kling</em> said in the comments, provided your times are based on a 24 hour clock (and they should be if there's no AM/PM) and provided they are always in the format <code>HH:MM:SS</code> you can do a direct string comparison:</p>\n\n<pre><code>var str1 = \"10:20:45\",\n    str2 = \"05:10:10\";\n\nif (str1 &gt; str2)\n    alert(\"Time 1 is later than time 2\");\nelse\n    alert(\"Time 2 is later than time 1\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>Try this code for the 24 hrs format of time.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar a=\"12:23:35\";\nvar b=\"15:32:12\";\nvar aa1=a.split(\":\");\nvar aa2=b.split(\":\");\n\nvar d1=new Date(parseInt(\"2001\",10),(parseInt(\"01\",10))-1,parseInt(\"01\",10),parseInt(aa1[0],10),parseInt(aa1[1],10),parseInt(aa1[2],10));\nvar d2=new Date(parseInt(\"2001\",10),(parseInt(\"01\",10))-1,parseInt(\"01\",10),parseInt(aa2[0],10),parseInt(aa2[1],10),parseInt(aa2[2],10));\nvar dd1=d1.valueOf();\nvar dd2=d2.valueOf();\n\nif(dd1&lt;dd2)\n{alert(\"b is greater\");}\nelse alert(\"a is greater\");\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have two time strings in <strong>HH:MM:SS</strong> format. For example, <code>str1</code> contains <code>10:20:45</code>,  <code>str2</code> contains <code>5:10:10</code>.</p>\n\n<p>How can I compare the above values?</p>\n",
            "last_activity_date": 1364242047,
            "question_id": 6212305,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "How can I compare two time strings in the format HH:MM:SS?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I have recently had this exact problem.  Initially, we were using jQuery's <code>serializeArray()</code> method, but that does not include form elements that are disabled.  We will often disable form elements that are \"sync'd\" to other sources on the page, but we still need to include the data in our serialized object.  So <code>serializeArray()</code> is out.  We used the <code>:input</code> selector to get all input elements (both enabled and disabled) in a given container, and then <code>$.map()</code> to create our object.</p>\n\n<pre><code>var inputs = $(\"#container :input\");\nvar obj = $.map(inputs, function(n, i)\n{\n    var o = {};\n    o[n.name] = $(n).val();\n    return o;\n});\nconsole.log(obj);\n</code></pre>\n\n<p>Note that for this to work, each of your inputs will need a <code>name</code> attribute, which will be the name of the property of the resulting object.</p>\n\n<p>That is actually slightly modified from what we used.  We needed to create an object that was structured as a .NET IDictionary, so we used this: (I provide it here in case it's useful)</p>\n\n<pre><code>var obj = $.map(inputs, function(n, i)\n{\n    return { Key: n.name, Value: $(n).val() };\n});\nconsole.log(obj);\n</code></pre>\n\n<p>I like both of these solutions, because they are simple uses of the <code>$.map()</code> function, and you have complete control over your selector (so, which elements you end up including in your resulting object).  Also, no extra plugin required.  Plain old jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I'm using this very little jQuery plugin, that I've extended from DocumentCloud:</p>\n\n<p><a href=\"https://github.com/documentcloud/documentcloud/blob/master/public/javascripts/lib/jquery_extensions.js\" rel=\"nofollow\">https://github.com/documentcloud/documentcloud/blob/master/public/javascripts/lib/jquery_extensions.js</a></p>\n\n<p>It is basically two lines of code, but it requires _.js (Underscore.js), since it is based on a <code>reduce</code> function.</p>\n\n<pre><code>serializeJSON: function(exclude) {\n      exclude || (exclude = [])\n      return _.reduce(this.serializeArray(), function(hash, pair) {\n        pair.value &amp;&amp; !(pair.name in exclude) &amp;&amp; (hash[pair.name] = pair.value);\n        return hash;\n      }, {});\n    }\n</code></pre>\n\n<p>Extensions:</p>\n\n<ul>\n<li>It doesn't serialize an input value if it's null</li>\n<li>It can exclude some inputs by passing an array of input names to the <code>exclude</code> argument <code>i.e. [\"password_confirm\"]</code></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Using underscore &amp; jQuery </p>\n\n<pre><code>var formdata = $(\"#myform\").serializeArray();\nvar data = {};\n_.each(formdata, function(element){\n// Return all of the values of the object's properties.\n  var value = _.values(element);\n// name : value \n  data[value[0]] = value[1];\n});\nconsole.log(data); //Example =&gt; {name:\"alex\",lastname:\"amador\"}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use the <a href=\"https://github.com/marioizquierdo/jquery.serializeJSON\" rel=\"nofollow\">jQuery.serializeJSON</a> plugin.\nIt converts forms using the same format as what you would find in a Rails params object, which is very standard and well tested.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there any better solution to convert a form data that is already serialized by jQuery function serialize(), when the form contains multiple input Array fields. I want to be able to convert the form data in to a JSON object to recreate some other informative tables. So tell me a better way to get the serialize string converted as a JSON object.</p>\n\n<pre><code>&lt;form id='sampleform'&gt;\n&lt;input name='MyName' type='text' /&gt; // Raf\n\n&lt;!--array input fields below--&gt;\n&lt;input name='friendname[]' type='text' /&gt; // Bily\n&lt;input name='fiendemail[]' type='text' /&gt; // bily@someemail.com\n\n&lt;!--duplicated fields below to add more friends --&gt;\n&lt;input name='friendname[]' type='text' /&gt; // Andy\n&lt;input name='fiendemail[]' type='text' /&gt; // Andy@somwhere.com\n\n&lt;input name='friendname[]' type='text' /&gt; // Adam\n&lt;input name='fiendemail[]' type='text' /&gt; // Adam@herenthere.com\n&lt;/form&gt;\n</code></pre>\n\n<p>The jquery method applied to get the data</p>\n\n<pre><code>var MyForm = $(\"#sampleform\").serialize();\n/** result : MyName=Raf&amp;friendname[]=Billy&amp;fiendemail[]=bily@someemail.com&amp;friendname[]=Andy&amp;fiendemail[]=Andy@somwhere.com&amp;friendname[]=Adam&amp;fiendemail[]=Adam@herenthere.com\n*/\n</code></pre>\n\n<p>how do I make this data in to a JSON object? \nwhich should have the following example JSON data from the above form.</p>\n\n<pre><code>{\"MyName\":\"raf\",\n\"friendname\":[{\"0\":\"Bily\"},{\"1\":\"Andy\"},{\"2\":\"Adam\"}],\n\"friendemail\":[{\"0\":\"bily@someemail.com\"},{\"1\":\"Andy@somwhere.com\"},{\"2\":\"Adam@herenthere.com\"}]}\n</code></pre>\n",
            "last_activity_date": 1394661681,
            "question_id": 3277655,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "serialization"
            ],
            "title": "How to convert Jquery.serialize() data to JSON object?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You set the window's onbeforeunload property to a function.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/276660/how-can-i-override-the-onbeforeunload-dialog-and-replace-it-with-my-own\">This post has a good example on how to do it.</a></p>\n\n<p>Or another example:</p>\n\n<pre><code>&lt;script language=\"JavaScript\"&gt;\n  var needToConfirm = true;\n\n  window.onbeforeunload = confirmExit;\n  function confirmExit()\n  {\n    if (needToConfirm)\n      return message to display in dialog box;\n  }\n&lt;/script&gt;\n\n...\n\n&lt;input type=\"Submit\" value=\"Save\" onclick=\"needToConfirm = false;\" /&gt;\n</code></pre>\n\n<p>And to set neetToConfirm for your form you can:</p>\n\n<pre><code>$(document).ready(function() { \n    $(':input', document.myForm).bind(\"change\", function() { needToConfirm = true; }); // Prevent accidental navigation away\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>JQuery UI may be useful for you - see <a href=\"http://jqueryui.com/demos/dialog/\" rel=\"nofollow\">this link</a>. It shows a few different types of dialog - the one you want is \"Modal Confirmation\" I think. Bear in mind though, the JQuery UI library is pretty hefty, so it may be that it'd be better for you to look up a more bespoke option (a few came up by searching for JQuery Confirm Modal). I can't vouch for the quality of those solutions as I've never tried them.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Following worked for me;</p>\n\n<pre><code> $(window).unload(function() {\n                if(event.clientY &lt; 0) {\n                    //do whatever you want when closing the window..\n                }\n            });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I want to ask user whether he really want to leave the page or not, when he clicks the close button just like it done in google docs. How to do that using jquery?</p>\n",
            "last_activity_date": 1321490019,
            "question_id": 1565304,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "window"
            ],
            "title": "Jquery prevent window closing"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>delete this line:</p>\n\n<pre><code>jsonp: 'jsonp_callback',\n</code></pre>\n\n<p>Or replace this line:</p>\n\n<pre><code>url: 'http://url.of.my.server/submit?callback=json_callback',\n</code></pre>\n\n<p>because currently you are asking jQuery to create a random callback function name with <code>callback=?</code> and then telling jQuery that you want to use <code>jsonp_callback</code> instead.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This is what I do on mine</p>\n\n<pre><code> $(document).ready(function () {\nif ($('#userForm').valid()) {\n                var formData = $(\"#userForm\").serializeArray();\n                $.ajax({\n                    url: 'http://www.domain.com/user/' + $('#Id').val() + '?callback=?',\n                    type: \"POST\",\n                    data: formData,\n                    dataType: \"jsonp\",\n                    jsonpCallback: \"localJsonpCallback\"\n                });\n    });\n\n function localJsonpCallback(json) {\n        if (!json.Error) {\n            $('#resultForm').submit();\n        }\n        else {\n            $('#loading').hide();\n            $('#userForm').show();\n            alert(json.Message);\n        }\n    }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>I didn't quite understand how to work with the callback for the ajax funcion of JQuery.</p>\n\n<p>I have the following code in the JavaScript:</p>\n\n<pre><code>    try {\n        $.ajax({\n            url: 'http://url.of.my.server/submit?callback=?',\n            cache: false,\n            type: 'POST',\n            data: $(\"#survey\").serialize(),\n            dataType: \"jsonp\",\n            timeout: 200,\n            crossDomain: true,\n            jsonp: 'jsonp_callback',\n            success: function (data, status) {\n                mySurvey.closePopup();\n            },\n            error: function (xOptions, textStatus) {\n                mySurvey.closePopup();\n            }\n        });\n    } catch (err) {\n        mySurvey.closePopup();\n    }\n</code></pre>\n\n<p>And on the server side (AppEngine / Python) I get the value of the callback parameter and respond with</p>\n\n<pre><code>    self.response.headers['Content-Type'] = 'application/json; charset=utf-8'\n    self.response.out.write(callback + '({\"msg\": \"ok\"});')\n</code></pre>\n\n<p>But then I get an <code>\"Error: jQuery152042227689944248825_1317400799214 is not a function\"</code> on the browser.</p>\n\n<p>What is the proper way to handle this? Right now I get the results that I need, but the fact that I know it's not right is bothering me.</p>\n",
            "last_activity_date": 1317403965,
            "question_id": 7613815,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "jsonp"
            ],
            "title": "Callback function for JSONP with JQuery ajax"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><strong>Yes it is.</strong></p>\n\n<pre><code>var iframe = document.getElementById(\"your-iframes-id\").contentWindow.document;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In order for this to not be restricted by the same origin policy, you will probably need to do this in both the pages:</p>\n\n<pre><code>document.domain = \"acmssite.com\";\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 32
                }
            ],
            "body": "<p>I am working on a CMS site who's domain is:</p>\n\n<p><a href=\"http://www.acmssite.com\">http://www.acmssite.com</a></p>\n\n<p>They have a sub-domain where they store a form system:</p>\n\n<p><a href=\"http://www.forms.acmssite.com\">http://www.forms.acmssite.com</a></p>\n\n<p>I have an iframe on the first that looks at a form in the latter.</p>\n\n<p>I need to run scripts to manipulate the latter from the former and was wondering is this possible?</p>\n",
            "last_activity_date": 1305729996,
            "question_id": 6046558,
            "score": 12,
            "tags": [
                "javascript",
                "iframe",
                "cross-domain",
                "subdomain"
            ],
            "title": "Cross sub domain iframes and JavaScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I modified an example from the <a href=\"http://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">Fisher-Yates Shuffle entry on Wikipedia</a> to shuffle strings:</p>\n\n<pre><code>String.prototype.shuffle = function () {\n    var a = this.split(\"\"),\n        n = a.length;\n\n    for(var i = n - 1; i &gt; 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var tmp = a[i];\n        a[i] = a[j];\n        a[j] = tmp;\n    }\n    return a.join(\"\");\n}\nconsole.log(\"the quick brown fox jumps over the lazy dog\".shuffle());\n//-&gt; \"veolrm  hth  ke opynug tusbxq ocrad ofeizwj\"\n\nconsole.log(\"the quick brown fox jumps over the lazy dog\".shuffle());\n//-&gt; \"o dt hutpe u iqrxj  yaenbwoolhsvmkcger ozf \"\n</code></pre>\n\n<p>More information can be found in <a href=\"http://stackoverflow.com/questions/962802/is-it-correct-to-use-javascript-array-sort-method-for-shuffling/962829#962829\">Jon Skeet's answer</a> to <a href=\"http://stackoverflow.com/questions/962802/is-it-correct-to-use-javascript-array-sort-method-for-shuffling\">Is it correct to use JavaScript Array.sort() method for shuffling?</a>. </p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p><strong>If \"truly\" randomness is important, I recommend against this. See my below edit.</strong></p>\n\n<p>I just wanted to add my favorite method for a little variety ;)</p>\n\n<p>Given a string:</p>\n\n<pre><code>var str = \"My bologna has a first name, it's O S C A R.\";\n</code></pre>\n\n<p>Shuffle in one line:</p>\n\n<pre><code>var shuffled = str.split('').sort(function(){return 0.5-Math.random()}).join('');\n</code></pre>\n\n<p>Outputs:</p>\n\n<pre><code>oa, a si'rSRn f gbomi. aylt AtCnhO ass eM\nas'oh ngS li Ays.rC nRamsb Oo ait a ,eMtf\ny alCOSf e gAointsorasmn bR Ms .' ta ih,a\n</code></pre>\n\n<p>EDIT: As @PleaseStand has pointed out, this doesn't meet OP's question at all since it does suffer from \"Microsoft's Browser Choice shuffle\" code. This isn't a very good randomizer if your string needs to be close to random. It is however, awesome at quickly \"jumbling\" your strings, where \"true\" randomness is irrelevant.</p>\n\n<p>The article he links below is a great read, but explains a completely different use case, which affects statistical data. I personally can't imagine a practical issue with using this \"random\" function on a string but as a coder, you're responsible for knowing when <em>not</em> to use this.</p>\n\n<p>I've left this here for all the casual randomizers out there.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<pre><code>String.prototype.shuffle=function(){\n\n   var that=this.split(\"\");\n   var len = that.length,t,i\n   while(len){\n    i=Math.random()*len-- |0;\n    t=that[len],that[len]=that[i],that[i]=t;\n   }\n   return that.join(\"\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In particular, I want to make sure to avoid the mistake made in Microsoft's Browser Choice shuffle code. That is, I want to make sure that each letter has an equal probability of ending up in each possible position.</p>\n\n<p>e.g. Given \"ABCDEFG\", return something like \"GEFBDCA\".</p>\n",
            "last_activity_date": 1425233124,
            "question_id": 3943772,
            "score": 12,
            "tags": [
                "javascript",
                "string"
            ],
            "title": "How do I shuffle the characters in a string in JavaScript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Not sure if I understood your question correctly, but I would do:</p>\n\n<pre><code>$.each(IssuesArray, function(i, item){\n  if (item.ID == IDToBeRemoved) IssuesArray.splice(i, 1);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><code>n</code> is your list item, so something like this should do the job:</p>\n\n<pre><code>$.grep(issuesArray, function(n) { return n.ID != \"2\"; })\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>Without using jQuery or other frameworks:</p>\n\n<pre><code>var newArray = [];\nvar i=0, len=IssuesArray.length;\nvar bad_id = \"2\"; // or whatever\nwhile(i&lt;len) {\n  if(IssuesArray[i].ID !== bad_id) {\n    newArray.push(IssuesArray[i++]);\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Simplify??</p>\n\n<pre><code>var IssuesArray = {\n  1: \"Issue1\",\n  2: \"Issue2\", \n  3: \"Issue3\"\n};\nvar issue2 = IssuesArray[2];\n</code></pre>\n\n<p>Why a list of hashes when a single hash will do?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var spliceID = function(id, arr) {\n    $(arr).each(function(i, el) {\n        if (el.ID == id) {\n            arr.splice(i,1);\n            return false;\n        }\n    });\n    return arr;\n}\n\nconsole.log(spliceID('2', IssuesArray));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm working with an array of JavaScript Objects as such:</p>\n\n<pre><code>var IssuesArray = [{\"ID\" : \"1\", \"Name\" : \"Issue1\"}, \n                   {\"ID\" : \"2\", \"Name\" : \"Issue2\"}, \n                   {\"ID\" : \"3\", \"Name\" : \"Issue3\"}];\n</code></pre>\n\n<p>My end effort is trying to remove an object from the array when I know the ID of the object. I'm trying to use code that is something like this:</p>\n\n<pre><code>$.grep(IssuesArray, function(n, i) {\n    return i != $.inArray(\"2\", IssuesArray);\n});\n</code></pre>\n\n<p>So this shows that I'm trying to use jQuery grep to remove an element by index (i), which I am trying to retrieve by using jQuery inArray. Of course the code above will not work because \"2\" should correspond to an item in the array, which are all JavaScript objects (an object will never equal \"2\"). I need something like: </p>\n\n<pre><code>$.inArray(javascriptObject.Name==\"2\", IssuesArray);\n</code></pre>\n\n<p>Has anyone ever had any success using inArray to get indexes of JavaScript objects, using a field value within that object? Any help would be appreciated. Thanks.</p>\n\n<p><strong>UPDATE/CLARIFICATION:</strong> A couple people have been confused by my question, but I received an answer that works nonetheless. I'm using:</p>\n\n<pre><code>IssuesArray = $.grep(IssuesArray, function(n) {\n    return n.ID != \"2\";\n});\n</code></pre>\n\n<p>I think I was thinking about it too deep, when the solution was really pretty easy. I simply wanted to remove a JavaScript object from an array, so long as I knew a particular property's value in that object. The above solution uses jQuery's grep to return everything from the array except any object whose ID == \"2\". As usual, thanks for the quick answers. A couple answers were good solutions and would have worked using (using \"splice\", for example), but this solution seems to be the shortest most straightforward. Thanks again.</p>\n",
            "last_activity_date": 1380820397,
            "question_id": 1758937,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "arrays"
            ],
            "title": "Using jQuery inArray with array of JavaScript Objects"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You can place your files (app.html, sportStore.js, ...) under the public folder of your deployd project and use the following URL\n<code>http://localhost:5500/app.html</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What I did to solve that issue was starting Chrome with the \"--disable-web-security\" flag. But first go to Task Manager and close every chrome process you have there.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Bic, upgrade your version of deployd to version 0.6.10.  This did the trick for me.  I was now able to process a get request.  It doesn't seem like it's an error with AngularJS code nor Adam Freeman's book.</p>\n\n<p>In the book, he does mention that he includes the deployd program with the source code download on <a href=\"http://www.apress.com/9781430264484\">http://www.apress.com/9781430264484</a>.  That's version 0.6.9.  I'm sure it works fine with it.  It'll be easier than to try to find the 0.6.10 version.. which is what I did.  Should you want that version, here it is:</p>\n\n<p><a href=\"https://www.versioneye.com/nodejs/deployd/0.6.10\">https://www.versioneye.com/nodejs/deployd/0.6.10</a></p>\n\n<p>It's not an installer so you'll have to paste it in your deployd directory, replacing the <code>node_modules</code>.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Just run \"npm update\" in your deployd installation folder and it will make sure you're updated to the latest version 0.6.10. This resolved the issue for me after reading javaauthority's answers (Thanks for that :)).</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I used fiddler to modify the responses from deployd. This link will show how to add a custom rule to fiddler to add <code>Access-Control-Allow-Origin: *</code> header to all responses. It works great.</p>\n\n<p><a href=\"http://www.leggetter.co.uk/2010/03/19/using-fiddler-to-help-develop-cross-domain-capable-javascript-web-applications.html\" rel=\"nofollow\">http://www.leggetter.co.uk/2010/03/19/using-fiddler-to-help-develop-cross-domain-capable-javascript-web-applications.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Angular also sends custom headers that DPD rejects, put this in your code for dev to remove these and DPD will work:</p>\n\n<pre><code>delete $http.defaults.headers.common['X-Requested-With'];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>While I provided the correct answer and others have improved it, what if you're not using the Deployd web server mentioned in the book?  I'm using Wildfly (JBOSS 8.X) and I had to make the CORS issue work for it.  I created a simple Java class called CorsFilter.  The imports should be fairly easy to find if you're running Wildfly.</p>\n\n<p>Hope this helps other people who are having similar issues with different web servers.</p>\n\n<p>Please note:  responseContext.getHeaders().add(\"Access-Control-Allow-Origin\", \"*\");</p>\n\n<p>Notice the * in the above line?  This would allow ANY requests to succeed.  This is usually fine for local development work, but tighter security controls should be implemented for Production/Staging environments.  For example, you could only accept request from a certain IP address.</p>\n\n<pre><code>import org.jboss.resteasy.annotations.interception.HeaderDecoratorPrecedence;\nimport org.jboss.resteasy.annotations.interception.ServerInterceptor;\n\nimport javax.servlet.FilterChain;\nimport javax.servlet.ServletException;\nimport javax.servlet.ServletRequest;\nimport javax.servlet.ServletResponse;\nimport javax.servlet.annotation.WebFilter;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.ws.rs.container.ContainerRequestContext;\nimport javax.ws.rs.container.ContainerResponseContext;\nimport javax.ws.rs.container.ContainerResponseFilter;\nimport javax.ws.rs.ext.Provider;\nimport java.io.IOException;\n\n/**\n * Class to .\n * User: Java Authority\n * Date: 12/6/2014\n * Time: 12:38 PM\n */\n@Provider\n@ServerInterceptor\n@HeaderDecoratorPrecedence\n@WebFilter\npublic class CorsFilter implements ContainerResponseFilter {\n\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n        HttpServletRequest r = (HttpServletRequest)request;\n        HttpServletResponse s = (HttpServletResponse)response;\n        chain.doFilter(request, response);\n    }\n\n\n    @Override\n    public void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext) throws IOException {\n        responseContext.getHeaders().add(\"Access-Control-Allow-Origin\", \"*\");\n        responseContext.getHeaders().add(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am currently reading through \"Pro AngularJS\" by Adam Freeman. In going through the examples, he has the reader create a sports store app using Angular (of course) with a Deployd server resource. The Deployd resource is set up to return JSON data that is to be populated into the model. I am using NodeJS to run my server. It is currently setup on port 5000 (<code>http://localhost:5000/sportsstore/app.html</code>). The Deployd resource is running on port 5500 (<code>http://localhost:5500/products</code>). When hitting Deployd, the response is as follows:</p>\n\n<pre><code>[\n    { \"name\": \"Kayak\", \"description\": \"A boat for one person\", \"category\": \"Watersports\", \"price\": 275, \"id\": \"a1c999fc248b2959\" },\n    { \"name\": \"Lifejacket\", \"description\": \"Protective and fashionable\", \"category\": \"Watersports\", \"price\": 48.95, \"id\": \"61303717cfad182e\" },\n    { \"name\": \"Soccer Ball\", \"description\": \"FIFA-approved size and weight\", \"category\": \"Soccer\", \"price\": 19.5, \"id\": \"0fb5f67bdcbd992f\" },\n    { \"name\": \"Corner Flags\", \"description\": \"Give your playing field a professional touch\", \"category\": \"Soccer\", \"price\": 34.95, \"id\": \"24385d315dd388b4\" },\n    { \"name\": \"Stadium\", \"description\": \"Flat-packed 35,000-seat stadium\", \"category\": \"Soccer\", \"price\": 79500, \"id\": \"500fb6805905a856\" },\n    { \"name\": \"Thinking Cap\", \"description\": \"Improve your brain efficiency by 75%\", \"category\": \"Chess\", \"price\": 16, \"id\": \"637d8a1f42e6fa1c\" },\n    { \"name\": \"Unsteady Chair\", \"description\": \"Secretly give your opponent a disadvantage\", \"category\": \"Chess\", \"price\": 29.95, \"id\": \"73393312ec7dfab7\" },\n    { \"name\": \"Human Chess Board\", \"description\": \"A fun game for the family\", \"category\": \"Chess\", \"price\": 75, \"id\": \"7871d02a662b0915\" },\n    { \"name\": \"Bling-Bling King\", \"description\": \"Gold plated, diamon-studded King\", \"category\": \"Chess\", \"price\": 1200, \"id\": \"b59a3389a0e248bd\" }\n]\n</code></pre>\n\n<p>I am attempting to retrieve this data through use of <code>$http.get</code>:</p>\n\n<pre><code>$http.get(\"http://localhost:5500/products\")\n    .success(function (data) { ... })\n    .error(function (error) { ... });\n</code></pre>\n\n<p>However, this keeps returning an error:</p>\n\n<pre><code>XMLHttpRequest cannot load http://localhost:5500/products. No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:5000' is therefore not allowed access. \n</code></pre>\n\n<p>Research shows that there are/were some issues with Angular and CORS, and that the headers had to be configured to run cross-domain requests. As a result, I added the following to my app.config:</p>\n\n<pre><code>$http.defaults.useXDomain = true;\ndelete $http.defaults.headers.common['X-Requested-With']; // this isn't needed anymore, but was put here as a just-in-case\n</code></pre>\n\n<p>Despite having these settings added, I am still getting the error. The Deployd documentation says that it is automatically configured for CORS (<a href=\"http://docs.deployd.com/docs/collections/reference/http.md\">Cross-Origin Requests</a>) and will send the appropriate header information as long as the request did not contain invalid custom headers. I'm pretty sure my request does not contain invalid custom headers:</p>\n\n<pre><code>Accept: application/json, text/plain, */*\nCache-Control: max-age=0\nOrigin: http://localhost:5000\nReferer: http://localhost:5000/sportsstore/app.html\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.131 Safari/537.36\n</code></pre>\n\n<p><strong>My Question: Is there some other configuration I need to put in place in order to have Deployd configured to allow the CORS request to process? The book does not specify any of the special Angular header settings or anything else.</strong></p>\n",
            "last_activity_date": 1423549434,
            "question_id": 23346863,
            "score": 11,
            "tags": [
                "javascript",
                "angularjs",
                "cors",
                "deployd"
            ],
            "title": "Deployd - Data retrieved via AngularJS CORS"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Ok, jqLite' <a href=\"http://docs.angularjs.org/api/angular.element\" rel=\"nofollow\"><code>bind</code></a> method doing well its job. It goes like this:<br/></p>\n\n<p>We are adding directive' name as attribute in our <code>img</code> tag . In my case  , after loading and depending on its dimensions , image have to change its class name from \"horizontal\" to \"vertical\"  , so directive's name will be \"orientable\" :</p>\n\n<pre><code>&lt;img ng-src=\"image_path.jpg\" class=\"horizontal\" orientable /&gt;\n</code></pre>\n\n<p>And then we are creating simple directive like this:</p>\n\n<pre><code>var app = angular.module('myApp',[]);\n\napp.directive('orientable', function () {       \n    return {\n        link: function(scope, element, attrs) {   \n\n            element.bind(\"load\" , function(e){ \n\n                // success, \"onload\" catched\n                // now we can do specific stuff:\n\n                if(this.naturalHeight &gt; this.naturalWidth){\n                    this.className = \"vertical\";\n                }\n            });\n        }\n    }\n});\n</code></pre>\n\n<p>Example (explicit graphics!): <a href=\"http://jsfiddle.net/5nZYZ/63/\" rel=\"nofollow\">http://jsfiddle.net/5nZYZ/63/</a></p>\n\n<p>May be there is more elegant way? Please share!</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Here's a re-usable directive in the style of angular's inbuilt event handling directives:</p>\n\n<pre><code>angular.module('sbLoad', [])\n\n  .directive('sbLoad', ['$parse', function ($parse) {\n    return {\n      restrict: 'A',\n      link: function (scope, elem, attrs) {\n        var fn = $parse(attrs.sbLoad);\n        elem.on('load', function (event) {\n          scope.$apply(function() {\n            fn(scope, { $event: event });\n          });\n        });\n      }\n    };\n  }]);\n</code></pre>\n\n<p>When the img load event is fired the expression in the sb-load attribute is evaluated in the current scope along with the load event, passed in as $event. Here's how to use it: </p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div ng-controller=\"MyCtrl\"&gt;\n  &lt;img sb-load=\"onImgLoad($event)\"&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>JS</strong></p>\n\n<pre><code>  .controller(\"MyCtrl\", function($scope){\n    // ...\n    $scope.onImgLoad = function (event) {\n        // ...\n    }\n</code></pre>\n\n<p>Note: \"sb\" is just the prefix I use for my custom directives.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I've been searching for an answer to simple but not trivial question: What is a right way to catch image' <code>onload</code> event in Angular only with jqLite? I found <a href=\"http://stackoverflow.com/questions/17018685/display-image-in-its-actual-size-in-angular-js\">this question</a> , but i want some solution with directives.<br/>\nSo as i said , this is not accepted for me:</p>\n\n<pre><code>    .controller(\"MyCtrl\", function($scope){\n        // ...\n        img.onload = function () {\n            // ...\n        }\n</code></pre>\n\n<p>because it is in controller , not in directive.<br/>\nThanks , and have a good day.</p>\n",
            "last_activity_date": 1415284102,
            "question_id": 17547917,
            "score": 11,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-directive",
                "onload",
                "jqlite"
            ],
            "title": "AngularJS - Image &quot;onload&quot; event"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Since <code>this</code> changes in an event context (points to <code>global</code> usually), you need to store a reference to yourself outside of the event:</p>\n\n<pre><code>function Map() {\n    this.x = 0;\n    this.y = 0;\n    var _self = this;\n    $(\"body\").mousemove( function(event) {\n        _self.x = event.pageX;     // Is now able to access Map's member variable \"x\"\n        _self.y = event.pageY;     // Is now able to access Map's member variable \"y\"\n    });\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>The solution that <strong>Matt</strong> gave it probably the way to go.</p>\n\n<p>Just thought I'd point out that you can pass data via the event object like this:</p>\n\n<pre><code>function Map() {\n    this.x = 0;\n    this.y = 0;\n\n// Pass object with data-------------v\n    $(\"body\").bind('mousemove', {ths: this}, function(event) {\n            // access this via event.data\n        event.data.ths.x = event.pageX;\n        event.data.ths.y = event.pageY;     \n    });\n}\n</code></pre>\n\n<p>This is just for the info. It is really not a practical application. Matt's reference to a local variable makes more sense.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can also use <a href=\"http://api.jquery.com/jQuery.proxy/\" rel=\"nofollow\">JQuery.proxy</a>, to create a proxy function with its context. You can than bind the proxy to events.</p>\n\n<p>Here is an example:</p>\n\n<pre><code>var init_handler  =  $.proxy(this.init, this);\n$('#page_id').bind('pageinit', init_handler);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a quick question regarding the proper way to access Javascript class member variables from inside of an event handler that class uses. For example:</p>\n\n<pre><code>function Map() {\n    this.x = 0;\n    this.y = 0;\n\n    $(\"body\").mousemove( function(event) {\n        this.x = event.pageX;     // Is not able to access Map's member variable \"x\"\n        this.y = event.pageY;     // Is not able to access Map's member variable \"y\"\n    });\n}\n</code></pre>\n\n<p>Rather than changing the member variable of the \"Map\" class, the \"this.x\" in the event handler tries to affect the \"x\" member variable of the element that triggered the event. What is the proper way to access the member variables of the \"Map\" class from within the event handlers?</p>\n\n<p>Any help would be greatly appreciated - I've been sort of scratching my head at this one.</p>\n\n<p>Cheers,\nCharlie</p>\n",
            "last_activity_date": 1377992974,
            "question_id": 3076010,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "oop",
                "event-handling"
            ],
            "title": "Accessing class member variables inside an event handler in Javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Yup, I've seen it a few times. Here is some JS code:</p>\n\n<p>window.scrollBy(0,50)</p>\n\n<p>50 is the amount of pixels you want to scroll by.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>(window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop) ought to give you the current scroll position in just about any browser.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The three scrolling functions you'll want to concern yourself with are <code>window.scroll(x,y)</code>, <code>window.scrollBy(dx,dy)</code>, and <code>window.scrollTo(x,y)</code>. </p>\n\n<p>As David mentioned you'll need the scroll position to know where you are and use the <code>window.onscroll</code> event to fire off this calculation.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can calculate the percentage of the current position of the scrollbar using the <a href=\"https://developer.mozilla.org/en/DOM/window.onscroll\">onscroll</a> event, and if it reaches the 50 % the scroll position can be set to the top of the page with the <a href=\"https://developer.mozilla.org/en/DOM/window.scrollTo\">scrollTo</a> function:</p>\n\n<pre><code>window.onload = function () { \n  window.onscroll = function () { \n    var doc = document.body, \n    scrollPosition = doc.scrollTop,\n    pageSize = (doc.scrollHeight - doc.clientHeight),\n    percentageScrolled = Math.floor((scrollPosition / pageSize) * 100); \n\n     if (percentageScrolled &gt;= 50){ // if the percentage is &gt;= 50, scroll to top\n       window.scrollTo(0,0); \n     } \n   }; \n};\n</code></pre>\n\n<p>You can check my example <a href=\"http://jsbin.com/eqote\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 20
                }
            ],
            "body": "<p>Is it possible to change the scrollbar position when the user reaches a certain point scrolling down a web page? For example once you reached half way down down the page the scrollbar would move automatically back to the top.</p>\n",
            "last_activity_date": 1410260037,
            "question_id": 1247874,
            "score": 11,
            "tags": [
                "javascript",
                "scrollbar",
                "position"
            ],
            "title": "Changing Scrollbar Position"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>There is indeed a <a href=\"http://plugins.jquery.com/project/query-object\">QueryString plugin</a> for jQuery, if you're willing to install the jQuery core and the plugin it could prove useful.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Take a look at my post, as it tells you exactly how to do this:</p>\n\n<p><a href=\"http://seattlesoftware.wordpress.com/2008/01/16/javascript-query-string/\" rel=\"nofollow\">http://seattlesoftware.wordpress.com/2008/01/16/javascript-query-string/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A quick search found <a href=\"http://plugins.jquery.com/project/query-object\" rel=\"nofollow\">this plugin for jQuery</a> that allows you to access query string params. It is used like this to get values from the query string:</p>\n\n<pre><code>$.query.get('id');\n</code></pre>\n\n<p>or like this to create a new query string, and it is chainable:</p>\n\n<pre><code>var newUrl = $.query.set(\"section\", 5).set(\"action\", \"do\").toString(); \n</code></pre>\n\n<p>There is nothing built into JavaScript to do this natively.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Use the String utility from prototypejs.org, called toQueryParams().</p>\n\n<p>Example from their site: <a href=\"http://prototypejs.org/api/string/toQueryParams\" rel=\"nofollow\">http://prototypejs.org/api/string/toQueryParams</a></p>\n\n<blockquote>\n  <p>'section=blog&amp;id=45'.toQueryParams();<br/>\n  // -> {section: 'blog', id: '45'}<p>\n  'section=blog;id=45'.toQueryParams();<br/>\n  // -> {section: 'blog', id: '45'}<p>\n  '<a href=\"http://www.example.com?section=blog&amp;id=45#comments\" rel=\"nofollow\">http://www.example.com?section=blog&amp;id=45#comments</a>'.toQueryParams();<br/>\n  // -> {section: 'blog', id: '45'}<p>\n  'section=blog&amp;tag=javascript&amp;tag=prototype&amp;tag=doc'.toQueryParams();<br/>\n  // -> {section: 'blog', tag: ['javascript', 'prototype', 'doc']}<p>\n  'tag=ruby%20on%20rails'.toQueryParams();<br/>\n  // -> {tag: 'ruby on rails'}<p>\n  'id=45&amp;raw'.toQueryParams();<br/>\n  // -> {id: '45', raw: undefined}</p>\n</blockquote>\n\n<p>Also, you may use the alias parseQuery() to obtain the same results.</p>\n\n<pre><code>window.location.search.parseQuery();\n</code></pre>\n\n<p>Since window.location returns an object, you must obtain the string.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For jQuery I suggest <a href=\"http://benalman.com/projects/jquery-bbq-plugin/\" rel=\"nofollow\">jQuery BBQ: Back Button &amp; Query Library</a> By \"Cowboy\" Ben Alman</p>\n\n<blockquote>\n  <p>jQuery BBQ leverages the HTML5\n  hashchange event to allow simple, yet\n  powerful bookmarkable #hash history.\n  In addition, jQuery BBQ provides a\n  full .deparam() method, along with\n  both hash state management, and\n  fragment / query string parse and\n  merge utility methods.</p>\n</blockquote>\n\n<p>Example:</p>\n\n<pre><code>// Parse URL, deserializing query string into an object.\n// http://www.example.com/foo.php?a=1&amp;b=2&amp;c=hello#test\n// search is set to ?a=1&amp;b=2&amp;c=hello\n// myObj is set to { a:\"1\", b:\"2\", c:\"hello\" }\nvar search = window.location.search;\nvar myObj = $.deparam.querystring( search );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I am using this function in case i don't want to use a plugin:  </p>\n\n<pre><code>function getQueryVariable(variable) {\n    var query = window.location.search.substring(1);\n    var vars = query.split(\"&amp;\");\n    for (var i = 0; i &lt; vars.length; i++) {\n        var pair = vars[i].split(\"=\");\n        if (pair[0] == variable) {\n            return pair[1];\n        }\n    }\n    return null;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>  *$(document).ready(function () {\n            $(\"#a\").click(function () {\n                window.location.href = \"secondpage.aspx?id='0' &amp; name='sunil'&amp; add='asr' &amp; phone='1234'\";\n            });\n        });*\n\n\n**then read the query string parameters on another using split method . Here as follows:**\n\n\n  *$(document).ready(function () {\n            var a = decodeURI(window.location.search);\n            var id = window.location.search = \"id=\" + $().val();\n            var name = a.split(\"name=\")[1].split(\"&amp;\")[0].split(\"'\")[1];\n            var phone = a.split(\"phone=\")[1].split(\"&amp;\")[0].split(\"'\")[1];\n            var add = a.split(\"add=\")[1].split(\"&amp;\")[0].split(\"'\")[1];\n            alert(id+','+name+','+add+','+phone); \n        });*\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If there's any possibility of encountering repeated parameters (e.g. ?tag=foo&amp;tag=bar), most libraries out there won't be sufficient. In that case, you might want to consider this library that I developed from Jan Wolter's <a href=\"http://unixpapa.com/js/querystring.html\" rel=\"nofollow\">very comprehensive parser</a>. I added .plus() and .minus() functions and roundtripping:</p>\n\n<p><a href=\"https://github.com/timmc/js-tools/blob/master/src/QueryString.js\" rel=\"nofollow\">https://github.com/timmc/js-tools/blob/master/src/QueryString.js</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>The examples I've seen online seem much more complex than I expected <em>(manually parsing &amp;/?/= into pairs, using regular expressions, etc).</em>  We're using asp.net ajax <em>(don't see anything in their client side reference)</em> and would consider adding jQuery if it would really help.</p>\n\n<p>I would think there is a more elegant solution out there - so far <a href=\"http://www.bloggingdeveloper.com/post/JavaScript-QueryString-ParseGet-QueryString-with-Client-Side-JavaScript.aspx\" rel=\"nofollow\">this is the best code I've found</a> but I would love to find something more along the lines of the HttpRequest.QueryString object <em>(asp.net server side)</em>.  Thanks in advance,</p>\n\n<p>Shane</p>\n",
            "last_activity_date": 1348690290,
            "question_id": 150404,
            "score": 11,
            "tags": [
                "javascript",
                "query-string"
            ],
            "title": "What is the easiest way to read/manipulate query string params using javascript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You need to do that on the client side for instance with jQuery.</p>\n\n<p>Let's say you want to retrieve HTML into div with ID <code>mydiv</code>:</p>\n\n<pre><code>&lt;h1&gt;My page&lt;/h1&gt;\n&lt;div id=\"mydiv\"&gt;\n    &lt;h2&gt;This div is updated&lt;/h2&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>You can update this part of the page with jQuery as follows:</p>\n\n<pre><code>$.get('/api/mydiv', function(data) {\n  $('#mydiv').html(data);\n});\n</code></pre>\n\n<p>In the server-side you need to implement handler for requests coming to <code>/api/mydiv</code> and return the fragment of HTML that goes inside mydiv.</p>\n\n<p>See this Fiddle I made for you for a fun example using jQuery get with JSON response data: <a href=\"http://jsfiddle.net/t35F9/1/\" rel=\"nofollow\">http://jsfiddle.net/t35F9/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use Ajax for this.</p>\n\n<p>Build a function that will fetch the current page via ajax, but not the whole page, just the div in question from the server. The data will then (again via jQuery) be put inside the same div in question and replace old content with new one.</p>\n\n<p>Relevant function:</p>\n\n<p><a href=\"http://api.jquery.com/load/\">http://api.jquery.com/load/</a></p>\n\n<p>eg</p>\n\n<pre><code>$('#thisdiv').load(document.URL +  ' #thisdiv');\n</code></pre>\n\n<p>Note, load automatically replaces content. Be sure to include a space before the hastag.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Ajax allows you to refresh part of a page without refreshing the whole page. Your may use jQuery to easily implement Ajax into your website.</p>\n\n<p>Links:</p>\n\n<p><a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\">http://api.jquery.com/jQuery.ajax/</a></p>\n\n<p><a href=\"http://www.w3schools.com/ajax/\" rel=\"nofollow\">http://www.w3schools.com/ajax/</a></p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Let's assume that you have 2 divs inside of your html file.</p>\n\n<pre><code>&lt;div id=\"div1\"&gt;some text&lt;/div&gt;\n&lt;div id=\"div2\"&gt;some other text&lt;/div&gt;\n</code></pre>\n\n<p>The java program itself can't update the content of the html file because the html is related to the client, meanwhile java is related to the back-end.</p>\n\n<p>You can, however, communicate between the server (the back-end) and the client.</p>\n\n<p>What we're talking about is AJAX, which you achieve using JavaScript, I recommend using jQuery which is a common JavaScript library.</p>\n\n<p>Let's assume you want to refresh the page every constant interval, then you can use the interval function to repeat the same action every x time.</p>\n\n<pre><code>setInterval(function()\n{\n    alert(\"hi\");\n}, 30000);\n</code></pre>\n\n<p>You could also do it like this:</p>\n\n<pre><code>setTimeout(foo, 30000);\n</code></pre>\n\n<p>Whereea foo is a function.</p>\n\n<p>Instead of the alert(\"hi\") you can perform the AJAX request, which sends a request to the server and receives some information (for example the new text) which you can use to load into the div.</p>\n\n<p>A classic AJAX looks like this:</p>\n\n<pre><code>var fetch = true;\nvar url = 'someurl.java';\n$.ajax(\n{\n    // Post the variable fetch to url.\n    type : 'post',\n    url : url,\n    dataType : 'json', // expected returned data format.\n    data : \n    {\n        'fetch' : fetch // You might want to indicate what you're requesting.\n    },\n    success : function(data)\n    {\n        // This happens AFTER the backend has returned an JSON array (or other object type)\n        var res1, res2;\n\n        for(var i = 0; i &lt; data.length; i++)\n        {\n            // Parse through the JSON array which was returned.\n            // A proper error handling should be added here (check if\n            // everything went successful or not)\n\n            res1 = data[i].res1;\n            res2 = data[i].res2;\n\n            // Do something with the returned data\n            $('#div1').html(res1);\n        }\n    },\n    complete : function(data)\n    {\n        // do something, not critical.\n    }\n});\n</code></pre>\n\n<p>Wherea the backend is able to receive POST'ed data and is able to return a data object of information, for example (and very preferrable) JSON, there are many tutorials out there with how to do so, GSON from Google is something that I used a while back, you could take a look into it.</p>\n\n<p>I'm not professional with Java POST receiving and JSON returning of that sort so I'm not going to give you an example with that but I hope this is a decent start.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have a basic html file which is attached to a java program. This java program updates the conents of part of the HTML file whenever the page is refreshed. I want to refresh only that part of the page every certain interval of time. I can place the part I would like to refresh in a div but I am not sure how to refresh only the contents of the div. Any help would be appreciated. Thank you. </p>\n",
            "last_activity_date": 1415047024,
            "question_id": 17886578,
            "score": 10,
            "tags": [
                "javascript",
                "html",
                "refresh"
            ],
            "title": "Refresh Part of Page (div)"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can see (most of) a working implementation here: <a href=\"http://jsfiddle.net/nrabinowitz/fF4L4/2/\">http://jsfiddle.net/nrabinowitz/fF4L4/2/</a></p>\n\n<p>The key pieces here:</p>\n\n<ul>\n<li><p>Call <code>d3.behavior.zoom()</code> on the <code>svg</code> element. This requires the <code>svg</code> element to have <code>pointer-events: all</code> set. You can also call this on a subelement, but I don't see a reason if you want the whole thing to pan and zoom, since you basically want the whole SVG area to respond to pan/zoom events.</p>\n\n<pre><code>d3.select(\"svg\")\n    .call(d3.behavior.zoom()\n      .scaleExtent([0.5, 5])\n      .on(\"zoom\", zoom));\n</code></pre></li>\n<li><p>Setting <code>scaleExtent</code> here gives you the ability to limit the zoom scale. You can set it to <code>[1, 1]</code> to disable zooming entirely, or set it programmatically to the max size of your content, if that's what you want (I wasn't sure exactly what was desired here).</p></li>\n<li><p>The <code>zoom</code> function is similar to your <code>dragmove</code> function, but includes the scale factor and sets limits on the pan offset (as far as I can tell, d3 doesn't have any built-in <code>panExtent</code> support):</p>\n\n<pre><code>function zoom() {\n    var scale = d3.event.scale,\n        translation = d3.event.translate,\n        tbound = -h * scale,\n        bbound = h * scale,\n        lbound = (-w + m[1]) * scale,\n        rbound = (w - m[3]) * scale;\n    // limit translation to thresholds\n    translation = [\n        Math.max(Math.min(translation[0], rbound), lbound),\n        Math.max(Math.min(translation[1], bbound), tbound)\n    ];\n    d3.select(\".drawarea\")\n        .attr(\"transform\", \"translate(\" + translation + \")\" +\n              \" scale(\" + scale + \")\");\n}\n</code></pre>\n\n<p>(To be honest, I don't think I have the logic quite right here for the correct left and right thresholds - this doesn't seem to limit dragging properly when zoomed in. Left as an exercise for the reader :).)</p></li>\n<li><p>To make things simpler here, it helps to have the <code>g.drawarea</code> element not have an initial transform - so I added another <code>g</code> element to the outer wrappers to set the margin offset:</p>\n\n<pre><code>vis // snip\n  .append(\"svg:g\")\n    .attr(\"class\",\"drawarea\")\n  .append(\"svg:g\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n</code></pre></li>\n</ul>\n\n<p>The rest of the changes here are just to make your code work better in JSFiddle. There are a few missing details here, but hopefully this is enough to get you started.</p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>I'm using D3.js to plot a collapsible tree diagram like in the <a href=\"http://mbostock.github.io/d3/talk/20111018/tree.html\">example</a>. It's working mostly well, but the diagram might change dramatically in size when it enters its normal function (ie instead of the few nodes I have now, I'll have a <em>lot</em> more).</p>\n\n<p>I wanted to make the SVG area scroll, I've tried everything I found online to make it work, but with no success. The best I got working was using the <code>d3.behaviour.drag</code>, in which I drag the whole diagram around. It is far from optimal and glitches a lot, but it is kinda usable.</p>\n\n<p>Even so, I'm trying to clean it up a little bit and I realised the <code>d3.behaviour.zoom</code> can also be used to <em>pan</em> the SVG area, according to the API docs.</p>\n\n<p><strong>Question:</strong> Can anyone explain how to adapt it to my code? </p>\n\n<p>I would like to be able to <em>pan</em> the SVG area with the diagram, if possible making it react to some misuses, namely, trying to pan the diagram out of the viewport, and enabling to zoom to the maximum viewport's dimensions...</p>\n\n<p>This is my code so far:</p>\n\n<pre><code>var realWidth = window.innerWidth;\nvar realHeight = window.innerHeight;\n\nfunction load(){\n    callD3();\n}\n\nvar m = [40, 240, 40, 240],\n    w = realWidth -m[0] -m[0],\n    h = realHeight -m[0] -m[2],\n    i = 0,\n    root;\n\nvar tree = d3.layout.tree()\n    .size([h, w]);\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\nvar vis = d3.select(\"#box\").append(\"svg:svg\")\n    .attr(\"class\",\"svg_container\")\n    .attr(\"width\", w)\n    .attr(\"height\", h)\n    .style(\"overflow\", \"scroll\")\n    .style(\"background-color\",\"#EEEEEE\")\n  .append(\"svg:g\")\n    .attr(\"class\",\"drawarea\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\")\n    ;\n\nvar botao = d3.select(\"#form #button\");\n\nfunction callD3() {\n//d3.json(filename, function(json) {\nd3.json(\"D3_NEWCO_tree.json\", function(json) {\n  root = json;\n  d3.select(\"#processName\").html(root.text);\n  root.x0 = h / 2;\n  root.y0 = 0;\n\n  botao.on(\"click\", function(){toggle(root); update(root);});\n\n  update(root);  \n});\n\nfunction update(source) {\n  var duration = d3.event &amp;&amp; d3.event.altKey ? 5000 : 500;\n\n  // Compute the new tree layout.\n  var nodes = tree.nodes(root).reverse();\n\n  // Normalize for fixed-depth.\n  nodes.forEach(function(d) { d.y = d.depth * 50; });\n\n  // Update the nodes\u2026\n  var node = vis.selectAll(\"g.node\")\n      .data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n  // Enter any new nodes at the parent's previous position.\n  var nodeEnter = node.enter().append(\"svg:g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n      .on(\"click\", function(d) { toggle(d); update(d); });\n\n  nodeEnter.append(\"svg:circle\")\n        .attr(\"r\", function(d){ \n                    return  Math.sqrt((d.part_cc_p*1))+4;\n        })\n      .attr(\"class\", function(d) { return \"level\"+d.part_level; })\n      .style(\"stroke\", function(d){\n        if(d._children){return \"blue\";}\n      })    \n      ;\n\n  nodeEnter.append(\"svg:text\")\n      .attr(\"x\", function(d) { return d.children || d._children ? -((Math.sqrt((d.part_cc_p*1))+6)+this.getComputedTextLength() ) : Math.sqrt((d.part_cc_p*1))+6; })\n      .attr(\"y\", function(d) { return d.children || d._children ? -7 : 0; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n      .text(function(d) { \n        if(d.part_level&gt;0){return d.name;}\n        else\n            if(d.part_multi&gt;1){return \"Part \" + d.name+ \" [\"+d.part_multi+\"]\";}\n            else{return \"Part \" + d.name;}\n         })\n        .attr(\"title\", \n            function(d){ \n                var node_type_desc;\n                if(d.part_level!=0){node_type_desc = \"Labour\";}else{node_type_desc = \"Component\";}\n                return (\"Part Name: \"+d.text+\"&lt;br/&gt;Part type: \"+d.part_type+\"&lt;br/&gt;Cost so far: \"+d3.round(d.part_cc, 2)+\"&amp;euro;&lt;br/&gt;\"+\"&lt;br/&gt;\"+node_type_desc+\" cost at this node: \"+d3.round(d.part_cost, 2)+\"&amp;euro;&lt;br/&gt;\"+\"Total cost added by this node: \"+d3.round(d.part_cost*d.part_multi, 2)+\"&amp;euro;&lt;br/&gt;\"+\"Node multiplicity: \"+d.part_multi);\n        })\n      .style(\"fill-opacity\", 1e-6);\n\n  // Transition nodes to their new position.\n  var nodeUpdate = node.transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  nodeUpdate.select(\"circle\")\n        .attr(\"r\", function(d){ \n            return  Math.sqrt((d.part_cc_p*1))+4;\n        })\n      .attr(\"class\", function(d) { return \"level\"+d.part_level; })\n      .style(\"stroke\", function(d){\n        if(d._children){return \"blue\";}else{return null;}\n      })\n      ;\n\n  nodeUpdate.select(\"text\")\n      .style(\"fill-opacity\", 1);\n\n  // Transition exiting nodes to the parent's new position.\n  var nodeExit = node.exit().transition()\n      .duration(duration)\n      .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n      .remove();\n\n    nodeExit.select(\"circle\")\n        .attr(\"r\", function(d){ \n            return  Math.sqrt((d.part_cc_p*1))+4;\n        });\n\n  nodeExit.select(\"text\")\n      .style(\"fill-opacity\", 1e-6);\n\n  // Update the links\u2026\n  var link = vis.selectAll(\"path.link\")\n      .data(tree.links(nodes), function(d) { return d.target.id; });\n\n  // Enter any new links at the parent's previous position.\n  link.enter().insert(\"svg:path\", \"g\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        var o = {x: source.x0, y: source.y0};\n        return diagonal({source: o, target: o});\n      })\n    .transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition links to their new position.\n  link.transition()\n      .duration(duration)\n      .attr(\"d\", diagonal);\n\n  // Transition exiting nodes to the parent's new position.\n  link.exit().transition()\n      .duration(duration)\n      .attr(\"d\", function(d) {\n        var o = {x: source.x, y: source.y};\n        return diagonal({source: o, target: o});\n      })\n      .remove();\n\n    $('svg text').tipsy({\n        fade:true,\n        gravity: 'nw', \n        html:true\n    });\n\n  // Stash the old positions for transition.\n  nodes.forEach(function(d) {\n    d.x0 = d.x;\n    d.y0 = d.y;\n  });\n\n    var drag = d3.behavior.drag()\n        .origin(function() { \n            var t = d3.select(this);\n            return {x: t.attr(\"x\"), y: t.attr(\"y\")};\n        })\n        .on(\"drag\", dragmove);\n\n    d3.select(\".drawarea\").call(drag);\n\n}\n\n// Toggle children.\nfunction toggle(d) {\n  if (d.children) {\n    d._children = d.children;\n    d.children = null;\n  } else {\n    d.children = d._children;\n    d._children = null;\n  }\n\n}\n\nfunction dragmove(){\n    d3.transition(d3.select(\".drawarea\"))\n    .attr(\"transform\", \"translate(\" + d3.event.x +\",\" + d3.event.y + \")\"); \n}\n}\n</code></pre>\n",
            "last_activity_date": 1373174858,
            "question_id": 17405638,
            "score": 10,
            "tags": [
                "javascript",
                "d3.js",
                "zoom",
                "pan"
            ],
            "title": "D3.js Zooming and panning a collapsible tree diagram"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can take a look at a near identical question <a href=\"http://stackoverflow.com/questions/12307501/q-defer-and-promises-and-how-to-use-them-to-load-the-data-for-a-controller-befo\">here</a> that uses resources, but it works the same way with $http. I think this should work</p>\n\n<pre><code>function MyCtrl($scope, datasets) {    \n    $scope.datasets = datasets;\n}\n\nMyCtrl.resolve = {\n    datasets: function($http, $q) {\n        var deferred = $q.defer();\n\n        $http({method: 'GET', url: '/someUrl'})\n            .success(function(data) {\n                deferred.resolve(data)\n        }\n\n        return deferred.promise;\n    }\n};\n\nvar myApp = angular.module('myApp', [], function($routeProvider) {\n    $routeProvider.when('/', {\n        templateUrl: '/editor-tpl.html',\n        controller: MyCtrl,\n        resolve: MyCtrl.resolve\n    });\n});\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Since $http returns a promise, it's a performance hit to create your own deferred just to return the promise when the http data arrives.  You should be able to do:</p>\n\n<pre><code>MyCtrl.resolve = {\n    datasets: function ($http) {\n        return $http({method: 'GET', url: '/someUrl'});\n    }\n};\n</code></pre>\n\n<p>If you need to do some processing of the result, use .then, and your promise is chained in for free:</p>\n\n<pre><code>MyCtrl.resolve = {\n    datasets: function ($http) {\n        return $http({method: 'GET', url: '/someUrl'})\n               .then (function (data) {\n                   return frob (data);\n               });\n    }\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>You could always just put \"ng-show\" on the outer-most DOM element and set it equal to the data you want to wait for.</p>\n\n<p>For the example listed on the Angular JS home page you can see how easy it is: <a href=\"http://plnkr.co/CQu8QB94Ra687IK6KgHn\" rel=\"nofollow\">http://plnkr.co/CQu8QB94Ra687IK6KgHn</a>\nAll that had to be done was \nThat way the form won't show until that value has been set.</p>\n\n<p>Much more intuitive and less work this way.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I would like to delay the initialization of a controller until the necessary data has arrived from the server.</p>\n\n<p>I found this solution for Angular 1.0.1: <a href=\"http://stackoverflow.com/questions/11972026\">Delaying AngularJS route change until model loaded to prevent flicker</a>, but couldn't get it working with Angular 1.1.0</p>\n\n<p><strong>Template</strong></p>\n\n<pre><code>&lt;script type=\"text/ng-template\" id=\"/editor-tpl.html\"&gt;\nEditor Template {{datasets}}\n&lt;/script&gt;\n    &lt;div ng-view&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>\u200b</p>\n\n<p><strong>JavaScript</strong></p>\n\n<pre><code>function MyCtrl($scope) {    \n    $scope.datasets = \"initial value\";\n}\n\nMyCtrl.resolve = {\n    datasets : function($q, $http, $location) {\n        var deferred = $q.defer();\n\n        //use setTimeout instead of $http.get to simulate waiting for reply from server\n        setTimeout(function(){\n            console.log(\"whatever\");\n            deferred.resolve(\"updated value\");\n        }, 2000);\n\n        return deferred.promise;\n    }\n};\n\nvar myApp = angular.module('myApp', [], function($routeProvider) {\n    $routeProvider.when('/', {\n        templateUrl: '/editor-tpl.html',\n        controller: MyCtrl,\n        resolve: MyCtrl.resolve\n    });\n});\u200b\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/dTJ9N/1/\">http://jsfiddle.net/dTJ9N/1/</a></p>\n",
            "last_activity_date": 1360751126,
            "question_id": 12356185,
            "score": 10,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Angular.js delaying controller initialization"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use a script loader like <a href=\"http://headjs.com/\">head.js</a>. It has its own load callback and it will decrease load time too.</p>\n\n<hr>\n\n<p>From the <code>headjs</code> code:</p>\n\n<pre><code>function scriptTag(src, callback) {\n\n    var s = doc.createElement('script');\n    s.type = 'text/' + (src.type || 'javascript');\n    s.src = src.src || src;\n    s.async = false;\n\n    s.onreadystatechange = s.onload = function () {\n\n        var state = s.readyState;\n\n        if (!callback.done &amp;&amp; (!state || /loaded|complete/.test(state))) {\n            callback.done = true;\n            callback();\n        }\n    };\n\n    // use body if available. more safe in IE\n    (doc.body || head).appendChild(s);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>This is just an extension of ilia's answer.  I used scriptTag like this:  Works great:</p>\n\n<pre><code>    // these 3 scripts load serially.\n\n    scriptTag(boot_config.DEPENDENCIES.jquery,function(){\n        // jquery ready - set a flag\n        scriptTag(boot_config.DEPENDENCIES.jqueryui,function(){\n            // jqueryui ready - set a flag\n            scriptTag(boot_config.DEPENDENCIES.your_app,function(){\n                // your_app is ready! - set a flag\n            });\n        });\n    });\n\n    // these 2 scripts load in paralell to the group above\n\n    scriptTag(boot_config.EXTERNALS.crypto,function(){\n        // crypto ready - set a flag\n    });\n\n    scriptTag(boot_config.EXTERNALS.cropper,function(){\n        // cropper ready - set a flag\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I want to add that if you don't support IE7 and below, you don't need <code>onreadystatechange</code> stuff. Source: <a href=\"http://www.quirksmode.org/dom/events/load.html\" rel=\"nofollow\">quircksmode.org</a></p>\n\n<p>Simplified and <strong>working</strong> code from original answer:</p>\n\n<pre><code>function scriptTag (src, callback) {\n\n   // src is just a string now!\n\n    var s = doc.createElement('script');\n    s.type = 'text/javascript';\n    s.src = src;\n    s.async = false;\n    s.onload = callback;        \n    document.body.appendChild(s);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I know that IE doesn't have a <code>.load</code> event for <code>&lt;script&gt;</code> elements\u2014is there any way to make up for that reliably? </p>\n\n<p>I've seen some talk of things (e.g., <code>requestState == \"complete\"</code>) but nothing very verifiable.</p>\n\n<hr>\n\n<p>This is to be used so that code can be called after a script is finished loading, so that I don't have to use AJAX to load new sources (thus eliminating issues with cross-domain AJAX).</p>\n",
            "last_activity_date": 1380300753,
            "question_id": 6725272,
            "score": 10,
            "tags": [
                "javascript",
                "internet-explorer",
                "asynchronous",
                "cross-browser"
            ],
            "title": "Dynamic, cross-browser script loading"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>It seems that the feature has been removed: </p>\n\n<blockquote>\n  <p>We made this change to simplify the API. The Geocoder uses the browser's preferred language, or language specified when loading the API\" (<a href=\"http://groups.google.com/group/google-maps-js-api-v3/browse_thread/thread/d0242384e35e7df3\">Source</a>)</p>\n</blockquote>\n\n<p>It still work if used directly:</p>\n\n<p><a href=\"http://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&amp;sensor=false&amp;language=ja\">http://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&amp;sensor=false&amp;language=ja</a></p>\n\n<p><a href=\"http://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&amp;sensor=false&amp;language=en\">http://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&amp;sensor=false&amp;language=en</a></p>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I use Google Maps API to get city name in 2 different languages by users' coordinates. Before version 3.5 of the API I was able to use language option in geocoder's request, but since June 8, 2011 this option is removed.\n<br><br>\nCan someone give me any idea how can I get the city name in two or more different languages with maps' geocoder?\n<br><br>\nI included the js script with language option something like this -  <a href=\"http://maps.google.com/maps/api/js?sensor=false&amp;language=ja\">http://maps.google.com/maps/api/js?sensor=false&amp;language=ja</a></p>\n",
            "last_activity_date": 1309126931,
            "question_id": 6464788,
            "score": 10,
            "tags": [
                "javascript",
                "google-maps-api-3"
            ],
            "title": "Google Maps API v3.5 Geocoder language option"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If it is possible to put the text in a span:</p>\n\n<pre><code>&lt;td id='someID'&gt;\n  &lt;a&gt;anchor&lt;/a&gt;\n  &lt;span&gt;[ some text ]&lt;/span&gt;\n&lt;/td&gt;\n</code></pre>\n\n<p>You can do:</p>\n\n<pre><code>$('td#someID span').text('new text')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Neal's answer is my suggestion. jQuery doesn't have a way to select text nodes <a href=\"http://stackoverflow.com/questions/298750/how-do-i-select-text-nodes-with-jquery\">How do I select text nodes with jQuery?</a>.</p>\n\n<p>Changing your HTML structure will make for the simplest code. If you can't do it, you can just use the childNodes property looking for nodes of type 3 (TEXT_NODE)</p>\n\n<p>Here's some sample code that assumes the last node is the node you want to edit</p>\n\n<p><a href=\"http://jsfiddle.net/mendesjuan/B7rKs/\">http://jsfiddle.net/mendesjuan/B7rKs/</a></p>\n\n<pre><code>&lt;div class='someClass'&gt;\n  &lt;a&gt;anchor&lt;/a&gt;\n  [ some text ]\n&lt;/div&gt;\n\n&lt;button id='btn'&gt; Change text &lt;/button&gt;\n\n$('#btn').click(function(){\n  $('.someClass').get(0).lastChild.nodeValue = \"New Value\"\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Without changing markup:</p>\n\n<p><strong><a href=\"http://jsfiddle.net/DTzH7/\" rel=\"nofollow\">Live Demo</a></strong></p>\n\n<pre><code>var anchor = $('td').find('a').clone();\n$('td').text('{ some other text }').prepend(anchor);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an element like this:</p>\n\n<pre><code>&lt;td&gt;\n  &lt;a&gt;anchor&lt;/a&gt;\n  [ some text ]\n&lt;/td&gt;\n</code></pre>\n\n<p>And i need to set it's text in jQuery, without removing the anchor.</p>\n\n<p>The element's contents could vary in order (text before or after), and the actual text is unknown.</p>\n\n<p>Thanks</p>\n\n<p><strong>New Update</strong></p>\n\n<p>This is what i came up using, assumes only a single text node:</p>\n\n<pre><code>    function setTextContents($elem, text) {\n        $elem.contents().filter(function() {\n            if (this.nodeType == Node.TEXT_NODE) {\n                this.nodeValue = text;\n            }\n        });\n    }\n\n    setTextContents( $('td'), \"new text\");\n</code></pre>\n",
            "last_activity_date": 1390753730,
            "question_id": 6156470,
            "score": 10,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery - setting an element&#39;s text only without removing other element (anchor)"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>See this <a href=\"http://stackoverflow.com/questions/2642043/html5-web-db-security\">HTML5 Web DB Security</a></p>\n\n<blockquote>\n  <p>client-side encryption libraries\n  aren't mature or tested well enough</p>\n</blockquote>\n\n<p>...but it's been a year ago, so that could be false already</p>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>Hi instead of storing the username and password, can you not create some sort of \"session\" with the remote server and instead transmit an authentication token?</p>\n\n<p>Storing a username and password anywhere in the client side gives me the shivers.</p>\n\n<p>Perhaps of looking for ways of storing the username / password safely, look for ways of removing the need to store it at all. </p>\n\n<p>However of course I'm saying this without knowing the full background... I'm guessing there is a good reason to need to store the username / password.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>David Dahl, a Firefox engineer, has a prototype Firefox extension, <a href=\"https://addons.mozilla.org/en-US/firefox/addon/domcrypt/\" rel=\"nofollow\">domcrypt</a> (<a href=\"https://github.com/daviddahl/domcrypt\" rel=\"nofollow\">repository on github</a>), that provides Javascript access to Firefox's NSS (Network Security Services) APIs. Since Chrome also uses NSS, providing the same API is probably straightforward for it as well.</p>\n\n<p>He's <a href=\"http://daviddahl.blogspot.com/2011/04/domcrypt-presentation-at-mozilla-all.html\" rel=\"nofollow\">pushing Mozilla</a> to evolve it a bit more for eventual inclusion within Firefox; we'll see what happens.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Was researching this topic myself recently. I think by now we do have some proven JS encryption libraries see <a href=\"https://github.com/bitwiseshiftleft/sjcl\" rel=\"nofollow\" title=\"Stanford Javascript Crypto Library\">here</a> and <a href=\"http://code.google.com/p/jscryptolib/\" rel=\"nofollow\" title=\"jscryptolib\">here</a>.</p>\n\n<p>Now the question is where to store the key. Storing it on the client side would be the same as storing the data with no encryption at all. And having the user enter the key all the time would defeat the purpose.</p>\n\n<p>Maybe you could ask your server to generate a new key whenever you create a new session. (Make sure to use HTTPS when making this request). If the session expires, the user has to enter username/password again and it would be encrypted using the new token. To decrypt the key you have to make a (secure) request to your server (passing in your session id) to request the key, which then can be used to decrypt username and password.</p>\n\n<p>Now this still leaves open the usual vulnerabilities such as cross side scripting or session hijacking, but at least the user password is not stored in clear text on the client side.</p>\n\n<p>What do you think?</p>\n\n<hr>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For anyone stumbling upon this question, Stanford has a crypto project over at <a href=\"http://crypto.stanford.edu/sjcl/\">http://crypto.stanford.edu/sjcl/</a>. I have not used it myself in production, but am busy investigating it and so far it looks promising. Hope this helps someone.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I have to say if your creating a session data 1 is that not,- stored on the server not client side thus no one sees the session data or at least it should be done that way via asp, or php, ect so have the app require internet and retrieve the info from a web server and don't store it on the client side.  2 if this does deal with client side like dealing with streaming a video, or images  or you have to create some files on the client side storing the key on the clients mobile device is the only way.  Thus either have the key with a short ttl to decrypt the data, the key given through some form of authentication or certificate, or a key installed from your main office and encrypt the device in case they loose it. I not found and encrypt function I like to suggest yet for you.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I work on an <a href=\"http://www.servoices.com/treesofcloud.php\" rel=\"nofollow\">application</a> that faces the same problem.\nSecurity is important for this application because it allows users to build personal trees (or nested lists) and to store them on the cloud.</p>\n\n<p>My solution is to encrypt the password stored on the client side with another password generated by the server for each user.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am working on a EDIT: <strong>mobile web app</strong> which displays some sensitive information and requires a login which stores the members username and password in a HTML5 Session. The username and password are currently stored in an un-encrypted state for the reason that we need to use this username and password on each page load to access the clients remote web-service.</p>\n\n<p>EDIT: After a security review our client raised the following concern:</p>\n\n<p>\"There is the potential that Session Storage information can get stored on disk (e.g. on a browser crash). For this reason no sensitive information should be stored unencrypted in session storage. User ID\u2019s and session tokens can be stored since session timeouts are implemented however storing of passwords/PINs is not recommended.\"</p>\n\n<p>What would be the best/most secure method of encrypting and decrypting sensitive data stored client-side?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1392768979,
            "question_id": 5976046,
            "score": 10,
            "tags": [
                "javascript",
                "web-applications",
                "html5",
                "encryption"
            ],
            "title": "HTML5 Client Side Data Encryption - What are my options?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Maybe you could have a function to which you pass the function to execute as a parameter:</p>\n\n<pre><code>function runner(func_to_run) {\n    alert('about to run ' + func_to_run.name);\n\n    func_to_run();\n\n}\n\nfunction test() {\n    alert ('in test');\n}\n\nrunner(test)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://code.google.com/p/jquery-aop/\" rel=\"nofollow\">jquery-aop</a> might do the trick?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A simple approach would be something like this</p>\n\n<pre><code>var functionPool = {} // create a variable to hold the original versions of the functions\n\nfor( var func in window ) // scan all items in window scope\n{\n  if (typeof(window[func]) === 'function') // if item is a function\n  {\n    functionPool[func] = window[func]; // store the original to our global pool\n    (function(){ // create an closure to maintain function name\n         var functionName = func;\n         window[functionName] = function(){ // overwrite the function with our own version\n         var args = [].splice.call(arguments,0); // convert arguments to array\n         // do the logging before callling the method\n         console.log('logging: ' + functionName + '('+args.join(',')+')');\n         // call the original method but in the window scope, and return the results\n         return functionPool[functionName].apply(window, args );\n         // additional logging could take place here if we stored the return value ..\n        }\n      })();\n  }\n}\n</code></pre>\n\n<p>To undo you would need to run the </p>\n\n<pre><code>for (func in functionPool)\n  window[func] = functionPool[func];\n</code></pre>\n\n<p><strong>Notes</strong><br>\nThis handles only global functions, but you can easily extend it to handle specific objects or methods etc..</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>I want to wrap every function call with some logging code.  Something that would produce output like:</p>\n\n<pre><code>func1(param1, param2)\nfunc2(param1)\nfunc3()\nfunc4(param1, param2)\n</code></pre>\n\n<p>Ideally, I would like an API of the form:</p>\n\n<pre><code>function globalBefore(func);\nfunction globalAfter(func);\n</code></pre>\n\n<p>I've googled quite a bit for this, but it seems like there's only aspect-oriented solutions that require you to wrap the specific functions you want to log, or whatever.  I want something that applies to every function in the global scope (except itself, obviously).</p>\n",
            "last_activity_date": 1286956410,
            "question_id": 3919134,
            "score": 10,
            "tags": [
                "javascript",
                "logging",
                "function",
                "aop",
                "wrapping"
            ],
            "title": "Is there a way to wrap all JavaScript methods with a function?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I haven't used this tool before, but it does what you want.  You could just look at it's source to get some ideas:</p>\n\n<p><a href=\"https://github.com/Mathachew/jquery-autotab\" rel=\"nofollow\">This Plugin on GitHub</a></p>\n\n<p>For your situation, you would add this code:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"jquery.autotab.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n$(document).ready(function() {\n    $('#first').autotab({ target: '#second', format: 'numeric' });\n    $('#second').autotab({ target: '#third', format: 'numeric', previous: '#first' });\n    $('#third').autotab({ previous: '#second', format: 'numeric' });\n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>I haven't tested it, but I think this will work. It will probably also move the focus to the button when the 4th field is completed.</p>\n\n<pre><code>$(\"form input\").change(function () {\n    var maxLength = $(this).attr('maxlength');\n\n    if($(this).val().length == maxLength) {\n        $(this).next().focus();\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This does not have four fields, but it does validate credit cards (integrity check, not Luhn's Algorithm!). I have to tell you <strong>how annoying it is to use multiple fields</strong> for a user and auto-tabbing. I recommend you only use one field.</p>\n\n<p>From <a href=\"http://docs.jquery.com/Plugins/Validation/Methods/creditcard\" rel=\"nofollow\">jquery website:</a></p>\n\n<pre><code>$(\"#myform\").validate({\n  rules: {\n    field: {\n      required: true,\n      creditcard: true\n    }\n  }\n});\n</code></pre>\n\n<p>/</p>\n\n<pre><code>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \n                    \"http://www.w3.org/TR/html4/loose.dtd\"&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;script src=\"http://code.jquery.com/jquery-latest.js\"&gt;&lt;/script&gt;\n  &lt;script type=\"text/javascript\" src=\"http://dev.jquery.com/view/trunk/plugins/validate/lib/jquery.delegate.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"http://dev.jquery.com/view/trunk/plugins/validate/jquery.validate.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\njQuery.validator.setDefaults({\n    debug: true,\n    success: \"valid\"\n});;\n&lt;/script&gt;\n\n  &lt;script&gt;\n  $(document).ready(function(){\n    $(\"#myform\").validate({\n  rules: {\n    field: {\n      required: true,\n      creditcard: true\n    }\n  }\n});\n  });\n  &lt;/script&gt;\n  &lt;style&gt;#field { margin-left: .5em; float: left; }\n    #field, label { float: left; font-family: Arial, Helvetica, sans-serif; font-size: small; }\n    br { clear: both; }\n    input { border: 1px solid black; margin-bottom: .5em;  }\n    input.error { border: 1px solid red; }\n    label.error {\n    \tbackground: url('http://dev.jquery.com/view/trunk/plugins/validate/demo/images/unchecked.gif') no-repeat;\n    \tpadding-left: 16px;\n    \tmargin-left: .3em;\n    }\n    label.valid {\n    \tbackground: url('http://dev.jquery.com/view/trunk/plugins/validate/demo/images/checked.gif') no-repeat;\n    \tdisplay: block;\n    \twidth: 16px;\n    \theight: 16px;\n    }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;form id=\"myform\"&gt;\n  &lt;label for=\"field\"&gt;Required, creditcard (try 446-667-651): &lt;/label&gt;\n  &lt;input class=\"left\" id=\"field\" name=\"field\" /&gt;\n  &lt;br/&gt;\n  &lt;input type=\"submit\" value=\"Validate!\" /&gt;\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A very simple solution could go like this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function input_onchange(me){ \n        if (me.value.length != me.maxlength){\n            return;\n        }\n        var i;\n        var elements = me.form.elements;\n        for (i=0, numElements=elements.length; i&lt;numElements; i++) {\n            if (elements[i]==me){\n                break;\n            }\n        }\n        elements[i+1].focus();\n    }\n&lt;/script&gt;\n&lt;form action=\"post.php\" method=\"post\" accept-charset=\"utf-8\"&gt;\n    &lt;input type=\"text\" value=\"\" id=\"first\" size=\"4\" maxlength=\"4\"\n        onchange=\"input_onchange(this)\"\n    /&gt; -\n    &lt;input type=\"text\" value=\"\" id=\"second\" size=\"4\" maxlength=\"4\"\n        onchange=\"input_onchange(this)\"\n    /&gt; -\n    &lt;input type=\"text\" value=\"\" id=\"third\" size=\"4\" maxlength=\"4\"\n        onchange=\"input_onchange(this)\"\n    /&gt; -\n    &lt;input type=\"text\" value=\"\" id=\"fourth\" size=\"4\" maxlength=\"4\"\n        onchange=\"input_onchange(this)\"\n    /&gt; -\n    &lt;p&gt;&lt;input type=\"submit\" value=\"Send Credit Card\"&gt;&lt;/p&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As others have urged, don\u2019t do this. Users are not going to be able to anticipate that you\u2019ll auto-tab them, and this will drive them nuts. Have you thought about users who copy and paste their credit card? What is the benefit of using four fields anyway? </p>\n\n<p>Also, not all credit cards divide their numbers into four sets of four. American Express divides them into three groups of numbers, for example. Dynamically adding and removing text fields is asking for trouble in this case.</p>\n\n<p>Instead, use your Javascript to automatically insert the <em>spaces</em> where they belong, advancing the cursor, not the focus. The first digit in the number indicates the type of credit card (5 is Mastercard, 4 is Visa, 3 is American Express\u2026), so you can read this to decide where to add the spaces. Scrub the spaces out of the string when you post it. This approach will save you and your users a lot of pain.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I highly recommend using the Masked Input jQuery plugin. <a href=\"http://digitalbush.com/projects/masked-input-plugin/\" rel=\"nofollow\">http://digitalbush.com/projects/masked-input-plugin/</a></p>\n\n<p>Your usage will look like this:</p>\n\n<pre><code>$('#creditCardNumber').mask(\"9999-9999-9999-9999\");\n</code></pre>\n\n<p>This way you'll have copy-paste support. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As @Sander suggested, the easy way to do an auto-tab is:</p>\n\n<pre><code>jQuery(\"form input[type=text]\").on('input',function () {\n    if(jQuery(this).val().length == jQuery(this).attr('maxlength')) {\n        jQuery(this).next(\"input\").focus();\n    }\n});\n</code></pre>\n\n<p><strong>Update</strong> by @morespace54</p>\n\n<p><code>oninput</code> is an <strong>html5</strong> event is supported on <strong>IE9+</strong>, so you can use <code>keyup</code> instead.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I do have a credit card number form. The number is divided into four parts just as on a real credit card.</p>\n\n<p>I want to add a JavaScript taste to the form where when a user types four letters in a field, the focus automatically goes to the next tag. But not in the last tag. By doing this, a user doesn't have to type \"tab\" key to move a focus.</p>\n\n<p>It is okay to add some extra class, id or name in the tags.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/&gt;\n    &lt;title&gt;MoveFocus&lt;/title&gt;\n    &lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n     $(function() {\n     // some code goes here.\n    });\n    &lt;/script&gt;\n&lt;/head&gt;\n\n\n&lt;body&gt;\n  &lt;form action=\"post.php\" method=\"post\" accept-charset=\"utf-8\"&gt;\n    &lt;input type=\"text\" value=\"\" id=\"first\" size=\"4\" maxlength=\"4\"/&gt; -\n    &lt;input type=\"text\" value=\"\" id=\"second\" size=\"4\" maxlength=\"4\"/&gt; -\n    &lt;input type=\"text\" value=\"\" id=\"third\" size=\"4\" maxlength=\"4\"/&gt; -\n    &lt;input type=\"text\" value=\"\" id=\"fourth\" size=\"4\" maxlength=\"4\"/&gt;\n    &lt;p&gt;&lt;input type=\"submit\" value=\"Send Credit Card\"&gt;&lt;/p&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1418583776,
            "question_id": 1959398,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events",
                "usability"
            ],
            "title": "Moving a focus when the input text field reaches a max length"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.wrensoft.com/zoom/\" rel=\"nofollow\">Zoom Search Engine</a> can do this.</p>\n\n<p>I haven't used the CD version, but I use the PHP version for my website and it works very well.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I know a lot of people use Java to write CD search applets.  I have a slightly elderly list of various free and commercial programs at \n<a href=\"http://www.searchtools.com/tools/tools-disc.html\" rel=\"nofollow\">Search Tools for CD-ROMs and DVDs</a>.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Have a look at CLucene -</p>\n\n<p><a href=\"http://sourceforge.net/projects/clucene\" rel=\"nofollow\">http://sourceforge.net/projects/clucene</a></p>\n\n<p><a href=\"http://clucene.git.sourceforge.net/git/gitweb.cgi?p=clucene/clucene;a=summary\" rel=\"nofollow\">http://clucene.git.sourceforge.net/git/gitweb.cgi?p=clucene/clucene;a=summary</a></p>\n\n<p>Compiling the C++ sources into a console or a Win32 executable would make the above possible also using the Lucene technology (which I assume you'd rather want to stick with).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Well in fact I built it myself.</p>\n\n<p>The existing solutions (that I could find) were unconvincing.</p>\n\n<p>I wanted to be able to search a very long tree (ul/li/ul...) that is displayed as one page; it contains 5000+ items.</p>\n\n<p>It sounds a little weird to display such a long tree on one page but in fact with collapse / expand it's much more intuitive than separate pages, and since we're offline, download times are not a problem (parsing times are, though, but Chrome is amazing ;-)</p>\n\n<p>The \"search\" function provided with modern browsers (FF and Chrome anyway) have two big problems: they only search visible items on the page, and they can't search non-consecutive words.</p>\n\n<p>I want to be able to search collapsed items (not visible on the screen); I want to find \"one two three\" when searching \"one three\" (just like with Google / Lucene); and I want to open just the branches of the tree containing found items.</p>\n\n<p>So, what I did was:</p>\n\n<ol>\n<li>create an inverted index of words &lt;-> ids of items from the list (via xslt) (approx. 4500 unique words in the document)</li>\n<li>convert this index to bunch of javascript arrays (one word = one array, containing ids)</li>\n<li>when searching, intersect the arrays represented by the search words</li>\n<li>step 3 returns an array of ids that I can then open / highlight</li>\n</ol>\n\n<p>It does exactly what I needed and it's really fast. Better yet, since it searches from an independant \"index\" (arrays of ids) it can search when the list is not even loaded in the browser!</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Fullproof is a nifty little javascript library that can act as a text search for you. It would be useful in this context, but it's also useful in the \"thick-javascript-webpage\" model.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Initial question was asked in '09</p>\n\n<p>As of '14 there is <a href=\"http://lunrjs.com/\" rel=\"nofollow\">http://lunrjs.com/</a> // <a href=\"https://github.com/olivernn/lunr.js\" rel=\"nofollow\">https://github.com/olivernn/lunr.js</a> (1400+ stars)</p>\n\n<blockquote>\n  <p>Simple full-text search in your browser</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I will be delivering a set of static HTML pages on CD-Rom; these pages need to be fully viewable with no Internet access whatsoever.</p>\n\n<p>I'd like to provide a full-text search (Lucene-like) for the content of those pages, which should \"just work\" from the CD-Rom with no software installation on the client machine.</p>\n\n<p>A search engine implementation in javascript would be the perfect solution, but I have trouble finding any that looks solid / current / popular...?</p>\n\n<p>I did find these:\n+ <a href=\"http://search.cpan.org/~dpavlin/jsFind-0.07%5F01/jsFind.pm\">jsFind</a>\n+ <a href=\"http://code.google.com/p/js-search/\">js-search</a></p>\n\n<p>but both projects seem rather inactive?</p>\n\n<p>Another solution, besides a specific search engine in javascript, would be the ability to access local Lucene indices from javascript: the indices themselves would be built with Lucene and copied to the CD-Rom along with the HTML files.</p>\n\n<p><strong>Edit</strong>: built it myself (see below).</p>\n",
            "last_activity_date": 1396390612,
            "question_id": 1357173,
            "score": 10,
            "tags": [
                "javascript",
                "search",
                "lucene",
                "full-text-search"
            ],
            "title": "Full-text search for static HTML files on CD-Rom via javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>With <a href=\"http://docs.jquery.com/Events/scroll\">jQuery's scroll event</a>, you should be able to synchronize them.</p>\n\n<p><strong>Edit</strong>: No plugins required.  Here's the code that worked for me:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;SCRIPT language=\"javascript\" type=\"text/javascript\" src=\"jquery-1.3.2.js\"&gt;&lt;/SCRIPT&gt;\n&lt;SCRIPT&gt;\n$(document).ready(function()\n{\n$(\"#div1\").scroll(function () { \n    \t$(\"#div2\").scrollTop($(\"#div1\").scrollTop());\n    \t$(\"#div2\").scrollLeft($(\"#div1\").scrollLeft());\n    });\n$(\"#div2\").scroll(function () { \n    \t$(\"#div1\").scrollTop($(\"#div2\").scrollTop());\n    \t$(\"#div1\").scrollLeft($(\"#div2\").scrollLeft());\n    });\n\n});\n\n&lt;/SCRIPT&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"div1\" style=\"overflow:auto;height:100px;width:200px;border:1px solid black;\"&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\n&lt;/div&gt;\n\n&lt;div id=\"div2\" style=\"overflow:auto;height:100px;width:200px;border:1px solid black;\"&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\nTest..................................................................................................................................................................................................................................................................................test\n&lt;BR/&gt;&lt;BR/&gt;\n&lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>I synchronize overflowed div's using code like this:</p>\n\n<pre><code>frame1.onscroll = function(e) {\n   frame2.scrollTop = frame1.scrollTop;\n   frame2.scrollLeft = frame1.scrollLeft;\n };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Accepted solution works only if divs have the same width.\nIf not, it causes an infinite loop: #div1 scrolls #div2, then #div2's scroll event scrolls #div1 etc :)</p>\n\n<p>Edited solution:</p>\n\n<pre><code>var skip = false;\n$(\"#div1\").scroll(function () {\n    if (skip){skip=false; return;} else skip=true; \n    $(\"#div2\").scrollTop($(\"#div1\").scrollTop());\n    $(\"#div2\").scrollLeft($(\"#div1\").scrollLeft());\n});\n$(\"#div2\").scroll(function () { \n    $(\"#div1\").scrollTop($(\"#div2\").scrollTop());\n    $(\"#div1\").scrollLeft($(\"#div2\").scrollLeft());\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To synchronise an arbitrary number of elements use the following code:</p>\n\n<pre><code>jQuery.fn.synchroniseScroll = function() {\n\n        var elements = this;\n        if (elements.length &lt;= 1) return;\n\n        elements.scroll(\n        function() {\n            var left = $(this).scrollLeft();\n            var top = $(this).scrollTop();\n            elements.each(\n            function() {\n                if ($(this).scrollLeft() != left) $(this).scrollLeft(left);\n                if ($(this).scrollTop() != top) $(this).scrollTop(top);\n            }\n            );\n        });\n    }\n</code></pre>\n\n<p>Using this is SUPER simple.  Lets say you have several divs defined as:</p>\n\n<pre><code>&lt;div class=\u201dscrollDiv\u201d style=\u201doverflow:auto;\u201d&gt; .. some large content&lt;/div&gt;\n</code></pre>\n\n<p>To synchronize the scrollbars\u2019 on all divs with the class scrollDiv all you need to write is:</p>\n\n<pre><code>$(\u201c.scrollDiv\u201d).synchroniseScroll();\n</code></pre>\n\n<p>Source: <a href=\"http://blogs.msdn.com/b/matt/archive/2009/03/19/synchronizing-scrollbars-using-jquery.aspx\" rel=\"nofollow\">http://blogs.msdn.com/b/matt/archive/2009/03/19/synchronizing-scrollbars-using-jquery.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think this answer can fix the infinite loop.</p>\n\n<pre><code>      var jsScroll0;\n      var jsScroll1;\n      windows[0].on('scroll.scrollInTheSameTime', function() {\n        if (jsScroll1 === true) {\n          jsScroll1 = false;\n          return;\n        }\n        jsScroll0 = true;\n        windows[1].scrollTop(windows[0].scrollTop());\n        windows[1].scrollLeft(windows[0].scrollLeft());\n      });\n      windows[1].on('scroll.scrollInTheSameTime', function() {\n        if (jsScroll0 === true) {\n          jsScroll0 = false;\n          return;\n        }\n        jsScroll1 = true;\n        windows[0].scrollTop(windows[1].scrollTop());\n        windows[0].scrollLeft(windows[1].scrollLeft());\n        // jsScroll = false;\n      });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have an HTML layout based on tabs (say 5).\nIn each tab I load an iframe. The iframe contents are variations of one another that the user can compare by switching tabs.</p>\n\n<p>How can I, in javascript, synchronize the scrolling of all iframes vertically and horizontally?\nIn other words, scrolling in one iframe should scroll by the same amount all other iframes, allowing the user to compare the same data.</p>\n\n<p>Bonus points: iframe content is loaded only when the user opens the tab for the first time. So newly opened iframes should directly scroll to the same place as already opened iframes.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1390228458,
            "question_id": 762274,
            "score": 10,
            "tags": [
                "javascript",
                "html",
                "iframe"
            ],
            "title": "How to synchronize scrolling positions for several iframes"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Here is a good reference for you: <a href=\"http://www.docsteve.com/DocSteve/Samples/JS/js_version.html\">http://www.docsteve.com/DocSteve/Samples/JS/js_version.html</a></p>\n\n<p>Basically, use the deprecated language attribute of the script tag</p>\n\n<pre><code>&lt;script language=\"javascript\"&gt;var js_version=\"1.0\"&lt;/script&gt;\n&lt;script language=\"javascript1.1\"&gt;var js_version=\"1.1\"&lt;/script&gt;\n&lt;script language=\"javascript1.2\"&gt;var js_version=\"1.2\"&lt;/script&gt;\n&lt;script language=\"javascript1.3\"&gt;var js_version=\"1.3\"&lt;/script&gt;\n&lt;script language=\"javascript1.4\"&gt;var js_version=\"1.4\"&lt;/script&gt;\n&lt;script language=\"javascript1.5\"&gt;var js_version=\"1.5\"&lt;/script&gt;\n&lt;script language=\"javascript1.6\"&gt;var js_version=\"1.6\"&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I suppose it depends on what you want to do with the information, but many people prefer to do feature detection, instead of figuring out what browser someone is using or what version of JS.  </p>\n\n<p>Check out <a href=\"http://www.modernizr.com/\" rel=\"nofollow\">Modernizr</a>, which is a great library that does feature detection for you.  </p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>The solution proposed to <a href=\"http://www.docsteve.com/DocSteve/Samples/JS/js_version.html\" rel=\"nofollow\">http://www.docsteve.com/DocSteve/Samples/JS/js_version.html</a> as simple JavaScript function (using \"createElement\" construction):</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction get_js_version ()\n{\n    this.jsv = {\n            versions: [\n                \"1.1\", \"1.2\", \"1.3\", \"1.4\", \"1.5\", \"1.6\", \"1.7\", \"1.8\", \"1.9\", \"2.0\"\n            ],\n            version: \"\"\n        };\n\n    var d = document;\n\n    for (i = 0; i &lt; jsv.versions.length; i++) {\n        var g = d.createElement('script'),\n            s = d.getElementsByTagName('script')[0];\n\n            g.setAttribute(\"language\", \"JavaScript\" + jsv.versions[i]);\n            g.text = \"this.jsv.version='\" + jsv.versions[i] + \"';\";\n            s.parentNode.insertBefore(g, s);\n    }\n\n    return jsv.version;\n}\n\ndocument.write('JavaScript Version: ' + get_js_version());\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How can I detect what version of JavaScript the browser supports (if any)? I want to check for ECMAScript 3 versus ECMAScript 5 versus ECMAScript 6.</p>\n\n<p>Note: I want to avoid the deprecated <code>language</code> tag.</p>\n",
            "last_activity_date": 1415390237,
            "question_id": 7340726,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "Detect version of JavaScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This article</p>\n\n<p><a href=\"https://grepular.com/Abusing_HTTP_Status_Codes_to_Expose_Private_Information\">https://grepular.com/Abusing_HTTP_Status_Codes_to_Expose_Private_Information</a></p>\n\n<p>identifies security risks in Google and Facebook that will allow you to determine if a user is logged in.  While no official API exists to check if a user is logged in without that user giving you express permission to access this information, the above article shows how you can 'guess' if a user is logged in or not.</p>\n\n<p>Note: The article identifies a 'hack' and so is not guaranteed to work in the future, if or when Google &amp; Facebook identify these security risks.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>There is a non-hack, officially-supported way of doing this for Facebook (I think the last version of the docs was clearer on this point).\nUsing the <a href=\"https://developers.facebook.com/docs/reference/javascript/FB.getLoginStatus/\">Javascript SDK</a>, you can do:</p>\n\n<pre><code>&lt;div id=\"fb-root\"&gt;&lt;/div&gt;\n&lt;script&gt;\n  window.fbAsyncInit = function() {\n\n    FB.init({appId: 'YOUR APP ID', status: true, cookie: true,\n             xfbml: true});\n\n    FB.getLoginStatus(function(o) { \n       if (!o &amp;&amp; o.status) return;\n       if (o.status == 'connected') {\n          // USER IS LOGGED IN AND HAS AUTHORIZED APP\n       } else if (o.status == 'not_authorized') {\n          // USER IS LOGGED IN TO FACEBOOK (BUT HASN'T AUTHORIZED YOUR APP YET)\n       } else {\n          // USER NOT CURRENTLY LOGGED IN TO FACEBOOK\n       }\n    });\n\n  };\n\n  (function() {\n    var e = document.createElement('script'); e.async = true;\n    e.src = document.location.protocol +\n      '//connect.facebook.net/en_US/all.js';\n    document.getElementById('fb-root').appendChild(e);\n  }());\n\n&lt;/script&gt;\n</code></pre>\n\n<p>An aside: if <a href=\"http://xauth.org/\">XAuth</a> had caught on, it would be possible to do this in a more universal and supported way for any site supporting that standard.</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>I also ran into similar requirements and solved my problem with following code; Using the Javascript SDK, I used FB object. FB is a facebook object, it has property called _userStatus, this can be used like following.</p>\n\n<pre><code>if(FB._userStatus == \"connected\")\n{\n// USER IS LOGGED IN AND HAS AUTHORIZED APP \n}\nelse if(FB._userStatus == \"notConnected\"){\n   // USER IS LOGGED IN TO FACEBOOK (BUT HASN'T AUTHORIZED YOUR APP YET)  \n}\nelse if(FB._userStatus == \"unknown\")\n{\n    // USER NOT CURRENTLY LOGGED IN TO FACEBOOK \n}\n</code></pre>\n\n<p>The above code is very useful. It can be used in any part of the page as long FB object is not null.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>This question is not a duplicate of <a href=\"http://stackoverflow.com/questions/3348543/check-if-user-is-logged-in-new-facebook-api\">this one</a>.</p>\n\n<p>I don't want to know whether the user has authorized my application, but if the user is logged into facebook (completely independed from my application).</p>\n\n<p>The reason is that I want to pring user comments in my html code so that search engines can index them.</p>\n\n<p>When a user is logged into facebook I want to replace the html code with the facebook comments snippet. </p>\n\n<p>If not an alternative old school comment form should be displayed.</p>\n\n<p>I would pull the comments regularely from the graph api to have them in my database and comments that are done using the classic form should be posted over the api (not necessarily as the user, could be an admin account...) to have all the data synchronized.</p>\n\n<p>I looked at the Javascript SDK Docs, also found the function <a href=\"http://developers.facebook.com/docs/reference/javascript/fb.getloginstatus/\">getloginstatus</a> but the documentations are bad and not conclusive. I know that there are also often features available at facebook codes that are not documented or implemented in higher level apis.</p>\n\n<p>My questions are:</p>\n\n<ul>\n<li><p>Can I somehow find out if a user is logged into facebook?</p></li>\n<li><p>Can I somehow have a callback or notification of posted comments, so I can trigger synchronization to my database or do I have to \"crawl\" the graph api on a regular basis?</p></li>\n</ul>\n",
            "last_activity_date": 1343077609,
            "question_id": 5233560,
            "score": 9,
            "tags": [
                "javascript",
                "facebook"
            ],
            "title": "Possible to find out whether a user is logged into facebook over javascript API?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If I understand correctly, you want only the error for the failing step to show, right?</p>\n\n<p>That should be as simple as changing the failure case of the first promise to this:</p>\n\n<pre><code>step(1).then(function (response) {\n    step(2);\n}, function (response) {\n    stepError(1);\n    return response;\n}).then( ... )\n</code></pre>\n\n<p>By returning <code>$q.reject()</code> in the first step's failure case, you're rejecting that promise, which causes the errorCallback to be called in the 2nd <code>then(...)</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The reason your code doesn't work as expected is that it's actually doing something different from what you think it does.</p>\n\n<p>Let's say you have something like the following:</p>\n\n<pre><code>stepOne()\n.then(stepTwo, handleErrorOne)\n.then(stepThree, handleErrorTwo)\n.then(null, handleErrorThree);\n</code></pre>\n\n<p>To better understand what's happening, let's pretend this is synchronous code with <code>try</code>/<code>catch</code> blocks:</p>\n\n<pre><code>try {\n    try {\n        try {\n            var a = stepOne();\n        } catch(e1) {\n            a = handleErrorOne(e1);\n        }\n        var b = stepTwo(a);\n    } catch(e2) {\n        b = handleErrorTwo(e2);\n    }\n    var c = stepThree(b);\n} catch(e3) {\n    c = handleErrorThree(e3);\n}\n</code></pre>\n\n<p>The <code>onRejected</code> handler (the second argument of <code>then</code>) is essentially an error correction mechanism (like a <code>catch</code> block). If an error is thrown in <code>handleErrorOne</code>, it will be caught by the next catch block (<code>catch(e2)</code>), and so on.</p>\n\n<p>This is obviously not what you intended.</p>\n\n<p>Let's say we want the entire resolution chain to fail no matter what goes wrong:</p>\n\n<pre><code>stepOne()\n.then(function(a) {\n    return stepTwo(a).then(null, handleErrorTwo);\n}, handleErrorOne)\n.then(function(b) {\n    return stepThree(b).then(null, handleErrorThree);\n});\n</code></pre>\n\n<p>Note: We can leave the <code>handleErrorOne</code> where it is, because it will only be invoked if <code>stepOne</code> rejects (it's the first function in the chain, so we know that if the chain is rejected at this point, it can only be because of that function's promise).</p>\n\n<p>The important change is that the error handlers for the other functions are not part of the main promise chain. Instead, each step has its own \"sub-chain\" with an <code>onRejected</code> that is only called if the step was rejected (but can not be reached by the main chain directly).</p>\n\n<p>The reason this works is that both <code>onFulfilled</code> and <code>onRejected</code> are optional arguments to the <code>then</code> method. If a promise is fulfilled (i.e. resolved) and the next <code>then</code> in the chain doesn't have an <code>onFulfilled</code> handler, the chain will continue until there is one with such a handler.</p>\n\n<p>This means the following two lines are equivalent:</p>\n\n<pre><code>stepOne().then(stepTwo, handleErrorOne)\nstepOne().then(null, handleErrorOne).then(stepTwo)\n</code></pre>\n\n<p>But the following line is <em>not</em> equivalent to the two above:</p>\n\n<pre><code>stepOne().then(stepTwo).then(null, handleErrorOne)\n</code></pre>\n\n<p>Angular's promise library <code>$q</code> is based on kriskowal's <code>Q</code> library (which has a richer API, but contains everything you can find in <code>$q</code>). Q's <a href=\"https://github.com/kriskowal/q/wiki/API-Reference\">API docs</a> on GitHub could prove useful. Q implements the <a href=\"http://promises-aplus.github.io/promises-spec/\">Promises/A+ spec</a>, which goes into detail on how <code>then</code> and the promise resolution behaviour works exactly.</p>\n\n<p>EDIT:</p>\n\n<p>Also keep in mind that if you want to break out of the chain in your error handler, it needs to return a rejected promise or throw an Error (which will be caught and wrapped in a rejected promise automatically). If you don't return a promise, <code>then</code> wraps the return value in a resolve promise for you. This means that if you don't return anything, you are effectively returning a resolved promise for the value <code>undefined</code>.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>What you need is a repeating <code>.then()</code> chain with a special case to start and a special case to finish.</p>\n\n<p>The knack is to get the step number of the failure case to ripple through to a final error handler.</p>\n\n<ul>\n<li>Start: call <code>step(1)</code> unconditionally.</li>\n<li>Repeating pattern: chain a <code>.then()</code> with the following callbacks:\n<ul>\n<li>success: call step(n+1)</li>\n<li>failure: throw the value with which the previous deferered was rejected or rethrow the error.</li>\n</ul></li>\n<li>Finish: chain a <code>.then()</code> with no success handler and a final error handler.</li>\n</ul>\n\n<p>You can write the whole thing out longhand but it's easier to demonstrate the pattern with named, generalised functions :</p>\n\n<pre><code>function nextStep(n) {\n    return step(n + 1);\n}\n\nfunction step(n) {\n    console.log('step ' + n);\n    var deferred = $q.defer();\n    (n === 3) ? deferred.reject(n) : deferred.resolve(n);\n    return deferred.promise;\n}\n\nfunction stepError(n) {\n    throw(n);\n}\n\nfunction finalError(n) {\n    console.log('finalError ' + n);\n}\nstep(1)\n    .then(nextStep, stepError)\n    .then(nextStep, stepError)\n    .then(nextStep, stepError)\n    .then(nextStep, stepError)\n    .then(nextStep, stepError)\n    .then(null, finalError);});\n</code></pre>\n\n<p>see <a href=\"http://jsfiddle.net/9z9fw/\" rel=\"nofollow\">demo</a></p>\n\n<p>Note how in <code>step()</code>, the deferred is rejected or resolved with <code>n</code>, thus making that value available to the callbacks in the next <code>.then()</code> in the chain. Once <code>stepError</code> is called, the error is repeatedly rethrown until it is handled by <code>finalError</code>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var s = 1;\nstart()\n.then(function(){\n    return step(s++);\n})\n.then(function() {\n    return step(s++);\n})\n.then(function() {\n    return step(s++);\n})\n.then(0, function(e){\n   console.log(s-1); \n});\n</code></pre>\n\n<p><a href=\"http://jsbin.com/EpaZIsIp/20/edit\" rel=\"nofollow\">http://jsbin.com/EpaZIsIp/20/edit</a></p>\n\n<p>Or automated for any number of steps:</p>\n\n<pre><code>var promise = start();\nvar s = 1;\nvar l = 3;\nwhile(l--) {\n    promise = promise.then(function() {\n        return step(s++);\n    });\n}\npromise.then(0, function(e){\n   console.log(s-1); \n});\n</code></pre>\n\n<p><a href=\"http://jsbin.com/EpaZIsIp/21/edit\" rel=\"nofollow\">http://jsbin.com/EpaZIsIp/21/edit</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<h3>Update:</h3>\n\n<p>To help future viewers of this post, I created <strong><a href=\"http://jsbin.com/EpaZIsIp/18/edit\">this demo of pluma's answer</a>.</strong> </p>\n\n<h2>Question:</h2>\n\n<p>My goal seems fairly straightforward.</p>\n\n<pre><code>  step(1)\n  .then(function() {\n    return step(2);\n  }, function() {\n    stepError(1);\n    return $q.reject();\n  })\n  .then(function() {\n\n  }, function() {\n    stepError(2);\n  });\n\n  function step(n) {\n    var deferred = $q.defer();\n    //fail on step 1\n    (n === 1) ? deferred.reject() : deferred.resolve();\n    return deferred.promise;\n  }\n  function stepError(n) {\n    console.log(n); \n  }\n</code></pre>\n\n<p>The problem here is that if I fail on step 1, both <code>stepError(1)</code> AND <code>stepError(2)</code> are fired. If I don't <code>return $q.reject</code> then <code>stepError(2)</code> won't be fired, but <code>step(2)</code> will, which I understand. I've accomplished everything except what I'm trying to do.</p>\n\n<p>How do I write promises so that I can call a function on rejection, without calling all of the functions in the error chain? Or is there another way to accomplish this?</p>\n\n<p><a href=\"http://jsbin.com/EpaZIsIp/3/edit\"><strong>Here's a live demo</strong></a> so you've got something work with.</p>\n\n<h2>Update:</h2>\n\n<p>I <strong><em>kind of</em></strong> have solved it. Here, I am catching the error at the end of the chain and passing the data to <code>reject(data)</code> so that I will know what issue to handle in the error function. This actually doesn't meet my requirements because I don't want to depend on the data. It would be lame, but in my case it would be cleaner to pass an error callback to the function rather than to depend on the returned data to determine what to do.</p>\n\n<p><strong><a href=\"http://jsbin.com/EpaZIsIp/10/edit\">Live demo here (click).</a></strong></p>\n\n<pre><code>step(1)\n  .then(function() {\n    return step(2);\n  })\n  .then(function() {\n    return step(3);\n  })\n  .then(false, \n    function(x) {\n      stepError(x);\n    }\n  );\n  function step(n) {\n    console.log('Step '+n);\n    var deferred = $q.defer();\n    (n === 1) ? deferred.reject(n) : deferred.resolve(n);\n    return deferred.promise;\n  }\n  function stepError(n) {\n    console.log('Error '+n); \n  }\n</code></pre>\n",
            "last_activity_date": 1387640299,
            "question_id": 20714460,
            "score": 8,
            "tags": [
                "javascript",
                "angularjs",
                "promise"
            ],
            "title": "Break promise chain and call a function based on the step in the chain where it is broken (rejected)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There is the <code>is-open</code> attribute on the accordion-group which points to a bindable expression. You could watch this expression and execute some logic when a given accordion group is open. Using this technique you would change your markup to:</p>\n\n<pre><code>&lt;accordion-group ng-repeat=\"group in groups\" heading=\"{{group.title}}\" is-open=\"group.open\"&gt;\n   {{group.content}}\n&lt;/accordion-group&gt;\n</code></pre>\n\n<p>so that you can, in the controller, prepare a desired watch expression:</p>\n\n<pre><code>$scope.$watch('groups[0].open', function(isOpen){\n    if (isOpen) {\n      console.log('First group was opened'); \n    }    \n  });\n</code></pre>\n\n<p>While the above works it might be a bit cumbersome to use in practice so if you feel like this could be improved open an issue in <a href=\"https://github.com/angular-ui/bootstrap\">https://github.com/angular-ui/bootstrap</a></p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Accordion groups also allow for an accordion-heading directive instead of providing it as an attribute. You can use that and then wrap your header in another tag with an ng-click.</p>\n\n<pre><code>    &lt;accordion-group ng-repeat=\"group in groups\" heading=\"{{group.title}}\" is-open=\"group.open\"&gt;\n        &lt;accordion-heading&gt;\n            &lt;span ng-click=\"opened(group, $index)\"&gt;{{group.content}}&lt;/span&gt;\n        &lt;/accordion-heading&gt;\n    &lt;/accordion-group&gt;\n</code></pre>\n\n<p>Example: <a href=\"http://plnkr.co/edit/B3LC1X?p=preview\">http://plnkr.co/edit/B3LC1X?p=preview</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>accordion-controller.js</p>\n\n<pre><code>MyApp.Controllers\n    .controller('AccordionCtrl', ['$scope', function ($scope) {\n\n        $scope.groups = [\n            {\n                title: \"Dynamic Group Header - 1\",\n                content: \"Dynamic Group Body - 1\",\n                open: false\n            },\n            {\n                title: \"Dynamic Group Header - 2\",\n                content: \"Dynamic Group Body - 2\",\n                open: false\n\n            },\n            {\n                title: \"Dynamic Group Header - 3\",\n                content: \"Dynamic Group Body - 3\",\n                open: false\n            }\n        ];\n\n        /**\n         * Open panel method\n         * @param idx {Number} - Array index\n         */\n        $scope.openPanel = function (idx) {\n            if (!$scope.groups[idx].open) {\n                console.log(\"Opened group with idx: \" + idx);\n                $scope.groups[idx].open = true;\n            }\n        };\n\n        /**\n         * Close panel method\n         * @param idx {Number} - Array index\n         */\n        $scope.closePanel = function (idx) {\n            if ($scope.groups[idx].open) {\n                console.log(\"Closed group with idx: \" + idx);\n                $scope.groups[idx].open = false;\n            }\n        };\n\n    }]);\n</code></pre>\n\n<p>index.html</p>\n\n<pre><code>&lt;div ng-controller=\"AccordionCtrl\"&gt;\n\n    &lt;accordion&gt;\n\n        &lt;accordion-group ng-repeat=\"group in groups\" is-open=\"group.open\"&gt;\n            &lt;button ng-click=\"closePanel($index)\"&gt;Close me&lt;/button&gt;\n            {{group.content}}\n        &lt;/accordion-group&gt;\n\n\n        &lt;button ng-click=\"openPanel(0)\"&gt;Set 1&lt;/button&gt;\n        &lt;button ng-click=\"openPanel(1)\"&gt;Set 2&lt;/button&gt;\n        &lt;button ng-click=\"openPanel(2)\"&gt;Set 3&lt;/button&gt;\n\n    &lt;/accordion&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a solution inspired by kjv's answer, which easily tracks which accordion element is open. I found difficult getting <code>ng-click</code> to work on the accordion heading, though surrounding the element in a <code>&lt;span&gt;</code> tag and adding the ng-click to that worked fine.</p>\n\n<p>Another problem I encountered was, although the <code>accordion</code> elements were added to the page programmatically, the content was not. When I tried loading the content using Angular directives(ie. <code>{{path}}</code>) linked to a <code>$scope</code> variable I would be hit with <code>undefined</code>, hence the use of the bellow method which populates the accordion content using the ID <code>div</code> embedded within.</p>\n\n<p><strong>Controller:</strong></p>\n\n<pre><code>    //initialise the open state to false\n    $scope.routeDescriptors[index].openState == false\n\n    function opened(index) \n    {\n        //we need to track what state the accordion is in\n        if ($scope.routeDescriptors[index].openState == true){   //close an accordion\n            $scope.routeDescriptors[index].openState == false\n        } else {    //open an accordion\n            //if the user clicks on another accordion element\n            //then the open element will be closed, so this will handle it\n            if (typeof $scope.previousAccordionIndex !== 'undefined') {\n                $scope.routeDescriptors[$scope.previousAccordionIndex].openState = false;\n            }\n            $scope.previousAccordionIndex = index;\n            $scope.routeDescriptors[index].openState = true;\n    }\n\n    function populateDiv(id)\n    {\n        for (var x = 0; x &lt; $scope.routeDescriptors.length; x++)\n        {\n            $(\"#_x\" + x).html($scope.routeDescriptors[x]);\n        }\n    }\n</code></pre>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>        &lt;div ng-hide=\"hideDescriptions\" class=\"ng-hide\" id=\"accordionrouteinfo\" ng-click=\"populateDiv()\"&gt;\n            &lt;accordion&gt;\n                &lt;accordion-group ng-repeat=\"path in routeDescriptors track by $index\"&gt;\n                    &lt;accordion-heading&gt;\n                        &lt;span ng-click=\"opened($index)\"&gt;route {{$index}}&lt;/span&gt;\n                    &lt;/accordion-heading&gt;\n                    &lt;!-- Notice these divs are given an ID which corresponds to it's index--&gt;\n                    &lt;div id=\"_x{{$index}}\"&gt;&lt;/div&gt;\n                &lt;/accordion-group&gt;\n            &lt;/accordion&gt;\n        &lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I used an associative array to create a relationship between the opened state and the model object.</p>\n\n<p>The HTML is:</p>\n\n<pre><code>  &lt;div ng-controller=\"CaseController as controller\"&gt;\n\n\n                &lt;accordion close-others=\"controller.model.closeOthers\"&gt;\n                    &lt;accordion-group ng-repeat=\"topic in controller.model.topics track by topic.id\" is-open=\"controller.model.opened[topic.id]\"&gt;\n                       &lt;accordion-heading&gt;\n                          &lt;h4 class=\"panel-title clearfix\" ng-click=\"controller.expand(topic)\"&gt;\n                         &lt;span class=\"pull-left\"&gt;{{topic.title}}&lt;/span&gt;\n                         &lt;span class=\"pull-right\"&gt;Updated: {{topic.updatedDate}}&lt;/span&gt;\n                          &lt;/h4&gt;                           \n                       &lt;/accordion-heading&gt;\n                  &lt;div class=\"panel-body\"&gt;\n\n                      &lt;div class=\"btn-group margin-top-10\"&gt;\n                          &lt;button type=\"button\" class=\"btn btn-default\" ng-click=\"controller.createComment(topic)\"&gt;Add Comment&lt;i class=\"fa fa-plus\"&gt;&lt;/i&gt;&lt;/button&gt;\n                      &lt;/div&gt;\n                     &lt;div class=\"btn-group margin-top-10\"&gt;\n                         &lt;button type=\"button\" class=\"btn btn-default\" ng-click=\"controller.editTopic(topic)\"&gt;Edit Topic&lt;i class=\"fa fa-pencil-square-o\"&gt;&lt;/i&gt;&lt;/button&gt;\n                     &lt;/div&gt;\n                      &lt;h4&gt;Topic Description&lt;/h4&gt;\n                      &lt;p&gt;&lt;strong&gt;{{topic.description}}&lt;/strong&gt;&lt;/p&gt;\n                      &lt;ul class=\"list-group\"&gt;\n                          &lt;li class=\"list-group-item\" ng-repeat=\"comment in topic.comments track by comment.id\"&gt;\n                              &lt;h5&gt;Comment by: {{comment.author}}&lt;span class=\"pull-right\"&gt;Updated: &lt;span class=\"commentDate\"&gt;{{comment.updatedDate}}&lt;/span&gt; | &lt;span class=\"commentTime\"&gt;{{comment.updatedTime}}&lt;/span&gt;&lt;/span&gt;&lt;/h5&gt;\n                              &lt;p&gt;{{comment.comment}}&lt;/p&gt;\n                             &lt;div class=\"btn-group\"&gt;\n                               &lt;button type=\"button\" class=\"btn btn-default btn-xs\" ng-click=\"controller.editComment(topic, comment)\"&gt;Edit &lt;i class=\"fa fa-pencil-square-o\"&gt;&lt;/i&gt;&lt;/button&gt;\n                               &lt;button type=\"button\" class=\"btn btn-default btn-xs\" ng-click=\"controller.deleteComment(comment)\"&gt;Delete &lt;i class=\"fa fa-trash-o\"&gt;&lt;/i&gt;&lt;/button&gt;\n                             &lt;/div&gt;\n                          &lt;/li&gt;\n                      &lt;/ul&gt;\n                  &lt;/div&gt;\n\n                    &lt;/accordion-group&gt;\n                &lt;/accordion&gt;\n</code></pre>\n\n<p>The controller snippet is:</p>\n\n<pre><code>   self.model = {\n      closeOthers : false,\n      opened   : new Array(),\n      topics   : undefined\n   };\n</code></pre>\n\n<p>The 'topics' are populated on an AJAX call.  Separating the 'opened' state from the model objects that are updated from the server means the state is preserved across refreshes.</p>\n\n<p>I also declare the controller with <code>ng-controller=\"CaseController as controller\"</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If I have this code:</p>\n\n<pre><code>&lt;accordion-group heading=\"{{group.title}}\" ng-repeat=\"group in groups\"&gt;\n      {{group.content}}\n&lt;/accordion-group&gt;\n</code></pre>\n\n<p>Using AngularJS, angular-ui and Twitter Bootstrap, is it possible to make the accordion call some action when opened? I know I can't simply add <code>ng-click</code>, because that is already used after it's \"compiled\" to HTML for opening/collapsing of the group.</p>\n",
            "last_activity_date": 1412089383,
            "question_id": 15642082,
            "score": 8,
            "tags": [
                "javascript",
                "twitter-bootstrap",
                "angularjs",
                "angular-ui"
            ],
            "title": "Handle open/collapse events of Accordion in Angular"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Have you tried the compile function?\nhttp://docs.angularjs.org/api/ng.$compile</p>\n\n<p>I did not look into angular a lot yet, but I think this could work.</p>\n\n<p>alternatively you could try bootstrapping the stuff. but I dont believe it is the correct way... <a href=\"http://docs.angularjs.org/guide/bootstrap\" rel=\"nofollow\">http://docs.angularjs.org/guide/bootstrap</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>After you add the <code>content</code> to the DOM, you'll need to find it (maybe with a jQquery selector?), then <code>$compile</code>() it and apply it to the appropriate scope.  This will cause Angular to parse your content and act on any directives it finds (like ng-include).</p>\n\n<p>E.g., <code>$compile(foundElement)(scope)</code></p>\n\n<p>Without more code, it is difficult to give a more precise answer.  However, here is a <a href=\"http://stackoverflow.com/a/14046556/215945\">similar question and answer</a> you can look at.</p>\n\n<p><strong>Update:</strong> okay, I finally got this to work, and I learned a few things.</p>\n\n<pre><code>google.maps.event.addListener(\n      marker,\n      'click',\n      (function( marker , scope, localLatLng ){\n        return function(){\n          var content = '&lt;div id=\"infowindow_content\" ng-include src=\"\\'infowindow.html\\'\"&gt;&lt;/div&gt;';\n          scope.latLng = localLatLng;\n          var compiled = $compile(content)(scope);\n          scope.$apply();\n          infowindow.setContent( compiled[0].innerHTML );\n          infowindow.open( Map , marker );\n        };//return fn()\n      })( marker , scope, scope.markers[i].locations )\n</code></pre>\n\n<p>I was under the impression that only DOM elements could be $compiled -- i.e., that I first had to add the content to the DOM, and then compile it.  It turns out that is not true.  Above, I first compile <code>content</code> against the <code>scope</code>, and then add it to the DOM.  (I don't know if this might break databinding -- i.e., the $watch()es that were set up by $compile.)  I had to set <code>scope.latLng</code> because the ng-included template needs to interpolate <code>{{latLng[0]}}</code> and <code>{{latLng[1]}}</code>.  I used <code>innerHTML</code> instead of <code>outerHTML</code> so that only the contents of infowindow.html are inserted.</p>\n\n<p><a href=\"http://plnkr.co/edit/7yQWY0?p=preview\">Plunker</a>.</p>\n\n<p><strong>Update2:</strong>  Clicking does not work the first time.  It appears that 'infowindow.html' is not loaded until a second click (I tried calling scope.$apply() a second time... didn't help).  When I had the plunker working, I had inlined the contents of infowindow.html in index.html:</p>\n\n<pre><code>&lt;script type=\"text/ng-template\" id=\"/test.html\"&gt;\n  &lt;h4&gt;{{latLng[0]}},{{latLng[1]}}&lt;/h4&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>I was using that in addListener():</p>\n\n<pre><code>var content = '&lt;div id=\"infowindow_content\" ng-include src=\"\\'/test.html\\'\"&gt;&lt;/div&gt;';\n</code></pre>\n\n<p>I changed the plunker to use the inlined template.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>The above answers are solid, but you lose your binding on:</p>\n\n<pre><code>infowindow.setContent( compiled[0].innerHTML );\n</code></pre>\n\n<p>Do this instead:</p>\n\n<pre><code>infowindow.setContent( compiled[0] );\n</code></pre>\n\n<p>Otherwise if you have something like <code>&lt;div&gt;{{myVar}}&lt;/div&gt;</code>, it won't update if <code>myVar</code> is updated in your app.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to include a template file <code>views/infowindow.html</code> as the content of my InfoWindow from service I wrote to initiate the google maps api:</p>\n\n<pre><code>for ( var count = locations.length, i = 0; i &lt; count; i++ ) {\n\n  var latLng  = locations[i],\n    marker = new google.maps.Marker({\n      \u2026\n    }),\n    infowindow = new google.maps.InfoWindow();\n\n  google.maps.event.addListener(\n    marker,\n    'click',\n    (function( marker , latLng ){\n      return function(){\n        var content = '&lt;div ng-include src=\"\\'infowindow.html\\'\"&gt;&lt;/div&gt;';\n        infowindow.setContent( content );\n        infowindow.open( Map , marker );\n      }//return fn()\n    })( marker , latLng )\n  );//addListener\n\n}//for\n</code></pre>\n\n<p>However, it seems that Angular is not processing <code>content</code> when it is inserted into the InfoWindow (when inspecting the code via Dev Tools, the code that gets inserted is <code>&lt;div ng-include src=\"'views/infowindow.html'\"&gt;&lt;/div&gt;</code>).</p>\n\n<p>I was hoping Angular would pre-process my include before it was inserted into the InfoWindow, but alas no.</p>\n\n<p>Is what I'm trying to do possible?</p>\n\n<p>I'm thinking that I'll have to somehow cache the template before passing it to <code>infowindow.setContent()</code>, but I don't know how to do that (or if that's even what I <em>should</em> be doing). I would prefer to load the template on the event instead of caching and injecting it for each marker.</p>\n\n<p><strong>EDIT</strong> Looking at $templateCache and a <a href=\"http://stackoverflow.com/a/12346901/758177\">related SO question</a>.</p>\n\n<p><strong>EDIT 2</strong> Here's a <a href=\"http://embed.plnkr.co/vfntxf\">plunk</a> that tries to use <code>$compile</code> (the content of InfoWindow is still <code>&lt;div id=\"infowindow_content\" ng-include src=\"'infowindow.html'\"&gt;&lt;/div&gt;</code>)</p>\n\n<hr />\n\n<h2>SOLUTION</h2>\n\n<p>The basis for this came from <a href=\"http://stackoverflow.com/a/14228601/758177\">Mark's answer below</a>. In his solution, the content for InfoWindow is compiled on first click (of any marker) but the InfoWindow does not actually open until another click on any Marker, probably because GoogleMaps is impatient.</p>\n\n<p>Moving the <code>$compile</code> outside and then passing the compiled template into  <code>.addListener</code> solves this problem:</p>\n\n<pre><code>for ( \u2026 ) {\n  \u2026\n  infowindow = new google.maps.InfoWindow();\n  scope.markers \u2026\n  var content = '&lt;div id=\"infowindow_content\" ng-include src=\"\\'infowindow.html\\'\"&gt;&lt;/div&gt;';\n  var compiled = $compile(content)(scope);\n\n  google.maps.event.addListener(\n    marker,\n    'click',\n    (function( marker , scope, compiled , localLatLng ){\n      return function(){\n        scope.latLng = localLatLng;//to make data available to template\n        scope.$apply();//must be inside write new values for each marker\n        infowindow.setContent( compiled[0].innerHTML );\n        infowindow.open( Map , marker );\n      };//return fn()\n    })( marker , scope, compiled , scope.markers[i].locations )\n  );//addListener\n\n}//for\n</code></pre>\n\n<p><a href=\"http://plnkr.co/edit/vfntxf\">Updated Plunker</a>.</p>\n",
            "last_activity_date": 1414527531,
            "question_id": 14226975,
            "score": 8,
            "tags": [
                "javascript",
                "google-maps-api-3",
                "include",
                "angularjs",
                "infowindow"
            ],
            "title": "AngularJS ng-include inside of Google Maps InfoWindow?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>first of all javascript can't write to a file. The best you'll be able\n  to do is get Javascript to read and edit the XML then post that data\n  to a server-side script to write to file.</p>\n</blockquote>\n\n<p>well in general people use a different class to address this issue and replace the existing class with the new class rather than go edit the css file itself, which sounds pretty weird to me.. </p>\n\n<p>I stumbled upon <a href=\"http://www.thesitewizard.com/javascripts/change-style-sheets.shtml\" rel=\"nofollow\">this blogpost</a> may be this is what you are looking for.. he shows different ways to get news stylesheets based on your requirement.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>While I agree with @Baz1inga that in general this would be easier to do by adding and removing classes, I also know there are certain cases where LESS-style variables work much better (e.g. if the color is sometimes foreground, sometimes background, or is lightened in certain places). This is definitely do-able; in fact, here's some tested code that will do it (minus the jQuery-style syntax; any particular reason for needing that?):</p>\n\n<pre><code>function update_css(newcss) {\n    var id = \"styleholder\";\n    if ((css = document.getElementById(id)) === null) {\n        css = document.createElement('style');\n        css.type = 'text/css';\n        css.id = id;\n        document.getElementsByTagName('head')[0].appendChild(css);\n    }\n    if (css.styleSheet) { // IE\n        try {\n            css.styleSheet.cssText = newcss;\n        } catch (e) {\n            throw new(Error)(\"Couldn't reassign styleSheet.cssText.\");\n        }\n    } else {\n        (function (node) {\n            if (css.childNodes.length &gt; 0) {\n                if (css.firstChild.nodeValue !== node.nodeValue) {\n                    css.replaceChild(node, css.firstChild);\n                }\n            } else {\n                css.appendChild(node);\n            }\n        })(document.createTextNode(newcss));\n    }\n}\n\nlessvars = {mycolor: \"red\"};\n\nmaincode = \"div { color: @mycolor; }\"; // this would be a long string, loaded via AJAX from a LESS file on the server\n\nfunction compile_less(variables) {\n    var variable_less = \"\";\n    for (var variable in variables) {\n        variable_less += \"@\" + variable + \": \" + variables[variable] + \";\";\n    }\n    new(less.Parser)({\n        optimization: less.optimization\n    }).parse(variable_less + maincode, function (e, root) {\n        update_css(root.toCSS());\n    });\n}\n\ncompile_less(lessvars);\n\nfunction set_less_var(name, value) {\n    lessvars[name] = value;\n    compile_less(lessvars);\n}\n</code></pre>\n\n<p>The \"update_css\" function above is derived from the \"createCSS\" function in less.js; the rest I wrote. You can now, at any time, do something like this, to change the color and havethe effects appear immediately in the site content:</p>\n\n<pre><code>set_less_var(\"mycolor\", \"green\");\n</code></pre>\n\n<p>(Note that, of course, your \"maincode\" should probably be loaded from .less files in the background -- I just assigned them here to variables for simplicity.)</p>\n\n<p>Just for fun (as I don't recommend it) -- and to show you that I think my code does what you want -- here's a function that allows you to use the above code to do <code>$(\"@mycolor\").value(\"black\");</code>:</p>\n\n<pre><code>function $(varname) {\n    return {\n        value: function(val) {\n            set_less_var(varname.slice(1), val);\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you can do c# and want to do this server-side, the port dotless supports plugins where you implement a visitor pattern to programmatically alter the less ast before it is spit out...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>it is definitely possible, but i had to modify the less sourcecode a bit\n(which i think is fine, considering it's really not meant to be done :) ) </p>\n\n<p>i suppose everyone wants to see a demo first, click here: \n<a href=\"http://jsfiddle.net/kritzikratzi/BRJXU/1/\">http://jsfiddle.net/kritzikratzi/BRJXU/1/</a>\n(script-window contains only the modified less.js-source, everything of interest is in the html window)</p>\n\n<p>kk, i'll first explain my patch, usage is at the end. </p>\n\n<h2>patch consists of three parts</h2>\n\n<p><strong>add a utility function</strong></p>\n\n<pre><code>less.Overrides = {}; \nless.Override = function( variableName, value ){\n    if( !value ){\n        delete less.Overrides[variableName]; \n    }\n    else{\n        less.Overrides[variableName] = value; \n    }\n    less.refreshStyles(); \n}; \n</code></pre>\n\n<p>save the property into an object and tell less to update it's styles. </p>\n\n<p><strong>modify the parse function</strong></p>\n\n<pre><code>   function parse(str, callback ){\n        ... \n\n        var overrides = \"\\n\\n\"; \n        for( var key in less.Overrides ){\n            overrides += key + \": \" + less.Overrides[key] + \";\\n\"; \n        }\n\n        str += overrides; \n</code></pre>\n\n<p>all we do here is serialize the overridden properties and add them to the end of every file that is parsed. </p>\n\n<p><strong>modify the loadStyles function</strong></p>\n\n<pre><code>    if (styles[i].type.match(typePattern) || styles[i].hasAttribute( \"lessText\" )) {\n        var lessText; \n        if( styles[i].hasAttribute( \"lessText\" ) ){\n            lessText = styles[i].getAttribute( \"lessText\" );\n        }\n        else{\n            lessText = styles[i].innerHTML || ''; \n            styles[i].setAttribute( \"lessText\", lessText );\n        }\n    ....\n</code></pre>\n\n<p>by default less will replace the type parameter from <code>&lt;style type='text/less'&gt;</code> to <code>type='text/css'</code> and forgot about the less-source. to prevent this the original less-source is stored and loaded. </p>\n\n<h2>usage and conclusion</h2>\n\n<pre><code>&lt;style type=\"text/less\"&gt;\n    @color: green; \n\n    #header{ color: @color; }\n&lt;/style&gt;\n&lt;div id=\"header\"&gt;i'm the header!&lt;/div&gt;\n&lt;a href=\"#\" onclick=\"less.Override('@color', 'red');\"&gt;make it red&lt;/a&gt; \n</code></pre>\n\n<p>this works just fine on my computer and i have to admit it looks very neat. \ni haven't tested external less files, if they don't work it should be easy to fix. </p>\n\n<p>i still think it's not the best idea to use this in a production environment (for reasons mentioned by others already). </p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>it might, just might be a good id\u00e9er but if your css / html is right this shouldn't be necessary at all, you just have to css in the right way you could stack your classes if you have alot of \"a\" tags. If you have very big websites your customers can be quite picky about some little changes like font then its good to customize your outcome and then it is very easy to just css your way out of it, than to make more variables to make your outcome</p>\n\n<p>If you wanna change 1 color your just use your find tool and use find and replace.</p>\n\n<p>please just use some css &amp; comon knowlegde to get your result the more scripts manipulating your website the more load time.</p>\n\n<p>Best regards</p>\n\n<p>SP</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>It's possible to use libraries in less.js to dynamically regenerate css from less files within the browser. If there was an easy way to modify less code, this would be an extremely powerful method of dynamically updating a site's css.</p>\n\n<p>Imagine you had a colour that was used 100 times throughout a large site. If you wanted to change that color dynamically just using javascript, you would need to update every bit of css that had that colour (perhaps 50 lines of code).</p>\n\n<p>With what I'm imagining all you would need to write is something like this:</p>\n\n<pre><code>$('@mainColour').value('#F04');\n</code></pre>\n\n<p>I'm thinking of having a go at this myself, but it sounds like a huge project and I wonder if someone has already started something like this?</p>\n\n<p>edit: to clarify, ideally what I want to be able to do is take a string of Less code, programatically edit it (perhaps using a jquery-like selector syntax) and then spit it out as modified Less. Ideally the code is in Javascript (but not necessarily client side) The example I give above is one possible application but maybe not a good one (where there might be better more common ways of achieving it).</p>\n",
            "last_activity_date": 1348214570,
            "question_id": 10274260,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "less"
            ],
            "title": "Programmatically editing Less (css) code with JQuery-like selector syntax?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If you have jQuery, try this:</p>\n\n<pre><code>$('html').bind('keypress', function(e)\n{\n   if(e.keyCode == 13)\n   {\n      return false;\n   }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Your <code>=</code> should probably be an <code>==</code> (comparison vs. assignment)</p>\n\n<pre><code>if (window.event.keyCode == 13 ) return false;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I've used this code successfully.</p>\n\n<pre><code>function handleKeypress(e){\n\n    e = e || window.event ;\n    if (e == null){\n        return false;\n    }\n\n    if (e.keycode == 13){\n        CompleteEvent(e);\n    }\n}\n\nfunction CompleteEvent(e){\n    e.cancelBubble = true;\n    e.returnValue = false;\n}\n</code></pre>\n\n<p>Also I highly recommend using the new form of hook setting for javascript.</p>\n\n<pre><code>function setKeyHook()\n{     \n    var eventName = 'onkeydown';\n    var handlerFunc = handleKeypress;\n\n\n    body.detachEvent( eventName, handlerFunc );              \n\n    body.attachEvent( eventName, handlerFunc );\n\n}\n\nonload = setKeyHook;\n</code></pre>\n\n<p>Good luck.</p>\n\n<p>See <a href=\"http://stackoverflow.com/questions/1059574/javascript-event-not-being-set-correctly-in-closure-when-called-cross-frame\">this question</a> for more information than you wanted.\nKudos to <a href=\"http://stackoverflow.com/users/8815/peter-bailey\">Peter Bailey</a> for teaching me.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This worked for me.</p>\n\n<pre><code>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=windows-1252\"&gt;\n\n&lt;head&gt;\n&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=windows-1252\"&gt;\n\n&lt;script language=\"JavaScript\"&gt;\nfunction TriggeredKey(e)\n{\n    var keycode;\n    if (window.event) keycode = window.event.keyCode;\n    if (window.event.keyCode != 13 ) return false;\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body onkeydown=\"TriggeredKey(this)\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I just want to disable the <kbd>Enter</kbd> key on the keyboard. The following script locks the whole keyboard down for some reason except for still allowing only the <kbd>Enter</kbd> key to be used. </p>\n\n<p>If this helps pinpoint what's missing or wrong, I'm using V.S. 2005, VB.NET 2.0, and I.E. 7.</p>\n\n<pre><code>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=windows-1252\"&gt;\n\n&lt;head&gt;\n    &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=windows-1252\"&gt;\n\n    &lt;script language=\"JavaScript\"&gt;\n    function TriggeredKey(e)\n    {\n        var keycode;\n        if (window.event) keycode = window.event.keyCode;\n        if (window.event.keyCode = 13 ) return false;\n    }\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body onkeydown=\"TriggeredKey(this)\"&gt;\n</code></pre>\n",
            "last_activity_date": 1388351685,
            "question_id": 1235716,
            "score": 8,
            "tags": [
                "javascript"
            ],
            "title": "Disable keyboard &lt;enter&gt; key"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This is not only the right way to go, but the only way. Basically each connection needs a unique ID. Otherwise you won't be able to identify them, it's as simple as that.</p>\n\n<p>Now how you will represent it it's a different thing. Making an object with <code>id</code> and <code>connection</code> properties is a good way to do that ( I would definitely go for it ). You could also attach the <code>id</code> directly to connection object.</p>\n\n<p>Also remember that if you want communication between users, then you have to send target user's ID as well, i.e. when user A wants to send a message to user B, then obviously A has to know the ID of B.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Here's a simple chat server private/direct messaging.</p>\n\n<p><code>package.json</code></p>\n\n<pre><code>{\n  \"name\": \"chat-server\",\n  \"version\": \"0.0.1\",\n  \"description\": \"WebSocket chat server\",\n  \"author\": \"Matt Di Pasquale (mattdipasquale.com)\",\n  \"dependencies\": {\n    \"ws\": \"0.4.x\"\n  },\n  \"engines\": {\n    \"node\": \"0.10.x\"\n  }\n}\n</code></pre>\n\n<p><code>server.js</code></p>\n\n<pre><code>var webSocketServer = new (require('ws')).Server({port: (process.env.PORT || 5000)}),\n    webSockets = {} // userID: webSocket\n\n// CONNECT /:userID\n// wscat -c ws://localhost:5000/1\nwebSocketServer.on('connection', function (webSocket) {\n  var userID = parseInt(webSocket.upgradeReq.url.substr(1), 10)\n  webSockets[userID] = webSocket\n  console.log('connected: ' + userID + ' in ' + Object.getOwnPropertyNames(webSockets))\n\n  // Forward Message\n  //\n  // Receive               Example\n  // [toUserID, text]      [2, \"Hello, World!\"]\n  //\n  // Send                  Example\n  // [fromUserID, text]    [1, \"Hello, World!\"]\n  webSocket.on('message', function(message) {\n    console.log('received from ' + userID + ': ' + message)\n    var messageArray = JSON.parse(message)\n    var toUserWebSocket = webSockets[messageArray[0]]\n    if (toUserWebSocket) {\n      console.log('sent to ' + messageArray[0] + ': ' + JSON.stringify(messageArray))\n      messageArray[0] = userID\n      toUserWebSocket.send(JSON.stringify(messageArray))\n    }\n  })\n\n  webSocket.on('close', function () {\n    delete webSockets[userID]\n    console.log('deleted: ' + userID)\n  })\n})\n</code></pre>\n\n<h3>Instructions</h3>\n\n<p>To test it out, run <code>npm install</code> to install <a href=\"https://github.com/einaros/ws\" rel=\"nofollow\"><code>ws</code></a>. Then, to start the chat server, run <code>node server.js</code> (or <code>npm start</code>) in one Terminal tab. Then, in another Terminal tab, run <code>wscat -c ws://localhost:5000/1</code>, where <code>1</code> is the connecting user's user ID. Then, in a third Terminal tab, run <code>wscat -c ws://localhost:5000/2</code>, and then, to send a message from user <code>2</code> to <code>1</code>, enter <code>[\"1\", \"Hello, World!\"]</code>.</p>\n\n<h3>Shortcomings</h3>\n\n<p>This chat server is very simple.</p>\n\n<ul>\n<li><p>Persistence</p>\n\n<p>It doesn't store messages to a database, such as PostgreSQL. So, the user you're sending a message to must be connected to the server to receive it. Otherwise, the message is lost.</p></li>\n<li><p>Security</p>\n\n<p>It is insecure.</p>\n\n<ul>\n<li><p>If I know the server's URL and my friend's user ID, then I can just connect to the server as him and start sexting his girlfriend (assuming I also know her user ID). To make it more secure, modify the server to accept your access token (instead of your user ID) when connecting. Then, the server can get your user ID from your access token and authenticate you.</p></li>\n<li><p>I'm not sure if it supports a WebSocket Secure (<code>wss://</code>) connection since I've only tested it on <code>localhost</code>, and I'm not sure how to connect securely from <code>localhost</code>.</p></li>\n</ul></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I wrote a code for broadcasting a message to <em>all</em> users  : </p>\n\n<p><strong>The Used code :</strong> <em>(brief)</em></p>\n\n<pre><code>// websocket and http servers\nvar webSocketServer = require('websocket').server;\n\n...\n...\nvar clients = [ ];\n\nvar server = http.createServer(function(request, response) {\n    // Not important for us. We're writing WebSocket server, not HTTP server\n});\nserver.listen(webSocketsServerPort, function() {\n  ...\n});\n\nvar wsServer = new webSocketServer({\n    // WebSocket server is tied to a HTTP server. \n    httpServer: server\n});\n\n\n    // This callback function is called every time someone\n    // tries to connect to the WebSocket server\n    wsServer.on('request', function(request) {\n    ...\n    var connection = request.accept(null, request.origin); \n    var index = clients.push(connection) - 1;\n    ...\n</code></pre>\n\n<p>Please notice : </p>\n\n<ul>\n<li>I don't have any user reference but only a connection .</li>\n<li>All users connection are stored in an <code>array</code>.</li>\n</ul>\n\n<p><strong>Goal</strong> : let's say that the NodeJs server wants to send a message to a <strong>specific</strong> client (John).</p>\n\n<p><em>And here is the question :</em> </p>\n\n<ul>\n<li><p>How would the NodeJs server know which connection does John have ? </p>\n\n<p>The NodeJs server doesn't even know John. all it sees is the connections.</p></li>\n</ul>\n\n<p>So , \nI believe that now , I shouldn't store users  only by their connection ,Instead ,  I need to store an <strong>object</strong> -- which will contain the <code>userId</code> and the <code>connection</code> object.</p>\n\n<p>And here is my idea : </p>\n\n<hr>\n\n<ul>\n<li><p>When the page finish loading  (Dom ready) - establish a connection to the NodeJs server.</p></li>\n<li><p>When the NodeJs server accept a connection - generate a unique string and send it to the client browser. Store the user connection and the unique string in an object. <strong>e.g.</strong> <code>{UserID:\"6\" , value :{connectionObject}}</code></p></li>\n<li><p>At client side , when this message arrives - store it in a hidden field or cookie. (for future requests to the NodeJs server )</p></li>\n</ul>\n\n<hr>\n\n<p>When the server wants to send a message to John : </p>\n\n<ul>\n<li>Find john's UserID in the dictionary and send a message by the corresponding connection.</li>\n</ul>\n\n<p><em>please notice there is no asp.net server code invloced here (in the message mechanism). only NodeJs .</em></p>\n\n<p><strong>Question :</strong> </p>\n\n<p>Is this the right way to go ? (or have I missed something ?)</p>\n",
            "last_activity_date": 1394481443,
            "question_id": 16280747,
            "score": 7,
            "tags": [
                "javascript",
                "html5",
                "node.js",
                "websocket"
            ],
            "title": "Sending message to a specific connected users using webSocket?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Have you looked at the <a href=\"http://www.examplet.buss.hk/jquery/truncator.php\" rel=\"nofollow\">jQuery Truncator</a> plugin?</p>\n\n<p>It pretty much does exactly what you've described.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's not a top google result, but I've used the <a href=\"http://plugins.learningjquery.com/expander/\" rel=\"nofollow\" title=\"jQuery Expander\">jQuery Expander plugin</a> to great success. It's nice because it doesn't hide anything from search engine robots.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Fiddle: <a href=\"http://jsfiddle.net/iambriansreed/bjdSF/\">http://jsfiddle.net/iambriansreed/bjdSF/</a></p>\n\n<p>jQuery:</p>\n\n<pre><code>jQuery(function(){\n\n    var minimized_elements = $('p.minimize');\n    var minimize_character_count = 100;    \n\n    minimized_elements.each(function(){    \n        var t = $(this).text();        \n        if(t.length &lt; minimize_character_count ) return;\n\n        $(this).html(\n            t.slice(0,minimize_character_count )+'&lt;span&gt;... &lt;/span&gt;&lt;a href=\"#\" class=\"more\"&gt;More&lt;/a&gt;'+\n            '&lt;span style=\"display:none;\"&gt;'+ t.slice(minimize_character_count ,t.length)+' &lt;a href=\"#\" class=\"less\"&gt;Less&lt;/a&gt;&lt;/span&gt;'\n        );\n\n    }); \n\n    $('a.more', minimized_elements).click(function(event){\n        event.preventDefault();\n        $(this).hide().prev().hide();\n        $(this).next().show();        \n    });\n\n    $('a.less', minimized_elements).click(function(event){\n        event.preventDefault();\n        $(this).parent().hide().prev().show().prev().show();    \n    });\n\n});\u200b\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>It looks like a couple other people beat me to it, but here is what I came up with.</p>\n\n<pre><code>var MORE = \"... More...\",\n    LESS = \" Less...\";\n\n$(function(){\n    $(\"p\").each(function(){\n        var $ths = $(this),\n            txt = $ths.text();\n\n        //Clear the text\n        $ths.text(\"\");\n\n        //First 100 chars\n        $ths.append($(\"&lt;span&gt;\").text(txt.substr(0,100)));\n\n        //The rest\n        $ths.append($(\"&lt;span&gt;\").text(txt.substr(100, txt.length)).hide());\n\n        //More link\n        $ths.append(\n            $(\"&lt;a&gt;\").text(MORE).click(function(){\n                var $ths = $(this);\n\n                if($ths.text() == MORE){\n                    $ths.prev().show();\n                    $ths.text(LESS);\n                }\n                else{\n                    $ths.prev().hide();\n                    $ths.text(MORE);\n                }\n            })\n        );\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Thanks to @iambriansreed for his nice function, here's a slight modification to <strong>truncate paragraph on line breakes</strong>:</p>\n\n<pre><code>&lt;script src=\"http://code.jquery.com/jquery-latest.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script&gt;\njQuery(function(){\n\nvar minimized_elements = $('p.minimize');\nvar maxLines = 20;\n\nminimized_elements.each(function(){    \n    // var textArr = $(this).text().split(/\\n/); // Not supported in IE &lt; 9\n    var textArr = $(this).html().replace(/\\n?&lt;br&gt;/gi,\"&lt;br&gt;\").split(/&lt;br&gt;/);\n    var countLines = textArr.length;\n\n    if (countLines &gt; maxLines) {\n        text_less = textArr.slice(0, maxLines).join(\"&lt;br&gt;\");\n        text_more = textArr.slice(maxLines, countLines).join(\"&lt;br&gt;\");\n    }\n    else return;\n\n    $(this).html(\n        text_less + '&lt;span&gt;... &lt;/span&gt;&lt;a href=\"#\" class=\"more\"&gt;More&lt;/a&gt;'+\n        '&lt;span style=\"display:none;\"&gt;'+ text_more +' &lt;a href=\"#\" class=\"less\"&gt;Less&lt;/a&gt;&lt;/span&gt;'\n    );\n}); \n\n$('a.more', minimized_elements).click(function(event){\n    event.preventDefault();\n    $(this).hide().prev().hide();\n    $(this).next().show();        \n});\n\n$('a.less', minimized_elements).click(function(event){\n    event.preventDefault();\n    $(this).parent().hide().prev().show().prev().show();    \n});\n\n});\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>for everyone who has come here searching for show more... \nHere is another plug-in <a href=\"http://viralpatel.net/blogs/dynamically-shortened-text-show-more-link-jquery/\" rel=\"nofollow\">http://viralpatel.net/blogs/dynamically-shortened-text-show-more-link-jquery/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have paragraph which has more than 500 character. I want to get only initial 100 character and hide rest of it. Also I want to insert \"More\" link next to 100 character. On click of more link whole paragraph should display and edit text \"More\" to \"Less\" and on click \"Less\" it should toggle behavior. Paragraph is dynamically generated I cant wrap content of it using .wrap(). Here is example what I have and what I want.</p>\n\n<p>This is what I have :</p>\n\n<pre><code>  &lt;p&gt;It is a long established fact that a reader will be distracted by the readable \n   content of a page when looking at its layout. The point of using Lorem Ipsum is that\n   it has a more-or-less normal distribution of letters, as opposed to using 'Content \n  content here', making it look like readable English. Many desktop publishing packages \n   and web page editors now use Lorem Ipsum as their default model text.&lt;/p&gt;\n</code></pre>\n\n<p>This is what I want when DOM loads </p>\n\n<pre><code> &lt;p&gt;It is a long established fact that a reader will be distracted by ..More&lt;/p&gt;\n</code></pre>\n\n<p>This is what I want when user click \"More\"</p>\n\n<pre><code>   &lt;p&gt;It is a long established fact that a reader will be distracted by the readable \n   content of a page when looking at its layout. The point of using Lorem Ipsum is that\n   it has a more-or-less normal distribution of letters, as opposed to using 'Content \n  content here', making it look like readable English. Many desktop publishing packages \n   and web page editors now use Lorem Ipsum as their default model text. ..Less&lt;/p&gt;\n</code></pre>\n\n<p>When we click on \"Less\",  it should revert what on click \"More\" has done.</p>\n\n<p>I am using jQuery to split, slice and wrap substring into span which I want to hide but that doesn't work.</p>\n\n<pre><code>var title = $(\"p\").text();\nvar shortText = jQuery.trim(title).substring(100, 1000).split(\" \")\n    .slice(0, -1).join(\" \") + \"...More &gt;&gt;\";\nshortText.wrap('&lt;/span&gt;');\n</code></pre>\n",
            "last_activity_date": 1420643797,
            "question_id": 11417544,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "xhtml"
            ],
            "title": "Truncate paragraph first 100 character and hide rest content of paragraph to show/hide rest contenct with more/less link"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>No. JavaScript is a client-side technology and cannot do anything on the server. You could however use AJAX to call a server-side script (e.g. PHP) which could return the information you need.</p>\n\n<p>If you want to use AJAX, the easiest way will be to utilise jQuery:</p>\n\n<pre><code>$.post(\"someScript.php\", function(data) {\n   console.log(data); //\"data\" contains whatever someScript.php returned\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can do it only with browser site scripting. But here is the catch: <strong>the folder where the images are stored needs to have directory browsing enabled</strong>. If this requirement is meet then you can just parse the page (http://example.com/images) using jQuery to get the list of images.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>No, you can't do this using Javascript alone. Client-side Javascript cannot read the contents of a directory the way I think you're asking about.</p>\n\n<p>However, if you're able to add an index page to (or configure your web server to show an index page for) the images directory and you're serving the Javascript from the same server then you could make an AJAX call to fetch the index and then parse it.</p>\n\n<p>i.e.</p>\n\n<p>1) Enable indexes in Apache for the relevant directory on yoursite.com:</p>\n\n<p><a href=\"http://www.cyberciti.biz/faq/enabling-apache-file-directory-indexing/\">http://www.cyberciti.biz/faq/enabling-apache-file-directory-indexing/</a></p>\n\n<p>2) Then fetch / parse it with jQuery. You'll have to work out how best to scrape the page and there's almost certainly a more efficient way of fetching the entire list, but an example:</p>\n\n<pre><code>$.ajax({\n  url: \"http://yoursite.com/images/\",\n  success: function(data){\n     $(data).find(\"td &gt; a\").each(function(){\n        // will loop through \n        alert(\"Found a file: \" + $(this).attr(\"href\"));\n     });\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>This will list all jpg files in the folder you define under url: and append them to a div as a paragraph. Can do it with ul li as well.</p>\n\n<pre><code>$.ajax({\n  url: \"YOUR FOLDER\",\n  success: function(data){\n     $(data).find(\"a:contains(.jpg)\").each(function(){\n        // will loop through \n        var images = $(this).attr(\"href\");\n\n        $('&lt;p&gt;&lt;/p&gt;').html(images).appendTo('a div of your choice')\n\n     });\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I want to display all images from folder located in server in image gallery.</p>\n\n<p>Is there a way to return a list of all the image file names from a folder using only JavaScript or JQuery?</p>\n\n<p>Also I want to count the number of image files in similar folder using only JavaScript.</p>\n\n<p>Is there any way to count the number of image files from a folder using only JavaScript?</p>\n",
            "last_activity_date": 1410942959,
            "question_id": 6994212,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Is there a way to return a list of all the image file names from a folder using only Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The way Cappuccino's automatic undo support works is by telling the undo manager what properties should be undoable. For example, pretend you are managing records of students, you might do something like:</p>\n\n<pre><code>[theUndoManager observeChangesForKeyPath:@\"firstName\" ofObject:theStudent];\n[theUndoManager observeChangesForKeyPath:@\"lastName\" ofObject:theStudent];\n</code></pre>\n\n<p>Now regardless of how the students name is changed in the UI, hitting undo will automatically revert it back. Cappuccino also automatically handles coalescing changes in the same run loop, marking the document as \"dirty\" (needing save) when there are items on the undo stack, etc etc (in other words, the above should be ALL you need to do to support undo).</p>\n\n<p>As another example, if you wanted to make additions and deletions of students undoable, you'd do the following:</p>\n\n<pre><code>[theUndoManager observeChangesForKeyPath:@\"students\" ofObject:theClass];\n</code></pre>\n\n<p>Since \"students\" is an array of students in theClass, then additions and deletions from this array will be tracked. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You need to have functions for object creation and deletion. Then pass those functions to the undo manager. See the demo file of my javascript undo manager: <a href=\"https://github.com/ArthurClemens/Javascript-Undo-Manager\" rel=\"nofollow\">https://github.com/ArthurClemens/Javascript-Undo-Manager</a></p>\n\n<p>The demo code shows canvas, but the code is agnostic.</p>\n\n<p>It doesn't contain key bindings, but may help you with the first steps.</p>\n\n<p>Myself I have used this in a web application with buttons for undo and redo, next to save.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here is a sample of N-Level undo using Knockout JS:</p>\n\n<p><a href=\"http://jsfiddle.net/paultyng/TmvCs/22/\" rel=\"nofollow\">http://jsfiddle.net/paultyng/TmvCs/22/</a></p>\n\n<p>It uses an MVVM model so your page state is represented in a javascript object that it maintains a history for.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm creating a map editing webapp where we can create and edit polylines, polygons etc. I've some trouble finding informations on undo implementation on the web, I find whining about \"we need undo\" and \"here is my Command pattern using closures\" but I think between that and a full undo/redo interface there is quite some road.</p>\n\n<p>So, here are my questions (good candidate for wiki I think): </p>\n\n<ul>\n<li>Should <em>I</em> manage the stack, or is there a way to send my commands to the browser's stack ?  (and how do I handle native commands, like text edits in textifields in this case)</li>\n<li>how do I handle \"command compression\" (command grouping) when some commands are browser native</li>\n<li>How do I detect the undo (ctrl+z) keystroke? </li>\n<li>If I register a keyup event, how do I decide if I prevent default or not? </li>\n<li>If not, can I register some undoevent handler somewhere ?</li>\n<li>Users are not used to undo on the web, how can I \"train\" them to explore/undo on my application ?</li>\n</ul>\n\n<p>Thanks all.</p>\n",
            "last_activity_date": 1380144456,
            "question_id": 6386743,
            "score": 7,
            "tags": [
                "javascript",
                "user-interface",
                "javascript-events",
                "undo"
            ],
            "title": "Implementing undo in a web app"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It seems like the \"right\" way to do this would actually be to use an SVG \"use\" element, rather than an image. The reason for this is that the DOM interface of the SVG use element specifies a property \"instanceRoot\", which allows you to get the root of the \"instance tree\" corresponding to that use element: <a href=\"http://www.w3.org/TR/SVG/struct.html#InterfaceSVGUseElement\">http://www.w3.org/TR/SVG/struct.html#InterfaceSVGUseElement</a></p>\n\n<p>So, you would end up with a solution that looks something like the following:\ncircle.svg:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" standalone=\"no\"?&gt;\n&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \n  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"&gt;\n&lt;svg width=\"4in\" height=\"4in\" id=\"the_svg\"\n     viewBox=\"0 0 4 4\" version=\"1.1\"\n     xmlns=\"http://www.w3.org/2000/svg\"&gt;\n    &lt;circle r=\"1\" fill=\"blue\" stroke=\"none\" id=\"the_circle\"/&gt;\n&lt;/svg&gt;\n</code></pre>\n\n<p>Document which uses the svg root node of circle.svg:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" standalone=\"no\"?&gt;\n&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \n  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"&gt;\n&lt;svg width=\"100%\" height=\"100%\" id=\"foo\"\n     version=\"1.1\"\n     xmlns=\"http://www.w3.org/2000/svg\"\n     xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt; \n\n    &lt;use xlink:href=\"circle.svg#the_svg\"/&gt;\n&lt;/svg&gt;\n</code></pre>\n\n<p>Unfortunately, though, while Firefox supports use of the use element with external documents, there's currently a bug in Webkit which does not allow this: <a href=\"https://bugs.webkit.org/show_bug.cgi?id=12499\">https://bugs.webkit.org/show_bug.cgi?id=12499</a></p>\n\n<p>Also, Firefox does not seem to implement the instanceRoot property for use elements.</p>\n\n<p>So, it seems you may need to work around the limitations of current SVG implementations. The way I would recommend doing this is to use XMLHttpRequest to download the document to which you would like to link, and import the DOM of the downloaded document into your host document's DOM. The following code implements this, and works in Firefox, Opera and Chromium:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" standalone=\"no\"?&gt;\n&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \n  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"&gt;\n&lt;svg width=\"100%\" height=\"100%\" id=\"foo\"\n     version=\"1.1\"\n     xmlns=\"http://www.w3.org/2000/svg\"\n     xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt; \n\n    &lt;script&gt;\n    function fetchXML  (url, callback) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.onreadystatechange = function (evt) {\n        //Do not explicitly handle errors, those should be\n        //visible via console output in the browser.\n        if (xhr.readyState === 4) {\n            callback(xhr.responseXML);\n        }\n        };\n        xhr.send(null);\n    };\n\n    //fetch the document\n    fetchXML(\"http://localhost:8082/tmp/circle.svg\",function(newSVGDoc){\n        //import it into the current DOM\n        var n = document.importNode(newSVGDoc.documentElement,true);\n        document.documentElement.appendChild(n);\n\n        var circle = document.getElementById(\"the_circle\"); //now you have the circle\n    }) \n    &lt;/script&gt;\n&lt;/svg&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>To supplement @echo-flow's excellent solution with the code in jQuery/Coffeescript:</p>\n\n<pre><code>  $.get '/assets/hexagon.svg', (svgFileData)-&gt;\n    svgTag = svgFileData.documentElement\n    $('body').append(svgTag)\n    circle = $('#the_circle')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can access the necessary element a bit easier:</p>\n\n<pre><code>document.getElementById('the_image').contentDocument.getElementById('the_circle')\n</code></pre>\n\n<p>See  <a href=\"http://devfiles.myopera.com/articles/22/html2svg.png\">this image</a> for reference (taken on <a href=\"http://dev.opera.com/articles/view/svg-evolution-not-revolution/?page=2\">dev.opera.com</a>)\n<img src=\"http://i.stack.imgur.com/vxHFs.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>SVG standard allows to use and refer external SVG files.</p>\n\n<p>I have a file <code>circle.svg</code> that defines a circle object with id \"the_circle\".\nFrom the main SVG file I am able to include this circle and animate it, using <a href=\"http://www.w3.org/TR/SVG/linking.html\">SVG linking</a>.</p>\n\n<p>I would also like to access the same circle object via javascript, how can I do this ?\nWhat is the javascript equivalent of <code>xlink:href=\"url(#the_image)#the_circle\"</code> ?</p>\n\n<p>Using <code>document.getElementById('the_image')</code> I can only access the SVGImageElement but not the objects defined inside the included  SVG.</p>\n\n<pre><code>&lt;?xml version=\"1.0\" standalone=\"no\"?&gt;\n&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"&gt;\n&lt;svg width=\"100%\" height=\"100%\" version=\"1.1\"\nxmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" &gt;\n\n  &lt;image \n    id=\"the_image\"\n    x=\"0\" y=\"0\"  width=\"100%\" height=\"100%\"\n    xlink:href=\"circle.svg\" /&gt;\n\n  &lt;animateTransform     \n    xlink:href=\"url(#the_image)#the_circle\"\n\n    attributeName=\"transform\" attributeType=\"XML\"\n    type=\"translate\" \n    from=\"0\" to=\"25\"\n    dur=\"1s\" repeatCount=\"indefinite\" \n    additive=\"replace\" fill=\"freeze\" /&gt;\n&lt;/svg&gt;\n</code></pre>\n",
            "last_activity_date": 1318670236,
            "question_id": 3346106,
            "score": 7,
            "tags": [
                "javascript",
                "dom",
                "svg"
            ],
            "title": "Accessing a DOM object defined in an external SVG file"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>search()</code> is a String method.</p>\n\n<p>You are executing the <code>attr</code> function on <strong>every</strong> <code>&lt;li&gt;</code> element.\nYou need to invoke <code>each</code> and use the <code>this</code> reference within.</p>\n\n<p>Example:</p>\n\n<pre><code>$('li').each(function() {\n    var isFound = $(this).attr('title').search(/string/i);\n    //do something based on isFound...\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Ah, that would be because RegExp is not jQuery. :) </p>\n\n<p>Try <a href=\"http://www.w3schools.com/jsref/jsref%5Fobj%5Fregexp.asp\" rel=\"nofollow\">this page</a>. <code>jQuery.attr</code> doesn't return a String so that would certainly cause in this regard. Fortunately I believe you can just use <code>.text()</code> to return the String representation. </p>\n\n<p>Something like:</p>\n\n<pre><code>$(\"li\").val(\"title\").search(/sometext/i));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>if (str.toLowerCase().indexOf(\"yes\") &gt;= 0)\n</code></pre>\n\n<p>Or,</p>\n\n<pre><code>if (/yes/i.test(str))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I saw this code snippet:</p>\n\n<pre><code>$(\"ul li\").text().search(new RegExp(\"sometext\", \"i\"));\n</code></pre>\n\n<p>and wanted to know if this can be extended to any string?</p>\n\n<p>I want to accomplish the following, but it dosen't work:</p>\n\n<pre><code>$(\"li\").attr(\"title\").search(new RegExp(\"sometext\", \"i\"));\n</code></pre>\n\n<p>Also, anyone have a link to the jQuery documentation for this function? I fail at googling apparently. </p>\n",
            "last_activity_date": 1341932881,
            "question_id": 1854493,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "string"
            ],
            "title": "jQuery .search() to any string"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><code>contentWindow</code> was available in Chrome 3, but <a href=\"http://groups.google.com/group/chromium-extensions/browse_thread/thread/a4ff886cfecf80ca\" rel=\"nofollow\">removed in Chrome 4</a>. Only possible solution for Chrome 4:</p>\n\n<pre><code>location.href=\"javascript:(function(){ alert('Hello'); })()\"\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>ok heres an idea you can inject the script using the address bar...</p>\n\n<pre><code>javascript:var ElEm = document.createElement(\"script\");ElEm.src='[path_to_script]';document.body.appendChild(ElEm);\n</code></pre>\n\n<p>then you can run whatever you want in the window with your javascript</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This will give you a reference to the window object (as p):</p>\n\n<pre><code>var p = unsafeWindow;\n\nif(window.navigator.vendor.match(/Google/)) {\n    var div = document.createElement(\"div\");\n    div.setAttribute(\"onclick\", \"return window;\");\n    p = div.onclick();\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>If you want to interact with page JavaScript, you will have to insert a script into a page. (Unless you want to use any of the hacks suggested at this page, of course.) I have cooked up a function to do just that for my own scripts, I will post it here in case anyone wants to use it.</p>\n\n<pre><code>/*\n    @description    This function will insert the given code as a &lt;script&gt; or &lt;style&gt; block into a page.\n    @param The code to insert; supported types are: JavaScript Function, String (JavaScript), String (CSS).\n    @param2 Optional: The type of code that is inserted. If omitted, \"js\" is assumed. Possible values are 'js' or 'css'.\n    @return The HTML element that was inserted, or FALSE on failure\n*/\nfunction insert(z,t){\n    var j,f,x,c,i,n,d\n    d=document\n    c=d.createElement\n    i=d.head.appendChild\n    a=d.createTextNode\n    if(typeof z==='function') j=!0,f=!0;\n    if((t=='js'||!t)&amp;&amp;!f){j=!0,f=!1}\n    if(t=='css'&amp;&amp;!j){x=c('style');x.setAttribute('type','text/css')}\n    if(j){x=c('script');x.setAttribute('type','text/javascript')}\n    if(f) n=a('('+z+')()');else n=a(z)\n    x.appendChild(n)\n\n    if(x){return i(x)}else{return !1}\n}\n</code></pre>\n\n<p>A few examples to clarify:</p>\n\n<pre><code>//Inserting a JavaScript function\nvar func=function(){\n    stopAds();\n    startFileDownload();\n}\n\ninsert(func);\n\n\n//Inserting JavaScript as a string\nvar strJS=\"prompt(\\\"Copy:\\\",someVariableAtThePage);\";\n\ninsert(strJS);\n//Or with an OPTIONAL 2nd parameter:\ninsert(strJS,'js');\n\n\n//Inserting CSS\nvar strCSS=\".ad{display:none !important}    #downloadButton{display:block}\";\n\ninsert(strCSS,'css');//Specifying 2nd parameter as \"css\" is required.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Update:</strong><br>\nThe <code>onclick</code> exploit no longer works in the latest Chrome releases.</p>\n\n<p>To get <code>unsafeWindow</code> functionality in Chrome, your best bet is to install and use <a href=\"https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo\" rel=\"nofollow\">Tampermonkey</a> -- which you would be smart to do, regardless.  Tampermonkey has full support for the Greasemonkey API and much easier script management.</p>\n\n<p>Greasemonkey scripts and Tampermonkey scripts are almost always fully compatible, something that's not true for plain Chrome userscripts.</p>\n\n<p>Forgoing Tampermonkey, the only alternative that still works is to use some form of <a href=\"http://stackoverflow.com/a/13485650/331508\">script injection</a>.</p>\n\n<p><br></p>\n\n<hr>\n\n<p><strong>The following is now obsolete:</strong>  </p>\n\n<p><a href=\"http://stackoverflow.com/a/10828021/331508\">Chrome now defines <code>unsafeWindow</code> for userscripts / content-scripts</a>, but Chrome's <code>unsafeWindow</code> still does not allow access to JS objects created by the target page.</p>\n\n<p>Here's how to provide a properly unsafe, <code>unsafeWindow</code> -- in a cross-browser way that uses <a href=\"http://stackoverflow.com/a/1294765/331508\"><em>Feature Detection</em> (good) versus <em>Browser Sniffing</em> (Bad)</a>:</p>\n\n<pre><code>/*--- Create a proper unsafeWindow object on browsers where it doesn't exist\n    (Chrome, mainly).\n    Chrome now defines unsafeWindow, but does not give it the same access to\n    a page's javascript that a properly unsafe, unsafeWindow has.\n    This code remedies that.\n*/\nvar bGreasemonkeyServiceDefined     = false;\n\ntry {\n    if (typeof Components.interfaces.gmIGreasemonkeyService === \"object\") {\n        bGreasemonkeyServiceDefined = true;\n    }\n}\ncatch (err) {\n    //Ignore.\n}\n\nif ( typeof unsafeWindow === \"undefined\"  ||  ! bGreasemonkeyServiceDefined) {\n    unsafeWindow    = ( function () {\n        var dummyElem   = document.createElement('p');\n        dummyElem.setAttribute ('onclick', 'return window;');\n        return dummyElem.onclick ();\n    } ) ();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I'm just fiddling around with user scripts in chrome right now, so please bear with my potential ignorance/idiocy.</p>\n\n<p>In the page I'm writing a script for, there is a <code>&lt;script&gt;</code> element that declares a variable <code>x</code>.\nDoes this mean that, in my user script, I can just access <code>x</code> from the global namespace?</p>\n\n<p>For example, if the only line in my userscript is <code>alert(x);</code>, should that work as expected (assuming <code>x</code> is a String)? I understand chrome doesn't support unsafewindow, but for some reason I'm finding it impossible to figure out how to mimic the functionality. Is it even possible?</p>\n",
            "last_activity_date": 1386838540,
            "question_id": 1622145,
            "score": 6,
            "tags": [
                "javascript",
                "google-chrome",
                "greasemonkey"
            ],
            "title": "How can I mimic Greasemonkey/Firefox&#39;s unsafeWindow functionality in Chrome?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If nobody provides a better answer then you might look at how <a href=\"https://chrome.google.com/extensions/detail/mgijmajocgfcbeboacabfgobmjgjcoja\" rel=\"nofollow\">Google Dictionary</a> extension does it (it would be hard as its code is minimized).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>All you need to do is listen for mouse events:</p>\n\n<ul>\n<li>mousedown: to hide the bubble.</li>\n<li>mouseup: to show the bubble.</li>\n</ul>\n\n<p>For example, this might help you get started. More tweaks are needed, to figure out if you initiated the selection from down->up, right->left, etc (all directions). You can use the following code as a startup:</p>\n\n<p><strong>contentscript.js</strong></p>\n\n<pre><code>// Add bubble to the top of the page.\nvar bubbleDOM = document.createElement('div');\nbubbleDOM.setAttribute('class', 'selection_bubble');\ndocument.body.appendChild(bubbleDOM);\n\n// Lets listen to mouseup DOM events.\ndocument.addEventListener('mouseup', function (e) {\n  var selection = window.getSelection().toString();\n  if (selection.length &gt; 0) {\n    renderBubble(e.clientX, e.clientY, selection);\n  }\n}, false);\n\n\n// Close the bubble when we click on the screen.\ndocument.addEventListener('mousedown', function (e) {\n  bubbleDOM.style.visibility = 'hidden';\n}, false);\n\n// Move that bubble to the appropriate location.\nfunction renderBubble(mouseX, mouseY, selection) {\n  bubbleDOM.innerHTML = selection;\n  bubbleDOM.style.top = mouseY + 'px';\n  bubbleDOM.style.left = mouseX + 'px';\n  bubbleDOM.style.visibility = 'visible';\n}\n</code></pre>\n\n<p><strong>contentscript.css</strong></p>\n\n<pre><code>.selection_bubble {\n  visibility: hidden;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background:-webkit-gradient(linear, left top, left bottom, from(#2e88c4), to(#075698));\n}\n</code></pre>\n\n<p><strong>manifest.json</strong></p>\n\n<p>Change the matches portion to the domain you want to inject these content scripts.</p>\n\n<pre><code>...\n...\n  \"content_scripts\": [\n    {\n      \"matches\": [\"http://*/*\"],\n      \"css\": [\"main.css\"],\n      \"js\": [\"main.js\"],\n      \"run_at\": \"document_end\",\n      \"all_frames\": true\n    }\n...\n...\n</code></pre>\n\n<p>If you want to style it to look like a bubble, Nicolas Gallagher did some awesome CSS3 <a href=\"http://nicolasgallagher.com/pure-css-speech-bubbles/demo/\">demos</a> for bubbles! </p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>I wrote something similar to what you're asking about.  I listened for the user to select text and when there was a selection, I displayed a list of links for things like \"Note on Facebook\", \"Define\", etc.  </p>\n\n<p>A day or two after I started to write it, I found that google was going to add context menu support in a future release so I didn't touch this until recently (when I converted to context menus).</p>\n\n<p>Take a look at the code:</p>\n\n<p><a href=\"http://code.google.com/p/select-actions/source/browse/trunk/select_actions.js?r=4\" rel=\"nofollow\">http://code.google.com/p/select-actions/source/browse/trunk/select_actions.js?r=4</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am looking for a way to select text on a website in Chrome and have a overlay/tooltip pop with content depending on the text selection.</p>\n\n<p>Has anyone done this before or knows from the top of their heads how to make the toolip pop-up?</p>\n\n<p>Much appreciated.</p>\n",
            "last_activity_date": 1342817900,
            "question_id": 4409378,
            "score": 5,
            "tags": [
                "javascript",
                "google-chrome",
                "google-chrome-extension",
                "jquery-tooltip"
            ],
            "title": "Text selection and bubble overlay as Chrome extension"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>This configuration has worked for many of our Apache users using html5mode and ui-router.</p>\n\n<pre><code>&lt;VirtualHost *:80&gt;\n    ServerName my-app\n\n    DocumentRoot /path/to/app\n\n    &lt;Directory /path/to/app&gt;\n        RewriteEngine on\n\n        # Don't rewrite files or directories\n        RewriteCond %{REQUEST_FILENAME} -f [OR]\n        RewriteCond %{REQUEST_FILENAME} -d\n        RewriteRule ^ - [L]\n\n        # Rewrite everything else to index.html to allow html5 state links\n        RewriteRule ^ index.html [L]\n    &lt;/Directory&gt;\n&lt;/VirtualHost&gt;\n</code></pre>\n\n<p>Also please make sure you are not a victim of <code>&lt;base href&gt;</code> bug. See the <a href=\"https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions#issue-my-assets-and-templates-are-not-loading\">ui-router FAQ</a> for more info.</p>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>I'm using <a href=\"https://github.com/angular-ui/ui-router\" rel=\"nofollow\">ui-router</a> for state management but I think I'm having trouble with my .htaccess rewrite rules. All my states worked when using /#/account style urls. Now I've enabled html5 mode but my app isn't rendering as it was before. It seems to load my index.html and all my js and css files, etc. but not actually initialise any states.</p>\n\n<p>Here is my folder structure:</p>\n\n<pre><code>root/\n    app/\n        components/\n            angular/\n            ...\n        images/\n        scripts/ \n            controllers/\n            directives/\n            ...\n            app.js       \n        styles/\n        views/\n        .htaccess\n        ...\n</code></pre>\n\n<p>My vhosts DocumentRoot points to my <code>app/</code></p>\n\n<p>Here is my app.js with my states:</p>\n\n<pre><code>'use strict';\n\nangular.module('appointeddPortalApp',  ['ngResource', 'ui.state', 'ui.compat', 'fundoo.services', 'ui.date', 'ngCookies'])\n.config(function ($stateProvider, $routeProvider, $locationProvider, $httpProvider) {\n\n    var access = routingConfig.accessLevels;\n\n    delete $httpProvider.defaults.headers.common[\"X-Requested-With\"];\n    $httpProvider.defaults.useXDomain = true;\n    $locationProvider.html5Mode(true);\n\n    $stateProvider\n    .state('root', {\n        abstract: true,\n        url: '',\n        views: {\n            'header': {\n                templateUrl: 'views/partials/header.html'\n            },\n            'search': {\n                templateUrl: 'views/partials/search.html',\n                controller: 'SearchCtrl'\n            },\n            'main': {\n                templateUrl: 'views/main.html',\n                controller: 'MainCtrl'\n            },\n            'footer': {\n                templateUrl: 'views/partials/footer.html'\n            },\n        },\n    })\n    .state('root.home', {\n        url: '',\n        views: {\n            'content': {\n                templateUrl: 'views/home/index.html',\n                controller: 'MainCtrl',\n            }\n        },\n        access: access.anon\n    })\n    .state('root.about', {\n        url: '/about',\n        parent: 'root',\n        views: {\n            'content': {\n                templateUrl: 'views/about.html',\n                controller: 'StaticCtrl'\n            },\n            'search@': {}\n        },\n        access: access.anon\n    })\n    .state('root.search', {\n        url: '/search/:city/:category',\n        views: {\n            'content': {\n                templateUrl: 'views/search.html',\n                controller: 'SearchCtrl'\n            }\n        },\n        access: access.anon\n    })\n    .state('root.salons_profile', {\n        url: '/salons/{id}',\n        views: {\n            'content': {\n                templateUrl: 'views/salons.profile.html',\n                controller: 'SalonCtrl',\n            },\n            'search@': {}\n        },\n        access: access.anon\n    })\n    .state('root.account', {\n        url: '/account',\n        abstract: true,\n        views: {\n            'content': {\n                templateUrl: 'views/user/account.html',\n                controller: 'AccountCtrl'\n            }\n        },\n    })\n    .state('root.account.info', {\n        url: '',\n        views: {\n            'account_head': {\n                templateUrl: 'views/user/account.head.html',\n            },\n            'account_body': {\n                templateUrl: 'views/user/account.my_appointedd.html',\n            },\n        },\n        menus: {\n            'account': {\n                identifier: 'my_appointedd',\n                class: 'active'\n            }\n        },\n        access: access.user\n    })\n    .state('root.account.appointments', {\n        url: '/appointments',\n        views: {\n            'account_head': {\n                templateUrl: 'views/user/account.head.html',\n            },\n            'account_body': {\n                templateUrl: 'views/user/account.appointments.html',\n            },\n        },\n        menus: {\n            'account': {\n                identifier: 'appointments',\n                class: 'active'\n            }\n        },\n        access: access.user\n    })\n    .state('root.account.details', {\n        abstract: true,\n        views: {\n            'account_head': {\n                templateUrl: 'views/user/account.head.html',\n            },\n            'account_body': {\n                templateUrl: 'views/user/account.details.html',\n            },\n        },\n        access: access.user\n    })\n    .state('root.account.details.account', {\n        url: '/details',\n        views: {\n            'right': {\n                templateUrl: 'views/user/account.details.account.html',\n            },\n        },\n        menus: {\n            'account': {\n                identifier: 'details',\n                class: 'active'\n            },\n            'settings': {\n                identifier: 'account',\n                class: 'active'\n            }\n        },\n        access: access.user\n    })\n    .state('root.account.details.profile', {\n        url: '/profile',\n        views: {\n            'right': {\n                templateUrl: 'views/user/account.details.profile.html',\n            },\n        },\n        menus: {\n            'account': {\n                identifier: 'details',\n                class: 'active'\n            },\n            'settings': {\n                identifier: 'profile',\n                class: 'active'\n            }\n        },\n        access: access.user\n    });\n\n\n})\n.run( [ '$location', '$state', '$stateParams', '$rootScope', '$cookies', 'Auth', function( $location, $state, $stateParams, $rootScope, $cookies, Auth){\n\n    $rootScope.client_id = '51a741eb3152c3ae7e000103';\n    $rootScope.$state = $state;\n    $rootScope.$stateParams = $stateParams;\n    $rootScope.$cookies = $cookies;\n\n    $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams){\n        if (!Auth.authorize(toState.access)) {\n            if(Auth.isLoggedIn()) $state.transitionTo('root.account');\n            else                  $state.transitionTo('root.home');\n        }\n    });\n</code></pre>\n\n<p>Here is my rewrite code that sits in .htaccess in /app. I think this is might be wrong.</p>\n\n<pre><code>&lt;IfModule mod_rewrite.c&gt;\n  Options +FollowSymLinks \n  RewriteEngine On \n  RewriteBase / \n  RewriteRule ^(components|images|scripts|styles|views)($|/) - [L]\n  RewriteRule ^(.*)$ index.html [L]\n&lt;/IfModule&gt;\n</code></pre>\n",
            "last_activity_date": 1374844938,
            "question_id": 17444072,
            "score": 4,
            "tags": [
                "javascript",
                ".htaccess",
                "angularjs",
                "routing"
            ],
            "title": "AngularJS: can&#39;t get html5 mode urls with ui-route $state"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>A solution is to use modern ways like FileReader and Canvas (But this works only on the latest modern browsers).</p>\n\n<p><a href=\"http://caniuse.com/filereader\">http://caniuse.com/filereader</a></p>\n\n<p><a href=\"http://caniuse.com/canvas\">http://caniuse.com/canvas</a></p>\n\n<p>In this example i show how to let the client resize an image before uploading by setting a max width &amp; height mantaining aspect ratio. </p>\n\n<p>In this example max widthHeight = 64;\nyour final image is c.toDataURL();</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=\"utf-8\"&gt;\n&lt;title&gt;&lt;/title&gt;\n&lt;script&gt;\nvar h=function(e){\n var fr=new FileReader();\n fr.onload=function(e){\n  var img=new Image();\n  img.onload=function(){\n     var MAXWidthHeight=64;\n   var r=MAXWidthHeight/Math.max(this.width,this.height),\n   w=Math.round(this.width*r),\n   h=Math.round(this.height*r),\n   c=document.createElement(\"canvas\");\n   c.width=w;c.height=h;\n   c.getContext(\"2d\").drawImage(this,0,0,w,h);\n   this.src=c.toDataURL();\n   document.body.appendChild(this);\n  }\n  img.src=e.target.result;\n }\n fr.readAsDataURL(e.target.files[0]);\n}\nwindow.onload=function(){\n document.getElementById('f').addEventListener('change',h,false);\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;input type=\"file\" id=\"f\"&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>In the canvas part of the code you can also add a cropping function.</p>\n\n<hr>\n\n<p><strong>Edit as asked in the comments</strong></p>\n\n<pre><code>c.toDataURL();\n</code></pre>\n\n<p>is the image base64_string you can store it in a hidden input,append to a <code>new FormData()</code> or wherever you want.</p>\n\n<p>on the server</p>\n\n<pre><code>$data=explode(',',$base64_string);\n$image=base64_decode($data[1]);\n</code></pre>\n\n<p>write to file</p>\n\n<pre><code>$f=fopen($fileName,\"wb\");\nfwrite($f,$image); \nfclose($f);\n</code></pre>\n\n<p>or</p>\n\n<pre><code>$gd=imagecreatefromstring($image);\n</code></pre>\n\n<p>you can also store the whole base64 image string in the database and always use that.</p>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>I've web app running. And it uses ajax upload. The issue is recently users are uploading too big images. So it's taking a bit more time. Users are complaining about that. So what I was thinking is this, 'If I somehow crop and resize the image via js and then send it to the server via ajax upload then the time will be reduced'. So is there any way to do that? Any idea for it?</p>\n",
            "last_activity_date": 1405522237,
            "question_id": 17501115,
            "score": 3,
            "tags": [
                "javascript",
                "upload",
                "image-uploading"
            ],
            "title": "Image resize by Javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Final Success:</p>\n\n<ul>\n<li>Rhino. Used <a href=\"http://code.google.com/p/android-scripting/source/browse/rhino/rhino1_7R2.jar\">this jar file</a>.</li>\n</ul>\n\n<p>Other Things I Tried:</p>\n\n<ul>\n<li><a href=\"http://developer.android.com/reference/org/apache/http/client/HttpClient.html\">HttpClient</a> provided by Android\n<ul>\n<li>Cannot run javascript</li>\n</ul></li>\n<li><a href=\"http://htmlunit.sourceforge.net/\">HtmlUnit</a>\n<ul>\n<li>4 hours, no success. Also huge, added 12 mb to my apk.</li>\n</ul></li>\n<li><a href=\"https://code.google.com/p/android-scripting/source/browse/\">SL4A</a>\n<ul>\n<li>Finally compiled. Used <a href=\"http://jokar-johnk.blogspot.com/2011/02/how-to-make-android-app-with-sl4a.html?showComment=1340239031200#c5290878266488959337\">THIS</a> guide to set-up. Abandoned as overkill for a simple rhino jar.</li>\n</ul></li>\n</ul>\n\n<p>Things That Might Work:</p>\n\n<ul>\n<li>Selenium</li>\n</ul>\n\n<p>Further results will be posted. Others results will be added if posted.</p>\n\n<p>Note: many of the options listed above reference each other. I think rhino is included in both sl4a and htmlunit. Also, I think htmlunit contains selenium.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The aforementioned solutions are very slow and restrict you to 1 url (well, not really, but I dare you to scrape 10 urls with Rhino while your user is impatiently waiting for results).</p>\n\n<p>An alternative is to use a cloud scraping solution. You get the benefit of not wasting phone bandwidth on downloading content you won't use.</p>\n\n<p>Try this solution: <a href=\"https://github.com/emirkin/bobik_java_sdk\" rel=\"nofollow\">Bobik Java SDK</a></p>\n\n<p>It gives you the ability to scrape up to hundreds of sites in a matter of seconds</p>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>I am currently writing an Android app that, among other things, uses text information from websites which I do not own. In addition, some of the pages require authentification.</p>\n\n<p>For some pages I have been able to log in and retrieve the html code using BasicNameValuePairs and an HTTPClient with its associated objects.</p>\n\n<p>Unfortunately, these methods retrieve the webpage source without running any javascript functions that a browser (Android Webview even) would normally run. I need the text that some of these scripts are retrieving.</p>\n\n<p>I've done my research, but everything I've found is guesswork &amp; extremely confusing. I'm okay with ignoring pages that require login for now. Also, I am willing to post any code that may be useful for constructing a solution; It is an independent project.</p>\n\n<p>Any concrete solutions for scraping the html result from javascript calls? An example would be absolutely top-notch.</p>\n",
            "last_activity_date": 1340674320,
            "question_id": 11093130,
            "score": 3,
            "tags": [
                "javascript",
                "android",
                "html",
                "web-scraping"
            ],
            "title": "Scraping dynamically generated html inside Android app"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can do this using <a href=\"http://php.net/manual/en/book.image.php\">GD</a> library. There is function to \"merge\" images called <a href=\"http://php.net/manual/en/function.imagecopymerge.php\"><code>imagecopymerge</code></a>.</p>\n\n<p>Here is a very simple example how to merge images:</p>\n\n<pre><code>&lt;?php\nheader('Content-Type: image/jpeg');\n\n$bg = imagecreatefromjpeg('background.jpg');\n$img = imagecreatefromjpeg('image.jpg');\n\nimagecopymerge($bg, $img, 0, 0, 0, 0, imagesx($bg), imagesy($bg), 75);\n\nimagejpeg($bg, null, 100);\n?&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>I am searching for a way to overlay an image on an existing image.</p>\n\n<p>e.g:</p>\n\n<p><img src=\"http://i.stack.imgur.com/N0REB.gif\" alt=\"img1\"> + <img src=\"http://i.stack.imgur.com/OM7bj.jpg\" alt=\"img2\"></p>\n\n<p>I have found a great example over here: <a href=\"http://www.tjkdesign.com/articles/png_overlay_with_no_extra_markup.asp\" rel=\"nofollow\">PNG overlay using one single Image element.</a>\nbut I have <strong>two</strong> problems with these. </p>\n\n<p><strong>First</strong> of all, I don't want the dimensions to be equal to each other. e.g (215*215 on 215*215). This is because my users would have the ability to choose where they want to put their image. (Top, left, bottom, top-right) so 8 directions.</p>\n\n<p>The <strong>second</strong> problem is that in that example, only 2 images are allowed to overlay. My users (again) will have the ability to put multiple images on top of it.</p>\n\n<p>I have a little knowledge of Javascript and PHP, so it would be great if you guys (and girls) could help me out.</p>\n\n<p>Sincerely,</p>\n",
            "last_activity_date": 1410066428,
            "question_id": 6547784,
            "score": 1,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "Superimpose Images with PHP"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>It looks suspicious because there is no apparent function that is being returned from!</p>\n</blockquote>\n\n<p>It is an anonymous function that has been attached to the click event of the object.</p>\n\n<blockquote>\n  <p>why are you doing this, Steve?</p>\n</blockquote>\n\n<p>Why on earth are you doi.....Ah nevermind, as you've mentioned, it really is widely adopted bad practice :)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>What the browser does when you've got</p>\n\n<pre><code>&lt;a onclick=\"alert('Hi');\" ... &gt;\n</code></pre>\n\n<p>is to set the actual value of \"onclick\" to something effectively like:</p>\n\n<pre><code>new Function(\"event\", \"alert('Hi');\");\n</code></pre>\n\n<p>That is, it creates a function that expects an \"event\" parameter.  (Well, IE doesn't; it's more like a plain simple anonymous function.)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You've got it nearly correct, but you haven't accounted for the <code>this</code> value supplied to the inline code.</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"alert(this)\"&gt;Click Me&lt;/a&gt;\n</code></pre>\n\n<p>is actually closer to:</p>\n\n<pre><code>&lt;a href=\"#\" id=\"click_me\"&gt;Click Me&lt;/a&gt;\n&lt;script type=\"text/javascript\"&gt;\ndocument.getElementById('click_me').addEventListener(\"click\", function(event) {\n    (function(event) {\n        alert(this);\n    }).call(document.getElementById('click_me'), event);\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>Inline event handlers set <code>this</code> equal to the target of the event.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>The best way to answer your question is to <a href=\"http://jsfiddle.net/EZxnc/\" rel=\"nofollow\">see</a> it in action. </p>\n\n<pre><code>&lt;a id=\"test\" onclick=\"alert('test')\"&gt; test &lt;/a&gt; \u200b\n</code></pre>\n\n<p>In the js </p>\n\n<pre><code>var test = document.getElementById('test');\nconsole.log( test.onclick ); \n</code></pre>\n\n<p>As you see in the <code>console</code>, if you're using chrome it prints an anonymous function with the event object passed in, although it's a little different in IE.  </p>\n\n<pre><code>function onclick(event) {\n   alert('test')\n}\n</code></pre>\n\n<p>I agree with some of your points about inline event handlers. Yes they are easy to write, but i don't agree with your point about having to change code in multiple places, if you structure your code well, you shouldn't need to do this. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try this in the console:</p>\n\n<pre><code>var div = document.createElement('div');\n\ndiv.setAttribute('onclick', 'alert(event)');\n\ndiv.onclick\n</code></pre>\n\n<p>In Chrome, it shows this:</p>\n\n<pre><code>function onclick(event) {\n  alert(event)\n}\n</code></pre>\n\n<p>...and the non-standard <code>name</code> property of <code>div.onclick</code> is <code>\"onclick\"</code>.</p>\n\n<p>So, whether or not this is anonymous depends your definition of \"anonymous.\" Compare with something like <code>var foo = new Function()</code>, where <code>foo.name</code> is an empty string, and <code>foo.toString()</code> will produce something like</p>\n\n<pre><code>function anonymous() {\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I know this is bad practice. Don't write code like this if at all possible. </p>\n\n<p>Of course, we'll always find ourselves in situations where a clever snippet of inline Javascript can address an issue quickly. </p>\n\n<p>I am pursuing this query in the interest of fully understanding what happens (and the potential pitfalls) when something like this is written: </p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"alert('Hi')\"&gt;Click Me&lt;/a&gt;\n</code></pre>\n\n<p>As far as I can tell this is functionally the same as </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n   $(function(){ // I use jQuery in this example\n       document.getElementById('click_me').onclick = \n           function () { alert('Hi'); };\n   });\n&lt;/script&gt;\n&lt;a href=\"#\" id=\"click_me\"&gt;Click Me&lt;/a&gt;\n</code></pre>\n\n<p>Extrapolating from this it seems that the string assigned to attribute <code>onclick</code> is inserted within an anonymous function which is assigned to the element's click handler. Is this actually the case? </p>\n\n<p>Because I'm starting to do things like this: </p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"$(this).next().fadeIn(); return false;\"&gt;Display my next sibling&lt;/a&gt; &lt;!-- Return false in handler so as not to scroll to top of page! --&gt; \n</code></pre>\n\n<p>Which works. But I don't know how much of a hack this is. It looks suspicious because there is no apparent function that is being returned from!</p>\n\n<p>You might ask, why are you doing this, Steve? Inline JS is bad practice! </p>\n\n<p>Well to be quite honest I'm tired of editing three different sections of code just to modify one section of a page, especially when I'm just prototyping something to see if it will work at all. It is so much easier and sometimes even makes sense for the code specifically related to this HTML element to be defined <em>right within</em> the element: When I decide 2 minutes later that this was a terrible, terrible idea I can nuke the entire div (or whatever) and I don't have a bunch of mysterious JS and CSS cruft hanging around in the rest of the page, slowing down rendering ever so slightly. This is similar to the concept of locality of reference but instead of cache misses we're looking at bugs and code bloat. </p>\n",
            "last_activity_date": 1414079753,
            "question_id": 10607847,
            "score": 47,
            "tags": [
                "javascript",
                "html",
                "html5"
            ],
            "title": "How does inline Javascript (in HTML) work?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can read this article, which shows a nice method of encoding string for javascript:\n<a href=\"http://www.west-wind.com/weblog/posts/114530.aspx\">http://www.west-wind.com/weblog/posts/114530.aspx</a></p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>A probem with this function is that it doesn't encode characters that are typically out-of-band in encapsulating HTML... so you'd have trouble if you tried to include a string with <code>\"</code> inside an attribute value, or if you had a string with the sequence <code>&lt;/script&gt;</code> inside a script element. That could lead to script-injection and XSS.</p>\n\n<p>You could add:</p>\n\n<pre><code>            case '&lt;':\n                sb.Append(\"\\\\x3C\");\n                break;\n            case '\"':\n                sb.Append(\"\\\\x22\");\n                break;\n            case '&amp;':\n                sb.Append(\"\\\\x26\");\n                break;\n</code></pre>\n\n<p>In general it would probably be better to use a standard JSON encoder than brew your own JS string literal encoder. This will allow you to pass any simple datatype to JS rather than just strings.</p>\n\n<p>In .NET 3.5 you get <a href=\"http://msdn.microsoft.com/en-us/library/system.web.script.serialization.javascriptserializer.aspx\">JavaScriptSerializer</a>, however note that whilst this <em>does</em> encode <code>&lt;</code> to <code>\\u003C</code> (so the output will be suitable for use in a <code>&lt;script&gt;</code> element), it <em>doesn't</em> encode <code>&amp;</code> or <code>\"</code>, so HTML-escaping would be needed to include such content in an attribute value and a CDATA wrapper would be needed for XHTML script elements.</p>\n\n<p>(In common with many JSON encoders, it also fails to encode the U+2028 LINE SEPARATOR and U+2029 PARAGRAPH SEPARATOR characters. The above code does, due to escaping all non-ASCII characters. This causes \u2018unterminated string literal\u2019 errors when these characters are included in a JS string literal, because JavaScript unhelpfully treats them the same as an ASCII newline.)</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Have you had a look at <a href=\"http://msdn.microsoft.com/en-us/library/dd991914.aspx\"><code>HttpUtility.JavaScriptStringEncode</code></a>?</p>\n",
                    "is_accepted": false,
                    "score": 106
                },
                {
                    "body": "<p>This is an old thread, but you may be interested to know about the Microsoft AntiXSS library which has a Javascript encode method which works for .Net 2 onwards.</p>\n\n<p><a href=\"http://msdn.microsoft.com/en-gb/security/aa973814.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-gb/security/aa973814.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to pass the output of a SQL Server exception to the client using the <code>RegisterStartUpScript</code> method of the MS ScriptManager in .NET 3.5. This works fine for some errors but when the exception contains single quotes the alert fails.</p>\n\n<p>I dont want to only escape single quotes though. Is there a standard function I can call to escape any special chars for use in JavaScript?</p>\n\n<pre><code>string scriptstring = \"alert('\" + ex.Message + \"');\";         \nScriptManager.RegisterStartupScript(this, this.GetType(), \"Alert\", scriptstring , true);\n</code></pre>\n\n<hr>\n\n<p><strong>EDIT</strong>:</p>\n\n<p>Thanks @tpeczek, the code <em>almost</em> worked for me :) but with a slight amendment (the escaping of single quotes) it works a treat.</p>\n\n<p>I've included my amended version here...</p>\n\n<pre><code>public class JSEncode\n{\n    /// &lt;summary&gt;\n    /// Encodes a string to be represented as a string literal. The format\n    /// is essentially a JSON string.\n    /// \n    /// The string returned includes outer quotes \n    /// Example Output: \"Hello \\\"Rick\\\"!\\r\\nRock on\"\n    /// &lt;/summary&gt;\n    /// &lt;param name=\"s\"&gt;&lt;/param&gt;\n    /// &lt;returns&gt;&lt;/returns&gt;\n    public static string EncodeJsString(string s)\n    {\n        StringBuilder sb = new StringBuilder();\n        sb.Append(\"\\\"\");\n        foreach (char c in s)\n        {\n            switch (c)\n            {\n                case '\\'':\n                    sb.Append(\"\\\\\\'\");\n                    break;\n                case '\\\"':\n                    sb.Append(\"\\\\\\\"\");\n                    break;\n                case '\\\\':\n                    sb.Append(\"\\\\\\\\\");\n                    break;\n                case '\\b':\n                    sb.Append(\"\\\\b\");\n                    break;\n                case '\\f':\n                    sb.Append(\"\\\\f\");\n                    break;\n                case '\\n':\n                    sb.Append(\"\\\\n\");\n                    break;\n                case '\\r':\n                    sb.Append(\"\\\\r\");\n                    break;\n                case '\\t':\n                    sb.Append(\"\\\\t\");\n                    break;\n                default:\n                    int i = (int)c;\n                    if (i &lt; 32 || i &gt; 127)\n                    {\n                        sb.AppendFormat(\"\\\\u{0:X04}\", i);\n                    }\n                    else\n                    {\n                        sb.Append(c);\n                    }\n                    break;\n            }\n        }\n        sb.Append(\"\\\"\");\n\n        return sb.ToString();\n    }\n}\n</code></pre>\n\n<p>As mentioned below - original source: <a href=\"http://www.west-wind.com/weblog/posts/114530.aspx\">here</a></p>\n",
            "last_activity_date": 1421679581,
            "question_id": 2920752,
            "score": 45,
            "tags": [
                "c#",
                "javascript",
                "asp.net",
                "ajax",
                "encoding"
            ],
            "title": "Is there a standard way to encode a .NET string into JavaScript string for use in MS Ajax?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><a href=\"http://caniuse.com/#feat=x-doc-messaging\">Can I use cross-document messaging</a></p>\n\n<p>FF3+, IE8+, Chrome, Safari(5?), Opera10+</p>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p>IE8 does not allow postMessage across windows/tabs</p>\n\n<p><a href=\"http://blogs.msdn.com/b/ieinternals/archive/2009/09/16/bugs-in-ie8-support-for-html5-postmessage-sessionstorage-and-localstorage.aspx\">http://blogs.msdn.com/b/ieinternals/archive/2009/09/16/bugs-in-ie8-support-for-html5-postmessage-sessionstorage-and-localstorage.aspx</a></p>\n\n<p>for more info check here</p>\n\n<p><a href=\"http://www.openajax.org/member/wiki/Browser_Variation_of_the_Hub_Reference_Implementation_%28Illustrative%29\">http://www.openajax.org/member/wiki/Browser_Variation_of_the_Hub_Reference_Implementation_%28Illustrative%29</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>For what it's worth recently I ran into some odd webkit browser/versions out in the wild that did NOT support postMessage. I was using IE(8) detection as my means for seeking an alternative. Instead, I probably should have just done some something like this:</p>\n\n<pre><code>if(window.postMessage){\n    console.log('Supports post message');\n}\n</code></pre>\n\n<p>Or likely a bit cleaner:</p>\n\n<pre><code>var pm_is_supported = typeof(window.postMessage) == 'function';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>postMessage is supported in IE8+ HOWEVER  </p>\n\n<ul>\n<li>Remember that IE9 and below require data to be passed in string form and not as an object.</li>\n<li>IE doesn't like you to call <code>postMessage</code> as soon as page loads (I'm assuming this has to do with the iframe you are posting to needing time to load).<br>\nUse a <code>setTimeout</code> to wait one or two seconds before calling <code>postMessage</code>.<br>\nIt took me hours to figure this out and IE wasn't giving me any error message, it was just silently doing nothing until I added the setTimeout. </li>\n</ul>\n\n<p>If you want to start with a demo which actually does work in IE, check out <a href=\"http://javascript.info/tutorial/cross-window-messaging-with-postmessage\" rel=\"nofollow\">this nifty tutorial by Ilya Kantor</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>What are all the browsers that support the <code>window.postMessage</code> call now? I am looking for browsers that support it natively, not through an iFrame hack.</p>\n",
            "last_activity_date": 1410428227,
            "question_id": 6036418,
            "score": 43,
            "tags": [
                "javascript",
                "cross-browser"
            ],
            "title": "What browsers support the window.postMessage call now?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><code>+</code> is ambiguous. It can mean \"concatenate\" <em>or</em> \"add\". Since one side is a string, it is taken to mean \"concatenate\", hence the result is 11 (which, by the way, was one of my favourite jokes as a young child. That and \"1 + 1 = window\", as shown visually: <code>\u2502\u253c\u2502 \u30cb \u229e</code>)</p>\n\n<p><code>-</code> however has only one meaning: subtract. So it subtracts.</p>\n\n<p>This kind of problem is not present in other languages such as PHP, where \"concatenate\" is <code>.</code> instead of <code>+</code>, making no ambiguity. Still other languages like MySQL don't even have a concatenation operator, instead using <code>CONCAT(a,b,c...)</code>.</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>Because <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\">the spec</a> explicitly tells to do so.\nPage 75. Note the difference between 11.6.1 steps 5-8 and 11.6.2 steps 5-7.</p>\n\n<blockquote>\n  <p><strong>11.6.1 - describes how addition operator works</strong></p>\n</blockquote>\n\n<p><code>1-4</code>. ...</p>\n\n<p><code>5</code>. Let lprim be ToPrimitive(lval). </p>\n\n<p><code>6</code>. Let rprim be ToPrimitive(rval). </p>\n\n<p><code>7</code>. If Type(lprim) is String or Type(rprim) is String, then </p>\n\n<p><code>7a</code>. Return the String that is the result of concatenating ToString(lprim) followed by ToString(rprim) </p>\n\n<p><code>8</code>. Return the result of applying the addition operation to ToNumber(lprim) and ToNumber(rprim)</p>\n\n<blockquote>\n  <p><strong>11.6.2 - describes how subtraction operator works</strong></p>\n</blockquote>\n\n<p><code>1-4</code>. ...</p>\n\n<p><code>5</code>. Let lnum be ToNumber(lval). </p>\n\n<p><code>6</code>. Let rnum be ToNumber(rval). </p>\n\n<p><code>7</code>. Return the result of applying the subtraction operation to lnum and rnum</p>\n\n<p><strong>Summary</strong>\nIn case of addition if any of the operands when converted to primitive value without any hints suddenly becomes a string the second one is converted to a string too. In case of subtraction both operands are converted to a number.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>String concatenation is done with <code>+</code> so Javascript will convert the first numeric 1 to a string and concatenate \"1\" and \"1\" making \"11\".</p>\n\n<p>You cannot perform subtraction on strings, so Javascript converts the second \"1\" to a number and subtracts 1 from 1, resulting in zero.</p>\n",
                    "is_accepted": true,
                    "score": 68
                },
                {
                    "body": "<p><code>+</code> is both an <strong>addition operator</strong> for numeric variables, and a <strong>concatenation operator</strong> for strings.</p>\n\n<p>Whenever there's a string after a <code>+</code>, Javascript will choose to use the <code>+</code> as a concatenation operator and convert (typed) as many terms as possible around the string so it can concatenate them. That's just the behaviour of Javascript. (If you tried <code>console.log(23 + 2 + \".\" + 1 + 5 + \"02\" + 02);</code>, you'll get the result <code>25.15022</code>. The number <code>02</code> was typed into the string <code>2</code> before being concatenated.</p>\n\n<p><code>-</code> can only be a <strong>subtraction operator</strong>, so when given a string, it will implicitly change the type of the string <code>\"1\"</code> into a numeric <code>1</code>; if it didn't do that, there's no way <code>\"1\" - 1</code> would make sense. If you tried <code>console.log(23 + 2 + 1 + 5 - \"02\" + 03);</code> you'll get 32 - the string <code>02</code> gets converted into the number <code>2</code>. The term after the <code>-</code> must be able to be converted into a number; if you tried <code>console.log(23 - 2 - \".\" - 1 - 5 - 02 - \"02\");</code> you'll get <code>NaN</code> returned.</p>\n\n<p>More importantly, if you tried <code>console.log(23 + 2 + \".\" + 1 + 5 - \"02\" + 03);</code>, it will output <code>26.15</code>, where everything before <code>-</code> was treated as a string (because it contains a string <code>\".\"</code>, and then the term after the <code>-</code> is treated as a number.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There is no dedicated string concatenation operator in JavaScript**. The addition operator <code>+</code> performs either string concatenation or addition, depending on the type of operands:</p>\n\n<pre><code>\"1\" +  1  // \"11\"\n 1  + \"1\" // \"11\"\n 1  +  1  // 2\n</code></pre>\n\n<p>There is no opposite of concatenation (I think) and the subtraction operator <code>-</code> only performs subtraction regardless of the type of operands:</p>\n\n<pre><code>\"1\" -  1  // 0\n 1  - \"1\" // 0\n 1  -  1  // 0\n\"a\" -  1  // NaN\n</code></pre>\n\n<p>** The <code>.</code> operator in PHP and <code>&amp;</code> operator in VB are dedicated string concatenation operators.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I don't understand why JavaScript works this way.</p>\n\n<pre><code>console.log(\"1\" + 1);\nconsole.log(\"1\" - 1);\n</code></pre>\n\n<p>The first line prints 11, and the second prints 0.\nWhy does JavaScript handle the first as a String and the second as a number?</p>\n",
            "last_activity_date": 1403680954,
            "question_id": 24383788,
            "score": 38,
            "tags": [
                "javascript"
            ],
            "title": "Why does JavaScript handle the plus and minus operators between strings and numbers differently?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Don't worry about triggering that event. I imagine you have something like:</p>\n\n<pre><code>window.onresize = function() {\n    // do a load of stuff\n};\n</code></pre>\n\n<p>Or something similar.</p>\n\n<p>So strip out the \"do a load of stuff\" into a function like this:</p>\n\n<pre><code>window.onresize = doALoadOfStuff;\n\nfunction doALoadOfStuff() {\n    //do a load of stuff\n}\n</code></pre>\n\n<p>That way, rather than trying to trigger the resize event, you can just call the doALoadOfStuff function.</p>\n\n<p>You <em>can</em> use jQuery to trigger the event - although if you want to run the code, it is better to do it directly without coupling yourself to the events (what if you changed the event - then your trigger wouldn't do what you expect, whereas if you call the function you aren't coupled to the event)...</p>\n\n<pre><code>$(window).trigger('resize');\n</code></pre>\n\n<p>And you could just do it in plain JavaScript</p>\n\n<pre><code>var handler = window.onresize;\nhandler();\n// or if you need to pass parameters...\nhandler.apply(window, ['param', 'another']);\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/RT4ve/\">http://jsfiddle.net/RT4ve/</a></p>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<p>If you're using jQuery you can just use:</p>\n\n<pre><code>$(window).resize(function() {\n\n// do stuff\n\n});\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/resize/\" rel=\"nofollow\">jQuery <code>.resize()</code></a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>With jQuery, you can try to call <a href=\"http://api.jquery.com/trigger/\">trigger</a>:</p>\n\n<pre><code>$(window).trigger('resize');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 91
                },
                {
                    "body": "<p><code>window.dispatchEvent(new Event('resize'));</code></p>\n",
                    "is_accepted": false,
                    "score": 90
                },
                {
                    "body": "<p><code>window.resizeBy()</code> will trigger window's onresize event. This works in both <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.resizeBy\" rel=\"nofollow\">Javascript</a> or <a href=\"http://books.google.com/books?id=LPoCiSSiKXQC&amp;lpg=PA245&amp;ots=-OcsrNP_g6&amp;dq=vbscript%20%22resizeBy%22&amp;pg=PA245#v=onepage&amp;q=vbscript%20%22resizeBy%22&amp;f=false\" rel=\"nofollow\">VBScript</a>.</p>\n\n<p><code>window.resizeBy(xDelta, yDelta)</code> called like <code>window.resizeBy(-200, -200)</code> to shrink page 200px by 200px. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I wasn't actually able to get this to work with any of the above solutions. Once I bound the event with jQuery then it worked fine as below:</p>\n\n<pre><code>$(window).bind('resize', function () {\n    resizeElements();\n}).trigger('resize');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>just</p>\n\n<pre><code>$(window).resize();\n</code></pre>\n\n<p>is what I use... unless I misunderstand what you're asking for. </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have registered a trigger on window resize. I want to know how I can trigger the event to be called. For example, when hide a div, I want my trigger function to be called.</p>\n\n<p>I found <code>window.resizeTo()</code> can trigger the function, but is there any other solution?</p>\n",
            "last_activity_date": 1418865545,
            "question_id": 1818474,
            "score": 38,
            "tags": [
                "javascript",
                "jquery",
                "events"
            ],
            "title": "How to trigger the window resize event in JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The value of a field can not be null, it's always a string value.</p>\n\n<p>The code will check if the string value is the string \"NULL\". You want to check if it's an empty string instead:</p>\n\n<pre><code>if ($('#person_data[document_type]').val() != ''){}\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>if ($('#person_data[document_type]').val().length != 0){}\n</code></pre>\n\n<p>If you want to check if the element exist at all, you should do that before calling <code>val</code>:</p>\n\n<pre><code>var $d = $('#person_data[document_type]');\nif ($d.length != 0) {\n  if ($d.val().length != 0 ) {...}\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 64
                },
                {
                    "body": "<p>jquery provides <code>val()</code> function and <code>not value()</code>. You can check empty string using jquery</p>\n\n<pre><code>if($('#person_data[document_type]').val() != ''){}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would also trim the input field, cause a space could make it look like filled</p>\n\n<pre><code>if ($.trim($('#person_data[document_type]').val()) != '')\n{\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Assuming</p>\n\n<pre><code>var val = $('#person_data[document_type]').value();\n</code></pre>\n\n<p>you have these cases:</p>\n\n<pre><code>val === 'NULL';  // actual value is a string with content \"NULL\"\nval === '';      // actual value is an empty string\nval === null;    // actual value is null (absence of any value)\n</code></pre>\n\n<p>So, use what you need.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Is this a good way to check if the value of a field is null?</p>\n\n<pre><code>if($('#person_data[document_type]').value() != 'NULL'){}\n</code></pre>\n\n<p>Or is there a better way?</p>\n",
            "last_activity_date": 1403975185,
            "question_id": 4244565,
            "score": 35,
            "tags": [
                "javascript",
                "jquery",
                "forms"
            ],
            "title": "jQuery: checking if the value of a field is null (empty)"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>They are equivalent for all intents and purposes. If you want to use either one inside a string, it is a good idea to use the other one to create the string, as you noted. Other than that, it's all the same.</p>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>There's no difference. The reason for its existence is exactly what you mentioned</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Your example is the best example to describe the difference between the two.... </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think there is another difference. If you do the following</p>\n\n<pre><code>var str1 = 'The \\' character';\nvar str2 = 'The \" character';\nvar str3 = \"The ' character\";\nvar str4 = \"The \\\" character\";\ndocument.write (str1.replace(\"'\",\"%26\");\ndocument.write (str2.replace('\"',\"%22\");\ndocument.write (str3.replace(\"'\",\"%26\");\ndocument.write (str4.replace('\"',\"%22\");\n</code></pre>\n\n<p>The document.write will fail for str1 and str4. That is the difference, but I don't know if there is a workaround to make them work.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Although not technically a difference in Javascript, its worth noting that single quoted strings are <a href=\"http://json.org\">not valid JSON</a>, per se. I think that people automatically assume that since JSON is valid JS, that valid JS strings are also valid JSON, <a href=\"http://jsonlint.com\">which isn't necessarily true</a>.</p>\n\n<p>E.g.,  <code>{'key': 'Some \"value\"'}</code> is not valid JSON, whereas <code>{\"key\": \"Some 'value'\"}</code>  is.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Good practice, according to Mozilla, is to use \" \" in HTML (where ' ' cannot be used) while reserving ' ' in Javascript (where both \" \" and ' ' can be use indifferently)...</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I saw <a href=\"http://stackoverflow.com/questions/943795/difference-between-and\">this question</a> and I am wondering about the same thing in JavaScript.</p>\n\n<p>If you use the character ' or the character \" when making strings in JavaScript, the application seems to behave the same. So what is the difference between these two characters?</p>\n\n<p>The only advantage I have seen in using ' to build strings is that I can do stuff like:</p>\n\n<pre><code>var toAppend = '&lt;div id=\"myDiv1\"&gt;&lt;/div&gt;';\n</code></pre>\n\n<p>Instead of:</p>\n\n<pre><code>var toAppend = \"&lt;div id=\\\"myDiv1\\\"&gt;&lt;/div&gt;\";\n</code></pre>\n\n<p>Is there any significant difference between them that I should be aware of?</p>\n",
            "last_activity_date": 1383085385,
            "question_id": 944081,
            "score": 34,
            "tags": [
                "javascript",
                "string"
            ],
            "title": "What is the difference between &#39; and &quot; in JavaScript?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>Why don't you use an <code>&lt;input&gt;</code> or <code>&lt;button&gt;</code> element and just tweak it with CSS? Then it works without Javascript and is therefore more reliable.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>The simplest way to do that would be use something like this:</p>\n\n<pre><code>\n&lt;a href=\"#\" onclick=\"document.formName.submit();\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>best way is</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"document.forms[0].submit();return false;\"&gt;Submit Form&lt;/a&gt;\n</code></pre>\n\n<p>however you probably DON'T want to do that as it will make submitting impossible for users with JS disabled</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>loop through parent nodes until you find an element with tagname that indicates it's a form!</p>\n\n<pre><code>&lt;form&gt;\n    &lt;ul&gt;\n        &lt;li&gt;\n            &lt;p&gt;\n                The link could be &lt;span&gt;embedded &lt;a href=\"\" onclick=\"get_form(this).submit(); return false\"&gt;at any level&lt;/a&gt;&lt;/span&gt;\n                in the form, so \"this.parentNode.parentNode...\" is no good. :(\n            &lt;/p&gt;\n        &lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/form&gt;\n\n\n\n&lt;script type=\"text/javascript\"&gt;\n    //&lt;![CDATA[\n    function get_form( element )\n    {\n        while( element )\n        {\n            element = element.parentNode\n            if( element.tagName.toLowerCase() == \"form\" )\n            {\n                //alert( element ) //debug/test\n                return element\n            }\n        }\n        return 0; //error: no form found in ancestors\n    }\n    //]]&gt;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Similar <a href=\"http://stackoverflow.com/questions/313478/how-best-to-make-a-link-submit-a-form#313624\">solution</a> to <a href=\"http://stackoverflow.com/users/35364/hasen-j\">hasen j</a>, but using a recursive function to traverse the document.</p>\n\n<pre><code>function findParentForm(element) {\n    if (element.parentNode.tagName.toLowerCase() == 'html') {\n    \tthrow('No Parent Form Found');\n    } else if (element.parentNode.tagName.toLowerCase() == 'form') {\n    \treturn element.parentNode;\n    } else {\n    \treturn findParentForm(element.parentNode);\n    }\n}\n</code></pre>\n\n<p>And the form, of course...</p>\n\n<pre><code>&lt;form&gt;\n    &lt;ul&gt;\n    \t&lt;li&gt;\n    \t\t&lt;p&gt;\n    \t\t\tThe link could be &lt;span&gt;embedded &lt;a href=\"\" onclick=\"findParentForm(this).submit(); return false;\"&gt;at any level&lt;/a&gt;&lt;/span&gt;\n    \t\t\tin the form, so \"this.parentNode.parentNode...\" is no good. :(\n    \t\t&lt;/p&gt;\n    \t&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Personally, I prefer to use the <code>javascript:</code> protocol in the href instead of using onclick event... If there is any issues with this, I would be happy to be corrected.</p>\n\n<p>If you have only one form in the page, a quite common case, you can do simply:</p>\n\n<pre><code>&lt;li&gt;&lt;p&gt;&lt;a href=\"javascript:document.forms[0].submit();\"&gt;Click here to submit&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n</code></pre>\n\n<p>Otherwise, bubbling up the elements as above is a solution.</p>\n\n<p>[EDIT] I keep the answer, even if it is downvoted, as a reference (the info given in comments is interesting).<br />\nAnother drawback of the protocol technique: it doesn't generate an event object. Not a problem in the snippet I gave, but annoying when calling a handler.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You should use a button (and input or button of type submit) to submit a form. </p>\n\n<p>If you need any additional features that a link has but input elements don't have (such as hover), then it is easier to implement those with javascript, than it is the submission of the form. It will also degrade more gracefully for people without javascript.</p>\n\n<p>You can even solve this with MSIE specific code (and use :hover for other browsers):</p>\n\n<pre><code>&lt;input type=\"submit\" value=\"send\" class=\"linkstyles\"\n       onmouseenter=\"this.className+=' hovered';\"\n       onmouseleave=\"this.className=this.className.replace(/(^|\\s)hovered(\\s|$)/g, '');\" /&gt;\n</code></pre>\n\n<p>If you still really really want to do it backwards then here's how I wouldn't do it:</p>\n\n<pre><code>function submitByLink ( elm ) {\n  // Move up domtree until we hit no parentNode or find a form\n  while (elm) {\n    elm = elm.parentNode;\n    if (elm &amp;&amp; elm.tagName == 'FORM') {\n      // First chance we get, we submit the form and exit.\n      // The return on the node it kills the event bubble by forwarding false to browser\n      elm.submit(); \n      return false;\n    }\n  }\n  // If we got here then there is no form parent and user will be sent to link href\n}\n</code></pre>\n\n<p>And the HTML would look like this:</p>\n\n<pre><code>&lt;a href=\"aPageExplainingWhyYouNeedJavascript.html\" onclick=\"return submitByLink(this);\"&gt;Send&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>$(document).ready(function(){$('#submit').click(function(){$('#signup').submit();});});\n</code></pre>\n\n<p>Using Jquery, we check the document has loaded, then we wait for an anchor tag with an id of 'submit' to be clicked. It then submits the form with an id of 'signup'. Change 'submit' and 'signup' to suit. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I am using this now every time.  Because the submit button in my project usually a link (by wrap an image or CSS), so I use this:</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"$(this).closest('form').submit(); return false;\"&gt;Submit&lt;/a&gt;\n</code></pre>\n\n<p>Don't forget it is using jQuery too.</p>\n\n<p>You can wrap in your own function.  So it always submit the parent element (form) on that link.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>As long as the link is a direct child of the form, you can use this. You don't need to know the name of the form. Works in at least Firefox and Chrome.</p>\n\n<pre><code>&lt;form action=\"\"&gt;\n    &lt;a href=\"\" onclick=\"parentNode.submit();return false;\"&gt;Submit&lt;/a&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>quirksmode.org tells me x.parentNode works in all browsers, so this <em>should</em> work everywhere.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>To follow on from the answer above <a href=\"http://stackoverflow.com/questions/313478/how-best-to-make-a-link-submit-a-form/313480#313480\">How best to make a link submit a form.</a>, the way I've been doing it recently is </p>\n\n<pre><code>&lt;button class=\"submit\" type=\"submit\"&gt;&lt;a href=\"#\" onclick=\"return false;\"&gt;Link Text&lt;/a&gt;&lt;/button&gt;\n</code></pre>\n\n<p>and CSS</p>\n\n<pre><code>.submit {\n    background: transparent;\n    border:0;\n    display: inline;\n    margin: 0;\n    padding: 0;\n    cursor:pointer;\n}\n.submit a \n{\n    color: #CEA249;\n}\n.submit:hover a\n{\n    color: white;\n}\n</code></pre>\n\n<p>I posted this since I couldn't find an example of the html / css done. If anyone has any improvements will update.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Turn a submit button into a link using markup like this:</p>\n\n<pre><code>&lt;input id=\"submitlink\" type=\"submit\" value=\"Text\" /&gt;\n</code></pre>\n\n<p>And CSS like this:</p>\n\n<pre><code>input#submitlink {\n    background: transparent;\n    border: 0;\n    cursor:pointer;\n    margin: 0;\n    padding: 0;\n    color: #034af3;\n    text-decoration: underline;\n}\n\ninput#submitlink:visited {\n    color: #505abc;\n}\n\ninput#submitlink:hover {\n    color: #1d60ff;\n    text-decoration: none;\n}\n\ninput#submitlink:active {\n    color: #12eb87;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>&lt;form&gt;\n&lt;input type=\"submit\" id=\"submit\" style=\"display:none;\"/&gt;\n&lt;a href=\"#\" onclick=\"$('#submit').click();\"&gt;Sample Submit Trick&lt;/a&gt; \n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What's the best way to get a regular anchor (<code>&lt;a href=\"...\"&gt;</code>) to submit the form it is embedded in when clicked?</p>\n\n<pre><code>&lt;form&gt;\n    &lt;ul&gt;\n        &lt;li&gt;\n            &lt;p&gt;\n                The link could be &lt;span&gt;embedded &lt;a href=\"\" onclick=\"?\"&gt;at any level&lt;/a&gt;&lt;/span&gt;\n                in the form, so \"this.parentNode.parentNode...\" is no good. :(\n            &lt;/p&gt;\n        &lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>I know that the easiest way using jQuery would be</p>\n\n<pre><code>$('#myLink').click(function() {\n    $(this).parents('form:first').submit();\n});\n</code></pre>\n\n<p>...but I'm trying to find a way to do this without using a library.</p>\n\n<p><hr /></p>\n\n<p><strong>Edit</strong>: I'm really trying to find a method which doesn't require knowledge of the form (eg: its name, id, etc). This would be similar to how you could put this on an input element: <code>&lt;input onclick=\"this.form.submit()\" /&gt;</code></p>\n",
            "last_activity_date": 1365736437,
            "question_id": 313478,
            "score": 33,
            "tags": [
                "javascript",
                "html",
                "forms"
            ],
            "title": "How best to make a link submit a form"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>In jQuery, a new element can be created by passing a HTML string to the constructor, as shown below:</p>\n\n<pre><code>var img = $('&lt;img id=\"dynamic\"&gt;'); //Equivalent: $(document.createElement('img'))\nimg.attr('src', responseObject.imgurl);\nimg.appendTo('#imagediv');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<pre><code>var img = $('&lt;img /&gt;',{ id: 'Myid', src: 'MySrc.gif', alt:'MyAlt'}).appendTo($('#YourDiv'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>You save some bytes by avoiding the <code>.attr</code> altogether by passing the properties to the <a href=\"https://api.jquery.com/jquery/#jQuery-html-attributes\" rel=\"nofollow\">jQuery constructor</a>:</p>\n\n<pre><code>var img = $('&lt;img /&gt;',\n             { id: 'Myid',\n               src: 'MySrc.gif', \n               alt:'MyAlt'})\n              .appendTo($('#YourDiv'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>For those who need the same feature in IE 8, this is how I solved the problem:</p>\n\n<pre><code>  var myImage = $('&lt;img/&gt;');\n\n               myImage.attr('width', 300);\n               myImage.attr('height', 300);\n               myImage.attr('class', \"groupMediaPhoto\");\n               myImage.attr('src', photoUrl);\n</code></pre>\n\n<p>I could not force IE8 to use object in constructor.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I understand JQuery in the basic sense but am definitely new to it, and suspect this is very easy.</p>\n\n<p>I've got my image src and id in a JSON response (converted to an object), and therefore the correct values in responseObject.imgurl and responseObject.imgid, and now I'd like to create an image with it and  append it to a div (lets call it <code>&lt;div id=\"imagediv\"&gt;</code>.  I'm a bit stuck on dynamically building the <code>&lt;img src=\"dynamic\" id=\"dynamic\"&gt;</code> - most of the examples I've seen involve replacing the src on an existing image, but I don't have an existing image.</p>\n",
            "last_activity_date": 1405376283,
            "question_id": 8013792,
            "score": 31,
            "tags": [
                "javascript",
                "jquery",
                "image"
            ],
            "title": "How to create a new img tag with JQuery, with the src and id from a JavaScript object?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No jQuery is necessary in this situation.   </p>\n\n<pre><code>window.opener.location.reload(false);\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\">https://developer.mozilla.org/en-US/docs/Web/API/Window</a></p>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>You can use <a href=\"https://developer.mozilla.org/en/DOM/window.opener\">window.opener</a>, <a href=\"https://developer.mozilla.org/en/DOM/window.parent\">window.parent</a>, or <a href=\"https://developer.mozilla.org/en/DOM/window.top\">window.top</a> to reference the window in question.  From there, you just call the <code>reload</code> method (e.g.: <code>window.parent.location.reload()</code>).</p>\n\n<p>However, as a caveat, you might have problems with <code>window.opener</code> if you need to navigate away from the originally opened page since the reference will be lost.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>  top.frames.location.reload(false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can reload parent window location using :</p>\n\n<pre><code>window.opener.location.href = window.opener.location.href;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Prevents previous data from been resubmitted. Tested in Firefox and Safari.</p>\n\n<pre><code>top.frames.location.href = top.frames.location.href;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can i reaload my parent window from child window using jquery?</p>\n\n<p>Please help.</p>\n",
            "last_activity_date": 1410812428,
            "question_id": 1318006,
            "score": 29,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Reload parent window from child window"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>using</p>\n\n<pre><code>$('title').html(\"new title\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There's no need to use jQuery to change the title. Try:</p>\n\n<pre><code>document.title = \"blarg\";\n</code></pre>\n\n<p>See <a href=\"http://stackoverflow.com/questions/180103/jquery-how-to-change-title-of-document-during-ready\">this question</a> for more details.</p>\n\n<p>To dynamically change on button click:</p>\n\n<pre><code>$(selectorForMyButton).click(function(){\n    document.title = \"blarg\";\n});\n</code></pre>\n\n<p>To dynamically change in loop, try:</p>\n\n<pre><code>var counter = 0;\n\nvar titleTimerId = setInterval(function(){\n    document.title = document.title + '&gt;';\n    counter++;\n    if(counter == 5){\n        clearInterval(titleTimerId);\n    }\n}, 100);\n</code></pre>\n\n<p>To string the two together so that it dynamically changes on button click, in a loop:</p>\n\n<pre><code>var counter = 0;\n\n$(selectorForMyButton).click(function(){\n  titleTimerId = setInterval(function(){\n    document.title = document.title + '&gt;';\n    counter++;\n    if(counter == 5){\n        clearInterval(titleTimerId);\n    }\n  }, 100);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>$(document).prop('title', 'test');\n</code></pre>\n\n<p>This is simply a JQuery wrapper for:</p>\n\n<pre><code>document.title = 'test';\n</code></pre>\n\n<p>To add a > periodically you can do:</p>\n\n<pre><code>function changeTitle() {\n    var title = $(document).prop('title'); \n    if (title.indexOf(\"&gt;&gt;&gt;\") == -1) {\n        setTimeout(changeTitle, 3000);  \n        $(document).prop('title', '&gt;'+title);\n    }\n}\n\nchangeTitle();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 65
                },
                {
                    "body": "<pre><code>document.getElementById('mybutton').onclick = function(){\n    document.title= \"WHATEVER YOU WANT TO PUT HERE\";\n}\n</code></pre>\n\n<p>This is how you would do it. </p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Some code to walk through a list of titles (circularily or one-shot):</p>\n\n<pre><code>    var titles = [\n            \" title\",\n            \"&gt; title\",\n            \"&gt;&gt; title\",\n            \"&gt;&gt;&gt; title\"\n    ];\n\n    // option 1:\n    function titleAniCircular(i) {\n            // from first to last title and back again, forever\n            i = (!i) ? 0 : (i*1+1) % titles.length;\n            $('title').html(titles[i]);\n            setTimeout(titleAniCircular, 1000, [i]);\n    };\n\n    // option 2:\n    function titleAniSequence(i) {\n            // from first to last title and stop\n            i = (!i) ? 0 : (i*1+1);\n            $('title').html(titles[i]);\n            if (i&lt;titles.length-1) setTimeout(titleAniSequence, 1000, [i]);\n    };\n\n    // then call them when you like.\n    // e.g. to call one on document load, uncomment one of the rows below:\n\n    //$(document).load( titleAniCircular() );\n    //$(document).load( titleAniSequence() );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How to make dynamic changing <code>&lt;title&gt;</code> tag with jquery?</p>\n\n<p>example: adding 3 <code>&gt;</code> symbols one by one</p>\n\n<pre><code>&gt; title\n&gt;&gt; title\n&gt;&gt;&gt; title\n</code></pre>\n",
            "last_activity_date": 1404809119,
            "question_id": 7173596,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "title"
            ],
            "title": "Changing the page title with Jquery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>You cannot instantiate it.</strong></p>\n\n<p>You usually get them from a file upload form. <a href=\"http://www.html5rocks.com/en/tutorials/file/dndfiles/\" rel=\"nofollow\">This article</a> explains it well.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<blockquote>\n  <p><strong>Update</strong></p>\n  \n  <p>BlobBuilder has been <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/BlobBuilder\" rel=\"nofollow\">obsoleted</a> see how you go using it, if you're using it for testing purposes.</p>\n  \n  <p>Otherwise apply the below with migration strategies of going to <em>Blob</em>, such as the answers to <a href=\"http://stackoverflow.com/questions/15030906/how-to-replace-the-deprecated-blobbuilder-with-the-new-blob-constructor\">this question</a>.</p>\n</blockquote>\n\n<h3>Use a Blob instead</h3>\n\n<p>As an alternative there is a <a href=\"https://developer.mozilla.org/en/DOM/Blob\" rel=\"nofollow\">Blob</a> that you can use in place of <a href=\"https://developer.mozilla.org/en/DOM/File\" rel=\"nofollow\">File</a> as it is what File interface derives from as per <a href=\"http://www.w3.org/TR/FileAPI/#file\" rel=\"nofollow\">W3C spec</a>:</p>\n\n<pre><code>interface File : Blob {\n    readonly attribute DOMString name;\n    readonly attribute Date lastModifiedDate;\n};\n</code></pre>\n\n<blockquote>\n  <p>The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system.</p>\n</blockquote>\n\n<h3>Create the Blob</h3>\n\n<p>Using the <a href=\"https://developer.mozilla.org/en/DOM/BlobBuilder\" rel=\"nofollow\">BlobBuilder</a> like this on an existing JavaScript method that takes a File to upload via <code>XMLHttpRequest</code> and supplying a Blob to it works fine like this:</p>\n\n<pre><code>var BlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder;\nvar bb = new BlobBuilder();\n\nvar xhr = new XMLHttpRequest();\nxhr.open('GET', 'http://jsfiddle.net/img/logo.png', true);\n\nxhr.responseType = 'arraybuffer';\n\nbb.append(this.response); // Note: not xhr.responseText\n\n//at this point you have the equivalent of: new File()\nvar blob = bb.getBlob('image/png');\n\n/* more setup code */\nxhr.send(blob);\n</code></pre>\n\n<h3>Extended example</h3>\n\n<p>The rest of the sample is up on <a href=\"http://jsfiddle.net/NickJosevski/VTSUs/\" rel=\"nofollow\">jsFiddle</a> in a more complete fashion but will not successfully upload as I can't expose the upload logic in a long term fashion.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Because this is javascript and dynamic you could define your own class that matches the File interface and use that instead.</p>\n\n<p>I had to do just that with dropzone.js because I wanted to simulate a file upload and it works on File objects.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Now you can!</p>\n\n<pre><code>var someBlob = new Blob(['same way...'], {type: 'text/plain'})\nvar parts = [someBlob, '...you construct blob', new ArrayBuffer()];\n\nnew File(parts, 'sample.txt', {\n    lastModified: new Date(0), // optional - default = now\n    type: \"overide/mimetype\" // optional - default = ''\n})\n</code></pre>\n\n<p>if you download it you would get </p>\n\n<p><code>sample.txt</code>\nsame way......you construct blob</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>According to the W3C File API specification, the File constructor requires 2 (or 3) parameters.</p>\n\n<p>So to create a empty file do:</p>\n\n<pre><code>var f = new File([\"\"], \"filename\");\n</code></pre>\n\n<ul>\n<li>The first argument is the data provided as an array of lines of text;</li>\n<li>The second argument is the filename ;</li>\n<li><p>The third argument looks like:</p>\n\n<p>var f = new File([\"\"], \"filename.txt\", {type: \"text/plain\"; lastModified: date})</p></li>\n</ul>\n\n<p>It works in FireFox, but I have no idea about browser compatibility.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>There's a <a href=\"https://developer.mozilla.org/en/DOM/File\"><code>File</code></a> object in JavaScript.  I want to instantiate one for testing purposes.</p>\n\n<p>I have tried <code>new File()</code>, but I get an \"Illegal constructor\" error.</p>\n\n<p>Is it possible to create a <code>File</code> object ?</p>\n\n<hr/>\n\n<p><em>File Object reference : <a href=\"https://developer.mozilla.org/en/DOM/File\">https://developer.mozilla.org/en/DOM/File</a></em></p>\n",
            "last_activity_date": 1412347883,
            "question_id": 8390855,
            "score": 27,
            "tags": [
                "javascript",
                "file-upload",
                "upload"
            ],
            "title": "How to instantiate a File object in JavaScript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It looks like the socket.io library stores these in a dictionary. As such, don't think this would be possible without modifying the source.</p>\n\n<p>From <a href=\"https://github.com/LearnBoost/socket.io-client/blob/master/lib/events.js\">source</a>:</p>\n\n<pre><code>EventEmitter.prototype.on = function (name, fn) {\n    if (!this.$events) {\n      this.$events = {};\n    }\n\n    if (!this.$events[name]) {\n      this.$events[name] = fn;\n    } else if (io.util.isArray(this.$events[name])) {\n      this.$events[name].push(fn);\n    } else {\n      this.$events[name] = [this.$events[name], fn];\n    }\n\n    return this;\n  };\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Here you go ...</p>\n\n<pre><code>var socket = io.connect();\nvar globalEvent = \"*\";\nsocket.$emit = function (name) {\n    if(!this.$events) return false;\n    for(var i=0;i&lt;2;++i){\n        if(i==0 &amp;&amp; name==globalEvent) continue;\n        var args = Array.prototype.slice.call(arguments, 1-i);\n        var handler = this.$events[i==0?name:globalEvent];\n        if(!handler) handler = [];\n        if ('function' == typeof handler) handler.apply(this, args);\n        else if (io.util.isArray(handler)) {\n            var listeners = handler.slice();\n            for (var i=0, l=listeners.length; i&lt;l; i++)\n                listeners[i].apply(this, args);\n        } else return false;\n    }\n    return true;\n};\nsocket.on(globalEvent,function(event){\n    var args = Array.prototype.slice.call(arguments, 1);\n    console.log(\"Global Event = \"+event+\"; Arguments = \"+JSON.stringify(args));\n});\n</code></pre>\n\n<p>This will catch events like <code>connecting</code>, <code>connect</code>, <code>disconnect</code>, <code>reconnecting</code> too, so do take care.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The current (Apr 2013) <a href=\"https://github.com/LearnBoost/socket.io/wiki/Exposed-events\" rel=\"nofollow\">GitHub doc on exposed events</a> mentions a <code>socket.on('anything')</code>. It appears that 'anything' is a placeholder for a custom event name, not an actual keyword that would catch any event.</p>\n\n<p>I've just started working with web sockets and Node.JS, and immediately had a need to handle any event, as well as to discover what events were sent. Can't quite believe this functionality is missing from socket.io.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is <a href=\"https://github.com/LearnBoost/socket.io/issues/434\" rel=\"nofollow\">a long discussion about this topic</a> going on at the Socket.IO repository issue page.  There are a variety of solutions posted there (e.g., overriding EventEmitter with EventEmitter2).  lmjabreu released another solution a couple weeks ago: a npm module called <a href=\"https://npmjs.org/package/socket.io-wildcard\" rel=\"nofollow\">socket.io-wildcard</a> that patches in a wildcard event onto Socket.IO (works with the current Socket.IO, ~0.9.14).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can override <strong>socket.$emit</strong></p>\n\n<p>With the following code you have two new functions to:</p>\n\n<ul>\n<li>Trap all events</li>\n<li>Trap only events which are not trapped by the old method (it is a default listener)</li>\n</ul>\n\n\n\n<pre><code>var original_$emit = socket.$emit;\nsocket.$emit = function() {\n    var args = Array.prototype.slice.call(arguments);\n    original_$emit.apply(socket, ['*'].concat(args));\n    if(!original_$emit.apply(socket, arguments)) {\n        original_$emit.apply(socket, ['default'].concat(args));\n    }\n}\n\nsocket.on('default',function(event, data) {\n    console.log('Event not trapped: ' + event + ' - data:' + JSON.stringify(data));\n});\n\nsocket.on('*',function(event, data) {\n    console.log('Event received: ' + event + ' - data:' + JSON.stringify(data));\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p><a href=\"https://github.com/hden/socketio-wildcard\" rel=\"nofollow\">socketio-wildcard</a> does exactly what you want.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to have a socket.io client respond to all events without to have specify each event individually?</p>\n\n<p>For example, something like this (which obviously doesn't work right now):</p>\n\n<pre><code>var socket = io.connect(\"http://myserver\");\n\nsocket.on(\"*\", function(){\n  // listen to any and all events that are emitted from the\n  // socket.io back-end server, and handle them here.\n\n  // is this possible? how can i do this?\n});\n</code></pre>\n\n<p>I want this callback function to be called when any / all events are received by the client-side socket.io code.</p>\n\n<p>Is this possible? How?</p>\n",
            "last_activity_date": 1425571516,
            "question_id": 10405070,
            "score": 25,
            "tags": [
                "javascript",
                "events",
                "socket.io"
            ],
            "title": "Socket.io Client: respond to all events with one handler?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The difference is in the return values.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/map\"><code>.map()</code></a> <strong>returns a new Array of objects</strong> created by taking some action on the original item.  </p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/every\"><code>.every()</code></a> <strong>returns a boolean</strong> - true if every element in this array satisfies the provided testing function.  An important difference with <code>.every()</code> is that the test function may not always be called for every element in the array.  Once the testing function returns false for any element, no more array elements are iterated.  Therefore, the testing function should usually have no <a href=\"http://programmers.stackexchange.com/a/40314/13820\">side effects</a>.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach\"><code>.forEach()</code></a> <strong>returns nothing</strong> - It iterates the Array performing a given action for each item in the Array.</p>\n\n<p><strong>Edit:</strong> Here's the <a href=\"http://msdn.microsoft.com/en-us/library/k4h76zbx%28VS.94%29.aspx\">MSDN Docs</a> if you prefer.</p>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>It's worth reading this article on the dev Opera site for an in-depth explanation of EMCAScript 5 array object methods:</p>\n\n<p><a href=\"http://dev.opera.com/articles/view/javascript-array-extras-in-detail/\" rel=\"nofollow\">http://dev.opera.com/articles/view/javascript-array-extras-in-detail/</a></p>\n\n<p><a href=\"http://www.suburban-glory.com/blog?page=150\" rel=\"nofollow\">http://www.suburban-glory.com/blog?page=150</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>gilly3's answer is great. I just wanted to add a bit of information about other types of \"loop through elements\" functions.</p>\n\n<ul>\n<li>every (stops looping the first time the iterator returns false or\nsomething falsey)</li>\n<li>some (stops looping the first time the iterator\nreturns true or something truthy)</li>\n<li>filter (creates a new array\nincluding elements where the filter function returns true and\nomitting the ones where it returns false)</li>\n<li>map (creates a new array    from the values returned by the iterator\nfunction)</li>\n<li>reduce (builds up    a value by repeated calling the iterator,\npassing in previous values;    see the spec for the details; useful\nfor summing the contents of an    array and many other things)</li>\n<li>reduceRight (like reduce, but works in    descending rather than\nascending order)</li>\n</ul>\n\n<p>credit to: T.J.Crowder <a href=\"http://stackoverflow.com/questions/9329446/how-to-do-for-each-over-an-array-in-javascript/9329476#9329476\">How to do for-each over an array in JavaScript?</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I've always wondered what the difference between them were. They all seem to do the same thing...</p>\n",
            "last_activity_date": 1406814532,
            "question_id": 7340893,
            "score": 25,
            "tags": [
                "javascript"
            ],
            "title": "What is the difference between .map, .every, and .forEach?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><a href=\"https://github.com/timrwood/moment/pull/671\"><code>.zone()</code> as a setter</a> has been merged into the latest development version of Moment.js. It accepts a string containing a timezone identifier (e.g., \"-0400\" or \"-04:00\" for -4 hours) or a number representing minutes behind UTC (e.g., 240 for -4 hours).</p>\n\n<pre><code>// always \"2013-05-23 00:55\"\nmoment(1369266934311).zone('+0100').format('YYYY-MM-DD HH:mm')\n</code></pre>\n\n<p>To work with named timezones, include <a href=\"http://momentjs.com/timezone/\">Moment Timezone</a> as well and use <code>.tz()</code> insetad:</p>\n\n<pre><code>// determines the correct offset for America/Phoenix at the given moment\n// always \"2013-05-22 16:55\"\nmoment(1369266934311).tz('America/Phoenix').format('YYYY-MM-DD HH:mm')\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>I was having the same issue with Moment.js. I've installed moment-timezone, but the issue wasn't resolved. Then, I did just what here it's exposed, set the timezone and it works like a charm: </p>\n\n<pre><code>moment(new Date({your_date})).zone(\"+08:00\")\n</code></pre>\n\n<p>Thanks a lot!</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm using <a href=\"http://momentjs.com/\">Moment.js</a> to parse and format dates in my web app. As part of a JSON object, my backend server sends dates as a number of milliseconds from the UTC epoch (Unix offset).</p>\n\n<p>Parsing dates <strong>in a specific timezone</strong> is easy -- just append the RFC 822 timezone identifier to the end of the string before parsing:</p>\n\n<pre><code>// response varies according to your timezone\nmoment('3/11/2012 13:00').utc().format(\"MM/DD HH:mm\")\n\n// problem solved, always \"03/11 17:00\"\nmoment('3/11/2012 13:00 -0400').utc().format(\"MM/DD HH:mm\")\n</code></pre>\n\n<p>But how do I format a date <strong>in a specifc timezone</strong>? I want consistent results regardless of the browser's current time, but I don't want to display dates in UTC.</p>\n",
            "last_activity_date": 1423414004,
            "question_id": 15347589,
            "score": 24,
            "tags": [
                "javascript",
                "timezone",
                "momentjs"
            ],
            "title": "Moment.js: Format date in a specific timezone"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The <a href=\"https://developer.mozilla.org/en/DOM/element.classList\"><code>classList</code></a> property is not supported by IE9 and lower. IE10+ supports it though.<br>\nUse <code>className += \" ..\"</code> instead. Note: Do not omit the space: class names should be added in a white-space separated list.</p>\n\n<pre><code>var img = new Image();\nimg.src = '/image/file.png';\nimg.title = 'this is a title';\nimg.className += \" profilePic\"; // Add profilePic class to the image\n\nvar div = document.createElement(\"div\");\ndiv.className += \" picWindow\";  // Add picWindow class to the div\ndiv.appendChild(img);\ncontent.appendChild(div);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p><code>classList</code> is an HTML5 feature and is not supported across all browsers.</p>\n\n<p>I'd use something like <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a> or <a href=\"http://developer.yahoo.com/yui/2/\" rel=\"nofollow\">YUI</a> to provide the functionality of adding and removing classes.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>classList</code> is not supported in IE. Use <a href=\"http://api.jquery.com/addClass/\" rel=\"nofollow\" title=\"jQuery.addClass\">jQuery.addClass</a> or something like it.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>As mentioned by othes, <code>classList</code> is not supported by IE9 and older. As well as Alex's alternative above, there are a couple of polyfills which aim to be a drop-in replacement, i.e. just include these in your page and IE should just work (famous last words!).</p>\n\n<p><a href=\"https://github.com/eligrey/classList.js/blob/master/classList.js\">https://github.com/eligrey/classList.js/blob/master/classList.js</a></p>\n\n<p><a href=\"https://gist.github.com/devongovett/1381839\">https://gist.github.com/devongovett/1381839</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>check this out</p>\n\n<pre><code>Object.defineProperty(Element.prototype, 'classList', {\n    get: function() {\n        var self = this, bValue = self.className.split(\" \")\n\n        bValue.add = function (){\n            var b;\n            for(i in arguments){\n                b = true;\n                for (var j = 0; j&lt;bValue.length;j++)\n                    if (bValue[j] == arguments[i]){\n                        b = false\n                        break\n                    }\n                if(b)\n                    self.className += (self.className?\" \":\"\")+arguments[i]\n            }\n        }\n        bValue.remove = function(){\n            self.className = \"\"\n            for(i in arguments)\n                for (var j = 0; j&lt;bValue.length;j++)\n                    if(bValue[j] != arguments[i])\n                        self.className += (self.className?\" \" :\"\")+bValue[j]\n        }\n        bValue.toggle = function(x){\n            var b;\n            if(x){\n                self.className = \"\"\n                b = false;\n                for (var j = 0; j&lt;bValue.length;j++)\n                    if(bValue[j] != x){\n                        self.className += (self.className?\" \" :\"\")+bValue[j]\n                        b = false\n                    } else b = true\n                if(!b)\n                    self.className += (self.className?\" \":\"\")+x\n            } else throw new TypeError(\"Failed to execute 'toggle': 1 argument required\")\n            return !b;\n        }\n\n        return bValue; \n    },\n    enumerable: false\n})\n</code></pre>\n\n<p>and classList will work!</p>\n\n<pre><code>document.getElementsByTagName(\"div\")[0].classList\n[\"aclass\"]\n\ndocument.getElementsByTagName(\"div\")[0].classList.add(\"myclass\")\n\ndocument.getElementsByTagName(\"div\")[0].className\n\"aclass myclass\"\n</code></pre>\n\n<p>that's all!</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Essentially, IE9- doesn't support <code>classList</code> API, see <a href=\"http://caniuse.com/#search=classList\" rel=\"nofollow\"><strong>this chart</strong></a>.</p>\n\n<p>Currently the best solution, I think is to include a classList polyfill. In this way <strong>you don't have to rework on your business logic</strong>. Several people have provided links in their answers or comments.</p>\n\n<p>Alternatively, I gave an answer under <a href=\"http://stackoverflow.com/questions/27163587/how-do-i-add-a-class-name-to-javascript-string/27165736#27165736\"><strong>this question</strong></a> (which was accepted by the asker), and also explained its advantage over simple <code>+= ' className'</code>. You may take a looks as reference.</p>\n\n<hr>\n\n<p>Edit: oops, I didn't realize this question is asked 3 years ago, it just got bumped up in my timeline. Never mind, still I think my answer in the other question would help :D</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using the following code, but having it fail in IE.\nThe message is:</p>\n\n<blockquote>\n  <p>Unable to get value of the property 'add': object is null or undefined\"</p>\n</blockquote>\n\n<p>I assume this is just an IE support issue. How would you make the following code work in IE?</p>\n\n<p>Any ideas?</p>\n\n<pre><code>var img = new Image();\nimg.src = '/image/file.png';\nimg.title = 'this is a title';\nimg.classList.add(\"profilePic\");\nvar div = document.createElement(\"div\");\ndiv.classList.add(\"picWindow\");\ndiv.appendChild(img);\ncontent.appendChild(div);\n</code></pre>\n",
            "last_activity_date": 1417654825,
            "question_id": 8098406,
            "score": 24,
            "tags": [
                "javascript",
                "internet-explorer"
            ],
            "title": "Code with classList does not work in IE?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If the provider supports the user agent flow it's acctually pretty easy.\n<a href=\"https://gist.github.com/563893\">https://gist.github.com/563893</a></p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>If you are connecting to Google APIs, you can use the provided JS client, which supports several transport mechanisms in addition to the standard-defined HTTP-based redirects, e.g., postMessage transport and CORS: <a href=\"http://code.google.com/p/google-api-javascript-client/wiki/Authentication\" rel=\"nofollow\">http://code.google.com/p/google-api-javascript-client/wiki/Authentication</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm currently writing one that implements the <a href=\"http://tools.ietf.org/html/rfc6750\" rel=\"nofollow\">Bearer spec</a> and the XMLHttpRequest API, which you can find at <a href=\"https://github.com/ox-it/javascript-oauth2\" rel=\"nofollow\">https://github.com/ox-it/javascript-oauth2</a>.</p>\n\n<p>It requires CORS at the moment, but I do plan to make this optional soon, so it'll work in IE>=8.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>jso library \n<a href=\"https://github.com/andreassolberg/jso\" rel=\"nofollow\">https://github.com/andreassolberg/jso</a></p>\n\n<p>Do not go for the simplest solution. If you skip state management you are vulnerable f\u00f3r attacks. </p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Is there an OAuth2 library for JavaScript? Or how can I create a JavaScript app to interact with an OAuth2 provider?</p>\n",
            "last_activity_date": 1362848869,
            "question_id": 4121570,
            "score": 24,
            "tags": [
                "javascript",
                "oauth"
            ],
            "title": "OAuth2 for Javascript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>With canvas you can perform operations such as rotation that you can't do with pure dome without use some \"heavy\" tricks. Anyway the dom is faster and you can use it in every browser without problems. You must think about what are you going to use in the game, if you will use only basic operations use the dom otherwise choose the canvas.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Look here: <a href=\"http://paulbakaus.com/2010/07/19/why-canvas-is-not-an-obvious-choice-for-web-games/\" rel=\"nofollow\">Why Canvas is not an obvious choice for web games</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>When you develop with Canvas you will have to use the GameLoop technique which is very painful because you will have to redraw all elements all the time.</p>\n\n<p>When you develop with DOM you will be able to redraw only the objects that have been modified and will let the hard work for the browser implementation.</p>\n\n<p>if your game has a few modifications per frame then you can use the DOM, otherwise use the Canvas please! It is so much faster!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><em><strong>canvas</em></strong>\nprops :</p>\n\n<ol>\n<li>could manipulate pixel and apply filter effect, so easy for image processing;</li>\n<li>very efficient for small size but hundreds of elements in the game</li>\n<li>many libraries for game could be found using canvas, such as box2dweb, and could make awesome games such as angry bird</li>\n</ol>\n\n<p>cons: </p>\n\n<ol>\n<li>it's stateless, so you have to record the states of the elements in the canvas, and handle the hit test by yourself.</li>\n<li>low efficient for very large size but with one a few elements in the game</li>\n<li>great ability, great responsibility. the freedom to draw, brings in you have to charge of all the drawing staff. Fortunately, there are many libraries there, such as cocos2d-html5, IvanK.</li>\n</ol>\n\n<p><em><strong>DOM</em></strong>\nprops:</p>\n\n<ol>\n<li>rendering by the browser, so less error-prone;</li>\n</ol>\n\n<p>cons:</p>\n\n<ol>\n<li>could do simple animation with CSS only, that makes the game not fluent;</li>\n<li>no good for manipulating hundreds of DOM elements;</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>What are advantages and disadvantages of creating games in 'pure' DOM as compared to using canvas? </p>\n",
            "last_activity_date": 1365001600,
            "question_id": 2266416,
            "score": 24,
            "tags": [
                "javascript",
                "dom",
                "canvas"
            ],
            "title": "What are the advantages/disadvantages of Canvas vs. DOM in JavaScript game development?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Once you have selected an element you can call click()</p>\n\n<pre><code>document.getElementById('link').click();\n</code></pre>\n\n<p>see: <a href=\"https://developer.mozilla.org/En/DOM/Element.click\">https://developer.mozilla.org/En/DOM/Element.click</a></p>\n\n<p>I don't remember if this works on IE, but it should. I don't have a windows machine nearby.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>If you're using JQuery you can do:</p>\n\n<pre><code>$('#elementid').click();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>I haven't used jQuery, but IIRC, the first method mentioned doesn't trigger the <code>onclick</code> handler.</p>\n\n<p>I'd call the associated <code>onclick</code> method directly, if you're not using the event details.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>just call \"onclick\"! </p>\n\n<p>here's an example html:</p>\n\n<pre><code>&lt;div id=\"c\" onclick=\"alert('hello')\"&gt;Click me!&lt;/div&gt;\n&lt;div onclick=\"document.getElementById('c').onclick()\"&gt;Fake click the previous link!&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For IE there is <a href=\"http://msdn.microsoft.com/lv-lv/library/ms536423(en-us,VS.85).aspx\" rel=\"nofollow\">fireEvent()</a> method. Don't know if that works for other browsers.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>@Vilx-</p>\n\n<p>Firefox uses <a href=\"https://developer.mozilla.org/en/DOM/element.dispatchEvent\" rel=\"nofollow\"><code>element.dispatchEvent</code></a>.</p>\n\n<p>The page includes a sample <code>simulateClick()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is a perfect example of where you should use a javascript library like Prototype or JQuery to abstract away the cross-browser differences.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I could be misinterpreting your question, but, yes, <strong>this is possible.</strong> The way that I would go about doing it is this:</p>\n\n<pre><code>var oElement = document.getElementById('elementId');   // get a reference to your element\noElement.onclick = clickHandler; // assign its click function a function reference\n\nfunction clickHandler() {\n    // this function will be called whenever the element is clicked\n    // and can also be called from the context of other functions\n}\n</code></pre>\n\n<p>Now, whenever this element is clicked, the code in <code>clickHandler</code> will execute. Similarly, you can execute the same code by calling the function from within the context of other functions (or even assign <code>clickHandler</code> to handle events triggered by other elements)></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can also try getting the element's onclick attribute and then passing into eval. This should work despite the big taboo over eval. I put a sample below</p>\n\n<pre><code>eval(document.getElementById('elementId').getAttribute('onclick'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>If you're using jQuery, you need to use the <code>.trigger</code> function, so it would be something like:</p>\n\n<pre><code>element.trigger('click');\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/trigger/\" rel=\"nofollow\">http://api.jquery.com/trigger/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have an element with an <strong>onclick</strong> method.</p>\n\n<p>I would like to activate that method (or: fake a click on this element) within another function.</p>\n\n<p>Is this possible?</p>\n",
            "last_activity_date": 1375716241,
            "question_id": 347512,
            "score": 24,
            "tags": [
                "javascript",
                "event-handling"
            ],
            "title": "Fake &quot;click&quot; to activate an onclick method"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Look for <a href=\"https://github.com/creationix/step\">Step module</a>. It can chain asynchronous functions calls and pass results from one to another.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Something like this would work -- basic change to your code is the loop turned into a recursive call that consumes a list until it is done. That makes it possible to add an outer callback (where you can do some processing after the parsing is done). </p>\n\n<pre><code>var fs = require('fs'),\n  path = require('path');\n\nfunction parse(dir, cb) {\n    fs.readdir(dir, function (err, files) {\n        if (err)\n          cb(err);\n        else \n          handleFiles(dir, files, cb);\n    });\n}\n\nfunction handleFiles(dir, files, cb){\n  var file = files.shift();\n  if (file){\n    var p = path.join(dir, file);\n    fs.stat(p, function(err, stats){\n      if (err)\n        cb(err);\n      else{\n        if (stats.isDirectory())\n          parse(p, function(err){\n            if (err)\n              cb(err);\n            else\n              handleFiles(dir, files, cb);\n          });\n        else if (stats.isFile()){\n          console.log(p);\n          handleFiles(dir, files, cb);\n        }\n      }\n    })\n  } else {\n    cb();\n  }\n\n}\n\n\nparse('.', function(err){\n  if (err)\n    console.error(err);\n  else {\n    console.log('do something else');\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Recommend to use node-seq\n<a href=\"https://github.com/substack/node-seq\" rel=\"nofollow\">https://github.com/substack/node-seq</a></p>\n\n<p>installed by npm.</p>\n\n<p>I'm using it, and I love it.. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Take a look at modification of your original code which does what you want without async helper libs.</p>\n\n<pre><code>var fs = require('fs'),\n    path = require('path');\n\nfunction do_stuff(name, cb)\n{\n    console.log(name);\n    cb();\n}\n\nfunction parse(dir, cb) {\n    fs.readdir(dir, function (err, files) {\n        if (err) {\n            cb(err);\n        } else {             \n\n            // cb_n creates a closure\n            // which counts its invocations and calls callback on nth\n            var n = files.length;\n            var cb_n = function(callback)\n            {\n                return function() {\n                    --n || callback();\n                }\n            }\n\n            // inside 'each' we have exactly n cb_n(cb) calls\n            // when all files and dirs on current level are proccessed, \n            // parent cb is called\n\n            // f = filename, p = path\n            var each = function (f, p) {\n                return function (err, stats) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        if (stats.isDirectory()) {\n                            parse(p, cb_n(cb));\n                        } else if (stats.isFile()) {\n                            do_stuff(p+f, cb_n(cb));\n                            // if do_stuff does not have async \n                            // calls inself it might be easier \n                            // to replace line above with\n                            //  do_stuff(p+f); cb_n(cb)();\n                        }\n                    }\n                };\n            };\n\n            var i;\n            for (i = 0; i &lt; files.length; i++) {\n                var f = files[i];\n                var p = path.join(dir, f);\n                fs.stat(p, each(f, p));\n            }\n        }\n    });\n}\n\nparse('.', function()\n{\n    // do some stuff here when async parse completely finished\n    console.log('done!!!');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>See following solution, it uses <a href=\"https://github.com/medikoo/deferred\" rel=\"nofollow\">deferred</a> module:</p>\n\n<pre><code>var fs   = require('fs')\n  , join = require('path').join\n  , promisify = require('deferred').promisify\n\n  , readdir = promisify(fs.readdir), stat = promisify(fs.stat);\n\nfunction parse (dir) {\n    return readdir(dir).map(function (f) {\n        return stat(join(dir, f))(function (stats) {\n            if (stats.isDirectory()) {\n                return parse(dir);\n            } else {\n                // do some stuff\n            }\n        });\n    });\n};\n\nparse('.').done(function (result) {\n    // do some stuff here when async parse completely finished\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Look for <a href=\"https://github.com/substack/node-seq\" rel=\"nofollow\">node-sync</a>, a simple library that allows you to call any asynchronous function in synchronous way. The main benefit is that it uses javascript-native design - Function.prototype.sync function, instead of heavy APIs which you'll need to learn. Also, asynchronous function which was called synchronously through node-sync doesn't blocks the whole process - it blocks only current thread!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've been using <a href=\"http://alexeypetrushin.github.io/synchronize/docs/index.html\" rel=\"nofollow\">syncrhonize.js</a> with great success. There's even a pending pull request (which works quite well) to support async functions which have multiple parameters. Far better and easier to use than node-sync imho. Added bonus that it has easy-to-understand and thorough documentation, whereas node-sync does not.</p>\n\n<p>Supports two different methods for wiring up the sync, a defered/await model (like what @Mariusz Nowak was suggesting) and a slimmer though not-as-granular function-target approach. The docs are pretty straightforward for each.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could use async module . Its auto function is awesome . If you have function A() and function B() and function C() . Both function B() and C() depend of function A() that is using value return from function A() . using async module function you could make sure that function B and C will execute only when function A  execution is completed .</p>\n\n<p>Ref : <a href=\"https://github.com/caolan/async\" rel=\"nofollow\">https://github.com/caolan/async</a></p>\n\n<pre><code>async.auto({\n            A: functionA(){//code here },\n            B: ['A',functionB(){//code here }],\n            C: ['A',functionC(){//code here }],\n            D: [ 'B','C',functionD(){//code here }]\n        }, function (err, results) {\n              //results is an array that contains the results of all the function defined and executed by async module\n              // if there is an error executing any of the function defined in the async then error will be sent to err  and as soon as err will be produced execution of other function will be terminated\n            }\n        })\n    });\n</code></pre>\n\n<p>In above example functionB and functionC will execute together once function A execution will be completed . Thus functionB and functionC will be executed simultaneously</p>\n\n<pre><code>functionB: ['A',functionB(){//code here }]\n</code></pre>\n\n<p>In above line we are passing value return by functionA using 'A'</p>\n\n<p>and functionD will be executed only when functionB and functionC execution will be completed .</p>\n\n<p>if there will be error in any function , then execution of other function will be terminated and below function will be executed .where you could write your logic of success and failure .</p>\n\n<pre><code>function (err, results) {}\n</code></pre>\n\n<p>On succesfull execution of all function \"results\" will contain the result of all the functions defined in async.auto</p>\n\n<pre><code>function (err, results) {}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I've been trying to wrap my head around this issue for the last hours but can't figure it out. I guess I still have to get used to the functional programming style ;)</p>\n\n<p>I wrote a recursive function that traverses through a directory structure and does things to certain files. This functions uses the asynchronous IO methods. Now I want to perform some action when this whole traversing is done.</p>\n\n<p>How would I make sure that this action is performed after all <code>parse</code> calls have been performed but still use the asynchronous IO functions?</p>\n\n<pre><code>var fs = require('fs'),\n    path = require('path');\n\nfunction parse(dir) {\n    fs.readdir(dir, function (err, files) {\n        if (err) {\n            console.error(err);\n        } else {                \n            // f = filename, p = path\n            var each = function (f, p) {\n                return function (err, stats) {\n                    if (err) {\n                        console.error(err);\n                    } else {\n                        if (stats.isDirectory()) {\n                            parse(p);\n                        } else if (stats.isFile()) {\n                            // do some stuff\n                        }\n                    }\n                };\n            };\n\n            var i;\n            for (i = 0; i &lt; files.length; i++) {\n                var f = files[i];\n                var p = path.join(dir, f);\n                fs.stat(p, each(f, p));\n            }\n        }\n    });\n}\n\nparse('.');\n\n// do some stuff here when async parse completely finished\n</code></pre>\n",
            "last_activity_date": 1418723786,
            "question_id": 5951350,
            "score": 23,
            "tags": [
                "javascript",
                "node.js",
                "asynchronous"
            ],
            "title": "Executing asynchronous calls in a synchronous manner"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Plain and simple, this is not supported in SlickGrid and likely will never be.  Sorry.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is possible but it's not trivial and you will likely take a performance penalty.  The way SlickGrid works, it needs to be able to answer the following two questions rapidly:</p>\n\n<ul>\n<li>For a given row X, what is the top offset for that row?</li>\n<li>For a given offset Y, what row is at that offset?</li>\n</ul>\n\n<p>When you use a static row height, answering these questions is trivial; however, with dynamic row height, you'll need to maintain a couple of extra data structures.</p>\n\n<p>Here's roughly what I changed in Slick.Grid.js</p>\n\n<ul>\n<li>Add a new array to track row sizes.  Initialize all rows to the default size</li>\n<li>Remove the css rules in createCssRules which set the cell height</li>\n<li>Add some code at the end of renderRows which checks the rendered height of each cell in the row and then sets the height of all cells to the maximum (and stores the height in the row size array).  You also need to adjust the top offset based on the sum of heights of rows above the current one.</li>\n<li>Add code to the end of render to resize the canvas to the sum of all row heights.</li>\n<li>Update getViewport to return the top and bottom rows based on the sums of row heights.</li>\n<li>There are a handful of other places where options.rowHeight is used.  You can ignore some of them but at the very least, anywhere the canvas is resized needs to be changed.</li>\n</ul>\n\n<p>To make this practical (performant), you'll also need a cache of row top offsets (a cache of sums of row size).  This will enable quick computation for the first question and will allow for binary search to answer the second.</p>\n\n<p>I hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I know this doesn't meet the heart of the question, but decided upon a simple solution for now that is minimal effort and meets my requirements at the moment. So, this is just in case others were looking for a simple solution as well.</p>\n\n<p>I started with an input box, where changing the value would resize the row. However, I've now settled on using a slider. As a matter of fact, since I have such little data in my grid (guaranteed to be small amounts of data, and very few rows), I dynamically resize the grid as the slider slides. Now, I know many will say this is a terrible idea because it can be horribly slow, but again, I'm using a very small amount of data.</p>\n\n<p>The key is that I recreate the grid again with the new rowHeight value set in the options.</p>\n\n<ol>\n<li>Include jQuery UI:</li>\n<li>Create elements for the slider and the value</li>\n<li>Be sure your grid is set up and initialized for when the page loads.</li>\n<li><p>Add the code to handle the slider and recreating the grid (alternatively, you could have move what I have in the \"slide\" function to the \"stop\" function if you don't want to redraw no every sliding tick):</p>\n\n<pre><code>$j( \"#resizeRowSlider\" ).slider({\n      range:\"min\"\n    , min: 50\n    , max: 200\n    , value: 50\n    , create: function( even, ui ) {\n        $j(\"rowResizeValue\").html( \"50\" );\n    }\n    , slide: function( event, ui ) {\n        $j( \"rowResizeValue\" ).html( ui.value );\n\n        options.rowHeight = ui.value;\n\n        // I do a manual resize; you could use autoHeight:true in grid options\n        resizeGrid();\n\n        grid = new Slick.Grid(\"#\" + gridElemId, json, columns , options);\n        grid.setSelectionModel(new Slick.RowSelectionModel() );\n\n        refreshGrid(); // Handle invalidate, resizeCanvas\n    }\n    , stop: function( event, ui ) {\n    }\n});\n</code></pre></li>\n</ol>\n\n<p>Also, I should note that this is not on a per row basis, but again, it fits my needs for now. It's not idea, but it works. Additionally, if you really need to render the grid the first time without any overflow, you can create a hidden div whenever you get the text in question and set add <code>display:table-cell</code>, then get the div height and set that value the grid options for rowHeight. Then, create (or recreate) the grid.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have implemented this in my project, with the help of @Stephen Robinson 's answer here.<br>\nIf anyone is interested they can check: <br> <a href=\"https://github.com/vihari/Seaview/blob/version3.0/SlickGrid-master/slick.grid.js\" rel=\"nofollow\">https://github.com/vihari/Seaview/blob/version3.0/SlickGrid-master/slick.grid.js</a>.<br>\nIt can be enabled with the file above if you set options.enableWrap to true.<br>\nThank you.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To Vihari Piratla's solution - I've downloaded Seaview, modified its /SlickGrid-master/examples/example1-simple.html to add the new option enableWrap - during my test the example1-simple.html continue to work as expected when enableWrap is set to false, but when its set to true the grid is drawn empty with no content.  I was wondering if there are special way use the enableWrap option?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is also the variable height implementation by JLynch7 on github:</p>\n\n<p><a href=\"https://github.com/JLynch7/SlickGrid/tree/variableRowHeight\" rel=\"nofollow\">https://github.com/JLynch7/SlickGrid/tree/variableRowHeight</a></p>\n\n<p>As far as I understand the height is set by user and not automatically computed based on content of the row's cells (I only looked at the example/example-variable-row-height-dataview.html)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've recently forked SlickGrid to add in a bunch of new features - including variable (and resizable) rows. You can try it here: <a href=\"https://github.com/globexdesigns/doby-grid\" rel=\"nofollow\">https://github.com/globexdesigns/doby-grid</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Define this variable outside....</p>\n\n<p>var tableHeight = 0;</p>\n\n<p>Before creating the slick grid, use below the lines:</p>\n\n<p>// 30 px for each line this will cover the header... You can adjust this value for your table.</p>\n\n<pre><code>tableHeight = dataTable.length * 30;    \n\nif(tableHeight &gt;  ($(window).height() - 400)){\n       $(\"#myGrid\").height($(window).height() - 400);\n}else{\n       $(\"#myGrid\").height(tableHeight);\n}\n</code></pre>\n\n<p>If user changes the screen when page is already generated, the below will resize the table based on screen and number of rows of data:</p>\n\n<pre><code>    $(window).resize(function() {\n\n    // For grid height\n    if(tableHeight &gt;  ($(window).height() - 400)){\n        $(\"#myGrid\").height($(window).height() - 400);\n    }else{\n        $(\"#myGrid\").height(tableHeight);\n    }\n\n    // For grid width\n    $(\"#myGrid\").width(\"100%\");\n\n    // Resize the grid dynamically. \n    gridName.resizeCanvas();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As a summary of the above options none of them are official, supported and production ready. Even the doby-grid option (more supported) is still listed as not production ready.</p>\n\n<p>Note, there are also differences between: </p>\n\n<ul>\n<li>Row height can be changed separately for each row.</li>\n<li>The text can wrap around to the next line.</li>\n<li>The row height can automatically adjust to fit the content.</li>\n</ul>\n\n<p>Surprisingly, with all of the SlickGrid variants above (and many other DataGrid libraries), you might get one or two of the above, but not all three. </p>\n\n<p>If you are not so concerned about official, supported and production ready, then this is my impressions from testing the 3 SlickGrid variants listed above:</p>\n\n<p><strong>Seaview</strong> </p>\n\n<ul>\n<li>Users report problems with only displaying white, not tested with editing cells (warning), pagination may not work (warning). </li>\n<li>My test of the demo found that it wrapped text and automatically varied the cell height ok, but has a bug that rows/borders are off by a few pixels. So may be usable, but not production ready. </li>\n<li>I tried downloading and using it. It has wrapping of text in cells - good.\nIts auto adjusting of cell height is very broken/incomplete, which makes wrapping of text practically useless (unless you fix row height - not great).\nI have partly fixed the auto adjusting of cell height, but quite a bit more work to be done. Not a simple task. Does not work out of the box. Definitely not production ready.</li>\n</ul>\n\n<p><strong>JLynch7</strong></p>\n\n<ul>\n<li>No demo to run without downloading.</li>\n<li>I tried downloading and using it. It is buggy (I had to fix it to get it working), adds variable row height, but does NOT seem to wrap the text and does NOT auto adjust the row height based on the text!. It is not actively maintained. And not very popular, so not very well supported.\nSeaview seems to be more advanced, even though its \"auto adjust the row height\" feature is broken.</li>\n</ul>\n\n<p><strong>doby-grid</strong></p>\n\n<ul>\n<li>Is in alpha - not production ready. Seems like a considerable fork - many changes.</li>\n<li>I tried it. Getting started is confusing, but got it working. Needs bowser and Require JS.</li>\n<li>options.resizableRows is half of what we want - you can manually change row heights dynamically. BUT there is not auto re-sizing of row heights to fit the content!!??!! </li>\n<li><a href=\"https://github.com/globexdesigns/doby-grid/issues/96\" rel=\"nofollow\">This issue</a> states that \"Adding a truly dynamic row height (which is affected by the row's content) will require us to disable a lot of the features.\".\nThey offer a couple of possible solutions, but one determined dev tried this and had a lot of trouble with it. He might have made it work, or he might have given up. I am not going to risk it.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As non of the forks of SlickGrid are really viable options in many regards, I thought it would be valuable to many readers of this post to discuss alternatives to SlickGrid. </p>\n\n<p>I consider 'viable alternatives' that fully support variable row height to be: each row can have a different row height that automatically adapts to fit the content, and lets the text wrap to the next line.</p>\n\n<p>I have looked into this quite extensively, and unfortunately I have not found viable alternatives that are related to SlickGrid. \nOf other alternatives, I have only found one that is free for commercial use - <a href=\"http://dojotoolkit.org/reference-guide/1.10/dojox/grid/DataGrid.html\" rel=\"nofollow\">dojox DataGrid</a>, however it is not clear how you could use custom editors with this (most commercial ones offer this).</p>\n\n<p>There are quite a few viable alternatives that require payment for commercial use: dhtmlxGrid, jQuery EasyUI DataGrid, jQWidgets, Wijmo Grid widget, JideTable, and Sencha ExtJS Grids. Of these, I would personally say the best is dhtmlxGrid <a href=\"http://dhtmlx.com/docs/products/dhtmlxGrid/\" rel=\"nofollow\">http://dhtmlx.com/docs/products/dhtmlxGrid/</a> - Free version is GPL, Pro version is $199.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I would like to provide variable row height depending upon the content size. is it possible in  Slickgrid? </p>\n\n<p>Can you point me towards any examples?</p>\n",
            "last_activity_date": 1417478217,
            "question_id": 2805094,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "datagrid",
                "slickgrid"
            ],
            "title": "Is variable rowheight a possibility in SlickGrid?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It would be much easier to test if you had a var with the ajax request promise object. In that case you could do:</p>\n\n<pre><code> it('should do an async thing', function() {     \n   var mutex = 1;\n   var promF = jasmine.createSpy('prF');\n\n   runs( function() {\n     var promise1 = $.ajax();\n     promise1.always(function(){\n       mutex--;\n     });\n     promise1.fail(function(){\n       promF();\n     });\n   });\n\n   waitsFor(function(){\n     return !mutex;\n   }, 'Fetch should end', 10000);\n\n   runs( function() {\n      expect(promF).toHaveBeenCalled();\n   });\n });\n</code></pre>\n\n<p>Below I post untested code that might suit you. I suppose that the ajax call is initialized from the .submit() class? Maybe  you should initialize the ajax request from a runs() block and not from beforeEach(), but you should try which one works.</p>\n\n<pre><code>describe('When Submit button handler fired and city is defined', function () {\n    var ajaxRequestSpy,\n        failSpy, successSpy, alwaysSpy,\n        mutex;\n    beforeEach(function () {\n        ajaxRequestSpy = spyOn(backendController, 'ajaxRequest').andCallThrough();\n        failSpy = spyOn(ajaxRequestSpy(), 'fail').andCallThrough()\n        successSpy = spyOn(ajaxRequestSpy(), 'success').andCallThrough();\n        mutex = 1; // num of expected ajax queries\n        alwaysSpy =  spyOn(ajaxRequestSpy(), 'always').andCallFake(function() {\n             mutex--;\n        });\n        this.view = new MyView({\n            el: $('&lt;div&gt;&lt;form&gt;' +\n                '&lt;input type=\"submit\" value=\"Submit\" /&gt;' +\n                '&lt;input type=\"text\" name=\"city\"&gt;' +\n                '&lt;/form&gt;&lt;/div&gt;')\n        });\n        this.view.$el.find('form').submit();\n    });\n    it('backendController.ajaxRequest should be called', function () {\n        runs( function() {\n            // maybe init ajax here ?   \n        });\n\n        waitsFor( function() {\n            return !mutex;\n        }, 'ajax request should happen', 5000);\n\n        runs( function() {\n            expect(ajaxRequestSpy).toHaveBeenCalled(); // true\n            expect(failSpy).toHaveBeenCalled(); // Error: Expected spy fail \n                                            // to have been called.\n        });\n\n    });\n});\n</code></pre>\n\n<p>But, I am not sure that the line</p>\n\n<pre><code>failSpy = spyOn(ajaxRequestSpy(), 'fail').andCallThrough();\n</code></pre>\n\n<p>does what you want. Is it possible to spy on another spy? And if yes why are you calling the spy ? Maybe you should try</p>\n\n<pre><code>failSpy = spyOn(ajaxRequestSpy, 'fail').andCallThrough();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>We actually ran into the same problem, trying to test Deferred objects that represent AJAXed template scripts for on-the-fly templating. Our testing solution involves using the <a href=\"https://github.com/pivotal/jasmine-ajax\">Jasmine-Ajax</a> library in conjunction with Jasmine itself.</p>\n\n<p>So probably it will be something like this:</p>\n\n<pre><code>describe('When Submit button handler fired', function () {\n  jasmine.Ajax.useMock();\n\n  describe('if the message is empty', function () {\n\n    beforeEach(function() {\n      spyOn(backendController, 'submitForm').andCallThrough();\n      // replace with wherever your callbacks are defined\n      spyOn(this, 'onSuccess');\n      spyOn(this, 'onFailure');\n      this.view.$el.find('#message').text('');\n      this.view.$el.find('form').submit();\n    });\n\n    it('backendController.submitForm and fail Deferred Object should be called', function () {\n      expect(backendController.submitForm).toHaveBeenCalledWith('');\n      mostRecentAjaxRequest().response({\n        status: 500, // or whatever response code you want\n        responseText: ''\n      });\n\n      expect( this.onSuccess ).not.toHaveBeenCalled();\n      expect( this.onFailure ).toHaveBeenCalled();\n    });\n});\n</code></pre>\n\n<p>Another thing, if you can, try to break up the functionality so you're not testing the entire DOM-to-response-callback path in one test. If you're granular enough, you can actually test asynchronous Deferred resolutions by using Deferred objects themselves inside your tests!</p>\n\n<p>The key is to actually use Deferred objects within your tests themselves, so that the scope of the <code>expect</code> call is still within your <code>it</code> function block.</p>\n\n<pre><code>describe('loadTemplate', function() {\n  it('passes back the response text', function() {\n    jasmine.Ajax.mock();\n    loadTemplate('template-request').done(function(response) {\n      expect(response).toBe('foobar');\n    });\n    mostRecentAjaxRequest().response({ status:200, responseText:'foobar' });\n  });\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>Here is how I managed to do it.</p>\n\n<p>Essentially, the $.ajax object returns a Deferred object, so you can spy on $.ajax and return a Deferred and then trigger it manually to run the .done() code in your JavaScript</p>\n\n<p>Code</p>\n\n<pre><code>Index.prototype.sendPositions = function() {\n  var me = this;\n  $.ajax({\n    ...\n  }).done(function(data, textStatus, jqXHR) {\n    me.reload();\n  }).fail(function(jqXHR, textStatus, errorThrown) {\n    console.log(errorThrown);\n  });\n};\n</code></pre>\n\n<p>Test</p>\n\n<pre><code>it(\"should reload the page after a successful ajax call\", function(){\n  var deferred = new jQuery.Deferred();\n  spyOn($, 'ajax').andReturn(deferred);\n  spyOn(indexPage, 'reload');\n  indexPage.sendPositions();\n  deferred.resolve('test');\n  expect(indexPage.reload).toHaveBeenCalled();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Here is the code about the javascript submit request (1).<br>\nHere is the test about mocking the ajax request by using jasmine (2).</p>\n\n<p>I would like to mock the server behaviour. Any ideas?<br>\nSee the comment in (1) and (2) for more details.    </p>\n\n<p>P.S.:<br>\nActually in both case the done and the fail Deferred Object of fakeFunction are called.</p>\n\n<hr>\n\n<p>(1)</p>\n\n<pre><code>submitForm: function () {\n     // the server execute fail only if message.val() is empty\n     // and I would like to mock this behaviour in (2)\n     backendController.submitForm(message.val()).done(this.onSuccess).fail(this.onError);\n},\n\nbackendController.submitForm = function (message) {\n    return $.ajax({\n        url: 'some url',\n        type: 'POST',\n        dataType: 'json',\n        data: {\n            message: message\n        }\n    }).done(function () {\n        //some code;\n    });\n};\n</code></pre>\n\n<hr>\n\n<p>(2)</p>\n\n<pre><code>describe('When Submit button handler fired', function () {\n    var submitFormSpy,\n        fakeFunction = function () {\n            this.done = function () {\n                return this;\n            };\n            this.fail = function () {\n                return this;\n            };\n            return this;\n        };\n\n    beforeEach(function () {\n        submitFormSpy = spyOn(backendController, 'submitForm').andCallFake(fakeFunction);\n    });\n\n    describe('if the message is empty', function () {\n        beforeEach(function () {\n            this.view.$el.find('#message').text('');\n            this.view.$el.find('form').submit();\n        });\n        it('backendController.submitForm and fail Deferred Object should be called', function () {\n            expect(submitFormSpy).toHaveBeenCalled();\n            // how should I test that fail Deferred Object is called?\n        });\n    });\n\n    describe('if the message is not empty', function () {\n        beforeEach(function () {\n            this.view.$el.find('#message').text('some text');\n            this.view.$el.find('form').submit();\n        });\n        it('backendController.submitForm should be called and the fail Deferred Object should be not called', function () {\n            expect(submitFormSpy).toHaveBeenCalled();\n            // how should I test that fail Deferred Object is not called?\n        });\n    });\n\n});\n</code></pre>\n",
            "last_activity_date": 1360731290,
            "question_id": 12080087,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "post",
                "jasmine"
            ],
            "title": "How to test the done and fail Deferred Object by using jasmine"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Not with object literals (<code>this</code> has the same value during constructing of the literal that it did before-hand).  But you can do</p>\n\n<pre><code>var carousel = new (function()\n{\n      this.$slider =  $('#carousel1 .slider');\n      this.panes = this.$slider.children().length;\n})();\n</code></pre>\n\n<p>This uses an object created from an anonymous function constructor.</p>\n\n<p>Note that <code>$slider</code> and <code>panes</code> are public, so can be accessed as <code>carousel.$slider</code>, etc.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Unfortunately, no. The <code>{}</code> syntax initiates creation of a new object, but until the object is created, it is not assigned to the <code>carousel</code> variable. Also, the <code>this</code> value can only change as a result of a function call. If your \"several more properties\" are all going to depend only on <code>slider</code>, then you could get around with something like this:</p>\n\n<pre><code>var slider = $('.slider');\nvar carousel = {\n  panes: slider.children.length(),\n  something: slider.something_else,\n  // ...\n};\ncarousel.slider = slider;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I recently tried to create an object like this:</p>\n\n<pre><code>var carousel = {\n      $slider: $('#carousel1 .slider'),\n      panes: carousel.$slider.children().length\n    };\n</code></pre>\n\n<p>My intentions were to improve jQuery's selector performance by caching the results of <code>$('#carousel1 .slider')</code> in an object property, and to keep the code concise and relatively DRY.</p>\n\n<p>However, this didn't work. When the code executed, it threw an exception when trying to parse the value of <code>panes</code>, complaining that <code>carousel</code> was undefined.</p>\n\n<p>This makes sense, since I'd assume that <code>carousel</code> isn't fully declared until the assignment statement has been fully executed. However, I'd like to avoid resorting to this:</p>\n\n<pre><code>var carousel = {};\ncarousel.$slider = $('#carousel1 .slider');\ncarousel.panes = carousel.$slider.children().length;\n</code></pre>\n\n<p>That's not too much worse, but the <code>carousel</code> object will have several more properties that rely on the values of other properties, so that could quickly become verbose.</p>\n\n<p>I tried using <code>this</code>, but to no avail. I may well not have been using it correctly, or that may not be a valid approach anyway.</p>\n\n<p>Is there a way for properties of an object to refer to other properties of the same object, while that object is still being declared?</p>\n\n<hr />\n\n<p>Based on Matthew Flaschen and casablanca's answers (thanks, guys!), I think these are the versions of my actual code that I'd end up with, based on each approach:</p>\n\n<pre><code>// Matthew Flaschen\n\nvar carousel = new (function() {\n  this.$carousel = $('.carousel');\n  this.$carousel_window = this.$carousel.find('.window');\n  this.$carousel_slider = this.$carousel.find('.slider');\n  this.$first_pane = this.$carousel.find('.slider').children(':first-child');\n  this.panes = this.$carousel_slider.children().length;\n  this.pane_gap = this.$first_pane.css('margin-right');\n})();\n</code></pre>\n\n<p>and</p>\n\n<pre><code>// casablanca\n\nvar $carousel = $('.carousel'),\n    $carousel_slider = $carousel.find('.slider'),\n    $first_pane: $carousel.find('.slider').children(':first-child');\n\nvar properties = {\n  $carousel_window: $carousel.find('.window'),\n  panes: $carousel_slider.children().length,\n  pane_gap: $first_pane.css('margin-right')\n};\n\nproperties.$carousel = $carousel;\nproperties.$carousel_slider = $carousel_slider;\nproperties.$first_pane = $first_pane;\n</code></pre>\n\n<p>Assuming those are both correct (I haven't tested them), it's kind of a tough call. I think I slightly prefer Matthew Flaschen's approach, since the code is contained to a structure that more closely resembles an object declaration. There's also ultimately only one variable created. However, there's a lot of <code>this</code> in there, which seems repetitive - although that may be just the price to pay.</p>\n",
            "last_activity_date": 1423768752,
            "question_id": 3173610,
            "score": 22,
            "tags": [
                "javascript",
                "object",
                "properties",
                "declaration",
                "variable-assignment"
            ],
            "title": "Can a JavaScript object property refer to another property of the same object?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You could use this...</p>\n\n<pre><code>if ([\"something\", \"nothing\", \"anything\", \"everything\"].indexOf(a) &gt; -1) {\n   alert('Who cares?');\n}\n</code></pre>\n\n<p>You also tagged it jQuery, so if you need to support older browsers without <code>Array.prototype.indexOf()</code>, you could use <a href=\"http://api.jquery.com/jQuery.inArray/\"><code>$.inArray()</code></a>.</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>You can put the options in array and use jQuery <a href=\"http://api.jquery.com/jQuery.inArray/\" rel=\"nofollow\"><code>$.inArray()</code></a> or javascrpt <a href=\"http://www.w3schools.com/jsref/jsref_indexof_array.asp\" rel=\"nofollow\"><code>indexOf()</code></a> to search array</p>\n\n<p><strong>Pure javascript</strong> \u00a0</p>\n\n<p><strong><a href=\"http://jsfiddle.net/rajaadil/hn8XF/3/\" rel=\"nofollow\">Live Demo</a></strong></p>\n\n<pre><code>var a = 'anything';\narr = ['something', 'nothing', 'anything', 'everything'];\nif(arr.indexOf(a) != -1)\n    alert(\"condition met\");    \nelse\n    alert(\"condition not met\");    \n</code></pre>\n\n<p><strong>With jQuery</strong></p>\n\n<p><strong><a href=\"http://jsfiddle.net/rajaadil/n5n9P/1/\" rel=\"nofollow\">Live Demo</a></strong></p>\n\n<pre><code>var a = 'jesus';\narr = ['something', 'nothing', 'anything', 'everything'];\n\nif($.inArray(a, arr) != -1) // With jQuery\n    alert(\"condition met\");    \nelse\n    alert(\"condition not met\");    \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Try this:    </p>\n\n<p>If you want to check the words other than <strong>Jesus</strong>,\ntry following,</p>\n\n<pre><code>if(a != \"jesus\"){\n   alert('Who cares?');\n}\n</code></pre>\n\n<p>if you want to check particular words,\ntry following,</p>\n\n<pre><code>var check_arrays = ['something','nothing', 'anything', 'everything'];\nif(checkThis(a)){\n   alert('Who cares?');\n}\n\nfunction checkThis(a)\n{\n   for(i=0;i&lt;check_arrays.length;i++)\n   {\n      if(check_arrays[i] == a)\n      return true;\n   }\n   return false;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>May be using switch instead of if:</p>\n\n<pre><code>var a = 'jesus';\nswitch (a){\n    case 'something':\n    case 'nothing' :\n    case 'anything':\n    case 'everything':\n   alert('Who cares?');\n   break;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I think there is no easy method to do this. But you can write a function <code>in_array</code> and you can use it anywhere you need</p>\n\n<pre><code>Array.prototype.in_array = function(p_val) {\n    for(var i = 0, l = this.length; i &lt; l; i++) {\n        if(this[i] == p_val) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar v_array = [ 'something','nothing', 'anything', 'everything'];\n\nvar a = \"jesus\";\n\nif(v_array.in_array(a)){\n    alert('Who cares?');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>With a regex:</p>\n\n<pre><code>if (/^(something|nothing|anything|everything)$/.exec('jesus')) alert('Who cares?');\u200b\n</code></pre>\n\n<p>Or the opposite:</p>\n\n<pre><code>/^(something|nothing|anything|everything)$/.exec('jesus')||alert('Who cares?');\u200b\n</code></pre>\n\n<p>[Update] Even shorter ;-)</p>\n\n<pre><code>if (/^(some|no|any|every)thing$/.exec('jesus')) alert('Who cares?');\u200b\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Using an object literal:</p>\n\n<pre><code>var all={something:1,nothing:1,anything:1,everything:1};\nif (all.hasOwnProperty('jesus')) alert('Who cares?');\u200b\n</code></pre>\n\n<p>I'd say this is the most concise cross-browser expression for general use (well, as long as the objective is to compare strings). It is also very flexible as you can easily add or remove properties:</p>\n\n<pre><code>all.mything=1;\ndelete all.nothing;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Consider the following:</p>\n\n<pre><code>var a = 'jesus';\n\nif(a == 'something' || a == 'nothing' || a=='anything' || a=='everything'){\n   alert('Who cares?');\n}\n</code></pre>\n\n<p>Is there a way to make this shorter?</p>\n\n<p>Is there anything in Javascript like <code>if (a=='bbb'||'ccc')</code>?</p>\n\n<p>In addition, can jQuery help here?</p>\n",
            "last_activity_date": 1359023651,
            "question_id": 13737091,
            "score": 21,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Concise way to compare against multiple values"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>[What you have is just an object, not a \"json-object\". <a href=\"http://json.org\">JSON</a> is a textual notation. What you've quoted is JavaScript code using an <a href=\"http://es5.github.com/#x11.1.4\">array initializer</a> and an <a href=\"http://es5.github.com/#x11.1.5\">object initializer</a> (aka, \"object literal syntax\").]</p>\n\n<p>If you can rely on having ECMAScript5 features available, you can use the <a href=\"http://es5.github.com/#x15.2.3.14\"><code>Object.keys</code></a> function to get an array of the keys (property names) in an object. Note that older browsers won't have it. If not, this is one of the ones you can supply yourself:</p>\n\n<pre><code>if (typeof Object.keys !== \"function\") {\n    (function() {\n        Object.keys = Object_keys;\n        function Object_keys(obj) {\n            var keys = [], name;\n            for (name in obj) {\n                if (obj.hasOwnProperty(name)) {\n                    keys.push(name);\n                }\n            }\n            return keys;\n        }\n    })();\n}\n</code></pre>\n\n<p>That uses a <a href=\"http://es5.github.com/#x12.6.4\"><code>for..in</code> loop</a> (<a href=\"http://blog.niftysnippets.org/2010/11/myths-and-realities-of-forin.html\">more info here</a>) to loop through all of the property names the object has, and uses <a href=\"http://es5.github.com/#x15.2.4.5\"><code>Object.prototype.hasOwnProperty</code></a> to check that the property is owned directly by the object rather than being inherited.</p>\n\n<p>(I could have done it without the self-executing function, but I prefer my functions to <a href=\"http://blog.niftysnippets.org/2010/03/anonymouses-anonymous.html\">have names</a>, and to be compatible with IE you <a href=\"http://blog.niftysnippets.org/2010/09/double-take.html\">can't use named function expressions</a> [well, not without great care]. So the self-executing function is there to avoid having the function declaration create a global symbol.)</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<pre><code>var jsonData = [{\"person\":\"me\",\"age\":\"30\"},{\"person\":\"you\",\"age\":\"25\"}];\n\nfor(i in jsonData){\n\n    var key = i;\n    var val = jsonData[i];\n    for(j in val){\n\n        var sub_key = j;\n        var sub_val = val.j;\n        console.log(sub_key);\n\n    }\n\n}\n</code></pre>\n\n<p><strong>EDIT</strong></p>\n\n<pre><code>var jsonObj = {\"person\":\"me\",\"age\":\"30\"};\nObject.keys(jsonObj);  // returns [\"person\", \"age\"]\n</code></pre>\n\n<p><code>Object</code> has a <code>prototype</code> <code>keys</code>, returns an <code>Array</code> of keys in an <code>Object</code></p>\n\n<p>Chrome, FF &amp; Safari supports <code>Object.keys</code></p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>Working code here <a href=\"http://jsfiddle.net/gbsandeep/2TmaG/\">http://jsfiddle.net/gbsandeep/2TmaG/</a></p>\n\n<pre><code>var jsonData = [{person:\"me\", age :\"30\"},{person:\"you\",age:\"25\"}];\n\nfor(var obj in jsonData){\n    if(jsonData.hasOwnProperty(obj)){\n    for(var prop in jsonData[obj]){\n        if(jsonData[obj].hasOwnProperty(prop)){\n     alert(prop + ':' + jsonData[obj][prop]);\n        }\n    }\n}\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have a json-object in JavaScript and I want to get the used keys in it. My JavaScript-Code looks like this:</p>\n\n<pre><code>var jsonData = [{\"person\":\"me\",\"age\":\"30\"},{\"person\":\"you\",\"age\":\"25\"}];\n</code></pre>\n\n<p>And I want a loop that alerts me 'person' and 'age', which are the keys of the first object in the json-Array.</p>\n",
            "last_activity_date": 1361171300,
            "question_id": 8430336,
            "score": 20,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "get keys of json-object in JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>From an answer by <a href=\"http://support.mozilla.com/en-US/questions/818987#answer-180011\">mbrubeck</a> at support.mozilla.com:</p>\n\n<blockquote>\n  <p>By default in Firefox 4, a site can use up to 50MB of IndexedDB storage. If it tries to use more than 50MB, Firefox will ask the user for permission: <a href=\"http://mxr.mozilla.org/mozilla-central/source/modules/libpref/src/init/all.js#101\">http://mxr.mozilla.org/mozilla-central/source/modules/libpref/src/init/all.js#101</a></p>\n  \n  <p>In Firefox for mobile devices (Google Android and Nokia Maemo), Firefox will ask for permission if a site tries to use more than 5MB: <a href=\"http://mxr.mozilla.org/mozilla-central/source/mobile/app/mobile.js#571\">http://mxr.mozilla.org/mozilla-central/source/mobile/app/mobile.js#571</a> </p>\n  \n  <p>[...]</p>\n  \n  <p>If the user grants permission for a site to exceed the 50 MB IndexedDB quota, then as far as I know Firefox does not impose any more limits. The only limits on the size of the IndexedDB database will be the user's disk space and operating system.</p>\n  \n  <p>The localStorage quota is 5000KB, and there is no way for a web site to ask the browser for permission to store more than that amount in localStorage. </p>\n</blockquote>\n\n<p>I don't think there's a specific limit for a size of a single item, only a global limit, but you'd need to test that.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Adding to Nickolay answers, Here is the description of Chrome and IE :</p>\n\n<ul>\n<li><p><strong>Chrome(Desktop)</strong> : By default, For Web-apps chrome doesn't prompt the user while storing data using indexedDB API. It uses the concept of shared pool, here is the complete description - <a href=\"https://developers.google.com/chrome/whitepapers/storage#types\">Chrome HTML5 Offline Storage</a></p></li>\n<li><p><strong>Chrome for Android</strong> : Couldn't find any official link for stating quota. But from my experience, i have saved 300 MB of data without any prompts. Most probably same behavior as Desktop Chrome.</p></li>\n<li><strong>Internet Explorer 10</strong> : By default , user is prompted for storage at 10 MB. 250 MB per domain is the hard limit by default, however user can configure their own limits till 1 GB.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I'm working on a simple web utility that makes use of IndexedDB (similar to a key-value DB) feature of HTML5.</p>\n\n<p>I was looking for but I was unable to know: what is the maximum size I can store in an item?</p>\n",
            "last_activity_date": 1412529867,
            "question_id": 5692820,
            "score": 20,
            "tags": [
                "javascript",
                "html5",
                "indexeddb"
            ],
            "title": "Maximum item size in IndexedDB"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You could use the <a href=\"http://jquery.com\">jQuery</a> library to select your head element and append HTML to it, in a manner like:</p>\n\n<pre><code>$('head').append('&lt;link rel=\"stylesheet\" href=\"style2.css\" type=\"text/css\" /&gt;');\n</code></pre>\n\n<p>You can find a complete tutorial for this problem <a href=\"http://www.rickardnilsson.net/post/2008/08/02/Applying-stylesheets-dynamically-with-jQuery.aspx\">here</a></p>\n\n<p>Using jQuery is very easy and I suggest using it, in the case you're not already are.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>If you don't want to rely on a javascript library, you can use <code>document.write()</code> to spit out the required css, wrapped in <code>style</code> tags, straight into the document <code>head</code>:</p>\n\n<pre><code>&lt;head&gt;\n  &lt;script type=\"text/javascript\"&gt;\n    document.write(\"&lt;style&gt;body { background-color:#000 }&lt;/style&gt;\");\n  &lt;/script&gt;\n  # other stuff..\n&lt;/head&gt;\n</code></pre>\n\n<p>This way you avoid firing an extra HTTP request.</p>\n\n<p>There are other solutions that have been suggested / added / removed, but I don't see any point in overcomplicating something that already works fine cross-browser. Good luck!</p>\n\n<p><a href=\"http://jsbin.com/oqede3/edit\">http://jsbin.com/oqede3/edit</a></p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Here's a function that will dynamically create a CSS rule in all major browsers.  <code>createCssRule</code> takes a selector (e.g. \"p.purpleText\"), a rule (e.g. \"color: purple;\") and optionally a <code>Document</code> (the current document is used by default):</p>\n\n<pre><code>var addRule;\n\nif (typeof document.styleSheets != \"undefined\" &amp;&amp; document.styleSheets) {\n    addRule = function(selector, rule) {\n        var styleSheets = document.styleSheets, styleSheet;\n        if (styleSheets &amp;&amp; styleSheets.length) {\n            styleSheet = styleSheets[styleSheets.length - 1];\n            if (styleSheet.addRule) {\n                styleSheet.addRule(selector, rule)\n            } else if (typeof styleSheet.cssText == \"string\") {\n                styleSheet.cssText = selector + \" {\" + rule + \"}\";\n            } else if (styleSheet.insertRule &amp;&amp; styleSheet.cssRules) {\n                styleSheet.insertRule(selector + \" {\" + rule + \"}\", styleSheet.cssRules.length);\n            }\n        }\n    }\n} else {\n    addRule = function(selector, rule, el, doc) {\n        el.appendChild(doc.createTextNode(selector + \" {\" + rule + \"}\"));\n    };\n}\n\nfunction createCssRule(selector, rule, doc) {\n    doc = doc || document;\n    var head = doc.getElementsByTagName(\"head\")[0];\n    if (head &amp;&amp; addRule) {\n        var styleEl = doc.createElement(\"style\");\n        styleEl.type = \"text/css\";\n        styleEl.media = \"screen\";\n        head.appendChild(styleEl);\n        addRule(selector, rule, styleEl, doc);\n        styleEl = null;\n    }\n};\n\ncreateCssRule(\"body\", \"background-color: purple;\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>A simple non-jQuery solution, albeit with a bit of a hack for IE:</p>\n\n<pre><code>var css = \".lightbox { width: 400px; height: 400px; border: 1px solid #333}\";\n\nvar htmlDiv = document.createElement('div');\nhtmlDiv.innerHTML = '&lt;p&gt;foo&lt;/p&gt;&lt;style&gt;' + css + '&lt;/style&gt;';\ndocument.getElementsByTagName('head')[0].appendChild(htmlDiv.childNodes[1]);\n</code></pre>\n\n<p>It seems IE does not allow setting <code>innerText</code>, <code>innerHTML</code> or using <code>appendChild</code> on <code>style</code> elements. Here is a <a href=\"http://www.quirksmode.org/bugreports/archives/2006/01/IE_wont_allow_documentcreateElementstyle.html\">bug report</a> which demonstrates this, although I think it identifies the problem incorrectly. The workaround above is from the comments on the bug report and has been tested in IE6 and IE9.</p>\n\n<p>Whether you use this, document.write or a more complex solution will really depend on your situation.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>Is there a way to add css from a string in the javascript file to the head of a document with javascript?</p>\n\n<p>Let's say we have a webpage, which has a lightbox script, this script requires a css file to function. </p>\n\n<p>Now adding this css file with <code>&lt;link&gt;</code> will make the css file download even for people that don't have js enabled. </p>\n\n<p>I know that I can dynamically load the css file with the script, but that also means that there will be 2 http requests, and in cases where there is little to no css in the file I find this inefficient. </p>\n\n<p>So I thought to myself, what if you could put the css that you have in the css file, into the script, have the script parse the css and add it into the head, or even better just have the script add the css directly into the <code>&lt;head&gt;</code> of the document. </p>\n\n<p>But I have found nothing online that suggests that this is possible, so is it possible to add css to the head with js?</p>\n\n<p><strong>edit:</strong></p>\n\n<p>I edited roryf's answer to work cross browser (except IE5)</p>\n\n<p>Javascript:</p>\n\n<pre><code> function addcss(css){\n    var head = document.getElementsByTagName('head')[0];\n    var s = document.createElement('style');\n    s.setAttribute('type', 'text/css');\n    if (s.styleSheet) {   // IE\n        s.styleSheet.cssText = css;\n    } else {                // the world\n        s.appendChild(document.createTextNode(css));\n    }\n    head.appendChild(s);\n }\n</code></pre>\n",
            "last_activity_date": 1421422135,
            "question_id": 3922139,
            "score": 20,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "Add CSS to &lt;head&gt; with JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There isn't any <code>onhighlightext</code> or anything like that, but a solution would be to bind <code>onmouseup</code> to check if any text is selected if this isn't in a <code>input</code>/<code>textarea</code>. </p>\n\n<h2>Edit</h2>\n\n<p>Here's an implementation example for you. I only tested this in Chrome/Firefox/IE7. This works in inputs as well.</p>\n\n<p><a href=\"http://jsfiddle.net/qY7gE/\" rel=\"nofollow\">http://jsfiddle.net/qY7gE/</a></p>\n\n<p>Code from <a href=\"http://jsfiddle.net/qY7gE/\" rel=\"nofollow\">JSFiddle</a>:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var t = '';\r\nfunction gText(e) {\r\n    t = (document.all) ? document.selection.createRange().text : document.getSelection();\r\n\r\n    document.getElementById('input').value = t;\r\n}\r\n\r\ndocument.onmouseup = gText;\r\nif (!document.all) document.captureEvents(Event.MOUSEUP);</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;input type='text' id='input' /&gt;\r\nIn software, a stack overflow occurs when too much memory is used on the call stack. The call stack contains a limited amount of memory, often determined at the start of the program. The size of the call stack depends on many factors, including the programming language, machine architecture, multi-threading, and amount of available memory. When too much memory is used on the call stack the stack is said to overflow, typically resulting in a program crash.[1] This class of software bug is usually caused by one of two types of programming errors.[2]</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>The solution using the mouseup trick is not the proper solution. That is a hacky way and not perfect. Less efficient too as you are now catching mouseups for so much crap.</p>\n\n<p>The real way to do it in Firefox addon is to use <code>addSelectionListener</code> see this topic: <a href=\"http://stackoverflow.com/questions/22216324/observe-for-highlight\">Observe for highlight?</a></p>\n\n<p>Now even if user uses keyboard to make selections it is caught.</p>\n\n<p>Credit to Neil for tipping me off on where to find it on MXR</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A bit late to the party but for future reference... </p>\n\n<p>Take a look at the <code>select</code> DOM event on <a href=\"https://developer.mozilla.org/en-US/docs/Web/Events/select\" rel=\"nofollow\">MDN</a>. </p>\n\n<p>It fires once the mouse or key is released (at least in Chrome 40).</p>\n\n<p><code>document.addEventListener('select', callback);</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm curious if anyone knows how I would trigger a function to run if/once the user finishes selecting text on the web page? I would like the user to be able to select text, and after a short delay(or immediately, at this point it doesn't matter much) an overlay button appears near the text that the user can then click and I go back and run more of my code that is based on the selection. This is for a Firefox extension.</p>\n\n<p>A similar example that I can think of would be like in IE where you can select text and then it brings up the \"web accelerators\". I'm 99% sure I know how I would actually overlay the button, and get the position of the selected text, but I have no idea how to check to see if there is anything selected, without doing some sort of infinite loop, which just seems like a terrible idea.</p>\n\n<p>Thanks in advance!</p>\n\n<p>EDIT:</p>\n\n<pre><code>//In my overlay.js with the rest of my sidebar code\nisTextSelected: function () {   \n        var myText = cqsearch.getSelectedText();\n        var sidebar = document.getElementById(\"sidebar\");\n        var sidebarDoc = sidebar.contentDocument || document;\n\n        var curHighlightedDiv = sidebarDoc.getElementById(\"testDiv\");\n        curHighlightedDiv.innerHTML = \"Current text selection:\" + myText;\n    }\n};\n\n//In my on firefox load function I added this\ndocument.onmouseup = cqsearch.isTextSelected;\n</code></pre>\n\n<p>So this is what I have come up with using Robert's suggestion, and it took me some time getting everything in the right spot, but it works great! Now on to position my button. Thanks a ton!</p>\n",
            "last_activity_date": 1423562762,
            "question_id": 3731328,
            "score": 20,
            "tags": [
                "javascript",
                "javascript-events",
                "firefox-addon"
            ],
            "title": "On Text Highlight Event?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>If I am understanding the question correctly, assuming <code>functionName()</code> is defined within the parent of iframe, you can do this within your iframe:</p>\n\n<pre><code>window.parent.functionName();\n</code></pre>\n\n<p>This will only work though, if both parent and iframe are on the same domain: <a href=\"http://softwareas.com/cross-domain-communication-with-iframes\">http://softwareas.com/cross-domain-communication-with-iframes</a></p>\n",
                    "is_accepted": true,
                    "score": 37
                }
            ],
            "body": "<p>Is it possible for me to setup an iframe so it calls a javascript function available in the <code>window.parent.document</code> scope?</p>\n",
            "last_activity_date": 1301425170,
            "question_id": 5477324,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "iframe"
            ],
            "title": "iframe calling parent javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Use the pause, step over, step into, step out buttons at the right end of the inspector, below the search field and above the watch/call stack section.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I recommend you to debug with FireBug. It is the absolutely best tool for it.</p>\n\n<p>I have Chrome version 4.0.221.6, and there i got a button list where i can step in / step through:\n<img src=\"http://img128.imageshack.us/img128/6620/75321408.jpg\" alt=\"alt text\"></p>\n\n<p>so maybe you need to update your Chrome version?</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>I'm on Chrome 3.0.195.27, and I'm able to use the following keys:</p>\n\n<ul>\n<li><p><kbd>F8</kbd> -> Run</p></li>\n<li><p><kbd>F10</kbd> -> Step over</p></li>\n<li><p><kbd>F11</kbd> -> Step into </p></li>\n</ul>\n\n<p>Make sure you have focus on the JavaScript console.</p>\n",
                    "is_accepted": false,
                    "score": 45
                }
            ],
            "body": "<p>I am really getting frustrated with Google Chrome... I have version 3.0.195.27 and want to debug some JavaScript that is working in IE, FF but not in Chrome.</p>\n\n<p>When I open the debugger and mark breakpoints (the blue arrow thingy) and execute the JavaScript it hits the breakpoint and <strong>then I do not know how to step through code</strong>....I tried all function keys .....F5 causes the whole window to refresh....</p>\n\n<p>Typing next in console window does nothing.....</p>\n\n<p>Plus the debugger is very slow to further add salt to the wounds...</p>\n",
            "last_activity_date": 1385490163,
            "question_id": 1576467,
            "score": 19,
            "tags": [
                "javascript",
                "debugging",
                "google-chrome"
            ],
            "title": "How to step through code in Google chrome javascript debugger"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I guess you can't do it directly with 'filter'. \nLooking at the code in angular.js, these are the first lines of the filter function:</p>\n\n<pre><code>function filterFilter() {\n  return function(array, expression) {\n    if (!(array instanceof Array)) return array;\n</code></pre>\n\n<p>So if it receives something different from an array, it does nothing.</p>\n\n<p>Here is one way to do it, not sure if I would recommend it, but it's is an idea:</p>\n\n<p>In the controller, just convert to an array before passing it to the filter:</p>\n\n<pre><code>$scope.filteredFriends = function() {\n    var array = [];\n    for(key in $scope.friends) {\n        array.push($scope.friends[key]);\n    }\n    return $filter('filter')(array, $scope.query);\n}\n</code></pre>\n\n<p>And the ng-repeat:</p>\n\n<pre><code>&lt;li ng-repeat=\"friend in filteredFriends()\"&gt;\n</code></pre>\n\n<p>Example: <a href=\"http://jsbin.com/acagag/2/edit\">http://jsbin.com/acagag/2/edit</a></p>\n\n<p>Maybe a better solution is to write a custom filter.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I would change my data structure to an array. Anyway, here's another implementation to filter your friends object.</p>\n\n<pre><code>angular.module('filters',['utils'])\n  .filter('friendFilter', function(utils){\n\n    return function(input, query){\n      if(!query) return input;\n      var result = [];\n\n      angular.forEach(input, function(friend){\n        if(utils.compareStr(friend.name, query) ||\n           utils.compareStr(friend.phone, query))\n          result.push(friend);          \n      });\n      return result;\n    };\n  });\n</code></pre>\n\n<p>This iterates over the object only once, compares by <code>name</code> and <code>phone</code> and can be called like this.</p>\n\n<pre><code>&lt;li ng-repeat=\"friend in friends | friendFilter:query\"&gt;\n</code></pre>\n\n<p>I defined the <code>compareStr</code> in another module, but you don't really need to do it.</p>\n\n<pre><code>angular.module('utils', [])\n  .factory('utils', function(){\n    return{\n      compareStr: function(stra, strb){\n        stra = (\"\" + stra).toLowerCase();\n        strb = (\"\" + strb).toLowerCase();\n        return stra.indexOf(strb) !== -1;\n      }\n    };\n  });\n</code></pre>\n\n<p>Don't forget to inject the <code>filters</code> module into your app</p>\n\n<pre><code>angular.module('app',['filters'])\n</code></pre>\n\n<p>Here's the full example: <a href=\"http://jsbin.com/acagag/5/edit\">http://jsbin.com/acagag/5/edit</a></p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>I made an example on how to not change your object to an Array. I think this answers the question more correct.</p>\n\n<p>I had the same problem that i could not search in a Object.</p>\n\n<p><a href=\"http://jsbin.com/acagag/223/edit\" rel=\"nofollow\">http://jsbin.com/acagag/223/edit</a></p>\n\n<pre><code>angular.module('filters',['utils'])\n  .filter('friendFilter', function(utils){\n\n    return function(input, query){\n      if(!query) return input;\n      var result = {};\n\n      angular.forEach(input, function(friendData, friend){\n        if(utils.compareStr(friend, query) ||\n           utils.compareStr(friendData.phone, query))\n          result[friend] = friendData;          \n      });\n      return result;\n    };\n  });\n</code></pre>\n\n<p>So just instead of returning a array you return a object.</p>\n\n<p>Hope this helps someone!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Rather than using a filter you can also simply : </p>\n\n<pre><code>$http.get('api/users').success(function(data){\n    angular.forEach(data, function(value, key){\n        users.push(value);\n    });\n    $scope.users = users;\n});\n</code></pre>\n\n<p>And in the template</p>\n\n<pre><code>&lt;input type=\"text\" ng-model=\"query\" placeholder=\"Search user\"/&gt;\n\n&lt;li ng-repeat=\"user in users | filter:query\"&gt;\n    {{ user.name }}\n&lt;/li&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had the same problem, and succeeded by creating my own filter that accepts a map, while still using the built-in filter for doing the actual matching.  </p>\n\n<p>My custom filter traverses the map, and for each element calls the built-in filter, but given that that filter only accepts an array, I wrap each element in an array of length 1 (the [data] below).  So the match succeeds if the output-array's length is still 1.</p>\n\n<pre><code>.filter('mapFilter', function($filter) {\n  var filter = $filter('filter');\n\n  return function(map, expression, comparator) {\n    if (! expression) return map;\n\n    var result = {};\n    angular.forEach(map, function(data, index) {\n      if (filter([data], expression, comparator).length)\n        result[index] = data;          \n    });\n\n    return result;\n  }\n})\n</code></pre>\n\n<p>This setup loses efficiency of course because the built-in filter is required to determine what it needs to do for each element in the map, instead of only once if you give it an array with all elements, but in my case, with a map of 500 elements the filtering is still instanteanous.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Not an optimal solution but if you want something quick and dirty :</p>\n\n<pre><code>&lt;li ng-repeat=\"(id, friend) in friends | filter:query\" ng-hide=\"id !== query.id\"&gt;\n  &lt;span&gt;{{friend.name}} @ {{friend.phone}}&lt;/span&gt;\n&lt;/li&gt;\n</code></pre>\n\n<p>Or <code>ng-if</code> instead of <code>ng-hide</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Given a controller with a $scope property that is an object with other properties rather than an array like below, how should I filter the <code>ng-repeat</code> set? </p>\n\n<p>Here is a JSFiddle: <a href=\"http://jsfiddle.net/ZfGx4/110/\">http://jsfiddle.net/ZfGx4/110/</a></p>\n\n<p>Controller:</p>\n\n<pre><code>function HelloCntl($scope, $filter) {\n    $scope.friends = {\n        john: {\n            name: 'John',\n            phone: '555-1276'\n        },\n        mary: {\n            name: 'Mary',\n            phone: '800-BIG-MARY'\n        },\n        mike: {\n            name: 'Mike',\n            phone: '555-4321'\n        },\n        adam: {\n            name: 'Adam',\n            phone: '555-5678'\n        },\n        julie: {\n            name: 'Julie',\n            phone: '555-8765'\n        }\n    };\n}\u200b\n</code></pre>\n\n<p>Template:</p>\n\n<pre><code>&lt;div ng:app&gt;\n &lt;div ng-controller=\"HelloCntl\"&gt;\n  &lt;input placeholder=\"Type to filter\" ng-model=\"query\"&gt;     \n  &lt;ul&gt;\n   &lt;li ng-repeat=\"(id, friend) in friends | filter:query\"&gt;\n    &lt;span&gt;{{friend.name}} @ {{friend.phone}}&lt;/span&gt;\n   &lt;/li&gt;\n  &lt;/ul&gt;\n &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1424640392,
            "question_id": 13887504,
            "score": 18,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Filtering on object map rather than array in AngularJS"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>If <code>console</code> <em>itself</em> doesn't exist at all, it throws an error because you're accessing an undefined variable. Just like <code>if(abc) {}</code> throws an error.</p>\n\n<p>Since <code>console</code> resides in <code>window</code>, and <code>window</code> <em>does</em> always exist, this should work:</p>\n\n<pre><code>if(window.console) ...\n</code></pre>\n\n<p>Basically, accessing an <em>property</em> that doesn't exist is free and doesn't throw an error (it just evaluates to <code>undefined</code>, failing the <code>if</code> condition). However, it is illegal to access an undeclared <em>variable</em>.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>How about this? Haven't tried it though</p>\n\n<pre><code>if (typeof console == \"undefined\" || typeof console.log == \"undefined\") var console = { log: function() {} };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>in internet explorer the console object is not actually defined unless your developer tools are open at the time the window loads.</p>\n\n<p>to fix your problem, wrap all your console prints in an if statement:</p>\n\n<pre><code>if (typeof window.console !== 'undefined') {\n    ...\n}\n</code></pre>\n\n<p>you also need to refresh each page after you open the developer tools in order to see the console prints. &lt;3 IE</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This is a funny thing about undeclared variables. The JS engine tries to resolve the variable to a property of <code>window</code>. So usually, <code>foo == window.foo</code>.</p>\n\n<p>But, if that property does not exist, it throws an error.</p>\n\n<pre><code>alert(foo); // Syntax error: foo is not defined\n</code></pre>\n\n<p>(Should be \"foo is not <em>declared</em>\" imho, but whatever.) That error does not occur when you <em>explicitly</em> reference the window's property:</p>\n\n<pre><code>alert(window.foo); // undefined\n</code></pre>\n\n<p>...or declare that variable:</p>\n\n<pre><code>var foo;\nalert(foo); // undefined\n</code></pre>\n\n<p>...or use it for initialization:</p>\n\n<pre><code>foo = 1; // window.foo = 1\n</code></pre>\n\n<p>The strange thing is that the <code>typeof</code> operator also prevents this error:</p>\n\n<pre><code>alert(typeof foo); // \"undefined\"\n</code></pre>\n\n<p>So, to sum things up: You cannot use undeclared variables in expressions unless there's a property of <code>window</code> with the same name, or you use it as an operand of <code>typeof</code>. In your example, <code>window.console</code> does not exist, and there's no var declaration. That's why you get an error.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Other answers gave you the root cause.\nHowever, there's a better solution than using <code>if</code> before any call to <code>console.*</code></p>\n\n<p>Add this (once) before including any of your scripts that use console:</p>\n\n<pre><code>//Ensures there will be no 'console is undefined' errors\nwindow.console = window.console || (function(){\n    var c = {}; c.log = c.warn = c.debug = c.info = c.error = c.time = c.dir = c.profile = c.clear = c.exception = c.trace = c.assert = function(s){};\n    return c;\n})();\n</code></pre>\n\n<p>This will create a 'pseudo' console only if it doesn't exist, so that 'console is undefined' errors will go away and you won't have to ask if console exists everytime.\nWith this, you just call <code>console.log</code> or any console method anywhere, without problems.</p>\n\n<p>Hope this helps.\nCheers</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>You can use the below to give an extra degree of insurance that you've got all bases covered.  Using <code>typeof</code> first will avoid any <code>undefined</code> errors.  Using <code>===</code> will also ensure that the name of the type is actually the string \"undefined\".  Finally, you'll want to add a parameter to the function signature (I chose <code>logMsg</code> arbitrarily) to ensure consistency, since you do pass whatever you want printed to the console to the log function.  This also keep you intellisense accurate and avoids any warnings/errors in your JS aware IDE.</p>\n\n<pre><code>if(!window.console || typeof console === \"undefined\") {\n  var console = { log: function (logMsg) { } };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Inspired by <a href=\"http://stackoverflow.com/users/722331/edgar-villegas-alvarado\">@Edgar Villegas Alvarado</a> <a href=\"http://stackoverflow.com/a/11638639/1250044\">answer</a>, completed the methods and made it a bit simpler:</p>\n\n<pre><code>(function(w){\n  var c = 'assert,clear,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,table,time,timeEnd,timeStamp,trace,warn'.split(','),\n  noop = function () {};\n\n  w.console = w.console || (function (len) {\n    var ret = {};\n    while (len--) { ret[c[len]] = noop; }\n    return ret;\n  }(c.length));\n})(window);\n</code></pre>\n\n<p>Edited to put into an IIFE and fix a syntax error!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Edit of <a href=\"http://stackoverflow.com/a/14870711/1369911\">@yckart's answer</a> </p>\n\n<p>Using c.length as input to a function which defines c won't work. Also you're just reassigning items in the array with noop when you should be adding methods to window.console.</p>\n\n<pre><code>(function(w){\n  var c = 'assert,clear,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,table,time,timeEnd,timeStamp,trace,warn'.split(','),\n  noop = function () {};\n\n  w.console = w.console || (function (len) {\n    var ret = {};\n    while (len--) { ret[c[len]] = noop; }\n    return ret;\n  }(c.length));\n})(window);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I was using <code>console.log()</code> in some JavaScript I wrote and an error of: <code>console is not defined</code> was thrown in Internet Explorer (worked fine in other browsers).</p>\n\n<p>I have replaced it with:</p>\n\n<p><code>if (console) console.log(\"...\");</code></p>\n\n<p>If <code>console</code> is <code>undefined</code>, I would expect the condition to evaluate as <code>false</code>. Ergo, the statement <code>console.log</code> wouldn't be executed and shouldn't throw an error.</p>\n\n<p>Instead, an error of: <code>console is not defined at character 4</code> is thrown.</p>\n\n<p>Is this a IE bug? Or is that \"if\" condition really illegal? It seems absurd because if <code>if (console)</code> is illegal, then <code>if (console==undefined)</code> should be illegal too.</p>\n\n<p>How are you supposed to check for <code>undefined</code> variables?</p>\n",
            "last_activity_date": 1391571865,
            "question_id": 9725111,
            "score": 18,
            "tags": [
                "javascript",
                "internet-explorer",
                "internet-explorer-8",
                "console",
                "undefined"
            ],
            "title": "Internet Explorer: &quot;console is not defined&quot; Error"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I would recommend looking at this article on how to use <strong>javascript</strong> to handle basic formatting:</p>\n\n<p><a href=\"http://www.mredkj.com/javascript/numberFormat.html\" rel=\"nofollow\">http://www.mredkj.com/javascript/numberFormat.html</a></p>\n\n<p>While jQuery can make your life easier in a million different ways I would say it's overkill for this.  Keep in mind that jQuery can be fairly large and your user's browser needs to download it when you use it on a page.  </p>\n\n<p>When ever using jQuery you should step back and ask if it contributes enough to justify the extra overhead of downloading the library.</p>\n\n<p>If you need some sort of advanced formatting (like the localization stuff in the plugin you linked), or you are already including jQuery it might be worth looking at a jQuery plugin.</p>\n\n<p>Side note - <a href=\"http://www.doxdesk.com/img/updates/20091116-so-large.gif\" rel=\"nofollow\">check this out</a> if you want to get a chuckle about the over use of jQuery.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Using the <a href=\"http://www.teamdf.com/web/jquery-number-format/178/\">jQuery Number Format</a> plugin, you can get a formatted number in one of three ways:</p>\n\n<pre><code>// Return as a string\n$.number( 1234.5678, 2 ); // Returns '1,234.57'\n\n// Place formatted number directly in an element:\n$('#mynum').number( 1234.5678 ); // #mynum would then contain '1,235'\n\n// Replace existing number values in any element\n$('span.num').number( true, 2 ); // Formats and replaces existing numbers in those elements.\n</code></pre>\n\n<p>If you don't like the format, or you need to localise, there are other parameters that let you choose how the number gets formatted:</p>\n\n<p>.number( theNumber, decimalPlaces, decimalSeparator, thousandsSeparator )</p>\n\n<p>You can also get <a href=\"http://github.com/teamdf/jquery-number/\">jQuery Number Format from GitHub</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Putting this <a href=\"http://www.mredkj.com/javascript/numberFormat.html\" rel=\"nofollow\">http://www.mredkj.com/javascript/numberFormat.html</a> and $('.number').formatNumber(); concept together, you may use the following line of code;</p>\n\n<p>e.g. &lt;td class=\"number\"&gt;1172907.50&lt;/td&gt; will be formatted like &lt;td class=\"number\"&gt;1,172,907.50&lt;/td&gt;</p>\n\n<p>$('.number').text(function () { var str = $(this).html() + ''; x = str.split('.'); x1 = x[0]; x2 = x.length > 1 ? '.' + x[1] : ''; var rgx = /(\\d+)(\\d{3})/; while (rgx.test(x1)) { x1 = x1.replace(rgx, '$1' + ',' + '$2'); } $(this).html(x1 + x2); }); });</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://jquerypriceformat.com/#examples\" rel=\"nofollow\">http://jquerypriceformat.com/#examples</a></p>\n\n<p><a href=\"https://github.com/flaviosilveira/Jquery-Price-Format\" rel=\"nofollow\">https://github.com/flaviosilveira/Jquery-Price-Format</a></p>\n\n<p>html input runing for live chance.</p>\n\n<pre><code>&lt;input type=\"text\" name=\"v7\"  class=\"priceformat\"/&gt;\n&lt;input type=\"text\" name=\"v8\"  class=\"priceformat\"/&gt;\n\n\n$('.priceformat').each(function( index ) {\n    $(this).priceFormat({ prefix: '',  thousandsSeparator: '' });\n});\n</code></pre>\n\n<p>//5000.00</p>\n\n<p>//5.000,00</p>\n\n<p>//5,000.00</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>There are way too many questions and answers about this basic functionality, I cannot see the wood for the trees. </p>\n\n<p>In Java there is only one simple answer (<code>java.text.NumberFormat</code> and its subclasses) so I'm sure the majority of plugins, questions and answers will mature eventually to a de-facto standard for JQuery.</p>\n\n<p><strong>This plugin</strong> is the best I found so far, but I don't know if it's still developed, is mature etc.</p>\n\n<p><a href=\"http://plugins.jquery.com/project/numberformatter\">http://plugins.jquery.com/project/numberformatter</a></p>\n\n<p>Is there a better solution? Is it mature / active enough to rely on?</p>\n\n<hr>\n\n<p><strong>Edit:</strong></p>\n\n<p>I would like to be able to format currencies, decimal, integers based on the same format patterns Java uses, so that data recieved on the client side can be formatted without sending it first to the server. </p>\n\n<p>e.g. </p>\n\n<p>Format <code>1000</code> to <code>$1,000</code> or <code>1,000.00</code> etc (locale support is nice)</p>\n\n<p>Seems that <a href=\"http://plugins.jquery.com/project/numberformatter\">http://plugins.jquery.com/project/numberformatter</a> does the job but the question was: \"Am I using the right thing?\" or \"Is there a better way to do so?\"</p>\n",
            "last_activity_date": 1416508400,
            "question_id": 7327046,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "number-formatting"
            ],
            "title": "JQuery Number Formatting"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>value.toString()</code> will cause an error if <code>value</code> is null. <code>String(value)</code> should not.</p>\n\n<p>For example:</p>\n\n<pre><code>var value = null;\nalert(value.toString());\n</code></pre>\n\n<p>will fail because <code>value == null</code>.</p>\n\n<pre><code>var value = null;\nalert(String(value));\n</code></pre>\n\n<p>should display a message reading \"null\" (or similar), but it will not crash.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p><code>String(value)</code> should have the same result as <code>value.toString()</code> in every case, except for values without properties like <code>null</code> or <code>undefined</code>. <code>''+value</code> will produce the same result.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>They are not completely the same, and actually, <a href=\"http://bclary.com/2004/11/07/#a-15.5.1\">the String constructor called as a function</a> (your first example), will at the end, call the <code>toString</code> method of the object passed, for example:</p>\n\n<pre><code>var o = { toString: function () { return \"foo\"; } };\nString(o); // \"foo\"\n</code></pre>\n\n<p>On the other hand, if an identifier refers to <code>null</code> or <code>undefined</code>, you can't use obviously the <code>toString</code> method, it will give you a <strong><code>TypeError</code> exception</strong>:</p>\n\n<pre><code>var value = null;\nString(null); //       \"null\"\nvalue.toString(); //   TypeError\n</code></pre>\n\n<p>The <code>String</code> constructor called as a function would be roughly equivalent to:</p>\n\n<pre><code>value+'';\n</code></pre>\n\n<p>The type conversion rules from <em>Object</em>-to-<em>Primitive</em> are detailed described on the specification, the <a href=\"http://bclary.com/2004/11/07/#a-8.6.2.6\"><code>[[DefaultValue]]</code></a> internal operation.</p>\n\n<p>In a brief, when converting from <em>Object</em>-to-<em>String</em>, the following steps are taken:</p>\n\n<ol>\n<li>If available, execute the <code>toString</code> method.\n<ul>\n<li>If the <code>result</code> is <em>not a primitive</em>, go to Step 2, else return the <code>result</code></li>\n</ul></li>\n<li>If available, execute the <code>valueOf</code> method.\n<ul>\n<li>If the <code>result</code> <em>is a primitive</em>, return <code>result</code>, else Step 3.</li>\n</ul></li>\n<li>Throw <code>TypeError</code>.</li>\n</ol>\n\n<p>Given the above rules, we can make an example of the semantics involved:</p>\n\n<pre><code>var o = {\n  toString:function () { return \"foo\"; },\n  valueOf: function () { return \"bar\"; }\n};\n\nString(o); // \"foo\"\n\n// Make the toString method unavailable:\no.toString =  null;\n\nString(o); // \"bar\"\n\n// Now make the valueOf method also unavailable:\no.valueOf = null;\n\ntry { \n  String(o); \n} catch (e) {\n  alert(e); // TypeError!\n}\n</code></pre>\n\n<p>If you want to digg-in more in this mechanism I would recommend you to give a look to the <a href=\"http://bclary.com/2004/11/07/#a-9.1\"><code>ToPrimitive</code></a> and the <a href=\"http://bclary.com/2004/11/07/#a-9.8\"><code>ToString</code></a> internal operations.</p>\n\n<p>Also I would recommend you this article:</p>\n\n<ul>\n<li><a href=\"http://www.adequatelygood.com/2010/3/Object-to-Primitive-Conversions-in-JavaScript\">Object-to-Primitive Conversions in JavaScript</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p>Javascript has lot's of \"tricks\" around types and type conversions so I'm wondering if these 2 methods are the same or if there is some corner case that makes them different?</p>\n",
            "last_activity_date": 1287170306,
            "question_id": 3945202,
            "score": 18,
            "tags": [
                "javascript"
            ],
            "title": "What&#39;s the difference between String(value) vs value.toString()"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The reason it won't catch anything in  your example is because once the <code>geocode()</code> callback is called, the <code>try/catch</code> block is over. Therefore the <code>geocode()</code> callback is executed outside the scope of the <code>try</code> block and thus not catchable by it. </p>\n\n<p>As far as I know, it is not possible to catch exceptions thrown in JavaScript callbacks (at least, not in any straightforward manner).</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>You can indeed catch exceptions that fire within a JavaScript callback function.</p>\n\n<p>The key is to set up the <code>try/catch</code> block within the callback code, as any <code>try/catch</code> blocks outside the callback code will have already exited by the time the callback code is executed.  So while your <code>try/catch</code> block above won't be able to catch any exceptions that get thrown when the callback function is called, you can still do something like this:</p>\n\n<pre><code>// this will cause an exception ing google.maps.Geocoder().geocode() \n// since it expects a string.\nvar zipcode = 30045; \nvar map = new google.maps.Map(document.getElementById('map_canvas'), {\n    zoom: 5,\n    center: new google.maps.LatLng(35.137879, -82.836914),\n    mapTypeId: google.maps.MapTypeId.ROADMAP\n});\n// exception in callback:\nvar geo = new google.maps.Geocoder().geocode({ 'address': zipcode }, \n   function(geoResult, geoStatus) {\n      try {\n          if (geoStatus != google.maps.GeocoderStatus.OK) console.log(geoStatus);\n      } catch(e){\n          alert(\"Callback Exception caught!\");\n      }\n   }\n);\n</code></pre>\n\n<p>and you'll be able to capture the exception when it is thrown.  I wasn't 100% sure whether that would be the case or not, so I wrote some test code to verify.  The exception is captured as expected on Chrome 19.0.1055.1 dev.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Yes, you can override the default behaviour of <a href=\"https://developer.mozilla.org/en/DOM/window.onerror\">window.onerror</a>:</p>\n\n<pre><code>window.onerror = function(message, file, lineNumber) {\n  // all errors will be caught here\n  // you can use `message` to make sure it's the error you're looking for\n  // returning true overrides the default window behaviour\n  return true; \n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>Is there a way to catch exceptions in JavaScript callbacks? Is it even possible?</p>\n\n<pre><code>Uncaught Error: Invalid value for property &lt;address&gt;\n</code></pre>\n\n<p>Here is the jsfiddle: <a href=\"http://jsfiddle.net/kjy112/yQhhy/\">http://jsfiddle.net/kjy112/yQhhy/</a></p>\n\n<pre><code>try {\n    // this will cause an exception ing google.maps.Geocoder().geocode() \n    // since it expects a string.\n    var zipcode = 30045; \n    var map = new google.maps.Map(document.getElementById('map_canvas'), {\n        zoom: 5,\n        center: new google.maps.LatLng(35.137879, -82.836914),\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n    });\n    // exception in callback:\n    var geo = new google.maps.Geocoder().geocode({ 'address': zipcode }, \n       function(geoResult, geoStatus) {\n          if (geoStatus != google.maps.GeocoderStatus.OK) console.log(geoStatus);\n       }\n    );\n} catch (e) {\n    if(e instanceof TypeError)\n       alert('TypeError');\n    else\n       alert(e);\n}\u200b\n</code></pre>\n",
            "last_activity_date": 1388388762,
            "question_id": 3677783,
            "score": 18,
            "tags": [
                "javascript",
                "google-maps",
                "exception",
                "callback"
            ],
            "title": "Is it possible to catch exceptions thrown in a JavaScript async callback?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Just porting over the Java from <a href=\"http://stackoverflow.com/questions/2464745/compute-hex-color-code-for-an-arbitrary-string\">http://stackoverflow.com/questions/2464745/compute-hex-color-code-for-an-arbitrary-string</a> to Javascript:</p>\n\n<pre><code>function hashCode(str) { // java String#hashCode\n    var hash = 0;\n    for (var i = 0; i &lt; str.length; i++) {\n       hash = str.charCodeAt(i) + ((hash &lt;&lt; 5) - hash);\n    }\n    return hash;\n} \n\nfunction intToARGB(i){\n    return ((i&gt;&gt;24)&amp;0xFF).toString(16) + \n           ((i&gt;&gt;16)&amp;0xFF).toString(16) + \n           ((i&gt;&gt;8)&amp;0xFF).toString(16) + \n           (i&amp;0xFF).toString(16);\n}\n</code></pre>\n\n<p>To convert you would do:</p>\n\n<pre><code>intToARGB(hashCode(your_string))\n</code></pre>\n\n<p>Although it yields some numbers with length greater than 6...</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Here's an adaptation of CD Sanchez' answer that consistently returns a 6-digit colour code:</p>\n\n<pre><code>var stringToColour = function(str) {\n\n    // str to hash\n    for (var i = 0, hash = 0; i &lt; str.length; hash = str.charCodeAt(i++) + ((hash &lt;&lt; 5) - hash));\n\n    // int/hash to hex\n    for (var i = 0, colour = \"#\"; i &lt; 3; colour += (\"00\" + ((hash &gt;&gt; i++ * 8) &amp; 0xFF).toString(16)).slice(-2));\n\n    return colour;\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>stringToColour(\"greenish\");\n// -&gt; #9bc63b\n</code></pre>\n\n<p>Example:</p>\n\n<p><a href=\"http://jsfiddle.net/sUK45/\">http://jsfiddle.net/sUK45/</a></p>\n\n<p>(An alternative/simpler solution might involve returning an 'rgb(...)'-style colour code.)</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>If your inputs are not different enough for a simple hash to use the entire color spectrum, you can use a seeded random number generator instead of a hash function.</p>\n\n<p>I'm using the color coder from Joe Freeman's answer, and <a href=\"http://davidbau.com/archives/2010/01/30/random_seeds_coded_hints_and_quintillions.html\" rel=\"nofollow\">David Bau's seeded random number generator</a>.</p>\n\n<pre><code>function stringToColour(str) {\n    Math.seedrandom(str);\n    var rand = Math.random() * Math.pow(255,3);\n    Math.seedrandom(); // don't leave a non-random seed in the generator\n    for (var i = 0, colour = \"#\"; i &lt; 3; colour += (\"00\" + ((rand &gt;&gt; i++ * 8) &amp; 0xFF).toString(16)).slice(-2));\n    return colour;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Yet another solution for random colors:</p>\n\n<pre><code>function colorize(str) {\n    for (var i = 0, hash = 0; i &lt; str.length; hash = str.charCodeAt(i++) + ((hash &lt;&lt; 5) - hash));\n    color = Math.floor(Math.abs((Math.sin(hash) * 10000) % 1 * 16777216)).toString(16);\n    return '#' + Array(6 - color.length + 1).join('0') + color;\n}\n</code></pre>\n\n<p>It's a mixed of things that does the job for me. \nI used  JFreeman Hash function (also an answer in this thread) and Asyk\u00e4ri pseudo random function from <a href=\"http://stackoverflow.com/a/19303725/1182464\">here</a> and some padding and math from myself.</p>\n\n<p>I doubt the function produces evenly distributed colors, though it looks nice and does that what it should do. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I wanted similar richness in colors for HTML elements, I was surprised to find that CSS now supports hsl() colors, so a full solution for me is below:</p>\n\n<p>Also see <a href=\"http://stackoverflow.com/questions/470690/how-to-automatically-generate-n-distinct-colors/4382138#4382138\">How to automatically generate N &quot;distinct&quot; colors?</a> for more alternatives more similar to this.</p>\n\n<pre><code>function colorByHashCode(value) {\n    return \"&lt;span style='color:\" + value.getHashCode().intToHSL() + \"'&gt;\" + value + \"&lt;/span&gt;\";\n}\nString.prototype.getHashCode = function() {\n    var hash = 0;\n    if (this.length == 0) return hash;\n    for (var i = 0; i &lt; this.length; i++) {\n        hash = this.charCodeAt(i) + ((hash &lt;&lt; 5) - hash);\n        hash = hash &amp; hash; // Convert to 32bit integer\n    }\n    return hash;\n};\nNumber.prototype.intToHSL = function() {\n    var shortened = this % 360;\n    return \"hsl(\" + shortened + \",100%,30%)\";\n};\n</code></pre>\n\n<p>In HSL its Hue, Saturation, Lightness.  So the hue between 0-259 will get all colors, saturation is how rich you want the color, 100% works for me.  And Lightness determines the deepness, 50% is normal, 25% is dark colors, 75% is pastel.  I have 30% because it fit with my color scheme best.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is another try:</p>\n\n<pre><code>function stringToColor(str){\n  var hash = 0;\n  for(var i=0; i &lt; str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash &lt;&lt; 3) - hash);\n  }\n  var color = Math.abs(hash).toString(16).substring(0, 6);\n\n  return \"#\" + '000000'.substring(0, 6 - color.length) + color;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just built a feature that fits the bill in Please.js,\nit still isn't merged with the main repo, but you can see it here:</p>\n\n<p><a href=\"https://github.com/ibarrajo/PleaseJS\" rel=\"nofollow\">https://github.com/ibarrajo/PleaseJS</a></p>\n\n<p>You can map the string to a color like so:</p>\n\n<pre><code>var color = Please.make_color({from_hash: 'any string goes here'});\n</code></pre>\n\n<p><code>\"any string goes here\"</code> will return as <code>\"#47291b\"</code><br>\nand <code>\"another!\"</code> returns as <code>\"#1f0c3d\"</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to create a function that will accept any old string (will usually be a single word) and from that <em>somehow</em> generate a hexadecimal value between #000000 and #FFFFFF, so I can use it as a colour for a HTML element. </p>\n\n<p>Maybe even a shorthand hex value (i.e: #FFF) if that's less complicated. In fact, a colour from a 'web-safe' palette would be ideal.</p>\n\n<p>I've had a look on the site and there were some similar questions for RoR and Java, but they didn't look too transferable. Having said that I'm not <em>that</em> familiar with the finer points of JavaScript.</p>\n",
            "last_activity_date": 1405703835,
            "question_id": 3426404,
            "score": 18,
            "tags": [
                "javascript",
                "string",
                "colors",
                "hex"
            ],
            "title": "Create a hexadecimal colour based on a string with JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>There you go:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt; \n&lt;head&gt; \n   &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/&gt; \n   &lt;title&gt;Google Maps getBoundsZoomLevel Demo&lt;/title&gt; \n   &lt;script src=\"http://maps.google.com/maps?file=api&amp;amp;v=2&amp;amp;sensor=false\" \n           type=\"text/javascript\"&gt;&lt;/script&gt; \n&lt;/head&gt; \n&lt;body onunload=\"GUnload()\"&gt; \n\n   &lt;div id=\"map\" style=\"width: 400px; height: 300px\"&gt;&lt;/div&gt; \n\n   &lt;script type=\"text/javascript\"&gt; \n\n   if (GBrowserIsCompatible()) {\n      var map = new GMap2(document.getElementById(\"map\"));\n      var markerBounds = new GLatLngBounds();\n\n      for (var i = 0; i &lt; 10; i++) {\n         var randomPoint = new GLatLng( 39.00 + (Math.random() - 0.5) * 20, \n                                       -77.00 + (Math.random() - 0.5) * 20);\n\n         map.addOverlay(new GMarker(randomPoint));\n         markerBounds.extend(randomPoint);\n      }\n\n      map.setCenter(markerBounds.getCenter(), \n                    map.getBoundsZoomLevel(markerBounds));\n   }\n   &lt;/script&gt; \n&lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n\n<p>We are creating 10 random points in the above example and then passing each point to <code>GLatLngBounds.extend()</code>. Finally we get the correct zoom level with <code>GMap2.getBoundsZoomLevel()</code>.</p>\n\n<p><img src=\"http://i.imgur.com/7f3OxCI.png\" alt=\"Google Maps getBoundsZoomLevel Demo\"></p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>You can use the <code>extend</code> method of the <a href=\"http://code.google.com/apis/maps/documentation/reference.html#GLatLngBounds\" rel=\"nofollow\">GLatLngBounds</a> object, which represents a rectangle on the map.</p>\n\n<pre><code>var bounds = new GLatLngBounds();\n</code></pre>\n\n<p>Loop around all the <a href=\"http://code.google.com/apis/maps/documentation/reference.html#GLatLng\" rel=\"nofollow\">points</a> on your map, extending the bounds of your GLatLngBounds object for each one.</p>\n\n<pre><code>bounds.extend(myPoint);\n</code></pre>\n\n<p>Finally you can use your bounds object to set the centre and zoom of your map (where <code>map</code> is your map object)</p>\n\n<pre><code>map.setCenter(bounds.getCenter(), map.getBoundsZoomLevel(bounds));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you are using API version 3 you can replace </p>\n\n<pre><code>map.setCenter(markerBounds.getCenter(), map.getBoundsZoomLevel(markerBounds));\n</code></pre>\n\n<p>with</p>\n\n<pre><code>map.fitBounds(markerBounds).\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Maps API v3 --- get markers, set center on map by fitting map to marker boundaries </p>\n\n<pre><code>markers = [marker_obj_1, marker_obj_2, marker_obj_3];\n\nnew_boundary = new google.maps.LatLngBounds();\n\nfor(index in markers){\n  position = markers[index].position;\n  new_boundary.extend(position);\n}\n\nmap.fitBounds(new_boundary);\n</code></pre>\n\n<p>The code above will automaticlly center and zoom your map so that all markers are visible.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>How do I set the zoom level to show all the markers on Google Maps?</p>\n\n<p>In my Google Map there are different markers in different positions. I want to set google map zoom level based on the range of markers (that means in the view of google map, i want to see all markers)</p>\n",
            "last_activity_date": 1414159716,
            "question_id": 2362337,
            "score": 18,
            "tags": [
                "javascript",
                "google-maps"
            ],
            "title": "How to set the Google Map zoom level to show all the markers?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Based on this post and its comments:\n<a href=\"http://cf-bill.blogspot.com/2006/03/another-ie-gotcha-dynamiclly-created.html\">http://cf-bill.blogspot.com/2006/03/another-ie-gotcha-dynamiclly-created.html</a></p>\n\n<p>the following works. Apparently the problem is that you can't dynamically set the name property in IE. I also found that you can't dynamically set the checked attribute either.</p>\n\n<pre><code>function createRadioElement( name, checked ) {\n    var radioInput;\n    try {\n        var radioHtml = '&lt;input type=\"radio\" name=\"' + name + '\"';\n        if ( checked ) {\n            radioHtml += ' checked=\"checked\"';\n        }\n        radioHtml += '/&gt;';\n        radioInput = document.createElement(radioHtml);\n    } catch( err ) {\n        radioInput = document.createElement('input');\n        radioInput.setAttribute('type', 'radio');\n        radioInput.setAttribute('name', name);\n        if ( checked ) {\n            radioInput.setAttribute('checked', 'checked');\n        }\n    }\n\n    return radioInput;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>My suggestion is not to use document.Create(). Better solution is to construct actual HTML  of future control and then assign it like innerHTML to some placeholder - it allows browser to render it itself which is much faster than any JS DOM manipulations.</p>\n\n<p>Cheers.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Patrick's answer works, or you can set the \"defaultChecked\" attribute too (this will work in IE for radio or checkbox elements, and won't cause errors in other browsers.</p>\n\n<p>PS Full list of attributes you can't set in IE is listed here:</p>\n\n<p><a href=\"http://webbugtrack.blogspot.com/2007/08/bug-242-setattribute-doesnt-always-work.html\" rel=\"nofollow\">http://webbugtrack.blogspot.com/2007/08/bug-242-setattribute-doesnt-always-work.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Taking a step from what Patrick suggests, using a temporary node we can get rid of the try/catch:</p>\n\n<pre><code>function createRadioElement(name, checked) {\n    var radioHtml = '&lt;input type=\"radio\" name=\"' + name + '\"';\n    if ( checked ) {\n        radioHtml += ' checked=\"checked\"';\n    }\n    radioHtml += '/&gt;';\n\n    var radioFragment = document.createElement('div');\n    radioFragment.innerHTML = radioHtml;\n\n    return radioFragment.firstChild;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Here's an example of more general solution which detects IE up front and handles other attributes IE also has problems with, extracted from <a href=\"http://code.google.com/p/dombuilder/\" rel=\"nofollow\">DOMBuilder</a>:</p>\n\n<pre><code>var createElement = (function()\n{\n    // Detect IE using conditional compilation\n    if (/*@cc_on @*//*@if (@_win32)!/*@end @*/false)\n    {\n        // Translations for attribute names which IE would otherwise choke on\n        var attrTranslations =\n        {\n            \"class\": \"className\",\n            \"for\": \"htmlFor\"\n        };\n\n        var setAttribute = function(element, attr, value)\n        {\n            if (attrTranslations.hasOwnProperty(attr))\n            {\n                element[attrTranslations[attr]] = value;\n            }\n            else if (attr == \"style\")\n            {\n                element.style.cssText = value;\n            }\n            else\n            {\n                element.setAttribute(attr, value);\n            }\n        };\n\n        return function(tagName, attributes)\n        {\n            attributes = attributes || {};\n\n            // See http://channel9.msdn.com/Wiki/InternetExplorerProgrammingBugs\n            if (attributes.hasOwnProperty(\"name\") ||\n                attributes.hasOwnProperty(\"checked\") ||\n                attributes.hasOwnProperty(\"multiple\"))\n            {\n                var tagParts = [\"&lt;\" + tagName];\n                if (attributes.hasOwnProperty(\"name\"))\n                {\n                    tagParts[tagParts.length] =\n                        ' name=\"' + attributes.name + '\"';\n                    delete attributes.name;\n                }\n                if (attributes.hasOwnProperty(\"checked\") &amp;&amp;\n                    \"\" + attributes.checked == \"true\")\n                {\n                    tagParts[tagParts.length] = \" checked\";\n                    delete attributes.checked;\n                }\n                if (attributes.hasOwnProperty(\"multiple\") &amp;&amp;\n                    \"\" + attributes.multiple == \"true\")\n                {\n                    tagParts[tagParts.length] = \" multiple\";\n                    delete attributes.multiple;\n                }\n                tagParts[tagParts.length] = \"&gt;\";\n\n                var element =\n                    document.createElement(tagParts.join(\"\"));\n            }\n            else\n            {\n                var element = document.createElement(tagName);\n            }\n\n            for (var attr in attributes)\n            {\n                if (attributes.hasOwnProperty(attr))\n                {\n                    setAttribute(element, attr, attributes[attr]);\n                }\n            }\n\n            return element;\n        };\n    }\n    // All other browsers\n    else\n    {\n        return function(tagName, attributes)\n        {\n            attributes = attributes || {};\n            var element = document.createElement(tagName);\n            for (var attr in attributes)\n            {\n                if (attributes.hasOwnProperty(attr))\n                {\n                    element.setAttribute(attr, attributes[attr]);\n                }\n            }\n            return element;\n        };\n    }\n})();\n\n// Usage\nvar rb = createElement(\"input\", {type: \"radio\", checked: true});\n</code></pre>\n\n<p>The full DOMBuilder version also handles event listener registration and specification of child nodes.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>why not creating the input, set the style to dispaly: none and then change the display when necesary\nthis way you can also probably handle users whitout js better.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Personally I wouldn't create nodes myself. As you've noticed there are just too many browser specific problems. Normally I use <a href=\"http://github.com/madrobby/scriptaculous/wikis/builder\" rel=\"nofollow\">Builder.node</a> from <a href=\"http://script.aculo.us/\" rel=\"nofollow\">script.aculo.us</a>. Using this your code would become something like this:</p>\n\n<pre><code>Builder.node('input', {type: 'radio', name: name})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Quick reply to an older post:</p>\n\n<p>The post above by Roundcrisis is fine, IF AND ONLY IF, you know the number of radio/checkbox controls that will be used before-hand.  In some situations, addressed by this topic of 'dynamically creating radio buttons', the number of controls that will be needed by the user is not known.  Further, I do not recommend 'skipping' the 'try-catch' error trapping, as this allows for ease of catching future browser implementations which may not comply with the current standards.  Of these solutions, I recommend using the solution proposed by Patrick Wilkes in his reply to his own question.</p>\n\n<p>This is repeated here in an effort to avoid confusion:</p>\n\n<pre><code>function createRadioElement( name, checked ) {\n   var radioInput;\n   try {\n        var radioHtml = '&lt;input type=\"radio\" name=\"' + name + '\"';\n        if ( checked ) {\n            radioHtml += ' checked=\"checked\"';\n        }\n        radioHtml += '/&gt;';\n        radioInput = document.createElement(radioHtml);\n    } catch( err ) {\n        radioInput = document.createElement('input');\n        radioInput.setAttribute('type', 'radio');\n        radioInput.setAttribute('name', name);\n        if ( checked ) {\n            radioInput.setAttribute('checked', 'checked');\n        }\n    }\n    return radioInput;}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>My solution:</p>\n\n<pre><code>html\n    head\n        script(type='text/javascript')\n            function createRadioButton()\n            {\n               var newRadioButton\n                 = document.createElement(input(type='radio',name='radio',value='1st'));\n               document.body.insertBefore(newRadioButton);\n            }\n    body\n        input(type='button',onclick='createRadioButton();',value='Create Radio Button')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Dynamically created radio button in javascript:</p>\n\n<pre><code>&lt;%@ Page Language=\u201dC#\u201d AutoEventWireup=\u201dtrue\u201d CodeBehind=\u201dRadioDemo.aspx.cs\u201d Inherits=\u201dJavascriptTutorial.RadioDemo\u201d %&gt;\n\n&lt;!DOCTYPE html PUBLIC \u201c-//W3C//DTD XHTML 1.0 Transitional//EN\u201d \u201chttp://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\u201d&gt;\n\n&lt;html xmlns=\u201dhttp://www.w3.org/1999/xhtml\u201d&gt;\n&lt;head runat=\u201dserver\u201d&gt;\n&lt;title&gt;&lt;/title&gt;\n&lt;script type=\u201dtext/javascript\u201d&gt;\n\n/* Getting Id of Div in which radio button will be add*/\nvar containerDivClientId = \u201c&lt;%= containerDiv.ClientID %&gt;\u201d;\n\n/*variable count uses for define unique Ids of radio buttons and group name*/\nvar count = 100;\n\n/*This function call by button OnClientClick event and uses for create radio buttons*/\nfunction dynamicRadioButton()\n{\n/* create a radio button */\nvar radioYes = document.createElement(\u201cinput\u201d);\nradioYes.setAttribute(\u201ctype\u201d, \u201cradio\u201d);\n\n/*Set id of new created radio button*/\nradioYes.setAttribute(\u201cid\u201d, \u201cradioYes\u201d + count);\n\n/*set unique group name for pair of Yes / No */\nradioYes.setAttribute(\u201cname\u201d, \u201cBoolean\u201d + count);\n\n/*creating label for Text to Radio button*/\nvar lblYes = document.createElement(\u201clable\u201d);\n\n/*create text node for label Text which display for Radio button*/\nvar textYes = document.createTextNode(\u201cYes\u201d);\n\n/*add text to new create lable*/\nlblYes.appendChild(textYes);\n\n/*add radio button to Div*/\ncontainerDiv.appendChild(radioYes);\n\n/*add label text for radio button to Div*/\ncontainerDiv.appendChild(lblYes);\n\n/*add space between two radio buttons*/\nvar space = document.createElement(\u201cspan\u201d);\nspace.setAttribute(\u201cinnerHTML\u201d, \u201c&amp;nbsp;&amp;nbsp\u201d);\ncontainerDiv.appendChild(space);\n\nvar radioNo = document.createElement(\u201cinput\u201d);\nradioNo.setAttribute(\u201ctype\u201d, \u201cradio\u201d);\nradioNo.setAttribute(\u201cid\u201d, \u201cradioNo\u201d + count);\nradioNo.setAttribute(\u201cname\u201d, \u201cBoolean\u201d + count);\n\nvar lblNo = document.createElement(\u201clabel\u201d);\nlblNo.innerHTML = \u201cNo\u201d;\ncontainerDiv.appendChild(radioNo);\ncontainerDiv.appendChild(lblNo);\n\n/*add new line for new pair of radio buttons*/\nvar spaceBr= document.createElement(\u201cbr\u201d);\ncontainerDiv.appendChild(spaceBr);\n\ncount++;\nreturn false;\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;form id=\u201dform1\u2033 runat=\u201dserver\u201d&gt;\n&lt;div&gt;\n&lt;asp:Button ID=\u201dbtnCreate\u201d runat=\u201dserver\u201d Text=\u201dClick Me\u201d OnClientClick=\u201dreturn dynamicRadioButton();\u201d /&gt;\n&lt;div id=\u201dcontainerDiv\u201d runat=\u201dserver\u201d&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>(<a href=\"http://knowpacific.wordpress.com/2012/09/12/dynamically-created-radio-buttons-in-javascript/\" rel=\"nofollow\">source</a>)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Dynamically creating a radio button using eg </p>\n\n<pre><code>var radioInput = document.createElement('input');\nradioInput.setAttribute('type', 'radio');\nradioInput.setAttribute('name', name);\n</code></pre>\n\n<p>works in Firefox but not in IE. Why not?</p>\n",
            "last_activity_date": 1347452422,
            "question_id": 118693,
            "score": 18,
            "tags": [
                "javascript"
            ],
            "title": "How do you dynamically create a radio button in Javascript that works in all browsers?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can't do this with jQuery ajax, but with native XMLHttpresuest.</p>\n\n<pre><code>var xhr = new XMLHttpRequest();\nxhr.onreadystatechange = function(){\n    if (this.readyState == 4 &amp;&amp; this.status == 200){\n        //this.response is what you're looking for\n        handler(this.response);\n        console.log(this.response, typeof this.response);\n        var img = document.getElementById('img');\n        var url = window.URL || window.webkitURL;\n        img.src = url.createObjectURL(this.response);\n    }\n}\nxhr.open('GET', 'http://jsfiddle.net/img/logo.png');\nxhr.responseType = 'blob';\nxhr.send();      \n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/mowglisanu/9xY46/58/show\">http://jsfiddle.net/mowglisanu/9xY46/58/show</a><br>\n<a href=\"http://jsfiddle.net/mowglisanu/9xY46/58\">http://jsfiddle.net/mowglisanu/9xY46/58</a></p>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<p>I recently asked another (related) question, which lead to this follow up question:\n<a href=\"http://stackoverflow.com/questions/17643142/submitting-data-instead-of-a-file-for-an-input-form\">Submitting data instead of a file for an input form</a></p>\n\n<p>Reading through the jQuery.ajax() documentation (<a href=\"http://api.jquery.com/jQuery.ajax/\">http://api.jquery.com/jQuery.ajax/</a>), it seems the list of accepted dataTypes doesn't include images.</p>\n\n<p>I'm trying to retrieve an image using jQuery.get (or jQuery.ajax if I have to), store this image in a Blob and upload it to another server in a POST request. Currently, it looks like due to the mismatch in datatypes, my images end up being corrupt (size in bytes mismatch, etc.).</p>\n\n<p>The code to perform this is as follows (it is in coffeescript but shouldn't be difficult to parse):</p>\n\n<pre><code>handler = (data,status) -&gt;\n  fd = new FormData\n  fd.append(\"file\", new Blob([data], { \"type\" : \"image/png\" }))\n  jQuery.ajax {\n    url: target_url,\n    data: fd,\n    processData: false,\n    contentType: \"multipart/form-data\",\n    type: \"POST\",\n    complete: (xhr,status) -&gt;\n      console.log xhr.status\n      console.log xhr.statusCode\n      console.log xhr.responseText\n\n  }\njQuery.get(image_source_url, null, handler)\n</code></pre>\n\n<p>How can I retrieve this image as a blob instead?</p>\n",
            "last_activity_date": 1388685341,
            "question_id": 17657184,
            "score": 17,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Using jQuery&#39;s ajax method to retrieve images as a blob"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>When you call <code>obj.method()</code> in Javascript the method is passed <code>obj</code> as <code>this</code>.  Calling <code>document.getElementById('x')</code> with therefore set <code>this</code> to <code>document</code>.</p>\n\n<p>However if you just write <code>f = document.getElementById</code> you now have a new <em>reference</em> to the function, but that reference is no longer \"bound\" to <code>document</code>.</p>\n\n<p>So your code doesn't work because when you call <code>f</code> as a bare function name it ends up bound to the global object (<code>window</code>).  As soon as the innards of the function try to use <code>this</code> it finds that it now has a <code>window</code> instead of a <code>document</code> and unsurprisingly it doesn't like it.</p>\n\n<p>You <em>can</em> make <code>f</code> work if you call it so:</p>\n\n<pre><code>var x = f.call(document, 'x');\n</code></pre>\n\n<p>which calls <code>f</code> but explicitly sets the context to <code>document</code>.</p>\n\n<p>The others way to fix this is to use <code>Function.bind()</code> which is only available in ES5:</p>\n\n<pre><code>var f = document.getElementById.bind(document);\n</code></pre>\n\n<p>and is really just a generalised short cut for creating your own wrapper that correctly sets the context:</p>\n\n<pre><code>function f(id) {\n    return document.getElementById(id);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>Because in JavaScript functions arent <em>bound</em> to context (<code>this</code>). You may use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\"><code>bind()</code></a>:</p>\n\n<pre><code>var f = document.getElementById.bind(document);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>Javascript is purported to have first-class functions, so this seems like the following ought to work:</p>\n\n<pre><code>var f = document.getElementById;\nvar x = f('x');\n</code></pre>\n\n<p>But it fails on all browsers, with a different cryptic error message on each one.  Safari says \"Type error\".  Chrome says \"Illegal invocation\".  Firefox says \"Could not convert Javascript argument.\"</p>\n\n<p>Why?</p>\n",
            "last_activity_date": 1346153436,
            "question_id": 8773579,
            "score": 17,
            "tags": [
                "javascript"
            ],
            "title": "If Javascript has first-class functions, why doesn&#39;t this work?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Check this link: <a href=\"http://www.javascriptkit.com/javatutors/arraysort.shtml\" rel=\"nofollow\">http://www.javascriptkit.com/javatutors/arraysort.shtml</a>\nor the suggestion provided in comment to your question.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can still use <code>array.sort()</code> with a custom function. Inside the function, simply compare the element that you want to use as your key. For you example, you could use:</p>\n\n<pre><code>myArray.sort(function(a, b) { \n    return a[1] &gt; b[1] ? 1 : -1;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>This can be achieved by passing a supporting function as an argument to the <code>Array.Sort</code> method call.</p>\n\n<p>Something like this:</p>\n\n<pre><code>function Comparator(a,b){\nif (a[1] &lt; b[1]) return -1;\nif (a[1] &gt; b[1]) return 1;\nreturn 0;\n}\n\nvar myArray = [\n                [1, 'alfred', '...'],\n                [23, 'berta', '...'],\n                [2, 'zimmermann', '...'],\n                [4, 'albert', '...'],\n              ];\n\nmyArray = myArray.sort(Comparator);\n</code></pre>\n\n<p>I am not a Javascript wiz btw - use caution ...</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>Awesome! Compound sort on first element, second element and then third, all ascending in this example, would be</p>\n\n<pre><code>myArray=myArray.sort(function(a,b){\n    retVal=0;\n    if(a[0]!=b[0]) retVal=a[0]&gt;b[0]?1:-1;\n    else if(a[1]!=b[1]) retVal=a[1]&gt;b[1]?1:-1;\n    else if(a[2]!=b[2]) retVal=a[2]&gt;b[2]?1:-1;\n    return retVal\n});\n</code></pre>\n\n<p>(multiple sort on more than one column)</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have an array that contains several arrays and I would like to order the arrays based on a certain string within those arrays.</p>\n\n<pre><code>var myArray = [\n                [1, 'alfred', '...'],\n                [23, 'berta', '...'],\n                [2, 'zimmermann', '...'],\n                [4, 'albert', '...'],\n              ];\n</code></pre>\n\n<p>How can I sort it by the name so that <em>albert</em> comes first and <em>zimmermann</em> comes last?</p>\n\n<p>I know how I would do it if I could use the integer for sorting but the string leaves me clueless.</p>\n\n<p>Thank for your help! :)</p>\n",
            "last_activity_date": 1416932286,
            "question_id": 5435228,
            "score": 17,
            "tags": [
                "javascript",
                "arrays",
                "sorting"
            ],
            "title": "Sort an array with arrays in it by string"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It's really easy to do: <code>object[\"variablename\"] = whatever;</code></p>\n\n<p>So for example you could have an object: <code>var Landmarks = {}</code> and you could add to it like so: <code>Landmarks[\"landmark\" + i] = new google.maps.Icon();</code> and pass it that way.</p>\n\n<p>If you need these variables to be <em>global</em> (why would you?) you can access the global object directly using <code>window</code>.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>You'd be better off creating a javascript object which you can use somewhat like an associative array is used in PHP:</p>\n\n<pre><code>var types = ['hospital','church','library','store'];\nvar landmarks= {};\nfor (var i in types) {\n    landmarks[types[i]]= new google.maps.Icon();\n    landmarks[types[i]].image = \"icon\" + i + \".png\";\n} \nalert(landmarks['hospital'].image);  // displays \"icon0.png\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you're going to do it using a declared object such as <code>Landmark[\"landmark\" + i]</code>, you really may as well use an index array rather than an associative, it's much easier for iteration.  Objects aren't really used with indexed properties because Arrays do a much better job of it:</p>\n\n<pre><code>var myObj =           // object version\n{\n   \"item0\": \"blah\",\n   \"item1\": \"blah\"\n   // etc\n}\nvar myArr =           // array version\n[\n   \"blah\",\n   \"blah\"\n   // etc\n]\n</code></pre>\n\n<p>Much more sensible to use the array:</p>\n\n<pre><code>landmarks = []; // new array\ntypes = array('hospital','church','library','store',etc);  \nvar i=0;  \nwhile (i&lt;=types.length) {  \n    landmarks.push(new google.maps.Icon());\n    landmarks[i].image = \"icon\" + i + \".png\";\n    i++;  \n}\n</code></pre>\n\n<p>It makes more sense to do it that way and <code>for...in</code> loops on objects can get a bit messy with prototyped properties being enumerable, etc.</p>\n\n<p>If you're trying to make a variable global, add it to the window object:</p>\n\n<pre><code>var myCustomVar = \"landmark\" + i;\nwindow[myCustomVar] = new google.maps.Icon();\n\nalert(landmark0);\n</code></pre>\n\n<p>But this would be polluting the global namespace with many unnecessary variables.  So you'd still be better with an array:</p>\n\n<pre><code>window.landmarks = [];\nlandmarks.push(new google.maps.Icon());\n// etc...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Just to answer your question directly (although please note that <strong>this is not the solution you want. Check out the other answers. This is just for documentation!</strong>), here's a copy-paste from a JavaScript console:</p>\n\n<pre><code>&gt; window[\"myNamedVar\"] = \"Hello, World!\";\n&gt; console.log(myNamedVar);\n  \"Hello, World!\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Do you really need those variables? Can't you do with this:</p>\n\n<pre><code>var types = ['hospital','church','library','store'];    \nfor(var i =0; i &lt; types.length; i += 1) (new google.maps.Icon()).image = \"icon\" + i + \".png\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could use php + javascript. But first you should include the library for jquery cookies (jquery.cookie.js)</p>\n\n<pre><code>types = array('hospital','church','library','store',etc);\n$.cookie(\"counter\",types.length);\n\n&lt;?php\n$i = 0;\nwhile($i&lt;=$_COOKIE['counter']){\n?&gt;\nvar landmark&lt;?php echo $i; ?&gt; = new google.maps.Icon();\nlandmark.image = \"icon&lt;?php echo $i; ?&gt;.png\";\n\n&lt;?php\n$i = $i + 1;\n}\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I've built a data-driven google map with different icons that get assigned to the map depending on the type of item located. So if I have 5 types of landmark, and each gets a different icon (store, library, hospital, etc.)-- what I'd like to do is generate the google icon objects dynamically. I was thinking something like this:</p>\n\n<pre><code>types = array('hospital','church','library','store',etc);\nvar i=0;\nwhile (i&lt;=types.length) {\n\n    var landmark + i = new google.maps.Icon();\n    landmark.image = \"icon\" + i + \".png\";\n    i++;\n    } \n</code></pre>\n\n<p>however, as you've probably guessed, this doesn't work. I also tried using eval, like this:</p>\n\n<pre><code>while (i&lt;=types.length) {\n        doIcon(i);\n        i++;\n    }   \n\n    function doIcon(i){ \n        eval(\"var landmark\" + i + \" = new.google.maps.Icon();\");\n        return eval(\"landmark\" + i);\n    }\n</code></pre>\n\n<p>but it didn't work either-- I'd appreciate any pointers on generating javascript variables dynamically. It's got to be pure js, I could do it in PHP but that's not an option here.</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1390304200,
            "question_id": 2413414,
            "score": 17,
            "tags": [
                "javascript",
                "dynamic-variables"
            ],
            "title": "Is there an easy way to create dynamic variables with Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>if you use jQuery you can add js on the fly. I would probably think you can have a method which would include/exclude your script based on some query param. This is how you would include JS with jQuery</p>\n\n<pre><code>$.getScript('someScript.js',function(){\n//Do something here after your script loads\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Haven't tried it, but how about <a href=\"http://www.gm4ie.com/\" rel=\"nofollow\">GreaseMonkey for IE</a>?</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Open fiddler -> Menu Rules -> Customize Rules (or hit Ctrl+R)</p>\n\n<p>The <em>CustomRule.js</em> file opens. Scroll down until you find the line</p>\n\n<pre><code>static function OnBeforeResponse(oSession: Session)\n</code></pre>\n\n<p>This is where your code goes. Here you can change the server response before the browser sees it.</p>\n\n<p>The following code sample shows how to include a custom piece of jQuery code which replaces the <a href=\"http://stackoverflow.com/unanswered\">Unanswered</a> link in the horizontal menu with a link which serves as short cut to <a href=\"http://stackoverflow.com/unanswered/tagged/jquery\">Unanswered jQuery Questions</a></p>\n\n<p>I first show you the jQuery code I want to include</p>\n\n<pre><code>&lt;script type='text/javascript'&gt;\n    $(function() {\n        var newLink = '&lt;a href=\"/unanswered/tagged/jquery\"&gt;Unanswered jQuery&lt;/a&gt;';\n        $('div#hmenus div.nav:first ul li:last a').replaceWith(newLink);\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>Now the fiddler code (based on code found in <em>CustomRules.js</em> and code samples from the <a href=\"http://www.fiddlertool.com/fiddler/Dev/ScriptSamples.asp\">FiddlerScript CookBook</a>)</p>\n\n<pre><code>//is it a html-response and is it from stackoverflow.com\nif (oSession.oResponse.headers.ExistsAndContains(\"Content-Type\", \"html\") &amp;&amp;\n    oSession.HostnameIs(\"stackoverflow.com\")) {\n\n    // Remove any compression or chunking\n    oSession.utilDecodeResponse();\n\n    var oBody = System.Text.Encoding.UTF8.GetString(oSession.responseBodyBytes);\n\n    // Match the jQuery script tag\n    var oRegEx = /(&lt;script[^&gt;]*jquery.min.js\"&gt;&lt;\\/script&gt;)/gi;\n    // replace the script tag withitself (no change) + append custom script tag\n    oBody = oBody.replace(oRegEx, \"$1&lt;script type='text/javascript'&gt;$(function() {$('div#hmenus div.nav:first ul li:last a').replaceWith('&lt;a href=\\\"/unanswered/tagged/jquery\\\"&gt;Unanswered jQuery&lt;/a&gt;');})&lt;/script&gt;\");\n\n    // Set the response body to the changed body string\n    oSession.utilSetResponseBody(oBody); \n}\n</code></pre>\n\n<p>Result looks like this</p>\n\n<p><img src=\"http://img269.imageshack.us/img269/570/clipboard01ym.jpg\" alt=\"Modified stackoverflow.com\"></p>\n\n<p>I think you should now able to hackyourself together a piece of code which fits your problem.</p>\n\n<p>Example</p>\n\n<pre><code>// Match the head end\nvar oRegEx = /(&lt;\\/head&gt;)/gi;\n// replace with new script\noBody = oBody.replace(oRegEx, \"&lt;script type='text/javascript' src='http://url/myscript.js'&gt;&lt;/script&gt;$1\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                }
            ],
            "body": "<p>I was thinking of using Fiddler for the following purpose... </p>\n\n<p>I have a JavaScript based service I want to demonstrate to potential clients. In order to show them what their website could look like if they install (i.e. include) my script, I want to set up Fiddler on my PC, so that when fetching the client's website, the</p>\n\n<pre><code>&lt;script type=\"text/JavaScript\" src=\"myscript.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>line will be included in the HTML <code>&lt;head&gt;</code> section. </p>\n\n<p>Can this be easily done with Fiddler? Could someone point me to where I may find the documentation covering that, if it is? </p>\n\n<p>Thanks!</p>\n\n<p>----Update----</p>\n\n<p>For the time being I have resorted to using a BHO to add my script to the page. I use execScript(), upon onDocumentComplete, to run a simple piece of JavaScript which appends the .js file I need to the page. But EricLaw's pointers and jitter's answer seem like the way to go for a more complete (and elegant) way to do what I need.</p>\n\n<p>If someone is interested I could upload the BHO code here.\n-Thanks!</p>\n",
            "last_activity_date": 1401276118,
            "question_id": 1933934,
            "score": 17,
            "tags": [
                "javascript",
                "fiddler"
            ],
            "title": "Injecting JavaScript into head element of website using Fiddler"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Do you particularly care which line-endings are used? Why not just make the Java convert \"\\r\\n\" to \"\\n\"? (Note that \"\\r\\n\" is the Windows style; \"\\n\" is the Unix style.)</p>\n\n<p>Alternatively, do the reverse when checking the length within the JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Are you limiting it to 2000 chars so it fits inside an nvarchar(2000) column in a database? Otherwise maybe just allow a 2% overrun to be flexible on the Java side.</p>\n\n<p>And Java should be using Unicode UTF16 to represent Strings. That <code>/r</code> must have got in there somewhere else, maybe a conversion in the web browser when submitting? Have you tried different browsers? On different platforms? You might just have to strip out the <code>/r</code>s.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This isn't really a JavaScript (or Java) problem - both layers report an accurate length for the string they are dealing with. The problem in your case is that the string gets transformed during the HTTP transmission.</p>\n\n<p>If you absolutely must ensure that the string doesn't exceed a certain length, you can mimic this transformation on the client by replacing every instance of \"\\n\" with \"\\n\\r\" - but only for length verification purposes:</p>\n\n<pre><code>textarea.value.replace(/\\n/g, \"\\r\\n\").length\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>I've got a JSP page with a piece of Javascript validation code which limits to a certain amount of characters on submit. I'm using a <code>&lt;textarea&gt;</code> so I can't simply use a length attribute like in a <code>&lt;input type=\"text\"&gt;</code>.</p>\n\n<p>I use <code>document.getElementById(\"text\").value.length</code> to get the string length. I'm running Firefox 3.0 on Windows (but I've tested this behavior with IE 6 also). The form gets submitted to a J2EE servlet. In my Java servlet the string length of the parameter is larger than 2000!</p>\n\n<p>I've noticed that this can easily be reproduced by adding carriage returns in the <code>&lt;textarea&gt;</code>. I've used Firebug to assert the length of the <code>&lt;textare&gt;</code> and it really is 2000 characters long. On the Java side though, the carriage returns get converted to UNIX style (<code>\\r\\n</code>, instead of <code>\\n</code>), thus the string length differs!</p>\n\n<p>Am I missing something obvious here or what ? If not, how would you reliably (cross-platform / browser) make sure that the <code>&lt;textarea&gt;</code> is limited. </p>\n",
            "last_activity_date": 1409656584,
            "question_id": 462348,
            "score": 17,
            "tags": [
                "java",
                "javascript",
                "string",
                "carriage-return"
            ],
            "title": "String length differs from Javascript to Java code"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>No, and if there was it would be browser dependent.\nWhat kind of code are you trying to run when the user closes the page?\nIs it to logout the user?\nThen the user would not be logged out if the browser crashes or the network connection breaks (and probably not if the computer goes to sleep/hibernation mode).</p>\n\n<p>If it is for logout-purposes you should probably use a timestamp variable at the server that gets updated with every request (or use a ajax-ping), and logout the user if it hasn't been seen for a specified time.</p>\n\n<p>Update: Found <a href=\"http://stackoverflow.com/questions/181189/to-detect-if-the-user-is-closing-the-ie-browser-apart-from-onunload-event-as-it\">this answer</a> here at stackoverflow.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>I use a method of doing keyboard \"sniffing\", in that it looks for keydown's of \"F5\", \"ctrl+r\", \"alt-f4\", \"backspace\" and others, and if it finds them flowing through the keyboard event queue, it sets boolean variables appropriately to trap that status... then I use a \"onbeforeunload\" function handler, which tests against those boolean status variables to decide what to do.</p>\n\n<p>You can even shut down various keyboard strokes (like \"ctrl+n\" or \"F1\" for instance) by using preventDefault(), bubbles=false and returnValue=false in your keyboard handling.</p>\n\n<p>This stuff is not for the faint of heart, but its certainly doable with some persistence and lots of cross browser testing!</p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>Yes, there is a solution! </p>\n\n<p>I've designed a solution based on onBeforeUnload+onLoad events, HTML5 local storage and client/server communication. See the details on <a href=\"http://stackoverflow.com/a/13916847/698168\">http://stackoverflow.com/a/13916847/698168</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am currently looking at the \"unload\" event of a window to try to determine how the \"unload\" event was triggered, but am having little success. Is there a way to determine how the javascript event was triggered?</p>\n\n<ul>\n<li>Page Refresh</li>\n<li>Back Button (or navigate away from the page)</li>\n<li>Closing the Browser</li>\n</ul>\n\n<p>Essentially I need to execute some code only when the browser window is being closed, not refreshed or navigated away from.</p>\n\n<p><strong>Purpose:</strong> When a customer does an update of our software, the update will redirect their first Internet request to an offer page. There is a button for a \"Do Not Bother\" option, but some users will simply close their browser. Upon closing the browser, I need to duplicate the \"Do Not Bother\" functionality so the user no longer gets redirected to the offer page. Simply attaching to the \"unload\" event will not work due to the different ways of leaving a page.</p>\n",
            "last_activity_date": 1359374959,
            "question_id": 291553,
            "score": 17,
            "tags": [
                "javascript",
                "events"
            ],
            "title": "Is there a way in javascript to detect if the unload event is caused via a refresh, the back button, or closing the browser?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You will need to use Javascript to do this.</p>\n\n<p>But just adjust the box class to adjust the margins of all the boxes at once.</p>\n\n<pre><code>// Calculate how many boxes can fit into one row\nvar columns = Math.floor(parentWidth / boxWidth);\n\n// Calculate the space to distribute the boxes evenly\nvar space = (parentWidth - (boxWidth * columns)) / columns;\n\n$('.boxClass').css('margin', space / 2);\n</code></pre>\n\n<p>-</p>\n\n<p>Example: <a href=\"http://jsfiddle.net/VLr45/1/\">http://jsfiddle.net/VLr45/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<blockquote>\n  <p>So my question is: can I realize something like this without\n  JavaScript?</p>\n</blockquote>\n\n<p>I went through the same exercise recently and finally gave up and used JavaScript. Even abandoning IE 7 and 8 (which isn't practical) I couldn't find a pure CSS solution. I guess you could hack together a long list of media queries to accomplish this in a limited fashion.</p>\n\n<p>I ended up writing a little (about 1K minified) library which handles width, height, proportionate scaling, max widths, scrolling, consistent margins and padding, etc.</p>\n\n<p>Here is a rough example using my own code: <a href=\"http://jsfiddle.net/CmZju/2/\" rel=\"nofollow\">http://jsfiddle.net/CmZju/2/</a>. I've placed a couple hundred elements in the example.</p>\n\n<blockquote>\n  <p>I would prefer a CSS-only solution, because I will have possibly up to\n  hundreds of divs on one page.</p>\n</blockquote>\n\n<p>The layout engine of the browser will have to perform the same (or similar) calculations that you do. Granted, it is highly optimized but I would test your JS solution on a few old PCs and a few mobile devices before discounting it as too slow. </p>\n\n<p>It looks like you are using absolute positioning. My informal tests show absolute layout to be significantly faster than float calculation. This makes sense if you think about the work that the browser must do to calculate a relatively sized and floated item, versus just drawing an element at a specific place with specific dimensions.</p>\n\n<p>If you wanted to really look at optimizing performance, you could only manipulate the content that was visible. This would be <em>much</em> more difficult than just resizing everything and would probably only be relevant if you had thousands of items on a page.</p>\n\n<p>If you end up going the script route, you might want to take a look at <a href=\"http://masonry.desandro.com/\" rel=\"nofollow\">jQuery Masonry</a> for additional ideas. I have heard good things about it and it gave me some good ideas for my own library.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Perhaps <a href=\"http://masonry.desandro.com/\" rel=\"nofollow\">MASONRY</a> can help with the placement?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The <em>closest</em> pure CSS solution is based on <code>text-align: justify</code>.</p>\n\n<p>Here are two of my answers showing the technique:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/6865194/fluid-width-with-equally-spaced-divs/6880421#6880421\">Fluid width with equally spaced DIVs</a></li>\n<li><a href=\"http://stackoverflow.com/questions/7041927/how-to-set-auto-margin-boxes-in-flexible-width-design-using-css/7042563#7042563\">How to set auto-margin boxes in flexible-width design using CSS?</a></li>\n</ul>\n\n<p>Here's a demo using your HTML/CSS: <a href=\"http://jsfiddle.net/thirtydot/5CJ5e/\">http://jsfiddle.net/thirtydot/5CJ5e/</a> (or <a href=\"http://jsfiddle.net/thirtydot/5CJ5e/show/\">fullscreen</a>)</p>\n\n<p>There's a difference in the way your JavaScript and this CSS handles the last row if there's a different number of boxes compared to the other rows.</p>\n\n<p>Your JavaScript does this: </p>\n\n<p><img src=\"http://i.stack.imgur.com/tjI5i.png\" alt=\"\"></p>\n\n<p>My CSS does this:</p>\n\n<p><img src=\"http://i.stack.imgur.com/k4Ea2.png\" alt=\"\"></p>\n\n<p>If what the CSS does with a different number of boxes on the last row is unacceptable, you <em>could</em> add some extra invisible boxes to complete the row:</p>\n\n<p><a href=\"http://jsfiddle.net/thirtydot/5CJ5e/1/\">http://jsfiddle.net/thirtydot/5CJ5e/1/</a> (or <a href=\"http://jsfiddle.net/thirtydot/5CJ5e/1/show/\">fullscreen</a>)</p>\n\n<p>Doing this has the issue that the invisible boxes increase the height of the containing element. If this is a problem, I can't think of a way to fix it without using a little JavaScript:</p>\n\n<p><a href=\"http://jsfiddle.net/thirtydot/5CJ5e/2/\">http://jsfiddle.net/thirtydot/5CJ5e/2/</a> (or <a href=\"http://jsfiddle.net/thirtydot/5CJ5e/2/show/\">fullscreen</a>)</p>\n\n<p>Of course, since JavaScript is now being used, you might as well use it to add the invisible boxes in the first place (instead of sullying the HTML):</p>\n\n<p><a href=\"http://jsfiddle.net/thirtydot/5CJ5e/5/\">http://jsfiddle.net/thirtydot/5CJ5e/5/</a> (or <a href=\"http://jsfiddle.net/thirtydot/5CJ5e/5/show/\">fullscreen</a>)</p>\n\n<p><sub>(<a href=\"http://jsfiddle.net/thirtydot/5CJ5e/4/\">I also wrote a more complicated JavaScript fix</a> for this in an earlier revision, before the idea of invisible boxes was brought to me. There should be no reason to use my old fix now.)</sub></p>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>I have multiple divs with a fixed width and height (think about some sort of catalog view with article pictures). Now I want to show them similar to the behavior of float:left. This ensures that the larger your browser window is, the more divs are shown in one row.</p>\n\n<p>The downside of the float:left solution is, that there is a big white gap on the right side, until another div will fit. Now I have the job to distribute the divs evenly one the page, and instead of a big white gap on the right side, there should be evenly distributed gaps between the single divs.</p>\n\n<p>A solution in JavaScript is easy: <a href=\"http://dl.dropbox.com/u/2719942/css/columns.html\">http://dl.dropbox.com/u/2719942/css/columns.html</a></p>\n\n<p>You can see, if you resize the browser window, it behaves similar to float:left, but the space is evenly distributed between the boxes. The column and row count is dynamically calculated with JavaScript:</p>\n\n<pre><code>  function updateLayout() {\n    var boxes = document.getElementsByClassName('box');\n    var boxWidth = boxes[0].clientWidth;\n    var boxHeight = boxes[0].clientHeight;\n    var parentWidth = boxes[0].parentElement.clientWidth;\n\n    // Calculate how many boxes can fit into one row\n    var columns = Math.floor(parentWidth / boxWidth);\n\n    // Calculate the space to distribute the boxes evenly\n    var space = (parentWidth - (boxWidth * columns)) / columns;\n\n    // Now let's reorder the boxes to their new positions\n    var col = 0;\n    var row = 0;\n    for (var i = 0; i &lt; boxes.length; i++) {\n      boxes[i].style.left = (col * (boxWidth + space)) + \"px\";\n      boxes[i].style.top = (row * boxHeight) + \"px\";\n\n      if (++col &gt;= columns) {\n        col = 0;\n        row++;\n      }\n    }\n  }\n</code></pre>\n\n<p>Now I wonder if there is a solution without JavaScript? I would prefer a CSS-only solution, because I will have possibly up to hundreds of divs on one page.</p>\n\n<p>I looked into <a href=\"http://www.w3.org/TR/css3-flexbox/\">CSS3 Flexible Box Layout</a>, but this seems to be only useful for fixed column layouts. In my example, the column count gets calculated dynamically. Then I tried <a href=\"http://www.w3.org/TR/css3-multicol/\">CSS3 Multi-column Layout</a>, which I could get something similar working, but the divs are aligned vertically, cut off in the inside, and the browser support isn't there yet. This seems more useful for text, but in my case I have fixed divs with pictures, that shouldn't get cut off.</p>\n\n<p>So my question is: can I realize something like this without JavaScript?</p>\n",
            "last_activity_date": 1336768077,
            "question_id": 10548417,
            "score": 16,
            "tags": [
                "javascript",
                "html",
                "css",
                "css3"
            ],
            "title": "How to distribute floated elements evenly with a dynamic column and row count in CSS?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<ul>\n<li>shorter</li>\n<li>arguments of Array are confusing (e.g. <code>new Array(10)</code> and <code>new Array(\"10\")</code> are quite different)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>It's the same thing. The only reason to use <code>[]</code> over <code>new Array()</code> is that it's shorter.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>shorter and cleaner.  Should use {} to create objects as well.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Both can be used as good. This discussion/confusion has started since Javascript guru <a href=\"http://en.wikipedia.org/wiki/Douglas_Crockford\" rel=\"nofollow\">Douglas Crockford</a> told that <a href=\"http://yuiblog.com/blog/2006/11/13/javascript-we-hardly-new-ya/\" rel=\"nofollow\">the <code>new</code> keyword is considered harmful</a>. Since then it was considered \"good practice/technique\" to leave out the <code>new</code> keyword to avoid unexpected results/behaviour. Also see this <a href=\"http://stackoverflow.com/questions/383402/is-javascript-s-new-keyword-considered-harmful\">Stackoverflow topic</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The main reason to use <code>[]</code> as opposed to <code>new Array()</code> is the arguments you pass. When you use <code>new Array(10)</code>, you create an empty array with 10 elements, but when you use <code>[10]</code>, you create an array with one element who's value is <code>10</code>. Since this is generally the information most programmers want to pass to an array (as arrays are dynamic in Javascript), this is generally considered the best practice. Also <code>new Array(10,20)</code> works differently than <code>new Array(10)</code>. In this case you have the same effect as <code>[10,20]</code> which is to create an array with 2 elements, 10 and 20. Since this is... strange at best... it's easy to accidentally create an empty array by passing <code>new Array()</code> only one value. <code>[]</code> always has the same effect, so I'd also recommend sticking with it.</p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>It scores you less symbols in code golf.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Three reasons (the first two expanded upon in other answers):</p>\n\n<ol>\n<li>Shorter;</li>\n<li>Allows creation of arrays with one element, as detailed in Chibu's answer;</li>\n<li>Works even in the unlikely event of the <code>Array</code> constructor having been overwritten.</li>\n</ol>\n\n<p>Non-reasons:</p>\n\n<ol>\n<li>Avoidance of the <code>new</code> operator. Don't be afraid of <code>new</code> just because Douglas Crockford was once bitten by it. It's extremely useful.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>What are the advantages of using </p>\n\n<pre><code>var foo = []; \n</code></pre>\n\n<p>over using</p>\n\n<pre><code>var bar = new Array();\n</code></pre>\n\n<p>i've been told to use [] over new Array() but never with much explanation</p>\n",
            "last_activity_date": 1269601496,
            "question_id": 2517032,
            "score": 16,
            "tags": [
                "javascript"
            ],
            "title": "Advantages of using [] over new Array() in JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Javascript <code>language keywords</code> or <code>reserved keywords</code> are always surrounded by quotes in there.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Those are Javascript reserved words, and (though not really necessary) the syntax of the language requires that they be quoted.</p>\n\n<p>Strictly speaking, pure \"JSON\" notation requires that <em>all</em> of the \"key\" strings be quoted. Javascript itself however is OK with keys that are valid identifiers (but not reserved words) being unquoted.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p><code>for</code> and <code>class</code> are language keywords. Your interpreter would throw a SyntaxError when those are unquoted.</p>\n\n<p>See section 7.6.1.1 in the Spec you linked to.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Javascript has a lot of <code>reserved words</code> that are not actually used by the language which I think were reserved for possible future use. <code>Class</code> is one of these even though Javascript does not actually use classes. Another is <code>Goto</code> and there's absolutely no chance of that ever being used. The result, however, is that if you want to use these as a json key then it has to be quoted. Strictly speaking you should probably always quote your keys just to avoid the possibility of falling foul of the javascript unused reserved word trap (mind you - I never do).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a reason at this point (two plus years later) to quote object literal properties. If one wants to minify their code using the Closure Compiler they may need to make the properties accessible to other source files. In that case, they will want to avoid having symbols renamed by the compiler. By quoting the property name, the Closure Compiler will not minify (rename) them.</p>\n\n<p>See: <a href=\"https://developers.google.com/closure/compiler/docs/api-tutorial3\" rel=\"nofollow\">Removal of code you want to keep</a></p>\n\n<p>(This applies to at least the ADVANCED_OPTIMIZATIONS setting.)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I see this all the time: object literals declared such that some keys are surrounded with quotes and others are not. An example from jQuery 1.4.2:</p>\n\n<pre><code>jQuery.props = {\n    \"for\": \"htmlFor\",\n    \"class\": \"className\",\n    readonly: \"readOnly\",\n    maxlength: \"maxLength\",\n    cellspacing: \"cellSpacing\",\n    rowspan: \"rowSpan\",\n    colspan: \"colSpan\",\n    tabindex: \"tabIndex\",\n    usemap: \"useMap\",\n    frameborder: \"frameBorder\"\n};\n</code></pre>\n\n<p><strong>What is the significance of wrapping the first two property keys (</strong><code>for</code> and <code>class</code><strong>) with quotes, while leaving the others quote-less? Are there any differences at all?</strong></p>\n\n<p>I've been poking around the <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">ECMAScript 5 specification</a>; all I've been able to find is [<em>Note 6 of Section 15.12.3, emphasis mine</em>]:</p>\n\n<blockquote>\n  <p>NOTE 6     An object is rendered as an\n  opening left brace followed by zero or\n  more properties, separated with\n  commas, closed with a right brace. <strong>A\n  property is a quoted String\n  representing the key or property name</strong>,\n  a colon, and then the stringified\n  property value. An array is rendered\n  as an opening left bracket followed by\n  zero or more values, separated with\n  commas, closed with a right bracket.</p>\n</blockquote>\n\n<p>However, this refers only to the <em>stringification</em> of JSON.</p>\n",
            "last_activity_date": 1351269052,
            "question_id": 2348867,
            "score": 16,
            "tags": [
                "javascript",
                "json",
                "quotes",
                "object-literal"
            ],
            "title": "Why are some object-literal properties quoted and others not?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It turns out that mysql_real_escape_string() is pretty trivial. <a href=\"http://php.net/manual/en/function.mysql-real-escape-string.php\">According to the documentation</a>: </p>\n\n<blockquote>\n  <p><strong>mysql_real_escape_string()</strong> calls MySQL's library function mysql_real_escape_string, which prepends backslashes to the following characters: \\x00, \\n, \\r, \\, ', \" and \\x1a.</p>\n</blockquote>\n\n<p>Sounds pretty simple, actually. You could do something like this:</p>\n\n<pre><code>function mysql_real_escape_string (str) {\n    return str.replace(/[\\0\\x08\\x09\\x1a\\n\\r\"'\\\\\\%]/g, function (char) {\n        switch (char) {\n            case \"\\0\":\n                return \"\\\\0\";\n            case \"\\x08\":\n                return \"\\\\b\";\n            case \"\\x09\":\n                return \"\\\\t\";\n            case \"\\x1a\":\n                return \"\\\\z\";\n            case \"\\n\":\n                return \"\\\\n\";\n            case \"\\r\":\n                return \"\\\\r\";\n            case \"\\\"\":\n            case \"'\":\n            case \"\\\\\":\n            case \"%\":\n                return \"\\\\\"+char; // prepends a backslash to backslash, percent,\n                                  // and double/single quotes\n        }\n    });\n}\n</code></pre>\n\n<p><strong>NOTE</strong>: I haven't run this through any sort of unit test or security test, but it does seem to work -- and, just as an added bonus, it escapes tabs, backspaces, and '%' so it can also be used in LIKE queries, as per <a href=\"https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet#MySQL_Escaping\">OWASP's recommendations</a> (unlike the PHP original).</p>\n\n<p>I do know that <code>mysql_real_escape_string()</code> is character-set-aware, but I'm not sure what benefit that adds.</p>\n\n<p>There's a good discussion of these issues <a href=\"http://stackoverflow.com/questions/229889/sanitizing-mysql-user-parameters\">over here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>In case someone is looking for, the escapeString() in <a href=\"http://www.cubrid.org\" rel=\"nofollow\">CUBRID RDBMS</a> works as follows:</p>\n\n<pre><code>var _escapeString = function (val) {\n  val = val.replace(/[\\0\\n\\r\\b\\t\\\\'\"\\x1a]/g, function (s) {\n    switch (s) {\n      case \"\\0\":\n        return \"\\\\0\";\n      case \"\\n\":\n        return \"\\\\n\";\n      case \"\\r\":\n        return \"\\\\r\";\n      case \"\\b\":\n        return \"\\\\b\";\n      case \"\\t\":\n        return \"\\\\t\";\n      case \"\\x1a\":\n        return \"\\\\Z\";\n      case \"'\":\n        return \"''\";\n      case '\"':\n        return '\"\"';\n      default:\n        return \"\\\\\" + s;\n    }\n  });\n\n  return val;\n};\n</code></pre>\n\n<p>This is an excerpt from <a href=\"https://github.com/CUBRID/node-cubrid/blob/master/src/utils/Helpers.js#L167\" rel=\"nofollow\">CUBRID Node.js driver</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you are playing with CJK characters <a href=\"http://en.wikipedia.org/wiki/CJK_characters\" rel=\"nofollow\">http://en.wikipedia.org/wiki/CJK_characters</a> or some special emotional icons of iOS/Android/Other mobiles ... such as \"\ufffd\u2021\u2030\u2122\u00a9\udbba\udf60\" or decodeURIComponent(\"\\xF3\\xBE\\xAD\\xA0\").</p>\n\n<p>You will need to set your my.cnf like this</p>\n\n<pre><code>[client]\ndefault-character-set = utf8mb4\n\n[mysqld]\ncharacter-set-server = utf8mb4\nskip-character-set-client-handshake\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there away to make a javascript string being passed to NodeJS friendly for MySQL? I'm trying to pass an email address to my NodeJS server and query into MySQL database. When doing regular text such as a username works fine, but the email address doesn't. Using escape clearly is not the right answer as it is not meant for SQL insertion. I'm assuming I need something on the lines of the PHP function <code>mysql_real_escape_string()</code>. </p>\n",
            "last_activity_date": 1421148795,
            "question_id": 7744912,
            "score": 15,
            "tags": [
                "javascript",
                "sql",
                "string",
                "node.js",
                "escaping"
            ],
            "title": "Making a javascript string sql friendly"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The id is supposed to be unique, use the attribute \"name\" and \"getelementsbyname\" instead, and you'll have your array.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It is illegal to have multiple elements with the same <code>id</code>. The <code>id</code> is used as an individual identifier. For groups of elements, use <code>class</code>, and <code>getElementsByClassName</code> instead.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The <a href=\"http://www.w3.org/TR/html401/struct/global.html#h-7.5.2\">HTML spec</a> required the <code>ID</code> attribute to be unique in a page:</p>\n\n<blockquote>\n  <p>This attribute assigns a name to an element. This name must be unique in a document.</p>\n</blockquote>\n\n<p>If you have several elements with the same ID, your HTML is not valid.</p>\n\n<p>So, <code>getElementById()</code> should only ever return one element. You can't make it return multiple elements.</p>\n\n<p>There are a couple of related functions that will return an array of elements - <a href=\"http://www.w3schools.com/jsref/met_doc_getelementsbyname.asp\"><code>getElementsByName</code></a>, or <a href=\"https://developer.mozilla.org/en/DOM/document.getElementsByClassName\"><code>getElementsByClassName</code></a> that may be more suited to your requirements, though <code>getElementsByClassName</code> is new to HTML 5, which is still in draft.</p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>You shouldn't do that and even if it's possible it's not reliable and prone to cause issues.</p>\n\n<p>Reason being that an ID is unique on the page. i.e. you cannot have more than 1 element on the page with the same ID.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Why you would want to do this is beyond me, since id is supposed to be unique in a document.  However, browsers tend to be quite lax on this, so if you really must use getElementById for this purpose, you can do it like this:</p>\n\n<pre><code>function whywouldyoudothis() {\n    var n = document.getElementById(\"non-unique-id\");\n    var a = [];\n    var i;\n    while(n) {\n        a.push(n);\n        n.id = \"a-different-id\";\n        n = document.getElementById(\"non-unique-id\");\n    }\n\n    for(i = 0;i &lt; a.length; ++i) {\n        a[i].id = \"non-unique-id\";      \n    }\n    return a;\n}\n</code></pre>\n\n<p>However, this is silly, and I wouldn't trust this to work on all browsers forever. Although the HTML DOM spec defines id as readwrite, a validating browser will complain if faced with more than one element with the same id.</p>\n\n<p>EDIT: Given a valid document, the same effect could be achieved thus:</p>\n\n<pre><code>function getElementsById(id) {\n  return [document.getElementById(id)];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>How can I get a collection of elements by specifying their <code>id</code> attribute?  I want to get the name of all the tags which has same <code>id</code> in the html.</p>\n\n<p>I want to use ONLY <code>getElementById()</code> to get an array of elements. How can I do this?</p>\n",
            "last_activity_date": 1340948701,
            "question_id": 3607291,
            "score": 15,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript and getElementById for multiple elements with the same ID"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You cannot reuse the piped data, that has been sent already. And you cannot pipe a stream after its 'end'. So you cannot process same stream twice, and need two streams. You have to create duplicate of the stream by piping it to two streams. You can create a simple stream with a PassThrough stream, it simply passes the input to the output.</p>\n\n<pre><code>spawn = require('child_process').spawn;\npass = require('stream').PassThrough;\n\na = spawn('echo', ['hi user']);\nb = new pass;\nc = new pass;\n\na.stdout.pipe(b);\na.stdout.pipe(c);\n\ncount = 0;\nb.on('data', function(chunk) { count += chunk.length; });\nb.on('end', function() { console.log(count); c.pipe(process.stdout); });\n</code></pre>\n\n<p>Output</p>\n\n<pre><code>8\nhi user\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<p>I need to run two commands in series that need to read data from the same stream.\nAfter piping a stream into another the buffer is emptied so i can't read data from that stream again so this doesn't work:</p>\n\n<pre><code>var spawn = require('child_process').spawn;\nvar fs = require('fs');\nvar request = require('request');\n\nvar inputStream = request('http://placehold.it/640x360');\nvar identify = spawn('identify',['-']);\n\ninputStream.pipe(identify.stdin);\n\nvar chunks = [];\nidentify.stdout.on('data',function(chunk) {\n  chunks.push(chunk);\n});\n\nidentify.stdout.on('end',function() {\n  var size = getSize(Buffer.concat(chunks)); //width\n  var convert = spawn('convert',['-','-scale',size * 0.5,'png:-']);\n  inputStream.pipe(convert.stdin);\n  convert.stdout.pipe(fs.createWriteStream('half.png'));\n});\n\nfunction getSize(buffer){\n  return parseInt(buffer.toString().split(' ')[2].split('x')[0]);\n}\n</code></pre>\n\n<p><strong>Request</strong> complains about this</p>\n\n<pre><code>Error: You cannot pipe after data has been emitted from the response.\n</code></pre>\n\n<p>and changing the <strong>inputStream</strong> to <code>fs.createWriteStream</code> yields the same issue of course.\nI don't want to write into a file but <em>reuse</em> in some way the stream that <strong>request</strong> produces (or any other for that matter).</p>\n\n<p>Is there a way to reuse a readable stream once it finishes piping?\nWhat would be the best way to accomplish something like the above example?</p>\n",
            "last_activity_date": 1402245520,
            "question_id": 19553837,
            "score": 14,
            "tags": [
                "javascript",
                "node.js",
                "stream",
                "pipe"
            ],
            "title": "Node.js Piping the same stream into multiple (writable) targets"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>after a bit of debugging I found that the error is this:</p>\n\n<p><code>\nError: [$interpolate:noconcat] Error while interpolating: <a href=\"http://www.thebigdot.com/\" rel=\"nofollow\">http://www.thebigdot.com/</a>{{file}}\nStrict Contextual Escaping disallows interpolations that concatenate multiple expressions when a trusted value is required.  See <a href=\"http://docs.angularjs.org/api/ng.%24sce\" rel=\"nofollow\">http://docs.angularjs.org/api/ng.$sce</a> </p>\n\n<p><a href=\"http://errors.angularjs.org/1.2.0-rc.2/\" rel=\"nofollow\">http://errors.angularjs.org/1.2.0-rc.2/</a>$interpolate/noconcat?p0=http%3A%2F%2Fwww.thebigdot.com%2F%7B%7Bfile%7D%7D\n    at <a href=\"http://code.angularjs.org/1.2.0-rc.2/angular.js:78:12\" rel=\"nofollow\">http://code.angularjs.org/1.2.0-rc.2/angular.js:78:12</a>\n    at $interpolate (<a href=\"http://code.angularjs.org/1.2.0-rc.2/angular.js:6953:17\" rel=\"nofollow\">http://code.angularjs.org/1.2.0-rc.2/angular.js:6953:17</a>)\n    at attrInterpolateLinkFn (<a href=\"http://code.angularjs.org/1.2.0-rc.2/angular.js:5367:27\" rel=\"nofollow\">http://code.angularjs.org/1.2.0-rc.2/angular.js:5367:27</a>)\n    at nodeLinkFn (<a href=\"http://code.angularjs.org/1.2.0-rc.2/angular.js:5121:13\" rel=\"nofollow\">http://code.angularjs.org/1.2.0-rc.2/angular.js:5121:13</a>)\n    at compositeLinkFn (<a href=\"http://code.angularjs.org/1.2.0-rc.2/angular.js:4640:15\" rel=\"nofollow\">http://code.angularjs.org/1.2.0-rc.2/angular.js:4640:15</a>)\n    at nodeLinkFn (<a href=\"http://code.angularjs.org/1.2.0-rc.2/angular.js:5115:24\" rel=\"nofollow\">http://code.angularjs.org/1.2.0-rc.2/angular.js:5115:24</a>)\n    at compositeLinkFn (<a href=\"http://code.angularjs.org/1.2.0-rc.2/angular.js:4640:15\" rel=\"nofollow\">http://code.angularjs.org/1.2.0-rc.2/angular.js:4640:15</a>)\n    at compositeLinkFn (<a href=\"http://code.angularjs.org/1.2.0-rc.2/angular.js:4643:13\" rel=\"nofollow\">http://code.angularjs.org/1.2.0-rc.2/angular.js:4643:13</a>)\n    at publicLinkFn (<a href=\"http://code.angularjs.org/1.2.0-rc.2/angular.js:4549:30\" rel=\"nofollow\">http://code.angularjs.org/1.2.0-rc.2/angular.js:4549:30</a>)\n    at <a href=\"http://code.angularjs.org/1.2.0-rc.2/angular.js:1157:27\" rel=\"nofollow\">http://code.angularjs.org/1.2.0-rc.2/angular.js:1157:27</a>  angular.js:7861\n</code></p>\n\n<p>this article explains what is going on and how to disable the Strict Contextual Escaping: <a href=\"http://docs.angularjs.org/api/ng.%24sce\" rel=\"nofollow\">http://docs.angularjs.org/api/ng.$sce</a></p>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>Angular 1.2 ships with Strict Contextual Escaping (SCE) enabled by default. You need to tweak your code slightly to make it work.</p>\n\n<h3>HTML</h3>\n\n<p>Change the markup so that the <code>ng-src</code> binds to a variable and not a URL + variable as you had it setup before:</p>\n\n<pre><code>&lt;video controls ng-src=\"{{videoUrl}}\"&gt;&lt;/video&gt;\n</code></pre>\n\n<h3>JavaScript</h3>\n\n<p>Add <code>$sce</code> to inject the SCE provider and use the <code>$sce.trustAsResourceUrl</code> method to set <code>videoUrl</code>.</p>\n\n<pre><code>function MyControl($scope, $sce) {\n    var videoUrl = 'http://www.thebigdot.com/1234.mp4';\n    $scope.videoUrl = $sce.trustAsResourceUrl(videoUrl);\n}\n</code></pre>\n\n<p>Here's a <a href=\"http://jsbin.com/arEYuYo/2/edit?html,js,output\">JS Bin demo</a> of this setup in action.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>I did simple hack before I found previous post. Somebody could found this useful</p>\n\n<p>HTML :</p>\n\n<pre><code>&lt;div id=\"videoTag\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Controller.js</p>\n\n<pre><code>document.getElementById(\"videoTag\").innerHTML = \"&lt;video width='auto' height='auto' controls autoplay src=\" + $scope.details.preview + \"&gt;Your browser does not support video&lt;/video&gt;\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I build this directive</p>\n\n<pre><code>app.directive('loadAudio', function($parse) {\n  return {\n    restrict: 'EA',\n    scope: {\n        source: '=',       \n    },\n    template: '&lt;audio /&gt;',\n    link: function(scope, iElement, iAttrs) {\n\n      scope.$watch('source', function(value) {\n        var audio = iElement.find('audio');\n\n        audio.attr('src',  value);\n      }, true);\n    }\n  }\n});\n</code></pre>\n\n<p>And next is what I write on the template</p>\n\n<pre><code>&lt;load-audio source=\"your_src\" &gt;&lt;/load-audio&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to implement a video element in an angular JS app and the ng-src won't read the scope variable</p>\n\n<p>I'm using 1.2.0-rc.2</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html ng-app=\"ngView\"&gt;\n\n&lt;head&gt;\n   &lt;script src=\"http://code.angularjs.org/1.2.0-rc.2/angular.min.js\"&gt;&lt;/script&gt;\n\n   &lt;script&gt;\n   var app = angular.module('ngView', []);\n   function MyControl($scope){\n      $scope.file = '1234.mp4';\n   }\n  &lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body ng-controller=\"MyControl\"&gt;\n      &lt;video controls  ng-src=\"http://www.thebigdot.com/{{file}}\"&gt;&lt;/video&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>If I use a much older version AngularJS lib, it works. </p>\n\n<pre><code>cdnjs.cloudflare.com/ajax/libs/angular.js/1.0.3/angular.min.js (works)\n</code></pre>\n\n<p>Is this a bug in the latest release or has it been disabled on purpose?  What is the work around ?</p>\n",
            "last_activity_date": 1412431852,
            "question_id": 19372300,
            "score": 14,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Angular JS dynamic ng-src not working in 1.2.0-rc.2"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Since no one answered yet, i have created a <a href=\"http://jsfiddle.net/mavilein/2VfJK/1/\">fiddle</a> showing how i would to this.</p>\n\n<p>This is the basic approach:</p>\n\n<ol>\n<li>I would setup a controller with a fresh (== empty) model.</li>\n<li>Use <strong>bindings</strong> to synchronize the values of form elements to the model of the controller.</li>\n<li>Create a action that takes the updated model and does whatever you want with it (<strong>this replaces the traditional form submit</strong>).</li>\n</ol>\n\n<p><strong>So the approach is fundamentally different from the traditional way of handling forms this way:</strong></p>\n\n<ol>\n<li>There is <strong>no HTML form element</strong>, since it is not needed.</li>\n<li>The data is not submitted automatically to the server, instead you would  <strong>send/submit it manually via javascript logic</strong>. Imho this is an advantage as you could perform additional logic before or after submitting the data to the server.</li>\n<li>This <strong>plays nicely with REST-API approaches</strong> like ember-date or ember-epf :-)</li>\n</ol>\n\n<p>The example shows a form (just conceptually, as there is no HTML form element) to enter a first and last name. The entered values are synced to the model and you can can \"perform a submit\".</p>\n\n<p><strong>The JS code:</strong></p>\n\n<pre><code>App = Ember.Application.create({});\n\nApp.Person = Ember.Object.extend({\n    firstName : \"\",\n    lastName : \"\"\n});\n\nApp.IndexRoute = Ember.Route.extend({\n  model: function(){\n      return App.Person.create()\n  },\n    setupController : function(controller, model){\n        controller.set(\"model\", model);\n    }\n});\n\nApp.IndexController = Ember.ObjectController.extend({\n    submitAction : function(){\n        // here you could perform your actions like persisting to the server or so\n        alert(\"now we can submit the model:\" + this.get(\"model\"));\n    }\n});\n</code></pre>\n\n<p><strong>The template showing the use of value bindings:</strong></p>\n\n<pre><code>&lt;script type=\"text/x-handlebars\" data-template-name=\"index\"&gt;\n  &lt;h2&gt;Index Content:&lt;/h2&gt;\n  {{input valueBinding=\"model.firstName\"}}\n  {{input valueBinding=\"model.lastName\"}}\n    &lt;button {{action submitAction target=\"controller\"}}&gt;Pseudo Submit&lt;/button&gt;\n  &lt;p&gt;{{model.firstName}} - {{model.lastName}}&lt;/p&gt;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p>I have a form with various controls. When the submit button is pushed an ajax request is sent to the server which answers with some json data I want to display properly. This is a one-off thing, no bindings, etc needed, the data is read-once and discarded afterwards. I can think of some ways to do this combining views and jquery but what is the <strong>proper</strong> way to do this in Ember.js?</p>\n\n<p>More specifically:</p>\n\n<p>1) How do I communicate the form parameters from the view to the controller that is going to handle the submission event?</p>\n\n<p>2) If I were to create a route to represent the submitted form state how do I serialize the parameters into a route path that makes sense for Ember? Is that even possible?</p>\n",
            "last_activity_date": 1423509619,
            "question_id": 18309544,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "ember.js"
            ],
            "title": "How do I handle form submission in ember.js?"
        }
    ]
}
