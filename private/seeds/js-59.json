{
    "items": [
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.w3schools.com/js/default.asp\" rel=\"nofollow\">http://www.w3schools.com/js/default.asp</a></p>\n\n<p>As ground up as it gets.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would recommend:</p>\n\n<ul>\n<li><a href=\"http://eloquentjavascript.net/\">Eloquent JavaScript</a> (interactive tutorial)</li>\n<li><a href=\"https://developer.mozilla.org/en/A_re-introduction_to_JavaScript\">A re-introduction to JavaScript</a></li>\n<li><a href=\"https://developer.mozilla.org/en/core_javascript_1.5_guide\">Mozilla JavaScript Guide</a></li>\n<li><a href=\"http://referencedesigner.com/tutorials/js/js_1.php\">Javascript Tutorial for beginners</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>\"Javascript, the good parts\" is very good, but you need to have some theoretical background or  some serious programming experience to put it to use. It is a bit high-brow. However if you have had programming courses during your education it will be fine.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have been learning from: <a href=\"http://www.informit.com/library/library.aspx?b=STY_JavaScript_24_hours\" rel=\"nofollow\">http://www.informit.com/library/library.aspx?b=STY_JavaScript_24_hours</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'd say W3Schools is a pretty good tutorial for someone with no programming experience. But as soon as you finish that, start working through Crockford's material, and unlearn all the bad stuff you learnt.</p>\n\n<p>I don't know of any introduction to JavaScript that follow's Crockford's good parts, but he says in the introduction to his book that he'd like to write an introduction to JavaScript at some point, so fingers crossed!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://headfirstlabs.com/books/hfjs/\" rel=\"nofollow\">Head First Javascript</a> is an excellent book for beginners.  The Head First series does a great job of breaking things down to the basics, but still covering a lot of ground throughout the book.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are NOW some good interactive tutorials for learning Javascript right from the beginning. If you are fairly new to Computer Programming, try <a href=\"http://codeavengers.com\" rel=\"nofollow\">Code Avengers</a> (a site I helped create) or <a href=\"http://codecademy.com\" rel=\"nofollow\">CodeCademy</a>. Both are free and get you to write code right from the beginning.</p>\n\n<p>If you have a some programming experience, try <a href=\"http://codeschool.com\" rel=\"nofollow\">Code School</a>. It has courses for html, css, Javascript and JQuery. However, they do cost about $50 a course. Learners watch fairly entertaining video tutorials then complete programming tasks.</p>\n\n<p>My experience in learning and teaching others to program is that these type of sites can be both and effective and enjoyable way to learn programming. Probably in conjunction with other resources.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://www.codecademy.com/curricula/code-year/units/1\" rel=\"nofollow\">Code Year</a> also has a great program for ground up learning!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have been working my way through <a href=\"http://codecademy.com\" rel=\"nofollow\">Codecademy's offerings</a>, specifically, <a href=\"http://codecademy.com/tracks/javascript\" rel=\"nofollow\">\"JavaScript Fundamentals\"</a>,  the <a href=\"http://codecademy.com/courses/lang/javascript\" rel=\"nofollow\">\"non-track courses\" in JavaScript</a>, and, as mentioned above, their current <a href=\"http://codecademy.com/tracks/4f4bdd96848740000300026a\" rel=\"nofollow\">\"Code Year.\"</a></p>\n\n<p>I am coming at it from the perspective of someone who used to write *nix shell scripts and C and Fortran (yes, yes) code for a living a while back, and who lately has been doing some basic HTML/CSS, so some parts were obvious.  Most of it, though, was new to me, since I had pretty much no experience with object-oriented or event-driven programming.</p>\n\n<p>On the whole, I have found it very useful.  It can be a bit frustrating getting your answer to a particular exercise to \"pass,\" because the validation process appears to be sensitively dependent on the individual \"teacher's\" ability to write good checks, but this is only a minor complaint.  Mostly, this is not an issue, and the already-posted answers on the forums on the site are quite helpful if you're stuck.  Generally, though, doing what you're asked will get you a happy success message, and I really like the interactivity of it all.  It's not perfect, of course, but I feel like I'm getting a good introduction to the key points and concepts of JavaScript; enough, at minimum, that I can speak enough of the language to know how to Google/Stackoverflow things more precisely.  And really, I feel like I'm getting a lot more than that -- the dumb ideas I've had for little utility scripts are becoming a pleasure to implement.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have been using the tutorials in <a href=\"http://Learnable.com\" rel=\"nofollow\">Learnable.com</a> from the Sitepoint folks, <a href=\"http://Lynda.com\" rel=\"nofollow\">Lynda.com</a>, and Tutsplus. These are all paid services, but I learn lots from them. The Codecademy Javascript Fundamentals tutorial/class definitely gets a thumbs up. Codecademy is real time, challenging and free.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>There's a few mentions of Javascript newbies getting starting by checking out some of Douglas Crockford's work (<a href=\"http://stackoverflow.com/questions/11246/best-resources-to-learn-javascript\">http://stackoverflow.com/questions/11246/best-resources-to-learn-javascript</a>), but none of his resources seem to be for those looking to learn from the ground up.</p>\n\n<p>Are there any suggestions for complete beginners regarding how best to learn JavaScript?</p>\n\n<p>Personally I have plenty of HTML and CSS experience, and some PHP (which would help learning JS), but for those that don't know any programming language what would you recommend?</p>\n",
            "last_activity_date": 1381321574,
            "question_id": 2970314,
            "score": 15,
            "tags": [
                "javascript"
            ],
            "title": "A Beginners&#39; Guide to Learning JavaScript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The function is <code>getMonth()</code>, not <code>GetMonth()</code>.</p>\n\n<p>Anyway, you can check if the object has a getMonth property by doing this. It doesn't necessarily mean the object is a Date, just any object a getMonth property.</p>\n\n<pre><code>if (date.getMonth) {\n    var month = date.getMonth();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>You could check if a function specific to the Date object exists:</p>\n\n<pre><code>function getFormatedDate(date) {\n    if (date.getMonth) {\n        var month = date.getMonth();\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As indicated above, it's probably easiest to just check if the function exists before using it.  If you really care that it's a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\" rel=\"nofollow\"><code>Date</code></a>, and not just an object with a <code>getMonth()</code> function, try this:</p>\n\n<pre><code>function isValidDate(value) {\n    var dateWrapper = new Date(value);\n    return !isNaN(dateWrapper.getDate());\n}\n</code></pre>\n\n<p>This will create either a clone of the value if it's a <code>Date</code>, or create an invalid date.  You can then check if the new date's value is invalid or not.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>As an alternative to duck typing via</p>\n\n<pre><code>typeof date.getMonth === 'function'\n</code></pre>\n\n<p>you can use the <code>instanceof</code> operator, i.e.</p>\n\n<pre><code>date instanceof Date\n</code></pre>\n\n<p>This will fail if objects are passed across frame boundaries.</p>\n\n<p>A work-around for this is to check the object's class via</p>\n\n<pre><code>Object.prototype.toString.call(date) === '[object Date]'\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 282
                },
                {
                    "body": "<p>Actually date will be of type <code>Object</code>. But you can check if the object has <code>getMonth</code> method and if it is callable.</p>\n\n<pre><code>function getFormatedDate(date) {\n    if (date &amp;&amp; date.getMonth &amp;&amp; date.getMonth.call) {\n       var month = date.getMonth();\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For all types I cooked up an Object prototype function. It may be of use to you</p>\n\n<pre><code>Object.prototype.typof = function(chkType){\n      var inp        = String(this.constructor),\n          customObj  = (inp.split(/\\({1}/))[0].replace(/^\\n/,'').substr(9),\n          regularObj = Object.prototype.toString.apply(this),\n          thisType   = regularObj.toLowerCase()\n                        .match(new RegExp(customObj.toLowerCase()))\n                       ? regularObj : '[object '+customObj+']';\n     return chkType\n            ? thisType.toLowerCase().match(chkType.toLowerCase()) \n               ? true : false\n            : thisType;\n}\n</code></pre>\n\n<p>Now you can check <em>any</em> type like this:</p>\n\n<pre><code>var myDate     = new Date().toString(),\n    myRealDate = new Date();\nif (myRealDate.typof('Date')) { /* do things */ }\nalert( myDate.typof() ); //=&gt; String\n</code></pre>\n\n<p>[<strong>Edit march 2013</strong>] based on progressing insight this is a better method:</p>\n\n<pre><code>Object.prototype.is = function() {\n        var test = arguments.length ? [].slice.call(arguments) : null\n           ,self = this.constructor;\n        return test ? !!(test.filter(function(a){return a === self}).length)\n               : (this.constructor.name ||\n                  (String(self).match ( /^function\\s*([^\\s(]+)/im)\n                    || [0,'ANONYMOUS_CONSTRUCTOR']) [1] );\n}\n// usage\nvar Some = function(){ /* ... */}\n   ,Other = function(){ /* ... */}\n   ,some = new Some;\n2..is(String,Function,RegExp);        //=&gt; false\n2..is(String,Function,Number,RegExp); //=&gt; true\n'hello'.is(String);                   //=&gt; true\n'hello'.is();                         //-&gt; String\n/[a-z]/i.is();                        //-&gt; RegExp\nsome.is();                            //=&gt; 'ANONYMOUS_CONSTRUCTOR'\nsome.is(Other);                       //=&gt; false\nsome.is(Some);                        //=&gt; true\n// note: you can't use this for NaN (NaN === Number)\n(+'ab2').is(Number);                 //=&gt; true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You can use the following code:</p>\n\n<pre><code>(myvar instanceof Date) // returns true or false\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                }
            ],
            "body": "<p>I have an annoying bug in on a webpage: \"date.GetMonth() is not a function\". So I suppose that I am doing something wrong since somewhere and the object date is not an object of type Date. <strong>How can I check for a datatype in Javascript?</strong> I tried to add a <em>if(date)</em> but it doesn't work.</p>\n\n<pre><code>function getFormatedDate(date) {\n    if (date) {\n       var month = date.GetMonth();\n    }\n}\n</code></pre>\n\n<p>So if I want to write defensive code and prevent the date (which is not one) to be formatted, how do I do that?</p>\n\n<p>Thanks!</p>\n\n<p><strong>UPDATE:</strong> I don't want to check the format of the date, but I want to be sure that the parameter passed to the method getFormatedDate is of type Date.</p>\n",
            "last_activity_date": 1401973754,
            "question_id": 643782,
            "score": 124,
            "tags": [
                "javascript",
                "date"
            ],
            "title": "How to check whether an object is a date?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<pre><code>var obj = {...};\nfor (var key in obj) {\n    var value = obj[key];\n    // now you can use key as the key, value as the... you guessed right, value\n}\n</code></pre>\n\n<p>The php syntax is just sugar.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<pre><code>for (var k in target){\n    if (target.hasOwnProperty(k)) {\n         alert(\"Key is \" + k + \", value is\" + target[k]);\n    }\n}\n</code></pre>\n\n<p><code>hasOwnProperty</code> is used to check if your <code>target</code> really have that property, rather than have it inherited from its prototype. A bit simplier would be:</p>\n\n<pre><code>for (var k in target){\n    if (typeof target[k] !== 'function') {\n         alert(\"Key is \" + k + \", value is\" + target[k]);\n    }\n}\n</code></pre>\n\n<p>It just checks that <code>k</code> is not a method (as if <code>target</code> is <code>array</code> you'll get a lot of methods alerted, e.g. <code>indexOf</code>, <code>push</code>, <code>pop</code>,etc.)</p>\n",
                    "is_accepted": true,
                    "score": 109
                },
                {
                    "body": "<p>The <code>for in</code> will work for you. If you think of an object as a map:</p>\n\n<pre><code>for(key in obj){\n    // The key is key\n    // The value is obj[key]\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>I assume you know that <code>i</code> is the key and that you can get the value via <code>data[i]</code> (and just want a shortcut for this).</p>\n\n<p>ECMAScript5 introduced <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/array/foreach\" rel=\"nofollow\"><code>forEach</code> <em><sup>[MDN]</sup></em></a> for arrays (it seems you have an array):</p>\n\n<pre><code>data.forEach(function(value, index) {\n\n});\n</code></pre>\n\n<p>The MDN documentation provides a shim for browsers not supporting it.</p>\n\n<p>Of course this does not work for objects, but you can create a similar function for them:</p>\n\n<pre><code>function forEach(object, callback) {\n    for(var prop in object) {\n        if(object.hasOwnProperty(prop)) {\n            callback(prop, object[prop]);\n        }\n    }\n}\n</code></pre>\n\n<p>Since you tagged the question with <a href=\"/questions/tagged/jquery\" class=\"post-tag\" title=\"show questions tagged 'jquery'\" rel=\"tag\">jquery</a>, jQuery provides <a href=\"http://api.jquery.com/jQuery.each/\" rel=\"nofollow\"><code>$.each</code> <em><sup>[docs]</sup></em></a> which loops over both, array and object structures.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can use the <code>for..in</code> for that.</p>\n\n<pre><code>for (var key in data)\n{\n    var value = data[key];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use a 'for in' loop for this:</p>\n\n<pre><code>for (var key in bar) {\n     var value = bar[key];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>yes, you can have associative arrays also in javascript:</p>\n\n<pre><code>var obj = \n{\n    name:'some name',\n    otherProperty:'prop value',\n    date: new Date()\n};\nfor(i in obj)\n{\n    var propVal = obj[i]; // i is the key, and obj[i] is the value ...\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Below is an example that gets as close as you get.</p>\n\n<pre><code>for(var key in data){\n  var value = data[key];    \n  //your processing here\n}\n</code></pre>\n\n<p>If you're using jQuery see: <a href=\"http://api.jquery.com/jQuery.each/\" rel=\"nofollow\">http://api.jquery.com/jQuery.each/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>var global = (function() {\n   return this;\n})();\n\n// Pair object, similar to Python\n\nfunction Pair(key, value) {\n    this.key = key;\n    this.value = value;\n\n    this.toString = function() {\n       return \"(\" + key + \", \" + value + \")\";\n    };\n}\n\n/**\n * as function\n * @param {String} dataName A String holding the name of your pairs list.\n * @return {Array:Pair} The data list filled\n *    with all pair objects.\n */\nObject.prototype.as = function(dataName) {\n    var value, key, data;\n    global[dataName] = data = [];\n\n    for (key in this) {\n       if (this.hasOwnProperty(key)) {\n          value = this[key];\n\n          (function() {\n             var k = key,\n                 v = value;\n\n            data.push(new Pair(k, v));\n          })();\n       }\n    }\n\n    return data;\n};\n\nvar d = {\n   'one': 1,\n   'two': 2\n};\n\n// Loop on your (key, list) pairs in this way\nfor (var i = 0, max = d.as(\"data\").length; i &lt; max; i += 1) {\n   key = data[i].key;\n   value = data[i].value;\n\n   console.log(\"key: \" + key + \", value: \" + value);\n}\n\n// delete data when u've finished with it.\ndelete data;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Not one person has mentioned <code>Object.keys</code> so I'll mention it.</p>\n\n<pre><code>Object.keys(obj).forEach(function (key) {\n   // do something with obj[key]\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 70
                },
                {
                    "body": "<pre><code>for (var key in myMap) {\n    if (myMap.hasOwnProperty(key)) {\n        console.log(\"key =\" + key);\n        console.log(\"value =\" + myMap[key]);\n    }\n}\n</code></pre>\n\n<p>In javascript, every object has a bunch of built-in key-value pairs that have meta-information. When you loop through all the key-value pairs for an object you're looping through them too. The use of hasOwnPropery() filters these out.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I was wondering if there's a way to do something like a PHP foreach loop in JavaSript. The functionality I'm looking for is something like this: (PHP Snippet)</p>\n\n<pre><code>foreach($data as $key =&gt; $value) { }\n</code></pre>\n\n<p>I was looking at the JS <code>for..in</code> loop, but there seems to be no way to specify the <code>as</code>. If I do this with a 'normal' for loop (<code>for(var i = 0; i &lt; data.length; i++</code>), is there a way to grab the key => value pairs?</p>\n",
            "last_activity_date": 1408638820,
            "question_id": 7241878,
            "score": 70,
            "tags": [
                "javascript",
                "foreach"
            ],
            "title": "For..In loops in javascript - key value pairs"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<h2>Inline event handler</h2>\n\n<p>In the most simple way, you can use the <a href=\"https://developer.mozilla.org/en/DOM/window.confirm\"><code>confirm()</code></a> function in an inline <code>onclick</code> handler.</p>\n\n<pre><code>&lt;a href=\"delete.php?id=22\" onclick=\"return confirm('Are you sure?')\"&gt;Link&lt;/a&gt;\n</code></pre>\n\n<h2>Advanced event handling</h2>\n\n<p>But normally you would like to <a href=\"http://en.wikipedia.org/wiki/Separation_of_concerns#HTML.2C_CSS.2C_and_JavaScript\">separate your HTML and Javascript</a>, so I suggest you don't use inline event handlers, but put a class on your link and add an event listener to it.</p>\n\n<pre><code>&lt;a href=\"delete.php?id=22\" class=\"confirmation\"&gt;Link&lt;/a&gt;\n...\n&lt;script type=\"text/javascript\"&gt;\n    var elems = document.getElementsByClassName('confirmation');\n    var confirmIt = function (e) {\n        if (!confirm('Are you sure?')) e.preventDefault();\n    };\n    for (var i = 0, l = elems.length; i &lt; l; i++) {\n        elems[i].addEventListener('click', confirmIt, false);\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/TgjL7/\">This example</a> will only work in modern browsers (for older IEs you can use <code>attachEvent()</code>, <code>returnValue</code> and provide an implementation for <code>getElementsByClassName()</code> or use a library like jQuery that will help with cross-browser issues). You can read more about <a href=\"https://developer.mozilla.org/en/DOM/element.addEventListener\">this advanced event handling method on MDN</a>.</p>\n\n<h2>jQuery</h2>\n\n<p>I'd like to stay far away from being considered a jQuery fanboy, but DOM manipulation and event handling are two areas where it helps the most with browser differences. Just for fun, here is how this would look with <a href=\"http://jquery.com/\">jQuery</a>:</p>\n\n<pre><code>&lt;a href=\"delete.php?id=22\" class=\"confirmation\"&gt;Link&lt;/a&gt;\n...\n&lt;!-- Include jQuery - see http://jquery.com --&gt;\n&lt;script type=\"text/javascript\"&gt;\n    $('.confirmation').on('click', function () {\n        return confirm('Are you sure?');\n    });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 148
                },
                {
                    "body": "<pre><code>&lt;a href=\"delete.php?id=22\" onclick = \"if (! confirm('Continue?')) { return false; }\"&gt;Confirm OK, then goto URL (uses onclick())&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I'd suggest avoiding in-line JavaScript:</p>\n\n<pre><code>var aElems = document.getElementsByTagName('a');\n\nfor (var i = 0, len = aElems.length; i &lt; len; i++) {\n    aElems[i].onclick = function() {\n        var check = confirm(\"Are you sure you want to leave?\");\n        if (check == true) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n}\u200b\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/davidThomas/bJNVy/1/\" rel=\"nofollow\">JS Fiddle demo</a>.</p>\n\n<p>The above updated to reduce space, though maintaining clarity/function:</p>\n\n<pre><code>var aElems = document.getElementsByTagName('a');\n\nfor (var i = 0, len = aElems.length; i &lt; len; i++) {\n    aElems[i].onclick = function() {\n        return confirm(\"Are you sure you want to leave?\");\n    };\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/davidThomas/bJNVy/24/\" rel=\"nofollow\">JS Fiddle demo</a>.</p>\n\n<p>A somewhat belated update, to use <code>addEventListener()</code> (as suggested, by <a href=\"http://stackoverflow.com/questions/10462839/javascript-confirmation-dialog-on-href-link/10462885#comment13513232_10462885\">ba\u017emegakapa</a>, in the comments below):</p>\n\n<pre><code>function reallySure (event) {\n    var message = 'Are you sure about that?';\n    action = confirm(message) ? true : event.preventDefault();\n}\nvar aElems = document.getElementsByTagName('a');\n\nfor (var i = 0, len = aElems.length; i &lt; len; i++) {\n    aElems[i].addEventListener('click', reallySure);\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/davidThomas/bJNVy/22/\" rel=\"nofollow\">JS Fiddle demo</a>.</p>\n\n<p>The above binds a function to the event of each individual link; which is potentially quite wasteful, when you could bind the event-handling (using delegation) to an ancestor element, such as the following:</p>\n\n<pre><code>function reallySure (event) {\n    var message = 'Are you sure about that?';\n    action = confirm(message) ? true : event.preventDefault();\n}\n\nfunction actionToFunction (event) {\n    switch (event.target.tagName.toLowerCase()) {\n        case 'a' :\n            reallySure(event);\n            break;\n        default:\n            break;\n    }\n}\n\ndocument.body.addEventListener('click', actionToFunction);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/davidThomas/bJNVy/23/\" rel=\"nofollow\">JS Fiddle demo</a>.</p>\n\n<p>Because the event-handling is attached to the <code>body</code> element, which normally contains a host of other, clickable, elements I've used an interim function (<code>actionToFunction</code>) to determine what to do with that click. If the clicked element is a link, and therefore has a <code>tagName</code> of <code>a</code>, the click-handling is passed to the <code>reallySure()</code> function.</p>\n\n<p>References:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/DOM/EventTarget.addEventListener\" rel=\"nofollow\"><code>addEventListener()</code></a>.</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\" rel=\"nofollow\">Conditional ('ternary') operator</a>.</li>\n<li><a href=\"https://developer.mozilla.org/en/DOM/window.confirm\" rel=\"nofollow\"><code>confirm()</code></a>.</li>\n<li><a href=\"https://developer.mozilla.org/en/DOM/element.getElementsByTagName\" rel=\"nofollow\"><code>getElementsByTagName()</code></a>.</li>\n<li><a href=\"https://developer.mozilla.org/en/DOM/element.onclick\" rel=\"nofollow\"><code>onclick</code></a>.</li>\n<li><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Statements/if...else\" rel=\"nofollow\"><code>if () {}</code></a>.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This method is slightly different than either of the above answers if you attach your event handler using addEventListener (or attachEvent).</p>\n\n<pre><code>function myClickHandler(evt) {\n  var allowLink = confirm('Continue with link?');\n  if (!allowLink) {\n    evt.returnValue = false; //for older Internet Explorer\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n    return false;\n  }\n}\n</code></pre>\n\n<p>You can attach this handler with either:</p>\n\n<pre><code>document.getElementById('mylinkid').addEventListener('click', myClickHandler, false);\n</code></pre>\n\n<p>Or for older versions of internet explorer:</p>\n\n<pre><code>document.getElementById('mylinkid').attachEvent('onclick', myClickHandler);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just for fun, I'm going to use a single event on the whole document instead of adding an event to <em>all</em> the anchor tags:</p>\n\n<pre><code>document.body.onclick = function( e ) {\n    // Cross-browser handling\n    var evt = e || window.event,\n        target = evt.target || evt.srcElement;\n\n    // If the element clicked is an anchor\n    if ( target.nodeName === 'A' ) {\n\n        // Add the confirm box\n        return confirm( 'Are you sure?' );\n    }\n};\n</code></pre>\n\n<p>This method would be more efficient if you had many anchor tags. Of course, it becomes even more efficient when you add this event to the container having all the anchor tags.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2>jAplus</h2>\n\n<p>You can do it, without writing JavaScript code</p>\n\n<pre><code>&lt;head&gt;\n   &lt;script src=\"/path/to/jquery.js\" type=\"text/javascript\" charset=\"utf-8\"&gt;&lt;/script&gt;\n   &lt;script src=\"/path/to/jquery.Aplus.js\" type=\"text/javascript\" charset=\"utf-8\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n...\n   &lt;a href=\"delete.php?id=22\" class=\"confirm\" title=\"Are you sure?\"&gt;Link&lt;/a&gt;\n...\n&lt;/body&gt;\n</code></pre>\n\n<p><a href=\"http://japlus.simplit.it/demo.htm\" rel=\"nofollow\">Demo page</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want this link to have a javascript dialog that asks the user \"Are you sure? Y/N\".</p>\n\n<pre><code>&lt;a href=\"delete.php?id=22\"&gt;Link&lt;/a&gt;\n</code></pre>\n\n<p>If the user clicks \"Yes\" the link should load, if \"No\" nothing will happen.\nI know how to do that in forms, using onclick running a function that returns true or false.</p>\n\n<p>But how do I do this with a normal href link?</p>\n",
            "last_activity_date": 1386271793,
            "question_id": 10462839,
            "score": 54,
            "tags": [
                "javascript",
                "html",
                "javascript-events"
            ],
            "title": "Javascript confirmation dialog on href-link?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Basically in JavaScript blocks (<code>{ ... }</code>) do not introduce a new scope, there is only function-scope, so no scope is created on any other statement. </p>\n\n<p>A variable introduced anywhere in a function is visible everywhere in the function.</p>\n\n<p>For example:</p>\n\n<pre><code>function myFunction(){\n  var one = 1;\n\n  if (one){\n    var two = one + 1;\n  }\n\n  (function () {\n    var three = one + two;\n  })();\n\n  // at this point both variables *one* and *two* are accessible but \n  // the variable *three* was declared in the scope of a inner function\n  // and is not accessible  at this point.\n}\n</code></pre>\n\n<p>In languages with block scope, it recommended to declare the variables at the point of first use, but since JavaScript does not have block scope, it is better to declare all of a function's variables at the top of the function.</p>\n\n<p>Check this <a href=\"http://wonko.com/post/try-to-use-one-var-statement-per-scope-in-javascript\">article</a>.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Yes, it means that you declare all variables at the beginning of the function. Whether you want to do it in one line or multiple lines is a matter of choice.</p>\n\n<p>The reason is explained in the paragraph you mentioned. Javascript variables only have function level scope. If you declare the same variable inside an if/while/for block, it will be overwritten by the new value since the block doesn't carry a new scope. This is different from languages such as Java. To avoid such surprises, declare all the variables you are going to use in the function at the beginning of function so that you don't accidentally 'redeclare' andything.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The problem is that, whether you realise it or not, javascript invisibly moves all the var declarations to the top of the function scope.</p>\n\n<p>so if you have a function like this</p>\n\n<pre><code>var i = 5;\nfunction testvar () {\n     alert(i);\n     var i=3;\n}\ntestvar();\n</code></pre>\n\n<p>the alert window will contain undefined. because internally, it's been changed into this:</p>\n\n<pre><code>var i = 5;\nfunction testvar () {\n     var i;\n     alert(i);\n     i=3;\n}\ntestvar();\n</code></pre>\n\n<p>this is called \"hoisting\".\nThe reason crockford so strongly advocates var declarations go at the top, is that it makes the code visibly match what it's going to do, instead of allowing invisible and unexpected behavior to occur.</p>\n",
                    "is_accepted": true,
                    "score": 68
                },
                {
                    "body": "<p>The lack of block scope explains the code below: </p>\n\n<pre><code>var a = 1;\nif (something) {\n    var a = 2;\n}\n\nalert(a); // Alerts \"2\"\n</code></pre>\n\n<p>In most C-style (as in syntax) languages, the <code>var a = 2</code> definition would define 'a' only for the scope of the <code>if</code> block.  Using a single var statement at the top of the function helps to avoid this quirk of Javascript, which is not always as obvious as the above, and would be unexpected to C/C#/Java programmers.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I've been using JSLint to make me feel bad about my JavaScript. It is great, by the way. There is one check that I don't quite understand and I'd like your views, please.</p>\n\n<p>From <a href=\"http://www.jslint.com/lint.html#scope\">jslint.com</a>: </p>\n\n<blockquote>\n  <p>In languages with block scope, it is usually recommended that variables be declared at the site of first use. But because JavaScript does not have block scope, it is wiser to declare all of a function's variables at the top of the function. <strong>It is recommended that a single var statement be used per function.</strong></p>\n</blockquote>\n\n<p>What is the last sentance in bold really saying? I think I should be declaring multiple variables like this?</p>\n\n<pre><code>var foo = 1, bar = 2;\n</code></pre>\n\n<p>And, is the \"wise\" part just a programming style to discourage errors down the line or is there more to it than that?</p>\n\n<p>Thanks for your help.</p>\n",
            "last_activity_date": 1372205561,
            "question_id": 1236206,
            "score": 45,
            "tags": [
                "javascript",
                "lint"
            ],
            "title": "One var per function in JavaScript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>This works:</p>\n\n<pre><code>$('img').bind('contextmenu', function(e) {\n    return false;\n}); \n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/wM8Zm/\"><strong>jsFiddle example</strong></a></p>\n",
                    "is_accepted": true,
                    "score": 93
                },
                {
                    "body": "<p>what is your purpose of disabling the right click. problem with any technique is that there is always a way to go around them. the console for firefox (firebug) and chrome allow for unbinding of that event. or if you want the image to be protected one could always just take a look at their temporary cache for the images.</p>\n\n<p>If you want to create your own contextual menu the preventDefault is fine. Just pick your battles here. not even a big JavaScript library like tnyMCE works on all browsers... and that is not because it's not possible ;-).</p>\n\n<pre><code>$(document).bind(\"contextmenu\",function(e){\n  e.preventDefault()\n});\n</code></pre>\n\n<p>Personally I'm more in for an open internet. Native browser behavior should not be hindered by the pages interactions. I am sure that other ways can be found to interact that are not the right click.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p><strong>For Disable Right Click Option</strong> </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var message=\"Function Disabled!\";\n\n    function clickIE4(){\n    if (event.button==2){\n        alert(message);\n        return false;\n        }\n    }\n\n    function clickNS4(e){\n        if (document.layers||document.getElementById&amp;&amp;!document.all){\n            if (e.which==2||e.which==3){\n                alert(message);\n                return false;\n                }\n            }\n        }\n        if (document.layers){\n            document.captureEvents(Event.MOUSEDOWN);\n            document.onmousedown=clickNS4;\n            }\n        else if (document.all&amp;&amp;!document.getElementById){\n            document.onmousedown=clickIE4;\n        }\n        document.oncontextmenu=new Function(\"alert(message);return false\")\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Would it be possible to leave the ability to right click and download just when done a separate watermark is placed on the image. Of course this won't prevent screen shots but thought it may be a good middle ground.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In chrome and firefox the methods above didn't work unless I used 'live' instead of 'bind'.</p>\n\n<p>This worked for me:</p>\n\n<pre><code>$('img').live('contextmenu', function(e){\n    return false;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You could try this :</p>\n\n<pre><code>var message=\"Sorry, right-click has been disabled\";\n\nfunction clickIE() {\n    if (document.all) {\n        (message);\n        return false;\n    }\n}\n\nfunction clickNS(e) {\n    if (document.layers || (document.getElementById &amp;&amp; !document.all)) {\n        if (e.which == 2||e.which == 3) {\n            (message);\n            return false;\n        }\n    }\n}\n\nif (document.layers) {\n    document.captureEvents(Event.MOUSEDOWN);\n    document.onmousedown = clickNS;\n} else {\n    document.onmouseup = clickNS;\n    document.oncontextmenu = clickIE;\n}\n\ndocument.oncontextmenu = new Function(\"return false\")\n</code></pre>\n\n<p><a href=\"http://www.zararsiz.at\" rel=\"nofollow\">Checkout a demo here</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>$(document).on('mousedown', 'img', function(e){\n    if(e.which === 3){\n        $(this).live('contextmenu', function(e){\n            e.preventDefault();\n        });\n    };\n});\n</code></pre>\n\n<p>The .on method is like .delegate and prevents future calls such as dom elements your might make or call in with ajax...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A very simple way is to add the image as a background to a DIV then load an empty transparent gif set to the same size as the DIV in the foreground. that keeps the less determined out. They cant get the background without viewing the code and copying the URL and right clicking just downloads the transparent gif.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to know how to disable right click on images using jQuery.</p>\n\n<p>I know only this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n    $(document).ready(function() {\n        $(document).bind(\"contextmenu\",function(e) {\n           return false;\n        });\n    }); \n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1402328544,
            "question_id": 4753695,
            "score": 40,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Disabling right click on images using jquery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I don't think this is the express global size limit, but specifically the <a href=\"https://github.com/senchalabs/connect/blob/7edb875a9f305e38f4d960fa46ac674038241892/lib/middleware/json.js#L27\">connect.json middleware limit</a>. This is 1MB by default when you use <code>express.bodyParser()</code> and don't provide a <code>limit</code> option.</p>\n\n<p>Try:</p>\n\n<pre><code>app.post('/api/0.1/people', express.bodyParser({limit: '5mb'}), yourHandler);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I had the same error recently, and all the solutions I've found did not work.</p>\n\n<p>After some digging, I found that setting <code>app.use(express.bodyParser({limit: '50mb'}));</code> did set the limit correctly. </p>\n\n<p>When adding a <code>console.log('Limit file size: '+limit);</code> in <code>node_modules/express/node_modules/connect/lib/middleware/json.js:46</code> and restarting node, I get this output in the console: </p>\n\n<pre><code>Limit file size: 1048576\nconnect.multipart() will be removed in connect 3.0\nvisit https://github.com/senchalabs/connect/wiki/Connect-3.0 for alternatives\nconnect.limit() will be removed in connect 3.0\nLimit file size: 52428800\nExpress server listening on port 3002\n</code></pre>\n\n<p>We can see that at first, when loading the <code>connect</code> module, the limit is set to 1mb (1048576 bytes). Then when I set the limit, the <code>console.log</code> is called again and this time the limit is 52428800 (50mb). However, I still get a <code>413 Request entity too large</code>.</p>\n\n<p>Then I added <code>console.log('Limit file size: '+limit);</code> in  <code>node_modules/express/node_modules/connect/node_modules/raw-body/index.js:10</code> and saw another line in the console when calling the route with a big request (before the error output) : </p>\n\n<pre><code>Limit file size: 1048576\n</code></pre>\n\n<p>This means that somehow, somewhere, <code>connect</code> resets the limit parameter and ignores what we specified. I tried specifying the <code>bodyParser</code> parameters in the route definition individually, but no luck either.</p>\n\n<p>While I did not find any proper way to set it permanently, you can \"<em>patch</em>\" it in the module directly. If you are using Express 3.4.4, add this at line 46 of <code>node_modules/express/node_modules/connect/lib/middleware/json.js</code> :</p>\n\n<pre><code>limit = 52428800; // for 50mb, this corresponds to the size in bytes\n</code></pre>\n\n<p>The line number might differ if you don't run the same version of Express.\nPlease note that this is a <strong>bad practice</strong> and will be <strong>overwritten</strong> if you update your module.</p>\n\n<p>So this temporary solution works for now, but as soon as a solution is found (or the module fixed, in case it's a module problem) you should update your code accordingly.</p>\n\n<p>I have opened <a href=\"https://github.com/visionmedia/express/issues/1815\">an issue on their Github</a> about this problem.</p>\n\n<p><strong>[edit]</strong></p>\n\n<p>After some research and testing, I found that when debugging, I added <code>app.use(express.bodyParser({limit: '50mb'}));</code>, but <strong>after</strong> <code>app.use(express.json());</code>. Express would then set the global limit to 1mb because the first parser he encountered when running the script was <code>express.json()</code>. Moving <code>bodyParser</code> above it did the trick.</p>\n\n<p>That said, the <code>bodyParser()</code> method will be deprecated in Connect 3.0 and should not be used. Instead, you should declare your parsers explicitely, like so :</p>\n\n<pre><code>app.use(express.json({limit: '50mb'}));\napp.use(express.urlencoded({limit: '50mb'}));\n</code></pre>\n\n<p>In case you need multipart (for file uploads) see <a href=\"https://groups.google.com/forum/#!msg/express-js/iP2VyhkypHo/5AXQiYN3RPcJ\">this post</a>.</p>\n\n<p><strong>Second edit</strong></p>\n\n<p>Note that in Express 4, instead of <code>express.json()</code> and <code>express.urlencoded()</code>, you must require the <a href=\"https://github.com/expressjs/body-parser\">body-parser</a> module and use its <code>json()</code> and <code>urlencoded()</code> methods, like so :</p>\n\n<pre><code>var bodyParser = require('body-parser');\napp.use(bodyParser.json({limit: '50mb'}));\napp.use(bodyParser.urlencoded({limit: '50mb', extended: true}));\n</code></pre>\n\n<p>If the <code>extended</code> option is not explicitly defined for <code>bodyParser.urlencoded()</code>, it will throw a warning (<code>body-parser deprecated undefined extended: provide extended option</code>). This is because this option will be required in the next version and <strong>not</strong> be optional anymore. For more info on the <code>extended</code> option, please refer to the <a href=\"https://github.com/expressjs/body-parser\">readme</a> of <code>body-parser</code>.</p>\n",
                    "is_accepted": true,
                    "score": 100
                }
            ],
            "body": "<p>I'm receiving the following error with express:</p>\n\n<pre><code>Error: request entity too large\n    at module.exports (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/express/node_modules/connect/node_modules/raw-body/index.js:16:15)\n    at json (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/express/node_modules/connect/lib/middleware/json.js:60:5)\n    at Object.bodyParser [as handle] (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/express/node_modules/connect/lib/middleware/bodyParser.js:53:5)\n    at next (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/express/node_modules/connect/lib/proto.js:193:15)\n    at Object.cookieParser [as handle] (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/express/node_modules/connect/lib/middleware/cookieParser.js:60:5)\n    at next (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/express/node_modules/connect/lib/proto.js:193:15)\n    at Object.logger (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/express/node_modules/connect/lib/middleware/logger.js:158:5)\n    at next (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/express/node_modules/connect/lib/proto.js:193:15)\n    at Object.staticMiddleware [as handle] (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/express/node_modules/connect/lib/middleware/static.js:55:61)\n    at next (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/express/node_modules/connect/lib/proto.js:193:15)\nTypeError: /Users/michaeljames/Documents/Projects/Proj/mean/app/views/includes/foot.jade:31\n    29| script(type=\"text/javascript\", src=\"/js/socketio/connect.js\")\n    30| \n  &gt; 31| if (req.host='localhost')\n    32|     //Livereload script rendered \n    33|     script(type='text/javascript', src='http://localhost:35729/livereload.js')  \n    34| \n\nCannot set property 'host' of undefined\n    at eval (eval at &lt;anonymous&gt; (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/jade/lib/jade.js:152:8), &lt;anonymous&gt;:273:15)\n    at /Users/michaeljames/Documents/Projects/Proj/mean/node_modules/jade/lib/jade.js:153:35\n    at Object.exports.render (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/jade/lib/jade.js:197:10)\n    at Object.exports.renderFile (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/jade/lib/jade.js:233:18)\n    at View.exports.renderFile [as engine] (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/jade/lib/jade.js:218:21)\n    at View.render (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/express/lib/view.js:76:8)\n    at Function.app.render (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/express/lib/application.js:504:10)\n    at ServerResponse.res.render (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/express/lib/response.js:801:7)\n    at Object.handle (/Users/michaeljames/Documents/Projects/Proj/mean/config/express.js:82:29)\n    at next (/Users/michaeljames/Documents/Projects/Proj/mean/node_modules/express/node_modules/connect/lib/proto.js:188:17)\n\nPOST /api/0.1/people 500 618ms\n</code></pre>\n\n<p>I have am using meanstack. I have the following use statements in my express.js</p>\n\n<pre><code>//Set Request Size Limit\napp.use(express.limit(100000000));\n</code></pre>\n\n<p>Within fiddler I can see the content-length header with a value of: 1078702</p>\n\n<p>I believe this is in octets, this is 1.0787 megabytes.</p>\n\n<p>I have no idea why express is not letting me post the json array I was posting previously in another express project that was not using the mean stack project structure.</p>\n",
            "last_activity_date": 1414435935,
            "question_id": 19917401,
            "score": 31,
            "tags": [
                "javascript",
                "node.js",
                "http",
                "express"
            ],
            "title": "Node JS - Express Request entity too large"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You can try to debug it using the Web Inspector on Safari 6 on a mac. </p>\n\n<ol>\n<li>Enable \"Webkit Inspector\" in Mobile Safari settings/advanced.</li>\n<li>Connect device to a Mac running Safari 6 using a USB cable.</li>\n<li>Load your page/game</li>\n<li>Go to menu Develop->[devicename]->[pageurl]</li>\n</ol>\n\n<p>It doesn't work out of the box for me, but with a few tries it can help narrow down the problem.</p>\n\n<p>Apparently there is also the thing that audio can only be triggered by a user action. I'm not sure this is true 'cos some code that works on iOS6 on iPhone4 doesn't play any sound on an iPad (also iOS6).</p>\n\n<p><strong>Update</strong>: Some success with web audio on iPhone4+iOS6. Found that the \"currentTime\" remains stuck at 0 for a while as soon as you create a new audio context on iOS6. In order to get it moving, you first need to perform a dummy API call (like <code>createGainNode()</code> and discard the result). Sounds play only when currentTime starts to run, but scheduling sounds exactly at currentTime doesn't seem to work. They need to be a little bit into the future (ex: 10ms). You can use the following <code>createAudioContext</code> function to wait until the context is ready to make noise. User action doesn't seem to be required on iPhone, but no such success on iPad just yet.</p>\n\n<pre><code>function createAudioContext(callback, errback) {\n    var ac = new webkitAudioContext();\n    ac.createGainNode(); // .. and discard it. This gets \n                         // the clock running at some point.\n\n    var count = 0;\n\n    function wait() {\n        if (ac.currentTime === 0) {\n            // Not ready yet.\n            ++count;\n            if (count &gt; 600) {\n                errback('timeout');\n            } else {\n                setTimeout(wait, 100);\n            }\n        } else {\n            // Ready. Pass on the valid audio context.\n            callback(ac); \n        }\n    }\n\n    wait();\n}\n</code></pre>\n\n<p>Subsequently, when playing a note, don't call <code>.noteOn(ac.currentTime)</code>, but do <code>.noteOn(ac.currentTime + 0.01)</code> instead.</p>\n\n<p>Please don't ask me <em>why</em> you have to do all that. That's just the way it is at the moment - i.e. crazy.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>So, I think I've figured it out. </p>\n\n<p>It's a issue of Apple requiring an user action before sound can be allowed to play. It turns out, at least for me, that you shouldn't create the audio context at all except when the user calls for it. It's not enough to create the context when the page loads and then use createGainNode or similar on an user action. </p>\n\n<p>In your case I'd create the context when the user clicks the \"Touch to begin\" button.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Well, sorry to answer my own bounty question, but after hours of debugging I finally found the answer.  Safari on iOS 6 effectively starts with the Web Audio API muted.  It will not unmute <strong>until you attempt to play a sound in a user input event</strong> (create a buffer source, connect it to destination, and call <code>noteOn()</code>).  After this, it unmutes and audio plays unrestricted and as it ought to.  This is an undocumented aspect of how the Web Audio API works on iOS 6 (<a href=\"http://developer.apple.com/library/safari/#documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/PlayingandSynthesizingSounds/PlayingandSynthesizingSounds.html\">Apple's doc is here</a>, hopefully they update it with a mention of this soon!)</p>\n\n<p>The user can be touching the screen a lot, engaged in the game.  But it will remain muted.  You <em>have</em> to play inside a user input event like <code>touchstart</code>, once, then all audio unmutes.  After that you can play audio at any time (doesn't have to be in a user input event).</p>\n\n<p>Note this is different to the restrictions on HTML5 audio: typically you can only start audio at all in a user input event, and only play one sound at a time; the Web Audio API fully unmutes after the first play-in-user-input, so that you can play sounds at any time, and then you can mix them polyphonically, process cool effects, etc.</p>\n\n<p>This means many games already on the web using the Web Audio API will never play audio, because they do not happen to issue a noteOn in a touch event.  You have to adjust it to wait for the first user input event.</p>\n\n<p>There are a few ways to work around this: don't play your title music until the user touches the screen; have an initial 'touch to enable audio' screen and play a sound then begin the game when they touch; etc.  Hopefully this will help anyone else having the same problem save some time trying to debug it!</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Answering to the <em>original</em> question, I can confirm some troubles with file formats on iPhone 4S/iOS 6 and MacOSX. If an MP3 file is \"not good\" for Safari, the decoding goes bad and calling AudioContext.createBuffer(array, bool) gives you and error.</p>\n\n<p>The strange thing is about the error: \"SYNTAX_ERR, DOM Exception 12\", as pointed out by others. This makes me think it is a bug....</p>\n\n<p>Same behavior also on MacOS, with Safari 6.0 (7536.25).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This isn't an actual answer, just a direction to look if things still aren't working.  iOS6 has audio issues on <em>some</em> devices (particularly the 64gb 4s manufactured during a particular period, though I've seen others so it may not actually be hardware related) and will mysteriously stop playing some kinds of sounds (not ringtones or voice, for some reason, but many other sounds), and it's volume sliders will vanish.  I've found it notoriously difficult to debug as it will usually (thought not always, sometimes you can catch it) happen only when not connected with a power cord.</p>\n\n<p>Look in the console for ASSERTION FAILURE messages from the VirtualAudio_Device and with various codecs.  This may have nothing whatsoever to do with your particular issue, but then again, a bug in one area of the sound device may be related to another.  At minimum, it's an area to investigate if nothing else is helping.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The API appears to be broken on iOS 6.1, or at least, has a breaking change that means no sites currently work with it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've got trouble using all simple solutions. Especially, when I want to play a sound multiple times.</p>\n\n<p>So I'm using this js library: <a href=\"http://pupunzi.open-lab.com/2013/03/13/making-html5-audio-actually-work-on-mobile\" rel=\"nofollow\">http://pupunzi.open-lab.com/2013/03/13/making-html5-audio-actually-work-on-mobile</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have come across the audio restrictions with <strong>HTML5 Audio</strong> on iOS and worked around the problem by:</p>\n\n<p>1) Creating an Audio Element with a silent audio file and playing it initially with a touch event (e.g. 'begin game' button) and then immidietly pausing it.</p>\n\n<p>2) Building a sound-switcher function which switches the Audio src and then plays the Audio element after a short timeout.</p>\n\n<p>3) Calling the sound-switcher function on any events (doesn't need to be a touch event).</p>\n\n<p>This works because the Audio Element is un-muted on first touch, with the silent audio file, and remains un-muted, so the source can be switched on-the-fly.</p>\n\n<pre><code>switchSound: (id) -&gt;\n        @soundSwitch.pause()\n        @soundSwitch.src = @sounds[id]._src\n\n        clearTimeout @switchSoundDelay\n        @switchSoundDelay = setTimeout =&gt;\n            # @soundSwitch.volume = 1\n            @soundSwitch.play()\n        ,50 \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I was really excited to see iOS 6 supports the Web Audio API, since we make HTML5 games.  However, I cannot get iOS 6 to play any sound at all using the Web Audio API with examples that work fine in desktop Chrome.</p>\n\n<p>Here is a HTML5 game with touch controls and playing audio via the Web Audio API (if present - if not it will fall back to HTML5 audio):</p>\n\n<p><a href=\"http://www.scirra.com/labs/sbios6b/\">http://www.scirra.com/labs/sbios6b/</a></p>\n\n<p><em>Edit: @Srikumar suggested some workarounds.  I applied them at the version below.  It still does not work!</em></p>\n\n<p><a href=\"http://www.scirra.com/labs/sbios6f/\">http://www.scirra.com/labs/sbios6f/</a></p>\n\n<p>Everything plays just fine on desktop Chrome, but iOS 6 emits no sound at all.  I'm having trouble debugging it because I only do Windows development, and iOS 6 replaced the debug mode with remote web inspector, which apparently is not available on Safari for Windows.  Using a few alerts I did find it correctly identifies the Web Audio API, uses it, detects no Vorbis support so falls back to AAC audio, decodes a buffer and then plays it, and no errors are thrown, but I hear nothing.  And, of course, I tried turning the volume up to max :)</p>\n\n<p>There should not be a codec problem, because iOS 6 can play AAC just fine - you can browse to <a href=\"http://www.scirra.com/labs/sbios6b/media/epicarpg.m4a\">one of the .m4a's the game plays</a> and it plays fine visited direct from Safari. </p>\n\n<p>Looking at the Web Audio API examples here on iOS 6: <a href=\"http://chromium.googlecode.com/svn/trunk/samples/audio/samples.html\">http://chromium.googlecode.com/svn/trunk/samples/audio/samples.html</a> - some of them work, and others don't.  For example, the <a href=\"http://www.htmlfivewow.com/demos/audio-visualizer/index.html\">Chrome Audio Visualizer</a> works, but <a href=\"http://matt-diamond.com/drone.html\">Javascript Drone</a> doesn't.</p>\n\n<p>There must be some subtle incompatibility between Web Audio on iOS 6 and desktop Chrome.  What am I missing?</p>\n",
            "last_activity_date": 1407396863,
            "question_id": 12517000,
            "score": 30,
            "tags": [
                "javascript",
                "html5",
                "mobile-safari",
                "ios6",
                "web-audio"
            ],
            "title": "No sound on iOS 6 Web Audio API"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Rather then storing your constant data in a C# class, store it in a static config/constants file.</p>\n\n<pre><code>// Constants.json\n{\n    \"T_URL\": \"url\",\n    \"T_TEXT\": \"text\"\n}\n\n// Constants.cs\n\n// load the json from a file stream into a constants object\n\n// Constants.js\n\nwindow.Constants = $.getJSON(url);\n</code></pre>\n\n<p>Simply store it as some file format (json, xml, cvs, whatever) then load it up from both the client &amp; server.</p>\n\n<p>This means your either creating a class in the C# on the fly at runtime using black magic reflection or just have a hashtable / dictionary containing your constants under keys.</p>\n\n<p><a href=\"http://api.jquery.com/jQuery.getJSON/\" rel=\"nofollow\"><code>jQuery.getJSON</code></a>, <a href=\"http://msdn.microsoft.com/en-us/library/system.runtime.serialization.json.jsonreaderwriterfactory.aspx\" rel=\"nofollow\"><code>JsonReaderWriterFactor</code></a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The way you are using it is dangerous. Imagine some of your constants contained a quote, or even worse some other dangerous characters => that would break your javascripts.</p>\n\n<p>I would recommend you writing a controller action which will serve all constants as javascript:</p>\n\n<pre><code>public ActionResult Constants()\n{\n    var constants = typeof(Constants)\n        .GetFields()\n        .ToDictionary(x =&gt; x.Name, x =&gt; x.GetValue(null));\n    var json = new JavaScriptSerializer().Serialize(constants);\n    return JavaScript(\"var constants = \" + json + \";\");\n}\n</code></pre>\n\n<p>and then in your layout reference this script:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"@Url.Action(\"Constants\")\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Now whenever you need a constant in your scripts simply use it by name:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    alert(constants.T_URL);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<p>You can use an HTML helper to output the script necessary, and use reflection to grab the fields and their values so it will automatically update.</p>\n\n<pre><code>    public static HtmlString GetConstants(this HtmlHelper helper)\n    {\n        System.Text.StringBuilder sb = new System.Text.StringBuilder();\n\n        sb.AppendLine(\"&lt;script type=\\\"text/javascript\\\"&gt;\");\n\n        foreach (var prop in typeof(Constants).GetFields())\n        {\n            sb.AppendLine(string.Format(\"    var {0} = '{1}'\", prop.Name, prop.GetValue(null).ToString()));\n        }\n\n        sb.AppendLine(\"&lt;/script&gt;\");\n        return new HtmlString(sb.ToString());\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>My version to create a namespaced javascript object from my C# constants that is immutable:</p>\n\n<pre><code>public static HtmlString GetConstants&lt;T&gt;()\n        {\n            StringBuilder jsConstant = new StringBuilder();\n                jsConstant.Append(\"myApp.\" + typeof(T).Name + \" = Object.freeze({\");\n            foreach(var item in typeof(T).GetFields())\n            {\n                jsConstant.Append(string.Format(\"{0}:'{1}'\",item.Name,item.GetValue(null).ToString()) + \",\");\n            }\n            jsConstant.Remove(jsConstant.Length - 1, 1);\n            jsConstant.Append(\"})\");\n            return new HtmlString(jsConstant.ToString());\n        }\n</code></pre>\n\n<p>Used like this in Razor:</p>\n\n<pre><code>@(HtmlHelpers.GetConstants&lt;MyApp.Infrastructure.ApplicationConstants.SomeConstants&gt;())\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'd like to use string constants on both sides, in C# on server and in Javascript on client.\nI encapsulate my constants in C# class</p>\n\n<pre><code>namespace MyModel\n{\n        public static class Constants\n        {\n            public const string T_URL = \"url\";\n            public const string T_TEXT = \"text\";\n     . . .\n        }\n}\n</code></pre>\n\n<p>I found a way to use these constants in Javascript using Razor syntax, but it looks weird to me:</p>\n\n<pre><code>@using MyModel\n        &lt;script type=\"text/javascript\"&gt;\n\n            var T_URL = '@Constants.T_URL';  \n            var T_TEXT = '@Constants.T_TEXT';\n     . . .\n            var selValue = $('select#idTagType').val();\n            if (selValue == T_TEXT) { ... \n</code></pre>\n\n<p>Is there any more \"elegant\" way of sharing constants between C# and Javascript?\n(Or at least more automatic, so I do not have to make changes in two files)</p>\n",
            "last_activity_date": 1426174099,
            "question_id": 6217028,
            "score": 19,
            "tags": [
                "javascript",
                "asp.net-mvc-3",
                "razor"
            ],
            "title": "Share constants between C# and Javascript in MVC Razor"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>how about:</p>\n\n<h3>jQuery:</h3>\n\n<pre><code>   $('.majorpoints').click(function(){\n     $(this).find('.hiders').toggle();\n   });\n</code></pre>\n\n<h3>HTML</h3>\n\n<pre><code>&lt;div&gt;\n    &lt;fieldset class=\"majorpoints\"&gt;\n    &lt;legend class=\"majorpointslegend\"&gt;Expand&lt;/legend&gt;\n    &lt;div class=\"hider\" style=\"display:none\" &gt;\n        &lt;ul&gt;\n            &lt;li&gt;cccc&lt;/li&gt;\n            &lt;li&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<h2><a href=\"http://jsfiddle.net/KqFRu/7/\" rel=\"nofollow\">Fiddle</a></h2>\n\n<p>This way you are binding the click event to the <code>.majorpoints</code> class an you don't have to write it in the HTML each time.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Many problems here</p>\n\n<p>I've set up a fiddle that works for you: <a href=\"http://jsfiddle.net/w9kSU/\" rel=\"nofollow\">http://jsfiddle.net/w9kSU/</a></p>\n\n<pre><code>$('.majorpointslegend').click(function(){\n\nif($(this).text()=='Expand'){\n    $('#mylist').show();\n    $(this).text('Colapse');\n}else{\n    $('#mylist').hide();\n    $(this).text('Expand');\n}\n</code></pre>\n\n<p>});</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Take a look at toggle() jQuery function : </p>\n\n<p><a href=\"http://api.jquery.com/toggle/\" rel=\"nofollow\">http://api.jquery.com/toggle/</a></p>\n\n<p>Also, innerHTML jQuery Function is .html()</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>So, first of all, your Javascript isn't even using jQuery.  There are a couple ways to do this. For example:</p>\n\n<p>First way, using the jQuery <code>toggle</code> method:</p>\n\n<pre><code>&lt;div class=\"expandContent\"&gt;\n        &lt;a href=\"#\"&gt;Click Here to Display More Content&lt;/a&gt;\n &lt;/div&gt;\n&lt;div class=\"showMe\" style=\"display:none\"&gt;\n        This content was hidden, but now shows up\n&lt;/div&gt;\n\n&lt;script&gt;  \n    $('.expandContent').click(function(){\n        $('.showMe').toggle();\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>jsFiddle:  <a href=\"http://jsfiddle.net/pM3DF/\" rel=\"nofollow\">http://jsfiddle.net/pM3DF/</a></p>\n\n<p>Another way is simply to use the jQuery <code>show</code> method:</p>\n\n<pre><code>&lt;div class=\"expandContent\"&gt;\n        &lt;a href=\"#\"&gt;Click Here to Display More Content&lt;/a&gt;\n &lt;/div&gt;\n&lt;div class=\"showMe\" style=\"display:none\"&gt;\n        This content was hidden, but now shows up\n&lt;/div&gt;\n\n&lt;script&gt;\n    $('.expandContent').click(function(){\n        $('.showMe').show();\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>jsFiddle: <a href=\"http://jsfiddle.net/Q2wfM/\" rel=\"nofollow\">http://jsfiddle.net/Q2wfM/</a></p>\n\n<p>Yet a third way is to use the <code>slideToggle</code> method of jQuery which allows for some effects.  Such as <code>$('#showMe').slideToggle('slow');</code> which will slowly display the hidden div.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>try jquery,</p>\n\n<pre><code>  &lt;div&gt;\n        &lt;a href=\"#\" class=\"majorpoints\" onclick=\"majorpointsexpand(\" + $('.majorpointslegend').html() + \")\"/&gt;\n        &lt;legend class=\"majorpointslegend\"&gt;Expand&lt;/legend&gt;\n        &lt;div id=\"data\" style=\"display:none\" &gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n\nfunction majorpointsexpand(expand)\n    {\n        if (expand == \"Expand\")\n            {\n                $('#data').css(\"display\",\"inherit\");\n                $(\".majorpointslegend\").html(\"Collapse\");\n            }\n        else\n            {\n                $('#data').css(\"display\",\"none\");\n                $(\".majorpointslegend\").html(\"Expand\");\n            }\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Since you have jQuery on the page, you can remove that <code>onclick</code> attribute and the <code>majorpointsexpand</code> function. Add the following script to the bottom of you page or, preferably, to an external .js file:</p>\n\n<pre><code>$(function(){\n\n  $('.majorpointslegend').click(function(){\n    $(this).next().toggle().text( $(this).is(':visible')?'Collapse':'Expand' );\n  });\n\n});\n</code></pre>\n\n<p>This solutionshould work with your HTML as is but it isn't really a very robust answer. If you change your <code>fieldset</code> layout, it could break it. I'd suggest that you put a <code>class</code> attribute in that hidden div, like <code>class=\"majorpointsdetail\"</code> and use this code instead:</p>\n\n<pre><code>$(function(){\n\n  $('.majorpoints').on('click', '.majorpointslegend', function(event){\n    $(event.currentTarget).find('.majorpointsdetail').toggle();\n    $(this).text( $(this).is(':visible')?'Collapse':'Expand' );\n  });\n\n});\n</code></pre>\n\n<p>Obs: there's no closing <code>&lt;/fieldset&gt;</code> tag in your question so I'm assuming the hidden div is inside the fieldset.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Okay, so you've got two options here :</p>\n\n<ol>\n<li>Use jQuery UI's accordion - its nice, easy and fast. See more info <a href=\"http://jqueryui.com/accordion/\">here</a></li>\n<li>Or, if you still wanna do this by yourself, you could remove the <code>fieldset</code> (its not semantically right to use it for this anyway) and create a structure by yourself.</li>\n</ol>\n\n<p>Here's how you do that. Create a HTML structure like this :</p>\n\n<pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"header\"&gt;&lt;span&gt;Expand&lt;/span&gt;\n\n    &lt;/div&gt;\n    &lt;div class=\"content\"&gt;\n        &lt;ul&gt;\n            &lt;li&gt;This is just some random content.&lt;/li&gt;\n            &lt;li&gt;This is just some random content.&lt;/li&gt;\n            &lt;li&gt;This is just some random content.&lt;/li&gt;\n            &lt;li&gt;This is just some random content.&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>With this CSS: (This is to hide the <code>.content</code> stuff when the page loads.</p>\n\n<pre><code>.container .content {\n    display: none;\n    padding : 5px;\n}\n</code></pre>\n\n<p>Then, using jQuery, write a <code>click</code> event for the header.</p>\n\n<pre><code>$(\".header\").click(function () {\n\n    $header = $(this);\n    //getting the next element\n    $content = $header.next();\n    //open up the content needed - toggle the slide- if visible, slide up, if not slidedown.\n    $content.slideToggle(500, function () {\n        //execute this after slideToggle is done\n        //change text of header based on visibility of content div\n        $header.text(function () {\n            //change text based on condition\n            return $content.is(\":visible\") ? \"Collapse\" : \"Expand\";\n        });\n    });\n\n});\n</code></pre>\n\n<p>Here's a demo : <a href=\"http://jsfiddle.net/hungerpain/eK8X5/7/\">http://jsfiddle.net/hungerpain/eK8X5/7/</a></p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>You might want to give a look at this simple Javascript method to be invoked when clicking on a link to make a panel/div expande or collapse.</p>\n\n<pre><code>&lt;script language=\"javascript\"&gt; \nfunction toggle(elementId) {\n    var ele = document.getElementById(elementId);\n    if(ele.style.display == \"block\") {\n            ele.style.display = \"none\";\n    }\n    else {\n        ele.style.display = \"block\";\n    }\n} \n&lt;/script&gt;\n</code></pre>\n\n<p>You can pass the div ID and it will toggle between display 'none' or 'block'.</p>\n\n<p>Original source on <strong>snip2code</strong> - <a href=\"http://www.snip2code.com/Snippet/18734/\" rel=\"nofollow\">How to collapse a div in html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://jsfiddle.net/Intacto/dgpKU/5/\" rel=\"nofollow\">Here there is my example of animation a staff list with expand a description.</a></p>\n\n<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;style&gt;\n      .staff {            margin:10px 0;}\n      .staff-block{       float: left; width:48%; padding-left: 10px; padding-bottom: 10px;}\n      .staff-title{       font-family: Verdana, Tahoma, Arial, Serif; background-color: #1162c5; color: white; padding:4px; border: solid 1px #2e3d7a; border-top-left-radius:3px; border-top-right-radius: 6px; font-weight: bold;}\n      .staff-name {       font-family: Myriad Web Pro; font-size: 11pt; line-height:30px; padding: 0 10px;}\n      .staff-name:hover { background-color: silver !important; cursor: pointer;}\n      .staff-section {    display:inline-block; padding-left: 10px;}\n      .staff-desc {       font-family: Myriad Web Pro; height: 0px; padding: 3px; overflow:hidden; background-color:#def; display: block; border: solid 1px silver;}\n      .staff-desc p {     text-align: justify; margin-top: 5px;}\n      .staff-desc img {   margin: 5px 10px 5px 5px; float:left; height: 185px; }\n    &lt;/style&gt;\n  &lt;/head&gt;\n&lt;body&gt;\n&lt;!-- START STAFF SECTION --&gt;\n&lt;div class=\"staff\"&gt;\n  &lt;div class=\"staff-block\"&gt;\n    &lt;div  class=\"staff-title\"&gt;Staff&lt;/div&gt;\n    &lt;div class=\"staff-section\"&gt;\n        &lt;div class=\"staff-name\"&gt;Maria Beavis&lt;/div&gt;\n        &lt;div class=\"staff-desc\"&gt;\n          &lt;p&gt;&lt;img src=\"http://www.craigmarlatt.com/canada/images/security&amp;defence/coulombe.jpg\" /&gt;Maria earned a Bachelor of Commerce degree from McGill University in 2006 with concentrations in Finance and International Business. She has completed her wealth Management Essentials course with the Canadian Securities Institute and has worked in the industry since 2007.&lt;/p&gt;\n        &lt;/div&gt;\n        &lt;div class=\"staff-name\"&gt;Diana Smitt&lt;/div&gt;\n        &lt;div class=\"staff-desc\"&gt;\n          &lt;p&gt;&lt;img src=\"http://www.craigmarlatt.com/canada/images/security&amp;defence/coulombe.jpg\" /&gt;Diana joined the Diana Smitt Group to help contribute to its ongoing commitment to provide superior investement advice and exceptional service. She has a Bachelor of Commerce degree from the John Molson School of Business with a major in Finance and has been continuing her education by completing courses.&lt;/p&gt;\n        &lt;/div&gt;\n        &lt;div class=\"staff-name\"&gt;Mike Ford&lt;/div&gt;\n        &lt;div class=\"staff-desc\"&gt;\n          &lt;p&gt;&lt;img src=\"http://www.craigmarlatt.com/canada/images/security&amp;defence/coulombe.jpg\" /&gt;Mike: A graduate of \u00c9cole des hautes \u00e9tudes commerciales (HEC Montreal), Guillaume holds the Chartered Investment Management designation (CIM). After having been active in the financial services industry for 4 years at a leading competitor he joined the Mike Ford Group.&lt;/p&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n\n  &lt;div class=\"staff-block\"&gt;\n    &lt;div  class=\"staff-title\"&gt;Technical Advisors&lt;/div&gt;\n    &lt;div class=\"staff-section\"&gt;\n        &lt;div class=\"staff-name\"&gt;TA Elvira Bett&lt;/div&gt;\n        &lt;div class=\"staff-desc\"&gt;\n          &lt;p&gt;&lt;img src=\"http://www.craigmarlatt.com/canada/images/security&amp;defence/coulombe.jpg\" /&gt;Elvira has completed her wealth Management Essentials course with the Canadian Securities Institute and has worked in the industry since 2007. Laura works directly with Caroline Hild, aiding in revising client portfolios, maintaining investment objectives, and executing client trades.&lt;/p&gt;\n        &lt;/div&gt;\n        &lt;div class=\"staff-name\"&gt;TA Sonya Rosman&lt;/div&gt;\n        &lt;div class=\"staff-desc\"&gt;\n          &lt;p&gt;&lt;img src=\"http://www.craigmarlatt.com/canada/images/security&amp;defence/coulombe.jpg\" /&gt;Sonya has a Bachelor of Commerce degree from the John Molson School of Business with a major in Finance and has been continuing her education by completing courses through the Canadian Securities Institute. She recently completed her Wealth Management Essentials course and became an Investment Associate.&lt;/p&gt;\n        &lt;/div&gt;\n        &lt;div class=\"staff-name\"&gt;TA Tim Herson&lt;/div&gt;\n        &lt;div class=\"staff-desc\"&gt;\n          &lt;p&gt;&lt;img src=\"http://www.craigmarlatt.com/canada/images/security&amp;defence/coulombe.jpg\" /&gt;Tim joined his father&amp;#8217;s group in order to continue advising affluent families in Quebec. He is currently President of the Mike Ford Professionals Association and a member of various other organisations.&lt;/p&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- STOP STAFF SECTION --&gt;\n\n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt; \n\n&lt;script language=\"javascript\"&gt;&lt;!--\n//&lt;![CDATA[\n$('.staff-name').hover(function() {\n    $(this).toggleClass('hover');\n});\nvar lastItem;\n    $('.staff-name').click(function(currentItem) {\n        var currentItem = $(this);\n      if ($(this).next().height() == 0) {\n          $(lastItem).css({'font-weight':'normal'});\n          $(lastItem).next().animate({height: '0px'},400,'swing');\n          $(this).css({'font-weight':'bold'});\n          $(this).next().animate({height: '300px',opacity: 1},400,'swing');\n      } else {\n          $(this).css({'font-weight':'normal'});\n          $(this).next().animate({height: '0px',opacity: 1},400,'swing');\n      }\n      lastItem = $(this);\n    });\n//]]&gt;\n--&gt;&lt;/script&gt;\n\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/Intacto/dgpKU/5/\" rel=\"nofollow\">Fiddle</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have created a list on my site.  This list is created by a foreach loop that builds with information from my database.  Each item is a container with different sections, so this is not a list like 1, 2, 3... etc.  I am listing repeating sections with information.  In each section, there is a subsection.  The general build is as follows:</p>\n\n<pre><code>&lt;div&gt;\n    &lt;fieldset class=\"majorpoints\" onclick=\"majorpointsexpand($this.find('legend').innerHTML)\"&gt;\n    &lt;legend class=\"majorpointslegend\"&gt;Expand&lt;/legend&gt;\n    &lt;div style=\"display:none\" &gt;\n        &lt;ul&gt;\n            &lt;li&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>So, I am trying to call a function with onclick=\"majorpointsexpand($this.find('legend').innerHTML)\"</p>\n\n<p>The div I am trying to manipulate is style=\"display:none\" by default, and I want to use javascript to make it visible on click.</p>\n\n<p>The \"$this.find('legend').innerHTML\" is attempting to pass, in this case, \"Expand\" as an argument in the function.</p>\n\n<p>Here is the javascript:</p>\n\n<pre><code>function majorpointsexpand(expand)\n    {\n        if (expand == \"Expand\")\n            {\n                document.write.$this.find('div').style = \"display:inherit\";\n                document.write.$this.find('legend').innerHTML = \"Collapse\";\n            }\n        else\n            {\n                document.write.$this.find('div').style = \"display:none\";\n                document.write.$this.find('legend').innerHTML = \"Expand\";\n            }\n    }\n</code></pre>\n\n<p>I am almost 100% sure my problem is syntax, and I don't have much of a grasp on how javascript works.</p>\n\n<p>I do have jQuery linked to the document with:</p>\n\n<pre><code>&lt;script src=\"http://code.jquery.com/jquery-1.9.1.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>In the .</p>\n",
            "last_activity_date": 1424856332,
            "question_id": 17460116,
            "score": 14,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Expand and collapse a div using javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Use ShaderMaterial and set both textures as uniforms, and then blend them within shader.</p>\n\n<p>I made this example: <a href=\"http://abstract-algorithm.com/three_sh/\">http://abstract-algorithm.com/three_sh/</a> and that really should be enough. </p>\n\n<p>So, you make ShaderMaterial:</p>\n\n\n\n<pre><code>var vertShader = document.getElementById('vertex_shh').innerHTML;\nvar fragShader = document.getElementById('fragment_shh').innerHTML;\n\nvar attributes = {}; // custom attributes\n\nvar uniforms = {    // custom uniforms (your textures)\n\n  tOne: { type: \"t\", value: THREE.ImageUtils.loadTexture( \"cover.png\" ) },\n  tSec: { type: \"t\", value: THREE.ImageUtils.loadTexture( \"grass.jpg\" ) }\n\n};\n\nvar material_shh = new THREE.ShaderMaterial({\n\n  uniforms: uniforms,\n  attributes: attributes,\n  vertexShader: vertShader,\n  fragmentShader: fragShader\n\n});\n</code></pre>\n\n<p>And create mesh with that material:</p>\n\n\n\n<pre><code>var me = new THREE.Mesh( new THREE.CubeGeometry(80,80,80), material_shh );\n</code></pre>\n\n<p>You can put simplest vertex shader:</p>\n\n\n\n<pre><code>varying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n}\n</code></pre>\n\n<p>And fragment shader that will actually do the blending:</p>\n\n\n\n<pre><code>#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform sampler2D tOne;\nuniform sampler2D tSec;\n\nvarying vec2 vUv;\n\nvoid main(void)\n{\n    vec3 c;\n    vec4 Ca = texture2D(tOne, vUv);\n    vec4 Cb = texture2D(tSec, vUv);\n    c = Ca.rgb * Ca.a + Cb.rgb * Cb.a * (1.0 - Ca.a);  // blending equation\n    gl_FragColor= vec4(c, 1.0);\n}\n</code></pre>\n\n<p>If you need to blend even more textures, you use same equation for blending just multiple times.</p>\n\n<p>So here's the result:</p>\n\n<p><img src=\"http://i.stack.imgur.com/ih2vF.jpg\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<p>Is it possible to lay multiple textures on top of each other on the same face in Three.js so that the alpha blending is done GPU accelerated in webGL?</p>\n\n<p>The textures are (or should be) applied to the same face so that the bottom texture (texture 1) is without alpha channel and the above textures are alpha channeled in a way like texture 2 in the below image example.</p>\n\n<p>This blending can be achieved using HTML5 Canvas as pre-step, but because texture bitmaps can be huge, I prefer to skip Canvas blending operations.</p>\n\n<p>I tested by creating a copy of the mesh and applying one texture per mesh and made other mesh transparent and moved it a little, which succeeded nearly well, but there is some flickering and because objects cannot be exactly in the same position, there is some room between textures which is not the right effect. They should seem like they were blended in eg. Photoshop (as is the below image).</p>\n\n<p><img src=\"http://i.stack.imgur.com/cIrfi.png\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1370265332,
            "question_id": 16287547,
            "score": 13,
            "tags": [
                "javascript",
                "three.js",
                "webgl",
                "textures",
                "alphablending"
            ],
            "title": "Multiple transparent textures on the same mesh face in Three.js"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Alright, it seems a lot of whining about a simple issue that I still believe my old answer clarifies. Anyway, let me babysit you. :)</p>\n\n<p><em>First</em>: I find out that you cannot really go to the \"previous\" page from the first page. Ideally, I should. So, here is a bug that I have filed you may want to follow: <a href=\"https://developers.facebook.com/bugs/391562790938294?browse=search_50fcac3ce094e7068176315\">https://developers.facebook.com/bugs/391562790938294?browse=search_50fcac3ce094e7068176315</a></p>\n\n<p><em>Second</em>: If this is by design, you cannot go back to \"previous\" from the first page (because there <em>is</em> no previous), but you can surely go to \"Next\". However, since the API behaves as a cursor, and you have moved forward, now your \"previous\" page would work.</p>\n\n<p><strong>The answer to the question:</strong><br>\n<em>I'm getting a URL as previous page and I don't know how to make a javascript FB.api call from that URL. Any ideas?</em></p>\n\n<blockquote>\n  <p>yes, you can make FB.api call. But I suggest you to make a HTTP GET call instead, because it's easier. Also, note that previous may return and empty array like <code>{\"data\":[]}</code></p>\n</blockquote>\n\n<p><strong>How to get previous/next page?</strong><br>\nHere, I am writing a small code that uses jQuery. In case you do not want to read the code, there are two ways:  </p>\n\n<ol>\n<li>Use previous/next URL and make HTTP GET request. Which, if not empty, will come with next set of \"previous\", \"next\" link.</li>\n<li>Parse the URL, and get the query-string as JSON ans pass it to <code>FB.api</code>. I used <a href=\"http://benalman.com/code/projects/jquery-bbq/docs/files/jquery-ba-bbq-js.html#jQuery.deparam\">jQuery BBQ pluging</a> for parsing.</li>\n</ol>\n\n<p><strong>Important Note:</strong> In the example, I am using \"next\" URL because on the first request if I use \"previous\" it gives empty JSON instead of giving posts from the past. However, I can use use \"previous\" URL once I have moved ahead a few pages. Like Google results, you can not go previous on page 1, but you can from any page > 1 (see Example 3 below). This is called pagination.</p>\n\n<p><strong>Example 1: Code using HTTP GET (preferred):</strong> (I will load 3 posts/page and look three next-pages)  </p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.8/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"http://connect.facebook.net/en_US/all.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"https://raw.github.com/cowboy/jquery-bbq/master/jquery.ba-bbq.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n\nvar i =0;\nvar getPosts = function (response){\n          for (element in response.data){\n            post = response.data[element]\n            console.log(post.id + \": \" +post.message);          \n          }\n\n\n\n          // can i call FB.api(nextPage, getPosts); ??\n          if(i &lt; 2){\n              nextPage = response.paging.next;        \n              console.log(nextPage);\n              i++;\n              //Method 1: I use it.\n              $.get(nextPage, getPosts, \"json\"); //optional: $.getJSON can be use instead\n          }\n\n      }\n\n$(document).ready(function(){\n\n$('#loadPosts').bind('click', function() {\n            FB.api('/me/home',{since:'yesterday','limit': '3'}, getPosts);   \n          });\n})\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"fb-root\"&gt;&lt;/div&gt;\n&lt;script&gt;\n  window.fbAsyncInit = function() {\n    // init the FB JS SDK\n    FB.init({\n      appId      : 'XXXXXXXXXXXX', // FILL YOUR APP ID HERE!\n      status     : true, // check the login status upon init?\n      cookie     : true, // set sessions cookies to allow your server to access the session?\n    });\n\n    // Additional initialization code such as adding Event Listeners goes here\n\n  };\n&lt;/script&gt;\n&lt;button id=\"loadPosts\"&gt;Load Posts&lt;/button&gt;\n&lt;p&gt;Please open developer console to see what's happening. In Firefox, you can use ctrl+shift+k, and in Chrome/Chromium use ctrl+shift+i&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><em>Response</em>:</p>\n\n<pre><code>100004192352945_156620584487686: undefined\n137723270230_10152423499430231: On this day, please spare a thought for those fellow citizens, for whom I just spare a thought and do nothing else.\n642965867_10151211036740868: Thanks everyone for their wishes! The wishes made my day!\n\nhttps://graph.facebook.com/677811901/home?limit=3&amp;access_token=AAACYjXGS5FQBAIR3brc2LibjBcZCi2kRJUybG8VMaaJSZARQ8SzNE7BE4PBrDIFVZB0AaVEa1dZCpX1fhCvoD2rnq8uc8OGaIFhO9uvVXAZDZD&amp;until=1359184568\n367116489976035_536776529676696: Rage. Quit. Life.\n899605553_10152450871820554: undefined\n367116489976035_417820828298092: undefined\n\nhttps://graph.facebook.com/677811901/home?limit=3&amp;access_token=AAACYjXGS5FQBAIR3brc2LibjBcZCi2kRJUybG8VMaaJSZARQ8SzNE7BE4PBrDIFVZB0AaVEa1dZCpX1fhCvoD2rnq8uc8OGaIFhO9uvVXAZDZD&amp;until=1359179890\n137723270230_10152423148745231: Pratibha Patil used to love the Republic Day Parade, especially the part where the visiting Chief Guest extended her an invitation to visit his/her own country.\n137723270230_10152423131700231: The Kingfisher tableau at Republic Day Parade was so simple. Vijay Mallya riding a bicycle.\n367116489976035_484460034950769: undefined\n</code></pre>\n\n<p><strong>Example 2: Code using FB.api:</strong> (I will load 3 posts/page and look three next-pages)</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.8/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"http://connect.facebook.net/en_US/all.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"https://raw.github.com/cowboy/jquery-bbq/master/jquery.ba-bbq.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n\nvar i =0;\nvar getPosts = function (response){\n          for (element in response.data){\n            post = response.data[element]\n            console.log(post.id + \": \" +post.message);          \n          }\n\n\n\n          // can i call FB.api(nextPage, getPosts); ??\n          if(i &lt; 2){\n              nextPage = response.paging.next;        \n              console.log(nextPage);\n              i++;\n\n              //Method 2: If you have to call FB.api\n              var params = jQuery.deparam.querystring(nextPage);\n              console.log(JSON.stringify(params, null, 2));\n              FB.api('/me/home', params, getPosts)\n          }\n\n      }\n\n$(document).ready(function(){\n\n$('#loadPosts').bind('click', function() {\n            FB.api('/me/home',{since:'yesterday','limit': '3'}, getPosts);   \n          });\n})\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"fb-root\"&gt;&lt;/div&gt;\n&lt;script&gt;\n  window.fbAsyncInit = function() {\n    // init the FB JS SDK\n    FB.init({\n      appId      : 'XXXXXXXXXXXX', // FILL YOUR APP ID HERE!\n      status     : true, // check the login status upon init?\n      cookie     : true, // set sessions cookies to allow your server to access the session?\n    });\n\n    // Additional initialization code such as adding Event Listeners goes here\n\n  };\n&lt;/script&gt;\n&lt;button id=\"loadPosts\"&gt;Load Posts&lt;/button&gt;\n&lt;p&gt;Please open developer console to see what's happening. In Firefox, you can use ctrl+shift+k, and in Chrome/Chromium use ctrl+shift+i&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><em>Response</em>:</p>\n\n<pre><code>367116489976035_536776529676696: Rage. Quit. Life.\n899605553_10152450871820554: undefined\n367116489976035_417820828298092: undefined\n{\n  \"limit\": \"3\",\n  \"access_token\": \"AAACYjXGS5FQBAIR3brc2LibjBcZCi2kRJUybG8VMaaJSZARQ8SzNE7BE4PBrDIFVZB0AaVEa1dZCpX1fhCvoD2rnq8uc8OGaIFhO9uvVXAZDZD\",\n  \"until\": \"1359179890\"\n}\n\n137723270230_10152423148745231: Pratibha Patil used to love the Republic Day Parade, especially the part where the visiting Chief Guest extended her an invitation to visit his/her own country.\n137723270230_10152423131700231: The Kingfisher tableau at Republic Day Parade was so simple. Vijay Mallya riding a bicycle.\n367116489976035_484460034950769: undefined\n\nhttps://graph.facebook.com/677811901/home?limit=3&amp;access_token=AAACYjXGS5FQBAIR3brc2LibjBcZCi2kRJUybG8VMaaJSZARQ8SzNE7BE4PBrDIFVZB0AaVEa1dZCpX1fhCvoD2rnq8uc8OGaIFhO9uvVXAZDZD&amp;until=1359178140\n{\n  \"limit\": \"3\",\n  \"access_token\": \"AAACYjXGS5FQBAIR3brc2LibjBcZCi2kRJUybG8VMaaJSZARQ8SzNE7BE4PBrDIFVZB0AaVEa1dZCpX1fhCvoD2rnq8uc8OGaIFhO9uvVXAZDZD\",\n  \"until\": \"1359178140\"\n}\n655515199_403590309726450: a good resolution to take on Republic Day\n505588854_496901583686790: Love the secret world that slow motion reveals.\n693811975_10151217837201976: undefined\n</code></pre>\n\n<p><strong>Example 3: Performing: page1 -> page2 -> page1 or page -> next -> previous</strong> The following code will load page1, then go to \"next\" page (page2), then come back to page1, using \"previous\"</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.8/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"http://connect.facebook.net/en_US/all.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"https://raw.github.com/cowboy/jquery-bbq/master/jquery.ba-bbq.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n\nvar i =0;\nvar getPosts = function (response){\n          for (element in response.data){\n            post = response.data[element]\n            console.log(post.id + \": \" +post.message);          \n          }\n\n\n\n          // can i call FB.api(nextPage, getPosts); ??\n          if(i &lt; 2){\n              nextPage = response.paging.next;        \n              if(i==1)\n                nextPage = response.paging.previous;\n\n              console.log(nextPage);\n              i++;\n              $.get(nextPage, getPosts, \"json\"); //optional: $.getJSON can be use instead\n          }\n\n      }\n\n$(document).ready(function(){\n\n$('#loadPosts').bind('click', function() {\n            FB.api('/me/home',{since:'yesterday','limit': '3'}, getPosts);   \n          });\n})\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"fb-root\"&gt;&lt;/div&gt;\n&lt;script&gt;\n  window.fbAsyncInit = function() {\n    // init the FB JS SDK\n    FB.init({\n      appId      : 'XXXXXXXXXXXX', // FILL YOUR APP ID HERE!\n      status     : true, // check the login status upon init?\n      cookie     : true, // set sessions cookies to allow your server to access the session?\n    });\n\n    // Additional initialization code such as adding Event Listeners goes here\n\n  };\n&lt;/script&gt;\n&lt;button id=\"loadPosts\"&gt;Load Posts&lt;/button&gt;\n&lt;p&gt;Please open developer console to see what's happening. In Firefox, you can use ctrl+shift+k, and in Chrome/Chromium use ctrl+shift+i&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><em>Response</em>:</p>\n\n<pre><code>PAGE1:\n367116489976035_536806916340324: How big is the Solar System?\nFull infographic here: http://bit.ly/WmzfVn\n137723270230_10152423534790231: \"Sociologist\" Ashis Nandy has claimed that most of the corrupt came from OBC/SC/ST castes.\nFollowing this, Corrupt people have strongly condemned Nandy's attempts to divide them on caste lines. They'll be united in loot, forever.\n100004192352945_156620584487686: undefined\n\nPAGE2:\nhttps://graph.facebook.com/677811901/home?limit=3&amp;access_token=AAACYjXGS5FQBAKqIMyCVYjH9upK4e2bjUwLoVbbFDL0ffc0SZBTVR9MUFGV4ZCq6HBdFIadFMpLDC3ATMZCJ4GPsXWpG4qTGODavuvzLAZDZD&amp;until=1359185659\n\n137723270230_10152423499430231: On this day, please spare a thought for those fellow citizens, for whom I just spare a thought and do nothing else.\n642965867_10151211036740868: Thanks everyone for their wishes! The wishes made my day!\n367116489976035_536776529676696: Rage. Quit. Life.\n\nPAGE1:\nhttps://graph.facebook.com/677811901/home?limit=3&amp;access_token=AAACYjXGS5FQBAKqIMyCVYjH9upK4e2bjUwLoVbbFDL0ffc0SZBTVR9MUFGV4ZCq6HBdFIadFMpLDC3ATMZCJ4GPsXWpG4qTGODavuvzLAZDZD&amp;since=1359185123&amp;__previous=1\n\n367116489976035_536806916340324: How big is the Solar System?\nFull infographic here: http://bit.ly/WmzfVn\n137723270230_10152423534790231: \"Sociologist\" Ashis Nandy has claimed that most of the corrupt came from OBC/SC/ST castes.\nFollowing this, Corrupt people have strongly condemned Nandy's attempts to divide them on caste lines. They'll be united in loot, forever.\n100004192352945_156620584487686: undefined\n</code></pre>\n\n<hr>\n\n<p><strong>OLD ANSWER</strong> </p>\n\n<p>Use <code>limit</code>, <code>offset</code>, <code>since</code> and <code>until</code> parameters to achieve your goal.</p>\n\n<p>Refer: <a href=\"http://developers.facebook.com/docs/reference/api/\">http://developers.facebook.com/docs/reference/api/</a></p>\n\n<blockquote>\n  <p><strong>Paging</strong></p>\n  \n  <p>When querying connections, there are several useful parameters that enable you to filter and page through connection data:</p>\n  \n  <ul>\n  <li>limit, offset: <a href=\"https://graph.facebook.com/me/likes?limit=3\">https://graph.facebook.com/me/likes?limit=3</a></li>\n  <li>until, since (a unix timestamp or any date accepted by strtotime): <a href=\"https://graph.facebook.com/search?until=yesterday&amp;q=orange\">https://graph.facebook.com/search?until=yesterday&amp;q=orange</a></li>\n  </ul>\n</blockquote>\n\n<p>The following should get all the posts since <code>last week</code> until <code>yesterday</code> from <code>21st - 30th</code> message (basically, third page of 10 message per page pagination).</p>\n\n<pre><code> FB.api(\n  '/me/home',\n  {\n    'since':'last week',\n    'limit': '10',\n    'offset': '20',\n    'until': 'yesterday'\n  }, \n  getPosts\n); \n</code></pre>\n\n<hr>\n\n<p>I've just tested, it works. I have used limit=4, which is page-size kind of thing. So, when I fetch data since Feb 02, 2011 (Unix Time Stamp: 1296626400) till today using this</p>\n\n<pre><code>https://graph.facebook.com/me/home?access_token=[AUTH_TOKEN]&amp;since=1296626400&amp;limit=4\n</code></pre>\n\n<p>It returns the data, plus it also return URL to go to next page</p>\n\n<pre><code>{\n   \"data\": [\n      &lt;ARRAY OF POSTS HERE&gt;\n   ],\n   \"paging\": {\n      \"previous\": \"https://graph.facebook.com/me/home?access_token=[NEW_AUTH_TOKEN]&amp;since=1298026753&amp;limit=4\",\n      \"next\": \"https://graph.facebook.com/me/home?access_token=[NEW_AUTH_TOKEN]&amp;limit=4&amp;until=1298023222\"\n   }\n}\n</code></pre>\n\n<p>You can safely use <code>previous</code> and <code>next</code> attributes of the JSON object to jump to next page (or previous page). This seems to be the easiest way to do.</p>\n\n<p>By the way, <code>\\u00257C</code> needed to be converted to <code>|</code> to get this to work.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>The key constraint in your question is we can't use the 'next' url provided in the response.</p>\n\n<p>I'll try to answer your question by first asking a more general question: </p>\n\n<blockquote>\n  <p>How can we create a user experience for our Facebook app where every call for more items returns the same amount of items.</p>\n</blockquote>\n\n<p>If the user requests 'more' and gets 10 items, presses 'more' and gets then 4, then 7 etc, she might think our app is buggy.</p>\n\n<p>On the Open Graph <a href=\"https://developers.facebook.com/docs/reference/api/\" rel=\"nofollow\">intro page</a>, different parameters for paging are introduced. These are:  </p>\n\n<blockquote>\n  <p>limit</p>\n  \n  <p>offset</p>\n  \n  <p>until</p>\n  \n  <p>since</p>\n</blockquote>\n\n<p>as mentioned under the 'paging' heading. However if we implement a solution with limit and offset where we increment offset ,e.g.:</p>\n\n<pre><code>https://graph.facebook.com/me/home?limit=10&amp;offset=OFFSET\n</code></pre>\n\n<p>where OFFSET will be increased by the limit each request, we find that the number of results returned will sometimes not be equal to the \u201climit\u201d parameter we specified. This is because parameters are applied on Facebook's side <em>before</em> checking if the queried results are visible to the viewer. We ask for 10, but we might get 8 items in return.</p>\n\n<p>This means we can't use a solution where we increment limit and offset if we want our app's 'more' request to always return the same amount of items.</p>\n\n<p>A solution proposed in this <a href=\"https://developers.facebook.com/blog/post/478/\" rel=\"nofollow\">blog</a> by Jeff Bowen (who works on the Facebook plaform team) is this logic:</p>\n\n<ul>\n<li>request item with limit = YOUR_LIMIT.</li>\n<li>retrieve the created_time field of the last item in the response.</li>\n<li>request next 10 items with since = RETRIEVED_CREATED_TIME and limit=YOUR_LIMIT</li>\n</ul>\n\n<p>Here's a code sample, based on an example in the blog post mentioned above:</p>\n\n<pre><code>var graphURL = \"https://graph.facebook.com/me/home?\" +\n                 \"callback=processResult&amp;\" +\n                 \"date_format=U&amp;\" +\n                 \"limit=10\";\n\nfunction loadPosts() {\n  var script = document.createElement(\"script\");\n  script.src = graphURL;\n  document.body.appendChild(script);\n}\n\nfunction processResult(posts) {\n  if (posts.data.length == 0) {\n    document.getElementById(\"loadMore\").innerHTML =\n      \"No more results\";\n  }\n  else {\n    graphURL = graphURL + \"&amp;until=\" +\n      posts.data[posts.data.length-1].created_time;\n\n    for (var post in posts.data) {\n      var message = document.createElement(\"div\");\n      message.innerHTML = posts.data[post].message;\n      document.getElementById(\"content\").appendChild(message);\n    }\n  }\n}\n</code></pre>\n\n<p>This solution retrieves the next 10 items from the user's newsfeed in chronological order without using the url in the JSON response.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you simply wanted to get the next page (using the paging.next object) you could do a jQuery.getJSON request. Something like the following:</p>\n\n<pre><code>function loadAlbums(){\n    FB.api('/me/albums', function(response){\n        handleAlbumsResponse(response);\n    });\n}\n\nfunction handleAlbumsResponse(response){\n    var albums = response.data;\n\n    for( var i in albums){\n        var album = albums[i];\n        $('#albums ul').append('&lt;li&gt;&lt;a href=\"#\"&gt;' + album.name + '&lt;/a&gt;&lt;/li&gt;');\n    }\n\n    if( response.paging.next){\n        console.log('fetching next page...');\n        $.getJSON(response.paging.next, function(response){                \n            handleAlbumsResponse(response);\n        });\n    } \n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm trying to recover the last week posts in my facebook news feed with the javascript sdk.\nI'm able to get the first page but then, I don't know how to continue iterating through the other pages. I've tried it with the following code:</p>\n\n<pre><code> $('#loadPosts').bind('click', function() {     \n            FB.api('/me/home',{since:'last week'}, getPosts);   \n          });\n\n getPosts = function(response){\n        for (element in response.data){\n            post = response.data[element]\n            console.log(post);          \n          }\n\n          previousPage = response.paging.previous;        \n          console.log(previousPage);\n\n          // can i call FB.api(previousPage, getPosts); ??      \n\n      }\n</code></pre>\n\n<p>But I'm getting a URL as previous page and I don't know how to make a javascript FB.api call from that URL. Any ideas?</p>\n",
            "last_activity_date": 1359188488,
            "question_id": 5023757,
            "score": 12,
            "tags": [
                "javascript",
                "facebook",
                "facebook-graph-api",
                "pagination"
            ],
            "title": "How does paging in facebook javascript API works?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>At a quick glance, it looks good to me.  Here are some minor suggestions:</p>\n\n<ul>\n<li><p>Use a binary search to find the optimal size instead of a linear one.  </p></li>\n<li><p>(optionally) add a mouseover so that a tooltip would give the full string.</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There are a couple of problems with your code.</p>\n\n<ul>\n<li>Why \"/ 5\" ? The width of the characters depends on font-family and font-size.</li>\n<li>You must escape \"str\" in the abbr title (or else an \" will make the code invalid).</li>\n<li>diff is not declared and ends up in the global scope</li>\n<li>The \"substring\" is not supposed to work like that. What browser are you using?</li>\n<li>\"hidden\" is not a valid value of style.display. To hide it you should use the value \"none\" but then the browser don't calculate the offsetWidth. Use style.visibility=\"hidden\" instead.</li>\n<li>The search for the right length is very inefficient.</li>\n<li>Must escape \"&lt;/abbr&gt;\" </li>\n</ul>\n\n<p>I rewrote it for you and added className so you can use a style to set the font-family and font-size. Mr Fooz suggested that you use a mouseover to show the whole string. That is not necessary since modern browsers do that for you (tested with FF, IE, Opera and Chrome)</p>\n\n<pre><code>    function fitStringToSize(str,len,className) {\n    var result = str; // set the result to the whole string as default\n    var span = document.createElement(\"span\");\n    span.className=className; //Allow a classname to be set to get the right font-size.\n    span.style.visibility = 'hidden';\n    span.style.padding = '0px';\n    document.body.appendChild(span);\n\n\n    // check if the string don't fit \n    span.innerHTML = result;\n    if (span.offsetWidth &gt; len) {\n    \tvar posStart = 0, posMid, posEnd = str.length;\n        while (true) {\n    \t\t// Calculate the middle position\n    \t\tposMid = posStart + Math.ceil((posEnd - posStart) / 2);\n    \t\t// Break the loop if this is the last round\n    \t\tif (posMid==posEnd || posMid==posStart) break;\n\n    \t\tspan.innerHTML = str.substring(0,posMid) + '&amp;hellip;';\n\n    \t\t// Test if the width at the middle position is\n    \t\t// too wide (set new end) or too narrow (set new start).\n    \t\tif ( span.offsetWidth &gt; len ) posEnd = posMid; else posStart=posMid;\n    \t}\n    \t//Escape\n    \tvar title = str.replace(\"\\\"\",\"&amp;#34;\");\n    \t//Escape &lt; and &gt;\n    \tvar body = str.substring(0,posStart).replace(\"&lt;\",\"&amp;lt;\").replace(\"&gt;\",\"&amp;gt;\");\n    \tresult = '&lt;abbr title=\"' + title + '\"&gt;' + body + '&amp;hellip;&lt;\\/abbr&gt;';\n    }\n    document.body.removeChild(span);\n    return result;\n    }\n</code></pre>\n\n<p>Edit:\nWhile testing a little more I found a couple of bugs.</p>\n\n<ul>\n<li><p>I used Math.ceil instead of the\nintended Math.floor (I blame this on\nthat English isn't my native\nlanguage)</p></li>\n<li><p>If the input string had html-tags\nthen the result would be undefined\n(it's not good to truncate a tag in\nthe middle or to leave open tags)</p></li>\n</ul>\n\n<p>Improvements:</p>\n\n<ul>\n<li>Escape the string that is copied to the span on all places. You can still use html-entities, but no tags are allowed (&lt; and > will be displayed)</li>\n<li>Rewrote the while-statement (it is a\nlittle faster, but the main reason\nwas to get rid of the bug that\ncaused extra rounds and to get rid\nof the break-statement)</li>\n<li>Renamed the function to\nfitStringToWidth</li>\n</ul>\n\n<p>Version 2:</p>\n\n<pre><code>function fitStringToWidth(str,width,className) {\n  // str    A string where html-entities are allowed but no tags.\n  // width  The maximum allowed width in pixels\n  // className  A CSS class name with the desired font-name and font-size. (optional)\n  // ----\n  // _escTag is a helper to escape 'less than' and 'greater than'\n  function _escTag(s){ return s.replace(\"&lt;\",\"&amp;lt;\").replace(\"&gt;\",\"&amp;gt;\");}\n\n  //Create a span element that will be used to get the width\n  var span = document.createElement(\"span\");\n  //Allow a classname to be set to get the right font-size.\n  if (className) span.className=className;\n  span.style.display='inline';\n  span.style.visibility = 'hidden';\n  span.style.padding = '0px';\n  document.body.appendChild(span);\n\n  var result = _escTag(str); // default to the whole string\n  span.innerHTML = result;\n  // Check if the string will fit in the allowed width. NOTE: if the width\n  // can't be determinated (offsetWidth==0) the whole string will be returned.\n  if (span.offsetWidth &gt; width) {\n    var posStart = 0, posMid, posEnd = str.length, posLength;\n    // Calculate (posEnd - posStart) integer division by 2 and\n    // assign it to posLength. Repeat until posLength is zero.\n    while (posLength = (posEnd - posStart) &gt;&gt; 1) {\n      posMid = posStart + posLength;\n      //Get the string from the begining up to posMid;\n      span.innerHTML = _escTag(str.substring(0,posMid)) + '&amp;hellip;';\n\n      // Check if the current width is too wide (set new end)\n      // or too narrow (set new start)\n      if ( span.offsetWidth &gt; width ) posEnd = posMid; else posStart=posMid;\n    }\n\n    result = '&lt;abbr title=\"' +\n      str.replace(\"\\\"\",\"&amp;quot;\") + '\"&gt;' +\n      _escTag(str.substring(0,posStart)) +\n      '&amp;hellip;&lt;\\/abbr&gt;';\n  }\n  document.body.removeChild(span);\n  return result;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>can you write same function but to fit width and height of a div? I have a div with fixed width and height, where I need to put text from database. if text is too big for div, I want to cut it and ad ... at the end? Possible? Thank you</p>\n\n<p>EDIT:\nI found JS solution for my question:</p>\n\n<pre><code>&lt;p id=\"truncateMe\"&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing\nelit. Aenean consectetuer. Etiam venenatis. Sed ultricies, pede sit\namet aliquet lobortis, nisi ante sagittis sapien, in rhoncus lectus\nmauris quis massa. Integer porttitor, mi sit amet viverra faucibus,\nurna libero viverra nibh, sed dictum nisi mi et diam. Nulla nunc eros,\nconvallis sed, varius ac, commodo et, magna. Proin vel\nrisus. Vestibulum eu urna. Maecenas lobortis, pede ac dictum pulvinar,\nnibh ante vestibulum tortor, eget fermentum urna ipsum ac neque. Nam\nurna nulla, mollis blandit, pretium id, tristique vitae, neque. Etiam\nid tellus. Sed pharetra enim non nisl.&lt;/p&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n\nvar len = 100;\nvar p = document.getElementById('truncateMe');\nif (p) {\n\n  var trunc = p.innerHTML;\n  if (trunc.length &gt; len) {\n\n    /* Truncate the content of the P, then go back to the end of the\n       previous word to ensure that we don't truncate in the middle of\n       a word */\n    trunc = trunc.substring(0, len);\n    trunc = trunc.replace(/\\w+$/, '');\n\n    /* Add an ellipses to the end and make it a link that expands\n       the paragraph back to its original size */\n    trunc += '&lt;a href=\"#\" ' +\n      'onclick=\"this.parentNode.innerHTML=' +\n      'unescape(\\''+escape(p.innerHTML)+'\\');return false;\"&gt;' +\n      '...&lt;\\/a&gt;';\n    p.innerHTML = trunc;\n  }\n}\n\n&lt;/script&gt;\n</code></pre>\n\n<p>For my purpose I removed link from ..., as I have another tab on my page that holds complete text.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Luckily, <a href=\"http://www.css3.info/preview/text-overflow/\" rel=\"nofollow\">CSS3 text-overflow</a> should eventually take care of that.</p>\n\n<p>If anyone is using ASP.NET and is interested in a server-side solution, check this blog post:</p>\n\n<p><a href=\"http://waldev.blogspot.com/2010/09/truncate-text-string-aspnet-fit-width.html\" rel=\"nofollow\">http://waldev.blogspot.com/2010/09/truncate-text-string-aspnet-fit-width.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Sometimes you have strings that must fit within a certain pixel width. This function attempts to do so efficiently. Please post your suggestions or refactorings below :)</p>\n\n<pre><code>function fitStringToSize(str,len) {\n    var shortStr = str;\n    var f = document.createElement(\"span\");\n    f.style.display = 'hidden';\n    f.style.padding = '0px';\n    document.body.appendChild(f);\n\n    // on first run, check if string fits into the length already.\n    f.innerHTML = str;\n    diff = f.offsetWidth - len;\n\n    // if string is too long, shorten it by the approximate \n    // difference in characters (to make for fewer iterations). \n    while(diff &gt; 0)\n    {\n        shortStr = substring(str,0,(str.length - Math.ceil(diff / 5))) + '&amp;hellip;';\n        f.innerHTML = shortStr;\n        diff = f.offsetWidth - len;\n    }\n\n    while(f.lastChild) {\n        f.removeChild(f.lastChild);\n    }\n    document.body.removeChild(f);\n\n    // if the string was too long, put the original string \n    // in the title element of the abbr, and append an ellipsis\n    if(shortStr.length &lt; str.length)\n    {\n        return '&lt;abbr title=\"' + str + '\"&gt;' + shortStr + '&lt;/abbr&gt;';\n    }\n    // if the string was short enough in the first place, just return it.\n    else\n    {\n        return str;\n    }\n}\n</code></pre>\n\n<p>UPDATE:\n@some's solution below is much better; please use that. </p>\n\n<p>Update 2:\nCode now posted as a <a href=\"https://gist.github.com/24261/7fdb113f1e26111bd78c0c6fe515f6c0bf418af5\">gist</a>; feel free to fork and submit patches :)</p>\n",
            "last_activity_date": 1336035033,
            "question_id": 282758,
            "score": 8,
            "tags": [
                "javascript",
                "text",
                "reference",
                "refactoring"
            ],
            "title": "Truncate a string nicely to fit within a given pixel width"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Do you have to use <code>window.open</code>? What about using <code>window.location=\"http://example.com\"</code>?</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Use this:</p>\n\n<pre><code>location.href = \"http://example.com\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 59
                },
                {
                    "body": "<p>You need to use the name attribute:</p>\n\n<pre><code>window.open(\"www.youraddress.com\",\"_self\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 104
                },
                {
                    "body": "<p><code>window.open(url, wndname, params)</code>, it has three arguments. if you don't want it open in the same window, just set a different wndname. such as :</p>\n\n<pre><code>window.open(url1, \"name1\", params); // this open one window or tab\nwindow.open(url1, \"name2\", params); // though url is same, but it'll open in another window(tab).\n</code></pre>\n\n<p>Here is the details about <code>window.open()</code>, you can trust it!<br>\n<a href=\"https://developer.mozilla.org/en/DOM/window.open\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM/window.open</a></p>\n\n<p>have a try ~~</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you have your pages inside \"frame\" then \n    \"Window.open('logout.aspx','_self')\" </p>\n\n<p>will be redirected inside same frame. So by using </p>\n\n<pre><code>\"Window.open('logout.aspx','_top')\"\n</code></pre>\n\n<p>we can load the page as new request.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>One of the most prominent javascript features is to fire onclick handlers on the fly. I found following mechanism more reliable than using <code>location.href=''</code> or <code>location.reload()</code> or <code>window.open</code>:</p>\n\n<pre><code>// this function can fire onclick handler for any DOM-Element\nfunction fireClickEvent(element) {\n    var evt = new window.MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true\n    });\n\n    element.dispatchEvent(evt);\n}\n\n// this function will setup a virtual anchor element\n// and fire click handler to open new URL in the same room\n// it works better than location.href=something or location.reload()\nfunction openNewURLInTheSameWindow(targetURL) {\n    var a = document.createElement('a');\n    a.href = targetURL;\n    fireClickEvent(a);\n}\n</code></pre>\n\n<p>Above code is also helpful to open new tab/window and bypassing all pop-up blockers!!! E.g.</p>\n\n<pre><code>function openNewTabOrNewWindow(targetURL) {\n    var a = document.createElement('a');\n    a.href = targetURL;\n\n    a.target = '_blank'; // now it will open new tab/window and bypass any popup blocker!\n\n    fireClickEvent(a);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to open a link in the same window and in the same tab that contains the page with the link.</p>\n\n<p>When I try to open a link by using <code>window.open</code>, then it opens in new tab\u2014not in the same tab in the same window.</p>\n",
            "last_activity_date": 1411686977,
            "question_id": 8454510,
            "score": 61,
            "tags": [
                "javascript",
                "html",
                "hyperlink",
                "href"
            ],
            "title": "Open URL in same window and in same tab"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It comes with the ng-repeat directive usually. To do dom manipulation AngularJS flags objects with special id.</p>\n\n<p>This is common with Angular. For example if u get object with ngResource your object will embed all the resource API and you'll see methods like $save, etc. With cookies too AngularJS will add a property __ngDebug. </p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>Angular adds this to keep track of your changes, so it knows when it needs to update the DOM.</p>\n\n<p>If you use <code>angular.toJson(obj)</code> instead of <code>JSON.stringify(obj)</code> then Angular will strip out these internal-use values for you.</p>\n\n<p>Also, if you change your repeat expression to use the <code>track by {uniqueProperty}</code> suffix, Angular won't have to add <code>$$hashKey</code> at all. For example</p>\n\n<pre><code>&lt;ul&gt;\n    &lt;li ng-repeat=\"link in navLinks track by link.href\"&gt;\n        &lt;a ng-href=\"link.href\"&gt;{{link.title}}&lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>Just always remember you need the \"link.\" part of the expression - I always tend to forget that.  Just <code>track by href</code> will surely not work.</p>\n",
                    "is_accepted": true,
                    "score": 120
                },
                {
                    "body": "<p>If you don't want to add id's to your data, you could track by the index in the array, which will cause the items to be keyed by their position in the array instead of their value.</p>\n\n<p>Like this:</p>\n\n<pre><code>var myArray = [1,1,1,1,1];\n\n&lt;li ng-repeat=\"item in myArray track by $index\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>In my use case (feeding the resulting object to X2JS) the recommended approach</p>\n\n<pre><code>data = angular.toJson(source);\n</code></pre>\n\n<p>help to remove the $$hashKey properties, but the result could then no longer be processed by <a href=\"https://code.google.com/p/x2js/\" rel=\"nofollow\">X2JS</a>.</p>\n\n<pre><code>data = angular.copy(source);\n</code></pre>\n\n<p>removed the $$hashKey properties as well, but the result remained usable as a parameter for X2JS.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have tried looking on the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">Mozilla JSON stringify</a> page of their docs as well as here on SO and Google but found no explanation. I have used JSOn stringify many time but never come across this result</p>\n\n<p>I have an array of JSON objects </p>\n\n<pre><code>[\n    {\n        \"param_2\": \"Description 1\",\n        \"param_0\": \"Name 1\",\n        \"param_1\": \"VERSION 1\"\n    },\n    {\n        \"param_2\": \"Description 2\",\n        \"param_0\": \"Name 2\",\n        \"param_1\": \"VERSION 2\"\n    },\n    {\n        \"param_2\": \"Description 3\",\n        \"param_0\": \"Name 3\",\n        \"param_1\": \"VERSION 3\"\n    }\n]\n</code></pre>\n\n<p>attached to my <code>$scope</code> and in order to <code>POST</code> them as one paramater I used the JSON.stringify() method and I get the following:</p>\n\n<pre><code>   [\n        {\n            \"param_2\": \"Description 1\",\n            \"param_0\": \"Name 1\",\n            \"param_1\": \"VERSION 1\",\n            \"$$hashKey\": \"005\"\n        },\n        {\n            \"param_2\": \"Description 2\",\n            \"param_0\": \"Name 2\",\n            \"param_1\": \"VERSION 2\",\n            \"$$hashKey\": \"006\"\n        },\n        {\n            \"param_2\": \"Description 3\",\n            \"param_0\": \"Name 3\",\n            \"param_1\": \"VERSION 3\",\n            \"$$hashKey\": \"007\"\n        }\n    ]\n</code></pre>\n\n<p>I am just curious what exactly is the $$hashkey as I expected something more similar to the following from the stringify method:</p>\n\n<pre><code>[\n    {\n        \"1\":{\n            \"param_2\": \"Description 1\",\n            \"param_0\": \"Name 1\",\n            \"param_1\": \"VERSION 1\"\n        },\n         \"2\":{\n            \"param_2\": \"Description 2\",\n            \"param_0\": \"Name 2\",\n            \"param_1\": \"VERSION 2\"\n        },\n         \"3\":{\n            \"param_2\": \"Description 3\",\n            \"param_0\": \"Name 3\",\n            \"param_1\": \"VERSION 3\"\n        }\n    }\n]\n</code></pre>\n\n<p>I am not sure if it is a factor but I am using <code>Angularjs 1.1.5, JQuery 1.8.2 and Spring 3.0.4 and Spring security 3.0.7 on the Server side</code></p>\n\n<p>It is not causeing me any issues but I would like to know the cause and reason for the <code>$$hashkey</code></p>\n",
            "last_activity_date": 1409160137,
            "question_id": 18826320,
            "score": 55,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "angularjs"
            ],
            "title": "What is the $$hashKey added to my JSON.stringify result"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You can like:</p>\n\n<pre><code>window.open('url', 'window name', 'window settings')\n</code></pre>\n\n<p><strong>jQuery:</strong></p>\n\n<pre><code>$('a#link_id').click(function(){\n  window.open('url', 'window name', 'window settings');\n  return false;\n});\n</code></pre>\n\n<p>You could also set the <code>target</code> to <code>_blank</code> actually.</p>\n",
                    "is_accepted": true,
                    "score": 127
                },
                {
                    "body": "<p>you will need to use  <code>window.open(url);</code></p>\n\n<p>references:<br>\n<a href=\"http://www.htmlcodetutorial.com/linking/linking_famsupp_120.html\">http://www.htmlcodetutorial.com/linking/linking_famsupp_120.html</a><br>\n<a href=\"http://www.w3schools.com/jsref/met_win_open.asp\">http://www.w3schools.com/jsref/met_win_open.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Here's how to force the target inside a click handler:</p>\n\n<pre><code>$('a#link_id').click(function() {\n    $(this).attr('target', '_blank');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>You can also use the jquery prop() method for this. </p>\n\n<pre><code>$(function(){\n  $('yourselector').prop('target', '_blank');\n}); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Microsoft IE does not support a name as second argument.</p>\n\n<pre><code>window.open('url', 'window name', 'window settings');\n</code></pre>\n\n<p>Problem is <code>window name</code>. This will work:</p>\n\n<pre><code>window.open('url', '', 'window settings')\n</code></pre>\n\n<p>Microsoft only allows the following arguments, If using that argument at all:</p>\n\n<ul>\n<li>_blank</li>\n<li>_media</li>\n<li>_parent</li>\n<li>_search</li>\n<li>_self</li>\n<li>_top</li>\n</ul>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/ms536651%28v=vs.85%29.aspx\" rel=\"nofollow\">Check this Microsoft site </a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Be aware if you want to <strong>execute AJAX requests</strong> inside the event handler function for the click event. For some reason Chrome (and maybe other browsers) will not open a new tab/window.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is not a very nice fix but it works:</p>\n\n<p>CSS:</p>\n\n<pre><code>.new-tab-opener\n{\n    display: none;\n}\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;a data-href=\"http://www.google.com/\" href=\"javascript:\"&gt;Click here&lt;/a&gt;\n&lt;form class=\"new-tab-opener\" method=\"get\" target=\"_blank\"&gt;&lt;/form&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>$('a').on('click', function (e) {    \n    var f = $('.new-tab-opener');\n    f.attr('action', $(this).attr('data-href'));\n    f.submit();\n});\n</code></pre>\n\n<p>Live example: <a href=\"http://jsfiddle.net/7eRLb/\" rel=\"nofollow\">http://jsfiddle.net/7eRLb/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just found an interesting solution to this issue. I was creating spans which contain information based on the return from a web service. I thought about trying to put a link around the span so that if I clicked on it, the \"a\" would capture the click.</p>\n\n<p>But I was trying to capture the click with the span... so I thought why not do this when I created the span.</p>\n\n<pre><code>var span = $('&lt;span id=\"something\" data-href=\"'+url+'\" /&gt;');\n</code></pre>\n\n<p>I then bound a click handler to the span which created a link based on the 'data-href' attribute:</p>\n\n<pre><code>span.click(function(e) {\n    e.stopPropagation();\n    var href = $(this).attr('data-href');\n    var link = $('&lt;a href=\"http://' + href + '\" /&gt;');\n    link.attr('target', '_blank');\n    window.open(link.attr('href'));\n});\n</code></pre>\n\n<p>This successfully allowed me to click on a span and open a new window with a proper url.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What's wrong with <code>&lt;a href=\"myurl.html\" target=\"_blank\"&gt;My Link&lt;/a&gt;</code>? No Javascript needed...</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a click handler for a specific link, inside that I want to do something similar to the following:</p>\n\n<pre><code>window.location = url\n</code></pre>\n\n<p>I need this to actually open the url in a new window though, how do I do this?</p>\n",
            "last_activity_date": 1387791170,
            "question_id": 2827637,
            "score": 55,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How can I open a link in a new window?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Your problem is that your phones object doesn't have a length property (unless you define it somewhere in the JSON that you return) as objects aren't the same as arrays, even when used as associative arrays. If the phones object was an array it would have a length. You have two options (maybe more).</p>\n\n<p>1) Change your JSON structure (assuming this is possible) so that 'phones' becomes </p>\n\n<pre><code>\"phones\":[{\"number\":\"XXXXXXXXXX\",\"type\":\"mobile\"},{\"number\":\"XXXXXXXXXX\",\"type\":\"mobile\"}]\n</code></pre>\n\n<p>(note there is no word-numbered identifier for each phone as they are returned in a 0-indexed array). In this response <code>phones.length</code> will be valid.</p>\n\n<p>2) Iterate through the objects contained within your phones object and count them as you go, e.g.</p>\n\n<pre><code>var key, count = 0;\nfor(key in data.phones) {\n  if(data.phones.hasOwnProperty(key)) {\n    count++;\n  }\n}\n</code></pre>\n\n<p>If you're only targeting new browsers option 2 could look like <a href=\"http://stackoverflow.com/questions/126100/how-to-efficiently-count-the-number-of-keys-properties-of-an-object-in-javascript/4889658#4889658\">this</a></p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p><strong>you can use like this</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\nvar myObject = {'name':'Kasun', 'address':'columbo','age': '29'}\n\nvar count = Object.keys(myObject).length\nconsole.log(count);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 146
                },
                {
                    "body": "<p>Consider using <a href=\"http://underscorejs.org\">underscore.js</a>. It will allow you to check the size i.e. like that:</p>\n\n<pre><code>var data = {one : 1, two : 2, three : 3};\n_.size(data);\n//=&gt; 3\n_.keys(data);\n//=&gt; [\"one\", \"two\", \"three\"]\n_.keys(data).length;\n//=&gt; 3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<pre><code>$(document).ready(function () {\n             $('#count_my_data').click(function () {\n                 var count = 0;\n                 while (true) {\n                     try {\n                         var v1 = mydata[count].TechnologyId.toString();\n                         count = count + 1;\n                     }\n                     catch (e)\n                     { break; }\n                 }\n                 alert(count);\n             });\n         });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>i have a json object that gets returned by an AJAX request and I am having some trouble with the <code>.length</code> because it keeps returning <code>undefined</code>. Just wondering if I'm using it right:</p>\n\n<pre><code>console.log(data.length);\nconsole.log(data.phones.length);\n</code></pre>\n\n<p>They both return <code>undefined</code> even though they are valid objects.</p>\n\n<p><strong>Update:</strong><br>\nSample of the JSON object returned:</p>\n\n<pre><code>{\"reqStatus\":true,\"phones\":{\"one\":{\"number\":\"XXXXXXXXXX\",\"type\":\"mobile\"},\"two\":{\"number\":\"XXXXXXXXXX\",\"type\":\"mobile\"}}}\n</code></pre>\n",
            "last_activity_date": 1389073532,
            "question_id": 6756104,
            "score": 44,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "get size of json object"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can use DataTables</p>\n\n<p><a href=\"http://datatables.net/extras/fixedheader/\">DataTables</a></p>\n\n<p>It's an amazing jquery plugin for tables, and it also has an interesting number of extras and plugins including fixed header and footer, column sorting, variable width, fixed width, ajax and lots more.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I agree with <a href=\"http://stackoverflow.com/a/10838783/623041\">@FedericoGiust's answer</a>; but since you asked for more detail...</p>\n\n<pre><code>&lt;script type=\"text/javascript\"\n        src=\"http://code.jquery.com/jquery-1.7.2.min.js\"&gt;\n&lt;/script&gt;\n&lt;script type=\"text/javascript\"\n        src=\"http://datatables.net/download/build/jquery.dataTables.min.js\"&gt;\n&lt;/script&gt;\n&lt;script type=\"text/javascript\"\n        src=\"http://datatables.net/download/build/FixedColumns.min.js\"&gt;\n&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n  $(document).ready(function() {\n    var oTable = $('#bigtable').dataTable({\n        \"sScrollY\": \"300px\",  // set vertical size dynamically here\n        \"sScrollX\": \"100%\",\n        \"bPaginate\": false,\n        \"bFilter\": false\n    });\n    new FixedColumns(oTable);\n  });\u200b\n&lt;/script&gt;\n</code></pre>\n\n<p>You need to add a row of dummy column headers so that Datatables will cope with the colspans.</p>\n\n<p>See it on <a href=\"http://jsfiddle.net/J53ax/\" rel=\"nofollow\">jsfiddle</a>.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>If you'd rather not go with a plugin, combine fixed header vertical scrolling (CSS)</p>\n\n<pre><code>tbody{display:block;overflow-y:auto;/*+fixed height set w/jQuery etc*/}\n</code></pre>\n\n<p>\u200bwith the fixed first column horizontal scrolling (JS)</p>\n\n<pre><code>$('#table-container').scroll(function() {\n    var _left = $(this).scrollLeft();\n    $('#table th').css('left', _left); //\"stick\" the first column to viewport\n});\n\n#table-container{overflow-x:scroll;/*+fixed width set*/}\nthead, tbody{display:block;}    \nth {position:relative;left:0;/*gets adjusted with JS above*/}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/ovfiddle/7v4RZ/1/\">Fiddle'd here</a>, this does not address resizing to fit browser dimensions though. Assuming it will be run in a dedicated window, it would be fairly trivial; if not and it's intended to be run in-page, it would be rather tough keeping it uncluttered.</p>\n\n<p>Good luck.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Works with normal tables and it only alters the header cells, in place (no removing, copying, or outside of table element injection). This has the advantage to allow any content, in any cell, of any dimensions (+allows dynamic modification of that content).</p>\n\n<p>See it in action: <a href=\"http://kakao.ro/public/Tables/fullpage.html\" rel=\"nofollow\">fullpage.html</a>, <a href=\"http://kakao.ro/public/Tables/overflow_scroll.html\" rel=\"nofollow\">overflow_scroll.html</a>, <a href=\"http://kakao.ro/public/Tables/fullpage_untouched.html\" rel=\"nofollow\">fullpage_untouched.html</a>.</p>\n\n<p>Vertical and horizontal <code>th</code> cells should remain visible and aligned while scrolling.<br></p>\n\n<p>This solution does not use any frameworks. Feel free to replace existing helpers (scroll offsets) using jquery or prototype (or any other framework).</p>\n\n<p>You should add code hooks to call <code>_table_make_fixed_header_reposition</code> when making dynamic changes to the table's contents.</p>\n\n<p><strike>I didn't test this on Windows XP (where accelerated rendering is absent in all browsers).</strike></p>\n\n<p>The blue background, drop shadow, borders, etc. are just CSS cool stuff. You can make this however you want, and you just have to create a normal table (just add cell styles on <code>.DivWrapper</code> instead of <code>TH</code>).</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;body&gt;\n    &lt;head&gt;\n        &lt;style&gt;\n            .TableLarge td, .TableLarge th{\n                border-style: solid;\n                border-width: 1px;\n\n                border-color: #CAE3EF;\n\n                padding: 7px;\n                white-space: nowrap;\n                font-family: Verdana;\n                font-size: 10px;\n            }\n\n            .TableLarge{\n                border-style: none;\n                border-collapse: collapse;\n            }\n\n            #padding_for_test{\n                height: 3000px;\n                width: 9000px;\n            }\n\n        &lt;/style&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            function table_make_fixed_header(elTable, bHorizontal, bVertical, nRepositionIntervalMilliseconds, bWrappedByScrollableDiv)\n            {\n                if(!bHorizontal &amp;&amp; !bVertical)\n                    return;\n\n                if(!elTable.id)\n                    elTable.id=\"FixedVH_Headers_\"+(new Date().getTime())+Math.floor(Math.random()*10000000);\n\n                var zIndex=1;\n                if(window.getComputedStyle)\n                    zIndex=parseInt(window.getComputedStyle(elTable))?parseInt(window.getComputedStyle(elTable))+1:1;\n\n                var fnSetupHeaderCell=function(elCell, zIndex)\n                {\n                    var elDivWrapper=document.createElement(\"div\");\n\n                    elDivWrapper.setAttribute(\"style\", \"-moz-box-shadow: 3px 3px 4px #aaaaaa; -webkit-box-shadow: 3px 3px 4px #aaaaaa; box-shadow: 3px 3px 4px #aaaaaa;\");\n                    elDivWrapper.style.zIndex=zIndex;\n                    elDivWrapper.style.backgroundColor=\"#0000ee\";\n                    elDivWrapper.style.color=\"white\";\n                    elDivWrapper.style.padding=\"3px\";\n\n                    elDivWrapper.className=\"DivWrapper\";\n                    elDivWrapper.style.position=\"relative\";\n\n                    while(elCell.childNodes.length)\n                        elDivWrapper.appendChild(elCell.childNodes[0]);\n                    elCell.appendChild(elDivWrapper);\n                };\n\n                if(bVertical)\n                    for(var r=bHorizontal?1:0; r&lt;elTable.rows.length; r++)\n                        fnSetupHeaderCell(elTable.rows[r].cells[0], zIndex);\n                if(bHorizontal)\n                    for(var c=bVertical?1:0; c&lt;elTable.rows[0].cells.length; c++)\n                        fnSetupHeaderCell(elTable.rows[0].cells[c], zIndex);\n\n                _table_make_fixed_header_reposition(elTable.id, bHorizontal, bVertical, bWrappedByScrollableDiv);\n\n                //this could be CPU intensive, depending on the number of events fired and size of the table.\n                var onScrollEventHandler=function(ev){\n                    _table_make_fixed_header_reposition(elTable.id, bHorizontal, bVertical, bWrappedByScrollableDiv);\n                };\n\n                var elScrollable=bWrappedByScrollableDiv?elTable.parentNode:window;\n                if(elScrollable.addEventListener)\n                    elScrollable.addEventListener('scroll', onScrollEventHandler, false);\n                else if (elScrollable.attachEvent)\n                    elScrollable.attachEvent('scroll', onScrollEventHandler);\n\n                //this is undesired for performance reasons, hooks and event listeners are prefered instead.\n                if(nRepositionIntervalMilliseconds&gt;0)\n                    setInterval(\"_table_make_fixed_header_reposition('\"+elTable.id+\"', \"+(bHorizontal?\"true\":\"false\")+\", \"+(bVertical?\"true\":\"false\")+\", \"+(bWrappedByScrollableDiv?\"true\":\"false\")+\")\", nRepositionIntervalMilliseconds);\n            }\n\n            function _table_make_fixed_header_reposition(strTableID, bHorizontal, bVertical, bWrappedByScrollableDiv)\n            {\n                var elTable=document.getElementById(strTableID);\n\n                var strLeft;\n                var strTop;\n                if(bWrappedByScrollableDiv)\n                {\n                    strLeft=Math.min(Math.max(elTable.parentNode.scrollLeft-elTable.offsetLeft+elTable.parentNode.offsetLeft, 0), elTable.offsetWidth)+\"px\";\n                    strTop=Math.min(Math.max(elTable.parentNode.scrollTop-elTable.offsetTop+elTable.parentNode.offsetTop, 0), elTable.offsetHeight)+\"px\";\n                }\n                else\n                {\n                    strLeft=Math.min(Math.max(f_scrollLeft()-elTable.offsetLeft, 0), elTable.offsetWidth)+\"px\";\n                    strTop=Math.min(Math.max(f_scrollTop()-elTable.offsetTop, 0), elTable.offsetHeight)+\"px\";\n                }\n\n                if(bVertical)\n                    for(var r=bHorizontal?1:0; r&lt;elTable.rows.length; r++)\n                        elTable.rows[r].cells[0].childNodes[0].style.left=strLeft;\n                if(bHorizontal)\n                    for(var c=bVertical?1:0; c&lt;elTable.rows[0].cells.length; c++)\n                        elTable.rows[0].cells[c].childNodes[0].style.top=strTop;\n            }\n\n\n            //http://www.softcomplex.com/docs/get_window_size_and_scrollbar_position.html\n            function f_scrollLeft(){\n                return f_filterResults (\n                    window.pageXOffset ? window.pageXOffset : 0,\n                    document.documentElement ? document.documentElement.scrollLeft : 0,\n                    document.body ? document.body.scrollLeft : 0\n                );\n            }\n            function f_scrollTop() {\n                return f_filterResults (\n                    window.pageYOffset ? window.pageYOffset : 0,\n                    document.documentElement ? document.documentElement.scrollTop : 0,\n                    document.body ? document.body.scrollTop : 0\n                );\n            }\n            function f_filterResults(n_win, n_docel, n_body) {\n                var n_result = n_win ? n_win : 0;\n                if (n_docel &amp;&amp; (!n_result || (n_result &gt; n_docel)))\n                    n_result = n_docel;\n                return n_body &amp;&amp; (!n_result || (n_result &gt; n_body)) ? n_body : n_result;\n            }\n\n\n            //you should add an event handler for onload here\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;p&gt;\n            Vertical and horizontal th cells should remain visible and aligned while scrolling.&lt;br&gt;\n            This solution does not use any frameworks. Feel free to replace existing helpers (scroll offsets) using jquery or prototype (or any other framework).\n        &lt;/p&gt;\n\n        &lt;div style=\"width: 800px; height: 600px; overflow: scroll\"&gt;\n            &lt;table class=\"TableLarge\" id=\"mySpecialHugeTable\"&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;br&gt;multi-line&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;br&gt;multi-line&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;br&gt;multi-line&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;br&gt;multi-line&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;br&gt;multi-line&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th&gt;Fixed!&lt;/th&gt;\n                    &lt;td&gt;The goose is pretty.&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;Hello world!&lt;/td&gt;\n                    &lt;td&gt;Umm...how is this done again?&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;My mother has apples.&lt;/td&gt;\n                    &lt;td&gt;I think Javascript is some kind of Voodoo on the DOM.&lt;/td&gt;\n                    &lt;td&gt;This is a very short story...Real short.&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/table&gt;\n        &lt;/div&gt;\n\n        &lt;div id=\"padding_for_test\"&gt;&amp;nbsp;&lt;/div&gt;\n\n        &lt;script type=\"text/javascript\"&gt;\n            table_make_fixed_header(document.getElementById(\"mySpecialHugeTable\"), /*bHorizontal*/ true, /*bVertical*/ true, 1000, /*bWrappedByScrollableDiv*/ true);\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>It should be fairly easy to delete some CSS and make the fixed cells identical to scrollable cells. Also if you want a dedicated scrollbar, you could wrap this in a scrollable <code>DIV</code> and adjust inside <code>_table_make_fixed_header_reposition</code> by using the <code>DIV</code>'s scroll offsets too.</p>\n\n<p><strong>Edit</strong>: updated code to keep headers as close to edge as possible, when table goes outside the viewport (+option to choose between vertical or horizontal headers, or both).</p>\n\n<p><strong>Edit2</strong>: added scrollable <code>div</code> support, and made this the default in the example.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If you don't like to use heavy loaded plugins you could do:</p>\n\n<p>Create a table with only the fixed table header</p>\n\n<p>Create a div with fixed width (remember the scrollbar width) and height and set scrolling Y direction. Within this div you place the body of the table.</p>\n\n<p>Create the 3th and last table and place the table below the div to make it look like 1 big table.</p>\n\n<pre><code>&lt;table&gt; HEADER &lt;/table&gt;\n&lt;div&gt;&lt;table&gt; BODY &lt;/table&gt;&lt;/div&gt; (div is scrollable)\n&lt;table&gt; Foot &lt;/table&gt;\n</code></pre>\n\n<p>If you need to make changes dynamicly use bare javascript, you don't need to use jquery or other heavy plugin.  </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><strong>Edit 5:</strong> \n- Added configurable fixed Rows and Columns. \n- Fixed column width and height issues\n- Reduced usage of complex selectors</p>\n\n<p><strong>Usage:</strong></p>\n\n<pre><code>    $('#cTable').cTable({\n        width: 1300,  \n        height: 500,  \n        fCols: 2,\n        fRows: 2\n    });\n</code></pre>\n\n<p><strong>DEMO:</strong> <a href=\"http://jsfiddle.net/rCuPf/7/embedded/result/\">http://jsfiddle.net/rCuPf/7/embedded/result/</a> (updated demo)</p>\n\n<p><strong>Edit 4:</strong> Updated for colSpan on column 1. <strong>Demo:</strong> <s>http://jsfiddle.net/skram/rKjk3/26/</s></p>\n\n<p><strong>Edit 3:</strong> Did some cleanup and some fixes: <s> <a href=\"http://jsfiddle.net/rKjk3/22\">http://jsfiddle.net/rKjk3/22</a> </s> Tested in IE9, FF and Chrome. (I don't have latest IE to test it now)</p>\n\n<p><strong>Edit 2:</strong> Fix for IE:  <s>http://jsfiddle.net/rKjk3/15/embedded/result/</s> (See latest above)</p>\n\n<p><strong>Edit 1:</strong> Fix for resize window <s>http://jsfiddle.net/rKjk3/11/</s> (See latest above)</p>\n\n<ul>\n<li>Added window.resize event handler to set the width of the <code>rightContainer</code> so the width of actual table will be increased as you resize.</li>\n<li>Removed fixed width on <code>SBWrapper</code> so that it can fully utilize the available space inside the container.</li>\n</ul>\n\n<p>I have created 2 demo for your requirement. </p>\n\n<ol>\n<li><p>Sample to show how the rendered html will look like with a simple markup structure. This will allow you to look at the structure that is being rendered and how it is working  :)<br /> <strong>DEMO:</strong> <a href=\"http://jsfiddle.net/GmJ22/7/\">http://jsfiddle.net/GmJ22/7/</a></p></li>\n<li><p>Actual demo with the markup that you have posted. The code is just a rough version and may require some cleanup. Right now you can configure the width and height of the table. I am posting it so that you can take a look and give me some feedback. <br/>\n<strong>DEMO:</strong> <s>http://jsfiddle.net/rKjk3/10/embedded/result/</s> (see below fixed versions)</p></li>\n</ol>\n\n<p><strong>Full code:</strong></p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;\n&lt;HTML&gt;\n&lt;HEAD&gt;\n&lt;TITLE&gt;big scrolling table example&lt;/TITLE&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n    $(function() {\n        $.fn.cTable = function(o) {        \n\n            this.wrap('&lt;div class=\"cTContainer\" /&gt;');\n            this.wrap('&lt;div class=\"relativeContainer\" /&gt;');    \n            //Update below template as how you have it in orig table\n            var origTableTmpl = '&lt;table border=\"1\" cellspacing=\"1\" cellpadding=\"0\" align=\"center\" width=\"95%\" &gt;&lt;/table&gt;';            \n            //get row 1 and clone it for creating sub tables\n            var row1 = this.find('tr').slice(0, o.fRows).clone();\n\n            var r1c1ColSpan = 0;\n            for (var i = 0; i &lt; o.fCols; i++ ) {\n                r1c1ColSpan += this[0].rows[0].cells[i].colSpan;\n            }\n\n            //create table with just r1c1 which is fixed for both scrolls\n            var tr1c1 = $(origTableTmpl);\n            row1.each(function () {            \n                var tdct = 0;\n                $(this).find('td').filter( function () {\n                    tdct += this.colSpan;\n                    return tdct &gt; r1c1ColSpan;\n                }).remove();                \n            });\n            row1.appendTo(tr1c1);\n            tr1c1.wrap('&lt;div class=\"fixedTB\" /&gt;');\n            tr1c1.parent().prependTo(this.closest('.relativeContainer'));\n\n            //create a table with just c1        \n            var c1= this.clone().prop({'id': ''});\n            c1.find('tr').slice(0, o.fRows).remove();\n            c1.find('tr').each(function (idx) {\n                var c = 0;\n                $(this).find('td').filter(function () {\n                    c += this.colSpan;\n                    return c &gt; r1c1ColSpan;\n                }).remove();           \n            });\n\n            var prependRow = row1.first().clone();\n            prependRow.find('td').empty();\n            c1.prepend(prependRow).wrap('&lt;div class=\"leftSBWrapper\" /&gt;')\n            c1.parent().wrap('&lt;div class=\"leftContainer\" /&gt;');            \n            c1.closest('.leftContainer').insertAfter('.fixedTB');\n\n            //create table with just row 1 without col 1\n            var r1 = $(origTableTmpl);\n            row1 = this.find('tr').slice(0, o.fRows).clone();\n            row1.each(function () {\n                var tds = $(this).find('td'), tdct = 0;\n                tds.filter (function () {\n                    tdct += this.colSpan;\n                    return tdct &lt;= r1c1ColSpan;\n                }).remove();\n            });\n            row1.appendTo(r1);\n            r1.wrap('&lt;div class=\"topSBWrapper\" /&gt;')\n            r1.parent().wrap('&lt;div class=\"rightContainer\" /&gt;')  \n            r1.closest('.rightContainer').appendTo('.relativeContainer');\n\n            $('.relativeContainer').css({'width': 'auto', 'height': o.height});\n\n            this.wrap('&lt;div class=\"SBWrapper\"&gt; /')        \n            this.parent().appendTo('.rightContainer');    \n            this.prop({'width': o.width});    \n\n            var tw = 0;\n            //set width and height of rendered tables\n            for (var i = 0; i &lt; o.fCols; i++) {\n                tw += $(this[0].rows[0].cells[i]).outerWidth(true);\n            }\n            tr1c1.width(tw);\n            c1.width(tw);\n\n            $('.rightContainer').css('left', tr1c1.outerWidth(true));\n\n            for (var i = 0; i &lt; o.fRows; i++) {\n                var tr1c1Ht = $(c1[0].rows[i]).outerHeight(true);\n                var thisHt = $(this[0].rows[i]).outerHeight(true);\n                var finHt = (tr1c1Ht &gt; thisHt)?tr1c1Ht:thisHt;\n                $(tr1c1[0].rows[i]).height(finHt);\n                $(r1[0].rows[i]).height(finHt);\n            }\n            $('.leftContainer').css({'top': tr1c1.outerHeight(true), 'width': tr1c1.outerWidth(true)});\n\n            var rtw = $('.relativeContainer').width() - tw;\n            $('.rightContainer').css({'width' : rtw, 'height': o.height, 'max-width': o.width - tw});    \n\n            var trs = this.find('tr');\n            trs.slice(1, o.fRows).remove();\n            trs.slice(0, 1).find('td').empty();\n            trs.each(function () {\n                var c = 0;\n                $(this).find('td').filter(function () {\n                    c += this.colSpan;\n                    return c &lt;= r1c1ColSpan;\n                }).remove();\n            });\n\n            r1.width(this.outerWidth(true));\n\n            for (var i = 1; i &lt; c1[0].rows.length; i++) {\n                var c1Ht = $(c1[0].rows[i]).outerHeight(true);\n                var thisHt = $(this[0].rows[i]).outerHeight(true);\n                var finHt = (c1Ht &gt; thisHt)?c1Ht:thisHt;\n                $(c1[0].rows[i]).height(finHt);\n                $(this[0].rows[i]).height(finHt);\n            }\n\n            $('.SBWrapper').css({'height': $('.relativeContainer').height() - $('.topSBWrapper').height()});            \n\n            $('.SBWrapper').scroll(function () {\n                var rc = $(this).closest('.relativeContainer');\n                var lfW = rc.find('.leftSBWrapper');\n                var tpW = rc.find('.topSBWrapper');\n\n                lfW.css('top', ($(this).scrollTop()*-1));\n                tpW.css('left', ($(this).scrollLeft()*-1));        \n            });\n\n            $(window).resize(function () {\n                $('.rightContainer').width(function () {\n                    return $(this).closest('.relativeContainer').outerWidth() - $(this).siblings('.leftContainer').outerWidth();\n                });\n\n            });\n        }\n\n        $('#cTable').cTable({\n            width: 1300,\n            height: 500,\n            fCols: 2,\n            fRows: 2\n        });\n    });\n&lt;/script&gt;\n&lt;style&gt;\n    .cTContainer { overflow: hidden; padding: 2px; }\n    .cTContainer table { table-layout: fixed; }\n    .relativeContainer { position: relative; overflow: hidden;}    \n    .fixedTB { position: absolute; z-index: 11;  }\n    .leftContainer { position: absolute; overflow: hidden;  }\n    .rightContainer { position: absolute; overflow: hidden;  }\n    .leftSBWrapper { position: relative; z-index: 10; }\n    .topSBWrapper { position: relative; z-index: 10; width: 100%; }\n    .SBWrapper { width: 100%; overflow: auto; }\n\n    td { background-color: white; overflow: hidden; padding: 1px; }    \n&lt;/style&gt;\n&lt;/HEAD&gt;\n&lt;BODY&gt;\n  &lt;form name=\"MyForm\" method=\"POST\" action=\"\"&gt;\n    &lt;table border=\"1\" width=\"100%\" cellspacing=\"1\" cellpadding=\"0\" align=\"center\"&gt;\n        &lt;tr&gt;\n        &lt;td width=\"35%\" align=\"left\"&gt;header junk left&lt;/td&gt;\n        &lt;td &gt;- HEADER JUNK MIDDLE -&lt;/td&gt;\n        &lt;td width=\"35%\" align=\"right\"&gt;header junk right&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;br /&gt;\n    &lt;table border=\"0\" width=\"95%\" cellspacing=\"1\" cellpadding=\"0\" align=\"center\"&gt;\n        &lt;tr&gt;\n        &lt;td width=\"60%\" align=\"left\"&gt;header junk left&lt;/td&gt;\n        &lt;td width=\"40%\" align=\"right\"&gt;check it out! &lt;input type=\"checkbox\" onchange=\"alert('your javascript here');\" value=\"Y\" name=\"checkitout\"&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n\n    &lt;!-- big table here!!--&gt;&lt;!-- big table here!!--&gt;&lt;!-- big table here!!--&gt;&lt;!-- big table here!!--&gt;\n    &lt;table border=\"1\" width=\"95%\" cellspacing=\"1\" cellpadding=\"0\" align=\"center\" id=\"cTable\" &gt;\n        &lt;tr&gt;\n            &lt;td width=\"5%\" colspan=\"3\"&gt;fixed can be long&lt;br&gt;or short&lt;/td&gt;\n            &lt;td width=\"9%\" colspan=\"4\"&gt;scroll A&lt;/td&gt;\n            &lt;td width=\"7%\" colspan=\"2\"&gt;scroll B&lt;/td&gt;\n            &lt;td width=\"3%\"&gt;scroll C&lt;/td&gt;\n            &lt;td width=\"9%\" colspan=\"4\"&gt;scroll D&lt;/td&gt;\n            &lt;td width=\"7%\" colspan=\"2\"&gt;scroll E&lt;/td&gt;\n            &lt;td width=\"3%\"&gt;scroll F&lt;/td&gt;\n            &lt;td width=\"9%\" colspan=\"4\"&gt;scroll G&lt;/td&gt;\n            &lt;td width=\"7%\" colspan=\"2\"&gt;scroll H&lt;/td&gt;\n            &lt;td width=\"3%\"&gt;scroll I&lt;/td&gt;\n            &lt;td width=\"9%\" colspan=\"4\"&gt;scroll J&lt;/td&gt;\n            &lt;td width=\"7%\" colspan=\"2\"&gt;scroll K&lt;/td&gt;\n            &lt;td width=\"3%\"&gt;scroll L&lt;/td&gt;\n            &lt;td width=\"9%\" colspan=\"4\"&gt;scroll M&lt;/td&gt;\n            &lt;td width=\"7%\" colspan=\"2\"&gt;scroll N&lt;/td&gt;\n            &lt;td width=\"3%\"&gt;scroll O&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td width=\"5%\" colspan=\"3\"&gt;2nd fixed header&lt;/td&gt;\n            &lt;td width=\"9%\" colspan=\"4\"&gt;scroll 2A&lt;/td&gt;\n            &lt;td width=\"7%\"&gt;scroll 2B-1&lt;/td&gt;\n            &lt;td width=\"7%\"&gt;scroll 2B-2 &lt;/td&gt;\n            &lt;td width=\"3%\"&gt;scroll 2C&lt;/td&gt;\n            &lt;td width=\"9%\" colspan=\"4\"&gt;scroll 2D&lt;/td&gt;\n            &lt;td width=\"7%\" colspan=\"2\"&gt;scroll 2E&lt;/td&gt;\n            &lt;td width=\"3%\"&gt;scroll 2F&lt;/td&gt;\n            &lt;td width=\"9%\" colspan=\"4\"&gt;scroll 2G&lt;/td&gt;\n            &lt;td width=\"7%\" colspan=\"2\"&gt;scroll 2H&lt;/td&gt;\n            &lt;td width=\"3%\"&gt;scroll 2I&lt;/td&gt;\n            &lt;td width=\"9%\" colspan=\"4\"&gt;scroll 2J&lt;/td&gt;\n            &lt;td width=\"7%\" colspan=\"2\"&gt;scroll 2K&lt;/td&gt;\n            &lt;td width=\"3%\"&gt;scroll 2L&lt;/td&gt;\n            &lt;td width=\"9%\" colspan=\"4\"&gt;scroll 2M&lt;/td&gt;\n            &lt;td width=\"7%\" colspan=\"2\"&gt;scroll 2N&lt;/td&gt;\n            &lt;td width=\"3%\"&gt;scroll 2O&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;2&lt;/td&gt;\n            &lt;td&gt;2&lt;/td&gt;\n            &lt;td&gt;2&lt;/td&gt;\n            &lt;td&gt;1 1 1 1 1 A&lt;/td&gt;\n            &lt;td&gt;2 2 2 2 2 A&lt;/td&gt;\n            &lt;td&gt;3 3 3 3 3 A&lt;/td&gt;\n            &lt;td&gt;4 4 4 4 4 A&lt;/td&gt;\n            &lt;td&gt;1 B&lt;/td&gt;\n            &lt;td&gt;2 B&lt;/td&gt;\n            &lt;td &gt;1 C&lt;/td&gt;\n            &lt;td&gt;1 D&lt;/td&gt;\n            &lt;td&gt;2 D&lt;/td&gt;\n            &lt;td&gt;3 D&lt;/td&gt;\n            &lt;td&gt;4 D&lt;br&gt;more...&lt;/td&gt;\n            &lt;td&gt;1 E&lt;/td&gt;\n            &lt;td&gt;2 E&lt;/td&gt;\n            &lt;td &gt;1 F&lt;/td&gt;\n            &lt;td&gt;1 1 1 G&lt;/td&gt;\n            &lt;td&gt;2 2 G&lt;/td&gt;\n            &lt;td&gt;3 G&lt;/td&gt;\n            &lt;td&gt;4 4 4 4 G&lt;/td&gt;\n            &lt;td&gt;1 H&lt;/td&gt;\n            &lt;td&gt;222 H&lt;/td&gt;\n            &lt;td &gt;1 I&lt;/td&gt;\n            &lt;td&gt;1 J&lt;/td&gt;\n            &lt;td&gt;2 J&lt;/td&gt;\n            &lt;td&gt;3 J&lt;/td&gt;\n            &lt;td&gt;4 J&lt;/td&gt;\n            &lt;td&gt;1 K&lt;/td&gt;\n            &lt;td&gt;2 2 K&lt;br&gt;more..&lt;br&gt;more..&lt;/td&gt;\n            &lt;td &gt;1 L&lt;/td&gt;\n            &lt;td&gt;1 M&lt;/td&gt;\n            &lt;td&gt;22 M&lt;/td&gt;\n            &lt;td&gt;333 M&lt;/td&gt;\n            &lt;td&gt;4444 M&lt;/td&gt;\n            &lt;td&gt;1 N&lt;/td&gt;\n            &lt;td&gt;2 N&lt;/td&gt;\n            &lt;td &gt;1 1 1 1 1 1 1 O&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"2\"&gt;fixed 3&lt;/td&gt;\n            &lt;td&gt;3&lt;/td&gt;\n            &lt;td&gt;1 1 1 1 1 A&lt;/td&gt;&lt;td&gt;2 2 2 2 2 A&lt;/td&gt;&lt;td&gt;3 3 3 3 3 A&lt;/td&gt;&lt;td&gt;4 4 4 4 4 A&lt;/td&gt;\n            &lt;td&gt;1 B&lt;/td&gt;&lt;td&gt;2 B&lt;/td&gt;\n            &lt;td &gt;1 C&lt;/td&gt;\n            &lt;td&gt;1 D&lt;/td&gt;&lt;td&gt;2 D&lt;/td&gt;&lt;td&gt;3 D&lt;/td&gt;&lt;td&gt;4 D&lt;br&gt;more...&lt;/td&gt;\n            &lt;td&gt;1 E&lt;/td&gt;&lt;td&gt;2 E&lt;/td&gt;\n            &lt;td &gt;1 F&lt;/td&gt;\n            &lt;td&gt;1 1 1 G&lt;/td&gt;&lt;td&gt;2 2 G&lt;/td&gt;&lt;td&gt;3 G&lt;/td&gt;&lt;td&gt;4 4 4 4 G&lt;/td&gt;\n            &lt;td&gt;1 H&lt;/td&gt;&lt;td&gt;222 H&lt;/td&gt;\n            &lt;td &gt;1 I&lt;/td&gt;\n            &lt;td&gt;1 J&lt;/td&gt;&lt;td&gt;2 J&lt;/td&gt;&lt;td&gt;3 J&lt;/td&gt;&lt;td&gt;4 J&lt;/td&gt;\n            &lt;td&gt;1 K&lt;/td&gt;&lt;td&gt;2 2 K&lt;br&gt;more..&lt;br&gt;more..&lt;/td&gt;\n            &lt;td &gt;1 L&lt;/td&gt;\n            &lt;td&gt;1 M&lt;/td&gt;&lt;td&gt;22 M&lt;/td&gt;&lt;td&gt;333 M&lt;/td&gt;&lt;td&gt;4444 M&lt;/td&gt;\n            &lt;td&gt;1 N&lt;/td&gt;&lt;td&gt;2 N&lt;/td&gt;\n            &lt;td &gt;1 1 1 1 1 1 1 O&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"3\"&gt;fixed 4&lt;/td&gt;\n            &lt;td&gt;1 1 1 1 1 A&lt;/td&gt;&lt;td&gt;2 2 2 2 2 A&lt;/td&gt;&lt;td&gt;3 3 3 3 3 A&lt;/td&gt;&lt;td&gt;4 4 4 4 4 A&lt;/td&gt;\n            &lt;td&gt;1 B&lt;/td&gt;&lt;td&gt;2 B&lt;/td&gt;\n            &lt;td &gt;1 C&lt;/td&gt;\n            &lt;td&gt;1 D&lt;/td&gt;&lt;td&gt;2 D&lt;/td&gt;&lt;td&gt;3 D&lt;/td&gt;&lt;td&gt;4 D&lt;br&gt;more...&lt;br&gt;more...&lt;br&gt;more...&lt;br&gt;more...&lt;/td&gt;\n            &lt;td&gt;1 E&lt;/td&gt;&lt;td&gt;2 E&lt;/td&gt;\n            &lt;td &gt;1 F&lt;/td&gt;\n            &lt;td&gt;1 1 1 G&lt;/td&gt;&lt;td&gt;2 2 G&lt;/td&gt;&lt;td&gt;3 G&lt;/td&gt;&lt;td&gt;4 4 4 4 G&lt;/td&gt;\n            &lt;td&gt;1 H&lt;/td&gt;&lt;td&gt;222 H&lt;/td&gt;\n            &lt;td &gt;1 I&lt;/td&gt;\n            &lt;td&gt;1 J&lt;/td&gt;&lt;td&gt;2 J&lt;/td&gt;&lt;td&gt;3 J&lt;/td&gt;&lt;td&gt;4 J&lt;/td&gt;\n            &lt;td&gt;1 K&lt;/td&gt;&lt;td&gt;2 2 K&lt;br&gt;more..&lt;br&gt;more..&lt;/td&gt;\n            &lt;td &gt;1 L&lt;/td&gt;\n            &lt;td&gt;1 M&lt;/td&gt;&lt;td&gt;22 M&lt;/td&gt;&lt;td&gt;333 M&lt;/td&gt;&lt;td&gt;4444 M&lt;/td&gt;\n            &lt;td&gt;1 N&lt;/td&gt;&lt;td&gt;2 N&lt;/td&gt;\n            &lt;td &gt;1 1 1 1 1 1 1 O&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"3\"&gt;fixed 5&lt;/td&gt;\n            &lt;td&gt;1 1 1 1 1 A&lt;/td&gt;&lt;td&gt;2 2 2 2 2 A&lt;/td&gt;&lt;td&gt;3 3 3 3 3 A&lt;/td&gt;&lt;td&gt;4 4 4 4 4 A&lt;/td&gt;\n            &lt;td&gt;1 B&lt;/td&gt;&lt;td&gt;2 B&lt;/td&gt;\n            &lt;td &gt;1 C&lt;/td&gt;\n            &lt;td&gt;1 D&lt;/td&gt;&lt;td&gt;2 D&lt;/td&gt;&lt;td&gt;3 D&lt;/td&gt;&lt;td&gt;4 D&lt;br&gt;more...&lt;/td&gt;\n            &lt;td&gt;1 E&lt;/td&gt;&lt;td&gt;2 E&lt;/td&gt;\n            &lt;td &gt;1 F&lt;/td&gt;\n            &lt;td&gt;1 1 1 G&lt;/td&gt;&lt;td&gt;2 2 G&lt;/td&gt;&lt;td&gt;3 G&lt;/td&gt;&lt;td&gt;4 4 4 4 G&lt;/td&gt;\n            &lt;td&gt;1 H&lt;/td&gt;&lt;td&gt;222 H&lt;br&gt;H&lt;br&gt;H&lt;br&gt;H&lt;br&gt;H&lt;/td&gt;\n            &lt;td &gt;1 I&lt;/td&gt;\n            &lt;td&gt;1 J&lt;/td&gt;&lt;td&gt;2 J&lt;/td&gt;&lt;td&gt;3 J&lt;/td&gt;&lt;td&gt;4 J&lt;/td&gt;\n            &lt;td&gt;1 K&lt;/td&gt;&lt;td&gt;2 2 K&lt;br&gt;more..&lt;br&gt;more..&lt;/td&gt;\n            &lt;td &gt;1 L&lt;/td&gt;\n            &lt;td&gt;1 M&lt;/td&gt;&lt;td&gt;22 M&lt;/td&gt;&lt;td&gt;333 M&lt;/td&gt;&lt;td&gt;4444 M&lt;/td&gt;\n            &lt;td&gt;1 N&lt;/td&gt;&lt;td&gt;2 N&lt;/td&gt;\n            &lt;td &gt;1 1 1 1 1 1 1 O&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;6&lt;/td&gt;\n            &lt;td&gt;6&lt;/td&gt;\n            &lt;td&gt;6&lt;/td&gt;\n            &lt;td&gt;1 1 1 1 1 A&lt;/td&gt;&lt;td&gt;2 2 2 2 2 A&lt;/td&gt;&lt;td&gt;3 3 3 3 3 A&lt;/td&gt;&lt;td&gt;4 4 4 4 4 A&lt;/td&gt;\n            &lt;td&gt;1 B&lt;/td&gt;&lt;td&gt;2 B&lt;/td&gt;\n            &lt;td &gt;1 C&lt;/td&gt;\n            &lt;td&gt;1 D&lt;/td&gt;&lt;td&gt;2 D&lt;/td&gt;&lt;td&gt;3 D&lt;/td&gt;&lt;td&gt;4 D&lt;br&gt;more...&lt;/td&gt;\n            &lt;td&gt;1 E&lt;/td&gt;&lt;td&gt;2 E&lt;/td&gt;\n            &lt;td &gt;1 F&lt;/td&gt;\n            &lt;td&gt;1 1 1 G&lt;/td&gt;&lt;td&gt;2 2 G&lt;/td&gt;&lt;td&gt;3 G&lt;/td&gt;&lt;td&gt;4 4 4 4 G&lt;/td&gt;\n            &lt;td&gt;1 H&lt;/td&gt;&lt;td&gt;222 H&lt;/td&gt;\n            &lt;td &gt;1 I&lt;/td&gt;\n            &lt;td&gt;1 J&lt;/td&gt;&lt;td&gt;2 J&lt;/td&gt;&lt;td&gt;3 J&lt;/td&gt;&lt;td&gt;4 J&lt;/td&gt;\n            &lt;td&gt;1 K&lt;/td&gt;&lt;td&gt;2 2 K&lt;br&gt;more..&lt;br&gt;more..&lt;/td&gt;\n            &lt;td &gt;1 L&lt;/td&gt;\n            &lt;td&gt;1 M&lt;/td&gt;&lt;td&gt;22 M&lt;/td&gt;&lt;td&gt;333 M&lt;/td&gt;&lt;td&gt;4444 M&lt;/td&gt;\n            &lt;td&gt;1 N&lt;/td&gt;&lt;td&gt;2 N&lt;/td&gt;\n            &lt;td &gt;1 1 1 1 1 1 1 O&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;br /&gt;\n    &lt;!-- static size footer junk--&gt;&lt;!-- static size footer junk--&gt;&lt;!-- static size footer junk--&gt;&lt;!-- static size footer junk--&gt;\n    &lt;table border=\"1\" width=\"100%\" cellspacing=\"1\" cellpadding=\"0\" align=\"center\"&gt;\n        &lt;tr&gt;\n        &lt;td width=\"35%\" align=\"left\"&gt;footer junk left&lt;/td&gt;\n        &lt;td &gt;- FOOTER JUNK MIDDLE -&lt;/td&gt;\n        &lt;td width=\"35%\" align=\"right\"&gt;footer junk right&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/form&gt;\n&lt;/BODY&gt;\n&lt;/HTML&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p><strong>I need to display a large table on a web page and need to prevent the first column and first row from scrolling.</strong>  I'd like to dynamically set the vertical size of this table (between some static size header/footer page content) to make it as tall as possible without forcing the browser window to have a vertical scrollbar.</p>\n\n<pre><code>   browser window\\/\n+--------------------------------------------------------------+  /\\\n|   /\\     /\\  /\\         /\\       /\\      /\\     /\\ /\\        |  fixed static\n|    web page header fields and text                           |  |  size\n|   \\/    \\/   \\/         \\/       \\/     \\/     \\/   \\/       |__\\/__\n|               +----&lt;&lt;&lt;table-scrollbar&gt;&gt;&gt;&gt;&gt;----------------+  |  /\\\n|+--------------+--------+--------+--------+--------+-------+  |   |\n||              |        |colspan |        |        | fixed |  |   |\n||  fixed       |  fixed |  fixed | fixed  |  fixed | more&gt; |  |   |\n|+--------------+--+--+--+---+----+--+--+--+--------+-------++ |   |\n||  fixed       |  |  |  |   |    |  |  |  |        |       || |   |\n|+--------------+--+--+--+---+----+--+--+--+--------+-------+t |   |\n||  fixed       |  |  |  |   |    |  |  |  |        |       |a |   |\n|+--------------+--+--+--+---+----+--+--+--+--------+-------+b |   |\n||  fixed       |  |  |  |   |    |  |  |  |        |       |l |   |\n|+--------------+--+--+--+---+----+--+--+--+--------+-------+e |   set\n||  fixed       |  |  |  |   |    |  |  |  |        |       || |   dynamic\n||  multi-line  |  |  |  |   |    |  |  |  |        |       |s |   size at\n|+--------------+--+--+--+---+----+--+--+--+--------+-------+c |   runtime\n||  fixed       |  |  |  |   |    |  |  |  |        |       |r |   |\n|+--------------+--+--+--+---+----+--+--+--+--------+-------+o |   |\n||  fixed       |  |  |  |   |    |  |  |  |        |       |l |   |\n|+--------------+--+--+--+---+----+--+--+--+--------+-------+l |   |\n||  fixed       |  |  |  |   |    |  |  |  |        |       |b |   |\n||              |  |  |  |   |    |  |  |  |        |       |a \n|+--------------+--+--+--+---+----+--+--+--+--------+-------+r |   |\n|| fixed, moreV |  |  |  |   |    |  |  |  |        |       || |   |\n|+--------------+--+--+--+---+----+--+--+--+--------+-------++ |__\\/__\n|   /\\     /\\  /\\         /\\       /\\      /\\     /\\ /\\        |  /\\\n|    web page footer fields and text                           |  fixed static\n|   \\/    \\/   \\/         \\/       \\/     \\/     \\/   \\/       |  |  size\n+--------------------------------------------------------------+  \\/\n</code></pre>\n\n<p>this only needs to work in modern browsers, using all/any: html, css, javascript, jquery</p>\n\n<p>order of importance:  </p>\n\n<ul>\n<li>complex table with many form fields, hidden values, javascript collapsing of rows, etc. which I'll add later  </li>\n<li>1st row will have colspans  </li>\n<li>rows will have variable height</li>\n<li>1st row: fixed from vertical scroll, but can scroll horizontally</li>\n<li>1st column: fixed from horizontal scroll, but can scroll vertical</li>\n<li>dynamically size this \"table\" to fill the screen between the static size header/footer html</li>\n<li>location of the scroll bars (as depicted in my awesome ascii art above) isn't critical.</li>\n</ul>\n\n<p>here is a very basic html sample of the screen, without any of the scroll/sizing features:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"&gt;\n&lt;HTML&gt;\n&lt;HEAD&gt;\n&lt;TITLE&gt;big scrolling table example&lt;/TITLE&gt;\n&lt;/HEAD&gt;\n\n&lt;BODY&gt;\n  &lt;form name=\"MyForm\" method=\"POST\" action=\"\"&gt;\n    &lt;!-- static size header junk--&gt;&lt;!-- static size header junk--&gt;&lt;!-- static size header junk--&gt;\n    &lt;table border=\"1\" width=\"100%\" cellspacing=\"1\" cellpadding=\"0\" align=\"center\"&gt;\n    &lt;tr&gt;\n    &lt;td width=\"35%\" align=\"left\"&gt;header junk left&lt;/td&gt;\n    &lt;td &gt;- HEADER JUNK MIDDLE -&lt;/td&gt;\n    &lt;td width=\"35%\" align=\"right\"&gt;header junk right&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;br&gt;\n    &lt;table border=\"0\" width=\"95%\" cellspacing=\"1\" cellpadding=\"0\" align=\"center\"&gt;\n    &lt;tr&gt;\n    &lt;td width=\"60%\" align=\"left\"&gt;header junk left&lt;/td&gt;\n    &lt;td width=\"40%\" align=\"right\"&gt;check it out! &lt;input type=\"checkbox\" onchange=\"alert('your javascript here');\" value=\"Y\" name=\"checkitout\"&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n\n\n    &lt;!-- big table here!!--&gt;&lt;!-- big table here!!--&gt;&lt;!-- big table here!!--&gt;&lt;!-- big table here!!--&gt;\n\n    &lt;table border=\"1\" width=\"95%\" cellspacing=\"1\" cellpadding=\"0\" align=\"center\"&gt;\n    &lt;tr&gt;\n    &lt;td&gt;fixed can be long&lt;br&gt;or short&lt;/td&gt;\n    &lt;td colspan=\"4\"&gt;scroll A&lt;/td&gt;\n    &lt;td colspan=\"2\"&gt;scroll B&lt;/td&gt;\n    &lt;td &gt;scroll C&lt;/td&gt;\n    &lt;td colspan=\"4\"&gt;scroll D&lt;/td&gt;\n    &lt;td colspan=\"2\"&gt;scroll E&lt;/td&gt;\n    &lt;td &gt;scroll F&lt;/td&gt;\n    &lt;td colspan=\"4\"&gt;scroll G&lt;/td&gt;\n    &lt;td colspan=\"2\"&gt;scroll H&lt;/td&gt;\n    &lt;td &gt;scroll I&lt;/td&gt;\n    &lt;td colspan=\"4\"&gt;scroll J&lt;/td&gt;\n    &lt;td colspan=\"2\"&gt;scroll K&lt;/td&gt;\n    &lt;td &gt;scroll L&lt;/td&gt;\n    &lt;td colspan=\"4\"&gt;scroll M&lt;/td&gt;\n    &lt;td colspan=\"2\"&gt;scroll N&lt;/td&gt;\n    &lt;td &gt;scroll O&lt;/td&gt;\n    &lt;/tr&gt;\n\n    &lt;tr&gt;\n        &lt;td&gt;fixed 2&lt;/td&gt;\n        &lt;td&gt;1 1 1 1 1 A&lt;/td&gt;&lt;td&gt;2 2 2 2 2 A&lt;/td&gt;&lt;td&gt;3 3 3 3 3 A&lt;/td&gt;&lt;td&gt;4 4 4 4 4 A&lt;/td&gt;\n        &lt;td&gt;1 B&lt;/td&gt;&lt;td&gt;2 B&lt;/td&gt;\n        &lt;td &gt;1 C&lt;/td&gt;\n        &lt;td&gt;1 D&lt;/td&gt;&lt;td&gt;2 D&lt;/td&gt;&lt;td&gt;3 D&lt;/td&gt;&lt;td&gt;4 D&lt;br&gt;more...&lt;/td&gt;\n        &lt;td&gt;1 E&lt;/td&gt;&lt;td&gt;2 E&lt;/td&gt;\n        &lt;td &gt;1 F&lt;/td&gt;\n        &lt;td&gt;1 1 1 G&lt;/td&gt;&lt;td&gt;2 2 G&lt;/td&gt;&lt;td&gt;3 G&lt;/td&gt;&lt;td&gt;4 4 4 4 G&lt;/td&gt;\n        &lt;td&gt;1 H&lt;/td&gt;&lt;td&gt;222 H&lt;/td&gt;\n        &lt;td &gt;1 I&lt;/td&gt;\n        &lt;td&gt;1 J&lt;/td&gt;&lt;td&gt;2 J&lt;/td&gt;&lt;td&gt;3 J&lt;/td&gt;&lt;td&gt;4 J&lt;/td&gt;\n        &lt;td&gt;1 K&lt;/td&gt;&lt;td&gt;2 2 K&lt;br&gt;more..&lt;br&gt;more..&lt;/td&gt;\n        &lt;td &gt;1 L&lt;/td&gt;\n        &lt;td&gt;1 M&lt;/td&gt;&lt;td&gt;22 M&lt;/td&gt;&lt;td&gt;333 M&lt;/td&gt;&lt;td&gt;4444 M&lt;/td&gt;\n        &lt;td&gt;1 N&lt;/td&gt;&lt;td&gt;2 N&lt;/td&gt;\n        &lt;td &gt;1 1 1 1 1 1 1 O&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;fixed 3&lt;/td&gt;\n        &lt;td&gt;1 1 1 1 1 A&lt;/td&gt;&lt;td&gt;2 2 2 2 2 A&lt;/td&gt;&lt;td&gt;3 3 3 3 3 A&lt;/td&gt;&lt;td&gt;4 4 4 4 4 A&lt;/td&gt;\n        &lt;td&gt;1 B&lt;/td&gt;&lt;td&gt;2 B&lt;/td&gt;\n        &lt;td &gt;1 C&lt;/td&gt;\n        &lt;td&gt;1 D&lt;/td&gt;&lt;td&gt;2 D&lt;/td&gt;&lt;td&gt;3 D&lt;/td&gt;&lt;td&gt;4 D&lt;br&gt;more...&lt;/td&gt;\n        &lt;td&gt;1 E&lt;/td&gt;&lt;td&gt;2 E&lt;/td&gt;\n        &lt;td &gt;1 F&lt;/td&gt;\n        &lt;td&gt;1 1 1 G&lt;/td&gt;&lt;td&gt;2 2 G&lt;/td&gt;&lt;td&gt;3 G&lt;/td&gt;&lt;td&gt;4 4 4 4 G&lt;/td&gt;\n        &lt;td&gt;1 H&lt;/td&gt;&lt;td&gt;222 H&lt;/td&gt;\n        &lt;td &gt;1 I&lt;/td&gt;\n        &lt;td&gt;1 J&lt;/td&gt;&lt;td&gt;2 J&lt;/td&gt;&lt;td&gt;3 J&lt;/td&gt;&lt;td&gt;4 J&lt;/td&gt;\n        &lt;td&gt;1 K&lt;/td&gt;&lt;td&gt;2 2 K&lt;br&gt;more..&lt;br&gt;more..&lt;/td&gt;\n        &lt;td &gt;1 L&lt;/td&gt;\n        &lt;td&gt;1 M&lt;/td&gt;&lt;td&gt;22 M&lt;/td&gt;&lt;td&gt;333 M&lt;/td&gt;&lt;td&gt;4444 M&lt;/td&gt;\n        &lt;td&gt;1 N&lt;/td&gt;&lt;td&gt;2 N&lt;/td&gt;\n        &lt;td &gt;1 1 1 1 1 1 1 O&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;fixed 4&lt;/td&gt;\n        &lt;td&gt;1 1 1 1 1 A&lt;/td&gt;&lt;td&gt;2 2 2 2 2 A&lt;/td&gt;&lt;td&gt;3 3 3 3 3 A&lt;/td&gt;&lt;td&gt;4 4 4 4 4 A&lt;/td&gt;\n        &lt;td&gt;1 B&lt;/td&gt;&lt;td&gt;2 B&lt;/td&gt;\n        &lt;td &gt;1 C&lt;/td&gt;\n        &lt;td&gt;1 D&lt;/td&gt;&lt;td&gt;2 D&lt;/td&gt;&lt;td&gt;3 D&lt;/td&gt;&lt;td&gt;4 D&lt;br&gt;more...&lt;br&gt;more...&lt;br&gt;more...&lt;br&gt;more...&lt;/td&gt;\n        &lt;td&gt;1 E&lt;/td&gt;&lt;td&gt;2 E&lt;/td&gt;\n        &lt;td &gt;1 F&lt;/td&gt;\n        &lt;td&gt;1 1 1 G&lt;/td&gt;&lt;td&gt;2 2 G&lt;/td&gt;&lt;td&gt;3 G&lt;/td&gt;&lt;td&gt;4 4 4 4 G&lt;/td&gt;\n        &lt;td&gt;1 H&lt;/td&gt;&lt;td&gt;222 H&lt;/td&gt;\n        &lt;td &gt;1 I&lt;/td&gt;\n        &lt;td&gt;1 J&lt;/td&gt;&lt;td&gt;2 J&lt;/td&gt;&lt;td&gt;3 J&lt;/td&gt;&lt;td&gt;4 J&lt;/td&gt;\n        &lt;td&gt;1 K&lt;/td&gt;&lt;td&gt;2 2 K&lt;br&gt;more..&lt;br&gt;more..&lt;/td&gt;\n        &lt;td &gt;1 L&lt;/td&gt;\n        &lt;td&gt;1 M&lt;/td&gt;&lt;td&gt;22 M&lt;/td&gt;&lt;td&gt;333 M&lt;/td&gt;&lt;td&gt;4444 M&lt;/td&gt;\n        &lt;td&gt;1 N&lt;/td&gt;&lt;td&gt;2 N&lt;/td&gt;\n        &lt;td &gt;1 1 1 1 1 1 1 O&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;fixed 5&lt;/td&gt;\n        &lt;td&gt;1 1 1 1 1 A&lt;/td&gt;&lt;td&gt;2 2 2 2 2 A&lt;/td&gt;&lt;td&gt;3 3 3 3 3 A&lt;/td&gt;&lt;td&gt;4 4 4 4 4 A&lt;/td&gt;\n        &lt;td&gt;1 B&lt;/td&gt;&lt;td&gt;2 B&lt;/td&gt;\n        &lt;td &gt;1 C&lt;/td&gt;\n        &lt;td&gt;1 D&lt;/td&gt;&lt;td&gt;2 D&lt;/td&gt;&lt;td&gt;3 D&lt;/td&gt;&lt;td&gt;4 D&lt;br&gt;more...&lt;/td&gt;\n        &lt;td&gt;1 E&lt;/td&gt;&lt;td&gt;2 E&lt;/td&gt;\n        &lt;td &gt;1 F&lt;/td&gt;\n        &lt;td&gt;1 1 1 G&lt;/td&gt;&lt;td&gt;2 2 G&lt;/td&gt;&lt;td&gt;3 G&lt;/td&gt;&lt;td&gt;4 4 4 4 G&lt;/td&gt;\n        &lt;td&gt;1 H&lt;/td&gt;&lt;td&gt;222 H&lt;br&gt;H&lt;br&gt;H&lt;br&gt;H&lt;br&gt;H&lt;/td&gt;\n        &lt;td &gt;1 I&lt;/td&gt;\n        &lt;td&gt;1 J&lt;/td&gt;&lt;td&gt;2 J&lt;/td&gt;&lt;td&gt;3 J&lt;/td&gt;&lt;td&gt;4 J&lt;/td&gt;\n        &lt;td&gt;1 K&lt;/td&gt;&lt;td&gt;2 2 K&lt;br&gt;more..&lt;br&gt;more..&lt;/td&gt;\n        &lt;td &gt;1 L&lt;/td&gt;\n        &lt;td&gt;1 M&lt;/td&gt;&lt;td&gt;22 M&lt;/td&gt;&lt;td&gt;333 M&lt;/td&gt;&lt;td&gt;4444 M&lt;/td&gt;\n        &lt;td&gt;1 N&lt;/td&gt;&lt;td&gt;2 N&lt;/td&gt;\n        &lt;td &gt;1 1 1 1 1 1 1 O&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;fixed 6&lt;br&gt;6&lt;br&gt;6&lt;br&gt;6&lt;/td&gt;\n        &lt;td&gt;1 1 1 1 1 A&lt;/td&gt;&lt;td&gt;2 2 2 2 2 A&lt;/td&gt;&lt;td&gt;3 3 3 3 3 A&lt;/td&gt;&lt;td&gt;4 4 4 4 4 A&lt;/td&gt;\n        &lt;td&gt;1 B&lt;/td&gt;&lt;td&gt;2 B&lt;/td&gt;\n        &lt;td &gt;1 C&lt;/td&gt;\n        &lt;td&gt;1 D&lt;/td&gt;&lt;td&gt;2 D&lt;/td&gt;&lt;td&gt;3 D&lt;/td&gt;&lt;td&gt;4 D&lt;br&gt;more...&lt;/td&gt;\n        &lt;td&gt;1 E&lt;/td&gt;&lt;td&gt;2 E&lt;/td&gt;\n        &lt;td &gt;1 F&lt;/td&gt;\n        &lt;td&gt;1 1 1 G&lt;/td&gt;&lt;td&gt;2 2 G&lt;/td&gt;&lt;td&gt;3 G&lt;/td&gt;&lt;td&gt;4 4 4 4 G&lt;/td&gt;\n        &lt;td&gt;1 H&lt;/td&gt;&lt;td&gt;222 H&lt;/td&gt;\n        &lt;td &gt;1 I&lt;/td&gt;\n        &lt;td&gt;1 J&lt;/td&gt;&lt;td&gt;2 J&lt;/td&gt;&lt;td&gt;3 J&lt;/td&gt;&lt;td&gt;4 J&lt;/td&gt;\n        &lt;td&gt;1 K&lt;/td&gt;&lt;td&gt;2 2 K&lt;br&gt;more..&lt;br&gt;more..&lt;/td&gt;\n        &lt;td &gt;1 L&lt;/td&gt;\n        &lt;td&gt;1 M&lt;/td&gt;&lt;td&gt;22 M&lt;/td&gt;&lt;td&gt;333 M&lt;/td&gt;&lt;td&gt;4444 M&lt;/td&gt;\n        &lt;td&gt;1 N&lt;/td&gt;&lt;td&gt;2 N&lt;/td&gt;\n        &lt;td &gt;1 1 1 1 1 1 1 O&lt;/td&gt;\n    &lt;/tr&gt;\n\n    &lt;/table&gt;\n\n\n    &lt;!-- static size footer junk--&gt;&lt;!-- static size footer junk--&gt;&lt;!-- static size footer junk--&gt;&lt;!-- static size footer junk--&gt;\n    &lt;table border=\"1\" width=\"100%\" cellspacing=\"1\" cellpadding=\"0\" align=\"center\"&gt;\n    &lt;tr&gt;\n    &lt;td width=\"35%\" align=\"left\"&gt;footer junk left&lt;/td&gt;\n    &lt;td &gt;- FOOTER JUNK MIDDLE -&lt;/td&gt;\n    &lt;td width=\"35%\" align=\"right\"&gt;footer junk right&lt;/td&gt;\n    &lt;/tr&gt;\n\n  &lt;/form&gt;\n&lt;/BODY&gt;\n&lt;/HTML&gt;\n</code></pre>\n",
            "last_activity_date": 1386700182,
            "question_id": 10838700,
            "score": 37,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "html-table"
            ],
            "title": "Large dynamically sized html table with a fixed scroll row and fixed scroll column"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Because there is no such thing as <em>built-in</em> associative arrays in javascript. That's why it's bad.</p>\n\n<p>In fact, when you use something like :</p>\n\n<pre><code>theArray[\"a\"] = \"hello, world!\";\n</code></pre>\n\n<p>It simply creates a PROPERTY called \"a\" and set its value to \"hello, world!\". This is why the length is always 0, and why the output of <code>alert(theArray)</code> is empty.</p>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>In JavaScript, Objects are Associative Arrays...there aren't separate concepts for them. You are also able to safely use '.' in a key name, but you can only access the value using the bracket notation:</p>\n\n<pre><code>var foo = {}\nfoo['bar'] = 'test';\nfoo['baz.bin'] = 'value';\n\nalert(foo.bar); // shows 'test'\nalert(foo['baz.bin']); // shows 'value'\n</code></pre>\n\n<p>If you're using them already and they work, you're safe.</p>\n",
                    "is_accepted": true,
                    "score": 57
                },
                {
                    "body": "<p>There isn't an associative array, it's just an object.</p>\n\n<pre><code>foo.bar;    // Equivalent to...\nfoo[\"bar\"]; // Looks like associative array.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In javascript object and array are pretty much the same thing, with array having a bit of  magical functionality (autoupdating length property and such) and prototype methods suitable for arrays. It is also much easier to construct an object than using associative array:</p>\n\n<pre><code>var obj = {\"my.key\": \"myValue\"};\n</code></pre>\n\n<p>vs</p>\n\n<pre><code>var obj = [];\nobj[\"my.key\"] = \"myValue\";\n</code></pre>\n\n<p>Therefore never use the array object for this but just the regular object.</p>\n\n<p>Some functionality:</p>\n\n<pre><code>var obj = {}; //Initialized empty object\n</code></pre>\n\n<p>delete a key-value pair:</p>\n\n<pre><code>delete obj[key];\n</code></pre>\n\n<p>check if key exists:</p>\n\n<pre><code>key in obj;\n</code></pre>\n\n<p>get key value:</p>\n\n<pre><code>obj[key];\n</code></pre>\n\n<p>add a key value pair:</p>\n\n<pre><code>obj[key] = value;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Actually, an \"associative array\" is pretty much the same as an \"array-like object\" in ECMAscript. Even <code>Arrays</code> are objects in ECMAscript, just with the exception to have numeric keys (which are still strings in the background), a <code>.length</code> property along with some inherited methods from <code>Array.prototype</code>.</p>\n\n<p>So, a perl hash and an ECMAscript object behave similarly. You might not know that you can access object properties not only via a dot, but also with brackets and strings, like</p>\n\n<pre><code>var myObj = { foo: 42 };\n\nmyObj.foo; // 42\nmyObj['foo']; // 42\n</code></pre>\n\n<p>knowing that, you can also use keys with <code>.</code></p>\n\n<pre><code>var myObj = { };\nmyObj['hello.foo.world'] = 42;\n</code></pre>\n\n<p>of course, you can access that key only with the bracket notation.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use <code>.</code> in key names on JS objects (aka associative arrays) if you'd like, they're accepted without issue. The minor drawback is you can't use shortcut notations with the dotted keys, e.g.</p>\n\n<pre><code>var x = {};\nx['hello'] = 'there';\nalert(x.hello);\n</code></pre>\n\n<p>is perfectly acceptable and will pop up an alert with 'there' in it. But if you use a dotted name:</p>\n\n<pre><code>var x = {};\nx['this.is'] = 'sparta';\nalert(x.this.is);\n</code></pre>\n\n<p>will fail, as Javascript will look for a attribute named <code>this</code> in the x object, which does not exist. There is only the <code>this.is</code> attribute.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>In my script there is a need to create a hash table, i searched in google for this. Most of the folks are recommending JavaScript object for this purpose. Problem is, some of the keys in the hash table have \".\" in them. I am able to create these keys easily with the associative arrays.</p>\n\n<p>I don't understand why associative arrays are bad. First thing that is mentioned in the sites that i looked at is the length property. I am coming from the Perl background, where i used hashes. Most common uses were to get the value from a key, check if a key exists, delete a key-value pair, add a key-value pair. If these are my common uses, can i safely use associative array? </p>\n",
            "last_activity_date": 1393345222,
            "question_id": 8067590,
            "score": 34,
            "tags": [
                "javascript"
            ],
            "title": "associative array versus object in javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I think the answer is No on both counts.</p>\n\n<p><a href=\"http://web-design.lovetoknow.com/Javascript_PDF_Viewer\" rel=\"nofollow\">This page</a> describes some viable alternatives for embedding PDF content in a website.  They are:</p>\n\n<ul>\n<li>Google's Reader</li>\n<li>Adobe's PDF reader APIs</li>\n<li>Various open source wrappers for the above two.</li>\n</ul>\n\n<p>I have serious doubts about whether it would be viable to implement a PDF viewer in Javascript that would: </p>\n\n<ul>\n<li>be secure,</li>\n<li>be reliable,</li>\n<li>perform well enough to be usable, and</li>\n<li>work on multiple browsers.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use the <a href=\"http://googlesystem.blogspot.com/2009/09/embeddable-google-document-viewer.html\" rel=\"nofollow\">Google Docs</a> PDF-viewing widget, if you don't mind having them host the \"application\" itself.</p>\n\n<p>I had more suggestions, but stack overflow only lets me post one hyperlink as a new user, sorry.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Well it's not even close to the full spec, but there is a <a href=\"http://logand.com/sw/wps/index.html\" rel=\"nofollow\">JavaScript and Canvas based PDF viewer</a> out there.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is an open source HTML5/javascript reader available called Trapeze though its still in its early stages.</p>\n\n<p>Demo site:\n<a href=\"http://trapeze.xyrka.com/\">http://trapeze.xyrka.com/</a></p>\n\n<p>Google Code Page:\n<a href=\"http://code.google.com/p/trapeze-reader/\">http://code.google.com/p/trapeze-reader/</a></p>\n\n<p>Disclaimer:\nI'm the author.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>There are some guys at Mozilla working on implementing a PDF reader using HTML5 and JavaScript. It is called <a href=\"https://github.com/mozilla/pdf.js\">pdf.js</a> and one of the developers just made an interesting <a href=\"http://andreasgal.com/2011/06/15/pdf-js/\">blog post</a> about the project.</p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>Check out the HTML5 PDF viewer:</p>\n\n<p><a href=\"http://flexpaper.devaldi.com/demo/\" rel=\"nofollow\">http://flexpaper.devaldi.com/demo/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there any open source Javascript based PDF Viewer available? Any guide to developing this kind of script that renders PDF docs would be helpful.</p>\n",
            "last_activity_date": 1345816482,
            "question_id": 3539879,
            "score": 34,
            "tags": [
                "javascript",
                "pdf",
                "open-source"
            ],
            "title": "Open Source Javascript PDF viewer"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You can catch key event :</p>\n\n<pre><code>function checkEventObj ( _event_ ){\n    // --- IE explorer\n    if ( window.event )\n        return window.event;\n    // --- Netscape and other explorers\n    else\n        return _event_;\n}\n\ndocument.keydown = function(_event) {\n    var e = checkEventObject(_event);\n\n    if( e.ctrlKey &amp;&amp; (e.keyCode == 86) )\n        window.clipboardData.clearData();\n}\n</code></pre>\n\n<p>Not tested but, could help.</p>\n\n<p>Source from <a href=\"http://www.commentcamarche.net/faq/18760-javascript-manipulation-des-controles-clavier\" rel=\"nofollow\">comentcamarche</a> and Zakaria</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This seems to work ok.</p>\n\n<p>You can listen to <a href=\"http://api.jquery.com/category/events/keyboard-events/\">keyboard events</a> with jQuery and prevent the event from completing if its the key combo you are looking for.\nNote, check 118 and 86 ('V' and 'v')</p>\n\n<p>Working example here:\n<a href=\"http://jsfiddle.net/dannylane/9pRsx/4/\">http://jsfiddle.net/dannylane/9pRsx/4/</a></p>\n\n<pre><code>$(document).ready(function(){\n    $(document).keydown(function(event) {\n        if (event.ctrlKey==true &amp;&amp; (event.which == '118' || event.which == '86')) {\n            alert('thou. shalt. not. PASTE!');\n            event.preventDefault();\n         }\n    });\n});\n</code></pre>\n\n<p>Update:\nkeypress doesn't fire in IE, use keydown instead.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>This now works for IE FF Chrome properly..I have not tested for other browsers though    </p>\n\n<pre><code>$(document).ready(function(){\n      $('#txtInput').bind(\"cut copy paste\",function(e) {\n          e.preventDefault();\n      });\n    });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 82
                },
                {
                    "body": "<pre><code>jQuery('input.disablePaste').keydown(function(event) {\n    var forbiddenKeys = new Array('c', 'x', 'v');\n    var keyCode = (event.keyCode) ? event.keyCode : event.which;\n    var isCtrl;\n    isCtrl = event.ctrlKey\n    if (isCtrl) {\n        for (i = 0; i &lt; forbiddenKeys.length; i++) {\n            if (forbiddenKeys[i] == String.fromCharCode(keyCode).toLowerCase()) {\n                 return false;\n            }\n        }\n    }\n    return true;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>As of JQuery 1.7 you might want to use the on method instead</p>\n\n<pre><code>$(document).ready(function(){\n    $(document).on(\"cut copy paste\",\"#txtInput\",function(e) {\n        e.preventDefault();\n    });\n });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I tried this in my Angular project and it worked fine without jQuery.</p>\n\n<pre><code>&lt;input type='text' ng-paste='preventPaste($event)'&gt;\n</code></pre>\n\n<p>And in script part:</p>\n\n<pre><code>$scope.preventPaste = function(e){\n   e.preventDefault();\n   return false;\n};\n</code></pre>\n\n<p>In non angular project, use 'onPaste' instead of 'ng-paste' and 'event' instesd of '$event'.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>$(document).ready(function(){\n  $('#txtInput').live(\"cut copy paste\",function(e) {\n    e.preventDefault();\n  });\n});\n</code></pre>\n\n<p>On textbox live event cut, copy, paste event is prevented and it works well.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I disable Ctrl+V (Paste) option using jQuery in one of my input text fields....</p>\n",
            "last_activity_date": 1422422392,
            "question_id": 5510129,
            "score": 33,
            "tags": [
                "javascript",
                "jquery",
                "contextmenu",
                "copy-paste",
                "textinput"
            ],
            "title": "How to disable Ctrl+V (Paste) with jQuery"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This isn't my code sample, but I've used it in the past.<br/></p>\n\n<pre><code>//First Add this to extend jQuery\n\n    $.extend({\n      getUrlVars: function(){\n        var vars = [], hash;\n        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&amp;');\n        for(var i = 0; i &lt; hashes.length; i++)\n        {\n          hash = hashes[i].split('=');\n          vars.push(hash[0]);\n          vars[hash[0]] = hash[1];\n        }\n        return vars;\n      },\n      getUrlVar: function(name){\n        return $.getUrlVars()[name];\n      }\n    });\n\n    //Second call with this:\n    // Get object of URL parameters\n    var allVars = $.getUrlVars();\n\n    // Getting URL var by its nam\n    var byName = $.getUrlVar('name');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>JQuery <a href=\"https://github.com/allmarkedup/jQuery-URL-Parser\">jQuery-URL-Parser</a> plugin do the same job, for example to retrieve the value of <strong>search</strong> query string param, you can use</p>\n\n<pre><code>$.url().param('search');\n</code></pre>\n\n\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p>Why extend jQuery?  What would be the benefit of extending jQuery vs just having a global function?</p>\n\n<pre><code>function qs(key) {\n    key = key.replace(/[*+?^$.\\[\\]{}()|\\\\\\/]/g, \"\\\\$&amp;\"); // escape RegEx meta chars\n    var match = location.search.match(new RegExp(\"[?&amp;]\"+key+\"=([^&amp;]+)(&amp;|$)\"));\n    return match &amp;&amp; decodeURIComponent(match[1].replace(/\\+/g, \" \"));\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/gilly3/sgxcL/\">http://jsfiddle.net/gilly3/sgxcL/</a></p>\n\n<p>An alternative approach would be to parse the entire query string and store the values in an object for later use.  This approach doesn't require a regular expression and extends the <code>window.location</code> object (but, could just as easily use a global variable):</p>\n\n<pre><code>location.queryString = {};\nlocation.search.substr(1).split(\"&amp;\").forEach(function (pair) {\n    if (pair === \"\") return;\n    var parts = pair.split(\"=\");\n    location.queryString[parts[0]] = parts[1] &amp;&amp;\n        decodeURIComponent(parts[1].replace(/\\+/g, \" \"));\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/gilly3/YnCeu/\">http://jsfiddle.net/gilly3/YnCeu/</a></p>\n\n<p>This version also makes use of <code>Array.forEach()</code>, which is unavailable natively in IE7 and IE8.  It can be added by using <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach#Compatibility\">the implementation at MDN</a>, or you can use jQuery's <a href=\"http://api.jquery.com/jquery.each/\"><code>$.each()</code></a> instead.</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>I wrote a little function where you only have to parse the name of the query parameter. So if you have: ?Project=12&amp;Mode=200&amp;date=2013-05-27  and you want the 'Mode' parameter you only have to parse the 'Mode' name into the function:</p>\n\n<pre><code>var ModeString =  getParameterByName('Mode');\n\nfunction getParameterByName( name ){\n  name = name.replace(/[\\[]/,\"\\\\\\[\").replace(/[\\]]/,\"\\\\\\]\");\n  var regexS = \"[\\\\?&amp;]\"+name+\"=([^&amp;#]*)\", \n      regex = new RegExp( regexS ),\n      results = regex.exec( window.location.href );\n  if( results == null ){\n    return \"\";\n  } else{\n    return decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Anyone know of a good way to write a jQuery Extention to handle querystring parameters? </p>\n\n<p>Basically I want to extend the jQuery magic ($) function so I can do something like this. </p>\n\n<pre><code>$('?search').val(); \n</code></pre>\n\n<p>Which would give me the value \"test\" in the following URL</p>\n\n<p><a href=\"http://www.mysite.com/index.php?search=test\">http://www.mysite.com/index.php?search=test</a></p>\n\n<p>I've seen a lot of functions that can do this in jQuery and Javascript, but I actually want to extend jquery to work exactly as it is shown above. </p>\n\n<p>I'm not looking for a jQuery plugin, I'm looking for an extension to the jQuery method. </p>\n",
            "last_activity_date": 1363694332,
            "question_id": 7731778,
            "score": 27,
            "tags": [
                "javascript",
                "jquery",
                "query-string"
            ],
            "title": "jQuery Get Query String Parameters"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You will not be able to use your entire REST API with JSONP. You can only call GET requests with JSONP (it works by writing a new <code>&lt;script&gt;</code> tag on the current document, then calling a javascript callback...).</p>\n\n<p>To use all HTTP verb (POST, DELETE, PUT), you can use the CORS protocol : <a href=\"http://www.w3.org/TR/access-control/\">http://www.w3.org/TR/access-control/</a>. </p>\n\n<blockquote>\n  <p>CORS is a protocol negotiated between a browser and a web-service that tells the browser that it is \u201cOK\u201d to execute Javascript code from a cross-domain call</p>\n</blockquote>\n\n<p>To use this, you just need to include some custom headers in your server response that tells the browser that it's ok to accept cross domain requests. Here's an blog post that explains how to implement it with RubyOnRails (but it should be quite similar with others framework...) : <a href=\"http://www.tsheffler.com/blog/?p=428\">http://www.tsheffler.com/blog/?p=428</a></p>\n\n<p>It's the simplest solution, you can use backbone.js as if you where on the same domain, and it works with most current browsers (Internet Explorer 8+, Firefox 3.5+, Safari 4+, and Chrome) ! </p>\n\n<p>If you need older browser support, I did manage to make backbone work using <a href=\"https://github.com/oyvindkinsey/easyXDM\">easyXDM</a> :</p>\n\n<blockquote>\n  <p>easyXDM is a Javascript library that enables you as a developer to easily work around the limitation set in place by the Same Origin Policy, in turn making it easy to communicate and expose javascript API's across domain boundaries.</p>\n</blockquote>\n\n<p>It's a little more complicated, and works with a some well known iframe hacks (that are sometimes used in javascript widgets like GMaps, facebook widgets, ...). </p>\n\n<p>Hope this help!</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>JSONP support for GET operations can be added via <code>fetch</code>'s options. </p>\n\n<p>In the same hash where you configure your <code>success</code> and <code>error</code> handlers, add an object like so:</p>\n\n<p><code>{dataType: \"jsonp\"}</code></p>\n\n<p>This will pass along the jsonp option to JQuery's ajax handler, and automagically, you'll have JSONP support for retrieving models / collections.</p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>The SYNC should be overrided to set its datatype as \"jsonp\". But my question is What should be the response from server? Just the MODEL or somethin like function call.?</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I would like to use Backbone.js with a REST api I control. I was hoping to have the REST api and the Backbone scripts live on a different domain but unfortunately this will be blocked, as it is a cross domain request.</p>\n\n<p>Does Backbone.js have an built in functionality to support JSONP requests? Or, alternatively, does anyone have any experience with manually adding JSONP support to Backbone.js <code>sync</code> system?</p>\n",
            "last_activity_date": 1370617581,
            "question_id": 7169270,
            "score": 26,
            "tags": [
                "javascript",
                "json",
                "jsonp",
                "backbone.js"
            ],
            "title": "JSONP and Backbone.js"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You could give your hidden field an id:</p>\n\n<pre><code>&lt;input type=\"hidden\" id=\"myField\" value=\"\" /&gt;\n</code></pre>\n\n<p>and then when you want to assign its value:</p>\n\n<pre><code>document.getElementById('myField').value = product(2, 3);\n</code></pre>\n\n<p>Make sure that you are performing this assignment after the DOM has been fully loaded, for example in the <code>window.load</code> event.</p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>add some id for an input </p>\n\n<pre><code>var multi = product(2,3);\ndocument.getElementById('id').value=multi;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>if you already have that hidden input : </p>\n\n<pre><code>function product(a, b) {\n   return a * b;\n}\nfunction setInputValue(input_id, val) {\n    document.getElementById(input_id).setAttribute('value', val);\n}\n</code></pre>\n\n<p>if not, you can create one, add it to the body and then set it's value :  </p>\n\n<pre><code>function addInput(val) {\n    var input = document.createElement('input');\n    input.setAttribute('type', 'hidden');\n    input.setAttribute('value', val);\n    document.body.appendChild(input);\n}\n</code></pre>\n\n<p>And then you can use(depending on the case) : </p>\n\n<pre><code>addInput(product(2, 3)); // if you want to create the input\n// or\nsetInputValue('input_id', product(2, 3)); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You could do that like this:    </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n     function product(a,b)\n     {\n     return a*b;\n     }\n    document.getElementById('myvalue').value = product(a,b);\n &lt;/script&gt;\n\n &lt;input type=\"hidden\" value=\"THE OUTPUT OF PRODUCT FUNCTION\" id=\"myvalue\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\n  function product(x,y)\n  {\n   return x*y;\n  }\n document.getElementById('myvalue').value = product(x,y);\n &lt;/script&gt;\n\n &lt;input type=\"hidden\" value=\"THE OUTPUT OF PRODUCT FUNCTION\" id=\"myvalue\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try like this:\n  it is very simple</p>\n\n<pre><code>        &lt;input type=\"hidden\" name=\"ye\" id=\"yea\"&gt;    \n\n        &lt;script type=\"text/javascript\"&gt;\n           var year=new Date();\n           document.getElementById(\"yea\").value=(year.getFullYear());\n        &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I would like to assign value of product of two integer numbers into a hidden field already in the html document.\nI was thinking about getting the value of a javascript variable and then passing it on a input type hidden.\nI'm having a hard time to explain but this is how it should work:</p>\n\n<h1>Script Example</h1>\n\n<pre><code> &lt;script type=\"text/javascript\"&gt;\n function product(a,b){\n      return a*b;\n }\n &lt;/script&gt;\n</code></pre>\n\n<p>above computes the product and i want the product to be in hidden field.</p>\n\n<pre><code>&lt;input type=\"hidden\" value=\"[return value from product function]\"&gt;\n</code></pre>\n\n<p>How is this possible?</p>\n",
            "last_activity_date": 1407513239,
            "question_id": 7764154,
            "score": 22,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Pass a javascript variable value into input type hidden value"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Check out <a href=\"http://swfupload.org/\">SWFUpload</a>, which is essentially a javascript api to flash's absolutely superior file upload handling capabilities.  Best thing out there until the browsers finally catch up.</p>\n\n<p>From link:</p>\n\n<blockquote>\n  <ul>\n  <li>Upload multiple files at once by ctrl/shift-selecting in dialog</li>\n  <li>Javascript callbacks on all events</li>\n  <li>Get file information before upload starts</li>\n  <li>Style upload elements with XHTML and css</li>\n  <li>Display information while files are uploading using HTML</li>\n  <li>No page reloads necessary</li>\n  <li>Works on all platforms/browsers that has Flash support.</li>\n  <li>Degrades gracefully to normal HTML upload form if Flash or\n  javascript is unavailable</li>\n  <li>Control filesize before upload starts</li>\n  <li>Only display chosen filetypes in dialog</li>\n  <li>Queue uploads, remove/add files before starting upload</li>\n  </ul>\n</blockquote>\n\n<p><a href=\"http://demo.swfupload.org/\">Demos</a></p>\n\n<p>----- iframe upload -----</p>\n\n<p>To start, you want to have an iframe on your page.  This is meant for server communication.  You'll hide it later, but for now, keep it visible.  Give that iframe a name attribute, like \"uploader\" or something.</p>\n\n<p>Now, in your form, set the target to the iframe's name and the action to a script you have on the server that will accept a file upload (like a normal form with a file upload).  Add a link inside that form with the text \"Add File\".  Set that link to run a javascript function which will add a new input to the form.  This can be done via the DOM, but I would recommend a javascript library like <a href=\"http://jquery.com/\">jquery</a>.</p>\n\n<p>Once the new file input is added to the form, set the blur event of that input to a javascript function that will submit the form and then check it periodically for output.  Reading an iframe can be tricky, but it's possible.  </p>\n\n<p>Have your file upload script output a \"Done.\" or a filename or something when the upload is complete.</p>\n\n<p>Check it every second or so until there is content.  Once you have content, kill your timer and replace the file input with the name of the file (or \"File Uploaded\") or whatever.</p>\n\n<p>Hide your iframe with css.</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>From YUI! (Yahoo User Interface), <a href=\"http://developer.yahoo.com/yui/uploader/\">http://developer.yahoo.com/yui/uploader/</a></p>\n\n<blockquote>\n  <ol>\n  <li>Multiple file selection in a single \"Open File\" dialog. </li>\n  <li>File extension filters to facilitate the user's selection. </li>\n  <li>Progress tracking for file uploads. </li>\n  <li>A range of file metadata: filename, size, date created, date modified, and author.</li>\n  <li>A set of events dispatched on various aspects of the file upload process: file selection, upload progress, upload completion, etc.</li>\n  <li>Inclusion of additional data in the file upload POST request. </li>\n  <li>Faster file upload on broadband connections due to the modified SEND buffer size. </li>\n  <li>Same-page server response upon completion of the file upload.</li>\n  </ol>\n</blockquote>\n\n<p><strong>Totally Free</strong></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I'd like a little more clarification of \"Gmail-like\" file uploading.</p>\n\n<p>do you mean how if it sits for a little bit, it automatically attaches it to a draft?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Gmail's code is difficult to find your way around, but if I had to guess, this is how it works:</p>\n\n<ul>\n<li>When you click \"attach another file\", it inserts a regular input type file control. On IE, it may also programmatically trigger the click event on the \"browse\" button so the file dialog opens immediately (it doesn't do this on firefox, and I don't have IE handy, but I believe IE allows for this)</li>\n<li>After you select a file, it detects the change event of the input control, and starts a timer.</li>\n<li>When the timer triggers, it detaches the input element from the form, and adds it to a different form in a hidden iframe, placing a simple link in the main (visible) form. The hidden iframe is then submitted to upload the file. (It may also clone the input element, but I haven't tried whether this works.)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use iFrames for this</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For a non-flash solution, you can use <a href=\"http://www.brettle.com/Default.aspx?pageid=32\" rel=\"nofollow\">NeatUpload</a>.  I used it on an extensive project last year with a no-flash requirement.  It's very easy to integrate into existing solutions. I thought it was a breeze to work with.  Easier, in my limited experience, than working with SWFUpload in ASP.NET.  Probably because NeatUpload is built just for ASP.NET. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Are you talking about an upload without a full page postback?  Take a look at <a href=\"http://www.phpletter.com/Demo/AjaxFileUpload-Demo/\" rel=\"nofollow\">http://www.phpletter.com/Demo/AjaxFileUpload-Demo/</a>, which creates a hidden iframe, copies the input control, and uses the iframe to perform the post to get the file on the server.</p>\n\n<p>If you're looking for the behavior where when the user clicks \"attach file\" and the file browsing dialog automatically pops up, that can be done via Javascript but doesn't work in FireFox, which has the security precaution of requiring the user to invoke the \"Browse\" button directly (rather than programmatically through script). </p>\n\n<p>For the \"automatic\" upload, use Javascript to attach to the \"change\" event for the \"value\" property of the the 'input' control so that the will perform when a file has been selected.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is the <strong><a href=\"http://abcoder.com/javascript/gmail-uploader-clone-with-drag-drop-feature-free-download-with-source-code/\" rel=\"nofollow\">gmail uploader clone</a></strong>. This is the <strong>exact clone of gmail uploader</strong> with some extra facilities. You can see the thumbnails of images after uploading, <strong>Drag</strong> the thumbnails to change the order and replace any thumbnail. It is done using <strong>jQuery</strong>.\nYou can see the demo <a href=\"http://abcoder.com/Gmail-Uploader/\" rel=\"nofollow\"><strong>here</strong></a>. The source code is free to <a href=\"http://www.abcoder.com/Gmail-Uploader/Gmail-Uploader.zip\" rel=\"nofollow\">download in a single zip file</a>.</p>\n\n<p>I hope you can easily remove some code and get the desired thing. You may leave comments on the ABCoder blog if you need further help.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You may use <a href=\"http://abcoder.com/javascript/flickr-uploader-clone-free-download-with-source-code/\" rel=\"nofollow\"><strong>Flickr Uploader</strong></a> clone instead.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I am considering which to choose, SWFupload or <a href=\"http://www.uploadify.com/\" rel=\"nofollow\">uploadify</a> \nbut on SWFupload's official website , it says that it has not been under active development and the author is hoping someday the SWFupload could revive...</p>\n\n<p>so ... I decided to try \"uploadify\", which seems supports many options, callbacks with lots of demos. (after checking its source code, I guess the author wraps the \"SWFupload v1\" and \"SWFupload v2\" in his \"uploadify v3\"...)</p>\n\n<p>and there's a full list of <a href=\"http://www.enfew.com/jquery-file-upload-plugins/\" rel=\"nofollow\">this kind of uploaders</a>. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to add gmail-like file upload functionality for one of my projects. Can anybody help me with this?</p>\n\n<p>My application is built in vb.net.</p>\n\n<p>I would appreciate any kind of help or guidance.</p>\n\n<p>Thanks\nMithil Deshmukh</p>\n",
            "last_activity_date": 1370192166,
            "question_id": 135123,
            "score": 17,
            "tags": [
                "asp.net",
                "javascript",
                "upload",
                "file-upload",
                "gmail"
            ],
            "title": "How can I get Gmail-like file uploads for my web app?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><strong>Note</strong>: It looks like UIWebView does not support requestAnimationFrames. Thanks to <a href=\"http://stackoverflow.com/users/552445/guillaume-gendre\">Guillaume Gendre</a> for pointing it out!</p>\n\n<p>We ran into a similar issue with a web app we're working on.</p>\n\n<p>For us, it was touchmove that caused issues. We implemented a workaround (found here: <a href=\"https://gist.github.com/3755461\">https://gist.github.com/3755461</a>) that seemed to work pretty well until another issue forced us to abandon it. (I tried adding the workaround to your fiddle and was able to get the timer to fire once or twice, but it required a weird gesture+scroll event that was damn near impossible to consistently reproduce.)</p>\n\n<p>Anyway, one of the new features in iOS 6 for developers are requestAnimationFrames. My workaround is basically a wrapper for timers, allowing the developer to pass a boolean, which will call either the native function or the workaround function.</p>\n\n<p>For example:</p>\n\n<pre><code>setTimeout(function(){alert(\"HI\")}, 1000); // using native\nsetTimeout(function(){alert(\"HI\")}, 1000, true); // using workaround\n</code></pre>\n\n<p>Here are additional ways to use the workaround:</p>\n\n<pre><code>setInterval(function(){console.log(\"Interval\")}, 1000, true);\n\nvar timer = setTimeout(function(){ /* ... */ }, 60000, true);\nclearTimeout(timer);\n\nvar interval = setInterval(someFunc, 10000, true);\nif(someCondition) clearInterval(interval);\n</code></pre>\n\n<p>Here are two fiddles with the workaround examples. Try pinch/zooming on the black squares:</p>\n\n<p><a href=\"http://jsfiddle.net/xKh5m/embedded/result\">http://jsfiddle.net/xKh5m/embedded/result</a> (Uses native <code>setTimeout</code> function)\n<a href=\"http://jsfiddle.net/ujxE3/embedded/result\">http://jsfiddle.net/ujxE3/embedded/result</a></p>\n\n<p>We've been using this workaround for a few months in a production environment, and have not run into any major issues.</p>\n\n<p>Here's a public gist of the workaround: <a href=\"https://gist.github.com/4180482\">https://gist.github.com/4180482</a></p>\n\n<p>Here's more information about requestAnimationFrames:</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/DOM/window.requestAnimationFrame\">MDN documentation</a></p>\n\n<p><a href=\"http://paulirish.com/2011/requestanimationframe-for-smart-animating/\">Paul Irish on requestAnimationFrame</a></p>\n\n<p>Good luck!</p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>I noticed this strange behaviour with the latest iOS (iOS 6). If calling a function for any touch event which has a setTimeout inside, the part inside the setTimeout is never triggered.</p>\n\n<p>This happens only when there is a \"system animation\" such as scroll and zoom-in/out.</p>\n\n<p>For example:</p>\n\n<p><a href=\"http://jsfiddle.net/p4SdL/2/\">http://jsfiddle.net/p4SdL/2/</a></p>\n\n<p>(I used jquery just for testing but the same happens with pure js)</p>\n\n<p>Open that page with safari on any iOS 6 device and zoom in or out. The alert will never be called.</p>\n\n<p>If tested on any iOS 5 device this will work just fine! It seems that during these animations the setTimeout or setInterval are reset by the OS. Is this the intended behaviour or a bug?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1368004454,
            "question_id": 12855123,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "ios",
                "html5",
                "ios6"
            ],
            "title": "iOS 6 js events function not called if has setTimeout in it"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Typically sites that do this by loading content via ajax and listening to the <code>readystatechanged</code> event to update the DOM with a loading GIF or the content.</p>\n\n<p>How are you currently loading your content?</p>\n\n<p>The code would be similar to this:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function load(url) {\n    // display loading image here...\n    document.getElementById('loadingImg').visible = true;\n    // request your data...\n    var req = new XMLHttpRequest();\n    req.open(\"POST\", url, true);\n\n    req.onreadystatechange = function () {\n        if (req.readyState == 4 &amp;&amp; req.status == 200) {\n            // content is loaded...hide the gif and display the content...\n            if (req.responseText) {\n                document.getElementById('content').innerHTML = req.responseText;\n                document.getElementById('loadingImg').visible = false;\n            }\n        }\n    };\n    request.send(vars);\n}\n</code></pre>\n\n<p>There are plenty of 3rd party javascript libraries that may make your life easier, but the above is really all you need.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>I'd love to do this without getting into ajax, as the site is literally completed, and I don't really feel like learning a new language and doing a complete site overhaul. I just need to have a gif display while the images and mp3s are loading behind the scenes. I'm comfortable in XHTML, Javascript and CSS.  Any help?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is an example here along with some other stuff\n<a href=\"http://destraynor.com/serendipity/index.php?/archives/29-AJAX-for-the-beginner.html\" rel=\"nofollow\">http://destraynor.com/serendipity/index.php?/archives/29-AJAX-for-the-beginner.html</a></p>\n\n<p>For a nice gif you can check out \n<a href=\"http://ajaxload.info/\" rel=\"nofollow\">http://ajaxload.info/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You said you didn't want to do this in AJAX.  While AJAX is great for this, there is a way to show one DIV while waiting for the entire <code>&lt;body&gt;</code> to load.  It goes something like this:</p>\n\n<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;style media=\"screen\" type=\"text/css\"&gt;\n      .layer1_class { position: absolute; z-index: 1; top: 100px; left: 0px; visibility: visible; }\n      .layer2_class { position: absolute; z-index: 2; top: 10px; left: 10px; visibility: hidden }\n    &lt;/style&gt;\n    &lt;script&gt;\n      function downLoad(){\n        if (document.all){\n            document.all[\"layer1\"].style.visibility=\"hidden\";\n            document.all[\"layer2\"].style.visibility=\"visible\";\n        } else if (document.getElementById){\n            node = document.getElementById(\"layer1\").style.visibility='hidden';\n            node = document.getElementById(\"layer2\").style.visibility='visible';\n        }\n      }\n    &lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body onload=\"downLoad()\"&gt;\n    &lt;div id=\"layer1\" class=\"layer1_class\"&gt;\n      &lt;table width=\"100%\"&gt;\n        &lt;tr&gt;\n          &lt;td align=\"center\"&gt;&lt;strong&gt;&lt;em&gt;Please wait while this page is loading...&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/table&gt;\n    &lt;/div&gt;\n    &lt;div id=\"layer2\" class=\"layer2_class\"&gt;\n        &lt;script type=\"text/javascript\"&gt;\n                alert('Just holding things up here.  While you are reading this, the body of the page is not loading and the onload event is being delayed');\n        &lt;/script&gt;\n        Final content.      \n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>The onload event won't fire until all of the page has loaded.  So the layer2 <code>&lt;DIV&gt;</code> won't be displayed until the page has finished loading, after which onload will fire.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There's actually a pretty easy way to do this. The code should be something like:</p>\n\n<pre><code>&lt;script type=\"test/javascript\"&gt;\n\n    function showcontent(x){\n\n      if(window.XMLHttpRequest) {\n        xmlhttp = new XMLHttpRequest();\n      } else {\n        xmlhttp = new ActiveXObject('Microsoft.XMLHTTP');\n      }\n\n      xmlhttp.onreadystatechange = function() {\n        if(xmlhttp.readyState == 1) {\n            document.getElementById('content').innerHTML = \"&lt;img src='loading.gif' /&gt;\";\n        }\n        if(xmlhttp.readyState == 4 &amp;&amp; xmlhttp.status == 200) {\n          document.getElementById('content').innerHTML = xmlhttp.responseText;\n        } \n      }\n\n      xmlhttp.open('POST', x+'.html', true);\n      xmlhttp.setRequestHeader('Content-type','application/x-www-form-urlencoded');\n      xmlhttp.send(null);\n\n    }\n</code></pre>\n\n<p>And in the HTML:</p>\n\n<pre><code>&lt;body onload=\"showcontent(main)\"&gt; &lt;!-- onload optional --&gt;\n&lt;div id=\"content\"&gt;&lt;img src=\"loading.gif\"&gt;&lt;/div&gt; &lt;!-- leave img out if not onload --&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>I did something like that on my page and it works great.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use <code>&lt;progress&gt;</code> element in HTML5. See this page for source code and live demo. <a href=\"http://purpledesign.in/blog/super-cool-loading-bar-html5/\" rel=\"nofollow\">http://purpledesign.in/blog/super-cool-loading-bar-html5/</a></p>\n\n<p>here is the progress element...</p>\n\n<pre><code>&lt;progress id=\"progressbar\" value=\"20\" max=\"100\"&gt;&lt;/progress&gt;\n</code></pre>\n\n<p>this will have the loading value starting from 20. Of course only the element wont suffice. You need to move it as the script loads. For that we need JQuery. Here is a simple JQuery script that starts the progress from 0 to 100 and does something in defined time slot.</p>\n\n<pre><code>&lt;script&gt;\n        $(document).ready(function() {\n         if(!Modernizr.meter){\n         alert('Sorry your brower does not support HTML5 progress bar');\n         } else {\n         var progressbar = $('#progressbar'),\n         max = progressbar.attr('max'),\n         time = (1000/max)*10, \n         value = progressbar.val();\n        var loading = function() {\n        value += 1;\n        addValue = progressbar.val(value);\n        $('.progress-value').html(value + '%');\n        if (value == max) {\n        clearInterval(animate);\n        //Do Something\n }\nif (value == 16) {\n//Do something \n}\nif (value == 38) {\n//Do something\n}\nif (value == 55) {\n//Do something \n}\nif (value == 72) {\n//Do something \n}\nif (value == 1) {\n//Do something \n}\nif (value == 86) {\n//Do something \n    }\n\n};\nvar animate = setInterval(function() {\nloading();\n}, time);\n};\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>Add this to your HTML file.</p>\n\n<pre><code>&lt;div class=\"demo-wrapper html5-progress-bar\"&gt;\n&lt;div class=\"progress-bar-wrapper\"&gt;\n &lt;progress id=\"progressbar\" value=\"0\" max=\"100\"&gt;&lt;/progress&gt;\n &lt;span class=\"progress-value\"&gt;0%&lt;/span&gt;\n&lt;/div&gt;\n &lt;/div&gt;\n</code></pre>\n\n<p>Hope this will give you a start.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>How about with jQuery? A simple...</p>\n\n<pre><code>$(window).load(function() {      //Do the code in the {}s when the window has loaded \n  $(\"#loader\").fadeOut(\"fast\");  //Fade out the #loader div\n});\n</code></pre>\n\n<p><strong>And the HTML...</strong></p>\n\n<pre><code>&lt;div id=\"loader\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p><strong>And CSS...</strong></p>\n\n<pre><code>#loader {\n      width: 100%;\n      height: 100%;\n      background-color: white;\n      margin: 0;\n}\n</code></pre>\n\n<p>Then in your loader <code>div</code> you would put the GIF, and any text you wanted, and it will fade out once the page has loaded.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm working on a site which contains a whole bunch of mp3s and images, and I'd like to display a loading gif while all the content loads. </p>\n\n<p>I have no idea how to achieve this, but I do have the animated gif I want to use. </p>\n\n<p>Any suggestions?</p>\n",
            "last_activity_date": 1417937496,
            "question_id": 244183,
            "score": 13,
            "tags": [
                "javascript",
                "html",
                "css",
                "loading",
                "pageload"
            ],
            "title": "How to display a loading screen while site content loads"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Yes, it is possible. You can use an <strong>npm</strong> module in Meteor, since it's based on Node.js.</p>\n\n<p>This code has worked for me fine, e.g.:</p>\n\n<pre><code>var fs = __meteor_bootstrap__.require('fs');\n</code></pre>\n\n<p><strong>UPDATE: To install an npm module in a Meteor app</strong></p>\n\n<ol>\n<li>Inside your terminal, change path to your Meteor app directory.</li>\n<li><code>&gt; cd .meteor/local/build/server</code></li>\n<li>Install an npm module like so <code>&gt; npm install module_name</code>.</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<hr>\n\n<p>&nbsp;</p>\n\n<p><strong>Edit:</strong> for anyone visiting this post, it is outdated. As of Meteor 0.6.4, you use <code>Npm.require</code> instead of <code>__meteor_bootstrap__.require</code>:</p>\n\n<pre><code>var fs = Npm.require('fs');\n</code></pre>\n\n<p>Also, if you don't use standard node package, but one from npm repositories, it's better to create a dependency so that it's automatically installed every time you create a new instance of the project. To do so, create a <code>/packages/someName/package.js</code> file with the following line:</p>\n\n<pre><code>Npm.depends({'packageName': 'packageVersion'});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p>it posible use a nodejs package inside meteor app on server side? It would be great to do that since nodejs has a large number of packages.</p>\n",
            "last_activity_date": 1387293220,
            "question_id": 11691513,
            "score": 11,
            "tags": [
                "javascript",
                "node.js",
                "meteor"
            ],
            "title": "it possible use a nodejs package inside meteor app?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>constructor</code> is a regular property of the prototype object (with the <code>DontEnum</code> flag set so it doesn't show up in <code>for..in</code> loops). If you replace the prototype object, the <code>constructor</code> property will be replaced as well - see <a href=\"http://joost.zeekat.nl/constructors-considered-mildly-confusing.html\">this explanation</a> for further details.</p>\n\n<p>You can work around the issue by manually setting <code>Obj2.prototype.constructor = Obj2</code>, but this way, the <code>DontEnum</code> flag won't be set.</p>\n\n<p>Because of these issues, it isn't a good idea to rely on <code>constructor</code> for type checking: use <code>instanceof</code> or <code>isPrototypeOf()</code> instead.</p>\n\n<p><hr /></p>\n\n<p>Andrey Fedorov raised the question why <code>new</code> doesn't assign the <code>constructor</code> property to the instance object instead. I guess the reason for this is along the following lines:</p>\n\n<p>All objects created from the same constructor function share the constructor property, and shared properties reside in the prototype.</p>\n\n<p>The real problem is that JavaScript has no built-in support for inheritance hierarchies. There are several ways around the issue (yours is one of these), another one more 'in the spirit' of JavaScript would be the following:</p>\n\n<pre><code>function addOwnProperties(obj /*, ...*/) {\n    for(var i = 1; i &lt; arguments.length; ++i) {\n        var current = arguments[i];\n\n        for(var prop in current) {\n            if(current.hasOwnProperty(prop))\n                obj[prop] = current[prop];\n        }\n    }\n}\n\nfunction Obj1(arg1) {\n    this.prop1 = arg1 || 1;\n}\n\nObj1.prototype.method1 = function() {};\n\nfunction Obj2(arg1, arg2) {\n    Obj1.call(this, arg1);\n    this.test2 = arg2 || 2;\n}\n\naddOwnProperties(Obj2.prototype, Obj1.prototype);\n\nObj2.prototype.method2 = function() {};\n</code></pre>\n\n<p>This makes multiple-inheritance trivial as well.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Check out <a href=\"http://people.apache.org/~martinc/OOP_with_ECMAScript/\">Tom Trenka's OOP woth ECMAscript</a>, the \"Inheritance\" page. <em>Everything</em> from the prototype is inherited, including the <code>constructor</code> property. Thus, we have to unbreak it ourselves:</p>\n\n<pre><code>Obj2.prototype = new Obj1(42);\nObj2.prototype.constructor = Obj2;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Well, the constructor property is a property like any other, on the prototype (property) of Obj1. If you <a href=\"http://javascript.crockford.com/prototypal.html\" rel=\"nofollow\">understand how prototypes work</a>, this might help:</p>\n\n<pre><code>&gt;&gt;&gt; obj.hasOwnProperty(\"constructor\")\nfalse\n\n// obj's [[Prototype]] is Obj2.prototype\n&gt;&gt;&gt; Obj2.prototype.hasOwnProperty(\"constructor\")\nfalse\n\n// Obj2.prototype's [[Prototype]] is Obj1.prototype\n&gt;&gt;&gt; Obj1.prototype.hasOwnProperty(\"constructor\")\ntrue\n\n// Oh?\n&gt;&gt;&gt; Obj1.prototype.constructor\nObj1()\n</code></pre>\n\n<p>Aha! So obj has no constructor, JS goes to get it up the [[Prototype]] chain, all the way from Obj1.prototype.constructor</p>\n\n<p>I'm not sure why the constructor property isn't just set on an object when you use `new'. There might be a reason, or it might just be an oversight. Either way, I tend to avoid it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Short version: \u2018constructor\u2019 doesn't do what you think, and isn't cross-browser compatible. Never use it.</p>\n\n<p>Long version: <a href=\"http://stackoverflow.com/questions/402538/convention-for-prototype-inheritance-in-javascript/402919#402919\">http://stackoverflow.com/questions/402538/convention-for-prototype-inheritance-in-javascript/402919#402919</a></p>\n\n<p>Generally: you're getting confused due to (a) the impedence mismatch between class-based and prototype-based OO, and (b) the strangeness of JavaScript's particular rather poor interpretation of prototype-based OO.</p>\n\n<p>You'll probably be happier if you find one classes-in-prototypes implementation you like and stick with that. Many libraries have one. Here's an arbitrary one I use:</p>\n\n<pre><code>Function.prototype.subclass= function() {\n    var c= new Function(\n        'if (!(this instanceof arguments.callee)) throw(\\'Constructor called without \"new\"\\'); '+\n        'if (arguments[0]!==Function.prototype.subclass.FLAG &amp;&amp; this._init) this._init.apply(this, arguments); '\n    );\n    if (this!==Object)\n        c.prototype= new this(Function.prototype.subclass.FLAG);\n    return c;\n}\nFunction.prototype.subclass.FLAG= new Object();\n</code></pre>\n\n<p>And here's an example of how one might use it:</p>\n\n<pre><code>// make a new class\nvar Employee= Object.subclass();\n\n// add members to it\nEmployee.prototype._LEGS= 2;\nEmployee.prototype.getLegs= function() {\n    return this._LEGS;\n};\n\n// optional initialiser, takes arguments from constructor\nEmployee.prototype._init= function(name) {\n    this.name= name;\n};\n\n// make a subclass\nManager= Employee.subclass();\n\n// extend subclass method\nManager.prototype._init= function(name, importance) {\n    // call base class's method\n    Employee.prototype._init.call(this, name);\n    this.importance= importance;\n}\n\n// all managers are well-known to have three legs\nManager.prototype._LEGS= 3;\n\n// create one\nvar jake= new Manager('Jake the Peg', 100);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I've:</p>\n\n<pre><code>function Obj1(param)\n{\n    this.test1 = param || 1;\n\n}\n\nfunction Obj2(param, par)\n{\n    this.test2 = param;\n\n}\n</code></pre>\n\n<p>now when I do:</p>\n\n<pre><code>Obj2.prototype = new Obj1(44);\nvar obj = new Obj2(55);\n\nalert(obj.constructor)\n</code></pre>\n\n<p>I have:</p>\n\n<pre><code>function Obj1(param) {\n    this.test1 = param || 1;\n}\n</code></pre>\n\n<p>but the constructor function has been Obj2... why that?\nObj1 has become the Obj2 prototype...</p>\n\n<p>Can someone explain me, in detail, the prototype chain and the constructor property</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1235816830,
            "question_id": 541204,
            "score": 10,
            "tags": [
                "javascript",
                "prototype",
                "constructor"
            ],
            "title": "prototype and constructor object properties"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>You can use this javascript snippet:</p>\n\n<pre><code>&lt;input onClick=\"this.select();\" value=\"Sample Text\" /&gt;\n</code></pre>\n\n<p>But apparently it doesn't work on mobile Safari. In those cases you can use:</p>\n\n<pre><code>&lt;input onClick=\"this.setSelectionRange(0, this.value.length)\" value=\"Sample Text\" /&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 208
                },
                {
                    "body": "<p>Well this is normal activity for a TextBox.</p>\n\n<p><strong>Click 1</strong> - Set focus</p>\n\n<p><strong>Click 2/3</strong> (double click) - Select text</p>\n\n<p>You could set <strong>focus</strong> on the TextBox when the page first loads to reduce the \"select\" to a single double-click event.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here's a reusable version of Shoban's answer:</p>\n\n<pre><code>&lt;input type=\"text\" id=\"userid\" name=\"userid\"\n value=\"Please enter the user ID\" onfocus=\"Clear(this);\"\n/&gt;\n\nfunction Clear(elem)\n{\nelem.value='';\n}\n</code></pre>\n\n<p>That way you can reuse the clear script for multiple elements.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Html (you'll have to put the onclick attribute on every input you want it to work for on the page)</p>\n\n<pre><code> &lt;input type=\"text\" value=\"click the input to select\" onclick=\"this.select();\"/&gt;\n</code></pre>\n\n<p><b>OR A BETTER OPTION</b>  </p>\n\n<p>jQuery (this will work for every text input on the page, no need to change your html): </p>\n\n<pre><code>&lt;script  type=\"text/javascript\" src=\"//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.js\"&gt;&lt;/script&gt;  \n&lt;script type=\"text/javascript\"&gt;\n    $(function(){\n        $(document).on('click','input[type=text]',function(){ this.select(); });\n    });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Try:</p>\n\n<pre><code>onclick=\"this.select()\"\n</code></pre>\n\n<p>It works great for me.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I know this is old, but the best option is to now use the new <code>placeholder</code> HTML attribute if possible:</p>\n\n<pre><code>&lt;input type=\"text\" id=\"userid\" name=\"userid\" placeholder=\"Please enter the user ID\" /&gt;\n</code></pre>\n\n<p>This will cause the text to show unless a value is entered, eliminating the need to select text or clear inputs.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Indeed, use <code>onclick=\"this.select();\"</code> but remember not to combine it with <code>disabled=\"disabled\"</code> - it will not work then and you will need to manually select or multi-click to select, still. If you wish to lock the content value to be selected, combine with the attribute <code>readonly</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The problem with catching the click event is that each subsequent click within the text will select it again, whereas the user was probably expecting to reposition the cursor.</p>\n\n<p>What worked for me was declaring a variable, selectSearchTextOnClick, and setting it to true by default. The click handler checks that the variable's still true: if it is, it sets it to false and performs the select(). I then have a blur event handler which sets it back to true.</p>\n\n<p>Results so far seem like the behavior I'd expect.</p>\n\n<p>(Edit: I neglected to say that I'd tried catching the focus event as someone suggested,but that doesn't work: after the focus event fires, the click event can fire, immediately deselecting the text).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The previously posted solutions have two quirks:</p>\n\n<ol>\n<li>In Chrome the selection via .select() doesn't stick - adding a slight timeout resolves this issue.</li>\n<li>It's impossible to place the cursor at a desired point after focus. </li>\n</ol>\n\n<p>Here's a complete solution that selects all text on focus, but allows selecting a specific cursor point after focus.</p>\n\n<pre><code>        $(function () {\n            var focusedElement;\n            $(document).on('focus', 'input', function () {\n                if (focusedElement == $(this)) return; //already focused, return so user can now place cursor at specific point in input.\n                focusedElement = $(this);\n                setTimeout(function () { focusedElement.select(); }, 50); //select all text in any field on focus for easy re-entry. Delay sightly to allow focus to \"stick\" before selecting.\n            });\n        });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>This question has options for when .select() is not working on mobile platforms: <a href=\"http://stackoverflow.com/questions/3272089/programmatically-selecting-text-in-an-input-field-on-ios-devices-mobile-safari\">Programmatically selecting text in an input field on iOS devices (mobile Safari)</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have the following code to display a textbox in a HTML webpage.</p>\n\n<pre><code>&lt;input type=\"text\" id=\"userid\" name=\"userid\" value=\"Please enter the user ID\" /&gt;\n</code></pre>\n\n<p>When the page displays, the text contains the <em>Please enter the user ID</em> message. However, I found that the user needs to click 3 times in order to select all the text (in this case it is <em>Please enter the user ID</em>). </p>\n\n<p>Is it possible to select the entire text with only one click?</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>Sorry, I forgot to say: I must use the input <code>type=\"text\"</code></p>\n",
            "last_activity_date": 1402428769,
            "question_id": 4067469,
            "score": 118,
            "tags": [
                "javascript",
                "html",
                "textinput"
            ],
            "title": "Selecting all text in HTML text input when clicked"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<hr>\n\n<p>Edited:\nIf the requirement is to reference the global object (js) in your HTML code, you can try this. [Don't use any quotes (' or \") around the variable]</p>\n\n<p><strong><a href=\"http://jsfiddle.net/gaJTb/\" rel=\"nofollow\">Fiddle</a></strong> reference.</p>\n\n<p>Javascript:</p>\n\n<pre><code>var result = {name: 'hello'};\nfunction gotoNode(name) {\n    alert(name);\n}\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;input value=\"Hello\" type=\"button\" onClick=\"gotoNode(result.name)\" /&gt;\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I suggest not even using HTML <code>onclick</code> handlers, and use something more common such as <code>document.getElementById</code>.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;input type=\"button\" id=\"nodeGoto\" /&gt;\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>document.getElementById(\"nodeGoto\").addEventListener(\"click\", function() {\n    gotoNode(result.name);\n}, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>It's looks like you're building dom elements from strings. You just need to add some quotes around result.name:</p>\n\n<pre><code>'&lt;input type=\"button\" onClick=\"gotoNode(\\'' + result.name + '\\')\" /&gt;'\n</code></pre>\n\n<p>You should really be doing this with proper DOM methods though.</p>\n\n<pre><code>var inputElement = document.createElement('input');\ninputElement.type = \"button\"\ninputElement.addEventListener('click', function(){\n    gotoNode(result.name);\n});\n\n\u200bdocument.body.appendChild(inputElement);\u200b\n</code></pre>\n\n<p>Just be aware that if this is a loop or something, <code>result</code> will change before the event fires and you'd need to create an additional scope bubble to shadow the changing variable.</p>\n",
                    "is_accepted": true,
                    "score": 72
                },
                {
                    "body": "<p>I am guessing, you are creating a button using JavaScript itself. So, the <strong>error</strong> in your code is that, it will render in this form</p>\n\n<pre><code>&lt;input type=\"button\" onClick=\"gotoNode(add)\" /&gt;'\n</code></pre>\n\n<p>At this current state, <code>add</code> will be considered as an identifier like variables or function calls. You should escape the value like this</p>\n\n<pre><code>'&lt;input type=\"button\" onClick=\"gotoNode(\\'' + result.name + '\\')\" /&gt;'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Try This..</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;button id=\"a1\" type=\"button\" onclick=\"return a1_onclick('a1')\"&gt;a1&lt;/button&gt; \n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>&lt;script language=\"javascript\" type=\"text/javascript\"&gt;\n    function a1_onclick(id) {\n        document.getElementById(id).style.backgroundColor = \"#F00\";   \n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>Note: <strong>be sure of sending arguments between ' ' signs like ('a1') in html code</strong></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can pass refrence or string value just put function inside the doube commas \"\" asp below snapshot</p>\n\n<p><img src=\"http://i.stack.imgur.com/wBE0r.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I would like to pass a parameter (i.e. a string) to an Onclick function. For the moment, I do this:</p>\n\n<pre><code>'&lt;input type=\"button\" onClick=\"gotoNode(' + result.name + ')\" /&gt;'\n</code></pre>\n\n<p>with result.name for example equal to string \"Add\".\nWhen I click on this button, I have an error that says that Add is not defined. Since this functioncall works perfect with a numeric parameter, I assume that it has something to do with the symbols \"\" in the string.\nDid anyone had this problem before?</p>\n",
            "last_activity_date": 1424761444,
            "question_id": 9643311,
            "score": 50,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "pass string parameter in an onclick function"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p><strong>Edit</strong>: Regarding your updated question: <em>\"How can a script tell whether it has been required as a commonjs module?\"</em> I don't think it can. You can check whether <code>exports</code> is an object (<code>if (typeof exports === \"object\")</code>), since <a href=\"http://www.commonjs.org/specs/modules/1.0/\" rel=\"nofollow\">the spec</a> requires that it be provided to modules, but all that tells you is that ... <code>exports</code> is an object. :-)</p>\n\n<hr>\n\n<p>Original answer:</p>\n\n<p>I'm sure there's some NodeJS-specific symbol (<s><code>EventEmitter</code>, perhaps</s> <em>no, you have to use <code>require</code> to get the events module; see below</em>) that you could check for, but as David said, ideally you're better off detecting the feature (rather than environment) if it makes any sense to do so.</p>\n\n<p><strong>Update</strong>: Perhaps something like:</p>\n\n<pre><code>if (typeof require === \"function\"\n    &amp;&amp; typeof Buffer === \"function\"\n    &amp;&amp; typeof Buffer.byteLength === \"function\"\n    &amp;&amp; typeof Buffer.prototype !== \"undefined\"\n    &amp;&amp; typeof Buffer.prototype.write === \"function\") {\n</code></pre>\n\n<p>But that just tells you that you're in an environment with <code>require</code> and something very, very much like NodeJS's <code>Buffer</code>. :-)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Well there's no reliable way to detect running in Node.js since every website could easily declare the same variables, yet, since there's no <code>window</code> object in Node.js by default you can go the other way around and check whether you're running inside a Browser.</p>\n\n<p>This is what I use for libs that should work both in a Browser and under Node.js:  </p>\n\n<pre><code>if (typeof window === 'undefined') {\n    exports.foo = {};\n\n} else {\n    window.foo = {};\n}\n</code></pre>\n\n<p>It might still explode in case that <code>window</code> is defined in Node.js but there's no <em>good</em> reason for someone  do this, since you would explicitly need to leave out <code>var</code> or set the property on the <code>global</code> object.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>For detecting whether your script has been required as a CommonJS module, that's again not easy. Only thing commonJS specifies is that A: The modules will be included via a call to the function <code>require</code> and B: The modules exports things via properties on the <code>exports</code> object. Now how that is implement is left to the underlying system. Node.js wraps the modules content in an anonymous funciton.</p>\n\n<pre><code>function (exports, require, module, __filename, __dirname) { \n</code></pre>\n\n<p>See: <a href=\"https://github.com/ry/node/blob/master/src/node.js#L325\">https://github.com/ry/node/blob/master/src/node.js#L325</a></p>\n\n<p>But <strong>don't</strong> go there by trying to detect that via some crazy <code>arguments.callee.toString()</code> stuff, instead just use my example code above which checks for the Browser, Node.js is a way cleaner environment so it's unlikely that <code>window</code> will be declared there.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Take the source of node.js and change it to define a variable like <code>runningOnNodeJS</code>. Check for that variable in your code.</p>\n\n<p>If you can't have your own private version of node.js, open a feature request in the project. Ask that they define a variable which gives you the version of node.js that you're running in. Then check for that variable.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>What about using the process object and checking <a href=\"http://nodejs.org/docs/v0.3.1/api/all.html#process.execPath\" rel=\"nofollow\">execPath</a> for <code>node</code>?</p>\n\n<blockquote>\n  <p>process.execPath </p>\n  \n  <p>This is the absolute\n  pathname of the executable that\n  started the process.</p>\n  \n  <blockquote>\n    <p>Example:</p>\n    \n    <p>/usr/local/bin/node</p>\n  </blockquote>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is how the <a href=\"http://documentcloud.github.com/underscore/\">Underscore.js</a> library does it (by looking for CommonJS support):</p>\n\n<p>Edit: to your updated question:</p>\n\n<pre><code>(function () {\n\n    // Establish the root object, `window` in the browser, or `global` on the server.\n    var root = this; \n\n    // Create a refeence to this\n    var _ = new Object();\n\n    var isNode = false;\n\n    // Export the Underscore object for **CommonJS**, with backwards-compatibility\n    // for the old `require()` API. If we're not in CommonJS, add `_` to the\n    // global object.\n    if (typeof module !== 'undefined' &amp;&amp; module.exports) {\n            module.exports = _;\n            root._ = _;\n            isNode = true;\n    } else {\n            root._ = _;\n    }\n})();\n</code></pre>\n\n<p>Example here retains the Module pattern.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<blockquote>\n  <p>How can a script tell whether it has been required as a commonjs module?</p>\n</blockquote>\n\n<p>Related: to check whether it has been required as a module vs run directly in node, you can check <code>require.main !== module</code>.\n<a href=\"http://nodejs.org/docs/latest/api/modules.html#accessing_the_main_module\" rel=\"nofollow\">http://nodejs.org/docs/latest/api/modules.html#accessing_the_main_module</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's my variation on what's above:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>(function(publish) {\n    \"use strict\";\n\n    function House(no) {\n        this.no = no;\n    };\n\n    House.prototype.toString = function() {\n        return \"House #\"+this.no;\n    };\n\n    publish(House);\n\n})((typeof module == 'undefined' || (typeof window != 'undefined' &amp;&amp; this == window))\n    ? function(a) {this[\"House\"] = a;}\n    : function(a) {module.exports = a;});\n</code></pre>\n\n<p>To use it, you modify the \"House\" on the second last line to be whatever you want the name of the module to be in the browser and publish whatever you want the value of the module to be (usually a constructor or an object literal).</p>\n\n<p>In browsers the global object is window, and it has a reference to itself (there's a  window.window which is == window). It seems to me that this is unlikely to occur unless you're in a browser or in an environment that wants you to believe you're in a browser.  In all other cases, if there is a global 'module' variable declared, it uses that otherwise it uses the global object.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The problem with trying to figure out what environment your code is running in is that any object can be modified and declared making it close to impossible to figure out which objects are native to the environment, and which have been modified by the program.</p>\n\n<p>However, there are a few tricks we can use to figure out for sure what environment you are in.</p>\n\n<p>Lets start out with the generally accepted solution that's used in the underscore library:</p>\n\n<p><code>typeof module !== 'undefined' &amp;&amp; module.exports</code></p>\n\n<p>This technique is actually perfectly fine for the server side, as when the <code>require</code> function is called, it resets the <code>this</code> object to an empty object, and redefines <code>module</code> for you again, meaning you don't have to worry about any outside tampering. As long as your code is loaded in with <code>require</code>, you are safe.</p>\n\n<p>However, this falls apart on the browser, as anyone can easily define <code>module</code> to make it seem like it's the object you are looking for. On one hand this might be the behavior you want, but it also dictates what variables the library user can use in the global scope. Maybe someone wants to use a variable with the name <code>module</code> that has <code>exports</code> inside of it for another use. It's unlikely, but who are we to judge what variables someone else can use, just because another environment uses that variable name?</p>\n\n<p>The trick however, is that if we are assuming that your script is being loaded in the global scope (which it will be if it's loaded via a script tag) a variable cannot be reserved in an outer closure, because the browser does not allow that. Now remember in node, the <code>this</code> object is an empty object, yet, the <code>module</code> variable is still available. That is because it's declared in an outer closure. So we can then fix underscore's check by adding an extra check:</p>\n\n<p><code>this.module !== module</code></p>\n\n<p>With this, if someone declares <code>module</code> in the global scope in the browser, it will be placed in the <code>this</code> object, which will cause the test to fail, because <code>this.module</code>, will be the same object as module. On node, <code>this.module</code> does not exist, and <code>module</code> exists within an outer closure, so the test will succeed, as they are not equivalent.</p>\n\n<p>Thus, the final test is:</p>\n\n<p><code>typeof module !== 'undefined' &amp;&amp; this.module !== module</code></p>\n\n<p>Note: While this now allows the <code>module</code> variable to be used freely in the global scope, it is still possible to bypass this on the browser by creating a new closure and declaring <code>module</code> within that, then loading the script within that closure. At that point the user is fully replicating the node environment and hopefully knows what they are doing and is trying to do a node style require. If the code is called in a script tag, it will still be safe from any new outer closures.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I'm using <code>process</code> to check for node.js like so</p>\n\n<pre><code>if (typeof(process) !== 'undefined' &amp;&amp; process.version === 'v0.9.9') {\n  console.log('You are running Node.js');\n} else {\n  // check for browser\n}\n</code></pre>\n\n<p>or </p>\n\n<pre><code>if (typeof(process) !== 'undefined' &amp;&amp; process.title === 'node') {\n  console.log('You are running Node.js');\n} else {\n  // check for browser\n}\n</code></pre>\n\n<p>Documented <a href=\"http://nodejs.org/docs/latest/api/process.html#process.version\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Most of the proposed solutions can actually be faked. A robust way is to check the internal <code>Class</code> property of the global object using the <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-15.2.4.2\"><code>Object.prototype.toString</code></a>. The internal class can't be faked in JavaScript:</p>\n\n<pre><code>var isNode = \n    typeof global !== \"undefined\" &amp;&amp; \n    {}.toString.call(global) == '[object global]';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The following works in the browser unless intentionally,explicitly sabotaged:</p>\n\n<pre><code>if(typeof process === 'object' &amp;&amp; process + '' === '[object process]'){\n    // is node\n}\nelse{\n    // not node\n}\n</code></pre>\n\n<p>Bam.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Very old post, but i just solved it by wrapping the require statements in a try - catch</p>\n\n<pre><code>    try {\n\n           var fs = require('fs')\n\n} catch(e) {\n       alert('you are not in node !!!')\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is a pretty safe and straight-forward way of assuring compatibility between server-side and client-side javascript, that will also work with browserify, RequireJS or CommonJS included client-side:</p>\n\n<pre><code>(function(){\n\n  // `this` now refers to `global` if we're in NodeJS\n  // or `window` if we're in the browser.\n\n}).call(function(){\n  return (typeof module !== \"undefined\" &amp;&amp;\n    module.exports &amp;&amp;\n    typeof window === 'undefined')\n    global : window;\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Node.js has <code>process</code> object, so as long as You don't have any other script which create <code>process</code> You can use it to determine if code runs on Node.</p>\n\n<pre><code>var isOnNodeJs = false;\nif(typeof process != \"undefined\") {\n  isOnNodeJs = true;\n}\n\nif(isOnNodeJs){\n  console.log(\"you are running under node.js\");\n}\nelse {\n  console.log(\"you are NOT running under node.js\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a script I am requiring from a node.js script, which I want to keep javascript engine independent.</p>\n\n<p>So, for example, I want to do:</p>\n\n<pre><code>exports.x = y;\n</code></pre>\n\n<p>only if it's running under node.js. how can I perform this test?</p>\n\n<p><strong>Edit:</strong> When posting this question, I didn't know the node.js modules feature is based on <a href=\"http://www.commonjs.org/\">commonjs</a>.</p>\n\n<p>For the specific example I gave a more accurate question would've been:</p>\n\n<p>How can a script tell whether it has been required as a commonjs module?</p>\n",
            "last_activity_date": 1421181861,
            "question_id": 4224606,
            "score": 49,
            "tags": [
                "javascript",
                "node.js",
                "commonjs"
            ],
            "title": "How to check whether a script is running under node.js?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Apparently this is by design. When Safari (OS X or iOS) is in private browsing mode, it appears as though <code>localStorage</code> is available, but trying to call <code>setItem</code> throws an exception.</p>\n\n<pre><code>store.js line 73\n\"QUOTA_EXCEEDED_ERR: DOM Exception 22: An attempt was made to add something to storage that exceeded the quota.\"\n</code></pre>\n\n<p>What happens is that the window object still exposes <code>localStorage</code> in the global namespace, but when you call <code>setItem</code>, this exception is thrown. Any calls to <code>removeItem</code> are ignored.</p>\n\n<p>I believe the simplest fix (although I haven't tested this cross browser yet) would be to alter the function <code>isLocalStorageNameSupported()</code> to test that you can also set some value.</p>\n\n<p><a href=\"https://github.com/marcuswestin/store.js/issues/42\">https://github.com/marcuswestin/store.js/issues/42</a></p>\n\n<pre><code>function isLocalStorageNameSupported() \n{\n    var testKey = 'test', storage = window.sessionStorage;\n    try \n    {\n        storage.setItem(testKey, '1');\n        storage.removeItem(testKey);\n        return localStorageName in win &amp;&amp; win[localStorageName];\n    } \n    catch (error) \n    {\n        return false;\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<p>The fix posted on above link did not work for me. This did:</p>\n\n<pre><code>function isLocalStorageNameSupported() {\n  var testKey = 'test', storage = window.sessionStorage;\n  try {\n    storage.setItem(testKey, '1');\n    storage.removeItem(testKey);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n</code></pre>\n\n<p>Derived from <a href=\"http://m.cg/post/13095478393/detect-private-browsing-mode-in-mobile-safari-on-ios5\">http://m.cg/post/13095478393/detect-private-browsing-mode-in-mobile-safari-on-ios5</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>In my context, just developed a class abstraction.\nWhen my application is launched, i check if localStorage is working by calling <strong>getStorage()</strong>. This function also return :</p>\n\n<ul>\n<li>either localStorage if localStorage is working</li>\n<li>or an implementation of a custom class <strong>LocalStorageAlternative</strong></li>\n</ul>\n\n<p>In my code i never call localStorage directly. I call <strong>cusSto**global var, i had initialised by calling **getStorage()</strong>.</p>\n\n<p>This way, it works with private browsing or specific Safari versions</p>\n\n<pre><code>function getStorage() {\nvar storageImpl;\n\n try { \n        localStorage.setItem(\"storage\", \"\"); \n        localStorage.removeItem(\"storage\");\n        storageImpl = localStorage;\n }\n catch(err) { \n     storageImpl = new LocalStorageAlternative();\n }\n\nreturn storageImpl;\n\n}\n\nfunction LocalStorageAlternative() {\n\nvar structureLocalStorage = {};\n\nthis.setItem = function (key, value) {\n    structureLocalStorage[key] = value;\n}\n\nthis.getItem = function (key) {\n    if(typeof structureLocalStorage[key] != 'undefined' ) {\n        return structureLocalStorage[key];\n    }\n    else {\n        return null;\n    }\n}\n\nthis.removeItem = function (key) {\n    structureLocalStorage[key] = undefined;\n}\n}\n\n\ncusSto=getStorage();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I had the same problem using Ionic framework (Angular + Cordova). I know this not solve the problem, but it's the code for Angular Apps based on the answers above. You will have a ephemeral solution for localStorage on iOS version of Safari.</p>\n\n<p>Here is the code:</p>\n\n<pre><code>angular.module('myApp.factories', [])\n.factory('$fakeStorage', [\n    function(){\n        function FakeStorage() {};\n        FakeStorage.prototype.setItem = function (key, value) {\n            this[key] = value;\n        };\n        FakeStorage.prototype.getItem = function (key) {\n            return typeof this[key] == 'undefined' ? null : this[key];\n        }\n        FakeStorage.prototype.removeItem = function (key) {\n            this[key] = undefined;\n        };\n        FakeStorage.prototype.clear = function(){\n            for (var key in this) {\n                if( this.hasOwnProperty(key) )\n                {\n                    this.removeItem(key);\n                }\n            }\n        };\n        FakeStorage.prototype.key = function(index){\n            return Object.keys(this)[index];\n        };\n        return new FakeStorage();\n    }\n])\n.factory('$localstorage', [\n    '$window', '$fakeStorage',\n    function($window, $fakeStorage) {\n        function isStorageSupported(storageName) \n        {\n            var testKey = 'test',\n                storage = $window[storageName];\n            try\n            {\n                storage.setItem(testKey, '1');\n                storage.removeItem(testKey);\n                return true;\n            } \n            catch (error) \n            {\n                return false;\n            }\n        }\n        var storage = isStorageSupported('localStorage') ? $window.localStorage : $fakeStorage;\n        return {\n            set: function(key, value) {\n                storage.setItem(key, value);\n            },\n            get: function(key, defaultValue) {\n                return storage.getItem(key) || defaultValue;\n            },\n            setObject: function(key, value) {\n                storage.setItem(key, JSON.stringify(value));\n            },\n            getObject: function(key) {\n                return JSON.parse(storage.getItem(key) || '{}');\n            },\n            remove: function(key){\n                storage.removeItem(key);\n            },\n            clear: function() {\n                storage.clear();\n            },\n            key: function(index){\n                storage.key(index);\n            }\n        }\n    }\n]);\n</code></pre>\n\n<p>Source: <a href=\"https://gist.github.com/jorgecasar/61fda6590dc2bb17e871\" rel=\"nofollow\">https://gist.github.com/jorgecasar/61fda6590dc2bb17e871</a></p>\n\n<p>Enjoy your coding!</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>As mentioned in other answers, you'll always get the QuotaExceededError in Safari Private Browser Mode on both iOS and OS X when <code>localStorage.setItem</code> (or <code>sessionStorage.setItem</code>) is called.</p>\n\n<p>One solution is to do a try/catch or <a href=\"https://github.com/Modernizr/Modernizr/blob/master/feature-detects/storage/localstorage.js\" rel=\"nofollow\">Modernizr check</a> in each instance of using <code>setItem</code>.</p>\n\n<p>However if you want a shim that simply globally stops this error being thrown, to prevent the rest of your JavaScript from breaking, you can use this:</p>\n\n<p><a href=\"https://gist.github.com/philfreo/68ea3cd980d72383c951\" rel=\"nofollow\">https://gist.github.com/philfreo/68ea3cd980d72383c951</a></p>\n\n<pre><code>// Safari, in Private Browsing Mode, looks like it supports localStorage but all calls to setItem\n// throw QuotaExceededError. We're going to detect this and just silently drop any calls to setItem\n// to avoid the entire page breaking, without having to do a check at each usage of Storage.\nif (typeof localStorage === 'object') {\n    try {\n        localStorage.setItem('localStorage', 1);\n        localStorage.removeItem('localStorage');\n    } catch (e) {\n        Storage.prototype._setItem = Storage.prototype.setItem;\n        Storage.prototype.setItem = function() {};\n        alert('Your web browser does not support storing settings locally. In Safari, the most common cause of this is using \"Private Browsing Mode\". Some settings may not save or some features may not work properly for you.');\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>My webapp have javascript errors in ios safari private browsing:</p>\n\n<pre><code>JavaScript:error\nundefined\nQUOTA_EXCEEDED_ERR:DOM Exception 22:An attempt was made to add something to storage...\n</code></pre>\n\n<p>my code:</p>\n\n<pre><code>localStorage.setItem('test',1)\n</code></pre>\n",
            "last_activity_date": 1424813874,
            "question_id": 14555347,
            "score": 44,
            "tags": [
                "javascript",
                "html5",
                "web-applications",
                "local-storage"
            ],
            "title": "html5 localStorage error with Safari: &quot;QUOTA_EXCEEDED_ERR: DOM Exception 22: An attempt was made to add something to storage that exceeded the quota.&quot;"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>First of all, there is no <code>obejct</code> or <code>array</code>. There are <code>Object</code> and <code>Array</code>. Secondly, you <em>can</em> do that:</p>\n\n<pre><code>a = new Array();\nb = new Object();\na[0] = b;\n</code></pre>\n\n<p>Now <code>a</code> will be an array with <code>b</code> as its only element.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Put anything into an array using Array.push().</p>\n\n<pre><code>var a=[], b={};\na.push(b);    \n// a[0] === b;\n</code></pre>\n\n<hr>\n\n<p><em>Extra information on Arrays</em></p>\n\n<p><strong>Add more than one item at a time</strong></p>\n\n<pre><code>var x = ['a'];\nx.push('b', 'c');\n// x = ['a', 'b', 'c']\n</code></pre>\n\n<p><strong>Add items to the beginning of an array</strong></p>\n\n<pre><code>var x = ['c', 'd'];\nx.unshift('a', 'b');\n// x = ['a', 'b', 'c', 'd']\n</code></pre>\n\n<p><strong>Add the contents of one array to another</strong></p>\n\n<pre><code>var x = ['a', 'b', 'c'];\nvar y = ['d', 'e', 'f'];\nx.push.apply(x, y);\n// x = ['a', 'b', 'c', 'd', 'e', 'f']\n// y = ['d', 'e', 'f']  (remains unchanged)\n</code></pre>\n\n<p><strong>Create a new array from the contents of two arrays</strong></p>\n\n<pre><code>var x = ['a', 'b', 'c'];\nvar y = ['d', 'e', 'f'];\nvar z = x.concat(y);\n// x = ['a', 'b', 'c']  (remains unchanged)\n// y = ['d', 'e', 'f']  (remains unchanged)\n// z = ['a', 'b', 'c', 'd', 'e', 'f']\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 118
                },
                {
                    "body": "<p><code>obejct</code> is clearly a typo. But both <code>object</code> and <code>array</code> need capital letters. </p>\n\n<p>You can use short hands for <code>new Array</code> and <code>new Object</code> these are <code>[]</code> and <code>{}</code></p>\n\n<p>You can push data into the array using <code>.push</code>. This adds it to the end of the array. or you can set an index to contain the data.</p>\n\n<pre><code>function saveToArray() {\n    var o = {};\n    o.foo = 42;\n    var arr = [];\n    arr.push(o);\n    return arr;\n}\n\nfunction other() {\n    var arr = saveToArray();\n    alert(arr[0]);\n}\n\nother();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You are running into a scope problem if you use your code as such. You have to declare it outside the functions if you plan to use it between them (or if calling, pass it as a parameter).</p>\n\n<pre><code>var a = new Array();\nvar b = new Object();\n\nfunction first() {\na.push(b);\n// Alternatively, a[a.length] = b\n// both methods work fine\n}\n\nfunction second() {\nvar c = a[0];\n}\n\n// code\nfirst();\n// more code\nsecond();\n// even more code\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Expanding Gabi Purcaru's answer to include an answer to number 2.  </p>\n\n<pre><code>a = new Array();\nb = new Object();\na[0] = b;\n\nvar c = a[0]; // c is now the object we inserted into a...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How can I add <strong>an object into an array</strong> (in javascript or jquery)?\nFor example, what is the problem this code?  </p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function() {\n    var a = new Array();\n    var b = new Object();\n    a[0]  = b;\n}\n</code></pre>\n\n<p>I would like to use this code to save many objects into the array in function1 and call function2 to use the object in array.</p>\n\n<ol>\n<li>How can I save an object into an array?</li>\n<li>How can get an object in an array and save it to a variable?</li>\n</ol>\n",
            "last_activity_date": 1418404775,
            "question_id": 6254050,
            "score": 43,
            "tags": [
                "javascript",
                "arrays",
                "object"
            ],
            "title": "How to add an object into an array"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I believe one particular advantage is clear when you have nested scopes.  It will now be completely clear exactly what scope a property reference comes from.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>There are several things about it.</p>\n\n<p>Some people don't like the <code>$scope</code> syntax (don't ask me why). They say that they could just use <code>this</code>. That was one of the goals.</p>\n\n<p>Making it clear where a property comes from is really useful too.</p>\n\n<p>You can nest controllers and when reading the html it is pretty clear where every property comes.</p>\n\n<p>You can also <em>avoid</em> some of the <strong>dot rule</strong> problems.</p>\n\n<p>For example, having two controllers, both with the same name 'name', You can do this:</p>\n\n<pre><code>&lt;body ng-controller=\"ParentCtrl\"&gt;\n    &lt;input ng-model=\"name\" /&gt; {{name}}\n\n    &lt;div ng-controller=\"ChildCtrl\"&gt;\n        &lt;input ng-model=\"name\" /&gt; {{name}} - {{$parent.name}}\n    &lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>You can modify both parent and child, no problem about that. But you need to use <code>$parent</code> to see the parent's name, because you shadowed it in your child controller. In massive html code <code>$parent</code> could be problematic, you don't know where that name comes from.</p>\n\n<p>With <code>controller as</code> you can do:</p>\n\n<pre><code>&lt;body ng-controller=\"ParentCtrl as parent\"&gt;\n    &lt;input ng-model=\"parent.name\" /&gt; {{parent.name}}\n\n    &lt;div ng-controller=\"ChildCtrl as child\"&gt;\n      &lt;input ng-model=\"child.name\" /&gt; {{child.name}} - {{parent.name}}\n    &lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>Same example, but it is much much clearer to read.</p>\n\n<ul>\n<li><a href=\"http://plnkr.co/edit/OvxVZGLGxerGIh73giiR?p=preview\"><code>$scope</code> plunker</a></li>\n<li><a href=\"http://plnkr.co/edit/VmqLvjGE7DyLOi6MJgfA?p=preview\"><code>controller as</code> plunker</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>The main advantage with <code>controller as</code> syntax I see is that you can work with controllers as classes, not just some $scope-decorating functions, and take advantage of inheritence. I often run into a situation when there's a functionality which is very similar to a number of controllers, and the most obvious thing to do is to create a <code>BaseController</code> class and inherit from it. </p>\n\n<p>Even though there's is $scope inheritence, which partially solves this problem, some folks prefer to write code in a more OOP manner, which in my opinion, makes the code easier to reason about and test.</p>\n\n<p>Here's a fiddle to demonstrate: <a href=\"http://jsfiddle.net/HB7LU/5796/\" rel=\"nofollow\">http://jsfiddle.net/HB7LU/5796/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>From what I've read, $scope will be removed in Angular 2.0, or at least how we view the use of $scope. It might be good to start using controller as as the release of 2.0 nears.</p>\n\n<p>Video link <a href=\"https://www.youtube.com/watch?v=gNmWybAyBHI#t=728\" rel=\"nofollow\">here</a> for more discussion on it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I <a href=\"http://docs.angularjs.org/guide/concepts#controller\">read about the new syntax</a> from angularJS regarding <code>controller as xxx</code></p>\n\n<blockquote>\n  <p>The syntax <code>InvoiceController as invoice</code> tells Angular to instantiate\n  the controller and save it in the variable invoice in the current\n  scope.</p>\n</blockquote>\n\n<p>Visualization : </p>\n\n<p><img src=\"http://i.stack.imgur.com/jOhdC.jpg\" alt=\"enter image description here\"></p>\n\n<p>Ok  , so I wont have the parameter <code>$scope</code> in my controller and the code will be much cleaner in the controller.</p>\n\n<p><strong>But</strong></p>\n\n<p>I will have to specify another alias <strong>in the view</strong></p>\n\n<p>So Until now I could do : </p>\n\n<pre><code>&lt;input type=\"number\" ng-model=\"qty\"  /&gt;\n\n....controller('InvoiceController', function($scope) {\n   // do something with $scope.qty &lt;--notice\n</code></pre>\n\n<p>And now I can do : </p>\n\n<pre><code> &lt;input type=\"number\" ng-model=\"invoic.qty\"  /&gt; &lt;-- notice \n\n  ....controller('InvoiceController', function() {\n       // do something with  this.qty  &lt;--notice\n</code></pre>\n\n<p><strong>Question</strong></p>\n\n<p>What is the goal of doing it ? removing from one place and add  to another place ? </p>\n\n<p>I will be glad to see what am I missing.</p>\n",
            "last_activity_date": 1421870765,
            "question_id": 21287794,
            "score": 40,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "AngularJs &quot;controller as&quot; syntax - clarification?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Put it <em>inside</em> so it won't pollute the global namespace. It also ensures a faster resolve of the function name because of JavaScript's scope chains.</p>\n\n<p>Put it <em>outside</em> if it's a reusable component so you could easily move it in a separate file and call from different contexts.</p>\n\n<p>Since you already use JQuery, it worths mentioning, that in your case you may want to define <code>hexvalidate</code> as a <a href=\"http://www.queness.com/post/112/a-really-simple-jquery-plugin-tutorial\">JQuery plugin</a> <em>outside</em> and then invoke it <em>inside</em>.</p>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>one advantage of putting those functions inside the document ready function is that they don't pollute your global namespace... with the downside that if you need them somewhere else on the page they won't be available.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If all your functions are only called from within the <code>jQuery(function () { })</code> block, put them inside it. Otherwise you're needlessly polluting the global namespace, which may lead to conflicts down the road.</p>\n\n<p>Only declare functions globally that are also used by code in other scopes.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you're creating a function that needs to be called outside of the scope of the $(document).ready() function, keep it outside of the $(document).ready() function.</p>\n\n<p>Otherwise keep it internal.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I don't think you should be using any 'just functions' in the first place. In OOP javascript a \"function\" usually belongs to one of four distinct types:</p>\n\n<ul>\n<li>Constructor or an anonymous 'init' closure - used to construct objects. The only type of function that is allowed to be global</li>\n<li>Method - function that is a part of some object</li>\n<li>Utility - inner function of a constructor/method, invisible from outside</li>\n<li>Constant - a functional constant passed as a parameter</li>\n</ul>\n\n<p>e.g.</p>\n\n<pre><code> (function() { &lt;- init closure\n\n        function helper1() { &lt;- utility }\n\n        globalSomething = {\n\n              foobar: function() { &lt;- method \n                  xyz.replace(/.../, function() { &lt;- constant })\n\n              }\n        }\n  )()\n</code></pre>\n\n<p>In your example, 'hexvalidate' is obviously a part of Validator object, which, in turn, can be made a jQuery plugin:</p>\n\n<pre><code>   (function($) {\n        $.validate = {\n            hexColor: function(color) { ... your code }\n            more validators...\n        }\n     )(jQuery)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Up until now I just put all my jQuery goodness inside the <code>$(document).ready()</code> function, including simple functions used in certain user interactions. </p>\n\n<p>But functions that don\u00b4t require the DOM document to be loaded or are only called afterwards anyway, can be placed outside the <code>$(document).ready()</code> as well. Consider for example a very simple validation function such as:</p>\n\n<pre><code>function hexvalidate(color) {\n// Validates 3-digit or 6-digit hex color codes \n var reg = /^(#)?([0-9a-fA-F]{3})([0-9a-fA-F]{3})?$/;\n return reg.test(color);\n}\n</code></pre>\n\n<p>The function is only called from within the  <code>$(document).ready()</code> function though.</p>\n\n<p>What is best practice (syntax, speed); placing such a function <strong>inside</strong> or <strong>outside</strong> the jquery document ready function? </p>\n",
            "last_activity_date": 1271337214,
            "question_id": 2645344,
            "score": 38,
            "tags": [
                "javascript",
                "jquery",
                "function",
                "scope"
            ],
            "title": "functions inside or outside jquery document ready"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The problem is caused by using the <code>style=\"display:none\"</code>, you should hide the <em>alert</em> with Javascript or at least when showing it, remove the style attribute.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Data-dismiss completely removes the element. Use jQuery's .hide() method instead.</p>\n\n<p><strong>The fix-it-quick method:</strong></p>\n\n<p>Using inline javascript to hide the element onclick like this:</p>\n\n<pre><code>&lt;div class=\"alert\" style=\"display: none\"&gt; \n    &lt;a class=\"close\" onclick=\"$('.alert').hide()\"&gt;\u00d7&lt;/a&gt;  \n    &lt;strong&gt;Warning!&lt;/strong&gt; Best check yo self, you're not looking too good.  \n&lt;/div&gt;\n\n&lt;a href=\"#\" onclick=\"$('alert').show()\"&gt;show&lt;/a&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/cQNFL/\">http://jsfiddle.net/cQNFL/</a></p>\n\n<p><em>This should however only be used if you are lazy (which is no good thing if you want an maintainable app).</em></p>\n\n<p><strong>The do-it-right method:</strong></p>\n\n<p>Create a new data attribute for hiding an element.</p>\n\n<p>Javascript:</p>\n\n<pre><code>$(function(){\n    $(\"[data-hide]\").on(\"click\", function(){\n        $(\".\" + $(this).attr(\"data-hide\")).hide();\n        // -or-, see below\n        // $(this).closest(\".\" + $(this).attr(\"data-hide\")).hide();\n    });\n});\n</code></pre>\n\n<p>and then change data-dismiss to data-hide in the markup. <a href=\"http://jsfiddle.net/cQNFL/21/\">Example at jsfiddle</a>.</p>\n\n<pre><code>$(\".\" + $(this).attr(\"data-hide\")).hide();\n</code></pre>\n\n<p>This will hide all elements with the class specified in data-hide, i.e: <code>data-hide=\"alert\"</code> will hide all elements with the alert class.</p>\n\n<p><a href=\"http://stackoverflow.com/users/104999/xeon06\">Xeon06</a> provided an alternative solution:</p>\n\n<pre><code>$(this).closest(\".\" + $(this).attr(\"data-hide\")).hide();\n</code></pre>\n\n<p>This will only hide the closest parent element. This is very useful if you don't want to give each alert an unique class. Please not that, however, you need to place the close button within the alert.</p>\n\n<p>Definition of .closest from <a href=\"http://api.jquery.com/closest/\">jquery doc</a>: For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.)</p>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>The easiest solution is to use the <code>aria-hidden</code> attribute, like in modals. Try this:</p>\n\n<pre><code>&lt;div class=\"alert\" style=\"display: none\"&gt;\n    &lt;a class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\"&gt;\u00d7&lt;/a&gt;\n    &lt;strong&gt;Warning!&lt;/strong&gt; Best check yo self, you're not looking too good.\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Based on the other answers and changing data-dismiss to data-hide, this example handles opening the alert from a link and allows the alert to be opened and closed repeatedly</p>\n\n<pre><code>$('a.show_alert').click(function() {\n    var $theAlert = $('.my_alert'); /* class on the alert */\n    $theAlert.css('display','block');\n   // set up the close event when the alert opens\n   $theAlert.find('a[data-hide]').click(function() {\n     $(this).parent().hide(); /* hide the alert */\n   });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I ran into this problem as well and the the problem with simply hacking the close-button is that I still need access to the standard bootstrap alert-close events.</p>\n\n<p>My solution was to write a <a href=\"https://github.com/davesag/jquery-bs3Alert\" rel=\"nofollow\">small, customisable, jquery plugin</a> that injects a properly formed Bootstrap 3 alert (with or without close button as you need it) with a minimum of fuss and allows you to easily regenerate it after the box is closed.</p>\n\n<p>See <a href=\"https://github.com/davesag/jquery-bs3Alert\" rel=\"nofollow\">https://github.com/davesag/jquery-bs3Alert</a> for usage, tests, and examples.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just used a model variable to show/hide the dialog and removed the data-dismiss=\"alert\"</p>\n\n<p>eg</p>\n\n<pre><code>&lt;div data-ng-show=\"vm.result == 'error'\" class=\"alert alert-danger alert-dismissable\"&gt;\n    &lt;button type=\"button\" class=\"close\" data-ng-click=\"vm.result = null\" aria- hidden=\"true\"&gt;&amp;times;&lt;/button&gt;\n    &lt;strong&gt;Error  !  &lt;/strong&gt;{{vm.exception}}\n&lt;/div&gt;\n</code></pre>\n\n<p>works for me and stops the need to go out to jquery</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you're using an MVVM library such as knockout.js (which I highly recommend) you can do it more cleanly:</p>\n\n<pre><code>&lt;div class=\"alert alert-info alert-dismissible\" data-bind=\"visible:showAlert\"&gt;\n   &lt;button type=\"button\" class=\"close\" data-bind=\"click:function(){showAlert(false);}&gt;\n        &lt;span aria-hidden=\"true\"&gt;&amp;times;&lt;/span&gt;\n        &lt;span class=\"sr-only\"&gt;Close&lt;/span&gt;\n   &lt;/button&gt;\n   Warning! Better check yourself, you're not looking too good.\n&lt;/div&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/bce9gsav/5/\" rel=\"nofollow\">http://jsfiddle.net/bce9gsav/5/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a problem with alert messages. For the first time it is normally showed, but when user presses <code>x</code> (close). But when user tries again to view this message (for example, click on the button event) then it is not shown (moreover, if I print this alert message to console, it is equals to <code>[]</code>). My code is here:</p>\n\n<pre><code> &lt;div class=\"alert\" style=\"display: none\"&gt;\n   &lt;a class=\"close\" data-dismiss=\"alert\"&gt;\u00d7&lt;/a&gt;\n   &lt;strong&gt;Warning!&lt;/strong&gt; Best check yo self, you're not looking too good.\n &lt;/div&gt;\n</code></pre>\n\n<p>And event:</p>\n\n<pre><code> $(\".alert\").show();\n</code></pre>\n\n<p><strong>P.S!</strong> I need to show alert message only after some event happened (for example, button clicked). Or what I am doing wrong?</p>\n",
            "last_activity_date": 1411214399,
            "question_id": 13550477,
            "score": 36,
            "tags": [
                "javascript",
                "jquery",
                "twitter-bootstrap",
                "alert"
            ],
            "title": "Twitter Bootstrap alert message close and open again"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The simplest way is to do it like so (assuming you don't want any of the event information passed to the function)...</p>\n\n<pre><code>$(\"#myid\").click(function() {\n    myfunction(arg1, arg2);\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/y4Ak6/\">jsFiddle</a>.</p>\n\n<p>This create an anonymous function, which is called when the <code>click</code> event is triggered. This will in turn call <code>myfunction()</code> with the arguments you provide.</p>\n\n<p>If you want to keep the <a href=\"http://es5.github.io/#x11.1.1\"><code>ThisBinding</code></a> (the value of <code>this</code> when the function is invoked, set to the element which triggered the event), then call the function with <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/call\"><code>call()</code></a>.</p>\n\n<pre><code>$(\"#myid\").click(function() {\n    myfunction.call(this, arg1, arg2);\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Tk7yF/\">jsFiddle</a>.</p>\n\n<p>You can't pass the reference directly in the way your example states, or its single argument will be the <a href=\"http://api.jquery.com/category/events/event-object/\">jQuery <code>event</code> object</a>.</p>\n\n<p>If you <em>do</em> want to pass the reference, you must leverage jQuery's <a href=\"http://api.jquery.com/jQuery.proxy/\"><code>proxy()</code></a> function (which is a cross browser wrapper for <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a>). This lets you pass arguments, which are bound <em>before</em> the <code>event</code> argument.</p>\n\n<pre><code>$(\"#myid\").click($.proxy(myfunction, null, arg1, arg2));   \n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/dLPu9/\">jsFiddle</a>.</p>\n\n<p>In this example, <code>myfunction()</code> would be executed with its <code>ThisBinding</code> intact (<code>null</code> is not an object, so the normal <code>this</code> value of the element which triggered the event is used), along with the arguments (in order) <code>arg1</code>, <code>arg2</code> and finally the jQuery <code>event</code> object, which you can ignore if it's not required (don't even name it in the function's arguments).</p>\n\n<p>You could also use use the jQuery <code>event</code> object's <a href=\"http://api.jquery.com/event.data/\"><code>data</code></a> to pass data, but this would require modifying <code>myfunction()</code> to access it via <code>event.data.arg1</code> (which aren't <em>function arguments</em> like your question mentions), or at least introducing a manual proxy function like the former example or a generated one using the latter example.</p>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p>while you should certainly use Alex's answer, the prototype library's \"bind\" method has been standardized in Ecmascript 5, and will soon be implemented in browsers natively. It works like this:</p>\n\n<pre><code>jQuery(\"#myid\").click(myfunction.bind(this, arg1, arg2));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>$(\"#myid\").on('click', {arg1: 'hello', arg2: 'bye'}, myfunction);\n\nfunction myfunction(e) {\n\n    var arg1 = e.data.arg1;\n    var arg2 = e.data.arg2;\n\n    alert(arg1);\n    alert(arg2);\n\n}\n\n//call method directly:\nmyfunction({\n    arg1: 'hello agian', \n    arg2: 'bye again'\n});\n</code></pre>\n\n<p>Also allows you to bind and unbind specific event handlers using the on and off methods.</p>\n\n<p>Example:</p>\n\n<pre><code>$(\"#myid\").off('click', myfunction);\n</code></pre>\n\n<p>This would unbind the myfunction handler from #myid</p>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>With jQuery code like: <br/></p>\n\n<pre><code>$(\"#myid\").click(myfunction);\n\nfunction myfunction(arg1, arg2) {/* something */}\n</code></pre>\n\n<p>How do I pass arguments to <code>myfunction</code> while using jQuery?</p>\n",
            "last_activity_date": 1390644973,
            "question_id": 979337,
            "score": 35,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How can I pass arguments to event handlers in jQuery?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>str = str.replace(/[^\\w\\s]|_/g, \"\")\n         .replace(/\\s+/g, \" \");\n</code></pre>\n\n<p>Removes everything except alphanumeric characters and whitespace, then collapses multiple adjacent characters to single spaces.</p>\n\n<p>Detailed explanation:</p>\n\n<ol>\n<li><code>\\w</code> is any digit, letter, or underscore.</li>\n<li><code>\\s</code> is any whitespace.</li>\n<li><code>[^\\w\\s]</code> is anything that's not a digit, letter, whitespace, or underscore.</li>\n<li><code>[^\\w\\s]|_</code> is the same as #3 except with the underscores added back in.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>For en-US ( American English ) strings this should suffice:</p>\n\n<pre><code>\"This., -/ is #! an $ % ^ &amp; * example ;: {} of a = -_ string with `~)() punctuation\".replace( /[^a-zA-Z ]/g, '').replace( /\\s\\s+/g, ' ' )\n</code></pre>\n\n<p>Be aware that if you support UTF-8 and characters like chinese/russian and all, this will replace them as well, so you really have to specify what you want.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you want to retain only alphabets and spaces, you can do:</p>\n\n<pre><code>str.replace(/[^a-zA-Z ]+/g, '').replace('/ {2,}/',' ')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In a Unicode-aware language, the Unicode <em>Punctuation</em> character property is <code>\\p{P}</code> \u2014 which you can usually abbreviate <code>\\pP</code> and sometimes expand to <code>\\p{Punctuation}</code> for readability. </p>\n\n<p>Are you using a Perl Compatible Regular Expression library?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you want to remove specific punctuation from a string, it will probably be best to explicitly remove exactly what you want like</p>\n\n<pre><code>replace(/[\\.,-\\/#!$%\\^&amp;\\*;:{}=\\-_`~()]/g,\"\")\n</code></pre>\n\n<p>Doing the above still doesn't return the string as you have specified it. If you want to remove any extra spaces that were left over from removing crazy punctuation, then you are going to want to do something like</p>\n\n<pre><code>replace(/\\s{2,}/g,\" \");\n</code></pre>\n\n<p><strong>My full example:</strong></p>\n\n<pre><code>var s = \"This., -/ is #! an $ % ^ &amp; * example ;: {} of a = -_ string with `~)() punctuation\";\nvar punctuationless = s.replace(/[\\.,-\\/#!$%\\^&amp;\\*;:{}=\\-_`~()]/g,\"\");\nvar finalString = punctuationless.replace(/\\s{2,}/g,\" \");\n</code></pre>\n\n<p><strong>Results of running code in firebug console:</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/2rmdW.png\" alt=\"alt text\"></p>\n",
                    "is_accepted": false,
                    "score": 57
                },
                {
                    "body": "<p>i'll just put it here for others.</p>\n\n<p>match all punctuation chars for for all languages:</p>\n\n<p>constructed from unicode punctuation category and addedsome common keyboard symbols like $ and brackets and -=_ </p>\n\n<p><a href=\"http://www.fileformat.info/info/unicode/category/Po/list.htm\" rel=\"nofollow\">http://www.fileformat.info/info/unicode/category/Po/list.htm</a></p>\n\n<p>basic replace:</p>\n\n<pre><code>\".test'da, te\\\"xt\".replace(/[\\-=_!\"#%&amp;'*{},.\\/:;?\\(\\)\\[\\]@\\\\$\\^*+&lt;&gt;~`\\u00a1\\u00a7\\u00b6\\u00b7\\u00bf\\u037e\\u0387\\u055a-\\u055f\\u0589\\u05c0\\u05c3\\u05c6\\u05f3\\u05f4\\u0609\\u060a\\u060c\\u060d\\u061b\\u061e\\u061f\\u066a-\\u066d\\u06d4\\u0700-\\u070d\\u07f7-\\u07f9\\u0830-\\u083e\\u085e\\u0964\\u0965\\u0970\\u0af0\\u0df4\\u0e4f\\u0e5a\\u0e5b\\u0f04-\\u0f12\\u0f14\\u0f85\\u0fd0-\\u0fd4\\u0fd9\\u0fda\\u104a-\\u104f\\u10fb\\u1360-\\u1368\\u166d\\u166e\\u16eb-\\u16ed\\u1735\\u1736\\u17d4-\\u17d6\\u17d8-\\u17da\\u1800-\\u1805\\u1807-\\u180a\\u1944\\u1945\\u1a1e\\u1a1f\\u1aa0-\\u1aa6\\u1aa8-\\u1aad\\u1b5a-\\u1b60\\u1bfc-\\u1bff\\u1c3b-\\u1c3f\\u1c7e\\u1c7f\\u1cc0-\\u1cc7\\u1cd3\\u2016\\u2017\\u2020-\\u2027\\u2030-\\u2038\\u203b-\\u203e\\u2041-\\u2043\\u2047-\\u2051\\u2053\\u2055-\\u205e\\u2cf9-\\u2cfc\\u2cfe\\u2cff\\u2d70\\u2e00\\u2e01\\u2e06-\\u2e08\\u2e0b\\u2e0e-\\u2e16\\u2e18\\u2e19\\u2e1b\\u2e1e\\u2e1f\\u2e2a-\\u2e2e\\u2e30-\\u2e39\\u3001-\\u3003\\u303d\\u30fb\\ua4fe\\ua4ff\\ua60d-\\ua60f\\ua673\\ua67e\\ua6f2-\\ua6f7\\ua874-\\ua877\\ua8ce\\ua8cf\\ua8f8-\\ua8fa\\ua92e\\ua92f\\ua95f\\ua9c1-\\ua9cd\\ua9de\\ua9df\\uaa5c-\\uaa5f\\uaade\\uaadf\\uaaf0\\uaaf1\\uabeb\\ufe10-\\ufe16\\ufe19\\ufe30\\ufe45\\ufe46\\ufe49-\\ufe4c\\ufe50-\\ufe52\\ufe54-\\ufe57\\ufe5f-\\ufe61\\ufe68\\ufe6a\\ufe6b\\uff01-\\uff03\\uff05-\\uff07\\uff0a\\uff0c\\uff0e\\uff0f\\uff1a\\uff1b\\uff1f\\uff20\\uff3c\\uff61\\uff64\\uff65]+/g,\"\")\n\"testda text\"\n</code></pre>\n\n<p>added \\s as space</p>\n\n<pre><code>\".da'fla, te\\\"te\".split(/[\\s\\-=_!\"#%&amp;'*{},.\\/:;?\\(\\)\\[\\]@\\\\$\\^*+&lt;&gt;~`\\u00a1\\u00a7\\u00b6\\u00b7\\u00bf\\u037e\\u0387\\u055a-\\u055f\\u0589\\u05c0\\u05c3\\u05c6\\u05f3\\u05f4\\u0609\\u060a\\u060c\\u060d\\u061b\\u061e\\u061f\\u066a-\\u066d\\u06d4\\u0700-\\u070d\\u07f7-\\u07f9\\u0830-\\u083e\\u085e\\u0964\\u0965\\u0970\\u0af0\\u0df4\\u0e4f\\u0e5a\\u0e5b\\u0f04-\\u0f12\\u0f14\\u0f85\\u0fd0-\\u0fd4\\u0fd9\\u0fda\\u104a-\\u104f\\u10fb\\u1360-\\u1368\\u166d\\u166e\\u16eb-\\u16ed\\u1735\\u1736\\u17d4-\\u17d6\\u17d8-\\u17da\\u1800-\\u1805\\u1807-\\u180a\\u1944\\u1945\\u1a1e\\u1a1f\\u1aa0-\\u1aa6\\u1aa8-\\u1aad\\u1b5a-\\u1b60\\u1bfc-\\u1bff\\u1c3b-\\u1c3f\\u1c7e\\u1c7f\\u1cc0-\\u1cc7\\u1cd3\\u2016\\u2017\\u2020-\\u2027\\u2030-\\u2038\\u203b-\\u203e\\u2041-\\u2043\\u2047-\\u2051\\u2053\\u2055-\\u205e\\u2cf9-\\u2cfc\\u2cfe\\u2cff\\u2d70\\u2e00\\u2e01\\u2e06-\\u2e08\\u2e0b\\u2e0e-\\u2e16\\u2e18\\u2e19\\u2e1b\\u2e1e\\u2e1f\\u2e2a-\\u2e2e\\u2e30-\\u2e39\\u3001-\\u3003\\u303d\\u30fb\\ua4fe\\ua4ff\\ua60d-\\ua60f\\ua673\\ua67e\\ua6f2-\\ua6f7\\ua874-\\ua877\\ua8ce\\ua8cf\\ua8f8-\\ua8fa\\ua92e\\ua92f\\ua95f\\ua9c1-\\ua9cd\\ua9de\\ua9df\\uaa5c-\\uaa5f\\uaade\\uaadf\\uaaf0\\uaaf1\\uabeb\\ufe10-\\ufe16\\ufe19\\ufe30\\ufe45\\ufe46\\ufe49-\\ufe4c\\ufe50-\\ufe52\\ufe54-\\ufe57\\ufe5f-\\ufe61\\ufe68\\ufe6a\\ufe6b\\uff01-\\uff03\\uff05-\\uff07\\uff0a\\uff0c\\uff0e\\uff0f\\uff1a\\uff1b\\uff1f\\uff20\\uff3c\\uff61\\uff64\\uff65]+/g)\n</code></pre>\n\n<p>added ^ to invert patternt to match not punctuation but the words them selves</p>\n\n<pre><code>\".test';the, te\\\"xt\".match(/[^\\s\\-=_!\"#%&amp;'*{},.\\/:;?\\(\\)\\[\\]@\\\\$\\^*+&lt;&gt;~`\\u00a1\\u00a7\\u00b6\\u00b7\\u00bf\\u037e\\u0387\\u055a-\\u055f\\u0589\\u05c0\\u05c3\\u05c6\\u05f3\\u05f4\\u0609\\u060a\\u060c\\u060d\\u061b\\u061e\\u061f\\u066a-\\u066d\\u06d4\\u0700-\\u070d\\u07f7-\\u07f9\\u0830-\\u083e\\u085e\\u0964\\u0965\\u0970\\u0af0\\u0df4\\u0e4f\\u0e5a\\u0e5b\\u0f04-\\u0f12\\u0f14\\u0f85\\u0fd0-\\u0fd4\\u0fd9\\u0fda\\u104a-\\u104f\\u10fb\\u1360-\\u1368\\u166d\\u166e\\u16eb-\\u16ed\\u1735\\u1736\\u17d4-\\u17d6\\u17d8-\\u17da\\u1800-\\u1805\\u1807-\\u180a\\u1944\\u1945\\u1a1e\\u1a1f\\u1aa0-\\u1aa6\\u1aa8-\\u1aad\\u1b5a-\\u1b60\\u1bfc-\\u1bff\\u1c3b-\\u1c3f\\u1c7e\\u1c7f\\u1cc0-\\u1cc7\\u1cd3\\u2016\\u2017\\u2020-\\u2027\\u2030-\\u2038\\u203b-\\u203e\\u2041-\\u2043\\u2047-\\u2051\\u2053\\u2055-\\u205e\\u2cf9-\\u2cfc\\u2cfe\\u2cff\\u2d70\\u2e00\\u2e01\\u2e06-\\u2e08\\u2e0b\\u2e0e-\\u2e16\\u2e18\\u2e19\\u2e1b\\u2e1e\\u2e1f\\u2e2a-\\u2e2e\\u2e30-\\u2e39\\u3001-\\u3003\\u303d\\u30fb\\ua4fe\\ua4ff\\ua60d-\\ua60f\\ua673\\ua67e\\ua6f2-\\ua6f7\\ua874-\\ua877\\ua8ce\\ua8cf\\ua8f8-\\ua8fa\\ua92e\\ua92f\\ua95f\\ua9c1-\\ua9cd\\ua9de\\ua9df\\uaa5c-\\uaa5f\\uaade\\uaadf\\uaaf0\\uaaf1\\uabeb\\ufe10-\\ufe16\\ufe19\\ufe30\\ufe45\\ufe46\\ufe49-\\ufe4c\\ufe50-\\ufe52\\ufe54-\\ufe57\\ufe5f-\\ufe61\\ufe68\\ufe6a\\ufe6b\\uff01-\\uff03\\uff05-\\uff07\\uff0a\\uff0c\\uff0e\\uff0f\\uff1a\\uff1b\\uff1f\\uff20\\uff3c\\uff61\\uff64\\uff65]+/g)\n</code></pre>\n\n<p>for language like hebrew maybe to remove \" ' the single and the double quote. and do more thinking on it.</p>\n\n<p>using this script:</p>\n\n<p>step 1: select in firefox holding control a column of U+1234 numbers and copy it, do not copy U+12456 they replace english</p>\n\n<p>step 2 (i did in chrome)find some textarea and paste it into it then rightclick and click inspect.  then you can access the selected element with $0.</p>\n\n<pre><code>var x=$0.value\nvar z=x.replace(/U\\+/g,\"\").split(/[\\r\\n]+/).map(function(a){return parseInt(a,16)})\nvar ret=[];z.forEach(function(a,k){if(z[k-1]===a-1 &amp;&amp; z[k+1]===a+1) { if(ret[ret.length-1]!=\"-\")ret.push(\"-\");} else {  var c=a.toString(16); var prefix=c.length&lt;3?\"\\\\u0000\":c.length&lt;5?\"\\\\u0000\":\"\\\\u000000\"; var uu=prefix.substring(0,prefix.length-c.length)+c; ret.push(c.length&lt;3?String.fromCharCode(a):uu)}});ret.join(\"\")\n</code></pre>\n\n<p>step 3 copied over the first letters the ascii as separate chars not ranges because someone might add or remove individual chars</p>\n\n<p>for utf16 you can redo my work and save your files as utf16 but probably you dont need it unless you are japaneese</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here are the standard punctuation characters for US-ASCII: !\"#$%&amp;'()*+,-./:;&lt;=>?@[]^_`{|}~</p>\n\n<p>For Unicode punctuation (such as curly quotes, em-dashes, etc), you can easily match on specific block ranges. The <strong>General Punctuation</strong> block is <code>\\u2000-\\u206F</code>, and the <strong>Supplemental Punctuation</strong> block is <code>\\u2E00-\\u2E7F</code>.</p>\n\n<p>Put together, and properly escaped, you get the following RegExp:</p>\n\n<pre><code>/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#\\$%&amp;\\(\\)\\*\\+,\\-\\.\\/:;&lt;=&gt;\\?@\\[\\]\\^_`\\{\\|\\}~]/\n</code></pre>\n\n<p>That should match pretty much any punctuation you encounter. So, to answer the original question:</p>\n\n<pre><code>var punctRE = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#\\$%&amp;\\(\\)\\*\\+,\\-\\.\\/:;&lt;=&gt;\\?@\\[\\]\\^_`\\{\\|\\}~]/g;\nvar spaceRE = /\\s+/g;\nvar str = \"This, -/ is #! an $ % ^ &amp; * example ;: {} of a = -_ string with `~)() punctuation\";\nstr.replace(punctRE, '').replace(spaceRE, ' ');\n\n&gt;&gt; \"This is an example of a string with punctuation\"\n</code></pre>\n\n<p>US-ASCII source: <a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html#posix\">http://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html#posix</a></p>\n\n<p>Unicode source: <a href=\"http://kourge.net/projects/regexp-unicode-block\">http://kourge.net/projects/regexp-unicode-block</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>If I have a string with any type of non-alphanumeric character in it: </p>\n\n<pre><code>\"This., -/ is #! an $ % ^ &amp; * example ;: {} of a = -_ string with `~)() punctuation\"\n</code></pre>\n\n<p>How would I get a no-punctuation version of it in JavaScript:</p>\n\n<pre><code>This is an example of a string with punctuation\n</code></pre>\n",
            "last_activity_date": 1409341162,
            "question_id": 4328500,
            "score": 34,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "How can I strip all punctuation from a string in JavaScript using regex?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I'm not exactly sure what you want, but I think the best you can do is something like this:</p>\n\n<pre><code>var someClass = { \"width\": \"100%\", \"background\": \"#ffffff\" };\n$(this).css(someClass);\n</code></pre>\n\n<p>Note that this is not actually creating a class, but it might do what you need.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Actually, you can create a CSS rule that will affect all elements on the current page. In most browsers it should be as simple as:</p>\n\n<pre><code>var style = $('&lt;style&gt;body { background: green; }&lt;/style&gt;')\n$('html &gt; head').append(style);\n</code></pre>\n\n<p>This may or may not work in IE, however you can use IE's proprietary <a href=\"http://msdn.microsoft.com/en-us/library/aa358796%28VS.85%29.aspx\">addRule</a> instead:</p>\n\n<pre><code>document.styleSheets[0].addRule('body', 'background: green', -1);\n</code></pre>\n\n<p>Naturally this will not assist you in creating css files that can be shared between webpages, but it is a handy way of affecting the style of a large number of elements without the need to iterate over them.</p>\n",
                    "is_accepted": true,
                    "score": 57
                },
                {
                    "body": "<p>Here's something that will create a CSS class that will be available everywhere and apply it to a jQuery object. This uses the same basic technique as mentioned by MooGoo but is fleshed out into a fully functional piece of code:</p>\n\n<pre><code>(function() {\n    var addRule;\n\n    if (typeof document.styleSheets != \"undefined\" &amp;&amp; document.styleSheets) {\n        addRule = function(selector, rule) {\n            var styleSheets = document.styleSheets, styleSheet;\n            if (styleSheets &amp;&amp; styleSheets.length) {\n                styleSheet = styleSheets[styleSheets.length - 1];\n                if (styleSheet.addRule) {\n                    styleSheet.addRule(selector, rule)\n                } else if (typeof styleSheet.cssText == \"string\") {\n                    styleSheet.cssText = selector + \" {\" + rule + \"}\";\n                } else if (styleSheet.insertRule &amp;&amp; styleSheet.cssRules) {\n                    styleSheet.insertRule(selector + \" {\" + rule + \"}\", styleSheet.cssRules.length);\n                }\n            }\n        }\n    } else {\n        addRule = function(selector, rule, el, doc) {\n            el.appendChild(doc.createTextNode(selector + \" {\" + rule + \"}\"));\n        };\n    }\n\n    var createCssClass = function(className, cssProps, doc) {\n        doc = doc || document;\n\n        var head = doc.getElementsByTagName(\"head\")[0];\n        if (head &amp;&amp; addRule) {\n            var selector = \"*.\" + className;\n            var ruleBits = [];\n            for (var i in cssProps) {\n                if (cssProps.hasOwnProperty(i)) {\n                    ruleBits.push(i + \":\" + cssProps[i] + \";\");\n                }\n            }\n            var rule = ruleBits.join(\"\");\n            var styleEl = doc.createElement(\"style\");\n            styleEl.type = \"text/css\";\n            styleEl.media = \"screen\";\n            head.appendChild(styleEl);\n            addRule(selector, rule, styleEl, doc);\n            styleEl = null;\n        }\n    };\n\n    jQuery.fn.createAndApplyCssClass = function(className, cssProps) {\n        createCssClass(className, cssProps, document);\n        this.addClass(className);\n    };\n})();\n\n$(\"#someelement\").createAndApplyCssClass(\"test\", {\n    \"background-color\": \"green\",\n    \"color\" : \"white\"\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>With <a href=\"http://flesler.blogspot.com/2007/11/jqueryrule.html\" rel=\"nofollow\">jQuery.Rule</a> you can write code like this to append a new CSS rule:</p>\n\n<pre><code>$.rule('#content ul{ border:1px solid green }').appendTo('style');\n</code></pre>\n\n<p>Extending a rule:</p>\n\n<pre><code>$.rule('#content ul', 'style').append('background:#FF9');\n</code></pre>\n\n<p>Removing the whole rule:</p>\n\n<pre><code>$.rule('#content ul', 'style').remove();\n</code></pre>\n\n<p>There is more in the <a href=\"http://flesler.webs.com/jQuery.Rule/API.txt\" rel=\"nofollow\">API docs</a>.</p>\n\n<p>Internally, it uses the \"append stylesheet to head\" trick that <a href=\"http://stackoverflow.com/questions/3393162/creating-a-css-class-in-jquery/3393252#3393252\">MooGoo mentioned as well</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I believe the .addClass() function in jQuery attaches a CSS class to the current selection, but I was wondering I could create or define a CSS class in jQuery, and then attach it?</p>\n",
            "last_activity_date": 1361562402,
            "question_id": 3393162,
            "score": 29,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "class"
            ],
            "title": "Creating a CSS class in jQuery"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Currently backbone does not support sending part of the model to the server. It would be an interesting addition though.</p>\n\n<p>If you <a href=\"http://documentcloud.github.com/backbone/docs/backbone.html\">browse the source</a> you can see that <code>Backbone.sync</code> (the part of backbone that is responsible for communicating with the data store) is one of the simplest components in backbone and simply wraps the ajax support in jQuery or Zepto.</p>\n\n<p><br>\n<strong>UPDATE</strong></p>\n\n<p>starting backbone version 0.9.10, partial model update is supported natively via </p>\n\n<pre><code>model.save(attrs, {patch: true})\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>Backbone does not support this out of the box, but you have all the tools to make that happen.\nIf you look at Backbone.sync you will see that it calls toJSON on your model to get the actual data to send. Now you might have to tweak this out, but here is the gist of it:</p>\n\n<pre><code>initialize: function(){\n  this.dirtyAttributes = {}\n},\nset: function(attrs, options){\n  Backbone.Model.prototype.set.call(this, attrs, options);\n  _.extend(this.dirtyAttributes, attrs);\n},\ntoJSON : function(){\n  json = this.dirtyAttributes;\n  this.dirtyAttributes = {};\n  return json;\n}\n</code></pre>\n\n<p>If you want a complete solution you need to apply the same logic to unset, clear, save, etc. But I guess you get how to do this. I put the reset of the dirty attributes in the toJSON function, but it should really be in the success callback (when calling save).</p>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>If you need to send update request to a server with just a specific attributes, you can do something similar:</p>\n\n<pre><code>saveAttributes: (attributes, options={}) -&gt;\n  data = {}\n  _(attributes).each (attribute) =&gt;\n    data[attribute] = @get(attribute)\n\n  params =\n    data: $.param(data)\n\n  _.extend(params, options)\n\n  Backbone.sync('update', null, params)\n</code></pre>\n\n<p>More info on that: <a href=\"https://github.com/documentcloud/backbone/pull/573\" rel=\"nofollow\">https://github.com/documentcloud/backbone/pull/573</a></p>\n\n<p>You can extend it with <code>_.extend Backbone.Model.prototype</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I tried several of the techniques that were suggested here, but in the end, decided to modify Backbone.Model and Backbone.sync directly. What I wanted to provide was a minimally invasive method for providing this functionality that didn't require instructing developers on my team on overriding backbone methods; just too prone to error. My solution involves only passing an option to the model's \"save\" method. For example:</p>\n\n<pre><code>//Note that this could be from your view or anywhere you're invoking model.save\nsaveToModel : function() {\n    this.model.save({\n        field1 : field1Value,\n        field2 : field2Value,\n        field3 : field3Value\n    }, {partialUpdate : true}\n}\n</code></pre>\n\n<p>Now, to enable this functionality, I made some very minor modifications to Backbone.Model.save and Backbone.sync. Here's the change to Backbone.Model.save:</p>\n\n<pre><code>//If a partialUpdate is required, create a member on the options\n//hash called updateAttrs and set it to attrs\nif (options.partialUpdate != \"undefined\" &amp;&amp; options.partialUpdate) {\n    options.updateAttrs = attrs;\n}\n//---&gt;&gt;&gt;Put the block above right above the return line\nreturn (this.sync || Backbone.sync).call(this, method, this, options);\n</code></pre>\n\n<p>What happens here is that if partialUpdate is passed as an option, then a new member called updateAttrs is created on the options hash. The options hash is automatically passed to Backbone.sync.</p>\n\n<p>For Backbone.sync, I changed the following conditional:</p>\n\n<pre><code>// Ensure that we have the appropriate request data.\nif (!params.data &amp;&amp; model &amp;&amp; (method == 'create' || method == 'update')) {\n    params.contentType = 'application/json';\n    params.data = JSON.stringify(model.toJSON());\n}\n</code></pre>\n\n<p>to...</p>\n\n<pre><code>// Ensure that we have the appropriate request data.\nif (!params.data &amp;&amp; model &amp;&amp; (method == 'create' || method == 'update')) {\n    params.contentType = 'application/json';\n\n    //If doing a partial model update, then grab the updateAttrs member\n    //from options. Will not interfere with line directly below as params.data\n    //will have been set.\n    params.data = (options.partialUpdate != \"undefined\" &amp;&amp; options.partialUpdate)\n                ? params.data = JSON.stringify(options.updateAttrs)\n                : params.data = JSON.stringify(model.toJSON());\n}\n</code></pre>\n\n<p>Adding the extra conditional checks to see if partialUpdate was set, then if it is, set params.data to options.updateAttrs. This will then be passed to the jquery Ajax method.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>UPDATE: starting backbone version 0.9.10, partial update is supported natively via </p>\n\n<pre><code>model.save(attrs, {patch: true})\n</code></pre>\n\n<p><br><strong>Until 0.9.9</strong>\nAn approach without directly editing the backbone.js library file. Just the add the following code in application js file and load it after backbone.js gets loaded.</p>\n\n<pre><code>//override the Backbone.sync to send only the changed fields for update (PUT) request\nvar Original_BackboneSync = Backbone.sync;\n\nBackbone.sync = function(method, model, options) {\n    /* just handle the data picking logic for update method */\n    if (!options.data &amp;&amp; model &amp;&amp; method == 'update') {\n        options.contentType = 'application/json';\n        options.data = JSON.stringify(model.changedAttributes() || {});\n    }\n\n    //invoke the original backbone sync method\n    return Original_BackboneSync.apply(this, arguments);\n};\n\n//Tested in Backbone.js 0.9.1\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Instead of overrite <code>Backbone.sync</code> you could just do it inside <code>Model.sync</code> method, and since you cant access <code>model.changedAttributes()</code> always return false inside this method, there is a changes attribute inside options that you could get those values and send inside request data:</p>\n\n<pre><code>sync: (method, model, options) -&gt;\n    if method is \"update\"\n        options.contentType = 'application/json'\n        changedData = {}\n        for attr in _.keys(options.changes)\n            changedData[attr] = model.get(attr)\n        options.data = JSON.stringify changedData\n\n    Backbone.sync method, model, options\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Using the (very good) answer of Jayyy V, i rewrote it a little bit to make the sync function take a whitelist so you can give it an array of keys that get saved.</p>\n\n<pre><code>var Original_BackboneSync = Backbone.sync;\nBackbone.sync = function(method, model, options) {\n    /* check if a whitelist was in options */\n    if (options.whitelist) {\n      options.contentType = 'application/json';\n      /* use underscore method for picking only whitelisted attributes to save */\n      options.data = JSON.stringify(_.pick(model.attributes, options.whitelist));\n    }\n\n    //invoke the original backbone sync method\n    return Original_BackboneSync.apply(this, arguments);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Most of the answers here are either direct or indirectly modify the <code>sync</code> function. Here is my little trick to overcome this:</p>\n\n<p>When you call your <code>model.save</code>, you can actually pass in the second parameter that will be passed along with the <code>$.ajax</code> when Backbone is trying to call the sync. I did the partial update like this, more of explicitly specifying which fields to submit:</p>\n\n<pre><code>/**\n * On user clicking on \"mark important\"\n */\nonMarkImportantBtnClick: function() {\n    var marked = this.model.get('UserFeed.marked_important'),\n        data = {\n            UserFeed: {\n                marked_important: !marked\n            }\n        };\n    this.model.save(data, {data: JSON.stringify(data), contentType: 'application/json'});\n}\n</code></pre>\n\n<p>This action updated my model attributes correctly, plus sending to the server only the data that mentioned in the <code>JSON.stringify</code>. <em><code>contentType</code> is required here, better</em></p>\n\n<p>This is because <code>Backbone.sync</code> <a href=\"http://documentcloud.github.com/backbone/docs/backbone.html#section-168\" rel=\"nofollow\">has these lines</a>, and we are negating it by passing <code>data</code> attribute:</p>\n\n<pre><code>if (!options.data &amp;&amp; model &amp;&amp; (method == 'create' || method == 'update')) {\n    params.contentType = 'application/json';\n    params.data = JSON.stringify(model.toJSON());\n}\n</code></pre>\n\n<p>Credit to this page: <a href=\"https://plus.google.com/103858073822961240171/posts/1gTcu6avmWQ\" rel=\"nofollow\">https://plus.google.com/103858073822961240171/posts/1gTcu6avmWQ</a></p>\n\n<p><em>Note: This model inherited from powmedia's <a href=\"https://github.com/powmedia/backbone-deep-model\" rel=\"nofollow\">DeepModel</a> to support nested model attributes</em>\n<br><br><br>\n<strong>Edit</strong></p>\n\n<p>Since Backbone 0.9.9, <a href=\"http://backbonejs.org/#Model-save\" rel=\"nofollow\"><code>patch</code></a> option has been added so this trick is only applicable to previous version.</p>\n\n<p>To submit only the dirty data back to your server, supply <code>{patch: true}</code> in your <code>save</code>, such that</p>\n\n<pre><code>this.model.save(modifiedData, {patch: true});\n</code></pre>\n\n<p>Thanks @Lincoln B for pointing it out.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Building on @Julien's post:\nYou can add this to your model, and it will only send the attributes that you pass in as opposed to the entire model. You can still use save for the default behavior, and you can use partialSave when you want to just send those attributes that you pass in as a parameter. I have tested this, and it worked for me.</p>\n\n<pre><code>  partialSave: function(attr, options) { //use this method instead of save()\n    this.dirtyAttributes = attr;\n    this.save(attr, options);\n  },\n\n  toJSON: function() { //overrides Backbone.Model.prototype.toJSON\n    if (this.dirtyAttributes) {\n      var attr = this.dirtyAttributes;\n      this.dirtyAttributes = null;\n      return attr;\n    }\n    return Backbone.Model.prototype.toJSON.apply(this, arguments);\n  },\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In fact there is a much simpler way of achieving this </p>\n\n<p>if you look at backbone.js line 1145 you will see that </p>\n\n<pre><code>// Ensure that we have the appropriate request data.\n    if (options.data == null &amp;&amp; model &amp;&amp; (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n</code></pre>\n\n<p>Which means that you may override the data part of the xhr by putting data in your options</p>\n\n<p>Since backbone save requires <code>model.save([attributes], [options])</code></p>\n\n<p>But remember that attributes like id might be essential to proper saving </p>\n\n<p>Example </p>\n\n<pre><code>model.save( {}, { data: JSON.stringify(data) } ) ; \n</code></pre>\n\n<p>So you should be doing something like this</p>\n\n<pre><code>var data = { id : model.id , otherAttributes : 'value' }  ;  \n</code></pre>\n\n<p>or </p>\n\n<pre><code>var data = model.toJSON () ;\nremove data.tempData ; \n</code></pre>\n\n<p>Finally </p>\n\n<pre><code>model.save( {}, { data : JSON.stringify(data) } );\n</code></pre>\n\n<p>This do the trick quite well for me and could be used with any backbone with xhr such as fetch, save, delete, ...</p>\n\n<p>Messing with save, sync or toJSON look so wrong </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I created extended Model.</p>\n\n<pre><code>var CModel = Backbone.Model.extend({\n    save: function(attributes, options) {\n        if(_.isUndefined(options)) {\n            options = {};\n        }\n\n        var isNeedAttrsRefresh = false,\n            basicAttributes = null;\n\n        if(!_.isUndefined(options.fields)) {\n            basicAttributes = _.clone(this.attributes);\n            var newAttributes = {};\n            _.each(this.attributes, function(value, name) {\n                if(options.fields.indexOf(name) &gt; -1) {\n                    newAttributes[name] = value;\n                }\n            });\n            this.attributes = newAttributes;\n            isNeedAttrsRefresh = true;\n        }\n\n        this.isSaving = true;\n        var result = Backbone.Model.prototype.save.apply(this, arguments);\n        this.isSaving = false;\n\n        if(isNeedAttrsRefresh) {\n            this.attributes = basicAttributes;\n        }\n\n        return result;\n    }\n});\n</code></pre>\n\n<p>Example of usage:</p>\n\n<pre><code>var CommentModel = CModel.extend({ ... }\n</code></pre>\n\n<p>And allowed fields to save:</p>\n\n<pre><code>comment.save(null, {    fields: ['message', 'entry_id', 'module_id', 'parent_id'] });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to send just the modified properties of a model when saving the changes?</p>\n\n<p>BTW, Are there any \"official\" Backbone.js group/mailing list to ask this kind of questions?</p>\n",
            "last_activity_date": 1409346631,
            "question_id": 5273369,
            "score": 27,
            "tags": [
                "javascript",
                "backbone.js"
            ],
            "title": "Backbone.js partial model update"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Inline week picker using jQuery UI DataPicker (requires jQuery UI 1.8+):</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.14/jquery-ui.min.js\"&gt;&lt;/script&gt;\n    &lt;link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.14/themes/base/jquery-ui.css\"&gt;\n&lt;script type=\"text/javascript\"&gt;\n$(function() {\n    var startDate;\n    var endDate;\n\n    var selectCurrentWeek = function() {\n        window.setTimeout(function () {\n            $('.week-picker').find('.ui-datepicker-current-day a').addClass('ui-state-active')\n        }, 1);\n    }\n\n    $('.week-picker').datepicker( {\n        showOtherMonths: true,\n        selectOtherMonths: true,\n        onSelect: function(dateText, inst) { \n            var date = $(this).datepicker('getDate');\n            startDate = new Date(date.getFullYear(), date.getMonth(), date.getDate() - date.getDay());\n            endDate = new Date(date.getFullYear(), date.getMonth(), date.getDate() - date.getDay() + 6);\n            var dateFormat = inst.settings.dateFormat || $.datepicker._defaults.dateFormat;\n            $('#startDate').text($.datepicker.formatDate( dateFormat, startDate, inst.settings ));\n            $('#endDate').text($.datepicker.formatDate( dateFormat, endDate, inst.settings ));\n\n            selectCurrentWeek();\n        },\n        beforeShowDay: function(date) {\n            var cssClass = '';\n            if(date &gt;= startDate &amp;&amp; date &lt;= endDate)\n                cssClass = 'ui-datepicker-current-day';\n            return [true, cssClass];\n        },\n        onChangeMonthYear: function(year, month, inst) {\n            selectCurrentWeek();\n        }\n    });\n\n    $('.week-picker .ui-datepicker-calendar tr').live('mousemove', function() { $(this).find('td a').addClass('ui-state-hover'); });\n    $('.week-picker .ui-datepicker-calendar tr').live('mouseleave', function() { $(this).find('td a').removeClass('ui-state-hover'); });\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"week-picker\"&gt;&lt;/div&gt;\n    &lt;br /&gt;&lt;br /&gt;\n    &lt;label&gt;Week :&lt;/label&gt; &lt;span id=\"startDate\"&gt;&lt;/span&gt; - &lt;span id=\"endDate\"&gt;&lt;/span&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>run it on JsFiddle <a href=\"http://jsfiddle.net/manishma/AVZJh/light/\">http://jsfiddle.net/manishma/AVZJh/light/</a></p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Here is another way at going at it. \n -Display the week with showWeek. \n- Define a beforeShow to attach an event handler using live() so the week row is highlighted (including the week number).\n- Detach the event handler with die() onclose. This is particularly handy when you are using normal datepickers elsewhere in your code.</p>\n\n<pre><code>$( \".week-picker\" ).datepicker({\n    dateFormat: \"yy-mm-dd\",\n    showOtherMonths: true,\n    selectOtherMonths: true,\n    changeMonth: true,\n    changeYear: true,\n    showWeek: true,\n    beforeShow: function(dateText, inst) { \n\n        // for week highighting\n        $(\".ui-datepicker-calendar tr\").live(\"mousemove\", function() { \n            $(this).find(\"td a\").addClass(\"ui-state-hover\"); \n            $(this).find(\".ui-datepicker-week-col\").addClass(\"ui-state-hover\");\n        });\n        $(\".ui-datepicker-calendar tr\").live(\"mouseleave\", function() { \n            $(this).find(\"td a\").removeClass(\"ui-state-hover\");\n            $(this).find(\".ui-datepicker-week-col\").removeClass(\"ui-state-hover\");      \n        });\n    },\n    onClose: function(dateText, inst) { \n        var wk = $.datepicker.iso8601Week(new Date(dateText));\n        if (parseInt(wk) &lt; 10) {\n            wk = \"0\" + wk;\n        }           \n        var year = $(\"#ui-datepicker-div .ui-datepicker-year :selected\").val();\n\n        if (isNaN(wk)) {\n            $(this).val(\"\");\n        } else {\n            $(this).val(year + \";\" + wk);\n        }\n\n        // disable live listeners so they dont impact other instances\n        $(\".ui-datepicker-calendar tr\").die(\"mousemove\");\n        $(\".ui-datepicker-calendar tr\").die(\"mouseleave\");\n\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I have modified the jqueryui-1.10.2.js at line 8123 :</p>\n\n<p>(I don't remember where I have seen this)</p>\n\n<pre><code>case 'W':  \noutput += this.iso8601Week(new Date(date.getFullYear(), date.getMonth(), date.getDate()));\nbreak;\n</code></pre>\n\n<p>Then you could select week with W in date format ==> dateFormat: 'yy-W'</p>\n\n<pre><code>$(\"#your_datepicker\").datepicker ({ firstDay: 1, showWeek: true, showOtherMonths: true, dateFormat: 'yy-W'});\n</code></pre>\n\n<p>If you have a previous version of jqueryui, search for \"@\" (search the quotes also) in the file and add these 3 lines.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have created a jQuery plugin based on the accepted answer. Get it at <a href=\"https://github.com/Prezent/jquery-weekpicker\" rel=\"nofollow\">https://github.com/Prezent/jquery-weekpicker</a> or through Bower. Example usage:</p>\n\n<pre><code>$('#selector').weekpicker({\n    startField: '#date-start',\n    endField: '#date-end'\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've been using the jQuery UI Calendar / Date Picker with great success over the last couple months.  I've been given a new requirement to allow for a week to be selected (Sun - Sat) rather than a single day.</p>\n\n<p>Has anyone accomplished this before? </p>\n\n<ul>\n<li>highlighting by week rather than day</li>\n<li>show beginning date and ending date rather than single date in textbox / labels</li>\n</ul>\n",
            "last_activity_date": 1418658485,
            "question_id": 1289633,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "asp.net-mvc",
                "jquery-ui"
            ],
            "title": "How to use jQuery UI Calendar/Date PIcker for week rather than day?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<h2><strong>Overview of OAuth: Is the User Who He/She Says He/She is?:</strong></h2>\n\n<p>I'm not sure if you used OAuth to login to Stack Overflow, like the \"Login with Google\" option, but when you use this feature, Stack Overflow is simply asking Google if it knows who you are:</p>\n\n<blockquote>\n  <p>\"Yo Google, this Vinesh fella claims that vinesh.e@gmail.com is him, is that true?\"</p>\n</blockquote>\n\n<p>If you're logged in already, Google will say YES. If not, Google will say:</p>\n\n<blockquote>\n  <p>\"Hang on a sec Stack Overflow, I'll authenticate this fella and if he can enter the right password for his Google account, then it's him\".</p>\n</blockquote>\n\n<p>When you enter your Google password, Google then tells Stack Overflow you are who you say you are, and Stack Overflow logs you in.</p>\n\n<h2><strong>When you logout of your app, you're logging out of <em>your</em> app:</strong></h2>\n\n<p>Here's where developers new to OAuth sometimes get a little confused... Google and Stack Overflow, Assembla, Vinesh's-very-cool-slick-webapp, are all different entities, and Google knows nothing about your account on Vinesh's cool webapp, and vice versa, aside from what's exposed via the API you're using to access profile information. </p>\n\n<p><em>When your user logs out, he or she isn't logging out of Google, he/she is logging out of your app, or Stack Overflow, or Assembla, or whatever web application used Google OAuth to authenticate the user.</em></p>\n\n<p>In fact, I can log out of all of my Google accounts and still be logged into Stack Overflow. Once your app knows who the user is, that person can log out of Google. Google is no longer needed.</p>\n\n<p>With that said, what you're asking to do is log the user out of a service that really doesn't belong to you. Think about it like this:  As a user, how annoyed do you think I would be if I logged into 5 different services with my Google account, then the first time I logged out of one of them, I have to login to my Gmail account again because that app developer decided that, when I log out of his application, I should also be logged out of Google? That's going to get old really fast. In short, you <em>really don't want to do this</em>...</p>\n\n<h2><strong>Yeh yeh, whatever, I still want to log the user out Of Google, just tell me how do I do this?</strong></h2>\n\n<p>With that said, if you <em>still do</em> want to log a user out of Google, and realize that you may very well be disrupting their workflow, you could dynamically build the logout url from one of their Google services logout button, and then invoke that using an img element or a script tag:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" \n    src=\"https://mail.google.com/mail/u/0/?logout&amp;hl=en\" /&gt;\n</code></pre>\n\n<p>OR </p>\n\n<pre><code>&lt;img src=\"https://mail.google.com/mail/u/0/?logout&amp;hl=en\" /&gt;\n</code></pre>\n\n<p>OR </p>\n\n<pre><code>window.location = \"https://mail.google.com/mail/u/0/?logout&amp;hl=en\";\n</code></pre>\n\n<p>If you redirect your user to the logout page, or invoke it from an element that isn't cross-domain restricted, the user will be logged out of Google.</p>\n\n<p>Note that this does not necessarily mean the user will be logged out of <em>your</em> application, only Google. :)</p>\n\n<h2>Summary:</h2>\n\n<p>What's important for you to keep in mind is that, when you logout of your app, you don't need to make the user re-enter a password. That's the whole point! It authenticates against Google so the user doesn't have to enter his or her password over and over and over again in each web application he or she uses. It takes some getting used to, but know that, as long as the user is logged into Google, your app doesn't need to worry about whether or not the user is who he/she says he/she is. </p>\n\n<p>I have the same implementation in a project as you do, using the Google Profile information with OAuth. I tried the very same thing you're looking to try, and it really started making people angry when they had to login to Google over and over again, so we stopped logging them out of Google. :)</p>\n",
                    "is_accepted": true,
                    "score": 68
                },
                {
                    "body": "<p>For me, it works (java - android)</p>\n\n<pre><code>void RevokeAcess()\n{\n    try{\n    HttpClient client = new DefaultHttpClient();\n    HttpPost post = new HttpPost(\"https://accounts.google.com/o/oauth2/revoke?token=\"+ACCESS_TOKEN);\n    org.apache.http.HttpResponse response = client.execute(post);\n    }\n    catch(IOException e)\n    {\n    }\n    CookieManager.getInstance().removeAllCookie(); // this is clear the cookies which tends to same user in android web view\n}\n</code></pre>\n\n<p>You have to call this function in AsyncTask in android</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>@Vinoj,</p>\n\n<p>You do not need to revoke the token to sign out. In most cases you should only need to delete the access token (not the refresh token) in your application. The process is similar to handling expired tokens which you would not bother to revoke.</p>\n\n<p>Revoking a token tells the authentication provider (Facebook, Google, ...) to revoke access to your application for the user the token belongs to. Considering access can be granted again, it does the signOut job but it is using a sledgehammer to crack a nut.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In my application, I implemented Google signout using jsapi.</p>\n\n<p>I used the url <a href=\"https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=xxxxxx\">https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=xxxxxx</a> to connect to Google and then <a href=\"https://www.googleapis.com/plus/v1/people/xxxxxx\">https://www.googleapis.com/plus/v1/people/xxxxxx</a> to get user data from google profile.</p>\n\n<p>Now I need to signout the user from Google while clicking a button from my application. How can I implement this in JavaScript, or at least it must ask the Google login page every time the user signs in.</p>\n\n<p>I have tried approval_prompt=force, but seems not to be working.</p>\n",
            "last_activity_date": 1420528191,
            "question_id": 12909332,
            "score": 20,
            "tags": [
                "javascript",
                "api",
                "oauth-2.0"
            ],
            "title": "How to Logout of an Application Where I Used OAuth2 To Login With Google?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I believe that if the div already has a paragraph tag inside it, and the user presses return while focus is inside that paragraph tag, then Firefox will insert another one. So, if you have this:</p>\n\n<pre><code>&lt;div contenteditable=\"true\"&gt;\n    &lt;p&gt;&amp;nbsp;&lt;/p&gt;\n    &lt;p&gt;&amp;nbsp;&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>and you focus, the press return, Firefox will insert a third paragraph.</p>\n\n<p>You might be able to get around having the <code>&amp; nbsp ;</code> in the paragraph tags by giving them minimum heights, and you might be able to get away with having only one. I never got to the bottom of the behaviour to my satisfaction the last time I looked at this. You'll probably need some JavaScript to enforce a minimum of one paragraph tag inside the div.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The following will add a <code>&lt;br&gt;</code> when the enter key is pressed in all major browsers and attempts to place the caret directly after it. However, WebKit, Opera and IE all have issues with placing the caret correctly after the <code>&lt;br&gt;</code>, which the following code does not attempt to correct.</p>\n\n<pre><code>function enterKeyPressHandler(evt) {\n    var sel, range, br, addedBr = false;\n    evt = evt || window.event;\n    var charCode = evt.which || evt.keyCode;\n    if (charCode == 13) {\n        if (typeof window.getSelection != \"undefined\") {\n            sel = window.getSelection();\n            if (sel.getRangeAt &amp;&amp; sel.rangeCount) {\n                range = sel.getRangeAt(0);\n                range.deleteContents();\n                br = document.createElement(\"br\");\n                range.insertNode(br);\n                range.setEndAfter(br);\n                range.setStartAfter(br);\n                sel.removeAllRanges();\n                sel.addRange(range);\n                addedBr = true;\n            }\n        } else if (typeof document.selection != \"undefined\") {\n            sel = document.selection;\n            if (sel.createRange) {\n                range = sel.createRange();\n                range.pasteHTML(\"&lt;br&gt;\");\n                range.select();\n                addedBr = true;\n            }\n        }\n\n        // If successful, prevent the browser's default handling of the keypress\n        if (addedBr) {\n            if (typeof evt.preventDefault != \"undefined\") {\n                evt.preventDefault();\n            } else {\n                evt.returnValue = false;\n            }\n        }\n    }\n}\n\nvar el = document.getElementById(\"your_editable_element\");\n\nif (typeof el.addEventListener != \"undefined\") {\n    el.addEventListener(\"keypress\", enterKeyPressHandler, false);\n} else if (typeof el.attachEvent != \"undefined\") {\n    el.attachEvent(\"onkeypress\", enterKeyPressHandler);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>If you prefer to be happy rather than chase bugs :-) it would be much better to try to make FF use p or div as well. Not just besause it turned out to be a majority vote :-) </p>\n\n<p>The reason is that br alone is borderline illegal if you look at a tag with XML eyes (it injects mixed data model - as in a text that's not guarded by a tag) and the thrend has been for years (by all browsers) towards full XML-ization.</p>\n\n<p>Depending on your actual app it might be worth to try to put a div with fully formed style and definitely with some initial content - if you saw pages where you see grayed-out text like \"type your comment here\" and it dissapears the second you click into it (or remians - that's a design decision).</p>\n\n<p>The reason for that part is that the semantics of \"contenteditable\" is \"it already has content => browser has enough info to know what to do\" so while browsers do their best to do something when faced with no content it makes the situation much more random.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Excellent references are located here on contenteditable.</p>\n\n<p><a href=\"http://blog.whatwg.org/the-road-to-html-5-contenteditable\">http://blog.whatwg.org/the-road-to-html-5-contenteditable</a></p>\n\n<p>Which leads to a really nice API here\n<a href=\"http://dev.opera.com/articles/view/rich-html-editing-in-the-browser-part-1/\">http://dev.opera.com/articles/view/rich-html-editing-in-the-browser-part-1/</a>\nhttp://dev.opera.com/articles/view/rich-html-editing-in-the-browser-part-2/</p>\n\n<p>If you're willing to take 30 minutes to an hour to read all this, you will absolutely not have to use some crappy third party editor like tinyMCE or ckeditor or whatever, you can build and customize it yourself and to be frank, it's easier AND faster to do it from scratch than to deal with all the cruft and unnecessary API of a third party WYSIWYG editor.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>As Douglas said earlier, browsers try to clone previous tag when customer starts a new paragraph on an editable page. The discrepancy occurs when browser has nothing to depart from - e.g. when initially the page body is empty. In this case different browsers behave differently: IE starts to wrap every string into &lt;p&gt; tag, Chrome wraps each line in &lt;div&gt;.</p>\n\n<p>To increase cross-browser experience, WebKit developers have introduced the <a href=\"https://bugs.webkit.org/show_bug.cgi?id=59961\">DefaultParagraphSeparator</a> command. You can use the following JavaScript on page loading for Chrome to change default paragraph separator to &lt;p&gt; tag:</p>\n\n<pre><code>document.execCommand('defaultParagraphSeparator', false, 'p');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>When pressing enter in <code>&lt;div contenteditable=\"true\"&gt; &lt;/div&gt;</code> in firefox <code>&lt;br /&gt;</code> is produced - that's ok. But in Chrome or IE a new <code>&lt;div&gt;</code> or <code>&lt;p&gt;</code> is created. What should I do to make Chrome and IE behave like Firefox .</p>\n",
            "last_activity_date": 1414587903,
            "question_id": 2735672,
            "score": 20,
            "tags": [
                "javascript",
                "javascript-events",
                "cross-browser",
                "contenteditable"
            ],
            "title": "how to change behavior of contenteditable blocks after on enter pressed in various browsers"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>In Firefox, Safari and Chrome, the onreadystatechange handler nevers gets called.</p>\n\n<p>I created a short test case, creating a dynamic script with only the onreadystatechange handler set:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" language=\"javascript\"&gt;\nbezen.log.info(new Date(),true);\nbezen.log.info(navigator.userAgent,true);\n\n// Activate logs\nbezen.log.on();\nbezen.log.info('Test for script.readyState behavior started');\n\nvar script = document.createElement('script');\nscript.src = 'test1.js';\nscript.onreadystatechange = function(){\n  bezen.log.info('readystatechange: '+script.readyState);\n};\ndocument.body.appendChild(script);\nbezen.log.info('Added script with onreadystatechange handler');\n&lt;/script&gt;\n</code></pre>\n\n<p>I performed the test on a local file in Firefox 2, Firefox 3, Firefox 3.5, Safari 3, Safari 4 and Chrome 3, and got similar results (here the logs recorded in FF 3.5):</p>\n\n<pre><code>Fri Dec 18 2009 17:53:58 GMT+0100\nMozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6\nTest for script.readyState behavior started\nAdded script with onreadystatechange handler\ntest1.js: Start\ntest1.js: Start of closure\ntest1.js: End of closure\n</code></pre>\n\n<p>The onreadystatechange never gets called. In these browsers, only the onload listener is useful to detect the end of a script loading, the onreadystatechange is not needed.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In Internet Explorer, the onreadystatechange handler fires as expected, after the end of the script.</p>\n\n<p>I performed the <a href=\"http://stackoverflow.com/questions/1929742/can-script-readystate-be-trusted-to-detect-the-end-of-dynamic-script-loading/1929790#1929790\">same test</a> in Internet Explorer 6, Internet Explorer 7 and Internet Explorer 8, with similar results in these three browsers (here the logs recorded in Internet Explorer 6):</p>\n\n<pre><code>Fri Dec 18 18:14:51 UTC+0100 2009\nMozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)\nTest for script.readyState behavior started\nAdded script with onreadystatechange handler\ntest1.js: Start\ntest1.js: Start of closure\ntest1.js: End of closure\nreadystatechange: complete\n</code></pre>\n\n<p>Here, with a test using a local file, the readyState is always \"complete\", and it was still the same after several page refresh.</p>\n\n<p>However, as noted in <a href=\"http://www.nczonline.net/blog/2009/06/23/loading-javascript-without-blocking/\" rel=\"nofollow\">this post by Nicholas C. Zakas</a>, you may also observe \"loaded\" and \"complete\", or just \"loaded\", under different circumstances.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In Opera, the script.readyState property cannot be trusted. For example, the readyState \"loaded\" may be fired before the script runs in Opera 9.64.</p>\n\n<p>I performed <a href=\"http://stackoverflow.com/questions/1929742/can-script-readystate-be-trusted-to-detect-the-end-of-dynamic-script-loading/1929790#1929790\">the same test</a> in Opera 9.64 and Opera 10, with different results.</p>\n\n<p>In Opera 9.64, the onreadystatechange handler gets fired twice, once before and once after the script runs. The readyState property is \"loaded\" in both cases, which means that this value cannot be trusted to detect the end of the script loading:</p>\n\n<pre><code>Fri Dec 18 2009 17:54:43 GMT+0100\nOpera/9.64 (Windows NT 5.1; U; en) Presto/2.1.1\nTest for script.readyState behavior started\nAdded script with onreadystatechange handler\nreadystatechange: loaded\ntest1.js: Start\ntest1.js: Start of closure\ntest1.js: End of closure\nreadystatechange: loaded\n</code></pre>\n\n<p>In Opera 10, the onreadystatechange handler still gets fired twice with the value \"loaded\", but both times after the script ran:</p>\n\n<pre><code>Fri Dec 18 2009 18:09:58 GMT+0100\nOpera/9.80 (Windows NT 5.1; U; en) Presto/2.2.15 Version/10.10\nTest for script.readyState behavior started\nAdded script with onreadystatechange handler\ntest1.js: Start\ntest1.js: Start of closure\ntest1.js: End of closure\nreadystatechange: loaded\nreadystatechange: loaded\n</code></pre>\n\n<p>These different behaviors indicate that onreadystatechange is not a reliable way to detect the end of a script loading in Opera. Since Opera also supports the onload listener, this other mechanism should be used instead.</p>\n\n<p>Based on the results of these tests, onreadystatechange should only be used to detect the end of script loading in Internet Explorer, and it should not be set in other browsers.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>I've found that internet explorer (testing in 9) DOESN'T ALWAYS have your script ready when readyState === 'loaded'.  I have had success using this event handler (in 9 of course) <strong>onactivate</strong>.  Was pulling my hair out before.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Similar results in Chrome.</p>\n\n<p>Doesn't take onready...</p>\n\n<p>Just onload and onerror.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I use dynamic script loading to reduce the duration of the initial page load. To ensure that the functions and objects defined by a script are accessible, I need to ensure that the script has been fully loaded.</p>\n\n<p>I have developed <a href=\"http://bezen.org/javascript\">my own Javascript library</a> to this end, and thus did quite a lot of research on the subject, studying how it's done in different libraries.\nDuring a discussion related to this issue, Kyle Simpson, the author of <a href=\"http://labjs.com/\">LABjs</a>, stated that:</p>\n\n<blockquote>\n  <p>LABjs (and many other loaders) set\n  both \"onload\" and \"onreadystatechange\"\n  on all script elements, knowing that\n  some browsers will fire one, and some\n  will fire the other...</p>\n</blockquote>\n\n<p>You can find an example of this in <a href=\"https://github.com/jquery/jquery/blob/1.3.2/src/ajax.js#L264\">the current version of jQuery as of this writing, v1.3.2</a>:</p>\n\n<pre><code>// Attach handlers for all browsers\nscript.onload = script.onreadystatechange = function(){\n    if ( !done &amp;&amp; (!this.readyState ||\n    this.readyState == \"loaded\" || this.readyState == \"complete\") ) {\n        done = true;\n        success();\n        complete();\n\n        // Handle memory leak in IE\n        script.onload = script.onreadystatechange = null;\n        head.removeChild( script );\n    }\n};\n</code></pre>\n\n<p>That's the state of the art, but during the analysis of a strange behavior in Opera 9.64, I came to the conclusion that, using this technique, the onload callback got fired too early.</p>\n\n<p>I will post my own findings in answer to this question, and would like to gather further evidence and feedback from the community.</p>\n",
            "last_activity_date": 1369904154,
            "question_id": 1929742,
            "score": 17,
            "tags": [
                "javascript",
                "scripting",
                "dynamic",
                "load",
                "labjs"
            ],
            "title": "Can script.readyState be trusted to detect the end of dynamic script loading?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Pixastic has a simple Javascript image editor (uses Canvas):</p>\n\n<p><a href=\"http://editor.pixastic.com\" rel=\"nofollow\">http://editor.pixastic.com</a></p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>If you develop your app using a full-featured JavaScript-based framework, like <a href=\"http://cappuccino.org/\" rel=\"nofollow\">Cappuccino</a> or <a href=\"http://sproutcore.com/\" rel=\"nofollow\">SproutCore</a>, this kind of lightweight image manipulation should be trivial to implement.</p>\n\n<p>If you want a bit more flexibility with the site implementation, go with a smaller library like <a href=\"http://jqueryui.com/\" rel=\"nofollow\">jQuery UI</a> or <a href=\"http://interface.eyecon.ro/\" rel=\"nofollow\">Interface Elements</a> (that's a very incomplete list - there are tons of similar libraries around).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This won't be a full answer, but should guide you. Ext-js has an object called Ext.Resizable, <a href=\"http://www.extjs.com/deploy/dev/docs/?class=Ext.Resizable\" rel=\"nofollow\">http://www.extjs.com/deploy/dev/docs/?class=Ext.Resizable</a>,  you can apply it to any node and it will add handles for resizing it. This is not present in their core (jsquery-like) distro, you need the full distribution.</p>\n\n<p>Rotating the images is quite more complicated as that is not supported in all browsers (webkit allows rotation through css). What I suggest is that you use a cross browser canvas library, like <a href=\"http://me.eae.net/projects/iecanvas/demo.html\" rel=\"nofollow\">http://me.eae.net/projects/iecanvas/demo.html</a>, that allows you to rotate images that are drawn on the canvas. However, you can't really combine the two that I've mentioned, I suggest you look at both of them for inspiration and roll out your own (unless somebody else finds a tool that does it already)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When it comes to transformations fabricJS looks very good: <a href=\"http://fabricjs.com/\" rel=\"nofollow\">http://fabricjs.com/</a></p>\n\n<p>For effects CarmanJS seems to give a lot of control: <a href=\"http://camanjs.com/examples/\" rel=\"nofollow\">http://camanjs.com/examples/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>My friend and I have plan to build a web shop. One of the shop's main feature is the ability for the customer to design their own stuff. My friend took <a href=\"http://www.polyvore.com/cgi/app\">polyvore website</a> as an example.</p>\n\n<p>The above link point to an editor page. In polyvore, the customer can drag and drop items from right-hand side to a 'canvas' in the left-hand side of the page. the image have simple handler for resizing, rotate and move.</p>\n\n<p>This is the main feature that we want to achieve. I want to know if there are any free javascript library out there that provide these functionality? We don't need too advance stuffs, because the goal is not making something like online Photoshop application. The polyvore editor is cover most of feature that we need.</p>\n\n<p>TIA</p>\n",
            "last_activity_date": 1396610636,
            "question_id": 1837921,
            "score": 16,
            "tags": [
                "javascript",
                "image",
                "plugins",
                "editor"
            ],
            "title": "Javascript image editor library"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>It seems like you've outlined the options pretty well:</p>\n\n<p><strong>If you want to work with local data, without involving a publicly accessible webserver</strong>, you'll need to use a javascript-based approach to parse the KML and load it onto the map. While this won't perfectly replicate the Google functionality, it is likely good enough for initial development if you only care about <em>displaying</em> the KML features. In this case, I'd probably set up a stub class, like this:</p>\n\n<pre><code>    // I'll assume you have a global namespace called MyProject\n    MyProject.LOCAL_KML = true;\n\n    MyProject.KmlLayer = function(url) {\n        // parse the KML, maybe caching an array of markers or polygons,\n        // using one of the libraries you list in your question\n    };\n\n    // now stub out the methods you care about, based on\n    // http://code.google.com/apis/maps/documentation/javascript/reference.html#KmlLayer\n    MyProject.KmlLayer.prototype.setMap = function(map) {\n        // add the markers and polygons to the map, or remove them if !map\n    }\n    // etc\n</code></pre>\n\n<p>Now either put a switch in the code, or comment/uncomment, or use a build script to switch, or whatever your current process is for switching between dev and production code:</p>\n\n<pre><code>    var kmlPath = \"/my.kml\";\n    var kmlLayer =  MyProject.LOCAL_KML ?\n        new MyProject.KmlLayer(MyProject.LOCAL_KML_HOST + kmlPath) :\n        new google.maps.KmlLayer(MyProject.PRODUCTION_KML_HOST + kmlPath);\n    kmlLayer.setMap(myMap);\n</code></pre>\n\n<p><strong>If, on the other hand, you need all of the functionality in the Google <code>KmlLayer</code></strong>, or you want to make sure things work with the production setup, or you don't want to bother stubbing out the functionality Google provides, then you'll need to upload it to a publicly available server, so that Google can do its server-side processing.</p>\n\n<p>Aside from the obvious options (FTP, a command-line script to upload your new KML file, etc), most of which require you to do something manually before you load your map page, you might consider building the update into the page you're loading. Depending on the platform you're using, this might be easier to do on the back-end or the front-end; the key would be to have a script on your public server that would allow the KML to be updated:</p>\n\n<ol>\n<li>Get KML string from request.POST</li>\n<li>Validate the KML string (just so you aren't opening your server to attacks)</li>\n<li>Write to a single file, e.g. \"my.kml\"</li>\n</ol>\n\n<p>Then, when you view your map page, update the remote KML based on the data from <code>localhost</code>. Here's a client-side version, using jQuery:</p>\n\n<pre><code>// again, you'd probably have a way to kill this block in production\nif (MyProject.UPDATE_KML_FROM_LOCALHOST) {\n    // get localhost KML\n    $.get(MyProject.LOCAL_KML_HOST + kmlPath, function(data) {\n        // now post it to the remote server\n        $.post(\n            MyProject.DEV_KML_HOST + '/update_kml.php', \n            { kml: data }, \n            function() {\n                // after the post completes, get the KML layer from Google\n                var kmlLayer new google.maps.KmlLayer(MyProject.DEV_KML_HOST + kmlPath);\n                kmlLayer.setMap(myMap);\n            }\n        );\n    })\n}\n</code></pre>\n\n<p>Admittedly, there are a lot of round-trips here (page -> localhost, page -> remote server, Google -> remote server, Google -> page), so this is going to be <em>slow</em>. But it would allow you to have Google's code properly render dynamic KML data produced on localhost, without having to take a separate manual step every time you reload the page.</p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>The Google Maps JavaScript version 3 API <a href=\"http://code.google.com/apis/maps/documentation/javascript/overlays.html#KMLLayers\">library documentation clearly explains</a>:</p>\n\n<blockquote>\n  <p>The Google Maps API supports the KML\n  and GeoRSS data formats for displaying\n  geographic information. These data\n  formats are displayed on a map using a\n  KmlLayer object, whose constructor\n  takes the URL of a <strong><em>publicly accessible</em></strong>\n  KML or GeoRSS file.</p>\n</blockquote>\n\n<p>There are even several Stack Overflow questions about how to load local data:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/q/3514785/61654\">Loading a local .kml file using google maps?</a></li>\n<li><a href=\"http://stackoverflow.com/q/3435566/61654\">Google Maps kml files</a></li>\n</ul>\n\n<p>Some of the answers have pointed to third party libraries which can parse KML locally without the file needing to be public:</p>\n\n<ul>\n<li><a href=\"http://code.google.com/p/geoxml3/\">geoxml3</a></li>\n<li><a href=\"http://www.dyasdesigns.com/geoxml/\">GeoXML</a></li>\n<li><a href=\"http://econym.org.uk/gmap/extensions.htm#EGeoXml\">EGeoXml</a></li>\n</ul>\n\n<p>And while these solutions are good if you have a need to keep your data private, I simply want to make development easier. When running locally I obviously cannot parse my KML and therefore lose functionality that I am trying to test. I've posted a single generic KML file on a publicly available site, but then have to have different development code to render one thing vs. something else when running for real.</p>\n\n<p>What are my options for local development to render what would be publicly available dynamically generated KML files?</p>\n",
            "last_activity_date": 1323566048,
            "question_id": 6092110,
            "score": 13,
            "tags": [
                "javascript",
                "google-maps",
                "localhost",
                "kml"
            ],
            "title": "Google Maps API and KML File LocalHost Development Options"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>when you hit on submit button, the page is sended to the server. \nIf you want to send it async, you can do it with ajax</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use ajax!</p>\n\n<p>Or you could include a hidden iframe on your page and set the target attribute of your form to point to that iframe.</p>\n\n<pre><code>&lt;style&gt;\n  .hide { position:absolute; top:-1px; left:-1px; width:1px; height:1px; }\n&lt;/style&gt;\n\n&lt;iframe name=\"hiddenFrame\" class=\"hide\"&gt;&lt;/iframe&gt;\n\n&lt;form action=\"receiver.pl\" method=\"post\" target=\"hiddenFrame\"&gt;\n  &lt;input name=\"signed\" type=\"checkbox\"&gt;\n  &lt;input value=\"Save\" type=\"submit\"&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>The easiest answer: jQuery. Do something like this:</p>\n\n<pre><code>$(document).ready(function(){\n   var $form = $('form');\n   $form.submit(function(){\n      $.post($(this).attr('action'), $(this).serialize(), function(response){\n            // do something here on success\n      },'json');\n      return false;\n   });\n});\n</code></pre>\n\n<p>If you want to add content dynamically and still need it to work, and also with more than one form, you can do this:</p>\n\n<pre><code>   $('form').live('submit', function(){\n      $.post($(this).attr('action'), $(this).serialize(), function(response){\n            // do something here on success\n      },'json');\n      return false;\n   });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>A little late, I know, but the HTTP/CGI way to do this would be for your program to return an HTTP status code of 204 (No Content).</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Just use: <code>action=\"\"</code>. There's no need for anything like javascript.</p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I have a form that looks like this</p>\n\n<pre><code>&lt;form action=\"receiver.pl\" method=\"post\"&gt;\n  &lt;input name=\"signed\" type=\"checkbox\"&gt;\n  &lt;input value=\"Save\" type=\"submit\"&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>and I would like to stay on the same page, when Submit is clicked, but still have <code>receiver.pl</code> executed.</p>\n\n<p>How should that be done?</p>\n",
            "last_activity_date": 1400303705,
            "question_id": 5733808,
            "score": 12,
            "tags": [
                "javascript",
                "html",
                "perl"
            ],
            "title": "Submit form and stay on same page?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Your best bet in that case would be to use a flash uploader. This would introduce a complete separate control and would have no dependency on the browser. There are plenty of them on the net. Here's one : <a href=\"http://swfupload.org/\" rel=\"nofollow\">http://swfupload.org/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If it's only the upload button you want to style, why can't you use CSS? That should work across all browsers. </p>\n\n<p>If you put your code on jsFiddle, I can tell you more about what you can do.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I can't remember the source of the technique but <a href=\"http://jsfiddle.net/CyPJJ/6/\">this</a> seems to be cross-browser. Tested in:</p>\n\n<ul>\n<li>Google Chrome 9</li>\n<li>FireFox 3.6</li>\n<li>Internet Explorer 6-9</li>\n<li>Opera 10</li>\n<li>Safari for Windows</li>\n</ul>\n\n<p>Here is the complete code:</p>\n\n<p>HTML:</p>\n\n<hr>\n\n<pre><code>&lt;div&gt;\n    &lt;button&gt;&lt;!-- this is skinnable --&gt;Pick a file ...&lt;/button&gt;\n    &lt;input type=\"file\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<hr>\n\n<pre><code>div\n{\n    position:relative;\n    width: 100px;\n    height: 30px;\n    overflow:hidden;\n}\n\ndiv button\n{\n    position: absolute;\n    width: 100%;\n    height: 100%;\n}\n\ndiv input\n{\n    font: 500px monospace; /* make the input's button HUGE */\n    opacity:0; /* this will make it transparent */\n    filter: alpha(opacity=0); /* transparency for Internet Explorer */\n    position: absolute;  /* making it absolute with z-index:1 will place it on top of the button */\n    z-index: 1;\n    top:0;\n    right:0;\n    padding:0;\n    margin: 0;\n}\n</code></pre>\n\n<p>The idea is to make the <code>&lt;input type=\"file\" /&gt;</code> transparent and place it on top of some style-able content (a <code>&lt;button&gt;</code> in this case). When the end user clicks the button she will actually click the <code>&lt;input type=\"file\" /&gt;</code>.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>The simple way to use a \"label\" tag and \"for\" property. Like this <a href=\"http://jsfiddle.net/Txrs6/\" rel=\"nofollow\">http://jsfiddle.net/Txrs6/</a> but in this case we don't see a chosen file.\nCODE</p>\n\n<pre><code>&lt;label for=\"inputFile\" class=\"col-sm-3\" style=\"padding-left: 0px;\"&gt;&lt;a class=\"btn btn-info\"&gt;\u0412\u044b\u0431\u0440\u0430\u0442\u044c...&lt;/a&gt;&lt;/label&gt;`\n\n&lt;input style=\"display: none;\" type=\"file\" id=\"inputFile\"&gt;\n</code></pre>\n\n<p>Another way with js <a href=\"http://jsfiddle.net/PZ5Ep/\" rel=\"nofollow\">http://jsfiddle.net/PZ5Ep/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to use <strong>uploadify</strong> to allow any user to select a file from the file dialogue and insert it into the file input element of a form? I only need to use uploadify as a way to style the \"upload button\" as an image.</p>\n\n<p>I have tried other approaches <a href=\"http://demo.mamuso.net/0002_jquery.prettyfile.html\">here</a>, <a href=\"http://www.wnas.nl/demo/inputfile/\">here</a> and <a href=\"http://www.appelsiini.net/projects/filestyle/demo.html\">here</a>. All are not compatible with all browsers.</p>\n\n<p>What else can I use / do to have my file input element as an image?</p>\n\n<p>I would like to have my file input button to look consistent in all browsers. </p>\n",
            "last_activity_date": 1383315829,
            "question_id": 5191375,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "file-upload",
                "uploadify"
            ],
            "title": "A file input button for all browsers, is this possible?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Check these out:</p>\n\n<p><a href=\"http://openalexandria.com/2010/10/qrcode-decode-javascript-read-qr-code-with-javascript\" rel=\"nofollow\">http://openalexandria.com/2010/10/qrcode-decode-javascript-read-qr-code-with-javascript</a> </p>\n\n<p><a href=\"http://pt.sourceforge.jp/projects/jpqr\" rel=\"nofollow\">http://pt.sourceforge.jp/projects/jpqr</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>See also this <a href=\"http://www.mobiledevelopersolutions.com/home/start/twominutetutorials/tmt3\">Tutorial</a> which shows how to make a PhoneGap app using the <a href=\"https://github.com/phonegap/phonegap-plugins/tree/master/Android/BarcodeScanner\">Barcode Scanner plugin</a> that uses the <a href=\"http://code.google.com/p/zxing/\">Zebra Crossing library</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><strong>UPDATE</strong> I finally put up my <a href=\"https://github.com/asbjornenge/jsqrcode-scanner\">demo</a> using jsqrcode. Try it <a href=\"http://www.asbjornenge.com/jsqrcode-scanner/\">here</a>.</p>\n\n<p>These <a href=\"http://www.webqr.com/\">http://www.webqr.com/</a> guys have actually ported the ZXing qrcode scanner to javascript <a href=\"https://github.com/LazarSoft/jsqrcode\">https://github.com/LazarSoft/jsqrcode</a> !!</p>\n\n<p>The only thing you need the flash thing for is to use the webcam (in their examples). The javascript decode and detection works on canvas elements.</p>\n\n<p>I'm currently using the HTML5 Camera API and the javascript bits from LazarSoft to detect and decode QR codes in the browser. Pure web :-D</p>\n\n<p>For desktop testing set the Enable MediaStream flag under chrome:flags, or get the camera bundled client from Opera Labs <a href=\"http://snapshot.opera.com/labs/camera/\">http://snapshot.opera.com/labs/camera/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This is the current go to library for barcode scanning:\n<a href=\"https://github.com/wildabeast/BarcodeScanner\" rel=\"nofollow\">https://github.com/wildabeast/BarcodeScanner</a></p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>This one looks nice. According with their own description:</p>\n\n<blockquote>\n  <p>Using Lazar Laszlo's port of ZXing Java library, QCodeDecoder brings\n  to the web a great interface for dealing with QRCode decoding, being\n  usable both on desktops and mobile phones.</p>\n</blockquote>\n\n<p>Demo: <a href=\"http://cirocosta.github.io/qcode-decoder/\" rel=\"nofollow\">http://cirocosta.github.io/qcode-decoder/</a></p>\n\n<p>Repository: <a href=\"https://github.com/cirocosta/qcode-decoder\" rel=\"nofollow\">https://github.com/cirocosta/qcode-decoder</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I wish to use QR codes in a <a href=\"http://www.phonegap.com/\" rel=\"nofollow\">PhoneGap</a>-based mobile app. There are several ways to <a href=\"http://stackoverflow.com/questions/4542632/qr-code-generation-library-in-javascript\">generate QR codes using javascript</a>. I'm using <a href=\"https://github.com/jeromeetienne/jquery-qrcode\" rel=\"nofollow\">Jerome Etienne's jquery-based solution</a>.</p>\n\n<p>I'm looking for a pure Javascript solution or a set of PhoneGap plugins for the <a href=\"http://www.phonegap.com/about/features\" rel=\"nofollow\">camera-enabled platforms</a> that will read QR encoded data in an image.</p>\n\n<p>So far all I've found is <a href=\"https://github.com/LazarSoft/jsqrcode\" rel=\"nofollow\">a demo by LazarSoft</a>. Are there any other solutions?</p>\n",
            "last_activity_date": 1423068874,
            "question_id": 7733975,
            "score": 11,
            "tags": [
                "javascript",
                "cordova",
                "qr-code"
            ],
            "title": "Javascript QR code reading libraries"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Both the code samples you demonstrated in your question make use of prototypal inheritance. In fact any object-oriented code you write in JavaScript is a paradigm of prototypal inheritance. JavaScript simply doesn't have classical inheritance. This should clear things up a bit:</p>\n\n<pre><code>                                   Inheritance\n                                        |\n                         +-----------------------------+\n                         |                             |\n                         v                             v\n                    Prototypal                     Classical\n                         |\n         +------------------------------+\n         |                              |\n         v                              v\nPrototypal Pattern             Constructor Pattern\n</code></pre>\n\n<p>As you can see prototypal inheritance and classical inheritance are two different paradigms of inheritance. Some languages like Self, Lua and JavaScript support prototypal inheritance. However most languages like C++, Java and C# support classical inheritance.</p>\n\n<hr>\n\n<h1>A Quick Overview of Object-Oriented Programming</h1>\n\n<p>Both prototypal inheritance and classical inheritance are object-oriented programming paradigms (i.e. they deal with objects). Objects are simply abstractions which encapsulate the properties of a real world entity (i.e. they represent real word things in the program). This is known as abstraction.</p>\n\n<p><strong>Abstraction:</strong> The representation of real world things in computer programs.</p>\n\n<p><em>Theoretically an abstraction is defined as \"a general concept formed by extracting common features from specific examples\". However for the sake of this explanation we're going to use the aforementioned definition instead.</em></p>\n\n<p>Now some objects have a lot of things in common. For example a mud bike and a Harley Davidson have a lot in common.</p>\n\n<p><strong>A mud bike:</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/Sk20o.jpg\" alt=\"A mud bike.\"></p>\n\n<p><strong>A Harley Davidson:</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/4hj6K.jpg\" alt=\"A Harley Davidson\"></p>\n\n<p>A mud bike and a Harley Davidson are both bikes. Hence a bike is a generalization of both a mud bike and a Harley Davidson.</p>\n\n<pre><code>                   Bike\n                     |\n    +---------------------------------+\n    |                                 |\n    v                                 v\nMud Bike                       Harley Davidson\n</code></pre>\n\n<p>In the above example the bike, the mud bike and the Harley Davidson are all abstractions. However the bike is a more general abstraction of the mud bike and the Harley Davidson (i.e. both the mud bike and the Harley Davidson are specific types of bikes).</p>\n\n<p><strong>Generalization:</strong> An abstraction of a more specific abstraction.</p>\n\n<p>In object-oriented programming we create objects (which are abstractions of real world entities) and we use either classes or prototypes to create generalizations of these objects. Generalizations are created via inheritance. A bike is a generalization of a mud bike. Hence mud bikes inherit from bikes.</p>\n\n<hr>\n\n<h1>Classical Object-Oriented Programming</h1>\n\n<p>In classical object-oriented programming we have two types of abstractions: classes and objects. An object, as mentioned before, is an abstraction of a real world entity. A class on the other hand is an abstraction of an object or another class (i.e. it's a generalization). For example, consider:</p>\n\n<pre><code>+----------------------+----------------+---------------------------------------+\n| Level of Abstraction | Name of Entity |                Comments               |\n+----------------------+----------------+---------------------------------------+\n| 0                    | John Doe       | Real World Entity.                    |\n| 1                    | johnDoe        | Variable holding object.              |\n| 2                    | Man            | Class of object johnDoe.              |\n| 3                    | Human          | Superclass of class Man.              |\n+----------------------+----------------+---------------------------------------+\n</code></pre>\n\n<p>As you can see in classical object-oriented programming languages objects are only abstractions (i.e. all objects have an abstraction level of 1) and classes are only generalizations (i.e. all classes have an abstraction level greater than 1).</p>\n\n<p>Objects in classical object-oriented programming languages can only be created by instantiating classes:</p>\n\n<pre><code>class Human {\n    // ...\n}\n\nclass Man extends Human {\n    // ...\n}\n\nMan johnDoe = new Man();\n</code></pre>\n\n<p>In summation in classical object-oriented programming languages objects are abstractions of real world entities and classes are generalizations (i.e. abstractions of either objects or other classes).</p>\n\n<p>Hence as the level of abstraction increases entities become more general and as the level of abstraction decreases entities become more specific. In this sense the level of abstraction is analogous to a scale ranging from more specific entities to more general entities.</p>\n\n<hr>\n\n<h1>Prototypal Object-Oriented Programming</h1>\n\n<p>Prototypal object-oriented programming languages are much simpler than classical object-oriented programming languages because in prototypal object-oriented programming we only have one type of abstraction (i.e. objects). For example, consider:</p>\n\n<pre><code>+----------------------+----------------+---------------------------------------+\n| Level of Abstraction | Name of Entity |                Comments               |\n+----------------------+----------------+---------------------------------------+\n| 0                    | John Doe       | Real World Entity.                    |\n| 1                    | johnDoe        | Variable holding object.              |\n| 2                    | man            | Prototype of object johnDoe.          |\n| 3                    | human          | Prototype of object man.              |\n+----------------------+----------------+---------------------------------------+\n</code></pre>\n\n<p>As you can see in prototypal object-oriented programming languages objects are abstractions of either real world entities (in which case they are simply called objects) or other objects (in which case they are called prototypes of those objects that they abstract). Hence a prototype is a generalization.</p>\n\n<p>Objects in prototypal object-oriented programming languages may be created either ex-nihilo (i.e. out of nothing) or from another object (which becomes the prototype of the newly created object):</p>\n\n<pre><code>var human = {};\nvar man = Object.create(human);\nvar johnDoe = Object.create(man);\n</code></pre>\n\n<p>In my humble opinion prototypal object-oriented programming languages are more powerful than classical object-oriented programming languages because:</p>\n\n<ol>\n<li>There is only one type of abstraction.</li>\n<li>Generalizations are simply objects.</li>\n</ol>\n\n<p>By now you must have realized the difference between classical inheritance and prototypal inheritance. Classical inheritance is limited to classes inheriting from other classes. However prototypal inheritance includes not only prototypes inheriting from other prototypes but also objects inheriting from prototypes.</p>\n\n<hr>\n\n<h1>Prototype-Class Isomorphism</h1>\n\n<p>You must have noticed that prototypes and classes are very similar. That's true. They are. In fact they are so similar that you can actually use prototypes to model classes:</p>\n\n<pre><code>function CLASS(base, body) {\n    if (arguments.length &lt; 2) body = base, base = Object.prototype;\n    var prototype = Object.create(base, {new: {value: create}});\n    return body.call(prototype, base), prototype;\n\n    function create() {\n        var self = Object.create(prototype);\n        return prototype.hasOwnProperty(\"constructor\") &amp;&amp;\n            prototype.constructor.apply(self, arguments), self;\n    }\n}\n</code></pre>\n\n<p>Using the above <code>CLASS</code> function you can create prototypes that look like classes:</p>\n\n<pre><code>var Human = CLASS(function () {\n    var milliseconds = 1\n      , seconds      = 1000 * milliseconds\n      , minutes      = 60 * seconds\n      , hours        = 60 * minutes\n      , days         = 24 * hours\n      , years        = 365.2425 * days;\n\n    this.constructor = function (name, sex, dob) {\n        this.name = name;\n        this.sex = sex;\n        this.dob = dob;\n    };\n\n    this.age = function () {\n        return Math.floor((new Date - this.dob) / years);\n    };\n});\n\nvar Man = CLASS(Human, function (Human) {\n    this.constructor = function (name, dob) {\n        Human.constructor.call(this, name, \"male\", dob);\n        if (this.age() &lt; 18) throw new Error(name + \" is a boy, not a man!\");\n    };\n});\n\nvar johnDoe = Man.new(\"John Doe\", new Date(1970, 0, 1));\n</code></pre>\n\n<p>The reverse is not true however (i.e. you can't use classes to model prototypes). This is because prototypes are objects but classes are not objects. They are an entirely different type of abstraction.</p>\n\n<hr>\n\n<h1>Conclusion</h1>\n\n<p>In summation we learned that an abstraction is a <em>\"a general concept formed by extracting common features from specific examples\"</em> and that generalization is <em>\"an abstraction of a more specific abstraction\"</em>. We also learned about the differences between prototypal and classical inheritance and how both of them are two faces of the same coin.</p>\n\n<p>On a parting note I would like to remark that there are two patterns of prototypal inheritance: the prototypal pattern and the constructor pattern. The prototypal pattern is the canonical pattern of prototypal inheritance whereas the constructor pattern is used to make prototypal inheritance look more like classical inheritance. Personally I prefer the prototypal pattern.</p>\n\n<p>P.S. I'm the guy who wrote the blog post \"<a href=\"http://aaditmshah.github.io/why-prototypal-inheritance-matters/\">Why Prototypal Inheritance Matters</a>\" and answered the question \"<a href=\"http://stackoverflow.com/questions/2800964/benefits-of-prototypal-inheritance-over-classical\">Benefits of prototypal inheritance over classical?</a>\". My answer is the accepted answer.</p>\n",
                    "is_accepted": true,
                    "score": 45
                }
            ],
            "body": "<p>I have googled so many links and can't get good idea about the difference between classical inheritance and prototypal inheritance?</p>\n\n<p>I have learned some things from these but I'm still confused about the concepts.</p>\n\n<ul>\n<li><p><a href=\"http://stackoverflow.com/questions/2800964/benefits-of-prototypal-inheritance-over-classical\">Benefits of prototypal inheritance over classical?</a></p></li>\n<li><p><a href=\"http://aaditmshah.github.io/why-prototypal-inheritance-matters/\">http://aaditmshah.github.io/why-prototypal-inheritance-matters/</a></p></li>\n</ul>\n\n<p><strong>Classical inheritance</strong> </p>\n\n<pre><code>/Shape - superclass\nfunction Shape() {\n  this.x = 0;\n  this.y = 0;\n}\n\n//superclass method\nShape.prototype.move = function(x, y) {\n    this.x += x;\n    this.y += y;\n    console.info(\"Shape moved.\");\n};\n\n// Rectangle - subclass\nfunction Rectangle() {\n  Shape.call(this); //call super constructor.\n}\n\n//subclass extends superclass\nRectangle.prototype = Object.create(Shape.prototype);\n</code></pre>\n\n<p>Does classical inheritance use prototypal inheritance inside?</p>\n\n<p><a href=\"http://aaditmshah.github.io/why-prototypal-inheritance-matters/\">http://aaditmshah.github.io/why-prototypal-inheritance-matters/</a></p>\n\n<p>From above link, I learned <strong>we can't add new methods at run time in classical inheritance</strong>. Is this correct? But you can check the above code <strong>I can add \"move\" method and any methods at run time through prototype</strong>. So this is prototype based classical inheritance? If so what is actual classical inheritance and prototype inheritance? I am confused about that.</p>\n\n<p><strong>Prototypal inheritance.</strong></p>\n\n<pre><code>function Circle(radius) {\n    this.radius = radius;\n}\nCircle.prototype.area = function () {\n    var radius = this.radius;\n    return Math.PI * radius * radius;\n};\nCircle.prototype.circumference: function () {\n    return 2 * Math.PI * this.radius;\n};\nvar circle = new Circle(5);\nvar circle2 = new Circle(10);\n</code></pre>\n\n<p>Is this similar to classical inheritance? I'm totally confused about what is prototypal inheritance? What is classical inheritance? Why is classical inheritance bad? </p>\n\n<p>Can you give me a simple example for better understanding these in a simple manner.</p>\n\n<p>Thanks,</p>\n\n<p>Siva</p>\n",
            "last_activity_date": 1423499235,
            "question_id": 19633762,
            "score": 10,
            "tags": [
                "javascript",
                "inheritance"
            ],
            "title": "classical inheritance vs protoypal inheritance in javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.jshint.com/docs/\">Read the docs</a> and search for <code>/*global</code></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>To avoid the not defined warning in jshint for the javascript add comments like:</p>\n\n<pre><code>/*global describe:true*/\n</code></pre>\n\n<p><a href=\"http://www.jshint.com/docs/options\">Options</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Just to expand a bit, here's a <code>.jshintrc</code> setup for Mocha:</p>\n\n<pre><code>{\n  ....\n  \"globals\"   : {\n    /* MOCHA */\n    \"describe\"   : false,\n    \"it\"         : false,\n    \"before\"     : false,\n    \"beforeEach\" : false,\n    \"after\"      : false,\n    \"afterEach\"  : false\n  }\n}\n</code></pre>\n\n<p>From the <a href=\"http://www.jshint.com/docs/\">JSHint Docs</a> - the false (the default) means the variable is read-only.</p>\n\n<p>If you are defining globals only for a specific file, you can do this:</p>\n\n<pre><code>/*global describe, it, before, beforeEach, after, afterEach */\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 105
                },
                {
                    "body": "<p>Add this in your .jshintrc</p>\n\n<pre><code>\"predef\" : [\"define\"]   // Custom globals for requirejs\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>late to the party, but use this option in your <code>jshintrc</code>:</p>\n\n<pre><code>\"dojo\": true\n</code></pre>\n\n<p>and thou shall rest peacefully without red warnings...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>jshint: {\n  options: {\n    mocha: true,\n  }\n}\n</code></pre>\n\n<p>is what you want</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I uses RequireJS AMD in my project. When i run jshint on my project, it throws error like</p>\n\n<p>In AMD Scripts</p>\n\n<pre><code> 'define' is not defined.\n</code></pre>\n\n<p>In Mocha test cases</p>\n\n<pre><code> 'describe' is not defined.\n 'it' is not defined.\n</code></pre>\n\n<p>How to remove this warning in jshint?</p>\n",
            "last_activity_date": 1420215032,
            "question_id": 16260779,
            "score": 60,
            "tags": [
                "javascript",
                "requirejs",
                "amd",
                "jshint"
            ],
            "title": "How to disable the warning &#39;define&#39; is not defined using JSHint and RequireJS"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Not really, at least not easily.</p>\n\n<p>In IE, you can debug the browser process with MS Script Debugger (which for some reason is an Office component) or Visual Studio, and then you can see the stack on breakpoints.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can't get the same level of detail in all browsers, but it's better than nothing:</p>\n\n<p><a href=\"http://eriwen.com/javascript/js-stack-trace/\">http://eriwen.com/javascript/js-stack-trace/</a></p>\n\n<p><strong>Updated</strong>: <a href=\"http://stacktracejs.com/\">stacktrace.js</a></p>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>Webkit now has functionality that provides stack traces:</p>\n\n<p><a href=\"http://www.webkit.org/blog/1544/web-inspector-understanding-stack-traces/\">Web Inspector: Understanding Stack Traces</a>, posted by Yury Semikhatsky on Wednesday, April 20th, 2011 at 7:32 am (webkit.org)</p>\n\n<p>From that post:</p>\n\n<p><img src=\"http://www.webkit.org/blog-files/inspector/stack-traces-img/4.png\"/></p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Place this line where you want to print the stack trace:</p>\n\n<pre><code>console.log(new Error().stack);\n</code></pre>\n\n<p><strong>Note:</strong> tested by me on <strong>Chrome 24</strong> and <strong>Firefox 18</strong></p>\n\n<p>This tool can be otherwise useful for debugging purposes:\n<a href=\"https://github.com/ebobby/tracing.js\">https://github.com/ebobby/tracing.js</a></p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>If you want the string stack trace, I'd go with insin's answer: <a href=\"http://stacktracejs.com/\" rel=\"nofollow\">stacktrace.js</a>. If you want to access the pieces of a stacktrace (line numbers, file names, etc) <a href=\"https://github.com/fresheneesz/stackinfo\" rel=\"nofollow\">stackinfo</a>, which actually uses stacktrace.js under the hood.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In Firefox I can get the stack trace of an exception by using <code>exception.stack</code>.</p>\n\n<p>Is there a way to get that in other browsers, too?</p>\n\n<p><b>Edit:</b> I actually want to save the stack trace automatically (if possible) and not debug it at the time (i.e. I know how to get the stack trace in a debugger).</p>\n",
            "last_activity_date": 1398326024,
            "question_id": 147891,
            "score": 53,
            "tags": [
                "javascript",
                "exception"
            ],
            "title": "Javascript exception stack trace"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There is the <a href=\"http://jsbeautifier.org/\" rel=\"nofollow\">http://jsbeautifier.org/</a> for online usage (<em>you need to copy/paste</em>).</p>\n\n<p>On that site they have a link to <a href=\"http://fiddler2.com/fiddler2/\" rel=\"nofollow\">fiddler</a> (<em>a web debugging proxy</em>) and a <a href=\"http://fiddler2.com/Fiddler2/extensions.asp\" rel=\"nofollow\">JavaScript Formatter</a> for it (<em>3rd extention</em>).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Some browsers have a <em>Pretty print</em> button that looks like this <code>{}</code> and it appears for HTML, JS, and/or CSS depending on the browser.</p>\n\n<p>Chrome has it in the in the <strong>Sources</strong> tab: </p>\n\n<p><img src=\"http://i.stack.imgur.com/eRuJV.png\" alt=\"Chrome 40 pretty print button\">  </p>\n\n<p>Firefox has it in the in the <strong>Debugger</strong> tab</p>\n\n<p><img src=\"http://i.stack.imgur.com/VAd5T.png\" alt=\"Firefox 35 prettify source button\">: </p>\n\n<p><em>The position of these buttons may change, but it should always be in there</em></p>\n",
                    "is_accepted": true,
                    "score": 147
                },
                {
                    "body": "<p>Isn't there the Pretty Print icon (looks like: { }), at least on Windows there is one, within the Scripts tab? </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>does anybody know whether Chrome Developer Tools can format javascripts into human readable form ? Some kind of beautifier would be handy. Let say that I'm using some JS library and I need to instantiate its object, so that I should know what to put into constructor. But searching through this huge library that has 4 lines in the Chrome Developer Tools user interface is quite annoying...</p>\n\n<p>Otherwise the server side needs to take care of implementing \"dev mode\" that supplies javascript files that are not minified ... </p>\n",
            "last_activity_date": 1423068219,
            "question_id": 4484407,
            "score": 51,
            "tags": [
                "javascript",
                "google-chrome-devtools"
            ],
            "title": "Human readable javascripts in chrome developer tools"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Most debugger consoles support displaying objects directly. Just use</p>\n\n<pre><code>console.log(obj);\n</code></pre>\n\n<p>Depending on your debugger this most likely will display the object in the console as a collapsed tree. You can open the tree and inspect the object.</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>try <code>console.dir()</code> instead of <code>console.log()</code></p>\n\n<pre><code>console.dir(obj);\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console.dir\">MDN</a> says <code>console.dir()</code> is supported by:</p>\n\n<ul>\n<li>FF8+</li>\n<li>IE9+</li>\n<li>Opera</li>\n<li>Chrome</li>\n<li>Safari</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>You know what JSON stands for?  <em>JavaScript Object Notation</em>.  It makes a pretty good format for objects.  </p>\n\n<p><code>JSON.stringify(obj)</code> will give you back a string representation of the object.</p>\n",
                    "is_accepted": false,
                    "score": 197
                },
                {
                    "body": "<p>Simple function to alert contents of an object or an array .<br>\nCall this function with an array or string or an object it alerts the contents.</p>\n\n<p><b>Function</b></p>\n\n<pre><code>function print_r(printthis, returnoutput) {\n    var output = '';\n\n    if($.isArray(printthis) || typeof(printthis) == 'object') {\n        for(var i in printthis) {\n            output += i + ' : ' + print_r(printthis[i], true) + '\\n';\n        }\n    }else {\n        output += printthis;\n    }\n    if(returnoutput &amp;&amp; returnoutput == true) {\n        return output;\n    }else {\n        alert(output);\n    }\n}\n</code></pre>\n\n<p><b>Usage</b></p>\n\n<pre><code>var data = [1, 2, 3, 4];\nprint_r(data);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've got a javascript object which has been JSON parsed using <code>JSON.parse</code> I now want to print the object so I can debug it (something is going wrong with the function). When I do the following...</p>\n\n<pre><code>for (property in obj) {\n    output += property + ': ' + obj[property]+'; ';\n}\nconsole.log(output);\n</code></pre>\n\n<p>I get multiple [object Object]'s listed. I'm wondering how would I print this in order to view the contents?</p>\n",
            "last_activity_date": 1384437368,
            "question_id": 4933217,
            "score": 46,
            "tags": [
                "javascript",
                "json",
                "parsing",
                "printing"
            ],
            "title": "Print JSON parsed object?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The <em>coffee-script</em> module registers its extension once required.</p>\n\n<pre><code>$ echo 'console.log \"works\"' &gt; module.coffee\n\n$ echo '\n&gt; require(\"coffee-script\")\n&gt; require(\"./module\")\n&gt; ' &gt; test.js\n\n$ node test.js\nworks\n\n$ node\n&gt; require('coffee-script'); require('./module')\nworks\n{}\n</code></pre>\n\n<p><strong>Edit</strong>: This behaviour has changed with the relase of CoffeeScript 1.7.0. Now you need to do:</p>\n\n<pre><code>require('coffee-script/register');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p>A more versatile solution would be to use <a href=\"https://github.com/olalonde/better-require\">better-require</a>.</p>\n\n<pre><code>npm install better-require\n</code></pre>\n\n<p>It lets you <code>require()</code> CoffeeScript files, no pre-compilation needed. (It also lets you <code>require()</code> a bunch of other file formats: CoffeeScript, clojurescript, yaml, xml, etc.) </p>\n\n<p>In the case of CoffeeScript, it simply requires the <code>coffee-script</code> module.</p>\n\n<pre><code>require('better-require')();\nvar myModule = require('./mymodule.coffee');\nvar clojurescriptModule = require('./mymodule.cljs');\n// etc.\n</code></pre>\n\n<p><strong>Disclosure:</strong> I wrote <code>better-require</code>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I'm using Node.js and wanting to incorporate CoffeeScript into my workflow. I have two use-cases:</p>\n\n<ol>\n<li>I want to be able to write JavaScript files which <code>require()</code> CoffeeScript modules</li>\n<li>I want to be able to load CoffeeScript modules from within the node REPL</li>\n</ol>\n\n<p><strong>For case #1:</strong> I can just compile from <code>.coffee</code> to <code>.js</code> and <code>require()</code> the <code>.js</code> module, as a workaround. </p>\n\n<p><strong>For case #2:</strong> Right now I'm <code>eval()</code>ing the output of <code>coffee-script.compile()</code>.</p>\n\n<p>Is there a better, more unified way to do this?</p>\n",
            "last_activity_date": 1392037501,
            "question_id": 4768748,
            "score": 41,
            "tags": [
                "javascript",
                "node.js",
                "coffeescript"
            ],
            "title": "require()&#39;ing a CoffeeScript file from a JavaScript file or REPL"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Ok, it seems like an issue that has been discovered.</p>\n\n<p>(apparently I should use key word \"Uncaught RangeError: Maximum call stack size exceeded\" instead of \"too much recursion\" :( )</p>\n\n<p>Here are the solutions.</p>\n\n<p><strong>1. modify the modal.js</strong></p>\n\n<p>in this post, <a href=\"https://github.com/twbs/bootstrap/pull/5022\">https://github.com/twbs/bootstrap/pull/5022</a></p>\n\n<p>@onassar bring up a solution</p>\n\n<blockquote>\n  <p>Follow up: for anyone working with bootstrap-modal v2.2.0, in the\n  enforceFocus method, commenting out that.$element.focus() seems to fix\n  the issue.</p>\n  \n  <p>The result of this is the modal's don't get focused upon (pfft, I can\n  do that myself :P), and thus, the multiple modals don't challenge\n  one-another for focus (which resulted in an infinite loop, and a\n  rangerror/recursive loop).</p>\n  \n  <p>Hope that helps :)</p>\n</blockquote>\n\n<p>I tried and it works. (<a href=\"http://plnkr.co/edit/DFLSei\">plunker</a>)</p>\n\n<p><strong>2. Use <a href=\"https://github.com/jschr/bootstrap-modal\">another plugin</a> to address this</strong> <a href=\"http://jschr.github.com/bootstrap-modal/\">Demo</a></p>\n\n<p>It seems like it works pretty well.</p>\n\n<p><strong>3. Wait for official solution.</strong></p>\n\n<p>In their <a href=\"https://github.com/twitter/bootstrap/wiki/Roadmap\">roadmap</a>, they do want to rewrite this modal plugin at some point.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p><strong>4. Or you could do the following when showing a new modal:</strong></p>\n\n<ol>\n<li>Hide any modal that is currently active</li>\n<li>Show the new modal</li>\n<li><p>When you close the new modal, show previously hidden modal(s)</p>\n\n<pre><code>var showModal = function ($dialog) {\n    var $currentModals = $('.modal.in');\n    if ($currentModals.length &gt; 0) { // if we have active modals\n        $currentModals.one('hidden', function () { \n            // when they've finished hiding\n            $dialog.modal('show');\n            $dialog.one('hidden', function () {\n                // when we close the dialog\n                $currentModals.modal('show');\n\n            });\n        }).modal('hide');\n    } else { // otherwise just simply show the modal\n        $dialog.modal('show');\n    }\n};\n</code></pre></li>\n</ol>\n\n<p>Note: I use <code>$.one</code> to only have the listener applied once and not to care about <code>bind</code>/<code>unbind</code> (<code>on</code>/<code>off</code>)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can apply the first solution of maxisam answer, without modifying bootstrap files (if you can not, or don't want to).</p>\n\n<p>Just write this line somewhere after bootstrap files have been included.</p>\n\n<pre><code>$.fn.modal.Constructor.prototype.enforceFocus = function () {};\n</code></pre>\n\n<p><strong>Note:</strong> This has been tested with Bootstrap 2 only, not with Bootstrap 3.</p>\n",
                    "is_accepted": false,
                    "score": 55
                },
                {
                    "body": "<p>I solved this using a stack.</p>\n\n<pre><code>var openmodals = [];\n$(function(){\n  var ts = new Date().getTime();\n  $(\"div.modal\").each(function( d ) {\n    ts++;\n    $( this ).data( \"uid\", ts );\n  });\n\n  // after closing &gt; 1 level modals we want to reopen the previous level modal\n  $('div.modal').on('show', function ( d ) {\n    openmodals.push({ 'id' : $( this ).data( \"uid\" ), 'el' : this });\n    if( openmodals.length &gt; 1 ){\n        $( openmodals[ openmodals.length - 2 ].el ).modal('hide');\n    }\n  });\n  $('div.modal').on('hide', function ( d ) {\n    if( openmodals.length &gt; 1 ){\n        if( openmodals[ openmodals.length - 1 ].id == $( this ).data( \"uid\" ) ){\n            openmodals.pop(); // pop current modal \n            $( openmodals.pop().el ).modal('show'); // pop previous modal and show, will be pushed on show \n        }\n    } else if( openmodals.length &gt; 0 ){\n        openmodals.pop(); // last modal closing, empty the stack\n    } \n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>SmartLove's answer unfortunately falls short; if you're going to no-op <code>$.fn.modal.Constructor.prototype.enforceFocus</code>, you should reset it when your modal closes; the following is directly from our code, about which I have <em>no qualms</em> putting into production:</p>\n\n<pre><code>// Since confModal is essentially a nested modal it's enforceFocus method\n// must be no-op'd or the following error results \n// \"Uncaught RangeError: Maximum call stack size exceeded\"\n// But then when the nested modal is hidden we reset modal.enforceFocus\nvar enforceModalFocusFn = $.fn.modal.Constructor.prototype.enforceFocus;\n\n$.fn.modal.Constructor.prototype.enforceFocus = function() {};\n\n$confModal.on('hidden', function() {\n    $.fn.modal.Constructor.prototype.enforceFocus = enforceModalFocusFn;\n});\n\n$confModal.modal({ backdrop : false });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I try to have a modal inside another modal. However, I got an error like \"too much recursion\" in firefox.</p>\n\n<p>I used the latest jQuery and Twitterbootstrap but still have this problem.</p>\n\n<p>Here is the <a href=\"http://plnkr.co/edit/aC74s8\">plunker</a> that shows the error</p>\n\n<p>You can find \"Uncaught RangeError: Maximum call stack size exceeded\" or \"too much recursion\"</p>\n\n<p>error in console</p>\n\n<p>Anyone knows how to fix it ? Thanks</p>\n",
            "last_activity_date": 1384112358,
            "question_id": 13649459,
            "score": 40,
            "tags": [
                "javascript",
                "jquery",
                "twitter-bootstrap"
            ],
            "title": "Twitter bootstrap multiple modal error"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I did fixed it with datejs </p>\n\n<p>This is alerting the first day:  </p>\n\n<pre><code>var fd = Date.today().clearTime().moveToFirstDayOfMonth();\nvar firstday = fd.toString(\"MM/dd/yyyy\");\nalert(firstday);\n</code></pre>\n\n<p>This is for last day:</p>\n\n<pre><code>var ld = Date.today().clearTime().moveToLastDayOfMonth();\nvar lastday = ld.toString(\"MM/dd/yyyy\");\nalert(lastday);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Very simple, no library required:</p>\n\n<pre><code>var date = new Date();\nvar firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\nvar lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n</code></pre>\n\n<p>or you might prefer:</p>\n\n<pre><code>var date = new Date(), y = date.getFullYear(), m = date.getMonth();\nvar firstDay = new Date(y, m, 1);\nvar lastDay = new Date(y, m + 1, 0);\n</code></pre>\n\n<h3>EDIT</h3>\n\n<p>Some browsers will treat two digit years as being in the 20th century, so that:</p>\n\n<pre><code>new Date(14, 0, 1);\n</code></pre>\n\n<p>gives 1 January, 1914. To avoid that, create a Date then set its values using <em>setFullYear</em>:</p>\n\n<pre><code>var date = new Date();\ndate.setFullYear(14, 0, 1); // 1 January, 14\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 147
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/222309/calculate-last-day-of-month-in-javascript\">Calculate last day of month in javascript</a><br>\n  <a href=\"http://stackoverflow.com/questions/315760/what-is-the-best-way-to-determine-the-number-of-days-in-a-month-with-javascript\">What is the best way to determine the number of days in a month with javascript?</a>  </p>\n</blockquote>\n\n\n\n<p>As title says, i'm stuck on finding a way to get the first and last date of the current month with javascript or jquery, and format it as:</p>\n\n<p>For example, for november it should be :</p>\n\n<pre><code>var firstdate = '11/01/2012';\nvar lastdate = '11/30/2012';\n</code></pre>\n\n<p>Thanks in advance!</p>\n",
            "last_activity_date": 1398899840,
            "question_id": 13571700,
            "score": 40,
            "tags": [
                "javascript",
                "jquery",
                "date",
                "time"
            ],
            "title": "Get first and last date of current month with javascript or jquery"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Just wrap the modal you want to call on page load inside a jQuery <code>load</code> event on the head section of your document and it should popup, like so:</p>\n\n<p><strong>JS</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $(window).load(function(){\n        $('#myModal').modal('show');\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div class=\"modal hide fade\" id=\"myModal\"&gt;\n  &lt;div class=\"modal-header\"&gt;\n    &lt;a class=\"close\" data-dismiss=\"modal\"&gt;\u00d7&lt;/a&gt;\n    &lt;h3&gt;Modal header&lt;/h3&gt;\n  &lt;/div&gt;\n  &lt;div class=\"modal-body\"&gt;\n    &lt;p&gt;One fine body\u2026&lt;/p&gt;\n  &lt;/div&gt;\n  &lt;div class=\"modal-footer\"&gt;\n    &lt;a href=\"#\" class=\"btn\"&gt;Close&lt;/a&gt;\n    &lt;a href=\"#\" class=\"btn btn-primary\"&gt;Save changes&lt;/a&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>You can still call the modal within your page with by calling it with a link like so:</p>\n\n<pre><code>&lt;a class=\"btn\" data-toggle=\"modal\" href=\"#myModal\" &gt;Launch Modal&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 83
                },
                {
                    "body": "<pre><code>&lt;div id=\"ModalStart\" class=\"modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\"&gt;\n    &lt;div class=\"modal-body\"&gt;\n          &lt;p&gt;&lt;i class=\"icon-spinner icon-spin icon-4x\"&gt;&lt;/i&gt;&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>You can show it on start even without Javascript. Just delete the class \"hide\".</p>\n\n<pre><code>class=\"Modal\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You don't need <code>javascript</code> to show modal</p>\n\n<p>The simplest way is replace \"hide\" by \"in\"</p>\n\n<pre><code>class=\"modal fade hide\"\n</code></pre>\n\n<p>so</p>\n\n<pre><code>class=\"modal fade in\"\n</code></pre>\n\n<p>and you need add <code>onclick = \"$('.modal').hide()\"</code> on button close;</p>\n\n<p>PS: I think the best way is add jQuery script:</p>\n\n<pre><code>$('.modal').modal('show');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>just add the folowing</p>\n\n<pre><code>class=\"modal show\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>regarding what Andre's Ilich say you have to add\nthe js script\nafter the line in what you call the jquery:</p>\n\n<pre><code>&lt;script src=\"content/bootstrapJS/jquery-2.1.1.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n\n      &lt;script type=\"text/javascript\"&gt;\n            $(window).load(function(){\n                $('#myModal').modal('show');\n            });\n        &lt;/script&gt;\n</code></pre>\n\n<p>in my case that was the problem hope it helps</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<blockquote>\n  <p>class=\"modal show\"</p>\n</blockquote>\n\n<p>works and this is probably the easiest way :-)</p>\n\n<p>thanks gaurav-mahale <a href=\"http://stackoverflow.com/users/2260991/gaurav-mahale\">http://stackoverflow.com/users/2260991/gaurav-mahale</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In bootstrap 3 you just need to initialise the modal through js and if in the moment of the page load the modal markup is in the page the modal will show up.</p>\n\n<p>In case you want to prevent this, use the option <code>show: false</code> where you initialise the modal. Something like this:\n<code>$('.modal').modal({ show: false })</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In my case adding jQuery to display the modal didn't work:</p>\n\n<pre><code>$(document).ready(function() {\n    $('#myModal').modal('show');\n}\n</code></pre>\n\n<p>Which seemed to be because the modal had attribute aria-hidden=\"true\":</p>\n\n<pre><code>&lt;div class=\"modal fade\" aria-hidden=\"true\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"&gt;\n</code></pre>\n\n<p>Removing that attribute was needed as well as the jQuery above:</p>\n\n<pre><code>&lt;div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"&gt;\n</code></pre>\n\n<p>Note that I tried adding changing the modal classes from \"modal fade\" to \"modal fade in\", and that didn't work. Also, changing the classes from \"modal fade\" to \"modal show\" stopped the modal from being able to be closed.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I dont know javascript at all, the bootstrap documentation says to </p>\n\n<blockquote>\n  <p>Call the modal via javascript: $('#myModal').modal(options)</p>\n</blockquote>\n\n<p>I have no clue ho to call this on a page load, Using the supplied code on the bootstrap page I can successfully call the Modal on an element click but I want it to load immediately on a page load.</p>\n",
            "last_activity_date": 1423693768,
            "question_id": 10233550,
            "score": 37,
            "tags": [
                "javascript",
                "html5",
                "twitter-bootstrap"
            ],
            "title": "Launch Bootstrap Modal on page load"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>$(element).on(\"click mousedown mouseup focus blur keydown change\",function(e){\n     console.log(e);\n});\n</code></pre>\n\n<p>That will get you a lot (but not all) of the information on if an event is fired... other than manually coding it like this, I can't think of any other way to do that.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Just add this to the page and no other worries, will handle rest for you:</p>\n\n<pre><code>$('input').live('click mousedown mouseup focus keydown change blur', function(e) {\n     console.log(e);\n});\n</code></pre>\n\n<p>You can also use console.log('Input event:' + e.type) to make it easier.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is a nice generic way using the .data('events') collection:</p>\n\n<pre><code>function getEventsList($obj) {\n    var ev = new Array(),\n        events = $obj.data('events'),\n        i;\n    for(i in events) { ev.push(i); }\n    return ev.join(' ');\n}\n\n$obj.on(getEventsList($obj), function(e) {\n    console.log(e);\n});\n</code></pre>\n\n<p>This logs every event that has been already bound to the element by a plugin or so the moment this specific event gets fired. This code was pretty damn helpful for me many times.</p>\n\n<p>Btw: If you want to see every possible event being fired on an object use firebug: just right click on the DOM element in html tab and check \"Log Events\". Every event then gets logged to the console (this is sometimes a bit annoying because it logs every mouse movement...).</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I know the answer has already been accepted to this, but I think there might be a slightly more reliable way where you don't necessarily have to know the name of the event beforehand. This only works for native events though as far as I know, not custom ones that have been created by plugins. I opted to omit the use of jQuery to simplify things a little.</p>\n\n<pre><code>var input = document.getElementById('inputId');\nObject.getOwnPropertyNames(input).filter(function(key){\n  return key.slice(0,2)=='on';\n}).map(function(key){\n  return key.slice(2);\n}).forEach(function(eventName){\n  input.addEventListener(eventName, function(event){\n    console.log(event.type);\n    console.log(event);\n  });\n});\n</code></pre>\n\n<p>I hope this helps anyone who reads this.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>So I saw another <a href=\"http://stackoverflow.com/questions/3489433/listen-to-all-javascript-events#answer-3489468\">question here</a> that was similar, so another suggestion would be to do the following:</p>\n\n<pre><code>monitorEvents(document.getElementById('inputId'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have no idea why no-one uses this... (maybe because it's only a webkit thing)</p>\n\n<p>Open console:</p>\n\n<pre><code>monitorEvents(document.body); // logs all events on the body\n\nmonitorEvents(document.body, 'mouse'); // logs mouse events on the body\n\nmonitorEvents(document.body.querySelectorAll('input')); // logs all events on inputs\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<pre><code>$('body').on(\"click mousedown mouseup focus blur keydown change mouseup click dblclick mousemove mouseover mouseout mousewheel keydown keyup keypress textInput touchstart touchmove touchend touchcancel resize scroll zoom focus blur select change submit reset\",function(e){\n     console.log(e);\n}); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'd like to see all the events fired by an <strong>input field</strong> as a user interacts with it. This includes stuff like:</p>\n\n<ol>\n<li>Clicking on it.</li>\n<li>Clicking off it.</li>\n<li>Tabbing into it.</li>\n<li>Tabbing away from it.</li>\n<li>Ctrl+C and Ctrl+V on the keyboard.</li>\n<li>Right click -> Paste.</li>\n<li>Right click -> Cut.</li>\n<li>Right click -> Copy.</li>\n<li>Dragging and dropping text from another application.</li>\n<li>Modifying it with Javascript.</li>\n<li>Modifying it with a debug tool, like Firebug.</li>\n</ol>\n\n<p>I'd like to display it using <code>console.log</code>. Is this possible in Javascript/jQuery, and if so, how do I do it?</p>\n",
            "last_activity_date": 1421611794,
            "question_id": 7439570,
            "score": 35,
            "tags": [
                "javascript",
                "events",
                "javascript-events",
                "jquery"
            ],
            "title": "How do you log all events fired by an element in jQuery?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>That issue can be caused by an extension that isn't working properly.</p>\n\n<p>Start Firefox in Troubleshoot Firefox issues using Safe Mode to check if one of the extensions or if hardware acceleration is causing the problem (switch to the DEFAULT theme: Firefox/Tools > Add-ons > Appearance/Themes).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Something is likely wrong with your Iframe url constructor. The error is being thrown in a youtube script that loads in the Iframe. The same error gets thrown with a harcoded html Iframe that isn't dynamically added with your script</p>\n\n<pre><code>&lt;iframe width=\"390\" height=\"315\" src=\"http://www.youtube.com/embed/UNMLEZrukRU\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;\n</code></pre>\n\n<p>HTML version only demo  <a href=\"http://jsfiddle.net/Lgt5f/\" rel=\"nofollow\">http://jsfiddle.net/Lgt5f/</a></p>\n\n<p>Double check the url isn't missing a parameter , otherwise I would check youtube support resources</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The error can either be fixed by Adobe's Flash Player team, or by the Google engineers - you should just ignore it for now. It's connected to Flash Player security settings and the SWF file embedded into the Youtube page. The problem has been <a href=\"http://www-01.ibm.com/support/docview.wss?uid=swg21370430\">reported in the past by IBM</a>, and there is a <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=434522\">Mozilla Bugzilla entry</a> as well.</p>\n\n<p>When I deactivate Flash Player in Firefox 16.0.2, the error message disappears. Check comment #37: <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=434522#c37\">https://bugzilla.mozilla.org/show_bug.cgi?id=434522#c37</a></p>\n\n<blockquote>\n  <p>For what it's worth, I'm seeing this bug happen when <em>any</em> flash file,\n  even ones that have NO actionscript calls (ExternalInterface, etc) in\n  them at all, is loaded into an iframe on a page where the page domain\n  and the iframe domain are different.  This means that the iframe\n  problem is caused when there is in fact a cross-domain situation in\n  place.  However, it's not totally clear if there's really actually\n  attempting to be a cross-domain call that <em>should</em> be prevented and\n  error'd out.</p>\n  \n  <p>Because it's nothing that the flash SWF itself is trying to call to do\n  \"Location.toString\", and it's nothing about the javascript on the page\n  doing it, the only choice is that there's something about the flash\n  plugin itself (9.0.124 is what I'm testing with) that's trying to make\n  that call up to the parent/top window to do Location.toString().</p>\n</blockquote>\n\n<p>While the bug is marked as resolved, the test case attached <a href=\"https://bug434522.bugzilla.mozilla.org/attachment.cgi?id=321956\">https://bug434522.bugzilla.mozilla.org/attachment.cgi?id=321956</a> produces the same error message in the latest Firefox version (both in the Firebug console, or the Firefox Error Console window).</p>\n\n<p><strong>Update:</strong><br>\nThe bug has been filed with Adobe as well in the old bug database: <a href=\"http://bugs.adobe.com/jira/browse/FP-561\">FP-561  \"Location.toString\" uncaught (security) exception caused by improper Flash plugin behavior</a> (you need an account to see the bug details). The last comment there when the bug was closed:</p>\n\n<blockquote>\n  <p>Tested with the latest Flash Player 10.3.181.34 on Firefox 4 and 5, no\n  such exception was thrown. So the bug may have been fixed, right? If\n  you still meet this issue, please file a bug in our new bug system\n  <a href=\"https://bugbase.adobe.com/\">https://bugbase.adobe.com/</a> and put a link in the new bug to this\n  original JIRA report. We are happy to follow up your report in the new\n  bug system.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>Ignore that error, it's not related to your code. Just a browser bug.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Don't ignore this error just because its not related directly to your code.</p>\n\n<p>It seems to occur when your embed is initialy hidden. </p>\n\n<p>Just add <code>?html5=1</code> to your embed url. IE8 will still take flash version. or load your video with the Youtube api.</p>\n",
                    "is_accepted": false,
                    "score": 32
                }
            ],
            "body": "<p>I have this code and this error in FireBug:</p>\n\n<blockquote>\n  <p>Error: Permission denied to access property 'toString'</p>\n</blockquote>\n\n<p>How can i fix this error?</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"yturl\"&gt;http://www.youtube.com/watch?v=UNMLEZrukRU&lt;/div&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>$(\"div.yturl\").each(function(){\n    var regex = /(\\?v=|\\&amp;v=|\\/\\d\\/|\\/embed\\/|\\/v\\/|\\.be\\/)([a-zA-Z0-9\\-\\_]+)/;\n    var youtubeurl = $(this).text();\n    var regexyoutubeurl = youtubeurl.match(regex);\n    if (regexyoutubeurl) \n    {\n         $(this).html(\"&lt;iframe width=\\\"390\\\" height=\\\"315\\\" src=\\\"http://www.youtube.com/embed/\"+regexyoutubeurl[2]+\"\\\" frameborder=\\\"0\\\" allowfullscreen&gt;&lt;/iframe&gt;\");\n    }\n});\n</code></pre>\n\n<p><strong>DEMO:</strong> <a href=\"http://jsfiddle.net/9e48p/\">http://jsfiddle.net/9e48p/</a></p>\n",
            "last_activity_date": 1424267384,
            "question_id": 13100611,
            "score": 34,
            "tags": [
                "javascript",
                "jquery",
                "youtube"
            ],
            "title": "Replace url from youtube to embed code - Error: Permission denied to access property &#39;toString&#39;"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Put this at the top of the file:</p>\n\n<pre><code>var console = {};\nconsole.log = function(){};\n</code></pre>\n\n<p>For some browsers and minifiers, you may need to apply this onto the window object.</p>\n\n<pre><code>window.console = console;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 78
                },
                {
                    "body": "<pre><code>console.log = function(){};\n</code></pre>\n\n<p>Override it like any other thing.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Just remember that with this method each console.log call will still do a call to a (empty) function causing overhead, if there are 100 console.log commands, you are still doing 100 calls to a blank function. </p>\n\n<p>Not sure how much overhead this would cause, but there will be some, it would be preferable to have a flag to turn debug on then use something along the lines of:</p>\n\n<pre><code>var debug=true; if (debug) console.log('blah')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It would be super useful to be able to toggle logging in the production build. The code below turns the logger off by default.</p>\n\n<p>When I need to see logs, I just type <code>debug(true)</code> into the console.</p>\n\n<pre><code>var consoleHolder = console;\nfunction debug(bool){\n    if(!bool){\n        consoleHolder = console;\n        console = {};\n        console.log = function(){};\n    }else\n        console = consoleHolder;\n}\ndebug(false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You can look into <code>UglifyJS</code>: <a href=\"http://jstarrdewar.com/blog/2013/02/28/use-uglify-to-automatically-strip-debug-messages-from-your-javascript/\" rel=\"nofollow\">http://jstarrdewar.com/blog/2013/02/28/use-uglify-to-automatically-strip-debug-messages-from-your-javascript/</a>, <a href=\"https://github.com/mishoo/UglifyJS\" rel=\"nofollow\">https://github.com/mishoo/UglifyJS</a>\nI haven't tried it yet.</p>\n\n<p>Quoting,</p>\n\n<pre><code> if (typeof DEBUG === 'undefined') DEBUG = true; // will be removed\n\n function doSomethingCool() {\n     DEBUG &amp;&amp; console.log(\"something cool just happened\"); // will be removed }\n</code></pre>\n\n<blockquote>\n  <p>...The log message line will be removed by Uglify's dead-code remover\n  (since it will erase any conditional that will always evaluate to\n  false). So will that first conditional. But when you are testing as\n  uncompressed code, DEBUG will start out undefined, the first\n  conditional will set it to true, and all your console.log() messages\n  will work.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could also use regex to delete all the console.log() calls in your code if they're no longer required. Any decent IDE will allow you to search and replace these across an entire project, and allow you to preview the matches before committing the change. </p>\n\n<pre><code>\\s*console\\.log\\([^)]+\\);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I use something similar to what posit labs does. Save the console in a closure and you have it all in one portable function.</p>\n\n<pre><code>var GlobalDebug = (function () {\n    var savedConsole = console;\n    return function(debugOn,suppressAll){\n        var suppress = suppressAll || false;\n        if (debugOn === false) {\n            console = {};\n            console.log = function () { };\n            if(suppress) {\n                console.info = function () { };\n                console.warn = function () { };\n                console.error = function () { };\n            } else {\n                console.info = savedConsole.info;\n                console.warn = savedConsole.warn;\n                console.error = savedConsole.error;              \n            }\n        } else {\n            console = savedConsole;\n        }\n    }\n})();\n</code></pre>\n\n<p>Just do globalDebug(false) to toggle log messages off or globalDebug(false,true) to remove all console messages.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Theres no a reason to let all that console.log all over your project in prod enviroment... If you want to do it on the proper way, add <a href=\"https://github.com/mishoo/UglifyJS2\" rel=\"nofollow\">UglifyJS2</a> to your deployment process using \"drop_console\" option.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I would recommend using: <a href=\"https://github.com/sunnykgupta/jsLogger\" rel=\"nofollow\">https://github.com/sunnykgupta/jsLogger</a></p>\n\n<p><strong>Features:</strong></p>\n\n<ol>\n<li>It safely overrides the console.log.</li>\n<li>Takes care if the console is not available (oh yes, you need to factor that too.)</li>\n<li>Stores all logs (even if they are suppressed) for later retrieval.</li>\n<li>Handles major console functions like <code>log</code>, <code>warn</code>, <code>error</code>, <code>info</code>.</li>\n</ol>\n\n<p>Is open for modifications and will be updated whenever new suggestions come up.</p>\n\n<p><strong>Disclaimer:</strong> I am the author of the plugin.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>After read a lot of posts, I made my own solution as follow:</p>\n\n<p><strong>SCRIPT:</strong></p>\n\n<pre><code>function extendConsole() {\n    \"use strict\";\n    try {\n        var disabledConsoles = {};\n\n        console.enable = function (level, enabled) {\n            // Prevent errors in browsers without console[level]\n            if (window.console === 'undefined' || !window.console || window.console === null) {\n                window.console = {};\n            }\n            if (window.console[level] === 'undefined' || !window.console[level] || window.console[level] == null) {\n                window.console[level] = function() {};\n            }\n\n            if (enabled) {\n                if (disabledConsoles[level]) {\n                    window.console[level] = disabledConsoles[level];\n                }\n                console.info(\"console.\" + level + \"() was enabled.\");\n            } else {\n                disabledConsoles[level] = window.console[level];\n                window.console[level] = function () { };\n                console.info(\"console.\" + level + \"() was disabled.\");\n            }\n        };\n    } catch (exception) {\n        console.error(\"extendConsole() threw an exception.\");\n        console.debug(exception);\n    }\n}\n</code></pre>\n\n<p><strong>USAGE:</strong></p>\n\n<pre><code>extendConsole();\nconsole.enable(\"debug\", window.debugMode);\n</code></pre>\n\n<p><strong>EXAMPLE:</strong></p>\n\n<p><a href=\"http://jsfiddle.net/rodolphobrock/2rzxb5bo/10/\" rel=\"nofollow\">http://jsfiddle.net/rodolphobrock/2rzxb5bo/10/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is what I did</p>\n\n<pre><code>    var domainNames =[\"fiddle.jshell.net\"]; // we replace this by our production domain.\n\nvar logger = {\n    force:false,\n    original:null,\n    log:function(obj)\n    {\n        var hostName = window.location.hostname;\n        if(domainNames.indexOf(hostName) &gt; -1)\n        {\n            if(window.myLogger.force === true)\n            {\n                window.myLogger.original.apply(this,arguments);\n            }\n        }else {\n            window.myLogger.original.apply(this,arguments);\n        }\n    },\n    forceLogging:function(force){\n        window.myLogger.force = force;\n    },\n    original:function(){\n        return window.myLogger.original;\n    },\n    init:function(){\n        window.myLogger.original = console.log;\n        console.log = window.myLogger.log;\n    }\n}\n\nwindow.myLogger = logger;\nconsole.log(\"this should print like normal\");\nwindow.myLogger.init();\nconsole.log(\"this should not print\");\nwindow.myLogger.forceLogging(true);\nconsole.log(\"this should print now\");\n</code></pre>\n\n<p>Also posted about it here. <a href=\"http://bhavinsurela.com/naive-way-of-overriding-console-log/\" rel=\"nofollow\">http://bhavinsurela.com/naive-way-of-overriding-console-log/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm fairly new to Javascript development so this might be a real newbie question.</p>\n\n<p>I've got a <a href=\"/questions/tagged/sencha-touch\" class=\"post-tag\" title=\"show questions tagged 'sencha-touch'\" rel=\"tag\">sencha-touch</a> application riddled with <code>console.log();</code> for debugging purposes.</p>\n\n<p>I've got <a href=\"/questions/tagged/chirpy\" class=\"post-tag\" title=\"show questions tagged 'chirpy'\" rel=\"tag\">chirpy</a> doing all of my build time combining. It outputs a <code>app.debug.js</code> for debugging as well as a <code>app.min.js</code> for production</p>\n\n<p>Now I could go through all of my code files looking for <code>console.log();</code> and delete it manually when I'm ready to go to production, but I'm wondering if there's a way to override the method.</p>\n\n<p>Basically, whenever the <code>console.log();</code> method is called, DO NOTHING.</p>\n\n<p>That way, I can put the override code file in my production config, and NOT in my debug config.</p>\n\n<p>Is this possible?</p>\n",
            "last_activity_date": 1420670433,
            "question_id": 7042611,
            "score": 34,
            "tags": [
                "javascript",
                "debugging"
            ],
            "title": "Override console.log(); for production"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You might want to send the guys at <a href=\"http://tedserbinski.com/jcalendar/index.html#about\" rel=\"nofollow\">jCalendar</a> a note. They were working on a Google Calendar-like jQuery plugin.  Project seems to have moved on, but they may be able to point you in the right direction.</p>\n\n<p>From their site:</p>\n\n<blockquote>\n  <p>Coming soon will be v1.0, which will allow for not only visually selecting dates but also for displaying them in both mini and full page calendar views, similar to that of Google Calendar.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>i think you will like the following:</p>\n\n<p><a href=\"http://www.filamentgroup.com/examples/daterangepicker/\" rel=\"nofollow\">Date Range Picker</a></p>\n\n<p>vote it if you like it</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>just published a new open source project (jQuery plugin). sounds exactly like what you want:</p>\n\n<p><a href=\"http://arshaw.com/fullcalendar/\">FullCalendar</a></p>\n\n<p>Hope it works well for you!</p>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>I prefer <a href=\"http://eyecon.ro/datepicker/\">Eyecon Calendar.</a> Maybe the best.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Useful Calendar &amp; Date Picker Scripts For Web Developers: </p>\n\n<p><a href=\"http://www.hongkiat.com/blog/useful-calendar-date-picker-scripts-for-web-developers/\" rel=\"nofollow\">http://www.hongkiat.com/blog/useful-calendar-date-picker-scripts-for-web-developers/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I have successfully used <a href=\"http://www.stefanoverna.com/log/create-astonishing-ical-like-calendars-with-jquery\" rel=\"nofollow\">http://www.stefanoverna.com/log/create-astonishing-ical-like-calendars-with-jquery</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is one I put together. It looks and works like Google Calendar.</p>\n\n<p><a href=\"http://code.google.com/p/jquery-frontier-calendar/\" rel=\"nofollow\">http://code.google.com/p/jquery-frontier-calendar/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Checkout <a href=\"http://keith-wood.name/datepick.html\" rel=\"nofollow\">http://keith-wood.name/datepick.html</a></p>\n\n<p>This is quite good resource for jQuery Calendar implemenation</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>why not try this jquery event calendar <a href=\"http://www.web-delicious.com/jquery-plugins/\" rel=\"nofollow\">http://www.web-delicious.com/jquery-plugins/</a>. This is amazing.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Does any know of a good calendar (not datepicker, but a BIG browsable calendar) plugin for one of the major javascript frameworks.  I'd prefer jQuery.</p>\n",
            "last_activity_date": 1408730195,
            "question_id": 78703,
            "score": 34,
            "tags": [
                "javascript",
                "jquery",
                "calendar"
            ],
            "title": "Javascript framework calendar plugin"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Of the three only javascript is a programming language. <a href=\"http://jquery.com/\">jQuery</a> is a framework that is based on javascript and that simplifies some tedious tasks like manipulating the DOM, adding some effects and animations and most importantly doing it in a cross browser fashion. One of the tasks that is simplified by jQuery is <a href=\"http://en.wikipedia.org/wiki/Ajax_%28programming%29\">AJAX</a> which is a concept allowing a browser to send an asynchronous request to a web server allowing for richer web applications.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Javascript, for the purposes of this question, is a client-side (in the browser) scripting language.</p>\n\n<p>jQuery is a library/framework built with Javascript. It is very popular because it (nearly universally) abstracts away cross-browser compatibility issues and it emphasises unobtrusive and callback-driven Javascript programming.</p>\n\n<p>AJAX (Asynchronous Javascript XML) is a method to dynamically update parts of the UI without having to reload the page - to make the experience more similar to a desktop application.</p>\n\n<p>EDIT:</p>\n\n<p>It sounds like you're new to this. I would seriously recommend you check out <a href=\"http://www.w3schools.com/js/default.asp\">http://www.w3schools.com/js/default.asp</a> to get started. It's what I used to learn javascript and it's done incredibly well.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>AJAX is a way to talk to the server in the background.\nJavaScript is a language that the browser understands.\njQuery is a JavaScript framework that makes life easier for people who want to program for the browser.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>AJAX is a method to do an XMLHttpRequest from a web page to the server and send/retrieve data to be used on the web page. It stands for Asynchronous Javascript And XML. It uses javascript to construct an XMLHttpRequest(varies between browsers).</p>\n\n<p>jQuery is a javascript framework that can be used to manipulate the DOM (search and interact with the DOM). jQuery implements a high-level interface to do AJAX requests abstractly thereby giving multi-browser support in making the request.</p>\n\n<p>So, Ajax is a technology paradigm, whereas jquery is a library so can't compare them.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Actually only one of them is a programming language.</p>\n\n<ul>\n<li><p><strong>Javascript</strong> is a <strong>programming language</strong> which is used mainly in webpages for making websites interactive. When a webpage is parsed by the browser, it creates an in-memory representation of the page. It is a tree structure, which contains all elements on the page. So there is a root element, which contains the head and the body elements, which contain other elements, which contain other elements. So it looks like a tree basically. Now with javascript you can manipulate elements in the page using this tree. You can pick elements by their id (getElementsById), or their tag name (getElementsByTagName), or by simply going through the tree (parentNode, firstChild, lastChild, nextSibling, previousSibling, etc.). Once you have element(s) to work with you can modify them by changing their look, content or position on the page. This interface is also known as the DOM <em>(Document Object Model)</em>. So you can do everything with Javascript that another programming language can do, and by using it embedded into wepages you also get an in-memory Object of the current webpage by which you can make changes to the page interactively. </p></li>\n<li><p><strong>AJAX</strong> is a <strong>technique of communication</strong> between the browser and the server within a page. Chat is a good example. You write a message, send a message and recive other messages without leaving the page. You can manage this interaction with Javascript on the client side, using an XMLHTTP Object provided by the browser.</p></li>\n<li><p><strong>jQuery</strong> is a library which aims <strong>to simplify</strong> client side web development in general (<strong>the two other above</strong>). It creates a layer of abstracion so you can reuse common languages like CSS and HTML in Javascript. It also includes functions which can be used to communicate with servers very easily (AJAX). It is written in Javascript, and will not do everything for you, only makes common tasks easier. It also hides some of the misconceptions and bugs of browsers. </p></li>\n</ul>\n\n<p><strong>To sum up:</strong></p>\n\n<ul>\n<li>Javascript is a programming language (objects, array, numbers, strings, calculations)</li>\n<li>AJAX and jQuery uses Javascript</li>\n<li>jQuery is for simplifing common tasks with AJAX and page manipulation (style, animation, etc.)</li>\n</ul>\n\n<p>Finally, an example just to see some syntax:</p>\n\n<pre><code>// page manipulation in javascript\nvar el = document.getElementById(\"box\");\nel.style.backgroundColor = \"#000\";\nvar new_el = document.createElement(\"div\");\nel.innerHTML = \"&lt;p&gt;some content&lt;/p&gt;\";\nel.appendChild(new_el);\n\n// and how you would do it in jQuery\n$(\"#box\")\n  .css({ \"background-color\": \"#000\" })\n  .append(\"&lt;div&gt;&lt;p&gt;some content&lt;/p&gt;&lt;/div&gt;\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>AJAX is <strong>technology.</strong>\n Jquery is <strong>library</strong>.\n Javascript is <strong>language</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>What is the difference between Ajax with Jquery and Ajax with JavaScript ? Thanks in advance.</p>\n",
            "last_activity_date": 1412608271,
            "question_id": 3127938,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "ajax"
            ],
            "title": "What is the difference between Javascript,Jquery and Ajax programming?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Just wondering - why would you want to clone a function when you have prototypes AND can set the scope of a function call to anything you wish?</p>\n\n<pre><code> var funcA = {};\n funcA.data = 'something';\n funcA.changeData = function(d){ this.data = d; }\n\n var funcB = {};\n funcB.data = 'else';\n\n funcA.changeData.call(funcB.data);\n\n alert(funcA.data + ' ' + funcB.data);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>try this:</p>\n\n<pre><code>var x = function() {\n    return 1;\n};\n\nvar t = function(a,b,c) {\n    return a+b+c;\n};\n\n\nFunction.prototype.clone = function() {\n    var that = this;\n    var temp = function temporary() { return that.apply(this, arguments); };\n    for(var key in this) {\n        if (this.hasOwnProperty(key)) {\n            temp[key] = this[key];\n        }\n    }\n    return temp;\n};\n\nalert(x === x.clone());\nalert(x() === x.clone()());\n\nalert(t === t.clone());\nalert(t(1,1,1) === t.clone()(1,1,1));\nalert(t.clone()(1,1,1));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Here is an updated answer</p>\n\n<pre><code>var newFunc = oldFunc.bind({}); //clones the function with '{}' acting as it's new 'this' parameter\n</code></pre>\n\n<p>However \".bind\" is a new feature of JavaScript (with a compatibility workaround from Mdn)</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\" rel=\"nofollow\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind</a></p>\n\n<p><strong>Note:</strong> that it <strong>does not clone</strong> the function object additional attached <strong>properties</strong>, <strong>including</strong> the <strong>prototype</strong> property. Credit to <a href=\"http://stackoverflow.com/users/554406/\">@jchook</a></p>\n\n<p><strong>Note:</strong> New function object, instanceof treats newFunc/oldFunc as the same. Credit to <a href=\"http://stackoverflow.com/users/59272\">@Christopher</a></p>\n\n<pre><code>(new newFunc()) instanceof oldFunc; //gives true\n(new oldFunc()) instanceof newFunc; //gives true as well\nnewFunc == oldFunc;                 //gives false however\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Here's a slightly better version of Jared's answer. This one won't end up with deeply nested functions the more you clone. It always calls the original.</p>\n\n<pre><code>Function.prototype.clone = function() {\n    var cloneObj = this;\n    if(this.__isClone) {\n      cloneObj = this.__clonedFrom;\n    }\n\n    var temp = function() { return cloneObj.apply(this, arguments); };\n    for(var key in this) {\n        temp[key] = this[key];\n    }\n\n    temp.__isClone = true;\n    temp.__clonedFrom = cloneObj;\n\n    return temp;\n};\n</code></pre>\n\n<p>Also, in response to the updated answer given by pico.creator, it is worth noting that the <code>bind()</code> function added in Javascript 1.8.5 has the same problem as Jared's answer - it will keep nesting causing slower and slower functions each time it is used.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>If you want to create a clone using the Function constructor, something like this should work:</p>\n\n<pre><code>_cloneFunction = function(_function){\n    var _arguments, _body, _result;\n    var _regexFunction = /^function[\\s]+[\\w]*\\(([\\w\\s,_\\$]*)?\\)\\{(.*)\\}$/;\n    var _regexArguments = /((?!=^|,)([\\w\\$_]))+/g;\n    var _matches = _function.toString().match(_regexFunction)\n    if(_matches){\n        if(_matches[1]){\n            _result = _matches[1].match(_regexArguments);\n        }else{\n            _result = [];\n        }\n        _result.push(_matches[2]);\n    }else{\n        _result = [];\n    }\n    var _clone = Function.apply(Function, _result);\n    // if you want to add attached properties\n    for(var _key in _function){\n        _clone[_key] = _function[_key];\n    }\n    return _clone;\n}\n</code></pre>\n\n<p>A simple test:</p>\n\n<pre><code>(function(){\n    var _clone, _functions, _key, _subKey;\n    _functions = [\n        function(){ return 'anonymous function'; }\n        ,function Foo(){ return 'named function'; }\n        ,function Bar(){ var a = function(){ return 'function with internal function declaration'; }; return a; }\n        ,function Biz(a,boo,c){ return 'function with parameters'; }\n    ];\n    _functions[0].a = 'a';\n    _functions[0].b = 'b';\n    _functions[1].b = 'b';\n    for(_key in _functions){\n        _clone = window._cloneFunction(_functions[_key]);\n        console.log(_clone.toString(), _clone);\n        console.log('keys:');\n        for(_subKey in _clone){\n            console.log('\\t', _subKey, ': ', _clone[_subKey]);\n        }\n    }\n})()\n</code></pre>\n\n<p>These clones will lose their names and scope for any closed over variables though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Being curious but still unable to find the answer to the performance topic of the question above, I wrote this <a href=\"https://gist.github.com/royaltm/6321532\" rel=\"nofollow\">gist</a> for nodejs to test both the performance and reliability of all presented (and scored) solutions.</p>\n\n<p>I've compared the wall times of a clone function creation and the execution of a clone.\nThe results together with assertion errors are included in the gist's comment.</p>\n\n<p>Plus my two cents (based on the author's suggestion):</p>\n\n<p>clone0 cent (faster but uglier):</p>\n\n<pre><code>Function.prototype.clone = function() {\n  var newfun;\n  eval('newfun=' + this.toString());\n  for (var key in this)\n    newfun[key] = this[key];\n  return newfun;\n};\n</code></pre>\n\n<p>clone4 cent (slower but for those who dislike eval() for purposes known only to them and their ancestors):</p>\n\n<pre><code>Function.prototype.clone = function() {\n  var newfun = new Function('return ' + this.toString())();\n  for (var key in this)\n    newfun[key] = this[key];\n  return newfun;\n};\n</code></pre>\n\n<p>As for the performance, if eval/new Function is slower than wrapper solution (and it really depends on the function body size), it gives you bare function clone (and I mean the true shallow clone with properties but unshared state) without unnecessary fuzz with hidden properties, wrapper functions and problems with stack.</p>\n\n<p>Plus there is always one important factor you need to take into consideration: the less code, the less places for mistakes.</p>\n\n<p>The downside of using the eval/new Function is that the clone and the original function will operate in different scopes. It won't work well with functions that are using scoped variables. The solutions using bind-like wrapping are scope independent.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It was pretty exciting to make this method work, so it makes a clone of a function using Function call.</p>\n\n<p>Some limitations about closures described at <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\" rel=\"nofollow\">MDN Function Reference</a></p>\n\n<pre><code>function cloneFunc( func ) {\n  var reFn = /^function\\s*([^\\s(]*)\\s*\\(([^)]*)\\)[^{]*\\{([^]*)\\}$/gi\n    , s = func.toString().replace(/^\\s|\\s$/g, '')\n    , m = reFn.exec(s);\n  if (!m || !m.length) return; \n  var conf = {\n      name : m[1] || '',\n      args : m[2].replace(/\\s+/g,'').split(','),\n      body : m[3] || ''\n  }\n  var clone = Function.prototype.constructor.apply(this, [].concat(conf.args, conf.body));\n  return clone;\n}\n</code></pre>\n\n<p>Enjoy.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've impoved Jared's answer in my own manner:</p>\n\n<pre><code>    Function.prototype.clone = function() {\n        var that = this;\n        function newThat() {\n            return (new that(\n                arguments[0],\n                arguments[1],\n                arguments[2],\n                arguments[3],\n                arguments[4],\n                arguments[5],\n                arguments[6],\n                arguments[7],\n                arguments[8],\n                arguments[9]\n            ));\n        }\n        function __clone__() {\n            if (this instanceof __clone__) {\n                return newThat.apply(null, arguments);\n            }\n            return that.apply(this, arguments);\n        }\n        for(var key in this ) {\n            if (this.hasOwnProperty(key)) {\n                __clone__[key] = this[key];\n            }\n        }\n        return __clone__;\n    };\n</code></pre>\n\n<p>1) now it supports cloning of constructors (can call with new); in that case takes only 10 arguments (you can vary it) - due to impossibility of passing all arguments in original constructor</p>\n\n<p>2) everything is in correct closures</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Short and simple:</p>\n\n<pre><code>Function.prototype.clone = function() {\n  return new Function('return ' + this.toString())();\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is a fastest way to clone a function in JavaScript (with or without its properties)?</p>\n\n<p>Two options coming to mind are <code>eval(func.toString())</code> and <code>function() { return func.apply(..) }</code>. But I am worried about performance of eval and wrapping will make stack worse and will probably degrade performance if applied a lot or applied to already wrapped.</p>\n\n<p><code>new Function(args, body)</code> looks nice, but how exactly can I reliable split existing function to args and body without a JS parser in JS?</p>\n\n<p>Thanks in advance.</p>\n\n<p><strong>Update:</strong>\nWhat I mean is being able to do</p>\n\n<pre><code>var funcB = funcA.clone(); // where clone() is my extension\nfuncB.newField = {...};    // without affecting funcA\n</code></pre>\n",
            "last_activity_date": 1418742110,
            "question_id": 1833588,
            "score": 30,
            "tags": [
                "javascript",
                "function"
            ],
            "title": "JavaScript: clone a function"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I know that you don't want a workaround, but you don't need to check mouse's x/y to know if you are in or out an element. You could simply check the element from which the mousemove event was fired. If you put a mousemove on document, the event will fire from one of its children, and you can compare that element with your element to know if it is one of its descendants.</p>\n\n<p>Or you could go up the parentNode tree and stop if you find your element. Then you know you are inside the element and still in it, otherwise you reach the document and you are out.</p>\n\n<p>Some browsers implement the mouseenter/mouseleave events that, I've noticed, are more accurate than mouseout. Prototype and jQuery have a workaround for browsers that don't implement these new events. Mouseleave does not fire from an element's children, whereas mouseout does.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You describe moving the mouse very quickly.  When you stop, is the pointer still within the page?  That is, is your mouse pointer still hovering over some part of the visible web page?</p>\n\n<p>If it has gone outside, then it's not necessarily clear what the browser should do.  The <code>mouseout</code> event should have a <a href=\"https://developer.mozilla.org/en/DOM/event.relatedTarget\" rel=\"nofollow\"><code>relatedTarget</code></a> property that targets what the mouse pointer has gone into.  If the mouse pointer is already outside of the page area, there would be no related target to point to.</p>\n\n<p>Put another way, when the mouse leaves the page area, the browser stops tracking it and stops reporting its position.  If you move your mouse fast enough, from the browser's perspective, the mouse simply disappeared.  It's not until you bring the mouse back into the bounding box of the viewable page that the browser knows where it is, and then triggers all appropriate movement-based actions (like mouseout).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<ol>\n<li><blockquote>\n  <p>Why can't the browser can't reliably capture the mouseout event? If I can reliably tell when the mouse has left the div using the above workaround, why can't the browser do it?</p>\n</blockquote>\n\n<p>I think you answered this one yourself when you said:</p>\n\n<blockquote>\n  <p>Compared to letting the browser do all this natively, performing calculations on every pixel move is a bit of a performance hit.</p>\n</blockquote>\n\n<p>The browser does not interpolate between the frames, thus, as you stated it would demand a lot more resources and memory, which may be why it isn't \"fixed\".</p></li>\n<li><blockquote>\n  <p>If some pixel movements are missed just as the mouse crosses the boundary of the div, why does it follow that the mouseout event should also be skipped? When the browser finally starts registering the mouse's position again (after a sudden fast movement), even if the mouse is now miles outside the box, the point is that it used to be in the box and no longer is. So why doesn't it then fire the mouseout event then?</p>\n</blockquote>\n\n<p>I don't know for sure, but I don't think it's a condition of \"it was in and now it's out\".  Instead, it's whether it crosses that boundary (if <code>MouseX - ElemOffsetX= 1</code>).  I agree, it doesn't make as much sense, but it could be because if you set the value to <code>&gt; 1</code> it would trigger the event multiple times.  Otherwise it would have to keep track of the events, which is not in JS nature, seeing how it just adds events asynch to a stack.</p></li>\n</ol>\n\n<hr>\n\n<p>What you could try is using <a href=\"http://api.jquery.com/mouseleave/\" rel=\"nofollow\">jQuery's mouseleave event</a>.  This does two things, which delays the firing of the event:</p>\n\n<ol>\n<li>It traverses the DOM tree to see if it truly left the element</li>\n<li>I think it implements a timeout call, which should solve the interpolation problem that you noticed.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found your question and the lack of other clear answers useful because it told me that I had to create a workaround. Which I did using the ideas presented in your question and the other contributors.</p>\n\n<p>I have same problem when I use jquery mouseleave elem.bind('mouseleave', data, mouseLeavesZone);</p>\n\n<p>The problem is intermittent and may be related to a busy CPU on the client. Say, for example, the CPU is busy elsewhere when your mouse moves out of a div. Then it seems logical that this could be the cause of the bug. I agree; this should be fixed by the browser vendors.</p>\n\n<p>See <a href=\"http://jsfiddle.net/bgil2012/gWP5x/1/\" rel=\"nofollow\">http://jsfiddle.net/bgil2012/gWP5x/1/</a></p>\n\n<p>(Aside: My JQuery code needs to use older jQuery methods because it has to run in Drupal 7 which is running jQuery 1.4, at this time and without applying patches that are coming).</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to know when the mouse cursor leaves a <code>div</code>. So I hook up the <code>mouseout</code> event. However, if I move the mouse very quickly out of the <code>div</code>, the <code>mouseout</code> event <strong>doesn't fire</strong>. That's right: the mouse cursor <em>was</em> sitting still inside the <code>div</code>, it's now <em>outside</em> the <code>div</code>, and yet the <code>mouseout</code> callback hasn't been called. (It works fine if I don't move the mouse quite so fast.) </p>\n\n<p>This is true in the <strong>latest Google Chrome</strong> by the way \u2013 so not just an \"old browsers\" problem.</p>\n\n<p><strong>A workaround:</strong></p>\n\n<p>A question about this problem has been <a href=\"http://stackoverflow.com/questions/2597832/javascript-mouse-event-not-captured-properly-when-mouse-moved-very-fast\">posed before</a>. Apparently it's just a fact of life, and the only workaround I've found is to manually monitor <code>mousemove</code> events, each time checking the cursor's x/y co-ordinates and seeing if they fall within the <code>div</code>\u2019s bounding box, so you have more chances to \"notice\" if the cursor is no longer inside it. </p>\n\n<p>Compared to letting the browser do all this natively, performing calculations on every pixel move is a bit of a performance hit. It's also tedious to code.</p>\n\n<p><strong>On to my question...</strong></p>\n\n<p><em>Why</em> can't the browser can't reliably capture the <code>mouseout</code> event? If I can reliably tell when the mouse has left the <code>div</code> using the above workaround, why can't the browser do it?</p>\n\n<p>I understand (from the answer linked above) that JavaScript doesn't try to interpolate \"frames\". Say if you put a <code>mousemove</code> handler on the <code>document</code>, and quickly move the mouse 200 pixels to the right in a perfect horizontal line, you might <strong>not</strong> get 200 <code>mousemove</code> events. A few will be missed. I don't have a problem with that.</p>\n\n<p>But if some pixel movements are missed just as the mouse crosses the boundary of the <code>div</code>, why does it follow that the <code>mouseout</code> event should also be skipped? When the browser finally starts registering the mouse's position again (after a sudden fast movement), even if the mouse is now <em>miles</em> outside the box, the point is that it <em>used to be in the box and no longer is</em>. So why doesn't it then fire the mouseout event then? </p>\n\n<p>I just don't get why this would be a hard problem for the browser vendors to solve. (But I trust there might be a good reason, which I'm too stupid to think of.)</p>\n\n<p>I'm posting this question mainly out of curiosity, but I'm hoping the answer might give some insight that could help me work around the problem more efficiently. Also, any alternative workarounds (which are faster than the one presented above) would be welcome.</p>\n",
            "last_activity_date": 1343005990,
            "question_id": 7448468,
            "score": 29,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "Why can&#39;t I reliably capture a mouseout event?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I don't know just what you're after, when you say \"extend a widget\".  In my case I wanted to change how the widget rendered itself, and fiddling with the CSS classes didn't satisfy. It was not a case of extending the behavior of a widget, but rather modifying the behavior of a widget. </p>\n\n<p>So I over-rode the render method. The widget in question was <a href=\"http://docs.jquery.com/UI/Autocomplete\" rel=\"nofollow\">the jQueryUI autocomplete</a>, and the over-ride looked like this: </p>\n\n<pre><code>function monkeyPatchAutocomplete() {  \n\n  // don't really need this, but in case I did, I could store it and chain  \n  var oldFn = $.ui.autocomplete.prototype._renderItem;  \n\n  $.ui.autocomplete.prototype._renderItem = function( ul, item) {  \n     // whatever \n  };  \n}  \n</code></pre>\n\n<p>I just called that in <code>$(document).ready()</code>.</p>\n\n<hr>\n\n<p>related:<br>\n- <a href=\"http://stackoverflow.com/questions/2436315\">Can I replace or modify a function on a jQuery UI widget? How?</a><br>\n- <a href=\"http://stackoverflow.com/questions/2435964/2436493#2436493\">jQueryUI: how can I custom-format the Autocomplete plug-in results?</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>After several tries, I finally found out how to do this easily :</p>\n\n<pre><code>$.widget(\"ui.customsortable\", $.extend({}, $.ui.sortable.prototype, {\n\n  _init: function(){\n    this.element.data('sortable', this.element.data('customsortable'));\n    return $.ui.sortable.prototype._init.apply(this, arguments);\n  }\n\n  // Override other methods here.\n\n}));\n\n$.ui.customsortable.defaults = $.extend({}, $.ui.sortable.defaults);\n</code></pre>\n\n<p>The key is to copy data from your custom widget to the original one.\nDon't forget to use $.ui.sortable.prototype.[overriden method].apply(this, arguments); in each overriden method.</p>\n\n<p>Holly crap !</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>Regarding the selected solution above:</p>\n\n<pre><code>$.widget(\"ui.customsortable\", $.extend(true, {}, $.ui.sortable.prototype, {\n</code></pre>\n\n<p>If you are extending one objects options into another, the [deep] flag of true will give you the desired results.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I used this one time:</p>\n\n<pre><code>$.ui.buttonset.prototype.value = function() {\n     return this.element.find('#' + this.element.find('label[aria-pressed=\"true\"]').attr('for')).val();\n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>These are kinda strange answers.\nThere is an optional second parameter - basewidget to inherit from. It's easy. No need to work with prototype and so on.</p>\n\n<pre><code>$.widget( \"ui.customsortable\", $.ui.sortable, {\n\n  _init: function() {\n    this.element.data('sortable', this.element.data('customsortable'));\n    // or whatever you want\n  }\n} );\n</code></pre>\n\n<p>The second parameter is <strong>$.ui.sortable</strong>. I think it's all you need.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>I'm using this in order to predefine start, stop and update functions:</p>\n\n<pre><code>$.widget('ui.custom_sortable_or_any_other_name', $.ui.sortable, {\n    _init: function() {\n        this.element.children().css('position', 'relative'); //for example\n    },\n    options : {\n        start: function (event, ui) {   \n            ui.item.addClass('noclick'); //ui.item get's the item, that's my point\n        },\n        stop: function (event, ui) {            \n        },\n        update: function (event, ui) {\n            $.ajax(); //some ajax you might want to do\n        }\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I would like to create a custom version of the sortable widget. I have been searching for documentation, but could not find something really accurate. The best information I found was : <a href=\"http://jqueryui.pbworks.com/Widget-factory\">http://jqueryui.pbworks.com/Widget-factory</a>.</p>\n\n<p>I tried :</p>\n\n<pre><code>$.widget(\"ui.customsortable\", $.extend($.ui.sortable, {\n  _init: function() {\n    $.widget.prototype._init.apply(this, arguments);\n  }\n}));\n</code></pre>\n\n<p>But $.widget.prototype._init is not the function I want to call I guess since it is the $.widget prototype.</p>\n\n<p>Then, I tried something I read here and there :</p>\n\n<pre><code>var _init = $.ui.sortable.prototype._init; \n\n$.widget(\"ui.customsortable\", $.extend($.ui.sortable, {\n  _init: function() {\n    _init.apply(this, arguments);\n  },\n}));\n</code></pre>\n\n<p>But :</p>\n\n<ul>\n<li>I can't believe I have to store all methods I want to override like this, it is so ugly.</li>\n<li>It throws an error (\"this.refresh is not a function\"), which means the refresh method does not exist. Does that mean I would have to recreate all methods I want to override ? What's the point of extending in that case ?</li>\n</ul>\n\n<p>Am I missing something here ?</p>\n\n<p>Thanks for your help !</p>\n",
            "last_activity_date": 1351272304,
            "question_id": 2525247,
            "score": 29,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui"
            ],
            "title": "How to extend a jquery ui widget ? (1.7)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/apply\"><code>.apply</code></a> is used to call a function with an array of arguments.  It takes each element in the array, and uses each as a parameter to the function.  <code>.apply</code> can also change the context (<code>this</code>) inside a function.</p>\n\n<p>So, let's take <code>$.when</code>.  It's used to say \"when all these promises are resolved... do something\".  It takes an infinite (variable) number of parameters.</p>\n\n<p>In your case, you have an array of promises; you don't know how many parameters you're passing to <code>$.when</code>.  Passing the array itself to <code>$.when</code> wouldn't work, because it expects its parameters to be promises, not an array.</p>\n\n<p>That's where <code>.apply</code> comes in.  It takes the array, and calls <code>$.when</code> with each element as a parameter (and makes sure the <code>this</code> is set to <code>jQuery</code>/<code>$</code>), so then it all works :-)</p>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>$.when alone makes it possible for a callback to be called when every promises passed to it are resolved/rejected. Normally, $.when takes a variable number of arguments, using .apply makes it possible to pass it an array of arguments, it's very powerful. For more info on .apply: <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/apply\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/apply</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here, the code fully documented.</p>\n\n<pre><code>// 1. Declare an array of 4 elements\nvar data = [1,2,3,4]; // the ids coming back from serviceA\n// 2. Declare an array of Deferred objects\nvar processItemsDeferred = [];\n\n// 3. For each element of data, create a Deferred push push it to the array\nfor(var i = 0; i &lt; data.length; i++){\n  processItemsDeferred.push(processItem(data[i]));\n}\n\n// 4. WHEN ALL Deferred objects in the array are resolved THEN call the function\n//    Note : same as $.when(processItemsDeferred[0], processItemsDeferred[1], ...).then(everythingDone);\n$.when.apply($, processItemsDeferred).then(everythingDone); \n\n// 3.1. Function called by the loop to create a Deferred object (data is numeric)\nfunction processItem(data) {\n  // 3.1.1. Create the Deferred object and output some debug\n  var dfd = $.Deferred();\n  console.log('called processItem');\n\n  // 3.1.2. After some timeout, resolve the current Deferred\n  //in the real world, this would probably make an AJAX call.\n  setTimeout(function() { dfd.resolve() }, 2000);    \n\n  // 3.1.3. Return that Deferred (to be inserted into the array)\n  return dfd.promise();\n}\n\n// 4.1. Function called when all deferred are resolved\nfunction everythingDone(){\n  // 4.1.1. Do some debug trace\n  console.log('processed all items');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://api.jquery.com/jQuery.when/\">$.when</a> takes any number of parameters and resolves <em>when</em> all of these have resolved.</p>\n\n<p><em>anyFunction</em>.apply(thisValue, arrayParameters) calls the function <em>anyFunction</em> setting its context (thisValue will be <em>this</em>) and all the parameters in arrayParameters.</p>\n\n<p>For example:</p>\n\n<pre><code>$.when.apply($, [def1, def2])\n</code></pre>\n\n<p>Is the same as:</p>\n\n<pre><code>$.when(def1, def2)\n</code></pre>\n\n<p>But the <em>apply</em> way of calling allows you to pass an array of unknown number of parameters. (In your code, you are saying that you <em>data</em> comes from a service, then that is the only way to call <em>$.when</em>)</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Unfortunately I can not agree with you guys.</p>\n\n<pre><code>$.when.apply($, processItemsDeferred).always(everythingDone);\n</code></pre>\n\n<p>Will call <code>everythingDone</code> as soon as one deferred gets <strong>rejected</strong>, even if there are other deferreds that are <strong>pending</strong>.</p>\n\n<p>Heres the full script (I recommend <a href=\"http://jsfiddle.net/\" rel=\"nofollow\">http://jsfiddle.net/</a>):</p>\n\n<pre><code>var data = [1,2,3,4]; // the ids coming back from serviceA\nvar processItemsDeferred = [];\n\nfor(var i = 0; i &lt; data.length; i++){\n  processItemsDeferred.push(processItem(data[i]));\n}\n\nprocessItemsDeferred.push($.Deferred().reject());\n//processItemsDeferred.push($.Deferred().resolve());\n\n$.when.apply($, processItemsDeferred).always(everythingDone); \n\nfunction processItem(data) {\n  var dfd = $.Deferred();\n  console.log('called processItem');\n\n  //in the real world, this would probably make an AJAX call.\n  setTimeout(function() { dfd.resolve(); }, 2000);    \n\n  return dfd.promise();\n}\n\nfunction everythingDone(){\n  alert('processed all items');\n}\n</code></pre>\n\n<p>It this a bug? I would like to use this like the gentleman above described it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm <a href=\"http://flaviocopes.com/deferred-and-promises-in-javascript/\">reading about Deferreds and Promises</a> and keep coming across <code>$.when.apply($, someArray)</code>.  I'm a little unclear on what this does exactly, looking for an explanation that <strong>one line</strong> works exactly (not the entire code snippet).  Here's some context: </p>\n\n<pre><code>var data = [1,2,3,4]; // the ids coming back from serviceA\nvar processItemsDeferred = [];\n\nfor(var i = 0; i &lt; data.length; i++){\n  processItemsDeferred.push(processItem(data[i]));\n}\n\n$.when.apply($, processItemsDeferred).then(everythingDone); \n\nfunction processItem(data) {\n  var dfd = $.Deferred();\n  console.log('called processItem');\n\n  //in the real world, this would probably make an AJAX call.\n  setTimeout(function() { dfd.resolve() }, 2000);    \n\n  return dfd.promise();\n}\n\nfunction everythingDone(){\n  console.log('processed all items');\n}\n</code></pre>\n",
            "last_activity_date": 1407833917,
            "question_id": 14777031,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "asynchronous",
                "promise"
            ],
            "title": "What does $.when.apply($, someArray) do?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can't.</p>\n\n<p>The only way to get a list of all event listeners attached to a node is to intercept the listener attachment call.</p>\n\n<p><a href=\"http://www.w3.org/TR/2011/WD-dom-20110915/#dom-eventtarget-addeventlistener\">DOM4 addEventListener</a></p>\n\n<p>Says </p>\n\n<blockquote>\n  <p>Append an event listener to the associated list of event listeners with type set to type, listener set to listener, and capture set to capture, unless there already is an event listener in that list with the same type, listener, and capture.</p>\n</blockquote>\n\n<p>Meaning that an event listener is added to the \"list of event listeners\". That's all. There is no notion of what this list should be nor how you should access it.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Chrome DevTools, Safari Inspector and Firebug support <strong><a href=\"https://developers.google.com/chrome-developer-tools/docs/commandline-api#geteventlistenersobject\" rel=\"nofollow\">getEventListeners(node)</a></strong>.</p>\n\n<p><img src=\"http://i.stack.imgur.com/NljQH.png\" alt=\"getEventListeners(document)\"></p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>You can obtain all jQuery events using $._data($('[selector]')[0],'events'); change [selector] to what you need. </p>\n\n<p>There is a plugin that gather all events attached by jQuery called eventsReport.</p>\n\n<p>Also i write my own plugin that do this with better formatting. </p>\n\n<p>But anyway it seems we can't gather events added by addEventListener method. May be we can wrap addEventListener call to store events added after our wrap call. </p>\n\n<p>It seems the best way to see events added to an element with dev tools. </p>\n\n<p>But you will not see delegated events there. So there we need jQuery eventsReport.</p>\n\n<p>UPDATE: NOW We CAN see events added by addEventListener method SEE RIGHT ANSWER TO THIS QUESTION.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have already looked at these questions:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/446892/how-to-find-event-listeners-on-a-dom-node\">How to find event listeners on a DOM node?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/1436823/can-i-programmatically-examine-and-modify-javascript-event-handlers-on-html-elem\">can I programmatically examine and modify Javascript event handlers on html elements?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/570960/how-to-debug-javascript-jquery-event-bindings-with-firebug-or-similar-tool/\">How to debug Javascript/jQuery event bindings with FireBug (or similar tool)</a></li>\n</ul>\n\n<p>however none of them answers how to get a list of event listeners attached to a node using <code>addEventListener</code>, without modifying the <code>addEventListener</code> prototype before the event listeners are created.</p>\n\n<p><a href=\"http://www.sprymedia.co.uk/article/Visual+Event\">VisualEvent</a> doesn't display all event listener (iphone specific ones) and I want to do this (somewhat) programmatically.</p>\n",
            "last_activity_date": 1422815890,
            "question_id": 9046741,
            "score": 28,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "Get event listeners attached to node using addEventListener"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You could just always use a while loop, and compute the array limit before hand.</p>\n\n<pre><code>Var max = a.length-1;\nvar i = 0;\n\nwhile(i &lt;= max)\n{\nvar element = a[i];\ni++;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've started using iterators where relevant.  Performance is reasonable, however more importantly it allows you to encapsulate the looping logic:</p>\n\n<pre><code>function createIterator(x) {\n    var i = 0;\n\n     return function(){\n       return x[i++];\n    };\n}\n</code></pre>\n\n<p>Then to use:</p>\n\n<pre><code>var iterator=createIterator(['a','b','c','d','e','f','g']);\n\niterator();\n</code></pre>\n\n<p>returns \"a\";</p>\n\n<pre><code>iterator();\n</code></pre>\n\n<p>returns \"b\";</p>\n\n<p>and so on.</p>\n\n<p>To iterate the whole list and display each item:</p>\n\n<pre>\nvar current;\n\nwhile(current=iterator())\n{\n    console.log(current);\n}\n</pre>\n\n<p>Be aware that the above is only acceptable for iterating a list that contains \"non-falsy\" values.  If this array contained any of: </p>\n\n<ul>\n<li>0</li>\n<li>false</li>\n<li>\"\"</li>\n<li>null</li>\n<li>NaN</li>\n</ul>\n\n<p>the previous loop would stop at that item, not always what you want/expect.  </p>\n\n<p>To avoid this use:</p>\n\n<pre><code>var current;\n\nwhile((current=iterator())!==undefined)\n{\n   console.log(current);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Small improvement to the original, to only calculate the array size once:</p>\n\n<pre><code>for(var i = 0, len = a.length; i &lt; len; i++){ var element = a[i]; }\n</code></pre>\n\n<p>Also, I see a lot of for..in loops. Though keep in mind that it's not technically kosher, and will cause problems with Prototype specifically:</p>\n\n<pre><code>for (i in a) { var element = a[i]; }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Just store the length in a variable first.</p>\n\n<pre><code>  var len = a.length;\n  for (var i = 0; i &lt; len; i++) {\n    var element = a[i];\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you have many elements in the array and speed is an issue then you want to use a while loop that iterates from highest to lowest.</p>\n\n<pre><code>  var i = a.length;\n  while( --i &gt;= 0 ) {\n    var element = a[i];\n    // do stuff with element\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't use it myself, but one of my colleagues uses this style:</p>\n\n<pre><code>var myArray = [1,2,3,4];\nfor (var i = 0, item; item = myArray[i]; ++i) {\n    alert(item);\n}\n</code></pre>\n\n<p>like Ash's answer, this will hit issues if you've got \"falsey\" values in your array. To avoid that problem change it to <code>(item = myArray[i]) != undefined</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I know I'm late to the party, but I use reverse loops for loops that don't depend on the order.  </p>\n\n<p>Very similar to @Mr. Muskrat's - but simplifying the test:</p>\n\n<pre><code>var i = a.length, element = null;\nwhile (i--) {\n  element = a[i];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>So, first you identify the perfect javascript loop, I believe it should look like this:</p>\n\n<p>ary.each(function() {$arguments[0]).remove();})</p>\n\n<p>This may require the prototype.js library.</p>\n\n<p>Next, you get disgustet with the arguments[0] part and have the code be produced automatically from your server framework. This works only if the ladder is Seaside. </p>\n\n<p>Now, you have the above generated by:</p>\n\n<p>ary do: [:each | each element remove].</p>\n\n<p>This comes complete with syntax completion and translates exactly to the above javascript. And it will make people's head spin that haven't used seasides prototype integration before, as they read your code. It sure makes you feel cool, too. Not to mention the gain in geekiness you can get here. The girls love it!</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I don't see what the problem with using a standard for(;;) loop is.\nA little test</p>\n\n<pre><code>var x;\nvar a = [];\n// filling array\nvar t0 = new Date().getTime();\nfor( var i = 0; i &lt; 100000; i++ ) {\n    a[i] = Math.floor( Math.random()*100000 );\n}\n\n// normal loop\nvar t1 = new Date().getTime();\nfor( var i = 0; i &lt; 100000; i++ ) {\n    x = a[i];\n}\n\n// using length\nvar t2 = new Date().getTime();\nfor( var i = 0; i &lt; a.length; i++ ) {\n    x = a[i];\n}\n\n// storing length (pollution - we now have a global l as well as an i )\nvar t3 = new Date().getTime();\nfor( var i = 0, l = a.length; i &lt; l; i++ ) {\n    x = a[i];\n}\n\n// for in\nvar t4 = new Date().getTime();\nfor( var i in a ) {\n    x = a[i];\n}\n\n// checked for in\nvar t5 = new Date().getTime();\nfor( var i in a ) {\n    if (a.hasOwnProperty(i)) {\n        x = a[i];\n    }\n}\n\nvar t6 = new Date().getTime();\nvar msg = 'filling array: '+(t1-t0)+'ms\\n'+\n          'normal loop: '+(t2-t1)+'ms\\n'+\n          'using length: '+(t3-t2)+'ms\\n'+\n          'storing length: '+(t4-t3)+'ms\\n'+\n          'for in: '+(t5-t4)+'ms\\n'+\n          'checked for in: '+(t6-t5)+'ms';\nconsole.log( msg );\n</code></pre>\n\n<p>results in:</p>\n\n<pre><code>filling array: 227ms\nnormal loop: 21ms\nusing length: 26ms\nstoring length: 24ms \nfor in: 154ms\nchecked for in: 176ms\n</code></pre>\n\n<p>So:-  for in's take the longest, using the length property (which is a property and doesn't need to be calculated) is nearly as fast as storing it first  - which is only a whisker slower than using an integer.\n<br>AND a for() is the usual way to loop over an array, which everyone expects and understands.<br></p>\n\n<p>All of them add a variable to the scope they run in - i - which is a common name for this use and so shouldn't be used for other things. Storing the length first adds another var - l - to the scope, which is unnecesary</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have stumbled into several methods of looping in JavaScript, what I like the most is:</p>\n\n<pre><code>for(var i = 0; i &lt; a.length; i++){\n    var element = a[i];\n}\n</code></pre>\n\n<p>But as tested here (<a href=\"http://www.robertnyman.com/2008/04/11/javascript-loop-performance/\">http://www.robertnyman.com/2008/04/11/javascript-loop-performance/</a>), it should probably be written so that the length is only calculated once. </p>\n\n<p>In jQuery there is a .each that you can stick a function. I like this a little better, because I don't have to type the array twice, like in the above solution. </p>\n\n<p>If JavaScript supported macros it would be a piece of cake to roll your own, but sadly it does not. </p>\n\n<p>So what do you guys use?</p>\n",
            "last_activity_date": 1329433911,
            "question_id": 193547,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "loops",
                "macros"
            ],
            "title": "What is the best way to do loops in JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The obvious answer is something like the following:</p>\n\n<pre><code>var origCall = Function.prototype.call;\nFunction.prototype.call = function (thisArg) {\n    console.log(\"calling a function\");\n\n    var args = Array.prototype.slice.call(arguments, 1);\n    origCall.apply(thisArg, args);\n};\n</code></pre>\n\n<p>But this actually immediately enters an infinite loop, because the very act of calling <code>console.log</code> executes a function call, which calls <code>console.log</code>, which executes a function call, which calls <code>console.log</code>, which...</p>\n\n<p>Point being, I'm not sure this is possible.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>I am getting SOME results and no page crashes with the following : </p>\n\n<pre><code>(function () {\n  var \n    origCall = Function.prototype.call,\n    log = document.getElementById ('call_log');  \n\n  // Override call only if call_log element is present    \n  log &amp;&amp; (Function.prototype.call = function (self) {\n    var r = (typeof self === 'string' ? '\"' + self + '\"' : self) + '.' + this + ' ('; \n    for (var i = 1; i &lt; arguments.length; i++) r += (i &gt; 1 ? ', ' : '') + arguments[i];  \n    log.innerHTML += r + ')&lt;br/&gt;';\n\n\n\n    this.apply (self, Array.prototype.slice.apply (arguments, [1]));\n  });\n}) ();\n</code></pre>\n\n<p>Only tested in Chrome version 9.xxx.</p>\n\n<p>It is certainly not logging all function calls, but it is logging some! \nI suspect only actual calls to 'call' intself are being processed</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Only a quick test, but it seems to work for me.\nIt may not be useful this way, but I'm basically restoring the prototype whilst in my replacement's body and then \"unrestoring\" it before exiting.</p>\n\n<p>This example simply logs all function calls - though there may be some fatal flaw I've yet to detect; doing this over a coffee break</p>\n\n<h2>implementation</h2>\n\n<pre><code>callLog = [];\n\n/* set up an override for the Function call prototype\n * @param func the new function wrapper\n */\nfunction registerOverride(func) {\n   oldCall = Function.prototype.call;\n   Function.prototype.call = func;\n}\n\n/* restore you to your regular programming \n */\nfunction removeOverride() {\n   Function.prototype.call = oldCall;\n}\n\n/* a simple example override\n * nb: if you use this from the node.js REPL you'll get a lot of buffer spam\n *     as every keypress is processed through a function\n * Any useful logging would ideally compact these calls\n */\nfunction myCall() { \n   // first restore the normal call functionality\n   Function.prototype.call = oldCall;\n\n   // gather the data we wish to log\n   var entry = {this:this, name:this.name, args:{}};\n   for (var key in arguments) {\n     if (arguments.hasOwnProperty(key)) {\n      entry.args[key] = arguments[key];\n     }\n   }\n   callLog.push(entry);\n\n   // call the original (I may be doing this part naughtily, not a js guru)\n   this(arguments);\n\n   // put our override back in power\n   Function.prototype.call = myCall;\n}\n</code></pre>\n\n<h2>usage</h2>\n\n<p>I've had some issues including calls to this in one big paste, so here's what I was typing into the REPL in order to test the above functions:</p>\n\n<pre><code>/* example usage\n * (only tested through the node.js REPL)\n */\nregisterOverride(myCall);\nconsole.log(\"hello, world!\");\nremoveOverride(myCall);\nconsole.log(callLog);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can override <code>Function.prototype.call</code>, just make sure to only <code>apply</code> functions within your override.</p>\n\n<pre><code>window.callLog = [];\nFunction.prototype.call = function() {\n    Array.prototype.push.apply(window.callLog, [[this, arguments]]);\n    return this.apply(arguments[0], Array.prototype.slice.apply(arguments,[1]));\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h1>Intercepting function calls</h1>\n\n<p>Many here have tried to override .call. Some have failed, some have succeeded.\nI'm responding to this old question, as it has been brought up at my workplace, with this post being used as reference.</p>\n\n<p>There are only two function-call related functions available for us to modify: .call and .apply. I will demonstrate a successful override of both.</p>\n\n<p>TL;DR: What OP is asking is not possible. Some of the success-reports in the answers are due to the console calling .call internally right before evaluation, not because of the call we want to intercept.</p>\n\n<h2>Overriding Function.prototype.call</h2>\n\n<p>This appears to be the first idea people come up with. Some have been more successful than others, but here is an implementation that works:</p>\n\n<pre><code>// Store the original\nvar origCall = Function.prototype.call;\nFunction.prototype.call = function () {\n    // If console.log is allowed to stringify by itself, it will\n    // call .call 9 gajillion times. Therefore, lets do it by ourselves.\n    console.log(\"Calling\",\n                Function.prototype.toString.apply(this, []),\n                \"with:\",\n                Array.prototype.slice.apply(arguments, [1]).toString()\n               );\n\n    // A trace, for fun\n   console.trace.apply(console, []);\n\n   // The call. Apply is the only way we can pass all arguments, so don't touch that!\n   origCall.apply(this, arguments);\n};\n</code></pre>\n\n<p>This successfully intercepts Function.prototype.call</p>\n\n<p>Lets take it for a spin, shall we?</p>\n\n<pre><code>// Some tests\nconsole.log(\"1\"); // Does not show up\nconsole.log.apply(console,[\"2\"]); // Does not show up\nconsole.log.call(console, \"3\"); // BINGO!\n</code></pre>\n\n<p>It is important that this is not run from a console. The various browsers have all sorts of console tools that call .call themselves <em>a lot</em>, including once for every input, which might confuse a user in the moment. Another mistake is to just console.log arguments, which goes through the console api for stringification, which in turn cause an infinite loop.</p>\n\n<h2>Overriding Function.prototype.apply as well</h2>\n\n<p>Well, what about apply then? They're the only magic calling functions we have, so lets try that as well. Here goes a version that catches both:</p>\n\n<pre><code>// Store apply and call\nvar origApply = Function.prototype.apply;\nvar origCall = Function.prototype.call;\n\n// We need to be able to apply the original functions, so we need\n// to restore the apply locally on both, including the apply itself.\norigApply.apply = origApply;\norigCall.apply = origApply;\n\n// Some utility functions we want to work\nFunction.prototype.toString.apply = origApply;\nArray.prototype.slice.apply = origApply;\nconsole.trace.apply = origApply;\n\nfunction logCall(t, a) {\n    // If console.log is allowed to stringify by itself, it will\n    // call .call 9 gajillion times. Therefore, do it ourselves.\n    console.log(\"Calling\",\n                Function.prototype.toString.apply(t, []),\n                \"with:\",\n                Array.prototype.slice.apply(a, [1]).toString()\n               );\n    console.trace.apply(console, []);\n}\n\nFunction.prototype.call = function () {\n   logCall(this, arguments);\n   origCall.apply(this, arguments);\n};\n\nFunction.prototype.apply = function () {\n    logCall(this, arguments);\n    origApply.apply(this, arguments);\n}\n</code></pre>\n\n<p>... And lets try it out!</p>\n\n<pre><code>// Some tests\nconsole.log(\"1\"); // Passes by unseen\nconsole.log.apply(console,[\"2\"]); // Caught\nconsole.log.call(console, \"3\"); // Caught\n</code></pre>\n\n<p>As you can see, the calling parenthesis go unnoticed.</p>\n\n<h1>Conclusion</h1>\n\n<p>Fortunately, calling parenthesis cannot be intercepted from JavaScript. But even if .call would intercept the parenthesis operator on function objects, how would we call the original without causing an infinite loop?</p>\n\n<p>The only thing overriding .call/.apply does is to intercept explicit calls to those prototype functions. If the console is used with that hack in place, there will be lots and lots of spam. One must furthermore be very careful if it is used, as using the console API can quickly cause an infinite loop (console.log will use .call internally if one gives it an non-string).</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Can I override the behavior of the Function object so that I can inject behavior prior t every function call, and then carry on as normal?  Specifically, (though the general idea is intriguing in itself) can I log to the console every function call without having to insert console.log statements everywhere? And then the normal behavior goes on?</p>\n\n<p>I do recognize that this will likely have significant performance problems; I have no intention of having this run typically, even in my development environment.  But if it works it seems an elegant solution to get a 1000 meter view on the running code.  And I suspect that the answer will show me something deeper about javascript.</p>\n",
            "last_activity_date": 1399781571,
            "question_id": 5226550,
            "score": 27,
            "tags": [
                "javascript"
            ],
            "title": "Can I override the Javascript Function object to log all function calls?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<ol>\n<li>Think of an unlimited grid with just a left edge.</li>\n<li>Each event is one cell wide, and the height and vertical position is fixed based on starting and ending times.</li>\n<li>Try to place each event in a column as far left as possible, without it intersecting any earlier event in that column.</li>\n<li>Then, when each connected group of events is placed, their actual widths will be 1/n of the maximum number of columns used by the group.</li>\n<li>You could also expand the events at the far left and right to use up any remaining space.</li>\n</ol>\n\n<pre class=\"lang-cs prettyprint-override\"><code>/// Pick the left and right positions of each event, such that there are no overlap.\n/// Step 3 in the algorithm.\nvoid LayoutEvents(IEnumerable&lt;Event&gt; events)\n{\n    var columns = new List&lt;List&lt;Event&gt;&gt;();\n    DateTime? lastEventEnding = null;\n    foreach (var ev in events.OrderBy(ev =&gt; ev.Start).ThenBy(ev =&gt; ev.End))\n    {\n        if (ev.Start &gt;= lastEventEnding)\n        {\n            PackEvents(columns);\n            columns.Clear();\n            lastEventEnding = null;\n        }\n        bool placed = false;\n        foreach (var col in columns)\n        {\n            if (!col.Last().CollidesWith(ev))\n            {\n                col.Add(ev);\n                placed = true;\n                break;\n            }\n        }\n        if (!placed)\n        {\n            columns.Add(new List&lt;Event&gt; { ev });\n        }\n        if (lastEventEnding == null || ev.End &gt; lastEventEnding.Value)\n        {\n            lastEventEnding = ev.End;\n        }\n    }\n    if (columns.Count &gt; 0)\n    {\n        PackEvents(columns);\n    }\n}\n\n/// Set the left and right positions for each event in the connected group.\n/// Step 4 in the algorithm.\nvoid PackEvents(List&lt;List&lt;Event&gt;&gt; columns)\n{\n    float numColumns = columns.Count;\n    int iColumn = 0;\n    foreach (var col in columns)\n    {\n        foreach (var ev in col)\n        {\n            int colSpan = ExpandEvent(ev, iColumn, columns);\n            ev.Left = iColumn / numColumns;\n            ev.Right = (iColumn + colSpan) / numColumns;\n        }\n        iColumn++;\n    }\n}\n\n/// Checks how many columns the event can expand into, without colliding with\n/// other events.\n/// Step 5 in the algorithm.\nint ExpandEvent(Event ev, int iColumn, List&lt;List&lt;Event&gt;&gt; columns)\n{\n    int colSpan = 1;\n    foreach (var col in columns.Skip(iColumn + 1))\n    {\n        foreach (var ev1 in col)\n        {\n            if (ev1.CollidesWith(ev))\n            {\n                return colSpan;\n            }\n        }\n        colSpan++;\n    }\n    return colSpan;\n}\n</code></pre>\n\n<p><strong>Edit:</strong> Now sorts the events, instead of assuming they is sorted.</p>\n\n<p><strong>Edit2:</strong> Now expands the events to the right, if there are enough space.</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>The accepted answer describes an algorithm with 5 steps. The example implementation linked in the comments of the accepted answer implements only steps 1 to 4. Step 5 is about making sure the rightmost event uses all the space available. See event 7 in the image provided by the OP. </p>\n\n<p>I expanded the given implementation by adding step 5 of the described algorithm:</p>\n\n<pre><code>$( document ).ready( function( ) {\n  var column_index = 0;\n  $( '#timesheet-events .daysheet-container' ).each( function() {\n\n    var block_width = $(this).width();\n    var columns = [];\n    var lastEventEnding = null;\n\n    // Create an array of all events\n    var events = $('.bubble_selector', this).map(function(index, o) {\n      o = $(o);\n      var top = o.offset().top;\n      return {\n        'obj': o,\n        'top': top,\n        'bottom': top + o.height()\n      };\n    }).get();\n\n    // Sort it by starting time, and then by ending time.\n    events = events.sort(function(e1,e2) {\n      if (e1.top &lt; e2.top) return -1;\n      if (e1.top &gt; e2.top) return 1;\n      if (e1.bottom &lt; e2.bottom) return -1;\n      if (e1.bottom &gt; e2.bottom) return 1;\n      return 0;\n    });\n\n    // Iterate over the sorted array\n    $(events).each(function(index, e) {\n\n      // Check if a new event group needs to be started\n      if (lastEventEnding !== null &amp;&amp; e.top &gt;= lastEventEnding) {\n        // The latest event is later than any of the event in the \n        // current group. There is no overlap. Output the current \n        // event group and start a new event group.\n        PackEvents( columns, block_width );\n        columns = [];  // This starts new event group.\n        lastEventEnding = null;\n      }\n\n      // Try to place the event inside the existing columns\n      var placed = false;\n      for (var i = 0; i &lt; columns.length; i++) {                   \n        var col = columns[ i ];\n        if (!collidesWith( col[col.length-1], e ) ) {\n          col.push(e);\n          placed = true;\n          break;\n        }\n      }\n\n      // It was not possible to place the event. Add a new column \n      // for the current event group.\n      if (!placed) {\n        columns.push([e]);\n      }\n\n      // Remember the latest event end time of the current group. \n      // This is later used to determine if a new groups starts.\n      if (lastEventEnding === null || e.bottom &gt; lastEventEnding) {\n        lastEventEnding = e.bottom;\n      }\n    });\n\n    if (columns.length &gt; 0) {\n      PackEvents( columns, block_width );\n    }\n  });\n});\n\n\n// Function does the layout for a group of events.\nfunction PackEvents( columns, block_width )\n{\n  var n = columns.length;\n  for (var i = 0; i &lt; n; i++) {\n    var col = columns[ i ];\n    for (var j = 0; j &lt; col.length; j++)\n    {\n      var bubble = col[j];\n      var colSpan = ExpandEvent(bubble, i, columns);\n      bubble.obj.css( 'left', (i / n)*100 + '%' );\n      bubble.obj.css( 'width', block_width * colSpan / n - 1 );\n    }\n  }\n}\n\n// Check if two events collide.\nfunction collidesWith( a, b )\n{\n  return a.bottom &gt; b.top &amp;&amp; a.top &lt; b.bottom;\n}\n\n// Expand events at the far right to use up any remaining space. \n// Checks how many columns the event can expand into, without \n// colliding with other events. Step 5 in the algorithm.\nfunction ExpandEvent(ev, iColumn, columns)\n{\n    var colSpan = 1;\n\n    // To see the output without event expansion, uncomment \n    // the line below. Watch column 3 in the output.\n    //return colSpan;\n\n    for (var i = iColumn + 1; i &lt; columns.length; i++) \n    {\n      var col = columns[i];\n      for (var j = 0; j &lt; col.length; j++)\n      {\n        var ev1 = col[j];\n        if (collidesWith(ev, ev1))\n        {\n           return colSpan;\n        }\n      }\n      colSpan++;\n    }\n    return colSpan;\n}\n</code></pre>\n\n<p>A working demo is available at <a href=\"http://jsbin.com/detefuveta/edit?html,js,output\" rel=\"nofollow\">http://jsbin.com/detefuveta/edit?html,js,output</a>\nSee column 3 of the output for examples of expanding the rightmost events. </p>\n\n<p>PS: This should really be a comment to the accepted answer. Unfortunately I don't have the privileges to comment.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I need your help with an algorithm (it will be developed on client side with javascript, but doesn't really matter, I'm mostly interested in the algorithm itself) laying out calendar events so that each event box has maximum width. Please see the following picture:</p>\n\n<p><img src=\"http://i.stack.imgur.com/8PVnY.png\" alt=\"calendar events layout\"></p>\n\n<p>Y axis is time. So if \"Test event\" starts at noon (for example) and nothing more intersects with it, it takes the whole 100% width. \"Weekly review\" intersects with \"Tumbling YMCA\" and \"Anna/Amelia\", but the latter two are not intersecting, so they all fill up 50%. Test3, Test4 and Test5 are all intersecting, so max width is 33.3% for each. But Test7 is 66% since Test3 is 33% fixed (see above) , so it takes all available space , which is 66%. </p>\n\n<p>I need an algorithm how to lay this out.</p>\n\n<p>Thanks in advance</p>\n",
            "last_activity_date": 1422638148,
            "question_id": 11311410,
            "score": 26,
            "tags": [
                "javascript",
                "algorithm",
                "calendar",
                "visualization"
            ],
            "title": "Visualization of calendar events. Algorithm to layout events with maximum width"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>Object.defineProperty(global, '__stack', {\n  get: function(){\n    var orig = Error.prepareStackTrace;\n    Error.prepareStackTrace = function(_, stack){ return stack; };\n    var err = new Error;\n    Error.captureStackTrace(err, arguments.callee);\n    var stack = err.stack;\n    Error.prepareStackTrace = orig;\n    return stack;\n  }\n});\n\nObject.defineProperty(global, '__line', {\n  get: function(){\n    return __stack[1].getLineNumber();\n  }\n});\n\nconsole.log(__line);\n</code></pre>\n\n<p>The above will log <code>19</code>.</p>\n\n<p>Combined with <code>arguments.callee.caller</code> you can get closer to the type of useful logging you get in C via macros.</p>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>apparently this works too in node or chrome browser (possibly others as well)</p>\n\n<pre><code>line = (o) -&gt;\n  b = Error.prepareStackTrace\n  Error.prepareStackTrace = (_, stack) -&gt; stack\n  e = new Error\n  Error.captureStackTrace e, o\n  s = e.stack\n  Error.prepareStackTrace = b\n  s[1].getLineNumber()\n\nconsole.log line this\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>lineNumber=(o)-&gt;E=Error;p='prepareStackTrace';b=E[p];E[p]=((_,s)-&gt;s);e=new E;E.captureStackTrace e,o;s=e.stack;E[p]=b;s[1].getLineNumber()\n\nconsole.log lineNumber this\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>JavaScript developers who have spent time in languages like C often miss the ability to use certain types of introspection, like logging line numbers, and what method the current method was invoked from. Well if you're using V8 (Chrome, Node.js) you can employ the following.</p>\n",
            "last_activity_date": 1357102663,
            "question_id": 11386492,
            "score": 24,
            "tags": [
                "javascript",
                "node.js",
                "google-chrome",
                "v8"
            ],
            "title": "Accessing line number in V8 JavaScript (Chrome &amp; Node.js)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Here is <a href=\"https://github.com/umdjs/umd\">a list of various cross-compatible module formats</a>.</p>\n\n<p>I suspect that the one you're looking for is what they're calling \"<a href=\"https://github.com/umdjs/umd/blob/master/commonjsStrict.js\">commonjsStrict.js</a>\"</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Yes, and I owe this answer to <a href=\"https://github.com/ded/\">ded</a> and his awesome modules:</p>\n\n<pre><code>(function(name, definition) {\n    if (typeof module != 'undefined') module.exports = definition();\n    else if (typeof define == 'function' &amp;&amp; typeof define.amd == 'object') define(definition);\n    else this[name] = definition();\n}('mod', function() {\n    //This is the code you would normally have inside define() or add to module.exports\n    return {\n        sayHi: function(name) {\n            console.log('Hi ' + name + '!');\n        }\n    };\n}));\n</code></pre>\n\n<p>This can then be used:</p>\n\n<ol>\n<li><p>in AMD (e.g. with requireJS):</p>\n\n<pre><code>requirejs(['mod'], function(mod) {\n    mod.sayHi('Marc');\n});\n</code></pre></li>\n<li><p>in commonJS (e.g. nodeJS):</p>\n\n<pre><code>var mod = require('./mod');\nmod.sayHi('Marc');\n</code></pre></li>\n<li><p>globally (e.g. in HTML):</p>\n\n<pre><code>&lt;script src=\"mod.js\"&gt;&lt;/script&gt;\n&lt;script&gt;mod.sayHi('Marc');&lt;/script&gt;\n</code></pre></li>\n</ol>\n\n<p>This method needs to get more publicity - if jQuery and co. started using it life would be much easier!</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>Just to update a little bit on this answer in regards to @marc I too give credit to ded and have updated it a bit to be with the latest updates:</p>\n\n\n\n<pre><code>(function (name, definition, context, dependencies) {\n  if (typeof context['module'] !== 'undefined' &amp;&amp; context['module']['exports']) { if (dependencies &amp;&amp; context['require']) { for (var i = 0; i &lt; dependencies.length; i++) context[dependencies[i]] = context['require'](dependencies[i]); } context['module']['exports'] = definition.apply(context); }\n  else if (typeof context['define'] !== 'undefined' &amp;&amp; context['define'] === 'function' &amp;&amp; context['define']['amd']) { define(name, (dependencies || []), definition); }\n  else { context[name] = definition(); }\n})('events', function () {\n  // Insert code here\n  return {\n    sayHi: function(name) {\n      console.log('Hi ' + name + '!');\n    }\n  };\n}, (this || {}));\n</code></pre>\n\n<p>Object at the end is a reference to either the parent or the current scope, lets say you have a package you are writing and this is just a piece of the pie, well that context could be a name-spaced object and this is just a slice of that pie.</p>\n\n<p>Also, if you wish to have dependencies, there is an optional parameter at the end after your scope which supports an array, in this case the definition parameter then can utilize each dependency as a argument. Also, the dependencies listed in an array will be required inside node-js platform for your convenience sake.</p>\n\n<p>See: <a href=\"https://gist.github.com/Nijikokun/5192472\" rel=\"nofollow\">https://gist.github.com/Nijikokun/5192472</a> for a real example.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have solved this exact problem and managed to easily support:</p>\n\n<ul>\n<li>Dojo AMD (referencing the RequireJS specs)</li>\n<li>jQuery (under $/jQuery.fn.[your_library_here])</li>\n<li>node.js using vanilla require('path_to.js')</li>\n<li>Browser window.[your_library_here]</li>\n</ul>\n\n<p>It's using a combination of dependency injection and IIFE to get the job done.</p>\n\n<p>See Below:</p>\n\n<pre><code>/*global jQuery:false, window:false */\n// # A method of loading a basic library in AMD, Node.JS require(), jQuery and Javascript's plain old window namespace.\n(function(exporterFunction) {\nexporterFunction('cll',\n    function(a,b) {\n        return a+b;\n    }\n);\n})(\n    (function() { // Gets an exportFunction to normalize Node / Dojo / jQuery / window.*\n\n        if ((typeof module != 'undefined') &amp;&amp; (module.exports)) { // Node Module\n            return function(library_name,what_was_exported) {\n                module.exports = what_was_exported;\n                return;\n            };\n        }\n        if (typeof define != 'undefined' &amp;&amp; define.hasOwnProperty('amd') &amp;&amp; define.amd) { // Dojo AMD\n            return function(library_name,what_was_exported) {\n                define(function() {\n                    return what_was_exported;\n                });\n            };\n        }\n        if (typeof jQuery === 'function') { // jQuery Plugin\n            return function(library_name,source) {\n                jQuery.fn[library_name] = source;\n                return;\n            };\n        }\n        if (typeof window != 'undefined') { // Fall down to attaching to window...\n            return function(library_name,what_was_exported) {\n                window[library_name] = what_was_exported;\n            };\n        }\n\n    })(),\n    (function() { \n        // ## Other Parameters Here\n        // You could add parameters to the wrapping function, to include extra \n        // functionalilty which is dependant upon the environment... See \n        // https://github.com/forbesmyester/me_map_reduce for ideas.\n        return 'this_could_be_more_arguments_to_the_main_function'; \n    })()\n);\n</code></pre>\n\n<p>Public Gist available at <a href=\"https://gist.github.com/forbesmyester/5293746\" rel=\"nofollow\">https://gist.github.com/forbesmyester/5293746</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://urequire.org\">uRequire</a>, the Universal Module &amp; Resource Converter is the tool that does exactly that. </p>\n\n<ul>\n<li><p>It mainly <strong>converts AMD and CommonJS</strong> to <strong>UMD / AMD / CommonJS / Plain script (no AMD loader required)</strong>.</p></li>\n<li><p>It allows declarative exporting of modules, with a <code>noConflict()</code> baked in.</p></li>\n<li><p>It can manipulate modules (inject/replace/remove dependencies OR code) as you build them.</p></li>\n<li><p>It converts from coffeescript, coco, Livescript, icedCoffeescript and you can add your own conversions in one liners!</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Is there a way to create a javascript micro-library (a library that has no dependencies), that support all of the following module formats:</p>\n\n<ul>\n<li>Asynchronous Module Definition</li>\n<li>CommonJS</li>\n<li>exposing the library's exports as a global namespace object (no loader)</li>\n</ul>\n",
            "last_activity_date": 1380708771,
            "question_id": 13673346,
            "score": 22,
            "tags": [
                "javascript",
                "amd",
                "commonjs"
            ],
            "title": "supporting both CommonJS and AMD"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>There was a bug in Webkit that incorrectly implemented the \"popstate\" event. Check out this simple post explaining the problem (cool little show and tell): <a href=\"http://www.bcherry.net/playground/pushstate\" rel=\"nofollow\">http://www.bcherry.net/playground/pushstate</a></p>\n\n<p>My suggestion would be to implement your own \"popstate\" event tracker for Safari. Something like this:</p>\n\n<pre><code>$(window).load(function(){\n  function fire_popstate(){\n    $(this).trigger(\"popstate\"); // fire it when the page first loads\n  }\n  var lasthash = window.location.hash;\n  setInterval(function(){\n    var currenthash = window.location.hash;\n    if(lasthash != currenthash){\n      fire_popstate();\n    }\n  }, 500);//check every half second if the url has changed\n});\n</code></pre>\n\n<p>You could wrap that statement in a browser test to check for safari. Even better see if \"popstate\" has been fired by the time the DOM is ready and then apply the inner function to replace the implementation. The one thing you don't want to happen is have two popstate events to be fired (duplicating your event handler logic, great way to lock up the UI).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The situation is now reversed. Chrome has fixed the bug and now fires popstate on page load but Firefox 4 (since RC) has departed from the spec and <a href=\"http://hacks.mozilla.org/2011/03/history-api-changes-in-firefox-4/\" rel=\"nofollow\">now does not fire popstate</a>! </p>\n\n<p><strong>UPDATE</strong>: The HTML5 spec was changed in 2011 to state popstate should not fired on page load. Both Firefox and Chrome now do the right thing as of Firefox 4 and <a href=\"https://code.google.com/p/chromium/issues/detail?id=63040\" rel=\"nofollow\">Chrome 34</a>.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>See the code from pjax. pjax is fairly popular open source library now, so the below logic might be the best to avoid this issue.</p>\n\n<pre><code>var popped = ('state' in window.history), initialURL = location.href\n$(window).bind('popstate', function(event) {\n  // Ignore inital popstate that some browsers fire on page load\n  var initialPop = !popped &amp;&amp; location.href == initialURL\n  popped = true\n  if ( initialPop ) return\n  ...\n</code></pre>\n\n<p><a href=\"https://github.com/defunkt/jquery-pjax/blob/master/jquery.pjax.js\">https://github.com/defunkt/jquery-pjax/blob/master/jquery.pjax.js</a></p>\n",
                    "is_accepted": false,
                    "score": 41
                },
                {
                    "body": "<p>This is my workaround.</p>\n\n<pre><code>window.setTimeout(function() {\n  window.addEventListener('popstate', function() {\n    // ...\n  });\n}, 1000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In webkit the popstate event is fired on page load. To avoid this, this easy work around works for me:</p>\n\n<p>Every time I fire <code>history.push(...)</code> I add the <code>class</code> <em>historypushed</em> to the <code>body</code>-tag:</p>\n\n<pre><code>history.push(...);\n$(\"body\").addClass(\"historypushed\");\n</code></pre>\n\n<p>When I trigger the popstate event, I check for this class:</p>\n\n<pre><code>$(window).bind('popstate', function(e) {\n if($(\"body\").hasClass(\"historypushed\")) { \n  /* my code */ \n } \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>An easy way to avoid this issue is to set the first argument on pushState to true then check against onpopstate.  Similar to the pjax example but a bit more straightforward.  The below example will run doSomething() for every popstate event except for the first page load.</p>\n\n<pre><code>function setupPopState() {\n  if (history.popState) {\n    # immediately replace state to ensure popstate works for inital page\n    history.replaceState(true, null, window.location.pathname);\n\n    $(window).bind('popstate', function(event) {\n      if (event.originalEvent.state) {\n        doSomething();\n      }\n    });\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Given the following:</p>\n\n<pre><code>$(window).bind(\"popstate\", function() {\n    alert('popstate');\n});\n</code></pre>\n\n<p>On first load, the alert fires with FireFox and Chrome but not Safari. Why is that? Anyone else seen this and know how to best solve for this?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1400153995,
            "question_id": 4688164,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "html5",
                "history"
            ],
            "title": "window bind POPSTATE"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>To install <em>nodemon</em>, use the following (if required, use <em>sudo</em> to run the installation with root privileges:</p>\n\n<pre><code>npm install -g nodemon\n</code></pre>\n\n<p>This will install <em>nodemon</em> globally on your machine.</p>\n\n<p>Then, in your WebStorm <em>Run Configuration</em>, add the following, leaving everything else unchanged:</p>\n\n<ul>\n<li>Node parameters: <code>/usr/local/bin/nodemon --exec /usr/local/bin/node</code></li>\n</ul>\n\n<p>This will instruct the node interpreter to execute the <code>nodemon</code> script using the following command line: <code>node /usr/local/bin/nodemon --exec /usr/local/bin/node server.js</code>.</p>\n\n<p>The <code>--exec</code> part is important, as the execution will fail with the following error:</p>\n\n<pre><code>/usr/local/bin/node /usr/local/bin/nodemon server.js\n4 Oct 13:56:50 - [nodemon] v0.7.10\n4 Oct 13:56:50 - [nodemon] to restart at any time, enter `rs`\n4 Oct 13:56:50 - [nodemon] watching: /Users/foo/test\nexecvp(): No such file or directory\n4 Oct 13:56:50 - [nodemon] starting `node server.js`\n4 Oct 13:56:50 - [nodemon] exception in nodemon killing node\nError: spawn ENOENT\n    at errnoException (child_process.js:980:11)\n    at Process.ChildProcess._handle.onexit (child_process.js:771:34)\n</code></pre>\n\n<p>The error seems to be caused by WebStorm not seeing the <code>node</code> executable on its path.</p>\n\n<p>The fix for this is to specify the location to the <code>node</code> executable using the <code>--exec /usr/local/bin/node</code> parameter.</p>\n\n<p>Using these settings, <em>nodemon</em> works fine when run from a WebStorm <em>Run Configuration</em>.</p>\n\n<p>The same trick might have to be used with some of the tools similar to <em>nodemon</em>, e.g. <a href=\"https://github.com/isaacs/node-supervisor\">node-supervisor</a>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I'm on Windows and for me didn't worked with nodemon (no idea way), but someone from jetbrains suggested to try with supervisor:</p>\n\n<ol>\n<li><p>I installed supervisor : <code>npm install supervisor -g</code></p></li>\n<li><p>Then find where is installed <code>supervisor</code>, for me was in: \n<code>C:\\Users\\AlinC\\AppData\\Roaming\\npm\\node_modules\\supervisor\\lib\\cli-wrapper.js \u2013no-restart-on error</code></p></li>\n<li><p>I went back to intellij and to edit configurations -> node parameters -> and added:\nC:\\Users\\AlinC\\AppData\\Roaming\\npm\\node_modules\\supervisor\\lib\\cli-wrapper.js \u2013no-restart-on error</p></li>\n</ol>\n\n<p><img src=\"http://i.stack.imgur.com/JNHTF.png\" alt=\"edit configurations\"></p>\n\n<p><img src=\"http://i.stack.imgur.com/0Ysgh.png\" alt=\"node parameters\"></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can just use the nodemon.cmd instead of node directly like : </p>\n\n<pre><code>Node interpreter : C:\\MyPath\\To\\nodemon.cmd\nNode parameters : /*Empty for me*/\nNode WorkingDirectoy : C:\\Users\\MyUserName\\Desktop\\DirectoryContainingMyIndex.js\nJavaScriptFile : app\\index.js /*or just index.js depending on your config*/\n</code></pre>\n\n<p>and then : </p>\n\n<p><img src=\"http://i.stack.imgur.com/1s7vG.png\" alt=\"enter image description here\"></p>\n\n<p>Hope it will help you.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>It looks like the workaround with <code>--exec</code> isn't necessary anymore, at least when using the newest version of <a href=\"https://github.com/remy/nodemon\">nodemon</a> and Webstorm 7 or 8.</p>\n\n<p>All you have to do is specify your path to <em>nodemon</em> (e.g. <code>/usr/local/bin/nodemon</code>) under \"Node parameters\":</p>\n\n<p><img src=\"http://i.stack.imgur.com/rdk1q.png\" alt=\"Webstorm with nodemon\"></p>\n\n<p>@Bela Clark, thanks for confirming.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<ol>\n<li>Do a npm install nodmemon -g </li>\n<li><p>Only change the Path to Node to the nodemon.cmd, in my case (C:\\Users\\Rohit Taneja\\AppData\\Roaming\\npm\\nodemon.cmd), you'll also get this path after your installion of nodemon finishes.</p></li>\n<li><p>You're good to go</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>@bernhardw</p>\n\n<p>On my Webstorm 8.0.1:</p>\n\n<p>Note interpreter: /usr/local/bin/nodemon</p>\n\n<p>Node parameters : --exec /usr/local/bin/node</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's the configuration that works for me on Windows 7 + WebStorm 8.0.4. If I put nodemon.cmd as the node interpreter I kept getting \"Terminate batch job (Y/N)?\". </p>\n\n<p><img src=\"http://i.stack.imgur.com/cQpuu.png\" alt=\"Nodemon + Webstorm on Windows\"></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>On Windows, stuck with the 'Terminate Batch', Robert Jakubowicz's answer did it for me.\nI missed that I needed to add app.js for my express application on first read.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>some of these answers appear to only work for Mac. For Windows, this configuration seems to work (my user name on Windows 7 is denman).</p>\n\n<p><img src=\"http://i.stack.imgur.com/2hZrP.png\" alt=\"enter image description here\"></p>\n\n<p>main.js is the starting point file for my Express application.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I would like to use <a href=\"https://github.com/remy/nodemon\">nodemon</a> from within the WebStorm IDE (version 7). Nodemon watches one or more files in my source folder and restarts the node process (an Express server in this case), when one of the source files changes.</p>\n\n<p>How do I configure WebStorm to use <em>nodemon</em> in a <em>Run Configuration</em>, so that the node process is automatically restarted?</p>\n\n<p>Without <em>nodemon</em>, I use the following configuration in WebStorm, but have to restart the node process whenever I change something in the source file:</p>\n\n<ul>\n<li>Node interpreter: <code>/usr/local/bin/node</code></li>\n<li>Working directory: <code>/Users/foo/test</code></li>\n<li>JavaScript file: <code>server.js</code></li>\n</ul>\n\n<p>This results in a Run Configuration that runs <code>node server.js</code> in the specified directory.</p>\n\n<p>From command line, I can use the following command to use <em>nodemon</em> to watch for file changes: <code>nodemon server.js</code> in the project directory.</p>\n\n<p>How do I need to change the WebStorm configuration so that it also uses <em>nodemon</em>?</p>\n",
            "last_activity_date": 1419037992,
            "question_id": 19180702,
            "score": 20,
            "tags": [
                "javascript",
                "node.js",
                "webstorm",
                "nodemon"
            ],
            "title": "How can I run nodemon from within WebStorm?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>It's not about performance, it's about accessing a property of a specific instance of an object:-</p>\n\n<pre><code>x.init()\n</code></pre>\n\n<p>Would not display 'test' if you hadn't use <code>this</code> in the function.</p>\n\n<p>Effectively the above line is the same as:-</p>\n\n<pre><code>x.init.call(x);\n</code></pre>\n\n<p>the first paramater in the use of <code>call</code> is assigned to <code>this</code> when the function is executed.</p>\n\n<p>Now consider:-</p>\n\n<pre><code>var fn = x.init;  //Note no () so the function itself is assigned to the variable fn\nfn();\n</code></pre>\n\n<p>Now you get nothing in the alert.  This because the above is effectively:-</p>\n\n<pre><code>fn.call(window);\n</code></pre>\n\n<p>In browser hosted Javascript the <code>window</code> object is synonymous with the global object.  When a function is called \"in the raw\" then the <code>this</code> defaults to the global object.</p>\n\n<p>The classic error is doing something like this:-</p>\n\n<pre><code>var x = {\n   ele: 'test';\n   init: function(elem) { \n      elem.onclick = function() { alert(this.ele); }\n   }\n}\nx.init(document.getElementById('myButton'));\n</code></pre>\n\n<p>However this doesn't work because the function attached to the onclick event is called by the browser using code like:-</p>\n\n<pre><code>onclick.call(theDOMElement)\n</code></pre>\n\n<p>Hence when the function is running <code>this</code> isn't what you think it is.</p>\n\n<p>My usual solution to this situation is:-</p>\n\n<pre><code>var x = {\n   ele: 'test';\n   init: function(elem) {\n      var self = this; \n      elem.onclick = function() { alert(self.ele); }\n      elem = null;\n   }\n}\nx.init(document.getElementById('myButton'));\n</code></pre>\n\n<p>Note the <code>elem = null</code> is IE memory leak work-around.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>It is very confusing. It depends on how you call the function. Doug Crockford did a good write-up in his book <a href=\"http://oreilly.com/catalog/9780596517748\" rel=\"nofollow\">Javascript, the Good Parts</a>. The gist of it is in <a href=\"http://stackoverflow.com/questions/1118675/hi-everyone-what-do-these-this-mean-in-this-simple-javascript-program/1118938#1118938\">this excellent answer</a> to an otherwise badly formulated question.</p>\n\n<p>And no, it's not about performance.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>A good and enlightening article on the <code>this</code> keyword is <a href=\"http://www.quirksmode.org/js/this.html\" rel=\"nofollow\" title=\"Article on the this keyword\">this</a> (no pun intended). The article may clear things up for you, I know it did for me. </p>\n\n<p>The essential rule is that the <code>this</code> keyword inside a function always refers to the function owner, and the key to understanding the consequences is understanding when functions are <em>referred</em> and when they are <em>copied</em>. See the beforementioned article for examples.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>use</p>\n\n<pre><code>var me = this;\n</code></pre>\n\n<p>outside of the</p>\n\n<pre><code>function(){\n</code></pre>\n\n<p>then you can refer to me inside the function()</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To me, it helped a lot the following guideline: every time you see <code>this</code> think <code>owner</code>. The object who owns the variable name to which the function is assigned will become the <code>this</code>. If you cannot make sense to who owns it, then <code>this</code> will be window.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Working with the JavaScript one of the confusing thing is when using <em>this</em></p>\n\n<pre><code>var x = {  \n  ele : 'test',\n  init : function(){ \n    alert(this.ele);\n  }\n}\n</code></pre>\n\n<p>However when dealing with multiple object and especially events context of <code>this</code> changes and becomes confusing to keep track/understand.</p>\n\n<p>So if anybody has better inputs/guidelines/thoughts/better practices, please share. Also I would like know if using <code>this</code> gives any (performance) advantage or what?</p>\n",
            "last_activity_date": 1422419587,
            "question_id": 2148451,
            "score": 20,
            "tags": [
                "javascript",
                "javascript-events",
                "javascript-library",
                "unobtrusive-javascript"
            ],
            "title": "Help, &quot;this&quot; is confusing me in JavaScript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I haven't used it before, but angular has a <a href=\"http://docs.angularjs.org/api/ng.%24anchorScroll\" rel=\"nofollow\">$anchorScroll</a> service. As to reloading the data, you could cache it using <a href=\"http://docs.angularjs.org/api/ng.%24cacheFactory\" rel=\"nofollow\">$cacheFactory</a>, or store the data on a higher scope.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>I have a fiddle here that shows how to restore scroll position in the list view after a detail view; not encapsulated in a directive yet, working on that...</p>\n\n<p><a href=\"http://jsfiddle.net/BkXyQ/6/\">http://jsfiddle.net/BkXyQ/6/</a></p>\n\n<pre><code>$scope.scrollPos = {}; // scroll position of each view\n\n$(window).on('scroll', function() {\n    if ($scope.okSaveScroll) { // false between $routeChangeStart and $routeChangeSuccess\n        $scope.scrollPos[$location.path()] = $(window).scrollTop();\n        //console.log($scope.scrollPos);\n    }\n});\n\n$scope.scrollClear = function(path) {\n    $scope.scrollPos[path] = 0;\n}\n\n$scope.$on('$routeChangeStart', function() {\n    $scope.okSaveScroll = false;\n});\n\n$scope.$on('$routeChangeSuccess', function() {\n    $timeout(function() { // wait for DOM, then restore scroll position\n        $(window).scrollTop($scope.scrollPos[$location.path()] ? $scope.scrollPos[$location.path()] : 0);\n        $scope.okSaveScroll = true;\n    }, 0);\n});\n</code></pre>\n\n<p>The fiddle also shows fetching the list once, outside of 'ListCtrl'.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>i created a directive that works on the window scroll ( it could updated to work on any element though )</p>\n\n<p>html usage</p>\n\n<pre><code>&lt;div ng-keep-scroll=\"service.scrollY\"&gt;\n&lt;!-- list of scrolling things here --&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>where \"service.scrollY\" MUST be a variable within a service. Services retain their state and values, controllers are recreated every time they load and clear their values so you cant use them to store persistent data. the controller has a scope variable pointing to the service.</p>\n\n<p>directive js</p>\n\n<pre><code>app.directive('ngKeepScroll', function ($timeout) {\n    return function (scope, element, attrs) {\n\n        //load scroll position after everything has rendered\n        $timeout(function () {\n            var scrollY = parseInt(scope.$eval(attrs.ngKeepScroll));\n            $(window).scrollTop(scrollY ? scrollY : 0);\n        }, 0);\n\n        //save scroll position on change\n        scope.$on(\"$routeChangeStart\", function () {\n            scope.$eval(attrs.ngKeepScroll + \" = \" + $(window).scrollTop());\n        });\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If your page requires fetching of data to display, you may have to use $routeChangeSuccess and delay the scrolling function call.</p>\n\n<pre><code>    scope.$on(\"$routeChangeSuccess\", function() {\n        $timeout(function () {\n            var scrollY = parseInt(scope.$eval(attrs.ngKeepScroll));\n            $(window).scrollTop(scrollY ? scrollY : 0);\n        }, 1000); // delay by 1 sec\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've found another simple way to solve this issue:</p>\n\n<pre><code>var scrollValue = $(window).scrollTop();\n\n$rootScope.$on(\"$routeChangeStart\", function() {\n    scrollValue = $(window).scrollTop();\n});\n\n$rootScope.$on('$routeChangeSuccess', function(newRoute, oldRoute) {\n    setTimeout(function() { $(window).scrollTop(scrollValue); }, 0);\n});\n</code></pre>\n\n<p>Just put it in .run().</p>\n\n<p>This way, setting timeout value to 0 it still works, but runs after the page is rendered (without timeout function it runs before the content (i.e. template or data loading) is rendered, making the function useless.</p>\n\n<p>If you fetch data from some API, you can wrap the timeout in a function in $rootScope and run it after successful request.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Below is another version of keep-scroll-pos directive. This version</p>\n\n<ul>\n<li><p>Remembers scroll position of each <em>templateUrl</em> of your $routeProvider definition.</p></li>\n<li><p>Respects hash tags, e.g., #/home#<em>section-2</em>, will scroll to <em>#section-2</em> not previous scroll position.</p></li>\n<li><p>Is easy to use, as it is self-contained, and stores scroll positions internally.</p></li>\n</ul>\n\n<p>Example of html use:</p>\n\n<pre><code>&lt;div ng-view keep-scroll-pos&gt;&lt;/div&gt;\n</code></pre>\n\n<p>The code for keepScrollPos directive is below:</p>\n\n<pre>\n\"use strict\";\n\nangular.module(\"myApp.directives\", [])\n\n.directive(\"keepScrollPos\", function($route, $window, $timeout, $location, $anchorScroll) {\n\n    // cache scroll position of each route's templateUrl\n    var scrollPosCache = {};\n\n    // compile function\n    return function(scope, element, attrs) {\n\n        scope.$on('$routeChangeStart', function() {\n            // store scroll position for the current view\n            if ($route.current) {\n                scrollPosCache[$route.current.loadedTemplateUrl] = [ $window.pageXOffset, $window.pageYOffset ];\n            }\n        });\n\n        scope.$on('$routeChangeSuccess', function() {\n            // if hash is specified explicitly, it trumps previously stored scroll position\n            if ($location.hash()) {\n                $anchorScroll();\n\n            // else get previous scroll position; if none, scroll to the top of the page\n            } else {\n                var prevScrollPos = scrollPosCache[$route.current.loadedTemplateUrl] || [ 0, 0 ];\n                $timeout(function() {\n                    $window.scrollTo(prevScrollPos[0], prevScrollPos[1]);\n                }, 0);\n            }\n        });\n    }\n});\n</pre>\n\n<p>To disregard previously stored scroll position, and to force to scroll to the top, use pseudo hash tag: <em>#top</em>, e.g., href=\"<em>#/home#top</em>\".</p>\n\n<p>Alternatively, if you prefer to just always scroll to the top, use built-in ng-view <em>autoscroll</em> option:</p>\n\n<pre><code>&lt;div ng-view autoscroll&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I have used the solution of @Joseph Oster in order to create a directive.\nI have also taken the liberty to update the answer to use:</p>\n\n<ul>\n<li>$locationChangeStart </li>\n<li>$locationChangeSuccess</li>\n</ul>\n\n<p>as the other events are obsolete.</p>\n\n<p>Fiddle is here: <a href=\"http://jsfiddle.net/empie/p5pn3rvL/\" rel=\"nofollow\">http://jsfiddle.net/empie/p5pn3rvL/</a></p>\n\n<p>Directive source:</p>\n\n<pre><code>angular.module('myapp', ['ngRoute'])\n    .directive('autoScroll', function ($document, $timeout, $location) {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n            scope.okSaveScroll = true;\n\n            scope.scrollPos = {};\n\n            $document.bind('scroll', function () {\n                if (scope.okSaveScroll) {\n                    scope.scrollPos[$location.path()] = $(window).scrollTop();\n                }\n            });\n\n            scope.scrollClear = function (path) {\n                scope.scrollPos[path] = 0;\n            };\n\n            scope.$on('$locationChangeSuccess', function (route) {\n                $timeout(function () {\n                    $(window).scrollTop(scope.scrollPos[$location.path()] ? scope.scrollPos[$location.path()] : 0);\n                    scope.okSaveScroll = true;\n                }, 0);\n            });\n\n            scope.$on('$locationChangeStart', function (event) {\n                scope.okSaveScroll = false;\n            });\n        }\n    };\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You need to reset the scroll position on each route change.\nUse this in your main AppController:</p>\n\n<pre><code>  $scope.$on(\"$routeChangeSuccess\", function () {\n    $anchorScroll();\n  });\n</code></pre>\n\n<p>Or if you are using ui-route:</p>\n\n<pre><code>  $scope.$on(\"$stateChangeSuccess\", function () {\n    $anchorScroll();\n  });\n</code></pre>\n\n<p>For more infomation see <a href=\"http://stackoverflow.com/questions/22002764/in-angularjs-how-do-i-add-a-watch-on-the-url-hash\">In AngularJS, how do I add a $watch on the URL hash?</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Sample app: <a href=\"http://angular.github.com/angular-phonecat/step-11/app/#/phones\">http://angular.github.com/angular-phonecat/step-11/app/#/phones</a></p>\n\n<p>If you choose the last phone \"Motorola charm\" it will show you the details of the phone. \nWhen you navigate back with on your browser it reloads the data and scrolling is at the top. </p>\n\n<p>What is the best way to automatically scroll to where is was left when navigatin back?\nAnd also, why does angular reloads the data? </p>\n\n<p>I have the same \"angular-phonecat\" sample on my computer and I have added an infinite scroll which loads more data as you scroll. So I really dont want the user to reload 50+ items again or scrolling down for 30 seconds.</p>\n",
            "last_activity_date": 1413211917,
            "question_id": 14107531,
            "score": 19,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Retain scroll position on route change in AngularJS?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The github project <a href=\"https://github.com/blueimp/JavaScript-Load-Image\">JavaScript-Load-Image</a> provides a complete solution to the EXIF orientation problem, correctly rotating/mirroring images for all 8 exif orientations. See the online demo of <a href=\"http://blueimp.github.io/JavaScript-Load-Image/\">javascript exif orientation</a></p>\n\n<p>The image is drawn onto an HTML5 canvas. Its correct rendering is implemented in <a href=\"https://github.com/blueimp/JavaScript-Load-Image/blob/master/js/load-image-orientation.js\">js/load-image-orientation.js</a> through canvas operations.</p>\n\n<p>Hope this saves somebody else some time, and teaches the search engines about this open source gem :)</p>\n",
                    "is_accepted": true,
                    "score": 32
                }
            ],
            "body": "<p>Digital camera photos are often saved as JPEG with an EXIF \"orientation\" tag. To display correctly, images need to be rotated/mirrored depending on which orientation is set, but browsers ignore this information rendering the image. Even in large commerical web apps, support for EXIF orientation can be spotty <a href=\"http://www.daveperrett.com/articles/2012/07/28/exif-orientation-handling-is-a-ghetto/\">1</a>. The same source also provides a nice summary of the <strong>8 different orientations</strong>  a JPEG can have:</p>\n\n<p><img src=\"http://www.daveperrett.com/images/articles/2012-07-28-exif-orientation-handling-is-a-ghetto/EXIF_Orientations.jpg\" alt=\"Summary of EXIF Orientations\"></p>\n\n<p>Sample images are available at <a href=\"http://www.galloway.me.uk/2012/01/uiimageorientation-exif-orientation-sample-images/\">4</a>. </p>\n\n<p><strong>The question is how to rotate/mirror the image on the client side so that it displays correctly and can be further processed if necessary?</strong></p>\n\n<p>There are JS libraries available to parse EXIF data, including the orientation attribute <a href=\"https://github.com/jseidelin/exif-js\">2</a>. Flickr noted possible performance problem when parsing large images, requiring use of webworkers <a href=\"http://code.flickr.net/2012/06/01/parsing-exif-client-side-using-javascript-2/\">3</a>.</p>\n\n<p>Console tools can correctly re-orient the images <a href=\"http://superuser.com/questions/36645/how-to-rotate-images-automatically-based-on-exif-data\">5</a>. A PHP script solving the problem is available at <a href=\"http://www.neilyoungcv.com/blog/code-share/image-resizing-with-php-exif-orientation-fix/\">6</a></p>\n",
            "last_activity_date": 1387147281,
            "question_id": 20600800,
            "score": 17,
            "tags": [
                "javascript",
                "rotation",
                "html5-canvas",
                "exif"
            ],
            "title": "JS Client-Side Exif Orientation: Rotate and Mirror JPEG Images"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Found this using Google \"Advanced Search Tools\"</p>\n\n<p><a href=\"http://badassjs.com/post/1461943420/face-detection-in-javascript-via-html5-canvas\" rel=\"nofollow\">face-detection-in-javascript-via-html5-canvas</a></p>\n\n<p>Look promising.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If you are looking to recognize where a face is in an image, as opposed to matching faces across multiple images, there is actually a library that does this in conjunction with HTML canvass.</p>\n\n<p>There is a demo on the developers site <a href=\"http://liuliu.me/detect/detect.html\">here</a>. You can also download the source on <a href=\"https://github.com/liuliu/ccv\">github</a>.</p>\n\n<p>In my test's the performance was decent - but not blazing.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>If you want some advance feature like Face Recognition (Not detection only, it can recognise whose face it is), Eye position, gender, age, mood etc then try this library.</p>\n\n<p>Updated:\n<a href=\"http://rekognition.com/\" rel=\"nofollow\">http://rekognition.com/</a></p>\n\n<p>Old dead link:\n<a href=\"http://developers.face.com/tools/#faces/detect\" rel=\"nofollow\">http://developers.face.com/tools/#faces/detect</a></p>\n\n<p>Oh ya.. its free</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Currently there is no pure JavaScript library performing <em>face recognition</em>. Real time <em>face detection</em> however is possible using one of the following libraries:</p>\n\n<ul>\n<li><p>For <strong>face and face element</strong> detection as well as object detection in general, you could use <a href=\"https://github.com/mtschirs/js-objectdetect/\" rel=\"nofollow\">js-objectdetect</a> or <a href=\"https://github.com/eduardolundgren/tracking.js\" rel=\"nofollow\">tracking.js</a> which include ports of the OpenCV object detector based on Haar-like features. Also consult <a href=\"https://github.com/mtschirs/js-objectdetect#performance\" rel=\"nofollow\">this performance comparison chart</a> for ten popular JavaScript face detection libraries.\n<br><br>\n<a href=\"http://mtschirs.github.com/js-objectdetect/examples/example_sunglasses.htm\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/yH2lm.gif\" alt=\"Face detection demo\"></a></p></li>\n<li><p>The very first <strong>face detection</strong> algorithm on the web found in <a href=\"https://github.com/liuliu/ccv\" rel=\"nofollow\">ccv</a> also deserves a mention. Its SURF classifier is fast but <a href=\"http://liuliu.me/eyes/javascript-face-detection-explained/#disqus_thread\" rel=\"nofollow\">not very reliable</a>.</p></li>\n<li><p>The <a href=\"https://github.com/auduno/headtrackr\" rel=\"nofollow\">headtrackr</a> library used for <strong>face tracking</strong> might also be of interest since it implements the camshift algorithm found in OpenCV. Also have a look at <a href=\"https://github.com/auduno/clmtrackr\" rel=\"nofollow\">clmtrackr</a> of the same author.</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Hey you can use this Face Recognition API + photobooth.js sample that I just posted - <a href=\"http://mashape.tumblr.com/post/45712257463/face-recognition-using-javascript-and-mashape\" rel=\"nofollow\">http://mashape.tumblr.com/post/45712257463/face-recognition-using-javascript-and-mashape</a></p>\n\n<p>The response from the API gives you face element coordinates, smile detection, and face recognition based on a library of pictures you have uploaded:</p>\n\n<pre><code>{\n\u201cstatus\u201d: \u201csuccess\u201d,\n\u201cimages\u201d: [\n    \u201chttp://lambdal.com/tiger.jpg\u201d\n],\n\u201cphotos\u201d: [\n    {\n        \u201curl\u201d: \u201chttp://lambdal.com/tiger.jpg\u201d,\n        \u201cwidth\u201d: 600,\n        \u201ctags\u201d: [\n            {\n                \u201ceye_left\u201d: {\n                    \u201cy\u201d: 116,\n                    \u201cx\u201d: 357\n                },\n                \u201cconfidence\u201d: 0.978945010372561,\n                \u201ccenter\u201d: {\n                    \u201cy\u201d: 130,\n                    \u201cx\u201d: 339\n                },\n                \u201cmouth_right\u201d: {\n                    \u201cy\u201d: 178,\n                    \u201cx\u201d: 366\n                },\n                \u201cmouth_left\u201d: {\n                    \u201cy\u201d: 178,\n                    \u201cx\u201d: 310\n                },\n                \u201cheight\u201d: 140,\n                \u201cwidth\u201d: 140,\n                \u201cmouth_center\u201d: {\n                    \u201cy\u201d: 178,\n                    \u201cx\u201d: 338\n                },\n                \u201cnose\u201d: {\n                    \u201cy\u201d: 147,\n                    \u201cx\u201d: 336\n                },\n                \u201ceye_right\u201d: {\n                    \u201cy\u201d: 115,\n                    \u201cx\u201d: 314\n                },\n                \u201ctid\u201d: \u201c31337\u201d,\n                \u201cattributes\u201d: [\n                    {\n                        \u201csmile_rating\u201d: 0.7,\n                        \u201csmiling\u201d: true,\n                        \u201cconfidence\u201d: 0.7\n                    },\n                    {\n                        \u201cgender\u201d: \u201cmale\u201d,\n                        \u201cconfidence\u201d: 0.5982579729635792\n                    }\n                ],\n                \u201cuids\u201d: [\n                    {\n                        \u201cconfidence\u201d: 0.742,\n                        \u201cprediction\u201d: \u201cchris1\u201d,\n                        \u201cuid\u201d: \u201cchris1@apitraveler\u201d\n                    },\n                    {\n                        \u201cconfidence\u201d: 0.161,\n                        \u201cprediction\u201d: \u201chazel\u201d,\n                        \u201cuid\u201d: \u201chazel@apitraveler\u201d\n                    },\n                    {\n                        \u201cconfidence\u201d: 0.065,\n                        \u201cprediction\u201d: \u201cdylan\u201d,\n                        \u201cuid\u201d: \u201cdylan@apitraveler\u201d\n                    }\n                ]\n            }\n        ],\n        \u201cheight\u201d: 585\n    }\n]\n</code></pre>\n\n<p>}</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Javascript library for precise tracking of facial features via Constrained Local Models</p>\n\n<p><a href=\"https://github.com/auduno/clmtrackr\" rel=\"nofollow\">https://github.com/auduno/clmtrackr</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I would like to know if someone know how to recognize a face using just JavaScript. I've heard of OpenCV and relatives but I want to process the face recognition at the client side (web app).</p>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1423283642,
            "question_id": 7291065,
            "score": 16,
            "tags": [
                "javascript",
                "face-recognition"
            ],
            "title": "Any library for face recognition in JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>By using server side JS, can we implement the whole web application without using any server side languages (like C#,java etc).</strong></p>\n\n<p>It shouldn't be necessary to write code in any other languages, although many server-side JavaScript frameworks use the Rhino engine, which allows you to call any Java code.</p>\n\n<p><strong>Is it really a better approach??</strong></p>\n\n<p>I don't think JavaScript (as a language) is really a better or worse option than traditional server-side languages. It has advantages (along with other dynamic languages like Ruby and Python) like flexibility, fast prototyping (no pun intended), flexibility, etc. On the other hand, it doesn't have the library support that Java and C# have or static typing (I won't get into the debate over which is better here; I like both for different reasons).</p>\n\n<p>If you want the best of both, you can use JavaScript as a scripting language, embedded in your application. Rhino for Java, and JScript.NET make it easy to manipulate \"native\" objects in JavaScript. You could, for example, write your domain classes in Java or C#, and script them with JavaScript where you want more flexibility. If you are comfortable enough with JavaScript, writing in a single language may be simpler though.</p>\n\n<p>I've never written a \"real\" server-side application using JavaScript, so I can't really make a judgment about whether its better or worse than .NET (I've also never used JScript.NET). I have played around with a few frameworks for fun though and I'm currently rewriting my personal site using Helma NG. So far it's been a good experience (much better than PHP, which I've never really liked).</p>\n\n<p><strong>what are the advandages and disadvandages?</strong></p>\n\n<p>Advantanges:</p>\n\n<ul>\n<li>Only one language needed for server-side and client-side programming.</li>\n<li>Possibility for shared code, for things like form validation. Jaxer lets you run scripts on the client, server, or both.</li>\n<li>You get to program in JavaScript (assuming you like the language).</li>\n</ul>\n\n<p>Disadvantages:</p>\n\n<ul>\n<li>Many frameworks are experimental/not very mature.</li>\n<li>You have to program in JavaScript (assuming you don't like the language).</li>\n</ul>\n\n<p><strong>how this works well in terms of performance?</strong></p>\n\n<p>Performance should be approximately comparable to other scripting languages.</p>\n\n<p><strong>is there any real time implementation (public websites) only using server side JS(no other languages)?</strong></p>\n\n<p>I don't know of any large websites using JavaScript, but there may be some.</p>\n\n<p><strong>what are the alternatives available over Aptana jaxer (open source)??</strong></p>\n\n<p>Wikipedia has a <a href=\"http://en.wikipedia.org/wiki/Server-side%5FJavaScript\">large list of options</a>, but it doesn't have much useful information. There are lots of options with a wide range in maturity and size.</p>\n\n<p>Here are a few that I'm familiar with (to varying degrees)</p>\n\n<ul>\n<li><a href=\"http://www.helma.org/\">Helma</a> - Rhino (Java) based framework with active record.</li>\n<li><a href=\"http://dev.helma.org/wiki/Helma+NG/\">Helma NG</a> - Helma Next Generation (experimental rewrite, under active development).</li>\n<li><a href=\"https://phobos.dev.java.net/\">Phobos</a> - Has good support in <a href=\"http://www.netbeans.org/\">NetBeans</a>.</li>\n<li><a href=\"http://code.google.com/p/v8cgi/\">v8cgi</a> - Small and simple, uses Google's V8 engine, probably not production-ready yet.</li>\n<li><a href=\"http://jaxer.org/\">Jaxer</a> - Runs on Spidermonkey with a DOM implementation, so you can manipulate the page with frameworks like jQuery or Prototype. Has good IDE support in Aptana Studio.</li>\n</ul>\n\n<p><strong>how well we can implement &amp; maintain db transactions? can we do that in serverside JS..?</strong></p>\n\n<p>Rhino-based frameworks let you use Java classes, so you have full JDBC support. I haven't used Jaxer's database libraries, so I don't know anything about its capabilities.</p>\n\n<p><strong>is it possible to develop RESTFul and SOAP services in serverside JS..??</strong></p>\n\n<p>RESTful APIs shouldn't be any problem. I don't know of any specific support for SOAP, but it should be <em>possible</em>.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>As a preface, I use SSJS at my day job. We run a reasonably large (in terms of complexity as well as page views) website on SpiderMonkey. I'll add to Matthew's excellent answer where I have experience.</p>\n\n<p><strong>Is it really a better approach than using server side languages (assume c#)</strong></p>\n\n<p><em>\"Better\"</em> really depends what you want to do with it. JavaScript itself has some great features, as well as pretty awful ones. If you're serious about developing JS (client or server), I cannot recommend highly enough that you watch Douglas Crockford's presentation, <em><a href=\"http://www.youtube.com/watch?v=hQVTIJBZook\" rel=\"nofollow\">Javascript: The Good Parts</a></em> if you haven't already. He's done a fantastic job sorting out the cruft, and he's an excellent speaker to boot. </p>\n\n<p>The biggest thing that I find the SSJS world lacking right now is maturity. I'm not familiar with C#, but JavaScript has no mature standard library, and no mature means of package distribution.  To me that's a big piece of the puzzle.</p>\n\n<p>That said, keep your eye on the <a href=\"http://wiki.commonjs.org/wiki/CommonJS\" rel=\"nofollow\">CommonJS</a> group. They're working toward defining those exact things. Also, The Jaxer Api Documentation lists the built-ins that are included with that framework. </p>\n\n<p><strong>how this works well in terms of performance?</strong></p>\n\n<p>JavaScript itself is not a slow language, nor is it a particularly fast one. As Matthew pointed out, it should be comparable to any other scripting language you would use. The war between the browser vendors to see who can build the fastest browser will benefit the SSJS crowd as well. </p>\n\n<p>The generational garbage collection that the V8 team build into their engine is a great example of this. Halting the virtual machine to free unreachable objects from the heap and reclaim their memory can be somewhat slow, but they've mitigated that by reducing the amount of objects that need to be inspected when the garbage collector runs.</p>\n\n<p><strong>how well we can implement &amp; maintain db transactions? can we do that in serverside JS..?</strong></p>\n\n<p>Jaxer appears to have MySQL and SQLite database APIs. As Matthew mentioned, if you use Rhino, you can use the JDBC api.</p>\n\n<p><strong>Edit</strong>: Added links</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I am the developer for <a href=\"http://www.mynajs.org\">Myna</a> (www.mynajs.org), an Open Source server-side JS platform based on Rhino and Java. I'll address the issues as they relate to Myna, but many of these points apply to server-side JS in general:</p>\n\n<p><strong><em>By using server side JS, can we implement the whole web application without using any server side languages (like C#,java etc). Or server side JS sits in between the web server and other langauge stack.</em></strong></p>\n\n<p>In Myna it is possible to write your entire app in JS. Myna already includes API's for Database access, Object Relational Mapping, crytogrophy, OpenID, etc. </p>\n\n<p><strong><em>Is it really a better approach than c#/Java?</em></strong></p>\n\n<p>With a Rhino based server it is trivial to drop down to Java whenever needed. You can easily install open-source/commercial/hand-coded Java libraries and then script them from JS. This means you get the rapid development of JS but maintain the advantages of the Java platform</p>\n\n<p><strong><em>what are the advantages and disadvantages?</em></strong></p>\n\n<p>pros:</p>\n\n<ul>\n<li><p><strong>Rapid development</strong>: In Myna you just create files in the webroot with an .sjs extension. This means you can create an edit-save-refresh browser cycle with is very fast for debugging/tweaking code.</p></li>\n<li><p><strong>Easy JSON</strong>: Having JS support server-side means moving complex structures is very easy</p></li>\n<li><p><strong>Shared code</strong>: If you need to perform the the same function on both the server and the browser, you can use the same code</p></li>\n<li><p><strong>Dynamic ORM</strong>: Statically typed compiled languages make it hard to alter objects at runtime. This usually means that ORM has to be defined in advance. In Myna building ORM is as simple as </p>\n\n<pre><code>var manager =new Myna.DataManager(\"DataSource name\").getManager(\"table name\");\n</code></pre>\n\n<p>You get an object that can do all basic CRUD operations without ever explicitly defining the DB tables. As another example you can insert a row with all the matching values from a form post:</p>\n\n<pre><code>manager.create($req.data);\n</code></pre></li>\n<li><p><strong>Functional Programing</strong>: If you have started playing with advanced JavaScript features then you will appreciate how helpful they are server-side. Because of the consistent server-side environment it is safe to use advanced features such as <a href=\"https://developer.mozilla.org/en/New%5Fin%5FJavaScript%5F1.6#Array%5Fextras\">Array Extras</a>, <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FGuide/Iterators%5Fand%5FGenerators\">generators and iterators</a>, <a href=\"https://developer.mozilla.org/en/New%5Fin%5FJavaScript%5F1.7#Destructuring%5Fassignment\">destructuring assignments</a>, and <a href=\"https://developer.mozilla.org/en/New%5Fin%5FJavaScript%5F1.6#E4X\">E4X</a></p></li>\n</ul>\n\n<p>cons:</p>\n\n<ul>\n<li><p><strong>Tools</strong>: Statically typed languages like C# and Java have excellent IDE and developer tools. Dynamic languages like JS just don't have the tool support yet. Personally I find that the large reduction in boilerplate code and fussy type casting makes up for this, but this is still a big disadvantage if you have been doing a lot of development in IDEs. If you are currently using an IDE, consider using <a href=\"http://stackoverflow.com/questions/220642/language-agnostic-properly-tabbing-code-editors-for-linux/220753#220753\">jedit</a> for dynamic languages</p></li>\n<li><p><strong>Maturity/Standardization</strong>: Serverside JS is still a new paradigm, and there are many players and no clear winners. ECMA does not have any standards for serverside JS. As mentioned in Brandon's answer, the <a href=\"http://wiki.commonjs.org/wiki/CommonJS\">CommonJS</a> group is attempting to form a serverside JS standard and Myna has experimental CommonJS support via <a href=\"http://narwhaljs.org/\">Narwhal</a></p></li>\n</ul>\n\n<p><strong><em>how this works well in terms of performance?</em></strong></p>\n\n<p>In raw computational speed, few dynamic languages can match statically typed compiled languages like C# and Java. Having said that, it really doesn't matter. Any part of your application that is computationally intensive should probably be written in Java, or use an existing Java library. I wouldn't suggest that anyone write a Database in JS for instance. For real world web applications/SOA services, the primary cause of slowdowns isn't raw computational speed, it is inefficient code, especially database access. Myna helps with this by doing things like:</p>\n\n<ul>\n<li>internally caching compiled JS scripts</li>\n<li>Internally using cached prepared statements for database transactions</li>\n<li>Query and output fragment caching</li>\n<li>Database connection pooling</li>\n<li>Automatic ETag hash support</li>\n<li>Profiling tools</li>\n<li>Lazy loading of metadata</li>\n</ul>\n\n<p><strong><em>how well we can implement &amp; maintain db transactions? can we do that in serverside JS..?</em></strong></p>\n\n<p>If you mean transaction as in \"a set of SQL statements that can be reversed or committed\", then Myna does not yet support transactions. I am open to implementing this if there is enough interest.</p>\n\n<p>If you mean \"what kind of database support does server-side JS have?\" then the answer is platform dependent. The Myna platform provides the following database features:</p>\n\n<ul>\n<li>A web-based administration application where you can define \"datasources\", i.e database connection information. You can then query these datasources by name. Myna includes JDBC drivers for H2, MySQL, Microsoft SQL Server, and Postgresql, but any JDBC or ODBC datasource can be used</li>\n<li><a href=\"http://www.mynajs.org/shared/docs/js/libOO/files/Database-sjs.html\">Myna.Database</a> and <a href=\"http://www.mynajs.org/shared/docs/js/libOO/files/Table-sjs.html\">Myna.Table</a> provide database-neutral metdata access as well as table creation and modification.</li>\n<li>Myna's <a href=\"http://www.mynajs.org/shared/docs/js/libOO/files/Query-sjs.html\">Query</a> object supports maxRows, paging, SQL parameters,custom row handlers, query-of-query, caching and more</li>\n<li>Myna's <a href=\"http://www.mynajs.org/shared/docs/js/libOO/files/DataManager-sjs.html\">DataManager</a> object supports runtime ORM object creation</li>\n</ul>\n\n<p><strong><em>is it possible to develop RESTFul and SOAP services in serverside JS..??</em></strong></p>\n\n<p>REST and SOAP support are platform specific features. Myna's <a href=\"http://www.mynajs.org/shared/docs/js/libOO/files/WebService-sjs.html\">WebService</a> object supports the following protocols:</p>\n\n<ul>\n<li>SOAP</li>\n<li>XML-RPC</li>\n<li>JSON-RPC</li>\n<li>Ext Direct</li>\n<li>JSON-MYNA \n(a simple protocol that uses normal form posts and returns JSON. Easy to use from the browser)</li>\n</ul>\n\n<p>Myna also understands the PUT and DELETE request methods and presents access to request body content in both text and binary form, so that it is possible to handle these RESTful methods in an application specific way. </p>\n\n<p><strong><em>Debugging</em></strong></p>\n\n<p>Traditional breakpoint debugging is a real challenge serverside. Although Rhino supports debugger hooks, using these from a stateless web app would be pretty involved. Personally I don't even use breakpoint debuggers even when they are available (e.g. firebug). Instead I prefer logging. </p>\n\n<p>In Myna,</p>\n\n<pre><code> Myna.log(type,label,detail)\n</code></pre>\n\n<p>will spawn a low priority thread to write an HTML log message to Myna's logging database. These logs can then be searched through the Myna Administrator. Logs also record timestamps and elapsed milliseconds for profiling purposes. Myna.dump(obj) can also be used to present an HTML table representation of any object. Myna also logs all un-handled exceptions with stack traces, source code context, and request details. Between dump(), log(), and the default error handler I haven't much difficulty debugging Myna code</p>\n",
                    "is_accepted": true,
                    "score": 18
                }
            ],
            "body": "<p>I just started experimenting with <a href=\"https://github.com/aptana/Jaxer\" rel=\"nofollow\">Aptana Jaxer</a> server side javascript engine for my next project. And i have few quesions about that</p>\n\n<ul>\n<li><p>By using server side JS, can we implement the whole web application without using any server side languages (like C#,java etc). Or server side JS sits in between the web server and other langauge stack.</p></li>\n<li><p>Is it really a better approach ?? </p></li>\n<li><p>what are the advandages and disadvandages?</p></li>\n<li><p>how this works well in terms of performance?</p></li>\n<li><p>is there any real time implementation (public websites) only using server side JS(no other languages)?</p></li>\n<li><p>what are the alternatives available over Aptana jaxer (open source)??</p></li>\n<li><p>how well we can implement &amp; maitain db transactions? can we do that in serverside JS..? </p></li>\n<li><p>is it possible to develop RESTFul and SOAP services in serverside JS..??</p></li>\n</ul>\n\n<p>i know this is too long (and naive questions). I am just hoping someone have already come across all these while implementing serverside JS. </p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>As per Matthew &amp; Ken  comments, i have added some clarity to the question <strong>Is it really a better approach??</strong> </p>\n\n<p>this is what i intend to ask..</p>\n\n<p>Is it really a better approach than  using server side languages (assume c#), how we can compare this with the c# implementation of a website (performance , language features)??\nAnd which one  is a better approach , using JS alone in serverside or JS in middle layer between other language stack and webserver??</p>\n",
            "last_activity_date": 1385320398,
            "question_id": 1476967,
            "score": 16,
            "tags": [
                "javascript",
                "serverside-javascript",
                "jaxer"
            ],
            "title": "pros and cons of serverside javascript implementation?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try ontouchstart instead of onfocus. Onfocus fires approx. 500ms after ontouchend, same as onclick, onmousedown, and onmouseup. See <a href=\"http://developer.apple.com/safari/library/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html#//apple_ref/doc/uid/TP40006511-SW7\" rel=\"nofollow\">http://developer.apple.com/safari/library/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html#//apple_ref/doc/uid/TP40006511-SW7</a> for more details on mouse events.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I have run into the same problem. The onfocus event is the right one to trap (ontouchstart isn't triggered if you use the iphone keyboard [next]/[prev] buttons.) If you put an alert(); in your onfocus=\"\" handler, you'll see the alert box pop up. The problem is this.select(); I still haven't found an answer to this, but when/if I do, I'll post it here.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I used <code>this</code>, instead of <code>this.select();</code> and it worked!</p>\n\n<pre><code>this.selectionStart=0;\nthis.selectionEnd=this.value.length;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The magic sauce for me was the combination of these three:</p>\n\n<pre><code>onFocus=\"this.selectionStart=0; this.selectionEnd=this.value.length;\" &lt;!-- for big screens --&gt;\n\nonTouchEnd=\"this.selectionStart=0; this.selectionEnd=this.value.length;\" &lt;!-- for small screens --&gt;\n\nonMouseUp=\"return false\" &lt;!-- to stop the jitters --&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm trying to make it easy for an iphone user to copy some text to the clipboard in mobile safari. As in the usual \"touch-hold-copy\". There is a specific bit of text I want to a user to copy. I have full choice of the html markup in which to wrap the text. How can I make it easy, rather than abitrary? For instance:</p>\n\n<ul>\n<li><p>Is there a way to \"select all\" the text upon touch-down using javascript? Then a user could just continue to touch-hold and then choose copy?</p></li>\n<li><p>Is there a way to bring up the \"select all\" option? Like you can when typing in a text box? After which they can choose copy?</p></li>\n<li><p>If there's no javascript solution, how can I arrange the html to help Safari select the right bit of text easily? As opposed to just a word, or a wrapping div?</p></li>\n</ul>\n\n<p>I've tried onFocus=\"this.select()\" for various elements, none seem to work. Also tried onClick.</p>\n\n<p>Those who have tried to port a site that uses ZeroClipboard to the iPhone might have some ideas.</p>\n\n<p>Cheers</p>\n",
            "last_activity_date": 1348412154,
            "question_id": 1899421,
            "score": 14,
            "tags": [
                "javascript",
                "iphone",
                "copy",
                "mobile-safari",
                "zeroclipboard"
            ],
            "title": "Selecting text in mobile Safari on iPhone"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The solution you linked to is not AJAX at all, actually.  They call it HTTP Streaming but it's essentially just long polling.</p>\n\n<p>In the example they link to, you can see for yourself quite easily with firebug.  Turn on the Net panel - there are no XHR entries, but it takes just a hair over 10 seconds to load the original page.  That's because they're using PHP behind the scenes to delay the output of the HTML. This is the essence of long polling - the HTTP connection stays open, and the periodic HTML sent back is javascript commands.</p>\n\n<p>You can opt to do the polling completely on the client side, though, with setTimeout() or setInterval()</p>\n\n<p>A jQuery example</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  $(document).ready(function()\n  {\n    var ajaxInterval = setInterval( function()\n    {\n      $.getJSON(\n        'some/servie/url.ext'\n        , { sample: \"data\" }\n        , function( response )\n          {\n            $('#output').append( response.whatever );          \n          }\n      );\n    }, 10000 );  \n  });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I would take a look at orbited</p>\n\n<p>They use several comet transport implementation that they choose based on configuration and browser sniffing.</p>\n\n<p>See <a href=\"http://orbited.org/svn/orbited/trunk/daemon/orbited/static/Orbited.js\" rel=\"nofollow\">http://orbited.org/svn/orbited/trunk/daemon/orbited/static/Orbited.js</a></p>\n\n<p>and look for \"Orbited.CometTransports\"</p>\n\n<p>Some of the different transports must be matched by the backend implementation, so have a look at the server side for orbited also.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Client request web page from server. Clent then requests for extra calculations to be done; server performs series of calculations and sends partial results as soon as they are available (text format, each line contains separate full item). Client updates web page (with JavaScript and DOM) using information provided by server.</p>\n\n<p>This seems to fit <a href=\"http://ajaxpatterns.org/archive/HTTP%5FStreaming.php\">HTTP Streaming</a> (<a href=\"http://ajaxpatterns.org/HTTP%5FStreaming\">current</a> version) pattern from Ajaxpatterns site.</p>\n\n<p>The question is how to do it in cross-browser (browser agnostic) way, preferably without using JavaScript frameworks, or using some lightweight framework like jQuery. </p>\n\n<p>The problem begins with generating XMLHttpRequest in cross-browser fashion, but I think the main item is that not all browsers implement correctly <code>onreadystatechange</code>from <a href=\"http://www.w3.org/TR/XMLHttpRequest/\">XMLHttpRequest</a>; not all browsers call <code>onreadystatechange</code> event on each server flush (BTW. how to force server flush from within CGI script (in Perl)?). Example code on Ajaxpatterns deals with this by using timer; should I drop timer solution if I detect partial response from <code>onreadystatechange</code>?</p>\n\n<p><hr /></p>\n\n<p><strong><em>Added 11-08-2009</em></strong></p>\n\n<p><strong>Current solution:</strong><br />\nI use the following function to create XMLHttpRequest object:</p>\n\n<pre><code>function createRequestObject() {\n        var ro;\n        if (window.XMLHttpRequest) {\n                ro = new XMLHttpRequest();\n        } else {\n                ro = new ActiveXObject(\"Microsoft.XMLHTTP\");\n        }\n        if (!ro)\n                debug(\"Couldn't start XMLHttpRequest object\");\n        return ro;\n}\n</code></pre>\n\n<p>If I were to use some (preferably light-weight) JavaScript framework like jQuery, I'd like to have fallback if user chooses not to install jQuery.</p>\n\n<p>I use the following code to start AJAX; <code>setInterval</code> is used because some browsers call <code>onreadystatechange</code> only after server closes connection (which can take as long as tens of seconds), and not as soon as server flushes data (around every second or more often).</p>\n\n<pre><code>function startProcess(dataUrl) {\n        http = createRequestObject();\n        http.open('get', dataUrl);\n        http.onreadystatechange = handleResponse;\n        http.send(null);\n\n        pollTimer = setInterval(handleResponse, 1000);\n}\n</code></pre>\n\n<p>The <code>handleResponse</code> function is most complicated one, but the sketch of it looks like the following. Can it be done better? How it would be done using some lightweight JavaScript framework (like jQuery)?</p>\n\n<pre><code>function handleResponse() {\n    if (http.readyState != 4 &amp;&amp; http.readyState != 3)\n        return;\n    if (http.readyState == 3 &amp;&amp; http.status != 200)\n        return;\n    if (http.readyState == 4 &amp;&amp; http.status != 200) {\n        clearInterval(pollTimer);\n        inProgress = false;\n    }\n    // In konqueror http.responseText is sometimes null here...\n    if (http.responseText === null)\n        return;\n\n    while (prevDataLength != http.responseText.length) {\n        if (http.readyState == 4  &amp;&amp; prevDataLength == http.responseText.length)\n            break;\n        prevDataLength = http.responseText.length;\n        var response = http.responseText.substring(nextLine);\n        var lines = response.split('\\n');\n        nextLine = nextLine + response.lastIndexOf('\\n') + 1;\n        if (response[response.length-1] != '\\n')\n            lines.pop();\n\n        for (var i = 0; i &lt; lines.length; i++) {\n            // ...\n        }\n    }\n\n    if (http.readyState == 4 &amp;&amp; prevDataLength == http.responseText.length)\n        clearInterval(pollTimer);\n\n    inProgress = false;\n}\n</code></pre>\n",
            "last_activity_date": 1247619420,
            "question_id": 1112413,
            "score": 13,
            "tags": [
                "javascript",
                "ajax",
                "streaming",
                "xmlhttprequest",
                "comet"
            ],
            "title": "Cross-browser implementation of &quot;HTTP Streaming&quot; (push) AJAX pattern"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I just posted this to my brand spanking new blog: \n<a href=\"http://jasonturim.wordpress.com/2013/09/01/angularjs-drag-and-drop/\">http://jasonturim.wordpress.com/2013/09/01/angularjs-drag-and-drop/</a></p>\n\n<p>Code here:\n<a href=\"https://github.com/logicbomb/lvlDragDrop\">https://github.com/logicbomb/lvlDragDrop</a></p>\n\n<p>Demo here: <a href=\"http://logicbomb.github.io/ng-directives/drag-drop.html\">http://logicbomb.github.io/ng-directives/drag-drop.html</a></p>\n\n<p>Here are the directives these rely on a UUID service which I've included below:</p>\n\n<pre><code>var module = angular.module(\"lvl.directives.dragdrop\", ['lvl.services']);\n\nmodule.directive('lvlDraggable', ['$rootScope', 'uuid', function($rootScope, uuid) {\n        return {\n            restrict: 'A',\n            link: function(scope, el, attrs, controller) {\n                console.log(\"linking draggable element\");\n\n                angular.element(el).attr(\"draggable\", \"true\");\n                var id = attrs.id;\n                if (!attrs.id) {\n                    id = uuid.new()\n                    angular.element(el).attr(\"id\", id);\n                }\n\n                el.bind(\"dragstart\", function(e) {\n                    e.dataTransfer.setData('text', id);\n\n                    $rootScope.$emit(\"LVL-DRAG-START\");\n                });\n\n                el.bind(\"dragend\", function(e) {\n                    $rootScope.$emit(\"LVL-DRAG-END\");\n                });\n            }\n        }\n    }]);\n\nmodule.directive('lvlDropTarget', ['$rootScope', 'uuid', function($rootScope, uuid) {\n        return {\n            restrict: 'A',\n            scope: {\n                onDrop: '&amp;'\n            },\n            link: function(scope, el, attrs, controller) {\n                var id = attrs.id;\n                if (!attrs.id) {\n                    id = uuid.new()\n                    angular.element(el).attr(\"id\", id);\n                }\n\n                el.bind(\"dragover\", function(e) {\n                  if (e.preventDefault) {\n                    e.preventDefault(); // Necessary. Allows us to drop.\n                  }\n\n                  e.dataTransfer.dropEffect = 'move';  // See the section on the DataTransfer object.\n                  return false;\n                });\n\n                el.bind(\"dragenter\", function(e) {\n                  // this / e.target is the current hover target.\n                  angular.element(e.target).addClass('lvl-over');\n                });\n\n                el.bind(\"dragleave\", function(e) {\n                  angular.element(e.target).removeClass('lvl-over');  // this / e.target is previous target element.\n                });\n\n                el.bind(\"drop\", function(e) {\n                  if (e.preventDefault) {\n                    e.preventDefault(); // Necessary. Allows us to drop.\n                  }\n\n                  if (e.stopPropogation) {\n                    e.stopPropogation(); // Necessary. Allows us to drop.\n                  }\n                    var data = e.dataTransfer.getData(\"text\");\n                    var dest = document.getElementById(id);\n                    var src = document.getElementById(data);\n\n                    scope.onDrop({dragEl: src, dropEl: dest});\n                });\n\n                $rootScope.$on(\"LVL-DRAG-START\", function() {\n                    var el = document.getElementById(id);\n                    angular.element(el).addClass(\"lvl-target\");\n                });\n\n                $rootScope.$on(\"LVL-DRAG-END\", function() {\n                    var el = document.getElementById(id);\n                    angular.element(el).removeClass(\"lvl-target\");\n                    angular.element(el).removeClass(\"lvl-over\");\n                });\n            }\n        }\n    }]);\n</code></pre>\n\n<p>UUID service</p>\n\n<pre><code>angular\n.module('lvl.services',[])\n.factory('uuid', function() {\n    var svc = {\n        new: function() {\n            function _p8(s) {\n                var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n                return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n            }\n            return _p8() + _p8(true) + _p8(true) + _p8();\n        },\n\n        empty: function() {\n          return '00000000-0000-0000-0000-000000000000';\n        }\n    };\n\n    return svc;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>Angular doesn't provide snazzy UI elements like drag and drop. That's not really Angular's purpose. However, there are a few well known directives that provide drag and drop. Here are two that I've used.</p>\n\n<p><a href=\"https://github.com/angular-ui/ui-sortable\">https://github.com/angular-ui/ui-sortable</a></p>\n\n<p><a href=\"https://github.com/codef0rmer/angular-dragdrop\">https://github.com/codef0rmer/angular-dragdrop</a></p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I'm a bit late to the party, but I have my own directive that looks like it'll fit your case (You can adapt it yourself). It's a modification of the ng-repeat directive that's specifically built for list re-ordering via DnD. I built it as I don't like JQuery UI (preference for less libraries than anything else) also I wanted mine to work on touch screens too ;).</p>\n\n<p>Code is here: <a href=\"http://codepen.io/SimeonC/pen/AJIyC\">http://codepen.io/SimeonC/pen/AJIyC</a></p>\n\n<p>Blog post is here: <a href=\"http://sdevgame.wordpress.com/2013/08/27/angularjs-drag-n-drop-re-order-in-ngrepeat/\">http://sdevgame.wordpress.com/2013/08/27/angularjs-drag-n-drop-re-order-in-ngrepeat/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p><a href=\"http://blog.parkji.co.uk/2013/08/11/native-drag-and-drop-in-angularjs.html\">http://blog.parkji.co.uk/2013/08/11/native-drag-and-drop-in-angularjs.html</a> This is simple method for creating native draggable angularJS elements</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><a href=\"http://adaptv.github.io/adapt-strap/\" rel=\"nofollow\">adapt-strap</a> has very light weight module for this.\nhere is the <a href=\"http://jsfiddle.net/kashjs/n2gxobf7/\" rel=\"nofollow\">fiddle</a>. \nHere are some attributes that are supported. There are more.</p>\n\n<pre><code>ad-drag=\"true\"\nad-drag-data=\"car\"\nad-drag-begin=\"onDragStart($data, $dragElement, $event);\"\nad-drag-end=\"onDataEnd($data, $dragElement, $event);\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to know how to do drag and drop by using AngularJs.</p>\n\n<p>This is what I have so far:</p>\n\n<pre><code>&lt;span&gt;&lt;input type=\"checkbox\" ng-model=\"master\"&gt;&lt;span&gt;SelectAll&lt;/span&gt;&lt;/span&gt;\n&lt;div ng-repeat=\"todo in todos\"&gt;\n\n    &lt;div ng-hide=\"enableEditor\"&gt;\n        &lt;a href=\"#\"&gt;Drag&lt;/a&gt;\n        &lt;input id=\"checkSlave\" type=\"checkbox\" ng-checked=\"master\" ng-model=\"todo.done\"&gt;\n\n        &lt;span ng-if=\"checked\" ng-show=\"removed\" ng-bind=\"todo.task_name\" class=\"removed\"&gt;&lt;/span&gt;\n        &lt;span ng-bind=\"todo.task_name\"&gt;&lt;/span&gt;\n        &lt;span ng-bind=\"todo.state\"&gt;&lt;/span&gt;\n        &lt;a href=\"#\" ng-click=\"editTask(todo.task_id,todo.task_name,editMode=!editMode)\"&gt;Edit&lt;/a&gt; \n\n       &lt;/div&gt;\n       &lt;/div&gt;\n\n    &lt;div ng-show=\"enableEditor\"&gt;\n     &lt;input type=\"text\" ng-show=\"editMode\" ng-model=\"todo.task_name\"  ng-change=\"update(todo.task_id,todo.task_name)\"&gt;\n     &lt;a href=\"#\" ng-click=\"saveTask(todo.task_id,todo.task_name,editMode=!editMode)\"&gt;Save&lt;/a&gt;\n     &lt;a href=\"#\" ng-click=\"cancelTask(todo.task_id,todo.task_name,editMode=!editMode)\"&gt;Cancel&lt;/a&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><a href=\"http://plnkr.co/edit/llTH9nRic3O2S7XMIi6y?p=preview\" rel=\"nofollow\">http://plnkr.co/edit/llTH9nRic3O2S7XMIi6y?p=preview</a>..</p>\n",
            "last_activity_date": 1421397969,
            "question_id": 18555429,
            "score": 12,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-directive"
            ],
            "title": "How to Create simple drag and Drop in angularjs"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I think you have a few options...</p>\n\n<ol>\n<li><p>Remove the element, build and append a string of XFBML and then parse the parent object an XFBML.parse call.</p></li>\n<li><p>Remove the element or it's container, build and append an actual XFBML object using</p></li>\n<li><p>Build an iframe container gets passed in the like url (with a GET) from the parent page. You can do this without even using a real backend if you can get the query string in JS. Then just build the markup before you init the facebook SDK and the like button will render. Facebook iframes all their stuff anyway, so this method isn't as clunky as it sounds. Tried this, works well.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>another solutions :</p>\n\n<p>instead of your fb:like object, write a FB iframe in your html like this : </p>\n\n<pre><code>&lt;iframe id=\"face\" name=\"face\" src=\"http://www.facebook.com/plugins/like.php?href=http://www.google.fr&amp;layout=button_count&amp;show_faces=false&amp;width=400&amp;action=like&amp;font=arial&amp;colorscheme=light\" allowtransparency=\"true\" style=\"border: medium none; overflow: hidden; width: 400px; height: 21px;\" frameborder=\"0\"scrolling=\"no\"&gt;&lt;/iframe&gt;\n</code></pre>\n\n<p>and now you can change with javascript with this function : </p>\n\n<pre><code>function setUrl(url)\n{\n    sUrl = url;\n    url = \"http://www.facebook.com/plugins/like.php?href=\"+sUrl+\"&amp;layout=button_count&amp;show_faces=false&amp;width=400&amp;action=like&amp;font=arial&amp;colorscheme=light\";\n    document.getElementById('face').setAttribute('src', url);\n    //alert(\"url : \"+url);\n}\n</code></pre>\n\n<p>when you change the src, the FB iframe is updated.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>It works for me for XFBML tag as well without using FB iframe and even works with multiple FB like calls for AJAX</p>\n\n<p>You just need to wrap the entire XFBML code in JS/jQuery and parse it as shown below:</p>\n\n<pre><code>$('#like').html('&lt;fb:like href=\"' + url + '\" layout=\"button_count\" show_faces=\"false\" width=\"65\" action=\"like\" font=\"segoe ui\" colorscheme=\"light\" /&gt;');\nif (typeof FB !== 'undefined') {\n    FB.XFBML.parse(document.getElementById('like'));\n}\n</code></pre>\n\n<p>HTML code:</p>\n\n<pre><code>&lt;span id=\"like\"&gt;&lt;/span&gt;\n</code></pre>\n\n<p>Surly this is going to be helpful for more guys :)</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>For reinit social buttons i use this code:</p>\n\n<pre><code>//Facebook like\nif(typeof(FB) !== 'undefined')\n     FB.XFBML.parse(document.getElementById('fblike'));\n\n//Google plus one\nif(typeof(gapi) !== 'undefined') {\n    gapi.plusone.render(document.getElementById('gplus'),{\n        'href':location.href,\n        'annotation':'bubble',\n        'width': 90,\n        'align': 'left',\n        'size': 'medium'\n    });\n}\n\n//Twitter tweet button\nif(typeof(twttr) !== 'undefined') {\n    $('.twitter-share-button').attr('data-url',location.href);\n    twttr.widgets.load();\n}\n</code></pre>\n\n<p>With html code like this:</p>\n\n<pre><code>&lt;div style=\"float:left;margin-top: 5px;width:80px;\"&gt;\n    &lt;div id=\"gplus\" class=\"g-plusone\" data-size=\"medium\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;div style=\"float:left;margin-top:5px;width:90px;\"&gt;\n    &lt;a href=\"https://twitter.com/share\" class=\"twitter-share-button\"&gt;Tweet&lt;/a&gt;\n&lt;/div&gt;\n&lt;div style=\"float:left;margin-top:5px;width:80px;\" id=\"fblike\"&gt;\n    &lt;fb:like send=\"false\" layout=\"button_count\" width=\"100\" show_faces=\"false\"&gt;&lt;/fb:like&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Lately you can also use the HTML5 version, as described here:\n<a href=\"http://elure.co/43_facebook-like-button-dynamic-url-javascript.htm\" rel=\"nofollow\">http://elure.co/43_facebook-like-button-dynamic-url-javascript.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>i'd like to change the URL to like of an <strong>FB:Like</strong> button dynamically using javascript.</p>\n\n<p>right now i've only been able to change the href attribute of the <code>fb:like</code> tag (i've pasted the code below). but simply changing the href doesn't seems to work. perhaps i have to re-initiate the FB:Like button, but so far i can't figure out how..</p>\n\n<pre><code>function update_share(container, url) {\n  // update fb:like href value\n  var container = container[0] || document.body;\n  var button = container.getElementsByTagName('fb:like');\n  button[0].setAttribute('href', url);\n}\n</code></pre>\n\n<p>any help would be appreciated. thx..</p>\n",
            "last_activity_date": 1359388288,
            "question_id": 2764129,
            "score": 11,
            "tags": [
                "javascript",
                "facebook",
                "xfbml"
            ],
            "title": "Update FB:Like URL Dynamically using JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try using ajax - ToolkitScriptManager instead of asp - ScriptManager - it tends to combine as much of the resource requests as it can.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here's a nice article that will give you some guidance:\n<a href=\"http://www.asp.net/AJAX/AjaxControlToolkit/Samples/Walkthrough/OtherNeatStuff.aspx\" rel=\"nofollow\">http://www.asp.net/AJAX/AjaxControlToolkit/Samples/Walkthrough/OtherNeatStuff.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As the others have stated, using the ASP.NET AJAX Toolkit's ToolkitScriptManager rather than the default ASP.NET ScriptManager will allow you to do some script combining, including your own scripts embedded as resources - there's a good post about it at <a href=\"http://blogs.msdn.com/delay/archive/2007/06/11/script-combining-made-easy-overview-of-the-ajax-control-toolkit-s-toolkitscriptmanager.aspx\" rel=\"nofollow\">Script combining made easy</a>.</p>\n\n<p>If you have the luxury of using ASP.NET 3.5 SP1, then there are some further additions to the ASP.NET ScriptManager that allow you to combine a lot more scripts, including general .js files in your solution into one script call.</p>\n\n<p>Check out the video here:</p>\n\n<blockquote>\n  <p><a href=\"http://www.asp.net/learn/3.5-SP1/video-296.aspx\" rel=\"nofollow\">Using Script Combining to Improve Performance</a></p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>here is a <a href=\"http://www.codeproject.com/KB/aspnet/AspNetOptimizer.aspx\" rel=\"nofollow\">CodeProject article</a> for both version of frameworks 2.0 &amp; 3.5</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>On a site I'm working on, the pages are generating 45 external WebResource.axd and ScriptResource.axd files so the broswers have to request all 45 references. That's a lot of references so I'd like to know if there is a way that all of those requests could be combined into one request? I've seen that the Script Manager is supposed to be able to do something regarding that but I haven't seen any results with the WebResource.axd and ScriptResource.axd files. </p>\n\n<p>How would I go about getting these to all combine?</p>\n",
            "last_activity_date": 1423640573,
            "question_id": 505416,
            "score": 11,
            "tags": [
                "asp.net",
                "javascript",
                "ajaxcontroltoolkit"
            ],
            "title": "How do I combine WebResource.axd and ScriptResource.axd files so as to result in less requests to my ASP.NET server?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The <code>reset</code> method (<a href=\"http://documentcloud.github.com/backbone/#Collection-reset\" rel=\"nofollow\">see 'reset'</a>) allows you to pass a JSON array to a collection.\nThis is the equivalent of a PUT method, replacing the specified collection with the JSON hash.</p>\n\n<p>You can also use the <code>add</code> method to add to an existing collection, or pass the JSON hash into the constructor as you create a new collection.</p>\n\n<p>You'll have to do some basic cleaning up of your array to get it in an appropriate format, and then <a href=\"http://stackoverflow.com/questions/459105/convert-a-multidimensional-javascript-array-to-json\">convert it to JSON</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm at work, so I cannot give you a fully coded answer, but the gist is, you can do the following in your top level models to achieve a nested model hierarchy:</p>\n\n<pre><code>var AmericasNextTopModel = Backbone.Models.extend({\n    initialize: function(){\n\n        this.set({\n             clefs: new ClefCollection(this.get('clefs')),\n             accidentals: new AccidentalCollection(this.get('accidentals')),\n             notes: new NoteCollection(this.get('notes')),\n             rests: new RestCollection(this.get('rests'))\n        });\n    }\n});\n</code></pre>\n\n<p>I do not use backbone-relational so I cannot give you an answer regarding that.</p>\n\n<p>Are you making an online sheet music viewer/editor? :D Cool I'd love to see it when you're done.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>I'm using PHP to grab a feed as JSON since it's on a different domain.  I save those results to a JS variable, and then I just had success using this to get it into my Backbone collection...</p>\n\n<pre><code>var feedCollection = new Backbone.Collection();\nfeedCollection.set(myFeedJSON.nestedObject.nestedArrayIWant);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm relativly new to Backbone.js</p>\n\n<p>I have a <strong>JSON</strong> like the picture shows ! \nI saw some Answers in relation with Backbone-relational, but still dont get the point!</p>\n\n<p>How can i convert this <strong>JSON</strong> to Backbone.js Collections/Models?? </p>\n\n<p>I update with a code but it dont work like expected! i can't see an model when i do :</p>\n\n<p>My Structure is :</p>\n\n<p>[0] : is a collection of models</p>\n\n<p>[clefs] + ... + [Rest] : are collection of models</p>\n\n<p>(clefs) => [0] + ... + [9] : are Models(title contains a string, path too)</p>\n\n<p>Thanks a lot!!</p>\n\n<p><strong>EDIT(10.01.12) :</strong></p>\n\n<p><strong>My Solution :</strong></p>\n\n<pre><code>window.initModel = Backbone.Model.extend({\n  defaults: {\n    \"title\": \"\",\n    \"path\": \"\"\n  }\n});\nwindow.CustomCollection = Backbone.Collection.extend({\n  model: initModel\n});\nwindow.Init = Backbone.Model.extend({\n  url : function(){\n    return  \"/api/data.json\"      \n  },\n\n  parse: function(response) {\n\n    clefs = new CustomCollection();\n    clefs.add(response.clefs);        \n    this.set({clefs: clefs});\n\n    .....\n\n    rests = new CustomCollection();\n    rests.add(response.rests);        \n    this.set({rests: rests});\n} \n});\n</code></pre>\n\n<p><a href=\"http://www.deploymentzone.com/2011/08/10/backbone-js-collections-of-models-within-models/\">this</a> helped me out too!</p>\n\n<p><img src=\"http://i.stack.imgur.com/nLDNF.png\" alt=\"Nested Array\"></p>\n",
            "last_activity_date": 1381779791,
            "question_id": 8782619,
            "score": 10,
            "tags": [
                "javascript",
                "backbone.js",
                "backbone-relational"
            ],
            "title": "How to build a Collection/Model from nested JSON with Backbone.js"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Actually your code should look like this:</p>\n\n<pre><code>var cluster = require('cluster');\nvar http = require('http');\nvar numCPUs = require('os').cpus().length;\n\nif (cluster.isMaster) {\n  // Fork workers.\n  for (var i = 0; i &lt; numCPUs; i++) {\n    cluster.fork();\n  }\n} else {\n  var sio = require('socket.io')\n  , RedisStore = sio.RedisStore\n  , io = sio.listen(8080, options);\n\n  // Somehow pass this information to the workers\n  io.set('store', new RedisStore);\n\n  // Do the work here\n  io.sockets.on('connection', function (socket) {\n    socket.on('chat', function (data) {\n      socket.broadcast.emit('chat', data);\n    })\n  });\n}\n</code></pre>\n\n<p>Another option is to open Socket.IO to listen on multiple ports and have something like HAProxy load-balance stuff.\nAnyway you know the most important thing: using RedisStore to scale outside a process!</p>\n\n<p>Resources:</p>\n\n<p><a href=\"http://nodejs.org/docs/latest/api/cluster.html\">http://nodejs.org/docs/latest/api/cluster.html</a> <br />\n<a href=\"http://stackoverflow.com/questions/5944714/how-can-i-scale-socket-io\">How can I scale socket.io?</a> <br />\n<a href=\"http://stackoverflow.com/questions/5739357/how-to-reuse-redis-connection-in-socket-io\">How to reuse redis connection in socket.io?</a> <br />\n<a href=\"http://stackoverflow.com/questions/7972077/node-scale-socket-io-nowjs-scale-across-different-instances\">Node: Scale socket.io / nowjs - scale across different instances</a> <br />\n<a href=\"http://delicious.com/alessioaw/socket.io\">http://delicious.com/alessioaw/socket.io</a></p>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>I'm looking to get Socket.io to work multi-threaded with <a href=\"http://nodejs.org/docs/latest/api/cluster.html\">native load balancing</a> (\"cluster\") in Node.js v.0.6.0 and later.</p>\n\n<p>From what I understand, Socket.io uses Redis to store its internal data. My understanding is this: instead of spawning a new Redis instance for every worker, we want to force the workers to use the same Redis instance as the master. Thus, connection data would be shared across all workers.</p>\n\n<p>Something like this in the master:</p>\n\n<pre><code>RedisInstance = new io.RedisStore;\n</code></pre>\n\n<p>The we must somehow pass <code>RedisInstance</code> to the workers and do the following:</p>\n\n<pre><code>io.set('store', RedisInstance);\n</code></pre>\n\n<p>Inspired by <a href=\"https://github.com/3rd-Eden/nodejsconfit-2011/tree/master/cluster\">this implementation</a> using the old, 3rd party cluster module, I have the following non-working implementation:</p>\n\n<pre><code>var cluster = require('cluster');\nvar http = require('http');\nvar numCPUs = require('os').cpus().length;\n\nif (cluster.isMaster) {\n  // Fork workers.\n  for (var i = 0; i &lt; numCPUs; i++) {\n    cluster.fork();\n  }\n\n  var sio = require('socket.io')\n  , RedisStore = sio.RedisStore\n  , io = sio.listen(8080, options);\n\n  // Somehow pass this information to the workers\n  io.set('store', new RedisStore);\n\n} else {\n  // Do the work here\n  io.sockets.on('connection', function (socket) {\n    socket.on('chat', function (data) {\n      socket.broadcast.emit('chat', data);\n    })\n  });\n}\n</code></pre>\n\n<p>Thoughts? I might be going completely in the wrong direction, anybody can point to some ideas?</p>\n",
            "last_activity_date": 1324308325,
            "question_id": 8563401,
            "score": 10,
            "tags": [
                "javascript",
                "node.js",
                "socket.io"
            ],
            "title": "Node.js, multi-threading and Socket.io"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It always a good practice to pass radix with parseInt - </p>\n\n<pre><code>parseInt(string, radix)\n</code></pre>\n\n<p>For decimal -</p>\n\n<pre><code>parseInt(id.substring(id.length - 1), 10)\n</code></pre>\n\n<p>If the radix parameter is omitted, JavaScript assumes the following:  </p>\n\n<ul>\n<li>If the string begins with \"0x\", the radix is 16 (hexadecimal)  </li>\n<li>If the string begins with \"0\", the radix is 8 (octal). This feature is deprecated  </li>\n<li>If the string begins with any other value, the radix is 10 (decimal)  </li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 241
                },
                {
                    "body": "<p>Adding the following on top of your JS file will tell JSHint to supress the radix warning:</p>\n\n<pre><code>/*jshint -W065 */\n</code></pre>\n\n<p>See also: <a href=\"http://jshint.com/docs/#options\">http://jshint.com/docs/#options</a></p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>I'm not properly answering the question but, I think it makes sense to clear <strong>why we should specify the radix</strong>. </p>\n\n<p>On MDN documentation we can read that:</p>\n\n<p>If radix is undefined or 0 (or absent), JavaScript assumes the following:</p>\n\n<ul>\n<li>[...]</li>\n<li>If the input string begins with \"0\", radix is eight (octal) or 10 (decimal).  Exactly which radix is chosen is implementation-dependent.  <strong>ECMAScript 5 specifies that 10 (decimal) is used, but not all browsers support this yet.  For this reason always specify a radix when using parseInt.</strong></li>\n<li>[...]</li>\n</ul>\n\n<p>Source: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">MDN parseInt()</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I ran  JSLint on this JavaScript code and it said: </p>\n\n<pre><code>Problem at line 32 character 30: Missing radix parameter.\n</code></pre>\n\n<p>This is the code in question:</p>\n\n<pre><code>imageIndex = parseInt(id.substring(id.length - 1))-1;\n</code></pre>\n\n<p>What is wrong here?</p>\n",
            "last_activity_date": 1409998701,
            "question_id": 7818903,
            "score": 123,
            "tags": [
                "javascript",
                "jslint",
                "radix"
            ],
            "title": "JSLint says &quot;missing radix parameter&quot;; what should I do?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><code>$.browser</code> was removed from jQuery starting with version 1.9. It is now available <a href=\"https://github.com/gabceb/jquery-browser-plugin\">as a plugin</a>. It's generally recommended to avoid browser detection, which is why it was removed.</p>\n",
                    "is_accepted": true,
                    "score": 156
                }
            ],
            "body": "<p>This error message is arising from the following code:</p>\n\n<pre><code>$.fn.extend({\n    chosen: function(options) {\n      if ($.browser.msie &amp;&amp; ($.browser.version === \"6.0\" || $.browser.version === \"7.0\")) {\n</code></pre>\n\n<p>From the file: <a href=\"https://github.com/koenpunt/chosen/edit/master/chosen/chosen.jquery.js\">https://github.com/koenpunt/chosen/edit/master/chosen/chosen.jquery.js</a></p>\n\n<p>Obviously browser is not defined. Any idea what could be causing this. Same error in Chrome and FF.</p>\n",
            "last_activity_date": 1393936783,
            "question_id": 14793331,
            "score": 75,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Uncaught TypeError: Cannot read property &#39;msie&#39; of undefined"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>How about </p>\n\n<pre><code>$('select&gt;option:eq(3)').attr('selected', true);\n</code></pre>\n\n<p>example at <a href=\"http://www.jsfiddle.net/gaby/CWvwn/\">http://www.jsfiddle.net/gaby/CWvwn/</a></p>\n\n<hr>\n\n<p>for modern versions of jquery you should use the <a href=\"http://api.jquery.com/prop\"><code>.prop()</code></a> instead of <code>.attr()</code></p>\n\n<pre><code>$('select&gt;option:eq(3)').prop('selected', true);\n</code></pre>\n\n<p>example at <a href=\"http://jsfiddle.net/gaby/CWvwn/1763/\">http://jsfiddle.net/gaby/CWvwn/1763/</a></p>\n",
                    "is_accepted": true,
                    "score": 76
                },
                {
                    "body": "<p>The solution:</p>\n\n<pre><code>$(\"#control id\").val('the value of the option');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 80
                },
                {
                    "body": "<p>if your options have a value, you can do this:</p>\n\n<pre><code>$('select').val(\"the-value-of-the-option-you-want-to-select\");\n</code></pre>\n\n<p>'select' would be the id of your select or a class selector. or if there is just one select, you can use the tag as it is in the example.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I prefer nth-child() to eq() as it uses 1-based indexing rather than 0-based, which is slightly easier on my brain.</p>\n\n<pre><code>//selects the 2nd option\n$('select&gt;option:nth-child(2)').attr('selected', true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>answer with id:</p>\n\n<pre><code>$('#selectBoxId').find('option:eq(0)').attr('selected', true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>HTML select elements have a <a href=\"https://developer.mozilla.org/en-US/docs/HTML/Element/select#attr-selectedIndex\"><code>selectedIndex</code></a> property that can be written to in order to select a particular option:</p>\n\n<pre><code>$('select').prop('selectedIndex', 3); // select 4th option\n</code></pre>\n\n<p>Using plain JavaScript this can be achieved by:</p>\n\n<pre><code>// use first select element\nvar el = document.getElementsByTagName('select')[0]; \n// assuming el is not null, select 4th option\nel.selectedIndex = 3;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<pre><code> $('select&gt;option:eq(3)').attr('selected', 'selected');\n</code></pre>\n\n<p>One caveat here is if you have javascript watching for select/option's change event you need to add <code>.trigger('change')</code> so the code become. </p>\n\n<pre><code> $('select&gt;option:eq(3)').attr('selected', 'selected').trigger('change');\n</code></pre>\n\n<p>because only calling <code>.attr('selected', 'selected')</code> does not trigger the event</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The easiest way is <code>val(value)</code> function:</p>\n\n<pre><code>$('select').val(2);\n</code></pre>\n\n<p>And to get the selected value you give no arguments:</p>\n\n<pre><code>$('select').val();\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/48Gkv/\"><strong>DEMO</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>With '' element usually we use 'value' attribute. It will make it easier to set then:</p>\n\n<pre><code>$('select').val('option-value');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>$('#mySelectElement option')[0].selected = true;\n</code></pre>\n\n<p>Regards!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use the following code if you want to select an option with a specific value:</p>\n\n<pre><code>$('select&gt;option[value=\"' + value + '\"]').prop('selected', true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I was wondering if it's possible to get jQuery to select an option, say the 4th item, in a dropdown box?</p>\n\n<pre><code>&lt;select&gt;\n    &lt;option&gt;&lt;/option&gt;\n    &lt;option&gt;&lt;/option&gt;\n    &lt;option&gt;&lt;/option&gt;\n    &lt;option&gt;&lt;/option&gt;\n    &lt;option&gt;&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>I want the user to click a link, then have the select box change it's value, as if the user has selected it by clicking on the option.</p>\n",
            "last_activity_date": 1390315592,
            "question_id": 4864620,
            "score": 72,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "select",
                "drop-down-menu"
            ],
            "title": "use jquery to select a dropdown option"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>if( $(elem).is(':animated') ) {...}\n</code></pre>\n\n<p><strong>More info</strong>: <a href=\"http://docs.jquery.com/Selectors/animated\">http://docs.jquery.com/Selectors/animated</a></p>\n\n<p><hr /></p>\n\n<p>Or:</p>\n\n<pre><code>$(elem)\n    .css('overflow' ,'hidden')\n    .animate({/*options*/}, function(){\n        // Callback function\n        $(this).css('overflow', 'auto');\n    };\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 132
                },
                {
                    "body": "<p>Alternatively, to test if something is not animated, you can simply add a \"!\":</p>\n\n<pre><code>if (!$(element).is(':animated')) {...}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I'm trying to move some elements on the page, and during the time the animation occurs, I want to have \"overflow:hidden\" applied to an elemnt, and \"overflow\" back to \"auto\" once the animation is completed.</p>\n\n<p>I know jQuery has an utility function that determines whether some element is being animated but I can't find it anywhere in the docs</p>\n",
            "last_activity_date": 1389781779,
            "question_id": 724911,
            "score": 63,
            "tags": [
                "javascript",
                "jquery",
                "animation"
            ],
            "title": "How do I find out with jQuery if an element is being animated?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Using <a href=\"http://en.wikipedia.org/wiki/Modulo_operation\">modulus</a> will work:</p>\n\n<pre><code>num % 1 != 0\n// 23.5 % 1 = 0.5\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 177
                },
                {
                    "body": "<p>The most common solution is to strip the integer portion of the number and compare it to zero like so:</p>\n\n<pre><code>function Test()\n{\n     var startVal = 123.456\n     alert( (startVal - Math.floor(startVal)) != 0 )\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>var re=/^-?[0-9]+$/;\nvar num=10;\nre.test(num);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>//How about byte-ing it?</p>\n\n<pre><code>Number.prototype.isInt= function(){\n return this== this&gt;&gt; 0;\n}\n</code></pre>\n\n<p>I always feel kind of bad for bit operators in javascript- </p>\n\n<p>they hardly get any exercise.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Or you could just use to find out if it is NOT a decimal:</p>\n\n<pre><code>string.indexOf(\".\")==-1;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<pre><code>function isDecimal(n){\n    if(n == \"\")\n        return false;\n\n    var strCheck = \"0123456789\";\n    var i;\n\n    for(i in n){\n        if(strCheck.indexOf(n[i]) == -1)\n            return false;\n    }\n    return true;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>parseInt(num) === num\n</code></pre>\n\n<p>when passed a number, <code>parseInt()</code> just returns the number as int:</p>\n\n<pre><code>parseInt(3.3) === 3.3 // false because 3 !== 3.3\nparseInt(3) === 3     // true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Simple, but effective!</p>\n\n<pre><code>Math.floor(number) == number;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am looking for an easy way in JavaScript to check if a number has a decimal place in it (is an integer).  For instance,</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>23 -&gt; OK\n5 -&gt; OK\n3.5 -&gt; not OK\n34.345 -&gt; not OK\n</code></pre>\n\n<pre><code>if(number is integer) {...}</code></pre>\n",
            "last_activity_date": 1425318259,
            "question_id": 2304052,
            "score": 57,
            "tags": [
                "javascript",
                "numbers"
            ],
            "title": "Check if a number has a decimal place/is a whole number"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>There is no such thing as <code>:touch</code> in the W3C specifications, <a href=\"http://www.w3.org/TR/CSS2/selector.html#pseudo-class-selectors\">http://www.w3.org/TR/CSS2/selector.html#pseudo-class-selectors</a></p>\n\n<p><code>:active</code> should work, I would think.</p>\n\n<p>Order on the <code>:active</code>/<code>:hover</code> psuedo class is important for it to function correctly.</p>\n\n<p>Here is a quote from that above link</p>\n\n<p>Interactive user agents sometimes change the rendering in response to user actions. CSS provides three pseudo-classes for common cases:</p>\n\n<blockquote>\n  <ul>\n  <li>The :hover pseudo-class applies while the user designates an element\n  (with some pointing device), but does\n  not activate it. For example, a visual\n  user agent could apply this\n  pseudo-class when the cursor (mouse\n  pointer) hovers over a box generated\n  by the element. User agents not\n  supporting interactive media do not\n  have to support this pseudo-class.\n  Some conforming user agents supporting\n  interactive media may not be able to\n  support this pseudo-class (e.g., a pen\n  device).  </li>\n  <li>The :active pseudo-class applies while an element is being activated by\n  the user. For example, between the\n  times the user presses the mouse\n  button and releases it. </li>\n  <li>The :focus pseudo-class applies while an element has the focus\n  (accepts keyboard events or other\n  forms of text input).</li>\n  </ul>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>Since mobile doesn't give hover feedback, I want, as a user, to see instant feedback when a link is tapped. I noticed that <code>-webkit-tap-highlight-color</code> is the fastest to respond (subjective).</p>\n\n<p>Add the following to your body and your links will have a tap effect.</p>\n\n<pre><code>body {\n    -webkit-tap-highlight-color: #ccc;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am trying to make a button, such that when the user clicks on it, it changes its style while the mouse button is being held down. I also want it to change its style in a similar way if it is touched in a mobile browser. The seemingly-obvious thing to me was to use the CSS :active pseudo-class, but that didn't work. I tried :focus, and it didn't work too. I tried :hover, and it seemed to work, but it kept the style after I took my finger off the button. All of these observations were on an iPhone 4 and a Droid 2.</p>\n\n<p>Is there any way to replicate the effect on mobile browsers (iPhone, iPad, Android, and hopefully others)? For now, I am doing something like this:</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n    #testButton {\n        background: #dddddd;\n    }\n    #testButton:active, #testButton.active {\n        background: #aaaaaa;\n    }\n&lt;/style&gt;\n\n...\n\n&lt;button type=\"button\" id=\"testButton\"&gt;test&lt;/button&gt;\n\n...\n\n&lt;script type='text/javascript' src='http://code.jquery.com/jquery-1.6.1.min.js'&gt;&lt;/script&gt;\n&lt;script type='text/javascript'&gt;\n    $(\"*\").live(\"touchstart\", function() {\n      $(this).addClass(\"active\");\n    }).live(\"touchend\", function() {\n      $(this).removeClass(\"active\");\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>The :active pseudo-class is for desktop browsers, and the active class is for touch browsers.</p>\n\n<p>I am wondering if there is a simpler way to do it, without involving Javascript.</p>\n",
            "last_activity_date": 1407227597,
            "question_id": 6063308,
            "score": 45,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "mobile"
            ],
            "title": ":touch CSS pseudo-class or something similar?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Using <a href=\"http://jquery.com/\">jQuery</a> you can do this:</p>\n\n<pre><code>var cnt = $(\".remove-just-this\").contents();\n$(\".remove-just-this\").replaceWith(cnt);\n</code></pre>\n\n<p>Quick links to the documentation:</p>\n\n<ul>\n<li><a href=\"http://docs.jquery.com/Traversing/contents\">contents</a>( ) : <em>jQuery</em></li>\n<li><a href=\"http://docs.jquery.com/Manipulation/replaceWith\">replaceWith</a>( <em>content</em> : [<em>String</em> | <em>Element</em> | <em>jQuery</em>] ) : <em>jQuery</em></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 78
                },
                {
                    "body": "<p>Whichever library you are using you have to clone the inner div before removing the outer div from the DOM. Then you have to add the cloned inner div to the place in the DOM where the outer div was. So the steps are:</p>\n\n<ol>\n<li>Save a reference to the outer div's parent in a variable</li>\n<li>Copy the inner div to another variable. This can be done in a quick and dirty way by saving the <code>innerHTML</code> of the inner div to a variable or you can copy the inner tree recursively node by node.</li>\n<li>Call <code>removeChild</code> on the outer div's parent with the outer div as the argument.</li>\n<li>Insert the copied inner content to the outer div's parent in the correct position.</li>\n</ol>\n\n<p>Some libraries will do some or all of this for you but something like the above will be going on under the hood.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The library-independent method is to insert all child nodes of the element to be removed before itself (which implicitly removes them from their old position), before you remove it:</p>\n\n<pre><code>while (nodeToBeRemoved.firstChild)\n{\n    nodeToBeRemoved.parentNode.insertBefore(nodeToBeRemoved.firstChild,\n                                            nodeToBeRemoved);\n}\n\nnodeToBeRemoved.parentNode.removeChild(nodeToBeRemoved);\n</code></pre>\n\n<p>This will move all child nodes to the correct place in the right order.</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>You should make sure to do this with the DOM, not innerHTML (and if using the jQuery solution provided by jk, make sure that it moves the DOM nodes rather than using innerHTML internally), in order to preserve things like event handlers.</p>\n\n<p>My answer is a lot like insin's, but will perform better for large structures (appending each node separately can be taxing on redraws where CSS has to be reapplied for each appendChild; with a DocumentFragment, this only occurs once as it is not made visible until after its children are all appended and it is added to the document).</p>\n\n<pre><code>var fragment = document.createDocumentFragment();\nwhile(element.firstChild) {\n    fragment.appendChild(element.firstChild);\n}\nelement.parentNode.replaceChild(fragment, element);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>And, since you tried in mootools as well, here's the solution in mootools.</p>\n\n<pre><code>var children = $('remove-just-this').getChildren();\nchildren.replaces($('remove-just-this');\n</code></pre>\n\n<p>Note that's totally untested, but I have worked with mootools before and it should work.</p>\n\n<p><a href=\"http://mootools.net/docs/Element/Element#Element:getChildren\" rel=\"nofollow\">http://mootools.net/docs/Element/Element#Element:getChildren</a></p>\n\n<p><a href=\"http://mootools.net/docs/Element/Element#Element:replaces\" rel=\"nofollow\">http://mootools.net/docs/Element/Element#Element:replaces</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code> $('.remove-just-this &gt; *').unwrap()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>if you'd like to do this same thing in pyjamas, here's how it's done.  it works great (thank you to eyelidness).  i've been able to make a proper rich text editor which properly does styles without messing up, thanks to this.</p>\n\n<pre><code>def remove_node(doc, element):\n    \"\"\" removes a specific node, adding its children in its place\n    \"\"\"\n    fragment = doc.createDocumentFragment()\n    while element.firstChild:\n        fragment.appendChild(element.firstChild)\n\n    parent = element.parentNode\n    parent.insertBefore(fragment, element)\n    parent.removeChild(element)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Let's say:</p>\n\n<pre><code>&lt;div&gt;\nsome text\n  &lt;div class=\"remove-just-this\"&gt;\n  &lt;p&gt;foo&lt;/p&gt;\n  &lt;p&gt;bar&lt;/p&gt;\n  some text node here\n  &lt;/div&gt;\nsome text\n&lt;/div&gt;\n</code></pre>\n\n<p>to this:</p>\n\n<pre><code>&lt;div&gt;\nsome text\n  &lt;p&gt;foo&lt;/p&gt;\n  &lt;p&gt;bar&lt;/p&gt;\n  some text node here\nsome text\n&lt;/div&gt;\n</code></pre>\n\n<p>I've been figuring out using Mootools, jQuery and even (raw) JavaScript, but couldn't get the idea how to do this.</p>\n",
            "last_activity_date": 1381975525,
            "question_id": 170004,
            "score": 45,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "How to remove only the parent element and not its child elements in JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you want to <code>$broadcast</code> use the <code>$rootScope</code>:</p>\n\n<pre><code>$scope.startScanner = function() {\n\n    $rootScope.$broadcast('scanner-started');\n}\n</code></pre>\n\n<p>And then to receive, use the <code>$scope</code> of your controller:</p>\n\n<pre><code>$scope.$on('scanner-started', function(event, args) {\n\n    // do what you want to do\n});\n</code></pre>\n\n<p>If you want you can pass arguments when you <code>$broadcast</code>:</p>\n\n<pre><code>$rootScope.$broadcast('scanner-started', { any: {} });\n</code></pre>\n\n<p>And then receive them:</p>\n\n<pre><code>$scope.$on('scanner-started', function(event, args) {\n\n    var anyThing = args.any;\n    // do what you want to do\n});\n</code></pre>\n\n<p>Documentation for this inside the <a href=\"http://docs.angularjs.org/api/ng.%24rootScope.Scope\">Scope docs</a>.</p>\n",
                    "is_accepted": true,
                    "score": 98
                },
                {
                    "body": "<pre><code>//Your broadcast in service\n\n(function () { \n    angular.module('appModule').factory('AppService', function ($rootScope, $timeout) {\n\n    function refreshData() {  \n        $timeout(function() {         \n            $rootScope.$broadcast('refreshData');\n        }, 0, true);      \n    }\n\n    return {           \n        RefreshData: refreshData\n    };\n}); }());\n\n//Controller Implementation\n (function () {\n    angular.module('appModule').controller('AppController', function ($rootScope, $scope, $timeout, AppService) {            \n\n       //Removes Listeners before adding them \n       //This line will solve the problem for multiple broadcast call                             \n       $scope.$$listeners['refreshData'] = [];\n\n       $scope.$on('refreshData', function() {                                                    \n          $scope.showData();             \n       });\n\n       $scope.onSaveDataComplete = function() { \n         AppService.RefreshData();\n       };\n    }); }());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One thing you should know is $ prefix refers to an Angular Method, $$ prefixes refers to angular methods that you should avoid using.</p>\n\n<p>below is an example template and its controllers, we'll explore how $broadcast/$on can help us achieve what we want.</p>\n\n<pre><code>&lt;div ng-controller=\"FirstCtrl\"&gt;\n    &lt;input ng-model=\"name\"/&gt; \n    &lt;button ng-click=\"register()\"&gt;Register &lt;/button&gt;\n&lt;/div&gt;\n\n&lt;div ng-controller=\"SecondCtrl\"&gt;\n    Registered Name: &lt;input ng-model=\"name\"/&gt; \n&lt;/div&gt;\n</code></pre>\n\n<p>The controllers are</p>\n\n<pre><code>app.controller('FirstCtrl', function($scope){\n    $scope.register = function(){\n\n    }\n});\n\napp.controller('SecondCtrl', function($scope){\n\n});\n</code></pre>\n\n<p>My question to you is how do you pass the name to the second controller when a user clicks register?  You may come up with multiple solutions but the one we're going to use is using $broadcast and $on.</p>\n\n<p><strong>$broadcast vs $emit</strong></p>\n\n<p>Which should we use?  $broadcast will channel down to all the children dom elements and $emit will channel the opposite direction to all the ancestor dom elements.  </p>\n\n<p>The best way to avoid deciding between $emit or $broadcast is to channel from the $rootScope and use $broadcast to all its children.  Which makes our case much easier since our dom elements are siblings.</p>\n\n<p><strong>Adding $rootScope and lets $broadcast</strong></p>\n\n<pre><code>app.controller('FirstCtrl', function($rootScope, $scope){\n    $scope.register = function(){\n        $rootScope.$broadcast('BOOM!', $scope.name)\n    }\n});\n</code></pre>\n\n<p>Note we added $rootScope and now we're using $broadcast(broadcastName, arguments).  For broadcastName, we want to give it a unique name so we can catch that name in our secondCtrl.  I've chosen BOOM! just for fun.  The second arguments 'arguments' allows us to pass values to the listeners.</p>\n\n<p><strong>Receiving our broadcast</strong></p>\n\n<p>In our second controller, we need to set up code to listen to our broadcast</p>\n\n<pre><code>app.controller('SecondCtrl', function($scope){\n  $scope.$on('BOOM!', function(events, args){\n    console.log(args);\n    $scope.name = args; //now we've registered!\n  })\n});\n</code></pre>\n\n<p>It's really that simple. <a href=\"http://plnkr.co/edit/YWKE0d6KzyHvIxK8os3V?p=preview\" rel=\"nofollow\">Live Example</a></p>\n\n<p><strong>Other ways to achieve similar results</strong></p>\n\n<p>Try to avoid using this suite of methods as it is neither efficient nor easy to maintain but it's a simple way to fix issues you might have.  </p>\n\n<p>You can usually do the same thing by using a service or by simplifying your controllers.  We won't discuss this in detail but I thought I'd just mention it for completeness.</p>\n\n<p>Lastly, keep in mind a really useful broadcast to listen to is '$destroy' again you can see the $ means it's a method or object created by the vendor codes.  Anyways $destroy is broadcasted when a controller gets destroyed, you may want to listen to this to know when your controller is removed.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>i have an footerController and scanController with different views.</p>\n\n<pre><code>angular.module('myApp').controller('footerController', [\"$scope\", function($scope) {}]);\n\nangular.module('myApp').controller('codeScannerController', [\"$scope\", function($scope) {\nconsole.log(\"start\");\n$scope.startScanner = function(){...\n</code></pre>\n\n<p>when i click on li in footer.html i should get this event in scancontroller. i think it can be realise with $on and $broadcast, but don't know how and can't find examples anywhere..</p>\n\n<pre><code>&lt;li class=\"button\" ng-click=\"startScanner()\"&gt;3&lt;/li&gt;\n</code></pre>\n",
            "last_activity_date": 1425254299,
            "question_id": 19446755,
            "score": 44,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "$on and $broadcast in angular"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>There are a couple of strategies that you can use here.  </p>\n\n<p>-One is to place all of your actual content into templates that live in script tags (does work fine with native templates).  Within the template, you can then use control-flow bindings.  This would be like:</p>\n\n<pre><code>&lt;div data-bind=\"template: 'contentTmpl'\"&gt;&lt;/div&gt;\n\n&lt;script id=\"contentTmpl\" type=\"text/html\"&gt;\n   &lt;ul data-bind=\"foreach: items\"&gt;\n       &lt;li data-bind=\"text: name\"&gt;&lt;/li&gt;\n   &lt;/ul&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>-Another choice is to use <code>style=\"display: none\"</code> on the container element along with a <code>visible</code> binding that can be tied to a <code>loaded</code> observable where you change the observable to <code>true</code> after the bindings have been applied.</p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>I was just googleing for this, and after using the observable way, I thought of another approach:</p>\n\n<pre><code>&lt;div style=\"display: none\" data-bind=\"visible: true\"&gt;\n  &lt;ul data-bind=\"foreach: items\"&gt;\n    &lt;li data-bind=\"text: name\"&gt;&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>You don't need an observable, the visible will always evaluate to true once the data binding is done.</p>\n",
                    "is_accepted": false,
                    "score": 95
                }
            ],
            "body": "<p>I'm a huge knockoutjs fan. I use it for all my web development now and simply love it. One thing that I've not been able to figure out though is how to hide the UI while the knockoutjs bindings are being built.</p>\n\n<p>For example, I have a very robust user interface with lots of templates being used on my page.  The problem that I'm noticing is that when the user first visits the page, they see all of my templates for a split second before the bindings kick in and hide them.</p>\n\n<p>What is the best way to fix this problem? I've tried using helper classes to hide them, but then the templates are not able to be displayed using 'visible' and 'if' bindings unless I remove the helper class reference (ie. ui-helper-hidden).</p>\n\n<p>Thanks in advance!</p>\n",
            "last_activity_date": 1370467796,
            "question_id": 9532595,
            "score": 41,
            "tags": [
                "javascript",
                "mvvm",
                "knockout.js"
            ],
            "title": "What is the best way to hide the screen while knockout js bindings are being built?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>The obvious answer would be to generate different ids, a separate id for each text box, something like</p>\n\n<pre><code>[int i=0]\n&lt;% Using Html.BeginForm()%&gt;\n&lt;% For Each item In Model.MyRecords%&gt;\n[i++]\n&lt;%=Html.TextBox(\"my_date[i]\")%&gt; &lt;br/&gt;\n&lt;% Next%&gt;\n&lt;% End Using%&gt;\n</code></pre>\n\n<p>I don't know ASP.net so I just added some general C-like syntax code within square brackets. Translating it to actual ASP.net code shouldn't be a problem.</p>\n\n<p>Then, you have to find a way to generate as many</p>\n\n<pre><code>$('#my_date[i]').datepicker();\n</code></pre>\n\n<p>as items in your <code>Model.MyRecords</code>. Again, within square brackets is your counter, so your jQuery function would be something like:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $(function() {\n        $('#my_date1').datepicker();\n        $('#my_date2').datepicker();\n        $('#my_date3').datepicker();\n        ...\n    });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>html:</p>\n\n<pre><code>&lt;input type=\"text\" class=\"datepick\" id=\"date_1\" /&gt;\n&lt;input type=\"text\" class=\"datepick\" id=\"date_2\" /&gt;\n&lt;input type=\"text\" class=\"datepick\" id=\"date_3\" /&gt;\n</code></pre>\n\n<p>script:</p>\n\n<pre><code>$('.datepick').each(function(){\n    $(this).datepicker();\n});\n</code></pre>\n\n<p>(pseudo coded up a bit to keep it simpler)</p>\n",
                    "is_accepted": true,
                    "score": 71
                },
                {
                    "body": "<p>The solution here is to have different IDs as many of you have stated. The problem still lies deeper in datepicker. Please correct me, but doesn't the datepicker have one wrapper ID - \"ui-datepicker-div.\" This is seen on <a href=\"http://jqueryui.com/demos/datepicker/#option-showOptions\" rel=\"nofollow\">http://jqueryui.com/demos/datepicker/#option-showOptions</a> in the theming.</p>\n\n<p>Is there an option that can change this ID to be a class? I don't want to have to fork this script just for this one obvious fix!!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;html&gt;\n&lt;head&gt;\n &lt;!-- jQuery JS Includes --&gt;\n &lt;script type=\"text/javascript\" src=\"jquery/jquery-1.3.2.js\"&gt;&lt;/script&gt;\n &lt;script type=\"text/javascript\" src=\"jquery/ui/ui.core.js\"&gt;&lt;/script&gt;\n &lt;script type=\"text/javascript\" src=\"jquery/ui/ui.datepicker.js\"&gt;&lt;/script&gt;\n\n &lt;!-- jQuery CSS Includes --&gt;\n &lt;link type=\"text/css\" href=\"jquery/themes/base/ui.core.css\" rel=\"stylesheet\" /&gt;\n &lt;link type=\"text/css\" href=\"jquery/themes/base/ui.datepicker.css\" rel=\"stylesheet\" /&gt;\n &lt;link type=\"text/css\" href=\"jquery/themes/base/ui.theme.css\" rel=\"stylesheet\" /&gt;\n\n &lt;!-- Setup Datepicker --&gt;\n &lt;script type=\"text/javascript\"&gt;&lt;!--\n  $(function() {\n   $('input').filter('.datepicker').datepicker({\n    changeMonth: true,\n    changeYear: true,\n    showOn: 'button',\n    buttonImage: 'jquery/images/calendar.gif',\n    buttonImageOnly: true\n   });\n  });\n --&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n &lt;!-- Each input field needs a unique id, but all need to be datepicker --&gt;\n &lt;p&gt;Date 1: &lt;input id=\"one\" class=\"datepicker\" type=\"text\" readonly=\"true\"&gt;&lt;/p&gt;\n &lt;p&gt;Date 2: &lt;input id=\"two\" class=\"datepicker\" type=\"text\" readonly=\"true\"&gt;&lt;/p&gt;\n &lt;p&gt;Date 3: &lt;input id=\"three\" class=\"datepicker\" type=\"text\" readonly=\"true\"&gt;&lt;/p&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To change use of class instead of ID</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt; \n    $(function() { \n        $('.my_date1').datepicker(); \n        $('.my_date2').datepicker(); \n        $('.my_date3').datepicker(); \n        ... \n    }); \n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just had the same problem.</p>\n\n<p>The correct way to use date pick is <code>$('.my_class').datepicker();</code> but you need to make sure you don't assign the same ID to multiple datepickers.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I had the same problem, but finally discovered that it was an issue with the way I was invoking the script from an ASP web user control. I was using <code>ClientScript.RegisterStartupScript()</code>, but forgot to give the script a unique key (the second argument). With both scripts being assigned the same key, only the first box was actually being converted into a datepicker. So I decided to append the textbox's ID to the key to make it unique:</p>\n\n<pre><code>Page.ClientScript.RegisterStartupScript(this.GetType(), \"DPSetup\" + DPTextbox.ClientID, dpScript);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had a similar problem with dynamically adding datepicker classes.  The solution I found was to comment out line 46 of datepicker.js </p>\n\n<pre><code>// this.element.on('click', $.proxy(this.show, this));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When adding datepicker at runtime generated input textboxes you have to check if it already contains datepicker then first remove class hasDatepicker then apply datePicker to it.</p>\n\n<pre><code>function convertTxtToDate() {\n        $('.dateTxt').each(function () {\n            if ($(this).hasClass('hasDatepicker')) {\n                $(this).removeClass('hasDatepicker');\n            } \n             $(this).datepicker();\n        });\n    } \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is a simple solution.</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;script src=\"http://code.jquery.com/jquery-1.9.1.js\"&gt;&lt;/script&gt;      \n        &lt;script src=\"http://code.jquery.com/ui/1.10.3/jquery-ui.js\"&gt; &lt;/script&gt; \n        &lt;script type=\"text/javascript\" src=\"../js/jquery.min.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\" src=\"../js/flexcroll.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\" src=\"../js/jquery-ui-1.8.18.custom.min.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\" src=\"../js/JScript.js\"&gt;&lt;/script&gt;\n        &lt;title&gt;calendar&lt;/title&gt;    \n        &lt;script type=\"text/javascript\"&gt; \n            $(function(){$('.dateTxt').datepicker(); }); \n        &lt;/script&gt; \n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;p&gt;Date 1: &lt;input id=\"one\" class=\"dateTxt\" type=\"text\" &gt;&lt;/p&gt;\n        &lt;p&gt;Date 2: &lt;input id=\"two\" class=\"dateTxt\" type=\"text\" &gt;&lt;/p&gt;\n        &lt;p&gt;Date 3: &lt;input id=\"three\" class=\"dateTxt\" type=\"text\" &gt;&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><em>A little note to the SeanJA answer.</em></p>\n\n<p>Interestingly, if you use <strong>KnockoutJS and jQuery together</strong> \nthe following inputs <strong>with different IDs</strong>, but with <strong>the same data-bind observable</strong>:</p>\n\n<pre><code>&lt;data-bind=\"value: first_dt\" id=\"date_1\" class=\"datepick\" /&gt;\n&lt;data-bind=\"value: first_dt\" id=\"date_2\" class=\"datepick\" /&gt;\n</code></pre>\n\n<p>will bind one (the same) datepicker to both of the inputs (even though they have different ids or names).</p>\n\n<p>Use <strong>separate observables in your ViewModel</strong> to bind a separate datepicker to each input:</p>\n\n<pre><code>&lt;data-bind=\"value: first_dt\" id=\"date_1\" class=\"datepick\" /&gt;\n&lt;data-bind=\"value: second_dt\" id=\"date_2\" class=\"datepick\" /&gt;\n</code></pre>\n\n<p>Initialization:</p>\n\n<pre><code>$('.datepick').each(function(){\n    $(this).datepicker();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've got a jQuery date picker control that works fine for once instance, but I'm not sure how to get it to work for multiple instances.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $(function() {\n        $('#my_date').datepicker();\n    });\n&lt;/script&gt;\n\n&lt;% Using Html.BeginForm()%&gt;\n&lt;% For Each item In Model.MyRecords%&gt;\n&lt;%=Html.TextBox(\"my_date\")%&gt; &lt;br/&gt;\n&lt;% Next%&gt;\n&lt;% End Using%&gt;\n</code></pre>\n\n<p>Without the For Each loop, it works fine, but if there's more than one item in the \"MyRecords\" collection, then only the first text box gets a date picker (which makes sense since it's tied to the ID). I tried assigning a class to the text box and specifying:</p>\n\n<pre><code>$('.my_class').datepicker();\n</code></pre>\n\n<p>but while that shows a date picker everywhere, they all update the first text box.</p>\n\n<p>What is the right way to make this work?</p>\n",
            "last_activity_date": 1416741431,
            "question_id": 707603,
            "score": 41,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui"
            ],
            "title": "Apply jQuery datepicker to multiple instances"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I'm guessing that you're doing some sort of localization, so have a look at <a href=\"http://mattsnider.com/javascript/numbers-and-number-format-function/\" rel=\"nofollow\">this script</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Take a look at recently released <strong><a href=\"http://blog.jquery.com/2010/10/04/new-official-jquery-plugins-provide-templating-data-linking-and-globalization/\" rel=\"nofollow\">Globalization plugin</a></strong> to jQuery by Microsoft</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is all you need.</p>\n\n<pre><code>  function commaSeparateNumber(val){\n    while (/(\\d+)(\\d{3})/.test(val.toString())){\n      val = val.toString().replace(/(\\d+)(\\d{3})/, '$1'+','+'$2');\n    }\n    return val;\n  }\n</code></pre>\n\n<p>Wrote this to be compact, and to the point, thanks to regex. This is straight JS, but you can use it in your jQuery like so:</p>\n\n<pre><code>$('#elementID').html(commaSeparateNumber(1234567890));\n</code></pre>\n\n<p>or</p>\n\n<pre><code>$('#inputID').val(commaSeparateNumber(1234567890));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>Take a look at <a href=\"http://adamwdraper.github.com/Numeral-js/\" rel=\"nofollow\">Numeral.js</a>.  It can format numbers, currency, percentages and has support for localization.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>    function delimitNumbers(str) {\n      return (str + \"\").replace(/\\b(\\d+)((\\.\\d+)*)\\b/g, function(a, b, c) {\n        return (b.charAt(0) &gt; 0 &amp;&amp; !(c || \".\").lastIndexOf(\".\") ? b.replace(/(\\d)(?=(\\d{3})+$)/g, \"$1,\") : b) + c;\n      });\n    }\n\n    alert(delimitNumbers(1234567890));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>Number(10000).toLocaleString('en');  // \"10,000\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>Timothy Pirez answer was very correct but if you need to replace the numbers with commas Immediately as user types in textfield, u might want to use the Keyup function.        </p>\n\n<pre><code>    $('#textfield').live('keyup', function (event) {\n    var value=$('#textfield').val();\n\n  if(event.which &gt;= 37 &amp;&amp; event.which &lt;= 40){\n      event.preventDefault();\n  }\n  var newvalue=value.replace(/,/g, '');   \n  var valuewithcomma=Number(newvalue).toLocaleString('en');   \n  $('#textfield').val(valuewithcomma); \n</code></pre>\n\n<p>});</p>\n\n<pre><code>&lt;form&gt;&lt;input type=\"text\" id=\"textfield\" &gt;&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>another approach:</strong></p>\n\n<pre><code>function addCommas(nStr)\n{\n    nStr += '';\n    x = nStr.split('.');\n    x1 = x[0];\n    x2 = x.length &gt; 1 ? '.' + x[1] : '';\n    var rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(x1)) {\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\n    }\n    return x1 + x2;\n}\nvar a  = addCommas(10000.00);\nalert(a);\n</code></pre>\n\n<p>Another amazing plugin:\n<a href=\"http://www.teamdf.com/web/jquery-number-format/178/\" rel=\"nofollow\">http://www.teamdf.com/web/jquery-number-format/178/</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I have these numbers</p>\n\n<p><code>10999</code> and <code>8094</code> and <code>456</code></p>\n\n<p>And all i want to do is add a comma in the right place if it needs it so it looks like this</p>\n\n<p><code>10,999</code> and <code>8,094</code> and <code>456</code></p>\n\n<p>These are all within a p tag like this <code>&lt;p class=\"points\"&gt;10999&lt;/p&gt;</code> etc.</p>\n\n<p>Can it be done?</p>\n\n<p>I've attempted it here with the help of other posts <a href=\"http://jsfiddle.net/pdWTU/1/\">http://jsfiddle.net/pdWTU/1/</a> but can't seem to get it to work</p>\n\n<p>Thanks</p>\n\n<p>Jamie</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Messed around a bit and managed to figure it out here <a href=\"http://jsfiddle.net/W5jwY/1/\">http://jsfiddle.net/W5jwY/1/</a></p>\n\n<p>Going to look at the new Globalization plugin for a better way of doing it</p>\n\n<p>Thanks</p>\n\n<p>Jamie</p>\n",
            "last_activity_date": 1419024941,
            "question_id": 3883342,
            "score": 39,
            "tags": [
                "javascript",
                "jquery",
                "formatting",
                "numbers"
            ],
            "title": "add commas to a number in jQuery"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>One advantage of using <code>function someFunc() { ... }</code> is that the function name appears in Firebug debugger. Functions that are declared the other way (<code>var someFunc = function() { ... }</code>) come up as <strong>anonymous</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Actually, the difference is that the second declaration gives us the ability to declare functions like this making it possible to have a function as a property for an object : </p>\n\n<pre><code>var myObject=new Object();\nmyObject.someFunc=function() { ... };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>When you write</p>\n\n<pre><code>function Test() {\n}\n</code></pre>\n\n<p>JavaScript is really creating a property to which it assigns the function object that once called will execute the code reported in the function definition. The property is attached to the object <code>window</code>, or to the object that contains the function definition.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I am on different opinion with most of the people here. <em>Technically this syntax may mean the same for declaring functions both ways</em>\n(<strong>I stand incorrect on my last statement. I read up on a diff post why they are technically diff and I'll add in the end, why</strong>)\n; but the way they play a role in evolving patterns is massive. I would highly recommend \"Javascript: The Good Parts\" by Doughlas Crockford.</p>\n\n<p>But to prove my point in a subtle and a simple manner; here is a small example. </p>\n\n<pre><code>   //Global function existing to serve everyone\n  function swearOutLoud(swearWord)\n    \t{\n    \t\talert(\"You \"+swearWord);\t\t\t\n    \t}\n //global functions' territory ends here\n\n //here is mr. spongebob. He is very passionate about his objects; but he's a bit rude.\n\tvar spongeBob = {\n\t\tname : \"squarePants\",\n\t\tswear : function(swearWord) {\n\t\t\tname = \"spongy\";\n\n\t\t\talert(\"You \"+swearWord);\n\t\t\treturn this;\n\t\t}\t\t\n\t}\n\n\t//finally spongebob learns good manners too. EVOLUTION!\n\tspongeBob.apologize = function() {\n\t\talert(\"Hey \" + this.name + \", I'm sorry man\"!\");\n\t\treturn this;\n\t}\n\n\n\t//Ask spongebob to swear and then apologize in one go (CASCADING EFFECT!!)\n\talert(spongeBob.swear(\"twit\").apologize());\n</code></pre>\n\n<p>if you look at the code above I declared a function with a name swearOutLoud. Which would take a swear word from any object or a call and will give you the output. It can do operations on any object using the \"this\" parameter that is passed to it and the arguments.</p>\n\n<p>However second declaration is declared as an attribute of object called \"spongeBob\". This is important to note; as here I am moving towards an object driven behavior. While I am also maintaining \"cascading effect\" as I return \"this\" if i have nothing else to return.</p>\n\n<p>Somthing similar is done in jquery; and this cascading pattern is important if you are trying to write a framework or something. You'll link it to Builder design pattern also. </p>\n\n<p>But with functions declared as an attributes of an object I am able to achieve an object centric behavior which leads to a better programming paradigm. Unless designed well; individual functions declared outside with global access lead to a non-object oriented way of coding. I somehow prefer the latter.</p>\n\n<p>To see cascading in effect, look at the last statement where you can ask spongebob to swear and apologize at once; even though spologize was added as an attribute later on. </p>\n\n<p>I hope I make my point clear. The difference from a technical perspective may be small; but from design and code evolution perspective it's huge and makes a world of a difference.</p>\n\n<p>But thats just me! Take it or leave it. :)</p>\n\n<p><strong>**</strong>EDIT\nSo both the calls are technically different; because a named declaration is tied to global namespace and is defined at parse time. So can be called even before the function is declared.</p>\n\n<pre><code> //success\n swearOutLoud(\"Damn\");\n\n function  swearOutLoud(swearWord) {\n    alert(\"You \" + swearWord)\n }\n</code></pre>\n\n<p>Above code will work properly. But code below will not.</p>\n\n<pre><code>    swear(\"Damn!\");\n       var swear = function(swearWord) {\n\t\tconsole.log(swearWord);\n\t}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>For readability, I'd say the first is clearly better. A future maintenance programmer, even assuming they're familiar enough with javascript to know many of the finer points coming up in this thread, are going to assume the first format. </p>\n\n<p>For example, if they should some day want to ctrl-f to search for the definition of your function to see what's happening in there, are they going to first search for <code>someFunc = function()</code> or <code>function someFunc()</code>? </p>\n\n<p>Also, to get downright typographical about it (since we're talking readablity) readers are often scanning the text quickly, and would be more inclined to skip over a line that starts with \"var\" if they're looking for a function definition.</p>\n\n<p>I know this is a non-technical answer, but it's harder for humans to read code than computers. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Another difference is that, on most browsers, the latter allows you to define different implementations depending on circumstances, while the former won't. Say you wanted cross-browser event subscription. If you tried to define a <code>addEventListenerTo</code> function thusly:</p>\n\n<pre><code>if (document.addEventListener) {\n    function addEventListenerTo(target, event, listener) {\n        ....\n    }\n} else if (document.attachEvent) {\n    function addEventListenerTo(target, event, listener) {\n        ....\n    }\n} else {\n    function addEventListenerTo(target, event, listener) {\n        ....\n    }\n}\n</code></pre>\n\n<p>on some browsers, all the functions end up being parsed, with the last one taking precedence. Result: the above just doesn't work. Assigning anonymous functions to variables, however, will work. You can also apply functional and basic <a href=\"http://en.wikipedia.org/wiki/Aspect-oriented%5Fprogramming\" rel=\"nofollow\">aspect oriented programming</a> techniques using anonymous functions assigned to variables.</p>\n\n<pre><code>var fib = memoize(function (n) { \n    if (n &lt; 0) return 0;\n    if (n &lt; 2) return 1;\n    return fib(n-1) + fib(n-2); \n});\n\n...\n// patch the $ library function\nif (...) {\n    $ = around($, fixArg, fixResult);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It is both true that the first form:</p>\n\n<pre><code>function test() { }\n</code></pre>\n\n<p>is a more recognized syntax and that the second form:</p>\n\n<pre><code>var test = function() { ... }\n</code></pre>\n\n<p>allows you to control the scope of the function (through the use of var; without it, it would be global anyway).</p>\n\n<p>And you can even do both:</p>\n\n<pre><code>var test = function test() { ... test(); ... }\n</code></pre>\n\n<p>This allows you to define a recursive function in the second form.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Style wise the second example is more consistent with other common ways to declare functions and therefore it could be argued that it is more readable</p>\n\n<pre><code>this.someFunc = function() { ... }\n...\nsomeFunc: function() { ... },\n</code></pre>\n\n<p>However, as also mentioned it's anonymous and therefore the name does not appear when profiling.\nAnother way to declare the function is as follows which gets you the best of both worlds</p>\n\n<pre><code>var someFunc = function someFunc() { ... }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/336859/javascript-var-functionname-function-vs-function-functionname\">Javascript: var functionName = function() {} vs function functionName() {}</a>  </p>\n</blockquote>\n\n<p>What's the difference between these two ways of declaring a function?</p>\n\n<pre><code>function someFunc() { ... }\n\nvar someFunc = function() { ... }\n</code></pre>\n\n<p>I'm not asking in the technical sense. I'm not asking which is better for readability, or which style is preferred.</p>\n",
            "last_activity_date": 1261345881,
            "question_id": 1925976,
            "score": 30,
            "tags": [
                "javascript",
                "syntax",
                "function"
            ],
            "title": "Declaring functions in JavaScript"
        }
    ]
}
